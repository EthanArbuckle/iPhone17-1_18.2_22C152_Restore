uint16x8_t *sub_2219C7C3C(uint16x8_t *result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  int8x16_t *v5;
  int8x16_t *v6;
  int8x16_t *v7;
  int8x16_t *v8;
  int16x8_t v9;
  int16x8_t v10;
  int16x8_t v11;
  int16x8_t v12;
  int16x8_t v13;
  int8x16_t *v14;
  int16x8_t v15;
  int16x8_t v16;
  int16x8_t v17;
  int16x8_t v18;

  if (a5 >= 1)
  {
    v5 = (int8x16_t *)(a3 - 2 * a4);
    v6 = (int8x16_t *)((char *)v5 + a4);
    v7 = (int8x16_t *)((char *)v6 + a4);
    v8 = (int8x16_t *)((char *)v7 + a4);
    v9 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v8 + a4), (int8x16_t)0);
    v10 = (int16x8_t)vzip1q_s8(*v8, (int8x16_t)0);
    v11 = (int16x8_t)vzip1q_s8(*v7, (int8x16_t)0);
    v12 = (int16x8_t)vzip1q_s8(*v6, (int8x16_t)0);
    v13 = (int16x8_t)vzip1q_s8(*v5, (int8x16_t)0);
    v14 = (int8x16_t *)(a3 + 5 * a4 - 2 * a4);
    v15.i64[0] = 0x10001000100010;
    v15.i64[1] = 0x10001000100010;
    v16.i64[0] = 0x4000400040004;
    v16.i64[1] = 0x4000400040004;
    do
    {
      v17 = v12;
      v12 = v11;
      v11 = v10;
      v10 = v9;
      v9 = (int16x8_t)vzip1q_s8(*v14, (int8x16_t)0);
      v18 = vsubq_s16(vshlq_n_s16(vaddq_s16(v11, v12), 2uLL), vaddq_s16(v10, v17));
      *result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v13, v18), vshlq_n_s16(v18, 2uLL)), vaddq_s16(v9, v15)), v16))), (uint16x8_t)v12);
      result = (uint16x8_t *)((char *)result + a2);
      v14 = (int8x16_t *)((char *)v14 + a4);
      v13 = v17;
      --a5;
    }
    while (a5);
  }
  return result;
}

char *sub_2219C7D08(char *result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  if (a5 >= 1)
  {
    v5 = (int8x16_t *)(a3 - 2 * a4);
    v6 = (int8x16_t *)((char *)v5 + a4);
    v7 = (int8x16_t *)((char *)v6 + a4);
    v8 = (int8x16_t *)((char *)v7 + a4);
    long long v9 = 0uLL;
    int16x8_t v10 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v8 + a4), (int8x16_t)0);
    int16x8_t v11 = (int16x8_t)vzip1q_s8(*v8, (int8x16_t)0);
    int16x8_t v12 = (int16x8_t)vzip1q_s8(*v7, (int8x16_t)0);
    int16x8_t v13 = (int16x8_t)vzip1q_s8(*v6, (int8x16_t)0);
    int16x8_t v14 = (int16x8_t)vzip1q_s8(*v5, (int8x16_t)0);
    v15 = (int8x16_t *)(a3 + 5 * a4 - 2 * a4);
    v16.i64[0] = 0x10001000100010;
    v16.i64[1] = 0x10001000100010;
    v17.i64[0] = 0x4000400040004;
    v17.i64[1] = 0x4000400040004;
    do
    {
      int16x8_t v18 = v13;
      int16x8_t v13 = v12;
      int16x8_t v12 = v11;
      int16x8_t v11 = v10;
      int16x8_t v10 = (int16x8_t)vzip1q_s8(*v15, (int8x16_t)0);
      int16x8_t v19 = vsubq_s16(vshlq_n_s16(vaddq_s16(v12, v13), 2uLL), vaddq_s16(v11, v18));
      int8x8_t v20 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v14, v19), vshlq_n_s16(v19, 2uLL)), vaddq_s16(v10, v16)), v17));
      vst2_s8(result, *(int8x8x2_t *)((char *)&v9 - 8));
      result += a2;
      v15 = (int8x16_t *)((char *)v15 + a4);
      int16x8_t v14 = v18;
      --a5;
    }
    while (a5);
  }
  return result;
}

uint16x8_t *sub_2219C7DC8(uint16x8_t *result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  if (a5 >= 1)
  {
    v5 = (int8x16_t *)(a3 - 2 * a4);
    v6 = (int8x16_t *)((char *)v5 + a4);
    v7 = (int8x16_t *)((char *)v6 + a4);
    v8 = (int8x16_t *)((char *)v7 + a4);
    int16x8_t v9 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v8 + a4), (int8x16_t)0);
    int16x8_t v10 = (int16x8_t)vzip1q_s8(*v8, (int8x16_t)0);
    int16x8_t v11 = (int16x8_t)vzip1q_s8(*v7, (int8x16_t)0);
    int16x8_t v12 = (int16x8_t)vzip1q_s8(*v6, (int8x16_t)0);
    int16x8_t v13 = (int16x8_t)vzip1q_s8(*v5, (int8x16_t)0);
    int16x8_t v14 = (int8x16_t *)(a3 + 5 * a4 - 2 * a4);
    v15.i64[0] = 0x10001000100010;
    v15.i64[1] = 0x10001000100010;
    v16.i64[0] = 0x4000400040004;
    v16.i64[1] = 0x4000400040004;
    do
    {
      int16x8_t v17 = v12;
      int16x8_t v12 = v11;
      int16x8_t v11 = v10;
      int16x8_t v10 = v9;
      int16x8_t v9 = (int16x8_t)vzip1q_s8(*v14, (int8x16_t)0);
      int16x8_t v18 = vsubq_s16(vshlq_n_s16(vaddq_s16(v11, v12), 2uLL), vaddq_s16(v10, v17));
      *result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v13, v18), vshlq_n_s16(v18, 2uLL)), vaddq_s16(v9, v15)), v16))), (uint16x8_t)v11);
      result = (uint16x8_t *)((char *)result + a2);
      int16x8_t v14 = (int8x16_t *)((char *)v14 + a4);
      int16x8_t v13 = v17;
      --a5;
    }
    while (a5);
  }
  return result;
}

uint16x8_t *sub_2219C7E94(uint16x8_t *result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  if (a5 >= 1)
  {
    v5 = (int8x16_t *)(a3 - 2);
    v6.i64[0] = 0x10001000100010;
    v6.i64[1] = 0x10001000100010;
    v7.i64[0] = 0x4000400040004;
    v7.i64[1] = 0x4000400040004;
    do
    {
      int8x16_t v8 = *v5;
      v5 = (int8x16_t *)((char *)v5 + a4);
      int16x8_t v9 = (int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 2uLL), (int8x16_t)0);
      int16x8_t v10 = vsubq_s16(vshlq_n_s16(vaddq_s16(v9, (int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 3uLL), (int8x16_t)0)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 4uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 1uLL), (int8x16_t)0)));
      *result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v10, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v8, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 5uLL), (int8x16_t)0)), v10)), v6), v7))), (uint16x8_t)v9);
      result = (uint16x8_t *)((char *)result + a2);
      --a5;
    }
    while (a5);
  }
  return result;
}

char *sub_2219C7F30(char *result, uint64_t a2, int a3, int a4, int a5, unsigned int a6)
{
  uint64_t v58 = *MEMORY[0x263EF8340];
  int v6 = 2 * a3;
  uint64_t v7 = a2 - 2 * a3 + a6;
  int8x16_t v8 = *(int8x16_t *)(v7 - 2);
  int16x8_t v9 = (int8x16_t *)(v7 - 2 + a3);
  int8x16_t v10 = *v9;
  int8x16_t v51 = v8;
  int8x16_t v52 = *v9;
  int16x8_t v11 = (int8x16_t *)((char *)v9 + a3);
  int8x16_t v12 = *v11;
  int16x8_t v13 = (int8x16_t *)((char *)v11 + a3);
  int8x16_t v53 = v12;
  int8x16_t v54 = *v13;
  int8x16_t v14 = *(int8x16_t *)((char *)v13 + a3);
  int8x16_t v55 = v14;
  if (a4 >= 1)
  {
    uint64_t v15 = 0;
    int16x8_t v16 = (int16x8_t)vzip1q_s8(v14, (int8x16_t)0);
    int16x8_t v17 = (int16x8_t)vzip1q_s8(*v13, (int8x16_t)0);
    int16x8_t v18 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
    int16x8_t v19 = (int16x8_t)vzip1q_s8(v10, (int8x16_t)0);
    int16x8_t v20 = (int16x8_t)vzip1q_s8(v8, (int8x16_t)0);
    uint64_t v21 = a4;
    v22 = (int8x16_t *)(5 * a3 + a6 - v6 + a2 - 2);
    v23.i64[0] = 0x10001000100010;
    v23.i64[1] = 0x10001000100010;
    v24.i64[0] = 0x4000400040004;
    v24.i64[1] = 0x4000400040004;
    do
    {
      int8x16_t v25 = *v22;
      *(int8x16_t *)&v56[v15] = *v22;
      int16x8_t v26 = vsubq_s16(vshlq_n_s16(vaddq_s16(v18, v17), 2uLL), vaddq_s16(v19, v16));
      int16x8_t v27 = vaddq_s16(v20, v26);
      int16x8_t v20 = v19;
      int16x8_t v19 = v18;
      int16x8_t v18 = v17;
      int16x8_t v17 = v16;
      int16x8_t v16 = (int16x8_t)vzip1q_s8(v25, (int8x16_t)0);
      int16x8_t v28 = vshlq_s16(vaddq_s16(vaddq_s16(v27, vshlq_n_s16(v26, 2uLL)), vaddq_s16(v16, v23)), v24);
      *(int8x16_t *)&v57[v15] = vqmovun_high_s16(vqmovun_s16(v28), v28);
      v15 += 16;
      v22 = (int8x16_t *)((char *)v22 + a3);
    }
    while (16 * a4 != v15);
    int8x16_t v29 = v51;
    int8x16_t v30 = v52;
    int8x16_t v31 = v53;
    int8x16_t v32 = v54;
    v33 = (int8x16_t *)v56;
    int8x16_t v34 = v55;
    v35 = (int8x16_t *)(a5 * a3 - (uint64_t)v6 + a2 + 6);
    v36 = (long long *)v57;
    long long v37 = 0uLL;
    v38.i64[0] = 0x10001000100010;
    v38.i64[1] = 0x10001000100010;
    v39.i64[0] = 0x4000400040004;
    v39.i64[1] = 0x4000400040004;
    do
    {
      int8x16_t v40 = *(int8x16_t *)((char *)v35 - 8);
      int16x8_t v41 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v40, v31, 2uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v40, v31, 3uLL), (int8x16_t)0)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v40, v31, 4uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v40, v31, 1uLL), (int8x16_t)0)));
      long long v42 = *v36++;
      uint8x8_t v43 = vrhadd_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v41, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v40, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v40, v31, 5uLL), (int8x16_t)0)), v41)), v38), v39)), *(uint8x8_t *)&v42);
      int16x8_t v44 = (int16x8_t)vzip2q_s8(v29, (int8x16_t)0);
      int16x8_t v45 = (int16x8_t)vzip2q_s8(v30, (int8x16_t)0);
      int8x16_t v29 = v30;
      int8x16_t v30 = v31;
      int8x16_t v31 = v32;
      v46 = result;
      vst2_s8(v46, *(int8x8x2_t *)((char *)&v37 - 8));
      v46 += 16;
      int8x16_t v32 = v34;
      int16x8_t v47 = (int16x8_t)vzip2q_s8(v34, (int8x16_t)0);
      int8x16_t v48 = *v33++;
      int8x16_t v34 = v48;
      int16x8_t v49 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip2q_s8(v31, (int8x16_t)0), (int16x8_t)vzip2q_s8(v30, (int8x16_t)0)), 2uLL), vaddq_s16(v47, v45));
      int16x8_t v50 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(*v35, v31, 2uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(*v35, v31, 3uLL), (int8x16_t)0)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(*v35, v31, 4uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(*v35, v31, 1uLL), (int8x16_t)0)));
      *(uint8x8_t *)v44.i8 = vrhadd_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v50, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(*v35, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(*v35, v31, 5uLL), (int8x16_t)0)), v50)), v38), v39)), (uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v44, (int16x8_t)vzip2q_s8(v48, (int8x16_t)0)), v49),
                                                  vshlq_n_s16(v49, 2uLL)),
                                                v38),
                                              v39)));
      v49.i64[0] = 0;
      vst2_s8(v46, (int8x8x2_t)v44);
      result += 32;
      v35 = (int8x16_t *)((char *)v35 + a3);
      --v21;
    }
    while (v21);
  }
  return result;
}

void sub_2219C81EC(char *a1, unsigned int a2, uint64_t a3, int a4)
{
  v4 = (int8x16_t *)(a3 - 2 - 2 * a4);
  int8x16_t v5 = *v4;
  int v6 = (int8x16_t *)((char *)v4 + a4);
  int8x16_t v7 = *v6;
  int8x16_t v8 = (int8x16_t *)((char *)v6 + a4);
  int8x16_t v9 = *v8;
  int8x16_t v10 = (int8x16_t *)((char *)v8 + a4);
  int8x16_t v11 = *v10;
  int8x16_t v12 = (int8x16_t *)((char *)v10 + a4);
  int8x16_t v13 = *(int8x16_t *)((char *)v12 + a4);
  long long v14 = 0uLL;
  int16x8_t v15 = (int16x8_t)vzip1q_s8(v5, (int8x16_t)0);
  int16x8_t v16 = (int16x8_t)vzip1q_s8(v7, (int8x16_t)0);
  int16x8_t v17 = (int16x8_t)vzip1q_s8(v9, (int8x16_t)0);
  int16x8_t v18 = (int16x8_t)vzip1q_s8(v11, (int8x16_t)0);
  int16x8_t v19 = (int16x8_t)vzip1q_s8(*v12, (int8x16_t)0);
  int16x8_t v20 = (int16x8_t)vzip1q_s8(v13, (int8x16_t)0);
  int16x8_t v21 = (int16x8_t)vzip2q_s8(v5, (int8x16_t)0);
  int16x8_t v22 = (int16x8_t)vzip2q_s8(v7, (int8x16_t)0);
  int16x8_t v23 = (int16x8_t)vzip2q_s8(v9, (int8x16_t)0);
  int16x8_t v24 = (int16x8_t)vzip2q_s8(v11, (int8x16_t)0);
  int16x8_t v25 = (int16x8_t)vzip2q_s8(*v12, (int8x16_t)0);
  int16x8_t v26 = (int16x8_t)vzip2q_s8(v13, (int8x16_t)0);
  int16x8_t v27 = (int8x16_t *)(a3 - 2 + 6 * a4 - 2 * a4);
  int v28 = 15;
  v29.i64[0] = 0x14001400140014;
  v29.i64[1] = 0x14001400140014;
  v30.i64[0] = 0x4000400040004;
  v30.i64[1] = 0x4000400040004;
  v31.i64[0] = 0x10001000100010;
  v31.i64[1] = 0x10001000100010;
  v32.i64[0] = 0x20000000200;
  v32.i64[1] = 0x20000000200;
  v33.i64[0] = 0x900000009;
  v33.i64[1] = 0x900000009;
  do
  {
    int16x8_t v34 = v26;
    int16x8_t v35 = v25;
    int16x8_t v36 = v24;
    int16x8_t v37 = v23;
    int16x8_t v38 = v22;
    int16x8_t v39 = v20;
    int16x8_t v40 = v19;
    int16x8_t v41 = v18;
    int16x8_t v42 = v17;
    int16x8_t v43 = v16;
    int16x8_t v44 = vmlaq_s16(vmlaq_s16(vaddq_s16(v15, v20), vaddq_s16(v17, v18), v29), vaddq_s16(v16, v19), v30);
    int16x8_t v45 = vmlaq_s16(vmlaq_s16(vaddq_s16(v21, v26), vaddq_s16(v23, v24), v29), vaddq_s16(v22, v25), v30);
    uint8x8_t v46 = (uint8x8_t)vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v44, v31), v30)), vshlq_s16(vaddq_s16(v45, v31), v30)), (int8x16_t)0, 2uLL).u64[0];
    int8x16_t v47 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL);
    int8x16_t v48 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 4uLL);
    int8x16_t v49 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 6uLL);
    int8x16_t v50 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 0xAuLL);
    int8x16_t v51 = vextq_s8(v49, (int8x16_t)0, 2uLL);
    int8x16_t v52 = vextq_s8(v50, (int8x16_t)0, 2uLL);
    int8x16_t v53 = vextq_s8(v50, (int8x16_t)0, 4uLL);
    int32x4_t v54 = vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL), (int16x4_t)131067));
    int32x4_t v55 = vpaddq_s32(vmull_s16(*(int16x4_t *)v47.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL), (int16x4_t)131067));
    int32x4_t v56 = vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)131067));
    int32x4_t v57 = vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)131067));
    int32x4_t v58 = vpaddq_s32(vmull_s16(*(int16x4_t *)v51.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v51, v51, 8uLL), (int16x4_t)131067));
    int32x4_t v59 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)131067));
    int32x4_t v60 = vpaddq_s32(vmull_s16(*(int16x4_t *)v52.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL), (int16x4_t)131067));
    int32x4_t v61 = vpaddq_s32(vmull_s16(*(int16x4_t *)v53.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v53, v53, 8uLL), (int16x4_t)131067));
    int32x4_t v62 = vzip1q_s32(v54, v56);
    int32x4_t v63 = vzip2q_s32(v54, v56);
    int32x4_t v64 = vzip1q_s32(v55, v57);
    int32x4_t v65 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v62, v64), vzip1q_s32(v62, v64)), vaddq_s32(vzip1q_s32(v63, vzip2q_s32(v55, v57)), v32)), v33);
    int32x4_t v66 = vzip1q_s32(v58, v60);
    int32x4_t v67 = vzip1q_s32(v59, v61);
    uint8x8_t v68 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v65), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v66, v67), vzip1q_s32(v66, v67)), vaddq_s32(vzip1q_s32(vzip2q_s32(v58, v60), vzip2q_s32(v59, v61)), v32)), v33))), v46);
    vst2_s8(a1, *(int8x8x2_t *)((char *)&v14 - 8));
    a1 += a2;
    int8x16_t v69 = *v27;
    int16x8_t v27 = (int8x16_t *)((char *)v27 + a4);
    int16x8_t v15 = v43;
    int16x8_t v16 = v42;
    int16x8_t v17 = v41;
    int16x8_t v20 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
    int16x8_t v18 = v40;
    int16x8_t v19 = v39;
    int16x8_t v21 = v38;
    int16x8_t v22 = v37;
    int16x8_t v26 = (int16x8_t)vzip2q_s8(v69, (int8x16_t)0);
    int16x8_t v23 = v24;
    int16x8_t v24 = v25;
    int16x8_t v25 = v34;
    --v28;
  }
  while (v28);
  v70.i64[0] = 0x14001400140014;
  v70.i64[1] = 0x14001400140014;
  v71.i64[0] = 0x4000400040004;
  v71.i64[1] = 0x4000400040004;
  int16x8_t v72 = vmlaq_s16(vmlaq_s16(vaddq_s16(v43, v20), vaddq_s16(v41, v40), v70), vaddq_s16(v42, v39), v71);
  int16x8_t v73 = vmlaq_s16(vmlaq_s16(vaddq_s16(v38, v26), vaddq_s16(v36, v35), v70), vaddq_s16(v37, v34), v71);
  v74.i64[0] = 0x10001000100010;
  v74.i64[1] = 0x10001000100010;
  v74.i64[0] = vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v72, v74), v71)), vshlq_s16(vaddq_s16(v73, v74), v71)), (int8x16_t)0, 2uLL).u64[0];
  int8x16_t v75 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 2uLL);
  int8x16_t v76 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 4uLL);
  int8x16_t v77 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 6uLL);
  int8x16_t v78 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 0xAuLL);
  int8x16_t v79 = vextq_s8(v77, (int8x16_t)0, 2uLL);
  int8x16_t v80 = vextq_s8(v78, (int8x16_t)0, 2uLL);
  int8x16_t v81 = vextq_s8(v78, (int8x16_t)0, 4uLL);
  int32x4_t v82 = vpaddq_s32(vmull_s16(*(int16x4_t *)v72.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v72, (int8x16_t)v72, 8uLL), (int16x4_t)131067));
  int32x4_t v83 = vpaddq_s32(vmull_s16(*(int16x4_t *)v75.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL), (int16x4_t)131067));
  int32x4_t v84 = vpaddq_s32(vmull_s16(*(int16x4_t *)v76.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL), (int16x4_t)131067));
  int32x4_t v85 = vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)131067));
  int32x4_t v86 = vpaddq_s32(vmull_s16(*(int16x4_t *)v79.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL), (int16x4_t)131067));
  int32x4_t v87 = vpaddq_s32(vmull_s16(*(int16x4_t *)v78.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), (int16x4_t)131067));
  int32x4_t v88 = vpaddq_s32(vmull_s16(*(int16x4_t *)v80.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL), (int16x4_t)131067));
  int32x4_t v89 = vpaddq_s32(vmull_s16(*(int16x4_t *)v81.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL), (int16x4_t)131067));
  int32x4_t v90 = vzip1q_s32(v82, v84);
  int32x4_t v91 = vzip2q_s32(v82, v84);
  int32x4_t v92 = vzip1q_s32(v83, v85);
  int32x4_t v93 = vzip1q_s32(v91, vzip2q_s32(v83, v85));
  v91.i64[0] = 0x20000000200;
  v91.i64[1] = 0x20000000200;
  int32x4_t v94 = vaddq_s32(vaddq_s32(vzip2q_s32(v90, v92), vzip1q_s32(v90, v92)), vaddq_s32(v93, v91));
  v93.i64[0] = 0x900000009;
  v93.i64[1] = 0x900000009;
  int32x4_t v95 = vzip1q_s32(v86, v88);
  int32x4_t v96 = vzip1q_s32(v87, v89);
  *(uint8x8_t *)v89.i8 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vshlq_s32(v94, v93)), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v95, v96), vzip1q_s32(v95, v96)), vaddq_s32(vzip1q_s32(vzip2q_s32(v86, v88), vzip2q_s32(v87, v89)), v91)), v93))), *(uint8x8_t *)v74.i8);
  v94.i64[0] = 0;
  vst2_s8(a1, (int8x8x2_t)v89);
}

char *sub_2219C85D4(char *result, unsigned int a2, uint64_t a3, int a4, int a5, int8x16_t a6)
{
  if (a5 >= 1)
  {
    int v6 = (int8x16_t *)(a3 - 2);
    long long v7 = 0uLL;
    v8.i64[0] = 0x10001000100010;
    v8.i64[1] = 0x10001000100010;
    v9.i64[0] = 0x4000400040004;
    v9.i64[1] = 0x4000400040004;
    do
    {
      int8x16_t v10 = *v6;
      int v6 = (int8x16_t *)((char *)v6 + a4);
      int16x8_t v11 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v10, a6, 2uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v10, a6, 3uLL), (int8x16_t)0)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v10, a6, 4uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v10, a6, 1uLL), (int8x16_t)0)));
      *(int8x8_t *)a6.i8 = vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v11, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v10, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v10, a6, 5uLL), (int8x16_t)0)), v11)), v8), v9));
      vst2_s8(result, (int8x8x2_t)a6);
      result += a2;
      --a5;
    }
    while (a5);
  }
  return result;
}

char *sub_2219C8664(char *result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  v31[37] = *MEMORY[0x263EF8340];
  if (a5 >= -4)
  {
    unint64_t v5 = 0;
    int8x16_t v6 = *(int8x16_t *)(a3 - 2 - 2 * a4);
    long long v7 = (int8x16_t *)(a3 - 2 + a4 - (uint64_t)(2 * a4));
    do
    {
      int8x16_t v8 = *v7;
      int16x8_t v9 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 2uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 3uLL), (int8x16_t)0)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 1uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 4uLL), (int8x16_t)0)));
      v30[v5 / 0x10] = vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 5uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(v6, (int8x16_t)0)), v9), vshlq_n_s16(v9, 2uLL));
      v5 += 16;
      long long v7 = (int8x16_t *)((char *)v7 + a4);
      int8x16_t v6 = v8;
    }
    while (16 * ((a5 + 4) & ~((a5 + 4) >> 31)) + 16 != v5);
    if (a5 >= 1)
    {
      int16x8_t v10 = (int16x8_t)v30[0];
      v11.i64[0] = 0x10001000100010;
      v11.i64[1] = 0x10001000100010;
      int8x16_t v12 = (int16x8_t *)v31;
      v13.i64[0] = 0x4000400040004;
      v13.i64[1] = 0x4000400040004;
      v14.i64[0] = 0x200020002000200;
      v14.i64[1] = 0x200020002000200;
      long long v15 = 0uLL;
      v16.i64[0] = 0xD0000000DLL;
      v16.i64[1] = 0xD0000000DLL;
      v17.i64[0] = 0xF0000000FLL;
      v17.i64[1] = 0xF0000000FLL;
      v18.i64[0] = 0x900000009;
      v18.i64[1] = 0x900000009;
      int16x8_t v19 = (int16x8_t *)v31;
      do
      {
        int16x8_t v20 = v12[-2];
        int16x8_t v21 = v12[-1];
        uint8x8_t v22 = (uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(v21, v11), v13));
        int16x8_t v23 = v19[1];
        ++v19;
        int16x8_t v24 = vaddq_s16(*v12, v21);
        int16x8_t v25 = vaddq_s16(v23, v20);
        int16x8_t v26 = vaddq_s16(vaddq_s16(v10, v14), v12[2]);
        int32x4_t v27 = vsubq_s32(vshlq_s32((int32x4_t)vzip1q_s16((int16x8_t)0, v24), v16), vshlq_s32((int32x4_t)vzip1q_s16((int16x8_t)0, v25), v17));
        int32x4_t v28 = vsubq_s32(vshlq_s32((int32x4_t)vzip2q_s16((int16x8_t)0, v24), v16), vshlq_s32((int32x4_t)vzip2q_s16((int16x8_t)0, v25), v17));
        uint8x8_t v29 = vrhadd_u8(v22, (uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32(vaddq_s32(v27, vshlq_s32((int32x4_t)vzip1q_s16((int16x8_t)0, v26), v17)), vshlq_n_s32(v27, 2uLL)), v18)), vshlq_s32(vaddq_s32(vaddq_s32(v28, vshlq_s32((int32x4_t)vzip2q_s16((int16x8_t)0, v26), v17)), vshlq_n_s32(v28, 2uLL)), v18))));
        vst2_s8(result, *(int8x8x2_t *)((char *)&v15 - 8));
        result += a2;
        int8x16_t v12 = v19;
        int16x8_t v10 = v20;
        --a5;
      }
      while (a5);
    }
  }
  return result;
}

int16x8_t *sub_2219C883C(int16x8_t *result, int a2, uint64_t a3, int a4, int a5)
{
  v33[37] = *MEMORY[0x263EF8340];
  int v5 = a4 + 15;
  if (a4 >= 0) {
    int v5 = a4;
  }
  if (a5 >= -4)
  {
    uint64_t v6 = (uint64_t)v5 >> 4;
    int8x16_t v7 = *(int8x16_t *)(a3 - 2 - 2 * a4);
    uint64_t v8 = ((a5 + 4) & ~((a5 + 4) >> 31)) + 1;
    uint64_t v9 = 16 * v6;
    int16x8_t v10 = (int8x16_t *)(a3 - 2 + v9 - 2 * a4);
    int16x8_t v11 = (int16x8_t *)v32;
    v12.i64[0] = 0x4000400040004;
    v12.i64[1] = 0x4000400040004;
    v13.i64[0] = 0x14001400140014;
    v13.i64[1] = 0x14001400140014;
    v14.i64[0] = 0x1010101010101010;
    v14.i64[1] = 0x1010101010101010;
    do
    {
      int8x16_t v15 = vextq_s8(v7, (int8x16_t)0, 1uLL);
      int16x8_t v16 = vaddq_s16((int16x8_t)vzip1q_s8(v15, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v7, v7, 4uLL), (int8x16_t)0));
      int16x8_t v17 = (int16x8_t)vzip1q_s8(vextq_s8(v7, v7, 5uLL), (int8x16_t)0);
      int16x8_t v18 = (int16x8_t)vzip1q_s8(v7, (int8x16_t)0);
      int8x16_t v7 = *v10;
      *v11++ = vaddq_s16(vmlaq_s16(vmlaq_s16(vaddq_s16(v18, v17), v16, v12), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v15, *v10, 1uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v15, *v10, 2uLL), (int8x16_t)0)), v13), v14);
      int16x8_t v10 = (int8x16_t *)((char *)v10 + v9);
      --v8;
    }
    while (v8);
    if (a5 >= 1)
    {
      int16x8_t v19 = (int16x8_t)v32[1];
      int16x8_t v20 = (int16x8_t *)v33;
      v21.i64[0] = 0x1000100010001;
      v21.i64[1] = 0x1000100010001;
      v22.i64[0] = 0x900000009;
      v22.i64[1] = 0x900000009;
      v23.i64[0] = 0xFF00FF00FF00FFLL;
      v23.i64[1] = 0xFF00FF00FF00FFLL;
      int16x8_t v24 = (int16x8_t *)v33;
      do
      {
        int16x8_t v25 = v24[1];
        ++v24;
        int16x8_t v26 = vaddq_s16(v25, v19);
        int16x8_t v27 = v20[-1];
        int16x8_t v28 = vaddq_s16(*v20, v27);
        int8x16_t v29 = (int8x16_t)vzip1q_s16(v28, v26);
        int8x16_t v30 = (int8x16_t)vzip2q_s16(v28, v26);
        int16x8_t v31 = vaddq_s16(v20[2], v20[-3]);
        *result = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v29.i8, (int16x4_t)0xFFFB0014FFFB0014), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v29, v29, 8uLL), (int16x4_t)0xFFFB0014FFFB0014)), (int32x4_t)vzip1q_s16(v31, v21)), v22)), vshlq_s32(vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v30.i8, (int16x4_t)0xFFFB0014FFFB0014), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v30, v30, 8uLL), (int16x4_t)0xFFFB0014FFFB0014)),
                            (int32x4_t)vzip2q_s16(v31, v21)),
                          v22)),
                      (int16x8_t)0),
                    v23);
        result = (int16x8_t *)((char *)result + (a2 & 0xFFFFFFF0));
        int16x8_t v20 = v24;
        int16x8_t v19 = v27;
        --a5;
      }
      while (a5);
    }
  }
  return result;
}

char *sub_2219C89F0(char *result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  v29[37] = *MEMORY[0x263EF8340];
  if (a5 >= -4)
  {
    unint64_t v5 = 0;
    int8x16_t v6 = *(int8x16_t *)(a3 - 2 - 2 * a4);
    int8x16_t v7 = (int8x16_t *)(a3 - 2 + a4 - (uint64_t)(2 * a4));
    do
    {
      int8x16_t v8 = *v7;
      int16x8_t v9 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 2uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 3uLL), (int8x16_t)0)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 1uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 4uLL), (int8x16_t)0)));
      v28[v5 / 0x10] = vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v6, (int8x16_t)0, 5uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(v6, (int8x16_t)0)), v9), vshlq_n_s16(v9, 2uLL));
      v5 += 16;
      int8x16_t v7 = (int8x16_t *)((char *)v7 + a4);
      int8x16_t v6 = v8;
    }
    while (16 * ((a5 + 4) & ~((a5 + 4) >> 31)) + 16 != v5);
    if (a5 >= 1)
    {
      int16x8_t v10 = (int16x8_t)v28[0];
      v11.i64[0] = 0x10001000100010;
      v11.i64[1] = 0x10001000100010;
      int16x8_t v12 = (int16x8_t *)v29;
      v13.i64[0] = 0x4000400040004;
      v13.i64[1] = 0x4000400040004;
      v14.i64[0] = 0x200020002000200;
      v14.i64[1] = 0x200020002000200;
      long long v15 = 0uLL;
      v16.i64[0] = 0xD0000000DLL;
      v16.i64[1] = 0xD0000000DLL;
      v17.i64[0] = 0xF0000000FLL;
      v17.i64[1] = 0xF0000000FLL;
      v18.i64[0] = 0x900000009;
      v18.i64[1] = 0x900000009;
      int16x8_t v19 = (int16x8_t *)v29;
      do
      {
        int16x8_t v20 = v12[-2];
        int16x8_t v21 = v19[1];
        ++v19;
        int16x8_t v22 = vaddq_s16(v12[-1], *v12);
        int16x8_t v23 = vaddq_s16(v21, v20);
        int16x8_t v24 = vaddq_s16(vaddq_s16(v10, v14), v12[2]);
        int32x4_t v25 = vsubq_s32(vshlq_s32((int32x4_t)vzip1q_s16((int16x8_t)0, v22), v16), vshlq_s32((int32x4_t)vzip1q_s16((int16x8_t)0, v23), v17));
        int32x4_t v26 = vsubq_s32(vshlq_s32((int32x4_t)vzip2q_s16((int16x8_t)0, v22), v16), vshlq_s32((int32x4_t)vzip2q_s16((int16x8_t)0, v23), v17));
        uint8x8_t v27 = vrhadd_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(*v12, v11), v13)), (uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32(vaddq_s32(v25, vshlq_s32((int32x4_t)vzip1q_s16((int16x8_t)0, v24), v17)), vshlq_n_s32(v25, 2uLL)), v18)), vshlq_s32(vaddq_s32(vaddq_s32(v26, vshlq_s32((int32x4_t)vzip2q_s16((int16x8_t)0, v24), v17)), vshlq_n_s32(v26, 2uLL)), v18))));
        vst2_s8(result, *(int8x8x2_t *)((char *)&v15 - 8));
        result += a2;
        int16x8_t v12 = v19;
        int16x8_t v10 = v20;
        --a5;
      }
      while (a5);
    }
  }
  return result;
}

uint16x8_t *sub_2219C8BC8(uint16x8_t *result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  if (a5 >= 1)
  {
    unint64_t v5 = (int8x16_t *)(a3 - 2);
    v6.i64[0] = 0x10001000100010;
    v6.i64[1] = 0x10001000100010;
    v7.i64[0] = 0x4000400040004;
    v7.i64[1] = 0x4000400040004;
    do
    {
      int8x16_t v8 = *v5;
      unint64_t v5 = (int8x16_t *)((char *)v5 + a4);
      int16x8_t v9 = (int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 3uLL), (int8x16_t)0);
      int16x8_t v10 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 2uLL), (int8x16_t)0), v9), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 4uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 1uLL), (int8x16_t)0)));
      *result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v10, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v8, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v8, (int8x16_t)0, 5uLL), (int8x16_t)0)), v10)), v6), v7))), (uint16x8_t)v9);
      result = (uint16x8_t *)((char *)result + a2);
      --a5;
    }
    while (a5);
  }
  return result;
}

void sub_2219C8C64(char *a1, unsigned int a2, uint64_t a3, int a4)
{
  v4 = (int8x16_t *)(a3 - 2 - 2 * a4);
  int8x16_t v5 = *v4;
  int16x8_t v6 = (int8x16_t *)((char *)v4 + a4);
  int8x16_t v7 = *v6;
  int8x16_t v8 = (int8x16_t *)((char *)v6 + a4);
  int8x16_t v9 = *v8;
  int16x8_t v10 = (int8x16_t *)((char *)v8 + a4);
  int8x16_t v11 = *v10;
  int16x8_t v12 = (int8x16_t *)((char *)v10 + a4);
  int8x16_t v13 = *(int8x16_t *)((char *)v12 + a4);
  long long v14 = 0uLL;
  int16x8_t v15 = (int16x8_t)vzip1q_s8(v5, (int8x16_t)0);
  int16x8_t v16 = (int16x8_t)vzip1q_s8(v7, (int8x16_t)0);
  int16x8_t v17 = (int16x8_t)vzip1q_s8(v9, (int8x16_t)0);
  int16x8_t v18 = (int16x8_t)vzip1q_s8(v11, (int8x16_t)0);
  int16x8_t v19 = (int16x8_t)vzip1q_s8(*v12, (int8x16_t)0);
  int16x8_t v20 = (int16x8_t)vzip1q_s8(v13, (int8x16_t)0);
  int16x8_t v21 = (int16x8_t)vzip2q_s8(v5, (int8x16_t)0);
  int16x8_t v22 = (int16x8_t)vzip2q_s8(v7, (int8x16_t)0);
  int16x8_t v23 = (int16x8_t)vzip2q_s8(v9, (int8x16_t)0);
  int16x8_t v24 = (int16x8_t)vzip2q_s8(v11, (int8x16_t)0);
  int16x8_t v25 = (int16x8_t)vzip2q_s8(*v12, (int8x16_t)0);
  int16x8_t v26 = (int16x8_t)vzip2q_s8(v13, (int8x16_t)0);
  uint8x8_t v27 = (int8x16_t *)(a3 - 2 + 6 * a4 - 2 * a4);
  int v28 = 15;
  v29.i64[0] = 0x14001400140014;
  v29.i64[1] = 0x14001400140014;
  v30.i64[0] = 0x4000400040004;
  v30.i64[1] = 0x4000400040004;
  v31.i64[0] = 0x10001000100010;
  v31.i64[1] = 0x10001000100010;
  v32.i64[0] = 0x20000000200;
  v32.i64[1] = 0x20000000200;
  v33.i64[0] = 0x900000009;
  v33.i64[1] = 0x900000009;
  do
  {
    int16x8_t v34 = v26;
    int16x8_t v35 = v25;
    int16x8_t v36 = v24;
    int16x8_t v37 = v23;
    int16x8_t v38 = v22;
    int16x8_t v39 = v20;
    int16x8_t v40 = v19;
    int16x8_t v41 = v18;
    int16x8_t v42 = v17;
    int16x8_t v43 = v16;
    int16x8_t v44 = vmlaq_s16(vmlaq_s16(vaddq_s16(v15, v20), vaddq_s16(v17, v18), v29), vaddq_s16(v16, v19), v30);
    int16x8_t v45 = vmlaq_s16(vmlaq_s16(vaddq_s16(v21, v26), vaddq_s16(v23, v24), v29), vaddq_s16(v22, v25), v30);
    uint8x8_t v46 = (uint8x8_t)vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v44, v31), v30)), vshlq_s16(vaddq_s16(v45, v31), v30)), (int8x16_t)0, 3uLL).u64[0];
    int8x16_t v47 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL);
    int8x16_t v48 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 4uLL);
    int8x16_t v49 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 6uLL);
    int8x16_t v50 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 0xAuLL);
    int8x16_t v51 = vextq_s8(v49, (int8x16_t)0, 2uLL);
    int8x16_t v52 = vextq_s8(v50, (int8x16_t)0, 2uLL);
    int8x16_t v53 = vextq_s8(v50, (int8x16_t)0, 4uLL);
    int32x4_t v54 = vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL), (int16x4_t)131067));
    int32x4_t v55 = vpaddq_s32(vmull_s16(*(int16x4_t *)v47.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL), (int16x4_t)131067));
    int32x4_t v56 = vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)131067));
    int32x4_t v57 = vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)131067));
    int32x4_t v58 = vpaddq_s32(vmull_s16(*(int16x4_t *)v51.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v51, v51, 8uLL), (int16x4_t)131067));
    int32x4_t v59 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)131067));
    int32x4_t v60 = vpaddq_s32(vmull_s16(*(int16x4_t *)v52.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL), (int16x4_t)131067));
    int32x4_t v61 = vpaddq_s32(vmull_s16(*(int16x4_t *)v53.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v53, v53, 8uLL), (int16x4_t)131067));
    int32x4_t v62 = vzip1q_s32(v54, v56);
    int32x4_t v63 = vzip2q_s32(v54, v56);
    int32x4_t v64 = vzip1q_s32(v55, v57);
    int32x4_t v65 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v62, v64), vzip1q_s32(v62, v64)), vaddq_s32(vzip1q_s32(v63, vzip2q_s32(v55, v57)), v32)), v33);
    int32x4_t v66 = vzip1q_s32(v58, v60);
    int32x4_t v67 = vzip1q_s32(v59, v61);
    uint8x8_t v68 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v65), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v66, v67), vzip1q_s32(v66, v67)), vaddq_s32(vzip1q_s32(vzip2q_s32(v58, v60), vzip2q_s32(v59, v61)), v32)), v33))), v46);
    vst2_s8(a1, *(int8x8x2_t *)((char *)&v14 - 8));
    a1 += a2;
    int8x16_t v69 = *v27;
    uint8x8_t v27 = (int8x16_t *)((char *)v27 + a4);
    int16x8_t v15 = v43;
    int16x8_t v16 = v42;
    int16x8_t v17 = v41;
    int16x8_t v20 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
    int16x8_t v18 = v40;
    int16x8_t v19 = v39;
    int16x8_t v21 = v38;
    int16x8_t v22 = v37;
    int16x8_t v26 = (int16x8_t)vzip2q_s8(v69, (int8x16_t)0);
    int16x8_t v23 = v24;
    int16x8_t v24 = v25;
    int16x8_t v25 = v34;
    --v28;
  }
  while (v28);
  v70.i64[0] = 0x14001400140014;
  v70.i64[1] = 0x14001400140014;
  v71.i64[0] = 0x4000400040004;
  v71.i64[1] = 0x4000400040004;
  int16x8_t v72 = vmlaq_s16(vmlaq_s16(vaddq_s16(v43, v20), vaddq_s16(v41, v40), v70), vaddq_s16(v42, v39), v71);
  int16x8_t v73 = vmlaq_s16(vmlaq_s16(vaddq_s16(v38, v26), vaddq_s16(v36, v35), v70), vaddq_s16(v37, v34), v71);
  v74.i64[0] = 0x10001000100010;
  v74.i64[1] = 0x10001000100010;
  v74.i64[0] = vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v72, v74), v71)), vshlq_s16(vaddq_s16(v73, v74), v71)), (int8x16_t)0, 3uLL).u64[0];
  int8x16_t v75 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 2uLL);
  int8x16_t v76 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 4uLL);
  int8x16_t v77 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 6uLL);
  int8x16_t v78 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 0xAuLL);
  int8x16_t v79 = vextq_s8(v77, (int8x16_t)0, 2uLL);
  int8x16_t v80 = vextq_s8(v78, (int8x16_t)0, 2uLL);
  int8x16_t v81 = vextq_s8(v78, (int8x16_t)0, 4uLL);
  int32x4_t v82 = vpaddq_s32(vmull_s16(*(int16x4_t *)v72.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v72, (int8x16_t)v72, 8uLL), (int16x4_t)131067));
  int32x4_t v83 = vpaddq_s32(vmull_s16(*(int16x4_t *)v75.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL), (int16x4_t)131067));
  int32x4_t v84 = vpaddq_s32(vmull_s16(*(int16x4_t *)v76.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL), (int16x4_t)131067));
  int32x4_t v85 = vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)131067));
  int32x4_t v86 = vpaddq_s32(vmull_s16(*(int16x4_t *)v79.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL), (int16x4_t)131067));
  int32x4_t v87 = vpaddq_s32(vmull_s16(*(int16x4_t *)v78.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), (int16x4_t)131067));
  int32x4_t v88 = vpaddq_s32(vmull_s16(*(int16x4_t *)v80.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL), (int16x4_t)131067));
  int32x4_t v89 = vpaddq_s32(vmull_s16(*(int16x4_t *)v81.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL), (int16x4_t)131067));
  int32x4_t v90 = vzip1q_s32(v82, v84);
  int32x4_t v91 = vzip2q_s32(v82, v84);
  int32x4_t v92 = vzip1q_s32(v83, v85);
  int32x4_t v93 = vzip1q_s32(v91, vzip2q_s32(v83, v85));
  v91.i64[0] = 0x20000000200;
  v91.i64[1] = 0x20000000200;
  int32x4_t v94 = vaddq_s32(vaddq_s32(vzip2q_s32(v90, v92), vzip1q_s32(v90, v92)), vaddq_s32(v93, v91));
  v93.i64[0] = 0x900000009;
  v93.i64[1] = 0x900000009;
  int32x4_t v95 = vzip1q_s32(v86, v88);
  int32x4_t v96 = vzip1q_s32(v87, v89);
  *(uint8x8_t *)v89.i8 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vshlq_s32(v94, v93)), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v95, v96), vzip1q_s32(v95, v96)), vaddq_s32(vzip1q_s32(vzip2q_s32(v86, v88), vzip2q_s32(v87, v89)), v91)), v93))), *(uint8x8_t *)v74.i8);
  v94.i64[0] = 0;
  vst2_s8(a1, (int8x8x2_t)v89);
}

void sub_2219C904C(char *a1, unsigned int a2, uint64_t a3, int a4)
{
  v4 = (int8x16_t *)(a3 - 2 - 2 * a4);
  int8x16_t v5 = *v4;
  int16x8_t v6 = (int8x16_t *)((char *)v4 + a4);
  int8x16_t v7 = *v6;
  int8x16_t v8 = (int8x16_t *)((char *)v6 + a4);
  int8x16_t v9 = *v8;
  int16x8_t v10 = (int8x16_t *)((char *)v8 + a4);
  int8x16_t v11 = *v10;
  int16x8_t v12 = (int8x16_t *)((char *)v10 + a4);
  int8x16_t v13 = *(int8x16_t *)((char *)v12 + a4);
  long long v14 = 0uLL;
  int16x8_t v15 = (int16x8_t)vzip1q_s8(v5, (int8x16_t)0);
  int16x8_t v16 = (int16x8_t)vzip1q_s8(v7, (int8x16_t)0);
  int16x8_t v17 = (int16x8_t)vzip1q_s8(v9, (int8x16_t)0);
  int16x8_t v18 = (int16x8_t)vzip1q_s8(v11, (int8x16_t)0);
  int16x8_t v19 = (int16x8_t)vzip1q_s8(*v12, (int8x16_t)0);
  int16x8_t v20 = (int16x8_t)vzip1q_s8(v13, (int8x16_t)0);
  int16x8_t v21 = (int16x8_t)vzip2q_s8(v5, (int8x16_t)0);
  int16x8_t v22 = (int16x8_t)vzip2q_s8(v7, (int8x16_t)0);
  int16x8_t v23 = (int16x8_t)vzip2q_s8(v9, (int8x16_t)0);
  int16x8_t v24 = (int16x8_t)vzip2q_s8(v11, (int8x16_t)0);
  int16x8_t v25 = (int16x8_t)vzip2q_s8(*v12, (int8x16_t)0);
  int16x8_t v26 = (int16x8_t)vzip2q_s8(v13, (int8x16_t)0);
  uint8x8_t v27 = (int8x16_t *)(a3 - 2 + 6 * a4 - 2 * a4);
  int v28 = 7;
  v29.i64[0] = 0x14001400140014;
  v29.i64[1] = 0x14001400140014;
  v30.i64[0] = 0x4000400040004;
  v30.i64[1] = 0x4000400040004;
  v31.i64[0] = 0x10001000100010;
  v31.i64[1] = 0x10001000100010;
  v32.i64[0] = 0x20000000200;
  v32.i64[1] = 0x20000000200;
  v33.i64[0] = 0x900000009;
  v33.i64[1] = 0x900000009;
  do
  {
    int16x8_t v34 = v26;
    int16x8_t v35 = v25;
    int16x8_t v36 = v24;
    int16x8_t v37 = v23;
    int16x8_t v38 = v22;
    int16x8_t v39 = v20;
    int16x8_t v40 = v19;
    int16x8_t v41 = v18;
    int16x8_t v42 = v17;
    int16x8_t v43 = v16;
    int16x8_t v44 = vmlaq_s16(vmlaq_s16(vaddq_s16(v15, v20), vaddq_s16(v17, v18), v29), vaddq_s16(v16, v19), v30);
    int16x8_t v45 = vmlaq_s16(vmlaq_s16(vaddq_s16(v21, v26), vaddq_s16(v23, v24), v29), vaddq_s16(v22, v25), v30);
    uint8x8_t v46 = (uint8x8_t)vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v44, v31), v30)), vshlq_s16(vaddq_s16(v45, v31), v30)), (int8x16_t)0, 2uLL).u64[0];
    int8x16_t v47 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL);
    int8x16_t v48 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 4uLL);
    int8x16_t v49 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 6uLL);
    int8x16_t v50 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 0xAuLL);
    int8x16_t v51 = vextq_s8(v49, (int8x16_t)0, 2uLL);
    int8x16_t v52 = vextq_s8(v50, (int8x16_t)0, 2uLL);
    int8x16_t v53 = vextq_s8(v50, (int8x16_t)0, 4uLL);
    int32x4_t v54 = vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL), (int16x4_t)131067));
    int32x4_t v55 = vpaddq_s32(vmull_s16(*(int16x4_t *)v47.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL), (int16x4_t)131067));
    int32x4_t v56 = vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)131067));
    int32x4_t v57 = vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)131067));
    int32x4_t v58 = vpaddq_s32(vmull_s16(*(int16x4_t *)v51.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v51, v51, 8uLL), (int16x4_t)131067));
    int32x4_t v59 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)131067));
    int32x4_t v60 = vpaddq_s32(vmull_s16(*(int16x4_t *)v52.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL), (int16x4_t)131067));
    int32x4_t v61 = vpaddq_s32(vmull_s16(*(int16x4_t *)v53.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v53, v53, 8uLL), (int16x4_t)131067));
    int32x4_t v62 = vzip1q_s32(v54, v56);
    int32x4_t v63 = vzip2q_s32(v54, v56);
    int32x4_t v64 = vzip1q_s32(v55, v57);
    int32x4_t v65 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v62, v64), vzip1q_s32(v62, v64)), vaddq_s32(vzip1q_s32(v63, vzip2q_s32(v55, v57)), v32)), v33);
    int32x4_t v66 = vzip1q_s32(v58, v60);
    int32x4_t v67 = vzip1q_s32(v59, v61);
    uint8x8_t v68 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v65), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v66, v67), vzip1q_s32(v66, v67)), vaddq_s32(vzip1q_s32(vzip2q_s32(v58, v60), vzip2q_s32(v59, v61)), v32)), v33))), v46);
    vst2_s8(a1, *(int8x8x2_t *)((char *)&v14 - 8));
    a1 += a2;
    int8x16_t v69 = *v27;
    uint8x8_t v27 = (int8x16_t *)((char *)v27 + a4);
    int16x8_t v15 = v43;
    int16x8_t v16 = v42;
    int16x8_t v17 = v41;
    int16x8_t v20 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
    int16x8_t v18 = v40;
    int16x8_t v19 = v39;
    int16x8_t v21 = v38;
    int16x8_t v22 = v37;
    int16x8_t v26 = (int16x8_t)vzip2q_s8(v69, (int8x16_t)0);
    int16x8_t v23 = v24;
    int16x8_t v24 = v25;
    int16x8_t v25 = v34;
    --v28;
  }
  while (v28);
  v70.i64[0] = 0x14001400140014;
  v70.i64[1] = 0x14001400140014;
  v71.i64[0] = 0x4000400040004;
  v71.i64[1] = 0x4000400040004;
  int16x8_t v72 = vmlaq_s16(vmlaq_s16(vaddq_s16(v43, v20), vaddq_s16(v41, v40), v70), vaddq_s16(v42, v39), v71);
  int16x8_t v73 = vmlaq_s16(vmlaq_s16(vaddq_s16(v38, v26), vaddq_s16(v36, v35), v70), vaddq_s16(v37, v34), v71);
  v74.i64[0] = 0x10001000100010;
  v74.i64[1] = 0x10001000100010;
  v74.i64[0] = vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v72, v74), v71)), vshlq_s16(vaddq_s16(v73, v74), v71)), (int8x16_t)0, 2uLL).u64[0];
  int8x16_t v75 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 2uLL);
  int8x16_t v76 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 4uLL);
  int8x16_t v77 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 6uLL);
  int8x16_t v78 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 0xAuLL);
  int8x16_t v79 = vextq_s8(v77, (int8x16_t)0, 2uLL);
  int8x16_t v80 = vextq_s8(v78, (int8x16_t)0, 2uLL);
  int8x16_t v81 = vextq_s8(v78, (int8x16_t)0, 4uLL);
  int32x4_t v82 = vpaddq_s32(vmull_s16(*(int16x4_t *)v72.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v72, (int8x16_t)v72, 8uLL), (int16x4_t)131067));
  int32x4_t v83 = vpaddq_s32(vmull_s16(*(int16x4_t *)v75.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL), (int16x4_t)131067));
  int32x4_t v84 = vpaddq_s32(vmull_s16(*(int16x4_t *)v76.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL), (int16x4_t)131067));
  int32x4_t v85 = vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)131067));
  int32x4_t v86 = vpaddq_s32(vmull_s16(*(int16x4_t *)v79.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL), (int16x4_t)131067));
  int32x4_t v87 = vpaddq_s32(vmull_s16(*(int16x4_t *)v78.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), (int16x4_t)131067));
  int32x4_t v88 = vpaddq_s32(vmull_s16(*(int16x4_t *)v80.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL), (int16x4_t)131067));
  int32x4_t v89 = vpaddq_s32(vmull_s16(*(int16x4_t *)v81.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL), (int16x4_t)131067));
  int32x4_t v90 = vzip1q_s32(v82, v84);
  int32x4_t v91 = vzip2q_s32(v82, v84);
  int32x4_t v92 = vzip1q_s32(v83, v85);
  int32x4_t v93 = vzip1q_s32(v91, vzip2q_s32(v83, v85));
  v91.i64[0] = 0x20000000200;
  v91.i64[1] = 0x20000000200;
  int32x4_t v94 = vaddq_s32(vaddq_s32(vzip2q_s32(v90, v92), vzip1q_s32(v90, v92)), vaddq_s32(v93, v91));
  v93.i64[0] = 0x900000009;
  v93.i64[1] = 0x900000009;
  int32x4_t v95 = vzip1q_s32(v86, v88);
  int32x4_t v96 = vzip1q_s32(v87, v89);
  *(uint8x8_t *)v89.i8 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vshlq_s32(v94, v93)), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v95, v96), vzip1q_s32(v95, v96)), vaddq_s32(vzip1q_s32(vzip2q_s32(v86, v88), vzip2q_s32(v87, v89)), v91)), v93))), *(uint8x8_t *)v74.i8);
  v94.i64[0] = 0;
  vst2_s8(a1, (int8x8x2_t)v89);
}

void sub_2219C9434(char *a1, unsigned int a2, uint64_t a3, int a4)
{
  v4 = (int8x16_t *)(a3 - 2 - 2 * a4);
  int8x16_t v5 = *v4;
  int16x8_t v6 = (int8x16_t *)((char *)v4 + a4);
  int8x16_t v7 = *v6;
  int8x16_t v8 = (int8x16_t *)((char *)v6 + a4);
  int8x16_t v9 = *v8;
  int16x8_t v10 = (int8x16_t *)((char *)v8 + a4);
  int8x16_t v11 = *v10;
  int16x8_t v12 = (int8x16_t *)((char *)v10 + a4);
  int8x16_t v13 = *(int8x16_t *)((char *)v12 + a4);
  long long v14 = 0uLL;
  int16x8_t v15 = (int16x8_t)vzip1q_s8(v5, (int8x16_t)0);
  int16x8_t v16 = (int16x8_t)vzip1q_s8(v7, (int8x16_t)0);
  int16x8_t v17 = (int16x8_t)vzip1q_s8(v9, (int8x16_t)0);
  int16x8_t v18 = (int16x8_t)vzip1q_s8(v11, (int8x16_t)0);
  int16x8_t v19 = (int16x8_t)vzip1q_s8(*v12, (int8x16_t)0);
  int16x8_t v20 = (int16x8_t)vzip1q_s8(v13, (int8x16_t)0);
  int16x8_t v21 = (int16x8_t)vzip2q_s8(v5, (int8x16_t)0);
  int16x8_t v22 = (int16x8_t)vzip2q_s8(v7, (int8x16_t)0);
  int16x8_t v23 = (int16x8_t)vzip2q_s8(v9, (int8x16_t)0);
  int16x8_t v24 = (int16x8_t)vzip2q_s8(v11, (int8x16_t)0);
  int16x8_t v25 = (int16x8_t)vzip2q_s8(*v12, (int8x16_t)0);
  int16x8_t v26 = (int16x8_t)vzip2q_s8(v13, (int8x16_t)0);
  uint8x8_t v27 = (int8x16_t *)(a3 - 2 + 6 * a4 - 2 * a4);
  int v28 = 7;
  v29.i64[0] = 0x14001400140014;
  v29.i64[1] = 0x14001400140014;
  v30.i64[0] = 0x4000400040004;
  v30.i64[1] = 0x4000400040004;
  v31.i64[0] = 0x10001000100010;
  v31.i64[1] = 0x10001000100010;
  v32.i64[0] = 0x20000000200;
  v32.i64[1] = 0x20000000200;
  v33.i64[0] = 0x900000009;
  v33.i64[1] = 0x900000009;
  do
  {
    int16x8_t v34 = v26;
    int16x8_t v35 = v25;
    int16x8_t v36 = v24;
    int16x8_t v37 = v23;
    int16x8_t v38 = v22;
    int16x8_t v39 = v20;
    int16x8_t v40 = v19;
    int16x8_t v41 = v18;
    int16x8_t v42 = v17;
    int16x8_t v43 = v16;
    int16x8_t v44 = vmlaq_s16(vmlaq_s16(vaddq_s16(v15, v20), vaddq_s16(v17, v18), v29), vaddq_s16(v16, v19), v30);
    int16x8_t v45 = vmlaq_s16(vmlaq_s16(vaddq_s16(v21, v26), vaddq_s16(v23, v24), v29), vaddq_s16(v22, v25), v30);
    uint8x8_t v46 = (uint8x8_t)vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v44, v31), v30)), vshlq_s16(vaddq_s16(v45, v31), v30)), (int8x16_t)0, 3uLL).u64[0];
    int8x16_t v47 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL);
    int8x16_t v48 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 4uLL);
    int8x16_t v49 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 6uLL);
    int8x16_t v50 = vextq_s8((int8x16_t)v44, (int8x16_t)v45, 0xAuLL);
    int8x16_t v51 = vextq_s8(v49, (int8x16_t)0, 2uLL);
    int8x16_t v52 = vextq_s8(v50, (int8x16_t)0, 2uLL);
    int8x16_t v53 = vextq_s8(v50, (int8x16_t)0, 4uLL);
    int32x4_t v54 = vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL), (int16x4_t)131067));
    int32x4_t v55 = vpaddq_s32(vmull_s16(*(int16x4_t *)v47.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL), (int16x4_t)131067));
    int32x4_t v56 = vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)131067));
    int32x4_t v57 = vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)131067));
    int32x4_t v58 = vpaddq_s32(vmull_s16(*(int16x4_t *)v51.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v51, v51, 8uLL), (int16x4_t)131067));
    int32x4_t v59 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)131067));
    int32x4_t v60 = vpaddq_s32(vmull_s16(*(int16x4_t *)v52.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL), (int16x4_t)131067));
    int32x4_t v61 = vpaddq_s32(vmull_s16(*(int16x4_t *)v53.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v53, v53, 8uLL), (int16x4_t)131067));
    int32x4_t v62 = vzip1q_s32(v54, v56);
    int32x4_t v63 = vzip2q_s32(v54, v56);
    int32x4_t v64 = vzip1q_s32(v55, v57);
    int32x4_t v65 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v62, v64), vzip1q_s32(v62, v64)), vaddq_s32(vzip1q_s32(v63, vzip2q_s32(v55, v57)), v32)), v33);
    int32x4_t v66 = vzip1q_s32(v58, v60);
    int32x4_t v67 = vzip1q_s32(v59, v61);
    uint8x8_t v68 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v65), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v66, v67), vzip1q_s32(v66, v67)), vaddq_s32(vzip1q_s32(vzip2q_s32(v58, v60), vzip2q_s32(v59, v61)), v32)), v33))), v46);
    vst2_s8(a1, *(int8x8x2_t *)((char *)&v14 - 8));
    a1 += a2;
    int8x16_t v69 = *v27;
    uint8x8_t v27 = (int8x16_t *)((char *)v27 + a4);
    int16x8_t v15 = v43;
    int16x8_t v16 = v42;
    int16x8_t v17 = v41;
    int16x8_t v20 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
    int16x8_t v18 = v40;
    int16x8_t v19 = v39;
    int16x8_t v21 = v38;
    int16x8_t v22 = v37;
    int16x8_t v26 = (int16x8_t)vzip2q_s8(v69, (int8x16_t)0);
    int16x8_t v23 = v24;
    int16x8_t v24 = v25;
    int16x8_t v25 = v34;
    --v28;
  }
  while (v28);
  v70.i64[0] = 0x14001400140014;
  v70.i64[1] = 0x14001400140014;
  v71.i64[0] = 0x4000400040004;
  v71.i64[1] = 0x4000400040004;
  int16x8_t v72 = vmlaq_s16(vmlaq_s16(vaddq_s16(v43, v20), vaddq_s16(v41, v40), v70), vaddq_s16(v42, v39), v71);
  int16x8_t v73 = vmlaq_s16(vmlaq_s16(vaddq_s16(v38, v26), vaddq_s16(v36, v35), v70), vaddq_s16(v37, v34), v71);
  v74.i64[0] = 0x10001000100010;
  v74.i64[1] = 0x10001000100010;
  v74.i64[0] = vextq_s8(vqmovun_high_s16(vqmovun_s16(vshlq_s16(vaddq_s16(v72, v74), v71)), vshlq_s16(vaddq_s16(v73, v74), v71)), (int8x16_t)0, 3uLL).u64[0];
  int8x16_t v75 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 2uLL);
  int8x16_t v76 = vextq_s8((int8x16_t)v72, (int8x16_t)0, 4uLL);
  int8x16_t v77 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 6uLL);
  int8x16_t v78 = vextq_s8((int8x16_t)v72, (int8x16_t)v73, 0xAuLL);
  int8x16_t v79 = vextq_s8(v77, (int8x16_t)0, 2uLL);
  int8x16_t v80 = vextq_s8(v78, (int8x16_t)0, 2uLL);
  int8x16_t v81 = vextq_s8(v78, (int8x16_t)0, 4uLL);
  int32x4_t v82 = vpaddq_s32(vmull_s16(*(int16x4_t *)v72.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v72, (int8x16_t)v72, 8uLL), (int16x4_t)131067));
  int32x4_t v83 = vpaddq_s32(vmull_s16(*(int16x4_t *)v75.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL), (int16x4_t)131067));
  int32x4_t v84 = vpaddq_s32(vmull_s16(*(int16x4_t *)v76.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL), (int16x4_t)131067));
  int32x4_t v85 = vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)131067));
  int32x4_t v86 = vpaddq_s32(vmull_s16(*(int16x4_t *)v79.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL), (int16x4_t)131067));
  int32x4_t v87 = vpaddq_s32(vmull_s16(*(int16x4_t *)v78.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), (int16x4_t)131067));
  int32x4_t v88 = vpaddq_s32(vmull_s16(*(int16x4_t *)v80.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL), (int16x4_t)131067));
  int32x4_t v89 = vpaddq_s32(vmull_s16(*(int16x4_t *)v81.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL), (int16x4_t)131067));
  int32x4_t v90 = vzip1q_s32(v82, v84);
  int32x4_t v91 = vzip2q_s32(v82, v84);
  int32x4_t v92 = vzip1q_s32(v83, v85);
  int32x4_t v93 = vzip1q_s32(v91, vzip2q_s32(v83, v85));
  v91.i64[0] = 0x20000000200;
  v91.i64[1] = 0x20000000200;
  int32x4_t v94 = vaddq_s32(vaddq_s32(vzip2q_s32(v90, v92), vzip1q_s32(v90, v92)), vaddq_s32(v93, v91));
  v93.i64[0] = 0x900000009;
  v93.i64[1] = 0x900000009;
  int32x4_t v95 = vzip1q_s32(v86, v88);
  int32x4_t v96 = vzip1q_s32(v87, v89);
  *(uint8x8_t *)v89.i8 = vrhadd_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vshlq_s32(v94, v93)), vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v95, v96), vzip1q_s32(v95, v96)), vaddq_s32(vzip1q_s32(vzip2q_s32(v86, v88), vzip2q_s32(v87, v89)), v91)), v93))), *(uint8x8_t *)v74.i8);
  v94.i64[0] = 0;
  vst2_s8(a1, (int8x8x2_t)v89);
}

char *sub_2219C981C(char *result, uint64_t a2, int a3, int a4, int a5, unsigned int a6)
{
  v34[33] = *MEMORY[0x263EF8340];
  if (a4 >= 1)
  {
    uint64_t v6 = a2 - 2 * a3 - 2;
    int8x16_t v7 = (int8x16_t *)(v6 + a5 * (uint64_t)a3);
    int8x16_t v8 = (int8x16_t *)(v6 + a6);
    int8x16_t v9 = (int8x16_t *)((char *)v8 + a3);
    int16x8_t v10 = (int8x16_t *)((char *)v9 + a3);
    int8x16_t v11 = (int8x16_t *)((char *)v10 + a3);
    int8x16_t v12 = 0uLL;
    int16x8_t v13 = (int16x8_t)vzip1q_s8(*(int8x16_t *)((char *)v11 + a3), (int8x16_t)0);
    int16x8_t v14 = (int16x8_t)vzip1q_s8(*v11, (int8x16_t)0);
    int16x8_t v15 = (int16x8_t)vzip1q_s8(*v10, (int8x16_t)0);
    int16x8_t v16 = (int16x8_t)vzip1q_s8(*v9, (int8x16_t)0);
    int16x8_t v17 = (int16x8_t)vzip1q_s8(*v8, (int8x16_t)0);
    uint64_t v18 = a4;
    int16x8_t v19 = (int8x16_t *)(5 * a3 + a6 - 2 * a3 + a2 - 2);
    int16x8_t v20 = (int8x16_t *)v34;
    v21.i64[0] = 0x10001000100010;
    v21.i64[1] = 0x10001000100010;
    v22.i64[0] = 0x4000400040004;
    v22.i64[1] = 0x4000400040004;
    uint64_t v23 = a4;
    do
    {
      int16x8_t v24 = vsubq_s16(vshlq_n_s16(vaddq_s16(v15, v14), 2uLL), vaddq_s16(v16, v13));
      int16x8_t v25 = vaddq_s16(v17, v24);
      int16x8_t v17 = v16;
      int16x8_t v16 = v15;
      int16x8_t v15 = v14;
      int16x8_t v14 = v13;
      int16x8_t v13 = (int16x8_t)vzip1q_s8(*v19, (int8x16_t)0);
      int16x8_t v26 = vshlq_s16(vaddq_s16(vaddq_s16(v25, vshlq_n_s16(v24, 2uLL)), vaddq_s16(v13, v21)), v22);
      *v20++ = vqmovun_high_s16(vqmovun_s16(v26), v26);
      int16x8_t v19 = (int8x16_t *)((char *)v19 + a3);
      --v23;
    }
    while (v23);
    uint8x8_t v27 = (long long *)v34;
    long long v28 = 0uLL;
    v29.i64[0] = 0x10001000100010;
    v29.i64[1] = 0x10001000100010;
    v30.i64[0] = 0x4000400040004;
    v30.i64[1] = 0x4000400040004;
    do
    {
      int8x16_t v31 = *v7;
      int8x16_t v7 = (int8x16_t *)((char *)v7 + a3);
      int16x8_t v32 = vsubq_s16(vshlq_n_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v31, v12, 2uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v31, v12, 3uLL), (int8x16_t)0)), 2uLL), vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8(v31, v12, 4uLL), (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v31, v12, 1uLL), (int8x16_t)0)));
      long long v33 = *v27++;
      *(uint8x8_t *)v12.i8 = vrhadd_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vaddq_s16(vshlq_n_s16(v32, 2uLL), vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v31, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v31, v12, 5uLL), (int8x16_t)0)), v32)), v29), v30)), *(uint8x8_t *)&v33);
      vst2_s8(result, (int8x8x2_t)v12);
      result += 16;
      --v18;
    }
    while (v18);
  }
  return result;
}

int16x8_t sub_2219C99CC(void *a1, unsigned int a2, uint64_t a3, int a4)
{
  int8x16_t v5 = *(int8x16_t *)(a3 - 2);
  uint64_t v4 = a3 - 2;
  int8x16_t v6 = *(int8x16_t *)(v4 + a4);
  int8x16_t v7 = *(int8x16_t *)(v4 + 2 * a4);
  int8x16_t v8 = *(int8x16_t *)(v4 + 3 * a4);
  int8x16_t v9 = vzip1q_s8(v5, (int8x16_t)0);
  int8x16_t v10 = vdupq_laneq_s8(v5, 8);
  int8x16_t v11 = vzip1q_s8(v6, (int8x16_t)0);
  int8x16_t v12 = vdupq_laneq_s8(v6, 8);
  int8x16_t v13 = vzip1q_s8(v7, (int8x16_t)0);
  int8x16_t v14 = vdupq_laneq_s8(v7, 8);
  int8x16_t v15 = vzip1q_s8(v8, (int8x16_t)0);
  int8x16_t v16 = vdupq_laneq_s8(v8, 8);
  int8x16_t v17 = vzip1q_s8(v9, (int8x16_t)0);
  int8x16_t v18 = vzip2q_s8(v9, (int8x16_t)0);
  v10.i8[1] = 0;
  int8x16_t v19 = vzip1q_s8(v11, (int8x16_t)0);
  v12.i8[1] = 0;
  int8x16_t v20 = vzip2q_s8(v11, (int8x16_t)0);
  int8x16_t v21 = vzip1q_s8(v13, (int8x16_t)0);
  int8x16_t v22 = vzip2q_s8(v13, (int8x16_t)0);
  v14.i8[1] = 0;
  int8x16_t v23 = vzip1q_s8(v15, (int8x16_t)0);
  int8x16_t v24 = vzip2q_s8(v15, (int8x16_t)0);
  v16.i8[1] = 0;
  int8x16_t v25 = vzip1q_s8(v17, v21);
  int8x16_t v26 = vzip2q_s8(v17, v21);
  int8x16_t v27 = vzip1q_s8(v18, v22);
  int8x16_t v28 = vzip2q_s8(v18, v22);
  int8x16_t v29 = vzip1q_s8(v10, v14);
  int8x16_t v30 = vzip1q_s8(v19, v23);
  int8x16_t v31 = vzip2q_s8(v19, v23);
  int8x16_t v32 = vzip1q_s8(v20, v24);
  int8x16_t v33 = vzip2q_s8(v20, v24);
  int8x16_t v34 = vzip1q_s8(v12, v16);
  int8x16_t v35 = vzip1q_s8(v25, v30);
  int8x16_t v36 = vzip1q_s8(v26, v31);
  int8x16_t v37 = vzip2q_s8(v26, v31);
  int8x16_t v38 = vzip1q_s8(v27, v32);
  int8x16_t v39 = vzip2q_s8(v27, v32);
  int8x16_t v40 = vzip1q_s8(v28, v33);
  int8x16_t v41 = vzip2q_s8(v28, v33);
  int16x8_t v42 = (int16x8_t)vzip1q_s8(v29, v34);
  int16x8_t v43 = (int16x8_t)vzip1q_s8(vzip2q_s8(v25, v30), (int8x16_t)0);
  int16x8_t v44 = (int16x8_t)vzip1q_s8(v36, (int8x16_t)0);
  int16x8_t v45 = (int16x8_t)vzip1q_s8(v37, (int8x16_t)0);
  int16x8_t v46 = (int16x8_t)vzip1q_s8(v38, (int8x16_t)0);
  int16x8_t v47 = (int16x8_t)vzip1q_s8(v39, (int8x16_t)0);
  int16x8_t v48 = (int16x8_t)vzip1q_s8(v40, (int8x16_t)0);
  int16x8_t v49 = (int16x8_t)vzip1q_s8(v41, (int8x16_t)0);
  int16x8_t v50 = (int16x8_t)vzip1q_s8((int8x16_t)v42, (int8x16_t)0);
  v42.i64[0] = 0x4000400040004;
  v42.i64[1] = 0x4000400040004;
  int16x8_t v51 = vmulq_s16(v46, v42);
  v52.i64[0] = 0x10001000100010;
  v52.i64[1] = 0x10001000100010;
  v53.i64[0] = 0x10001000100010;
  v53.i64[1] = 0x10001000100010;
  int16x8_t v54 = (int16x8_t)vmlal_u8(v53, (uint8x8_t)vmovn_s16(v45), (uint8x8_t)0x1414141414141414);
  uint16x8_t v55 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v54, vaddq_s16((int16x8_t)vzip1q_s8(v35, (int8x16_t)0), v47)), v43, v42), (uint8x8_t)vmovn_s16(v44), (uint8x8_t)0x1414141414141414), v51), v42)));
  *(int8x8_t *)v38.i8 = vmovn_s16(v46);
  uint16x8_t v56 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v54, vaddq_s16(v43, v48)), *(uint8x8_t *)v38.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v47, v44), v42), v42)));
  *(int8x8_t *)v43.i8 = vmovn_s16(v47);
  int16x8_t v57 = vzip1q_s16((int16x8_t)vrhaddq_u16(v55, (uint16x8_t)v44), (int16x8_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)v44, *(uint8x8_t *)v38.i8, (uint8x8_t)0x1414141414141414), v49), *(uint8x8_t *)v43.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v48, v45), v42), v52), v42))),
                       (uint16x8_t)v46));
  int16x8_t v58 = vzip1q_s16((int16x8_t)vrhaddq_u16(v56, (uint16x8_t)v45), (int16x8_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v51, v45), v50), *(uint8x8_t *)v43.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v48), (uint8x8_t)0x1414141414141414), v49, v42), v52), v42))), (uint16x8_t)v47));
  int16x8_t v59 = vzip1q_s16(v57, v58);
  int16x8_t result = vzip2q_s16(v57, v58);
  *a1 = v59.i64[0];
  *(void *)((char *)a1 + a2) = v59.i64[1];
  uint64_t v61 = 2 * a2;
  *(void *)((char *)a1 + v61) = result.i64[0];
  *(void *)((char *)a1 + v61 + a2) = result.i64[1];
  return result;
}

double sub_2219C9BA0(void *a1, unsigned int a2, uint64_t a3, int a4, int8x16_t a5, double a6, double a7, double a8, double a9, int8x16_t a10, int8x16_t a11, int8x16_t a12)
{
  int8x16_t v14 = (unsigned __int32 *)(a3 - 2 * a4);
  int8x16_t v15 = (unsigned __int32 *)(a3 - a4);
  int8x16_t v16 = (unsigned __int32 *)(a3 + 4 * a4);
  int8x16_t v17 = (__int32 *)(a3 + 5 * a4);
  int8x16_t v18 = (__int32 *)(a3 + 6 * a4);
  int8x16_t v20 = *(int8x16_t *)(a3 - 2);
  uint64_t v19 = a3 - 2;
  int8x16_t v21 = *(int8x16_t *)(v19 + a4);
  int8x16_t v22 = *(int8x16_t *)(v19 + 2 * a4);
  int8x16_t v23 = *(int8x16_t *)(v19 + 3 * a4);
  a10.i32[0] = *v14;
  a11.i32[0] = *v15;
  a12.i32[0] = *v16;
  v12.i32[0] = *v17;
  v13.i32[0] = *v18;
  int16x8_t v24 = (int16x8_t)vzip1q_s8(a11, (int8x16_t)0);
  int16x8_t v25 = (int16x8_t)vzip1q_s8(vextq_s8(v20, a5, 2uLL), (int8x16_t)0);
  int16x8_t v26 = (int16x8_t)vzip1q_s8(vextq_s8(v21, a5, 2uLL), (int8x16_t)0);
  int16x8_t v27 = (int16x8_t)vzip1q_s8(vextq_s8(v22, a5, 2uLL), (int8x16_t)0);
  int16x8_t v28 = (int16x8_t)vzip1q_s8(vextq_s8(v23, a5, 2uLL), (int8x16_t)0);
  int16x8_t v29 = (int16x8_t)vzip1q_s8(a12, (int8x16_t)0);
  int16x8_t v30 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
  v31.i64[0] = 0x4000400040004;
  v31.i64[1] = 0x4000400040004;
  v32.i64[0] = 0x14001400140014;
  v32.i64[1] = 0x14001400140014;
  int16x8_t v33 = vmulq_s16(v27, v31);
  v34.i64[0] = 0x10001000100010;
  v34.i64[1] = 0x10001000100010;
  v35.i64[0] = 0x10001000100010;
  v35.i64[1] = 0x10001000100010;
  int16x8_t v36 = vmlaq_s16(v35, v26, v32);
  int16x8_t v37 = vmulq_s16(v27, v32);
  int16x8_t v38 = vaddq_s16(v36, v37);
  uint16x8_t v39 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(vmlaq_s16(v36, v25, v32), vaddq_s16(v33, v28)), (int16x8_t)vzip1q_s8(a10, (int8x16_t)0)), v24, v31), v31)));
  uint16x8_t v40 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(v38, vaddq_s16(v28, v25), v31), vaddq_s16(v24, v29)), v31)));
  int16x8_t v41 = vmulq_s16(v28, v32);
  uint16x8_t v42 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v37, v25), v41), v30), vaddq_s16(v29, v26), v31), v34), v31)));
  uint16x8_t v43 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v33, v26), v41), (uint8x8_t)vmovn_s16(v29), (uint8x8_t)0x1414141414141414), v30, v31), vaddq_s16((int16x8_t)vzip1q_s8(v13, (int8x16_t)0), v34)), v31)));
  int8x16_t v44 = vzip1q_s8(v20, (int8x16_t)0);
  int8x16_t v45 = vdupq_laneq_s8(v20, 8);
  int8x16_t v46 = vzip1q_s8(v21, (int8x16_t)0);
  int8x16_t v47 = vdupq_laneq_s8(v21, 8);
  int8x16_t v48 = vzip1q_s8(v22, (int8x16_t)0);
  int8x16_t v49 = vdupq_laneq_s8(v22, 8);
  int8x16_t v50 = vzip1q_s8(v23, (int8x16_t)0);
  int8x16_t v51 = vdupq_laneq_s8(v23, 8);
  int8x16_t v52 = vzip1q_s8(v44, (int8x16_t)0);
  v45.i8[1] = 0;
  int8x16_t v53 = vzip2q_s8(v44, (int8x16_t)0);
  int8x16_t v54 = vzip1q_s8(v46, (int8x16_t)0);
  int8x16_t v55 = vzip2q_s8(v46, (int8x16_t)0);
  v47.i8[1] = 0;
  int8x16_t v56 = vzip1q_s8(v48, (int8x16_t)0);
  int8x16_t v57 = vzip2q_s8(v48, (int8x16_t)0);
  v49.i8[1] = 0;
  int8x16_t v58 = vzip1q_s8(v50, (int8x16_t)0);
  v51.i8[1] = 0;
  int8x16_t v59 = vzip2q_s8(v50, (int8x16_t)0);
  int8x16_t v60 = vzip1q_s8(v52, v56);
  int8x16_t v61 = vzip2q_s8(v52, v56);
  int8x16_t v62 = vzip1q_s8(v53, v57);
  int8x16_t v63 = vzip2q_s8(v53, v57);
  int8x16_t v64 = vzip1q_s8(v45, v49);
  int8x16_t v65 = vzip1q_s8(v54, v58);
  int8x16_t v66 = vzip2q_s8(v54, v58);
  int8x16_t v67 = vzip1q_s8(v55, v59);
  int8x16_t v68 = vzip2q_s8(v55, v59);
  int8x16_t v69 = vzip1q_s8(v61, v66);
  int8x16_t v70 = vzip2q_s8(v61, v66);
  int8x16_t v71 = vzip1q_s8(v62, v67);
  int8x16_t v72 = vzip2q_s8(v62, v67);
  int8x16_t v73 = vzip1q_s8(v63, v68);
  int8x16_t v74 = vzip2q_s8(v63, v68);
  int8x16_t v75 = vzip1q_s8(v64, vzip1q_s8(v47, v51));
  int16x8_t v76 = (int16x8_t)vzip1q_s8(vzip1q_s8(v60, v65), (int8x16_t)0);
  int16x8_t v77 = (int16x8_t)vzip1q_s8(vzip2q_s8(v60, v65), (int8x16_t)0);
  int16x8_t v78 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
  int16x8_t v79 = (int16x8_t)vzip1q_s8(v70, (int8x16_t)0);
  int16x8_t v80 = (int16x8_t)vzip1q_s8(v71, (int8x16_t)0);
  int16x8_t v81 = (int16x8_t)vzip1q_s8(v72, (int8x16_t)0);
  int16x8_t v82 = (int16x8_t)vzip1q_s8(v73, (int8x16_t)0);
  int16x8_t v83 = (int16x8_t)vzip1q_s8(v74, (int8x16_t)0);
  int16x8_t v84 = vmulq_s16(v80, v31);
  v60.i64[0] = 0x10001000100010;
  v60.i64[1] = 0x10001000100010;
  int16x8_t v85 = (int16x8_t)vmlal_u8((uint16x8_t)v60, (uint8x8_t)vmovn_s16(v79), (uint8x8_t)0x1414141414141414);
  int16x8_t v86 = vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v85, vaddq_s16(v76, v81)), v77, v31), (uint8x8_t)vmovn_s16(v78), (uint8x8_t)0x1414141414141414), v84), v31);
  *(int8x8_t *)v86.i8 = vqmovun_s16(v86);
  *(int8x8_t *)v80.i8 = vmovn_s16(v80);
  int16x8_t v87 = vshlq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v85, vaddq_s16(v77, v82)), *(uint8x8_t *)v80.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v81, v78), v31), v31);
  *(int8x8_t *)v87.i8 = vqmovun_s16(v87);
  *(int8x8_t *)v81.i8 = vmovn_s16(v81);
  int16x8_t v88 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)v78, *(uint8x8_t *)v80.i8, (uint8x8_t)0x1414141414141414), v83), *(uint8x8_t *)v81.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v82, v79), v31), v34), v31);
  *(int8x8_t *)v88.i8 = vqmovun_s16(v88);
  int16x8_t v89 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v84, v79), (int16x8_t)vzip1q_s8(v75, (int8x16_t)0)), *(uint8x8_t *)v81.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v82), (uint8x8_t)0x1414141414141414), v83, v31), v34), v31);
  *(int8x8_t *)v89.i8 = vqmovun_s16(v89);
  int16x8_t v90 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v86, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v88, (int8x16_t)0));
  int16x8_t v91 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v87, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v89, (int8x16_t)0));
  int8x16_t v92 = (int8x16_t)vzip1q_s16(v90, v91);
  int8x16_t v93 = (int8x16_t)vzip2q_s16(v90, v91);
  *(void *)&double result = vrhaddq_u16((uint16x8_t)vextq_s8(v93, (int8x16_t)0, 8uLL), v43).u64[0];
  *a1 = vrhaddq_u16((uint16x8_t)v92, v39).u64[0];
  *(void *)((char *)a1 + a2) = vrhaddq_u16((uint16x8_t)vextq_s8(v92, (int8x16_t)0, 8uLL), v40).u64[0];
  uint64_t v95 = 2 * a2;
  *(void *)((char *)a1 + v95) = vrhaddq_u16((uint16x8_t)v93, v42).u64[0];
  *(double *)((char *)a1 + v95 + a2) = result;
  return result;
}

double sub_2219C9E80(double *a1, unsigned int a2, uint64_t a3, int a4, int64x2_t a5, int64x2_t a6, int64x2_t a7, int64x2_t a8, int64x2_t a9, int64x2_t a10, int64x2_t a11, int64x2_t a12)
{
  uint64_t v15 = a3 - 2 * a4;
  uint64_t v16 = a3 - a4;
  uint64_t v17 = a3 + a4;
  a5.i32[0] = *(_DWORD *)(v15 + 2);
  a6.i32[0] = *(_DWORD *)(v16 + 2);
  int8x16_t v18 = (int8x16_t)vshlq_n_s64(a6, 0x20uLL);
  uint64_t v19 = a3 + 2 * a4;
  a7.i32[0] = *(_DWORD *)(a3 + 2);
  a8.i32[0] = *(_DWORD *)(v17 + 2);
  a9.i32[0] = *(_DWORD *)(v19 + 2);
  uint64_t v20 = a3 + 3 * a4;
  a10.i32[0] = *(_DWORD *)(v20 + 2);
  uint64_t v21 = a3 + 4 * a4;
  a11.i32[0] = *(_DWORD *)(v21 + 2);
  uint64_t v22 = a3 + 5 * a4;
  a12.i32[0] = *(_DWORD *)(v22 + 2);
  uint64_t v23 = a3 + 6 * a4;
  v12.i32[0] = *(_DWORD *)(v23 + 2);
  v13.i32[0] = *(_DWORD *)(v15 - 2);
  int8x16_t v24 = vorrq_s8((int8x16_t)vshlq_n_s64(a5, 0x20uLL), v13);
  v13.i32[0] = *(_DWORD *)(v16 - 2);
  int8x16_t v25 = vorrq_s8(v18, v13);
  v18.i32[0] = *(_DWORD *)(a3 - 2);
  v14.i32[0] = *(_DWORD *)(v17 - 2);
  int8x16_t v26 = vorrq_s8((int8x16_t)vshlq_n_s64(a7, 0x20uLL), v18);
  int8x16_t v27 = vorrq_s8((int8x16_t)vshlq_n_s64(a8, 0x20uLL), v14);
  v18.i32[0] = *(_DWORD *)(v19 - 2);
  int8x16_t v28 = vorrq_s8((int8x16_t)vshlq_n_s64(a9, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v20 - 2);
  int8x16_t v29 = vorrq_s8((int8x16_t)vshlq_n_s64(a10, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v21 - 2);
  int8x16_t v30 = vorrq_s8((int8x16_t)vshlq_n_s64(a11, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v22 - 2);
  int8x16_t v31 = vorrq_s8((int8x16_t)vshlq_n_s64(a12, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v23 - 2);
  int16x8_t v32 = (int16x8_t)vzip1q_s8(v25, (int8x16_t)0);
  int16x8_t v33 = (int16x8_t)vzip1q_s8(v26, (int8x16_t)0);
  int16x8_t v34 = (int16x8_t)vzip1q_s8(v27, (int8x16_t)0);
  int16x8_t v35 = (int16x8_t)vzip1q_s8(v28, (int8x16_t)0);
  int16x8_t v36 = (int16x8_t)vzip1q_s8(v29, (int8x16_t)0);
  int16x8_t v37 = (int16x8_t)vzip1q_s8(v30, (int8x16_t)0);
  int16x8_t v38 = (int16x8_t)vzip1q_s8(v31, (int8x16_t)0);
  int16x8_t v39 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v12, 0x20uLL), v18), (int8x16_t)0);
  v40.i64[0] = 0x4000400040004;
  v40.i64[1] = 0x4000400040004;
  v41.i64[0] = 0x14001400140014;
  v41.i64[1] = 0x14001400140014;
  int16x8_t v42 = vmulq_s16(v34, v41);
  int16x8_t v43 = vmulq_s16(v35, v40);
  int16x8_t v44 = vaddq_s16(vmlaq_s16(vmlaq_s16((int16x8_t)vzip1q_s8(v24, (int8x16_t)0), v32, v40), v33, v41), vaddq_s16(vaddq_s16(v42, v43), v36));
  LOWORD(v16) = *(unsigned __int8 *)(v16 + 6);
  v45.i64[0] = 0x10001000100010;
  v45.i64[1] = 0x10001000100010;
  __int16 v46 = *(unsigned __int8 *)(a3 + 6);
  LOWORD(v17) = *(unsigned __int8 *)(v17 + 6);
  int16x8_t v47 = vshlq_s16(vaddq_s16(v44, v45), v40);
  *(int8x8_t *)v47.i8 = vqmovun_s16(v47);
  LOWORD(v20) = *(unsigned __int8 *)(v20 + 6);
  LOWORD(v21) = *(unsigned __int8 *)(v21 + 6);
  LOWORD(v22) = *(unsigned __int8 *)(v22 + 6);
  __int16 v48 = 5 * *(unsigned __int8 *)(v19 + 6);
  LOWORD(v19) = v20 + *(unsigned __int8 *)(v15 + 6) - 5 * v16 + 20 * v46 + 20 * v17 - v48;
  LOWORD(v16) = v21 + v16 + 20 * v17 + 4 * v48 - 5 * (v20 + v46);
  LOWORD(v20) = 5 * v20;
  int16x8_t v49 = vmulq_s16(v35, v41);
  int16x8_t v50 = vmlaq_s16(vaddq_s16(vaddq_s16(v42, v32), vaddq_s16(v49, v37)), vaddq_s16(v36, v33), v40);
  int16x8_t v51 = vshlq_s16(vaddq_s16(v50, v45), v40);
  *(int8x8_t *)v51.i8 = vqmovun_s16(v51);
  int16x8_t v52 = vmulq_s16(v36, v41);
  int16x8_t v53 = vmlaq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v49, v33), v52), v38), vaddq_s16(v37, v34), v40);
  int16x8_t v54 = vshlq_s16(vaddq_s16(v53, v45), v40);
  *(int8x8_t *)v54.i8 = vqmovun_s16(v54);
  int16x8_t v55 = vaddq_s16(vmlaq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v43, v34), v52), v37, v41), v38, v40), v39);
  int16x8_t v56 = vshlq_s16(vaddq_s16(v55, v45), v40);
  *(int8x8_t *)v56.i8 = vqmovun_s16(v56);
  int8x16_t v57 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL);
  int8x16_t v58 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 4uLL);
  int8x16_t v59 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 6uLL);
  v59.i16[5] = v19;
  int32x4_t v60 = vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL), (int16x4_t)131067));
  int32x4_t v61 = vpaddq_s32(vmull_s16(*(int16x4_t *)v57.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v57, v57, 8uLL), (int16x4_t)131067));
  int32x4_t v62 = vpaddq_s32(vmull_s16(*(int16x4_t *)v58.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL), (int16x4_t)131067));
  int32x4_t v63 = vpaddq_s32(vmull_s16(*(int16x4_t *)v59.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL), (int16x4_t)131067));
  int32x4_t v64 = vzip1q_s32(v60, v62);
  int32x4_t v65 = vzip2q_s32(v60, v62);
  int32x4_t v66 = vzip1q_s32(v61, v63);
  int32x4_t v67 = vzip1q_s32(v65, vzip2q_s32(v61, v63));
  v61.i64[0] = 0x20000000200;
  v61.i64[1] = 0x20000000200;
  int32x4_t v68 = vaddq_s32(vaddq_s32(vzip2q_s32(v64, v66), vzip1q_s32(v64, v66)), vaddq_s32(v67, v61));
  v67.i64[0] = 0x900000009;
  v67.i64[1] = 0x900000009;
  int32x4_t v69 = vshlq_s32(v68, v67);
  int8x16_t v70 = vextq_s8((int8x16_t)v50, (int8x16_t)0, 2uLL);
  int8x16_t v71 = vextq_s8((int8x16_t)v50, (int8x16_t)0, 4uLL);
  int8x16_t v72 = vextq_s8((int8x16_t)v50, (int8x16_t)0, 6uLL);
  v72.i16[5] = v16;
  int32x4_t v73 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v50, (int8x16_t)v50, 8uLL), (int16x4_t)131067));
  int32x4_t v74 = vpaddq_s32(vmull_s16(*(int16x4_t *)v70.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v70, v70, 8uLL), (int16x4_t)131067));
  int32x4_t v75 = vpaddq_s32(vmull_s16(*(int16x4_t *)v71.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v71, v71, 8uLL), (int16x4_t)131067));
  int32x4_t v76 = vpaddq_s32(vmull_s16(*(int16x4_t *)v72.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v72, v72, 8uLL), (int16x4_t)131067));
  int32x4_t v77 = vzip1q_s32(v73, v75);
  int32x4_t v78 = vzip2q_s32(v73, v75);
  int32x4_t v79 = vzip1q_s32(v74, v76);
  int32x4_t v80 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v77, v79), vzip1q_s32(v77, v79)), vaddq_s32(vzip1q_s32(v78, vzip2q_s32(v74, v76)), v61)), v67);
  int8x16_t v81 = vextq_s8((int8x16_t)v53, (int8x16_t)0, 2uLL);
  int8x16_t v82 = vextq_s8((int8x16_t)v53, (int8x16_t)0, 4uLL);
  int8x16_t v83 = vextq_s8((int8x16_t)v53, (int8x16_t)0, 6uLL);
  v83.i16[5] = v22 + v46 + 4 * v48 + 4 * v20 - 5 * (v21 + v17);
  int32x4_t v84 = vpaddq_s32(vmull_s16(*(int16x4_t *)v53.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v53, (int8x16_t)v53, 8uLL), (int16x4_t)131067));
  int32x4_t v85 = vpaddq_s32(vmull_s16(*(int16x4_t *)v81.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL), (int16x4_t)131067));
  int32x4_t v86 = vpaddq_s32(vmull_s16(*(int16x4_t *)v82.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v82, v82, 8uLL), (int16x4_t)131067));
  int32x4_t v87 = vpaddq_s32(vmull_s16(*(int16x4_t *)v83.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v83, v83, 8uLL), (int16x4_t)131067));
  int32x4_t v88 = vzip1q_s32(v84, v86);
  int32x4_t v89 = vzip2q_s32(v84, v86);
  int32x4_t v90 = vzip1q_s32(v85, v87);
  int32x4_t v91 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v88, v90), vzip1q_s32(v88, v90)), vaddq_s32(vzip1q_s32(v89, vzip2q_s32(v85, v87)), v61)), v67);
  int8x16_t v92 = vextq_s8((int8x16_t)v55, (int8x16_t)0, 2uLL);
  int8x16_t v93 = vextq_s8((int8x16_t)v55, (int8x16_t)0, 4uLL);
  int8x16_t v94 = vextq_s8((int8x16_t)v55, (int8x16_t)0, 6uLL);
  v94.i16[5] = *(unsigned __int8 *)(v23 + 6) + v17 - v48 + 4 * v20 + 20 * v21 - 5 * v22;
  int32x4_t v95 = vpaddq_s32(vmull_s16(*(int16x4_t *)v55.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v55, (int8x16_t)v55, 8uLL), (int16x4_t)131067));
  int32x4_t v96 = vpaddq_s32(vmull_s16(*(int16x4_t *)v92.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v92, v92, 8uLL), (int16x4_t)131067));
  int32x4_t v97 = vpaddq_s32(vmull_s16(*(int16x4_t *)v93.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v93, v93, 8uLL), (int16x4_t)131067));
  int32x4_t v98 = vpaddq_s32(vmull_s16(*(int16x4_t *)v94.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v94, v94, 8uLL), (int16x4_t)131067));
  int32x4_t v99 = vzip1q_s32(v95, v97);
  int32x4_t v100 = vzip2q_s32(v95, v97);
  int32x4_t v101 = vzip1q_s32(v96, v98);
  int32x4_t v102 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v99, v101), vzip1q_s32(v99, v101)), vaddq_s32(vzip1q_s32(v100, vzip2q_s32(v96, v98)), v61)), v67);
  *(void *)&double result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v69), v69))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v47, (int8x16_t)xmmword_221A36830), (int8x16_t)0, 4uLL)).u64[0];
  *a1 = result;
  *(void *)((char *)a1 + a2) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v80), v80))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v51, (int8x16_t)xmmword_221A36830), (int8x16_t)0, 4uLL)).u64[0];
  uint64_t v104 = 2 * a2;
  *(void *)((char *)a1 + v104) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v91), v91))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v54, (int8x16_t)xmmword_221A36830), (int8x16_t)0, 4uLL)).u64[0];
  *(void *)((char *)a1 + v104 + a2) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v102), v102))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v56, (int8x16_t)xmmword_221A36830), (int8x16_t)0, 4uLL)).u64[0];
  return result;
}

double sub_2219CA32C(void *a1, unsigned int a2, uint64_t a3, int a4, double a5, double a6, double a7, double a8, double a9, double a10, int8x16_t a11, int8x16_t a12)
{
  int8x16_t v14 = (unsigned __int32 *)(a3 - 2 * a4);
  uint64_t v15 = (unsigned __int32 *)(a3 - a4);
  uint64_t v16 = (__int32 *)(a3 + 5 * a4);
  uint64_t v17 = (__int32 *)(a3 + 6 * a4);
  int8x16_t v19 = *(int8x16_t *)(a3 - 2);
  uint64_t v18 = a3 - 2;
  int8x16_t v20 = *(int8x16_t *)(v18 + a4);
  int8x16_t v21 = *(int8x16_t *)(v18 + 2 * a4);
  int8x16_t v22 = *(int8x16_t *)(v18 + 3 * a4);
  int8x16_t v23 = *(int8x16_t *)(v18 + 4 * a4);
  a11.i32[0] = *v14;
  a12.i32[0] = *v15;
  v12.i32[0] = *v16;
  v13.i32[0] = *v17;
  int16x8_t v24 = (int16x8_t)vzip1q_s8(a12, (int8x16_t)0);
  int16x8_t v25 = (int16x8_t)vzip1q_s8(vextq_s8(v19, v19, 2uLL), (int8x16_t)0);
  int16x8_t v26 = (int16x8_t)vzip1q_s8(vextq_s8(v20, v19, 2uLL), (int8x16_t)0);
  int16x8_t v27 = (int16x8_t)vzip1q_s8(vextq_s8(v21, v19, 2uLL), (int8x16_t)0);
  int16x8_t v28 = (int16x8_t)vzip1q_s8(vextq_s8(v22, v19, 2uLL), (int8x16_t)0);
  int16x8_t v29 = (int16x8_t)vzip1q_s8(vextq_s8(v23, v19, 2uLL), (int8x16_t)0);
  int16x8_t v30 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
  v31.i64[0] = 0x4000400040004;
  v31.i64[1] = 0x4000400040004;
  v32.i64[0] = 0x14001400140014;
  v32.i64[1] = 0x14001400140014;
  int16x8_t v33 = vmulq_s16(v27, v31);
  v34.i64[0] = 0x10001000100010;
  v34.i64[1] = 0x10001000100010;
  v35.i64[0] = 0x10001000100010;
  v35.i64[1] = 0x10001000100010;
  int16x8_t v36 = vmlaq_s16(v35, v26, v32);
  int16x8_t v37 = vaddq_s16(v36, v29);
  uint16x8_t v38 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(vmlaq_s16(v36, v25, v32), vaddq_s16(v33, v28)), (int16x8_t)vzip1q_s8(a11, (int8x16_t)0)), v24, v31), v31)));
  int16x8_t v39 = vmulq_s16(v27, v32);
  uint16x8_t v40 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(v37, v39), vaddq_s16(v28, v25), v31), v24), v31)));
  int16x8_t v41 = vmulq_s16(v28, v32);
  uint16x8_t v42 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v39, v25), v41), vaddq_s16(v29, v26), v31), vaddq_s16(v30, v34)), v31)));
  uint16x8_t v43 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v33, v26), v41), v29, v32), v30, v31), vaddq_s16((int16x8_t)vzip1q_s8(v13, (int8x16_t)0), v34)), v31)));
  int8x16_t v44 = vzip1q_s8(v20, (int8x16_t)0);
  int8x16_t v45 = vdupq_laneq_s8(v20, 8);
  int8x16_t v46 = vzip1q_s8(v21, (int8x16_t)0);
  int8x16_t v47 = vdupq_laneq_s8(v21, 8);
  int8x16_t v48 = vzip1q_s8(v22, (int8x16_t)0);
  int8x16_t v49 = vdupq_laneq_s8(v22, 8);
  int8x16_t v50 = vzip1q_s8(v23, (int8x16_t)0);
  int8x16_t v51 = vdupq_laneq_s8(v23, 8);
  int8x16_t v52 = vzip1q_s8(v44, (int8x16_t)0);
  v45.i8[1] = 0;
  int8x16_t v53 = vzip2q_s8(v44, (int8x16_t)0);
  int8x16_t v54 = vzip1q_s8(v46, (int8x16_t)0);
  int8x16_t v55 = vzip2q_s8(v46, (int8x16_t)0);
  v47.i8[1] = 0;
  int8x16_t v56 = vzip1q_s8(v48, (int8x16_t)0);
  int8x16_t v57 = vzip2q_s8(v48, (int8x16_t)0);
  v49.i8[1] = 0;
  int8x16_t v58 = vzip1q_s8(v50, (int8x16_t)0);
  v51.i8[1] = 0;
  int8x16_t v59 = vzip2q_s8(v50, (int8x16_t)0);
  int8x16_t v60 = vzip1q_s8(v52, v56);
  int8x16_t v61 = vzip2q_s8(v52, v56);
  int8x16_t v62 = vzip1q_s8(v53, v57);
  int8x16_t v63 = vzip2q_s8(v53, v57);
  int8x16_t v64 = vzip1q_s8(v45, v49);
  int8x16_t v65 = vzip1q_s8(v54, v58);
  int8x16_t v66 = vzip2q_s8(v54, v58);
  int8x16_t v67 = vzip1q_s8(v55, v59);
  int8x16_t v68 = vzip2q_s8(v55, v59);
  int8x16_t v69 = vzip1q_s8(v61, v66);
  int8x16_t v70 = vzip2q_s8(v61, v66);
  int8x16_t v71 = vzip1q_s8(v62, v67);
  int8x16_t v72 = vzip2q_s8(v62, v67);
  int8x16_t v73 = vzip1q_s8(v63, v68);
  int8x16_t v74 = vzip2q_s8(v63, v68);
  int8x16_t v75 = vzip1q_s8(v64, vzip1q_s8(v47, v51));
  int16x8_t v76 = (int16x8_t)vzip1q_s8(vzip1q_s8(v60, v65), (int8x16_t)0);
  int16x8_t v77 = (int16x8_t)vzip1q_s8(vzip2q_s8(v60, v65), (int8x16_t)0);
  int16x8_t v78 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
  int16x8_t v79 = (int16x8_t)vzip1q_s8(v70, (int8x16_t)0);
  int16x8_t v80 = (int16x8_t)vzip1q_s8(v71, (int8x16_t)0);
  int16x8_t v81 = (int16x8_t)vzip1q_s8(v72, (int8x16_t)0);
  int16x8_t v82 = (int16x8_t)vzip1q_s8(v73, (int8x16_t)0);
  int16x8_t v83 = (int16x8_t)vzip1q_s8(v74, (int8x16_t)0);
  int16x8_t v84 = vmulq_s16(v80, v31);
  v60.i64[0] = 0x10001000100010;
  v60.i64[1] = 0x10001000100010;
  int16x8_t v85 = (int16x8_t)vmlal_u8((uint16x8_t)v60, (uint8x8_t)vmovn_s16(v79), (uint8x8_t)0x1414141414141414);
  int16x8_t v86 = vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v85, vaddq_s16(v76, v81)), v77, v31), (uint8x8_t)vmovn_s16(v78), (uint8x8_t)0x1414141414141414), v84), v31);
  *(int8x8_t *)v86.i8 = vqmovun_s16(v86);
  *(int8x8_t *)v80.i8 = vmovn_s16(v80);
  int16x8_t v87 = vshlq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v85, vaddq_s16(v77, v82)), *(uint8x8_t *)v80.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v81, v78), v31), v31);
  *(int8x8_t *)v87.i8 = vqmovun_s16(v87);
  *(int8x8_t *)v81.i8 = vmovn_s16(v81);
  int16x8_t v88 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)v78, *(uint8x8_t *)v80.i8, (uint8x8_t)0x1414141414141414), v83), *(uint8x8_t *)v81.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v82, v79), v31), v34), v31);
  *(int8x8_t *)v88.i8 = vqmovun_s16(v88);
  int16x8_t v89 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v84, v79), (int16x8_t)vzip1q_s8(v75, (int8x16_t)0)), *(uint8x8_t *)v81.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v82), (uint8x8_t)0x1414141414141414), v83, v31), v34), v31);
  *(int8x8_t *)v89.i8 = vqmovun_s16(v89);
  int16x8_t v90 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v86, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v88, (int8x16_t)0));
  int16x8_t v91 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v87, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v89, (int8x16_t)0));
  int8x16_t v92 = (int8x16_t)vzip1q_s16(v90, v91);
  int8x16_t v93 = (int8x16_t)vzip2q_s16(v90, v91);
  *(void *)&double result = vrhaddq_u16((uint16x8_t)vextq_s8(v93, (int8x16_t)0, 8uLL), v43).u64[0];
  *a1 = vrhaddq_u16((uint16x8_t)v92, v38).u64[0];
  *(void *)((char *)a1 + a2) = vrhaddq_u16((uint16x8_t)vextq_s8(v92, (int8x16_t)0, 8uLL), v40).u64[0];
  uint64_t v95 = 2 * a2;
  *(void *)((char *)a1 + v95) = vrhaddq_u16((uint16x8_t)v93, v42).u64[0];
  *(double *)((char *)a1 + v95 + a2) = result;
  return result;
}

int16x8_t sub_2219CA608(void *a1, unsigned int a2, uint64_t a3, int a4)
{
  int8x16_t v5 = *(int8x16_t *)(a3 - 2);
  uint64_t v4 = a3 - 2;
  int8x16_t v6 = *(int8x16_t *)(v4 + a4);
  int8x16_t v7 = *(int8x16_t *)(v4 + 2 * a4);
  int8x16_t v8 = *(int8x16_t *)(v4 + 3 * a4);
  int8x16_t v9 = vdupq_laneq_s8(v5, 8);
  int8x16_t v10 = vzip1q_s8(v5, (int8x16_t)0);
  int8x16_t v11 = vzip1q_s8(v6, (int8x16_t)0);
  int8x16_t v12 = vdupq_laneq_s8(v6, 8);
  int8x16_t v13 = vdupq_laneq_s8(v7, 8);
  int8x16_t v14 = vzip1q_s8(v7, (int8x16_t)0);
  int8x16_t v15 = vzip1q_s8(v8, (int8x16_t)0);
  int8x16_t v16 = vdupq_laneq_s8(v8, 8);
  int8x16_t v17 = vzip1q_s8(v10, (int8x16_t)0);
  int8x16_t v18 = vzip2q_s8(v10, (int8x16_t)0);
  v9.i8[1] = 0;
  int8x16_t v19 = vzip1q_s8(v11, (int8x16_t)0);
  int8x16_t v20 = vzip2q_s8(v11, (int8x16_t)0);
  v12.i8[1] = 0;
  int8x16_t v21 = vzip1q_s8(v14, (int8x16_t)0);
  int8x16_t v22 = vzip2q_s8(v14, (int8x16_t)0);
  v13.i8[1] = 0;
  int8x16_t v23 = vzip1q_s8(v15, (int8x16_t)0);
  int8x16_t v24 = vzip2q_s8(v15, (int8x16_t)0);
  v16.i8[1] = 0;
  int8x16_t v25 = vzip1q_s8(v17, v21);
  int8x16_t v26 = vzip2q_s8(v17, v21);
  int8x16_t v27 = vzip1q_s8(v18, v22);
  int8x16_t v28 = vzip2q_s8(v18, v22);
  int8x16_t v29 = vzip1q_s8(v9, v13);
  int8x16_t v30 = vzip1q_s8(v19, v23);
  int8x16_t v31 = vzip2q_s8(v19, v23);
  int8x16_t v32 = vzip1q_s8(v20, v24);
  int8x16_t v33 = vzip2q_s8(v20, v24);
  int8x16_t v34 = vzip1q_s8(v26, v31);
  int8x16_t v35 = vzip2q_s8(v26, v31);
  int8x16_t v36 = vzip1q_s8(v27, v32);
  int16x8_t v37 = (int16x8_t)vzip2q_s8(v27, v32);
  int8x16_t v38 = vzip1q_s8(v28, v33);
  int8x16_t v39 = vzip2q_s8(v28, v33);
  int8x16_t v40 = vzip1q_s8(v29, vzip1q_s8(v12, v16));
  int16x8_t v41 = (int16x8_t)vzip1q_s8(vzip1q_s8(v25, v30), (int8x16_t)0);
  int16x8_t v42 = (int16x8_t)vzip1q_s8(vzip2q_s8(v25, v30), (int8x16_t)0);
  int16x8_t v43 = (int16x8_t)vzip1q_s8(v34, (int8x16_t)0);
  int16x8_t v44 = (int16x8_t)vzip1q_s8(v35, (int8x16_t)0);
  int16x8_t v45 = (int16x8_t)vzip1q_s8(v36, (int8x16_t)0);
  int16x8_t v46 = (int16x8_t)vzip1q_s8((int8x16_t)v37, (int8x16_t)0);
  int16x8_t v47 = (int16x8_t)vzip1q_s8(v38, (int8x16_t)0);
  int16x8_t v48 = (int16x8_t)vzip1q_s8(v39, (int8x16_t)0);
  v37.i64[0] = 0x4000400040004;
  v37.i64[1] = 0x4000400040004;
  int16x8_t v49 = vmulq_s16(v45, v37);
  v50.i64[0] = 0x10001000100010;
  v50.i64[1] = 0x10001000100010;
  v51.i64[0] = 0x10001000100010;
  v51.i64[1] = 0x10001000100010;
  int16x8_t v52 = (int16x8_t)vmlal_u8(v51, (uint8x8_t)vmovn_s16(v44), (uint8x8_t)0x1414141414141414);
  int16x8_t v53 = vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v52, vaddq_s16(v41, v46)), v42, v37), (uint8x8_t)vmovn_s16(v43), (uint8x8_t)0x1414141414141414), v49), v37);
  *(int8x8_t *)v53.i8 = vqmovun_s16(v53);
  *(int8x8_t *)v45.i8 = vmovn_s16(v45);
  int16x8_t v54 = vshlq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v52, vaddq_s16(v42, v47)), *(uint8x8_t *)v45.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v46, v43), v37), v37);
  *(int8x8_t *)v54.i8 = vqmovun_s16(v54);
  *(int8x8_t *)v46.i8 = vmovn_s16(v46);
  int16x8_t v55 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)v43, *(uint8x8_t *)v45.i8, (uint8x8_t)0x1414141414141414), v48), *(uint8x8_t *)v46.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v47, v44), v37), v50), v37);
  *(int8x8_t *)v55.i8 = vqmovun_s16(v55);
  int16x8_t v56 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v49, v44), (int16x8_t)vzip1q_s8(v40, (int8x16_t)0)), *(uint8x8_t *)v46.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v47), (uint8x8_t)0x1414141414141414), v48, v37), v50), v37);
  *(int8x8_t *)v56.i8 = vqmovun_s16(v56);
  int16x8_t v57 = (int16x8_t)vzip1q_s8((int8x16_t)v56, (int8x16_t)0);
  int16x8_t v58 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v53, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v55, (int8x16_t)0));
  int16x8_t v59 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v54, (int8x16_t)0), v57);
  int16x8_t v60 = vzip1q_s16(v58, v59);
  int16x8_t result = vzip2q_s16(v58, v59);
  *a1 = v60.i64[0];
  *(void *)((char *)a1 + a2) = v60.i64[1];
  uint64_t v62 = 2 * a2;
  *(void *)((char *)a1 + v62) = result.i64[0];
  *(void *)((char *)a1 + v62 + a2) = result.i64[1];
  return result;
}

double sub_2219CA7CC(void *a1, unsigned int a2, uint64_t a3, int a4)
{
  uint64_t v4 = a3 - 2 * a4;
  int8x16_t v5 = *(int8x16_t *)(v4 - 2);
  int8x16_t v6 = vzip1q_s8(v5, (int8x16_t)0);
  int8x16_t v7 = vextq_s8(v6, (int8x16_t)0, 2uLL);
  int8x16_t v8 = vextq_s8(v6, (int8x16_t)0, 4uLL);
  int8x16_t v9 = vzip1q_s8(vextq_s8(v5, v5, 3uLL), (int8x16_t)0);
  int32x4_t v10 = vpaddq_s32(vmull_s16(*(int16x4_t *)v6.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL), (int16x4_t)131067));
  int8x16_t v11 = (int8x16_t *)(v4 - 2 + a4);
  int32x4_t v12 = vpaddq_s32(vmull_s16(*(int16x4_t *)v7.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL), (int16x4_t)131067));
  int8x16_t v13 = *v11;
  int8x16_t v14 = (int8x16_t *)((char *)v11 + a4);
  int8x16_t v15 = *v14;
  int8x16_t v16 = (int8x16_t *)((char *)v14 + a4);
  int32x4_t v17 = vpaddq_s32(vmull_s16(*(int16x4_t *)v8.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL), (int16x4_t)131067));
  int8x16_t v18 = *v16;
  int8x16_t v19 = (int8x16_t *)((char *)v16 + a4);
  int8x16_t v20 = *v19;
  int8x16_t v21 = (int8x16_t *)((char *)v19 + a4);
  int32x4_t v22 = vpaddq_s32(vmull_s16(*(int16x4_t *)v9.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL), (int16x4_t)131067));
  int8x16_t v23 = *v21;
  int32x4_t v24 = vzip1q_s32(v10, v17);
  int8x16_t v25 = (int8x16_t *)((char *)v21 + a4);
  int32x4_t v26 = vzip2q_s32(v10, v17);
  int8x16_t v27 = *v25;
  int32x4_t v28 = vzip1q_s32(v12, v22);
  int8x16_t v29 = (int8x16_t *)((char *)v25 + a4);
  int32x4_t v30 = vzip2q_s32(v12, v22);
  int32x4_t v31 = vzip1q_s32(v24, v28);
  int32x4_t v32 = vzip2q_s32(v24, v28);
  int8x16_t v33 = *(int8x16_t *)((char *)v29 + a4);
  int32x4_t v34 = vzip1q_s32(v26, v30);
  int8x16_t v35 = vzip1q_s8(v13, (int8x16_t)0);
  int8x16_t v36 = vextq_s8(v35, (int8x16_t)0, 2uLL);
  int8x16_t v37 = vextq_s8(v35, (int8x16_t)0, 4uLL);
  int8x16_t v38 = vzip1q_s8(vextq_s8(v13, v35, 3uLL), (int8x16_t)0);
  int32x4_t v39 = vpaddq_s32(vmull_s16(*(int16x4_t *)v35.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v35, v35, 8uLL), (int16x4_t)131067));
  int32x4_t v40 = vpaddq_s32(vmull_s16(*(int16x4_t *)v36.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v36, v36, 8uLL), (int16x4_t)131067));
  int32x4_t v41 = vpaddq_s32(vmull_s16(*(int16x4_t *)v37.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v37, v37, 8uLL), (int16x4_t)131067));
  int32x4_t v42 = vpaddq_s32(vmull_s16(*(int16x4_t *)v38.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL), (int16x4_t)131067));
  int32x4_t v43 = vzip1q_s32(v39, v41);
  int32x4_t v44 = vzip2q_s32(v39, v41);
  int32x4_t v45 = vzip1q_s32(v40, v42);
  int32x4_t v46 = vaddq_s32(vaddq_s32(vzip1q_s32(v43, v45), vzip2q_s32(v43, v45)), vzip1q_s32(v44, vzip2q_s32(v40, v42)));
  int8x16_t v47 = vzip1q_s8(v15, (int8x16_t)0);
  int8x16_t v48 = vextq_s8(v47, (int8x16_t)0, 2uLL);
  int8x16_t v49 = vextq_s8(v47, (int8x16_t)0, 4uLL);
  int8x16_t v50 = vzip1q_s8(vextq_s8(v15, v47, 3uLL), (int8x16_t)0);
  int32x4_t v51 = vpaddq_s32(vmull_s16(*(int16x4_t *)v47.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL), (int16x4_t)131067));
  int32x4_t v52 = vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)131067));
  int32x4_t v53 = vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)131067));
  int32x4_t v54 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)131067));
  int32x4_t v55 = vzip1q_s32(v51, v53);
  int32x4_t v56 = vzip2q_s32(v51, v53);
  int32x4_t v57 = vzip1q_s32(v52, v54);
  int32x4_t v58 = vaddq_s32(vaddq_s32(vzip1q_s32(v55, v57), vzip2q_s32(v55, v57)), vzip1q_s32(v56, vzip2q_s32(v52, v54)));
  v59.i64[0] = 0x1000000010;
  v59.i64[1] = 0x1000000010;
  v60.i64[0] = 0x400000004;
  v60.i64[1] = 0x400000004;
  int32x4_t v61 = vshlq_s32(vaddq_s32(v58, v59), v60);
  int8x16_t v62 = (int8x16_t)vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v61), v61)));
  int8x16_t v63 = vzip1q_s8(v18, (int8x16_t)0);
  int8x16_t v64 = vextq_s8(v63, (int8x16_t)0, 2uLL);
  int8x16_t v65 = vextq_s8(v63, (int8x16_t)0, 4uLL);
  int8x16_t v66 = vzip1q_s8(vextq_s8(v18, v62, 3uLL), (int8x16_t)0);
  int32x4_t v67 = vpaddq_s32(vmull_s16(*(int16x4_t *)v63.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v63, v63, 8uLL), (int16x4_t)131067));
  int32x4_t v68 = vpaddq_s32(vmull_s16(*(int16x4_t *)v64.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL), (int16x4_t)131067));
  int32x4_t v69 = vpaddq_s32(vmull_s16(*(int16x4_t *)v65.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v65, v65, 8uLL), (int16x4_t)131067));
  int32x4_t v70 = vpaddq_s32(vmull_s16(*(int16x4_t *)v66.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL), (int16x4_t)131067));
  int32x4_t v71 = vzip1q_s32(v67, v69);
  int32x4_t v72 = vzip2q_s32(v67, v69);
  int32x4_t v73 = vzip1q_s32(v68, v70);
  int32x4_t v74 = vaddq_s32(vaddq_s32(vzip1q_s32(v71, v73), vzip2q_s32(v71, v73)), vzip1q_s32(v72, vzip2q_s32(v68, v70)));
  int32x4_t v75 = vshlq_s32(vaddq_s32(v74, v59), v60);
  int8x16_t v76 = vzip1q_s8(v20, (int8x16_t)0);
  int8x16_t v77 = vextq_s8(v76, (int8x16_t)0, 2uLL);
  int8x16_t v78 = vextq_s8(v76, (int8x16_t)0, 4uLL);
  int8x16_t v79 = vzip1q_s8(vextq_s8(v20, v62, 3uLL), (int8x16_t)0);
  int32x4_t v80 = vpaddq_s32(vmull_s16(*(int16x4_t *)v76.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL), (int16x4_t)131067));
  int32x4_t v81 = vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)131067));
  int32x4_t v82 = vpaddq_s32(vmull_s16(*(int16x4_t *)v78.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), (int16x4_t)131067));
  int32x4_t v83 = vpaddq_s32(vmull_s16(*(int16x4_t *)v79.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL), (int16x4_t)131067));
  int32x4_t v84 = vzip1q_s32(v80, v82);
  int32x4_t v85 = vzip2q_s32(v80, v82);
  int32x4_t v86 = vzip1q_s32(v81, v83);
  int32x4_t v87 = vaddq_s32(vaddq_s32(vzip1q_s32(v84, v86), vzip2q_s32(v84, v86)), vzip1q_s32(v85, vzip2q_s32(v81, v83)));
  int32x4_t v88 = vshlq_s32(vaddq_s32(v87, v59), v60);
  int8x16_t v89 = vzip1q_s8(v23, (int8x16_t)0);
  int8x16_t v90 = vextq_s8(v89, (int8x16_t)0, 2uLL);
  int8x16_t v91 = vextq_s8(v89, (int8x16_t)0, 4uLL);
  int8x16_t v92 = vzip1q_s8(vextq_s8(v23, v62, 3uLL), (int8x16_t)0);
  int32x4_t v93 = vpaddq_s32(vmull_s16(*(int16x4_t *)v89.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v89, v89, 8uLL), (int16x4_t)131067));
  int32x4_t v94 = vpaddq_s32(vmull_s16(*(int16x4_t *)v90.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v90, v90, 8uLL), (int16x4_t)131067));
  int32x4_t v95 = vpaddq_s32(vmull_s16(*(int16x4_t *)v91.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v91, v91, 8uLL), (int16x4_t)131067));
  int32x4_t v96 = vpaddq_s32(vmull_s16(*(int16x4_t *)v92.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v92, v92, 8uLL), (int16x4_t)131067));
  int32x4_t v97 = vzip1q_s32(v93, v95);
  int32x4_t v98 = vzip2q_s32(v93, v95);
  int32x4_t v99 = vzip1q_s32(v94, v96);
  int32x4_t v100 = vaddq_s32(vaddq_s32(vzip1q_s32(v97, v99), vzip2q_s32(v97, v99)), vzip1q_s32(v98, vzip2q_s32(v94, v96)));
  int32x4_t v101 = vshlq_s32(vaddq_s32(v100, v59), v60);
  int8x16_t v102 = vzip1q_s8(v27, (int8x16_t)0);
  int8x16_t v103 = vextq_s8(v102, (int8x16_t)0, 2uLL);
  int8x16_t v104 = vextq_s8(v102, (int8x16_t)0, 4uLL);
  int8x16_t v105 = vzip1q_s8(vextq_s8(v27, v62, 3uLL), (int8x16_t)0);
  int32x4_t v106 = vpaddq_s32(vmull_s16(*(int16x4_t *)v102.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v102, v102, 8uLL), (int16x4_t)131067));
  int32x4_t v107 = vpaddq_s32(vmull_s16(*(int16x4_t *)v103.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v103, v103, 8uLL), (int16x4_t)131067));
  int32x4_t v108 = vpaddq_s32(vmull_s16(*(int16x4_t *)v104.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v104, v104, 8uLL), (int16x4_t)131067));
  int32x4_t v109 = vpaddq_s32(vmull_s16(*(int16x4_t *)v105.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v105, v105, 8uLL), (int16x4_t)131067));
  int32x4_t v110 = vzip1q_s32(v106, v108);
  int32x4_t v111 = vzip2q_s32(v106, v108);
  int32x4_t v112 = vzip1q_s32(v107, v109);
  int32x4_t v113 = vaddq_s32(vaddq_s32(vzip1q_s32(v110, v112), vzip2q_s32(v110, v112)), vzip1q_s32(v111, vzip2q_s32(v107, v109)));
  int8x16_t v114 = vzip1q_s8(*v29, (int8x16_t)0);
  int8x16_t v115 = vextq_s8(v114, (int8x16_t)0, 2uLL);
  int8x16_t v116 = vextq_s8(v114, (int8x16_t)0, 4uLL);
  int8x16_t v117 = vzip1q_s8(vextq_s8(*v29, v62, 3uLL), (int8x16_t)0);
  int32x4_t v118 = vpaddq_s32(vmull_s16(*(int16x4_t *)v114.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v114, v114, 8uLL), (int16x4_t)131067));
  int32x4_t v119 = vpaddq_s32(vmull_s16(*(int16x4_t *)v115.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v115, v115, 8uLL), (int16x4_t)131067));
  int32x4_t v120 = vpaddq_s32(vmull_s16(*(int16x4_t *)v116.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v116, v116, 8uLL), (int16x4_t)131067));
  int32x4_t v121 = vpaddq_s32(vmull_s16(*(int16x4_t *)v117.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v117, v117, 8uLL), (int16x4_t)131067));
  int32x4_t v122 = vzip1q_s32(v118, v120);
  int32x4_t v123 = vzip2q_s32(v118, v120);
  int32x4_t v124 = vzip1q_s32(v119, v121);
  int32x4_t v125 = vaddq_s32(vaddq_s32(vzip1q_s32(v122, v124), vzip2q_s32(v122, v124)), vzip1q_s32(v123, vzip2q_s32(v119, v121)));
  int8x16_t v126 = vzip1q_s8(v33, (int8x16_t)0);
  int8x16_t v127 = vextq_s8(v126, (int8x16_t)0, 2uLL);
  int8x16_t v128 = vextq_s8(v126, (int8x16_t)0, 4uLL);
  int8x16_t v129 = vzip1q_s8(vextq_s8(v33, v62, 3uLL), (int8x16_t)0);
  int32x4_t v130 = vpaddq_s32(vmull_s16(*(int16x4_t *)v126.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v126, v126, 8uLL), (int16x4_t)131067));
  int32x4_t v131 = vpaddq_s32(vmull_s16(*(int16x4_t *)v127.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v127, v127, 8uLL), (int16x4_t)131067));
  int32x4_t v132 = vpaddq_s32(vmull_s16(*(int16x4_t *)v128.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v128, v128, 8uLL), (int16x4_t)131067));
  int32x4_t v133 = vpaddq_s32(vmull_s16(*(int16x4_t *)v129.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v129, v129, 8uLL), (int16x4_t)131067));
  int32x4_t v134 = vzip1q_s32(v130, v132);
  int32x4_t v135 = vzip1q_s32(v131, v133);
  int32x4_t v136 = vzip2q_s32(v131, v133);
  int32x4_t v137 = vzip1q_s32(v134, v135);
  int32x4_t v138 = vzip2q_s32(v134, v135);
  int32x4_t v139 = vzip1q_s32(vzip2q_s32(v130, v132), v136);
  v136.i64[0] = 0xFFFFFFFFLL;
  v136.i64[1] = 0xFFFFFFFFLL;
  uint64x2_t v140 = (uint64x2_t)vdupq_n_s64(0xFFFFFFE0uLL);
  uint32x2_t v141 = (uint32x2_t)vzip1_s32(*(int32x2_t *)v58.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v58, (int8x16_t)v58, 8uLL));
  uint32x2_t v142 = (uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v58, v140));
  *(int32x2_t *)v97.i8 = vzip1_s32(*(int32x2_t *)v74.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v74, (int8x16_t)v74, 8uLL));
  uint32x2_t v143 = (uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v74, v140));
  uint32x2_t v144 = (uint32x2_t)vzip1_s32(*(int32x2_t *)v87.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v87, (int8x16_t)v87, 8uLL));
  uint32x2_t v145 = (uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v87, v140));
  int32x4_t v146 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v144, (uint32x2_t)0x400000004), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v145, (uint32x2_t)0x400000004), 0x20uLL));
  v87.i64[0] = 0x20000000200;
  v87.i64[1] = 0x20000000200;
  int32x4_t v147 = vaddq_s32((int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v97.i8, (uint32x2_t)0x1400000014), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v143, (uint32x2_t)0x1400000014), 0x20uLL)), v87);
  int32x4_t v148 = vaddq_s32(vaddq_s32(v147, vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v32, v31), v34), v100), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32((uint32x2_t)vzip1_s32(*(int32x2_t *)v46.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v46, (int8x16_t)v46, 8uLL)), (uint32x2_t)0x400000004), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32((uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64(
                                                                                           (uint64x2_t)v46,
                                                                                           v140)),
                                                        (uint32x2_t)0x400000004),
                                           0x20uLL))),
               (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v141, (uint32x2_t)0x1400000014), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v142, (uint32x2_t)0x1400000014), 0x20uLL)))), v146);
  v31.i64[0] = 0x900000009;
  v31.i64[1] = 0x900000009;
  int32x4_t v149 = vshlq_s32(v148, v31);
  int32x4_t v150 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v141, (uint32x2_t)0x400000004), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v142, (uint32x2_t)0x400000004), 0x20uLL));
  int32x4_t v151 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v144, (uint32x2_t)0x1400000014), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v145, (uint32x2_t)0x1400000014), 0x20uLL));
  uint32x2_t v152 = (uint32x2_t)vzip1_s32(*(int32x2_t *)v100.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v100, (int8x16_t)v100, 8uLL));
  *(int32x2_t *)v100.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v100, v140));
  int32x4_t v153 = vshlq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v147, vaddq_s32(vaddq_s32(v46, v113), v150)), v151), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v152, (uint32x2_t)0x400000004), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v100.i8, (uint32x2_t)0x400000004), 0x20uLL))), v31);
  int32x4_t v154 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v97.i8, (uint32x2_t)0x400000004), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v143, (uint32x2_t)0x400000004), 0x20uLL));
  int32x4_t v155 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v152, (uint32x2_t)0x1400000014), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v100.i8, (uint32x2_t)0x1400000014), 0x20uLL));
  *(int32x2_t *)v97.i8 = vzip1_s32(*(int32x2_t *)v113.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v113, (int8x16_t)v113, 8uLL));
  *(int32x2_t *)v113.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v113, v140));
  int32x4_t v156 = vshlq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v151, vaddq_s32(vaddq_s32(v58, v125), v154)), v155), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v97.i8, (uint32x2_t)0x400000004), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v113.i8, (uint32x2_t)0x400000004), 0x20uLL))), v87), v31);
  *a1 = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v149), v149))), (uint16x8_t)v62).u64[0];
  *(void *)((char *)a1 + a2) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v153), v153))), vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v75), v75)))).u64[0];
  uint64_t v157 = 2 * a2;
  int32x4_t v158 = vshlq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v146, vaddq_s32(vaddq_s32(vaddq_s32(v74, v138), v137), v139)), v155), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v97.i8, (uint32x2_t)0x1400000014), (int8x16_t)v136), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v113.i8, (uint32x2_t)0x1400000014), 0x20uLL))), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32((uint32x2_t)vzip1_s32(*(int32x2_t *)v125.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v125, (int8x16_t)v125,
                                                                                  8uLL)),
                                           (uint32x2_t)0x400000004),
                              (int8x16_t)v136),
                            (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32((uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v125, v140)), (uint32x2_t)0x400000004), 0x20uLL))), v87), v31);
  *(void *)((char *)a1 + v157) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v156), v156))), vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v88), v88)))).u64[0];
  *(void *)&double result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v158), v158))), vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v101), v101)))).u64[0];
  *(double *)((char *)a1 + v157 + a2) = result;
  return result;
}

double sub_2219CAF3C(void *a1, unsigned int a2, uint64_t a3, int a4)
{
  uint64_t v4 = a3 - 2 * a4;
  int8x16_t v5 = *(int8x16_t *)(v4 - 2);
  int8x16_t v6 = vzip1q_s8(v5, (int8x16_t)0);
  int8x16_t v7 = vextq_s8(v6, (int8x16_t)0, 2uLL);
  int8x16_t v8 = vextq_s8(v6, (int8x16_t)0, 4uLL);
  int8x16_t v9 = vzip1q_s8(vextq_s8(v5, v5, 3uLL), (int8x16_t)0);
  int32x4_t v10 = vpaddq_s32(vmull_s16(*(int16x4_t *)v6.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL), (int16x4_t)131067));
  int8x16_t v11 = (int8x16_t *)(v4 - 2 + a4);
  int32x4_t v12 = vpaddq_s32(vmull_s16(*(int16x4_t *)v7.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL), (int16x4_t)131067));
  int8x16_t v13 = *v11;
  int8x16_t v14 = (int8x16_t *)((char *)v11 + a4);
  int8x16_t v15 = *v14;
  int8x16_t v16 = (int8x16_t *)((char *)v14 + a4);
  int32x4_t v17 = vpaddq_s32(vmull_s16(*(int16x4_t *)v8.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL), (int16x4_t)131067));
  int8x16_t v18 = *v16;
  int8x16_t v19 = (int8x16_t *)((char *)v16 + a4);
  int8x16_t v20 = *v19;
  int8x16_t v21 = (int8x16_t *)((char *)v19 + a4);
  int32x4_t v22 = vpaddq_s32(vmull_s16(*(int16x4_t *)v9.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL), (int16x4_t)131067));
  int8x16_t v23 = *v21;
  int32x4_t v24 = vzip1q_s32(v10, v17);
  int8x16_t v25 = (int8x16_t *)((char *)v21 + a4);
  int32x4_t v26 = vzip2q_s32(v10, v17);
  int8x16_t v27 = *v25;
  int32x4_t v28 = vzip1q_s32(v12, v22);
  int8x16_t v29 = (int8x16_t *)((char *)v25 + a4);
  int32x4_t v30 = vzip2q_s32(v12, v22);
  int32x4_t v31 = vzip1q_s32(v24, v28);
  int32x4_t v32 = vzip2q_s32(v24, v28);
  int8x16_t v33 = *(int8x16_t *)((char *)v29 + a4);
  int32x4_t v34 = vzip1q_s32(v26, v30);
  int8x16_t v35 = vzip1q_s8(v13, (int8x16_t)0);
  int8x16_t v36 = vextq_s8(v35, (int8x16_t)0, 2uLL);
  int8x16_t v37 = vextq_s8(v35, (int8x16_t)0, 4uLL);
  int8x16_t v38 = vzip1q_s8(vextq_s8(v13, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  int32x4_t v39 = vpaddq_s32(vmull_s16(*(int16x4_t *)v35.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v35, v35, 8uLL), (int16x4_t)131067));
  int32x4_t v40 = vpaddq_s32(vmull_s16(*(int16x4_t *)v36.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v36, v36, 8uLL), (int16x4_t)131067));
  int32x4_t v41 = vpaddq_s32(vmull_s16(*(int16x4_t *)v37.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v37, v37, 8uLL), (int16x4_t)131067));
  int32x4_t v42 = vpaddq_s32(vmull_s16(*(int16x4_t *)v38.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL), (int16x4_t)131067));
  int32x4_t v43 = vzip1q_s32(v39, v41);
  int32x4_t v44 = vzip2q_s32(v39, v41);
  int32x4_t v45 = vzip1q_s32(v40, v42);
  int32x4_t v46 = vaddq_s32(vaddq_s32(vzip1q_s32(v43, v45), vzip2q_s32(v43, v45)), vzip1q_s32(v44, vzip2q_s32(v40, v42)));
  int8x16_t v47 = vzip1q_s8(v15, (int8x16_t)0);
  int8x16_t v48 = vextq_s8(v47, (int8x16_t)0, 2uLL);
  int8x16_t v49 = vextq_s8(v47, (int8x16_t)0, 4uLL);
  int8x16_t v50 = vzip1q_s8(vextq_s8(v15, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  int32x4_t v51 = vpaddq_s32(vmull_s16(*(int16x4_t *)v47.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL), (int16x4_t)131067));
  int32x4_t v52 = vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)131067));
  int32x4_t v53 = vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)131067));
  int32x4_t v54 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)131067));
  int32x4_t v55 = vzip1q_s32(v51, v53);
  int32x4_t v56 = vzip2q_s32(v51, v53);
  int32x4_t v57 = vzip1q_s32(v52, v54);
  int32x4_t v58 = vaddq_s32(vaddq_s32(vzip1q_s32(v55, v57), vzip2q_s32(v55, v57)), vzip1q_s32(v56, vzip2q_s32(v52, v54)));
  int8x16_t v59 = vzip1q_s8(v18, (int8x16_t)0);
  int8x16_t v60 = vextq_s8(v59, (int8x16_t)0, 2uLL);
  int8x16_t v61 = vextq_s8(v59, (int8x16_t)0, 4uLL);
  int8x16_t v62 = vzip1q_s8(vextq_s8(v18, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  int32x4_t v63 = vpaddq_s32(vmull_s16(*(int16x4_t *)v59.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL), (int16x4_t)131067));
  int32x4_t v64 = vpaddq_s32(vmull_s16(*(int16x4_t *)v60.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v60, v60, 8uLL), (int16x4_t)131067));
  int32x4_t v65 = vpaddq_s32(vmull_s16(*(int16x4_t *)v61.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL), (int16x4_t)131067));
  int32x4_t v66 = vpaddq_s32(vmull_s16(*(int16x4_t *)v62.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v62, v62, 8uLL), (int16x4_t)131067));
  int32x4_t v67 = vzip1q_s32(v63, v65);
  int32x4_t v68 = vzip2q_s32(v63, v65);
  int32x4_t v69 = vzip1q_s32(v64, v66);
  int32x4_t v70 = vaddq_s32(vaddq_s32(vzip1q_s32(v67, v69), vzip2q_s32(v67, v69)), vzip1q_s32(v68, vzip2q_s32(v64, v66)));
  v71.i64[0] = 0x1000000010;
  v71.i64[1] = 0x1000000010;
  v72.i64[0] = 0x400000004;
  v72.i64[1] = 0x400000004;
  int32x4_t v73 = vshlq_s32(vaddq_s32(v70, v71), v72);
  int8x16_t v74 = vzip1q_s8(v20, (int8x16_t)0);
  int8x16_t v75 = vextq_s8(v74, (int8x16_t)0, 2uLL);
  int8x16_t v76 = vextq_s8(v74, (int8x16_t)0, 4uLL);
  int8x16_t v77 = vzip1q_s8(vextq_s8(v20, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  int32x4_t v78 = vpaddq_s32(vmull_s16(*(int16x4_t *)v74.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v74, v74, 8uLL), (int16x4_t)131067));
  int32x4_t v79 = vpaddq_s32(vmull_s16(*(int16x4_t *)v75.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL), (int16x4_t)131067));
  int32x4_t v80 = vpaddq_s32(vmull_s16(*(int16x4_t *)v76.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL), (int16x4_t)131067));
  int32x4_t v81 = vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)131067));
  int32x4_t v82 = vzip1q_s32(v78, v80);
  int32x4_t v83 = vzip2q_s32(v78, v80);
  int32x4_t v84 = vzip1q_s32(v79, v81);
  int32x4_t v85 = vaddq_s32(vaddq_s32(vzip1q_s32(v82, v84), vzip2q_s32(v82, v84)), vzip1q_s32(v83, vzip2q_s32(v79, v81)));
  int32x4_t v86 = vshlq_s32(vaddq_s32(v85, v71), v72);
  int8x16_t v87 = vzip1q_s8(v23, (int8x16_t)0);
  int8x16_t v88 = vextq_s8(v87, (int8x16_t)0, 2uLL);
  int8x16_t v89 = vextq_s8(v87, (int8x16_t)0, 4uLL);
  int8x16_t v90 = vzip1q_s8(vextq_s8(v23, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  int32x4_t v91 = vpaddq_s32(vmull_s16(*(int16x4_t *)v87.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v87, v87, 8uLL), (int16x4_t)131067));
  int32x4_t v92 = vpaddq_s32(vmull_s16(*(int16x4_t *)v88.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v88, v88, 8uLL), (int16x4_t)131067));
  int32x4_t v93 = vpaddq_s32(vmull_s16(*(int16x4_t *)v89.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v89, v89, 8uLL), (int16x4_t)131067));
  int32x4_t v94 = vpaddq_s32(vmull_s16(*(int16x4_t *)v90.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v90, v90, 8uLL), (int16x4_t)131067));
  int32x4_t v95 = vzip1q_s32(v91, v93);
  int32x4_t v96 = vzip2q_s32(v91, v93);
  int32x4_t v97 = vzip1q_s32(v92, v94);
  int32x4_t v98 = vaddq_s32(vaddq_s32(vzip1q_s32(v95, v97), vzip2q_s32(v95, v97)), vzip1q_s32(v96, vzip2q_s32(v92, v94)));
  int32x4_t v99 = vshlq_s32(vaddq_s32(v98, v71), v72);
  int8x16_t v100 = vzip1q_s8(v27, (int8x16_t)0);
  int8x16_t v101 = vextq_s8(v100, (int8x16_t)0, 2uLL);
  int8x16_t v102 = vextq_s8(v100, (int8x16_t)0, 4uLL);
  int8x16_t v103 = vzip1q_s8(vextq_s8(v27, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  int32x4_t v104 = vpaddq_s32(vmull_s16(*(int16x4_t *)v100.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v100, v100, 8uLL), (int16x4_t)131067));
  int32x4_t v105 = vpaddq_s32(vmull_s16(*(int16x4_t *)v101.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v101, v101, 8uLL), (int16x4_t)131067));
  int32x4_t v106 = vpaddq_s32(vmull_s16(*(int16x4_t *)v102.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v102, v102, 8uLL), (int16x4_t)131067));
  int32x4_t v107 = vpaddq_s32(vmull_s16(*(int16x4_t *)v103.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v103, v103, 8uLL), (int16x4_t)131067));
  int32x4_t v108 = vzip1q_s32(v104, v106);
  int32x4_t v109 = vzip2q_s32(v104, v106);
  int32x4_t v110 = vzip1q_s32(v105, v107);
  int32x4_t v111 = vaddq_s32(vaddq_s32(vzip1q_s32(v108, v110), vzip2q_s32(v108, v110)), vzip1q_s32(v109, vzip2q_s32(v105, v107)));
  int32x4_t v112 = vshlq_s32(vaddq_s32(v111, v71), v72);
  int8x16_t v113 = vzip1q_s8(*v29, (int8x16_t)0);
  int8x16_t v114 = vextq_s8(v113, (int8x16_t)0, 2uLL);
  int8x16_t v115 = vextq_s8(v113, (int8x16_t)0, 4uLL);
  int8x16_t v116 = vzip1q_s8(vextq_s8(*v29, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  int32x4_t v117 = vpaddq_s32(vmull_s16(*(int16x4_t *)v113.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v113, v113, 8uLL), (int16x4_t)131067));
  int32x4_t v118 = vpaddq_s32(vmull_s16(*(int16x4_t *)v114.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v114, v114, 8uLL), (int16x4_t)131067));
  int32x4_t v119 = vpaddq_s32(vmull_s16(*(int16x4_t *)v115.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v115, v115, 8uLL), (int16x4_t)131067));
  int32x4_t v120 = vpaddq_s32(vmull_s16(*(int16x4_t *)v116.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v116, v116, 8uLL), (int16x4_t)131067));
  int32x4_t v121 = vzip1q_s32(v117, v119);
  int32x4_t v122 = vzip2q_s32(v117, v119);
  int32x4_t v123 = vzip1q_s32(v118, v120);
  int32x4_t v124 = vaddq_s32(vaddq_s32(vzip1q_s32(v121, v123), vzip2q_s32(v121, v123)), vzip1q_s32(v122, vzip2q_s32(v118, v120)));
  int8x16_t v125 = vzip1q_s8(v33, (int8x16_t)0);
  int8x16_t v126 = vextq_s8(v125, (int8x16_t)0, 2uLL);
  int8x16_t v127 = vextq_s8(v125, (int8x16_t)0, 4uLL);
  int8x16_t v128 = vzip1q_s8(vextq_s8(v33, (int8x16_t)v31, 3uLL), (int8x16_t)0);
  int32x4_t v129 = vpaddq_s32(vmull_s16(*(int16x4_t *)v125.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v125, v125, 8uLL), (int16x4_t)131067));
  int32x4_t v130 = vpaddq_s32(vmull_s16(*(int16x4_t *)v126.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v126, v126, 8uLL), (int16x4_t)131067));
  int32x4_t v131 = vpaddq_s32(vmull_s16(*(int16x4_t *)v127.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v127, v127, 8uLL), (int16x4_t)131067));
  int32x4_t v132 = vpaddq_s32(vmull_s16(*(int16x4_t *)v128.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v128, v128, 8uLL), (int16x4_t)131067));
  int32x4_t v133 = vzip1q_s32(v129, v131);
  int32x4_t v134 = vzip1q_s32(v130, v132);
  int32x4_t v135 = vzip2q_s32(v130, v132);
  int32x4_t v136 = vzip1q_s32(v133, v134);
  int32x4_t v137 = vzip2q_s32(v133, v134);
  int32x4_t v138 = vzip1q_s32(vzip2q_s32(v129, v131), v135);
  v135.i64[0] = 0xFFFFFFFFLL;
  v135.i64[1] = 0xFFFFFFFFLL;
  uint64x2_t v139 = (uint64x2_t)vdupq_n_s64(0xFFFFFFE0uLL);
  uint32x2_t v140 = (uint32x2_t)vzip1_s32(*(int32x2_t *)v58.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v58, (int8x16_t)v58, 8uLL));
  uint32x2_t v141 = (uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v58, v139));
  *(int32x2_t *)v108.i8 = vzip1_s32(*(int32x2_t *)v70.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v70, (int8x16_t)v70, 8uLL));
  uint32x2_t v142 = (uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v70, v139));
  uint32x2_t v143 = (uint32x2_t)vzip1_s32(*(int32x2_t *)v85.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v85, (int8x16_t)v85, 8uLL));
  uint32x2_t v144 = (uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v85, v139));
  int32x4_t v145 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v143, (uint32x2_t)0x400000004), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v144, (uint32x2_t)0x400000004), 0x20uLL));
  v85.i64[0] = 0x20000000200;
  v85.i64[1] = 0x20000000200;
  int32x4_t v146 = vaddq_s32((int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v108.i8, (uint32x2_t)0x1400000014), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v142, (uint32x2_t)0x1400000014), 0x20uLL)), v85);
  int32x4_t v147 = vaddq_s32(vaddq_s32(v146, vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v32, v31), v34), v98), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32((uint32x2_t)vzip1_s32(*(int32x2_t *)v46.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v46, (int8x16_t)v46, 8uLL)), (uint32x2_t)0x400000004), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32((uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64(
                                                                                           (uint64x2_t)v46,
                                                                                           v139)),
                                                        (uint32x2_t)0x400000004),
                                           0x20uLL))),
               (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v140, (uint32x2_t)0x1400000014), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v141, (uint32x2_t)0x1400000014), 0x20uLL)))), v145);
  v31.i64[0] = 0x900000009;
  v31.i64[1] = 0x900000009;
  int32x4_t v148 = vshlq_s32(v147, v31);
  int32x4_t v149 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v140, (uint32x2_t)0x400000004), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v141, (uint32x2_t)0x400000004), 0x20uLL));
  int32x4_t v150 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v143, (uint32x2_t)0x1400000014), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v144, (uint32x2_t)0x1400000014), 0x20uLL));
  uint32x2_t v151 = (uint32x2_t)vzip1_s32(*(int32x2_t *)v98.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v98, (int8x16_t)v98, 8uLL));
  *(int32x2_t *)v98.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v98, v139));
  int32x4_t v152 = vshlq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v146, vaddq_s32(vaddq_s32(v46, v111), v149)), v150), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v151, (uint32x2_t)0x400000004), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v98.i8, (uint32x2_t)0x400000004), 0x20uLL))), v31);
  int32x4_t v153 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v108.i8, (uint32x2_t)0x400000004), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(v142, (uint32x2_t)0x400000004), 0x20uLL));
  int32x4_t v154 = (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(v151, (uint32x2_t)0x1400000014), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v98.i8, (uint32x2_t)0x1400000014), 0x20uLL));
  *(int32x2_t *)v108.i8 = vzip1_s32(*(int32x2_t *)v111.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v111, (int8x16_t)v111, 8uLL));
  *(int32x2_t *)v111.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v111, v139));
  int32x4_t v155 = vshlq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v150, vaddq_s32(vaddq_s32(v58, v124), v153)), v154), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v108.i8, (uint32x2_t)0x400000004), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v111.i8, (uint32x2_t)0x400000004), 0x20uLL))), v85), v31);
  *a1 = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v148), v148))), vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v73), v73)))).u64[0];
  *(void *)((char *)a1 + a2) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v152), v152))), vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v86), v86)))).u64[0];
  uint64_t v156 = 2 * a2;
  int32x4_t v157 = vshlq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v145, vaddq_s32(vaddq_s32(vaddq_s32(v70, v137), v136), v138)), v154), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32(*(uint32x2_t *)v108.i8, (uint32x2_t)0x1400000014), (int8x16_t)v135), (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32(*(uint32x2_t *)v111.i8, (uint32x2_t)0x1400000014), 0x20uLL))), (int32x4_t)vorrq_s8(vandq_s8((int8x16_t)vmull_u32((uint32x2_t)vzip1_s32(*(int32x2_t *)v124.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v124, (int8x16_t)v124,
                                                                                  8uLL)),
                                           (uint32x2_t)0x400000004),
                              (int8x16_t)v135),
                            (int8x16_t)vshlq_n_s64((int64x2_t)vmull_u32((uint32x2_t)vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v124, v139)), (uint32x2_t)0x400000004), 0x20uLL))), v85), v31);
  *(void *)((char *)a1 + v156) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v155), v155))), vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v99), v99)))).u64[0];
  *(void *)&double result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v157), v157))), vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v112), v112)))).u64[0];
  *(double *)((char *)a1 + v156 + a2) = result;
  return result;
}

int16x8_t sub_2219CB6AC(void *a1, unsigned int a2, uint64_t a3, int a4)
{
  int8x16_t v5 = *(int8x16_t *)(a3 - 2);
  uint64_t v4 = a3 - 2;
  int8x16_t v6 = *(int8x16_t *)(v4 + a4);
  int8x16_t v7 = *(int8x16_t *)(v4 + 2 * a4);
  int8x16_t v8 = *(int8x16_t *)(v4 + 3 * a4);
  int8x16_t v9 = vzip1q_s8(v5, (int8x16_t)0);
  int8x16_t v10 = vdupq_laneq_s8(v5, 8);
  int8x16_t v11 = vzip1q_s8(v6, (int8x16_t)0);
  int8x16_t v12 = vdupq_laneq_s8(v6, 8);
  int8x16_t v13 = vzip1q_s8(v7, (int8x16_t)0);
  int8x16_t v14 = vdupq_laneq_s8(v7, 8);
  int8x16_t v15 = vzip1q_s8(v8, (int8x16_t)0);
  int8x16_t v16 = vdupq_laneq_s8(v8, 8);
  int8x16_t v17 = vzip1q_s8(v9, (int8x16_t)0);
  int8x16_t v18 = vzip2q_s8(v9, (int8x16_t)0);
  v10.i8[1] = 0;
  int8x16_t v19 = vzip1q_s8(v11, (int8x16_t)0);
  int8x16_t v20 = vzip2q_s8(v11, (int8x16_t)0);
  v12.i8[1] = 0;
  int8x16_t v21 = vzip1q_s8(v13, (int8x16_t)0);
  int8x16_t v22 = vzip2q_s8(v13, (int8x16_t)0);
  v14.i8[1] = 0;
  int8x16_t v23 = vzip1q_s8(v15, (int8x16_t)0);
  int8x16_t v24 = vzip2q_s8(v15, (int8x16_t)0);
  v16.i8[1] = 0;
  int8x16_t v25 = vzip1q_s8(v17, v21);
  int8x16_t v26 = vzip2q_s8(v17, v21);
  int8x16_t v27 = vzip1q_s8(v18, v22);
  int8x16_t v28 = vzip2q_s8(v18, v22);
  int8x16_t v29 = vzip1q_s8(v10, v14);
  int8x16_t v30 = vzip1q_s8(v19, v23);
  int8x16_t v31 = vzip2q_s8(v19, v23);
  int8x16_t v32 = vzip1q_s8(v20, v24);
  int8x16_t v33 = vzip2q_s8(v20, v24);
  int8x16_t v34 = vzip1q_s8(v26, v31);
  int8x16_t v35 = vzip2q_s8(v26, v31);
  int8x16_t v36 = vzip1q_s8(v27, v32);
  int8x16_t v37 = vzip2q_s8(v27, v32);
  int8x16_t v38 = vzip1q_s8(v28, v33);
  int8x16_t v39 = vzip2q_s8(v28, v33);
  int8x16_t v40 = vzip1q_s8(v29, vzip1q_s8(v12, v16));
  int16x8_t v41 = (int16x8_t)vzip1q_s8(vzip1q_s8(v25, v30), (int8x16_t)0);
  int16x8_t v42 = (int16x8_t)vzip1q_s8(vzip2q_s8(v25, v30), (int8x16_t)0);
  int16x8_t v43 = (int16x8_t)vzip1q_s8(v34, (int8x16_t)0);
  int16x8_t v44 = (int16x8_t)vzip1q_s8(v35, (int8x16_t)0);
  int16x8_t v45 = (int16x8_t)vzip1q_s8(v36, (int8x16_t)0);
  int16x8_t v46 = (int16x8_t)vzip1q_s8(v37, (int8x16_t)0);
  int16x8_t v47 = (int16x8_t)vzip1q_s8(v38, (int8x16_t)0);
  int16x8_t v48 = (int16x8_t)vzip1q_s8(v39, (int8x16_t)0);
  v49.i64[0] = 0x4000400040004;
  v49.i64[1] = 0x4000400040004;
  int16x8_t v50 = vmulq_s16(v45, v49);
  v51.i64[0] = 0x10001000100010;
  v51.i64[1] = 0x10001000100010;
  v52.i64[0] = 0x10001000100010;
  v52.i64[1] = 0x10001000100010;
  int16x8_t v53 = (int16x8_t)vmlal_u8(v52, (uint8x8_t)vmovn_s16(v44), (uint8x8_t)0x1414141414141414);
  *(int8x8_t *)v37.i8 = vmovn_s16(v45);
  *(int8x8_t *)v23.i8 = vmovn_s16(v46);
  int16x8_t v54 = vzip1q_s16((int16x8_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v53, vaddq_s16(v41, v46)), v42, v49), (uint8x8_t)vmovn_s16(v43), (uint8x8_t)0x1414141414141414), v50), v49))), (uint16x8_t)v44), (int16x8_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(
                                                   (int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)v43, *(uint8x8_t *)v37.i8, (uint8x8_t)0x1414141414141414), v48), *(uint8x8_t *)v23.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v47, v44), v49), v51), v49))), (uint16x8_t)v46));
  int16x8_t v55 = vzip1q_s16((int16x8_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v53, vaddq_s16(v42, v47)), *(uint8x8_t *)v37.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v46, v43), v49), v49))), (uint16x8_t)v45), (int16x8_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8(
                                                                  (uint16x8_t)vaddq_s16(vaddq_s16(v50, v44), (int16x8_t)vzip1q_s8(v40, (int8x16_t)0)), *(uint8x8_t *)v23.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v47), (uint8x8_t)0x1414141414141414), v48, v49), v51), v49))), (uint16x8_t)v47));
  int16x8_t v56 = vzip1q_s16(v54, v55);
  int16x8_t result = vzip2q_s16(v54, v55);
  *a1 = v56.i64[0];
  *(void *)((char *)a1 + a2) = v56.i64[1];
  uint64_t v58 = 2 * a2;
  *(void *)((char *)a1 + v58) = result.i64[0];
  *(void *)((char *)a1 + v58 + a2) = result.i64[1];
  return result;
}

double sub_2219CB880(void *a1, unsigned int a2, uint64_t a3, int a4, int8x16_t a5, double a6, double a7, double a8, double a9, int8x16_t a10, int8x16_t a11, int8x16_t a12)
{
  int8x16_t v15 = *(int8x16_t *)(a3 - 2);
  uint64_t v14 = a3 - 2;
  int8x16_t v16 = *(int8x16_t *)(v14 + a4);
  int8x16_t v17 = *(int8x16_t *)(v14 + 2 * a4);
  int8x16_t v18 = *(int8x16_t *)(v14 + 3 * a4);
  a10.i32[0] = *(_DWORD *)(v14 + 3 - 2 * a4);
  a11.i32[0] = *(_DWORD *)(v14 + 3 - a4);
  a12.i32[0] = *(_DWORD *)(v14 + 3 + 4 * a4);
  v12.i32[0] = *(_DWORD *)(v14 + 3 + 5 * a4);
  v13.i32[0] = *(_DWORD *)(v14 + 3 + 6 * a4);
  int16x8_t v19 = (int16x8_t)vzip1q_s8(a11, (int8x16_t)0);
  int16x8_t v20 = (int16x8_t)vzip1q_s8(vextq_s8(v15, a5, 3uLL), (int8x16_t)0);
  int16x8_t v21 = (int16x8_t)vzip1q_s8(vextq_s8(v16, a5, 3uLL), (int8x16_t)0);
  int16x8_t v22 = (int16x8_t)vzip1q_s8(vextq_s8(v17, a5, 3uLL), (int8x16_t)0);
  int16x8_t v23 = (int16x8_t)vzip1q_s8(vextq_s8(v18, a5, 3uLL), (int8x16_t)0);
  int16x8_t v24 = (int16x8_t)vzip1q_s8(a12, (int8x16_t)0);
  int16x8_t v25 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
  v26.i64[0] = 0x4000400040004;
  v26.i64[1] = 0x4000400040004;
  v27.i64[0] = 0x14001400140014;
  v27.i64[1] = 0x14001400140014;
  int16x8_t v28 = vmulq_s16(v22, v26);
  v29.i64[0] = 0x10001000100010;
  v29.i64[1] = 0x10001000100010;
  v30.i64[0] = 0x10001000100010;
  v30.i64[1] = 0x10001000100010;
  int16x8_t v31 = vmlaq_s16(v30, v21, v27);
  int16x8_t v32 = vmulq_s16(v22, v27);
  int16x8_t v33 = vaddq_s16(v31, v32);
  uint16x8_t v34 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(vmlaq_s16(v31, v20, v27), vaddq_s16(v28, v23)), (int16x8_t)vzip1q_s8(a10, (int8x16_t)0)), v19, v26), v26)));
  uint16x8_t v35 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(v33, vaddq_s16(v23, v20), v26), vaddq_s16(v19, v24)), v26)));
  int16x8_t v36 = vmulq_s16(v23, v27);
  uint16x8_t v37 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v32, v20), v36), v25), vaddq_s16(v24, v21), v26), v29), v26)));
  uint16x8_t v38 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v28, v21), v36), (uint8x8_t)vmovn_s16(v24), (uint8x8_t)0x1414141414141414), v25, v26), vaddq_s16((int16x8_t)vzip1q_s8(v13, (int8x16_t)0), v29)), v26)));
  int8x16_t v39 = vzip1q_s8(v15, (int8x16_t)0);
  int8x16_t v40 = vdupq_laneq_s8(v15, 8);
  int8x16_t v41 = vzip1q_s8(v16, (int8x16_t)0);
  int8x16_t v42 = vdupq_laneq_s8(v16, 8);
  int8x16_t v43 = vzip1q_s8(v17, (int8x16_t)0);
  int8x16_t v44 = vdupq_laneq_s8(v17, 8);
  int8x16_t v45 = vzip1q_s8(v18, (int8x16_t)0);
  int8x16_t v46 = vdupq_laneq_s8(v18, 8);
  int8x16_t v47 = vzip1q_s8(v39, (int8x16_t)0);
  v40.i8[1] = 0;
  int8x16_t v48 = vzip2q_s8(v39, (int8x16_t)0);
  int8x16_t v49 = vzip1q_s8(v41, (int8x16_t)0);
  int8x16_t v50 = vzip2q_s8(v41, (int8x16_t)0);
  v42.i8[1] = 0;
  int8x16_t v51 = vzip1q_s8(v43, (int8x16_t)0);
  int8x16_t v52 = vzip2q_s8(v43, (int8x16_t)0);
  v44.i8[1] = 0;
  int8x16_t v53 = vzip1q_s8(v45, (int8x16_t)0);
  v46.i8[1] = 0;
  int8x16_t v54 = vzip2q_s8(v45, (int8x16_t)0);
  int8x16_t v55 = vzip1q_s8(v47, v51);
  int8x16_t v56 = vzip2q_s8(v47, v51);
  int8x16_t v57 = vzip1q_s8(v48, v52);
  int8x16_t v58 = vzip2q_s8(v48, v52);
  int8x16_t v59 = vzip1q_s8(v40, v44);
  int8x16_t v60 = vzip1q_s8(v49, v53);
  int8x16_t v61 = vzip2q_s8(v49, v53);
  int8x16_t v62 = vzip1q_s8(v50, v54);
  int8x16_t v63 = vzip2q_s8(v50, v54);
  int8x16_t v64 = vzip1q_s8(v56, v61);
  int8x16_t v65 = vzip2q_s8(v56, v61);
  int8x16_t v66 = vzip1q_s8(v57, v62);
  int8x16_t v67 = vzip2q_s8(v57, v62);
  int8x16_t v68 = vzip1q_s8(v58, v63);
  int8x16_t v69 = vzip2q_s8(v58, v63);
  int8x16_t v70 = vzip1q_s8(v59, vzip1q_s8(v42, v46));
  int16x8_t v71 = (int16x8_t)vzip1q_s8(vzip1q_s8(v55, v60), (int8x16_t)0);
  int16x8_t v72 = (int16x8_t)vzip1q_s8(vzip2q_s8(v55, v60), (int8x16_t)0);
  int16x8_t v73 = (int16x8_t)vzip1q_s8(v64, (int8x16_t)0);
  int16x8_t v74 = (int16x8_t)vzip1q_s8(v65, (int8x16_t)0);
  int16x8_t v75 = (int16x8_t)vzip1q_s8(v66, (int8x16_t)0);
  int16x8_t v76 = (int16x8_t)vzip1q_s8(v67, (int8x16_t)0);
  int16x8_t v77 = (int16x8_t)vzip1q_s8(v68, (int8x16_t)0);
  int16x8_t v78 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
  int16x8_t v79 = vmulq_s16(v75, v26);
  v55.i64[0] = 0x10001000100010;
  v55.i64[1] = 0x10001000100010;
  int16x8_t v80 = (int16x8_t)vmlal_u8((uint16x8_t)v55, (uint8x8_t)vmovn_s16(v74), (uint8x8_t)0x1414141414141414);
  int16x8_t v81 = vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v80, vaddq_s16(v71, v76)), v72, v26), (uint8x8_t)vmovn_s16(v73), (uint8x8_t)0x1414141414141414), v79), v26);
  *(int8x8_t *)v81.i8 = vqmovun_s16(v81);
  *(int8x8_t *)v75.i8 = vmovn_s16(v75);
  int16x8_t v82 = vshlq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v80, vaddq_s16(v72, v77)), *(uint8x8_t *)v75.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v76, v73), v26), v26);
  *(int8x8_t *)v82.i8 = vqmovun_s16(v82);
  *(int8x8_t *)v76.i8 = vmovn_s16(v76);
  int16x8_t v83 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)v73, *(uint8x8_t *)v75.i8, (uint8x8_t)0x1414141414141414), v78), *(uint8x8_t *)v76.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v77, v74), v26), v29), v26);
  *(int8x8_t *)v83.i8 = vqmovun_s16(v83);
  int16x8_t v84 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v79, v74), (int16x8_t)vzip1q_s8(v70, (int8x16_t)0)), *(uint8x8_t *)v76.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v77), (uint8x8_t)0x1414141414141414), v78, v26), v29), v26);
  *(int8x8_t *)v84.i8 = vqmovun_s16(v84);
  int16x8_t v85 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v81, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v83, (int8x16_t)0));
  int16x8_t v86 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v82, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v84, (int8x16_t)0));
  int8x16_t v87 = (int8x16_t)vzip1q_s16(v85, v86);
  int8x16_t v88 = (int8x16_t)vzip2q_s16(v85, v86);
  *(void *)&double result = vrhaddq_u16((uint16x8_t)vextq_s8(v88, (int8x16_t)0, 8uLL), v38).u64[0];
  *a1 = vrhaddq_u16((uint16x8_t)v87, v34).u64[0];
  *(void *)((char *)a1 + a2) = vrhaddq_u16((uint16x8_t)vextq_s8(v87, (int8x16_t)0, 8uLL), v35).u64[0];
  uint64_t v90 = 2 * a2;
  *(void *)((char *)a1 + v90) = vrhaddq_u16((uint16x8_t)v88, v37).u64[0];
  *(double *)((char *)a1 + v90 + a2) = result;
  return result;
}

double sub_2219CBB64(double *a1, unsigned int a2, uint64_t a3, int a4, int64x2_t a5, int64x2_t a6, int64x2_t a7, int64x2_t a8, int64x2_t a9, int64x2_t a10, int64x2_t a11, int64x2_t a12)
{
  uint64_t v15 = a3 - 2 * a4;
  uint64_t v16 = a3 - a4;
  uint64_t v17 = a3 + a4;
  a5.i32[0] = *(_DWORD *)(v15 + 2);
  a6.i32[0] = *(_DWORD *)(v16 + 2);
  int8x16_t v18 = (int8x16_t)vshlq_n_s64(a6, 0x20uLL);
  uint64_t v19 = a3 + 2 * a4;
  a7.i32[0] = *(_DWORD *)(a3 + 2);
  a8.i32[0] = *(_DWORD *)(v17 + 2);
  a9.i32[0] = *(_DWORD *)(v19 + 2);
  uint64_t v20 = a3 + 3 * a4;
  a10.i32[0] = *(_DWORD *)(v20 + 2);
  uint64_t v21 = a3 + 4 * a4;
  a11.i32[0] = *(_DWORD *)(v21 + 2);
  uint64_t v22 = a3 + 5 * a4;
  a12.i32[0] = *(_DWORD *)(v22 + 2);
  uint64_t v23 = a3 + 6 * a4;
  v12.i32[0] = *(_DWORD *)(v23 + 2);
  v13.i32[0] = *(_DWORD *)(v15 - 2);
  int8x16_t v24 = vorrq_s8((int8x16_t)vshlq_n_s64(a5, 0x20uLL), v13);
  v13.i32[0] = *(_DWORD *)(v16 - 2);
  int8x16_t v25 = vorrq_s8(v18, v13);
  v18.i32[0] = *(_DWORD *)(a3 - 2);
  v14.i32[0] = *(_DWORD *)(v17 - 2);
  int8x16_t v26 = vorrq_s8((int8x16_t)vshlq_n_s64(a7, 0x20uLL), v18);
  int8x16_t v27 = vorrq_s8((int8x16_t)vshlq_n_s64(a8, 0x20uLL), v14);
  v18.i32[0] = *(_DWORD *)(v19 - 2);
  int8x16_t v28 = vorrq_s8((int8x16_t)vshlq_n_s64(a9, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v20 - 2);
  int8x16_t v29 = vorrq_s8((int8x16_t)vshlq_n_s64(a10, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v21 - 2);
  int8x16_t v30 = vorrq_s8((int8x16_t)vshlq_n_s64(a11, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v22 - 2);
  int8x16_t v31 = vorrq_s8((int8x16_t)vshlq_n_s64(a12, 0x20uLL), v18);
  v18.i32[0] = *(_DWORD *)(v23 - 2);
  int16x8_t v32 = (int16x8_t)vzip1q_s8(v25, (int8x16_t)0);
  int16x8_t v33 = (int16x8_t)vzip1q_s8(v26, (int8x16_t)0);
  int16x8_t v34 = (int16x8_t)vzip1q_s8(v27, (int8x16_t)0);
  int16x8_t v35 = (int16x8_t)vzip1q_s8(v28, (int8x16_t)0);
  int16x8_t v36 = (int16x8_t)vzip1q_s8(v29, (int8x16_t)0);
  int16x8_t v37 = (int16x8_t)vzip1q_s8(v30, (int8x16_t)0);
  int16x8_t v38 = (int16x8_t)vzip1q_s8(v31, (int8x16_t)0);
  int16x8_t v39 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v12, 0x20uLL), v18), (int8x16_t)0);
  v40.i64[0] = 0x4000400040004;
  v40.i64[1] = 0x4000400040004;
  v41.i64[0] = 0x14001400140014;
  v41.i64[1] = 0x14001400140014;
  int16x8_t v42 = vmulq_s16(v34, v41);
  int16x8_t v43 = vmulq_s16(v35, v40);
  int16x8_t v44 = vaddq_s16(vmlaq_s16(vmlaq_s16((int16x8_t)vzip1q_s8(v24, (int8x16_t)0), v32, v40), v33, v41), vaddq_s16(vaddq_s16(v42, v43), v36));
  LOWORD(v16) = *(unsigned __int8 *)(v16 + 6);
  v45.i64[0] = 0x10001000100010;
  v45.i64[1] = 0x10001000100010;
  __int16 v46 = *(unsigned __int8 *)(a3 + 6);
  LOWORD(v17) = *(unsigned __int8 *)(v17 + 6);
  int16x8_t v47 = vshlq_s16(vaddq_s16(v44, v45), v40);
  *(int8x8_t *)v47.i8 = vqmovun_s16(v47);
  LOWORD(v20) = *(unsigned __int8 *)(v20 + 6);
  LOWORD(v21) = *(unsigned __int8 *)(v21 + 6);
  LOWORD(v22) = *(unsigned __int8 *)(v22 + 6);
  __int16 v48 = 5 * *(unsigned __int8 *)(v19 + 6);
  LOWORD(v19) = v20 + *(unsigned __int8 *)(v15 + 6) - 5 * v16 + 20 * v46 + 20 * v17 - v48;
  LOWORD(v16) = v21 + v16 + 20 * v17 + 4 * v48 - 5 * (v20 + v46);
  LOWORD(v20) = 5 * v20;
  int16x8_t v49 = vmulq_s16(v35, v41);
  int16x8_t v50 = vmlaq_s16(vaddq_s16(vaddq_s16(v42, v32), vaddq_s16(v49, v37)), vaddq_s16(v36, v33), v40);
  int16x8_t v51 = vshlq_s16(vaddq_s16(v50, v45), v40);
  *(int8x8_t *)v51.i8 = vqmovun_s16(v51);
  int16x8_t v52 = vmulq_s16(v36, v41);
  int16x8_t v53 = vmlaq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v49, v33), v52), v38), vaddq_s16(v37, v34), v40);
  int16x8_t v54 = vshlq_s16(vaddq_s16(v53, v45), v40);
  *(int8x8_t *)v54.i8 = vqmovun_s16(v54);
  int16x8_t v55 = vaddq_s16(vmlaq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v43, v34), v52), v37, v41), v38, v40), v39);
  int16x8_t v56 = vshlq_s16(vaddq_s16(v55, v45), v40);
  *(int8x8_t *)v56.i8 = vqmovun_s16(v56);
  int8x16_t v57 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL);
  int8x16_t v58 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 4uLL);
  int8x16_t v59 = vextq_s8((int8x16_t)v44, (int8x16_t)0, 6uLL);
  v59.i16[5] = v19;
  int32x4_t v60 = vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL), (int16x4_t)131067));
  int32x4_t v61 = vpaddq_s32(vmull_s16(*(int16x4_t *)v57.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v57, v57, 8uLL), (int16x4_t)131067));
  int32x4_t v62 = vpaddq_s32(vmull_s16(*(int16x4_t *)v58.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL), (int16x4_t)131067));
  int32x4_t v63 = vpaddq_s32(vmull_s16(*(int16x4_t *)v59.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL), (int16x4_t)131067));
  int32x4_t v64 = vzip1q_s32(v60, v62);
  int32x4_t v65 = vzip2q_s32(v60, v62);
  int32x4_t v66 = vzip1q_s32(v61, v63);
  int32x4_t v67 = vzip1q_s32(v65, vzip2q_s32(v61, v63));
  v61.i64[0] = 0x20000000200;
  v61.i64[1] = 0x20000000200;
  int32x4_t v68 = vaddq_s32(vaddq_s32(vzip2q_s32(v64, v66), vzip1q_s32(v64, v66)), vaddq_s32(v67, v61));
  v67.i64[0] = 0x900000009;
  v67.i64[1] = 0x900000009;
  int32x4_t v69 = vshlq_s32(v68, v67);
  int8x16_t v70 = vextq_s8((int8x16_t)v50, (int8x16_t)0, 2uLL);
  int8x16_t v71 = vextq_s8((int8x16_t)v50, (int8x16_t)0, 4uLL);
  int8x16_t v72 = vextq_s8((int8x16_t)v50, (int8x16_t)0, 6uLL);
  v72.i16[5] = v16;
  int32x4_t v73 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v50, (int8x16_t)v50, 8uLL), (int16x4_t)131067));
  int32x4_t v74 = vpaddq_s32(vmull_s16(*(int16x4_t *)v70.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v70, v70, 8uLL), (int16x4_t)131067));
  int32x4_t v75 = vpaddq_s32(vmull_s16(*(int16x4_t *)v71.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v71, v71, 8uLL), (int16x4_t)131067));
  int32x4_t v76 = vpaddq_s32(vmull_s16(*(int16x4_t *)v72.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v72, v72, 8uLL), (int16x4_t)131067));
  int32x4_t v77 = vzip1q_s32(v73, v75);
  int32x4_t v78 = vzip2q_s32(v73, v75);
  int32x4_t v79 = vzip1q_s32(v74, v76);
  int32x4_t v80 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v77, v79), vzip1q_s32(v77, v79)), vaddq_s32(vzip1q_s32(v78, vzip2q_s32(v74, v76)), v61)), v67);
  int8x16_t v81 = vextq_s8((int8x16_t)v53, (int8x16_t)0, 2uLL);
  int8x16_t v82 = vextq_s8((int8x16_t)v53, (int8x16_t)0, 4uLL);
  int8x16_t v83 = vextq_s8((int8x16_t)v53, (int8x16_t)0, 6uLL);
  v83.i16[5] = v22 + v46 + 4 * v48 + 4 * v20 - 5 * (v21 + v17);
  int32x4_t v84 = vpaddq_s32(vmull_s16(*(int16x4_t *)v53.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v53, (int8x16_t)v53, 8uLL), (int16x4_t)131067));
  int32x4_t v85 = vpaddq_s32(vmull_s16(*(int16x4_t *)v81.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL), (int16x4_t)131067));
  int32x4_t v86 = vpaddq_s32(vmull_s16(*(int16x4_t *)v82.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v82, v82, 8uLL), (int16x4_t)131067));
  int32x4_t v87 = vpaddq_s32(vmull_s16(*(int16x4_t *)v83.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v83, v83, 8uLL), (int16x4_t)131067));
  int32x4_t v88 = vzip1q_s32(v84, v86);
  int32x4_t v89 = vzip2q_s32(v84, v86);
  int32x4_t v90 = vzip1q_s32(v85, v87);
  int32x4_t v91 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v88, v90), vzip1q_s32(v88, v90)), vaddq_s32(vzip1q_s32(v89, vzip2q_s32(v85, v87)), v61)), v67);
  int8x16_t v92 = vextq_s8((int8x16_t)v55, (int8x16_t)0, 2uLL);
  int8x16_t v93 = vextq_s8((int8x16_t)v55, (int8x16_t)0, 4uLL);
  int8x16_t v94 = vextq_s8((int8x16_t)v55, (int8x16_t)0, 6uLL);
  v94.i16[5] = *(unsigned __int8 *)(v23 + 6) + v17 - v48 + 4 * v20 + 20 * v21 - 5 * v22;
  int32x4_t v95 = vpaddq_s32(vmull_s16(*(int16x4_t *)v55.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v55, (int8x16_t)v55, 8uLL), (int16x4_t)131067));
  int32x4_t v96 = vpaddq_s32(vmull_s16(*(int16x4_t *)v92.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v92, v92, 8uLL), (int16x4_t)131067));
  int32x4_t v97 = vpaddq_s32(vmull_s16(*(int16x4_t *)v93.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v93, v93, 8uLL), (int16x4_t)131067));
  int32x4_t v98 = vpaddq_s32(vmull_s16(*(int16x4_t *)v94.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v94, v94, 8uLL), (int16x4_t)131067));
  int32x4_t v99 = vzip1q_s32(v95, v97);
  int32x4_t v100 = vzip2q_s32(v95, v97);
  int32x4_t v101 = vzip1q_s32(v96, v98);
  int32x4_t v102 = vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v99, v101), vzip1q_s32(v99, v101)), vaddq_s32(vzip1q_s32(v100, vzip2q_s32(v96, v98)), v61)), v67);
  *(void *)&double result = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v69), v69))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v47, (int8x16_t)xmmword_221A36840), (int8x16_t)0, 6uLL)).u64[0];
  *a1 = result;
  *(void *)((char *)a1 + a2) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v80), v80))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v51, (int8x16_t)xmmword_221A36840), (int8x16_t)0, 6uLL)).u64[0];
  uint64_t v104 = 2 * a2;
  *(void *)((char *)a1 + v104) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v91), v91))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v54, (int8x16_t)xmmword_221A36840), (int8x16_t)0, 6uLL)).u64[0];
  *(void *)((char *)a1 + v104 + a2) = vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vqmovn_high_s32(vqmovn_s32(v102), v102))), (uint16x8_t)vextq_s8(vqtbl1q_s8((int8x16_t)v56, (int8x16_t)xmmword_221A36840), (int8x16_t)0, 6uLL)).u64[0];
  return result;
}

double sub_2219CC010(void *a1, unsigned int a2, uint64_t a3, int a4, double a5, double a6, double a7, double a8, double a9, double a10, int8x16_t a11, int8x16_t a12)
{
  int8x16_t v15 = *(int8x16_t *)(a3 - 2);
  uint64_t v14 = a3 - 2;
  int8x16_t v16 = *(int8x16_t *)(v14 + a4);
  int8x16_t v17 = *(int8x16_t *)(v14 + 2 * a4);
  int8x16_t v18 = *(int8x16_t *)(v14 + 3 * a4);
  int8x16_t v19 = *(int8x16_t *)(v14 + 4 * a4);
  a11.i32[0] = *(_DWORD *)(v14 + 3 - 2 * a4);
  a12.i32[0] = *(_DWORD *)(v14 + 3 - a4);
  v12.i32[0] = *(_DWORD *)(v14 + 3 + 5 * a4);
  v13.i32[0] = *(_DWORD *)(v14 + 3 + 6 * a4);
  int16x8_t v20 = (int16x8_t)vzip1q_s8(a12, (int8x16_t)0);
  int16x8_t v21 = (int16x8_t)vzip1q_s8(vextq_s8(v15, v15, 3uLL), (int8x16_t)0);
  int16x8_t v22 = (int16x8_t)vzip1q_s8(vextq_s8(v16, v15, 3uLL), (int8x16_t)0);
  int16x8_t v23 = (int16x8_t)vzip1q_s8(vextq_s8(v17, v15, 3uLL), (int8x16_t)0);
  int16x8_t v24 = (int16x8_t)vzip1q_s8(vextq_s8(v18, v15, 3uLL), (int8x16_t)0);
  int16x8_t v25 = (int16x8_t)vzip1q_s8(vextq_s8(v19, v15, 3uLL), (int8x16_t)0);
  int16x8_t v26 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
  v27.i64[0] = 0x4000400040004;
  v27.i64[1] = 0x4000400040004;
  v28.i64[0] = 0x14001400140014;
  v28.i64[1] = 0x14001400140014;
  int16x8_t v29 = vmulq_s16(v23, v27);
  v30.i64[0] = 0x10001000100010;
  v30.i64[1] = 0x10001000100010;
  v31.i64[0] = 0x10001000100010;
  v31.i64[1] = 0x10001000100010;
  int16x8_t v32 = vmlaq_s16(v31, v22, v28);
  int16x8_t v33 = vaddq_s16(v32, v25);
  uint16x8_t v34 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(vmlaq_s16(v32, v21, v28), vaddq_s16(v29, v24)), (int16x8_t)vzip1q_s8(a11, (int8x16_t)0)), v20, v27), v27)));
  int16x8_t v35 = vmulq_s16(v23, v28);
  uint16x8_t v36 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(v33, v35), vaddq_s16(v24, v21), v27), v20), v27)));
  int16x8_t v37 = vmulq_s16(v24, v28);
  uint16x8_t v38 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v35, v21), v37), vaddq_s16(v25, v22), v27), vaddq_s16(v26, v30)), v27)));
  uint16x8_t v39 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v29, v22), v37), v25, v28), v26, v27), vaddq_s16((int16x8_t)vzip1q_s8(v13, (int8x16_t)0), v30)), v27)));
  int8x16_t v40 = vzip1q_s8(v16, (int8x16_t)0);
  int8x16_t v41 = vdupq_laneq_s8(v16, 8);
  int8x16_t v42 = vzip1q_s8(v17, (int8x16_t)0);
  int8x16_t v43 = vdupq_laneq_s8(v17, 8);
  int8x16_t v44 = vzip1q_s8(v18, (int8x16_t)0);
  int8x16_t v45 = vdupq_laneq_s8(v18, 8);
  int8x16_t v46 = vzip1q_s8(v19, (int8x16_t)0);
  int8x16_t v47 = vdupq_laneq_s8(v19, 8);
  int8x16_t v48 = vzip1q_s8(v40, (int8x16_t)0);
  v41.i8[1] = 0;
  int8x16_t v49 = vzip2q_s8(v40, (int8x16_t)0);
  int8x16_t v50 = vzip1q_s8(v42, (int8x16_t)0);
  int8x16_t v51 = vzip2q_s8(v42, (int8x16_t)0);
  v43.i8[1] = 0;
  int8x16_t v52 = vzip1q_s8(v44, (int8x16_t)0);
  int8x16_t v53 = vzip2q_s8(v44, (int8x16_t)0);
  v45.i8[1] = 0;
  int8x16_t v54 = vzip1q_s8(v46, (int8x16_t)0);
  v47.i8[1] = 0;
  int8x16_t v55 = vzip2q_s8(v46, (int8x16_t)0);
  int8x16_t v56 = vzip1q_s8(v48, v52);
  int8x16_t v57 = vzip2q_s8(v48, v52);
  int8x16_t v58 = vzip1q_s8(v49, v53);
  int8x16_t v59 = vzip2q_s8(v49, v53);
  int8x16_t v60 = vzip1q_s8(v41, v45);
  int8x16_t v61 = vzip1q_s8(v50, v54);
  int8x16_t v62 = vzip2q_s8(v50, v54);
  int8x16_t v63 = vzip1q_s8(v51, v55);
  int8x16_t v64 = vzip2q_s8(v51, v55);
  int8x16_t v65 = vzip1q_s8(v57, v62);
  int8x16_t v66 = vzip2q_s8(v57, v62);
  int8x16_t v67 = vzip1q_s8(v58, v63);
  int8x16_t v68 = vzip2q_s8(v58, v63);
  int8x16_t v69 = vzip1q_s8(v59, v64);
  int8x16_t v70 = vzip2q_s8(v59, v64);
  int8x16_t v71 = vzip1q_s8(v60, vzip1q_s8(v43, v47));
  int16x8_t v72 = (int16x8_t)vzip1q_s8(vzip1q_s8(v56, v61), (int8x16_t)0);
  int16x8_t v73 = (int16x8_t)vzip1q_s8(vzip2q_s8(v56, v61), (int8x16_t)0);
  int16x8_t v74 = (int16x8_t)vzip1q_s8(v65, (int8x16_t)0);
  int16x8_t v75 = (int16x8_t)vzip1q_s8(v66, (int8x16_t)0);
  int16x8_t v76 = (int16x8_t)vzip1q_s8(v67, (int8x16_t)0);
  int16x8_t v77 = (int16x8_t)vzip1q_s8(v68, (int8x16_t)0);
  int16x8_t v78 = (int16x8_t)vzip1q_s8(v69, (int8x16_t)0);
  int16x8_t v79 = (int16x8_t)vzip1q_s8(v70, (int8x16_t)0);
  int16x8_t v80 = vmulq_s16(v76, v27);
  v56.i64[0] = 0x10001000100010;
  v56.i64[1] = 0x10001000100010;
  int16x8_t v81 = (int16x8_t)vmlal_u8((uint16x8_t)v56, (uint8x8_t)vmovn_s16(v75), (uint8x8_t)0x1414141414141414);
  int16x8_t v82 = vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v81, vaddq_s16(v72, v77)), v73, v27), (uint8x8_t)vmovn_s16(v74), (uint8x8_t)0x1414141414141414), v80), v27);
  *(int8x8_t *)v82.i8 = vqmovun_s16(v82);
  *(int8x8_t *)v76.i8 = vmovn_s16(v76);
  int16x8_t v83 = vshlq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v81, vaddq_s16(v73, v78)), *(uint8x8_t *)v76.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v77, v74), v27), v27);
  *(int8x8_t *)v83.i8 = vqmovun_s16(v83);
  *(int8x8_t *)v77.i8 = vmovn_s16(v77);
  int16x8_t v84 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)v74, *(uint8x8_t *)v76.i8, (uint8x8_t)0x1414141414141414), v79), *(uint8x8_t *)v77.i8, (uint8x8_t)0x1414141414141414), vaddq_s16(v78, v75), v27), v30), v27);
  *(int8x8_t *)v84.i8 = vqmovun_s16(v84);
  int16x8_t v85 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(vaddq_s16(v80, v75), (int16x8_t)vzip1q_s8(v71, (int8x16_t)0)), *(uint8x8_t *)v77.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v78), (uint8x8_t)0x1414141414141414), v79, v27), v30), v27);
  *(int8x8_t *)v85.i8 = vqmovun_s16(v85);
  int16x8_t v86 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v82, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v84, (int8x16_t)0));
  int16x8_t v87 = vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v83, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v85, (int8x16_t)0));
  int8x16_t v88 = (int8x16_t)vzip1q_s16(v86, v87);
  int8x16_t v89 = (int8x16_t)vzip2q_s16(v86, v87);
  *(void *)&double result = vrhaddq_u16((uint16x8_t)vextq_s8(v89, (int8x16_t)0, 8uLL), v39).u64[0];
  *a1 = vrhaddq_u16((uint16x8_t)v88, v34).u64[0];
  *(void *)((char *)a1 + a2) = vrhaddq_u16((uint16x8_t)vextq_s8(v88, (int8x16_t)0, 8uLL), v36).u64[0];
  uint64_t v91 = 2 * a2;
  *(void *)((char *)a1 + v91) = vrhaddq_u16((uint16x8_t)v89, v38).u64[0];
  *(double *)((char *)a1 + v91 + a2) = result;
  return result;
}

int64x2_t sub_2219CC2F0(int64x2_t *a1, unsigned __int32 *a2, int a3, int8x16_t a4, int8x16_t a5, int8x16_t a6, int8x16_t a7)
{
  a4.i32[0] = *(unsigned __int32 *)((char *)a2 + a3);
  a5.i32[0] = *(unsigned __int32 *)((char *)a2 + 2 * a3);
  a6.i32[0] = *a2;
  a7.i32[0] = *(unsigned __int32 *)((char *)a2 + 3 * a3);
  int64x2_t result = vzip1q_s64((int64x2_t)vzip1q_s8(a6, (int8x16_t)0), (int64x2_t)vzip1q_s8(a4, (int8x16_t)0));
  *a1 = result;
  a1[1] = vzip1q_s64((int64x2_t)vzip1q_s8(a5, (int8x16_t)0), (int64x2_t)vzip1q_s8(a7, (int8x16_t)0));
  return result;
}

int64x2_t sub_2219CC32C(int64x2_t *a1, unsigned int *a2, int a3, int8x16_t a4, int8x16_t a5, double a6, double a7, int8x16_t a8, int8x16_t a9, int8x16_t a10, int8x16_t a11)
{
  a4.i32[0] = *(unsigned int *)((char *)a2 - 2 * a3);
  a5.i32[0] = *(unsigned int *)((char *)a2 - a3);
  a8.i32[0] = *(unsigned int *)((char *)a2 + a3);
  a9.i32[0] = *(unsigned int *)((char *)a2 + 2 * a3);
  a10.i32[0] = *(unsigned int *)((char *)a2 + 3 * a3);
  a11.i32[0] = a2[a3];
  v11.i32[0] = *(unsigned int *)((char *)a2 + 5 * a3);
  v12.i32[0] = *(unsigned int *)((char *)a2 + 6 * a3);
  int16x8_t v13 = (int16x8_t)vzip1q_s8(a4, (int8x16_t)0);
  int16x8_t v14 = (int16x8_t)vzip1q_s8(a5, (int8x16_t)0);
  int16x8_t v15 = (int16x8_t)vzip1q_s8((int8x16_t)*a2, (int8x16_t)0);
  int16x8_t v16 = (int16x8_t)vzip1q_s8(a8, (int8x16_t)0);
  int16x8_t v17 = (int16x8_t)vzip1q_s8(a9, (int8x16_t)0);
  int16x8_t v18 = (int16x8_t)vzip1q_s8(a10, (int8x16_t)0);
  int16x8_t v19 = (int16x8_t)vzip1q_s8(a11, (int8x16_t)0);
  int16x8_t v20 = (int16x8_t)vzip1q_s8(v11, (int8x16_t)0);
  int16x8_t v21 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
  v22.i64[0] = 0x4000400040004;
  v22.i64[1] = 0x4000400040004;
  int16x8_t v23 = vmulq_s16(v17, v22);
  v24.i64[0] = 0x10001000100010;
  v24.i64[1] = 0x10001000100010;
  v25.i64[0] = 0x10001000100010;
  v25.i64[1] = 0x10001000100010;
  int16x8_t v26 = (int16x8_t)vmlal_u8(v25, (uint8x8_t)vmovn_s16(v16), (uint8x8_t)0x1414141414141414);
  uint16x8_t v27 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v26, v13), v14, v22), (uint8x8_t)vmovn_s16(v15), (uint8x8_t)0x1414141414141414), vaddq_s16(v23, v18)), v22)));
  uint8x8_t v28 = (uint8x8_t)vmovn_s16(v17);
  uint16x8_t v29 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v26, v14), v28, (uint8x8_t)0x1414141414141414), v19), vaddq_s16(v18, v15), v22), v22)));
  *(int8x8_t *)v14.i8 = vmovn_s16(v18);
  uint16x8_t v30 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)v15, v28, (uint8x8_t)0x1414141414141414), *(uint8x8_t *)v14.i8, (uint8x8_t)0x1414141414141414), v20), vaddq_s16(v19, v16), v22), v24), v22)));
  uint16x8_t v31 = vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(v23, v16), *(uint8x8_t *)v14.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v19), (uint8x8_t)0x1414141414141414), v20, v22), vaddq_s16(v21, v24)), v22)));
  int64x2_t result = vzip1q_s64((int64x2_t)vrhaddq_u16(v27, (uint16x8_t)v15), (int64x2_t)vrhaddq_u16(v29, (uint16x8_t)v16));
  *a1 = result;
  a1[1] = vzip1q_s64((int64x2_t)vrhaddq_u16(v30, (uint16x8_t)v17), (int64x2_t)vrhaddq_u16(v31, (uint16x8_t)v18));
  return result;
}

int64x2_t sub_2219CC480(int64x2_t *a1, unsigned int *a2, int a3, double a4, int8x16_t a5, int8x16_t a6, double a7, int8x16_t a8, int8x16_t a9, int8x16_t a10, int8x16_t a11)
{
  a5.i32[0] = *(unsigned int *)((char *)a2 - 2 * a3);
  a6.i32[0] = *(unsigned int *)((char *)a2 - a3);
  a8.i32[0] = *(unsigned int *)((char *)a2 + a3);
  a9.i32[0] = *(unsigned int *)((char *)a2 + 2 * a3);
  a10.i32[0] = *(unsigned int *)((char *)a2 + 3 * a3);
  a11.i32[0] = a2[a3];
  v11.i32[0] = *(unsigned int *)((char *)a2 + 5 * a3);
  v12.i32[0] = *(unsigned int *)((char *)a2 + 6 * a3);
  int16x8_t v13 = (int16x8_t)vzip1q_s8(a6, (int8x16_t)0);
  int16x8_t v14 = (int16x8_t)vzip1q_s8((int8x16_t)*a2, (int8x16_t)0);
  int16x8_t v15 = (int16x8_t)vzip1q_s8(a8, (int8x16_t)0);
  int16x8_t v16 = (int16x8_t)vzip1q_s8(a9, (int8x16_t)0);
  int16x8_t v17 = (int16x8_t)vzip1q_s8(a10, (int8x16_t)0);
  int16x8_t v18 = (int16x8_t)vzip1q_s8(a11, (int8x16_t)0);
  int16x8_t v19 = (int16x8_t)vzip1q_s8(v11, (int8x16_t)0);
  v20.i64[0] = 0x4000400040004;
  v20.i64[1] = 0x4000400040004;
  int16x8_t v21 = vmulq_s16(v16, v20);
  v22.i64[0] = 0x10001000100010;
  v22.i64[1] = 0x10001000100010;
  v23.i64[0] = 0x10001000100010;
  v23.i64[1] = 0x10001000100010;
  int16x8_t v24 = (int16x8_t)vmlal_u8(v23, (uint8x8_t)vmovn_s16(v15), (uint8x8_t)0x1414141414141414);
  int16x8_t v25 = vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v24, (int16x8_t)vzip1q_s8(a5, (int8x16_t)0)), v13, v20), (uint8x8_t)vmovn_s16(v14), (uint8x8_t)0x1414141414141414), vaddq_s16(v21, v17)), v20);
  *(int8x8_t *)v25.i8 = vqmovun_s16(v25);
  *(int8x8_t *)v16.i8 = vmovn_s16(v16);
  int16x8_t v26 = vshlq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v24, v13), *(uint8x8_t *)v16.i8, (uint8x8_t)0x1414141414141414), v18), vaddq_s16(v17, v14), v20), v20);
  *(int8x8_t *)v26.i8 = vqmovun_s16(v26);
  *(int8x8_t *)v17.i8 = vmovn_s16(v17);
  int16x8_t v27 = vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)v14, *(uint8x8_t *)v16.i8, (uint8x8_t)0x1414141414141414), *(uint8x8_t *)v17.i8, (uint8x8_t)0x1414141414141414), v19), vaddq_s16(v18, v15), v20), v22), v20);
  *(int8x8_t *)v27.i8 = vqmovun_s16(v27);
  int16x8_t v28 = vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(v21, v15), *(uint8x8_t *)v17.i8, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v18), (uint8x8_t)0x1414141414141414), v19, v20), vaddq_s16((int16x8_t)vzip1q_s8(v12, (int8x16_t)0), v22)), v20);
  *(int8x8_t *)v28.i8 = vqmovun_s16(v28);
  int64x2_t result = vzip1q_s64((int64x2_t)vzip1q_s8((int8x16_t)v27, (int8x16_t)0), (int64x2_t)vzip1q_s8((int8x16_t)v28, (int8x16_t)0));
  *a1 = vzip1q_s64((int64x2_t)vzip1q_s8((int8x16_t)v25, (int8x16_t)0), (int64x2_t)vzip1q_s8((int8x16_t)v26, (int8x16_t)0));
  a1[1] = result;
  return result;
}

int64x2_t sub_2219CC5C4(int64x2_t *a1, unsigned int *a2, int a3, int8x16_t a4, double a5, int8x16_t a6, double a7, int8x16_t a8, int8x16_t a9, int8x16_t a10, int8x16_t a11)
{
  a4.i32[0] = *(unsigned int *)((char *)a2 - 2 * a3);
  a6.i32[0] = *(unsigned int *)((char *)a2 - a3);
  a8.i32[0] = *(unsigned int *)((char *)a2 + a3);
  a9.i32[0] = *(unsigned int *)((char *)a2 + 2 * a3);
  a10.i32[0] = *(unsigned int *)((char *)a2 + 3 * a3);
  a11.i32[0] = a2[a3];
  v11.i32[0] = *(unsigned int *)((char *)a2 + 5 * a3);
  v12.i32[0] = *(unsigned int *)((char *)a2 + 6 * a3);
  int16x8_t v13 = (int16x8_t)vzip1q_s8(a6, (int8x16_t)0);
  int16x8_t v14 = (int16x8_t)vzip1q_s8((int8x16_t)*a2, (int8x16_t)0);
  int16x8_t v15 = (int16x8_t)vzip1q_s8(a8, (int8x16_t)0);
  int16x8_t v16 = (int16x8_t)vzip1q_s8(a9, (int8x16_t)0);
  int16x8_t v17 = (int16x8_t)vzip1q_s8(a10, (int8x16_t)0);
  int16x8_t v18 = (int16x8_t)vzip1q_s8(a11, (int8x16_t)0);
  int16x8_t v19 = (int16x8_t)vzip1q_s8(v11, (int8x16_t)0);
  int16x8_t v20 = (int16x8_t)vzip1q_s8(v12, (int8x16_t)0);
  v21.i64[0] = 0x4000400040004;
  v21.i64[1] = 0x4000400040004;
  int16x8_t v22 = vmulq_s16(v16, v21);
  v23.i64[0] = 0x10001000100010;
  v23.i64[1] = 0x10001000100010;
  v24.i64[0] = 0x10001000100010;
  v24.i64[1] = 0x10001000100010;
  int16x8_t v25 = (int16x8_t)vmlal_u8(v24, (uint8x8_t)vmovn_s16(v15), (uint8x8_t)0x1414141414141414);
  uint8x8_t v26 = (uint8x8_t)vmovn_s16(v16);
  uint8x8_t v27 = (uint8x8_t)vmovn_s16(v17);
  int64x2_t result = vzip1q_s64((int64x2_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vmlaq_s16(vaddq_s16(v25, (int16x8_t)vzip1q_s8(a4, (int8x16_t)0)), v13, v21), (uint8x8_t)vmovn_s16(v14), (uint8x8_t)0x1414141414141414), vaddq_s16(v22, v17)), v21))), (uint16x8_t)v15), (int64x2_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(
                                                  vmlaq_s16(vaddq_s16((int16x8_t)vmlal_u8((uint16x8_t)vaddq_s16(v25, v13), v26, (uint8x8_t)0x1414141414141414), v18), vaddq_s16(v17, v14), v21), v21))), (uint16x8_t)v16));
  *a1 = result;
  a1[1] = vzip1q_s64((int64x2_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)v14, v26, (uint8x8_t)0x1414141414141414), v27, (uint8x8_t)0x1414141414141414), v19), vaddq_s16(v18, v15), v21), v23), v21))), (uint16x8_t)v17),
            (int64x2_t)vrhaddq_u16(vmovl_u8((uint8x8_t)vqmovun_s16(vshlq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vmlal_u8(vmlal_u8((uint16x8_t)vaddq_s16(v22, v15), v27, (uint8x8_t)0x1414141414141414), (uint8x8_t)vmovn_s16(v18), (uint8x8_t)0x1414141414141414), v19, v21), vaddq_s16(v20, v23)), v21))), (uint16x8_t)v18));
  return result;
}

int64x2_t sub_2219CC718(int64x2_t *a1, uint64_t a2, int a3, int8x16_t a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, int64x2_t a9, int64x2_t a10, int64x2_t a11)
{
  uint64_t v21 = a2 - 2 * a3;
  uint64_t v22 = a2 - a3;
  uint64_t v23 = a2 + a3;
  uint64_t v24 = a2 + 2 * a3;
  uint64_t v25 = a2 + 3 * a3;
  uint64_t v26 = a2 + 4 * a3;
  uint64_t v27 = a2 + 5 * a3;
  uint64_t v28 = a2 + 6 * a3;
  a4.i32[0] = *(_DWORD *)(v21 - 2);
  a5.i32[0] = *(_DWORD *)(v22 - 2);
  a6.i32[0] = *(_DWORD *)(a2 - 2);
  a7.i32[0] = *(_DWORD *)(v23 - 2);
  a8.i32[0] = *(_DWORD *)(v24 - 2);
  a9.i32[0] = *(_DWORD *)(v21 + 2);
  a10.i32[0] = *(_DWORD *)(v22 + 2);
  a11.i32[0] = *(_DWORD *)(a2 + 2);
  v11.i32[0] = *(_DWORD *)(v23 + 2);
  v12.i32[0] = *(_DWORD *)(v24 + 2);
  v13.i32[0] = *(_DWORD *)(v25 + 2);
  v14.i32[0] = *(_DWORD *)(v26 + 2);
  v15.i32[0] = *(_DWORD *)(v27 + 2);
  v16.i32[0] = *(_DWORD *)(v25 - 2);
  v17.i32[0] = *(_DWORD *)(v26 - 2);
  v18.i32[0] = *(_DWORD *)(v27 - 2);
  v19.i32[0] = *(_DWORD *)(v28 - 2);
  v20.i32[0] = *(_DWORD *)(v28 + 2);
  __int16 v29 = *(unsigned __int8 *)(v21 + 6);
  __int16 v30 = *(unsigned __int8 *)(v22 + 6);
  __int16 v31 = *(unsigned __int8 *)(a2 + 6);
  __int16 v32 = *(unsigned __int8 *)(v23 + 6);
  LOWORD(v23) = *(unsigned __int8 *)(v24 + 6);
  __int16 v33 = *(unsigned __int8 *)(v25 + 6);
  LOWORD(v26) = *(unsigned __int8 *)(v26 + 6);
  LOWORD(v21) = *(unsigned __int8 *)(v27 + 6);
  int16x8_t v34 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(a10, 0x20uLL), a5), (int8x16_t)0);
  int16x8_t v35 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(a11, 0x20uLL), a6), (int8x16_t)0);
  int16x8_t v36 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v11, 0x20uLL), a7), (int8x16_t)0);
  int16x8_t v37 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v12, 0x20uLL), a8), (int8x16_t)0);
  int16x8_t v38 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v13, 0x20uLL), v16), (int8x16_t)0);
  int16x8_t v39 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v14, 0x20uLL), v17), (int8x16_t)0);
  int16x8_t v40 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v15, 0x20uLL), v18), (int8x16_t)0);
  v41.i64[0] = 0x4000400040004;
  v41.i64[1] = 0x4000400040004;
  v42.i64[0] = 0x14001400140014;
  v42.i64[1] = 0x14001400140014;
  int16x8_t v43 = vmulq_s16(v36, v42);
  int16x8_t v44 = vmulq_s16(v37, v41);
  int8x16_t v45 = (int8x16_t)vaddq_s16(vmlaq_s16(vmlaq_s16((int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(a9, 0x20uLL), a4), (int8x16_t)0), v34, v41), v35, v42), vaddq_s16(vaddq_s16(v43, v44), v38));
  int16x8_t v46 = vmulq_s16(v37, v42);
  int8x16_t v47 = (int8x16_t)vmlaq_s16(vaddq_s16(vaddq_s16(v43, v34), vaddq_s16(v46, v39)), vaddq_s16(v38, v35), v41);
  int16x8_t v48 = vmulq_s16(v38, v42);
  int8x16_t v49 = (int8x16_t)vmlaq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v46, v35), v48), v40), vaddq_s16(v39, v36), v41);
  int8x16_t v50 = (int8x16_t)vaddq_s16(vmlaq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v44, v36), v48), v39, v42), v40, v41), (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v20, 0x20uLL), v19), (int8x16_t)0));
  int8x16_t v51 = vextq_s8(v45, (int8x16_t)0, 2uLL);
  int8x16_t v52 = vextq_s8(v45, (int8x16_t)0, 4uLL);
  int8x16_t v53 = vextq_s8(v45, (int8x16_t)0, 6uLL);
  int8x16_t v54 = v53;
  v54.i16[5] = v33 + v29 - 5 * v30 + 20 * v31 + 20 * v32 - 5 * v23;
  int32x4_t v55 = vpaddq_s32(vmull_s16(*(int16x4_t *)v45.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v45, v45, 8uLL), (int16x4_t)131067));
  int32x4_t v56 = vpaddq_s32(vmull_s16(*(int16x4_t *)v51.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v51, v51, 8uLL), (int16x4_t)131067));
  int32x4_t v57 = vpaddq_s32(vmull_s16(*(int16x4_t *)v52.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL), (int16x4_t)131067));
  int32x4_t v58 = vpaddq_s32(vmull_s16(*(int16x4_t *)v53.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v54, v54, 8uLL), (int16x4_t)131067));
  int32x4_t v59 = vzip1q_s32(v55, v57);
  int32x4_t v60 = vzip2q_s32(v55, v57);
  int32x4_t v61 = vzip1q_s32(v56, v58);
  int32x4_t v62 = vzip1q_s32(v60, vzip2q_s32(v56, v58));
  int32x4_t v63 = vaddq_s32(vzip2q_s32(v59, v61), vzip1q_s32(v59, v61));
  v61.i64[0] = 0x20000000200;
  v61.i64[1] = 0x20000000200;
  int32x4_t v64 = vaddq_s32(v63, vaddq_s32(v62, v61));
  v63.i64[0] = 0x900000009;
  v63.i64[1] = 0x900000009;
  int16x8_t v65 = (int16x8_t)vshlq_s32(v64, v63);
  *(int16x4_t *)v65.i8 = vqmovn_s32((int32x4_t)v65);
  *(int8x8_t *)v65.i8 = vqmovun_s16(v65);
  int8x16_t v66 = vextq_s8(v47, (int8x16_t)0, 2uLL);
  int8x16_t v67 = vextq_s8(v47, (int8x16_t)0, 4uLL);
  int8x16_t v68 = vextq_s8(v47, (int8x16_t)0, 6uLL);
  v68.i16[5] = v26 + v30 + 20 * v32 + 20 * v23 - 5 * (v33 + v31);
  int32x4_t v69 = vpaddq_s32(vmull_s16(*(int16x4_t *)v47.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL), (int16x4_t)131067));
  int32x4_t v70 = vpaddq_s32(vmull_s16(*(int16x4_t *)v66.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL), (int16x4_t)131067));
  int32x4_t v71 = vpaddq_s32(vmull_s16(*(int16x4_t *)v67.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL), (int16x4_t)131067));
  int32x4_t v72 = vpaddq_s32(vmull_s16(*(int16x4_t *)v68.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v68, v68, 8uLL), (int16x4_t)131067));
  int32x4_t v73 = vzip1q_s32(v69, v71);
  int32x4_t v74 = vzip2q_s32(v69, v71);
  int32x4_t v75 = vzip1q_s32(v70, v72);
  int16x8_t v76 = (int16x8_t)vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v73, v75), vzip1q_s32(v73, v75)), vaddq_s32(vzip1q_s32(v74, vzip2q_s32(v70, v72)), v61)), v63);
  *(int16x4_t *)v76.i8 = vqmovn_s32((int32x4_t)v76);
  *(int8x8_t *)v76.i8 = vqmovun_s16(v76);
  int8x16_t v77 = vextq_s8(v49, (int8x16_t)0, 2uLL);
  int8x16_t v78 = vextq_s8(v49, (int8x16_t)0, 4uLL);
  int8x16_t v79 = vextq_s8(v49, (int8x16_t)0, 6uLL);
  v79.i16[5] = v21 + v31 + 20 * v23 + 20 * v33 - 5 * (v26 + v32);
  int32x4_t v80 = vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)131067));
  int32x4_t v81 = vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)131067));
  int32x4_t v82 = vpaddq_s32(vmull_s16(*(int16x4_t *)v78.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), (int16x4_t)131067));
  int32x4_t v83 = vpaddq_s32(vmull_s16(*(int16x4_t *)v79.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL), (int16x4_t)131067));
  int32x4_t v84 = vzip1q_s32(v80, v82);
  int32x4_t v85 = vzip2q_s32(v80, v82);
  int32x4_t v86 = vzip1q_s32(v81, v83);
  int16x8_t v87 = (int16x8_t)vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v84, v86), vzip1q_s32(v84, v86)), vaddq_s32(vzip1q_s32(v85, vzip2q_s32(v81, v83)), v61)), v63);
  *(int16x4_t *)v87.i8 = vqmovn_s32((int32x4_t)v87);
  *(int8x8_t *)v87.i8 = vqmovun_s16(v87);
  int8x16_t v88 = vextq_s8(v50, (int8x16_t)0, 2uLL);
  int8x16_t v89 = vextq_s8(v50, (int8x16_t)0, 4uLL);
  int8x16_t v90 = vextq_s8(v50, (int8x16_t)0, 6uLL);
  v90.i16[5] = *(unsigned __int8 *)(v28 + 6) + v32 - 5 * v23 + 20 * v33 + 20 * v26 - 5 * v21;
  int32x4_t v91 = vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)131067));
  int32x4_t v92 = vpaddq_s32(vmull_s16(*(int16x4_t *)v88.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v88, v88, 8uLL), (int16x4_t)131067));
  int32x4_t v93 = vpaddq_s32(vmull_s16(*(int16x4_t *)v89.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v89, v89, 8uLL), (int16x4_t)131067));
  int32x4_t v94 = vpaddq_s32(vmull_s16(*(int16x4_t *)v90.i8, (int16x4_t)0x140014FFFB0001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v90, v90, 8uLL), (int16x4_t)131067));
  int32x4_t v95 = vzip1q_s32(v91, v93);
  int32x4_t v96 = vzip2q_s32(v91, v93);
  int32x4_t v97 = vzip1q_s32(v92, v94);
  int16x8_t v98 = (int16x8_t)vshlq_s32(vaddq_s32(vaddq_s32(vzip2q_s32(v95, v97), vzip1q_s32(v95, v97)), vaddq_s32(vzip1q_s32(v96, vzip2q_s32(v92, v94)), v61)), v63);
  *(int16x4_t *)v98.i8 = vqmovn_s32((int32x4_t)v98);
  *(int8x8_t *)v98.i8 = vqmovun_s16(v98);
  int64x2_t result = vzip1q_s64((int64x2_t)vzip1q_s8((int8x16_t)v87, (int8x16_t)0), (int64x2_t)vzip1q_s8((int8x16_t)v98, (int8x16_t)0));
  *a1 = vzip1q_s64((int64x2_t)vzip1q_s8((int8x16_t)v65, (int8x16_t)0), (int64x2_t)vzip1q_s8((int8x16_t)v76, (int8x16_t)0));
  a1[1] = result;
  return result;
}

uint64_t sub_2219CCB40(int *a1, int16x8_t *a2, int a3, int a4, int a5, int a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, uint8x8_t a14)
{
  uint64_t v19 = *((void *)a1 + 27);
  int v21 = *a1;
  int v20 = a1[1];
  if (*((unsigned char *)a1 + 31))
  {
    if (*((unsigned char *)a1 + 29) && *(unsigned char *)(v19 + 1363))
    {
      uint64_t v22 = *(unsigned int *)(v19 + 184);
      unsigned int v23 = 2 * v22;
      int v24 = *(unsigned __int8 *)(v19 + 32);
      uint64_t v25 = *(void *)(v19 + 72) + (16 * v21);
      uint64_t v26 = (int8x16_t *)(v25 + (8 * v20 * v22));
      if (v24)
      {
        uint64_t v26 = (int8x16_t *)(v25 + (16 * v20 * v22));
        char v27 = 4;
      }
      else
      {
        char v27 = 3;
      }
      uint64_t v28 = (int8x16_t *)(v25 + v22 + ((v20 << v27) * v22));
      if (!*((unsigned char *)a1 + 30)) {
        uint64_t v28 = v26;
      }
    }
    else
    {
      unsigned int v29 = *(_DWORD *)(v19 + 184);
      unsigned int v30 = a1[4];
      uint64_t v31 = *(void *)(v19 + 72) + 16 * v29 * (v30 / (2 * a1[5])) + ((8 * (v30 % (2 * a1[5]))) & 0xFFFFFFF0);
      int v32 = (int)(v30 << 31) >> 31;
      __int16 v33 = (int8x16_t *)(v31 + (v32 & v29));
      uint64_t v28 = (int8x16_t *)(v31 + (v32 & (8 * v29)));
      if (*((unsigned char *)a1 + 31) == 1)
      {
        unsigned int v23 = v29;
      }
      else
      {
        uint64_t v28 = v33;
        unsigned int v23 = 2 * v29;
      }
    }
    switch(a6)
    {
      case 0:
        if (a3 <= 0) {
          int v34 = 0;
        }
        else {
          int v34 = -1;
        }
        int v212 = v34;
        int16x8_t v35 = (unsigned __int8 *)v28 - (int)(v23 & v34);
        int16x8_t v36 = &v28[-1].u16[7];
        int16x8_t v37 = &v28[-1].u16[2 * v23 + 7];
        uint64_t v38 = v23;
        int8x8_t v39 = (int8x8_t)0x80008000800080;
        char v40 = 1;
        uint64_t v41 = 3 * v23;
        do
        {
          int8x8_t v42 = v39;
          int8x8_t v43 = (int8x8_t)0x80008000800080;
          int8x8_t v39 = (int8x8_t)0x80008000800080;
          if (a4 | a3)
          {
            unsigned int v44 = bswap32(*(unsigned __int16 *)((char *)v36 + v23)) >> 16;
            HIWORD(v219) = v44;
            LOWORD(v219) = v44;
            v43.i32[0] = v44;
            unsigned int v45 = bswap32(v36[v38]) >> 16;
            v39.i32[0] = v219;
            int16x8_t v46 = (int16x8_t)vmovl_u8((uint8x8_t)v39);
            int32x2_t v47 = (int32x2_t)vshl_u32((uint32x2_t)v43, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v46.i16[3] = 0;
            *(int8x8_t *)v46.i8 = vmovn_s16(v46);
            v47.i16[2] = v46.i16[1];
            HIWORD(v218) = v45;
            LOWORD(v218) = v45;
            v46.i32[0] = v45;
            unsigned int v48 = bswap32(*v36) >> 16;
            a14.i32[0] = v218;
            int16x8_t v49 = (int16x8_t)vmovl_u8(a14);
            *(uint32x2_t *)v46.i8 = vshl_u32(*(uint32x2_t *)v46.i8, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v49.i16[3] = 0;
            *(int8x8_t *)v49.i8 = vmovn_s16(v49);
            v46.i16[2] = v49.i16[1];
            HIWORD(v220) = v48;
            LOWORD(v220) = v48;
            v49.i32[0] = v48;
            unsigned int v50 = bswap32(*(unsigned __int16 *)((char *)v37 + v23)) >> 16;
            v14.i32[0] = v220;
            int16x8_t v51 = (int16x8_t)vmovl_u8((uint8x8_t)v14);
            *(uint32x2_t *)v49.i8 = vshl_u32(*(uint32x2_t *)v49.i8, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v51.i16[3] = 0;
            *(int8x8_t *)v51.i8 = vmovn_s16(v51);
            v49.i16[2] = v51.i16[1];
            HIWORD(v215) = v50;
            LOWORD(v215) = v50;
            v51.i32[0] = v50;
            unsigned int v52 = bswap32(v37[v38]) >> 16;
            v15.i32[0] = v215;
            int16x8_t v53 = (int16x8_t)vmovl_u8((uint8x8_t)v15);
            *(uint32x2_t *)v51.i8 = vshl_u32(*(uint32x2_t *)v51.i8, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v53.i16[3] = 0;
            *(int8x8_t *)v53.i8 = vmovn_s16(v53);
            v51.i16[2] = v53.i16[1];
            HIWORD(v214) = v52;
            LOWORD(v214) = v52;
            v53.i32[0] = v52;
            unsigned int v54 = bswap32(*v37) >> 16;
            v16.i32[0] = v214;
            int16x8_t v55 = (int16x8_t)vmovl_u8((uint8x8_t)v16);
            int32x2_t v15 = (int32x2_t)vshl_u32(*(uint32x2_t *)v53.i8, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v55.i16[3] = 0;
            *(int8x8_t *)v55.i8 = vmovn_s16(v55);
            v15.i16[2] = v55.i16[1];
            HIWORD(v216) = v54;
            LOWORD(v216) = v54;
            v55.i32[0] = v54;
            unsigned int v56 = bswap32(*(unsigned __int16 *)((char *)v36 + v41)) >> 16;
            v17.i32[0] = v216;
            int16x8_t v57 = (int16x8_t)vmovl_u8((uint8x8_t)v17);
            int32x2_t v16 = (int32x2_t)vshl_u32(*(uint32x2_t *)v55.i8, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v57.i16[3] = 0;
            *(int8x8_t *)v57.i8 = vmovn_s16(v57);
            v16.i16[2] = v57.i16[1];
            HIWORD(v217) = v56;
            LOWORD(v217) = v56;
            v57.i32[0] = v56;
            unsigned int v58 = bswap32(*(unsigned __int16 *)((char *)v37 + v41)) >> 16;
            v18.i32[0] = v217;
            int16x8_t v59 = (int16x8_t)vmovl_u8((uint8x8_t)v18);
            int32x2_t v17 = (int32x2_t)vshl_u32(*(uint32x2_t *)v57.i8, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v59.i16[3] = 0;
            uint32x2_t v18 = (uint32x2_t)vmovn_s16(v59);
            v17.i16[2] = v18.i16[1];
            HIWORD(v213) = v58;
            LOWORD(v213) = v58;
            v18.i32[0] = v58;
            int32x2_t v60 = vadd_s32(*(int32x2_t *)v49.i8, v47);
            *(int32x2_t *)v49.i8 = vadd_s32(v16, *(int32x2_t *)v51.i8);
            unsigned int v61 = *v35 + v35[2] + v35[4] + v35[6] + 2;
            unsigned int v62 = v35[8] + v35[10] + v35[12] + v35[14] + 2;
            unsigned int v63 = v35[1] + v35[3] + v35[5] + v35[7] + 2;
            unsigned int v64 = v35[9] + v35[11] + v35[13] + v35[15] + 2;
            int32x2_t v65 = vadd_s32(v60, vadd_s32(*(int32x2_t *)v46.i8, v17));
            uint32x2_t v66 = (uint32x2_t)vadd_s32(v65, (int32x2_t)0x200000002);
            v65.i32[0] = v213;
            int16x8_t v67 = (int16x8_t)vmovl_u8((uint8x8_t)v65);
            v67.i16[3] = 0;
            int32x2_t v14 = (int32x2_t)vshl_u32(v18, (uint32x2_t)0xFFFFFF01FFFFFFF8);
            v14.i16[2] = vmovn_s16(v67).i16[1];
            a14 = (uint8x8_t)vadd_s32(vadd_s32(*(int32x2_t *)v49.i8, vadd_s32(v15, v14)), (int32x2_t)0x200000002);
            *(uint32x2_t *)v67.i8 = vshr_n_u32((uint32x2_t)vand_s8((int8x8_t)a14, (int8x8_t)0xFFFF0000FFFFLL), 2uLL);
            int8x8_t v43 = (int8x8_t)vuzp1_s16(*(int16x4_t *)v67.i8, *(int16x4_t *)v67.i8);
            if ((a4 & v212) != 0)
            {
              v43.i16[2] = (unsigned __int16)(a14.i16[0] + v62) >> 3;
              v43.i16[3] = (unsigned __int16)(a14.i16[2] + v64) >> 3;
              v39.i16[0] = (unsigned __int16)(v66.i16[0] + v61) >> 3;
              v39.i16[1] = (unsigned __int16)(v66.i16[2] + v63) >> 3;
              v39.i16[2] = v62 >> 2;
              v39.i16[3] = v64 >> 2;
            }
            else
            {
              int16x4_t v68 = (int16x4_t)vand_s8((int8x8_t)vshr_n_u32(v66, 2uLL), (int8x8_t)0x3F0000003FLL);
              a14 = (uint8x8_t)vcltz_s16(vshl_n_s16(vdup_n_s16(a4 == 0), 0xFuLL));
              v14.i16[0] = v61 >> 2;
              v14.i16[1] = v63 >> 2;
              v14.i16[2] = v62 >> 2;
              v14.i16[3] = v64 >> 2;
              int8x8_t v43 = vbsl_s8((int8x8_t)a14, (int8x8_t)v14, v43);
              int8x8_t v39 = vbsl_s8((int8x8_t)a14, (int8x8_t)v14, (int8x8_t)vuzp1_s16(v68, v68));
            }
          }
          if ((v40 & (a4 == a5)) != 0) {
            unsigned int v69 = -1;
          }
          else {
            unsigned int v69 = 0;
          }
          if ((v40 & (a4 == a5)) != 0) {
            break;
          }
          char v70 = v40 ^ 1;
          a4 = a5;
          char v40 = 0;
        }
        while ((v70 & 1) == 0);
        int32x2_t v71 = (int32x2_t)vbsl_s8((int8x8_t)vdup_n_s16(v69), v39, v42);
        char v72 = 1;
        v73.i64[0] = 0xFF00FF00FF00FFLL;
        v73.i64[1] = 0xFF00FF00FF00FFLL;
        do
        {
          char v74 = v72;
          int16x8_t v75 = (int16x8_t)vdupq_lane_s32(v71, 1);
          int16x8_t v76 = (int16x8_t)vdupq_lane_s32(v71, 0);
          char v77 = 1;
          do
          {
            char v78 = v77;
            int8x16_t v79 = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[2], v76), (int16x8_t)0), v73), (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[3], v75), (int16x8_t)0), v73));
            int16x8_t v80 = *a2;
            int16x8_t v81 = a2[1];
            a2 += 4;
            *uint64_t v28 = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(v80, v76), (int16x8_t)0), v73), (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(v81, v75), (int16x8_t)0), v73));
            *(int8x16_t *)((char *)v28 + v23) = v79;
            uint64_t v28 = (int8x16_t *)((char *)v28 + v38 * 2);
            char v77 = 0;
          }
          while ((v78 & 1) != 0);
          char v72 = 0;
          int32x2_t v71 = (int32x2_t)v43;
        }
        while ((v74 & 1) != 0);
        goto LABEL_79;
      case 1:
        uint64_t v116 = 0;
        v117.i64[0] = 0xFF00FF00FF00FFLL;
        v117.i64[1] = 0xFF00FF00FF00FFLL;
        do
        {
          v118.i32[0] = v28[-1].u8[14];
          v118.i32[1] = v28[-1].u8[15];
          v221.val[1] = (int8x16_t)vdupq_lane_s16(v118, 2);
          v221.val[0] = (int8x16_t)vdupq_lane_s16(v118, 0);
          int16x8_t v119 = (int16x8_t)vqtbl2q_s8(v221, (int8x16_t)xmmword_221A36900);
          *uint64_t v28 = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[v116], v119), (int16x8_t)0), v117), (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[v116 + 1], v119), (int16x8_t)0), v117));
          uint64_t v28 = (int8x16_t *)((char *)v28 + v23);
          v116 += 2;
        }
        while ((v116 * 16) != 256);
        goto LABEL_79;
      case 2:
        uint64_t v120 = 0;
        int32x4_t v121 = (uint8x16_t *)((char *)v28 - (int)v23);
        int16x8_t v122 = (int16x8_t)vmovl_high_u8(*v121);
        int16x8_t v123 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v121->i8);
        v124.i64[0] = 0xFF00FF00FF00FFLL;
        v124.i64[1] = 0xFF00FF00FF00FFLL;
        do
        {
          *uint64_t v28 = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[v120], v123), (int16x8_t)0), v124), (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[v120 + 1], v122), (int16x8_t)0), v124));
          uint64_t v28 = (int8x16_t *)((char *)v28 + v23);
          v120 += 2;
        }
        while ((v120 * 16) != 256);
        goto LABEL_79;
      case 3:
        uint64_t v125 = 0;
        int8x16_t v126 = &v28[-1].u8[-v23 + 14];
        int8x16_t v127 = (unsigned __int8 *)v28 - (int)v23;
        int8x16_t v128 = &v28[-1].u16[2 * v23 + 7];
        int v129 = 65468 * *v126
             + 65485 * *v127
             + 65502 * v127[2]
             + 65519 * v127[4]
             + 17 * v127[8]
             + 34 * v127[10]
             + 51 * v127[12]
             + 68 * v127[14];
        unsigned int v130 = v128[v23];
        unsigned int v131 = *(unsigned __int16 *)((char *)v128 + 3 * v23);
        unsigned int v132 = bswap32(*(unsigned __int16 *)((char *)&v28[-1].u16[7] - v23));
        unsigned int v133 = bswap32(v28[-1].u16[7]);
        unsigned int v134 = bswap32(*(unsigned __int16 *)((char *)&v28[-1].u16[7] + v23));
        unsigned int v135 = bswap32(v28[-1].u16[v23 + 7]);
        unsigned int v136 = bswap32(*v128);
        LODWORD(v128) = bswap32(*(unsigned __int16 *)((char *)v128 + v23));
        LODWORD(v126) = 65468 * v126[1]
                      + 65485 * v127[1]
                      + 65502 * v127[3]
                      + 65519 * v127[5]
                      + 17 * v127[9]
                      + 34 * v127[11]
                      + 51 * v127[13]
                      + 68 * v127[15];
        unsigned int v137 = bswap32(v130);
        unsigned int v138 = bswap32(v131);
        LODWORD(v127) = 17 * (HIBYTE(v136) - HIBYTE(v135))
                      + 34 * ((v128 >> 24) - HIBYTE(v134))
                      + 51 * (HIBYTE(v137) - HIBYTE(v133))
                      + 68 * (HIBYTE(v138) - HIBYTE(v132));
        int v139 = 17 * (BYTE2(v136) - BYTE2(v135))
             + 34 * (BYTE2(v128) - BYTE2(v134))
             + 51 * (BYTE2(v137) - BYTE2(v133))
             + 68 * (BYTE2(v138) - BYTE2(v132))
             + 16;
        int v140 = (v129 << 16) + 0x100000;
        int v141 = (v126 << 16) + 0x100000;
        uint32x2_t v142 = &v28->i8[7 * v23];
        uint32x2_t v143 = &v28->i8[-v23];
        __int16 v144 = v143[14] + *(v142 - 2);
        __int16 v145 = v143[15] + *(v142 - 1);
        int32x2_t v148 = vshr_n_s32(vshl_n_s32((int32x2_t)__PAIR64__(v139, (int)v127 + 16), 0x10uLL), 0x10uLL);
        int32x2_t v149 = vshr_n_s32(v148, 5uLL);
        uint64_t v150 = 0x1000000010;
        int16x4_t v151 = (int16x4_t)vmla_s32((int32x2_t)0x1000000010, v149, vdup_n_s32(0xFFFDu));
        int32x2_t v152 = vadd_s32(v149, v149);
        int32x2_t v153 = vsub_s32((int32x2_t)0x1000000010, v152);
        int32x2_t v154 = vsub_s32((int32x2_t)0x1000000010, v149);
        int32x2_t v155 = vsra_n_s32((int32x2_t)0x1000000010, v148, 5uLL);
        int32x2_t v156 = vadd_s32(v152, (int32x2_t)0x1000000010);
        int32x2_t v157 = vmla_s32((int32x2_t)0x1000000010, v149, (int32x2_t)0x300000003);
        int32x2_t v158 = vadd_s32(vshl_n_s32(v149, 2uLL), (int32x2_t)0x1000000010);
        v159.i64[0] = 0xE000E000E000E000;
        v159.i64[1] = 0xE000E000E000E000;
        v160.i64[0] = 0xFF00FF00FF00FFLL;
        v160.i64[1] = 0xFF00FF00FF00FFLL;
        do
        {
          v222.val[1] = (int8x16_t)vdupq_lane_s16(v151, 2);
          v222.val[0] = (int8x16_t)vdupq_lane_s16(v151, 0);
          int16x4_t v151 = (int16x4_t)v153;
          int32x2_t v153 = v154;
          int32x2_t v154 = (int32x2_t)v150;
          uint64_t v150 = (uint64_t)v155;
          int32x2_t v155 = v156;
          int16x8_t v161 = (int16x8_t)vqtbl2q_s8(v222, (int8x16_t)xmmword_221A36900);
          v147.i16[7] = 16 * v145;
          v147.i16[6] = 16 * v144;
          v147.i16[5] = 16 * v145 - (v141 >> 21);
          v147.i16[4] = 16 * v144 - (v140 >> 21);
          v147.i16[3] = 16 * v145 - 2 * (v141 >> 21);
          v147.i16[2] = 16 * v144 - 2 * (v140 >> 21);
          v147.i16[1] = -3 * (v141 >> 21) + 16 * v145;
          v147.i16[0] = -3 * (v140 >> 21) + 16 * v144;
          v222.val[0] = (int8x16_t)vaddq_s16(v161, v147);
          v146.i16[7] = 16 * v145 + 4 * (v141 >> 21);
          v146.i16[6] = 16 * v144 + 4 * (v140 >> 21);
          v146.i16[5] = 3 * (v141 >> 21) + 16 * v145;
          v146.i16[4] = 3 * (v140 >> 21) + 16 * v144;
          v146.i16[3] = 16 * v145 + 2 * (v141 >> 21);
          v146.i16[2] = 16 * v144 + 2 * (v140 >> 21);
          v146.i16[1] = 16 * v145 + (v141 >> 21);
          v146.i16[0] = 16 * v144 + (v140 >> 21);
          int16x8_t v162 = vaddq_s16(v161, v146);
          int8x16_t v163 = (int8x16_t)vcgtq_s16(v162, v159);
          int8x16_t v164 = (int8x16_t)vcgtq_s16((int16x8_t)v222.val[0], v159);
          *uint64_t v28 = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[v125], (int16x8_t)vorrq_s8((int8x16_t)(*(_OWORD *)&v164 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), vbicq_s8((int8x16_t)(*(_OWORD *)&vandq_s8((int8x16_t)vshrq_n_u16((uint16x8_t)v222.val[0], 5uLL), (int8x16_t)vcgezq_s16((int16x8_t)v222.val[0])) & __PAIR128__(0xF8FFF8FFF8FFF8FFLL, 0xF8FFF8FFF8FFF8FFLL)), v164))), (int16x8_t)0), v160), (int8x16_t)vminq_u16((uint16x8_t)vmaxq_s16(vaddq_s16(a2[v125 + 1],
                                                (int16x8_t)vorrq_s8((int8x16_t)(*(_OWORD *)&v163 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), vbicq_s8((int8x16_t)(*(_OWORD *)&vandq_s8((int8x16_t)vshrq_n_u16((uint16x8_t)v162, 5uLL), (int8x16_t)vcgezq_s16(v162)) & __PAIR128__(0xF8FFF8FFF8FFF8FFLL, 0xF8FFF8FFF8FFF8FFLL)), v163))), (int16x8_t)0), v160));
          uint64_t v28 = (int8x16_t *)((char *)v28 + v23);
          v125 += 2;
          int32x2_t v156 = v157;
          int32x2_t v157 = v158;
          int32x2_t v158 = v155;
        }
        while ((v125 * 16) != 256);
        goto LABEL_79;
      default:
        goto LABEL_51;
    }
  }
  if (*((unsigned char *)a1 + 29) && *(unsigned char *)(v19 + 1363))
  {
    unsigned int v82 = *(_DWORD *)(v19 + 184);
    LODWORD(v83) = 2 * v82;
    int v84 = *(unsigned __int8 *)(v19 + 32);
    uint64_t v85 = *(void *)(v19 + 72) + (16 * v21);
    int v86 = 16 * v20 * v82;
    if (v84)
    {
      char v87 = 4;
    }
    else
    {
      int v86 = 8 * v20 * v82;
      char v87 = 3;
    }
    uint64_t v88 = v85 + (v20 << v87) * v82;
    if (*((unsigned char *)a1 + 30)) {
      unsigned int v89 = v82;
    }
    else {
      unsigned int v89 = v86;
    }
    if (*((unsigned char *)a1 + 30)) {
      uint64_t v85 = v88;
    }
  }
  else
  {
    LODWORD(v83) = *(_DWORD *)(v19 + 184);
    uint64_t v85 = *(void *)(v19 + 72) + (16 * v21);
    unsigned int v89 = 8 * v20 * v83;
  }
  int8x16_t v90 = (int8x16_t *)(v85 + v89);
  switch(a6)
  {
    case 0:
      if (a4 | a3)
      {
        if (a3 <= 0) {
          int v91 = 0;
        }
        else {
          int v91 = -1;
        }
        int32x4_t v92 = (__int16 *)((char *)&v90[-1].i16[7] + (4 * v83));
        uint64_t v93 = (2 * v83);
        uint64_t v94 = (3 * v83);
        uint8x16_t v95 = *(uint8x16_t *)((char *)v90 - (int)(v83 & v91));
        int32x4_t v96 = (__int16 *)((char *)&v90[-1].i16[7] + v83);
        int32x4_t v97 = (__int16 *)((char *)&v90[-1].i16[7] + v93);
        int16x8_t v98 = (__int16 *)((char *)v92 + v83);
        int32x4_t v99 = (__int16 *)((char *)v92 + v93);
        v101.i16[4] = *v92;
        int32x4_t v100 = (__int16 *)((char *)v92 + v94);
        uint64_t v83 = v83;
        v102.i16[0] = v95.u8[0];
        v102.i16[1] = v95.u8[2];
        v102.i16[2] = BYTE4(*(unint64_t *)((char *)v90->i64 - (int)(v83 & v91)));
        v102.i16[3] = BYTE6(*(unint64_t *)((char *)v90->i64 - (int)(v83 & v91)));
        v102.i16[4] = *(uint64_t *)((char *)&v90->i64[1] - (int)(v83 & v91));
        v102.i16[5] = BYTE2(*(uint64_t *)((char *)&v90->i64[1] - (int)(v83 & v91)));
        v102.i16[6] = v95.u8[12];
        v102.i16[7] = v95.u8[14];
        int32x4_t v103 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)(*(_OWORD *)&v95 & __PAIR128__(0xFF00FF00FF00FF00, 0xFF00FF00FF00FF00)))));
        v95.i16[0] = v90[-1].i16[7];
        v95.i16[1] = *v96;
        v95.i16[2] = *v97;
        v95.i16[3] = *(__int16 *)((char *)&v90[-1].i16[7] + v94);
        v95.i16[4] = v101.u8[8];
        v95.i16[5] = *v98;
        v95.i16[6] = *v99;
        v95.i16[7] = *v100;
        int32x4_t v104 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v95)));
        v101.i16[0] = v90[-1].i16[7] & 0xFF00;
        v101.i16[1] = *v96 & 0xFF00;
        v101.i16[2] = *v97 & 0xFF00;
        v101.i16[3] = *(__int16 *)((unsigned char *)&v90[-1].i16[7] + v94) & 0xFF00;
        v101.i16[4] &= 0xFF00u;
        v101.i16[5] = *v98 & 0xFF00;
        v101.i16[6] = *v99 & 0xFF00;
        v101.i16[7] = *v100 & 0xFF00;
        int32x4_t v105 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v101)));
        int16x8_t v106 = (int16x8_t)vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v102))), (int32x4_t)xmmword_221A368B0);
        int16x8_t v107 = (int16x8_t)vaddq_s32(v103, (int32x4_t)xmmword_221A368B0);
        int16x8_t v108 = (int16x8_t)vaddq_s32(v104, (int32x4_t)xmmword_221A368B0);
        int16x8_t v109 = (int16x8_t)vaddq_s32(v105, (int32x4_t)xmmword_221A368B0);
        if ((v91 & a4) != 0)
        {
          v110.i64[0] = 0x2000200020002;
          v110.i64[1] = 0x2000200020002;
          int8x16_t v111 = (int8x16_t)vshlq_u16((uint16x8_t)vqtbl1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)vaddq_s32((int32x4_t)v109, (int32x4_t)v107), 0xEuLL), (int8x16_t)vaddq_s32((int32x4_t)v108, (int32x4_t)v106)), (int8x16_t)xmmword_221A366F0), v110);
          uint16x8_t v112 = (uint16x8_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)vzip2q_s16(v108, v109), 8uLL), vextq_s8((int8x16_t)0, (int8x16_t)vzip2q_s16(v106, v107), 0xCuLL));
          v113.i64[0] = 0x1000100010001;
          v113.i64[1] = 0x1000100010001;
          int8x16_t v114 = vorrq_s8((int8x16_t)vshlq_u16(v112, v113), v111);
        }
        else
        {
          if (a4)
          {
            int8x16_t v201 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v109, 0xEuLL), (int8x16_t)v108);
            int8x16_t v202 = (int8x16_t)xmmword_221A368C0;
          }
          else
          {
            int8x16_t v201 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v107, 0xEuLL), (int8x16_t)v106);
            int8x16_t v202 = (int8x16_t)xmmword_221A368D0;
          }
          uint16x8_t v203 = (uint16x8_t)vqtbl1q_s8(v201, v202);
          v204.i64[0] = 0x1000100010001;
          v204.i64[1] = 0x1000100010001;
          int8x16_t v114 = (int8x16_t)vshlq_u16(v203, v204);
        }
      }
      else
      {
        uint64_t v93 = (2 * v83);
        v114.i64[0] = 0x80008000800080;
        v114.i64[1] = 0x80008000800080;
        uint64_t v83 = v83;
      }
      char v205 = 1;
      do
      {
        char v206 = v205;
        int16x8_t v207 = (int16x8_t)vqtbl1q_s8(v114, (int8x16_t)xmmword_221A36310);
        int16x8_t v208 = (int16x8_t)vqtbl1q_s8(v114, (int8x16_t)xmmword_221A368E0);
        char v209 = 1;
        do
        {
          char v210 = v209;
          int8x16_t v211 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a2[2], v207)), vaddq_s16(a2[3], v208));
          *int8x16_t v90 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*a2, v207)), vaddq_s16(a2[1], v208));
          *(int8x16_t *)((char *)v90 + v83) = v211;
          a2 += 4;
          int8x16_t v90 = (int8x16_t *)((char *)v90 + v93);
          char v209 = 0;
        }
        while ((v210 & 1) != 0);
        char v205 = 0;
        int8x16_t v114 = vqtbl1q_s8(v114, (int8x16_t)xmmword_221A368F0);
      }
      while ((v206 & 1) != 0);
      goto LABEL_79;
    case 1:
      uint64_t v165 = 0;
      do
      {
        int16x8_t v166 = (int16x8_t)vqtbl1q_s8((int8x16_t)((v90[-1].u16[7] | (v90[-1].u16[7] << 8)) & 0xFF00FFLL), (int8x16_t)xmmword_221A36310);
        *int8x16_t v90 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a2[v165], v166)), vaddq_s16(a2[v165 + 1], v166));
        int8x16_t v90 = (int8x16_t *)((char *)v90 + v83);
        v165 += 2;
      }
      while ((v165 * 16) != 256);
      goto LABEL_79;
    case 2:
      uint64_t v167 = 0;
      v168 = (int8x16_t *)((char *)v90 - (int)v83);
      int16x8_t v169 = (int16x8_t)vzip1q_s8(*v168, (int8x16_t)0);
      int16x8_t v170 = (int16x8_t)vzip2q_s8(*v168, (int8x16_t)0);
      do
      {
        *int8x16_t v90 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a2[v167], v169)), vaddq_s16(a2[v167 + 1], v170));
        int8x16_t v90 = (int8x16_t *)((char *)v90 + v83);
        v167 += 2;
      }
      while ((v167 * 16) != 256);
      goto LABEL_79;
    case 3:
      uint64_t v171 = 0;
      int8x16_t v172 = vqtbl1q_s8(*(int8x16_t *)((char *)v90 - (int)v83), (int8x16_t)xmmword_221A36860);
      v172.i16[0] = *(__int16 *)((char *)&v90[-1].i16[7] - (int)v83);
      int8x16_t v173 = vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vsubq_s16((int16x8_t)vzip2q_s8(v172, (int8x16_t)0), (int16x8_t)vzip1q_s8(vqtbl1q_s8(v172, (int8x16_t)xmmword_221A36870), (int8x16_t)0)), (int8x16_t)xmmword_221A36880), (int8x16_t)xmmword_221A36890);
      int32x4_t v174 = vpaddq_s32(vmull_s16(*(int16x4_t *)v173.i8, (int16x4_t)0x22001100220011), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v173, v173, 8uLL), (int16x4_t)0x44003300440033));
      v175.i64[0] = 0x1000000010;
      v175.i64[1] = 0x1000000010;
      v176.i64[0] = 0x400000004;
      v176.i64[1] = 0x400000004;
      int16x8_t v177 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_s32(vaddq_s32(vaddq_s32(v174, v175), (int32x4_t)vextq_s8((int8x16_t)v174, (int8x16_t)0, 8uLL)), v176), (int8x16_t)xmmword_221A368A0), (int8x16_t)xmmword_221A36310);
      v178 = &v90[-1].u8[v83 + 14];
      int v179 = *v178;
      int v180 = v178[1];
      v181 = &v178[v83];
      int v182 = *v181;
      int v183 = v181[1];
      v184 = &v181[(2 * v83)];
      int v185 = *v184;
      int v186 = v184[1];
      v187 = &v184[v83];
      int v188 = *v187;
      int v189 = v187[1];
      v190 = &v187[v83];
      int16x8_t v191 = (int16x8_t)vdupq_n_s32((34816
                                   * (v186
                                    - v183
                                    + 2 * (v189 - v180)
                                    + 3 * (v190[1] - v90[-1].u8[15])
                                    + 4 * (v190[v83 + 1] - v90[-1].u8[-v83 + 15]))
                                   + 0x8000) & 0xFFFF0000 | (unsigned __int16)((17
                                                                              * (v185
                                                                               - v182
                                                                               + 2 * (v188 - v179)
                                                                               + 3 * (*v190 - v90[-1].u8[14])
                                                                               + 4
                                                                               * (v190[v83]
                                                                                - v90[-1].u8[-v83 + 14]))
                                                                              + 16) >> 5));
      v192.i64[0] = 0x2000200020002;
      v192.i64[1] = 0x2000200020002;
      int16x8_t v193 = vmlaq_s16((int16x8_t)vdupq_n_s32((16* (v90->u8[-v83 + 14]+ v90->u8[8 * v83 - v83 - 2])) | ((v90->u8[-v83 + 15] + v90->u8[8 * v83 - v83 - 1]) << 20)), v191, v192);
      v192.i64[0] = 0x10001000100010;
      v192.i64[1] = 0x10001000100010;
      int16x8_t v194 = vaddq_s16(v193, v192);
      int16x8_t v195 = vmlaq_s16(v194, v177, (int16x8_t)xmmword_221A36270);
      int16x8_t v196 = vmlaq_s16(v194, v177, (int16x8_t)xmmword_221A36280);
      v197.i64[0] = 0x4000400040004;
      v197.i64[1] = 0x4000400040004;
      v198.i64[0] = 0xFF00FF00FF00FFLL;
      v198.i64[1] = 0xFF00FF00FF00FFLL;
      do
      {
        int16x8_t v199 = vshlq_s16(v195, v197);
        int16x8_t v195 = vaddq_s16(v195, v191);
        int16x8_t v200 = vshlq_s16(v196, v197);
        int16x8_t v196 = vaddq_s16(v196, v191);
        *int8x16_t v90 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a2[v171], vmaxq_s16(vminq_s16(v199, v198), (int16x8_t)0))), vaddq_s16(a2[v171 + 1], vmaxq_s16(vminq_s16(v200, v198), (int16x8_t)0)));
        int8x16_t v90 = (int8x16_t *)((char *)v90 + v83);
        v171 += 2;
      }
      while ((v171 * 16) != 256);
LABEL_79:
      uint64_t result = 0;
      break;
    default:
LABEL_51:
      uint64_t result = 4294958327;
      break;
  }
  return result;
}

uint64_t sub_2219CDAB8(int8x16_t *a1, unsigned int a2, uint64_t a3, int a4, int a5, int a6)
{
  switch(a6)
  {
    case 0:
      uint64_t v6 = 0;
      uint64_t v7 = a2 & 0xFFFFFFF0;
      int8x16_t v8 = *(int8x16_t *)((char *)a1 - v7);
      int16x8_t v9 = (int16x8_t)vzip1q_s8(v8, (int8x16_t)0);
      int16x8_t v10 = (int16x8_t)vzip2q_s8(v8, (int8x16_t)0);
      do
      {
        *a1 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(a3 + v6), v9)), vaddq_s16(*(int16x8_t *)(a3 + v6 + 16), v10));
        a1 = (int8x16_t *)((char *)a1 + v7);
        v6 += 32;
      }
      while (v6 != 512);
      return 0;
    case 1:
      uint64_t v12 = 0;
      int16x8_t v13 = 0uLL;
      do
      {
        v13.i16[0] = a1[-1].u8[15] | (a1[-1].u8[15] << 8);
        int16x8_t v13 = (int16x8_t)vzip1q_s8(vqtbl1q_s8((int8x16_t)v13, (int8x16_t)xmmword_221A362E0), (int8x16_t)0);
        *a1 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(a3 + v12), v13)), vaddq_s16(*(int16x8_t *)(a3 + v12 + 16), v13));
        a1 = (int8x16_t *)((char *)a1 + (a2 & 0xFFFFFFF0));
        v12 += 32;
      }
      while (v12 != 512);
      return 0;
    case 2:
      if (a4 <= 0) {
        int v14 = 0;
      }
      else {
        int v14 = -1;
      }
      if (!(a5 | a4))
      {
        v53.i64[0] = 0x80008000800080;
        v53.i64[1] = 0x80008000800080;
        goto LABEL_29;
      }
      int16x8_t v15 = (int16x8_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(*(uint8x16_t *)((char *)a1 - (int)(v14 & a2)))));
      int16x8_t v16 = (int16x8_t)vqtbl1q_s8((int8x16_t)vaddq_s16(vaddq_s16(v15, (int16x8_t)xmmword_221A36920), (int16x8_t)vextq_s8((int8x16_t)v15, (int8x16_t)0, 8uLL)), (int8x16_t)xmmword_221A362E0);
      int16x8_t v17 = vzip1q_s16(v16, v16);
      if (!a5)
      {
        v23.i64[0] = 0x3000300030003;
        v23.i64[1] = 0x3000300030003;
        goto LABEL_27;
      }
      int v18 = 0;
      uint64_t v19 = &a1[-1].u8[15];
      int v20 = 8;
      int v21 = 8;
      do
      {
        v21 += *v19;
        v18 += v19[a2];
        v19 += 2 * a2;
        --v20;
      }
      while (v20);
      unsigned int v22 = v18 + v21;
      if ((v14 & a5) != 0)
      {
        int16x8_t v17 = vaddq_s16(vdupq_n_s16(v22), v17);
        v23.i64[0] = 0x4000400040004;
        v23.i64[1] = 0x4000400040004;
LABEL_27:
        int16x8_t v53 = (int16x8_t)vshlq_u16((uint16x8_t)v17, v23);
        goto LABEL_29;
      }
      int16x8_t v53 = vdupq_n_s16(v22 >> 4);
LABEL_29:
      uint64_t v54 = 0;
      do
      {
        *a1 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(a3 + v54), v53)), vaddq_s16(*(int16x8_t *)(a3 + v54 + 16), v53));
        v54 += 32;
        a1 = (int8x16_t *)((char *)a1 + (a2 & 0xFFFFFFF0));
      }
      while (v54 != 512);
      return 0;
    case 3:
      int v24 = 0;
      int v25 = 0;
      uint64_t v26 = (int8x16_t *)((char *)a1 - a2);
      int8x16_t v27 = vzip1q_s8(*v26, (int8x16_t)0);
      int8x16_t v28 = vextq_s8(v27, v27, 0xEuLL);
      v28.i16[0] = v26[-1].u8[15];
      int8x16_t v29 = (int8x16_t)vsubq_s16((int16x8_t)vzip2q_s8(*v26, (int8x16_t)0), (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v28, (int8x16_t)xmmword_221A36870), (int8x16_t)xmmword_221A36910), (int8x16_t)xmmword_221A368F0));
      int32x4_t v30 = vpaddq_s32(vmull_s16(*(int16x4_t *)v29.i8, (int16x4_t)0x14000F000A0005), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v29, v29, 8uLL), (int16x4_t)0x280023001E0019));
      int32x4_t v31 = vaddq_s32(v30, (int32x4_t)vqtbl1q_s8((int8x16_t)v30, (int8x16_t)xmmword_221A368F0));
      v32.i64[0] = 0x2000000020;
      v32.i64[1] = 0x2000000020;
      v33.i64[0] = 0x500000005;
      v33.i64[1] = 0x500000005;
      int32x4_t v34 = vshlq_s32(vaddq_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v31, (int8x16_t)xmmword_221A366E0), vaddq_s32(v31, v32)), v33);
      int16x8_t v35 = vqmovn_high_s32(vqmovn_s32(v34), v34);
      int16x8_t v36 = vmlaq_s16(vdupq_n_s16(16 * (a1->u8[~a2 + 16 * a2] + a1->u8[15 - a2])), v35, (int16x8_t)xmmword_221A36250);
      int16x8_t v37 = &a1[-1].u8[15];
      uint64_t v38 = 2 * a2;
      unsigned int v39 = -2;
      do
      {
        v24 += (v39 - 6) * v37[-a2];
        v25 += (v39 - 5) * *v37;
        v37 += v38;
        v39 += 2;
      }
      while (v39 < 6);
      int16x8_t v40 = vshlq_n_s16(v35, 3uLL);
      uint64_t v41 = (int8x16_t *)((char *)a1 + 4 * v38 + ~(unint64_t)a2 + a2);
      unsigned int v42 = -2;
      do
      {
        v24 += (v42 + 3) * v41->u8[0];
        v25 += (v42 + 4) * v41->u8[a2];
        uint64_t v41 = (int8x16_t *)((char *)v41 + v38);
        v42 += 2;
      }
      while (v42 < 6);
      uint64_t v43 = 0;
      int16x8_t v44 = vaddq_s16(v36, v40);
      int16x8_t v45 = vdupq_n_s16((5 * (v24 + v25) + 32) >> 6);
      v46.i64[0] = 0x10001000100010;
      v46.i64[1] = 0x10001000100010;
      int16x8_t v47 = vmlaq_s16(v46, v45, (int16x8_t)xmmword_221A36250);
      int8x16_t v48 = (int8x16_t)vaddq_s16(vshlq_n_s16(v45, 3uLL), v47);
      v49.i64[0] = 0x4000400040004;
      v49.i64[1] = 0x4000400040004;
      v50.i64[0] = 0xFF00FF00FF00FFLL;
      v50.i64[1] = 0xFF00FF00FF00FFLL;
      do
      {
        int16x8_t v51 = (int16x8_t)vqtbl1q_s8((int8x16_t)v47, (int8x16_t)xmmword_221A362E0);
        int16x8_t v52 = vzip1q_s16(v51, v51);
        *a1 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*(int16x8_t *)(a3 + v43), vmaxq_s16(vminq_s16(vshlq_s16(vaddq_s16(v52, v36), v49), v50), (int16x8_t)0))), vaddq_s16(*(int16x8_t *)(a3 + v43 + 16), vmaxq_s16(vminq_s16(vshlq_s16(vaddq_s16(v44, v52), v49), v50), (int16x8_t)0)));
        int16x8_t v47 = (int16x8_t)vextq_s8((int8x16_t)v47, v48, 2uLL);
        int8x16_t v48 = vextq_s8(v48, v48, 2uLL);
        a1 = (int8x16_t *)((char *)a1 + a2);
        v43 += 32;
      }
      while (v43 != 512);
      return 0;
    default:
      return 4294958327;
  }
}

int *sub_2219CDE90(int *result, uint64_t a2)
{
  uint64_t v229 = *MEMORY[0x263EF8340];
  uint64_t v9 = *((void *)result + 27);
  int v11 = *result;
  int v10 = result[1];
  if (*((unsigned char *)result + 29) && *(unsigned char *)(v9 + 1363))
  {
    uint64_t v12 = v9 + 504;
    uint64_t v13 = *(unsigned int *)(v9 + 168);
    unsigned int v14 = 2 * v13;
    int v15 = *(unsigned __int8 *)(v9 + 32);
    uint64_t v16 = *(void *)(v9 + 64) + (16 * v11);
    if (*((unsigned char *)result + 30))
    {
      if (v15) {
        char v17 = 5;
      }
      else {
        char v17 = 4;
      }
      uint64_t v18 = ((v10 << v17) * v13);
      v16 += v13;
      goto LABEL_16;
    }
    int v19 = v10 * v13;
    if (v15)
    {
      uint64_t v18 = (32 * v19);
      goto LABEL_16;
    }
LABEL_15:
    uint64_t v18 = (16 * v19);
    goto LABEL_16;
  }
  uint64_t v12 = v9 + 440;
  unsigned int v14 = *(_DWORD *)(v9 + 168);
  if (*((unsigned char *)result + 31) != 1)
  {
    if (*((unsigned char *)result + 31))
    {
      uint64_t v21 = *(void *)(v9 + 64)
          + 32 * v14 * (result[4] / (2 * result[5]))
          + ((8 * (result[4] % (2 * result[5]))) & 0xFFFFFFF0)
          + ((result[4] << 31 >> 31) & v14);
      uint64_t v12 = v9 + 504;
      v14 *= 2;
      goto LABEL_17;
    }
    uint64_t v16 = *(void *)(v9 + 64) + (16 * v11);
    int v19 = v10 * v14;
    goto LABEL_15;
  }
  unsigned int v20 = result[4];
  uint64_t v16 = *(void *)(v9 + 64) + 32 * v14 * (v20 / (2 * result[5])) + ((8 * (v20 % (2 * result[5]))) & 0xFFFFFFF0);
  uint64_t v18 = ((int)(v20 << 31) >> 31) & (16 * v14);
LABEL_16:
  uint64_t v21 = v16 + v18;
LABEL_17:
  int v22 = *(unsigned __int8 *)(*((void *)result + 5) + 52);
  uint64_t v23 = *((void *)result + 21);
  uint64_t v24 = *((void *)result + 22) + 32;
  uint64_t v26 = (unsigned __int8 *)*((void *)result + 16);
  int v25 = (unsigned __int8 *)*((void *)result + 17);
  uint64_t v28 = *((void *)result + 18);
  uint64_t v27 = *((void *)result + 19);
  v227 = 0;
  uint64_t v228 = 0;
  uint64_t v225 = v24;
  v226 = 0;
  if (v26)
  {
    if (v26[64]) {
      int8x16_t v29 = v26 + 48;
    }
    else {
      int8x16_t v29 = v26 + 32;
    }
    v226 = v29;
    BOOL v30 = 1;
    if (v25) {
      goto LABEL_22;
    }
  }
  else
  {
    BOOL v30 = 0;
    if (v25)
    {
LABEL_22:
      if (v25[64]) {
        int32x4_t v31 = v25 + 48;
      }
      else {
        int32x4_t v31 = v25 + 32;
      }
      v227 = v31;
      BOOL v32 = 1;
      goto LABEL_28;
    }
  }
  BOOL v32 = 0;
  v227 = 0;
LABEL_28:
  BOOL v33 = v28 != 0;
  BOOL v34 = v27 != 0;
  if (v23)
  {
    if (*(unsigned char *)(v23 + 64)) {
      uint64_t v35 = v23 + 48;
    }
    else {
      uint64_t v35 = v23 + 32;
    }
    uint64_t v228 = v35;
  }
  else
  {
    uint64_t v228 = 0;
  }
  uint64_t v36 = *((void *)result + 6);
  if (*(unsigned char *)(v36 + 4))
  {
    if (v26)
    {
      if (v26[48] == 34)
      {
        BOOL v30 = v26[32] != 34;
        if (!v25) {
          goto LABEL_38;
        }
LABEL_43:
        if (v25[48] == 34)
        {
          BOOL v32 = v25[32] != 34;
          if (!v28) {
            goto LABEL_45;
          }
        }
        else
        {
          BOOL v32 = 1;
          if (!v28) {
            goto LABEL_45;
          }
        }
LABEL_39:
        if (*(unsigned char *)(v28 + 48) == 34)
        {
          BOOL v33 = *(unsigned __int8 *)(v28 + 32) != 34;
          if (!v27)
          {
LABEL_41:
            BOOL v34 = 0;
            goto LABEL_55;
          }
        }
        else
        {
          BOOL v33 = 1;
          if (!v27) {
            goto LABEL_41;
          }
        }
        goto LABEL_46;
      }
      BOOL v30 = 1;
      if (v25) {
        goto LABEL_43;
      }
    }
    else
    {
      BOOL v30 = 0;
      if (v25) {
        goto LABEL_43;
      }
    }
LABEL_38:
    BOOL v32 = 0;
    if (v28) {
      goto LABEL_39;
    }
LABEL_45:
    BOOL v33 = 0;
    if (!v27) {
      goto LABEL_41;
    }
LABEL_46:
    BOOL v34 = *(unsigned char *)(v27 + 48) != 34 || *(unsigned __int8 *)(v27 + 32) != 34;
  }
LABEL_55:
  unsigned int v37 = (2 * v33) | (4 * v32) | (8 * v30) | v34;
  uint64_t v38 = &byte_267F63880;
  if (v26 && (*((unsigned char *)result + 185) & 1) != 0)
  {
    int v39 = *((unsigned __int8 *)result + 31);
    if (v39 != 2 || v26[144])
    {
      if (v39 == 1 && v26[144] == 1)
      {
        uint64_t v38 = (char *)&unk_267F63918;
        if ((result[4] & 1) == 0) {
          uint64_t v38 = (char *)&unk_267F638E8;
        }
      }
    }
    else
    {
      uint64_t v38 = (char *)&unk_267F638B8;
    }
  }
  unint64_t v40 = 0;
  uint64_t v41 = 2 * v14;
  uint64_t v42 = 3 * v14;
  uint64_t v43 = v38 + 16;
  int16x8_t v44 = (int *)((char *)&unk_221A36E80 + 4 * v37);
  v45.i64[0] = 0xE000E000E000ELL;
  v45.i64[1] = 0xE000E000E000ELL;
  v46.i64[0] = -1;
  v46.i64[1] = -1;
  int16x8_t v47 = (int16x8_t)vshlq_u16(v46, v45);
  int16x8_t v48 = vaddq_s16(v47, v47);
  v49.i64[0] = 0x1000100010001;
  v49.i64[1] = 0x1000100010001;
  uint64x2_t v50 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
  uint64x2_t v51 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
  uint64x2_t v52 = (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL);
  v53.i64[0] = 0xF0000000FLL;
  v53.i64[1] = 0xF0000000FLL;
  while (2)
  {
    unint64_t v54 = v43[v40 - 16];
    if (v26 && v40 >= 8 && *((unsigned char *)result + 31) == 2 && !v26[144]) {
      uint64_t v55 = !(v54 & 1) | (2 * !(v54 & 1));
    }
    else {
      uint64_t v55 = !(v54 & 1);
    }
    unint64_t v56 = v43[v40];
    uint64_t v57 = *(&v225 + (~(2 * (_BYTE)v56) & 2));
    uint64_t v58 = *(&v225 + v55);
    if (v57) {
      BOOL v59 = v58 == 0;
    }
    else {
      BOOL v59 = 1;
    }
    if (v59
      || (unsigned int v60 = *(unsigned __int8 *)(v58 + ((v54 >> 1) & 0xF)),
          int v61 = *(unsigned __int8 *)(v57 + ((v56 >> 1) & 0xF)),
          (*(unsigned __int8 *)(*((void *)result + 6) + 4) & ((v61 | v60) >> 5) & 1) != 0))
    {
      unsigned int v62 = 2;
    }
    else
    {
      unsigned int v62 = (((v60 & 0xF) - (v61 & 0xF)) & ((int)((v60 & 0xF) - (v61 & 0xF)) >> 31)) + (v61 & 0xF);
    }
    int v64 = *v44;
    v44 += 16;
    int v63 = v64;
    unsigned int v65 = *(unsigned __int8 *)(v36 + v40 + 310);
    if (v62 <= v65) {
      ++v65;
    }
    int v66 = v65 & (*(unsigned __int8 *)(v36 + v40 + 290) - 1) | v62 & -*(unsigned __int8 *)(v36 + v40 + 290);
    *(unsigned char *)(v24 + v40) = v66;
    int16x8_t v67 = (int *)(v21 + *(unsigned int *)(v12 + 4 * v40));
    switch(v66)
    {
      case 0:
        uint64_t v68 = BYTE1(v63) * v14;
        if (v22)
        {
          unsigned int v69 = (uint64_t *)(a2 + 2 * byte_221A37280[v40]);
          v2.i64[0] = *v69;
          v3.i64[0] = v69[4];
          v4.i64[0] = v69[8];
          v5.i64[0] = v69[12];
          v6.i32[0] = *(int *)((char *)v67 - v68);
          int16x8_t v6 = (int16x8_t)vzip1q_s8((int8x16_t)v6, (int8x16_t)0);
          int16x8_t v2 = vaddq_s16(v6, v2);
          int16x8_t v3 = vaddq_s16(v3, v6);
          int16x8_t v4 = vaddq_s16(v4, v6);
          int16x8_t v5 = vaddq_s16(v5, v6);
          goto LABEL_181;
        }
        int v105 = *(int *)((char *)v67 - v68);
        goto LABEL_195;
      case 1:
        if (v22)
        {
          char v70 = (uint64_t *)(a2 + 2 * byte_221A37280[v40]);
          int32x2_t v71 = (unsigned __int8 *)v67 - v63;
          int v72 = *v71 | (*v71 << 8);
          int v73 = v71[v14] | (v71[v14] << 8);
          v2.i64[0] = *v70;
          v3.i64[0] = v70[4];
          v4.i32[0] = v72 | (v72 << 16);
          int16x8_t v4 = (int16x8_t)vzip1q_s8((int8x16_t)v4, (int8x16_t)0);
          v5.i32[0] = v73 | (v73 << 16);
          int16x8_t v5 = (int16x8_t)vzip1q_s8((int8x16_t)v5, (int8x16_t)0);
          int16x8_t v74 = vaddq_s16(v4, v2);
          int16x8_t v75 = vaddq_s16(v5, v3);
          *(int8x8_t *)v74.i8 = vqmovun_s16(v74);
          *(int8x8_t *)v75.i8 = vqmovun_s16(v75);
          *int16x8_t v67 = v74.i32[0];
          *(int *)((char *)v67 + v14) = v75.i32[0];
          int v76 = v71[v41] | (v71[v41] << 8);
          LODWORD(v71) = v71[v42] | (v71[v42] << 8);
          v74.i32[0] = v76 | (v76 << 16);
          v75.i32[0] = v71 | (v71 << 16);
          v4.i64[0] = v70[8];
          v5.i64[0] = v70[12];
          int16x8_t v2 = vaddq_s16((int16x8_t)vzip1q_s8((int8x16_t)v74, (int8x16_t)0), v4);
          int16x8_t v3 = vaddq_s16((int16x8_t)vzip1q_s8((int8x16_t)v75, (int8x16_t)0), v5);
          *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
          *(int8x8_t *)v3.i8 = vqmovun_s16(v3);
          goto LABEL_182;
        }
        int16x8_t v106 = (unsigned __int8 *)v67 - v63;
        int v107 = *v106 | (*v106 << 8);
        int v108 = v106[v14] | (v106[v14] << 8);
        *int16x8_t v67 = v107 | (v107 << 16);
        *(int *)((char *)v67 + v14) = v108 | (v108 << 16);
        int v109 = v106[v41] | (v106[v41] << 8);
        LODWORD(v106) = v106[v42] | (v106[v42] << 8);
        int v105 = v106 | (v106 << 16);
        *(int *)((char *)v67 + v41) = v109 | (v109 << 16);
        goto LABEL_196;
      case 2:
        int v77 = BYTE1(v63);
        if (v22)
        {
          if ((_BYTE)v63)
          {
            int v78 = *((unsigned __int8 *)v67 - 1);
            int v79 = *((unsigned __int8 *)v67 + v14 - 1);
            int v80 = *((unsigned __int8 *)v67 + v41 - 1);
            int v81 = *((unsigned __int8 *)v67 + v42 - 1);
            if (v77)
            {
              v2.i32[0] = *(int *)((char *)v67 - v14);
              int16x8_t v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
              unsigned int v82 = (vaddvq_s32((int32x4_t)v2) + v81 + v80 + v79 + v78 + 4) >> 3;
LABEL_180:
              v181 = (uint64_t *)(a2 + 2 * byte_221A37280[v40]);
              v2.i64[0] = *v181;
              v3.i64[0] = v181[4];
              v4.i64[0] = v181[8];
              v5.i64[0] = v181[12];
              int16x8_t v6 = (int16x8_t)vzip1q_s8((int8x16_t)(v82 | (v82 << 8) | ((v82 | (v82 << 8)) << 16)), (int8x16_t)0);
              int16x8_t v2 = vaddq_s16(v6, v2);
              int16x8_t v3 = vaddq_s16(v6, v3);
              int16x8_t v4 = vaddq_s16(v6, v4);
              int16x8_t v5 = vaddq_s16(v6, v5);
LABEL_181:
              *int16x8_t v67 = vqmovun_s16(v2).u32[0];
              *(int *)((char *)v67 + v14) = vqmovun_s16(v3).u32[0];
              *(int8x8_t *)v2.i8 = vqmovun_s16(v4);
              *(int8x8_t *)v3.i8 = vqmovun_s16(v5);
LABEL_182:
              *(int *)((char *)v67 + v41) = v2.i32[0];
              *(int *)((char *)v67 + v42) = v3.i32[0];
              goto LABEL_204;
            }
            int v131 = v78 + v79 + v80 + v81;
          }
          else
          {
            if (!BYTE1(v63))
            {
              unsigned int v82 = 128;
              goto LABEL_180;
            }
            v2.i32[0] = *(int *)((char *)v67 - v14);
            int16x8_t v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
            int v131 = vaddvq_s32((int32x4_t)v2);
          }
          unsigned int v82 = (v131 + 2) >> 2;
          goto LABEL_180;
        }
        if ((_BYTE)v63)
        {
          int v110 = *((unsigned __int8 *)v67 - 1);
          int v111 = *((unsigned __int8 *)v67 + v14 - 1);
          int v112 = *((unsigned __int8 *)v67 + v41 - 1);
          int v113 = *((unsigned __int8 *)v67 + v42 - 1);
          if (v77)
          {
            v2.i32[0] = *(int *)((char *)v67 - v14);
            int16x8_t v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
            unsigned int v114 = (vaddvq_s32((int32x4_t)v2) + v113 + v112 + v111 + v110 + 4) >> 3;
            goto LABEL_194;
          }
          int v162 = v110 + v111 + v112 + v113;
          goto LABEL_171;
        }
        if (BYTE1(v63))
        {
          v2.i32[0] = *(int *)((char *)v67 - v14);
          int16x8_t v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
          int v162 = vaddvq_s32((int32x4_t)v2);
LABEL_171:
          unsigned int v114 = (v162 + 2) >> 2;
          goto LABEL_194;
        }
        unsigned int v114 = 128;
LABEL_194:
        int v105 = v114 | (v114 << 8) | ((v114 | (v114 << 8)) << 16);
LABEL_195:
        *int16x8_t v67 = v105;
        *(int *)((char *)v67 + v14) = v105;
        *(int *)((char *)v67 + v41) = v105;
LABEL_196:
        *(int *)((char *)v67 + v42) = v105;
        goto LABEL_204;
      case 3:
        if ((v63 & 0xFF00) != 0) {
          uint64_t v83 = -(uint64_t)v14;
        }
        else {
          uint64_t v83 = 0;
        }
        if (v22)
        {
          unsigned int v84 = *(int *)((char *)v67 + v83);
          if ((v63 & 0xFF0000) != 0) {
            unsigned int v85 = *(int *)((char *)v67 - v14 + 4);
          }
          else {
            unsigned int v85 = v84 & 0xFF000000 | ((v84 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v84 & 0xFF000000 | ((v84 & 0xFF000000) >> 8)) >> 16);
          }
          unsigned int v132 = (uint64_t *)(a2 + 2 * byte_221A37280[v40]);
          v3.i32[0] = v85;
          int16x8_t v133 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v84), (int8x16_t)0);
          int16x8_t v134 = (int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v133, v133), (int8x16_t)0, 2uLL);
          int16x8_t v135 = vaddq_s16(v48, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v133, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36700));
          int16x8_t v136 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v135, vaddq_s16(v134, v133)), v49);
          v134.i64[0] = *v132;
          v135.i64[0] = v132[4];
          v5.i64[0] = v132[8];
          v6.i64[0] = v132[12];
          int16x8_t v3 = vaddq_s16(v136, v134);
          int16x8_t v4 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v136, (int8x16_t)0, 2uLL), v135);
          int16x8_t v7 = (int16x8_t)vextq_s8((int8x16_t)v136, (int8x16_t)0, 4uLL);
          int16x8_t v5 = vaddq_s16(v7, v5);
          int16x8_t v137 = (int16x8_t)vextq_s8((int8x16_t)v136, (int8x16_t)0, 6uLL);
          goto LABEL_152;
        }
        unsigned int v115 = *(int *)((char *)v67 + v83);
        if ((v63 & 0xFF0000) != 0) {
          unsigned int v116 = *(int *)((char *)v67 - v14 + 4);
        }
        else {
          unsigned int v116 = v115 & 0xFF000000 | ((v115 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v115 & 0xFF000000 | ((v115 & 0xFF000000) >> 8)) >> 16);
        }
        v3.i32[0] = v116;
        int16x8_t v163 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v115), (int8x16_t)0);
        int16x8_t v3 = (int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v163, v163), (int8x16_t)0, 2uLL);
        int16x8_t v164 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v48, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v163, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36700)), vaddq_s16(v3, v163)), v49);
        *(int8x8_t *)v3.i8 = vqmovun_s16(v164);
        int16x8_t v4 = (int16x8_t)vextq_s8((int8x16_t)v164, (int8x16_t)0, 2uLL);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v164, (int8x16_t)0, 4uLL);
        *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        *int16x8_t v67 = v3.i32[0];
        *(int *)((char *)v67 + v14) = v4.i32[0];
        int16x8_t v2 = (int16x8_t)vextq_s8((int8x16_t)v164, (int8x16_t)0, 6uLL);
        goto LABEL_169;
      case 4:
        if (!v22)
        {
          if ((_BYTE)v63)
          {
            if (BYTE1(v63))
            {
              unsigned int v117 = *(int *)((char *)v67 - v14);
              unsigned int v118 = *((unsigned __int8 *)v67 - v14 - 1);
            }
            else
            {
              unsigned int v117 = *v67;
              unsigned int v118 = *v67;
            }
            int v165 = *((unsigned __int8 *)v67 + v42 - 1) | (*((unsigned __int8 *)v67 + v41 - 1) << 8) | (*((unsigned __int8 *)v67 + v14 - 1) << 16);
            int v166 = *((unsigned __int8 *)v67 - 1);
          }
          else if (BYTE1(v63))
          {
            unsigned int v117 = *(int *)((char *)v67 - v14);
            unsigned int v118 = v117;
            int v165 = *((unsigned __int8 *)v67 + v42) | (*((unsigned __int8 *)v67 + v41) << 8) | (*((unsigned __int8 *)v67
                                                                                               + v14) << 16);
            int v166 = *(unsigned __int8 *)v67;
          }
          else
          {
            int v166 = *v67;
            unsigned int v118 = *v67;
            int v165 = *((unsigned __int8 *)v67 + v42) | (*((unsigned __int8 *)v67 + v41) << 8) | (*((unsigned __int8 *)v67
                                                                                               + v14) << 16);
            unsigned int v117 = *v67;
          }
          unsigned int v176 = v165 | (v166 << 24);
          int64x2_t v177 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v117, 8uLL), (int8x16_t)v118);
          int16x8_t v6 = (int16x8_t)vshlq_u64((uint64x2_t)v176, v51);
          int16x8_t v178 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)v6, (int8x16_t)vshlq_n_s64(v177, 0x18uLL)), (int8x16_t)0);
          int16x8_t v2 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v178, v178), (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v176, v50), (int8x16_t)vshlq_n_s64(v177, 0x10uLL)), (int8x16_t)xmmword_221A36350), (int8x16_t)0)), vaddq_s16(v48, (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v177, v50), 0x20uLL), (int8x16_t)v176), (int8x16_t)0))),
                            v49);
          int16x8_t v3 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 6uLL);
          v3.i32[0] = vqmovun_s16(v3).u32[0];
          int16x8_t v4 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 4uLL);
          *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
          int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 2uLL);
          goto LABEL_191;
        }
        if ((_BYTE)v63)
        {
          if (BYTE1(v63))
          {
            unsigned int v86 = *(int *)((char *)v67 - v14);
            unsigned int v87 = *((unsigned __int8 *)v67 - v14 - 1);
          }
          else
          {
            unsigned int v86 = *v67;
            unsigned int v87 = *v67;
          }
          int v138 = *((unsigned __int8 *)v67 + v42 - 1) | (*((unsigned __int8 *)v67 + v41 - 1) << 8) | (*((unsigned __int8 *)v67 + v14 - 1) << 16);
          int v139 = *((unsigned __int8 *)v67 - 1);
        }
        else if (BYTE1(v63))
        {
          unsigned int v86 = *(int *)((char *)v67 - v14);
          unsigned int v87 = v86;
          int v138 = *((unsigned __int8 *)v67 + v42) | (*((unsigned __int8 *)v67 + v41) << 8) | (*((unsigned __int8 *)v67
                                                                                             + v14) << 16);
          int v139 = *(unsigned __int8 *)v67;
        }
        else
        {
          int v139 = *v67;
          unsigned int v87 = *v67;
          int v138 = *((unsigned __int8 *)v67 + v42) | (*((unsigned __int8 *)v67 + v41) << 8) | (*((unsigned __int8 *)v67
                                                                                             + v14) << 16);
          unsigned int v86 = *v67;
        }
        int32x2_t v152 = (uint64_t *)(a2 + 2 * byte_221A37280[v40]);
        unsigned int v153 = v138 | (v139 << 24);
        int64x2_t v154 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v86, 8uLL), (int8x16_t)v87);
        uint64x2_t v155 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
        int16x8_t v156 = (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v153, v155), (int8x16_t)vshlq_n_s64(v154, 0x10uLL)), (int8x16_t)xmmword_221A36350), (int8x16_t)0);
        int16x8_t v157 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v153, (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL)), (int8x16_t)vshlq_n_s64(v154, 0x18uLL)), (int8x16_t)0);
        int16x8_t v6 = vaddq_s16(v157, v157);
        int16x8_t v158 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v154, v155), 0x20uLL), (int8x16_t)v153), (int8x16_t)0);
        int16x8_t v159 = vaddq_s16(v6, v156);
        int16x8_t v137 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v159, vaddq_s16(v48, v158)), v49);
        v159.i64[0] = *v152;
        v156.i64[0] = v152[8];
        v6.i64[0] = v152[12];
        int16x8_t v3 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v137, (int8x16_t)0, 6uLL), v159);
        int16x8_t v4 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v137, (int8x16_t)0, 4uLL), (int16x8_t)(unint64_t)v152[4]);
        int16x8_t v7 = (int16x8_t)vextq_s8((int8x16_t)v137, (int8x16_t)0, 2uLL);
        int16x8_t v5 = vaddq_s16(v7, v156);
LABEL_152:
        int16x8_t v2 = vaddq_s16(v137, v6);
        goto LABEL_190;
      case 5:
        if (v22)
        {
          if ((_BYTE)v63)
          {
            if (BYTE1(v63))
            {
              int v88 = *(int *)((char *)v67 - v14);
              unsigned int v89 = v88 | (*((unsigned __int8 *)v67 - v14 - 1) << 8);
            }
            else
            {
              int v88 = *v67;
              unsigned int v89 = *v67 | (*v67 << 8);
            }
            unsigned int v160 = *((unsigned __int8 *)v67 - 1) | (*((unsigned __int8 *)v67 + v14 - 1) << 8);
            int16x8_t v161 = (unsigned __int8 *)v67 + v41 - 1;
          }
          else
          {
            if (BYTE1(v63))
            {
              int v88 = *(int *)((char *)v67 - v14);
              unsigned int v89 = v88 | (v88 << 8);
              int v140 = *(unsigned __int8 *)v67;
            }
            else
            {
              int v88 = *v67;
              int v140 = *v67;
              unsigned int v89 = v140 | (v140 << 8);
            }
            unsigned int v160 = v140 | (*((unsigned __int8 *)v67 + v14) << 8);
            int16x8_t v161 = (unsigned __int8 *)v67 + v41;
          }
          unsigned int v182 = v88;
          uint64x2_t v183 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
          v184 = (uint64_t *)(a2 + 2 * byte_221A37280[v40]);
          int8x16_t v185 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v182, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v89, v183));
          int8x16_t v186 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)(v160 | (unint64_t)(*v161 << 16)), 0x10uLL), (int8x16_t)v89);
          int16x8_t v187 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v185, v183), (int8x16_t)0);
          int16x8_t v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
          int16x8_t v188 = vaddq_s16(v187, (int16x8_t)vzip1q_s8(v185, (int8x16_t)0));
          int16x8_t v189 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v188, v47), v46);
          int16x8_t v6 = vaddq_s16(v48, v187);
          int16x8_t v190 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v188), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v185, (uint64x2_t)v7), (int8x16_t)0)), v49);
          int16x8_t v191 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v186, v183), (int8x16_t)0);
          int64x2_t v192 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v48, (int16x8_t)vzip1q_s8(v186, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v186, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v191, v191)), v49);
          int16x8_t v193 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v189, 0xEuLL);
          int16x8_t v194 = (int16x8_t)vorrq_s8((int8x16_t)v193, (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v192, 0x20uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
          int16x8_t v195 = (int16x8_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v192, (int8x16_t)xmmword_221A36980), 0), (int8x16_t)v190, 0xCuLL);
          v190.i64[0] = *v184;
          v193.i64[0] = v184[4];
          v6.i64[0] = v184[8];
          v7.i64[0] = v184[12];
          int16x8_t v3 = vaddq_s16(v189, v190);
          int16x8_t v8 = (int16x8_t)vextq_s8((int8x16_t)v195, (int8x16_t)0, 2uLL);
          int16x8_t v5 = vaddq_s16(v8, v193);
          int16x8_t v4 = vaddq_s16(v6, v194);
          int16x8_t v2 = vaddq_s16(v7, v195);
          v3.i32[0] = vqmovun_s16(v3).u32[0];
        }
        else
        {
          if ((_BYTE)v63)
          {
            if (BYTE1(v63))
            {
              unsigned int v119 = *(int *)((char *)v67 - v14);
              unsigned int v120 = v119 | (*((unsigned __int8 *)v67 - v14 - 1) << 8);
            }
            else
            {
              unsigned int v119 = *v67;
              unsigned int v120 = *v67 | (*v67 << 8);
            }
            int v179 = *((unsigned __int8 *)v67 - 1) | (*((unsigned __int8 *)v67 + v14 - 1) << 8);
            int v180 = (unsigned __int8 *)v67 + v41 - 1;
          }
          else
          {
            if (BYTE1(v63))
            {
              unsigned int v119 = *(int *)((char *)v67 - v14);
              unsigned int v120 = v119 | (v119 << 8);
              int v167 = *(unsigned __int8 *)v67;
            }
            else
            {
              unsigned int v119 = *v67;
              int v167 = *v67;
              unsigned int v120 = v167 | (v167 << 8);
            }
            int v179 = v167 | (*((unsigned __int8 *)v67 + v14) << 8);
            int v180 = (unsigned __int8 *)v67 + v41;
          }
          uint64x2_t v210 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
          int8x16_t v211 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v119, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v120, v210));
          int8x16_t v212 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)(v179 | (*v180 << 16)), 0x10uLL), (int8x16_t)v120);
          int16x8_t v213 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v211, v210), (int8x16_t)0);
          int16x8_t v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
          int16x8_t v214 = vaddq_s16(v213, (int16x8_t)vzip1q_s8(v211, (int8x16_t)0));
          int16x8_t v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v214, v47), v46);
          int16x8_t v6 = vaddq_s16(v48, v213);
          int16x8_t v3 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v214), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v211, (uint64x2_t)v7), (int8x16_t)0)), v49);
          int16x8_t v215 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v212, v210), (int8x16_t)0);
          int64x2_t v216 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v48, (int16x8_t)vzip1q_s8(v212, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v212, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v215, v215)), v49);
          int16x8_t v4 = (int16x8_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v8, 0xEuLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v216, 0x20uLL), v52));
          int16x8_t v2 = (int16x8_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v216, (int8x16_t)xmmword_221A36980), 0), (int8x16_t)v3, 0xCuLL);
          v3.i32[0] = vqmovun_s16(v8).u32[0];
          int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 2uLL);
        }
        *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        *int16x8_t v67 = v3.i32[0];
        *(int *)((char *)v67 + v14) = v5.i32[0];
        *(int8x8_t *)v3.i8 = vqmovun_s16(v4);
        goto LABEL_202;
      case 6:
        if (v22)
        {
          if ((_BYTE)v63)
          {
            if (BYTE1(v63))
            {
              int v90 = *(int *)((char *)v67 - v14);
              int v91 = *((unsigned __int8 *)v67 - 1);
              unsigned int v92 = (*((unsigned __int8 *)v67 + v41 - 1) << 16) | (*((unsigned __int8 *)v67 + v14 - 1) << 8) | (*((unsigned __int8 *)v67 + v42 - 1) << 24) | v91;
              unsigned int v93 = v91 | (*((unsigned __int8 *)v67 - v14 - 1) << 8);
LABEL_189:
              unsigned int v196 = v90;
              int16x8_t v197 = (uint64_t *)(a2 + 2 * byte_221A37280[v40]);
              uint64x2_t v198 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
              int8x16_t v199 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v92, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v93, v198));
              int8x16_t v200 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v196, 0x10uLL), (int8x16_t)v93);
              int16x8_t v201 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v199, v198), (int8x16_t)0);
              int16x8_t v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
              int16x8_t v202 = vaddq_s16(v201, (int16x8_t)vzip1q_s8(v199, (int8x16_t)0));
              int16x8_t v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v202, v47), v46);
              int16x8_t v6 = vaddq_s16(v48, v201);
              int16x8_t v203 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v202), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v199, (uint64x2_t)v7), (int8x16_t)0)), v49);
              int16x8_t v204 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v200, v198), (int8x16_t)0);
              int64x2_t v205 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v48, (int16x8_t)vzip1q_s8(v200, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v200, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v204, v204)), v49);
              int16x8_t v206 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_n_s64(v205, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64((int64x2_t)v8, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
              int16x8_t v207 = (int16x8_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_221A36950), (int32x4_t)0);
              int8x16_t v208 = vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v203, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_221A36940), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v205, 2uLL), v53), (int8x16_t)v207)), (int8x16_t)xmmword_221A36960);
              v203.i64[1] = 0xF0E0D0C0B0A0908;
              int16x8_t v209 = (int16x8_t)vqtbl1q_s8(v208, (int8x16_t)xmmword_221A36970);
              v203.i64[0] = *v197;
              v207.i64[0] = v197[4];
              v6.i64[0] = v197[8];
              v7.i64[0] = v197[12];
              int16x8_t v3 = vaddq_s16(v203, v206);
              int16x8_t v4 = vaddq_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v209, 1), v207);
              int16x8_t v5 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v209, (int8x16_t)0, 4uLL), v6);
              int16x8_t v2 = vaddq_s16(v7, v209);
              goto LABEL_190;
            }
            int v90 = *v67;
            int v141 = *((unsigned __int8 *)v67 - 1);
            int v142 = *((unsigned __int8 *)v67 + v14 - 1);
            int v143 = *((unsigned __int8 *)v67 + v41 - 1) << 16;
            int v144 = *((unsigned __int8 *)v67 + v42 - 1);
          }
          else
          {
            if (!BYTE1(v63))
            {
              int v90 = *v67;
              int v141 = *v67;
              unsigned int v92 = (*((unsigned __int8 *)v67 + v41) << 16) | (*((unsigned __int8 *)v67 + v14) << 8) | (*((unsigned __int8 *)v67 + v42) << 24) | v141;
              goto LABEL_188;
            }
            int v90 = *(int *)((char *)v67 - v14);
            int v141 = *(unsigned __int8 *)v67;
            int v142 = *((unsigned __int8 *)v67 + v14);
            int v143 = *((unsigned __int8 *)v67 + v41) << 16;
            int v144 = *((unsigned __int8 *)v67 + v42);
          }
          unsigned int v92 = v143 | (v142 << 8) | (v144 << 24) | v141;
LABEL_188:
          unsigned int v93 = v141 & 0xFFFF00FF | (v90 << 8);
          goto LABEL_189;
        }
        if ((_BYTE)v63)
        {
          if (BYTE1(v63))
          {
            unsigned int v121 = *(int *)((char *)v67 - v14);
            int v122 = *((unsigned __int8 *)v67 - 1);
            unsigned int v123 = (*((unsigned __int8 *)v67 + v41 - 1) << 16) | (*((unsigned __int8 *)v67 + v14 - 1) << 8) | (*((unsigned __int8 *)v67 + v42 - 1) << 24) | v122;
            unsigned int v124 = v122 | (*((unsigned __int8 *)v67 - v14 - 1) << 8);
            goto LABEL_208;
          }
          unsigned int v121 = *v67;
          int v168 = *((unsigned __int8 *)v67 - 1);
          int v169 = *((unsigned __int8 *)v67 + v14 - 1);
          int v170 = *((unsigned __int8 *)v67 + v41 - 1) << 16;
          int v171 = *((unsigned __int8 *)v67 + v42 - 1);
          goto LABEL_178;
        }
        if (BYTE1(v63))
        {
          unsigned int v121 = *(int *)((char *)v67 - v14);
          int v168 = *(unsigned __int8 *)v67;
          int v169 = *((unsigned __int8 *)v67 + v14);
          int v170 = *((unsigned __int8 *)v67 + v41) << 16;
          int v171 = *((unsigned __int8 *)v67 + v42);
LABEL_178:
          unsigned int v123 = v170 | (v169 << 8) | (v171 << 24) | v168;
          goto LABEL_207;
        }
        unsigned int v121 = *v67;
        int v168 = *v67;
        unsigned int v123 = (*((unsigned __int8 *)v67 + v41) << 16) | (*((unsigned __int8 *)v67 + v14) << 8) | (*((unsigned __int8 *)v67 + v42) << 24) | v168;
LABEL_207:
        unsigned int v124 = v168 & 0xFFFF00FF | (v121 << 8);
LABEL_208:
        uint64x2_t v217 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
        int8x16_t v218 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v123, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v124, v217));
        int8x16_t v219 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v121, 0x10uLL), (int8x16_t)v124);
        int16x8_t v220 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v218, v217), (int8x16_t)0);
        int16x8_t v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
        int16x8_t v221 = vaddq_s16(v220, (int16x8_t)vzip1q_s8(v218, (int8x16_t)0));
        int16x8_t v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v221, v47), v46);
        int16x8_t v6 = vaddq_s16(v48, v220);
        int8x16_t v222 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v221), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v218, (uint64x2_t)v7), (int8x16_t)0)), v49);
        int16x8_t v223 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v219, v217), (int8x16_t)0);
        int64x2_t v224 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v48, (int16x8_t)vzip1q_s8(v219, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v219, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v223, v223)), v49);
        int16x8_t v4 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_n_s64(v224, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64((int64x2_t)v8, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
        int16x8_t v2 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, v222, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_221A36940), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v224, 2uLL), v53), (int8x16_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_221A36950), (int32x4_t)0))), (int8x16_t)xmmword_221A36960), (int8x16_t)xmmword_221A36970);
        int16x8_t v3 = (int16x8_t)vdupq_laneq_s64((int64x2_t)v2, 1);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 4uLL);
        *int16x8_t v67 = v4.i32[0];
        *(int *)((char *)v67 + v14) = vqmovun_s16(v3).u32[0];
LABEL_192:
        *(int8x8_t *)v3.i8 = vqmovun_s16(v5);
LABEL_202:
        *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
        *(int *)((char *)v67 + v41) = v3.i32[0];
LABEL_203:
        *(int *)((char *)v67 + v42) = v2.i32[0];
LABEL_204:
        if (++v40 != 16) {
          continue;
        }
        return result;
      case 7:
        if ((v63 & 0xFF00) != 0) {
          uint64_t v94 = -(uint64_t)v14;
        }
        else {
          uint64_t v94 = 0;
        }
        if (!v22)
        {
          unsigned int v125 = *(int *)((char *)v67 + v94);
          if ((v63 & 0xFF0000) != 0) {
            unsigned int v126 = *(int *)((char *)v67 - v14 + 4);
          }
          else {
            unsigned int v126 = v125 & 0xFF000000 | ((v125 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v125 & 0xFF000000 | ((v125 & 0xFF000000) >> 8)) >> 16);
          }
          v3.i32[0] = v126;
          int16x8_t v172 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v125), (int8x16_t)0);
          int16x8_t v173 = (int16x8_t)vextq_s8((int8x16_t)v172, (int8x16_t)0, 2uLL);
          int16x8_t v4 = vaddq_s16(v173, v172);
          int16x8_t v174 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v4, v47), v46);
          int16x8_t v3 = vaddq_s16(v48, v173);
          int16x8_t v175 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v3, (int16x8_t)vextq_s8((int8x16_t)v172, (int8x16_t)0, 4uLL)), v4), v49);
          *(int8x8_t *)v3.i8 = vqmovun_s16(v174);
          *(int8x8_t *)v4.i8 = vqmovun_s16(v175);
          int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v174, (int8x16_t)0, 2uLL);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
          *int16x8_t v67 = v3.i32[0];
          *(int *)((char *)v67 + v14) = v4.i32[0];
          int16x8_t v2 = (int16x8_t)vextq_s8((int8x16_t)v175, (int8x16_t)0, 2uLL);
LABEL_169:
          *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
          *(int *)((char *)v67 + v41) = v5.i32[0];
          goto LABEL_203;
        }
        unsigned int v95 = *(int *)((char *)v67 + v94);
        if ((v63 & 0xFF0000) != 0) {
          unsigned int v96 = *(int *)((char *)v67 - v14 + 4);
        }
        else {
          unsigned int v96 = v95 & 0xFF000000 | ((v95 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v95 & 0xFF000000 | ((v95 & 0xFF000000) >> 8)) >> 16);
        }
        __int16 v145 = (uint64_t *)(a2 + 2 * byte_221A37280[v40]);
        v3.i32[0] = v96;
        int16x8_t v146 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v95), (int8x16_t)0);
        int16x8_t v147 = (int16x8_t)vextq_s8((int8x16_t)v146, (int8x16_t)0, 2uLL);
        int16x8_t v148 = vaddq_s16(v147, v146);
        int16x8_t v149 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v148, v47), v46);
        int16x8_t v150 = vaddq_s16(v48, v147);
        int16x8_t v151 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v150, (int16x8_t)vextq_s8((int8x16_t)v146, (int8x16_t)0, 4uLL)), v148), v49);
        v150.i64[0] = *v145;
        v148.i64[0] = v145[4];
        v6.i64[0] = v145[8];
        v7.i64[0] = v145[12];
        int16x8_t v3 = vaddq_s16(v149, v150);
        int16x8_t v4 = vaddq_s16(v151, v148);
        int16x8_t v5 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v149, (int8x16_t)0, 2uLL), v6);
        int16x8_t v2 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v151, (int8x16_t)0, 2uLL), v7);
LABEL_190:
        v3.i32[0] = vqmovun_s16(v3).u32[0];
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
LABEL_191:
        *int16x8_t v67 = v3.i32[0];
        *(int *)((char *)v67 + v14) = v4.i32[0];
        goto LABEL_192;
      case 8:
        if (v22)
        {
          int32x4_t v97 = (uint64_t *)(a2 + 2 * byte_221A37280[v40]);
          int16x8_t v98 = (int16x8_t)vzip1q_s8((int8x16_t)(*((unsigned __int8 *)v67 - v63) | (*((unsigned __int8 *)v67+ v14- v63) << 8) | (*((unsigned __int8 *)v67 + v41 - v63) << 16) | (*((unsigned __int8 *)v67 + v42 - v63) << 24)), (int8x16_t)0);
          int16x8_t v99 = (int16x8_t)vextq_s8((int8x16_t)v98, (int8x16_t)0, 2uLL);
          int16x8_t v100 = vaddq_s16(v99, v98);
          int16x8_t v101 = (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v98, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36710);
          int16x8_t v6 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v100, v47), v46);
          int16x8_t v102 = (int16x8_t)vqtbl1q_s8((int8x16_t)v98, (int8x16_t)xmmword_221A36930);
          int16x8_t v103 = vzip1q_s16(v6, (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v48, v99), v101), v100), v49));
          int16x8_t v104 = (int16x8_t)vextq_s8((int8x16_t)vdupq_laneq_s32((int32x4_t)v103, 2), (int8x16_t)v102, 0xCuLL);
          v101.i64[0] = *v97;
          v6.i64[0] = v97[4];
          v7.i64[0] = v97[8];
          v8.i64[0] = v97[12];
          int16x8_t v5 = vaddq_s16(v103, v101);
          int16x8_t v3 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v103, (int8x16_t)0, 4uLL), v6);
          int16x8_t v4 = vaddq_s16(v104, v7);
          int16x8_t v2 = vaddq_s16(v8, v102);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        }
        else
        {
          int16x8_t v127 = (int16x8_t)vzip1q_s8((int8x16_t)(*((unsigned __int8 *)v67 - v63) | (*((unsigned __int8 *)v67+ v14- v63) << 8) | (*((unsigned __int8 *)v67 + v41 - v63) << 16) | (unint64_t)(*((unsigned __int8 *)v67 + v42 - v63) << 24)), (int8x16_t)0);
          int16x8_t v128 = (int16x8_t)vextq_s8((int8x16_t)v127, (int8x16_t)0, 2uLL);
          int16x8_t v129 = vaddq_s16(v128, v127);
          int16x8_t v5 = (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v127, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36710);
          int16x8_t v6 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v129, v47), v46);
          int16x8_t v2 = (int16x8_t)vqtbl1q_s8((int8x16_t)v127, (int8x16_t)xmmword_221A36930);
          int16x8_t v130 = vzip1q_s16(v6, (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v48, v128), v5), v129), v49));
          int16x8_t v4 = (int16x8_t)vextq_s8((int8x16_t)vdupq_laneq_s32((int32x4_t)v130, 2), (int8x16_t)v2, 0xCuLL);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v130);
          int16x8_t v3 = (int16x8_t)vextq_s8((int8x16_t)v130, (int8x16_t)0, 4uLL);
        }
        *(int8x8_t *)v3.i8 = vqmovun_s16(v3);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        *int16x8_t v67 = v5.i32[0];
        *(int *)((char *)v67 + v14) = v3.i32[0];
        *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
        *(int *)((char *)v67 + v41) = v4.i32[0];
        *(int *)((char *)v67 + v42) = v2.i32[0];
        goto LABEL_204;
      default:
        goto LABEL_204;
    }
  }
}

uint64_t sub_2219CF33C(uint64_t a1, uint64_t a2)
{
  uint64_t v225 = *MEMORY[0x263EF8340];
  uint64_t v9 = *(unsigned __int8 **)(a2 + 72);
  int v10 = *(_DWORD *)(a1 + 824);
  int v11 = *(_DWORD *)(a1 + 828);
  if (*(unsigned char *)(a2 + 20) && *(unsigned char *)(a2 + 22))
  {
    uint64_t v12 = v9 + 472;
    unsigned int v13 = *((_DWORD *)v9 + 34);
    unsigned int v14 = 2 * v13;
    int v15 = *v9;
    uint64_t v16 = *((void *)v9 + 4) + (16 * v10);
    int v17 = 32 * v11 * v13;
    if (v15)
    {
      char v18 = 5;
    }
    else
    {
      int v17 = 16 * v11 * v13;
      char v18 = 4;
    }
    uint64_t v19 = v16 + (v11 << v18) * v13;
    if (*(unsigned char *)(a2 + 21)) {
      unsigned int v20 = v13;
    }
    else {
      unsigned int v20 = v17;
    }
    if (*(unsigned char *)(a2 + 21)) {
      uint64_t v21 = v19;
    }
    else {
      uint64_t v21 = v16;
    }
  }
  else
  {
    uint64_t v12 = v9 + 408;
    unsigned int v14 = *((_DWORD *)v9 + 34);
    if (*(unsigned char *)(a2 + 23) == 1)
    {
      unsigned int v22 = *(_DWORD *)(a1 + 820);
      uint64_t v21 = *((void *)v9 + 4)
          + 32 * v14 * (v22 / (2 * *(_DWORD *)(a2 + 16)))
          + ((8 * (v22 % (2 * *(_DWORD *)(a2 + 16)))) & 0xFFFFFFF0);
      unsigned int v20 = ((int)(v22 << 31) >> 31) & (16 * v14);
    }
    else
    {
      uint64_t v21 = *((void *)v9 + 4) + (16 * v10);
      unsigned int v20 = 16 * v11 * v14;
    }
  }
  int v23 = *(unsigned __int8 *)(a1 + 816);
  uint64_t v24 = *(void *)(a2 + 968);
  int v25 = *(unsigned __int8 **)(a2 + 936);
  uint64_t v26 = *(unsigned __int8 **)(a2 + 944);
  uint64_t v27 = *(unsigned __int8 **)(a2 + 952);
  uint64_t v28 = *(unsigned __int8 **)(a2 + 960);
  int16x8_t v223 = 0;
  uint64_t v224 = 0;
  uint64_t v221 = v24;
  int8x16_t v222 = 0;
  if (v25)
  {
    if (v25[32]) {
      int8x16_t v29 = v25 + 16;
    }
    else {
      int8x16_t v29 = v25;
    }
    int8x16_t v222 = v29;
    BOOL v30 = 1;
    if (v26) {
      goto LABEL_20;
    }
LABEL_24:
    int32x4_t v31 = 0;
    BOOL v32 = 0;
    goto LABEL_25;
  }
  BOOL v30 = 0;
  if (!v26) {
    goto LABEL_24;
  }
LABEL_20:
  int32x4_t v31 = v26 + 16;
  if (!v26[32]) {
    int32x4_t v31 = v26;
  }
  BOOL v32 = 1;
LABEL_25:
  int16x8_t v223 = v31;
  BOOL v33 = v27 != 0;
  BOOL v34 = v28 != 0;
  if (!*(unsigned char *)(a2 + 928)) {
    goto LABEL_46;
  }
  if (!v25)
  {
    BOOL v30 = 0;
    if (v26) {
      goto LABEL_34;
    }
    goto LABEL_29;
  }
  if (v25[16] != 34)
  {
    BOOL v30 = 1;
    if (v26) {
      goto LABEL_34;
    }
LABEL_29:
    BOOL v32 = 0;
    if (v27) {
      goto LABEL_30;
    }
LABEL_36:
    BOOL v33 = 0;
    if (!v28) {
      goto LABEL_32;
    }
    goto LABEL_37;
  }
  BOOL v30 = *v25 != 34;
  if (!v26) {
    goto LABEL_29;
  }
LABEL_34:
  if (v26[16] == 34)
  {
    BOOL v32 = *v26 != 34;
    if (!v27) {
      goto LABEL_36;
    }
  }
  else
  {
    BOOL v32 = 1;
    if (!v27) {
      goto LABEL_36;
    }
  }
LABEL_30:
  if (v27[16] == 34)
  {
    BOOL v33 = *v27 != 34;
    if (!v28)
    {
LABEL_32:
      BOOL v34 = 0;
      goto LABEL_46;
    }
  }
  else
  {
    BOOL v33 = 1;
    if (!v28) {
      goto LABEL_32;
    }
  }
LABEL_37:
  BOOL v34 = v28[16] != 34 || *v28 != 34;
LABEL_46:
  uint64_t v35 = 0;
  uint64_t v36 = v21 + v20;
  uint64_t v37 = a2 + 112;
  uint64_t v38 = 2 * v14;
  uint64_t v39 = 3 * v14;
  uint64_t result = a1 + 1142;
  v41.i64[0] = 0xE000E000E000ELL;
  v41.i64[1] = 0xE000E000E000ELL;
  v42.i64[0] = -1;
  v42.i64[1] = -1;
  int16x8_t v43 = (int16x8_t)vshlq_u16(v42, v41);
  int16x8_t v44 = vaddq_s16(v43, v43);
  v45.i64[0] = 0x1000100010001;
  v45.i64[1] = 0x1000100010001;
  uint64x2_t v46 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
  uint64x2_t v47 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
  uint64x2_t v48 = (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL);
  uint16x8_t v49 = (int *)((char *)&unk_221A36E80 + 4 * ((2 * v33) | (4 * v32) | (8 * v30) | v34));
  v50.i64[0] = 0xF0000000FLL;
  v50.i64[1] = 0xF0000000FLL;
  while (2)
  {
    unint64_t v51 = byte_267F63880[v35];
    unint64_t v52 = byte_267F63880[v35 + 16];
    uint64_t v53 = *(&v221 + (~(2 * (_BYTE)v52) & 2));
    uint64_t v54 = *(&v221 + ((v51 & 1) == 0));
    if (v53) {
      BOOL v55 = v54 == 0;
    }
    else {
      BOOL v55 = 1;
    }
    if (v55
      || (unsigned int v56 = *(unsigned __int8 *)(v54 + ((v51 >> 1) & 0xF)),
          int v57 = *(unsigned __int8 *)(v53 + ((v52 >> 1) & 0xF)),
          (*(unsigned __int8 *)(a2 + 928) & ((v57 | v56) >> 5) & 1) != 0))
    {
      unsigned int v58 = 2;
    }
    else
    {
      unsigned int v58 = (((v56 & 0xF) - (v57 & 0xF)) & ((int)((v56 & 0xF) - (v57 & 0xF)) >> 31)) + (v57 & 0xF);
    }
    int v60 = *v49;
    v49 += 16;
    int v59 = v60;
    unsigned int v61 = *(unsigned __int8 *)(result + v35);
    if (v58 <= v61) {
      ++v61;
    }
    int v62 = v61 & (*(unsigned __int8 *)(result + v35 - 20) - 1) | v58 & -*(unsigned __int8 *)(result + v35 - 20);
    *(unsigned char *)(v24 + v35) = v62;
    int v63 = (int *)(v36 + *(unsigned int *)&v12[4 * v35]);
    switch(v62)
    {
      case 0:
        uint64_t v64 = BYTE1(v59) * v14;
        if (v23)
        {
          unsigned int v65 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
          v2.i64[0] = *v65;
          v3.i64[0] = v65[4];
          v4.i64[0] = v65[8];
          v5.i64[0] = v65[12];
          v6.i32[0] = *(int *)((char *)v63 - v64);
          int16x8_t v6 = (int16x8_t)vzip1q_s8((int8x16_t)v6, (int8x16_t)0);
          int16x8_t v2 = vaddq_s16(v6, v2);
          int16x8_t v3 = vaddq_s16(v3, v6);
          int16x8_t v4 = vaddq_s16(v4, v6);
          int16x8_t v5 = vaddq_s16(v5, v6);
          goto LABEL_157;
        }
        int v101 = *(int *)((char *)v63 - v64);
        goto LABEL_171;
      case 1:
        if (v23)
        {
          int v66 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
          int16x8_t v67 = (unsigned __int8 *)v63 - v59;
          int v68 = *v67 | (*v67 << 8);
          int v69 = v67[v14] | (v67[v14] << 8);
          v2.i64[0] = *v66;
          v3.i64[0] = v66[4];
          v4.i32[0] = v68 | (v68 << 16);
          int16x8_t v4 = (int16x8_t)vzip1q_s8((int8x16_t)v4, (int8x16_t)0);
          v5.i32[0] = v69 | (v69 << 16);
          int16x8_t v5 = (int16x8_t)vzip1q_s8((int8x16_t)v5, (int8x16_t)0);
          int16x8_t v70 = vaddq_s16(v4, v2);
          int16x8_t v71 = vaddq_s16(v5, v3);
          *(int8x8_t *)v70.i8 = vqmovun_s16(v70);
          *(int8x8_t *)v71.i8 = vqmovun_s16(v71);
          *int v63 = v70.i32[0];
          *(int *)((char *)v63 + v14) = v71.i32[0];
          int v72 = v67[v38] | (v67[v38] << 8);
          LODWORD(v67) = v67[v39] | (v67[v39] << 8);
          v70.i32[0] = v72 | (v72 << 16);
          v71.i32[0] = v67 | (v67 << 16);
          v4.i64[0] = v66[8];
          v5.i64[0] = v66[12];
          int16x8_t v2 = vaddq_s16((int16x8_t)vzip1q_s8((int8x16_t)v70, (int8x16_t)0), v4);
          int16x8_t v3 = vaddq_s16((int16x8_t)vzip1q_s8((int8x16_t)v71, (int8x16_t)0), v5);
          *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
          *(int8x8_t *)v3.i8 = vqmovun_s16(v3);
          goto LABEL_158;
        }
        int16x8_t v102 = (unsigned __int8 *)v63 - v59;
        int v103 = *v102 | (*v102 << 8);
        int v104 = v102[v14] | (v102[v14] << 8);
        *int v63 = v103 | (v103 << 16);
        *(int *)((char *)v63 + v14) = v104 | (v104 << 16);
        int v105 = v102[v38] | (v102[v38] << 8);
        LODWORD(v102) = v102[v39] | (v102[v39] << 8);
        int v101 = v102 | (v102 << 16);
        *(int *)((char *)v63 + v38) = v105 | (v105 << 16);
        goto LABEL_172;
      case 2:
        int v73 = BYTE1(v59);
        if (v23)
        {
          if ((_BYTE)v59)
          {
            int v74 = *((unsigned __int8 *)v63 - 1);
            int v75 = *((unsigned __int8 *)v63 + v14 - 1);
            int v76 = *((unsigned __int8 *)v63 + v38 - 1);
            int v77 = *((unsigned __int8 *)v63 + v39 - 1);
            if (v73)
            {
              v2.i32[0] = *(int *)((char *)v63 - v14);
              int16x8_t v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
              unsigned int v78 = (vaddvq_s32((int32x4_t)v2) + v77 + v76 + v75 + v74 + 4) >> 3;
LABEL_156:
              int64x2_t v177 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
              v2.i64[0] = *v177;
              v3.i64[0] = v177[4];
              v4.i64[0] = v177[8];
              v5.i64[0] = v177[12];
              int16x8_t v6 = (int16x8_t)vzip1q_s8((int8x16_t)(v78 | (v78 << 8) | ((v78 | (v78 << 8)) << 16)), (int8x16_t)0);
              int16x8_t v2 = vaddq_s16(v6, v2);
              int16x8_t v3 = vaddq_s16(v6, v3);
              int16x8_t v4 = vaddq_s16(v6, v4);
              int16x8_t v5 = vaddq_s16(v6, v5);
LABEL_157:
              *int v63 = vqmovun_s16(v2).u32[0];
              *(int *)((char *)v63 + v14) = vqmovun_s16(v3).u32[0];
              *(int8x8_t *)v2.i8 = vqmovun_s16(v4);
              *(int8x8_t *)v3.i8 = vqmovun_s16(v5);
LABEL_158:
              *(int *)((char *)v63 + v38) = v2.i32[0];
              *(int *)((char *)v63 + v39) = v3.i32[0];
              goto LABEL_180;
            }
            int v127 = v74 + v75 + v76 + v77;
          }
          else
          {
            if (!BYTE1(v59))
            {
              unsigned int v78 = 128;
              goto LABEL_156;
            }
            v2.i32[0] = *(int *)((char *)v63 - v14);
            int16x8_t v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
            int v127 = vaddvq_s32((int32x4_t)v2);
          }
          unsigned int v78 = (v127 + 2) >> 2;
          goto LABEL_156;
        }
        if ((_BYTE)v59)
        {
          int v106 = *((unsigned __int8 *)v63 - 1);
          int v107 = *((unsigned __int8 *)v63 + v14 - 1);
          int v108 = *((unsigned __int8 *)v63 + v38 - 1);
          int v109 = *((unsigned __int8 *)v63 + v39 - 1);
          if (v73)
          {
            v2.i32[0] = *(int *)((char *)v63 - v14);
            int16x8_t v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
            unsigned int v110 = (vaddvq_s32((int32x4_t)v2) + v109 + v108 + v107 + v106 + 4) >> 3;
            goto LABEL_170;
          }
          int v158 = v106 + v107 + v108 + v109;
          goto LABEL_147;
        }
        if (BYTE1(v59))
        {
          v2.i32[0] = *(int *)((char *)v63 - v14);
          int16x8_t v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
          int v158 = vaddvq_s32((int32x4_t)v2);
LABEL_147:
          unsigned int v110 = (v158 + 2) >> 2;
          goto LABEL_170;
        }
        unsigned int v110 = 128;
LABEL_170:
        int v101 = v110 | (v110 << 8) | ((v110 | (v110 << 8)) << 16);
LABEL_171:
        *int v63 = v101;
        *(int *)((char *)v63 + v14) = v101;
        *(int *)((char *)v63 + v38) = v101;
LABEL_172:
        *(int *)((char *)v63 + v39) = v101;
        goto LABEL_180;
      case 3:
        if ((v59 & 0xFF00) != 0) {
          uint64_t v79 = -(uint64_t)v14;
        }
        else {
          uint64_t v79 = 0;
        }
        if (v23)
        {
          unsigned int v80 = *(int *)((char *)v63 + v79);
          if ((v59 & 0xFF0000) != 0) {
            unsigned int v81 = *(int *)((char *)v63 - v14 + 4);
          }
          else {
            unsigned int v81 = v80 & 0xFF000000 | ((v80 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v80 & 0xFF000000 | ((v80 & 0xFF000000) >> 8)) >> 16);
          }
          int16x8_t v128 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
          v3.i32[0] = v81;
          int16x8_t v129 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v80), (int8x16_t)0);
          int16x8_t v130 = (int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v129, v129), (int8x16_t)0, 2uLL);
          int16x8_t v131 = vaddq_s16(v44, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v129, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36700));
          int16x8_t v132 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v131, vaddq_s16(v130, v129)), v45);
          v130.i64[0] = *v128;
          v131.i64[0] = v128[4];
          v5.i64[0] = v128[8];
          v6.i64[0] = v128[12];
          int16x8_t v3 = vaddq_s16(v132, v130);
          int16x8_t v4 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v132, (int8x16_t)0, 2uLL), v131);
          int16x8_t v7 = (int16x8_t)vextq_s8((int8x16_t)v132, (int8x16_t)0, 4uLL);
          int16x8_t v5 = vaddq_s16(v7, v5);
          int16x8_t v133 = (int16x8_t)vextq_s8((int8x16_t)v132, (int8x16_t)0, 6uLL);
          goto LABEL_128;
        }
        unsigned int v111 = *(int *)((char *)v63 + v79);
        if ((v59 & 0xFF0000) != 0) {
          unsigned int v112 = *(int *)((char *)v63 - v14 + 4);
        }
        else {
          unsigned int v112 = v111 & 0xFF000000 | ((v111 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v111 & 0xFF000000 | ((v111 & 0xFF000000) >> 8)) >> 16);
        }
        v3.i32[0] = v112;
        int16x8_t v159 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v111), (int8x16_t)0);
        int16x8_t v3 = (int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v159, v159), (int8x16_t)0, 2uLL);
        int16x8_t v160 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v44, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v159, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36700)), vaddq_s16(v3, v159)), v45);
        *(int8x8_t *)v3.i8 = vqmovun_s16(v160);
        int16x8_t v4 = (int16x8_t)vextq_s8((int8x16_t)v160, (int8x16_t)0, 2uLL);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v160, (int8x16_t)0, 4uLL);
        *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        *int v63 = v3.i32[0];
        *(int *)((char *)v63 + v14) = v4.i32[0];
        int16x8_t v2 = (int16x8_t)vextq_s8((int8x16_t)v160, (int8x16_t)0, 6uLL);
        goto LABEL_145;
      case 4:
        if (!v23)
        {
          if ((_BYTE)v59)
          {
            if (BYTE1(v59))
            {
              unsigned int v113 = *(int *)((char *)v63 - v14);
              unsigned int v114 = *((unsigned __int8 *)v63 - v14 - 1);
            }
            else
            {
              unsigned int v113 = *v63;
              unsigned int v114 = *v63;
            }
            int v161 = *((unsigned __int8 *)v63 + v39 - 1) | (*((unsigned __int8 *)v63 + v38 - 1) << 8) | (*((unsigned __int8 *)v63 + v14 - 1) << 16);
            int v162 = *((unsigned __int8 *)v63 - 1);
          }
          else if (BYTE1(v59))
          {
            unsigned int v113 = *(int *)((char *)v63 - v14);
            unsigned int v114 = v113;
            int v161 = *((unsigned __int8 *)v63 + v39) | (*((unsigned __int8 *)v63 + v38) << 8) | (*((unsigned __int8 *)v63
                                                                                               + v14) << 16);
            int v162 = *(unsigned __int8 *)v63;
          }
          else
          {
            int v162 = *v63;
            unsigned int v114 = *v63;
            int v161 = *((unsigned __int8 *)v63 + v39) | (*((unsigned __int8 *)v63 + v38) << 8) | (*((unsigned __int8 *)v63
                                                                                               + v14) << 16);
            unsigned int v113 = *v63;
          }
          unsigned int v172 = v161 | (v162 << 24);
          int64x2_t v173 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v113, 8uLL), (int8x16_t)v114);
          int16x8_t v6 = (int16x8_t)vshlq_u64((uint64x2_t)v172, v47);
          int16x8_t v174 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)v6, (int8x16_t)vshlq_n_s64(v173, 0x18uLL)), (int8x16_t)0);
          int16x8_t v2 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v174, v174), (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v172, v46), (int8x16_t)vshlq_n_s64(v173, 0x10uLL)), (int8x16_t)xmmword_221A36350), (int8x16_t)0)), vaddq_s16(v44, (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v173, v46), 0x20uLL), (int8x16_t)v172), (int8x16_t)0))),
                            v45);
          int16x8_t v3 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 6uLL);
          v3.i32[0] = vqmovun_s16(v3).u32[0];
          int16x8_t v4 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 4uLL);
          *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
          int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 2uLL);
          goto LABEL_167;
        }
        if ((_BYTE)v59)
        {
          if (BYTE1(v59))
          {
            unsigned int v82 = *(int *)((char *)v63 - v14);
            unsigned int v83 = *((unsigned __int8 *)v63 - v14 - 1);
          }
          else
          {
            unsigned int v82 = *v63;
            unsigned int v83 = *v63;
          }
          int v134 = *((unsigned __int8 *)v63 + v39 - 1) | (*((unsigned __int8 *)v63 + v38 - 1) << 8) | (*((unsigned __int8 *)v63 + v14 - 1) << 16);
          int v135 = *((unsigned __int8 *)v63 - 1);
        }
        else if (BYTE1(v59))
        {
          unsigned int v82 = *(int *)((char *)v63 - v14);
          unsigned int v83 = v82;
          int v134 = *((unsigned __int8 *)v63 + v39) | (*((unsigned __int8 *)v63 + v38) << 8) | (*((unsigned __int8 *)v63
                                                                                             + v14) << 16);
          int v135 = *(unsigned __int8 *)v63;
        }
        else
        {
          int v135 = *v63;
          unsigned int v83 = *v63;
          int v134 = *((unsigned __int8 *)v63 + v39) | (*((unsigned __int8 *)v63 + v38) << 8) | (*((unsigned __int8 *)v63
                                                                                             + v14) << 16);
          unsigned int v82 = *v63;
        }
        int16x8_t v148 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
        unsigned int v149 = v134 | (v135 << 24);
        int64x2_t v150 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v82, 8uLL), (int8x16_t)v83);
        uint64x2_t v151 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
        int16x8_t v152 = (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v149, v151), (int8x16_t)vshlq_n_s64(v150, 0x10uLL)), (int8x16_t)xmmword_221A36350), (int8x16_t)0);
        int16x8_t v153 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v149, (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL)), (int8x16_t)vshlq_n_s64(v150, 0x18uLL)), (int8x16_t)0);
        int16x8_t v6 = vaddq_s16(v153, v153);
        int16x8_t v154 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v150, v151), 0x20uLL), (int8x16_t)v149), (int8x16_t)0);
        int16x8_t v155 = vaddq_s16(v6, v152);
        int16x8_t v133 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v155, vaddq_s16(v44, v154)), v45);
        v155.i64[0] = *v148;
        v152.i64[0] = v148[8];
        v6.i64[0] = v148[12];
        int16x8_t v3 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v133, (int8x16_t)0, 6uLL), v155);
        int16x8_t v4 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v133, (int8x16_t)0, 4uLL), (int16x8_t)(unint64_t)v148[4]);
        int16x8_t v7 = (int16x8_t)vextq_s8((int8x16_t)v133, (int8x16_t)0, 2uLL);
        int16x8_t v5 = vaddq_s16(v7, v152);
LABEL_128:
        int16x8_t v2 = vaddq_s16(v133, v6);
        goto LABEL_166;
      case 5:
        if (v23)
        {
          if ((_BYTE)v59)
          {
            if (BYTE1(v59))
            {
              int v84 = *(int *)((char *)v63 - v14);
              unsigned int v85 = v84 | (*((unsigned __int8 *)v63 - v14 - 1) << 8);
            }
            else
            {
              int v84 = *v63;
              unsigned int v85 = *v63 | (*v63 << 8);
            }
            unsigned int v156 = *((unsigned __int8 *)v63 - 1) | (*((unsigned __int8 *)v63 + v14 - 1) << 8);
            int16x8_t v157 = (unsigned __int8 *)v63 + v38 - 1;
          }
          else
          {
            if (BYTE1(v59))
            {
              int v84 = *(int *)((char *)v63 - v14);
              unsigned int v85 = v84 | (v84 << 8);
              int v136 = *(unsigned __int8 *)v63;
            }
            else
            {
              int v84 = *v63;
              int v136 = *v63;
              unsigned int v85 = v136 | (v136 << 8);
            }
            unsigned int v156 = v136 | (*((unsigned __int8 *)v63 + v14) << 8);
            int16x8_t v157 = (unsigned __int8 *)v63 + v38;
          }
          unsigned int v178 = v84;
          uint64x2_t v179 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
          int v180 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
          int8x16_t v181 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v178, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v85, v179));
          int8x16_t v182 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)(v156 | (unint64_t)(*v157 << 16)), 0x10uLL), (int8x16_t)v85);
          int16x8_t v183 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v181, v179), (int8x16_t)0);
          int16x8_t v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
          int16x8_t v184 = vaddq_s16(v183, (int16x8_t)vzip1q_s8(v181, (int8x16_t)0));
          int16x8_t v185 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v184, v43), v42);
          int16x8_t v6 = vaddq_s16(v44, v183);
          int16x8_t v186 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v184), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v181, (uint64x2_t)v7), (int8x16_t)0)), v45);
          int16x8_t v187 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v182, v179), (int8x16_t)0);
          int64x2_t v188 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v44, (int16x8_t)vzip1q_s8(v182, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v182, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v187, v187)), v45);
          int16x8_t v189 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v185, 0xEuLL);
          int16x8_t v190 = (int16x8_t)vorrq_s8((int8x16_t)v189, (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v188, 0x20uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
          int16x8_t v191 = (int16x8_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v188, (int8x16_t)xmmword_221A36980), 0), (int8x16_t)v186, 0xCuLL);
          v186.i64[0] = *v180;
          v189.i64[0] = v180[4];
          v6.i64[0] = v180[8];
          v7.i64[0] = v180[12];
          int16x8_t v3 = vaddq_s16(v185, v186);
          int16x8_t v8 = (int16x8_t)vextq_s8((int8x16_t)v191, (int8x16_t)0, 2uLL);
          int16x8_t v5 = vaddq_s16(v8, v189);
          int16x8_t v4 = vaddq_s16(v6, v190);
          int16x8_t v2 = vaddq_s16(v7, v191);
          v3.i32[0] = vqmovun_s16(v3).u32[0];
        }
        else
        {
          if ((_BYTE)v59)
          {
            if (BYTE1(v59))
            {
              unsigned int v115 = *(int *)((char *)v63 - v14);
              unsigned int v116 = v115 | (*((unsigned __int8 *)v63 - v14 - 1) << 8);
            }
            else
            {
              unsigned int v115 = *v63;
              unsigned int v116 = *v63 | (*v63 << 8);
            }
            int v175 = *((unsigned __int8 *)v63 - 1) | (*((unsigned __int8 *)v63 + v14 - 1) << 8);
            unsigned int v176 = (unsigned __int8 *)v63 + v38 - 1;
          }
          else
          {
            if (BYTE1(v59))
            {
              unsigned int v115 = *(int *)((char *)v63 - v14);
              unsigned int v116 = v115 | (v115 << 8);
              int v163 = *(unsigned __int8 *)v63;
            }
            else
            {
              unsigned int v115 = *v63;
              int v163 = *v63;
              unsigned int v116 = v163 | (v163 << 8);
            }
            int v175 = v163 | (*((unsigned __int8 *)v63 + v14) << 8);
            unsigned int v176 = (unsigned __int8 *)v63 + v38;
          }
          uint64x2_t v206 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
          int8x16_t v207 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v115, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v116, v206));
          int8x16_t v208 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)(v175 | (*v176 << 16)), 0x10uLL), (int8x16_t)v116);
          int16x8_t v209 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v207, v206), (int8x16_t)0);
          int16x8_t v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
          int16x8_t v210 = vaddq_s16(v209, (int16x8_t)vzip1q_s8(v207, (int8x16_t)0));
          int16x8_t v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v210, v43), v42);
          int16x8_t v6 = vaddq_s16(v44, v209);
          int16x8_t v3 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v210), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v207, (uint64x2_t)v7), (int8x16_t)0)), v45);
          int16x8_t v211 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v208, v206), (int8x16_t)0);
          int64x2_t v212 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v44, (int16x8_t)vzip1q_s8(v208, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v208, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v211, v211)), v45);
          int16x8_t v4 = (int16x8_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v8, 0xEuLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v212, 0x20uLL), v48));
          int16x8_t v2 = (int16x8_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v212, (int8x16_t)xmmword_221A36980), 0), (int8x16_t)v3, 0xCuLL);
          v3.i32[0] = vqmovun_s16(v8).u32[0];
          int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 2uLL);
        }
        *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        *int v63 = v3.i32[0];
        *(int *)((char *)v63 + v14) = v5.i32[0];
        *(int8x8_t *)v3.i8 = vqmovun_s16(v4);
        goto LABEL_178;
      case 6:
        if (v23)
        {
          if ((_BYTE)v59)
          {
            if (BYTE1(v59))
            {
              int v86 = *(int *)((char *)v63 - v14);
              int v87 = *((unsigned __int8 *)v63 - 1);
              unsigned int v88 = (*((unsigned __int8 *)v63 + v38 - 1) << 16) | (*((unsigned __int8 *)v63 + v14 - 1) << 8) | (*((unsigned __int8 *)v63 + v39 - 1) << 24) | v87;
              unsigned int v89 = v87 | (*((unsigned __int8 *)v63 - v14 - 1) << 8);
LABEL_165:
              unsigned int v192 = v86;
              int16x8_t v193 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
              uint64x2_t v194 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
              int8x16_t v195 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v88, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v89, v194));
              int8x16_t v196 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v192, 0x10uLL), (int8x16_t)v89);
              int16x8_t v197 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v195, v194), (int8x16_t)0);
              int16x8_t v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
              int16x8_t v198 = vaddq_s16(v197, (int16x8_t)vzip1q_s8(v195, (int8x16_t)0));
              int16x8_t v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v198, v43), v42);
              int16x8_t v6 = vaddq_s16(v44, v197);
              int16x8_t v199 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v198), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v195, (uint64x2_t)v7), (int8x16_t)0)), v45);
              int16x8_t v200 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v196, v194), (int8x16_t)0);
              int64x2_t v201 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v44, (int16x8_t)vzip1q_s8(v196, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v196, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v200, v200)), v45);
              int16x8_t v202 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_n_s64(v201, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64((int64x2_t)v8, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
              int16x8_t v203 = (int16x8_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_221A36950), (int32x4_t)0);
              int8x16_t v204 = vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v199, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_221A36940), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v201, 2uLL), v50), (int8x16_t)v203)), (int8x16_t)xmmword_221A36960);
              v199.i64[1] = 0xF0E0D0C0B0A0908;
              int16x8_t v205 = (int16x8_t)vqtbl1q_s8(v204, (int8x16_t)xmmword_221A36970);
              v199.i64[0] = *v193;
              v203.i64[0] = v193[4];
              v6.i64[0] = v193[8];
              v7.i64[0] = v193[12];
              int16x8_t v3 = vaddq_s16(v199, v202);
              int16x8_t v4 = vaddq_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v205, 1), v203);
              int16x8_t v5 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v205, (int8x16_t)0, 4uLL), v6);
              int16x8_t v2 = vaddq_s16(v7, v205);
              goto LABEL_166;
            }
            int v86 = *v63;
            int v137 = *((unsigned __int8 *)v63 - 1);
            int v138 = *((unsigned __int8 *)v63 + v14 - 1);
            int v139 = *((unsigned __int8 *)v63 + v38 - 1) << 16;
            int v140 = *((unsigned __int8 *)v63 + v39 - 1);
          }
          else
          {
            if (!BYTE1(v59))
            {
              int v86 = *v63;
              int v137 = *v63;
              unsigned int v88 = (*((unsigned __int8 *)v63 + v38) << 16) | (*((unsigned __int8 *)v63 + v14) << 8) | (*((unsigned __int8 *)v63 + v39) << 24) | v137;
              goto LABEL_164;
            }
            int v86 = *(int *)((char *)v63 - v14);
            int v137 = *(unsigned __int8 *)v63;
            int v138 = *((unsigned __int8 *)v63 + v14);
            int v139 = *((unsigned __int8 *)v63 + v38) << 16;
            int v140 = *((unsigned __int8 *)v63 + v39);
          }
          unsigned int v88 = v139 | (v138 << 8) | (v140 << 24) | v137;
LABEL_164:
          unsigned int v89 = v137 & 0xFFFF00FF | (v86 << 8);
          goto LABEL_165;
        }
        if ((_BYTE)v59)
        {
          if (BYTE1(v59))
          {
            unsigned int v117 = *(int *)((char *)v63 - v14);
            int v118 = *((unsigned __int8 *)v63 - 1);
            unsigned int v119 = (*((unsigned __int8 *)v63 + v38 - 1) << 16) | (*((unsigned __int8 *)v63 + v14 - 1) << 8) | (*((unsigned __int8 *)v63 + v39 - 1) << 24) | v118;
            unsigned int v120 = v118 | (*((unsigned __int8 *)v63 - v14 - 1) << 8);
            goto LABEL_184;
          }
          unsigned int v117 = *v63;
          int v164 = *((unsigned __int8 *)v63 - 1);
          int v165 = *((unsigned __int8 *)v63 + v14 - 1);
          int v166 = *((unsigned __int8 *)v63 + v38 - 1) << 16;
          int v167 = *((unsigned __int8 *)v63 + v39 - 1);
          goto LABEL_154;
        }
        if (BYTE1(v59))
        {
          unsigned int v117 = *(int *)((char *)v63 - v14);
          int v164 = *(unsigned __int8 *)v63;
          int v165 = *((unsigned __int8 *)v63 + v14);
          int v166 = *((unsigned __int8 *)v63 + v38) << 16;
          int v167 = *((unsigned __int8 *)v63 + v39);
LABEL_154:
          unsigned int v119 = v166 | (v165 << 8) | (v167 << 24) | v164;
          goto LABEL_183;
        }
        unsigned int v117 = *v63;
        int v164 = *v63;
        unsigned int v119 = (*((unsigned __int8 *)v63 + v38) << 16) | (*((unsigned __int8 *)v63 + v14) << 8) | (*((unsigned __int8 *)v63 + v39) << 24) | v164;
LABEL_183:
        unsigned int v120 = v164 & 0xFFFF00FF | (v117 << 8);
LABEL_184:
        uint64x2_t v213 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
        int8x16_t v214 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v119, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v120, v213));
        int8x16_t v215 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v117, 0x10uLL), (int8x16_t)v120);
        int16x8_t v216 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v214, v213), (int8x16_t)0);
        int16x8_t v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
        int16x8_t v217 = vaddq_s16(v216, (int16x8_t)vzip1q_s8(v214, (int8x16_t)0));
        int16x8_t v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v217, v43), v42);
        int16x8_t v6 = vaddq_s16(v44, v216);
        int8x16_t v218 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v217), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v214, (uint64x2_t)v7), (int8x16_t)0)), v45);
        int16x8_t v219 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v215, v213), (int8x16_t)0);
        int64x2_t v220 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v44, (int16x8_t)vzip1q_s8(v215, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v215, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v219, v219)), v45);
        int16x8_t v4 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_n_s64(v220, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64((int64x2_t)v8, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
        int16x8_t v2 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, v218, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_221A36940), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v220, 2uLL), v50), (int8x16_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_221A36950), (int32x4_t)0))), (int8x16_t)xmmword_221A36960), (int8x16_t)xmmword_221A36970);
        int16x8_t v3 = (int16x8_t)vdupq_laneq_s64((int64x2_t)v2, 1);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 4uLL);
        *int v63 = v4.i32[0];
        *(int *)((char *)v63 + v14) = vqmovun_s16(v3).u32[0];
LABEL_168:
        *(int8x8_t *)v3.i8 = vqmovun_s16(v5);
LABEL_178:
        *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
        *(int *)((char *)v63 + v38) = v3.i32[0];
LABEL_179:
        *(int *)((char *)v63 + v39) = v2.i32[0];
LABEL_180:
        if (++v35 != 16) {
          continue;
        }
        return result;
      case 7:
        if ((v59 & 0xFF00) != 0) {
          uint64_t v90 = -(uint64_t)v14;
        }
        else {
          uint64_t v90 = 0;
        }
        if (!v23)
        {
          unsigned int v121 = *(int *)((char *)v63 + v90);
          if ((v59 & 0xFF0000) != 0) {
            unsigned int v122 = *(int *)((char *)v63 - v14 + 4);
          }
          else {
            unsigned int v122 = v121 & 0xFF000000 | ((v121 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v121 & 0xFF000000 | ((v121 & 0xFF000000) >> 8)) >> 16);
          }
          v3.i32[0] = v122;
          int16x8_t v168 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v121), (int8x16_t)0);
          int16x8_t v169 = (int16x8_t)vextq_s8((int8x16_t)v168, (int8x16_t)0, 2uLL);
          int16x8_t v4 = vaddq_s16(v169, v168);
          int16x8_t v170 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v4, v43), v42);
          int16x8_t v3 = vaddq_s16(v44, v169);
          int16x8_t v171 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v3, (int16x8_t)vextq_s8((int8x16_t)v168, (int8x16_t)0, 4uLL)), v4), v45);
          *(int8x8_t *)v3.i8 = vqmovun_s16(v170);
          *(int8x8_t *)v4.i8 = vqmovun_s16(v171);
          int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v170, (int8x16_t)0, 2uLL);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
          *int v63 = v3.i32[0];
          *(int *)((char *)v63 + v14) = v4.i32[0];
          int16x8_t v2 = (int16x8_t)vextq_s8((int8x16_t)v171, (int8x16_t)0, 2uLL);
LABEL_145:
          *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
          *(int *)((char *)v63 + v38) = v5.i32[0];
          goto LABEL_179;
        }
        unsigned int v91 = *(int *)((char *)v63 + v90);
        if ((v59 & 0xFF0000) != 0) {
          unsigned int v92 = *(int *)((char *)v63 - v14 + 4);
        }
        else {
          unsigned int v92 = v91 & 0xFF000000 | ((v91 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v91 & 0xFF000000 | ((v91 & 0xFF000000) >> 8)) >> 16);
        }
        int v141 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
        v3.i32[0] = v92;
        int16x8_t v142 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v91), (int8x16_t)0);
        int16x8_t v143 = (int16x8_t)vextq_s8((int8x16_t)v142, (int8x16_t)0, 2uLL);
        int16x8_t v144 = vaddq_s16(v143, v142);
        int16x8_t v145 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v144, v43), v42);
        int16x8_t v146 = vaddq_s16(v44, v143);
        int16x8_t v147 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v146, (int16x8_t)vextq_s8((int8x16_t)v142, (int8x16_t)0, 4uLL)), v144), v45);
        v146.i64[0] = *v141;
        v144.i64[0] = v141[4];
        v6.i64[0] = v141[8];
        v7.i64[0] = v141[12];
        int16x8_t v3 = vaddq_s16(v145, v146);
        int16x8_t v4 = vaddq_s16(v147, v144);
        int16x8_t v5 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v145, (int8x16_t)0, 2uLL), v6);
        int16x8_t v2 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v147, (int8x16_t)0, 2uLL), v7);
LABEL_166:
        v3.i32[0] = vqmovun_s16(v3).u32[0];
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
LABEL_167:
        *int v63 = v3.i32[0];
        *(int *)((char *)v63 + v14) = v4.i32[0];
        goto LABEL_168;
      case 8:
        if (v23)
        {
          unsigned int v93 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
          int16x8_t v94 = (int16x8_t)vzip1q_s8((int8x16_t)(*((unsigned __int8 *)v63 - v59) | (*((unsigned __int8 *)v63+ v14- v59) << 8) | (*((unsigned __int8 *)v63 + v38 - v59) << 16) | (*((unsigned __int8 *)v63 + v39 - v59) << 24)), (int8x16_t)0);
          int16x8_t v95 = (int16x8_t)vextq_s8((int8x16_t)v94, (int8x16_t)0, 2uLL);
          int16x8_t v96 = vaddq_s16(v95, v94);
          int16x8_t v97 = (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v94, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36710);
          int16x8_t v6 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v96, v43), v42);
          int16x8_t v98 = (int16x8_t)vqtbl1q_s8((int8x16_t)v94, (int8x16_t)xmmword_221A36930);
          int16x8_t v99 = vzip1q_s16(v6, (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v44, v95), v97), v96), v45));
          int16x8_t v100 = (int16x8_t)vextq_s8((int8x16_t)vdupq_laneq_s32((int32x4_t)v99, 2), (int8x16_t)v98, 0xCuLL);
          v97.i64[0] = *v93;
          v6.i64[0] = v93[4];
          v7.i64[0] = v93[8];
          v8.i64[0] = v93[12];
          int16x8_t v5 = vaddq_s16(v99, v97);
          int16x8_t v3 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v99, (int8x16_t)0, 4uLL), v6);
          int16x8_t v4 = vaddq_s16(v100, v7);
          int16x8_t v2 = vaddq_s16(v8, v98);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        }
        else
        {
          int16x8_t v123 = (int16x8_t)vzip1q_s8((int8x16_t)(*((unsigned __int8 *)v63 - v59) | (*((unsigned __int8 *)v63+ v14- v59) << 8) | (*((unsigned __int8 *)v63 + v38 - v59) << 16) | (unint64_t)(*((unsigned __int8 *)v63 + v39 - v59) << 24)), (int8x16_t)0);
          int16x8_t v124 = (int16x8_t)vextq_s8((int8x16_t)v123, (int8x16_t)0, 2uLL);
          int16x8_t v125 = vaddq_s16(v124, v123);
          int16x8_t v5 = (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v123, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36710);
          int16x8_t v6 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v125, v43), v42);
          int16x8_t v2 = (int16x8_t)vqtbl1q_s8((int8x16_t)v123, (int8x16_t)xmmword_221A36930);
          int16x8_t v126 = vzip1q_s16(v6, (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v44, v124), v5), v125), v45));
          int16x8_t v4 = (int16x8_t)vextq_s8((int8x16_t)vdupq_laneq_s32((int32x4_t)v126, 2), (int8x16_t)v2, 0xCuLL);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v126);
          int16x8_t v3 = (int16x8_t)vextq_s8((int8x16_t)v126, (int8x16_t)0, 4uLL);
        }
        *(int8x8_t *)v3.i8 = vqmovun_s16(v3);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        *int v63 = v5.i32[0];
        *(int *)((char *)v63 + v14) = v3.i32[0];
        *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
        *(int *)((char *)v63 + v38) = v4.i32[0];
        *(int *)((char *)v63 + v39) = v2.i32[0];
        goto LABEL_180;
      default:
        goto LABEL_180;
    }
  }
}

uint64_t sub_2219D06F8(uint64_t a1, uint64_t a2)
{
  uint64_t v225 = *MEMORY[0x263EF8340];
  uint64_t v9 = *(unsigned __int8 **)(a2 + 72);
  int v10 = *(_DWORD *)(a1 + 824);
  int v11 = *(_DWORD *)(a1 + 828);
  if (*(unsigned char *)(a2 + 20) && *(unsigned char *)(a2 + 22))
  {
    uint64_t v12 = v9 + 472;
    unsigned int v13 = *((_DWORD *)v9 + 34);
    unsigned int v14 = 2 * v13;
    int v15 = *v9;
    uint64_t v16 = *((void *)v9 + 4) + (16 * v10);
    int v17 = 32 * v11 * v13;
    if (v15)
    {
      char v18 = 5;
    }
    else
    {
      int v17 = 16 * v11 * v13;
      char v18 = 4;
    }
    uint64_t v19 = v16 + (v11 << v18) * v13;
    if (*(unsigned char *)(a2 + 21)) {
      unsigned int v20 = v13;
    }
    else {
      unsigned int v20 = v17;
    }
    if (*(unsigned char *)(a2 + 21)) {
      uint64_t v21 = v19;
    }
    else {
      uint64_t v21 = v16;
    }
  }
  else
  {
    uint64_t v12 = v9 + 408;
    unsigned int v14 = *((_DWORD *)v9 + 34);
    if (*(unsigned char *)(a2 + 23) == 1)
    {
      unsigned int v22 = *(_DWORD *)(a1 + 820);
      uint64_t v21 = *((void *)v9 + 4)
          + 32 * v14 * (v22 / (2 * *(_DWORD *)(a2 + 16)))
          + ((8 * (v22 % (2 * *(_DWORD *)(a2 + 16)))) & 0xFFFFFFF0);
      unsigned int v20 = ((int)(v22 << 31) >> 31) & (16 * v14);
    }
    else
    {
      uint64_t v21 = *((void *)v9 + 4) + (16 * v10);
      unsigned int v20 = 16 * v11 * v14;
    }
  }
  int v23 = *(unsigned __int8 *)(a1 + 816);
  uint64_t v24 = *(void *)(a2 + 968);
  int v25 = *(unsigned char **)(a2 + 936);
  uint64_t v26 = *(unsigned char **)(a2 + 944);
  uint64_t v27 = *(unsigned char **)(a2 + 952);
  uint64_t v28 = *(unsigned char **)(a2 + 960);
  int16x8_t v223 = 0;
  uint64_t v224 = 0;
  uint64_t v221 = v24;
  int8x16_t v222 = 0;
  if (v25)
  {
    if (v25[32]) {
      int8x16_t v29 = v25 + 16;
    }
    else {
      int8x16_t v29 = v25;
    }
    int8x16_t v222 = v29;
    int v30 = 1;
    if (v26) {
      goto LABEL_20;
    }
LABEL_24:
    int32x4_t v31 = 0;
    int v32 = 0;
    goto LABEL_25;
  }
  int v30 = 0;
  if (!v26) {
    goto LABEL_24;
  }
LABEL_20:
  int32x4_t v31 = v26 + 16;
  if (!v26[32]) {
    int32x4_t v31 = v26;
  }
  int v32 = 1;
LABEL_25:
  int16x8_t v223 = v31;
  BOOL v33 = v27 != 0;
  BOOL v34 = v28 != 0;
  if (!*(unsigned char *)(a2 + 928)) {
    goto LABEL_44;
  }
  if (!v25 || v25[16] == 34 || *v25 == 34)
  {
    int v30 = 0;
    if (!v26) {
      goto LABEL_35;
    }
  }
  else
  {
    int v30 = 1;
    if (!v26) {
      goto LABEL_35;
    }
  }
  if (v26[16] == 34 || *v26 == 34)
  {
LABEL_35:
    int v32 = 0;
    if (!v27) {
      goto LABEL_38;
    }
    goto LABEL_36;
  }
  int v32 = 1;
  if (!v27) {
    goto LABEL_38;
  }
LABEL_36:
  if (v27[16] == 34 || *v27 == 34)
  {
LABEL_38:
    BOOL v33 = 0;
    if (!v28) {
      goto LABEL_43;
    }
    goto LABEL_39;
  }
  BOOL v33 = 1;
  if (!v28) {
    goto LABEL_43;
  }
LABEL_39:
  if (v28[16] != 34 && *v28 != 34)
  {
    BOOL v34 = 1;
    goto LABEL_44;
  }
LABEL_43:
  BOOL v34 = 0;
LABEL_44:
  uint64_t v35 = 0;
  uint64_t v36 = v21 + v20;
  uint64_t v37 = a2 + 112;
  uint64_t v38 = 2 * v14;
  uint64_t v39 = 3 * v14;
  uint64_t result = a1 + 1142;
  v41.i64[0] = 0xE000E000E000ELL;
  v41.i64[1] = 0xE000E000E000ELL;
  v42.i64[0] = -1;
  v42.i64[1] = -1;
  int16x8_t v43 = (int16x8_t)vshlq_u16(v42, v41);
  int16x8_t v44 = vaddq_s16(v43, v43);
  v45.i64[0] = 0x1000100010001;
  v45.i64[1] = 0x1000100010001;
  uint64x2_t v46 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
  uint64x2_t v47 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
  uint64x2_t v48 = (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL);
  uint16x8_t v49 = (int *)((char *)&unk_221A36E80 + 4 * ((2 * v33) | (4 * v32) | (8 * v30) | v34));
  v50.i64[0] = 0xF0000000FLL;
  v50.i64[1] = 0xF0000000FLL;
  while (2)
  {
    unint64_t v51 = byte_267F63880[v35];
    unint64_t v52 = byte_267F63880[v35 + 16];
    uint64_t v53 = *(&v221 + (~(2 * (_BYTE)v52) & 2));
    uint64_t v54 = *(&v221 + ((v51 & 1) == 0));
    if (v53) {
      BOOL v55 = v54 == 0;
    }
    else {
      BOOL v55 = 1;
    }
    if (v55
      || (unsigned int v56 = *(unsigned __int8 *)(v54 + ((v51 >> 1) & 0xF)),
          int v57 = *(unsigned __int8 *)(v53 + ((v52 >> 1) & 0xF)),
          (*(unsigned __int8 *)(a2 + 928) & ((v57 | v56) >> 5) & 1) != 0))
    {
      unsigned int v58 = 2;
    }
    else
    {
      unsigned int v58 = (((v56 & 0xF) - (v57 & 0xF)) & ((int)((v56 & 0xF) - (v57 & 0xF)) >> 31)) + (v57 & 0xF);
    }
    int v60 = *v49;
    v49 += 16;
    int v59 = v60;
    unsigned int v61 = *(unsigned __int8 *)(result + v35);
    if (v58 <= v61) {
      ++v61;
    }
    int v62 = v61 & (*(unsigned __int8 *)(result + v35 - 20) - 1) | v58 & -*(unsigned __int8 *)(result + v35 - 20);
    *(unsigned char *)(v24 + v35) = v62;
    int v63 = (int *)(v36 + *(unsigned int *)&v12[4 * v35]);
    switch(v62)
    {
      case 0:
        uint64_t v64 = BYTE1(v59) * v14;
        if (v23)
        {
          unsigned int v65 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
          v2.i64[0] = *v65;
          v3.i64[0] = v65[4];
          v4.i64[0] = v65[8];
          v5.i64[0] = v65[12];
          v6.i32[0] = *(int *)((char *)v63 - v64);
          int16x8_t v6 = (int16x8_t)vzip1q_s8((int8x16_t)v6, (int8x16_t)0);
          int16x8_t v2 = vaddq_s16(v6, v2);
          int16x8_t v3 = vaddq_s16(v3, v6);
          int16x8_t v4 = vaddq_s16(v4, v6);
          int16x8_t v5 = vaddq_s16(v5, v6);
          goto LABEL_155;
        }
        int v101 = *(int *)((char *)v63 - v64);
        goto LABEL_169;
      case 1:
        if (v23)
        {
          int v66 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
          int16x8_t v67 = (unsigned __int8 *)v63 - v59;
          int v68 = *v67 | (*v67 << 8);
          int v69 = v67[v14] | (v67[v14] << 8);
          v2.i64[0] = *v66;
          v3.i64[0] = v66[4];
          v4.i32[0] = v68 | (v68 << 16);
          int16x8_t v4 = (int16x8_t)vzip1q_s8((int8x16_t)v4, (int8x16_t)0);
          v5.i32[0] = v69 | (v69 << 16);
          int16x8_t v5 = (int16x8_t)vzip1q_s8((int8x16_t)v5, (int8x16_t)0);
          int16x8_t v70 = vaddq_s16(v4, v2);
          int16x8_t v71 = vaddq_s16(v5, v3);
          *(int8x8_t *)v70.i8 = vqmovun_s16(v70);
          *(int8x8_t *)v71.i8 = vqmovun_s16(v71);
          *int v63 = v70.i32[0];
          *(int *)((char *)v63 + v14) = v71.i32[0];
          int v72 = v67[v38] | (v67[v38] << 8);
          LODWORD(v67) = v67[v39] | (v67[v39] << 8);
          v70.i32[0] = v72 | (v72 << 16);
          v71.i32[0] = v67 | (v67 << 16);
          v4.i64[0] = v66[8];
          v5.i64[0] = v66[12];
          int16x8_t v2 = vaddq_s16((int16x8_t)vzip1q_s8((int8x16_t)v70, (int8x16_t)0), v4);
          int16x8_t v3 = vaddq_s16((int16x8_t)vzip1q_s8((int8x16_t)v71, (int8x16_t)0), v5);
          *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
          *(int8x8_t *)v3.i8 = vqmovun_s16(v3);
          goto LABEL_156;
        }
        int16x8_t v102 = (unsigned __int8 *)v63 - v59;
        int v103 = *v102 | (*v102 << 8);
        int v104 = v102[v14] | (v102[v14] << 8);
        *int v63 = v103 | (v103 << 16);
        *(int *)((char *)v63 + v14) = v104 | (v104 << 16);
        int v105 = v102[v38] | (v102[v38] << 8);
        LODWORD(v102) = v102[v39] | (v102[v39] << 8);
        int v101 = v102 | (v102 << 16);
        *(int *)((char *)v63 + v38) = v105 | (v105 << 16);
        goto LABEL_170;
      case 2:
        int v73 = BYTE1(v59);
        if (v23)
        {
          if ((_BYTE)v59)
          {
            int v74 = *((unsigned __int8 *)v63 - 1);
            int v75 = *((unsigned __int8 *)v63 + v14 - 1);
            int v76 = *((unsigned __int8 *)v63 + v38 - 1);
            int v77 = *((unsigned __int8 *)v63 + v39 - 1);
            if (v73)
            {
              v2.i32[0] = *(int *)((char *)v63 - v14);
              int16x8_t v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
              unsigned int v78 = (vaddvq_s32((int32x4_t)v2) + v77 + v76 + v75 + v74 + 4) >> 3;
LABEL_154:
              int64x2_t v177 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
              v2.i64[0] = *v177;
              v3.i64[0] = v177[4];
              v4.i64[0] = v177[8];
              v5.i64[0] = v177[12];
              int16x8_t v6 = (int16x8_t)vzip1q_s8((int8x16_t)(v78 | (v78 << 8) | ((v78 | (v78 << 8)) << 16)), (int8x16_t)0);
              int16x8_t v2 = vaddq_s16(v6, v2);
              int16x8_t v3 = vaddq_s16(v6, v3);
              int16x8_t v4 = vaddq_s16(v6, v4);
              int16x8_t v5 = vaddq_s16(v6, v5);
LABEL_155:
              *int v63 = vqmovun_s16(v2).u32[0];
              *(int *)((char *)v63 + v14) = vqmovun_s16(v3).u32[0];
              *(int8x8_t *)v2.i8 = vqmovun_s16(v4);
              *(int8x8_t *)v3.i8 = vqmovun_s16(v5);
LABEL_156:
              *(int *)((char *)v63 + v38) = v2.i32[0];
              *(int *)((char *)v63 + v39) = v3.i32[0];
              goto LABEL_178;
            }
            int v127 = v74 + v75 + v76 + v77;
          }
          else
          {
            if (!BYTE1(v59))
            {
              unsigned int v78 = 128;
              goto LABEL_154;
            }
            v2.i32[0] = *(int *)((char *)v63 - v14);
            int16x8_t v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
            int v127 = vaddvq_s32((int32x4_t)v2);
          }
          unsigned int v78 = (v127 + 2) >> 2;
          goto LABEL_154;
        }
        if ((_BYTE)v59)
        {
          int v106 = *((unsigned __int8 *)v63 - 1);
          int v107 = *((unsigned __int8 *)v63 + v14 - 1);
          int v108 = *((unsigned __int8 *)v63 + v38 - 1);
          int v109 = *((unsigned __int8 *)v63 + v39 - 1);
          if (v73)
          {
            v2.i32[0] = *(int *)((char *)v63 - v14);
            int16x8_t v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
            unsigned int v110 = (vaddvq_s32((int32x4_t)v2) + v109 + v108 + v107 + v106 + 4) >> 3;
            goto LABEL_168;
          }
          int v158 = v106 + v107 + v108 + v109;
          goto LABEL_145;
        }
        if (BYTE1(v59))
        {
          v2.i32[0] = *(int *)((char *)v63 - v14);
          int16x8_t v2 = (int16x8_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
          int v158 = vaddvq_s32((int32x4_t)v2);
LABEL_145:
          unsigned int v110 = (v158 + 2) >> 2;
          goto LABEL_168;
        }
        unsigned int v110 = 128;
LABEL_168:
        int v101 = v110 | (v110 << 8) | ((v110 | (v110 << 8)) << 16);
LABEL_169:
        *int v63 = v101;
        *(int *)((char *)v63 + v14) = v101;
        *(int *)((char *)v63 + v38) = v101;
LABEL_170:
        *(int *)((char *)v63 + v39) = v101;
        goto LABEL_178;
      case 3:
        if ((v59 & 0xFF00) != 0) {
          uint64_t v79 = -(uint64_t)v14;
        }
        else {
          uint64_t v79 = 0;
        }
        if (v23)
        {
          unsigned int v80 = *(int *)((char *)v63 + v79);
          if ((v59 & 0xFF0000) != 0) {
            unsigned int v81 = *(int *)((char *)v63 - v14 + 4);
          }
          else {
            unsigned int v81 = v80 & 0xFF000000 | ((v80 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v80 & 0xFF000000 | ((v80 & 0xFF000000) >> 8)) >> 16);
          }
          int16x8_t v128 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
          v3.i32[0] = v81;
          int16x8_t v129 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v80), (int8x16_t)0);
          int16x8_t v130 = (int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v129, v129), (int8x16_t)0, 2uLL);
          int16x8_t v131 = vaddq_s16(v44, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v129, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36700));
          int16x8_t v132 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v131, vaddq_s16(v130, v129)), v45);
          v130.i64[0] = *v128;
          v131.i64[0] = v128[4];
          v5.i64[0] = v128[8];
          v6.i64[0] = v128[12];
          int16x8_t v3 = vaddq_s16(v132, v130);
          int16x8_t v4 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v132, (int8x16_t)0, 2uLL), v131);
          int16x8_t v7 = (int16x8_t)vextq_s8((int8x16_t)v132, (int8x16_t)0, 4uLL);
          int16x8_t v5 = vaddq_s16(v7, v5);
          int16x8_t v133 = (int16x8_t)vextq_s8((int8x16_t)v132, (int8x16_t)0, 6uLL);
          goto LABEL_126;
        }
        unsigned int v111 = *(int *)((char *)v63 + v79);
        if ((v59 & 0xFF0000) != 0) {
          unsigned int v112 = *(int *)((char *)v63 - v14 + 4);
        }
        else {
          unsigned int v112 = v111 & 0xFF000000 | ((v111 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v111 & 0xFF000000 | ((v111 & 0xFF000000) >> 8)) >> 16);
        }
        v3.i32[0] = v112;
        int16x8_t v159 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v111), (int8x16_t)0);
        int16x8_t v3 = (int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v159, v159), (int8x16_t)0, 2uLL);
        int16x8_t v160 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v44, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v159, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36700)), vaddq_s16(v3, v159)), v45);
        *(int8x8_t *)v3.i8 = vqmovun_s16(v160);
        int16x8_t v4 = (int16x8_t)vextq_s8((int8x16_t)v160, (int8x16_t)0, 2uLL);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v160, (int8x16_t)0, 4uLL);
        *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        *int v63 = v3.i32[0];
        *(int *)((char *)v63 + v14) = v4.i32[0];
        int16x8_t v2 = (int16x8_t)vextq_s8((int8x16_t)v160, (int8x16_t)0, 6uLL);
        goto LABEL_143;
      case 4:
        if (!v23)
        {
          if ((_BYTE)v59)
          {
            if (BYTE1(v59))
            {
              unsigned int v113 = *(int *)((char *)v63 - v14);
              unsigned int v114 = *((unsigned __int8 *)v63 - v14 - 1);
            }
            else
            {
              unsigned int v113 = *v63;
              unsigned int v114 = *v63;
            }
            int v161 = *((unsigned __int8 *)v63 + v39 - 1) | (*((unsigned __int8 *)v63 + v38 - 1) << 8) | (*((unsigned __int8 *)v63 + v14 - 1) << 16);
            int v162 = *((unsigned __int8 *)v63 - 1);
          }
          else if (BYTE1(v59))
          {
            unsigned int v113 = *(int *)((char *)v63 - v14);
            unsigned int v114 = v113;
            int v161 = *((unsigned __int8 *)v63 + v39) | (*((unsigned __int8 *)v63 + v38) << 8) | (*((unsigned __int8 *)v63
                                                                                               + v14) << 16);
            int v162 = *(unsigned __int8 *)v63;
          }
          else
          {
            int v162 = *v63;
            unsigned int v114 = *v63;
            int v161 = *((unsigned __int8 *)v63 + v39) | (*((unsigned __int8 *)v63 + v38) << 8) | (*((unsigned __int8 *)v63
                                                                                               + v14) << 16);
            unsigned int v113 = *v63;
          }
          unsigned int v172 = v161 | (v162 << 24);
          int64x2_t v173 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v113, 8uLL), (int8x16_t)v114);
          int16x8_t v6 = (int16x8_t)vshlq_u64((uint64x2_t)v172, v47);
          int16x8_t v174 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)v6, (int8x16_t)vshlq_n_s64(v173, 0x18uLL)), (int8x16_t)0);
          int16x8_t v2 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v174, v174), (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v172, v46), (int8x16_t)vshlq_n_s64(v173, 0x10uLL)), (int8x16_t)xmmword_221A36350), (int8x16_t)0)), vaddq_s16(v44, (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v173, v46), 0x20uLL), (int8x16_t)v172), (int8x16_t)0))),
                            v45);
          int16x8_t v3 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 6uLL);
          v3.i32[0] = vqmovun_s16(v3).u32[0];
          int16x8_t v4 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 4uLL);
          *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
          int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 2uLL);
          goto LABEL_165;
        }
        if ((_BYTE)v59)
        {
          if (BYTE1(v59))
          {
            unsigned int v82 = *(int *)((char *)v63 - v14);
            unsigned int v83 = *((unsigned __int8 *)v63 - v14 - 1);
          }
          else
          {
            unsigned int v82 = *v63;
            unsigned int v83 = *v63;
          }
          int v134 = *((unsigned __int8 *)v63 + v39 - 1) | (*((unsigned __int8 *)v63 + v38 - 1) << 8) | (*((unsigned __int8 *)v63 + v14 - 1) << 16);
          int v135 = *((unsigned __int8 *)v63 - 1);
        }
        else if (BYTE1(v59))
        {
          unsigned int v82 = *(int *)((char *)v63 - v14);
          unsigned int v83 = v82;
          int v134 = *((unsigned __int8 *)v63 + v39) | (*((unsigned __int8 *)v63 + v38) << 8) | (*((unsigned __int8 *)v63
                                                                                             + v14) << 16);
          int v135 = *(unsigned __int8 *)v63;
        }
        else
        {
          int v135 = *v63;
          unsigned int v83 = *v63;
          int v134 = *((unsigned __int8 *)v63 + v39) | (*((unsigned __int8 *)v63 + v38) << 8) | (*((unsigned __int8 *)v63
                                                                                             + v14) << 16);
          unsigned int v82 = *v63;
        }
        int16x8_t v148 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
        unsigned int v149 = v134 | (v135 << 24);
        int64x2_t v150 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v82, 8uLL), (int8x16_t)v83);
        uint64x2_t v151 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
        int16x8_t v152 = (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v149, v151), (int8x16_t)vshlq_n_s64(v150, 0x10uLL)), (int8x16_t)xmmword_221A36350), (int8x16_t)0);
        int16x8_t v153 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v149, (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL)), (int8x16_t)vshlq_n_s64(v150, 0x18uLL)), (int8x16_t)0);
        int16x8_t v6 = vaddq_s16(v153, v153);
        int16x8_t v154 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v150, v151), 0x20uLL), (int8x16_t)v149), (int8x16_t)0);
        int16x8_t v155 = vaddq_s16(v6, v152);
        int16x8_t v133 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v155, vaddq_s16(v44, v154)), v45);
        v155.i64[0] = *v148;
        v152.i64[0] = v148[8];
        v6.i64[0] = v148[12];
        int16x8_t v3 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v133, (int8x16_t)0, 6uLL), v155);
        int16x8_t v4 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v133, (int8x16_t)0, 4uLL), (int16x8_t)(unint64_t)v148[4]);
        int16x8_t v7 = (int16x8_t)vextq_s8((int8x16_t)v133, (int8x16_t)0, 2uLL);
        int16x8_t v5 = vaddq_s16(v7, v152);
LABEL_126:
        int16x8_t v2 = vaddq_s16(v133, v6);
        goto LABEL_164;
      case 5:
        if (v23)
        {
          if ((_BYTE)v59)
          {
            if (BYTE1(v59))
            {
              int v84 = *(int *)((char *)v63 - v14);
              unsigned int v85 = v84 | (*((unsigned __int8 *)v63 - v14 - 1) << 8);
            }
            else
            {
              int v84 = *v63;
              unsigned int v85 = *v63 | (*v63 << 8);
            }
            unsigned int v156 = *((unsigned __int8 *)v63 - 1) | (*((unsigned __int8 *)v63 + v14 - 1) << 8);
            int16x8_t v157 = (unsigned __int8 *)v63 + v38 - 1;
          }
          else
          {
            if (BYTE1(v59))
            {
              int v84 = *(int *)((char *)v63 - v14);
              unsigned int v85 = v84 | (v84 << 8);
              int v136 = *(unsigned __int8 *)v63;
            }
            else
            {
              int v84 = *v63;
              int v136 = *v63;
              unsigned int v85 = v136 | (v136 << 8);
            }
            unsigned int v156 = v136 | (*((unsigned __int8 *)v63 + v14) << 8);
            int16x8_t v157 = (unsigned __int8 *)v63 + v38;
          }
          unsigned int v178 = v84;
          uint64x2_t v179 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
          int v180 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
          int8x16_t v181 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v178, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v85, v179));
          int8x16_t v182 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)(v156 | (unint64_t)(*v157 << 16)), 0x10uLL), (int8x16_t)v85);
          int16x8_t v183 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v181, v179), (int8x16_t)0);
          int16x8_t v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
          int16x8_t v184 = vaddq_s16(v183, (int16x8_t)vzip1q_s8(v181, (int8x16_t)0));
          int16x8_t v185 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v184, v43), v42);
          int16x8_t v6 = vaddq_s16(v44, v183);
          int16x8_t v186 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v184), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v181, (uint64x2_t)v7), (int8x16_t)0)), v45);
          int16x8_t v187 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v182, v179), (int8x16_t)0);
          int64x2_t v188 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v44, (int16x8_t)vzip1q_s8(v182, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v182, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v187, v187)), v45);
          int16x8_t v189 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v185, 0xEuLL);
          int16x8_t v190 = (int16x8_t)vorrq_s8((int8x16_t)v189, (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v188, 0x20uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
          int16x8_t v191 = (int16x8_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v188, (int8x16_t)xmmword_221A36980), 0), (int8x16_t)v186, 0xCuLL);
          v186.i64[0] = *v180;
          v189.i64[0] = v180[4];
          v6.i64[0] = v180[8];
          v7.i64[0] = v180[12];
          int16x8_t v3 = vaddq_s16(v185, v186);
          int16x8_t v8 = (int16x8_t)vextq_s8((int8x16_t)v191, (int8x16_t)0, 2uLL);
          int16x8_t v5 = vaddq_s16(v8, v189);
          int16x8_t v4 = vaddq_s16(v6, v190);
          int16x8_t v2 = vaddq_s16(v7, v191);
          v3.i32[0] = vqmovun_s16(v3).u32[0];
        }
        else
        {
          if ((_BYTE)v59)
          {
            if (BYTE1(v59))
            {
              unsigned int v115 = *(int *)((char *)v63 - v14);
              unsigned int v116 = v115 | (*((unsigned __int8 *)v63 - v14 - 1) << 8);
            }
            else
            {
              unsigned int v115 = *v63;
              unsigned int v116 = *v63 | (*v63 << 8);
            }
            int v175 = *((unsigned __int8 *)v63 - 1) | (*((unsigned __int8 *)v63 + v14 - 1) << 8);
            unsigned int v176 = (unsigned __int8 *)v63 + v38 - 1;
          }
          else
          {
            if (BYTE1(v59))
            {
              unsigned int v115 = *(int *)((char *)v63 - v14);
              unsigned int v116 = v115 | (v115 << 8);
              int v163 = *(unsigned __int8 *)v63;
            }
            else
            {
              unsigned int v115 = *v63;
              int v163 = *v63;
              unsigned int v116 = v163 | (v163 << 8);
            }
            int v175 = v163 | (*((unsigned __int8 *)v63 + v14) << 8);
            unsigned int v176 = (unsigned __int8 *)v63 + v38;
          }
          uint64x2_t v206 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
          int8x16_t v207 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v115, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v116, v206));
          int8x16_t v208 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)(v175 | (*v176 << 16)), 0x10uLL), (int8x16_t)v116);
          int16x8_t v209 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v207, v206), (int8x16_t)0);
          int16x8_t v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
          int16x8_t v210 = vaddq_s16(v209, (int16x8_t)vzip1q_s8(v207, (int8x16_t)0));
          int16x8_t v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v210, v43), v42);
          int16x8_t v6 = vaddq_s16(v44, v209);
          int16x8_t v3 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v210), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v207, (uint64x2_t)v7), (int8x16_t)0)), v45);
          int16x8_t v211 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v208, v206), (int8x16_t)0);
          int64x2_t v212 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v44, (int16x8_t)vzip1q_s8(v208, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v208, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v211, v211)), v45);
          int16x8_t v4 = (int16x8_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v8, 0xEuLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v212, 0x20uLL), v48));
          int16x8_t v2 = (int16x8_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v212, (int8x16_t)xmmword_221A36980), 0), (int8x16_t)v3, 0xCuLL);
          v3.i32[0] = vqmovun_s16(v8).u32[0];
          int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 2uLL);
        }
        *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        *int v63 = v3.i32[0];
        *(int *)((char *)v63 + v14) = v5.i32[0];
        *(int8x8_t *)v3.i8 = vqmovun_s16(v4);
        goto LABEL_176;
      case 6:
        if (v23)
        {
          if ((_BYTE)v59)
          {
            if (BYTE1(v59))
            {
              int v86 = *(int *)((char *)v63 - v14);
              int v87 = *((unsigned __int8 *)v63 - 1);
              unsigned int v88 = (*((unsigned __int8 *)v63 + v38 - 1) << 16) | (*((unsigned __int8 *)v63 + v14 - 1) << 8) | (*((unsigned __int8 *)v63 + v39 - 1) << 24) | v87;
              unsigned int v89 = v87 | (*((unsigned __int8 *)v63 - v14 - 1) << 8);
LABEL_163:
              unsigned int v192 = v86;
              int16x8_t v193 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
              uint64x2_t v194 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
              int8x16_t v195 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v88, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v89, v194));
              int8x16_t v196 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v192, 0x10uLL), (int8x16_t)v89);
              int16x8_t v197 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v195, v194), (int8x16_t)0);
              int16x8_t v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
              int16x8_t v198 = vaddq_s16(v197, (int16x8_t)vzip1q_s8(v195, (int8x16_t)0));
              int16x8_t v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v198, v43), v42);
              int16x8_t v6 = vaddq_s16(v44, v197);
              int16x8_t v199 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v198), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v195, (uint64x2_t)v7), (int8x16_t)0)), v45);
              int16x8_t v200 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v196, v194), (int8x16_t)0);
              int64x2_t v201 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v44, (int16x8_t)vzip1q_s8(v196, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v196, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v200, v200)), v45);
              int16x8_t v202 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_n_s64(v201, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64((int64x2_t)v8, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
              int16x8_t v203 = (int16x8_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_221A36950), (int32x4_t)0);
              int8x16_t v204 = vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v199, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_221A36940), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v201, 2uLL), v50), (int8x16_t)v203)), (int8x16_t)xmmword_221A36960);
              v199.i64[1] = 0xF0E0D0C0B0A0908;
              int16x8_t v205 = (int16x8_t)vqtbl1q_s8(v204, (int8x16_t)xmmword_221A36970);
              v199.i64[0] = *v193;
              v203.i64[0] = v193[4];
              v6.i64[0] = v193[8];
              v7.i64[0] = v193[12];
              int16x8_t v3 = vaddq_s16(v199, v202);
              int16x8_t v4 = vaddq_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v205, 1), v203);
              int16x8_t v5 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v205, (int8x16_t)0, 4uLL), v6);
              int16x8_t v2 = vaddq_s16(v7, v205);
              goto LABEL_164;
            }
            int v86 = *v63;
            int v137 = *((unsigned __int8 *)v63 - 1);
            int v138 = *((unsigned __int8 *)v63 + v14 - 1);
            int v139 = *((unsigned __int8 *)v63 + v38 - 1) << 16;
            int v140 = *((unsigned __int8 *)v63 + v39 - 1);
          }
          else
          {
            if (!BYTE1(v59))
            {
              int v86 = *v63;
              int v137 = *v63;
              unsigned int v88 = (*((unsigned __int8 *)v63 + v38) << 16) | (*((unsigned __int8 *)v63 + v14) << 8) | (*((unsigned __int8 *)v63 + v39) << 24) | v137;
              goto LABEL_162;
            }
            int v86 = *(int *)((char *)v63 - v14);
            int v137 = *(unsigned __int8 *)v63;
            int v138 = *((unsigned __int8 *)v63 + v14);
            int v139 = *((unsigned __int8 *)v63 + v38) << 16;
            int v140 = *((unsigned __int8 *)v63 + v39);
          }
          unsigned int v88 = v139 | (v138 << 8) | (v140 << 24) | v137;
LABEL_162:
          unsigned int v89 = v137 & 0xFFFF00FF | (v86 << 8);
          goto LABEL_163;
        }
        if ((_BYTE)v59)
        {
          if (BYTE1(v59))
          {
            unsigned int v117 = *(int *)((char *)v63 - v14);
            int v118 = *((unsigned __int8 *)v63 - 1);
            unsigned int v119 = (*((unsigned __int8 *)v63 + v38 - 1) << 16) | (*((unsigned __int8 *)v63 + v14 - 1) << 8) | (*((unsigned __int8 *)v63 + v39 - 1) << 24) | v118;
            unsigned int v120 = v118 | (*((unsigned __int8 *)v63 - v14 - 1) << 8);
            goto LABEL_182;
          }
          unsigned int v117 = *v63;
          int v164 = *((unsigned __int8 *)v63 - 1);
          int v165 = *((unsigned __int8 *)v63 + v14 - 1);
          int v166 = *((unsigned __int8 *)v63 + v38 - 1) << 16;
          int v167 = *((unsigned __int8 *)v63 + v39 - 1);
          goto LABEL_152;
        }
        if (BYTE1(v59))
        {
          unsigned int v117 = *(int *)((char *)v63 - v14);
          int v164 = *(unsigned __int8 *)v63;
          int v165 = *((unsigned __int8 *)v63 + v14);
          int v166 = *((unsigned __int8 *)v63 + v38) << 16;
          int v167 = *((unsigned __int8 *)v63 + v39);
LABEL_152:
          unsigned int v119 = v166 | (v165 << 8) | (v167 << 24) | v164;
          goto LABEL_181;
        }
        unsigned int v117 = *v63;
        int v164 = *v63;
        unsigned int v119 = (*((unsigned __int8 *)v63 + v38) << 16) | (*((unsigned __int8 *)v63 + v14) << 8) | (*((unsigned __int8 *)v63 + v39) << 24) | v164;
LABEL_181:
        unsigned int v120 = v164 & 0xFFFF00FF | (v117 << 8);
LABEL_182:
        uint64x2_t v213 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
        int8x16_t v214 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v119, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v120, v213));
        int8x16_t v215 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v117, 0x10uLL), (int8x16_t)v120);
        int16x8_t v216 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v214, v213), (int8x16_t)0);
        int16x8_t v7 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
        int16x8_t v217 = vaddq_s16(v216, (int16x8_t)vzip1q_s8(v214, (int8x16_t)0));
        int16x8_t v8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v217, v43), v42);
        int16x8_t v6 = vaddq_s16(v44, v216);
        int8x16_t v218 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v6, v217), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v214, (uint64x2_t)v7), (int8x16_t)0)), v45);
        int16x8_t v219 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v215, v213), (int8x16_t)0);
        int64x2_t v220 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v44, (int16x8_t)vzip1q_s8(v215, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v215, (uint64x2_t)v7), (int8x16_t)0)), vaddq_s16(v219, v219)), v45);
        int16x8_t v4 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_n_s64(v220, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64((int64x2_t)v8, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
        int16x8_t v2 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, v218, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_221A36940), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v220, 2uLL), v50), (int8x16_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_221A36950), (int32x4_t)0))), (int8x16_t)xmmword_221A36960), (int8x16_t)xmmword_221A36970);
        int16x8_t v3 = (int16x8_t)vdupq_laneq_s64((int64x2_t)v2, 1);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v2, (int8x16_t)0, 4uLL);
        *int v63 = v4.i32[0];
        *(int *)((char *)v63 + v14) = vqmovun_s16(v3).u32[0];
LABEL_166:
        *(int8x8_t *)v3.i8 = vqmovun_s16(v5);
LABEL_176:
        *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
        *(int *)((char *)v63 + v38) = v3.i32[0];
LABEL_177:
        *(int *)((char *)v63 + v39) = v2.i32[0];
LABEL_178:
        if (++v35 != 16) {
          continue;
        }
        return result;
      case 7:
        if ((v59 & 0xFF00) != 0) {
          uint64_t v90 = -(uint64_t)v14;
        }
        else {
          uint64_t v90 = 0;
        }
        if (!v23)
        {
          unsigned int v121 = *(int *)((char *)v63 + v90);
          if ((v59 & 0xFF0000) != 0) {
            unsigned int v122 = *(int *)((char *)v63 - v14 + 4);
          }
          else {
            unsigned int v122 = v121 & 0xFF000000 | ((v121 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v121 & 0xFF000000 | ((v121 & 0xFF000000) >> 8)) >> 16);
          }
          v3.i32[0] = v122;
          int16x8_t v168 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v121), (int8x16_t)0);
          int16x8_t v169 = (int16x8_t)vextq_s8((int8x16_t)v168, (int8x16_t)0, 2uLL);
          int16x8_t v4 = vaddq_s16(v169, v168);
          int16x8_t v170 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v4, v43), v42);
          int16x8_t v3 = vaddq_s16(v44, v169);
          int16x8_t v171 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v3, (int16x8_t)vextq_s8((int8x16_t)v168, (int8x16_t)0, 4uLL)), v4), v45);
          *(int8x8_t *)v3.i8 = vqmovun_s16(v170);
          *(int8x8_t *)v4.i8 = vqmovun_s16(v171);
          int16x8_t v5 = (int16x8_t)vextq_s8((int8x16_t)v170, (int8x16_t)0, 2uLL);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
          *int v63 = v3.i32[0];
          *(int *)((char *)v63 + v14) = v4.i32[0];
          int16x8_t v2 = (int16x8_t)vextq_s8((int8x16_t)v171, (int8x16_t)0, 2uLL);
LABEL_143:
          *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
          *(int *)((char *)v63 + v38) = v5.i32[0];
          goto LABEL_177;
        }
        unsigned int v91 = *(int *)((char *)v63 + v90);
        if ((v59 & 0xFF0000) != 0) {
          unsigned int v92 = *(int *)((char *)v63 - v14 + 4);
        }
        else {
          unsigned int v92 = v91 & 0xFF000000 | ((v91 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v91 & 0xFF000000 | ((v91 & 0xFF000000) >> 8)) >> 16);
        }
        int v141 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
        v3.i32[0] = v92;
        int16x8_t v142 = (int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v3, 0xCuLL), (int8x16_t)v91), (int8x16_t)0);
        int16x8_t v143 = (int16x8_t)vextq_s8((int8x16_t)v142, (int8x16_t)0, 2uLL);
        int16x8_t v144 = vaddq_s16(v143, v142);
        int16x8_t v145 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v144, v43), v42);
        int16x8_t v146 = vaddq_s16(v44, v143);
        int16x8_t v147 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v146, (int16x8_t)vextq_s8((int8x16_t)v142, (int8x16_t)0, 4uLL)), v144), v45);
        v146.i64[0] = *v141;
        v144.i64[0] = v141[4];
        v6.i64[0] = v141[8];
        v7.i64[0] = v141[12];
        int16x8_t v3 = vaddq_s16(v145, v146);
        int16x8_t v4 = vaddq_s16(v147, v144);
        int16x8_t v5 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v145, (int8x16_t)0, 2uLL), v6);
        int16x8_t v2 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v147, (int8x16_t)0, 2uLL), v7);
LABEL_164:
        v3.i32[0] = vqmovun_s16(v3).u32[0];
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
LABEL_165:
        *int v63 = v3.i32[0];
        *(int *)((char *)v63 + v14) = v4.i32[0];
        goto LABEL_166;
      case 8:
        if (v23)
        {
          unsigned int v93 = (uint64_t *)(v37 + 2 * byte_221A37280[v35]);
          int16x8_t v94 = (int16x8_t)vzip1q_s8((int8x16_t)(*((unsigned __int8 *)v63 - v59) | (*((unsigned __int8 *)v63+ v14- v59) << 8) | (*((unsigned __int8 *)v63 + v38 - v59) << 16) | (*((unsigned __int8 *)v63 + v39 - v59) << 24)), (int8x16_t)0);
          int16x8_t v95 = (int16x8_t)vextq_s8((int8x16_t)v94, (int8x16_t)0, 2uLL);
          int16x8_t v96 = vaddq_s16(v95, v94);
          int16x8_t v97 = (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v94, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36710);
          int16x8_t v6 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v96, v43), v42);
          int16x8_t v98 = (int16x8_t)vqtbl1q_s8((int8x16_t)v94, (int8x16_t)xmmword_221A36930);
          int16x8_t v99 = vzip1q_s16(v6, (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v44, v95), v97), v96), v45));
          int16x8_t v100 = (int16x8_t)vextq_s8((int8x16_t)vdupq_laneq_s32((int32x4_t)v99, 2), (int8x16_t)v98, 0xCuLL);
          v97.i64[0] = *v93;
          v6.i64[0] = v93[4];
          v7.i64[0] = v93[8];
          v8.i64[0] = v93[12];
          int16x8_t v5 = vaddq_s16(v99, v97);
          int16x8_t v3 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v99, (int8x16_t)0, 4uLL), v6);
          int16x8_t v4 = vaddq_s16(v100, v7);
          int16x8_t v2 = vaddq_s16(v8, v98);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v5);
        }
        else
        {
          int16x8_t v123 = (int16x8_t)vzip1q_s8((int8x16_t)(*((unsigned __int8 *)v63 - v59) | (*((unsigned __int8 *)v63+ v14- v59) << 8) | (*((unsigned __int8 *)v63 + v38 - v59) << 16) | (unint64_t)(*((unsigned __int8 *)v63 + v39 - v59) << 24)), (int8x16_t)0);
          int16x8_t v124 = (int16x8_t)vextq_s8((int8x16_t)v123, (int8x16_t)0, 2uLL);
          int16x8_t v125 = vaddq_s16(v124, v123);
          int16x8_t v5 = (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v123, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36710);
          int16x8_t v6 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v125, v43), v42);
          int16x8_t v2 = (int16x8_t)vqtbl1q_s8((int8x16_t)v123, (int8x16_t)xmmword_221A36930);
          int16x8_t v126 = vzip1q_s16(v6, (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v44, v124), v5), v125), v45));
          int16x8_t v4 = (int16x8_t)vextq_s8((int8x16_t)vdupq_laneq_s32((int32x4_t)v126, 2), (int8x16_t)v2, 0xCuLL);
          *(int8x8_t *)v5.i8 = vqmovun_s16(v126);
          int16x8_t v3 = (int16x8_t)vextq_s8((int8x16_t)v126, (int8x16_t)0, 4uLL);
        }
        *(int8x8_t *)v3.i8 = vqmovun_s16(v3);
        *(int8x8_t *)v4.i8 = vqmovun_s16(v4);
        *int v63 = v5.i32[0];
        *(int *)((char *)v63 + v14) = v3.i32[0];
        *(int8x8_t *)v2.i8 = vqmovun_s16(v2);
        *(int *)((char *)v63 + v38) = v4.i32[0];
        *(int *)((char *)v63 + v39) = v2.i32[0];
        goto LABEL_178;
      default:
        goto LABEL_178;
    }
  }
}

unsigned __int8 *sub_2219D1A9C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, int16x8_t a8, int16x8_t a9)
{
  uint64_t v225 = *MEMORY[0x263EF8340];
  uint64_t v9 = *(void *)(a2 + 72);
  int v10 = *(_DWORD *)(a1 + 824);
  int v11 = *(_DWORD *)(a1 + 828);
  if (!*(unsigned char *)(a2 + 20) || !*(unsigned char *)(a2 + 22))
  {
    uint64_t v12 = v9 + 408;
    unsigned int v14 = *(_DWORD *)(v9 + 136);
    if (*(unsigned char *)(a2 + 23) == 1)
    {
      unsigned int v18 = *(_DWORD *)(a1 + 820);
      uint64_t v15 = *(void *)(v9 + 32)
          + 32 * v14 * (v18 / (2 * *(_DWORD *)(a2 + 16)))
          + ((8 * (v18 % (2 * *(_DWORD *)(a2 + 16)))) & 0xFFFFFFF0);
      unsigned int v13 = ((int)(v18 << 31) >> 31) & (16 * v14);
      goto LABEL_14;
    }
    uint64_t v15 = *(void *)(v9 + 32) + (16 * v10);
    int v17 = v11 * v14;
    goto LABEL_10;
  }
  uint64_t v12 = v9 + 472;
  unsigned int v13 = *(_DWORD *)(v9 + 136);
  unsigned int v14 = 2 * v13;
  uint64_t v15 = *(void *)(v9 + 32) + (16 * v10);
  if (!*(unsigned char *)(a2 + 21))
  {
    int v17 = v11 * v13;
    if (*(unsigned char *)v9)
    {
      unsigned int v13 = 32 * v17;
      goto LABEL_14;
    }
LABEL_10:
    unsigned int v13 = 16 * v17;
    goto LABEL_14;
  }
  if (*(unsigned char *)v9) {
    char v16 = 5;
  }
  else {
    char v16 = 4;
  }
  v15 += (v11 << v16) * v13;
LABEL_14:
  int v19 = *(unsigned __int8 *)(a1 + 816);
  uint64_t v20 = *(void *)(a2 + 968) + 16;
  uint64_t v21 = *(unsigned __int8 **)(a2 + 936);
  unsigned int v22 = *(unsigned __int8 **)(a2 + 944);
  int v23 = *(unsigned __int8 **)(a2 + 952);
  uint64_t v24 = *(unsigned __int8 **)(a2 + 960);
  int16x8_t v223 = 0;
  uint64_t v224 = 0;
  uint64_t v221 = v20;
  int8x16_t v222 = 0;
  if (v21)
  {
    if (v21[32]) {
      int v25 = v21 + 16;
    }
    else {
      int v25 = v21;
    }
    int8x16_t v222 = v25;
    BOOL v26 = 1;
    if (v22) {
      goto LABEL_19;
    }
LABEL_23:
    uint64_t v27 = 0;
    BOOL v28 = 0;
    goto LABEL_24;
  }
  BOOL v26 = 0;
  if (!v22) {
    goto LABEL_23;
  }
LABEL_19:
  uint64_t v27 = v22 + 16;
  if (!v22[32]) {
    uint64_t v27 = v22;
  }
  BOOL v28 = 1;
LABEL_24:
  int16x8_t v223 = v27;
  BOOL v29 = v23 != 0;
  BOOL v30 = v24 != 0;
  if (*(unsigned char *)(a2 + 928))
  {
    if (v21)
    {
      if (v21[16] == 34)
      {
        BOOL v26 = *v21 != 34;
        if (!v22)
        {
LABEL_34:
          BOOL v28 = 0;
          if (v23) {
            goto LABEL_35;
          }
          goto LABEL_39;
        }
      }
      else
      {
        BOOL v26 = 1;
        if (!v22) {
          goto LABEL_34;
        }
      }
    }
    else
    {
      BOOL v26 = 0;
      if (!v22) {
        goto LABEL_34;
      }
    }
    if (v22[16] == 34)
    {
      BOOL v28 = *v22 != 34;
      if (v23)
      {
LABEL_35:
        if (v23[16] == 34)
        {
          BOOL v29 = *v23 != 34;
          if (!v24) {
            goto LABEL_43;
          }
LABEL_40:
          BOOL v30 = v24[16] != 34 || *v24 != 34;
          goto LABEL_45;
        }
        BOOL v29 = 1;
        if (v24) {
          goto LABEL_40;
        }
LABEL_43:
        BOOL v30 = 0;
        goto LABEL_45;
      }
    }
    else
    {
      BOOL v28 = 1;
      if (v23) {
        goto LABEL_35;
      }
    }
LABEL_39:
    BOOL v29 = 0;
    if (v24) {
      goto LABEL_40;
    }
    goto LABEL_43;
  }
LABEL_45:
  unint64_t v31 = 0;
  uint64_t v32 = v15 + v13;
  uint64_t v33 = 3 * v14;
  unsigned int v34 = (2 * v29) | (4 * v28) | (8 * v26) | v30;
  uint64_t v35 = a2 + 112;
  uint64_t v36 = 2 * v14;
  uint64_t v37 = 4 * v14;
  uint64_t v38 = 7 * v14;
  uint64_t result = (unsigned __int8 *)(a1 + 1158);
  uint64_t v40 = 6 * v14;
  v41.i64[0] = 0x2000200020002;
  v41.i64[1] = 0x2000200020002;
  v42.i64[0] = 0x1000100010001;
  v42.i64[1] = 0x1000100010001;
  uint64_t v43 = 5 * v14;
  v44.i64[0] = -1;
  v44.i64[1] = -1;
  uint16x8_t v45 = (unsigned int *)((char *)&unk_221A372A4 + 4 * v34);
  uint64x2_t v46 = &byte_221A372A0;
  do
  {
    unint64_t v47 = byte_267F63880[v31];
    unint64_t v48 = byte_267F63880[v31 + 16];
    uint64_t v49 = *(&v221 + (~(2 * (_BYTE)v48) & 2));
    uint64_t v50 = *(&v221 + ((v47 & 1) == 0));
    if (v49) {
      BOOL v51 = v50 == 0;
    }
    else {
      BOOL v51 = 1;
    }
    if (v51
      || (unsigned int v52 = *(unsigned __int8 *)(v50 + ((v47 >> 1) & 0xF)),
          int v53 = *(unsigned __int8 *)(v49 + ((v48 >> 1) & 0xF)),
          (*(unsigned __int8 *)(a2 + 928) & ((v53 | v52) >> 5) & 1) != 0))
    {
      unsigned int v54 = 2;
    }
    else
    {
      unsigned int v54 = (((v52 & 0xF) - (v53 & 0xF)) & ((int)((v52 & 0xF) - (v53 & 0xF)) >> 31)) + (v53 & 0xF);
    }
    unsigned int v56 = *v45;
    v45 += 16;
    unint64_t v55 = v56;
    unsigned int v57 = *result;
    if (v54 <= v57) {
      ++v57;
    }
    unsigned int v58 = v57 & (*(result - 20) - 1) | v54 & -*(result - 20);
    *(_DWORD *)(v20 + v31) = vdup_n_s8(v58).u32[0];
    unint64_t v59 = v55 >> 24;
    int v60 = (void *)(v32 + *(unsigned int *)(v12 + 4 * v31));
    int v61 = BYTE1(v55);
    int v62 = BYTE2(v55);
    switch(v58)
    {
      case 0u:
        a8.i64[0] = *(void *)((char *)v60 - BYTE1(v55) * v14);
        a8.i16[4] = *((unsigned __int8 *)v60 + BYTE2(v55) - v14 + 7);
        int8x16_t v63 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v60 - v14 - v59));
        a9 = (int16x8_t)vzip1q_s8(v63, (int8x16_t)0);
        int16x8_t v64 = (int16x8_t)vzip1q_s8(vextq_s8(v63, (int8x16_t)0, 1uLL), (int8x16_t)0);
        a8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(a9, (int16x8_t)vzip1q_s8(vextq_s8(v63, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v64, v64)), v41), v42);
        if (v19)
        {
          unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
          goto LABEL_105;
        }
        *(int8x8_t *)a8.i8 = vqmovun_s16(a8);
        goto LABEL_113;
      case 1u:
        int8x16_t v66 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v14 - v55), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v36 - v55), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v33 - v55), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v37 - v55), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v40 - v55), 9uLL)), vorrq_s8(
                  vzip1q_s8((int8x16_t)*((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14)), (int8x16_t)*((unsigned __int8 *)v60 - v55)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v43 - v55), 0xAuLL)));
        int8x16_t v67 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v38 - v55), 8uLL);
        int8x16_t v68 = vorrq_s8(v66, vorrq_s8(vextq_s8((int8x16_t)0, v67, 0xFuLL), v67));
        int16x8_t v69 = (int16x8_t)vzip1q_s8(vextq_s8(v68, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v70 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v66, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v68, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v69, v69)), v41), v42);
        int16x8_t v71 = vdupq_lane_s16(*(int16x4_t *)v70.i8, 0);
        int16x8_t v72 = vdupq_lane_s16(*(int16x4_t *)v70.i8, 1);
        int16x8_t v73 = vdupq_lane_s16(*(int16x4_t *)v70.i8, 2);
        int16x8_t v74 = vdupq_lane_s16(*(int16x4_t *)v70.i8, 3);
        int16x8_t v75 = vdupq_laneq_s16(v70, 4);
        int16x8_t v76 = vdupq_laneq_s16(v70, 5);
        a9 = vdupq_laneq_s16(v70, 6);
        a8 = vdupq_laneq_s16(v70, 7);
        if (!v19) {
          goto LABEL_59;
        }
        goto LABEL_66;
      case 2u:
        if ((_BYTE)v55)
        {
          if (BYTE1(v55))
          {
            a8.i64[0] = *(void *)((char *)v60 - v14);
            a8.i16[4] = *((unsigned __int8 *)v60 + BYTE2(v55) - v14 + 7);
            int8x16_t v78 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v60 - v14 - v59));
            int16x8_t v79 = (int16x8_t)vzip1q_s8(vextq_s8(v78, (int8x16_t)0, 1uLL), (int8x16_t)0);
            uint16x8_t v80 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v78, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v78, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v79, v79)), v41);
            int8x16_t v81 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v14 - 1), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v36 - 1), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v33 - 1), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v37 - 1), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v40 - 1), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v60 - v59 * v14 - 1), (int8x16_t)*((unsigned __int8 *)v60 - 1)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v43 - 1), 0xAuLL)));
            int8x16_t v82 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v38 - 1), 8uLL);
            int8x16_t v83 = vorrq_s8(v81, vorrq_s8(vextq_s8((int8x16_t)0, v82, 0xFuLL), v82));
            int16x8_t v84 = (int16x8_t)vzip1q_s8(vextq_s8(v83, (int8x16_t)0, 1uLL), (int8x16_t)0);
            a9 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v81, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v83, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v84, v84)), v41), v42);
            uint64x2_t v85 = vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16(v80, v42)), a9))));
            unsigned int v86 = ((v85.u16[4] + v85.u16[0] + 8) >> 4 << 8) | ((v85.u16[4] + v85.u16[0] + 8) >> 4);
            goto LABEL_102;
          }
          int8x16_t v214 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v14 - 1), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v36 - 1), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v33 - 1), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v37 - 1), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v40 - 1), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v60 - v59 * v14 - 1), (int8x16_t)*((unsigned __int8 *)v60 - 1)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v43 - 1), 0xAuLL)));
          int8x16_t v215 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v38 - 1), 8uLL);
          int8x16_t v216 = vorrq_s8(v214, vorrq_s8(vextq_s8((int8x16_t)0, v215, 0xFuLL), v215));
          int16x8_t v217 = (int16x8_t)vzip1q_s8(vextq_s8(v216, (int8x16_t)0, 1uLL), (int8x16_t)0);
          uint16x8_t v158 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v214, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v216, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v217, v217)), v41);
        }
        else
        {
          a8 = (int16x8_t)xmmword_221A36A20;
          if (!BYTE1(v55)) {
            goto LABEL_103;
          }
          a8.i64[0] = *(void *)((char *)v60 - v14);
          int16x8_t v156 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
          a8.i16[4] = *((unsigned __int8 *)v60 + BYTE2(v55) - v14 + 7);
          int16x8_t v157 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v156, 0xEuLL);
          v157.i16[0] = *((unsigned __int8 *)v60 - v14 - v59);
          uint16x8_t v158 = (uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL), (int8x16_t)0), vaddq_s16(v156, v156)), vaddq_s16(v157, v41));
        }
        int16x8_t v218 = (int16x8_t)vshlq_u16(v158, v42);
        a9 = (int16x8_t)vqmovun_high_s16(vqmovun_s16(v218), v218);
        unsigned int v219 = vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)a9))).u16[0] + 4;
        unsigned int v86 = (v219 >> 3 << 8) | (v219 >> 3);
LABEL_102:
        a8 = (int16x8_t)vzip1q_s32((int32x4_t)(v86 | (v86 << 16)), (int32x4_t)(v86 | (v86 << 16)));
LABEL_103:
        if (!v19)
        {
LABEL_113:
          *int v60 = a8.i64[0];
          *(void *)((char *)v60 + v14) = a8.i64[0];
          *(void *)((char *)v60 + v36) = a8.i64[0];
          *(void *)((char *)v60 + v33) = a8.i64[0];
          *(void *)((char *)v60 + v37) = a8.i64[0];
          *(void *)((char *)v60 + v43) = a8.i64[0];
          *(void *)((char *)v60 + v40) = a8.i64[0];
          goto LABEL_109;
        }
        unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
        a8 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
LABEL_105:
        *int v60 = vqmovun_s16(vaddq_s16(*v65, a8));
        *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(vaddq_s16(v65[2], a8));
        *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(vaddq_s16(v65[4], a8));
        *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(vaddq_s16(v65[6], a8));
        *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(vaddq_s16(v65[8], a8));
        *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(vaddq_s16(v65[10], a8));
        int16x8_t v155 = vaddq_s16(v65[12], a8);
        goto LABEL_106;
      case 3u:
        a9.i64[0] = *(void *)((char *)v60 - BYTE1(v55) * v14);
        int v87 = (char *)v60 - v14;
        if (BYTE2(v55))
        {
          a8.i64[0] = *((void *)v87 + 1);
        }
        else
        {
          int8x16_t v159 = vextq_s8((int8x16_t)a9, (int8x16_t)0, 7uLL);
          int16x8_t v160 = (int16x8_t)vzip1q_s8(v159, v159);
          int32x4_t v161 = (int32x4_t)vzip1q_s16(v160, v160);
          a8 = (int16x8_t)vzip1q_s32(v161, v161);
        }
        int8x16_t v162 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a9, 0xFuLL), (int8x16_t)v87[-v59]);
        int8x16_t v163 = vorrq_s8(v162, vextq_s8((int8x16_t)0, (int8x16_t)a8, 7uLL));
        int16x8_t v164 = (int16x8_t)vzip1q_s8(v162, (int8x16_t)0);
        int16x8_t v165 = (int16x8_t)vzip1q_s8(vextq_s8(v162, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v166 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v164, (int16x8_t)vzip1q_s8(vextq_s8(v163, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(vaddq_s16(v165, v165), v41)), v42);
        int16x8_t v167 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
        int16x8_t v168 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v167, v167), (int16x8_t)vzip2q_s8(v163, (int8x16_t)0)), vaddq_s16((int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, vdupq_lane_s8(*(int8x8_t *)a8.i8, 7), 9uLL), vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL)), (int8x16_t)0), v41)), v42);
        int16x8_t v169 = (int16x8_t)vextq_s8((int8x16_t)v166, (int8x16_t)v168, 2uLL);
        int16x8_t v170 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v166, (int16x8_t)vextq_s8((int8x16_t)v166, (int8x16_t)v168, 4uLL)), vaddq_s16(v169, v169)), v41), v42);
        int16x8_t v171 = (int16x8_t)vextq_s8((int8x16_t)v168, (int8x16_t)0, 2uLL);
        int8x16_t v172 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v168, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v168, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36A10)), vaddq_s16(vaddq_s16(v171, v171), v41)), v42);
        int16x8_t v173 = (int16x8_t)vextq_s8((int8x16_t)v170, v172, 2uLL);
        int16x8_t v73 = (int16x8_t)vextq_s8((int8x16_t)v170, v172, 4uLL);
        int16x8_t v74 = (int16x8_t)vextq_s8((int8x16_t)v170, v172, 6uLL);
        int16x8_t v75 = (int16x8_t)vextq_s8((int8x16_t)v170, v172, 8uLL);
        int16x8_t v76 = (int16x8_t)vextq_s8((int8x16_t)v170, v172, 0xAuLL);
        a9 = (int16x8_t)vextq_s8((int8x16_t)v170, v172, 0xCuLL);
        a8 = (int16x8_t)vextq_s8((int8x16_t)v170, v172, 0xEuLL);
        if (v19)
        {
          unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
          *int v60 = vqmovun_s16(vaddq_s16(*v65, v170));
          int16x8_t v101 = vaddq_s16(v65[2], v173);
          goto LABEL_81;
        }
        *int v60 = vqmovun_s16(v170);
        int8x8_t v77 = vqmovun_s16(v173);
        goto LABEL_89;
      case 4u:
        a8.i64[0] = *(void *)((char *)v60 - BYTE1(v55) * v14);
        unsigned __int8 v88 = a8.i8[0];
        a8.i16[4] = *((unsigned __int8 *)v60 + BYTE2(v55) - v14 + 7);
        int8x16_t v89 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v60 - v14 - v59));
        int16x8_t v90 = (int16x8_t)vzip1q_s8(vextq_s8(v89, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v91 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v89, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v89, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v90, v90)), v41), v42);
        unsigned int v92 = (unsigned __int8 *)v60 - v55;
        int8x16_t v93 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v92[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v92[v36], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v92[v33], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14)), (int8x16_t)*v92)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v92[v37], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v92[v43], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v92[v40], 9uLL)));
        int8x16_t v94 = vextq_s8((int8x16_t)0, (int8x16_t)v92[v38], 8uLL);
        int8x16_t v95 = vorrq_s8(v93, vorrq_s8(vextq_s8((int8x16_t)0, v94, 0xFuLL), v94));
        int16x8_t v96 = (int16x8_t)vzip1q_s8(vextq_s8(v95, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v97 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v93, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v95, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v96, v96)), v41), v42);
        int16x8_t v98 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v91, 0xEuLL);
        v98.i16[0] = (*v92
                    + 2 * *((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14))
                    + v88
                    + 2) >> 2;
        int16x8_t v99 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v97, 0xEuLL);
        v99.i16[0] = v98.i16[0];
        int16x8_t v71 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v91, v91), (int16x8_t)vextq_s8((int8x16_t)v91, (int8x16_t)0, 2uLL)), v41), v98), v42), 0xEuLL);
        v71.i16[0] = (2
                    * ((*v92
                      + 2 * *((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14))
                      + v88
                      + 2) >> 2)
                    + v91.u16[0]
                    + v97.u16[0]
                    + 2) >> 2;
        int8x16_t v100 = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v97, v97), (int16x8_t)vextq_s8((int8x16_t)v97, (int8x16_t)0, 2uLL)), v41), v99), v42), (int8x16_t)xmmword_221A369A0), (int8x16_t)xmmword_221A369B0), (int8x16_t)xmmword_221A369C0);
        int16x8_t v72 = (int16x8_t)vextq_s8(v100, (int8x16_t)v71, 0xEuLL);
        int16x8_t v73 = (int16x8_t)vextq_s8(v100, (int8x16_t)v71, 0xCuLL);
        int16x8_t v74 = (int16x8_t)vextq_s8(v100, (int8x16_t)v71, 0xAuLL);
        int16x8_t v75 = (int16x8_t)vextq_s8(v100, (int8x16_t)v71, 8uLL);
        int16x8_t v76 = (int16x8_t)vextq_s8(v100, (int8x16_t)v71, 6uLL);
        a9 = (int16x8_t)vextq_s8(v100, (int8x16_t)v71, 4uLL);
        a8 = (int16x8_t)vextq_s8(v100, (int8x16_t)v71, 2uLL);
        if (v19)
        {
LABEL_66:
          unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
          *int v60 = vqmovun_s16(vaddq_s16(*v65, v71));
          int16x8_t v101 = vaddq_s16(v65[2], v72);
LABEL_81:
          *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(v101);
          *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(vaddq_s16(v65[4], v73));
          *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(vaddq_s16(v65[6], v74));
          *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(vaddq_s16(v65[8], v75));
          *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(vaddq_s16(v65[10], v76));
LABEL_98:
          int16x8_t v155 = vaddq_s16(v65[12], a9);
          goto LABEL_106;
        }
LABEL_59:
        *int v60 = vqmovun_s16(v71);
        int8x8_t v77 = vqmovun_s16(v72);
LABEL_89:
        *(int8x8_t *)((char *)v60 + v14) = v77;
        *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(v73);
        *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(v74);
        *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(v75);
        *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(v76);
        goto LABEL_99;
      case 5u:
        a8.i64[0] = *(void *)((char *)v60 - BYTE1(v55) * v14);
        a8.i16[4] = *((unsigned __int8 *)v60 + BYTE2(v55) - v14 + 7);
        int8x16_t v102 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v60 - v14 - v59));
        int16x8_t v103 = (int16x8_t)vzip1q_s8(vextq_s8(v102, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v104 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v102, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v102, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v103, v103)), v41), v42);
        int v105 = (unsigned __int8 *)v60 - v55;
        int8x16_t v106 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v105[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v105[v36], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v105[v33], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14)), (int8x16_t)*v105)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v105[v37], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v105[v43], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v105[v40], 9uLL)));
        int8x16_t v107 = vextq_s8((int8x16_t)0, (int8x16_t)v105[v38], 8uLL);
        int8x16_t v108 = vorrq_s8(v106, vorrq_s8(vextq_s8((int8x16_t)0, v107, 0xFuLL), v107));
        int16x8_t v109 = (int16x8_t)vzip1q_s8(vextq_s8(v108, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v110 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v106, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v108, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v109, v109)), v41), v42);
        int16x8_t v111 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v104, 0xEuLL);
        v111.i16[0] = (*v105
                     + 2 * *((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14))
                     + *(void *)((char *)v60 - v61 * v14)
                     + 2) >> 2;
        int16x8_t v112 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v111, vaddq_s16(v104, (int16x8_t)vshlq_u16((uint16x8_t)v41, v44))), v44);
        int16x8_t v113 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v110, 0xEuLL);
        v113.i16[0] = v111.i16[0];
        unsigned int v114 = (2
              * ((*v105
                + 2 * *((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14))
                + *(void *)((char *)v60 - v61 * v14)
                + 2) >> 2)
              + v104.u16[0]
              + v110.u16[0]
              + 2) >> 2;
        a9 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v104, v104), (int16x8_t)vextq_s8((int8x16_t)v104, (int8x16_t)0, 2uLL)), v41), v111), v42), 0xEuLL);
        a9.i16[0] = v114;
        int16x8_t v115 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v110, v110), (int16x8_t)vextq_s8((int8x16_t)v110, (int8x16_t)0, 2uLL)), v41), v113), v42), (int8x16_t)xmmword_221A369A0), (int8x16_t)xmmword_221A369B0), (int8x16_t)xmmword_221A369C0);
        int16x8_t v116 = (int16x8_t)vextq_s8((int8x16_t)v115, (int8x16_t)v112, 0xEuLL);
        int8x16_t v117 = (int8x16_t)vdupq_laneq_s16(v115, 6);
        if (v19)
        {
          unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
          *int v60 = vqmovun_s16(vaddq_s16(*v65, v112));
          *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(vaddq_s16(v65[2], a9));
          *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(vaddq_s16(v65[4], v116));
          *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(vaddq_s16(v65[6], (int16x8_t)vextq_s8(v117, (int8x16_t)a9, 0xEuLL)));
          int8x16_t v118 = vqtbl1q_s8((int8x16_t)v115, (int8x16_t)xmmword_221A369D0);
          *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(vaddq_s16(v65[8], (int16x8_t)vextq_s8(v118, (int8x16_t)v112, 0xCuLL)));
          int8x16_t v119 = vqtbl1q_s8((int8x16_t)v115, (int8x16_t)xmmword_221A369E0);
          *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(vaddq_s16(v65[10], (int16x8_t)vextq_s8(v119, (int8x16_t)a9, 0xCuLL)));
          *(int8x8_t *)((char *)v60 + v40) = vqmovun_s16(vaddq_s16(v65[12], (int16x8_t)vextq_s8(vqtbl1q_s8(v118, (int8x16_t)xmmword_221A369F0), (int8x16_t)v112, 0xAuLL)));
          a8 = (int16x8_t)vextq_s8(vqtbl1q_s8(vqtbl1q_s8(v119, (int8x16_t)xmmword_221A369F0), (int8x16_t)xmmword_221A36A00), (int8x16_t)a9, 0xAuLL);
          goto LABEL_107;
        }
        *int v60 = vqmovun_s16(v112);
        *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(a9);
        *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(v116);
        *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16((int16x8_t)vextq_s8(v117, (int8x16_t)a9, 0xEuLL));
        int8x16_t v174 = vqtbl1q_s8((int8x16_t)v115, (int8x16_t)xmmword_221A369D0);
        *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16((int16x8_t)vextq_s8(v174, (int8x16_t)v112, 0xCuLL));
        int8x16_t v175 = vqtbl1q_s8((int8x16_t)v115, (int8x16_t)xmmword_221A369E0);
        *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16((int16x8_t)vextq_s8(v175, (int8x16_t)a9, 0xCuLL));
        *(int8x8_t *)((char *)v60 + v40) = vqmovun_s16((int16x8_t)vextq_s8(vqtbl1q_s8(v174, (int8x16_t)xmmword_221A369F0), (int8x16_t)v112, 0xAuLL));
        a8 = (int16x8_t)vextq_s8(vqtbl1q_s8(vqtbl1q_s8(v175, (int8x16_t)xmmword_221A369F0), (int8x16_t)xmmword_221A36A00), (int8x16_t)a9, 0xAuLL);
        break;
      case 6u:
        a8.i64[0] = *(void *)((char *)v60 - BYTE1(v55) * v14);
        unsigned __int8 v120 = a8.i8[0];
        a8.i16[4] = *((unsigned __int8 *)v60 + BYTE2(v55) - v14 + 7);
        int8x16_t v121 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v60 - v14 - v59));
        int16x8_t v122 = (int16x8_t)vzip1q_s8(vextq_s8(v121, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v123 = (unsigned __int8 *)v60 - v55;
        int16x8_t v124 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v121, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v121, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v122, v122)), v41), v42);
        int8x16_t v125 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v123[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v123[v36], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v123[v33], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14)), (int8x16_t)*v123)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v123[v37], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v123[v43], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v123[v40], 9uLL)));
        int8x16_t v126 = vextq_s8((int8x16_t)0, (int8x16_t)v123[v38], 8uLL);
        int8x16_t v127 = vorrq_s8(v125, vorrq_s8(vextq_s8((int8x16_t)0, v126, 0xFuLL), v126));
        int16x8_t v128 = (int16x8_t)vzip1q_s8(vextq_s8(v127, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v129 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v125, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v127, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v128, v128)), v41), v42);
        int16x8_t v130 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v129, 0xEuLL);
        v130.i16[0] = (*v123
                     + 2 * *((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14))
                     + v120
                     + 2) >> 2;
        int8x16_t v131 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vshlq_u16((uint16x8_t)v41, v44), v129), v130), v44);
        int8x16_t v132 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v129, v129), (int16x8_t)vextq_s8((int8x16_t)v129, (int8x16_t)0, 2uLL)), v41), v130), v42);
        int16x8_t v133 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v124, 0xEuLL);
        v133.i16[0] = (*v123
                     + 2 * *((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14))
                     + v120
                     + 2) >> 2;
        int8x16_t v134 = vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v124, v124), (int16x8_t)vextq_s8((int8x16_t)v124, (int8x16_t)0, 2uLL)), v41), v133), v42), 0xEuLL);
        v134.i16[0] = (2
                     * ((*v123
                       + 2 * *((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14))
                       + v120
                       + 2) >> 2)
                     + v124.u16[0]
                     + v129.u16[0]
                     + 2) >> 2;
        int16x8_t v135 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v131, (int8x16_t)xmmword_221A369A0), (int8x16_t)xmmword_221A369B0), (int8x16_t)xmmword_221A369C0);
        int16x8_t v136 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v132, (int8x16_t)xmmword_221A369A0), (int8x16_t)xmmword_221A369B0), (int8x16_t)xmmword_221A369C0);
        int16x8_t v137 = (int16x8_t)vextq_s8((int8x16_t)v135, v134, 0xEuLL);
        int8x16_t v138 = (int8x16_t)vzip2q_s16(v136, v135);
        a9 = (int16x8_t)vdupq_lane_s64(v135.i64[0], 0);
        if (v19)
        {
          unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
          *int v60 = vqmovun_s16(vaddq_s16(*v65, v137));
          *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(vaddq_s16(v65[2], (int16x8_t)vextq_s8(v138, v134, 0xAuLL)));
          *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(vaddq_s16(v65[4], (int16x8_t)vextq_s8(v138, v134, 6uLL)));
          *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(vaddq_s16(v65[6], (int16x8_t)vextq_s8(v138, v134, 2uLL)));
          *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(vaddq_s16(v65[8], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v135, 0xEuLL), v136)));
          *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(vaddq_s16(v65[10], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v135, 0xCuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xEuLL))));
          *(int8x8_t *)((char *)v60 + v40) = vqmovun_s16(vaddq_s16(v65[12], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v135, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xCuLL))));
          a8 = vzip2q_s16(a9, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xAuLL));
          goto LABEL_107;
        }
        *int v60 = vqmovun_s16(v137);
        *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16((int16x8_t)vextq_s8(v138, v134, 0xAuLL));
        *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16((int16x8_t)vextq_s8(v138, v134, 6uLL));
        *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16((int16x8_t)vextq_s8(v138, v134, 2uLL));
        *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v135, 0xEuLL), v136));
        *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v135, 0xCuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xEuLL)));
        *(int8x8_t *)((char *)v60 + v40) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v135, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xCuLL)));
        a8 = vzip2q_s16(a9, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xAuLL));
        break;
      case 7u:
        a9.i64[0] = *(void *)((char *)v60 - BYTE1(v55) * v14);
        int v139 = (char *)v60 - v14;
        if (v62)
        {
          a8.i64[0] = *((void *)v139 + 1);
        }
        else
        {
          int8x16_t v176 = vextq_s8((int8x16_t)a9, (int8x16_t)0, 7uLL);
          int16x8_t v177 = (int16x8_t)vzip1q_s8(v176, v176);
          int32x4_t v178 = (int32x4_t)vzip1q_s16(v177, v177);
          a8 = (int16x8_t)vzip1q_s32(v178, v178);
        }
        unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
        int8x16_t v179 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a9, 0xFuLL), (int8x16_t)v139[-v59]);
        int8x16_t v180 = vorrq_s8(v179, vextq_s8((int8x16_t)0, (int8x16_t)a8, 7uLL));
        int16x8_t v181 = (int16x8_t)vzip1q_s8(v179, (int8x16_t)0);
        int16x8_t v182 = (int16x8_t)vzip1q_s8(vextq_s8(v179, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v183 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v181, (int16x8_t)vzip1q_s8(vextq_s8(v180, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(vaddq_s16(v182, v182), v41)), v42);
        int16x8_t v184 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
        int16x8_t v185 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v184, v184), (int16x8_t)vzip2q_s8(v180, (int8x16_t)0)), vaddq_s16((int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, vdupq_lane_s8(*(int8x8_t *)a8.i8, 7), 9uLL), vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL)), (int8x16_t)0), v41)), v42);
        int8x8_t v186 = vqmovun_s16(v183);
        int8x8_t v187 = vqmovun_s16(v185);
        uint8x8_t v188 = (uint8x8_t)vext_s8(v186, v187, 1uLL);
        uint8x8_t v189 = (uint8x8_t)vext_s8(v186, v187, 2uLL);
        int16x8_t v190 = (int16x8_t)vaddl_u8(v188, (uint8x8_t)v186);
        uint16x8_t v191 = vaddw_u8((uint16x8_t)v41, v189);
        int16x8_t v192 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16((int16x8_t)vaddw_u8(v191, v188), v190), v42);
        int16x8_t v193 = (int16x8_t)vshlq_u16((uint16x8_t)v41, v44);
        int16x8_t v194 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v190, v193), v44);
        if (v19)
        {
          *int v60 = vqmovun_s16(vaddq_s16(*v65, v194));
          int16x8_t v192 = vaddq_s16(v65[2], v192);
        }
        else
        {
          *int v60 = vqmovun_s16(v194);
        }
        int16x8_t v200 = (int16x8_t)vmovl_u8(v188);
        int16x8_t v201 = (int16x8_t)vmovl_u8(v189);
        *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(v192);
        uint8x8_t v202 = (uint8x8_t)vext_s8(v186, v187, 3uLL);
        int16x8_t v203 = vaddq_s16(v200, v201);
        int16x8_t v204 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16((int16x8_t)vaddw_u8(v191, v202), v203), v42);
        int16x8_t v205 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v203, v193), v44);
        if (v19)
        {
          *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(vaddq_s16(v65[4], v205));
          int16x8_t v204 = vaddq_s16(v65[6], v204);
        }
        else
        {
          *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(v205);
        }
        int16x8_t v206 = (int16x8_t)vmovl_u8(v202);
        *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(v204);
        uint8x8_t v207 = (uint8x8_t)vext_s8(v186, v187, 4uLL);
        int16x8_t v208 = vaddq_s16(v201, v206);
        int16x8_t v209 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vaddw_u8((uint16x8_t)v206, v207), v208), v41), v42);
        int16x8_t v210 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v208, v193), v44);
        if (v19)
        {
          *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(vaddq_s16(v65[8], v210));
          int16x8_t v209 = vaddq_s16(v65[10], v209);
        }
        else
        {
          *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(v210);
        }
        int16x8_t v211 = (int16x8_t)vmovl_u8(v207);
        *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(v209);
        uint8x8_t v212 = (uint8x8_t)vext_s8(v186, v187, 5uLL);
        int16x8_t v213 = vaddq_s16(v206, v211);
        a8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vaddw_u8((uint16x8_t)v211, v212), v213), v41), v42);
        a9 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v213, v193), v44);
        if (v19) {
          goto LABEL_98;
        }
        goto LABEL_99;
      case 8u:
        int v140 = (unsigned __int8 *)v60 - v55;
        int8x16_t v141 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v140[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v140[v36], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v140[v33], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14)), (int8x16_t)*v140)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v140[v37], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v140[v43], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v140[v40], 9uLL)));
        int8x16_t v142 = vextq_s8((int8x16_t)0, (int8x16_t)v140[v38], 8uLL);
        int8x16_t v143 = vorrq_s8(v141, vorrq_s8(vextq_s8((int8x16_t)0, v142, 0xFuLL), v142));
        int16x8_t v144 = (int16x8_t)vzip1q_s8(vextq_s8(v143, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v145 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v141, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v143, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v144, v144)), v41), v42);
        int16x8_t v146 = (int16x8_t)vextq_s8((int8x16_t)v145, (int8x16_t)0, 2uLL);
        int8x16_t v147 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v145, (int16x8_t)vextq_s8((int8x16_t)v145, (int8x16_t)0, 4uLL)), vaddq_s16(v146, v146)), v41), v42);
        v147.i16[6] = (3 * v145.u16[7] + v145.u16[6] + 2) >> 2;
        int16x8_t v148 = (int16x8_t)vextq_s8(vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vshlq_u16((uint16x8_t)v41, v44), v145), v146), v44), 0xEuLL), (int8x16_t)0, 2uLL);
        int16x8_t v149 = (int16x8_t)vextq_s8(vextq_s8((int8x16_t)0, v147, 0xEuLL), (int8x16_t)0, 2uLL);
        a8 = (int16x8_t)vdupq_n_s32(v145.u16[7] | (v145.u16[7] << 16));
        if (v19)
        {
          unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
          *int v60 = vqmovun_s16(vaddq_s16(*v65, vzip1q_s16(v148, v149)));
          int16x8_t v150 = (int16x8_t)vextq_s8((int8x16_t)v149, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(vaddq_s16(v65[2], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 2uLL), v150)));
          int16x8_t v151 = (int16x8_t)vextq_s8((int8x16_t)v150, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(vaddq_s16(v65[4], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 4uLL), v151)));
          int16x8_t v152 = (int16x8_t)vextq_s8((int8x16_t)v151, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(vaddq_s16(v65[6], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 6uLL), v152)));
          int16x8_t v153 = (int16x8_t)vextq_s8((int8x16_t)v152, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(vaddq_s16(v65[8], (int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v148, 1), v153), vextq_s8((int8x16_t)0, (int8x16_t)a8, 4uLL))));
          int16x8_t v154 = (int16x8_t)vextq_s8((int8x16_t)v153, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(vaddq_s16(v65[10], (int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 0xAuLL), v154), vextq_s8((int8x16_t)0, (int8x16_t)a8, 8uLL))));
          v226.val[1] = vextq_s8((int8x16_t)v148, (int8x16_t)0, 0xCuLL);
          v226.val[0] = vextq_s8((int8x16_t)v154, (int8x16_t)0, 2uLL);
          int16x8_t v155 = vaddq_s16(v65[12], (int16x8_t)vorrq_s8(vqtbl2q_s8(v226, (int8x16_t)xmmword_221A36990), vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xCuLL)));
LABEL_106:
          *(int8x8_t *)((char *)v60 + v40) = vqmovun_s16(v155);
LABEL_107:
          a9 = v65[14];
          a8 = vaddq_s16(a9, a8);
        }
        else
        {
          *int v60 = vqmovun_s16(vzip1q_s16(v148, v149));
          int16x8_t v195 = (int16x8_t)vextq_s8((int8x16_t)v149, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 2uLL), v195));
          int16x8_t v196 = (int16x8_t)vextq_s8((int8x16_t)v195, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 4uLL), v196));
          int16x8_t v197 = (int16x8_t)vextq_s8((int8x16_t)v196, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 6uLL), v197));
          int16x8_t v198 = (int16x8_t)vextq_s8((int8x16_t)v197, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16((int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v148, 1), v198), vextq_s8((int8x16_t)0, (int8x16_t)a8, 4uLL)));
          int16x8_t v199 = (int16x8_t)vextq_s8((int8x16_t)v198, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16((int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 0xAuLL), v199), vextq_s8((int8x16_t)0, (int8x16_t)a8, 8uLL)));
          v227.val[1] = vextq_s8((int8x16_t)v148, (int8x16_t)0, 0xCuLL);
          v227.val[0] = vextq_s8((int8x16_t)v199, (int8x16_t)0, 2uLL);
          a9 = (int16x8_t)vorrq_s8(vqtbl2q_s8(v227, (int8x16_t)xmmword_221A36990), vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xCuLL));
LABEL_99:
          *(int8x8_t *)((char *)v60 + v40) = vqmovun_s16(a9);
        }
        break;
      default:
        goto LABEL_110;
    }
    *(int8x8_t *)a8.i8 = vqmovun_s16(a8);
LABEL_109:
    *(void *)((char *)v60 + v38) = a8.i64[0];
LABEL_110:
    ++v46;
    ++result;
    BOOL v220 = v31 >= 0xC;
    v31 += 4;
  }
  while (!v220);
  return result;
}

unsigned __int8 *sub_2219D32C4(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, int16x8_t a8, int16x8_t a9)
{
  uint64_t v225 = *MEMORY[0x263EF8340];
  uint64_t v9 = *(void *)(a2 + 72);
  int v10 = *(_DWORD *)(a1 + 824);
  int v11 = *(_DWORD *)(a1 + 828);
  if (!*(unsigned char *)(a2 + 20) || !*(unsigned char *)(a2 + 22))
  {
    uint64_t v12 = v9 + 408;
    unsigned int v14 = *(_DWORD *)(v9 + 136);
    if (*(unsigned char *)(a2 + 23) == 1)
    {
      unsigned int v18 = *(_DWORD *)(a1 + 820);
      uint64_t v15 = *(void *)(v9 + 32)
          + 32 * v14 * (v18 / (2 * *(_DWORD *)(a2 + 16)))
          + ((8 * (v18 % (2 * *(_DWORD *)(a2 + 16)))) & 0xFFFFFFF0);
      unsigned int v13 = ((int)(v18 << 31) >> 31) & (16 * v14);
      goto LABEL_14;
    }
    uint64_t v15 = *(void *)(v9 + 32) + (16 * v10);
    int v17 = v11 * v14;
    goto LABEL_10;
  }
  uint64_t v12 = v9 + 472;
  unsigned int v13 = *(_DWORD *)(v9 + 136);
  unsigned int v14 = 2 * v13;
  uint64_t v15 = *(void *)(v9 + 32) + (16 * v10);
  if (!*(unsigned char *)(a2 + 21))
  {
    int v17 = v11 * v13;
    if (*(unsigned char *)v9)
    {
      unsigned int v13 = 32 * v17;
      goto LABEL_14;
    }
LABEL_10:
    unsigned int v13 = 16 * v17;
    goto LABEL_14;
  }
  if (*(unsigned char *)v9) {
    char v16 = 5;
  }
  else {
    char v16 = 4;
  }
  v15 += (v11 << v16) * v13;
LABEL_14:
  int v19 = *(unsigned __int8 *)(a1 + 816);
  uint64_t v20 = *(void *)(a2 + 968) + 16;
  uint64_t v21 = *(unsigned char **)(a2 + 936);
  unsigned int v22 = *(unsigned char **)(a2 + 944);
  int v23 = *(unsigned char **)(a2 + 952);
  uint64_t v24 = *(unsigned char **)(a2 + 960);
  int16x8_t v223 = 0;
  uint64_t v224 = 0;
  uint64_t v221 = v20;
  int8x16_t v222 = 0;
  if (v21)
  {
    if (v21[32]) {
      int v25 = v21 + 16;
    }
    else {
      int v25 = v21;
    }
    int8x16_t v222 = v25;
    int v26 = 1;
    if (v22) {
      goto LABEL_19;
    }
LABEL_23:
    uint64_t v27 = 0;
    int v28 = 0;
    goto LABEL_24;
  }
  int v26 = 0;
  if (!v22) {
    goto LABEL_23;
  }
LABEL_19:
  uint64_t v27 = v22 + 16;
  if (!v22[32]) {
    uint64_t v27 = v22;
  }
  int v28 = 1;
LABEL_24:
  int16x8_t v223 = v27;
  BOOL v29 = v23 != 0;
  BOOL v30 = v24 != 0;
  if (*(unsigned char *)(a2 + 928))
  {
    if (!v21 || v21[16] == 34 || *v21 == 34)
    {
      int v26 = 0;
      if (!v22) {
        goto LABEL_34;
      }
    }
    else
    {
      int v26 = 1;
      if (!v22) {
        goto LABEL_34;
      }
    }
    if (v22[16] != 34 && *v22 != 34)
    {
      int v28 = 1;
      if (!v23) {
        goto LABEL_37;
      }
      goto LABEL_35;
    }
LABEL_34:
    int v28 = 0;
    if (!v23) {
      goto LABEL_37;
    }
LABEL_35:
    if (v23[16] != 34 && *v23 != 34)
    {
      BOOL v29 = 1;
      if (!v24) {
        goto LABEL_42;
      }
LABEL_38:
      if (v24[16] != 34 && *v24 != 34)
      {
        BOOL v30 = 1;
        goto LABEL_43;
      }
LABEL_42:
      BOOL v30 = 0;
      goto LABEL_43;
    }
LABEL_37:
    BOOL v29 = 0;
    if (!v24) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_43:
  unint64_t v31 = 0;
  uint64_t v32 = v15 + v13;
  uint64_t v33 = 3 * v14;
  unsigned int v34 = (2 * v29) | (4 * v28) | (8 * v26) | v30;
  uint64_t v35 = a2 + 112;
  uint64_t v36 = 2 * v14;
  uint64_t v37 = 4 * v14;
  uint64_t v38 = 7 * v14;
  uint64_t result = (unsigned __int8 *)(a1 + 1158);
  uint64_t v40 = 6 * v14;
  v41.i64[0] = 0x2000200020002;
  v41.i64[1] = 0x2000200020002;
  v42.i64[0] = 0x1000100010001;
  v42.i64[1] = 0x1000100010001;
  uint64_t v43 = 5 * v14;
  v44.i64[0] = -1;
  v44.i64[1] = -1;
  uint16x8_t v45 = (unsigned int *)((char *)&unk_221A372A4 + 4 * v34);
  uint64x2_t v46 = &byte_221A372A0;
  do
  {
    unint64_t v47 = byte_267F63880[v31];
    unint64_t v48 = byte_267F63880[v31 + 16];
    uint64_t v49 = *(&v221 + (~(2 * (_BYTE)v48) & 2));
    uint64_t v50 = *(&v221 + ((v47 & 1) == 0));
    if (v49) {
      BOOL v51 = v50 == 0;
    }
    else {
      BOOL v51 = 1;
    }
    if (v51
      || (unsigned int v52 = *(unsigned __int8 *)(v50 + ((v47 >> 1) & 0xF)),
          int v53 = *(unsigned __int8 *)(v49 + ((v48 >> 1) & 0xF)),
          (*(unsigned __int8 *)(a2 + 928) & ((v53 | v52) >> 5) & 1) != 0))
    {
      unsigned int v54 = 2;
    }
    else
    {
      unsigned int v54 = (((v52 & 0xF) - (v53 & 0xF)) & ((int)((v52 & 0xF) - (v53 & 0xF)) >> 31)) + (v53 & 0xF);
    }
    unsigned int v56 = *v45;
    v45 += 16;
    unint64_t v55 = v56;
    unsigned int v57 = *result;
    if (v54 <= v57) {
      ++v57;
    }
    unsigned int v58 = v57 & (*(result - 20) - 1) | v54 & -*(result - 20);
    *(_DWORD *)(v20 + v31) = vdup_n_s8(v58).u32[0];
    unint64_t v59 = v55 >> 24;
    int v60 = (void *)(v32 + *(unsigned int *)(v12 + 4 * v31));
    int v61 = BYTE1(v55);
    int v62 = BYTE2(v55);
    switch(v58)
    {
      case 0u:
        a8.i64[0] = *(void *)((char *)v60 - BYTE1(v55) * v14);
        a8.i16[4] = *((unsigned __int8 *)v60 + BYTE2(v55) - v14 + 7);
        int8x16_t v63 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v60 - v14 - v59));
        a9 = (int16x8_t)vzip1q_s8(v63, (int8x16_t)0);
        int16x8_t v64 = (int16x8_t)vzip1q_s8(vextq_s8(v63, (int8x16_t)0, 1uLL), (int8x16_t)0);
        a8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(a9, (int16x8_t)vzip1q_s8(vextq_s8(v63, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v64, v64)), v41), v42);
        if (v19)
        {
          unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
          goto LABEL_103;
        }
        *(int8x8_t *)a8.i8 = vqmovun_s16(a8);
        goto LABEL_111;
      case 1u:
        int8x16_t v66 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v14 - v55), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v36 - v55), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v33 - v55), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v37 - v55), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v40 - v55), 9uLL)), vorrq_s8(
                  vzip1q_s8((int8x16_t)*((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14)), (int8x16_t)*((unsigned __int8 *)v60 - v55)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v43 - v55), 0xAuLL)));
        int8x16_t v67 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v38 - v55), 8uLL);
        int8x16_t v68 = vorrq_s8(v66, vorrq_s8(vextq_s8((int8x16_t)0, v67, 0xFuLL), v67));
        int16x8_t v69 = (int16x8_t)vzip1q_s8(vextq_s8(v68, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v70 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v66, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v68, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v69, v69)), v41), v42);
        int16x8_t v71 = vdupq_lane_s16(*(int16x4_t *)v70.i8, 0);
        int16x8_t v72 = vdupq_lane_s16(*(int16x4_t *)v70.i8, 1);
        int16x8_t v73 = vdupq_lane_s16(*(int16x4_t *)v70.i8, 2);
        int16x8_t v74 = vdupq_lane_s16(*(int16x4_t *)v70.i8, 3);
        int16x8_t v75 = vdupq_laneq_s16(v70, 4);
        int16x8_t v76 = vdupq_laneq_s16(v70, 5);
        a9 = vdupq_laneq_s16(v70, 6);
        a8 = vdupq_laneq_s16(v70, 7);
        if (!v19) {
          goto LABEL_57;
        }
        goto LABEL_64;
      case 2u:
        if ((_BYTE)v55)
        {
          if (BYTE1(v55))
          {
            a8.i64[0] = *(void *)((char *)v60 - v14);
            a8.i16[4] = *((unsigned __int8 *)v60 + BYTE2(v55) - v14 + 7);
            int8x16_t v78 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v60 - v14 - v59));
            int16x8_t v79 = (int16x8_t)vzip1q_s8(vextq_s8(v78, (int8x16_t)0, 1uLL), (int8x16_t)0);
            uint16x8_t v80 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v78, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v78, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v79, v79)), v41);
            int8x16_t v81 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v14 - 1), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v36 - 1), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v33 - 1), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v37 - 1), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v40 - 1), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v60 - v59 * v14 - 1), (int8x16_t)*((unsigned __int8 *)v60 - 1)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v43 - 1), 0xAuLL)));
            int8x16_t v82 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v38 - 1), 8uLL);
            int8x16_t v83 = vorrq_s8(v81, vorrq_s8(vextq_s8((int8x16_t)0, v82, 0xFuLL), v82));
            int16x8_t v84 = (int16x8_t)vzip1q_s8(vextq_s8(v83, (int8x16_t)0, 1uLL), (int8x16_t)0);
            a9 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v81, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v83, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v84, v84)), v41), v42);
            uint64x2_t v85 = vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16(v80, v42)), a9))));
            unsigned int v86 = ((v85.u16[4] + v85.u16[0] + 8) >> 4 << 8) | ((v85.u16[4] + v85.u16[0] + 8) >> 4);
            goto LABEL_100;
          }
          int8x16_t v214 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v14 - 1), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v36 - 1), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v33 - 1), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v37 - 1), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v40 - 1), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v60 - v59 * v14 - 1), (int8x16_t)*((unsigned __int8 *)v60 - 1)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v43 - 1), 0xAuLL)));
          int8x16_t v215 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v60 + v38 - 1), 8uLL);
          int8x16_t v216 = vorrq_s8(v214, vorrq_s8(vextq_s8((int8x16_t)0, v215, 0xFuLL), v215));
          int16x8_t v217 = (int16x8_t)vzip1q_s8(vextq_s8(v216, (int8x16_t)0, 1uLL), (int8x16_t)0);
          uint16x8_t v158 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v214, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v216, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v217, v217)), v41);
        }
        else
        {
          a8 = (int16x8_t)xmmword_221A36A20;
          if (!BYTE1(v55)) {
            goto LABEL_101;
          }
          a8.i64[0] = *(void *)((char *)v60 - v14);
          int16x8_t v156 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
          a8.i16[4] = *((unsigned __int8 *)v60 + BYTE2(v55) - v14 + 7);
          int16x8_t v157 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v156, 0xEuLL);
          v157.i16[0] = *((unsigned __int8 *)v60 - v14 - v59);
          uint16x8_t v158 = (uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL), (int8x16_t)0), vaddq_s16(v156, v156)), vaddq_s16(v157, v41));
        }
        int16x8_t v218 = (int16x8_t)vshlq_u16(v158, v42);
        a9 = (int16x8_t)vqmovun_high_s16(vqmovun_s16(v218), v218);
        unsigned int v219 = vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)a9))).u16[0] + 4;
        unsigned int v86 = (v219 >> 3 << 8) | (v219 >> 3);
LABEL_100:
        a8 = (int16x8_t)vzip1q_s32((int32x4_t)(v86 | (v86 << 16)), (int32x4_t)(v86 | (v86 << 16)));
LABEL_101:
        if (!v19)
        {
LABEL_111:
          *int v60 = a8.i64[0];
          *(void *)((char *)v60 + v14) = a8.i64[0];
          *(void *)((char *)v60 + v36) = a8.i64[0];
          *(void *)((char *)v60 + v33) = a8.i64[0];
          *(void *)((char *)v60 + v37) = a8.i64[0];
          *(void *)((char *)v60 + v43) = a8.i64[0];
          *(void *)((char *)v60 + v40) = a8.i64[0];
          goto LABEL_107;
        }
        unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
        a8 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
LABEL_103:
        *int v60 = vqmovun_s16(vaddq_s16(*v65, a8));
        *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(vaddq_s16(v65[2], a8));
        *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(vaddq_s16(v65[4], a8));
        *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(vaddq_s16(v65[6], a8));
        *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(vaddq_s16(v65[8], a8));
        *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(vaddq_s16(v65[10], a8));
        int16x8_t v155 = vaddq_s16(v65[12], a8);
        goto LABEL_104;
      case 3u:
        a9.i64[0] = *(void *)((char *)v60 - BYTE1(v55) * v14);
        int v87 = (char *)v60 - v14;
        if (BYTE2(v55))
        {
          a8.i64[0] = *((void *)v87 + 1);
        }
        else
        {
          int8x16_t v159 = vextq_s8((int8x16_t)a9, (int8x16_t)0, 7uLL);
          int16x8_t v160 = (int16x8_t)vzip1q_s8(v159, v159);
          int32x4_t v161 = (int32x4_t)vzip1q_s16(v160, v160);
          a8 = (int16x8_t)vzip1q_s32(v161, v161);
        }
        int8x16_t v162 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a9, 0xFuLL), (int8x16_t)v87[-v59]);
        int8x16_t v163 = vorrq_s8(v162, vextq_s8((int8x16_t)0, (int8x16_t)a8, 7uLL));
        int16x8_t v164 = (int16x8_t)vzip1q_s8(v162, (int8x16_t)0);
        int16x8_t v165 = (int16x8_t)vzip1q_s8(vextq_s8(v162, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v166 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v164, (int16x8_t)vzip1q_s8(vextq_s8(v163, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(vaddq_s16(v165, v165), v41)), v42);
        int16x8_t v167 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
        int16x8_t v168 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v167, v167), (int16x8_t)vzip2q_s8(v163, (int8x16_t)0)), vaddq_s16((int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, vdupq_lane_s8(*(int8x8_t *)a8.i8, 7), 9uLL), vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL)), (int8x16_t)0), v41)), v42);
        int16x8_t v169 = (int16x8_t)vextq_s8((int8x16_t)v166, (int8x16_t)v168, 2uLL);
        int16x8_t v170 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v166, (int16x8_t)vextq_s8((int8x16_t)v166, (int8x16_t)v168, 4uLL)), vaddq_s16(v169, v169)), v41), v42);
        int16x8_t v171 = (int16x8_t)vextq_s8((int8x16_t)v168, (int8x16_t)0, 2uLL);
        int8x16_t v172 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v168, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v168, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36A10)), vaddq_s16(vaddq_s16(v171, v171), v41)), v42);
        int16x8_t v173 = (int16x8_t)vextq_s8((int8x16_t)v170, v172, 2uLL);
        int16x8_t v73 = (int16x8_t)vextq_s8((int8x16_t)v170, v172, 4uLL);
        int16x8_t v74 = (int16x8_t)vextq_s8((int8x16_t)v170, v172, 6uLL);
        int16x8_t v75 = (int16x8_t)vextq_s8((int8x16_t)v170, v172, 8uLL);
        int16x8_t v76 = (int16x8_t)vextq_s8((int8x16_t)v170, v172, 0xAuLL);
        a9 = (int16x8_t)vextq_s8((int8x16_t)v170, v172, 0xCuLL);
        a8 = (int16x8_t)vextq_s8((int8x16_t)v170, v172, 0xEuLL);
        if (v19)
        {
          unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
          *int v60 = vqmovun_s16(vaddq_s16(*v65, v170));
          int16x8_t v101 = vaddq_s16(v65[2], v173);
          goto LABEL_79;
        }
        *int v60 = vqmovun_s16(v170);
        int8x8_t v77 = vqmovun_s16(v173);
        goto LABEL_87;
      case 4u:
        a8.i64[0] = *(void *)((char *)v60 - BYTE1(v55) * v14);
        unsigned __int8 v88 = a8.i8[0];
        a8.i16[4] = *((unsigned __int8 *)v60 + BYTE2(v55) - v14 + 7);
        int8x16_t v89 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v60 - v14 - v59));
        int16x8_t v90 = (int16x8_t)vzip1q_s8(vextq_s8(v89, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v91 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v89, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v89, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v90, v90)), v41), v42);
        unsigned int v92 = (unsigned __int8 *)v60 - v55;
        int8x16_t v93 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v92[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v92[v36], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v92[v33], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14)), (int8x16_t)*v92)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v92[v37], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v92[v43], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v92[v40], 9uLL)));
        int8x16_t v94 = vextq_s8((int8x16_t)0, (int8x16_t)v92[v38], 8uLL);
        int8x16_t v95 = vorrq_s8(v93, vorrq_s8(vextq_s8((int8x16_t)0, v94, 0xFuLL), v94));
        int16x8_t v96 = (int16x8_t)vzip1q_s8(vextq_s8(v95, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v97 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v93, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v95, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v96, v96)), v41), v42);
        int16x8_t v98 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v91, 0xEuLL);
        v98.i16[0] = (*v92
                    + 2 * *((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14))
                    + v88
                    + 2) >> 2;
        int16x8_t v99 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v97, 0xEuLL);
        v99.i16[0] = v98.i16[0];
        int16x8_t v71 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v91, v91), (int16x8_t)vextq_s8((int8x16_t)v91, (int8x16_t)0, 2uLL)), v41), v98), v42), 0xEuLL);
        v71.i16[0] = (2
                    * ((*v92
                      + 2 * *((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14))
                      + v88
                      + 2) >> 2)
                    + v91.u16[0]
                    + v97.u16[0]
                    + 2) >> 2;
        int8x16_t v100 = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v97, v97), (int16x8_t)vextq_s8((int8x16_t)v97, (int8x16_t)0, 2uLL)), v41), v99), v42), (int8x16_t)xmmword_221A369A0), (int8x16_t)xmmword_221A369B0), (int8x16_t)xmmword_221A369C0);
        int16x8_t v72 = (int16x8_t)vextq_s8(v100, (int8x16_t)v71, 0xEuLL);
        int16x8_t v73 = (int16x8_t)vextq_s8(v100, (int8x16_t)v71, 0xCuLL);
        int16x8_t v74 = (int16x8_t)vextq_s8(v100, (int8x16_t)v71, 0xAuLL);
        int16x8_t v75 = (int16x8_t)vextq_s8(v100, (int8x16_t)v71, 8uLL);
        int16x8_t v76 = (int16x8_t)vextq_s8(v100, (int8x16_t)v71, 6uLL);
        a9 = (int16x8_t)vextq_s8(v100, (int8x16_t)v71, 4uLL);
        a8 = (int16x8_t)vextq_s8(v100, (int8x16_t)v71, 2uLL);
        if (v19)
        {
LABEL_64:
          unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
          *int v60 = vqmovun_s16(vaddq_s16(*v65, v71));
          int16x8_t v101 = vaddq_s16(v65[2], v72);
LABEL_79:
          *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(v101);
          *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(vaddq_s16(v65[4], v73));
          *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(vaddq_s16(v65[6], v74));
          *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(vaddq_s16(v65[8], v75));
          *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(vaddq_s16(v65[10], v76));
LABEL_96:
          int16x8_t v155 = vaddq_s16(v65[12], a9);
          goto LABEL_104;
        }
LABEL_57:
        *int v60 = vqmovun_s16(v71);
        int8x8_t v77 = vqmovun_s16(v72);
LABEL_87:
        *(int8x8_t *)((char *)v60 + v14) = v77;
        *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(v73);
        *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(v74);
        *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(v75);
        *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(v76);
        goto LABEL_97;
      case 5u:
        a8.i64[0] = *(void *)((char *)v60 - BYTE1(v55) * v14);
        a8.i16[4] = *((unsigned __int8 *)v60 + BYTE2(v55) - v14 + 7);
        int8x16_t v102 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v60 - v14 - v59));
        int16x8_t v103 = (int16x8_t)vzip1q_s8(vextq_s8(v102, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v104 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v102, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v102, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v103, v103)), v41), v42);
        int v105 = (unsigned __int8 *)v60 - v55;
        int8x16_t v106 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v105[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v105[v36], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v105[v33], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14)), (int8x16_t)*v105)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v105[v37], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v105[v43], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v105[v40], 9uLL)));
        int8x16_t v107 = vextq_s8((int8x16_t)0, (int8x16_t)v105[v38], 8uLL);
        int8x16_t v108 = vorrq_s8(v106, vorrq_s8(vextq_s8((int8x16_t)0, v107, 0xFuLL), v107));
        int16x8_t v109 = (int16x8_t)vzip1q_s8(vextq_s8(v108, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v110 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v106, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v108, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v109, v109)), v41), v42);
        int16x8_t v111 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v104, 0xEuLL);
        v111.i16[0] = (*v105
                     + 2 * *((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14))
                     + *(void *)((char *)v60 - v61 * v14)
                     + 2) >> 2;
        int16x8_t v112 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v111, vaddq_s16(v104, (int16x8_t)vshlq_u16((uint16x8_t)v41, v44))), v44);
        int16x8_t v113 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v110, 0xEuLL);
        v113.i16[0] = v111.i16[0];
        unsigned int v114 = (2
              * ((*v105
                + 2 * *((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14))
                + *(void *)((char *)v60 - v61 * v14)
                + 2) >> 2)
              + v104.u16[0]
              + v110.u16[0]
              + 2) >> 2;
        a9 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v104, v104), (int16x8_t)vextq_s8((int8x16_t)v104, (int8x16_t)0, 2uLL)), v41), v111), v42), 0xEuLL);
        a9.i16[0] = v114;
        int16x8_t v115 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v110, v110), (int16x8_t)vextq_s8((int8x16_t)v110, (int8x16_t)0, 2uLL)), v41), v113), v42), (int8x16_t)xmmword_221A369A0), (int8x16_t)xmmword_221A369B0), (int8x16_t)xmmword_221A369C0);
        int16x8_t v116 = (int16x8_t)vextq_s8((int8x16_t)v115, (int8x16_t)v112, 0xEuLL);
        int8x16_t v117 = (int8x16_t)vdupq_laneq_s16(v115, 6);
        if (v19)
        {
          unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
          *int v60 = vqmovun_s16(vaddq_s16(*v65, v112));
          *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(vaddq_s16(v65[2], a9));
          *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(vaddq_s16(v65[4], v116));
          *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(vaddq_s16(v65[6], (int16x8_t)vextq_s8(v117, (int8x16_t)a9, 0xEuLL)));
          int8x16_t v118 = vqtbl1q_s8((int8x16_t)v115, (int8x16_t)xmmword_221A369D0);
          *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(vaddq_s16(v65[8], (int16x8_t)vextq_s8(v118, (int8x16_t)v112, 0xCuLL)));
          int8x16_t v119 = vqtbl1q_s8((int8x16_t)v115, (int8x16_t)xmmword_221A369E0);
          *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(vaddq_s16(v65[10], (int16x8_t)vextq_s8(v119, (int8x16_t)a9, 0xCuLL)));
          *(int8x8_t *)((char *)v60 + v40) = vqmovun_s16(vaddq_s16(v65[12], (int16x8_t)vextq_s8(vqtbl1q_s8(v118, (int8x16_t)xmmword_221A369F0), (int8x16_t)v112, 0xAuLL)));
          a8 = (int16x8_t)vextq_s8(vqtbl1q_s8(vqtbl1q_s8(v119, (int8x16_t)xmmword_221A369F0), (int8x16_t)xmmword_221A36A00), (int8x16_t)a9, 0xAuLL);
          goto LABEL_105;
        }
        *int v60 = vqmovun_s16(v112);
        *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(a9);
        *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(v116);
        *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16((int16x8_t)vextq_s8(v117, (int8x16_t)a9, 0xEuLL));
        int8x16_t v174 = vqtbl1q_s8((int8x16_t)v115, (int8x16_t)xmmword_221A369D0);
        *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16((int16x8_t)vextq_s8(v174, (int8x16_t)v112, 0xCuLL));
        int8x16_t v175 = vqtbl1q_s8((int8x16_t)v115, (int8x16_t)xmmword_221A369E0);
        *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16((int16x8_t)vextq_s8(v175, (int8x16_t)a9, 0xCuLL));
        *(int8x8_t *)((char *)v60 + v40) = vqmovun_s16((int16x8_t)vextq_s8(vqtbl1q_s8(v174, (int8x16_t)xmmword_221A369F0), (int8x16_t)v112, 0xAuLL));
        a8 = (int16x8_t)vextq_s8(vqtbl1q_s8(vqtbl1q_s8(v175, (int8x16_t)xmmword_221A369F0), (int8x16_t)xmmword_221A36A00), (int8x16_t)a9, 0xAuLL);
        break;
      case 6u:
        a8.i64[0] = *(void *)((char *)v60 - BYTE1(v55) * v14);
        unsigned __int8 v120 = a8.i8[0];
        a8.i16[4] = *((unsigned __int8 *)v60 + BYTE2(v55) - v14 + 7);
        int8x16_t v121 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v60 - v14 - v59));
        int16x8_t v122 = (int16x8_t)vzip1q_s8(vextq_s8(v121, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v123 = (unsigned __int8 *)v60 - v55;
        int16x8_t v124 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v121, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v121, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v122, v122)), v41), v42);
        int8x16_t v125 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v123[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v123[v36], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v123[v33], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14)), (int8x16_t)*v123)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v123[v37], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v123[v43], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v123[v40], 9uLL)));
        int8x16_t v126 = vextq_s8((int8x16_t)0, (int8x16_t)v123[v38], 8uLL);
        int8x16_t v127 = vorrq_s8(v125, vorrq_s8(vextq_s8((int8x16_t)0, v126, 0xFuLL), v126));
        int16x8_t v128 = (int16x8_t)vzip1q_s8(vextq_s8(v127, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v129 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v125, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v127, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v128, v128)), v41), v42);
        int16x8_t v130 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v129, 0xEuLL);
        v130.i16[0] = (*v123
                     + 2 * *((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14))
                     + v120
                     + 2) >> 2;
        int8x16_t v131 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vshlq_u16((uint16x8_t)v41, v44), v129), v130), v44);
        int8x16_t v132 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v129, v129), (int16x8_t)vextq_s8((int8x16_t)v129, (int8x16_t)0, 2uLL)), v41), v130), v42);
        int16x8_t v133 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v124, 0xEuLL);
        v133.i16[0] = (*v123
                     + 2 * *((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14))
                     + v120
                     + 2) >> 2;
        int8x16_t v134 = vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v124, v124), (int16x8_t)vextq_s8((int8x16_t)v124, (int8x16_t)0, 2uLL)), v41), v133), v42), 0xEuLL);
        v134.i16[0] = (2
                     * ((*v123
                       + 2 * *((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14))
                       + v120
                       + 2) >> 2)
                     + v124.u16[0]
                     + v129.u16[0]
                     + 2) >> 2;
        int16x8_t v135 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v131, (int8x16_t)xmmword_221A369A0), (int8x16_t)xmmword_221A369B0), (int8x16_t)xmmword_221A369C0);
        int16x8_t v136 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v132, (int8x16_t)xmmword_221A369A0), (int8x16_t)xmmword_221A369B0), (int8x16_t)xmmword_221A369C0);
        int16x8_t v137 = (int16x8_t)vextq_s8((int8x16_t)v135, v134, 0xEuLL);
        int8x16_t v138 = (int8x16_t)vzip2q_s16(v136, v135);
        a9 = (int16x8_t)vdupq_lane_s64(v135.i64[0], 0);
        if (v19)
        {
          unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
          *int v60 = vqmovun_s16(vaddq_s16(*v65, v137));
          *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(vaddq_s16(v65[2], (int16x8_t)vextq_s8(v138, v134, 0xAuLL)));
          *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(vaddq_s16(v65[4], (int16x8_t)vextq_s8(v138, v134, 6uLL)));
          *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(vaddq_s16(v65[6], (int16x8_t)vextq_s8(v138, v134, 2uLL)));
          *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(vaddq_s16(v65[8], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v135, 0xEuLL), v136)));
          *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(vaddq_s16(v65[10], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v135, 0xCuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xEuLL))));
          *(int8x8_t *)((char *)v60 + v40) = vqmovun_s16(vaddq_s16(v65[12], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v135, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xCuLL))));
          a8 = vzip2q_s16(a9, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xAuLL));
          goto LABEL_105;
        }
        *int v60 = vqmovun_s16(v137);
        *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16((int16x8_t)vextq_s8(v138, v134, 0xAuLL));
        *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16((int16x8_t)vextq_s8(v138, v134, 6uLL));
        *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16((int16x8_t)vextq_s8(v138, v134, 2uLL));
        *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v135, 0xEuLL), v136));
        *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v135, 0xCuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xEuLL)));
        *(int8x8_t *)((char *)v60 + v40) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v135, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xCuLL)));
        a8 = vzip2q_s16(a9, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v136, 0xAuLL));
        break;
      case 7u:
        a9.i64[0] = *(void *)((char *)v60 - BYTE1(v55) * v14);
        int v139 = (char *)v60 - v14;
        if (v62)
        {
          a8.i64[0] = *((void *)v139 + 1);
        }
        else
        {
          int8x16_t v176 = vextq_s8((int8x16_t)a9, (int8x16_t)0, 7uLL);
          int16x8_t v177 = (int16x8_t)vzip1q_s8(v176, v176);
          int32x4_t v178 = (int32x4_t)vzip1q_s16(v177, v177);
          a8 = (int16x8_t)vzip1q_s32(v178, v178);
        }
        unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
        int8x16_t v179 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a9, 0xFuLL), (int8x16_t)v139[-v59]);
        int8x16_t v180 = vorrq_s8(v179, vextq_s8((int8x16_t)0, (int8x16_t)a8, 7uLL));
        int16x8_t v181 = (int16x8_t)vzip1q_s8(v179, (int8x16_t)0);
        int16x8_t v182 = (int16x8_t)vzip1q_s8(vextq_s8(v179, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v183 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v181, (int16x8_t)vzip1q_s8(vextq_s8(v180, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(vaddq_s16(v182, v182), v41)), v42);
        int16x8_t v184 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
        int16x8_t v185 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v184, v184), (int16x8_t)vzip2q_s8(v180, (int8x16_t)0)), vaddq_s16((int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, vdupq_lane_s8(*(int8x8_t *)a8.i8, 7), 9uLL), vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL)), (int8x16_t)0), v41)), v42);
        int8x8_t v186 = vqmovun_s16(v183);
        int8x8_t v187 = vqmovun_s16(v185);
        uint8x8_t v188 = (uint8x8_t)vext_s8(v186, v187, 1uLL);
        uint8x8_t v189 = (uint8x8_t)vext_s8(v186, v187, 2uLL);
        int16x8_t v190 = (int16x8_t)vaddl_u8(v188, (uint8x8_t)v186);
        uint16x8_t v191 = vaddw_u8((uint16x8_t)v41, v189);
        int16x8_t v192 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16((int16x8_t)vaddw_u8(v191, v188), v190), v42);
        int16x8_t v193 = (int16x8_t)vshlq_u16((uint16x8_t)v41, v44);
        int16x8_t v194 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v190, v193), v44);
        if (v19)
        {
          *int v60 = vqmovun_s16(vaddq_s16(*v65, v194));
          int16x8_t v192 = vaddq_s16(v65[2], v192);
        }
        else
        {
          *int v60 = vqmovun_s16(v194);
        }
        int16x8_t v200 = (int16x8_t)vmovl_u8(v188);
        int16x8_t v201 = (int16x8_t)vmovl_u8(v189);
        *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(v192);
        uint8x8_t v202 = (uint8x8_t)vext_s8(v186, v187, 3uLL);
        int16x8_t v203 = vaddq_s16(v200, v201);
        int16x8_t v204 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16((int16x8_t)vaddw_u8(v191, v202), v203), v42);
        int16x8_t v205 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v203, v193), v44);
        if (v19)
        {
          *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(vaddq_s16(v65[4], v205));
          int16x8_t v204 = vaddq_s16(v65[6], v204);
        }
        else
        {
          *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(v205);
        }
        int16x8_t v206 = (int16x8_t)vmovl_u8(v202);
        *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(v204);
        uint8x8_t v207 = (uint8x8_t)vext_s8(v186, v187, 4uLL);
        int16x8_t v208 = vaddq_s16(v201, v206);
        int16x8_t v209 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vaddw_u8((uint16x8_t)v206, v207), v208), v41), v42);
        int16x8_t v210 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v208, v193), v44);
        if (v19)
        {
          *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(vaddq_s16(v65[8], v210));
          int16x8_t v209 = vaddq_s16(v65[10], v209);
        }
        else
        {
          *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(v210);
        }
        int16x8_t v211 = (int16x8_t)vmovl_u8(v207);
        *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(v209);
        uint8x8_t v212 = (uint8x8_t)vext_s8(v186, v187, 5uLL);
        int16x8_t v213 = vaddq_s16(v206, v211);
        a8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vaddw_u8((uint16x8_t)v211, v212), v213), v41), v42);
        a9 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v213, v193), v44);
        if (v19) {
          goto LABEL_96;
        }
        goto LABEL_97;
      case 8u:
        int v140 = (unsigned __int8 *)v60 - v55;
        int8x16_t v141 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v140[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v140[v36], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v140[v33], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v60 + ~(unint64_t)(v59 * v14)), (int8x16_t)*v140)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v140[v37], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v140[v43], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v140[v40], 9uLL)));
        int8x16_t v142 = vextq_s8((int8x16_t)0, (int8x16_t)v140[v38], 8uLL);
        int8x16_t v143 = vorrq_s8(v141, vorrq_s8(vextq_s8((int8x16_t)0, v142, 0xFuLL), v142));
        int16x8_t v144 = (int16x8_t)vzip1q_s8(vextq_s8(v143, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v145 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v141, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v143, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v144, v144)), v41), v42);
        int16x8_t v146 = (int16x8_t)vextq_s8((int8x16_t)v145, (int8x16_t)0, 2uLL);
        int8x16_t v147 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v145, (int16x8_t)vextq_s8((int8x16_t)v145, (int8x16_t)0, 4uLL)), vaddq_s16(v146, v146)), v41), v42);
        v147.i16[6] = (3 * v145.u16[7] + v145.u16[6] + 2) >> 2;
        int16x8_t v148 = (int16x8_t)vextq_s8(vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vshlq_u16((uint16x8_t)v41, v44), v145), v146), v44), 0xEuLL), (int8x16_t)0, 2uLL);
        int16x8_t v149 = (int16x8_t)vextq_s8(vextq_s8((int8x16_t)0, v147, 0xEuLL), (int8x16_t)0, 2uLL);
        a8 = (int16x8_t)vdupq_n_s32(v145.u16[7] | (v145.u16[7] << 16));
        if (v19)
        {
          unsigned int v65 = (int16x8_t *)(v35 + 2 * *v46);
          *int v60 = vqmovun_s16(vaddq_s16(*v65, vzip1q_s16(v148, v149)));
          int16x8_t v150 = (int16x8_t)vextq_s8((int8x16_t)v149, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(vaddq_s16(v65[2], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 2uLL), v150)));
          int16x8_t v151 = (int16x8_t)vextq_s8((int8x16_t)v150, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(vaddq_s16(v65[4], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 4uLL), v151)));
          int16x8_t v152 = (int16x8_t)vextq_s8((int8x16_t)v151, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(vaddq_s16(v65[6], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 6uLL), v152)));
          int16x8_t v153 = (int16x8_t)vextq_s8((int8x16_t)v152, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16(vaddq_s16(v65[8], (int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v148, 1), v153), vextq_s8((int8x16_t)0, (int8x16_t)a8, 4uLL))));
          int16x8_t v154 = (int16x8_t)vextq_s8((int8x16_t)v153, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16(vaddq_s16(v65[10], (int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 0xAuLL), v154), vextq_s8((int8x16_t)0, (int8x16_t)a8, 8uLL))));
          v226.val[1] = vextq_s8((int8x16_t)v148, (int8x16_t)0, 0xCuLL);
          v226.val[0] = vextq_s8((int8x16_t)v154, (int8x16_t)0, 2uLL);
          int16x8_t v155 = vaddq_s16(v65[12], (int16x8_t)vorrq_s8(vqtbl2q_s8(v226, (int8x16_t)xmmword_221A36990), vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xCuLL)));
LABEL_104:
          *(int8x8_t *)((char *)v60 + v40) = vqmovun_s16(v155);
LABEL_105:
          a9 = v65[14];
          a8 = vaddq_s16(a9, a8);
        }
        else
        {
          *int v60 = vqmovun_s16(vzip1q_s16(v148, v149));
          int16x8_t v195 = (int16x8_t)vextq_s8((int8x16_t)v149, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v14) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 2uLL), v195));
          int16x8_t v196 = (int16x8_t)vextq_s8((int8x16_t)v195, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v36) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 4uLL), v196));
          int16x8_t v197 = (int16x8_t)vextq_s8((int8x16_t)v196, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v33) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 6uLL), v197));
          int16x8_t v198 = (int16x8_t)vextq_s8((int8x16_t)v197, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v37) = vqmovun_s16((int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v148, 1), v198), vextq_s8((int8x16_t)0, (int8x16_t)a8, 4uLL)));
          int16x8_t v199 = (int16x8_t)vextq_s8((int8x16_t)v198, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v60 + v43) = vqmovun_s16((int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v148, (int8x16_t)0, 0xAuLL), v199), vextq_s8((int8x16_t)0, (int8x16_t)a8, 8uLL)));
          v227.val[1] = vextq_s8((int8x16_t)v148, (int8x16_t)0, 0xCuLL);
          v227.val[0] = vextq_s8((int8x16_t)v199, (int8x16_t)0, 2uLL);
          a9 = (int16x8_t)vorrq_s8(vqtbl2q_s8(v227, (int8x16_t)xmmword_221A36990), vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xCuLL));
LABEL_97:
          *(int8x8_t *)((char *)v60 + v40) = vqmovun_s16(a9);
        }
        break;
      default:
        goto LABEL_108;
    }
    *(int8x8_t *)a8.i8 = vqmovun_s16(a8);
LABEL_107:
    *(void *)((char *)v60 + v38) = a8.i64[0];
LABEL_108:
    ++v46;
    ++result;
    BOOL v220 = v31 >= 0xC;
    v31 += 4;
  }
  while (!v220);
  return result;
}

uint64_t sub_2219D4AD4(uint64_t a1, uint64_t a2)
{
  int16x8_t v3 = *(unsigned char **)(a2 + 936);
  BOOL v4 = v3 != 0;
  int16x8_t v5 = *(unsigned __int8 **)(a2 + 944);
  BOOL v6 = v5 != 0;
  if (!*(unsigned char *)(a2 + 928)) {
    goto LABEL_9;
  }
  if (v3)
  {
    if (*v3 == 34) {
      BOOL v4 = 0;
    }
    if (v5) {
      goto LABEL_6;
    }
  }
  else
  {
    BOOL v4 = 0;
    if (v5)
    {
LABEL_6:
      BOOL v6 = *v5 != 34;
      goto LABEL_9;
    }
  }
  BOOL v6 = 0;
LABEL_9:
  uint64_t v7 = *(void *)(a2 + 72);
  unsigned int v8 = *(_DWORD *)(v7 + 136);
  if (*(unsigned char *)(a2 + 23) == 1)
  {
    unsigned int v11 = *(_DWORD *)(a1 + 820);
    uint64_t v9 = *(void *)(v7 + 32)
       + 32 * v8 * (v11 / (2 * *(_DWORD *)(a2 + 16)))
       + ((8 * (v11 % (2 * *(_DWORD *)(a2 + 16)))) & 0xFFFFFFF0);
    unsigned int v10 = ((int)(v11 << 31) >> 31) & (16 * v8);
  }
  else
  {
    uint64_t v9 = *(void *)(v7 + 32) + (16 * *(_DWORD *)(a1 + 824));
    unsigned int v10 = 16 * *(_DWORD *)(a1 + 828) * v8;
  }
  uint64_t result = sub_2219CDAB8((int8x16_t *)(v9 + v10), v8, a2 + 112, v6, v4, byte_221A3C5F0[*(unsigned __int8 *)(a1 + 834)]);
  unsigned int v13 = *(void **)(a2 + 968);
  *unsigned int v13 = 0x1212121212121212;
  v13[1] = 0x1212121212121212;
  return result;
}

uint64_t sub_2219D4BDC(uint64_t a1, uint64_t a2)
{
  int16x8_t v3 = *(unsigned char **)(a2 + 936);
  BOOL v4 = v3 != 0;
  int16x8_t v5 = *(unsigned __int8 **)(a2 + 944);
  BOOL v6 = v5 != 0;
  if (!*(unsigned char *)(a2 + 928)) {
    goto LABEL_9;
  }
  if (v3)
  {
    if (*v3 == 34) {
      BOOL v4 = 0;
    }
    if (v5) {
      goto LABEL_6;
    }
  }
  else
  {
    BOOL v4 = 0;
    if (v5)
    {
LABEL_6:
      BOOL v6 = *v5 != 34;
      goto LABEL_9;
    }
  }
  BOOL v6 = 0;
LABEL_9:
  uint64_t v7 = *(unsigned __int8 **)(a2 + 72);
  int v8 = *(_DWORD *)(a1 + 828);
  unsigned int v9 = *((_DWORD *)v7 + 34);
  int v10 = *v7;
  uint64_t v11 = *((void *)v7 + 4) + (16 * *(_DWORD *)(a1 + 824));
  unsigned int v12 = 32 * v8 * v9;
  if (v10)
  {
    char v13 = 5;
  }
  else
  {
    unsigned int v12 = 16 * v8 * v9;
    char v13 = 4;
  }
  uint64_t v14 = v11 + (v8 << v13) * v9;
  if (*(unsigned char *)(a2 + 21))
  {
    unsigned int v12 = v9;
    uint64_t v11 = v14;
  }
  uint64_t result = sub_2219CDAB8((int8x16_t *)(v11 + v12), 2 * v9, a2 + 112, v6, v4, byte_221A3C5F0[*(unsigned __int8 *)(a1 + 834)]);
  char v16 = *(void **)(a2 + 968);
  *char v16 = 0x1212121212121212;
  v16[1] = 0x1212121212121212;
  return result;
}

uint64_t sub_2219D4CD8(uint64_t a1, int16x8_t *a2)
{
  int16x8_t v2 = (unsigned char *)a2[58].i64[1];
  BOOL v3 = v2 != 0;
  BOOL v4 = (unsigned __int8 *)a2[59].i64[0];
  BOOL v5 = v4 != 0;
  if (a2[58].i8[0])
  {
    if (v2)
    {
      if (*v2 == 34) {
        BOOL v3 = 0;
      }
      if (v4) {
        goto LABEL_6;
      }
    }
    else
    {
      BOOL v3 = 0;
      if (v4)
      {
LABEL_6:
        BOOL v5 = *v4 != 34;
        return sub_2219D4D34((_DWORD *)a1, (uint64_t)a2, a2 + 39, v5, v3, *(unsigned __int8 *)(a1 + 1121));
      }
    }
    BOOL v5 = 0;
  }
  return sub_2219D4D34((_DWORD *)a1, (uint64_t)a2, a2 + 39, v5, v3, *(unsigned __int8 *)(a1 + 1121));
}

uint64_t sub_2219D4D34(_DWORD *a1, uint64_t a2, int16x8_t *a3, int a4, int a5, int a6)
{
  BOOL v6 = *(unsigned __int8 **)(a2 + 72);
  int v7 = a1[206];
  int v8 = a1[207];
  if (*(unsigned char *)(a2 + 20) && *(unsigned char *)(a2 + 22))
  {
    unsigned int v9 = *((_DWORD *)v6 + 38);
    LODWORD(v10) = 2 * v9;
    int v11 = *v6;
    uint64_t v12 = *((void *)v6 + 5) + (16 * v7);
    int v13 = 16 * v8 * v9;
    if (v11)
    {
      char v14 = 4;
    }
    else
    {
      int v13 = 8 * v8 * v9;
      char v14 = 3;
    }
    uint64_t v15 = v12 + (v8 << v14) * v9;
    if (*(unsigned char *)(a2 + 21)) {
      unsigned int v16 = v9;
    }
    else {
      unsigned int v16 = v13;
    }
    if (*(unsigned char *)(a2 + 21)) {
      uint64_t v12 = v15;
    }
  }
  else
  {
    LODWORD(v10) = *((_DWORD *)v6 + 38);
    if (*(unsigned char *)(a2 + 23) == 1)
    {
      unsigned int v17 = a1[205];
      uint64_t v12 = *((void *)v6 + 5)
          + 16 * v10 * (v17 / (2 * *(_DWORD *)(a2 + 16)))
          + ((8 * (v17 % (2 * *(_DWORD *)(a2 + 16)))) & 0xFFFFFFF0);
      unsigned int v16 = ((int)(v17 << 31) >> 31) & (8 * v10);
    }
    else
    {
      uint64_t v12 = *((void *)v6 + 5) + (16 * v7);
      unsigned int v16 = 8 * v8 * v10;
    }
  }
  unsigned int v18 = (int8x16_t *)(v12 + v16);
  switch(a6)
  {
    case 0:
      if (a5 | a4)
      {
        if (a4 <= 0) {
          int v19 = 0;
        }
        else {
          int v19 = -1;
        }
        uint64_t v20 = (__int16 *)((char *)&v18[-1].i16[7] + (4 * v10));
        uint64_t v21 = (2 * v10);
        uint64_t v22 = (3 * v10);
        uint8x16_t v23 = *(uint8x16_t *)((char *)v18 - (int)(v10 & v19));
        uint64_t v24 = (__int16 *)((char *)&v18[-1].i16[7] + v10);
        int v25 = (__int16 *)((char *)&v18[-1].i16[7] + v21);
        int v26 = (__int16 *)((char *)v20 + v10);
        uint64_t v27 = (__int16 *)((char *)v20 + v21);
        v29.i16[4] = *v20;
        int v28 = (__int16 *)((char *)v20 + v22);
        uint64_t v10 = v10;
        v30.i16[0] = v23.u8[0];
        v30.i16[1] = v23.u8[2];
        v30.i16[2] = BYTE4(*(unint64_t *)((char *)v18->i64 - (int)(v10 & v19)));
        v30.i16[3] = BYTE6(*(unint64_t *)((char *)v18->i64 - (int)(v10 & v19)));
        v30.i16[4] = *(uint64_t *)((char *)&v18->i64[1] - (int)(v10 & v19));
        v30.i16[5] = BYTE2(*(uint64_t *)((char *)&v18->i64[1] - (int)(v10 & v19)));
        v30.i16[6] = v23.u8[12];
        v30.i16[7] = v23.u8[14];
        int32x4_t v31 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)(*(_OWORD *)&v23 & __PAIR128__(0xFF00FF00FF00FF00, 0xFF00FF00FF00FF00)))));
        v23.i16[0] = v18[-1].i16[7];
        v23.i16[1] = *v24;
        v23.i16[2] = *v25;
        v23.i16[3] = *(__int16 *)((char *)&v18[-1].i16[7] + v22);
        v23.i16[4] = v29.u8[8];
        v23.i16[5] = *v26;
        v23.i16[6] = *v27;
        v23.i16[7] = *v28;
        int32x4_t v32 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v23)));
        v29.i16[0] = v18[-1].i16[7] & 0xFF00;
        v29.i16[1] = *v24 & 0xFF00;
        v29.i16[2] = *v25 & 0xFF00;
        v29.i16[3] = *(__int16 *)((unsigned char *)&v18[-1].i16[7] + v22) & 0xFF00;
        v29.i16[4] &= 0xFF00u;
        v29.i16[5] = *v26 & 0xFF00;
        v29.i16[6] = *v27 & 0xFF00;
        v29.i16[7] = *v28 & 0xFF00;
        int32x4_t v33 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v29)));
        int16x8_t v34 = (int16x8_t)vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v30))), (int32x4_t)xmmword_221A368B0);
        int16x8_t v35 = (int16x8_t)vaddq_s32(v31, (int32x4_t)xmmword_221A368B0);
        int16x8_t v36 = (int16x8_t)vaddq_s32(v32, (int32x4_t)xmmword_221A368B0);
        int16x8_t v37 = (int16x8_t)vaddq_s32(v33, (int32x4_t)xmmword_221A368B0);
        if ((v19 & a5) != 0)
        {
          v38.i64[0] = 0x2000200020002;
          v38.i64[1] = 0x2000200020002;
          int8x16_t v39 = (int8x16_t)vshlq_u16((uint16x8_t)vqtbl1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)vaddq_s32((int32x4_t)v37, (int32x4_t)v35), 0xEuLL), (int8x16_t)vaddq_s32((int32x4_t)v36, (int32x4_t)v34)), (int8x16_t)xmmword_221A366F0), v38);
          uint16x8_t v40 = (uint16x8_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)vzip2q_s16(v36, v37), 8uLL), vextq_s8((int8x16_t)0, (int8x16_t)vzip2q_s16(v34, v35), 0xCuLL));
          v41.i64[0] = 0x1000100010001;
          v41.i64[1] = 0x1000100010001;
          int8x16_t v42 = vorrq_s8((int8x16_t)vshlq_u16(v40, v41), v39);
        }
        else
        {
          if (a5)
          {
            int8x16_t v80 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v37, 0xEuLL), (int8x16_t)v36);
            int8x16_t v81 = (int8x16_t)xmmword_221A368C0;
          }
          else
          {
            int8x16_t v80 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v35, 0xEuLL), (int8x16_t)v34);
            int8x16_t v81 = (int8x16_t)xmmword_221A368D0;
          }
          uint16x8_t v82 = (uint16x8_t)vqtbl1q_s8(v80, v81);
          v83.i64[0] = 0x1000100010001;
          v83.i64[1] = 0x1000100010001;
          int8x16_t v42 = (int8x16_t)vshlq_u16(v82, v83);
        }
      }
      else
      {
        uint64_t v21 = (2 * v10);
        v42.i64[0] = 0x80008000800080;
        v42.i64[1] = 0x80008000800080;
        uint64_t v10 = v10;
      }
      char v84 = 1;
      do
      {
        char v85 = v84;
        int16x8_t v86 = (int16x8_t)vqtbl1q_s8(v42, (int8x16_t)xmmword_221A36310);
        int16x8_t v87 = (int16x8_t)vqtbl1q_s8(v42, (int8x16_t)xmmword_221A368E0);
        char v88 = 1;
        do
        {
          char v89 = v88;
          int8x16_t v90 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a3[2], v86)), vaddq_s16(a3[3], v87));
          *unsigned int v18 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(*a3, v86)), vaddq_s16(a3[1], v87));
          *(int8x16_t *)((char *)v18 + v10) = v90;
          a3 += 4;
          unsigned int v18 = (int8x16_t *)((char *)v18 + v21);
          char v88 = 0;
        }
        while ((v89 & 1) != 0);
        char v84 = 0;
        int8x16_t v42 = vqtbl1q_s8(v42, (int8x16_t)xmmword_221A368F0);
      }
      while ((v85 & 1) != 0);
      goto LABEL_41;
    case 1:
      uint64_t v44 = 0;
      do
      {
        int16x8_t v45 = (int16x8_t)vqtbl1q_s8((int8x16_t)((v18[-1].u16[7] | (v18[-1].u16[7] << 8)) & 0xFF00FFLL), (int8x16_t)xmmword_221A36310);
        *unsigned int v18 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a3[v44], v45)), vaddq_s16(a3[v44 + 1], v45));
        unsigned int v18 = (int8x16_t *)((char *)v18 + v10);
        v44 += 2;
      }
      while ((v44 * 16) != 256);
      goto LABEL_41;
    case 2:
      uint64_t v46 = 0;
      unint64_t v47 = (int8x16_t *)((char *)v18 - (int)v10);
      int16x8_t v48 = (int16x8_t)vzip1q_s8(*v47, (int8x16_t)0);
      int16x8_t v49 = (int16x8_t)vzip2q_s8(*v47, (int8x16_t)0);
      do
      {
        *unsigned int v18 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a3[v46], v48)), vaddq_s16(a3[v46 + 1], v49));
        unsigned int v18 = (int8x16_t *)((char *)v18 + v10);
        v46 += 2;
      }
      while ((v46 * 16) != 256);
      goto LABEL_41;
    case 3:
      uint64_t v50 = 0;
      int8x16_t v51 = vqtbl1q_s8(*(int8x16_t *)((char *)v18 - (int)v10), (int8x16_t)xmmword_221A36860);
      v51.i16[0] = *(__int16 *)((char *)&v18[-1].i16[7] - (int)v10);
      int8x16_t v52 = vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vsubq_s16((int16x8_t)vzip2q_s8(v51, (int8x16_t)0), (int16x8_t)vzip1q_s8(vqtbl1q_s8(v51, (int8x16_t)xmmword_221A36870), (int8x16_t)0)), (int8x16_t)xmmword_221A36880), (int8x16_t)xmmword_221A36890);
      int32x4_t v53 = vpaddq_s32(vmull_s16(*(int16x4_t *)v52.i8, (int16x4_t)0x22001100220011), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL), (int16x4_t)0x44003300440033));
      v54.i64[0] = 0x1000000010;
      v54.i64[1] = 0x1000000010;
      v55.i64[0] = 0x400000004;
      v55.i64[1] = 0x400000004;
      int16x8_t v56 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_s32(vaddq_s32(vaddq_s32(v53, v54), (int32x4_t)vextq_s8((int8x16_t)v53, (int8x16_t)0, 8uLL)), v55), (int8x16_t)xmmword_221A368A0), (int8x16_t)xmmword_221A36310);
      unsigned int v57 = &v18[-1].u8[v10 + 14];
      int v58 = *v57;
      int v59 = v57[1];
      int v60 = &v57[v10];
      int v61 = *v60;
      int v62 = v60[1];
      int8x16_t v63 = &v60[(2 * v10)];
      int v64 = *v63;
      int v65 = v63[1];
      int8x16_t v66 = &v63[v10];
      int v67 = *v66;
      int v68 = v66[1];
      int16x8_t v69 = &v66[v10];
      int16x8_t v70 = (int16x8_t)vdupq_n_s32((34816
                                  * (3 * (v69[1] - v18[-1].u8[15])
                                   - v62
                                   + v65
                                   + 2 * (v68 - v59)
                                   + 4 * (v69[v10 + 1] - v18[-1].u8[-v10 + 15]))
                                  + 0x8000) & 0xFFFF0000 | (unsigned __int16)((17
                                                                             * (3 * (*v69 - v18[-1].u8[14])
                                                                              - v61
                                                                              + v64
                                                                              + 2 * (v67 - v58)
                                                                              + 4
                                                                              * (v69[v10]
                                                                               - v18[-1].u8[-v10 + 14]))
                                                                             + 16) >> 5));
      v71.i64[0] = 0x2000200020002;
      v71.i64[1] = 0x2000200020002;
      int16x8_t v72 = vmlaq_s16((int16x8_t)vdupq_n_s32((16* (v18->u8[-v10 + 14]+ v18->u8[8 * v10 - v10 - 2])) | ((v18->u8[-v10 + 15]+ v18->u8[8 * v10 - v10 - 1]) << 20)), v70, v71);
      v71.i64[0] = 0x10001000100010;
      v71.i64[1] = 0x10001000100010;
      int16x8_t v73 = vaddq_s16(v72, v71);
      int16x8_t v74 = vmlaq_s16(v73, v56, (int16x8_t)xmmword_221A36270);
      int16x8_t v75 = vmlaq_s16(v73, v56, (int16x8_t)xmmword_221A36280);
      v76.i64[0] = 0x4000400040004;
      v76.i64[1] = 0x4000400040004;
      v77.i64[0] = 0xFF00FF00FF00FFLL;
      v77.i64[1] = 0xFF00FF00FF00FFLL;
      do
      {
        int16x8_t v78 = vshlq_s16(v74, v76);
        int16x8_t v74 = vaddq_s16(v74, v70);
        int16x8_t v79 = vshlq_s16(v75, v76);
        int16x8_t v75 = vaddq_s16(v75, v70);
        *unsigned int v18 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(a3[v50], vmaxq_s16(vminq_s16(v78, v77), (int16x8_t)0))), vaddq_s16(a3[v50 + 1], vmaxq_s16(vminq_s16(v79, v77), (int16x8_t)0)));
        unsigned int v18 = (int8x16_t *)((char *)v18 + v10);
        v50 += 2;
      }
      while ((v50 * 16) != 256);
LABEL_41:
      uint64_t result = 0;
      break;
    default:
      uint64_t result = 4294958327;
      break;
  }
  return result;
}

int *sub_2219D5304(int *result, uint64_t a2, double a3, double a4, double a5, double a6, double a7, int16x8_t a8, int16x8_t a9)
{
  uint64_t v230 = *MEMORY[0x263EF8340];
  uint64_t v9 = *((void *)result + 27);
  int v11 = *result;
  int v10 = result[1];
  if (*((unsigned char *)result + 29) && *(unsigned char *)(v9 + 1363))
  {
    uint64_t v12 = v9 + 504;
    uint64_t v13 = *(unsigned int *)(v9 + 168);
    unsigned int v14 = 2 * v13;
    int v15 = *(unsigned __int8 *)(v9 + 32);
    uint64_t v16 = *(void *)(v9 + 64) + (16 * v11);
    if (*((unsigned char *)result + 30))
    {
      if (v15) {
        char v17 = 5;
      }
      else {
        char v17 = 4;
      }
      uint64_t v18 = ((v10 << v17) * v13);
      v16 += v13;
      goto LABEL_16;
    }
    int v19 = v10 * v13;
    if (v15)
    {
      uint64_t v18 = (32 * v19);
      goto LABEL_16;
    }
LABEL_15:
    uint64_t v18 = (16 * v19);
    goto LABEL_16;
  }
  uint64_t v12 = v9 + 440;
  unsigned int v14 = *(_DWORD *)(v9 + 168);
  if (*((unsigned char *)result + 31) != 1)
  {
    if (*((unsigned char *)result + 31))
    {
      uint64_t v21 = *(void *)(v9 + 64)
          + 32 * v14 * (result[4] / (2 * result[5]))
          + ((8 * (result[4] % (2 * result[5]))) & 0xFFFFFFF0)
          + ((result[4] << 31 >> 31) & v14);
      uint64_t v12 = v9 + 504;
      v14 *= 2;
      goto LABEL_17;
    }
    uint64_t v16 = *(void *)(v9 + 64) + (16 * v11);
    int v19 = v10 * v14;
    goto LABEL_15;
  }
  unsigned int v20 = result[4];
  uint64_t v16 = *(void *)(v9 + 64) + 32 * v14 * (v20 / (2 * result[5])) + ((8 * (v20 % (2 * result[5]))) & 0xFFFFFFF0);
  uint64_t v18 = ((int)(v20 << 31) >> 31) & (16 * v14);
LABEL_16:
  uint64_t v21 = v16 + v18;
LABEL_17:
  int v22 = *(unsigned __int8 *)(*((void *)result + 5) + 52);
  uint64_t v23 = *((void *)result + 21);
  uint64_t v24 = *((void *)result + 22) + 48;
  int v26 = (unsigned __int8 *)*((void *)result + 16);
  int v25 = (unsigned __int8 *)*((void *)result + 17);
  uint64_t v28 = *((void *)result + 18);
  uint64_t v27 = *((void *)result + 19);
  uint64_t v228 = 0;
  uint64_t v229 = 0;
  uint64_t v226 = v24;
  int8x16x2_t v227 = 0;
  if (v26)
  {
    if (v26[64]) {
      uint8x16_t v29 = v26 + 48;
    }
    else {
      uint8x16_t v29 = v26 + 32;
    }
    int8x16x2_t v227 = v29;
    BOOL v30 = 1;
    if (v25) {
      goto LABEL_22;
    }
  }
  else
  {
    BOOL v30 = 0;
    if (v25)
    {
LABEL_22:
      if (v25[64]) {
        int32x4_t v31 = v25 + 48;
      }
      else {
        int32x4_t v31 = v25 + 32;
      }
      uint64_t v228 = v31;
      BOOL v32 = 1;
      goto LABEL_28;
    }
  }
  BOOL v32 = 0;
  uint64_t v228 = 0;
LABEL_28:
  BOOL v33 = v28 != 0;
  BOOL v34 = v27 != 0;
  if (v23)
  {
    if (*(unsigned char *)(v23 + 64)) {
      uint64_t v35 = v23 + 48;
    }
    else {
      uint64_t v35 = v23 + 32;
    }
    uint64_t v229 = v35;
  }
  else
  {
    uint64_t v229 = 0;
  }
  uint64_t v36 = *((void *)result + 6);
  if (*(unsigned char *)(v36 + 4))
  {
    if (v26)
    {
      if (v26[48] == 34)
      {
        BOOL v30 = v26[32] != 34;
        if (!v25) {
          goto LABEL_38;
        }
LABEL_43:
        if (v25[48] == 34)
        {
          BOOL v32 = v25[32] != 34;
          if (!v28) {
            goto LABEL_45;
          }
        }
        else
        {
          BOOL v32 = 1;
          if (!v28) {
            goto LABEL_45;
          }
        }
LABEL_39:
        if (*(unsigned char *)(v28 + 48) == 34)
        {
          BOOL v33 = *(unsigned __int8 *)(v28 + 32) != 34;
          if (!v27)
          {
LABEL_41:
            BOOL v34 = 0;
            goto LABEL_55;
          }
        }
        else
        {
          BOOL v33 = 1;
          if (!v27) {
            goto LABEL_41;
          }
        }
        goto LABEL_46;
      }
      BOOL v30 = 1;
      if (v25) {
        goto LABEL_43;
      }
    }
    else
    {
      BOOL v30 = 0;
      if (v25) {
        goto LABEL_43;
      }
    }
LABEL_38:
    BOOL v32 = 0;
    if (v28) {
      goto LABEL_39;
    }
LABEL_45:
    BOOL v33 = 0;
    if (!v27) {
      goto LABEL_41;
    }
LABEL_46:
    BOOL v34 = *(unsigned char *)(v27 + 48) != 34 || *(unsigned __int8 *)(v27 + 32) != 34;
  }
LABEL_55:
  unsigned int v37 = (2 * v33) | (4 * v32) | (8 * v30) | v34;
  uint16x8_t v38 = byte_267F63880;
  if (v26 && (*((unsigned char *)result + 185) & 1) != 0)
  {
    int v39 = *((unsigned __int8 *)result + 31);
    if (v39 != 2 || v26[144])
    {
      if (v39 == 1 && v26[144] == 1)
      {
        if (result[4]) {
          uint16x8_t v38 = (char *)&unk_267F63918;
        }
        else {
          uint16x8_t v38 = (char *)&unk_267F638E8;
        }
      }
    }
    else
    {
      uint16x8_t v38 = (char *)&unk_267F638B8;
    }
  }
  unint64_t v40 = 0;
  uint64_t v41 = 3 * v14;
  uint64_t v42 = 2 * v14;
  uint64_t v43 = 4 * v14;
  uint64_t v44 = 6 * v14;
  uint64_t v45 = 7 * v14;
  uint64_t v46 = (unsigned __int8 *)(v36 + 326);
  v47.i64[0] = 0x2000200020002;
  v47.i64[1] = 0x2000200020002;
  v48.i64[0] = 0x1000100010001;
  v48.i64[1] = 0x1000100010001;
  uint64_t v49 = 5 * v14;
  v50.i64[0] = -1;
  v50.i64[1] = -1;
  int8x16_t v51 = (unsigned int *)((char *)&unk_221A372A4 + 4 * v37);
  int8x16_t v52 = &byte_221A372A0;
  do
  {
    unint64_t v53 = v38[v40];
    if (v26 && v40 >= 8 && *((unsigned char *)result + 31) == 2 && !v26[144]) {
      uint64_t v54 = !(v53 & 1) | (2 * !(v53 & 1));
    }
    else {
      uint64_t v54 = !(v53 & 1);
    }
    unint64_t v55 = v38[v40 + 16];
    uint64_t v56 = *(&v226 + (~(2 * (_BYTE)v55) & 2));
    uint64_t v57 = *(&v226 + v54);
    if (v56) {
      BOOL v58 = v57 == 0;
    }
    else {
      BOOL v58 = 1;
    }
    if (v58
      || (unsigned int v59 = *(unsigned __int8 *)(v57 + ((v53 >> 1) & 0xF)),
          int v60 = *(unsigned __int8 *)(v56 + ((v55 >> 1) & 0xF)),
          (*(unsigned __int8 *)(*((void *)result + 6) + 4) & ((v60 | v59) >> 5) & 1) != 0))
    {
      unsigned int v61 = 2;
    }
    else
    {
      unsigned int v61 = (((v59 & 0xF) - (v60 & 0xF)) & ((int)((v59 & 0xF) - (v60 & 0xF)) >> 31)) + (v60 & 0xF);
    }
    unsigned int v63 = *v51;
    v51 += 16;
    unint64_t v62 = v63;
    unsigned int v64 = *v46;
    if (v61 <= v64) {
      ++v64;
    }
    unsigned int v65 = v64 & (*(v46 - 20) - 1) | v61 & -*(v46 - 20);
    *(_DWORD *)(v24 + v40) = vdup_n_s8(v65).u32[0];
    unint64_t v66 = v62 >> 24;
    int v67 = (void *)(v21 + *(unsigned int *)(v12 + 4 * v40));
    int v68 = BYTE1(v62);
    int v69 = BYTE2(v62);
    switch(v65)
    {
      case 0u:
        a8.i64[0] = *(void *)((char *)v67 - BYTE1(v62) * v14);
        a8.i16[4] = *((unsigned __int8 *)v67 + BYTE2(v62) - v14 + 7);
        int8x16_t v70 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v67 - v14 - v66));
        a9 = (int16x8_t)vzip1q_s8(v70, (int8x16_t)0);
        int16x8_t v71 = (int16x8_t)vzip1q_s8(vextq_s8(v70, (int8x16_t)0, 1uLL), (int8x16_t)0);
        a8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(a9, (int16x8_t)vzip1q_s8(vextq_s8(v70, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v71, v71)), v47), v48);
        if (v22)
        {
          int16x8_t v72 = (int16x8_t *)(a2 + 2 * *v52);
          goto LABEL_131;
        }
        *(int8x8_t *)a8.i8 = vqmovun_s16(a8);
        goto LABEL_139;
      case 1u:
        int8x16_t v73 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v14 - v62), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v42 - v62), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v41 - v62), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v43 - v62), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v44 - v62), 9uLL)), vorrq_s8(
                  vzip1q_s8((int8x16_t)*((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14)), (int8x16_t)*((unsigned __int8 *)v67 - v62)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v49 - v62), 0xAuLL)));
        int8x16_t v74 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v45 - v62), 8uLL);
        int8x16_t v75 = vorrq_s8(v73, vorrq_s8(vextq_s8((int8x16_t)0, v74, 0xFuLL), v74));
        int16x8_t v76 = (int16x8_t)vzip1q_s8(vextq_s8(v75, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v77 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v73, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v75, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v76, v76)), v47), v48);
        int16x8_t v78 = vdupq_lane_s16(*(int16x4_t *)v77.i8, 0);
        int16x8_t v79 = vdupq_lane_s16(*(int16x4_t *)v77.i8, 1);
        int16x8_t v80 = vdupq_lane_s16(*(int16x4_t *)v77.i8, 2);
        int16x8_t v81 = vdupq_lane_s16(*(int16x4_t *)v77.i8, 3);
        int16x8_t v82 = vdupq_laneq_s16(v77, 4);
        int16x8_t v83 = vdupq_laneq_s16(v77, 5);
        a9 = vdupq_laneq_s16(v77, 6);
        a8 = vdupq_laneq_s16(v77, 7);
        if (!v22) {
          goto LABEL_85;
        }
        goto LABEL_92;
      case 2u:
        if ((_BYTE)v62)
        {
          if (BYTE1(v62))
          {
            a8.i64[0] = *(void *)((char *)v67 - v14);
            a8.i16[4] = *((unsigned __int8 *)v67 + BYTE2(v62) - v14 + 7);
            int8x16_t v85 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v67 - v14 - v66));
            int16x8_t v86 = (int16x8_t)vzip1q_s8(vextq_s8(v85, (int8x16_t)0, 1uLL), (int8x16_t)0);
            uint16x8_t v87 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v85, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v85, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v86, v86)), v47);
            int8x16_t v88 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v14 - 1), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v42 - 1), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v41 - 1), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v43 - 1), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v44 - 1), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v67 - v66 * v14 - 1), (int8x16_t)*((unsigned __int8 *)v67 - 1)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v49 - 1), 0xAuLL)));
            int8x16_t v89 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v45 - 1), 8uLL);
            int8x16_t v90 = vorrq_s8(v88, vorrq_s8(vextq_s8((int8x16_t)0, v89, 0xFuLL), v89));
            int16x8_t v91 = (int16x8_t)vzip1q_s8(vextq_s8(v90, (int8x16_t)0, 1uLL), (int8x16_t)0);
            a9 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v88, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v90, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v91, v91)), v47), v48);
            uint64x2_t v92 = vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16(v87, v48)), a9))));
            unsigned int v93 = ((v92.u16[4] + v92.u16[0] + 8) >> 4 << 8) | ((v92.u16[4] + v92.u16[0] + 8) >> 4);
            goto LABEL_128;
          }
          int8x16_t v219 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v14 - 1), 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v42 - 1), 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v41 - 1), 0xCuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v43 - 1), 0xBuLL)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v44 - 1), 9uLL)), vorrq_s8(vzip1q_s8((int8x16_t)*((unsigned __int8 *)v67 - v66 * v14 - 1), (int8x16_t)*((unsigned __int8 *)v67 - 1)), vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v49 - 1), 0xAuLL)));
          int8x16_t v220 = vextq_s8((int8x16_t)0, (int8x16_t)*((unsigned __int8 *)v67 + v45 - 1), 8uLL);
          int8x16_t v221 = vorrq_s8(v219, vorrq_s8(vextq_s8((int8x16_t)0, v220, 0xFuLL), v220));
          int16x8_t v222 = (int16x8_t)vzip1q_s8(vextq_s8(v221, (int8x16_t)0, 1uLL), (int8x16_t)0);
          uint16x8_t v163 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v219, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v221, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v222, v222)), v47);
        }
        else
        {
          a8 = (int16x8_t)xmmword_221A36A20;
          if (!BYTE1(v62)) {
            goto LABEL_129;
          }
          a8.i64[0] = *(void *)((char *)v67 - v14);
          int16x8_t v161 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
          a8.i16[4] = *((unsigned __int8 *)v67 + BYTE2(v62) - v14 + 7);
          int16x8_t v162 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v161, 0xEuLL);
          v162.i16[0] = *((unsigned __int8 *)v67 - v14 - v66);
          uint16x8_t v163 = (uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL), (int8x16_t)0), vaddq_s16(v161, v161)), vaddq_s16(v162, v47));
        }
        int16x8_t v223 = (int16x8_t)vshlq_u16(v163, v48);
        a9 = (int16x8_t)vqmovun_high_s16(vqmovun_s16(v223), v223);
        unsigned int v224 = vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)a9))).u16[0] + 4;
        unsigned int v93 = (v224 >> 3 << 8) | (v224 >> 3);
LABEL_128:
        a8 = (int16x8_t)vzip1q_s32((int32x4_t)(v93 | (v93 << 16)), (int32x4_t)(v93 | (v93 << 16)));
LABEL_129:
        if (!v22)
        {
LABEL_139:
          *int v67 = a8.i64[0];
          *(void *)((char *)v67 + v14) = a8.i64[0];
          *(void *)((char *)v67 + v42) = a8.i64[0];
          *(void *)((char *)v67 + v41) = a8.i64[0];
          *(void *)((char *)v67 + v43) = a8.i64[0];
          *(void *)((char *)v67 + v49) = a8.i64[0];
          *(void *)((char *)v67 + v44) = a8.i64[0];
          goto LABEL_135;
        }
        int16x8_t v72 = (int16x8_t *)(a2 + 2 * *v52);
        a8 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
LABEL_131:
        *int v67 = vqmovun_s16(vaddq_s16(*v72, a8));
        *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(vaddq_s16(v72[2], a8));
        *(int8x8_t *)((char *)v67 + v42) = vqmovun_s16(vaddq_s16(v72[4], a8));
        *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(vaddq_s16(v72[6], a8));
        *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(vaddq_s16(v72[8], a8));
        *(int8x8_t *)((char *)v67 + v49) = vqmovun_s16(vaddq_s16(v72[10], a8));
        int16x8_t v160 = vaddq_s16(v72[12], a8);
        goto LABEL_132;
      case 3u:
        a9.i64[0] = *(void *)((char *)v67 - BYTE1(v62) * v14);
        int8x16_t v94 = (char *)v67 - v14;
        if (BYTE2(v62))
        {
          a8.i64[0] = *((void *)v94 + 1);
        }
        else
        {
          int8x16_t v164 = vextq_s8((int8x16_t)a9, (int8x16_t)0, 7uLL);
          int16x8_t v165 = (int16x8_t)vzip1q_s8(v164, v164);
          int32x4_t v166 = (int32x4_t)vzip1q_s16(v165, v165);
          a8 = (int16x8_t)vzip1q_s32(v166, v166);
        }
        int8x16_t v167 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a9, 0xFuLL), (int8x16_t)v94[-v66]);
        int8x16_t v168 = vorrq_s8(v167, vextq_s8((int8x16_t)0, (int8x16_t)a8, 7uLL));
        int16x8_t v169 = (int16x8_t)vzip1q_s8(v167, (int8x16_t)0);
        int16x8_t v170 = (int16x8_t)vzip1q_s8(vextq_s8(v167, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v171 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v169, (int16x8_t)vzip1q_s8(vextq_s8(v168, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(vaddq_s16(v170, v170), v47)), v48);
        int16x8_t v172 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
        int16x8_t v173 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v172, v172), (int16x8_t)vzip2q_s8(v168, (int8x16_t)0)), vaddq_s16((int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, vdupq_lane_s8(*(int8x8_t *)a8.i8, 7), 9uLL), vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL)), (int8x16_t)0), v47)), v48);
        int16x8_t v174 = (int16x8_t)vextq_s8((int8x16_t)v171, (int8x16_t)v173, 2uLL);
        int16x8_t v175 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v171, (int16x8_t)vextq_s8((int8x16_t)v171, (int8x16_t)v173, 4uLL)), vaddq_s16(v174, v174)), v47), v48);
        int16x8_t v176 = (int16x8_t)vextq_s8((int8x16_t)v173, (int8x16_t)0, 2uLL);
        int8x16_t v177 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v173, (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v173, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36A10)), vaddq_s16(vaddq_s16(v176, v176), v47)), v48);
        int16x8_t v178 = (int16x8_t)vextq_s8((int8x16_t)v175, v177, 2uLL);
        int16x8_t v80 = (int16x8_t)vextq_s8((int8x16_t)v175, v177, 4uLL);
        int16x8_t v81 = (int16x8_t)vextq_s8((int8x16_t)v175, v177, 6uLL);
        int16x8_t v82 = (int16x8_t)vextq_s8((int8x16_t)v175, v177, 8uLL);
        int16x8_t v83 = (int16x8_t)vextq_s8((int8x16_t)v175, v177, 0xAuLL);
        a9 = (int16x8_t)vextq_s8((int8x16_t)v175, v177, 0xCuLL);
        a8 = (int16x8_t)vextq_s8((int8x16_t)v175, v177, 0xEuLL);
        if (v22)
        {
          int16x8_t v72 = (int16x8_t *)(a2 + 2 * *v52);
          *int v67 = vqmovun_s16(vaddq_s16(*v72, v175));
          int16x8_t v107 = vaddq_s16(v72[2], v178);
          goto LABEL_107;
        }
        *int v67 = vqmovun_s16(v175);
        int8x8_t v84 = vqmovun_s16(v178);
        goto LABEL_115;
      case 4u:
        a8.i64[0] = *(void *)((char *)v67 - BYTE1(v62) * v14);
        a8.i16[4] = *((unsigned __int8 *)v67 + BYTE2(v62) - v14 + 7);
        int8x16_t v95 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v67 - v14 - v66));
        int16x8_t v96 = (int16x8_t)vzip1q_s8(vextq_s8(v95, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v97 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v95, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v95, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v96, v96)), v47), v48);
        int16x8_t v98 = (unsigned __int8 *)v67 - v62;
        int8x16_t v99 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v98[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v98[v42], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v98[v41], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14)), (int8x16_t)*v98)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v98[v43], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v98[v49], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v98[v44], 9uLL)));
        int8x16_t v100 = vextq_s8((int8x16_t)0, (int8x16_t)v98[v45], 8uLL);
        int8x16_t v101 = vorrq_s8(v99, vorrq_s8(vextq_s8((int8x16_t)0, v100, 0xFuLL), v100));
        int16x8_t v102 = (int16x8_t)vzip1q_s8(vextq_s8(v101, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v103 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v99, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v101, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v102, v102)), v47), v48);
        int16x8_t v104 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v97, 0xEuLL);
        v104.i16[0] = (*v98
                     + 2 * *((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14))
                     + *(void *)((char *)v67 - v68 * v14)
                     + 2) >> 2;
        int16x8_t v105 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v103, 0xEuLL);
        v105.i16[0] = v104.i16[0];
        int16x8_t v78 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v97, v97), (int16x8_t)vextq_s8((int8x16_t)v97, (int8x16_t)0, 2uLL)), v47), v104), v48), 0xEuLL);
        v78.i16[0] = (2
                    * ((*v98
                      + 2 * *((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14))
                      + *(void *)((char *)v67 - v68 * v14)
                      + 2) >> 2)
                    + v97.u16[0]
                    + v103.u16[0]
                    + 2) >> 2;
        int8x16_t v106 = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v103, v103), (int16x8_t)vextq_s8((int8x16_t)v103, (int8x16_t)0, 2uLL)), v47), v105), v48), (int8x16_t)xmmword_221A369A0), (int8x16_t)xmmword_221A369B0), (int8x16_t)xmmword_221A369C0);
        int16x8_t v79 = (int16x8_t)vextq_s8(v106, (int8x16_t)v78, 0xEuLL);
        int16x8_t v80 = (int16x8_t)vextq_s8(v106, (int8x16_t)v78, 0xCuLL);
        int16x8_t v81 = (int16x8_t)vextq_s8(v106, (int8x16_t)v78, 0xAuLL);
        int16x8_t v82 = (int16x8_t)vextq_s8(v106, (int8x16_t)v78, 8uLL);
        int16x8_t v83 = (int16x8_t)vextq_s8(v106, (int8x16_t)v78, 6uLL);
        a9 = (int16x8_t)vextq_s8(v106, (int8x16_t)v78, 4uLL);
        a8 = (int16x8_t)vextq_s8(v106, (int8x16_t)v78, 2uLL);
        if (v22)
        {
LABEL_92:
          int16x8_t v72 = (int16x8_t *)(a2 + 2 * *v52);
          *int v67 = vqmovun_s16(vaddq_s16(*v72, v78));
          int16x8_t v107 = vaddq_s16(v72[2], v79);
LABEL_107:
          *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(v107);
          *(int8x8_t *)((char *)v67 + v42) = vqmovun_s16(vaddq_s16(v72[4], v80));
          *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(vaddq_s16(v72[6], v81));
          *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(vaddq_s16(v72[8], v82));
          *(int8x8_t *)((char *)v67 + v49) = vqmovun_s16(vaddq_s16(v72[10], v83));
LABEL_124:
          int16x8_t v160 = vaddq_s16(v72[12], a9);
          goto LABEL_132;
        }
LABEL_85:
        *int v67 = vqmovun_s16(v78);
        int8x8_t v84 = vqmovun_s16(v79);
LABEL_115:
        *(int8x8_t *)((char *)v67 + v14) = v84;
        *(int8x8_t *)((char *)v67 + v42) = vqmovun_s16(v80);
        *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(v81);
        *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(v82);
        *(int8x8_t *)((char *)v67 + v49) = vqmovun_s16(v83);
        goto LABEL_125;
      case 5u:
        a8.i64[0] = *(void *)((char *)v67 - BYTE1(v62) * v14);
        a8.i16[4] = *((unsigned __int8 *)v67 + BYTE2(v62) - v14 + 7);
        int8x16_t v108 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v67 - v14 - v66));
        int16x8_t v109 = (int16x8_t)vzip1q_s8(vextq_s8(v108, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v110 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v108, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v108, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v109, v109)), v47), v48);
        int16x8_t v111 = (unsigned __int8 *)v67 - v62;
        int8x16_t v112 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v111[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v111[v42], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v111[v41], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14)), (int8x16_t)*v111)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v111[v43], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v111[v49], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v111[v44], 9uLL)));
        int8x16_t v113 = vextq_s8((int8x16_t)0, (int8x16_t)v111[v45], 8uLL);
        int8x16_t v114 = vorrq_s8(v112, vorrq_s8(vextq_s8((int8x16_t)0, v113, 0xFuLL), v113));
        int16x8_t v115 = (int16x8_t)vzip1q_s8(vextq_s8(v114, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v116 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v112, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v114, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v115, v115)), v47), v48);
        int16x8_t v117 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v110, 0xEuLL);
        v117.i16[0] = (*v111
                     + 2 * *((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14))
                     + *(void *)((char *)v67 - v68 * v14)
                     + 2) >> 2;
        int16x8_t v118 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v117, vaddq_s16(v110, (int16x8_t)vshlq_u16((uint16x8_t)v47, v50))), v50);
        int16x8_t v119 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v116, 0xEuLL);
        v119.i16[0] = v117.i16[0];
        unsigned int v120 = (2
              * ((*v111
                + 2 * *((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14))
                + *(void *)((char *)v67 - v68 * v14)
                + 2) >> 2)
              + v110.u16[0]
              + v116.u16[0]
              + 2) >> 2;
        a9 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v110, v110), (int16x8_t)vextq_s8((int8x16_t)v110, (int8x16_t)0, 2uLL)), v47), v117), v48), 0xEuLL);
        a9.i16[0] = v120;
        int16x8_t v121 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v116, v116), (int16x8_t)vextq_s8((int8x16_t)v116, (int8x16_t)0, 2uLL)), v47), v119), v48), (int8x16_t)xmmword_221A369A0), (int8x16_t)xmmword_221A369B0), (int8x16_t)xmmword_221A369C0);
        int16x8_t v122 = (int16x8_t)vextq_s8((int8x16_t)v121, (int8x16_t)v118, 0xEuLL);
        int8x16_t v123 = (int8x16_t)vdupq_laneq_s16(v121, 6);
        if (v22)
        {
          int16x8_t v72 = (int16x8_t *)(a2 + 2 * *v52);
          *int v67 = vqmovun_s16(vaddq_s16(*v72, v118));
          *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(vaddq_s16(v72[2], a9));
          *(int8x8_t *)((char *)v67 + v42) = vqmovun_s16(vaddq_s16(v72[4], v122));
          *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(vaddq_s16(v72[6], (int16x8_t)vextq_s8(v123, (int8x16_t)a9, 0xEuLL)));
          int8x16_t v124 = vqtbl1q_s8((int8x16_t)v121, (int8x16_t)xmmword_221A369D0);
          *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(vaddq_s16(v72[8], (int16x8_t)vextq_s8(v124, (int8x16_t)v118, 0xCuLL)));
          int8x16_t v125 = vqtbl1q_s8((int8x16_t)v121, (int8x16_t)xmmword_221A369E0);
          *(int8x8_t *)((char *)v67 + v49) = vqmovun_s16(vaddq_s16(v72[10], (int16x8_t)vextq_s8(v125, (int8x16_t)a9, 0xCuLL)));
          *(int8x8_t *)((char *)v67 + v44) = vqmovun_s16(vaddq_s16(v72[12], (int16x8_t)vextq_s8(vqtbl1q_s8(v124, (int8x16_t)xmmword_221A369F0), (int8x16_t)v118, 0xAuLL)));
          a8 = (int16x8_t)vextq_s8(vqtbl1q_s8(vqtbl1q_s8(v125, (int8x16_t)xmmword_221A369F0), (int8x16_t)xmmword_221A36A00), (int8x16_t)a9, 0xAuLL);
          goto LABEL_133;
        }
        *int v67 = vqmovun_s16(v118);
        *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(a9);
        *(int8x8_t *)((char *)v67 + v42) = vqmovun_s16(v122);
        *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16((int16x8_t)vextq_s8(v123, (int8x16_t)a9, 0xEuLL));
        int8x16_t v179 = vqtbl1q_s8((int8x16_t)v121, (int8x16_t)xmmword_221A369D0);
        *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16((int16x8_t)vextq_s8(v179, (int8x16_t)v118, 0xCuLL));
        int8x16_t v180 = vqtbl1q_s8((int8x16_t)v121, (int8x16_t)xmmword_221A369E0);
        *(int8x8_t *)((char *)v67 + v49) = vqmovun_s16((int16x8_t)vextq_s8(v180, (int8x16_t)a9, 0xCuLL));
        *(int8x8_t *)((char *)v67 + v44) = vqmovun_s16((int16x8_t)vextq_s8(vqtbl1q_s8(v179, (int8x16_t)xmmword_221A369F0), (int8x16_t)v118, 0xAuLL));
        a8 = (int16x8_t)vextq_s8(vqtbl1q_s8(vqtbl1q_s8(v180, (int8x16_t)xmmword_221A369F0), (int8x16_t)xmmword_221A36A00), (int8x16_t)a9, 0xAuLL);
        break;
      case 6u:
        a8.i64[0] = *(void *)((char *)v67 - BYTE1(v62) * v14);
        a8.i16[4] = *((unsigned __int8 *)v67 + BYTE2(v62) - v14 + 7);
        int8x16_t v126 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xFuLL), (int8x16_t)*((unsigned __int8 *)v67 - v14 - v66));
        int16x8_t v127 = (int16x8_t)vzip1q_s8(vextq_s8(v126, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v128 = (unsigned __int8 *)v67 - v62;
        int16x8_t v129 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v126, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v126, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v127, v127)), v47), v48);
        int8x16_t v130 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v128[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v128[v42], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v128[v41], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14)), (int8x16_t)*v128)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v128[v43], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v128[v49], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v128[v44], 9uLL)));
        int8x16_t v131 = vextq_s8((int8x16_t)0, (int8x16_t)v128[v45], 8uLL);
        int8x16_t v132 = vorrq_s8(v130, vorrq_s8(vextq_s8((int8x16_t)0, v131, 0xFuLL), v131));
        int16x8_t v133 = (int16x8_t)vzip1q_s8(vextq_s8(v132, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v134 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v130, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v132, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v133, v133)), v47), v48);
        int16x8_t v135 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v134, 0xEuLL);
        v135.i16[0] = (*v128
                     + 2 * *((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14))
                     + *(void *)((char *)v67 - v68 * v14)
                     + 2) >> 2;
        int8x16_t v136 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vshlq_u16((uint16x8_t)v47, v50), v134), v135), v50);
        int8x16_t v137 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v134, v134), (int16x8_t)vextq_s8((int8x16_t)v134, (int8x16_t)0, 2uLL)), v47), v135), v48);
        int16x8_t v138 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v129, 0xEuLL);
        v138.i16[0] = (*v128
                     + 2 * *((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14))
                     + *(void *)((char *)v67 - v68 * v14)
                     + 2) >> 2;
        int8x16_t v139 = vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v129, v129), (int16x8_t)vextq_s8((int8x16_t)v129, (int8x16_t)0, 2uLL)), v47), v138), v48), 0xEuLL);
        v139.i16[0] = (2
                     * ((*v128
                       + 2 * *((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14))
                       + *(void *)((char *)v67 - v68 * v14)
                       + 2) >> 2)
                     + v129.u16[0]
                     + v134.u16[0]
                     + 2) >> 2;
        int16x8_t v140 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v136, (int8x16_t)xmmword_221A369A0), (int8x16_t)xmmword_221A369B0), (int8x16_t)xmmword_221A369C0);
        int16x8_t v141 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v137, (int8x16_t)xmmword_221A369A0), (int8x16_t)xmmword_221A369B0), (int8x16_t)xmmword_221A369C0);
        int16x8_t v142 = (int16x8_t)vextq_s8((int8x16_t)v140, v139, 0xEuLL);
        int8x16_t v143 = (int8x16_t)vzip2q_s16(v141, v140);
        a9 = (int16x8_t)vdupq_lane_s64(v140.i64[0], 0);
        if (v22)
        {
          int16x8_t v72 = (int16x8_t *)(a2 + 2 * *v52);
          *int v67 = vqmovun_s16(vaddq_s16(*v72, v142));
          *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(vaddq_s16(v72[2], (int16x8_t)vextq_s8(v143, v139, 0xAuLL)));
          *(int8x8_t *)((char *)v67 + v42) = vqmovun_s16(vaddq_s16(v72[4], (int16x8_t)vextq_s8(v143, v139, 6uLL)));
          *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(vaddq_s16(v72[6], (int16x8_t)vextq_s8(v143, v139, 2uLL)));
          *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(vaddq_s16(v72[8], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v140, 0xEuLL), v141)));
          *(int8x8_t *)((char *)v67 + v49) = vqmovun_s16(vaddq_s16(v72[10], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v140, 0xCuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v141, 0xEuLL))));
          *(int8x8_t *)((char *)v67 + v44) = vqmovun_s16(vaddq_s16(v72[12], vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v140, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v141, 0xCuLL))));
          a8 = vzip2q_s16(a9, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v141, 0xAuLL));
          goto LABEL_133;
        }
        *int v67 = vqmovun_s16(v142);
        *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16((int16x8_t)vextq_s8(v143, v139, 0xAuLL));
        *(int8x8_t *)((char *)v67 + v42) = vqmovun_s16((int16x8_t)vextq_s8(v143, v139, 6uLL));
        *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16((int16x8_t)vextq_s8(v143, v139, 2uLL));
        *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v140, 0xEuLL), v141));
        *(int8x8_t *)((char *)v67 + v49) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v140, 0xCuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v141, 0xEuLL)));
        *(int8x8_t *)((char *)v67 + v44) = vqmovun_s16(vzip2q_s16((int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v140, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v141, 0xCuLL)));
        a8 = vzip2q_s16(a9, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v141, 0xAuLL));
        break;
      case 7u:
        a9.i64[0] = *(void *)((char *)v67 - BYTE1(v62) * v14);
        int16x8_t v144 = (char *)v67 - v14;
        if (v69)
        {
          a8.i64[0] = *((void *)v144 + 1);
        }
        else
        {
          int8x16_t v181 = vextq_s8((int8x16_t)a9, (int8x16_t)0, 7uLL);
          int16x8_t v182 = (int16x8_t)vzip1q_s8(v181, v181);
          int32x4_t v183 = (int32x4_t)vzip1q_s16(v182, v182);
          a8 = (int16x8_t)vzip1q_s32(v183, v183);
        }
        int16x8_t v72 = (int16x8_t *)(a2 + 2 * *v52);
        int8x16_t v184 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)a9, 0xFuLL), (int8x16_t)v144[-v66]);
        int8x16_t v185 = vorrq_s8(v184, vextq_s8((int8x16_t)0, (int8x16_t)a8, 7uLL));
        int16x8_t v186 = (int16x8_t)vzip1q_s8(v184, (int8x16_t)0);
        int16x8_t v187 = (int16x8_t)vzip1q_s8(vextq_s8(v184, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v188 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v186, (int16x8_t)vzip1q_s8(vextq_s8(v185, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(vaddq_s16(v187, v187), v47)), v48);
        int16x8_t v189 = (int16x8_t)vzip1q_s8((int8x16_t)a8, (int8x16_t)0);
        int16x8_t v190 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v189, v189), (int16x8_t)vzip2q_s8(v185, (int8x16_t)0)), vaddq_s16((int16x8_t)vzip1q_s8(vorrq_s8(vextq_s8((int8x16_t)0, vdupq_lane_s8(*(int8x8_t *)a8.i8, 7), 9uLL), vextq_s8((int8x16_t)a8, (int8x16_t)0, 1uLL)), (int8x16_t)0), v47)), v48);
        int8x8_t v191 = vqmovun_s16(v188);
        int8x8_t v192 = vqmovun_s16(v190);
        uint8x8_t v193 = (uint8x8_t)vext_s8(v191, v192, 1uLL);
        uint8x8_t v194 = (uint8x8_t)vext_s8(v191, v192, 2uLL);
        int16x8_t v195 = (int16x8_t)vaddl_u8(v193, (uint8x8_t)v191);
        uint16x8_t v196 = vaddw_u8((uint16x8_t)v47, v194);
        int16x8_t v197 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16((int16x8_t)vaddw_u8(v196, v193), v195), v48);
        int16x8_t v198 = (int16x8_t)vshlq_u16((uint16x8_t)v47, v50);
        int16x8_t v199 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v195, v198), v50);
        if (v22)
        {
          *int v67 = vqmovun_s16(vaddq_s16(*v72, v199));
          int16x8_t v197 = vaddq_s16(v72[2], v197);
        }
        else
        {
          *int v67 = vqmovun_s16(v199);
        }
        int16x8_t v205 = (int16x8_t)vmovl_u8(v193);
        int16x8_t v206 = (int16x8_t)vmovl_u8(v194);
        *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(v197);
        uint8x8_t v207 = (uint8x8_t)vext_s8(v191, v192, 3uLL);
        int16x8_t v208 = vaddq_s16(v205, v206);
        int16x8_t v209 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16((int16x8_t)vaddw_u8(v196, v207), v208), v48);
        int16x8_t v210 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v208, v198), v50);
        if (v22)
        {
          *(int8x8_t *)((char *)v67 + v42) = vqmovun_s16(vaddq_s16(v72[4], v210));
          int16x8_t v209 = vaddq_s16(v72[6], v209);
        }
        else
        {
          *(int8x8_t *)((char *)v67 + v42) = vqmovun_s16(v210);
        }
        int16x8_t v211 = (int16x8_t)vmovl_u8(v207);
        *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(v209);
        uint8x8_t v212 = (uint8x8_t)vext_s8(v191, v192, 4uLL);
        int16x8_t v213 = vaddq_s16(v206, v211);
        int16x8_t v214 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vaddw_u8((uint16x8_t)v211, v212), v213), v47), v48);
        int16x8_t v215 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v213, v198), v50);
        if (v22)
        {
          *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(vaddq_s16(v72[8], v215));
          int16x8_t v214 = vaddq_s16(v72[10], v214);
        }
        else
        {
          *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(v215);
        }
        int16x8_t v216 = (int16x8_t)vmovl_u8(v212);
        *(int8x8_t *)((char *)v67 + v49) = vqmovun_s16(v214);
        uint8x8_t v217 = (uint8x8_t)vext_s8(v191, v192, 5uLL);
        int16x8_t v218 = vaddq_s16(v211, v216);
        a8 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vaddw_u8((uint16x8_t)v216, v217), v218), v47), v48);
        a9 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v218, v198), v50);
        if (v22) {
          goto LABEL_124;
        }
        goto LABEL_125;
      case 8u:
        int16x8_t v145 = (unsigned __int8 *)v67 - v62;
        int8x16_t v146 = vorrq_s8(vorrq_s8(vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v145[v14], 0xEuLL), vextq_s8((int8x16_t)0, (int8x16_t)v145[v42], 0xDuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v145[v41], 0xCuLL)), vzip1q_s8((int8x16_t)*((unsigned __int8 *)v67 + ~(unint64_t)(v66 * v14)), (int8x16_t)*v145)), vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v145[v43], 0xBuLL), vextq_s8((int8x16_t)0, (int8x16_t)v145[v49], 0xAuLL)), vextq_s8((int8x16_t)0, (int8x16_t)v145[v44], 9uLL)));
        int8x16_t v147 = vextq_s8((int8x16_t)0, (int8x16_t)v145[v45], 8uLL);
        int8x16_t v148 = vorrq_s8(v146, vorrq_s8(vextq_s8((int8x16_t)0, v147, 0xFuLL), v147));
        int16x8_t v149 = (int16x8_t)vzip1q_s8(vextq_s8(v148, (int8x16_t)0, 1uLL), (int8x16_t)0);
        int16x8_t v150 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vzip1q_s8(v146, (int8x16_t)0), (int16x8_t)vzip1q_s8(vextq_s8(v148, (int8x16_t)0, 2uLL), (int8x16_t)0)), vaddq_s16(v149, v149)), v47), v48);
        int16x8_t v151 = (int16x8_t)vextq_s8((int8x16_t)v150, (int8x16_t)0, 2uLL);
        int8x16_t v152 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v150, (int16x8_t)vextq_s8((int8x16_t)v150, (int8x16_t)0, 4uLL)), vaddq_s16(v151, v151)), v47), v48);
        v152.i16[6] = (3 * v150.u16[7] + v150.u16[6] + 2) >> 2;
        int16x8_t v153 = (int16x8_t)vextq_s8(vextq_s8((int8x16_t)0, (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16((int16x8_t)vshlq_u16((uint16x8_t)v47, v50), v150), v151), v50), 0xEuLL), (int8x16_t)0, 2uLL);
        int16x8_t v154 = (int16x8_t)vextq_s8(vextq_s8((int8x16_t)0, v152, 0xEuLL), (int8x16_t)0, 2uLL);
        a8 = (int16x8_t)vdupq_n_s32(v150.u16[7] | (v150.u16[7] << 16));
        if (v22)
        {
          int16x8_t v72 = (int16x8_t *)(a2 + 2 * *v52);
          *int v67 = vqmovun_s16(vaddq_s16(*v72, vzip1q_s16(v153, v154)));
          int16x8_t v155 = (int16x8_t)vextq_s8((int8x16_t)v154, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(vaddq_s16(v72[2], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v153, (int8x16_t)0, 2uLL), v155)));
          int16x8_t v156 = (int16x8_t)vextq_s8((int8x16_t)v155, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v42) = vqmovun_s16(vaddq_s16(v72[4], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v153, (int8x16_t)0, 4uLL), v156)));
          int16x8_t v157 = (int16x8_t)vextq_s8((int8x16_t)v156, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(vaddq_s16(v72[6], vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v153, (int8x16_t)0, 6uLL), v157)));
          int16x8_t v158 = (int16x8_t)vextq_s8((int8x16_t)v157, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16(vaddq_s16(v72[8], (int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v153, 1), v158), vextq_s8((int8x16_t)0, (int8x16_t)a8, 4uLL))));
          int16x8_t v159 = (int16x8_t)vextq_s8((int8x16_t)v158, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v49) = vqmovun_s16(vaddq_s16(v72[10], (int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v153, (int8x16_t)0, 0xAuLL), v159), vextq_s8((int8x16_t)0, (int8x16_t)a8, 8uLL))));
          v231.val[1] = vextq_s8((int8x16_t)v153, (int8x16_t)0, 0xCuLL);
          v231.val[0] = vextq_s8((int8x16_t)v159, (int8x16_t)0, 2uLL);
          int16x8_t v160 = vaddq_s16(v72[12], (int16x8_t)vorrq_s8(vqtbl2q_s8(v231, (int8x16_t)xmmword_221A36990), vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xCuLL)));
LABEL_132:
          *(int8x8_t *)((char *)v67 + v44) = vqmovun_s16(v160);
LABEL_133:
          a9 = v72[14];
          a8 = vaddq_s16(a9, a8);
        }
        else
        {
          *int v67 = vqmovun_s16(vzip1q_s16(v153, v154));
          int16x8_t v200 = (int16x8_t)vextq_s8((int8x16_t)v154, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v14) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v153, (int8x16_t)0, 2uLL), v200));
          int16x8_t v201 = (int16x8_t)vextq_s8((int8x16_t)v200, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v42) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v153, (int8x16_t)0, 4uLL), v201));
          int16x8_t v202 = (int16x8_t)vextq_s8((int8x16_t)v201, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v41) = vqmovun_s16(vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v153, (int8x16_t)0, 6uLL), v202));
          int16x8_t v203 = (int16x8_t)vextq_s8((int8x16_t)v202, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v43) = vqmovun_s16((int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vdupq_laneq_s64((int64x2_t)v153, 1), v203), vextq_s8((int8x16_t)0, (int8x16_t)a8, 4uLL)));
          int16x8_t v204 = (int16x8_t)vextq_s8((int8x16_t)v203, (int8x16_t)0, 2uLL);
          *(int8x8_t *)((char *)v67 + v49) = vqmovun_s16((int16x8_t)vorrq_s8((int8x16_t)vzip1q_s16((int16x8_t)vextq_s8((int8x16_t)v153, (int8x16_t)0, 0xAuLL), v204), vextq_s8((int8x16_t)0, (int8x16_t)a8, 8uLL)));
          v232.val[1] = vextq_s8((int8x16_t)v153, (int8x16_t)0, 0xCuLL);
          v232.val[0] = vextq_s8((int8x16_t)v204, (int8x16_t)0, 2uLL);
          a9 = (int16x8_t)vorrq_s8(vqtbl2q_s8(v232, (int8x16_t)xmmword_221A36990), vextq_s8((int8x16_t)0, (int8x16_t)a8, 0xCuLL));
LABEL_125:
          *(int8x8_t *)((char *)v67 + v44) = vqmovun_s16(a9);
        }
        break;
      default:
        goto LABEL_136;
    }
    *(int8x8_t *)a8.i8 = vqmovun_s16(a8);
LABEL_135:
    *(void *)((char *)v67 + v45) = a8.i64[0];
LABEL_136:
    ++v52;
    ++v46;
    BOOL v225 = v40 >= 0xC;
    v40 += 4;
  }
  while (!v225);
  return result;
}

int *sub_2219D6C20(int *result, uint64_t a2, int32x4_t a3)
{
  *(void *)((char *)&v196[1] + 5) = *MEMORY[0x263EF8340];
  uint64_t v5 = *((void *)result + 27);
  int v7 = *result;
  int v6 = result[1];
  if (*((unsigned char *)result + 29) && *(unsigned char *)(v5 + 1363))
  {
    uint64_t v134 = v5 + 504;
    uint64_t v8 = *(unsigned int *)(v5 + 168);
    unsigned int v136 = 2 * v8;
    int v9 = *(unsigned __int8 *)(v5 + 32);
    uint64_t v10 = *(void *)(v5 + 64) + (16 * v7);
    if (*((unsigned char *)result + 30))
    {
      if (v9) {
        char v11 = 5;
      }
      else {
        char v11 = 4;
      }
      uint64_t v12 = ((v6 << v11) * v8);
      v10 += v8;
      goto LABEL_16;
    }
    int v13 = v6 * v8;
    if (v9)
    {
      uint64_t v12 = (32 * v13);
      goto LABEL_16;
    }
LABEL_15:
    uint64_t v12 = (16 * v13);
    goto LABEL_16;
  }
  uint64_t v134 = v5 + 440;
  unsigned int v136 = *(_DWORD *)(v5 + 168);
  if (*((unsigned char *)result + 31) != 1)
  {
    if (*((unsigned char *)result + 31))
    {
      uint64_t v132 = *(void *)(v5 + 64)
           + 32 * v136 * (result[4] / (2 * result[5]))
           + ((8 * (result[4] % (2 * result[5]))) & 0xFFFFFFF0)
           + ((result[4] << 31 >> 31) & v136);
      uint64_t v134 = v5 + 504;
      v136 *= 2;
      goto LABEL_17;
    }
    uint64_t v10 = *(void *)(v5 + 64) + (16 * v7);
    int v13 = v6 * v136;
    goto LABEL_15;
  }
  unsigned int v14 = result[4];
  uint64_t v10 = *(void *)(v5 + 64) + 32 * v136 * (v14 / (2 * result[5])) + ((8 * (v14 % (2 * result[5]))) & 0xFFFFFFF0);
  uint64_t v12 = ((int)(v14 << 31) >> 31) & (16 * v136);
LABEL_16:
  uint64_t v132 = v10 + v12;
LABEL_17:
  int v15 = (unsigned char *)*((void *)result + 21);
  uint64_t v16 = *((void *)result + 22) + 32;
  char v17 = (unsigned __int8 *)*((void *)result + 16);
  uint64_t v18 = (unsigned __int8 *)*((void *)result + 17);
  uint64_t v20 = *((void *)result + 18);
  uint64_t v19 = *((void *)result + 19);
  int32x4_t v166 = 0;
  int8x16_t v167 = 0;
  uint64_t v164 = v16;
  int16x8_t v165 = 0;
  uint64_t v131 = v16;
  if (v17)
  {
    if (v17[64]) {
      uint64_t v21 = v17 + 48;
    }
    else {
      uint64_t v21 = v17 + 32;
    }
    int16x8_t v165 = v21;
    BOOL v22 = 1;
    if (v18) {
      goto LABEL_22;
    }
  }
  else
  {
    BOOL v22 = 0;
    if (v18)
    {
LABEL_22:
      if (v18[64]) {
        uint64_t v23 = v18 + 48;
      }
      else {
        uint64_t v23 = v18 + 32;
      }
      int32x4_t v166 = v23;
      BOOL v24 = 1;
      goto LABEL_28;
    }
  }
  BOOL v24 = 0;
  int32x4_t v166 = 0;
LABEL_28:
  BOOL v25 = v20 != 0;
  BOOL v26 = v19 != 0;
  if (v15)
  {
    if (v15[64]) {
      uint64_t v27 = v15 + 48;
    }
    else {
      uint64_t v27 = v15 + 32;
    }
    int8x16_t v167 = v27;
  }
  else
  {
    int8x16_t v167 = 0;
  }
  uint64_t v129 = *((void *)result + 6);
  if (!*(unsigned char *)(v129 + 4)) {
    goto LABEL_55;
  }
  if (!v17)
  {
    BOOL v22 = 0;
    if (v18) {
      goto LABEL_43;
    }
    goto LABEL_38;
  }
  if (v17[48] != 34)
  {
    BOOL v22 = 1;
    if (v18) {
      goto LABEL_43;
    }
LABEL_38:
    BOOL v24 = 0;
    if (v20) {
      goto LABEL_39;
    }
LABEL_45:
    BOOL v25 = 0;
    if (!v19) {
      goto LABEL_41;
    }
LABEL_46:
    BOOL v26 = *(unsigned char *)(v19 + 48) != 34 || *(unsigned __int8 *)(v19 + 32) != 34;
    goto LABEL_55;
  }
  BOOL v22 = v17[32] != 34;
  if (!v18) {
    goto LABEL_38;
  }
LABEL_43:
  if (v18[48] == 34)
  {
    BOOL v24 = v18[32] != 34;
    if (!v20) {
      goto LABEL_45;
    }
  }
  else
  {
    BOOL v24 = 1;
    if (!v20) {
      goto LABEL_45;
    }
  }
LABEL_39:
  if (*(unsigned char *)(v20 + 48) != 34)
  {
    BOOL v25 = 1;
    if (!v19) {
      goto LABEL_41;
    }
    goto LABEL_46;
  }
  BOOL v25 = *(unsigned __int8 *)(v20 + 32) != 34;
  if (v19) {
    goto LABEL_46;
  }
LABEL_41:
  BOOL v26 = 0;
LABEL_55:
  int v28 = v26 | (2 * v25) | (4 * v24);
  int v29 = v28 | (8 * v22);
  int16x8_t v135 = byte_267F63880;
  int16x8_t v128 = v15;
  if (v17 && (*((unsigned char *)result + 185) & 1) != 0)
  {
    int v30 = *((unsigned __int8 *)result + 31);
    if (v30 != 2 || v17[144])
    {
      int16x8_t v135 = byte_267F63880;
      if (v30 == 1 && v17[144] == 1)
      {
        int32x4_t v31 = (char *)((result[4] & 1) != 0 ? &unk_267F63918 : &unk_267F638E8);
        int16x8_t v135 = v31;
        if (*(unsigned char *)(v129 + 4))
        {
          if (v22 && v15[48] == 34 && v15[32] == 34) {
            int v29 = v28;
          }
        }
      }
    }
    else
    {
      int16x8_t v135 = (char *)&unk_267F638B8;
    }
  }
  uint64_t v32 = 0;
  unint64_t v33 = 0;
  uint64_t v34 = v136;
  uint64_t v139 = 2;
  a3.i32[0] = 2;
  int16x8_t v133 = result;
  int8x16_t v130 = v17;
  do
  {
    unint64_t v137 = v33;
    uint64_t v127 = v32;
    uint64_t v35 = (void *)(a2 + word_221A37290[v32]);
    *(void *)&long long v36 = *v35;
    *(void *)&long long v37 = v35[1];
    uint64_t v38 = v35[5];
    *(void *)&long long v39 = v35[8];
    *(void *)&long long v40 = v35[9];
    uint64_t v41 = v35[13];
    *((void *)&v36 + 1) = v35[4];
    *((void *)&v39 + 1) = v35[12];
    v163[0] = v36;
    v163[1] = v39;
    *((void *)&v37 + 1) = v38;
    *((void *)&v40 + 1) = v41;
    v163[2] = v37;
    v163[3] = v40;
    uint64_t v42 = (int16x4_t *)v163;
    unint64_t v43 = v33;
    do
    {
      unint64_t v44 = v135[v43];
      if (!v17)
      {
        unint64_t v46 = 0;
        goto LABEL_78;
      }
      int v45 = *((unsigned __int8 *)result + 31);
      if (v45 == 1 && v17[144] == 1 && v43 >= 8)
      {
        unint64_t v46 = !(v44 & 1) * (unint64_t)*(unsigned __int8 *)(*((void *)result + 6) + 4);
LABEL_78:
        unint64_t v47 = 0;
        uint64_t v48 = !(v44 & 1);
        goto LABEL_79;
      }
      unint64_t v46 = 0;
      if (v45 != 2 || v17[144] || v43 < 8) {
        goto LABEL_78;
      }
      unint64_t v46 = 0;
      uint64_t v48 = !(v44 & 1) | (2 * !(v44 & 1));
      unint64_t v47 = !(v44 & 1) * (unint64_t)*(unsigned __int8 *)(*((void *)result + 6) + 4);
LABEL_79:
      unint64_t v49 = v135[v43 + 16];
      uint64_t v50 = *(&v164 + (~(2 * (_BYTE)v49) & 2));
      uint64_t v51 = *(&v164 + v48);
      if (v50) {
        BOOL v52 = v51 == 0;
      }
      else {
        BOOL v52 = 1;
      }
      if (v52)
      {
        int v53 = 0;
LABEL_86:
        unsigned int v56 = 2;
        goto LABEL_87;
      }
      unsigned int v54 = *(unsigned __int8 *)(v51 + ((v44 >> 1) & 0xF));
      int v55 = *(unsigned __int8 *)(v50 + ((v49 >> 1) & 0xF));
      int v53 = (v54 >> 5) & 1;
      if (*(unsigned __int8 *)(*((void *)result + 6) + 4) & ((v55 | v54) >> 5)) {
        goto LABEL_86;
      }
      unsigned int v56 = (((v54 & 0xF) - (v55 & 0xF)) & ((int)((v54 & 0xF) - (v55 & 0xF)) >> 31)) + (v55 & 0xF);
LABEL_87:
      int16x8_t v160 = v42;
      if (v47)
      {
        int v57 = (v29 & 7 | (8 * v53)) ^ 8;
        unsigned int v58 = bswap32(dword_221A36A80[v57 | (16 * v43)]);
        if (v17[48] == 34 && v17[32] == 34) {
          int v59 = v57 & 0xE;
        }
        else {
          int v59 = v57 | 1;
        }
        int v161 = v59;
      }
      else
      {
        unsigned int v58 = bswap32(dword_221A36A80[(v29 + 16 * v43)]);
        if (v46)
        {
          if (v128[48] == 34 && v128[32] == 34) {
            v29 &= 0xEu;
          }
          else {
            v29 |= 1u;
          }
        }
        int v161 = v29;
      }
      unsigned int v60 = 0;
      char v61 = 0;
      char v62 = 0;
      char v63 = 0;
      unsigned int v64 = *(unsigned __int8 *)(v129 + v43 + 310);
      if (v56 <= v64) {
        ++v64;
      }
      int v162 = v64 & (*(unsigned __int8 *)(v129 + v43 + 290) - 1) | v56 & -*(unsigned __int8 *)(v129 + v43 + 290);
      *(unsigned char *)(v131 + v43) = v162;
      uint64_t v65 = v132 + *(unsigned int *)(v134 + 4 * v43);
      unsigned int v66 = v65 & 0xF;
      int v67 = (char *)(v65 - v58 + 2 * v136);
      unsigned int v68 = *(unsigned __int8 *)(v65 - v58);
      char v69 = *(unsigned char *)(v65 - v58 + v34);
      char v70 = *v67;
      char v71 = v67[v34];
      if (v66 <= 3)
      {
        unsigned int v60 = *(unsigned __int8 *)(v65 - v58);
        char v61 = *(unsigned char *)(v65 - v58 + v34);
        char v62 = v70;
        char v63 = v71;
      }
      if (((v65 >> 2) & 3) - 1 >= 3)
      {
        unsigned int v68 = v60;
        char v69 = v61;
        char v70 = v62;
        char v71 = v63;
      }
      char v154 = v71;
      char v155 = v70;
      unsigned int v72 = v68;
      uint64_t v73 = v65 - (v136 & -BYTE1(v58));
      int v138 = *(unsigned __int8 *)((v73 - v58) & 0xFFFFFFFFFFFFFFF0);
      int v140 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 1);
      int v141 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 2);
      int v142 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 3);
      int v143 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 4);
      int v144 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 5);
      int v74 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 6);
      int v75 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 7);
      int v151 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 8);
      int v150 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 9);
      int v149 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 0xA);
      int v148 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 0xB);
      int v147 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 0xC);
      int v145 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 0xD);
      int v146 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 0xE);
      int v76 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 0xF);
      int16x8_t v77 = (char *)((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
      char v78 = *v77;
      char v79 = v77[1];
      char v80 = v77[2];
      char v81 = v77[3];
      int16x8_t v158 = (_DWORD *)(v132 + *(unsigned int *)(v134 + 4 * v43));
      unint64_t v159 = v43;
      unsigned __int8 v157 = v58;
      char v156 = v69;
      unsigned int v153 = v72;
      if (BYTE2(v58) == 1)
      {
        char v85 = *(unsigned char *)(((v73 + 15) & 0xFFFFFFFFFFFFFFF0) + 4);
        char v84 = *(unsigned char *)(((v73 + 15) & 0xFFFFFFFFFFFFFFF0) + 5);
        char v83 = *(unsigned char *)(((v73 + 15) & 0xFFFFFFFFFFFFFFF0) + 6);
        int v93 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 6);
        char v94 = v77[7];
        switch(v65 & 0xF)
        {
          case 0:
            goto LABEL_145;
          case 1:
            char v94 = v151;
            char v83 = v75;
            char v84 = v93;
            char v81 = v143;
            char v85 = v144;
            char v79 = v141;
            char v80 = v142;
            char v78 = v140;
            int v76 = v138;
            goto LABEL_145;
          case 2:
            char v94 = v150;
            char v83 = v151;
            char v84 = v75;
            char v85 = v93;
            char v80 = v143;
            char v81 = v144;
            char v78 = v141;
            char v79 = v142;
            int v76 = v140;
            goto LABEL_145;
          case 3:
            char v94 = v149;
            char v83 = v150;
            char v84 = v151;
            char v85 = v75;
            char v81 = v93;
            char v79 = v143;
            char v80 = v144;
            int v76 = v141;
            char v78 = v142;
            goto LABEL_145;
          case 4:
            char v94 = v148;
            char v83 = v149;
            char v84 = v150;
            char v85 = v151;
            char v81 = v75;
            char v80 = v93;
            char v78 = v143;
            char v79 = v144;
            int v76 = v142;
            goto LABEL_145;
          case 5:
            char v94 = v147;
            char v83 = v148;
            char v84 = v149;
            char v85 = v150;
            char v81 = v151;
            char v80 = v75;
            char v79 = v93;
            int v76 = v143;
            char v78 = v144;
            goto LABEL_145;
          case 6:
            int v76 = v144;
            char v94 = v145;
            char v83 = v147;
            char v84 = v148;
            char v85 = v149;
            char v81 = v150;
            char v80 = v151;
            char v79 = v75;
            char v78 = v93;
            goto LABEL_145;
          case 7:
            char v83 = v145;
            char v94 = v146;
            char v84 = v147;
            char v85 = v148;
            char v81 = v149;
            char v80 = v150;
            char v79 = v151;
            char v78 = v75;
            int v76 = v93;
            goto LABEL_145;
          case 8:
            char v94 = v76;
            char v84 = v145;
            char v83 = v146;
            char v85 = v147;
            char v81 = v148;
            char v80 = v149;
            char v79 = v150;
            char v78 = v151;
            int v76 = v75;
            goto LABEL_145;
          case 9:
            char v94 = *v77;
            char v83 = v76;
            char v85 = v145;
            char v84 = v146;
            char v81 = v147;
            char v80 = v148;
            char v79 = v149;
            char v78 = v150;
            int v76 = v151;
            goto LABEL_145;
          case 0xALL:
            char v94 = v77[1];
            char v83 = *v77;
            char v84 = v76;
            char v81 = v145;
            char v85 = v146;
            char v80 = v147;
            char v79 = v148;
            char v78 = v149;
            int v76 = v150;
            goto LABEL_145;
          case 0xBLL:
            char v94 = v77[2];
            char v83 = v77[1];
            char v84 = *v77;
            char v85 = v76;
            char v80 = v145;
            char v81 = v146;
            char v79 = v147;
            char v78 = v148;
            int v76 = v149;
            goto LABEL_145;
          case 0xCLL:
            char v94 = v77[3];
            char v83 = v77[2];
            char v84 = v77[1];
            char v85 = *v77;
            char v81 = v76;
            char v79 = v145;
            char v80 = v146;
            char v78 = v147;
            int v76 = v148;
            goto LABEL_145;
          case 0xDLL:
            char v94 = v77[4];
            char v83 = v77[3];
            char v84 = v77[2];
            char v85 = v77[1];
            char v81 = *v77;
            char v80 = v76;
            char v78 = v145;
            char v79 = v146;
            int v76 = v147;
            goto LABEL_145;
          case 0xELL:
            char v94 = v77[5];
            char v83 = v77[4];
            char v84 = v77[3];
            char v85 = v77[2];
            char v81 = v77[1];
            char v80 = *v77;
            char v79 = v76;
            int v76 = v145;
            char v78 = v146;
LABEL_145:
            char v86 = v85;
            char v85 = v84;
            char v84 = v83;
            char v83 = v94;
            char v87 = v81;
            char v88 = v80;
            char v89 = v79;
            LOBYTE(v58) = v78;
            int v90 = v76;
            break;
          default:
            char v86 = v77[3];
            char v87 = v77[2];
            char v88 = v79;
            char v89 = v78;
            LOBYTE(v58) = v76;
            int v90 = v146;
            break;
        }
        int v91 = BYTE1(v58);
        char v92 = v154;
      }
      else
      {
        char v152 = *(unsigned char *)(((v73 + 15) & 0xFFFFFFFFFFFFFFF0) + 1);
        int v82 = *(unsigned __int8 *)(((v73 - v58) & 0xFFFFFFFFFFFFFFF0) + 7);
        char v83 = 0;
        char v84 = 0;
        char v85 = 0;
        char v86 = 0;
        char v87 = 0;
        char v88 = 0;
        char v89 = 0;
        LOBYTE(v58) = 0;
        int v90 = 0;
        int v91 = BYTE1(v58);
        char v92 = v154;
        if (!BYTE2(v58))
        {
          char v88 = *(unsigned char *)(((v73 + 15) & 0xFFFFFFFFFFFFFFF0) + 2);
          switch(v66)
          {
            case 0u:
              goto LABEL_132;
            case 1u:
              char v88 = v142;
              char v81 = v143;
              char v78 = v140;
              char v152 = v141;
              int v76 = v138;
              goto LABEL_132;
            case 2u:
              char v88 = v143;
              char v81 = v144;
              char v78 = v141;
              char v152 = v142;
              int v76 = v140;
              goto LABEL_132;
            case 3u:
              char v81 = v74;
              char v88 = v144;
              char v152 = v143;
              int v76 = v141;
              char v78 = v142;
              goto LABEL_132;
            case 4u:
              char v81 = v82;
              char v88 = v74;
              char v78 = v143;
              char v152 = v144;
              int v76 = v142;
              goto LABEL_132;
            case 5u:
              char v81 = v151;
              char v88 = v82;
              char v152 = v74;
              int v76 = v143;
              char v78 = v144;
              goto LABEL_132;
            case 6u:
              char v81 = v150;
              char v88 = v151;
              char v152 = v82;
              char v78 = v74;
              int v76 = v144;
              goto LABEL_132;
            case 7u:
              char v81 = v149;
              char v88 = v150;
              char v152 = v151;
              char v78 = v82;
              int v76 = v74;
              goto LABEL_132;
            case 8u:
              char v81 = v148;
              char v88 = v149;
              char v78 = v151;
              char v152 = v150;
              int v76 = v82;
              goto LABEL_132;
            case 9u:
              char v81 = v147;
              char v88 = v148;
              char v78 = v150;
              char v152 = v149;
              int v76 = v151;
              goto LABEL_132;
            case 0xAu:
              char v81 = v145;
              char v88 = v147;
              char v152 = v148;
              char v78 = v149;
              int v76 = v150;
              goto LABEL_132;
            case 0xBu:
              char v88 = v145;
              char v81 = v146;
              char v78 = v148;
              char v152 = v147;
              int v76 = v149;
              goto LABEL_132;
            case 0xCu:
              char v81 = v76;
              char v88 = v146;
              char v152 = v145;
              char v78 = v147;
              int v76 = v148;
              goto LABEL_132;
            case 0xDu:
              char v81 = v78;
              char v88 = v76;
              char v78 = v145;
              char v152 = v146;
              int v76 = v147;
              goto LABEL_132;
            case 0xEu:
              char v81 = *(unsigned char *)(((v73 + 15) & 0xFFFFFFFFFFFFFFF0) + 1);
              char v88 = v78;
              char v152 = v76;
              int v76 = v145;
              char v78 = v146;
LABEL_132:
              char v83 = v81;
              char v84 = v81;
              char v85 = v81;
              char v86 = v81;
              char v87 = v81;
              char v89 = v152;
              LOBYTE(v58) = v78;
              int v90 = v76;
              break;
            default:
              char v83 = *(unsigned char *)(((v73 + 15) & 0xFFFFFFFFFFFFFFF0) + 2);
              char v84 = v83;
              char v85 = v83;
              char v86 = v83;
              char v87 = v83;
              char v88 = *(unsigned char *)(((v73 + 15) & 0xFFFFFFFFFFFFFFF0) + 1);
              char v89 = v78;
              LOBYTE(v58) = v76;
              int v90 = v146;
              break;
          }
        }
      }
      uint64_t v95 = 0;
      v195[0] = v92;
      v195[1] = v155;
      v195[2] = v156;
      v196[0] = 0x101010101010101 * v153;
      *(void *)((char *)v196 + 5) = v196[0];
      v193[0] = v90;
      v193[1] = v58;
      v193[2] = v89;
      v193[3] = v88;
      v193[4] = v87;
      v193[5] = v86;
      v193[6] = v85;
      v193[7] = v84;
      v193[8] = v83;
      *(_DWORD *)uint8x8_t v194 = 16843009 * v90;
      *(_DWORD *)&v194[3] = 16843009 * v90;
      long long v176 = *(_OWORD *)((char *)&unk_221A376B0 + (16 * v162) + 96);
      do
      {
        if ((*((unsigned char *)&v176 + v95) & 0x10) != 0) {
          int16x8_t v96 = v193;
        }
        else {
          int16x8_t v96 = v195;
        }
        *(&v177 + v95) = v96[*((unsigned char *)&v176 + v95) & 0xF];
        ++v95;
      }
      while (v95 != 16);
      uint64_t v97 = 0;
      int32x4_t v98 = *(int32x4_t *)((char *)&unk_221A376B0 + ((16 * v157) | (32 * v91)) + 528);
      int32x4_t v174 = v98;
      int v99 = v178;
      int v100 = v178 + v177;
      int v101 = v179;
      int v102 = v180;
      int v103 = v181;
      int v104 = v182;
      int v105 = v182 + v181;
      int v106 = v183;
      int v107 = v184;
      int v108 = v184 + v183;
      unsigned int v109 = v105 + v108 + 2;
      int v110 = v185;
      int v111 = v186 + v185;
      unsigned int v112 = v187 + v188 + v111 + 2;
      int v113 = v190 + v189 + v191 + v192;
      int v114 = v180 + v179;
      int8x8_t v172 = (int8x8_t)_byteswap_uint64(__PAIR64__(v109 >> 2, v112 >> 2));
      unint64_t v173 = bswap32((v113 + 2) >> 2) | 0x8000000000000000;
      v171.i64[0] = _byteswap_uint64(__PAIR64__((v100 + v114 + v109 + 2) >> 3, (v112 + v109) >> 3));
      v171.i64[1] = _byteswap_uint64(__PAIR64__((v113 + 2 + v112) >> 3, (v113 + 514) >> 3));
      do
      {
        if ((v174.i8[v97] & 0x10) != 0) {
          int16x8_t v115 = (int8x8_t *)&v171;
        }
        else {
          int16x8_t v115 = &v172;
        }
        *((unsigned char *)&v176 + v97) = v115->i8[v174.i8[v97] & 0xF];
        ++v97;
      }
      while (v97 != 16);
      uint64_t v116 = 0;
      v98.i32[0] = v162;
      int8x16_t v175 = vbslq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vceqq_s32(v98, a3), 0), (int8x16_t)xmmword_221A36A30, (int8x16_t)xmmword_221A362F0);
      int32x4_t v117 = *(int32x4_t *)((char *)&unk_221A377A0 + (32 * v162));
      long long v170 = *(_OWORD *)((char *)&unk_221A377A0 + ((32 * v162) | 0x10u));
      int32x4_t v171 = v117;
      v118.i32[0] = v105;
      v118.i32[1] = v106 + v104;
      v118.i32[2] = v108;
      v118.i32[3] = v110 + v107;
      v117.i32[0] = v100;
      v117.i32[1] = v101 + v99;
      v117.i64[1] = __PAIR64__(v103 + v102, v114);
      *(uint16x4_t *)v119.i8 = vhadd_u16((uint16x4_t)vmovn_s32(v117), (uint16x4_t)0x1000100010001);
      v119.u64[1] = (unint64_t)vhadd_u16((uint16x4_t)vmovn_s32(v118), (uint16x4_t)0x1000100010001);
      int16x8_t v120 = (int16x8_t)vrev16q_s8((int8x16_t)v119);
      int16x8_t v169 = v120;
      v168[0] = __rev16((v101 + v99 + v100 + 2) >> 2);
      v168[1] = __rev16((v114 + v101 + v99 + 2) >> 2);
      v168[2] = __rev16((v103 + v102 + v114 + 2) >> 2);
      v168[3] = __rev16((v105 + v103 + v102 + 2) >> 2);
      v168[4] = __rev16((v106 + v104 + v105 + 2) >> 2);
      v168[5] = __rev16((v108 + v106 + v104 + 2) >> 2);
      v168[6] = __rev16((v110 + v107 + v108 + 2) >> 2);
      v168[7] = __rev16((v111 + v110 + v107 + 2) >> 2);
      do
      {
        if ((v175.i8[v116] & 0x10) != 0) {
          int16x8_t v121 = (int16x8_t *)&v176;
        }
        else {
          int16x8_t v121 = &v169;
        }
        v169.i8[v116] = v121->i8[v175.i8[v116] & 0xF];
        ++v116;
      }
      while (v116 != 16);
      uint64_t v122 = 0;
      char v17 = v130;
      int v29 = v161;
      uint64_t v34 = v136;
      do
      {
        if ((v171.i8[v122] & 0x10) != 0) {
          int8x16_t v123 = (int16x8_t *)v168;
        }
        else {
          int8x16_t v123 = &v169;
        }
        v174.i8[v122] = v123->i8[v171.i8[v122] & 0xF];
        ++v122;
      }
      while (v122 != 16);
      uint64_t v124 = 0;
      uint64_t result = v133;
      do
      {
        if ((*((unsigned char *)&v170 + v124) & 0x10) != 0) {
          int8x16_t v125 = (int16x8_t *)v168;
        }
        else {
          int8x16_t v125 = &v169;
        }
        v172.i8[v124] = v125->i8[*((unsigned char *)&v170 + v124) & 0xF];
        ++v124;
      }
      while (v124 != 16);
      uint64_t v42 = v160 + 4;
      *(uint16x4_t *)v120.i8 = vmin_u16((uint16x4_t)vmax_s16(vadd_s16(v160[3], (int16x4_t)vrev16_s8((int8x8_t)v173)), 0), (uint16x4_t)0xFF00FF00FF00FFLL);
      *(uint16x4_t *)v119.i8 = vmin_u16((uint16x4_t)vmax_s16(vadd_s16(v160[2], (int16x4_t)vrev16_s8(v172)), 0), (uint16x4_t)0xFF00FF00FF00FFLL);
      *(uint16x4_t *)v3.i8 = vmin_u16((uint16x4_t)vmax_s16(vadd_s16(v160[1], (int16x4_t)vrev16_s8((int8x8_t)v174.u64[1])), 0), (uint16x4_t)0xFF00FF00FF00FFLL);
      *(uint16x4_t *)v4.i8 = vmin_u16((uint16x4_t)vmax_s16(vadd_s16(*v160, (int16x4_t)vrev16_s8(*(int8x8_t *)v174.i8)), 0), (uint16x4_t)0xFF00FF00FF00FFLL);
      *int16x8_t v158 = vmovn_s16(v4).u32[0];
      *(_DWORD *)((char *)v158 + v136) = vmovn_s16(v3).u32[0];
      int8x16_t v126 = (_DWORD *)((char *)v158 + v136 + v136);
      *int8x16_t v126 = vmovn_s16(v119).u32[0];
      *(_DWORD *)((char *)v126 + v136) = vmovn_s16(v120).u32[0];
      unint64_t v43 = v159 + 1;
    }
    while (v159 + 1 != v139);
    uint64_t v32 = v127 + 1;
    unint64_t v33 = v137 + 2;
    v139 += 2;
  }
  while (v127 != 7);
  return result;
}

unint64_t sub_2219D7CA0(unint64_t result, uint64_t a2, double a3, double a4, double a5, int8x8_t a6, uint8x8_t a7)
{
  unint64_t v7 = result;
  uint64_t v1189 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(void *)(result + 216);
  int v10 = *(_DWORD *)result;
  int v9 = *(_DWORD *)(result + 4);
  if (*(unsigned char *)(result + 29) && *(unsigned char *)(v8 + 1363))
  {
    uint64_t v1173 = v8 + 504;
    uint64_t v11 = *(unsigned int *)(v8 + 168);
    unsigned int v1157 = 2 * v11;
    int v12 = *(unsigned __int8 *)(v8 + 32);
    uint64_t v13 = *(void *)(v8 + 64) + (16 * v10);
    if (*(unsigned char *)(result + 30))
    {
      if (v12) {
        char v14 = 5;
      }
      else {
        char v14 = 4;
      }
      uint64_t v15 = ((v9 << v14) * v11);
      v13 += v11;
      goto LABEL_16;
    }
    int v16 = v9 * v11;
    if (v12)
    {
      uint64_t v15 = (32 * v16);
      goto LABEL_16;
    }
LABEL_15:
    uint64_t v15 = (16 * v16);
    goto LABEL_16;
  }
  uint64_t v1173 = v8 + 440;
  unsigned int v1157 = *(_DWORD *)(v8 + 168);
  if (*(unsigned char *)(result + 31) != 1)
  {
    if (*(unsigned char *)(result + 31))
    {
      uint64_t v1171 = *(void *)(v8 + 64)
            + 32 * v1157 * (*(_DWORD *)(result + 16) / (2 * *(_DWORD *)(result + 20)))
            + ((8 * (*(_DWORD *)(result + 16) % (2 * *(_DWORD *)(result + 20)))) & 0xFFFFFFF0)
            + (((int)(*(_DWORD *)(result + 16) << 31) >> 31) & v1157);
      uint64_t v1173 = v8 + 504;
      v1157 *= 2;
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v8 + 64) + (16 * v10);
    int v16 = v9 * v1157;
    goto LABEL_15;
  }
  unsigned int v17 = *(_DWORD *)(result + 16);
  uint64_t v13 = *(void *)(v8 + 64)
      + 32 * v1157 * (v17 / (2 * *(_DWORD *)(result + 20)))
      + ((8 * (v17 % (2 * *(_DWORD *)(result + 20)))) & 0xFFFFFFF0);
  uint64_t v15 = ((int)(v17 << 31) >> 31) & (16 * v1157);
LABEL_16:
  uint64_t v1171 = v13 + v15;
LABEL_17:
  uint64_t v18 = *(unsigned char **)(result + 168);
  uint64_t v19 = *(void *)(result + 176) + 48;
  uint64_t v20 = *(unsigned __int8 **)(result + 128);
  uint64_t v21 = *(unsigned __int8 **)(result + 136);
  uint64_t v23 = *(void *)(result + 144);
  uint64_t v22 = *(void *)(result + 152);
  v1187 = 0;
  v1188 = 0;
  uint64_t v1185 = v19;
  v1186 = 0;
  uint64_t v1180 = v19;
  if (v20)
  {
    if (v20[64]) {
      BOOL v24 = v20 + 48;
    }
    else {
      BOOL v24 = v20 + 32;
    }
    v1186 = v24;
    BOOL v25 = 1;
    if (v21) {
      goto LABEL_22;
    }
  }
  else
  {
    BOOL v25 = 0;
    if (v21)
    {
LABEL_22:
      if (v21[64]) {
        BOOL v26 = v21 + 48;
      }
      else {
        BOOL v26 = v21 + 32;
      }
      v1187 = v26;
      BOOL v27 = 1;
      goto LABEL_28;
    }
  }
  BOOL v27 = 0;
  v1187 = 0;
LABEL_28:
  BOOL v28 = v23 != 0;
  BOOL v29 = v22 != 0;
  if (v18)
  {
    if (v18[64]) {
      int v30 = v18 + 48;
    }
    else {
      int v30 = v18 + 32;
    }
    v1188 = v30;
  }
  else
  {
    v1188 = 0;
  }
  uint64_t v31 = *(void *)(result + 48);
  if (!*(unsigned char *)(v31 + 4)) {
    goto LABEL_55;
  }
  if (!v20)
  {
    BOOL v25 = 0;
    if (v21) {
      goto LABEL_43;
    }
    goto LABEL_38;
  }
  if (v20[48] != 34)
  {
    BOOL v25 = 1;
    if (v21) {
      goto LABEL_43;
    }
LABEL_38:
    BOOL v27 = 0;
    if (v23) {
      goto LABEL_39;
    }
LABEL_45:
    BOOL v28 = 0;
    if (!v22) {
      goto LABEL_41;
    }
LABEL_46:
    BOOL v29 = *(unsigned char *)(v22 + 48) != 34 || *(unsigned __int8 *)(v22 + 32) != 34;
    goto LABEL_55;
  }
  BOOL v25 = v20[32] != 34;
  if (!v21) {
    goto LABEL_38;
  }
LABEL_43:
  if (v21[48] == 34)
  {
    BOOL v27 = v21[32] != 34;
    if (!v23) {
      goto LABEL_45;
    }
  }
  else
  {
    BOOL v27 = 1;
    if (!v23) {
      goto LABEL_45;
    }
  }
LABEL_39:
  if (*(unsigned char *)(v23 + 48) != 34)
  {
    BOOL v28 = 1;
    if (!v22) {
      goto LABEL_41;
    }
    goto LABEL_46;
  }
  BOOL v28 = *(unsigned __int8 *)(v23 + 32) != 34;
  if (v22) {
    goto LABEL_46;
  }
LABEL_41:
  BOOL v29 = 0;
LABEL_55:
  unsigned int v32 = v29 | (2 * v28) | (4 * v27);
  uint64_t v33 = v32 | (8 * v25);
  uint64_t v34 = byte_267F63880;
  v1150 = v18;
  if (v20 && (*(unsigned char *)(result + 185) & 1) != 0)
  {
    int v35 = *(unsigned __int8 *)(result + 31);
    if (v35 != 2 || v20[144])
    {
      if (v35 == 1 && v20[144] == 1)
      {
        uint64_t v34 = (char *)((*(unsigned char *)(result + 16) & 1) != 0 ? &unk_267F63918 : &unk_267F638E8);
        if (*(unsigned char *)(v31 + 4) && v25 && v18[48] == 34)
        {
          if (v18[32] == 34) {
            uint64_t v33 = v32;
          }
          else {
            uint64_t v33 = v33;
          }
        }
      }
    }
    else
    {
      uint64_t v34 = (char *)&unk_267F638B8;
    }
  }
  uint64_t v36 = 0;
  uint64_t v37 = 7 * v1157;
  uint64_t v38 = (unsigned __int8 *)(v31 + 326);
  uint64_t v1174 = 2 * v1157;
  long long v39 = &byte_221A372A0;
  uint64_t v40 = 4 * v1157;
  uint64_t v41 = 6 * v1157;
  v42.i64[0] = 0x200000002;
  v42.i64[1] = 0x200000002;
  uint64_t v43 = 5 * v1157;
  unint64_t v44 = 0;
  unint64_t v1151 = result;
  v1152 = v34;
  v1153 = v20;
  uint64_t v1183 = 3 * v1157;
  uint64_t v1158 = v37;
  uint64_t v1182 = v40;
  uint64_t v1181 = v41;
  uint64_t v1184 = v43;
  do
  {
    unint64_t v45 = v34[v44];
    if (!v20)
    {
      int v47 = 0;
      goto LABEL_78;
    }
    int v46 = *(unsigned __int8 *)(v7 + 31);
    if (v46 == 1 && v20[144] == 1 && v44 == 8)
    {
      int v47 = *(unsigned __int8 *)(*(void *)(v7 + 48) + 4);
LABEL_78:
      int v48 = 0;
      unint64_t v49 = (unsigned char *)*(&v1185 + !(v45 & 1));
      goto LABEL_79;
    }
    int v47 = 0;
    if (v46 != 2 || v20[144] || v44 != 8) {
      goto LABEL_78;
    }
    int v47 = 0;
    unint64_t v49 = v1188;
    int v48 = *(unsigned __int8 *)(*(void *)(v7 + 48) + 4);
LABEL_79:
    unint64_t v50 = v34[v44 + 16];
    uint64_t v51 = *(&v1185 + (~(2 * (_BYTE)v50) & 2));
    if (v51) {
      BOOL v52 = v49 == 0;
    }
    else {
      BOOL v52 = 1;
    }
    if (v52)
    {
      int v53 = 0;
LABEL_86:
      unsigned int v56 = 2;
      if (v48) {
        goto LABEL_87;
      }
      goto LABEL_96;
    }
    unsigned int v54 = v49[(v45 >> 1) & 0xF];
    int v55 = *(unsigned __int8 *)(v51 + ((v50 >> 1) & 0xF));
    int v53 = (v54 >> 5) & 1;
    if (*(unsigned __int8 *)(*(void *)(v7 + 48) + 4) & ((v55 | v54) >> 5)) {
      goto LABEL_86;
    }
    unsigned int v56 = (((v54 & 0xF) - (v55 & 0xF)) & ((int)((v54 & 0xF) - (v55 & 0xF)) >> 31)) + (v55 & 0xF);
    if (v48)
    {
LABEL_87:
      int v57 = (v33 & 7 | (8 * v53)) ^ 8;
      unsigned int v58 = dword_221A372A4[(v36 + v57)];
      if (v20[48] == 34 && v20[32] == 34)
      {
        unsigned int v59 = 0;
        uint64_t v33 = v57 & 0xE;
        goto LABEL_102;
      }
      uint64_t v33 = v57 | 1u;
LABEL_101:
      unsigned int v59 = 1;
      goto LABEL_102;
    }
LABEL_96:
    unsigned int v58 = dword_221A372A4[v36 + v33];
    if (v47)
    {
      if (v1150[48] == 34 && v1150[32] == 34)
      {
        unsigned int v59 = 0;
        v33 &= 0xEu;
        goto LABEL_102;
      }
      uint64_t v33 = v33 | 1;
      goto LABEL_101;
    }
    unsigned int v59 = HIBYTE(v58);
LABEL_102:
    unsigned int v60 = *v38;
    if (v56 <= v60) {
      ++v60;
    }
    unsigned int v61 = v60 & (*(v38 - 20) - 1) | v56 & -*(v38 - 20);
    uint8x8_t v62 = (uint8x8_t)vdup_n_s8(v61);
    *(_DWORD *)(v1180 + v44) = v62.i32[0];
    char v63 = (unsigned char *)(v1171 + *(unsigned int *)(v1173 + 4 * v44));
    int v64 = BYTE2(v58);
    switch(v61)
    {
      case 0u:
        uint64_t v65 = (_WORD *)(a2 + 2 * *v39);
        int v66 = v63[-v1157];
        int v67 = v63[-v1157 + 1];
        int v68 = v63[-v1157 + 2];
        int v69 = v63[-v1157 + 3];
        uint64_t result = v63[-v1157 + 4];
        int v70 = v63[-v1157 + 5];
        char v71 = v20;
        uint64_t v72 = v33;
        uint64_t v73 = v37;
        int v74 = v34;
        unint64_t v75 = v44;
        int v76 = v63[-v1157 + 6];
        int v77 = v63[-v1157 + 7];
        int v78 = v63[BYTE2(v58) + 7 - v1157];
        unsigned int v79 = v67 + 2 + 2 * v66 + v63[-v1157 - v59];
        unsigned int v80 = v68 + 2 + v66 + 2 * v67;
        unsigned int v81 = v67 + 2 + 2 * v68 + v69;
        unsigned int v82 = v68 + 2 + 2 * v69 + result;
        unsigned int v83 = v69 + 2 * result + v70 + 2;
        unsigned int v84 = result + 2 * v70 + v76 + 2;
        int v85 = v70 + 2 * v76;
        uint64_t v43 = 5 * v1157;
        unsigned int v86 = v85 + v77 + 2;
        int v87 = v76 + 2 * v77;
        unint64_t v44 = v75;
        uint64_t v34 = v74;
        uint64_t v37 = v73;
        uint64_t v33 = v72;
        uint64_t v20 = v71;
        int v88 = v87 + v78;
        uint64_t v41 = 6 * v1157;
        unsigned int v89 = v88 + 2;
        int v90 = (__int16)(*v65 + (v79 >> 2));
        if (v90 >= 255) {
          int v90 = 255;
        }
        *char v63 = v90 & ~(v90 >> 31);
        int v91 = (__int16)(v65[1] + (v80 >> 2));
        if (v91 >= 255) {
          int v91 = 255;
        }
        v63[1] = v91 & ~(v91 >> 31);
        int v92 = (__int16)(v65[2] + (v81 >> 2));
        if (v92 >= 255) {
          int v92 = 255;
        }
        v63[2] = v92 & ~(v92 >> 31);
        int v93 = (__int16)(v65[3] + (v82 >> 2));
        if (v93 >= 255) {
          int v93 = 255;
        }
        v63[3] = v93 & ~(v93 >> 31);
        int v94 = (__int16)(v65[4] + (v83 >> 2));
        if (v94 >= 255) {
          int v94 = 255;
        }
        v63[4] = v94 & ~(v94 >> 31);
        int v95 = (__int16)(v65[5] + (v84 >> 2));
        if (v95 >= 255) {
          int v95 = 255;
        }
        v63[5] = v95 & ~(v95 >> 31);
        int v96 = (__int16)(v65[6] + (v86 >> 2));
        if (v96 >= 255) {
          int v96 = 255;
        }
        v63[6] = v96 & ~(v96 >> 31);
        int v97 = (__int16)(v65[7] + (v89 >> 2));
        if (v97 >= 255) {
          int v97 = 255;
        }
        v63[7] = v97 & ~(v97 >> 31);
        int v98 = (__int16)(v65[16] + (v79 >> 2));
        if (v98 >= 255) {
          int v98 = 255;
        }
        int v99 = &v63[v1157];
        *int v99 = v98 & ~(v98 >> 31);
        int v100 = (__int16)(v65[17] + (v80 >> 2));
        if (v100 >= 255) {
          int v100 = 255;
        }
        v99[1] = v100 & ~(v100 >> 31);
        int v101 = (__int16)(v65[18] + (v81 >> 2));
        if (v101 >= 255) {
          int v101 = 255;
        }
        v99[2] = v101 & ~(v101 >> 31);
        int v102 = (__int16)(v65[19] + (v82 >> 2));
        if (v102 >= 255) {
          int v102 = 255;
        }
        v99[3] = v102 & ~(v102 >> 31);
        int v103 = (__int16)(v65[20] + (v83 >> 2));
        if (v103 >= 255) {
          int v103 = 255;
        }
        v99[4] = v103 & ~(v103 >> 31);
        int v104 = (__int16)(v65[21] + (v84 >> 2));
        if (v104 >= 255) {
          int v104 = 255;
        }
        v99[5] = v104 & ~(v104 >> 31);
        int v105 = (__int16)(v65[22] + (v86 >> 2));
        if (v105 >= 255) {
          int v105 = 255;
        }
        v99[6] = v105 & ~(v105 >> 31);
        int v106 = (__int16)(v65[23] + (v89 >> 2));
        if (v106 >= 255) {
          int v106 = 255;
        }
        v99[7] = v106 & ~(v106 >> 31);
        int v107 = (__int16)(v65[32] + (v79 >> 2));
        if (v107 >= 255) {
          int v107 = 255;
        }
        int v108 = &v63[v1174];
        v63[v1174] = v107 & ~(v107 >> 31);
        int v109 = (__int16)(v65[33] + (v80 >> 2));
        if (v109 >= 255) {
          int v109 = 255;
        }
        v108[1] = v109 & ~(v109 >> 31);
        int v110 = (__int16)(v65[34] + (v81 >> 2));
        if (v110 >= 255) {
          int v110 = 255;
        }
        v108[2] = v110 & ~(v110 >> 31);
        int v111 = (__int16)(v65[35] + (v82 >> 2));
        if (v111 >= 255) {
          int v111 = 255;
        }
        v108[3] = v111 & ~(v111 >> 31);
        int v112 = (__int16)(v65[36] + (v83 >> 2));
        if (v112 >= 255) {
          int v112 = 255;
        }
        v108[4] = v112 & ~(v112 >> 31);
        int v113 = (__int16)(v65[37] + (v84 >> 2));
        if (v113 >= 255) {
          int v113 = 255;
        }
        v108[5] = v113 & ~(v113 >> 31);
        int v114 = (__int16)(v65[38] + (v86 >> 2));
        if (v114 >= 255) {
          int v114 = 255;
        }
        v108[6] = v114 & ~(v114 >> 31);
        int v115 = (__int16)(v65[39] + (v89 >> 2));
        if (v115 >= 255) {
          int v115 = 255;
        }
        v108[7] = v115 & ~(v115 >> 31);
        int v116 = (__int16)(v65[48] + (v79 >> 2));
        if (v116 >= 255) {
          int v116 = 255;
        }
        int32x4_t v117 = &v63[v1183];
        v63[v1183] = v116 & ~(v116 >> 31);
        int v118 = (__int16)(v65[49] + (v80 >> 2));
        if (v118 >= 255) {
          int v118 = 255;
        }
        v117[1] = v118 & ~(v118 >> 31);
        int v119 = (__int16)(v65[50] + (v81 >> 2));
        if (v119 >= 255) {
          int v119 = 255;
        }
        v117[2] = v119 & ~(v119 >> 31);
        int v120 = (__int16)(v65[51] + (v82 >> 2));
        if (v120 >= 255) {
          int v120 = 255;
        }
        v117[3] = v120 & ~(v120 >> 31);
        int v121 = (__int16)(v65[52] + (v83 >> 2));
        if (v121 >= 255) {
          int v121 = 255;
        }
        v117[4] = v121 & ~(v121 >> 31);
        int v122 = (__int16)(v65[53] + (v84 >> 2));
        if (v122 >= 255) {
          int v122 = 255;
        }
        v117[5] = v122 & ~(v122 >> 31);
        int v123 = (__int16)(v65[54] + (v86 >> 2));
        if (v123 >= 255) {
          int v123 = 255;
        }
        v117[6] = v123 & ~(v123 >> 31);
        int v124 = (__int16)(v65[55] + (v89 >> 2));
        if (v124 >= 255) {
          int v124 = 255;
        }
        v117[7] = v124 & ~(v124 >> 31);
        int v125 = (__int16)(v65[64] + (v79 >> 2));
        if (v125 >= 255) {
          int v125 = 255;
        }
        int8x16_t v126 = &v63[v1182];
        v63[v1182] = v125 & ~(v125 >> 31);
        int v127 = (__int16)(v65[65] + (v80 >> 2));
        if (v127 >= 255) {
          int v127 = 255;
        }
        v126[1] = v127 & ~(v127 >> 31);
        int v128 = (__int16)(v65[66] + (v81 >> 2));
        if (v128 >= 255) {
          int v128 = 255;
        }
        v126[2] = v128 & ~(v128 >> 31);
        int v129 = (__int16)(v65[67] + (v82 >> 2));
        if (v129 >= 255) {
          int v129 = 255;
        }
        v126[3] = v129 & ~(v129 >> 31);
        int v130 = (__int16)(v65[68] + (v83 >> 2));
        if (v130 >= 255) {
          int v130 = 255;
        }
        v126[4] = v130 & ~(v130 >> 31);
        int v131 = (__int16)(v65[69] + (v84 >> 2));
        if (v131 >= 255) {
          int v131 = 255;
        }
        v126[5] = v131 & ~(v131 >> 31);
        int v132 = (__int16)(v65[70] + (v86 >> 2));
        if (v132 >= 255) {
          int v132 = 255;
        }
        v126[6] = v132 & ~(v132 >> 31);
        int v133 = (__int16)(v65[71] + (v89 >> 2));
        if (v133 >= 255) {
          int v133 = 255;
        }
        v126[7] = v133 & ~(v133 >> 31);
        int v134 = (__int16)(v65[80] + (v79 >> 2));
        if (v134 >= 255) {
          int v134 = 255;
        }
        int16x8_t v135 = &v63[v1184];
        v63[v1184] = v134 & ~(v134 >> 31);
        int v136 = (__int16)(v65[81] + (v80 >> 2));
        if (v136 >= 255) {
          int v136 = 255;
        }
        v135[1] = v136 & ~(v136 >> 31);
        int v137 = (__int16)(v65[82] + (v81 >> 2));
        if (v137 >= 255) {
          int v137 = 255;
        }
        v135[2] = v137 & ~(v137 >> 31);
        int v138 = (__int16)(v65[83] + (v82 >> 2));
        if (v138 >= 255) {
          int v138 = 255;
        }
        v135[3] = v138 & ~(v138 >> 31);
        int v139 = (__int16)(v65[84] + (v83 >> 2));
        if (v139 >= 255) {
          int v139 = 255;
        }
        v135[4] = v139 & ~(v139 >> 31);
        int v140 = (__int16)(v65[85] + (v84 >> 2));
        if (v140 >= 255) {
          int v140 = 255;
        }
        v135[5] = v140 & ~(v140 >> 31);
        int v141 = (__int16)(v65[86] + (v86 >> 2));
        if (v141 >= 255) {
          int v141 = 255;
        }
        v135[6] = v141 & ~(v141 >> 31);
        int v142 = (__int16)(v65[87] + (v89 >> 2));
        if (v142 >= 255) {
          int v142 = 255;
        }
        v135[7] = v142 & ~(v142 >> 31);
        int v143 = (__int16)(v65[96] + (v79 >> 2));
        if (v143 >= 255) {
          int v143 = 255;
        }
        int v144 = &v63[v1181];
        v63[v1181] = v143 & ~(v143 >> 31);
        int v145 = (__int16)(v65[97] + (v80 >> 2));
        if (v145 >= 255) {
          int v145 = 255;
        }
        v144[1] = v145 & ~(v145 >> 31);
        int v146 = (__int16)(v65[98] + (v81 >> 2));
        if (v146 >= 255) {
          int v146 = 255;
        }
        v144[2] = v146 & ~(v146 >> 31);
        int v147 = (__int16)(v65[99] + (v82 >> 2));
        if (v147 >= 255) {
          int v147 = 255;
        }
        v144[3] = v147 & ~(v147 >> 31);
        int v148 = (__int16)(v65[100] + (v83 >> 2));
        if (v148 >= 255) {
          int v148 = 255;
        }
        v144[4] = v148 & ~(v148 >> 31);
        int v149 = (__int16)(v65[101] + (v84 >> 2));
        if (v149 >= 255) {
          int v149 = 255;
        }
        v144[5] = v149 & ~(v149 >> 31);
        int v150 = (__int16)(v65[102] + (v86 >> 2));
        if (v150 >= 255) {
          int v150 = 255;
        }
        v144[6] = v150 & ~(v150 >> 31);
        int v151 = (__int16)(v65[103] + (v89 >> 2));
        if (v151 >= 255) {
          int v151 = 255;
        }
        v144[7] = v151 & ~(v151 >> 31);
        int v152 = (__int16)(v65[112] + (v79 >> 2));
        if (v152 >= 255) {
          int v152 = 255;
        }
        unsigned int v153 = &v63[v37];
        v63[v37] = v152 & ~(v152 >> 31);
        LOWORD(v154) = v65[113] + (v80 >> 2);
        uint64_t v40 = 4 * v1157;
        int v154 = (__int16)v154;
        if ((__int16)v154 >= 255) {
          int v154 = 255;
        }
        v153[1] = v154 & ~(v154 >> 31);
        int v155 = (__int16)(v65[114] + (v81 >> 2));
        if (v155 >= 255) {
          int v155 = 255;
        }
        v153[2] = v155 & ~(v155 >> 31);
        int v156 = (__int16)(v65[115] + (v82 >> 2));
        if (v156 >= 255) {
          int v156 = 255;
        }
        v153[3] = v156 & ~(v156 >> 31);
        int v157 = (__int16)(v65[116] + (v83 >> 2));
        if (v157 >= 255) {
          int v157 = 255;
        }
        v153[4] = v157 & ~(v157 >> 31);
        int v158 = (__int16)(v65[117] + (v84 >> 2));
        if (v158 >= 255) {
          int v158 = 255;
        }
        v153[5] = v158 & ~(v158 >> 31);
        int v159 = (__int16)(v65[118] + (v86 >> 2));
        if (v159 >= 255) {
          int v159 = 255;
        }
        v153[6] = v159 & ~(v159 >> 31);
        goto LABEL_861;
      case 1u:
        uint64_t v65 = (_WORD *)(a2 + 2 * *v39);
        int v160 = *(v63 - 1);
        int v161 = v63[v1157 - 1];
        int v162 = v63[v1174 - 1];
        int v163 = v63[v1183 - 1];
        int v164 = v63[v40 - 1];
        int v165 = v63[v43 - 1];
        int v166 = v63[v1181 - 1];
        int8x16_t v167 = v20;
        uint64_t v168 = v33;
        uint64_t v169 = v37;
        long long v170 = v34;
        unint64_t v171 = v44;
        int v172 = v63[v169 - 1];
        unsigned int v173 = v161 + 2 + v63[-(v59 * v1157) - 1] + 2 * v160;
        int v174 = v162 + 2;
        unsigned int v175 = v162 + 2 + v160 + 2 * v161;
        unsigned int v176 = v161 + 2 + 2 * v162 + v163;
        unsigned int v177 = v174 + 2 * v163 + v164;
        unsigned int v178 = v163 + 2 * v164 + v165 + 2;
        unsigned int v179 = v164 + 2 * v165 + v166 + 2;
        unsigned int v180 = v165 + 2 * v166 + v172 + 2;
        int v181 = v166 + v172;
        uint64_t v43 = 5 * v1157;
        int v182 = v181 + 2 * v172;
        unint64_t v44 = v171;
        uint64_t result = v1157;
        uint64_t v34 = v170;
        uint64_t v37 = v169;
        uint64_t v33 = v168;
        uint64_t v20 = v167;
        unsigned int v89 = v182 + 2;
        int v183 = (__int16)(*v65 + (v173 >> 2));
        if (v183 >= 255) {
          int v183 = 255;
        }
        *char v63 = v183 & ~(v183 >> 31);
        int v184 = (__int16)(v65[1] + (v173 >> 2));
        if (v184 >= 255) {
          int v184 = 255;
        }
        v63[1] = v184 & ~(v184 >> 31);
        int v185 = (__int16)(v65[2] + (v173 >> 2));
        if (v185 >= 255) {
          int v185 = 255;
        }
        v63[2] = v185 & ~(v185 >> 31);
        int v186 = (__int16)(v65[3] + (v173 >> 2));
        if (v186 >= 255) {
          int v186 = 255;
        }
        v63[3] = v186 & ~(v186 >> 31);
        int v187 = (__int16)(v65[4] + (v173 >> 2));
        if (v187 >= 255) {
          int v187 = 255;
        }
        v63[4] = v187 & ~(v187 >> 31);
        int v188 = (__int16)(v65[5] + (v173 >> 2));
        if (v188 >= 255) {
          int v188 = 255;
        }
        v63[5] = v188 & ~(v188 >> 31);
        int v189 = (__int16)(v65[6] + (v173 >> 2));
        if (v189 >= 255) {
          int v189 = 255;
        }
        v63[6] = v189 & ~(v189 >> 31);
        int v190 = (__int16)(v65[7] + (v173 >> 2));
        if (v190 >= 255) {
          int v190 = 255;
        }
        v63[7] = v190 & ~(v190 >> 31);
        int v191 = (__int16)(v65[16] + (v175 >> 2));
        if (v191 >= 255) {
          int v191 = 255;
        }
        unsigned __int8 v192 = &v63[v1157];
        *unsigned __int8 v192 = v191 & ~(v191 >> 31);
        int v193 = (__int16)(v65[17] + (v175 >> 2));
        if (v193 >= 255) {
          int v193 = 255;
        }
        v192[1] = v193 & ~(v193 >> 31);
        int v194 = (__int16)(v65[18] + (v175 >> 2));
        if (v194 >= 255) {
          int v194 = 255;
        }
        v192[2] = v194 & ~(v194 >> 31);
        int v195 = (__int16)(v65[19] + (v175 >> 2));
        if (v195 >= 255) {
          int v195 = 255;
        }
        v192[3] = v195 & ~(v195 >> 31);
        int v196 = (__int16)(v65[20] + (v175 >> 2));
        if (v196 >= 255) {
          int v196 = 255;
        }
        v192[4] = v196 & ~(v196 >> 31);
        int v197 = (__int16)(v65[21] + (v175 >> 2));
        if (v197 >= 255) {
          int v197 = 255;
        }
        v192[5] = v197 & ~(v197 >> 31);
        int v198 = (__int16)(v65[22] + (v175 >> 2));
        if (v198 >= 255) {
          int v198 = 255;
        }
        v192[6] = v198 & ~(v198 >> 31);
        int v199 = (__int16)(v65[23] + (v175 >> 2));
        if (v199 >= 255) {
          int v199 = 255;
        }
        v192[7] = v199 & ~(v199 >> 31);
        int v200 = (__int16)(v65[32] + (v176 >> 2));
        if (v200 >= 255) {
          int v200 = 255;
        }
        int16x8_t v201 = &v63[v1174];
        v63[v1174] = v200 & ~(v200 >> 31);
        int v202 = (__int16)(v65[33] + (v176 >> 2));
        if (v202 >= 255) {
          int v202 = 255;
        }
        v201[1] = v202 & ~(v202 >> 31);
        int v203 = (__int16)(v65[34] + (v176 >> 2));
        if (v203 >= 255) {
          int v203 = 255;
        }
        v201[2] = v203 & ~(v203 >> 31);
        int v204 = (__int16)(v65[35] + (v176 >> 2));
        if (v204 >= 255) {
          int v204 = 255;
        }
        v201[3] = v204 & ~(v204 >> 31);
        int v205 = (__int16)(v65[36] + (v176 >> 2));
        if (v205 >= 255) {
          int v205 = 255;
        }
        v201[4] = v205 & ~(v205 >> 31);
        int v206 = (__int16)(v65[37] + (v176 >> 2));
        if (v206 >= 255) {
          int v206 = 255;
        }
        v201[5] = v206 & ~(v206 >> 31);
        int v207 = (__int16)(v65[38] + (v176 >> 2));
        if (v207 >= 255) {
          int v207 = 255;
        }
        v201[6] = v207 & ~(v207 >> 31);
        int v208 = (__int16)(v65[39] + (v176 >> 2));
        if (v208 >= 255) {
          int v208 = 255;
        }
        v201[7] = v208 & ~(v208 >> 31);
        int v209 = (__int16)(v65[48] + (v177 >> 2));
        if (v209 >= 255) {
          int v209 = 255;
        }
        int16x8_t v210 = &v63[v1183];
        uint64_t v41 = 6 * v1157;
        v63[v1183] = v209 & ~(v209 >> 31);
        int v211 = (__int16)(v65[49] + (v177 >> 2));
        if (v211 >= 255) {
          int v211 = 255;
        }
        v210[1] = v211 & ~(v211 >> 31);
        int v212 = (__int16)(v65[50] + (v177 >> 2));
        if (v212 >= 255) {
          int v212 = 255;
        }
        v210[2] = v212 & ~(v212 >> 31);
        int v213 = (__int16)(v65[51] + (v177 >> 2));
        if (v213 >= 255) {
          int v213 = 255;
        }
        v210[3] = v213 & ~(v213 >> 31);
        int v214 = (__int16)(v65[52] + (v177 >> 2));
        if (v214 >= 255) {
          int v214 = 255;
        }
        v210[4] = v214 & ~(v214 >> 31);
        int v215 = (__int16)(v65[53] + (v177 >> 2));
        if (v215 >= 255) {
          int v215 = 255;
        }
        v210[5] = v215 & ~(v215 >> 31);
        int v216 = (__int16)(v65[54] + (v177 >> 2));
        if (v216 >= 255) {
          int v216 = 255;
        }
        v210[6] = v216 & ~(v216 >> 31);
        int v217 = (__int16)(v65[55] + (v177 >> 2));
        if (v217 >= 255) {
          int v217 = 255;
        }
        v210[7] = v217 & ~(v217 >> 31);
        int v218 = (__int16)(v65[64] + (v178 >> 2));
        if (v218 >= 255) {
          int v218 = 255;
        }
        int8x16_t v219 = &v63[v40];
        v63[v40] = v218 & ~(v218 >> 31);
        int v220 = (__int16)(v65[65] + (v178 >> 2));
        if (v220 >= 255) {
          int v220 = 255;
        }
        v219[1] = v220 & ~(v220 >> 31);
        int v221 = (__int16)(v65[66] + (v178 >> 2));
        if (v221 >= 255) {
          int v221 = 255;
        }
        v219[2] = v221 & ~(v221 >> 31);
        int v222 = (__int16)(v65[67] + (v178 >> 2));
        if (v222 >= 255) {
          int v222 = 255;
        }
        v219[3] = v222 & ~(v222 >> 31);
        int v223 = (__int16)(v65[68] + (v178 >> 2));
        if (v223 >= 255) {
          int v223 = 255;
        }
        v219[4] = v223 & ~(v223 >> 31);
        int v224 = (__int16)(v65[69] + (v178 >> 2));
        if (v224 >= 255) {
          int v224 = 255;
        }
        v219[5] = v224 & ~(v224 >> 31);
        int v225 = (__int16)(v65[70] + (v178 >> 2));
        if (v225 >= 255) {
          int v225 = 255;
        }
        v219[6] = v225 & ~(v225 >> 31);
        int v226 = (__int16)(v65[71] + (v178 >> 2));
        if (v226 >= 255) {
          int v226 = 255;
        }
        v219[7] = v226 & ~(v226 >> 31);
        int v227 = (__int16)(v65[80] + (v179 >> 2));
        if (v227 >= 255) {
          int v227 = 255;
        }
        uint64_t v228 = &v63[v1184];
        v63[v1184] = v227 & ~(v227 >> 31);
        int v229 = (__int16)(v65[81] + (v179 >> 2));
        if (v229 >= 255) {
          int v229 = 255;
        }
        v228[1] = v229 & ~(v229 >> 31);
        int v230 = (__int16)(v65[82] + (v179 >> 2));
        if (v230 >= 255) {
          int v230 = 255;
        }
        v228[2] = v230 & ~(v230 >> 31);
        int v231 = (__int16)(v65[83] + (v179 >> 2));
        if (v231 >= 255) {
          int v231 = 255;
        }
        v228[3] = v231 & ~(v231 >> 31);
        int v232 = (__int16)(v65[84] + (v179 >> 2));
        if (v232 >= 255) {
          int v232 = 255;
        }
        v228[4] = v232 & ~(v232 >> 31);
        int v233 = (__int16)(v65[85] + (v179 >> 2));
        if (v233 >= 255) {
          int v233 = 255;
        }
        v228[5] = v233 & ~(v233 >> 31);
        int v234 = (__int16)(v65[86] + (v179 >> 2));
        if (v234 >= 255) {
          int v234 = 255;
        }
        v228[6] = v234 & ~(v234 >> 31);
        int v235 = (__int16)(v65[87] + (v179 >> 2));
        if (v235 >= 255) {
          int v235 = 255;
        }
        v228[7] = v235 & ~(v235 >> 31);
        int v236 = (__int16)(v65[96] + (v180 >> 2));
        if (v236 >= 255) {
          int v236 = 255;
        }
        v237 = &v63[v1181];
        v63[v1181] = v236 & ~(v236 >> 31);
        int v238 = (__int16)(v65[97] + (v180 >> 2));
        if (v238 >= 255) {
          int v238 = 255;
        }
        v237[1] = v238 & ~(v238 >> 31);
        int v239 = (__int16)(v65[98] + (v180 >> 2));
        if (v239 >= 255) {
          int v239 = 255;
        }
        v237[2] = v239 & ~(v239 >> 31);
        int v240 = (__int16)(v65[99] + (v180 >> 2));
        if (v240 >= 255) {
          int v240 = 255;
        }
        v237[3] = v240 & ~(v240 >> 31);
        int v241 = (__int16)(v65[100] + (v180 >> 2));
        if (v241 >= 255) {
          int v241 = 255;
        }
        v237[4] = v241 & ~(v241 >> 31);
        int v242 = (__int16)(v65[101] + (v180 >> 2));
        if (v242 >= 255) {
          int v242 = 255;
        }
        v237[5] = v242 & ~(v242 >> 31);
        int v243 = (__int16)(v65[102] + (v180 >> 2));
        if (v243 >= 255) {
          int v243 = 255;
        }
        v237[6] = v243 & ~(v243 >> 31);
        int v244 = (unsigned __int16)v65[103] + (v180 >> 2);
        goto LABEL_844;
      case 2u:
        uint64_t v245 = v41;
        v246 = (_WORD *)(a2 + 2 * *v39);
        uint64_t v247 = v40;
        if ((_BYTE)v58)
        {
          if ((v58 & 0xFF00) != 0)
          {
            v62.i32[0] = *(_DWORD *)&v63[-v1157 + 1];
            a6.i8[0] = v63[-v1157 - v59];
            a7.i32[0] = *(_DWORD *)&v63[-v1157 + 2];
            a6.i8[4] = v63[-v1157];
            int v248 = v63[-v1157 + 7];
            uint16x4_t v249 = (uint16x4_t)vmovl_u8(v62).u64[0];
            int64x2_t v250 = (int64x2_t)vmovl_u16(v249);
            int32x4_t v251 = (int32x4_t)vaddw_u16(v42, v249);
            v252.i64[0] = vdupq_laneq_s64(v250, 1).u64[0];
            v252.i32[2] = v63[-v1157 + 5];
            v252.i32[3] = v63[-v1157 + 6];
            unsigned int v253 = (v252.i32[2] + 2 * v252.i32[3] + v248 + 2) >> 2;
            unsigned __int32 v254 = (v252.i32[3] + v63[BYTE2(v58) + 7 - v1157] + 2 * v248 + 2) >> 2;
            int v255 = *(v63 - 1);
            int v256 = v63[v1157 - 1];
            int v257 = v63[v1174 - 1];
            uint64_t v258 = 3 * v1157;
            int v259 = v63[v1183 - 1];
            uint64_t v260 = v247;
            int v261 = v63[v247 - 1];
            int v262 = v63[v43 - 1];
            uint64_t v41 = v245;
            int v263 = v63[v245 - 1];
            int v264 = v63[v37 - 1];
            unsigned int v265 = v256 + 2 + v63[-(v59 * v1157) - 1] + 2 * v255;
            unsigned int v266 = (v257 + 2 + v255 + 2 * v256) >> 2;
            uint64_t v43 = 5 * v1157;
            unsigned int v267 = v256 + 2 + 2 * v257 + v259;
            unsigned int v268 = (v257 + 2 + 2 * v259 + v261) >> 2;
            unsigned int v269 = v259 + 2 * v261 + v262 + 2;
            unsigned int v270 = (v261 + 2 * v262 + v263 + 2) >> 2;
            uint64_t result = (v262 + 2 * v263 + v264 + 2);
            *(int32x2_t *)v250.i8 = vdup_lane_s32(*(int32x2_t *)v250.i8, 0);
            a6 = vand_s8(a6, (int8x8_t)0xFF000000FFLL);
            v250.i32[0] = a6.i32[1];
            a7 = (uint8x8_t)vsra_n_u32((uint32x2_t)__PAIR64__(v253, vaddvq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vaddq_s32(v251, (int32x4_t)vshll_n_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(a7), 1uLL)), v252), 2uLL))), (uint32x2_t)vadd_s32(vadd_s32(*(int32x2_t *)v251.i8, (int32x2_t)a6), vadd_s32(*(int32x2_t *)v250.i8, *(int32x2_t *)v250.i8)), 2uLL);
            uint64_t v271 = v260;
            signed __int32 v272 = (v268
                  + (v269 >> 2)
                  + v270
                  + (result >> 2)
                  + ((v263 + v264 + 2 * v264 + 2) >> 2)
                  + vadd_s32((int32x2_t)a7, vdup_lane_s32((int32x2_t)a7, 1)).u32[0]
                  + v254
                  + (v265 >> 2)
                  + v266
                  + (v267 >> 2)
                  + 8) >> 4;
          }
          else
          {
            int v1061 = v63[v1157 - 1];
            int v1062 = v63[v1174 - 1];
            uint64_t v258 = 3 * v1157;
            int v1063 = v63[v1183 - 1];
            v1064 = v34;
            uint64_t v1065 = v247;
            int v1066 = v63[v247 - 1];
            int v1067 = v63[v43 - 1];
            uint64_t v41 = v245;
            int v1068 = v63[v245 - 1];
            int v1069 = v63[v37 - 1];
            uint64_t result = (v1061 + 2);
            unsigned int v1070 = ((result
                    + v63[-(v59 * v1157) - 1]
                    + 2 * *(v63 - 1)) >> 2)
                  + ((v1062 + 2 + *(v63 - 1) + 2 * v1061) >> 2)
                  + ((result + 2 * v1062 + v1063) >> 2);
            uint64_t v271 = v1065;
            uint64_t v34 = v1064;
            signed __int32 v272 = (v1070
                  + ((v1062 + 2 + 2 * v1063 + v1066) >> 2)
                  + ((v1063 + 2 * v1066 + v1067 + 2) >> 2)
                  + ((v1066 + 2 * v1067 + v1068 + 2) >> 2)
                  + ((v1067 + 2 * v1068 + v1069 + 2) >> 2)
                  + ((v1068 + v1069 + 2 * v1069 + 2) >> 2)
                  + 4) >> 3;
          }
        }
        else
        {
          if ((v58 & 0xFF00) != 0)
          {
            unsigned int v837 = v63[-v1157 + 5];
            unsigned int v838 = v63[-v1157 + 6];
            v62.i32[0] = *(_DWORD *)&v63[-v1157 + 1];
            a6.i8[0] = v63[-v1157 - v59];
            a7.i32[0] = *(_DWORD *)&v63[-v1157 + 2];
            a6.i8[4] = v63[-v1157];
            int v839 = v63[-v1157 + 7];
            uint16x4_t v840 = (uint16x4_t)vmovl_u8(v62).u64[0];
            int64x2_t v841 = (int64x2_t)vmovl_u16(v840);
            int32x4_t v842 = (int32x4_t)vaddw_u16(v42, v840);
            v843.i64[0] = vdupq_laneq_s64(v841, 1).u64[0];
            v843.i64[1] = __PAIR64__(v838, v837);
            a6 = vand_s8(a6, (int8x8_t)0xFF000000FFLL);
            *(int32x2_t *)v841.i8 = vdup_lane_s32(*(int32x2_t *)v841.i8, 0);
            v841.i32[0] = a6.i32[1];
            a7 = (uint8x8_t)vsra_n_u32((uint32x2_t)__PAIR64__((v837 + 2 * v838 + v839 + 2) >> 2, vaddvq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vaddq_s32(v842, (int32x4_t)vshll_n_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(a7), 1uLL)), v843), 2uLL))), (uint32x2_t)vadd_s32(vadd_s32(*(int32x2_t *)v842.i8, (int32x2_t)a6), vadd_s32(*(int32x2_t *)v841.i8, *(int32x2_t *)v841.i8)), 2uLL);
            signed __int32 v272 = (vadd_s32((int32x2_t)a7, vdup_lane_s32((int32x2_t)a7, 1)).u32[0]
                  + ((v838 + v63[BYTE2(v58) + 7 - v1157] + 2 * v839 + 2) >> 2)
                  + 4) >> 3;
          }
          else
          {
            LOWORD(v272) = 128;
          }
          uint64_t v258 = 3 * v1157;
          uint64_t v271 = v247;
          uint64_t v41 = v245;
        }
        int v1071 = (__int16)(*v246 + v272);
        if (v1071 >= 255) {
          int v1071 = 255;
        }
        *char v63 = v1071 & ~(v1071 >> 31);
        int v1072 = (__int16)(v246[1] + v272);
        if (v1072 >= 255) {
          int v1072 = 255;
        }
        v63[1] = v1072 & ~(v1072 >> 31);
        int v1073 = (__int16)(v246[2] + v272);
        if (v1073 >= 255) {
          int v1073 = 255;
        }
        v63[2] = v1073 & ~(v1073 >> 31);
        int v1074 = (__int16)(v246[3] + v272);
        if (v1074 >= 255) {
          int v1074 = 255;
        }
        v63[3] = v1074 & ~(v1074 >> 31);
        int v1075 = (__int16)(v246[4] + v272);
        if (v1075 >= 255) {
          int v1075 = 255;
        }
        v63[4] = v1075 & ~(v1075 >> 31);
        int v1076 = (__int16)(v246[5] + v272);
        if (v1076 >= 255) {
          int v1076 = 255;
        }
        v63[5] = v1076 & ~(v1076 >> 31);
        int v1077 = (__int16)(v246[6] + v272);
        if (v1077 >= 255) {
          int v1077 = 255;
        }
        v63[6] = v1077 & ~(v1077 >> 31);
        int v1078 = (__int16)(v246[7] + v272);
        if (v1078 >= 255) {
          int v1078 = 255;
        }
        v63[7] = v1078 & ~(v1078 >> 31);
        int v1079 = (__int16)(v246[16] + v272);
        if (v1079 >= 255) {
          int v1079 = 255;
        }
        v1080 = &v63[v1157];
        unsigned char *v1080 = v1079 & ~(v1079 >> 31);
        int v1081 = (__int16)(v246[17] + v272);
        if (v1081 >= 255) {
          int v1081 = 255;
        }
        v1080[1] = v1081 & ~(v1081 >> 31);
        int v1082 = (__int16)(v246[18] + v272);
        if (v1082 >= 255) {
          int v1082 = 255;
        }
        v1080[2] = v1082 & ~(v1082 >> 31);
        int v1083 = (__int16)(v246[19] + v272);
        if (v1083 >= 255) {
          int v1083 = 255;
        }
        v1080[3] = v1083 & ~(v1083 >> 31);
        int v1084 = (__int16)(v246[20] + v272);
        if (v1084 >= 255) {
          int v1084 = 255;
        }
        v1080[4] = v1084 & ~(v1084 >> 31);
        int v1085 = (__int16)(v246[21] + v272);
        if (v1085 >= 255) {
          int v1085 = 255;
        }
        v1080[5] = v1085 & ~(v1085 >> 31);
        int v1086 = (__int16)(v246[22] + v272);
        if (v1086 >= 255) {
          int v1086 = 255;
        }
        v1080[6] = v1086 & ~(v1086 >> 31);
        int v1087 = (__int16)(v246[23] + v272);
        if (v1087 >= 255) {
          int v1087 = 255;
        }
        v1080[7] = v1087 & ~(v1087 >> 31);
        int v1088 = (__int16)(v246[32] + v272);
        if (v1088 >= 255) {
          int v1088 = 255;
        }
        v1089 = &v63[v1174];
        v63[v1174] = v1088 & ~(v1088 >> 31);
        int v1090 = (__int16)(v246[33] + v272);
        if (v1090 >= 255) {
          int v1090 = 255;
        }
        v1089[1] = v1090 & ~(v1090 >> 31);
        int v1091 = (__int16)(v246[34] + v272);
        if (v1091 >= 255) {
          int v1091 = 255;
        }
        v1089[2] = v1091 & ~(v1091 >> 31);
        int v1092 = (__int16)(v246[35] + v272);
        if (v1092 >= 255) {
          int v1092 = 255;
        }
        v1089[3] = v1092 & ~(v1092 >> 31);
        int v1093 = (__int16)(v246[36] + v272);
        if (v1093 >= 255) {
          int v1093 = 255;
        }
        v1089[4] = v1093 & ~(v1093 >> 31);
        int v1094 = (__int16)(v246[37] + v272);
        if (v1094 >= 255) {
          int v1094 = 255;
        }
        v1089[5] = v1094 & ~(v1094 >> 31);
        int v1095 = (__int16)(v246[38] + v272);
        if (v1095 >= 255) {
          int v1095 = 255;
        }
        v1089[6] = v1095 & ~(v1095 >> 31);
        int v1096 = (__int16)(v246[39] + v272);
        if (v1096 >= 255) {
          int v1096 = 255;
        }
        v1089[7] = v1096 & ~(v1096 >> 31);
        int v1097 = (__int16)(v246[48] + v272);
        if (v1097 >= 255) {
          int v1097 = 255;
        }
        v1098 = &v63[v258];
        v63[v258] = v1097 & ~(v1097 >> 31);
        int v1099 = (__int16)(v246[49] + v272);
        if (v1099 >= 255) {
          int v1099 = 255;
        }
        v1098[1] = v1099 & ~(v1099 >> 31);
        int v1100 = (__int16)(v246[50] + v272);
        if (v1100 >= 255) {
          int v1100 = 255;
        }
        v1098[2] = v1100 & ~(v1100 >> 31);
        int v1101 = (__int16)(v246[51] + v272);
        if (v1101 >= 255) {
          int v1101 = 255;
        }
        v1098[3] = v1101 & ~(v1101 >> 31);
        int v1102 = (__int16)(v246[52] + v272);
        if (v1102 >= 255) {
          int v1102 = 255;
        }
        v1098[4] = v1102 & ~(v1102 >> 31);
        int v1103 = (__int16)(v246[53] + v272);
        if (v1103 >= 255) {
          int v1103 = 255;
        }
        v1098[5] = v1103 & ~(v1103 >> 31);
        int v1104 = (__int16)(v246[54] + v272);
        if (v1104 >= 255) {
          int v1104 = 255;
        }
        v1098[6] = v1104 & ~(v1104 >> 31);
        int v1105 = (__int16)(v246[55] + v272);
        if (v1105 >= 255) {
          int v1105 = 255;
        }
        v1098[7] = v1105 & ~(v1105 >> 31);
        int v1106 = (__int16)(v246[64] + v272);
        if (v1106 >= 255) {
          int v1106 = 255;
        }
        v1107 = &v63[v271];
        v63[v271] = v1106 & ~(v1106 >> 31);
        int v1108 = (__int16)(v246[65] + v272);
        if (v1108 >= 255) {
          int v1108 = 255;
        }
        v1107[1] = v1108 & ~(v1108 >> 31);
        int v1109 = (__int16)(v246[66] + v272);
        if (v1109 >= 255) {
          int v1109 = 255;
        }
        v1107[2] = v1109 & ~(v1109 >> 31);
        int v1110 = (__int16)(v246[67] + v272);
        if (v1110 >= 255) {
          int v1110 = 255;
        }
        v1107[3] = v1110 & ~(v1110 >> 31);
        int v1111 = (__int16)(v246[68] + v272);
        if (v1111 >= 255) {
          int v1111 = 255;
        }
        v1107[4] = v1111 & ~(v1111 >> 31);
        int v1112 = (__int16)(v246[69] + v272);
        if (v1112 >= 255) {
          int v1112 = 255;
        }
        v1107[5] = v1112 & ~(v1112 >> 31);
        int v1113 = (__int16)(v246[70] + v272);
        if (v1113 >= 255) {
          int v1113 = 255;
        }
        v1107[6] = v1113 & ~(v1113 >> 31);
        int v1114 = (__int16)(v246[71] + v272);
        if (v1114 >= 255) {
          int v1114 = 255;
        }
        v1107[7] = v1114 & ~(v1114 >> 31);
        int v1115 = (__int16)(v246[80] + v272);
        if (v1115 >= 255) {
          int v1115 = 255;
        }
        v1116 = &v63[v43];
        v63[v43] = v1115 & ~(v1115 >> 31);
        int v1117 = (__int16)(v246[81] + v272);
        if (v1117 >= 255) {
          int v1117 = 255;
        }
        v1116[1] = v1117 & ~(v1117 >> 31);
        int v1118 = (__int16)(v246[82] + v272);
        if (v1118 >= 255) {
          int v1118 = 255;
        }
        v1116[2] = v1118 & ~(v1118 >> 31);
        int v1119 = (__int16)(v246[83] + v272);
        if (v1119 >= 255) {
          int v1119 = 255;
        }
        v1116[3] = v1119 & ~(v1119 >> 31);
        int v1120 = (__int16)(v246[84] + v272);
        if (v1120 >= 255) {
          int v1120 = 255;
        }
        v1116[4] = v1120 & ~(v1120 >> 31);
        int v1121 = (__int16)(v246[85] + v272);
        if (v1121 >= 255) {
          int v1121 = 255;
        }
        v1116[5] = v1121 & ~(v1121 >> 31);
        int v1122 = (__int16)(v246[86] + v272);
        if (v1122 >= 255) {
          int v1122 = 255;
        }
        v1116[6] = v1122 & ~(v1122 >> 31);
        int v1123 = (__int16)(v246[87] + v272);
        if (v1123 >= 255) {
          int v1123 = 255;
        }
        v1116[7] = v1123 & ~(v1123 >> 31);
        int v1124 = (__int16)(v246[96] + v272);
        if (v1124 >= 255) {
          int v1124 = 255;
        }
        v1125 = &v63[v41];
        v63[v41] = v1124 & ~(v1124 >> 31);
        int v1126 = (__int16)(v246[97] + v272);
        if (v1126 >= 255) {
          int v1126 = 255;
        }
        v1125[1] = v1126 & ~(v1126 >> 31);
        int v1127 = (__int16)(v246[98] + v272);
        if (v1127 >= 255) {
          int v1127 = 255;
        }
        v1125[2] = v1127 & ~(v1127 >> 31);
        int v1128 = (__int16)(v246[99] + v272);
        if (v1128 >= 255) {
          int v1128 = 255;
        }
        v1125[3] = v1128 & ~(v1128 >> 31);
        int v1129 = (__int16)(v246[100] + v272);
        if (v1129 >= 255) {
          int v1129 = 255;
        }
        v1125[4] = v1129 & ~(v1129 >> 31);
        int v1130 = (__int16)(v246[101] + v272);
        if (v1130 >= 255) {
          int v1130 = 255;
        }
        v1125[5] = v1130 & ~(v1130 >> 31);
        int v1131 = (__int16)(v246[102] + v272);
        if (v1131 >= 255) {
          int v1131 = 255;
        }
        v1125[6] = v1131 & ~(v1131 >> 31);
        int v1132 = (__int16)(v246[103] + v272);
        if (v1132 >= 255) {
          int v1132 = 255;
        }
        v1125[7] = v1132 & ~(v1132 >> 31);
        int v1133 = (__int16)(v246[112] + v272);
        if (v1133 >= 255) {
          int v1133 = 255;
        }
        v1134 = &v63[v37];
        v63[v37] = v1133 & ~(v1133 >> 31);
        int v1135 = (__int16)(v246[113] + v272);
        if (v1135 >= 255) {
          int v1135 = 255;
        }
        v1134[1] = v1135 & ~(v1135 >> 31);
        int v1136 = (__int16)(v246[114] + v272);
        if (v1136 >= 255) {
          int v1136 = 255;
        }
        v1134[2] = v1136 & ~(v1136 >> 31);
        int v1137 = (__int16)(v246[115] + v272);
        if (v1137 >= 255) {
          int v1137 = 255;
        }
        v1134[3] = v1137 & ~(v1137 >> 31);
        int v1138 = (__int16)(v246[116] + v272);
        if (v1138 >= 255) {
          int v1138 = 255;
        }
        v1134[4] = v1138 & ~(v1138 >> 31);
        int v1139 = (__int16)(v246[117] + v272);
        if (v1139 >= 255) {
          int v1139 = 255;
        }
        v1134[5] = v1139 & ~(v1139 >> 31);
        int v1140 = (__int16)(v246[118] + v272);
        if (v1140 >= 255) {
          int v1140 = 255;
        }
        v1134[6] = v1140 & ~(v1140 >> 31);
        LOWORD(v272) = v246[119] + v272;
        uint64_t v40 = v271;
        goto LABEL_1250;
      case 3u:
        unint64_t v1175 = v44;
        v273 = &v63[-v1157];
        int v274 = v273[-v59];
        v275 = (_WORD *)(a2 + 2 * *v39);
        int v276 = *v273;
        int v277 = v273[1];
        int v278 = v273[2];
        int v279 = v273[3];
        int v280 = v273[4];
        int v281 = v273[5];
        int v282 = v273[6];
        int v283 = v273[7];
        uint64_t v1163 = v36;
        v1154 = v38;
        uint64_t v284 = v33;
        if (v64)
        {
          int v285 = v273[8];
          int v286 = v273[9];
          int v287 = v273[10];
          int v288 = v273[11];
          int v289 = v273[12];
          int v290 = v273[13];
          int v291 = v273[14];
          int v292 = v273[15];
        }
        else
        {
          int v292 = v63[-v1157 + 7];
          int v291 = v292;
          int v290 = v292;
          int v289 = v292;
          int v288 = v292;
          int v287 = v292;
          int v286 = v292;
          int v285 = v292;
        }
        unsigned int v844 = v277 + 2 + v274 + 2 * v276;
        int v845 = v278 + 2;
        unsigned int v846 = v278 + 2 + v276 + 2 * v277;
        unsigned int v847 = (v277 + 2 + 2 * v278 + v279) >> 2;
        unsigned int v848 = (v845 + 2 * v279 + v280) >> 2;
        unsigned int v849 = (v279 + 2 * v280 + v281 + 2) >> 2;
        unsigned int v850 = v847 + 2 + (v844 >> 2) + 2 * (v846 >> 2);
        unsigned int v851 = v848 + 2 + (v846 >> 2) + 2 * v847;
        unsigned int v852 = (v280 + 2 * v281 + v282 + 2) >> 2;
        unsigned int v853 = (v281 + 2 * v282 + v283 + 2) >> 2;
        unsigned int v854 = v847 + 2 + 2 * v848 + v849;
        unsigned int v855 = (v282 + 2 * v283 + v285 + 2) >> 2;
        unsigned int v856 = v283 + v286 + 2 * v285 + 2;
        unsigned int v857 = v848 + 2 + 2 * v849 + v852;
        unsigned int v858 = v287 + v285 + 2 * v286 + 2;
        unsigned int v859 = v849 + 2 * v852 + v853;
        unsigned int v860 = v852 + 2 * v853 + v855;
        int v861 = v288 + 2;
        unsigned int v862 = v288 + 2 + v286 + 2 * v287;
        int v863 = v855 + (v858 >> 2) + 2 * (v856 >> 2);
        int v864 = v853 + 2 * v855 + (v856 >> 2);
        unsigned int v865 = v859 + 2;
        unsigned int v866 = v860 + 2;
        unsigned int v867 = v864 + 2;
        unsigned int v868 = v863 + 2;
        unsigned int v869 = (v862 >> 2) + 2 * (v858 >> 2) + (v856 >> 2) + 2;
        int v870 = (__int16)(*v275 + (v850 >> 2));
        if (v870 >= 255) {
          int v870 = 255;
        }
        *char v63 = v870 & ~(v870 >> 31);
        int v871 = (__int16)(v275[1] + (v851 >> 2));
        if (v871 >= 255) {
          int v871 = 255;
        }
        v63[1] = v871 & ~(v871 >> 31);
        int v872 = (__int16)(v275[2] + (v854 >> 2));
        if (v872 >= 255) {
          int v872 = 255;
        }
        v63[2] = v872 & ~(v872 >> 31);
        int v873 = (__int16)(v275[3] + (v857 >> 2));
        if (v873 >= 255) {
          int v873 = 255;
        }
        v63[3] = v873 & ~(v873 >> 31);
        int v874 = (__int16)(v275[4] + (v865 >> 2));
        if (v874 >= 255) {
          int v874 = 255;
        }
        v63[4] = v874 & ~(v874 >> 31);
        int v875 = (__int16)(v275[5] + (v866 >> 2));
        if (v875 >= 255) {
          int v875 = 255;
        }
        v63[5] = v875 & ~(v875 >> 31);
        int v876 = (__int16)(v275[6] + (v867 >> 2));
        if (v876 >= 255) {
          int v876 = 255;
        }
        v63[6] = v876 & ~(v876 >> 31);
        int v877 = (__int16)(v275[7] + (v868 >> 2));
        if (v877 >= 255) {
          int v877 = 255;
        }
        v63[7] = v877 & ~(v877 >> 31);
        int v878 = (__int16)(v275[16] + (v851 >> 2));
        if (v878 >= 255) {
          int v878 = 255;
        }
        v879 = &v63[v1157];
        unsigned char *v879 = v878 & ~(v878 >> 31);
        int v880 = (__int16)(v275[17] + (v854 >> 2));
        if (v880 >= 255) {
          int v880 = 255;
        }
        v879[1] = v880 & ~(v880 >> 31);
        int v881 = (__int16)(v275[18] + (v857 >> 2));
        if (v881 >= 255) {
          int v881 = 255;
        }
        v879[2] = v881 & ~(v881 >> 31);
        int v882 = (__int16)(v275[19] + (v865 >> 2));
        if (v882 >= 255) {
          int v882 = 255;
        }
        v879[3] = v882 & ~(v882 >> 31);
        int v883 = (__int16)(v275[20] + (v866 >> 2));
        if (v883 >= 255) {
          int v883 = 255;
        }
        v879[4] = v883 & ~(v883 >> 31);
        int v884 = (__int16)(v275[21] + (v867 >> 2));
        if (v884 >= 255) {
          int v884 = 255;
        }
        v879[5] = v884 & ~(v884 >> 31);
        int v885 = (__int16)(v275[22] + (v868 >> 2));
        if (v885 >= 255) {
          int v885 = 255;
        }
        v879[6] = v885 & ~(v885 >> 31);
        int v886 = (__int16)(v275[23] + (v869 >> 2));
        if (v886 >= 255) {
          int v886 = 255;
        }
        v879[7] = v886 & ~(v886 >> 31);
        int v887 = v289 + 2;
        unsigned int v888 = (v289 + 2 + v287 + 2 * v288) >> 2;
        unsigned int v889 = v888 + 2;
        unsigned int v890 = v888 + 2 + 2 * (v862 >> 2) + (v858 >> 2);
        int v891 = (__int16)(v275[32] + (v854 >> 2));
        if (v891 >= 255) {
          int v891 = 255;
        }
        v892 = &v63[v1174];
        v63[v1174] = v891 & ~(v891 >> 31);
        int v893 = (__int16)(v275[33] + (v857 >> 2));
        if (v893 >= 255) {
          int v893 = 255;
        }
        v892[1] = v893 & ~(v893 >> 31);
        int v894 = (__int16)(v275[34] + (v865 >> 2));
        if (v894 >= 255) {
          int v894 = 255;
        }
        v892[2] = v894 & ~(v894 >> 31);
        int v895 = (__int16)(v275[35] + (v866 >> 2));
        if (v895 >= 255) {
          int v895 = 255;
        }
        v892[3] = v895 & ~(v895 >> 31);
        int v896 = (__int16)(v275[36] + (v867 >> 2));
        if (v896 >= 255) {
          int v896 = 255;
        }
        v892[4] = v896 & ~(v896 >> 31);
        int v897 = (__int16)(v275[37] + (v868 >> 2));
        if (v897 >= 255) {
          int v897 = 255;
        }
        v892[5] = v897 & ~(v897 >> 31);
        int v898 = (__int16)(v275[38] + (v869 >> 2));
        if (v898 >= 255) {
          int v898 = 255;
        }
        v892[6] = v898 & ~(v898 >> 31);
        int v899 = (__int16)(v275[39] + (v890 >> 2));
        if (v899 >= 255) {
          int v899 = 255;
        }
        v892[7] = v899 & ~(v899 >> 31);
        unsigned int v900 = (v861 + v290 + 2 * v289) >> 2;
        unsigned int v901 = v900 + 2 + 2 * v888 + (v862 >> 2);
        int v902 = (__int16)(v275[48] + (v857 >> 2));
        if (v902 >= 255) {
          int v902 = 255;
        }
        v903 = &v63[v1183];
        v63[v1183] = v902 & ~(v902 >> 31);
        int v904 = (__int16)(v275[49] + (v865 >> 2));
        if (v904 >= 255) {
          int v904 = 255;
        }
        v903[1] = v904 & ~(v904 >> 31);
        int v905 = (__int16)(v275[50] + (v866 >> 2));
        if (v905 >= 255) {
          int v905 = 255;
        }
        v903[2] = v905 & ~(v905 >> 31);
        int v906 = (__int16)(v275[51] + (v867 >> 2));
        if (v906 >= 255) {
          int v906 = 255;
        }
        v903[3] = v906 & ~(v906 >> 31);
        int v907 = (__int16)(v275[52] + (v868 >> 2));
        if (v907 >= 255) {
          int v907 = 255;
        }
        v903[4] = v907 & ~(v907 >> 31);
        int v908 = (__int16)(v275[53] + (v869 >> 2));
        if (v908 >= 255) {
          int v908 = 255;
        }
        v903[5] = v908 & ~(v908 >> 31);
        int v909 = (__int16)(v275[54] + (v890 >> 2));
        if (v909 >= 255) {
          int v909 = 255;
        }
        v903[6] = v909 & ~(v909 >> 31);
        int v910 = (__int16)(v275[55] + (v901 >> 2));
        if (v910 >= 255) {
          int v910 = 255;
        }
        v903[7] = v910 & ~(v910 >> 31);
        unsigned int v911 = v887 + v291 + 2 * v290;
        unsigned int v912 = v889 + (v911 >> 2) + 2 * v900;
        int v913 = (__int16)(v275[64] + (v865 >> 2));
        if (v913 >= 255) {
          int v913 = 255;
        }
        uint64_t v40 = 4 * v1157;
        v914 = &v63[v1182];
        v63[v1182] = v913 & ~(v913 >> 31);
        int v915 = (__int16)(v275[65] + (v866 >> 2));
        if (v915 >= 255) {
          int v915 = 255;
        }
        v914[1] = v915 & ~(v915 >> 31);
        int v916 = (__int16)(v275[66] + (v867 >> 2));
        if (v916 >= 255) {
          int v916 = 255;
        }
        v914[2] = v916 & ~(v916 >> 31);
        int v917 = (__int16)(v275[67] + (v868 >> 2));
        if (v917 >= 255) {
          int v917 = 255;
        }
        v914[3] = v917 & ~(v917 >> 31);
        int v918 = (__int16)(v275[68] + (v869 >> 2));
        if (v918 >= 255) {
          int v918 = 255;
        }
        v914[4] = v918 & ~(v918 >> 31);
        int v919 = (__int16)(v275[69] + (v890 >> 2));
        if (v919 >= 255) {
          int v919 = 255;
        }
        v914[5] = v919 & ~(v919 >> 31);
        int v920 = (__int16)(v275[70] + (v901 >> 2));
        if (v920 >= 255) {
          int v920 = 255;
        }
        v914[6] = v920 & ~(v920 >> 31);
        int v921 = (__int16)(v275[71] + (v912 >> 2));
        if (v921 >= 255) {
          int v921 = 255;
        }
        v914[7] = v921 & ~(v921 >> 31);
        unsigned int v922 = v292 + 2 + v290 + 2 * v291;
        unsigned int v923 = v900 + 2 + (v922 >> 2) + 2 * (v911 >> 2);
        int v924 = (__int16)(v275[80] + (v866 >> 2));
        if (v924 >= 255) {
          int v924 = 255;
        }
        v925 = &v63[v1184];
        v63[v1184] = v924 & ~(v924 >> 31);
        int v926 = (__int16)(v275[81] + (v867 >> 2));
        if (v926 >= 255) {
          int v926 = 255;
        }
        v925[1] = v926 & ~(v926 >> 31);
        int v927 = (__int16)(v275[82] + (v868 >> 2));
        if (v927 >= 255) {
          int v927 = 255;
        }
        v925[2] = v927 & ~(v927 >> 31);
        int v928 = (__int16)(v275[83] + (v869 >> 2));
        if (v928 >= 255) {
          int v928 = 255;
        }
        v925[3] = v928 & ~(v928 >> 31);
        int v929 = (__int16)(v275[84] + (v890 >> 2));
        if (v929 >= 255) {
          int v929 = 255;
        }
        v925[4] = v929 & ~(v929 >> 31);
        int v930 = (__int16)(v275[85] + (v901 >> 2));
        if (v930 >= 255) {
          int v930 = 255;
        }
        v925[5] = v930 & ~(v930 >> 31);
        int v931 = (__int16)(v275[86] + (v912 >> 2));
        if (v931 >= 255) {
          int v931 = 255;
        }
        v925[6] = v931 & ~(v931 >> 31);
        int v932 = (__int16)(v275[87] + (v923 >> 2));
        if (v932 >= 255) {
          int v932 = 255;
        }
        v925[7] = v932 & ~(v932 >> 31);
        unsigned int v933 = (v292 + 2 + v291 + 2 * v292) >> 2;
        uint64_t result = v933 + 2 + 2 * (v922 >> 2) + (v911 >> 2);
        int v934 = (__int16)(v275[96] + (v867 >> 2));
        if (v934 >= 255) {
          int v934 = 255;
        }
        uint64_t v41 = 6 * v1157;
        v935 = &v63[v1181];
        v63[v1181] = v934 & ~(v934 >> 31);
        int v936 = (__int16)(v275[97] + (v868 >> 2));
        if (v936 >= 255) {
          int v936 = 255;
        }
        v935[1] = v936 & ~(v936 >> 31);
        int v937 = (__int16)(v275[98] + (v869 >> 2));
        if (v937 >= 255) {
          int v937 = 255;
        }
        v935[2] = v937 & ~(v937 >> 31);
        int v938 = (__int16)(v275[99] + (v890 >> 2));
        if (v938 >= 255) {
          int v938 = 255;
        }
        v935[3] = v938 & ~(v938 >> 31);
        int v939 = (__int16)(v275[100] + (v901 >> 2));
        if (v939 >= 255) {
          int v939 = 255;
        }
        v935[4] = v939 & ~(v939 >> 31);
        int v940 = (__int16)(v275[101] + (v912 >> 2));
        if (v940 >= 255) {
          int v940 = 255;
        }
        v935[5] = v940 & ~(v940 >> 31);
        int v941 = (__int16)(v275[102] + (v923 >> 2));
        if (v941 >= 255) {
          int v941 = 255;
        }
        v935[6] = v941 & ~(v941 >> 31);
        int v942 = (__int16)(v275[103] + (result >> 2));
        if (v942 >= 255) {
          int v942 = 255;
        }
        v935[7] = v942 & ~(v942 >> 31);
        uint64_t v43 = 5 * v1157;
        int v943 = (__int16)(v275[112] + (v868 >> 2));
        if (v943 >= 255) {
          int v943 = 255;
        }
        uint64_t v37 = 7 * v1157;
        v944 = &v63[v1158];
        v63[v1158] = v943 & ~(v943 >> 31);
        int v945 = (__int16)(v275[113] + (v869 >> 2));
        if (v945 >= 255) {
          int v945 = 255;
        }
        v944[1] = v945 & ~(v945 >> 31);
        int v946 = (__int16)(v275[114] + (v890 >> 2));
        if (v946 >= 255) {
          int v946 = 255;
        }
        v944[2] = v946 & ~(v946 >> 31);
        int v947 = (__int16)(v275[115] + (v901 >> 2));
        if (v947 >= 255) {
          int v947 = 255;
        }
        v944[3] = v947 & ~(v947 >> 31);
        int v948 = (__int16)(v275[116] + (v912 >> 2));
        if (v948 >= 255) {
          int v948 = 255;
        }
        v944[4] = v948 & ~(v948 >> 31);
        int v949 = (__int16)(v275[117] + (v923 >> 2));
        if (v949 >= 255) {
          int v949 = 255;
        }
        v944[5] = v949 & ~(v949 >> 31);
        int v950 = (__int16)(v275[118] + (result >> 2));
        if (v950 >= 255) {
          int v950 = 255;
        }
        v944[6] = v950 & ~(v950 >> 31);
        signed __int32 v272 = (unsigned __int16)v275[119] + ((v933 + 2 + 2 * v933 + (v922 >> 2)) >> 2);
        uint64_t v20 = v1153;
        uint64_t v38 = v1154;
        uint64_t v33 = v284;
        uint64_t v36 = v1163;
        unint64_t v44 = v1175;
        uint64_t v34 = v1152;
        goto LABEL_1250;
      case 4u:
        v293 = (_WORD *)(a2 + 2 * *v39);
        int v294 = v63[-v1157];
        int v295 = v63[-v1157 + 1];
        int v296 = v63[-v1157 + 2];
        int v297 = v63[-v1157 + 3];
        int v298 = v63[-v1157 + 4];
        int v299 = v63[-v1157 + 5];
        int v300 = v63[-v1157 + 6];
        int v301 = v63[-v1157 + 7];
        unsigned int v1167 = v33;
        int v302 = v63[BYTE2(v58) + 7 - v1157];
        int v303 = v63[-v1157 - v59];
        unsigned int v304 = (v295 + 2 + v303 + 2 * v294) >> 2;
        unint64_t v1176 = v44;
        unsigned int v305 = (v294 + 2 + 2 * v295 + v296) >> 2;
        unsigned int v306 = (v295 + 2 + 2 * v296 + v297) >> 2;
        unsigned int v307 = (v296 + 2 * v297 + v298 + 2) >> 2;
        unsigned int v308 = (v297 + 2 * v298 + v299 + 2) >> 2;
        unsigned int v309 = (v298 + 2 * v299 + v300 + 2) >> 2;
        unsigned int v310 = v299 + 2 * v300 + v301 + 2;
        int v311 = v300 + v302 + 2 * v301;
        int v312 = *(v63 - 1);
        int v313 = v63[v1157 - 1];
        int v314 = v313 + 2;
        unsigned int v315 = v313 + 2 + v63[-(v59 * v1157) - 1] + 2 * v312;
        uint64_t v316 = v36;
        int v317 = v312 + 2 * v313;
        int v318 = v294 + 2 + 2 * v303;
        v319 = v38;
        unsigned int v320 = v318 + v312;
        unsigned int v321 = v304 + 2;
        unsigned int v322 = v304 + 2 + 2 * v305 + v306;
        v305 += 2;
        v1159 = v39;
        unsigned int v323 = v305 + 2 * v304;
        unsigned int v324 = v305 + 2 * v306 + v307;
        int v325 = v63[v1174 - 1];
        unsigned int v326 = v306 + 2 * v307 + v308;
        int v327 = v63[v1183 - 1];
        unsigned int v328 = v307 + 2 * v308 + v309;
        int v329 = v63[v1182 - 1];
        int v330 = v308 + 2 * v309 + (v310 >> 2);
        int v331 = v63[v1184 - 1];
        unsigned int v332 = v309 + 2 * (v310 >> 2);
        int v1145 = v63[v1181 - 1];
        int v1147 = v63[v1158 - 1];
        unsigned int v333 = v323 + (v320 >> 2);
        unsigned int v334 = v320 >> 2;
        uint64_t v38 = v319;
        unsigned int v335 = v321 + 2 * v334 + (v315 >> 2);
        unsigned int v336 = v315 >> 2;
        int v337 = v317 + v325;
        uint64_t v36 = v316;
        unsigned int v338 = v337 + 2;
        unsigned int v339 = v326 + 2;
        unsigned int v340 = v328 + 2;
        unsigned int v341 = v330 + 2;
        uint64_t v34 = v1152;
        unsigned int v342 = v332 + ((v311 + 2) >> 2) + 2;
        unsigned int v343 = v334 + 2 * v336 + (v338 >> 2) + 2;
        int v344 = (__int16)(*v293 + (v335 >> 2));
        if (v344 >= 255) {
          int v344 = 255;
        }
        *char v63 = v344 & ~(v344 >> 31);
        int v345 = (__int16)(v293[1] + (v333 >> 2));
        if (v345 >= 255) {
          int v345 = 255;
        }
        v63[1] = v345 & ~(v345 >> 31);
        int v346 = (__int16)(v293[2] + (v322 >> 2));
        if (v346 >= 255) {
          int v346 = 255;
        }
        v63[2] = v346 & ~(v346 >> 31);
        int v347 = (__int16)(v293[3] + (v324 >> 2));
        if (v347 >= 255) {
          int v347 = 255;
        }
        v63[3] = v347 & ~(v347 >> 31);
        int v348 = (__int16)(v293[4] + (v339 >> 2));
        if (v348 >= 255) {
          int v348 = 255;
        }
        v63[4] = v348 & ~(v348 >> 31);
        int v349 = (__int16)(v293[5] + (v340 >> 2));
        if (v349 >= 255) {
          int v349 = 255;
        }
        v63[5] = v349 & ~(v349 >> 31);
        int v350 = (__int16)(v293[6] + (v341 >> 2));
        if (v350 >= 255) {
          int v350 = 255;
        }
        v63[6] = v350 & ~(v350 >> 31);
        int v351 = (__int16)(v293[7] + (v342 >> 2));
        if (v351 >= 255) {
          int v351 = 255;
        }
        v63[7] = v351 & ~(v351 >> 31);
        int v352 = (__int16)(v293[16] + (v343 >> 2));
        if (v352 >= 255) {
          int v352 = 255;
        }
        v353 = &v63[v1157];
        unsigned char *v353 = v352 & ~(v352 >> 31);
        int v354 = (__int16)(v293[17] + (v335 >> 2));
        if (v354 >= 255) {
          int v354 = 255;
        }
        v353[1] = v354 & ~(v354 >> 31);
        int v355 = (__int16)(v293[18] + (v333 >> 2));
        if (v355 >= 255) {
          int v355 = 255;
        }
        v353[2] = v355 & ~(v355 >> 31);
        int v356 = (__int16)(v293[19] + (v322 >> 2));
        if (v356 >= 255) {
          int v356 = 255;
        }
        v353[3] = v356 & ~(v356 >> 31);
        int v357 = (__int16)(v293[20] + (v324 >> 2));
        if (v357 >= 255) {
          int v357 = 255;
        }
        v353[4] = v357 & ~(v357 >> 31);
        int v358 = (__int16)(v293[21] + (v339 >> 2));
        if (v358 >= 255) {
          int v358 = 255;
        }
        v353[5] = v358 & ~(v358 >> 31);
        int v359 = (__int16)(v293[22] + (v340 >> 2));
        if (v359 >= 255) {
          int v359 = 255;
        }
        v353[6] = v359 & ~(v359 >> 31);
        LOWORD(v363) = v293[23] + (v341 >> 2);
        uint64_t v33 = v1167;
        unsigned int v360 = v338 >> 2;
        unsigned int v361 = v314 + 2 * v325 + v327;
        unsigned int v362 = v336 + 2 * (v338 >> 2) + (v361 >> 2) + 2;
        int v363 = (__int16)v363;
        if ((__int16)v363 >= 255) {
          int v363 = 255;
        }
        v353[7] = v363 & ~(v363 >> 31);
        int v364 = (__int16)(v293[32] + (v362 >> 2));
        if (v364 >= 255) {
          int v364 = 255;
        }
        v365 = &v63[v1174];
        unint64_t v7 = v1151;
        v63[v1174] = v364 & ~(v364 >> 31);
        int v366 = (__int16)(v293[33] + (v343 >> 2));
        if (v366 >= 255) {
          int v366 = 255;
        }
        v365[1] = v366 & ~(v366 >> 31);
        int v367 = (__int16)(v293[34] + (v335 >> 2));
        if (v367 >= 255) {
          int v367 = 255;
        }
        v365[2] = v367 & ~(v367 >> 31);
        int v368 = (__int16)(v293[35] + (v333 >> 2));
        if (v368 >= 255) {
          int v368 = 255;
        }
        v365[3] = v368 & ~(v368 >> 31);
        int v369 = (__int16)(v293[36] + (v322 >> 2));
        if (v369 >= 255) {
          int v369 = 255;
        }
        v365[4] = v369 & ~(v369 >> 31);
        int v370 = (__int16)(v293[37] + (v324 >> 2));
        if (v370 >= 255) {
          int v370 = 255;
        }
        v365[5] = v370 & ~(v370 >> 31);
        int v371 = (__int16)(v293[38] + (v339 >> 2));
        if (v371 >= 255) {
          int v371 = 255;
        }
        v365[6] = v371 & ~(v371 >> 31);
        LOWORD(v375) = v293[39] + (v340 >> 2);
        unsigned int v372 = v361 >> 2;
        unsigned int v373 = v325 + 2 * v327 + v329 + 2;
        unsigned int v374 = v360 + 2 * v372 + (v373 >> 2) + 2;
        int v375 = (__int16)v375;
        if ((__int16)v375 >= 255) {
          int v375 = 255;
        }
        v365[7] = v375 & ~(v375 >> 31);
        int v376 = (__int16)(v293[48] + (v374 >> 2));
        if (v376 >= 255) {
          int v376 = 255;
        }
        v377 = &v63[v1183];
        v63[v1183] = v376 & ~(v376 >> 31);
        int v378 = (__int16)(v293[49] + (v362 >> 2));
        if (v378 >= 255) {
          int v378 = 255;
        }
        v377[1] = v378 & ~(v378 >> 31);
        int v379 = (__int16)(v293[50] + (v343 >> 2));
        if (v379 >= 255) {
          int v379 = 255;
        }
        v377[2] = v379 & ~(v379 >> 31);
        int v380 = (__int16)(v293[51] + (v335 >> 2));
        if (v380 >= 255) {
          int v380 = 255;
        }
        v377[3] = v380 & ~(v380 >> 31);
        int v381 = (__int16)(v293[52] + (v333 >> 2));
        if (v381 >= 255) {
          int v381 = 255;
        }
        v377[4] = v381 & ~(v381 >> 31);
        int v382 = (__int16)(v293[53] + (v322 >> 2));
        if (v382 >= 255) {
          int v382 = 255;
        }
        v377[5] = v382 & ~(v382 >> 31);
        int v383 = (__int16)(v293[54] + (v324 >> 2));
        if (v383 >= 255) {
          int v383 = 255;
        }
        v377[6] = v383 & ~(v383 >> 31);
        LOWORD(v388) = v293[55] + (v339 >> 2);
        unsigned int v384 = v373 >> 2;
        int v385 = v327 + 2 * v329;
        uint64_t v40 = 4 * v1157;
        unsigned int v386 = v385 + v331 + 2;
        unsigned int v387 = v372 + 2 * v384 + (v386 >> 2) + 2;
        int v388 = (__int16)v388;
        if ((__int16)v388 >= 255) {
          int v388 = 255;
        }
        v377[7] = v388 & ~(v388 >> 31);
        int v389 = (__int16)(v293[64] + (v387 >> 2));
        if (v389 >= 255) {
          int v389 = 255;
        }
        v390 = &v63[v1182];
        v63[v1182] = v389 & ~(v389 >> 31);
        int v391 = (__int16)(v293[65] + (v374 >> 2));
        if (v391 >= 255) {
          int v391 = 255;
        }
        v390[1] = v391 & ~(v391 >> 31);
        int v392 = (__int16)(v293[66] + (v362 >> 2));
        if (v392 >= 255) {
          int v392 = 255;
        }
        v390[2] = v392 & ~(v392 >> 31);
        int v393 = (__int16)(v293[67] + (v343 >> 2));
        if (v393 >= 255) {
          int v393 = 255;
        }
        v390[3] = v393 & ~(v393 >> 31);
        int v394 = (__int16)(v293[68] + (v335 >> 2));
        if (v394 >= 255) {
          int v394 = 255;
        }
        v390[4] = v394 & ~(v394 >> 31);
        int v395 = (__int16)(v293[69] + (v333 >> 2));
        if (v395 >= 255) {
          int v395 = 255;
        }
        v390[5] = v395 & ~(v395 >> 31);
        int v396 = (__int16)(v293[70] + (v322 >> 2));
        if (v396 >= 255) {
          int v396 = 255;
        }
        v390[6] = v396 & ~(v396 >> 31);
        LOWORD(v401) = v293[71] + (v324 >> 2);
        unsigned int v397 = v386 >> 2;
        int v398 = v329 + 2 * v331;
        uint64_t v20 = v1153;
        unsigned int v399 = v398 + v1145 + 2;
        unsigned int v400 = v384 + 2 * (v386 >> 2) + (v399 >> 2) + 2;
        int v401 = (__int16)v401;
        if ((__int16)v401 >= 255) {
          int v401 = 255;
        }
        v390[7] = v401 & ~(v401 >> 31);
        uint64_t v37 = 7 * v1157;
        int v402 = (__int16)(v293[80] + (v400 >> 2));
        if (v402 >= 255) {
          int v402 = 255;
        }
        v403 = &v63[v1184];
        v63[v1184] = v402 & ~(v402 >> 31);
        int v404 = (__int16)(v293[81] + (v387 >> 2));
        if (v404 >= 255) {
          int v404 = 255;
        }
        v403[1] = v404 & ~(v404 >> 31);
        int v405 = (__int16)(v293[82] + (v374 >> 2));
        if (v405 >= 255) {
          int v405 = 255;
        }
        v403[2] = v405 & ~(v405 >> 31);
        int v406 = (__int16)(v293[83] + (v362 >> 2));
        if (v406 >= 255) {
          int v406 = 255;
        }
        v403[3] = v406 & ~(v406 >> 31);
        int v407 = (__int16)(v293[84] + (v343 >> 2));
        if (v407 >= 255) {
          int v407 = 255;
        }
        v403[4] = v407 & ~(v407 >> 31);
        int v408 = (__int16)(v293[85] + (v335 >> 2));
        if (v408 >= 255) {
          int v408 = 255;
        }
        v403[5] = v408 & ~(v408 >> 31);
        int v409 = (__int16)(v293[86] + (v333 >> 2));
        if (v409 >= 255) {
          int v409 = 255;
        }
        v403[6] = v409 & ~(v409 >> 31);
        LOWORD(v412) = v293[87] + (v322 >> 2);
        uint64_t result = v399 >> 2;
        unint64_t v44 = v1176;
        unsigned int v410 = v331 + 2 * v1145 + v1147 + 2;
        unsigned int v411 = v397 + 2 * result + (v410 >> 2) + 2;
        int v412 = (__int16)v412;
        if ((__int16)v412 >= 255) {
          int v412 = 255;
        }
        v403[7] = v412 & ~(v412 >> 31);
        uint64_t v41 = 6 * v1157;
        int v413 = (__int16)(v293[96] + (v411 >> 2));
        if (v413 >= 255) {
          int v413 = 255;
        }
        v414 = &v63[v1181];
        v63[v1181] = v413 & ~(v413 >> 31);
        int v415 = (__int16)(v293[97] + (v400 >> 2));
        if (v415 >= 255) {
          int v415 = 255;
        }
        v414[1] = v415 & ~(v415 >> 31);
        int v416 = (__int16)(v293[98] + (v387 >> 2));
        if (v416 >= 255) {
          int v416 = 255;
        }
        v414[2] = v416 & ~(v416 >> 31);
        int v417 = (__int16)(v293[99] + (v374 >> 2));
        if (v417 >= 255) {
          int v417 = 255;
        }
        v414[3] = v417 & ~(v417 >> 31);
        int v418 = (__int16)(v293[100] + (v362 >> 2));
        if (v418 >= 255) {
          int v418 = 255;
        }
        v414[4] = v418 & ~(v418 >> 31);
        int v419 = (__int16)(v293[101] + (v343 >> 2));
        if (v419 >= 255) {
          int v419 = 255;
        }
        v414[5] = v419 & ~(v419 >> 31);
        int v420 = (__int16)(v293[102] + (v335 >> 2));
        if (v420 >= 255) {
          int v420 = 255;
        }
        v414[6] = v420 & ~(v420 >> 31);
        LOWORD(v421) = v293[103] + (v333 >> 2);
        long long v39 = v1159;
        int v421 = (__int16)v421;
        if ((__int16)v421 >= 255) {
          int v421 = 255;
        }
        v414[7] = v421 & ~(v421 >> 31);
        uint64_t v43 = 5 * v1157;
        int v422 = (__int16)(v293[112]
                       + ((result + 2 * (v410 >> 2) + ((v1145 + v1147 + 2 * v1147 + 2) >> 2) + 2) >> 2));
        if (v422 >= 255) {
          int v422 = 255;
        }
        v423 = &v63[v1158];
        v63[v1158] = v422 & ~(v422 >> 31);
        int v424 = (__int16)(v293[113] + (v411 >> 2));
        if (v424 >= 255) {
          int v424 = 255;
        }
        v423[1] = v424 & ~(v424 >> 31);
        int v425 = (__int16)(v293[114] + (v400 >> 2));
        if (v425 >= 255) {
          int v425 = 255;
        }
        v423[2] = v425 & ~(v425 >> 31);
        int v426 = (__int16)(v293[115] + (v387 >> 2));
        if (v426 >= 255) {
          int v426 = 255;
        }
        v423[3] = v426 & ~(v426 >> 31);
        int v427 = (__int16)(v293[116] + (v374 >> 2));
        if (v427 >= 255) {
          int v427 = 255;
        }
        v423[4] = v427 & ~(v427 >> 31);
        int v428 = (__int16)(v293[117] + (v362 >> 2));
        if (v428 >= 255) {
          int v428 = 255;
        }
        v423[5] = v428 & ~(v428 >> 31);
        int v429 = (__int16)(v293[118] + (v343 >> 2));
        if (v429 >= 255) {
          int v429 = 255;
        }
        v423[6] = v429 & ~(v429 >> 31);
        goto LABEL_730;
      case 5u:
        int v430 = v63[-v1157];
        int v431 = v63[-v1157 + 1];
        int v432 = v63[-v1157 + 2];
        int v433 = v63[-v1157 + 3];
        int v434 = v63[-v1157 + 4];
        int v435 = v63[-v1157 + 5];
        int v436 = v63[-v1157 + 6];
        uint64_t v1164 = v36;
        int v437 = v63[-v1157 + 7];
        v438 = (_WORD *)(a2 + 2 * *v39);
        int v439 = v63[-v1157 - v59];
        unsigned int v440 = (v431 + 2 + v439 + 2 * v430) >> 2;
        unsigned int v1168 = v33;
        unsigned int v441 = v430 + 2 + 2 * v431 + v432;
        unint64_t v1177 = v44;
        unsigned int v442 = (v431 + 2 + 2 * v432 + v433) >> 2;
        unsigned int v443 = v432 + 2 * v433 + v434 + 2;
        v1155 = v38;
        unsigned int v444 = (v433 + 2 * v434 + v435 + 2) >> 2;
        unsigned int v445 = (v434 + 2 * v435 + v436 + 2) >> 2;
        unsigned int v446 = (v435 + 2 * v436 + v437 + 2) >> 2;
        unsigned int v447 = v436 + v63[BYTE2(v58) + 7 - v1157] + 2 * v437 + 2;
        int v448 = *(v63 - 1);
        int v449 = v63[v1157 - 1];
        int v450 = v63[v1174 - 1];
        int v451 = v63[v1183 - 1];
        int v1143 = v63[v1182 - 1];
        int v1144 = v63[v1184 - 1];
        int v1146 = v63[v1181 - 1];
        int v1148 = v63[v1158 - 1];
        int v452 = v449 + 2;
        unsigned int v453 = v449 + 2 + v63[-(v59 * v1157) - 1] + 2 * v448;
        int v1142 = v448 + 2 * v449;
        unsigned int v454 = v430 + 2 + 2 * v439 + v448;
        unsigned int v455 = v440 + 1 + (v454 >> 2);
        unsigned int v456 = v440 + 1 + (v441 >> 2);
        unsigned int v457 = v440 + 2;
        unsigned int v458 = v440 + 2 + 2 * (v441 >> 2) + v442;
        v1160 = v39;
        int v459 = (v441 >> 2) + 2;
        unsigned int v460 = v459 + 2 * v440 + (v454 >> 2);
        unsigned int v461 = v454 >> 2;
        unsigned int v462 = (v441 >> 2) + v442 + 1;
        unsigned int v463 = v459 + 2 * v442 + (v443 >> 2);
        unsigned int v464 = v442 + (v443 >> 2) + 1;
        unsigned int v465 = v442 + 2 * (v443 >> 2) + v444;
        unsigned int v466 = (v443 >> 2) + v444 + 1;
        unsigned int v467 = (v443 >> 2) + 2 * v444 + v445;
        uint64_t v34 = v1152;
        unsigned int v468 = v444 + v445 + 1;
        unsigned int v469 = v444 + 2 * v445 + v446;
        unsigned int v470 = v445 + v446 + 1;
        unsigned int v471 = v445 + 2 * v446;
        unsigned int v472 = v446 + (v447 >> 2) + 1;
        unsigned int v473 = v465 + 2;
        unsigned int v474 = v467 + 2;
        unsigned int v475 = v469 + 2;
        unsigned int v476 = v471 + (v447 >> 2) + 2;
        unsigned int v477 = v457 + 2 * v461 + (v453 >> 2);
        int v478 = (__int16)(*v438 + (v455 >> 1));
        if (v478 >= 255) {
          int v478 = 255;
        }
        *char v63 = v478 & ~(v478 >> 31);
        int v479 = (__int16)(v438[1] + (v456 >> 1));
        if (v479 >= 255) {
          int v479 = 255;
        }
        v63[1] = v479 & ~(v479 >> 31);
        int v480 = (__int16)(v438[2] + (v462 >> 1));
        if (v480 >= 255) {
          int v480 = 255;
        }
        v63[2] = v480 & ~(v480 >> 31);
        int v481 = (__int16)(v438[3] + (v464 >> 1));
        if (v481 >= 255) {
          int v481 = 255;
        }
        v63[3] = v481 & ~(v481 >> 31);
        int v482 = (__int16)(v438[4] + (v466 >> 1));
        if (v482 >= 255) {
          int v482 = 255;
        }
        v63[4] = v482 & ~(v482 >> 31);
        int v483 = (__int16)(v438[5] + (v468 >> 1));
        if (v483 >= 255) {
          int v483 = 255;
        }
        v63[5] = v483 & ~(v483 >> 31);
        int v484 = (__int16)(v438[6] + (v470 >> 1));
        if (v484 >= 255) {
          int v484 = 255;
        }
        v63[6] = v484 & ~(v484 >> 31);
        int v485 = (__int16)(v438[7] + (v472 >> 1));
        if (v485 >= 255) {
          int v485 = 255;
        }
        v63[7] = v485 & ~(v485 >> 31);
        int v486 = (__int16)(v438[16] + (v477 >> 2));
        if (v486 >= 255) {
          int v486 = 255;
        }
        v487 = &v63[v1157];
        unsigned char *v487 = v486 & ~(v486 >> 31);
        int v488 = (__int16)(v438[17] + (v460 >> 2));
        if (v488 >= 255) {
          int v488 = 255;
        }
        v487[1] = v488 & ~(v488 >> 31);
        int v489 = (__int16)(v438[18] + (v458 >> 2));
        if (v489 >= 255) {
          int v489 = 255;
        }
        v487[2] = v489 & ~(v489 >> 31);
        int v490 = (__int16)(v438[19] + (v463 >> 2));
        if (v490 >= 255) {
          int v490 = 255;
        }
        v487[3] = v490 & ~(v490 >> 31);
        int v491 = (__int16)(v438[20] + (v473 >> 2));
        if (v491 >= 255) {
          int v491 = 255;
        }
        v487[4] = v491 & ~(v491 >> 31);
        int v492 = (__int16)(v438[21] + (v474 >> 2));
        if (v492 >= 255) {
          int v492 = 255;
        }
        v487[5] = v492 & ~(v492 >> 31);
        int v493 = (__int16)(v438[22] + (v475 >> 2));
        if (v493 >= 255) {
          int v493 = 255;
        }
        v487[6] = v493 & ~(v493 >> 31);
        unsigned int v494 = v453 >> 2;
        unsigned int v495 = v1142 + v450 + 2;
        unsigned int v496 = v461 + 2 * (v453 >> 2);
        uint64_t v33 = v1168;
        uint64_t result = v496 + (v495 >> 2) + 2;
        int v497 = (__int16)(v438[23] + (v476 >> 2));
        if (v497 >= 255) {
          int v497 = 255;
        }
        v487[7] = v497 & ~(v497 >> 31);
        int v498 = (__int16)(v438[32] + (result >> 2));
        if (v498 >= 255) {
          int v498 = 255;
        }
        v499 = &v63[v1174];
        v63[v1174] = v498 & ~(v498 >> 31);
        int v500 = (__int16)(v438[33] + (v455 >> 1));
        if (v500 >= 255) {
          int v500 = 255;
        }
        v499[1] = v500 & ~(v500 >> 31);
        int v501 = (__int16)(v438[34] + (v456 >> 1));
        if (v501 >= 255) {
          int v501 = 255;
        }
        v499[2] = v501 & ~(v501 >> 31);
        int v502 = (__int16)(v438[35] + (v462 >> 1));
        if (v502 >= 255) {
          int v502 = 255;
        }
        v499[3] = v502 & ~(v502 >> 31);
        int v503 = (__int16)(v438[36] + (v464 >> 1));
        if (v503 >= 255) {
          int v503 = 255;
        }
        v499[4] = v503 & ~(v503 >> 31);
        int v504 = (__int16)(v438[37] + (v466 >> 1));
        if (v504 >= 255) {
          int v504 = 255;
        }
        v499[5] = v504 & ~(v504 >> 31);
        int v505 = (__int16)(v438[38] + (v468 >> 1));
        if (v505 >= 255) {
          int v505 = 255;
        }
        v499[6] = v505 & ~(v505 >> 31);
        LOWORD(v509) = v438[39] + (v470 >> 1);
        unsigned int v506 = v495 >> 2;
        unsigned int v507 = v452 + 2 * v450 + v451;
        unsigned int v508 = v494 + 2 * v506 + (v507 >> 2) + 2;
        int v509 = (__int16)v509;
        if ((__int16)v509 >= 255) {
          int v509 = 255;
        }
        v499[7] = v509 & ~(v509 >> 31);
        int v510 = (__int16)(v438[48] + (v508 >> 2));
        if (v510 >= 255) {
          int v510 = 255;
        }
        v511 = &v63[v1183];
        v63[v1183] = v510 & ~(v510 >> 31);
        int v512 = (__int16)(v438[49] + (v477 >> 2));
        if (v512 >= 255) {
          int v512 = 255;
        }
        v511[1] = v512 & ~(v512 >> 31);
        int v513 = (__int16)(v438[50] + (v460 >> 2));
        if (v513 >= 255) {
          int v513 = 255;
        }
        v511[2] = v513 & ~(v513 >> 31);
        int v514 = (__int16)(v438[51] + (v458 >> 2));
        if (v514 >= 255) {
          int v514 = 255;
        }
        v511[3] = v514 & ~(v514 >> 31);
        int v515 = (__int16)(v438[52] + (v463 >> 2));
        if (v515 >= 255) {
          int v515 = 255;
        }
        v511[4] = v515 & ~(v515 >> 31);
        int v516 = (__int16)(v438[53] + (v473 >> 2));
        if (v516 >= 255) {
          int v516 = 255;
        }
        v511[5] = v516 & ~(v516 >> 31);
        int v517 = (__int16)(v438[54] + (v474 >> 2));
        if (v517 >= 255) {
          int v517 = 255;
        }
        v511[6] = v517 & ~(v517 >> 31);
        LOWORD(v520) = v438[55] + (v475 >> 2);
        uint64_t v41 = 6 * v1157;
        unsigned int v518 = v450 + 2 * v451 + v1143 + 2;
        unsigned int v519 = v506 + 2 * (v507 >> 2) + (v518 >> 2) + 2;
        int v520 = (__int16)v520;
        if ((__int16)v520 >= 255) {
          int v520 = 255;
        }
        v511[7] = v520 & ~(v520 >> 31);
        int v521 = (__int16)(v438[64] + (v519 >> 2));
        if (v521 >= 255) {
          int v521 = 255;
        }
        v522 = &v63[v1182];
        v63[v1182] = v521 & ~(v521 >> 31);
        int v523 = (__int16)(v438[65] + (result >> 2));
        if (v523 >= 255) {
          int v523 = 255;
        }
        v522[1] = v523 & ~(v523 >> 31);
        int v524 = (__int16)(v438[66] + (v455 >> 1));
        if (v524 >= 255) {
          int v524 = 255;
        }
        v522[2] = v524 & ~(v524 >> 31);
        int v525 = (__int16)(v438[67] + (v456 >> 1));
        if (v525 >= 255) {
          int v525 = 255;
        }
        v522[3] = v525 & ~(v525 >> 31);
        int v526 = (__int16)(v438[68] + (v462 >> 1));
        if (v526 >= 255) {
          int v526 = 255;
        }
        v522[4] = v526 & ~(v526 >> 31);
        int v527 = (__int16)(v438[69] + (v464 >> 1));
        if (v527 >= 255) {
          int v527 = 255;
        }
        v522[5] = v527 & ~(v527 >> 31);
        int v528 = (__int16)(v438[70] + (v466 >> 1));
        if (v528 >= 255) {
          int v528 = 255;
        }
        v522[6] = v528 & ~(v528 >> 31);
        unsigned int v529 = v518 >> 2;
        uint64_t v36 = v1164;
        unsigned int v530 = v451 + 2 * v1143 + v1144 + 2;
        unsigned int v531 = (v507 >> 2) + 2 * v529 + (v530 >> 2) + 2;
        int v532 = (__int16)(v438[71] + (v468 >> 1));
        if (v532 >= 255) {
          int v532 = 255;
        }
        v522[7] = v532 & ~(v532 >> 31);
        int v533 = (__int16)(v438[80] + (v531 >> 2));
        if (v533 >= 255) {
          int v533 = 255;
        }
        v534 = &v63[v1184];
        v63[v1184] = v533 & ~(v533 >> 31);
        int v535 = (__int16)(v438[81] + (v508 >> 2));
        if (v535 >= 255) {
          int v535 = 255;
        }
        v534[1] = v535 & ~(v535 >> 31);
        int v536 = (__int16)(v438[82] + (v477 >> 2));
        if (v536 >= 255) {
          int v536 = 255;
        }
        v534[2] = v536 & ~(v536 >> 31);
        int v537 = (__int16)(v438[83] + (v460 >> 2));
        if (v537 >= 255) {
          int v537 = 255;
        }
        v534[3] = v537 & ~(v537 >> 31);
        int v538 = (__int16)(v438[84] + (v458 >> 2));
        if (v538 >= 255) {
          int v538 = 255;
        }
        v534[4] = v538 & ~(v538 >> 31);
        int v539 = (__int16)(v438[85] + (v463 >> 2));
        if (v539 >= 255) {
          int v539 = 255;
        }
        v534[5] = v539 & ~(v539 >> 31);
        int v540 = (__int16)(v438[86] + (v473 >> 2));
        if (v540 >= 255) {
          int v540 = 255;
        }
        v534[6] = v540 & ~(v540 >> 31);
        LOWORD(v541) = v438[87] + (v474 >> 2);
        uint64_t v38 = v1155;
        int v541 = (__int16)v541;
        if ((__int16)v541 >= 255) {
          int v541 = 255;
        }
        v534[7] = v541 & ~(v541 >> 31);
        unsigned int v542 = v530 >> 2;
        unsigned int v543 = v1143 + 2 * v1144 + v1146 + 2;
        int v544 = (__int16)(v438[96] + ((v529 + 2 * v542 + (v543 >> 2) + 2) >> 2));
        if (v544 >= 255) {
          int v544 = 255;
        }
        v545 = &v63[v1181];
        v63[v1181] = v544 & ~(v544 >> 31);
        int v546 = (__int16)(v438[97] + (v519 >> 2));
        if (v546 >= 255) {
          int v546 = 255;
        }
        v545[1] = v546 & ~(v546 >> 31);
        int v547 = (__int16)(v438[98] + (result >> 2));
        if (v547 >= 255) {
          int v547 = 255;
        }
        v545[2] = v547 & ~(v547 >> 31);
        int v548 = (__int16)(v438[99] + (v455 >> 1));
        if (v548 >= 255) {
          int v548 = 255;
        }
        v545[3] = v548 & ~(v548 >> 31);
        uint64_t v37 = 7 * v1157;
        int v549 = (__int16)(v438[100] + (v456 >> 1));
        if (v549 >= 255) {
          int v549 = 255;
        }
        v545[4] = v549 & ~(v549 >> 31);
        LOWORD(v550) = v438[101] + (v462 >> 1);
        uint64_t v20 = v1153;
        int v550 = (__int16)v550;
        if ((__int16)v550 >= 255) {
          int v550 = 255;
        }
        v545[5] = v550 & ~(v550 >> 31);
        LOWORD(v551) = v438[102] + (v464 >> 1);
        unint64_t v44 = v1177;
        int v551 = (__int16)v551;
        if ((__int16)v551 >= 255) {
          int v551 = 255;
        }
        v545[6] = v551 & ~(v551 >> 31);
        int v552 = (__int16)(v438[103] + (v466 >> 1));
        if (v552 >= 255) {
          int v552 = 255;
        }
        v545[7] = v552 & ~(v552 >> 31);
        unsigned int v553 = v543 >> 2;
        uint64_t v43 = 5 * v1157;
        int v554 = (__int16)(v438[112] + ((v542 + 2 * v553 + ((v1144 + 2 * v1146 + v1148 + 2) >> 2) + 2) >> 2));
        if (v554 >= 255) {
          int v554 = 255;
        }
        v555 = &v63[v1158];
        v63[v1158] = v554 & ~(v554 >> 31);
        int v556 = (__int16)(v438[113] + (v531 >> 2));
        if (v556 >= 255) {
          int v556 = 255;
        }
        v555[1] = v556 & ~(v556 >> 31);
        int v557 = (__int16)(v438[114] + (v508 >> 2));
        if (v557 >= 255) {
          int v557 = 255;
        }
        v555[2] = v557 & ~(v557 >> 31);
        int v558 = (__int16)(v438[115] + (v477 >> 2));
        if (v558 >= 255) {
          int v558 = 255;
        }
        v555[3] = v558 & ~(v558 >> 31);
        int v559 = (__int16)(v438[116] + (v460 >> 2));
        if (v559 >= 255) {
          int v559 = 255;
        }
        v555[4] = v559 & ~(v559 >> 31);
        LOWORD(v560) = v438[117] + (v458 >> 2);
        uint64_t v40 = 4 * v1157;
        int v560 = (__int16)v560;
        if ((__int16)v560 >= 255) {
          int v560 = 255;
        }
        v555[5] = v560 & ~(v560 >> 31);
        LOWORD(v561) = v438[118] + (v463 >> 2);
        long long v39 = v1160;
        unint64_t v7 = v1151;
        int v561 = (__int16)v561;
        if ((__int16)v561 >= 255) {
          int v561 = 255;
        }
        v555[6] = v561 & ~(v561 >> 31);
        signed __int32 v272 = (unsigned __int16)v438[119] + (v473 >> 2);
        goto LABEL_1250;
      case 6u:
        v293 = (_WORD *)(a2 + 2 * *v39);
        int v562 = v63[-v1157 - v59];
        int v563 = v63[-v1157];
        int v564 = v63[-v1157 + 1];
        int v565 = v63[-v1157 + 2];
        int v566 = v63[-v1157 + 3];
        int v567 = v63[-v1157 + 4];
        uint64_t v568 = v37;
        int v569 = v63[-v1157 + 5];
        int v570 = v63[-v1157 + 6];
        uint64_t v1165 = v36;
        unsigned int v571 = (v564 + 2 + v562 + 2 * v563) >> 2;
        int v572 = v563 + 2;
        unsigned int v573 = (v563 + 2 + 2 * v564 + v565) >> 2;
        unsigned int v574 = (v564 + 2 + 2 * v565 + v566) >> 2;
        unint64_t v1178 = v44;
        unsigned int v575 = (v565 + 2 * v566 + v567 + 2) >> 2;
        unsigned int v576 = (v566 + 2 * v567 + v569 + 2) >> 2;
        unsigned int v1169 = v33;
        unsigned int v577 = v567 + 2 * v569 + v570 + 2;
        unsigned int v578 = v569 + 2 * v570 + v63[-v1157 + 7] + 2;
        int v579 = *(v63 - 1);
        v580 = v38;
        int v581 = v63[v1157 - 1];
        v1161 = v39;
        int v582 = v63[v1174 - 1];
        int v583 = v63[v1183 - 1];
        int v584 = v581 + 2;
        unsigned int v585 = v581 + 2 + v63[-(v59 * v1157) - 1] + 2 * v579;
        int v586 = v579 + 2 * v581;
        unsigned int v587 = v572 + 2 * v562 + v579;
        unsigned int v588 = v571 + 2;
        unsigned int v589 = v571 + 2 + 2 * v573 + v574;
        int v590 = v63[v1182 - 1];
        v573 += 2;
        unsigned int v591 = v573 + 2 * v571;
        unsigned int v592 = v573 + 2 * v574 + v575;
        int v593 = v63[v1184 - 1];
        unsigned int v594 = v574 + 2 * v575 + v576;
        int v595 = v63[v1181 - 1];
        int v596 = v63[v568 - 1];
        int v597 = v575 + 2 * v576 + (v577 >> 2);
        unsigned int v598 = v587 >> 2;
        unsigned int v599 = v588 + 2 * (v587 >> 2) + (v585 >> 2);
        unsigned int v600 = v585 >> 2;
        unsigned int v601 = v576 + 2 * (v577 >> 2);
        int v602 = (v585 >> 2) + 1;
        unsigned int v603 = v591 + (v587 >> 2);
        uint64_t v38 = v580;
        unsigned int v604 = v602 + (v587 >> 2);
        unsigned int v605 = v594 + 2;
        unsigned int v606 = v601 + (v578 >> 2);
        int v607 = (__int16)(*v293 + (v604 >> 1));
        if (v607 >= 255) {
          int v607 = 255;
        }
        *char v63 = v607 & ~(v607 >> 31);
        int v608 = (__int16)(v293[1] + (v599 >> 2));
        if (v608 >= 255) {
          int v608 = 255;
        }
        v63[1] = v608 & ~(v608 >> 31);
        int v609 = (__int16)(v293[2] + (v603 >> 2));
        if (v609 >= 255) {
          int v609 = 255;
        }
        v63[2] = v609 & ~(v609 >> 31);
        int v610 = (__int16)(v293[3] + (v589 >> 2));
        if (v610 >= 255) {
          int v610 = 255;
        }
        v63[3] = v610 & ~(v610 >> 31);
        int v611 = (__int16)(v293[4] + (v592 >> 2));
        if (v611 >= 255) {
          int v611 = 255;
        }
        v63[4] = v611 & ~(v611 >> 31);
        int v612 = (__int16)(v293[5] + (v605 >> 2));
        if (v612 >= 255) {
          int v612 = 255;
        }
        v63[5] = v612 & ~(v612 >> 31);
        unsigned int v613 = v586 + v582 + 2;
        unsigned int v614 = v602 + (v613 >> 2);
        unsigned int v615 = v598 + 2 * v600 + (v613 >> 2) + 2;
        unsigned int v616 = v606 + 2;
        int v617 = (__int16)(v293[6] + ((v597 + 2) >> 2));
        if ((__int16)v617 >= 255) {
          int v617 = 255;
        }
        v63[6] = v617 & ~(v617 >> 31);
        int v618 = (__int16)(v293[7] + (v616 >> 2));
        if (v618 >= 255) {
          int v618 = 255;
        }
        v63[7] = v618 & ~(v618 >> 31);
        int v619 = (__int16)(v293[16] + (v614 >> 1));
        if (v619 >= 255) {
          int v619 = 255;
        }
        v620 = &v63[v1157];
        unsigned char *v620 = v619 & ~(v619 >> 31);
        int v621 = (__int16)(v293[17] + (v615 >> 2));
        if (v621 >= 255) {
          int v621 = 255;
        }
        v620[1] = v621 & ~(v621 >> 31);
        int v622 = (__int16)(v293[18] + (v604 >> 1));
        if (v622 >= 255) {
          int v622 = 255;
        }
        v620[2] = v622 & ~(v622 >> 31);
        int v623 = (__int16)(v293[19] + (v599 >> 2));
        if (v623 >= 255) {
          int v623 = 255;
        }
        v620[3] = v623 & ~(v623 >> 31);
        int v624 = (__int16)(v293[20] + (v603 >> 2));
        if (v624 >= 255) {
          int v624 = 255;
        }
        v620[4] = v624 & ~(v624 >> 31);
        int v625 = (__int16)(v293[21] + (v589 >> 2));
        if (v625 >= 255) {
          int v625 = 255;
        }
        v620[5] = v625 & ~(v625 >> 31);
        unsigned int v626 = v613 >> 2;
        unsigned int v627 = v584 + 2 * v582 + v583;
        int v628 = (__int16)(v293[22] + (v592 >> 2));
        if (v628 >= 255) {
          int v628 = 255;
        }
        v620[6] = v628 & ~(v628 >> 31);
        unsigned int v629 = v626 + (v627 >> 2) + 1;
        unsigned int v630 = v600 + 2 * v626 + (v627 >> 2) + 2;
        int v631 = (__int16)(v293[23] + (v605 >> 2));
        if (v631 >= 255) {
          int v631 = 255;
        }
        v620[7] = v631 & ~(v631 >> 31);
        uint64_t v36 = v1165;
        int v632 = (__int16)(v293[32] + (v629 >> 1));
        if (v632 >= 255) {
          int v632 = 255;
        }
        v633 = &v63[v1174];
        unint64_t v7 = v1151;
        v63[v1174] = v632 & ~(v632 >> 31);
        int v634 = (__int16)(v293[33] + (v630 >> 2));
        if (v634 >= 255) {
          int v634 = 255;
        }
        v633[1] = v634 & ~(v634 >> 31);
        int v635 = (__int16)(v293[34] + (v614 >> 1));
        if (v635 >= 255) {
          int v635 = 255;
        }
        v633[2] = v635 & ~(v635 >> 31);
        int v636 = (__int16)(v293[35] + (v615 >> 2));
        if (v636 >= 255) {
          int v636 = 255;
        }
        v633[3] = v636 & ~(v636 >> 31);
        int v637 = (__int16)(v293[36] + (v604 >> 1));
        if (v637 >= 255) {
          int v637 = 255;
        }
        v633[4] = v637 & ~(v637 >> 31);
        int v638 = (__int16)(v293[37] + (v599 >> 2));
        if (v638 >= 255) {
          int v638 = 255;
        }
        v633[5] = v638 & ~(v638 >> 31);
        unsigned int v639 = v627 >> 2;
        uint64_t v40 = 4 * v1157;
        int v640 = v582 + 2 * v583;
        long long v39 = v1161;
        unsigned int v641 = v640 + v590 + 2;
        int v642 = (__int16)(v293[38] + (v603 >> 2));
        if (v642 >= 255) {
          int v642 = 255;
        }
        v633[6] = v642 & ~(v642 >> 31);
        unsigned int v643 = v639 + (v641 >> 2) + 1;
        unsigned int v644 = v626 + 2 * v639 + (v641 >> 2) + 2;
        int v645 = (__int16)(v293[39] + (v589 >> 2));
        if (v645 >= 255) {
          int v645 = 255;
        }
        v633[7] = v645 & ~(v645 >> 31);
        int v646 = (__int16)(v293[48] + (v643 >> 1));
        if (v646 >= 255) {
          int v646 = 255;
        }
        v647 = &v63[v1183];
        v63[v1183] = v646 & ~(v646 >> 31);
        int v648 = (__int16)(v293[49] + (v644 >> 2));
        if (v648 >= 255) {
          int v648 = 255;
        }
        v647[1] = v648 & ~(v648 >> 31);
        int v649 = (__int16)(v293[50] + (v629 >> 1));
        if (v649 >= 255) {
          int v649 = 255;
        }
        v647[2] = v649 & ~(v649 >> 31);
        int v650 = (__int16)(v293[51] + (v630 >> 2));
        if (v650 >= 255) {
          int v650 = 255;
        }
        v647[3] = v650 & ~(v650 >> 31);
        int v651 = (__int16)(v293[52] + (v614 >> 1));
        if (v651 >= 255) {
          int v651 = 255;
        }
        v647[4] = v651 & ~(v651 >> 31);
        int v652 = (__int16)(v293[53] + (v615 >> 2));
        if (v652 >= 255) {
          int v652 = 255;
        }
        v647[5] = v652 & ~(v652 >> 31);
        int v653 = (unsigned __int16)v293[54] + (v604 >> 1);
        unsigned int v654 = v641 >> 2;
        uint64_t v33 = v1169;
        uint64_t v34 = v1152;
        unsigned int v655 = v583 + 2 * v590 + v593 + 2;
        int v656 = (__int16)v653;
        if ((__int16)v653 >= 255) {
          int v656 = 255;
        }
        v647[6] = v656 & ~(v656 >> 31);
        LOWORD(v658) = v293[55] + (v599 >> 2);
        unsigned int v657 = v654 + (v655 >> 2) + 1;
        unsigned int v335 = v639 + 2 * v654 + (v655 >> 2) + 2;
        int v658 = (__int16)v658;
        if ((__int16)v658 >= 255) {
          int v658 = 255;
        }
        v647[7] = v658 & ~(v658 >> 31);
        int v659 = (__int16)(v293[64] + (v657 >> 1));
        if (v659 >= 255) {
          int v659 = 255;
        }
        v660 = &v63[v1182];
        v63[v1182] = v659 & ~(v659 >> 31);
        int v661 = (__int16)(v293[65] + (v335 >> 2));
        if (v661 >= 255) {
          int v661 = 255;
        }
        v660[1] = v661 & ~(v661 >> 31);
        int v662 = (__int16)(v293[66] + (v643 >> 1));
        if (v662 >= 255) {
          int v662 = 255;
        }
        v660[2] = v662 & ~(v662 >> 31);
        int v663 = (__int16)(v293[67] + (v644 >> 2));
        if (v663 >= 255) {
          int v663 = 255;
        }
        v660[3] = v663 & ~(v663 >> 31);
        int v664 = (__int16)(v293[68] + (v629 >> 1));
        if (v664 >= 255) {
          int v664 = 255;
        }
        v660[4] = v664 & ~(v664 >> 31);
        int v665 = (__int16)(v293[69] + (v630 >> 2));
        if (v665 >= 255) {
          int v665 = 255;
        }
        v660[5] = v665 & ~(v665 >> 31);
        int v666 = (unsigned __int16)v293[70] + (v614 >> 1);
        unsigned int v667 = v655 >> 2;
        uint64_t v20 = v1153;
        unsigned int v668 = v590 + 2 * v593 + v595 + 2;
        int v669 = (__int16)v666;
        if ((__int16)v666 >= 255) {
          int v669 = 255;
        }
        v660[6] = v669 & ~(v669 >> 31);
        unsigned int v670 = v667 + (v668 >> 2) + 1;
        unsigned int v671 = v654 + 2 * v667 + (v668 >> 2) + 2;
        int v672 = (__int16)(v293[71] + (v615 >> 2));
        if (v672 >= 255) {
          int v672 = 255;
        }
        v660[7] = v672 & ~(v672 >> 31);
        int v673 = (__int16)(v293[80] + (v670 >> 1));
        if (v673 >= 255) {
          int v673 = 255;
        }
        v674 = &v63[v1184];
        v63[v1184] = v673 & ~(v673 >> 31);
        int v675 = (__int16)(v293[81] + (v671 >> 2));
        if (v675 >= 255) {
          int v675 = 255;
        }
        v674[1] = v675 & ~(v675 >> 31);
        int v676 = (__int16)(v293[82] + (v657 >> 1));
        if (v676 >= 255) {
          int v676 = 255;
        }
        v674[2] = v676 & ~(v676 >> 31);
        int v677 = (__int16)(v293[83] + (v335 >> 2));
        if (v677 >= 255) {
          int v677 = 255;
        }
        v674[3] = v677 & ~(v677 >> 31);
        int v678 = (__int16)(v293[84] + (v643 >> 1));
        if (v678 >= 255) {
          int v678 = 255;
        }
        v674[4] = v678 & ~(v678 >> 31);
        int v679 = (__int16)(v293[85] + (v644 >> 2));
        if (v679 >= 255) {
          int v679 = 255;
        }
        v674[5] = v679 & ~(v679 >> 31);
        unsigned int v680 = v668 >> 2;
        unsigned int v681 = v593 + 2 * v595 + v596 + 2;
        int v682 = (__int16)(v293[86] + (v629 >> 1));
        if (v682 >= 255) {
          int v682 = 255;
        }
        v674[6] = v682 & ~(v682 >> 31);
        unsigned int v683 = v680 + (v681 >> 2) + 1;
        unsigned int v684 = v667 + 2 * v680;
        uint64_t v37 = 7 * v1157;
        unsigned int v685 = v684 + (v681 >> 2) + 2;
        int v686 = (__int16)(v293[87] + (v630 >> 2));
        if (v686 >= 255) {
          int v686 = 255;
        }
        v674[7] = v686 & ~(v686 >> 31);
        uint64_t v41 = 6 * v1157;
        int v687 = (__int16)(v293[96] + (v683 >> 1));
        if (v687 >= 255) {
          int v687 = 255;
        }
        v688 = &v63[v1181];
        v63[v1181] = v687 & ~(v687 >> 31);
        int v689 = (__int16)(v293[97] + (v685 >> 2));
        if (v689 >= 255) {
          int v689 = 255;
        }
        v688[1] = v689 & ~(v689 >> 31);
        int v690 = (__int16)(v293[98] + (v670 >> 1));
        if (v690 >= 255) {
          int v690 = 255;
        }
        v688[2] = v690 & ~(v690 >> 31);
        int v691 = (__int16)(v293[99] + (v671 >> 2));
        if (v691 >= 255) {
          int v691 = 255;
        }
        v688[3] = v691 & ~(v691 >> 31);
        int v692 = (__int16)(v293[100] + (v657 >> 1));
        if (v692 >= 255) {
          int v692 = 255;
        }
        v688[4] = v692 & ~(v692 >> 31);
        int v693 = (__int16)(v293[101] + (v335 >> 2));
        if (v693 >= 255) {
          int v693 = 255;
        }
        v688[5] = v693 & ~(v693 >> 31);
        int v694 = (__int16)(v293[102] + (v643 >> 1));
        if (v694 >= 255) {
          int v694 = 255;
        }
        v688[6] = v694 & ~(v694 >> 31);
        uint64_t result = (unsigned __int16)v293[103];
        int v695 = (__int16)(result + (v644 >> 2));
        if (v695 >= 255) {
          int v695 = 255;
        }
        v688[7] = v695 & ~(v695 >> 31);
        unint64_t v44 = v1178;
        unsigned int v696 = v595 + v596 + 2 * v596;
        unsigned int v697 = v681 >> 2;
        uint64_t v43 = 5 * v1157;
        v696 += 2;
        unsigned int v698 = v680 + 2 * v697;
        unsigned int v699 = v697 + (v696 >> 2) + 1;
        unsigned int v700 = v698 + (v696 >> 2) + 2;
        int v701 = (__int16)(v293[112] + (v699 >> 1));
        if (v701 >= 255) {
          int v701 = 255;
        }
        v702 = &v63[v1158];
        v63[v1158] = v701 & ~(v701 >> 31);
        int v703 = (__int16)(v293[113] + (v700 >> 2));
        if (v703 >= 255) {
          int v703 = 255;
        }
        v702[1] = v703 & ~(v703 >> 31);
        int v704 = (__int16)(v293[114] + (v683 >> 1));
        if (v704 >= 255) {
          int v704 = 255;
        }
        v702[2] = v704 & ~(v704 >> 31);
        int v705 = (__int16)(v293[115] + (v685 >> 2));
        if (v705 >= 255) {
          int v705 = 255;
        }
        v702[3] = v705 & ~(v705 >> 31);
        int v706 = (__int16)(v293[116] + (v670 >> 1));
        if (v706 >= 255) {
          int v706 = 255;
        }
        v702[4] = v706 & ~(v706 >> 31);
        int v707 = (__int16)(v293[117] + (v671 >> 2));
        if (v707 >= 255) {
          int v707 = 255;
        }
        v702[5] = v707 & ~(v707 >> 31);
        int v708 = (__int16)(v293[118] + (v657 >> 1));
        if (v708 >= 255) {
          int v708 = 255;
        }
        v702[6] = v708 & ~(v708 >> 31);
LABEL_730:
        signed __int32 v272 = (unsigned __int16)v293[119] + (v335 >> 2);
        goto LABEL_1250;
      case 7u:
        unint64_t v1179 = v44;
        unsigned int v1170 = v33;
        v709 = &v63[-v1157];
        int v710 = v709[-v59];
        v711 = (unsigned __int16 *)(a2 + 2 * *v39);
        int v712 = *v709;
        int v713 = v709[1];
        int v714 = v709[2];
        int v715 = v709[3];
        int v716 = v709[4];
        int v717 = v709[5];
        int v718 = v709[6];
        int v719 = v709[7];
        v1162 = v39;
        uint64_t v1166 = v36;
        v1156 = v38;
        if (BYTE2(v58))
        {
          int v720 = v709[8];
          int v721 = v709[9];
          int v722 = v709[10];
          int v723 = v709[11];
          int v724 = v709[12];
          int v1149 = v709[13];
        }
        else
        {
          int v720 = v63[-v1157 + 7];
          int v721 = v720;
          int v722 = v720;
          int v723 = v720;
          int v724 = v720;
          int v1149 = v720;
        }
        unsigned int v951 = v713 + 2 + v710 + 2 * v712;
        unsigned int v952 = v714 + 2 + v712 + 2 * v713;
        unsigned int v953 = (v713 + 2 + 2 * v714 + v715) >> 2;
        unsigned int v954 = (v714 + 2 + 2 * v715 + v716) >> 2;
        unsigned int v955 = (v715 + 2 * v716 + v717 + 2) >> 2;
        unsigned int v956 = (v716 + 2 * v717 + v718 + 2) >> 2;
        unsigned int v957 = (v717 + 2 * v718 + v719 + 2) >> 2;
        unsigned int v958 = v718 + 2 * v719 + v720 + 2;
        unsigned int v959 = v953 + 2 + (v951 >> 2) + 2 * (v952 >> 2);
        int v960 = (v952 >> 2) + 1;
        unsigned int v961 = v960 + v953;
        unsigned int v962 = v954 + 2 + (v952 >> 2) + 2 * v953;
        unsigned int v963 = v953 + v954;
        unsigned int v964 = v958 >> 2;
        unsigned int v965 = v953 + 2 + 2 * v954 + v955;
        unsigned int v966 = v954 + v955;
        unsigned int v967 = *v711 + ((v960 + (v951 >> 2)) >> 1);
        unsigned int v968 = (v719 + 2 * v720 + v721 + 2) >> 2;
        unsigned int v969 = v720 + 2 * v721 + v722 + 2;
        unsigned int v970 = v954 + 2 + 2 * v955 + v956;
        unsigned int v971 = v955 + v956;
        unsigned int v972 = v955 + 2 * v956 + v957 + 2;
        unsigned int v973 = v956 + v957;
        unsigned int v974 = v956 + 2 * v957 + (v958 >> 2) + 2;
        unsigned int v975 = v957 + (v958 >> 2);
        unsigned int v976 = v957 + 2 * (v958 >> 2) + v968 + 2;
        unsigned int v977 = (v958 >> 2) + 2 * v968 + (v969 >> 2) + 2;
        unsigned int v978 = v963 + 1;
        unsigned int v979 = v966 + 1;
        unsigned int v980 = v971 + 1;
        unsigned int v981 = v973 + 1;
        unsigned int v982 = v975 + 1;
        unsigned int v983 = v964 + v968 + 1;
        int v984 = (__int16)v967;
        if ((__int16)v967 >= 255) {
          int v984 = 255;
        }
        *char v63 = v984 & ~(v984 >> 31);
        int v985 = (__int16)(v711[1] + (v961 >> 1));
        if (v985 >= 255) {
          int v985 = 255;
        }
        v63[1] = v985 & ~(v985 >> 31);
        int v986 = (__int16)(v711[2] + (v978 >> 1));
        if (v986 >= 255) {
          int v986 = 255;
        }
        v63[2] = v986 & ~(v986 >> 31);
        int v987 = (__int16)(v711[3] + (v979 >> 1));
        if (v987 >= 255) {
          int v987 = 255;
        }
        v63[3] = v987 & ~(v987 >> 31);
        int v988 = (__int16)(v711[4] + (v980 >> 1));
        if (v988 >= 255) {
          int v988 = 255;
        }
        v63[4] = v988 & ~(v988 >> 31);
        int v989 = (__int16)(v711[5] + (v981 >> 1));
        if (v989 >= 255) {
          int v989 = 255;
        }
        v63[5] = v989 & ~(v989 >> 31);
        int v990 = (__int16)(v711[6] + (v982 >> 1));
        if (v990 >= 255) {
          int v990 = 255;
        }
        v63[6] = v990 & ~(v990 >> 31);
        int v991 = (__int16)(v711[7] + (v983 >> 1));
        if (v991 >= 255) {
          int v991 = 255;
        }
        v63[7] = v991 & ~(v991 >> 31);
        int v992 = (__int16)(v711[16] + (v959 >> 2));
        if (v992 >= 255) {
          int v992 = 255;
        }
        v993 = &v63[v1157];
        unsigned char *v993 = v992 & ~(v992 >> 31);
        int v994 = (__int16)(v711[17] + (v962 >> 2));
        if (v994 >= 255) {
          int v994 = 255;
        }
        v993[1] = v994 & ~(v994 >> 31);
        int v995 = (__int16)(v711[18] + (v965 >> 2));
        if (v995 >= 255) {
          int v995 = 255;
        }
        v993[2] = v995 & ~(v995 >> 31);
        int v996 = (__int16)(v711[19] + (v970 >> 2));
        if (v996 >= 255) {
          int v996 = 255;
        }
        v993[3] = v996 & ~(v996 >> 31);
        int v997 = (__int16)(v711[20] + (v972 >> 2));
        if (v997 >= 255) {
          int v997 = 255;
        }
        v993[4] = v997 & ~(v997 >> 31);
        int v998 = (__int16)(v711[21] + (v974 >> 2));
        if (v998 >= 255) {
          int v998 = 255;
        }
        v993[5] = v998 & ~(v998 >> 31);
        int v999 = (__int16)(v711[22] + (v976 >> 2));
        if (v999 >= 255) {
          int v999 = 255;
        }
        v993[6] = v999 & ~(v999 >> 31);
        int v1000 = (__int16)(v711[23] + (v977 >> 2));
        if (v1000 >= 255) {
          int v1000 = 255;
        }
        v993[7] = v1000 & ~(v1000 >> 31);
        unsigned int v1001 = v968 + (v969 >> 2) + 1;
        int v1002 = (__int16)(v711[32] + (v961 >> 1));
        if (v1002 >= 255) {
          int v1002 = 255;
        }
        v1003 = &v63[v1174];
        v63[v1174] = v1002 & ~(v1002 >> 31);
        int v1004 = (__int16)(v711[33] + (v978 >> 1));
        if (v1004 >= 255) {
          int v1004 = 255;
        }
        v1003[1] = v1004 & ~(v1004 >> 31);
        int v1005 = (__int16)(v711[34] + (v979 >> 1));
        if (v1005 >= 255) {
          int v1005 = 255;
        }
        v1003[2] = v1005 & ~(v1005 >> 31);
        int v1006 = (__int16)(v711[35] + (v980 >> 1));
        if (v1006 >= 255) {
          int v1006 = 255;
        }
        v1003[3] = v1006 & ~(v1006 >> 31);
        int v1007 = (__int16)(v711[36] + (v981 >> 1));
        if (v1007 >= 255) {
          int v1007 = 255;
        }
        v1003[4] = v1007 & ~(v1007 >> 31);
        int v1008 = (__int16)(v711[37] + (v982 >> 1));
        if (v1008 >= 255) {
          int v1008 = 255;
        }
        v1003[5] = v1008 & ~(v1008 >> 31);
        int v1009 = (__int16)(v711[38] + (v983 >> 1));
        if (v1009 >= 255) {
          int v1009 = 255;
        }
        v1003[6] = v1009 & ~(v1009 >> 31);
        int v1010 = (__int16)(v711[39] + (v1001 >> 1));
        if (v1010 >= 255) {
          int v1010 = 255;
        }
        v1003[7] = v1010 & ~(v1010 >> 31);
        unsigned int v1011 = v969 >> 2;
        unsigned int v1012 = v721 + 2 * v722 + v723 + 2;
        unsigned int v1013 = v968 + 2 * v1011 + (v1012 >> 2) + 2;
        int v1014 = (__int16)(v711[48] + (v962 >> 2));
        if (v1014 >= 255) {
          int v1014 = 255;
        }
        v1015 = &v63[v1183];
        v63[v1183] = v1014 & ~(v1014 >> 31);
        int v1016 = (__int16)(v711[49] + (v965 >> 2));
        if (v1016 >= 255) {
          int v1016 = 255;
        }
        v1015[1] = v1016 & ~(v1016 >> 31);
        int v1017 = (__int16)(v711[50] + (v970 >> 2));
        if (v1017 >= 255) {
          int v1017 = 255;
        }
        v1015[2] = v1017 & ~(v1017 >> 31);
        int v1018 = (__int16)(v711[51] + (v972 >> 2));
        if (v1018 >= 255) {
          int v1018 = 255;
        }
        v1015[3] = v1018 & ~(v1018 >> 31);
        int v1019 = (__int16)(v711[52] + (v974 >> 2));
        if (v1019 >= 255) {
          int v1019 = 255;
        }
        v1015[4] = v1019 & ~(v1019 >> 31);
        int v1020 = (__int16)(v711[53] + (v976 >> 2));
        if (v1020 >= 255) {
          int v1020 = 255;
        }
        v1015[5] = v1020 & ~(v1020 >> 31);
        int v1021 = (__int16)(v711[54] + (v977 >> 2));
        if (v1021 >= 255) {
          int v1021 = 255;
        }
        v1015[6] = v1021 & ~(v1021 >> 31);
        int v1022 = (__int16)(v711[55] + (v1013 >> 2));
        if (v1022 >= 255) {
          int v1022 = 255;
        }
        v1015[7] = v1022 & ~(v1022 >> 31);
        unsigned int v1023 = v1011 + (v1012 >> 2) + 1;
        int v1024 = (__int16)(v711[64] + (v978 >> 1));
        if (v1024 >= 255) {
          int v1024 = 255;
        }
        uint64_t v40 = 4 * v1157;
        v1025 = &v63[v1182];
        v63[v1182] = v1024 & ~(v1024 >> 31);
        int v1026 = (__int16)(v711[65] + (v979 >> 1));
        if (v1026 >= 255) {
          int v1026 = 255;
        }
        v1025[1] = v1026 & ~(v1026 >> 31);
        int v1027 = (__int16)(v711[66] + (v980 >> 1));
        if (v1027 >= 255) {
          int v1027 = 255;
        }
        v1025[2] = v1027 & ~(v1027 >> 31);
        int v1028 = (__int16)(v711[67] + (v981 >> 1));
        if (v1028 >= 255) {
          int v1028 = 255;
        }
        v1025[3] = v1028 & ~(v1028 >> 31);
        int v1029 = (__int16)(v711[68] + (v982 >> 1));
        if (v1029 >= 255) {
          int v1029 = 255;
        }
        v1025[4] = v1029 & ~(v1029 >> 31);
        int v1030 = (__int16)(v711[69] + (v983 >> 1));
        if (v1030 >= 255) {
          int v1030 = 255;
        }
        v1025[5] = v1030 & ~(v1030 >> 31);
        int v1031 = (__int16)(v711[70] + (v1001 >> 1));
        if (v1031 >= 255) {
          int v1031 = 255;
        }
        v1025[6] = v1031 & ~(v1031 >> 31);
        int v1032 = (__int16)(v711[71] + (v1023 >> 1));
        if (v1032 >= 255) {
          int v1032 = 255;
        }
        v1025[7] = v1032 & ~(v1032 >> 31);
        unsigned int v1033 = v1012 >> 2;
        unsigned int v1034 = v722 + 2 * v723 + v724 + 2;
        unsigned int v1035 = v1011 + 2 * (v1012 >> 2) + (v1034 >> 2) + 2;
        int v1036 = (__int16)(v711[80] + (v965 >> 2));
        if (v1036 >= 255) {
          int v1036 = 255;
        }
        v1037 = &v63[v1184];
        v63[v1184] = v1036 & ~(v1036 >> 31);
        int v1038 = (__int16)(v711[81] + (v970 >> 2));
        if (v1038 >= 255) {
          int v1038 = 255;
        }
        v1037[1] = v1038 & ~(v1038 >> 31);
        int v1039 = (__int16)(v711[82] + (v972 >> 2));
        if (v1039 >= 255) {
          int v1039 = 255;
        }
        v1037[2] = v1039 & ~(v1039 >> 31);
        int v1040 = (__int16)(v711[83] + (v974 >> 2));
        if (v1040 >= 255) {
          int v1040 = 255;
        }
        v1037[3] = v1040 & ~(v1040 >> 31);
        int v1041 = (__int16)(v711[84] + (v976 >> 2));
        if (v1041 >= 255) {
          int v1041 = 255;
        }
        v1037[4] = v1041 & ~(v1041 >> 31);
        int v1042 = (__int16)(v711[85] + (v977 >> 2));
        if (v1042 >= 255) {
          int v1042 = 255;
        }
        v1037[5] = v1042 & ~(v1042 >> 31);
        int v1043 = (__int16)(v711[86] + (v1013 >> 2));
        if (v1043 >= 255) {
          int v1043 = 255;
        }
        v1037[6] = v1043 & ~(v1043 >> 31);
        int v1044 = (__int16)(v711[87] + (v1035 >> 2));
        if (v1044 >= 255) {
          int v1044 = 255;
        }
        v1037[7] = v1044 & ~(v1044 >> 31);
        int v1045 = (__int16)(v711[96] + (v979 >> 1));
        if (v1045 >= 255) {
          int v1045 = 255;
        }
        uint64_t v41 = 6 * v1157;
        v1046 = &v63[v1181];
        v63[v1181] = v1045 & ~(v1045 >> 31);
        int v1047 = (__int16)(v711[97] + (v980 >> 1));
        if (v1047 >= 255) {
          int v1047 = 255;
        }
        v1046[1] = v1047 & ~(v1047 >> 31);
        int v1048 = (__int16)(v711[98] + (v981 >> 1));
        if (v1048 >= 255) {
          int v1048 = 255;
        }
        v1046[2] = v1048 & ~(v1048 >> 31);
        int v1049 = (__int16)(v711[99] + (v982 >> 1));
        if (v1049 >= 255) {
          int v1049 = 255;
        }
        v1046[3] = v1049 & ~(v1049 >> 31);
        int v1050 = (__int16)(v711[100] + (v983 >> 1));
        if (v1050 >= 255) {
          int v1050 = 255;
        }
        v1046[4] = v1050 & ~(v1050 >> 31);
        int v1051 = (__int16)(v711[101] + (v1001 >> 1));
        if (v1051 >= 255) {
          int v1051 = 255;
        }
        v1046[5] = v1051 & ~(v1051 >> 31);
        int v1052 = (__int16)(v711[102] + (v1023 >> 1));
        if ((__int16)v1052 >= 255) {
          int v1052 = 255;
        }
        v1046[6] = v1052 & ~(v1052 >> 31);
        int v1053 = (__int16)(v711[103] + ((v1033 + (v1034 >> 2) + 1) >> 1));
        if (v1053 >= 255) {
          int v1053 = 255;
        }
        v1046[7] = v1053 & ~(v1053 >> 31);
        int v1054 = (__int16)(v711[112] + (v970 >> 2));
        if (v1054 >= 255) {
          int v1054 = 255;
        }
        uint64_t v37 = 7 * v1157;
        uint64_t result = (unint64_t)&v63[v1158];
        v63[v1158] = v1054 & ~(v1054 >> 31);
        int v1055 = (__int16)(v711[113] + (v972 >> 2));
        if (v1055 >= 255) {
          int v1055 = 255;
        }
        *(unsigned char *)(result + 1) = v1055 & ~(v1055 >> 31);
        int v1056 = (__int16)(v711[114] + (v974 >> 2));
        if (v1056 >= 255) {
          int v1056 = 255;
        }
        *(unsigned char *)(result + 2) = v1056 & ~(v1056 >> 31);
        int v1057 = (__int16)(v711[115] + (v976 >> 2));
        if (v1057 >= 255) {
          int v1057 = 255;
        }
        *(unsigned char *)(result + 3) = v1057 & ~(v1057 >> 31);
        int v1058 = (__int16)(v711[116] + (v977 >> 2));
        if (v1058 >= 255) {
          int v1058 = 255;
        }
        *(unsigned char *)(result + 4) = v1058 & ~(v1058 >> 31);
        LOWORD(v1059) = v711[117] + (v1013 >> 2);
        uint64_t v43 = 5 * v1157;
        int v1059 = (__int16)v1059;
        if ((__int16)v1059 >= 255) {
          int v1059 = 255;
        }
        *(unsigned char *)(result + 5) = v1059 & ~(v1059 >> 31);
        int v1060 = (__int16)(v711[118] + (v1035 >> 2));
        if (v1060 >= 255) {
          int v1060 = 255;
        }
        *(unsigned char *)(result + 6) = v1060 & ~(v1060 >> 31);
        signed __int32 v272 = v711[119] + ((v1033 + 2 * (v1034 >> 2) + ((v723 + 2 * v724 + v1149 + 2) >> 2) + 2) >> 2);
        unint64_t v7 = v1151;
        uint64_t v34 = v1152;
        uint64_t v20 = v1153;
        uint64_t v38 = v1156;
        uint64_t v33 = v1170;
        long long v39 = v1162;
        uint64_t v36 = v1166;
        unint64_t v44 = v1179;
        goto LABEL_1250;
      case 8u:
        uint64_t v65 = (_WORD *)(a2 + 2 * *v39);
        int v725 = *(v63 - 1);
        int v726 = v63[-(v59 * v1157) - 1];
        int v727 = v63[v1157 - 1];
        int v728 = v63[v1174 - 1];
        int v729 = v63[v1183 - 1];
        int v730 = v63[v1182 - 1];
        int v731 = v63[v43 - 1];
        int v732 = v63[v41 - 1];
        int v733 = v63[v37 - 1];
        int v734 = v727 + 2;
        unsigned int v735 = v727 + 2 + v726 + 2 * v725;
        int v736 = v728 + 2;
        unsigned int v737 = v728 + 2 + v725 + 2 * v727;
        unsigned int v738 = (v734 + 2 * v728 + v729) >> 2;
        unsigned int v739 = (v736 + 2 * v729 + v730) >> 2;
        v740 = v20;
        uint64_t v741 = v33;
        uint64_t v742 = v37;
        v743 = v34;
        unint64_t v744 = v44;
        int v745 = (v737 >> 2) + 1;
        unsigned int v746 = v745 + (v735 >> 2);
        unsigned int v747 = v745 + v738;
        unsigned int v748 = v738 + 2 + (v735 >> 2) + 2 * (v737 >> 2);
        unsigned int v749 = v739 + 2 + (v737 >> 2) + 2 * v738;
        int v750 = (__int16)(*v65 + (v746 >> 1));
        if (v750 >= 255) {
          int v750 = 255;
        }
        *char v63 = v750 & ~(v750 >> 31);
        unsigned int v751 = v729 + 2 * v730 + v731 + 2;
        unsigned int v752 = v738 + 2 + 2 * v739 + (v751 >> 2);
        unsigned int v753 = v751 >> 2;
        unsigned int v754 = v730 + 2 * v731 + v732 + 2;
        unsigned int v755 = v738 + v739 + 1;
        unsigned int v756 = v739 + (v751 >> 2) + 1;
        uint64_t v41 = 6 * v1157;
        unsigned int v757 = v739 + 2 + 2 * v753 + (v754 >> 2);
        int v758 = (__int16)(v65[1] + (v748 >> 2));
        if (v758 >= 255) {
          int v758 = 255;
        }
        v63[1] = v758 & ~(v758 >> 31);
        int v759 = (__int16)(v65[2] + (v747 >> 1));
        if (v759 >= 255) {
          int v759 = 255;
        }
        v63[2] = v759 & ~(v759 >> 31);
        int v760 = (__int16)(v65[3] + (v749 >> 2));
        if (v760 >= 255) {
          int v760 = 255;
        }
        v63[3] = v760 & ~(v760 >> 31);
        int v761 = (__int16)(v65[4] + (v755 >> 1));
        if (v761 >= 255) {
          int v761 = 255;
        }
        v63[4] = v761 & ~(v761 >> 31);
        int v762 = (__int16)(v65[5] + (v752 >> 2));
        if (v762 >= 255) {
          int v762 = 255;
        }
        v63[5] = v762 & ~(v762 >> 31);
        int v763 = (__int16)(v65[6] + (v756 >> 1));
        if (v763 >= 255) {
          int v763 = 255;
        }
        v63[6] = v763 & ~(v763 >> 31);
        int v764 = (__int16)(v65[7] + (v757 >> 2));
        if (v764 >= 255) {
          int v764 = 255;
        }
        v63[7] = v764 & ~(v764 >> 31);
        int v765 = (__int16)(v65[16] + (v747 >> 1));
        if (v765 >= 255) {
          int v765 = 255;
        }
        v766 = &v63[v1157];
        unsigned char *v766 = v765 & ~(v765 >> 31);
        LOWORD(v771) = v65[17] + (v749 >> 2);
        uint64_t result = v754 >> 2;
        unsigned int v767 = v731 + 2 * v732 + v733 + 2;
        unsigned int v768 = v753 + (v754 >> 2) + 1;
        unsigned int v769 = v753 + 2 * result;
        unint64_t v44 = v744;
        uint64_t v34 = v743;
        uint64_t v37 = v742;
        uint64_t v33 = v741;
        uint64_t v20 = v740;
        unsigned int v770 = v769 + (v767 >> 2) + 2;
        int v771 = (__int16)v771;
        if ((__int16)v771 >= 255) {
          int v771 = 255;
        }
        v766[1] = v771 & ~(v771 >> 31);
        int v772 = (__int16)(v65[18] + (v755 >> 1));
        if (v772 >= 255) {
          int v772 = 255;
        }
        v766[2] = v772 & ~(v772 >> 31);
        int v773 = (__int16)(v65[19] + (v752 >> 2));
        if (v773 >= 255) {
          int v773 = 255;
        }
        v766[3] = v773 & ~(v773 >> 31);
        int v774 = (__int16)(v65[20] + (v756 >> 1));
        if (v774 >= 255) {
          int v774 = 255;
        }
        v766[4] = v774 & ~(v774 >> 31);
        int v775 = (__int16)(v65[21] + (v757 >> 2));
        if (v775 >= 255) {
          int v775 = 255;
        }
        v766[5] = v775 & ~(v775 >> 31);
        int v776 = (__int16)(v65[22] + (v768 >> 1));
        if (v776 >= 255) {
          int v776 = 255;
        }
        v766[6] = v776 & ~(v776 >> 31);
        int v777 = (__int16)(v65[23] + (v770 >> 2));
        if (v777 >= 255) {
          int v777 = 255;
        }
        v766[7] = v777 & ~(v777 >> 31);
        uint64_t v43 = 5 * v1157;
        int v778 = v732 + v733 + 2 * v733;
        int v779 = (__int16)(v65[32] + (v755 >> 1));
        if (v779 >= 255) {
          int v779 = 255;
        }
        v780 = &v63[v1174];
        uint64_t v40 = 4 * v1157;
        v63[v1174] = v779 & ~(v779 >> 31);
        LOWORD(v784) = v65[33] + (v752 >> 2);
        unsigned int v781 = v767 >> 2;
        unsigned int v89 = v778 + 2;
        unsigned int v782 = result + (v767 >> 2) + 1;
        unsigned int v783 = result + 2 * (v767 >> 2) + (v89 >> 2) + 2;
        int v784 = (__int16)v784;
        if ((__int16)v784 >= 255) {
          int v784 = 255;
        }
        v780[1] = v784 & ~(v784 >> 31);
        int v785 = (__int16)(v65[34] + (v756 >> 1));
        if (v785 >= 255) {
          int v785 = 255;
        }
        v780[2] = v785 & ~(v785 >> 31);
        int v786 = (__int16)(v65[35] + (v757 >> 2));
        if (v786 >= 255) {
          int v786 = 255;
        }
        v780[3] = v786 & ~(v786 >> 31);
        int v787 = (__int16)(v65[36] + (v768 >> 1));
        if (v787 >= 255) {
          int v787 = 255;
        }
        v780[4] = v787 & ~(v787 >> 31);
        int v788 = (__int16)(v65[37] + (v770 >> 2));
        if (v788 >= 255) {
          int v788 = 255;
        }
        v780[5] = v788 & ~(v788 >> 31);
        int v789 = (__int16)(v65[38] + (v782 >> 1));
        if (v789 >= 255) {
          int v789 = 255;
        }
        v780[6] = v789 & ~(v789 >> 31);
        int v790 = (__int16)(v65[39] + (v783 >> 2));
        if (v790 >= 255) {
          int v790 = 255;
        }
        v780[7] = v790 & ~(v790 >> 31);
        int v791 = (__int16)(v65[48] + (v756 >> 1));
        if (v791 >= 255) {
          int v791 = 255;
        }
        v792 = &v63[v1183];
        v63[v1183] = v791 & ~(v791 >> 31);
        LOWORD(v797) = v65[49] + (v757 >> 2);
        unsigned int v793 = v781 + (v89 >> 2);
        unsigned int v794 = v793 + 2 * (v89 >> 2);
        unsigned int v795 = v793 + 1;
        unsigned int v796 = v794 + 2;
        int v797 = (__int16)v797;
        if ((__int16)v797 >= 255) {
          int v797 = 255;
        }
        v792[1] = v797 & ~(v797 >> 31);
        int v798 = (__int16)(v65[50] + (v768 >> 1));
        if (v798 >= 255) {
          int v798 = 255;
        }
        v792[2] = v798 & ~(v798 >> 31);
        int v799 = (__int16)(v65[51] + (v770 >> 2));
        if (v799 >= 255) {
          int v799 = 255;
        }
        v792[3] = v799 & ~(v799 >> 31);
        int v800 = (__int16)(v65[52] + (v782 >> 1));
        if (v800 >= 255) {
          int v800 = 255;
        }
        v792[4] = v800 & ~(v800 >> 31);
        int v801 = (__int16)(v65[53] + (v783 >> 2));
        if (v801 >= 255) {
          int v801 = 255;
        }
        v792[5] = v801 & ~(v801 >> 31);
        int v802 = (__int16)(v65[54] + (v795 >> 1));
        if (v802 >= 255) {
          int v802 = 255;
        }
        v792[6] = v802 & ~(v802 >> 31);
        int v803 = (__int16)(v65[55] + (v796 >> 2));
        if (v803 >= 255) {
          int v803 = 255;
        }
        v792[7] = v803 & ~(v803 >> 31);
        int v804 = (__int16)(v65[64] + (v768 >> 1));
        if (v804 >= 255) {
          int v804 = 255;
        }
        v805 = &v63[v1182];
        v63[v1182] = v804 & ~(v804 >> 31);
        int v806 = (__int16)(v65[65] + (v770 >> 2));
        if (v806 >= 255) {
          int v806 = 255;
        }
        v805[1] = v806 & ~(v806 >> 31);
        int v807 = (__int16)(v65[66] + (v782 >> 1));
        if (v807 >= 255) {
          int v807 = 255;
        }
        v805[2] = v807 & ~(v807 >> 31);
        int v808 = (__int16)(v65[67] + (v783 >> 2));
        if (v808 >= 255) {
          int v808 = 255;
        }
        v805[3] = v808 & ~(v808 >> 31);
        int v809 = (__int16)(v65[68] + (v795 >> 1));
        if (v809 >= 255) {
          int v809 = 255;
        }
        v805[4] = v809 & ~(v809 >> 31);
        int v810 = (__int16)(v65[69] + (v796 >> 2));
        if (v810 >= 255) {
          int v810 = 255;
        }
        v805[5] = v810 & ~(v810 >> 31);
        int v811 = (__int16)(v65[70] + (v89 >> 2));
        if (v811 >= 255) {
          int v811 = 255;
        }
        v805[6] = v811 & ~(v811 >> 31);
        int v812 = (__int16)(v65[71] + (v89 >> 2));
        if (v812 >= 255) {
          int v812 = 255;
        }
        v805[7] = v812 & ~(v812 >> 31);
        int v813 = (__int16)(v65[80] + (v782 >> 1));
        if (v813 >= 255) {
          int v813 = 255;
        }
        v814 = &v63[v1184];
        v63[v1184] = v813 & ~(v813 >> 31);
        int v815 = (__int16)(v65[81] + (v783 >> 2));
        if (v815 >= 255) {
          int v815 = 255;
        }
        v814[1] = v815 & ~(v815 >> 31);
        int v816 = (__int16)(v65[82] + (v795 >> 1));
        if (v816 >= 255) {
          int v816 = 255;
        }
        v814[2] = v816 & ~(v816 >> 31);
        int v817 = (__int16)(v65[83] + (v796 >> 2));
        if (v817 >= 255) {
          int v817 = 255;
        }
        v814[3] = v817 & ~(v817 >> 31);
        int v818 = (__int16)(v65[84] + (v89 >> 2));
        if (v818 >= 255) {
          int v818 = 255;
        }
        v814[4] = v818 & ~(v818 >> 31);
        int v819 = (__int16)(v65[85] + (v89 >> 2));
        if (v819 >= 255) {
          int v819 = 255;
        }
        v814[5] = v819 & ~(v819 >> 31);
        int v820 = (__int16)(v65[86] + (v89 >> 2));
        if (v820 >= 255) {
          int v820 = 255;
        }
        v814[6] = v820 & ~(v820 >> 31);
        int v821 = (__int16)(v65[87] + (v89 >> 2));
        if (v821 >= 255) {
          int v821 = 255;
        }
        v814[7] = v821 & ~(v821 >> 31);
        int v822 = (__int16)(v65[96] + (v795 >> 1));
        if (v822 >= 255) {
          int v822 = 255;
        }
        v237 = &v63[v1181];
        v63[v1181] = v822 & ~(v822 >> 31);
        int v823 = (__int16)(v65[97] + (v796 >> 2));
        if (v823 >= 255) {
          int v823 = 255;
        }
        v237[1] = v823 & ~(v823 >> 31);
        int v824 = (__int16)(v65[98] + (v89 >> 2));
        if (v824 >= 255) {
          int v824 = 255;
        }
        v237[2] = v824 & ~(v824 >> 31);
        int v825 = (__int16)(v65[99] + (v89 >> 2));
        if (v825 >= 255) {
          int v825 = 255;
        }
        v237[3] = v825 & ~(v825 >> 31);
        int v826 = (__int16)(v65[100] + (v89 >> 2));
        if (v826 >= 255) {
          int v826 = 255;
        }
        v237[4] = v826 & ~(v826 >> 31);
        int v827 = (__int16)(v65[101] + (v89 >> 2));
        if (v827 >= 255) {
          int v827 = 255;
        }
        v237[5] = v827 & ~(v827 >> 31);
        int v828 = (__int16)(v65[102] + (v89 >> 2));
        if (v828 >= 255) {
          int v828 = 255;
        }
        v237[6] = v828 & ~(v828 >> 31);
        int v244 = (unsigned __int16)v65[103] + (v89 >> 2);
LABEL_844:
        int v244 = (__int16)v244;
        if ((__int16)v244 >= 255) {
          int v244 = 255;
        }
        v237[7] = v244 & ~(v244 >> 31);
        int v829 = (__int16)(v65[112] + (v89 >> 2));
        if (v829 >= 255) {
          int v829 = 255;
        }
        v830 = &v63[v37];
        v63[v37] = v829 & ~(v829 >> 31);
        int v831 = (__int16)(v65[113] + (v89 >> 2));
        if (v831 >= 255) {
          int v831 = 255;
        }
        v830[1] = v831 & ~(v831 >> 31);
        int v832 = (__int16)(v65[114] + (v89 >> 2));
        if (v832 >= 255) {
          int v832 = 255;
        }
        v830[2] = v832 & ~(v832 >> 31);
        int v833 = (__int16)(v65[115] + (v89 >> 2));
        if (v833 >= 255) {
          int v833 = 255;
        }
        v830[3] = v833 & ~(v833 >> 31);
        int v834 = (__int16)(v65[116] + (v89 >> 2));
        if (v834 >= 255) {
          int v834 = 255;
        }
        v830[4] = v834 & ~(v834 >> 31);
        int v835 = (__int16)(v65[117] + (v89 >> 2));
        if (v835 >= 255) {
          int v835 = 255;
        }
        v830[5] = v835 & ~(v835 >> 31);
        int v836 = (__int16)(v65[118] + (v89 >> 2));
        if (v836 >= 255) {
          int v836 = 255;
        }
        v830[6] = v836 & ~(v836 >> 31);
LABEL_861:
        signed __int32 v272 = (unsigned __int16)v65[119] + (v89 >> 2);
LABEL_1250:
        signed __int32 v272 = (__int16)v272;
        if ((__int16)v272 >= 255) {
          signed __int32 v272 = 255;
        }
        v63[v37 + 7] = v272 & ~(v272 >> 31);
        break;
      default:
        break;
    }
    v36 += 16;
    ++v39;
    ++v38;
    BOOL v1141 = v44 >= 0xC;
    v44 += 4;
  }
  while (!v1141);
  return result;
}

int16x8_t sub_2219DD548(unsigned __int8 *a1, unsigned int a2, int16x8_t *a3, int16x8_t *a4, unsigned __int8 *a5, int a6, int a7)
{
  int64x2_t v7 = 0uLL;
  int64x2_t v8 = 0uLL;
  int64x2_t v9 = 0uLL;
  int64x2_t v10 = 0uLL;
  int32x4_t v11 = 0uLL;
  switch(a6)
  {
    case 0:
      v11.i32[0] = *(_DWORD *)&a1[-(a5[1] * a2)];
      int64x2_t v8 = (int64x2_t)vzip1q_s8((int8x16_t)v11, (int8x16_t)0);
      goto LABEL_50;
    case 1:
      int v12 = &a1[-*a5];
      int v13 = *v12 | (*v12 << 8);
      int v14 = v12[a2] | (v12[a2] << 8);
      v11.i32[0] = v13 | (v13 << 16);
      int32x4_t v11 = (int32x4_t)vzip1q_s8((int8x16_t)v11, (int8x16_t)0);
      v10.i32[0] = v14 | (v14 << 16);
      int64x2_t v10 = (int64x2_t)vzip1q_s8((int8x16_t)v10, (int8x16_t)0);
      int v15 = v12[2 * a2];
      LODWORD(v12) = v12[3 * a2] | (v12[3 * a2] << 8);
      v9.i32[0] = v15 | (v15 << 8) | ((v15 | (v15 << 8)) << 16);
      int64x2_t v9 = (int64x2_t)vzip1q_s8((int8x16_t)v9, (int8x16_t)0);
      int64x2_t v8 = (int64x2_t)vzip1q_s8((int8x16_t)(v12 | (v12 << 16)), (int8x16_t)0);
      break;
    case 2:
      if (*a5)
      {
        int v16 = *(a1 - 1);
        int v17 = a1[a2 - 1];
        int v18 = a1[2 * a2 - 1];
        int v19 = a1[3 * a2 - 1];
        if (a5[1])
        {
          v11.i32[0] = *(_DWORD *)&a1[-a2];
          unsigned int v20 = (vaddvq_s32((int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v11.i8)))
                             + v19
                             + v18
                             + v17
                             + v16
                             + 4) >> 3;
          goto LABEL_49;
        }
        int v51 = v16 + v17 + v18 + v19;
        goto LABEL_40;
      }
      if (a5[1])
      {
        v11.i32[0] = *(_DWORD *)&a1[-a2];
        int v51 = vaddvq_s32((int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v11.i8)));
LABEL_40:
        unsigned int v20 = (v51 + 2) >> 2;
        goto LABEL_49;
      }
      unsigned int v20 = 128;
LABEL_49:
      v10.i32[0] = v20 | (v20 << 8) | ((v20 | (v20 << 8)) << 16);
      int64x2_t v8 = (int64x2_t)vzip1q_s8((int8x16_t)v10, (int8x16_t)0);
LABEL_50:
      int64x2_t v9 = v8;
      int64x2_t v10 = v8;
      int32x4_t v11 = (int32x4_t)v8;
      break;
    case 3:
      if (a5[1]) {
        uint64_t v21 = -(uint64_t)a2;
      }
      else {
        uint64_t v21 = 0;
      }
      __int32 v22 = *(_DWORD *)&a1[v21];
      if (a5[2]) {
        unsigned int v23 = *(_DWORD *)&a1[-a2 + 4];
      }
      else {
        unsigned int v23 = v22 & 0xFF000000 | ((v22 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v22 & 0xFF000000 | ((v22 & 0xFF000000) >> 8)) >> 16);
      }
      v11.i32[0] = v22;
      v10.i32[0] = v23;
      int8x16_t v52 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v10, 0xCuLL), (int8x16_t)v11);
      v53.i64[0] = 0xE000E000E000ELL;
      v53.i64[1] = 0xE000E000E000ELL;
      v54.i64[0] = -1;
      v54.i64[1] = -1;
      int16x8_t v55 = (int16x8_t)vshlq_u16(v54, v53);
      int16x8_t v56 = (int16x8_t)vzip1q_s8(v52, (int8x16_t)0);
      uint16x8_t v57 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v55, v55), (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v56, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36700)), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v56, v56), (int8x16_t)0, 2uLL), v56));
      v55.i64[0] = 0x1000100010001;
      v55.i64[1] = 0x1000100010001;
      int32x4_t v11 = (int32x4_t)vshlq_u16(v57, (uint16x8_t)v55);
      int64x2_t v10 = (int64x2_t)vextq_s8((int8x16_t)v11, (int8x16_t)0, 2uLL);
      int64x2_t v9 = (int64x2_t)vextq_s8((int8x16_t)v11, (int8x16_t)0, 4uLL);
      int64x2_t v8 = (int64x2_t)vextq_s8((int8x16_t)v11, (int8x16_t)0, 6uLL);
      break;
    case 4:
      if (*a5)
      {
        if (a5[1])
        {
          BOOL v24 = &a1[-a2];
          __int32 v25 = *(_DWORD *)v24;
          __int32 v26 = *(v24 - 1);
        }
        else
        {
          __int32 v25 = *(_DWORD *)a1;
          __int32 v26 = *(_DWORD *)a1;
        }
        int v58 = a1[3 * a2 - 1] | (a1[2 * a2 - 1] << 8) | (a1[a2 - 1] << 16);
        int v59 = *(a1 - 1);
      }
      else if (a5[1])
      {
        __int32 v25 = *(_DWORD *)&a1[-a2];
        __int32 v26 = v25;
        int v58 = a1[3 * a2] | (a1[2 * a2] << 8) | (a1[a2] << 16);
        int v59 = *a1;
      }
      else
      {
        int v59 = *(_DWORD *)a1;
        __int32 v26 = *(_DWORD *)a1;
        int v58 = a1[3 * a2] | (a1[2 * a2] << 8) | (a1[a2] << 16);
        __int32 v25 = *(_DWORD *)a1;
      }
      v11.i32[0] = v26;
      v10.i32[0] = v25;
      v8.i32[0] = v58 | (v59 << 24);
      int64x2_t v73 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v10, 8uLL), (int8x16_t)v11);
      uint16x8_t v74 = (uint16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
      int16x8_t v75 = (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v8, (uint64x2_t)v74), (int8x16_t)vshlq_n_s64(v73, 0x10uLL)), (int8x16_t)xmmword_221A36350), (int8x16_t)0);
      int16x8_t v76 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v8, (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL)), (int8x16_t)vshlq_n_s64(v73, 0x18uLL)), (int8x16_t)0);
      int16x8_t v77 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v73, (uint64x2_t)v74), 0x20uLL), (int8x16_t)v8), (int8x16_t)0);
      v78.i64[0] = 0xE000E000E000ELL;
      v78.i64[1] = 0xE000E000E000ELL;
      v74.i64[0] = -1;
      v74.i64[1] = -1;
      int16x8_t v79 = (int16x8_t)vshlq_u16(v74, v78);
      uint16x8_t v80 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v76, v76), v75), vaddq_s16(vaddq_s16(v79, v79), v77));
      v75.i64[0] = 0x1000100010001;
      v75.i64[1] = 0x1000100010001;
      int64x2_t v8 = (int64x2_t)vshlq_u16(v80, (uint16x8_t)v75);
      int32x4_t v11 = (int32x4_t)vextq_s8((int8x16_t)v8, (int8x16_t)0, 6uLL);
      int64x2_t v10 = (int64x2_t)vextq_s8((int8x16_t)v8, (int8x16_t)0, 4uLL);
      int64x2_t v9 = (int64x2_t)vextq_s8((int8x16_t)v8, (int8x16_t)0, 2uLL);
      break;
    case 5:
      if (*a5)
      {
        if (a5[1])
        {
          BOOL v27 = &a1[-a2];
          __int32 v28 = *(_DWORD *)v27;
          BOOL v29 = a1 - 1;
          int v30 = *(_DWORD *)v27 | (*(v27 - 1) << 8);
        }
        else
        {
          __int32 v28 = *(_DWORD *)a1;
          BOOL v29 = a1 - 1;
          int v30 = *(_DWORD *)a1 | (*(_DWORD *)a1 << 8);
        }
        int v31 = *(a1 - 1) | (a1[a2 - 1] << 8);
        unsigned int v81 = &v29[2 * a2];
      }
      else
      {
        if (a5[1])
        {
          __int32 v28 = *(_DWORD *)&a1[-a2];
          int v30 = v28 | (v28 << 8);
          int v60 = *a1;
        }
        else
        {
          __int32 v28 = *(_DWORD *)a1;
          int v60 = *(_DWORD *)a1;
          int v30 = v60 | (v60 << 8);
        }
        int v31 = v60 | (a1[a2] << 8);
        unsigned int v81 = &a1[2 * a2];
      }
      v11.i32[0] = v30;
      v8.i32[0] = v28;
      v9.i32[0] = v31 | (*v81 << 16);
      v82.i64[0] = 0xE000E000E000ELL;
      v82.i64[1] = 0xE000E000E000ELL;
      v83.i64[0] = -1;
      v83.i64[1] = -1;
      int16x8_t v84 = (int16x8_t)vshlq_u16(v83, v82);
      uint64x2_t v85 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
      int8x16_t v86 = vorrq_s8((int8x16_t)vshlq_n_s64(v8, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v11, v85));
      int8x16_t v87 = vorrq_s8((int8x16_t)vshlq_n_s64(v9, 0x10uLL), (int8x16_t)v11);
      uint64x2_t v88 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
      int16x8_t v89 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v86, v85), (int8x16_t)0);
      int16x8_t v90 = vaddq_s16(v89, (int16x8_t)vzip1q_s8(v86, (int8x16_t)0));
      int32x4_t v11 = (int32x4_t)vshlq_u16((uint16x8_t)vaddq_s16(v90, v84), v83);
      int16x8_t v91 = vaddq_s16(v84, v84);
      v83.i64[0] = 0x1000100010001;
      v83.i64[1] = 0x1000100010001;
      int8x16_t v92 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v91, v89), v90), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v86, v88), (int8x16_t)0)), v83);
      int16x8_t v93 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v87, v85), (int8x16_t)0);
      int64x2_t v94 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v91, (int16x8_t)vzip1q_s8(v87, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v87, v88), (int8x16_t)0)), vaddq_s16(v93, v93)), v83);
      int64x2_t v9 = (int64x2_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v11, 0xEuLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v94, 0x20uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
      int64x2_t v8 = (int64x2_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v94, (int8x16_t)xmmword_221A36980), 0), v92, 0xCuLL);
      int64x2_t v10 = (int64x2_t)vextq_s8((int8x16_t)v8, (int8x16_t)0, 2uLL);
      break;
    case 6:
      if (*a5)
      {
        unsigned int v32 = &a1[a2];
        if (a5[1])
        {
          uint64_t v33 = &a1[-a2];
          __int32 v34 = *(_DWORD *)v33;
          int v35 = *(a1 - 1);
          int v36 = (a1[2 * a2 - 1] << 16) | (*(v32 - 1) << 8) | (a1[3 * a2 - 1] << 24) | v35;
          unsigned int v37 = v35 | (*(v33 - 1) << 8);
          goto LABEL_57;
        }
        __int32 v34 = *(_DWORD *)a1;
        int v62 = *(a1 - 1);
        int v61 = *(v32 - 1);
        int v63 = a1[2 * a2 - 1] << 16;
        int v64 = a1[3 * a2 - 1];
        goto LABEL_47;
      }
      if (a5[1])
      {
        __int32 v34 = *(_DWORD *)&a1[-a2];
        int v61 = a1[a2];
        int v62 = *a1;
        int v63 = a1[2 * a2] << 16;
        int v64 = a1[3 * a2];
LABEL_47:
        int v36 = v63 | (v61 << 8) | (v64 << 24) | v62;
        goto LABEL_56;
      }
      __int32 v34 = *(_DWORD *)a1;
      int v62 = *(_DWORD *)a1;
      int v36 = (a1[2 * a2] << 16) | (a1[a2] << 8) | (a1[3 * a2] << 24) | v62;
LABEL_56:
      unsigned int v37 = v62 & 0xFFFF00FF | (v34 << 8);
LABEL_57:
      v11.i32[0] = v37;
      v8.i32[0] = v34;
      v9.i32[0] = v36;
      v95.i64[0] = 0xE000E000E000ELL;
      v95.i64[1] = 0xE000E000E000ELL;
      v96.i64[0] = -1;
      v96.i64[1] = -1;
      int16x8_t v97 = (int16x8_t)vshlq_u16(v96, v95);
      uint64x2_t v98 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
      int8x16_t v99 = vorrq_s8((int8x16_t)vshlq_n_s64(v9, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v11, v98));
      int8x16_t v100 = vorrq_s8((int8x16_t)vshlq_n_s64(v8, 0x10uLL), (int8x16_t)v11);
      int16x8_t v101 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v99, v98), (int8x16_t)0);
      uint64x2_t v102 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
      int16x8_t v103 = vaddq_s16(v101, (int16x8_t)vzip1q_s8(v99, (int8x16_t)0));
      int64x2_t v104 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(v103, v97), v96);
      int16x8_t v105 = vaddq_s16(v97, v97);
      uint16x8_t v106 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v105, v101), v103), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v99, v102), (int8x16_t)0));
      v99.i64[0] = 0x1000100010001;
      v99.i64[1] = 0x1000100010001;
      int8x16_t v107 = (int8x16_t)vshlq_u16(v106, (uint16x8_t)v99);
      int16x8_t v108 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v100, v98), (int8x16_t)0);
      int64x2_t v109 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v105, (int16x8_t)vzip1q_s8(v100, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v100, v102), (int8x16_t)0)), vaddq_s16(v108, v108)), (uint16x8_t)v99);
      int32x4_t v11 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_n_s64(v109, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v104, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
      v105.i64[0] = 0xF0000000FLL;
      v105.i64[1] = 0xF0000000FLL;
      int64x2_t v8 = (int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, v107, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_221A36940), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v109, 2uLL), (uint32x4_t)v105), (int8x16_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v104, (int8x16_t)xmmword_221A36950), (int32x4_t)0))), (int8x16_t)xmmword_221A36960), (int8x16_t)xmmword_221A36970);
      int64x2_t v9 = (int64x2_t)vextq_s8((int8x16_t)v8, (int8x16_t)0, 4uLL);
      int64x2_t v10 = (int64x2_t)vextq_s8((int8x16_t)v8, (int8x16_t)0, 8uLL);
      break;
    case 7:
      if (a5[1]) {
        uint64_t v38 = -(uint64_t)a2;
      }
      else {
        uint64_t v38 = 0;
      }
      __int32 v39 = *(_DWORD *)&a1[v38];
      if (a5[2]) {
        unsigned int v40 = *(_DWORD *)&a1[-a2 + 4];
      }
      else {
        unsigned int v40 = v39 & 0xFF000000 | ((v39 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v39 & 0xFF000000 | ((v39 & 0xFF000000) >> 8)) >> 16);
      }
      v11.i32[0] = v39;
      v10.i32[0] = v40;
      int8x16_t v65 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v10, 0xCuLL), (int8x16_t)v11);
      v66.i64[0] = 0xE000E000E000ELL;
      v66.i64[1] = 0xE000E000E000ELL;
      v67.i64[0] = -1;
      v67.i64[1] = -1;
      int16x8_t v68 = (int16x8_t)vshlq_u16(v67, v66);
      int16x8_t v69 = (int16x8_t)vzip1q_s8(v65, (int8x16_t)0);
      int16x8_t v70 = (int16x8_t)vextq_s8((int8x16_t)v69, (int8x16_t)0, 2uLL);
      int16x8_t v71 = vaddq_s16(v70, v69);
      int16x8_t v72 = (int16x8_t)vextq_s8((int8x16_t)v69, (int8x16_t)0, 4uLL);
      int32x4_t v11 = (int32x4_t)vshlq_u16((uint16x8_t)vaddq_s16(v71, v68), v67);
      v67.i64[0] = 0x1000100010001;
      v67.i64[1] = 0x1000100010001;
      int64x2_t v10 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v68, v68), v70), v72), v71), v67);
      int64x2_t v9 = (int64x2_t)vextq_s8((int8x16_t)v11, (int8x16_t)0, 2uLL);
      int64x2_t v8 = (int64x2_t)vextq_s8((int8x16_t)v10, (int8x16_t)0, 2uLL);
      break;
    case 8:
      uint64_t v41 = &a1[-*a5];
      v11.i32[0] = *v41 | (v41[a2] << 8) | (v41[2 * a2] << 16) | (v41[3 * a2] << 24);
      v42.i64[0] = 0xE000E000E000ELL;
      v42.i64[1] = 0xE000E000E000ELL;
      v43.i64[0] = -1;
      v43.i64[1] = -1;
      int16x8_t v44 = (int16x8_t)vshlq_u16(v43, v42);
      int16x8_t v45 = (int16x8_t)vzip1q_s8((int8x16_t)v11, (int8x16_t)0);
      int16x8_t v46 = (int16x8_t)vextq_s8((int8x16_t)v45, (int8x16_t)0, 2uLL);
      int16x8_t v47 = vaddq_s16(v46, v45);
      int16x8_t v48 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v47, v44), v43);
      uint16x8_t v49 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v44, v44), v46), (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v45, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36710)), v47);
      v46.i64[0] = 0x1000100010001;
      v46.i64[1] = 0x1000100010001;
      int16x8_t v50 = (int16x8_t)vshlq_u16(v49, (uint16x8_t)v46);
      int64x2_t v8 = (int64x2_t)vqtbl1q_s8((int8x16_t)v45, (int8x16_t)xmmword_221A36930);
      int32x4_t v11 = (int32x4_t)vzip1q_s16(v48, v50);
      int64x2_t v10 = (int64x2_t)vextq_s8((int8x16_t)v11, (int8x16_t)0, 4uLL);
      int64x2_t v9 = (int64x2_t)vextq_s8((int8x16_t)vdupq_laneq_s32(v11, 2), (int8x16_t)v8, 0xCuLL);
      break;
    default:
      break;
  }
  int64x2_t v110 = 0uLL;
  int64x2_t v111 = 0uLL;
  int32x4_t v112 = 0uLL;
  switch(a7)
  {
    case 0:
      v7.i32[0] = *(_DWORD *)&a1[-(a5[1] * a2)];
      int64x2_t v7 = (int64x2_t)vzip1q_s8((int8x16_t)v7, (int8x16_t)0);
      goto LABEL_107;
    case 1:
      int v113 = &a1[-*a5];
      int v114 = *v113 | (*v113 << 8);
      unsigned int v115 = v113[a2] | (v113[a2] << 8);
      v7.i32[0] = v114 | (v114 << 16);
      int32x4_t v112 = (int32x4_t)vzip1q_s8((int8x16_t)v7, (int8x16_t)0);
      int64x2_t v111 = (int64x2_t)vzip1q_s8((int8x16_t)(v115 | (unint64_t)(v115 << 16)), (int8x16_t)0);
      int v116 = v113[2 * a2];
      LODWORD(v113) = v113[3 * a2] | (v113[3 * a2] << 8);
      int64x2_t v110 = (int64x2_t)vzip1q_s8((int8x16_t)(v116 | (v116 << 8) | ((v116 | (v116 << 8)) << 16)), (int8x16_t)0);
      int64x2_t v7 = (int64x2_t)vzip1q_s8((int8x16_t)(v113 | (v113 << 16)), (int8x16_t)0);
      goto LABEL_115;
    case 2:
      if (*a5)
      {
        int v117 = *(a1 - 1);
        int v118 = a1[a2 - 1];
        int v119 = a1[2 * a2 - 1];
        int v120 = a1[3 * a2 - 1];
        if (a5[1])
        {
          v7.i32[0] = *(_DWORD *)&a1[-a2];
          unsigned int v121 = (vaddvq_s32((int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v7.i8)))
                              + v120
                              + v119
                              + v118
                              + v117
                              + 4) >> 3;
          goto LABEL_106;
        }
        int v148 = v117 + v118 + v119 + v120;
        goto LABEL_97;
      }
      if (a5[1])
      {
        v7.i32[0] = *(_DWORD *)&a1[-a2];
        int v148 = vaddvq_s32((int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v7.i8)));
LABEL_97:
        unsigned int v121 = (v148 + 2) >> 2;
        goto LABEL_106;
      }
      unsigned int v121 = 128;
LABEL_106:
      v112.i32[0] = v121 | (v121 << 8) | ((v121 | (v121 << 8)) << 16);
      int64x2_t v7 = (int64x2_t)vzip1q_s8((int8x16_t)v112, (int8x16_t)0);
LABEL_107:
      int64x2_t v110 = v7;
      int64x2_t v111 = v7;
      int32x4_t v112 = (int32x4_t)v7;
      goto LABEL_115;
    case 3:
      if (a5[1]) {
        uint64_t v122 = -(uint64_t)a2;
      }
      else {
        uint64_t v122 = 0;
      }
      __int32 v123 = *(_DWORD *)&a1[v122];
      if (a5[2]) {
        unsigned int v124 = *(_DWORD *)&a1[-a2 + 4];
      }
      else {
        unsigned int v124 = v123 & 0xFF000000 | ((v123 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v123 & 0xFF000000 | ((v123 & 0xFF000000) >> 8)) >> 16);
      }
      v112.i32[0] = v123;
      v111.i32[0] = v124;
      int8x16_t v149 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v111, 0xCuLL), (int8x16_t)v112);
      v150.i64[0] = 0xE000E000E000ELL;
      v150.i64[1] = 0xE000E000E000ELL;
      v151.i64[0] = -1;
      v151.i64[1] = -1;
      int16x8_t v152 = (int16x8_t)vshlq_u16(v151, v150);
      int16x8_t v153 = (int16x8_t)vzip1q_s8(v149, (int8x16_t)0);
      uint16x8_t v154 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v152, v152), (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v153, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36700)), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v153, v153), (int8x16_t)0, 2uLL), v153));
      v152.i64[0] = 0x1000100010001;
      v152.i64[1] = 0x1000100010001;
      int32x4_t v112 = (int32x4_t)vshlq_u16(v154, (uint16x8_t)v152);
      int64x2_t v111 = (int64x2_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 2uLL);
      int64x2_t v110 = (int64x2_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 4uLL);
      int64x2_t v7 = (int64x2_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 6uLL);
      goto LABEL_115;
    case 4:
      if (*a5)
      {
        if (a5[1])
        {
          int v125 = &a1[-a2];
          __int32 v126 = *(_DWORD *)v125;
          __int32 v127 = *(v125 - 1);
        }
        else
        {
          __int32 v126 = *(_DWORD *)a1;
          __int32 v127 = *(_DWORD *)a1;
        }
        int v155 = a1[3 * a2 - 1] | (a1[2 * a2 - 1] << 8) | (a1[a2 - 1] << 16);
        int v156 = *(a1 - 1);
      }
      else if (a5[1])
      {
        __int32 v126 = *(_DWORD *)&a1[-a2];
        __int32 v127 = v126;
        int v155 = a1[3 * a2] | (a1[2 * a2] << 8) | (a1[a2] << 16);
        int v156 = *a1;
      }
      else
      {
        int v156 = *(_DWORD *)a1;
        __int32 v127 = *(_DWORD *)a1;
        int v155 = a1[3 * a2] | (a1[2 * a2] << 8) | (a1[a2] << 16);
        __int32 v126 = *(_DWORD *)a1;
      }
      v7.i32[0] = v127;
      v112.i32[0] = v126;
      v111.i32[0] = v155 | (v156 << 24);
      int64x2_t v170 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v112, 8uLL), (int8x16_t)v7);
      uint16x8_t v171 = (uint16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
      int16x8_t v172 = (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v111, (uint64x2_t)v171), (int8x16_t)vshlq_n_s64(v170, 0x10uLL)), (int8x16_t)xmmword_221A36350), (int8x16_t)0);
      int16x8_t v173 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v111, (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL)), (int8x16_t)vshlq_n_s64(v170, 0x18uLL)), (int8x16_t)0);
      int16x8_t v174 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v170, (uint64x2_t)v171), 0x20uLL), (int8x16_t)v111), (int8x16_t)0);
      v175.i64[0] = 0xE000E000E000ELL;
      v175.i64[1] = 0xE000E000E000ELL;
      v171.i64[0] = -1;
      v171.i64[1] = -1;
      int16x8_t v176 = (int16x8_t)vshlq_u16(v171, v175);
      uint16x8_t v177 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v173, v173), v172), vaddq_s16(vaddq_s16(v176, v176), v174));
      v172.i64[0] = 0x1000100010001;
      v172.i64[1] = 0x1000100010001;
      int64x2_t v7 = (int64x2_t)vshlq_u16(v177, (uint16x8_t)v172);
      int32x4_t v112 = (int32x4_t)vextq_s8((int8x16_t)v7, (int8x16_t)0, 6uLL);
      int64x2_t v111 = (int64x2_t)vextq_s8((int8x16_t)v7, (int8x16_t)0, 4uLL);
      int64x2_t v110 = (int64x2_t)vextq_s8((int8x16_t)v7, (int8x16_t)0, 2uLL);
      goto LABEL_115;
    case 5:
      if (*a5)
      {
        if (a5[1])
        {
          int v128 = &a1[-a2];
          __int32 v129 = *(_DWORD *)v128;
          int v130 = *(_DWORD *)v128 | (*(v128 - 1) << 8);
        }
        else
        {
          __int32 v129 = *(_DWORD *)a1;
          int v130 = *(_DWORD *)a1 | (*(_DWORD *)a1 << 8);
        }
        unsigned int v178 = &a1[a2];
        int v179 = *--a1;
        int v180 = v179 | (*(v178 - 1) << 8);
      }
      else
      {
        if (a5[1])
        {
          __int32 v129 = *(_DWORD *)&a1[-a2];
          int v130 = v129 | (v129 << 8);
          int v157 = *a1;
        }
        else
        {
          __int32 v129 = *(_DWORD *)a1;
          int v157 = *(_DWORD *)a1;
          int v130 = v157 | (v157 << 8);
        }
        int v180 = v157 | (a1[a2] << 8);
      }
      v7.i32[0] = v130;
      v112.i32[0] = v129;
      v110.i32[0] = v180 | (a1[2 * a2] << 16);
      v181.i64[0] = 0xE000E000E000ELL;
      v181.i64[1] = 0xE000E000E000ELL;
      v182.i64[0] = -1;
      v182.i64[1] = -1;
      int16x8_t v183 = (int16x8_t)vshlq_u16(v182, v181);
      uint64x2_t v184 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
      int8x16_t v185 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v112, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v7, v184));
      int8x16_t v186 = vorrq_s8((int8x16_t)vshlq_n_s64(v110, 0x10uLL), (int8x16_t)v7);
      uint64x2_t v187 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
      int16x8_t v188 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v185, v184), (int8x16_t)0);
      int16x8_t v189 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v185, v187), (int8x16_t)0);
      int16x8_t v190 = vaddq_s16(v188, (int16x8_t)vzip1q_s8(v185, (int8x16_t)0));
      int32x4_t v112 = (int32x4_t)vshlq_u16((uint16x8_t)vaddq_s16(v190, v183), v182);
      int16x8_t v191 = vaddq_s16(v183, v183);
      v182.i64[0] = 0x1000100010001;
      v182.i64[1] = 0x1000100010001;
      int8x16_t v192 = (int8x16_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v191, v188), v190), v189), v182);
      int16x8_t v193 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v186, v184), (int8x16_t)0);
      int64x2_t v194 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v191, (int16x8_t)vzip1q_s8(v186, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v186, v187), (int8x16_t)0)), vaddq_s16(v193, v193)), v182);
      int64x2_t v110 = (int64x2_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v112, 0xEuLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v194, 0x20uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
      int64x2_t v7 = (int64x2_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v194, (int8x16_t)xmmword_221A36980), 0), v192, 0xCuLL);
      int64x2_t v111 = (int64x2_t)vextq_s8((int8x16_t)v7, (int8x16_t)0, 2uLL);
      goto LABEL_115;
    case 6:
      if (*a5)
      {
        if (a5[1])
        {
          int v131 = &a1[-a2];
          __int32 v132 = *(_DWORD *)v131;
          int v133 = *(a1 - 1);
          int v134 = (a1[2 * a2 - 1] << 16) | (a1[a2 - 1] << 8) | (a1[3 * a2 - 1] << 24) | v133;
          unsigned int v135 = v133 | (*(v131 - 1) << 8);
          goto LABEL_114;
        }
        __int32 v132 = *(_DWORD *)a1;
        int v159 = *(a1 - 1);
        int v158 = a1[a2 - 1];
        int v160 = a1[2 * a2 - 1] << 16;
        int v161 = a1[3 * a2 - 1];
        goto LABEL_104;
      }
      if (a5[1])
      {
        __int32 v132 = *(_DWORD *)&a1[-a2];
        int v158 = a1[a2];
        int v159 = *a1;
        int v160 = a1[2 * a2] << 16;
        int v161 = a1[3 * a2];
LABEL_104:
        int v134 = v160 | (v158 << 8) | (v161 << 24) | v159;
        goto LABEL_113;
      }
      __int32 v132 = *(_DWORD *)a1;
      int v159 = *(_DWORD *)a1;
      int v134 = (a1[2 * a2] << 16) | (a1[a2] << 8) | (a1[3 * a2] << 24) | v159;
LABEL_113:
      unsigned int v135 = v159 & 0xFFFF00FF | (v132 << 8);
LABEL_114:
      v7.i32[0] = v135;
      v112.i32[0] = v132;
      v110.i32[0] = v134;
      v195.i64[0] = 0xE000E000E000ELL;
      v195.i64[1] = 0xE000E000E000ELL;
      v196.i64[0] = -1;
      v196.i64[1] = -1;
      int16x8_t v197 = (int16x8_t)vshlq_u16(v196, v195);
      uint64x2_t v198 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
      int8x16_t v199 = vorrq_s8((int8x16_t)vshlq_n_s64(v110, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v7, v198));
      int8x16_t v200 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v112, 0x10uLL), (int8x16_t)v7);
      int16x8_t v201 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v199, v198), (int8x16_t)0);
      uint64x2_t v202 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL);
      int16x8_t v203 = vaddq_s16(v201, (int16x8_t)vzip1q_s8(v199, (int8x16_t)0));
      int64x2_t v204 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(v203, v197), v196);
      int16x8_t v205 = vaddq_s16(v197, v197);
      uint16x8_t v206 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v205, v201), v203), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v199, v202), (int8x16_t)0));
      v199.i64[0] = 0x1000100010001;
      v199.i64[1] = 0x1000100010001;
      int8x16_t v207 = (int8x16_t)vshlq_u16(v206, (uint16x8_t)v199);
      int16x8_t v208 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v200, v198), (int8x16_t)0);
      int64x2_t v209 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v205, (int16x8_t)vzip1q_s8(v200, (int8x16_t)0)), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v200, v202), (int8x16_t)0)), vaddq_s16(v208, v208)), (uint16x8_t)v199);
      int32x4_t v112 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_n_s64(v209, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v204, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
      v199.i64[0] = 0xF0000000FLL;
      v199.i64[1] = 0xF0000000FLL;
      int64x2_t v7 = (int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, v207, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_221A36940), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v209, 2uLL), (uint32x4_t)v199), (int8x16_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v204, (int8x16_t)xmmword_221A36950), (int32x4_t)0))), (int8x16_t)xmmword_221A36960), (int8x16_t)xmmword_221A36970);
      int64x2_t v110 = (int64x2_t)vextq_s8((int8x16_t)v7, (int8x16_t)0, 4uLL);
      int64x2_t v111 = (int64x2_t)vextq_s8((int8x16_t)v7, (int8x16_t)0, 8uLL);
LABEL_115:
      int16x8_t v210 = (int16x8_t)vzip1q_s64(v8, v7);
      int16x8_t result = vsubq_s16(*a3, (int16x8_t)vzip1q_s64((int64x2_t)v11, (int64x2_t)v112));
      int16x8_t v212 = vsubq_s16(a3[1], (int16x8_t)vzip1q_s64(v10, v111));
      int16x8_t v213 = vsubq_s16(a3[2], (int16x8_t)vzip1q_s64(v9, v110));
      int16x8_t v214 = vsubq_s16(a3[3], v210);
      *a4 = result;
      a4[1] = v212;
      a4[2] = v213;
      a4[3] = v214;
      return result;
    case 7:
      if (a5[1]) {
        uint64_t v136 = -(uint64_t)a2;
      }
      else {
        uint64_t v136 = 0;
      }
      __int32 v137 = *(_DWORD *)&a1[v136];
      if (a5[2]) {
        unsigned int v138 = *(_DWORD *)&a1[-a2 + 4];
      }
      else {
        unsigned int v138 = v137 & 0xFF000000 | ((v137 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v137 & 0xFF000000 | ((v137 & 0xFF000000) >> 8)) >> 16);
      }
      v112.i32[0] = v137;
      v111.i32[0] = v138;
      int8x16_t v162 = vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v111, 0xCuLL), (int8x16_t)v112);
      v163.i64[0] = 0xE000E000E000ELL;
      v163.i64[1] = 0xE000E000E000ELL;
      v164.i64[0] = -1;
      v164.i64[1] = -1;
      int16x8_t v165 = (int16x8_t)vshlq_u16(v164, v163);
      int16x8_t v166 = (int16x8_t)vzip1q_s8(v162, (int8x16_t)0);
      int16x8_t v167 = (int16x8_t)vextq_s8((int8x16_t)v166, (int8x16_t)0, 2uLL);
      int16x8_t v168 = vaddq_s16(v167, v166);
      int16x8_t v169 = (int16x8_t)vextq_s8((int8x16_t)v166, (int8x16_t)0, 4uLL);
      int32x4_t v112 = (int32x4_t)vshlq_u16((uint16x8_t)vaddq_s16(v168, v165), v164);
      v164.i64[0] = 0x1000100010001;
      v164.i64[1] = 0x1000100010001;
      int64x2_t v111 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v165, v165), v167), v169), v168), v164);
      int64x2_t v110 = (int64x2_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 2uLL);
      int64x2_t v7 = (int64x2_t)vextq_s8((int8x16_t)v111, (int8x16_t)0, 2uLL);
      goto LABEL_115;
    case 8:
      int v139 = &a1[-*a5];
      v7.i32[0] = *v139 | (v139[a2] << 8) | (v139[2 * a2] << 16) | (v139[3 * a2] << 24);
      v140.i64[0] = 0xE000E000E000ELL;
      v140.i64[1] = 0xE000E000E000ELL;
      v141.i64[0] = -1;
      v141.i64[1] = -1;
      int16x8_t v142 = (int16x8_t)vshlq_u16(v141, v140);
      int16x8_t v143 = (int16x8_t)vzip1q_s8((int8x16_t)v7, (int8x16_t)0);
      int16x8_t v144 = (int16x8_t)vextq_s8((int8x16_t)v143, (int8x16_t)0, 2uLL);
      int16x8_t v145 = vaddq_s16(v144, v143);
      int16x8_t v146 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v145, v142), v141);
      uint16x8_t v147 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v142, v142), v144), (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v143, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36710)), v145);
      v144.i64[0] = 0x1000100010001;
      v144.i64[1] = 0x1000100010001;
      int64x2_t v7 = (int64x2_t)vqtbl1q_s8((int8x16_t)v143, (int8x16_t)xmmword_221A36930);
      int32x4_t v112 = (int32x4_t)vzip1q_s16(v146, (int16x8_t)vshlq_u16(v147, (uint16x8_t)v144));
      int64x2_t v111 = (int64x2_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 4uLL);
      int64x2_t v110 = (int64x2_t)vextq_s8((int8x16_t)vdupq_laneq_s32(v112, 2), (int8x16_t)v7, 0xCuLL);
      goto LABEL_115;
    default:
      goto LABEL_115;
  }
}

uint64_t sub_2219DE5B4(uint64_t result, int a2, unsigned char *a3, unsigned char *a4)
{
  int v4 = a4[3];
  if (a4[3]) {
    int v5 = -1;
  }
  else {
    int v5 = 0;
  }
  if (a4[2]) {
    unsigned int v6 = 15;
  }
  else {
    unsigned int v6 = 7;
  }
  if (a4[1])
  {
    uint64_t v7 = 0;
    if (a4[3]) {
      uint64_t v8 = -1;
    }
    else {
      uint64_t v8 = 0;
    }
    *a3 = (*(unsigned __int8 *)(result + v8 - a2)
         + 2 * *(unsigned __int8 *)(result - a2)
         + *(unsigned __int8 *)(result - a2 + 1)
         + 2) >> 2;
    uint64_t v9 = result - a2;
    do
    {
      if ((int)v7 >= (int)v6) {
        signed int v10 = v6;
      }
      else {
        signed int v10 = v7;
      }
      int v11 = *(unsigned __int8 *)(v9 + v10);
      uint64_t v12 = v7 + 1;
      if ((int)v7 + 1 >= v6) {
        unsigned int v13 = v6;
      }
      else {
        unsigned int v13 = v7 + 1;
      }
      int v14 = *(unsigned __int8 *)(v9 + v13);
      unsigned int v15 = v7 + 2;
      if ((int)v7 + 2 >= v6) {
        unsigned int v15 = v6;
      }
      a3[++v7] = (v11 + 2 * v14 + *(unsigned __int8 *)(v9 + v15) + 2) >> 2;
    }
    while (v12 != 16);
    a3[16] = a3[15];
  }
  if (*a4)
  {
    uint64_t v16 = 0;
    if (v4) {
      uint64_t v17 = -1;
    }
    else {
      uint64_t v17 = 0;
    }
    int v18 = (unsigned __int8 *)(result - 1);
    int v19 = a3 - 2;
    do
    {
      int v20 = v16 - 1;
      if (v16 <= v17) {
        int v20 = v5;
      }
      int v21 = *(unsigned __int8 *)(result + a2 * (uint64_t)v20 - 1);
      if (++v16 >= 7) {
        uint64_t v22 = 7;
      }
      else {
        uint64_t v22 = v16;
      }
      *v19-- = (v21 + 2 * *v18 + *(unsigned __int8 *)(result + v22 * a2 - 1) + 2) >> 2;
      v18 += a2;
    }
    while (v16 != 8);
    *(a3 - 10) = *(a3 - 9);
  }
  if (a4[3])
  {
    if (*a4)
    {
      int v23 = *(unsigned __int8 *)(result - 1);
      if (v4) {
        uint64_t v24 = -1;
      }
      else {
        uint64_t v24 = 0;
      }
      if (a4[1])
      {
        int v25 = v23 + 2 * *(unsigned __int8 *)(result + v24 - a2) + *(unsigned __int8 *)(result - a2);
      }
      else
      {
        int v27 = *(unsigned __int8 *)(result + v24 * a2 - 1);
        int v25 = v23 + v27 + 2 * v27;
      }
    }
    else
    {
      if (!a4[1]) {
        return result;
      }
      if (v4) {
        uint64_t v26 = -1;
      }
      else {
        uint64_t v26 = 0;
      }
      int v25 = *(unsigned __int8 *)(result - a2) + 3 * *(unsigned __int8 *)(result + v26 - a2);
    }
    *(a3 - 1) = (v25 + 2) >> 2;
  }
  return result;
}

void *sub_2219DE778(void *result, int a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  int v4 = 8;
  do
  {
    *int16x8_t result = v3;
    int16x8_t result = (void *)((char *)result + a2);
    --v4;
  }
  while (v4);
  return result;
}

void *sub_2219DE798(void *result, int a2, uint64_t a3)
{
  for (uint64_t i = -2; i != -10; --i)
  {
    *int16x8_t result = 0x101010101010101 * *(unsigned __int8 *)(a3 + i);
    int16x8_t result = (void *)((char *)result + a2);
  }
  return result;
}

uint64_t *sub_2219DE7C4(uint64_t *result, int a2, uint64_t a3, unsigned char *a4)
{
  int v4 = a4[1];
  if (*a4)
  {
    if (a4[1])
    {
      uint64_t v5 = 0;
      int v6 = 0;
      uint64_t v7 = -2;
      do
        v6 += *(unsigned __int8 *)(a3 + v7--) + *(unsigned __int8 *)(a3 + v5++);
      while (v5 != 8);
      int v8 = 8;
      do
      {
        *int16x8_t result = 0x101010101010101 * ((uint64_t)(v6 + 8) >> 4);
        int16x8_t result = (uint64_t *)((char *)result + a2);
        --v8;
      }
      while (v8);
    }
    else
    {
      for (uint64_t i = -2; i != -10; --i)
        v4 += *(unsigned __int8 *)(a3 + i);
      uint64_t v14 = 0x101010101010101 * ((v4 + 4) >> 3);
      int v15 = 8;
      do
      {
        *int16x8_t result = v14;
        int16x8_t result = (uint64_t *)((char *)result + a2);
        --v15;
      }
      while (v15);
    }
  }
  else if (a4[1])
  {
    uint64_t v9 = 0;
    int v10 = 0;
    do
      v10 += *(unsigned __int8 *)(a3 + v9++);
    while (v9 != 8);
    uint64_t v11 = 0x101010101010101 * ((v10 + 4) >> 3);
    int v12 = 8;
    do
    {
      *int16x8_t result = v11;
      int16x8_t result = (uint64_t *)((char *)result + a2);
      --v12;
    }
    while (v12);
  }
  else
  {
    int v16 = 8;
    do
    {
      *int16x8_t result = 0x8080808080808080;
      int16x8_t result = (uint64_t *)((char *)result + a2);
      --v16;
    }
    while (v16);
  }
  return result;
}

uint64_t sub_2219DE8DC(uint64_t a1, int a2, unsigned __int8 *a3, double a4, double a5, double a6, double a7, double a8, uint16x8_t a9)
{
  uint8x8_t v9 = *(uint8x8_t *)(a3 + 7);
  int16x8_t v10 = (int16x8_t)vmovl_u8(v9);
  uint8x8_t v11 = *(uint8x8_t *)(a3 + 8);
  uint16x8_t v12 = vshll_n_u8(v11, 1uLL);
  int16x8_t v13 = (int16x8_t)vaddw_u8(v12, v9);
  v12.i32[0] = *(_DWORD *)(a3 + 3);
  int8x8_t v14 = (int8x8_t)vmovl_u8(*(uint8x8_t *)v12.i8).u64[0];
  a9.i32[0] = 131074;
  a9.i16[2] = 2;
  a9.i16[3] = 2;
  v12.i64[0] = vaddw_u8(a9, *(uint8x8_t *)v12.i8).u64[0];
  int8x8_t v15 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v10.i8, 0);
  int16x4_t v16 = (int16x4_t)vext_s8(v14, vext_s8(v15, v15, 6uLL), 2uLL);
  int v17 = a3[1];
  int v18 = a3[2];
  int16x8_t v19 = (int16x8_t)vextq_s8((int8x16_t)vmovl_u8(v11), (int8x16_t)v13, 2uLL);
  v19.i16[7] = a3[16];
  unsigned int v20 = (v18 + 2 + *a3 + 2 * v17) >> 2;
  LOBYTE(v17) = (v12.u16[0] + v17 + 2 * v18) >> 2;
  char v21 = (v18 + 2 + 2 * v14.u16[0] + v14.u16[1]) >> 2;
  *(uint16x4_t *)v10.i8 = vshr_n_u16((uint16x4_t)vadd_s16(vadd_s16(*(int16x4_t *)v12.i8, (int16x4_t)vext_s8(v14, *(int8x8_t *)v10.i8, 4uLL)), vadd_s16(v16, v16)), 2uLL);
  *(unsigned char *)a1 = v20;
  *(unsigned char *)(a1 + 1) = v17;
  *(unsigned char *)(a1 + 2) = v21;
  v12.i32[0] = vmovn_s16(v10).u32[0];
  *(_DWORD *)(a1 + 3) = v12.i32[0];
  int16x8_t v22 = vaddq_s16(v13, v19);
  *(int8x8_t *)v22.i8 = vrshrn_n_s16(v22, 2uLL);
  *(unsigned char *)(a1 + 7) = v22.i8[0];
  uint64_t v23 = a1 + a2;
  *(unsigned char *)uint64_t v23 = v17;
  *(unsigned char *)(v23 + 1) = v21;
  *(unsigned char *)(v23 + 6) = v22.i8[0];
  *(_DWORD *)(v23 + 2) = v12.i32[0];
  *(unsigned char *)(v23 + 7) = v22.i8[1];
  uint64_t v24 = a1 + 2 * a2;
  *(unsigned char *)uint64_t v24 = v21;
  *(_DWORD *)(v24 + 1) = v12.i32[0];
  *(_WORD *)(v24 + 5) = v22.i16[0];
  *(unsigned char *)(v24 + 7) = v22.i8[2];
  v12.i32[1] = vmovn_s16((int16x8_t)vzip1q_s8((int8x16_t)v22, (int8x16_t)v22)).u32[0];
  *(void *)(a1 + 3 * a2) = v12.i64[0];
  uint64_t v25 = a1 + 4 * a2;
  *(unsigned char *)uint64_t v25 = v10.i8[2];
  uint64_t v26 = a1 + 5 * a2;
  *(unsigned char *)(v25 + 1) = v10.i8[4];
  uint64_t v27 = a1 + 6 * a2;
  *(unsigned char *)(v25 + 2) = v10.i8[6];
  *(unsigned char *)(v25 + 7) = v22.i8[4];
  uint64_t result = a1 - a2;
  *(_DWORD *)(v25 + 3) = v12.i32[1];
  *(unsigned char *)uint64_t v26 = v10.i8[4];
  *(unsigned char *)(v26 + 1) = v10.i8[6];
  *(_DWORD *)(v26 + 2) = v12.i32[1];
  *(_WORD *)(v26 + 6) = v22.i16[2];
  *(unsigned char *)uint64_t v27 = v10.i8[6];
  *(_DWORD *)(v27 + 1) = v12.i32[1];
  *(_WORD *)(v27 + 5) = v22.i16[2];
  *(unsigned char *)(v27 + 7) = v22.i8[6];
  *(void *)(result + 8 * a2) = v22.i64[0];
  return result;
}

int8x8_t sub_2219DEA74(int8x8_t *a1, int a2, uint64_t a3)
{
  int v3 = *(unsigned __int8 *)(a3 - 3);
  int v4 = *(unsigned __int8 *)(a3 - 4);
  int v5 = *(unsigned __int8 *)(a3 - 5);
  unsigned int v6 = (v3 + v5 + 2 * v4 + 2) >> 2;
  int v7 = *(unsigned __int8 *)(a3 - 6);
  int v8 = *(unsigned __int8 *)(a3 - 7);
  unsigned int v9 = (v4 + v7 + 2 * v5 + 2) >> 2;
  int v10 = *(unsigned __int8 *)(a3 - 8);
  int v11 = v5 + v8;
  int v12 = *(unsigned __int8 *)(a3 - 9);
  uint8x8_t v13 = *(uint8x8_t *)(a3 - 2);
  unsigned __int16 v14 = vmovl_u8(v13).u16[0];
  uint8x8_t v15 = *(uint8x8_t *)(a3 - 1);
  v16.i64[0] = 0x2000200020002;
  v16.i64[1] = 0x2000200020002;
  int16x8_t v17 = (int16x8_t)vaddw_u8(v16, v13);
  int16x8_t v18 = vaddq_s16(v17, (int16x8_t)vshll_n_u8(v15, 1uLL));
  int16x8_t v19 = (int16x8_t)vextq_s8((int8x16_t)vmovl_u8(v15), (int8x16_t)v18, 2uLL);
  v19.i16[7] = *(unsigned __int8 *)(a3 + 7);
  int8x8_t result = vshrn_n_s16(vaddq_s16(v18, v19), 2uLL);
  unsigned int v21 = ((v17.u16[1] + 2 * v14 + v3) >> 2) & 0x1FF;
  *a1 = result;
  unsigned int v22 = v17.u16[0] + v4 + 2 * v3;
  uint64_t v23 = (char *)a1 + a2;
  *uint64_t v23 = v21;
  *(_DWORD *)(v23 + 1) = result.i32[0];
  *(_WORD *)(v23 + 5) = result.i16[2];
  v23[7] = result.i8[6];
  int v24 = (v22 >> 2) & 0x1FF;
  uint64_t v25 = (char *)a1 + 2 * a2;
  *uint64_t v25 = v24;
  *(_DWORD *)(v25 + 2) = result.i32[0];
  v25[6] = result.i8[4];
  v25[1] = v21;
  v25[7] = result.i8[5];
  uint64_t v26 = (char *)a1 + 3 * a2;
  *uint64_t v26 = v6;
  unsigned int v27 = (v11 + 2 * v7 + 2) >> 2;
  v26[1] = v24;
  v26[2] = v21;
  *(_DWORD *)(v26 + 3) = result.i32[0];
  v26[7] = result.i8[4];
  __int32 v28 = (char *)a1 + 4 * a2;
  *__int32 v28 = v9;
  unsigned int v29 = (v7 + v10 + 2 * v8 + 2) >> 2;
  v28[1] = v6;
  v28[2] = v24;
  unsigned int v30 = (v8 + v12 + 2 * v10 + 2) >> 2;
  _OWORD v28[3] = v21;
  *((_DWORD *)v28 + 1) = result.i32[0];
  int v31 = (char *)a1 + 5 * a2;
  *int v31 = v27;
  v31[1] = v9;
  v31[2] = v6;
  v31[3] = v24;
  *(_WORD *)(v31 + 5) = result.i16[0];
  v31[4] = v21;
  v31[7] = result.i8[2];
  unsigned int v32 = (char *)a1 + 6 * a2;
  *unsigned int v32 = v29;
  v32[1] = v27;
  v32[2] = v9;
  _OWORD v32[3] = v6;
  v32[4] = v24;
  v32[5] = v21;
  *((_WORD *)v32 + 3) = result.i16[0];
  uint64_t v33 = (char *)&a1[a2] - a2;
  unsigned char *v33 = v30;
  v33[1] = v29;
  v33[2] = v27;
  v33[3] = v9;
  v33[4] = v6;
  v33[5] = v24;
  v33[6] = v21;
  v33[7] = result.i8[0];
  return result;
}

unsigned char *sub_2219DECC4(unsigned char *result, int a2, unsigned __int8 *a3)
{
  int v3 = *(a3 - 1);
  int v4 = *a3;
  unsigned int v5 = v4 + 1 + v3;
  int v6 = a3[1];
  unsigned int v7 = v4 + 1 + v6;
  int v8 = a3[2];
  int v9 = v6 + v8;
  int v10 = a3[3];
  int v11 = v8 + v10;
  int v12 = a3[4];
  int v13 = v10 + v12;
  int v14 = a3[5];
  int v15 = v12 + v14;
  int v16 = a3[6];
  int v17 = v14 + v16;
  int v18 = a3[7];
  int v19 = *(a3 - 2);
  int v20 = v4 + 2;
  int v21 = *(a3 - 3);
  int v22 = *(a3 - 4);
  int v23 = *(a3 - 5);
  int v24 = *(a3 - 6);
  int v25 = *(a3 - 7);
  int v26 = *(a3 - 8);
  result[7] = (v16 + v18 + 1) >> 1;
  int v27 = v4 + 2 + 2 * v3;
  v3 += 2;
  unsigned int v28 = v3 + 2 * v4 + v6;
  unsigned int v29 = v20 + 2 * v6 + v8;
  int v30 = v6 + 2 * v8 + v10;
  int v31 = v8 + 2 * v10 + v12;
  int v32 = v10 + 2 * v12 + v14;
  int v33 = v12 + 2 * v14 + v16;
  int v34 = v14 + 2 * v16;
  v5 >>= 1;
  *int8x8_t result = v5;
  v7 >>= 1;
  result[1] = v7;
  unsigned int v35 = (v9 + 1) >> 1;
  result[2] = v35;
  unsigned int v36 = (v11 + 1) >> 1;
  result[3] = v36;
  unsigned int v37 = (v13 + 1) >> 1;
  result[4] = v37;
  unsigned int v38 = (v15 + 1) >> 1;
  result[5] = v38;
  unsigned int v39 = (v17 + 1) >> 1;
  result[6] = v39;
  unsigned int v40 = (v27 + v19) >> 2;
  int v41 = v34 + v18;
  uint16x8_t v42 = &result[a2];
  *uint16x8_t v42 = v40;
  v28 >>= 2;
  v42[1] = v28;
  v29 >>= 2;
  v42[2] = v29;
  unsigned int v43 = (v30 + 2) >> 2;
  v42[3] = v43;
  unsigned int v44 = (v31 + 2) >> 2;
  v42[4] = v44;
  unsigned int v45 = (v32 + 2) >> 2;
  v42[5] = v45;
  unsigned int v46 = (v33 + 2) >> 2;
  v42[6] = v46;
  v42[7] = (v41 + 2) >> 2;
  unsigned int v47 = (v3 + v21 + 2 * v19) >> 2;
  int16x8_t v48 = &result[2 * a2];
  *int16x8_t v48 = v47;
  v48[1] = v5;
  v48[2] = v7;
  v48[3] = v35;
  v48[4] = v36;
  v48[5] = v37;
  v48[6] = v38;
  v48[7] = v39;
  uint16x8_t v49 = &result[3 * a2];
  unsigned int v50 = (v19 + v22 + 2 * v21 + 2) >> 2;
  *uint16x8_t v49 = v50;
  v49[1] = v40;
  v49[2] = v28;
  v49[3] = v29;
  v49[4] = v43;
  v49[5] = v44;
  v49[6] = v45;
  v49[7] = v46;
  LODWORD(v49) = (v21 + v23 + 2 * v22 + 2) >> 2;
  int v51 = &result[4 * a2];
  *int v51 = (_BYTE)v49;
  v51[1] = v47;
  v51[2] = v5;
  v51[3] = v7;
  v51[4] = v35;
  v51[5] = v36;
  v51[6] = v37;
  v51[7] = v38;
  int8x16_t v52 = &result[5 * a2];
  LODWORD(v51) = (v22 + v24 + 2 * v23 + 2) >> 2;
  *int8x16_t v52 = (_BYTE)v51;
  v52[1] = v50;
  v52[2] = v40;
  v52[3] = v28;
  v52[4] = v29;
  v52[5] = v43;
  v52[6] = v44;
  v52[7] = v45;
  uint16x8_t v53 = &result[6 * a2];
  *uint16x8_t v53 = (v23 + v25 + 2 * v24 + 2) >> 2;
  v53[1] = (_BYTE)v49;
  v53[2] = v47;
  v53[3] = v5;
  v53[4] = v7;
  v53[5] = v35;
  v53[6] = v36;
  v53[7] = v37;
  uint16x8_t v54 = &result[8 * a2 - a2];
  *uint16x8_t v54 = (v24 + v26 + 2 * v25 + 2) >> 2;
  v54[1] = (_BYTE)v51;
  v54[2] = v50;
  v54[3] = v40;
  v54[4] = v28;
  v54[5] = v29;
  v54[6] = v43;
  v54[7] = v44;
  return result;
}

uint16x4_t sub_2219DEF98(uint64_t a1, int a2, unsigned __int8 *a3, uint8x8_t a4)
{
  int v4 = *(a3 - 2);
  int v5 = *(a3 - 1);
  int v6 = *a3;
  unsigned int v7 = (v4 + 1 + v5) >> 1;
  int v8 = v4 + 2;
  a4.i32[0] = *(_DWORD *)(a3 + 1);
  uint8x8_t v9 = (uint8x8_t)vmovl_u8(a4).u64[0];
  int v10 = v9.u16[0];
  unsigned int v11 = (v4 + 2 + 2 * v5 + v6) >> 2;
  int v12 = v5 + 2;
  int v13 = *(a3 - 3);
  int v14 = v5 + 2 + 2 * v6;
  int v15 = *(a3 - 4);
  int v16 = v6 + 2 * v9.u16[0];
  int v17 = *(a3 - 5);
  unsigned int v18 = (v4 + 1 + v13) >> 1;
  int v19 = *(a3 - 6);
  int v20 = *(a3 - 7);
  unsigned int v21 = v12 + 2 * v4 + v13;
  int v22 = *(a3 - 8);
  unsigned int v23 = v21 >> 2;
  int v24 = *(a3 - 9);
  unsigned int v25 = (v13 + v15 + 1) >> 1;
  int v26 = v9.u16[1];
  v9.i32[0] = *(_DWORD *)(a3 + 2);
  uint16x8_t v27 = vmovl_u8(v9);
  int16x4_t v28 = (int16x4_t)vext_s8(*(int8x8_t *)v27.i8, (int8x8_t)a4, 2uLL);
  v28.i16[3] = a3[6];
  unsigned int v29 = (v8 + v15 + 2 * v13) >> 2;
  *(unsigned char *)a1 = v7;
  LOBYTE(v14) = (v14 + v10) >> 2;
  *(unsigned char *)(a1 + 1) = v11;
  *(unsigned char *)(a1 + 2) = v14;
  LOBYTE(v16) = (v16 + v26 + 2) >> 2;
  *(int16x4_t *)v27.i8 = vadd_s16(*(int16x4_t *)v27.i8, *(int16x4_t *)v27.i8);
  int16x8_t v30 = (int16x8_t)vaddw_u8(v27, a4);
  *(unsigned char *)(a1 + 3) = v16;
  *(int16x4_t *)v30.i8 = vadd_s16(*(int16x4_t *)v30.i8, v28);
  *(_DWORD *)(a1 + 4) = vrshrn_n_s16(v30, 2uLL).u32[0];
  unsigned int v31 = (v15 + v17 + 1) >> 1;
  int v32 = (unsigned char *)(a1 + a2);
  *int v32 = v18;
  v32[1] = v23;
  v32[2] = v7;
  unsigned int v33 = (v13 + v17 + 2 * v15 + 2) >> 2;
  _OWORD v32[3] = v11;
  unsigned int v34 = (v17 + v19 + 1) >> 1;
  v32[4] = v14;
  v32[5] = v16;
  uint16x4_t result = vshr_n_u16((uint16x4_t)vadd_s16(*(int16x4_t *)v30.i8, (int16x4_t)0x2000200020002), 2uLL);
  v32[6] = result.i8[0];
  unsigned int v36 = (v15 + v19 + 2 * v17 + 2) >> 2;
  v32[7] = result.i8[2];
  LODWORD(v32) = (v19 + v20 + 1) >> 1;
  unsigned int v37 = (unsigned char *)(a1 + 2 * a2);
  *unsigned int v37 = v25;
  v37[1] = v29;
  v37[2] = v18;
  unsigned int v38 = (v17 + v20 + 2 * v19 + 2) >> 2;
  v37[3] = v23;
  unsigned int v39 = (v20 + v22 + 1) >> 1;
  v37[4] = v7;
  v37[5] = v11;
  v37[6] = v14;
  v37[7] = v16;
  unsigned int v40 = (unsigned char *)(a1 + 3 * a2);
  *unsigned int v40 = v31;
  v40[1] = v33;
  unsigned int v41 = (v19 + v22 + 2 * v20 + 2) >> 2;
  v40[2] = v25;
  v40[3] = v29;
  v40[4] = v18;
  v40[5] = v23;
  v40[6] = v7;
  v40[7] = v11;
  uint16x8_t v42 = (unsigned char *)(a1 + 4 * a2);
  *uint16x8_t v42 = v34;
  v42[1] = v36;
  v42[2] = v31;
  v42[3] = v33;
  v42[4] = v25;
  v42[5] = v29;
  v42[6] = v18;
  v42[7] = v23;
  unsigned int v43 = (unsigned char *)(a1 + 5 * a2);
  *unsigned int v43 = (_BYTE)v32;
  v43[1] = v38;
  v43[2] = v34;
  v43[3] = v36;
  v43[4] = v31;
  v43[5] = v33;
  v43[6] = v25;
  v43[7] = v29;
  unsigned int v44 = (unsigned char *)(a1 + 6 * a2);
  *unsigned int v44 = v39;
  v44[1] = v41;
  v44[2] = (_BYTE)v32;
  v44[3] = v38;
  v44[4] = v34;
  v44[5] = v36;
  v44[6] = v31;
  v44[7] = v33;
  unsigned int v45 = (unsigned char *)(a1 - a2 + 8 * a2);
  *unsigned int v45 = (v22 + v24 + 1) >> 1;
  v45[1] = (v20 + v24 + 2 * v22 + 2) >> 2;
  v45[2] = v39;
  v45[3] = v41;
  v45[4] = (_BYTE)v32;
  v45[5] = v38;
  v45[6] = v34;
  v45[7] = v36;
  return result;
}

unsigned char *sub_2219DF240(unsigned char *result, int a2, unsigned __int8 *a3)
{
  int v3 = *a3;
  int v4 = a3[1];
  int v5 = a3[2];
  int v6 = a3[3];
  unsigned int v7 = (v4 + 1 + v5) >> 1;
  int v8 = a3[4];
  unsigned int v9 = (v5 + v6 + 1) >> 1;
  int v10 = a3[5];
  int v11 = a3[6];
  unsigned int v12 = (v6 + v8 + 1) >> 1;
  int v13 = a3[7];
  unsigned int v14 = (v8 + v10 + 1) >> 1;
  int v15 = a3[8];
  int v16 = a3[9];
  unsigned int v17 = (v10 + v11 + 1) >> 1;
  int v18 = a3[10];
  unsigned int v19 = (v11 + v13 + 1) >> 1;
  int v20 = a3[11];
  int v21 = a3[12];
  unsigned int v22 = (v13 + v15 + 1) >> 1;
  int v23 = v5 + 2;
  *uint16x4_t result = (v4 + 1 + v3) >> 1;
  result[1] = v7;
  unsigned int v24 = (v5 + 2 + v3 + 2 * v4) >> 2;
  result[2] = v9;
  int v25 = v6 + 2;
  result[3] = v12;
  result[4] = v14;
  unsigned int v26 = (v6 + 2 + v4 + 2 * v5) >> 2;
  result[5] = v17;
  result[6] = v19;
  unsigned int v27 = (v23 + 2 * v6 + v8) >> 2;
  result[7] = v22;
  int16x4_t v28 = &result[a2];
  *int16x4_t v28 = v24;
  v28[1] = v26;
  unsigned int v29 = (v25 + 2 * v8 + v10) >> 2;
  v28[2] = v27;
  _OWORD v28[3] = v29;
  unsigned int v30 = (v8 + 2 * v10 + v11 + 2) >> 2;
  v28[4] = v30;
  unsigned int v31 = (v10 + 2 * v11 + v13 + 2) >> 2;
  v28[5] = v31;
  unsigned int v32 = (v11 + 2 * v13 + v15 + 2) >> 2;
  v28[6] = v32;
  unsigned int v33 = (v13 + 2 * v15 + v16 + 2) >> 2;
  v28[7] = v33;
  unsigned int v34 = &result[2 * a2];
  *unsigned int v34 = v7;
  v34[1] = v9;
  v34[2] = v12;
  v34[3] = v14;
  v34[4] = v17;
  v34[5] = v19;
  v34[6] = v22;
  unsigned int v35 = (v15 + v16 + 1) >> 1;
  v34[7] = v35;
  unsigned int v36 = &result[3 * a2];
  unsigned char *v36 = v26;
  v36[1] = v27;
  v36[2] = v29;
  v36[3] = v30;
  v36[4] = v31;
  v36[5] = v32;
  unsigned int v37 = (v15 + 2 * v16 + v18 + 2) >> 2;
  v36[6] = v33;
  v36[7] = v37;
  unsigned int v38 = &result[4 * a2];
  *unsigned int v38 = v9;
  v38[1] = v12;
  v38[2] = v14;
  v38[3] = v17;
  v38[4] = v19;
  unsigned int v39 = (v16 + v18 + 1) >> 1;
  v38[5] = v22;
  v38[6] = v35;
  v38[7] = v39;
  unsigned int v40 = &result[5 * a2];
  *unsigned int v40 = v27;
  unsigned int v41 = (v16 + 2 * v18 + v20 + 2) >> 2;
  v40[1] = v29;
  v40[2] = v30;
  v40[3] = v31;
  v40[4] = v32;
  v40[5] = v33;
  v40[6] = v37;
  v40[7] = v41;
  uint16x8_t v42 = &result[6 * a2];
  *uint16x8_t v42 = v12;
  v42[1] = v14;
  v42[2] = v17;
  v42[3] = v19;
  v42[4] = v22;
  v42[5] = v35;
  v42[6] = v39;
  v42[7] = (v18 + v20 + 1) >> 1;
  unsigned int v43 = &result[8 * a2 - a2];
  *unsigned int v43 = v29;
  v43[1] = v30;
  v43[2] = v31;
  v43[3] = v32;
  v43[4] = v33;
  v43[5] = v37;
  v43[6] = v41;
  v43[7] = (v18 + 2 * v20 + v21 + 2) >> 2;
  return result;
}

int8x8_t sub_2219DF4EC(unsigned char *a1, int a2, uint64_t a3)
{
  int v3 = *(unsigned __int8 *)(a3 - 3);
  int v4 = *(unsigned __int8 *)(a3 - 2);
  int v5 = *(unsigned __int8 *)(a3 - 4);
  unsigned int v6 = (v3 + 1 + v4) >> 1;
  int v7 = *(unsigned __int8 *)(a3 - 5);
  int v8 = *(unsigned __int8 *)(a3 - 6);
  unsigned int v9 = (v5 + 2 + 2 * v3 + v4) >> 2;
  int v10 = *(unsigned __int8 *)(a3 - 7);
  unsigned int v11 = (v3 + 1 + v5) >> 1;
  int v12 = *(unsigned __int8 *)(a3 - 8);
  int v13 = v7 + 2 + v3;
  unsigned int v14 = *(unsigned __int8 *)(a3 - 9);
  int v15 = *(unsigned __int8 *)(a3 - 10);
  unsigned int v16 = (v13 + 2 * v5) >> 2;
  *a1 = v6;
  unsigned int v17 = (v5 + v7 + 1) >> 1;
  a1[1] = v9;
  a1[2] = v11;
  unsigned int v18 = (v5 + 2 + v8 + 2 * v7) >> 2;
  a1[3] = v16;
  a1[4] = v17;
  unsigned int v19 = (v7 + v8 + 1) >> 1;
  a1[5] = v18;
  a1[6] = v19;
  unsigned int v20 = (v7 + 2 + v10 + 2 * v8) >> 2;
  a1[7] = v20;
  int v21 = &a1[a2];
  *int v21 = v11;
  v21[1] = v16;
  unsigned int v22 = (v8 + v10 + 1) >> 1;
  v21[2] = v17;
  v21[3] = v18;
  v21[4] = v19;
  unsigned int v23 = (v8 + v12 + 2 * v10 + 2) >> 2;
  unsigned int v24 = v10 + v12 + 1;
  v21[5] = v20;
  v21[6] = v22;
  v21[7] = v23;
  int v25 = &a1[2 * a2];
  *int v25 = v17;
  unsigned int v26 = v10 + v14 + 2 * v12 + 2;
  unsigned int v27 = v12 + v14 + 1;
  v25[1] = v18;
  v25[2] = v19;
  v25[3] = v20;
  v25[4] = v22;
  v26 >>= 2;
  v25[5] = v23;
  v25[6] = v24 >> 1;
  v25[7] = v26;
  int16x4_t v28 = &a1[3 * a2];
  *int16x4_t v28 = v19;
  v28[1] = v20;
  unsigned int v29 = (v12 + v15 + 2 * v14 + 2) >> 2;
  v28[2] = v22;
  _OWORD v28[3] = v23;
  v28[4] = v24 >> 1;
  v28[5] = v26;
  v28[6] = v27 >> 1;
  v28[7] = v29;
  unsigned int v30 = &a1[4 * a2];
  *unsigned int v30 = v22;
  v30[1] = v23;
  v30[2] = v24 >> 1;
  _OWORD v30[3] = v26;
  v30[4] = v27 >> 1;
  v30[5] = v29;
  v30[6] = v14;
  v30[7] = v14;
  unsigned int v31 = &a1[5 * a2];
  *unsigned int v31 = v24 >> 1;
  v31[1] = v26;
  v31[2] = v27 >> 1;
  int8x8_t result = vdup_n_s8(v14);
  v31[3] = v29;
  *((_DWORD *)v31 + 1) = result.i32[0];
  unsigned int v33 = &a1[6 * a2];
  unsigned char *v33 = v27 >> 1;
  v33[1] = v29;
  *(_DWORD *)(v33 + 2) = result.i32[0];
  v33[6] = v14;
  v33[7] = v14;
  *(int8x8_t *)&a1[8 * a2 - a2] = result;
  return result;
}

int8x16_t sub_2219DF6CC(__int32 *a1, unsigned int a2, int32x4_t *a3, int8x16_t *a4, unsigned __int8 *a5, int a6, int8x16_t result, int8x16_t a8, int8x16_t a9, int8x16_t a10, int8x16_t a11, double a12, double a13, int8x16_t a14)
{
  switch(a6)
  {
    case 0:
      result.i32[0] = *a1;
      a8.i32[0] = *(__int32 *)((char *)a1 + a2);
      a9.i32[0] = *(__int32 *)((char *)a1 + 2 * a2);
      a10.i32[0] = *(__int32 *)((char *)a1 + 3 * a2);
      int16x8_t v15 = (int16x8_t)vzip1q_s8((int8x16_t)*(unsigned int *)((char *)a1 - a5[1] * a2), (int8x16_t)0);
      int64x2_t v16 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(result, (int8x16_t)0), v15);
      int64x2_t v17 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a8, (int8x16_t)0), v15);
      int64x2_t v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a9, (int8x16_t)0), v15);
      int64x2_t v19 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a10, (int8x16_t)0), v15);
      *a3 = vdupq_n_s32(*(__int32 *)((char *)a1 - a5[1] * a2));
      int64x2_t v20 = vzip1q_s64(v16, v17);
      goto LABEL_58;
    case 1:
      int v21 = (unsigned __int8 *)a1 - *a5;
      int v22 = *v21 | (*v21 << 8);
      int v23 = v22 | (v22 << 16);
      int v24 = v21[a2] | (v21[a2] << 8);
      int v25 = v24 | (v24 << 16);
      a3->i32[0] = v23;
      a3->i32[1] = v25;
      result.i32[0] = *(__int32 *)((char *)a1 + a2);
      a8.i32[0] = *a1;
      a10.i32[0] = v23;
      int16x8_t v26 = (int16x8_t)vzip1q_s8(a10, (int8x16_t)0);
      a11.i32[0] = v25;
      int16x8_t v27 = (int16x8_t)vzip1q_s8(a11, (int8x16_t)0);
      int64x2_t v28 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a8, (int8x16_t)0), v26);
      int8x16_t v29 = (int8x16_t)vzip1q_s64(v28, (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(result, (int8x16_t)0), v27));
      *a4 = v29;
      int v30 = v21[2 * a2] | (v21[2 * a2] << 8);
      int v31 = v30 | (v30 << 16);
      LODWORD(v21) = v21[3 * a2] | (v21[3 * a2] << 8);
      LODWORD(v21) = v21 | (v21 << 16);
      a3->i32[2] = v31;
      a3->i32[3] = (int)v21;
      v29.i32[0] = v31;
      v28.i32[0] = (int)v21;
      v26.i32[0] = *(__int32 *)((char *)a1 + 2 * a2);
      v27.i32[0] = *(__int32 *)((char *)a1 + 3 * a2);
      int64x2_t v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v26, (int8x16_t)0), (int16x8_t)vzip1q_s8(v29, (int8x16_t)0));
      int64x2_t v19 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v27, (int8x16_t)0), (int16x8_t)vzip1q_s8((int8x16_t)v28, (int8x16_t)0));
      goto LABEL_59;
    case 2:
      if (*a5)
      {
        int v32 = *((unsigned __int8 *)a1 - 1);
        int v33 = *((unsigned __int8 *)a1 + a2 - 1);
        int v34 = *((unsigned __int8 *)a1 + 2 * a2 - 1);
        int v35 = *((unsigned __int8 *)a1 + 3 * a2 - 1);
        uint64_t v36 = a2;
        if (a5[1])
        {
          result.i32[0] = *(__int32 *)((char *)a1 - a2);
          unsigned int v37 = (vaddvq_s32((int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)result.i8)))
                             + v35
                             + v34
                             + v33
                             + v32
                             + 4) >> 3;
          goto LABEL_50;
        }
        int v86 = v32 + v33 + v34 + v35;
        goto LABEL_40;
      }
      uint64_t v36 = a2;
      if (a5[1])
      {
        result.i32[0] = *(__int32 *)((char *)a1 - a2);
        int v86 = vaddvq_s32((int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)result.i8)));
LABEL_40:
        unsigned int v37 = (v86 + 2) >> 2;
        goto LABEL_50;
      }
      unsigned int v37 = 128;
LABEL_50:
      unsigned int v140 = v37 | (v37 << 8) | ((v37 | (v37 << 8)) << 16);
      int8x16_t v141 = (int8x16_t)vdupq_n_s32(v140);
      *a3 = (int32x4_t)v141;
      v141.i32[0] = *(__int32 *)((char *)a1 + v36);
      a8.i32[0] = *(__int32 *)((char *)a1 + 2 * a2);
      a9.i32[0] = *a1;
      a10.i32[0] = *(__int32 *)((char *)a1 + 3 * a2);
      int16x8_t v142 = (int16x8_t)vzip1q_s8((int8x16_t)v140, (int8x16_t)0);
      int64x2_t v143 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v141, (int8x16_t)0), v142);
      int64x2_t v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a8, (int8x16_t)0), v142);
      int64x2_t v19 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a10, (int8x16_t)0), v142);
      int64x2_t v20 = vzip1q_s64((int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a9, (int8x16_t)0), v142), v143);
      goto LABEL_58;
    case 3:
      if (a5[1]) {
        uint64_t v38 = -(uint64_t)a2;
      }
      else {
        uint64_t v38 = 0;
      }
      unsigned int v39 = *(__int32 *)((char *)a1 + v38);
      if (a5[2]) {
        unsigned int v40 = *(__int32 *)((char *)a1 - a2 + 4);
      }
      else {
        unsigned int v40 = v39 & 0xFF000000 | ((v39 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v39 & 0xFF000000 | ((v39 & 0xFF000000) >> 8)) >> 16);
      }
      a9.i32[0] = v40;
      int8x16_t v87 = vorrq_s8(vextq_s8((int8x16_t)0, a9, 0xCuLL), (int8x16_t)v39);
      v88.i64[0] = 0xE000E000E000ELL;
      v88.i64[1] = 0xE000E000E000ELL;
      v89.i64[0] = -1;
      v89.i64[1] = -1;
      int16x8_t v90 = (int16x8_t)vshlq_u16(v89, v88);
      int16x8_t v91 = (int16x8_t)vzip1q_s8(v87, (int8x16_t)0);
      uint16x8_t v92 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v90, v90), (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v91, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36700)), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)vaddq_s16(v91, v91), (int8x16_t)0, 2uLL), v91));
      v90.i64[0] = 0x1000100010001;
      v90.i64[1] = 0x1000100010001;
      int16x8_t v93 = (int16x8_t)vshlq_u16(v92, (uint16x8_t)v90);
      int16x8_t v94 = (int16x8_t)vextq_s8((int8x16_t)v93, (int8x16_t)0, 2uLL);
      int16x8_t v95 = (int16x8_t)vextq_s8((int8x16_t)v93, (int8x16_t)0, 4uLL);
      int16x8_t v96 = (int16x8_t)vextq_s8((int8x16_t)v93, (int8x16_t)0, 6uLL);
      v97.i64[0] = v93.i64[0];
      v97.i64[1] = v94.i64[0];
      v98.i64[0] = v95.i64[0];
      v98.i64[1] = v96.i64[0];
      int8x16_t v99 = vqmovun_high_s16(vqmovun_s16(v97), v98);
      *a3 = (int32x4_t)v99;
      v99.i32[0] = *a1;
      v98.i32[0] = *(__int32 *)((char *)a1 + a2);
      a14.i32[0] = *(__int32 *)((char *)a1 + 2 * a2);
      v14.i32[0] = *(__int32 *)((char *)a1 + 3 * a2);
      int64x2_t v100 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v99, (int8x16_t)0), v93);
      int64x2_t v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a14, (int8x16_t)0), v95);
      int64x2_t v19 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v14, (int8x16_t)0), v96);
      int64x2_t v20 = vzip1q_s64(v100, (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v98, (int8x16_t)0), v94));
      goto LABEL_58;
    case 4:
      if (*a5)
      {
        if (a5[1])
        {
          uint64_t v41 = a2;
          uint16x8_t v42 = (unsigned __int32 *)((char *)a1 - a2);
          unsigned __int32 v43 = *v42;
          unsigned int v44 = *((unsigned __int8 *)v42 - 1);
          uint64_t v45 = 3 * a2;
          uint64_t v46 = 2 * a2;
          int v47 = *((unsigned __int8 *)a1 + v45 - 1) | (*((unsigned __int8 *)a1 + v46 - 1) << 8);
        }
        else
        {
          unsigned __int32 v43 = *a1;
          unsigned int v44 = *a1;
          uint64_t v45 = 3 * a2;
          uint64_t v46 = 2 * a2;
          int v47 = *((unsigned __int8 *)a1 + v45 - 1) | (*((unsigned __int8 *)a1 + v46 - 1) << 8);
          uint64_t v41 = a2;
        }
        int v101 = v47 | (*((unsigned __int8 *)a1 + a2 - 1) << 16);
        __int32 v102 = *((unsigned __int8 *)a1 - 1);
      }
      else if (a5[1])
      {
        uint64_t v41 = a2;
        unsigned __int32 v43 = *(__int32 *)((char *)a1 - a2);
        uint64_t v45 = 3 * a2;
        uint64_t v46 = 2 * a2;
        unsigned int v44 = v43;
        int v101 = *((unsigned __int8 *)a1 + v45) | (*((unsigned __int8 *)a1 + v46) << 8) | (*((unsigned __int8 *)a1 + a2) << 16);
        __int32 v102 = *(unsigned __int8 *)a1;
      }
      else
      {
        __int32 v102 = *a1;
        unsigned int v44 = *a1;
        uint64_t v45 = 3 * a2;
        uint64_t v46 = 2 * a2;
        uint64_t v41 = a2;
        int v101 = *((unsigned __int8 *)a1 + v45) | (*((unsigned __int8 *)a1 + v46) << 8) | (*((unsigned __int8 *)a1 + a2) << 16);
        unsigned __int32 v43 = *a1;
      }
      unsigned int v124 = v101 | (v102 << 24);
      int64x2_t v125 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v43, 8uLL), (int8x16_t)v44);
      int16x8_t v126 = (int16x8_t)vdupq_n_s64(0xFFFFFFF0uLL);
      int16x8_t v127 = (int16x8_t)vzip1q_s8(vqtbl1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v124, (uint64x2_t)v126), (int8x16_t)vshlq_n_s64(v125, 0x10uLL)), (int8x16_t)xmmword_221A36350), (int8x16_t)0);
      int16x8_t v128 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)v124, (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL)), (int8x16_t)vshlq_n_s64(v125, 0x18uLL)), (int8x16_t)0);
      int16x8_t v129 = (int16x8_t)vzip1q_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vshlq_u64((uint64x2_t)v125, (uint64x2_t)v126), 0x20uLL), (int8x16_t)v124), (int8x16_t)0);
      v130.i64[0] = 0xE000E000E000ELL;
      v130.i64[1] = 0xE000E000E000ELL;
      v126.i64[0] = -1;
      v126.i64[1] = -1;
      int16x8_t v131 = (int16x8_t)vshlq_u16((uint16x8_t)v126, v130);
      uint16x8_t v132 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v128, v128), v127), vaddq_s16(vaddq_s16(v131, v131), v129));
      v127.i64[0] = 0x1000100010001;
      v127.i64[1] = 0x1000100010001;
      int16x8_t v77 = (int16x8_t)vshlq_u16(v132, (uint16x8_t)v127);
      int16x8_t v133 = (int16x8_t)vextq_s8((int8x16_t)v77, (int8x16_t)0, 6uLL);
      int16x8_t v134 = (int16x8_t)vextq_s8((int8x16_t)v77, (int8x16_t)0, 4uLL);
      v126.i64[0] = v133.i64[0];
      v126.i64[1] = v134.i64[0];
      int16x8_t v135 = (int16x8_t)vextq_s8((int8x16_t)v77, (int8x16_t)0, 2uLL);
      v136.i64[0] = v135.i64[0];
      v136.i64[1] = v77.i64[0];
      int8x16_t v137 = vqmovun_high_s16(vqmovun_s16(v126), v136);
      *a3 = (int32x4_t)v137;
      v137.i32[0] = *a1;
      v136.i32[0] = *(__int32 *)((char *)a1 + v41);
      a14.i32[0] = *(__int32 *)((char *)a1 + v46);
      v14.i32[0] = *(__int32 *)((char *)a1 + v45);
      int16x8_t v83 = (int16x8_t)vzip1q_s8(v14, (int8x16_t)0);
      int64x2_t v84 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v137, (int8x16_t)0), v133);
      int64x2_t v85 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v136, (int8x16_t)0), v134);
      int64x2_t v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a14, (int8x16_t)0), v135);
      goto LABEL_44;
    case 5:
      if (*a5)
      {
        if (a5[1])
        {
          uint64_t v48 = a2;
          uint16x8_t v49 = (unsigned __int32 *)((char *)a1 - a2);
          unsigned __int32 v50 = *v49;
          int v51 = (char *)a1 - 1;
          unsigned int v52 = *v49 | (*((unsigned __int8 *)v49 - 1) << 8);
        }
        else
        {
          unsigned __int32 v50 = *a1;
          unsigned int v52 = *a1 | (*a1 << 8);
          int v51 = (char *)a1 - 1;
          uint64_t v48 = a2;
        }
        int v53 = *((unsigned __int8 *)a1 - 1) | (*((unsigned __int8 *)a1 + a2 - 1) << 8);
        uint64_t v138 = 2 * a2;
        int v139 = &v51[v138];
      }
      else
      {
        if (a5[1])
        {
          uint64_t v48 = a2;
          unsigned __int32 v50 = *(__int32 *)((char *)a1 - a2);
          unsigned int v52 = v50 | (v50 << 8);
          int v103 = *(unsigned __int8 *)a1;
        }
        else
        {
          unsigned __int32 v50 = *a1;
          int v103 = *a1;
          unsigned int v52 = v103 | (v103 << 8);
          uint64_t v48 = a2;
        }
        int v53 = v103 | (*((unsigned __int8 *)a1 + a2) << 8);
        uint64_t v138 = 2 * a2;
        int v139 = (char *)a1 + v138;
      }
      v144.i64[0] = 0xE000E000E000ELL;
      v144.i64[1] = 0xE000E000E000ELL;
      v145.i64[0] = -1;
      v145.i64[1] = -1;
      int16x8_t v146 = (int16x8_t)vshlq_u16(v145, v144);
      uint64x2_t v147 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
      int8x16_t v148 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v50, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v52, v147));
      int8x16_t v149 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)(v53 | (*v139 << 16)), 0x10uLL), (int8x16_t)v52);
      int16x8_t v150 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v148, v147), (int8x16_t)0);
      int8x16_t v151 = (int8x16_t)vdupq_n_s64(0xFFFFFFF0uLL);
      int16x8_t v152 = vaddq_s16(v150, (int16x8_t)vzip1q_s8(v148, (int8x16_t)0));
      int16x8_t v153 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v152, v146), v145);
      int16x8_t v154 = vaddq_s16(v146, v146);
      uint16x8_t v155 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v154, v150), v152), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v148, (uint64x2_t)v151), (int8x16_t)0));
      v152.i64[0] = 0x1000100010001;
      v152.i64[1] = 0x1000100010001;
      int8x16_t v156 = (int8x16_t)vshlq_u16(v155, (uint16x8_t)v152);
      int16x8_t v157 = (int16x8_t)vzip1q_s8(v149, (int8x16_t)0);
      int16x8_t v158 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v149, v147), (int8x16_t)0);
      int64x2_t v159 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v154, v157), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v149, (uint64x2_t)v151), (int8x16_t)0)), vaddq_s16(v158, v158)), (uint16x8_t)v152);
      int16x8_t v160 = (int16x8_t)vorrq_s8(vextq_s8((int8x16_t)0, (int8x16_t)v153, 0xEuLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v159, 0x20uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
      int16x8_t v161 = (int16x8_t)vextq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vqtbl1q_s8((int8x16_t)v159, (int8x16_t)xmmword_221A36980), 0), v156, 0xCuLL);
      int16x8_t v162 = (int16x8_t)vextq_s8((int8x16_t)v161, (int8x16_t)0, 2uLL);
      v154.i64[0] = v153.i64[0];
      v154.i64[1] = v162.i64[0];
      v158.i64[0] = v160.i64[0];
      v158.i64[1] = v161.i64[0];
      int8x16_t v163 = vqmovun_high_s16(vqmovun_s16(v154), v158);
      *a3 = (int32x4_t)v163;
      v163.i32[0] = *a1;
      v158.i32[0] = *(__int32 *)((char *)a1 + v48);
      v157.i32[0] = *(__int32 *)((char *)a1 + v138);
      v151.i32[0] = *(__int32 *)((char *)a1 + 3 * a2);
      int64x2_t v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v157, (int8x16_t)0), v160);
      int64x2_t v19 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v151, (int8x16_t)0), v161);
      int64x2_t v20 = vzip1q_s64((int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v163, (int8x16_t)0), v153), (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v158, (int8x16_t)0), v162));
      goto LABEL_58;
    case 6:
      if (*a5)
      {
        if (a5[1])
        {
          uint64_t v54 = a2;
          int16x8_t v55 = (unsigned __int32 *)((char *)a1 - a2);
          unsigned __int32 v56 = *v55;
          int v57 = *((unsigned __int8 *)v55 - 1);
          int v58 = *((unsigned __int8 *)a1 - 1);
          uint64_t v59 = 2 * a2;
          uint64_t v60 = 3 * a2;
          unsigned int v61 = (*((unsigned __int8 *)a1 + v59 - 1) << 16) | (*((unsigned __int8 *)a1 + a2 - 1) << 8) | (*((unsigned __int8 *)a1 + v60 - 1) << 24) | v58;
          unsigned int v62 = v58 | (v57 << 8);
          goto LABEL_57;
        }
        unsigned __int32 v56 = *a1;
        int v105 = *((unsigned __int8 *)a1 - 1);
        uint64_t v54 = a2;
        int v104 = *((unsigned __int8 *)a1 + a2 - 1);
        uint64_t v59 = 2 * a2;
        int v106 = *((unsigned __int8 *)a1 + v59 - 1) << 16;
        uint64_t v60 = 3 * a2;
        int v107 = *((unsigned __int8 *)a1 + v60 - 1);
        goto LABEL_48;
      }
      if (a5[1])
      {
        uint64_t v54 = a2;
        unsigned __int32 v56 = *(__int32 *)((char *)a1 - a2);
        int v104 = *((unsigned __int8 *)a1 + a2);
        int v105 = *(unsigned __int8 *)a1;
        uint64_t v59 = 2 * a2;
        int v106 = *((unsigned __int8 *)a1 + v59) << 16;
        uint64_t v60 = 3 * a2;
        int v107 = *((unsigned __int8 *)a1 + v60);
LABEL_48:
        unsigned int v61 = v106 | (v104 << 8) | (v107 << 24) | v105;
        goto LABEL_56;
      }
      unsigned __int32 v56 = *a1;
      int v105 = *a1;
      uint64_t v54 = a2;
      uint64_t v59 = 2 * a2;
      uint64_t v60 = 3 * a2;
      unsigned int v61 = (*((unsigned __int8 *)a1 + v59) << 16) | (*((unsigned __int8 *)a1 + a2) << 8) | (*((unsigned __int8 *)a1 + v60) << 24) | v105;
LABEL_56:
      unsigned int v62 = v105 & 0xFFFF00FF | (v56 << 8);
LABEL_57:
      v164.i64[0] = 0xE000E000E000ELL;
      v164.i64[1] = 0xE000E000E000ELL;
      v165.i64[0] = -1;
      v165.i64[1] = -1;
      int16x8_t v166 = (int16x8_t)vshlq_u16(v165, v164);
      uint64x2_t v167 = (uint64x2_t)vdupq_n_s64(0xFFFFFFF8uLL);
      int8x16_t v168 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v61, 8uLL), (int8x16_t)vshlq_u64((uint64x2_t)v62, v167));
      int8x16_t v169 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v56, 0x10uLL), (int8x16_t)v62);
      int16x8_t v170 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v168, v167), (int8x16_t)0);
      int8x16_t v171 = (int8x16_t)vdupq_n_s64(0xFFFFFFF0uLL);
      int16x8_t v172 = vaddq_s16(v170, (int16x8_t)vzip1q_s8(v168, (int8x16_t)0));
      int64x2_t v173 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(v172, v166), v165);
      int16x8_t v174 = vaddq_s16(v166, v166);
      uint16x8_t v175 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v174, v170), v172), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v168, (uint64x2_t)v171), (int8x16_t)0));
      v168.i64[0] = 0x1000100010001;
      v168.i64[1] = 0x1000100010001;
      int8x16_t v176 = (int8x16_t)vshlq_u16(v175, (uint16x8_t)v168);
      int16x8_t v177 = (int16x8_t)vzip1q_s8(v169, (int8x16_t)0);
      int16x8_t v178 = (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v169, v167), (int8x16_t)0);
      int64x2_t v179 = (int64x2_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v174, v177), (int16x8_t)vzip1q_s8((int8x16_t)vshlq_u64((uint64x2_t)v169, (uint64x2_t)v171), (int8x16_t)0)), vaddq_s16(v178, v178)), (uint16x8_t)v168);
      int16x8_t v180 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_n_s64(v179, 0x10uLL), (int8x16_t)vshlq_u64((uint64x2_t)vshlq_n_s64(v173, 0x30uLL), (uint64x2_t)vdupq_n_s64(0xFFFFFFD0uLL)));
      v174.i64[0] = 0xF0000000FLL;
      v174.i64[1] = 0xF0000000FLL;
      int16x8_t v181 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vqtbl1q_s8(vextq_s8(vextq_s8((int8x16_t)0, v176, 6uLL), (int8x16_t)0, 8uLL), (int8x16_t)xmmword_221A36940), vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vextq_s8((int8x16_t)0, (int8x16_t)v179, 2uLL), (uint32x4_t)v174), (int8x16_t)vzip1q_s32((int32x4_t)vqtbl1q_s8((int8x16_t)v173, (int8x16_t)xmmword_221A36950), (int32x4_t)0))), (int8x16_t)xmmword_221A36960), (int8x16_t)xmmword_221A36970);
      int16x8_t v182 = (int16x8_t)vextq_s8((int8x16_t)v181, (int8x16_t)0, 8uLL);
      v174.i64[0] = v180.i64[0];
      v174.i64[1] = v182.i64[0];
      int16x8_t v183 = (int16x8_t)vextq_s8((int8x16_t)v181, (int8x16_t)0, 4uLL);
      v178.i64[0] = v183.i64[0];
      v178.i64[1] = v181.i64[0];
      int8x16_t v184 = vqmovun_high_s16(vqmovun_s16(v174), v178);
      *a3 = (int32x4_t)v184;
      v184.i32[0] = *a1;
      v178.i32[0] = *(__int32 *)((char *)a1 + v54);
      v177.i32[0] = *(__int32 *)((char *)a1 + v59);
      v171.i32[0] = *(__int32 *)((char *)a1 + v60);
      int64x2_t v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v177, (int8x16_t)0), v183);
      int64x2_t v19 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v171, (int8x16_t)0), v181);
      int64x2_t v20 = vzip1q_s64((int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v184, (int8x16_t)0), v180), (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v178, (int8x16_t)0), v182));
LABEL_58:
      *a4 = (int8x16_t)v20;
LABEL_59:
      int8x8_t result = (int8x16_t)vzip1q_s64(v18, v19);
      a4[1] = result;
      return result;
    case 7:
      if (a5[1]) {
        uint64_t v63 = -(uint64_t)a2;
      }
      else {
        uint64_t v63 = 0;
      }
      unsigned int v64 = *(__int32 *)((char *)a1 + v63);
      if (a5[2]) {
        unsigned int v65 = *(__int32 *)((char *)a1 - a2 + 4);
      }
      else {
        unsigned int v65 = v64 & 0xFF000000 | ((v64 & 0xFF000000) >> 8) & 0xFFFF0000 | ((v64 & 0xFF000000 | ((v64 & 0xFF000000) >> 8)) >> 16);
      }
      a9.i32[0] = v65;
      int8x16_t v108 = vorrq_s8(vextq_s8((int8x16_t)0, a9, 0xCuLL), (int8x16_t)v64);
      v109.i64[0] = 0xE000E000E000ELL;
      v109.i64[1] = 0xE000E000E000ELL;
      v110.i64[0] = -1;
      v110.i64[1] = -1;
      int16x8_t v111 = (int16x8_t)vshlq_u16(v110, v109);
      int16x8_t v112 = (int16x8_t)vzip1q_s8(v108, (int8x16_t)0);
      int16x8_t v113 = (int16x8_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 2uLL);
      int16x8_t v114 = vaddq_s16(v113, v112);
      int16x8_t v115 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v114, v111), v110);
      uint16x8_t v116 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v111, v111), v113), (int16x8_t)vextq_s8((int8x16_t)v112, (int8x16_t)0, 4uLL)), v114);
      v111.i64[0] = 0x1000100010001;
      v111.i64[1] = 0x1000100010001;
      int16x8_t v117 = (int16x8_t)vshlq_u16(v116, (uint16x8_t)v111);
      int16x8_t v118 = (int16x8_t)vextq_s8((int8x16_t)v115, (int8x16_t)0, 2uLL);
      int16x8_t v119 = (int16x8_t)vextq_s8((int8x16_t)v117, (int8x16_t)0, 2uLL);
      v114.i64[0] = v115.i64[0];
      v114.i64[1] = v117.i64[0];
      v120.i64[0] = v118.i64[0];
      v120.i64[1] = v119.i64[0];
      int8x16_t v121 = vqmovun_high_s16(vqmovun_s16(v114), v120);
      *a3 = (int32x4_t)v121;
      v121.i32[0] = *a1;
      v120.i32[0] = *(__int32 *)((char *)a1 + a2);
      a14.i32[0] = *(__int32 *)((char *)a1 + 2 * a2);
      v14.i32[0] = *(__int32 *)((char *)a1 + 3 * a2);
      int64x2_t v122 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v121, (int8x16_t)0), v115);
      int64x2_t v123 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v120, (int8x16_t)0), v117);
      int64x2_t v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(a14, (int8x16_t)0), v118);
      int64x2_t v19 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v14, (int8x16_t)0), v119);
      int64x2_t v20 = vzip1q_s64(v122, v123);
      goto LABEL_58;
    case 8:
      uint16x8_t v66 = (__int32 *)((char *)a1 + a2);
      uint16x8_t v67 = (__int32 *)((char *)a1 + 2 * a2);
      int16x8_t v68 = (__int32 *)((char *)a1 + 3 * a2);
      v69.i64[0] = 0xE000E000E000ELL;
      v69.i64[1] = 0xE000E000E000ELL;
      v70.i64[0] = -1;
      v70.i64[1] = -1;
      int16x8_t v71 = (int16x8_t)vshlq_u16(v70, v69);
      int16x8_t v72 = (int16x8_t)vzip1q_s8((int8x16_t)(*((unsigned __int8 *)a1 - *a5) | (*((unsigned __int8 *)v66 - *a5) << 8) | (*((unsigned __int8 *)v67 - *a5) << 16) | (unint64_t)(*((unsigned __int8 *)v68 - *a5) << 24)), (int8x16_t)0);
      int16x8_t v73 = (int16x8_t)vextq_s8((int8x16_t)v72, (int8x16_t)0, 2uLL);
      int16x8_t v74 = vaddq_s16(v73, v72);
      int8x16_t v75 = (int8x16_t)vaddq_s16(v74, v71);
      uint16x8_t v76 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v71, v71), v73), (int16x8_t)vqtbl1q_s8(vextq_s8((int8x16_t)v72, (int8x16_t)0, 4uLL), (int8x16_t)xmmword_221A36710)), v74);
      v73.i64[0] = 0x1000100010001;
      v73.i64[1] = 0x1000100010001;
      int16x8_t v77 = (int16x8_t)vqtbl1q_s8((int8x16_t)v72, (int8x16_t)xmmword_221A36930);
      int16x8_t v78 = vzip1q_s16((int16x8_t)vshlq_u16((uint16x8_t)v75, v70), (int16x8_t)vshlq_u16(v76, (uint16x8_t)v73));
      int16x8_t v79 = (int16x8_t)vextq_s8((int8x16_t)v78, (int8x16_t)0, 4uLL);
      int16x8_t v80 = (int16x8_t)vextq_s8((int8x16_t)vdupq_laneq_s32((int32x4_t)v78, 2), (int8x16_t)v77, 0xCuLL);
      v74.i64[0] = v78.i64[0];
      v74.i64[1] = v79.i64[0];
      v81.i64[0] = v80.i64[0];
      v81.i64[1] = v77.i64[0];
      int8x16_t v82 = vqmovun_high_s16(vqmovun_s16(v74), v81);
      *a3 = (int32x4_t)v82;
      v82.i32[0] = *a1;
      v81.i32[0] = *v66;
      v75.i32[0] = *v67;
      v14.i32[0] = *v68;
      int16x8_t v83 = (int16x8_t)vzip1q_s8(v14, (int8x16_t)0);
      int64x2_t v84 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v82, (int8x16_t)0), v78);
      int64x2_t v85 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8((int8x16_t)v81, (int8x16_t)0), v79);
      int64x2_t v18 = (int64x2_t)vsubq_s16((int16x8_t)vzip1q_s8(v75, (int8x16_t)0), v80);
LABEL_44:
      int64x2_t v19 = (int64x2_t)vsubq_s16(v83, v77);
      int64x2_t v20 = vzip1q_s64(v84, v85);
      goto LABEL_58;
    default:
      return result;
  }
}

uint64_t sub_2219E025C(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  if (a4 < a5)
  {
    int v5 = a4;
    uint64_t v8 = *(unsigned int *)(*(void *)(a1 + 80) + 136);
    int v24 = 16 * a2;
    do
    {
      if (a2 < a3)
      {
        unsigned int v9 = (int8x16_t *)(*(void *)(a1 + 152) + 48 * (a2 + *(_DWORD *)(a1 + 12) * v5));
        int v10 = 16 * v5;
        int v11 = a2;
        int v12 = v24;
        do
        {
          int v13 = *(unsigned __int8 **)(a1 + 80);
          if (*(_DWORD *)(a1 + 188) && v13[3])
          {
            int v14 = v13[5];
            int v15 = *v13;
            uint64_t v16 = *((void *)v13 + 4) + (v12 & 0xFFFFFFF0);
            int v17 = *((_DWORD *)v13 + 34);
            int64x2_t v18 = (int8x16_t *)(v16 + (v10 * v17));
            if (v15)
            {
              int64x2_t v18 = (int8x16_t *)(v16 + (32 * v5 * v17));
              int v19 = 32 * v5;
            }
            else
            {
              int v19 = 16 * v5;
            }
            int64x2_t v20 = (int8x16_t *)(v16 + v8 + (v19 * v17));
            if (v14) {
              int v21 = v20;
            }
            else {
              int v21 = v18;
            }
            unsigned int v22 = 2 * v8;
          }
          else
          {
            int v21 = (int8x16_t *)(*((void *)v13 + 4) + (v12 & 0xFFFFFFF0) + (v10 * *((_DWORD *)v13 + 34)));
            unsigned int v22 = v8;
          }
          if ((v9[1].i8[0] & 0xC0) + v9->u8[0] <= 0x7F) {
            sub_2219E0414(a1, v21, (int64x2_t *)v21, v11, v5, v22, v9, v27);
          }
          v9 += 3;
          v12 += 16;
          ++v11;
        }
        while (a3 != v11);
      }
      ++v5;
    }
    while (v5 != a5);
  }
  return 0;
}

uint64_t sub_2219E0414(uint64_t a1, int8x16_t *a2, int64x2_t *a3, int a4, int a5, unsigned int a6, int8x16_t *a7, int8x16_t *a8)
{
  int v10 = *(_DWORD *)(a1 + 12) * a5;
  uint64_t v11 = *(void *)(a1 + 48) + 12 * *(unsigned __int16 *)(*(void *)(a1 + 72) + 2 * (v10 + a4));
  int v12 = *(char *)(v11 + 10);
  int v13 = *(char *)(v11 + 11);
  uint64_t v14 = *(void *)(a1 + 112);
  int v15 = *(unsigned __int8 *)(v14 + v10 + a4);
  unsigned int v16 = a7->u8[0];
  v17.i64[0] = 0x1F1F1F1F1F1F1F1FLL;
  v17.i64[1] = 0x1F1F1F1F1F1F1F1FLL;
  int8x16_t v18 = (int8x16_t)xmmword_221A37900;
  uint64_t v19 = 4 * a6;
  if (v16 <= 0x3F)
  {
    int8x16_t v20 = *a7;
    int8x16_t v21 = vandq_s8(vorrq_s8(vceqzq_s8(*a7), vcgtq_s8(*a7, v17)), (int8x16_t)xmmword_221A37900);
    int8x16_t v22 = vpaddq_s8(v21, v21);
    int8x16_t v23 = vpaddq_s8(v22, v22);
    if (vpaddq_s8(v23, v23).u16[0] != 0xFFFF)
    {
      unsigned int v24 = (v15 + v12) & ~((v15 + v12) >> 31);
      if (v24 >= 0x33) {
        unsigned int v24 = 51;
      }
      unsigned int v25 = (v15 + v13) & ~((v15 + v13) >> 31);
      if (v25 >= 0x33) {
        unsigned int v25 = 51;
      }
      unsigned int v26 = v15 + *(unsigned __int8 *)(v14 + a4 - (a4 != 0) + v10) + 1;
      int v27 = v12 + (v26 >> 1);
      int v28 = v13 + (v26 >> 1);
      unsigned int v29 = v27 & ~(v27 >> 31);
      if (v29 >= 0x33) {
        unsigned int v30 = 51;
      }
      else {
        unsigned int v30 = v29;
      }
      unsigned int v31 = v28 & ~(v28 >> 31);
      if (v31 >= 0x33) {
        unsigned int v31 = 51;
      }
      char v32 = byte_221A37980[v31];
      char v441 = byte_221A37940[v30];
      uint64_t v33 = 3 * a6;
      uint64_t v34 = 2 * a6;
      int8x16_t v35 = *(int8x16_t *)((char *)a2 + a6);
      int16x8_t v36 = (int16x8_t)vzip1q_s8(*a2, v35);
      int8x16_t v37 = *(int8x16_t *)((char *)a2 + v34);
      int8x16_t v38 = *(int8x16_t *)((char *)a2 + v33);
      int16x8_t v39 = (int16x8_t)vzip1q_s8(v37, v38);
      uint64_t v40 = 8 * a6;
      int32x4_t v41 = (int32x4_t)vzip1q_s16(v36, v39);
      int8x16_t v42 = *(int8x16_t *)((char *)a2 + v19 + a6);
      int32x4_t v43 = (int32x4_t)vzip2q_s16(v36, v39);
      int16x8_t v44 = (int16x8_t)vzip2q_s8(*a2, v35);
      int8x16_t v45 = *(int8x16_t *)((char *)a2 + v19);
      int16x8_t v46 = (int16x8_t)vzip2q_s8(v37, v38);
      int8x16_t v47 = *(int8x16_t *)((char *)a2 + v19 + v34);
      int32x4_t v48 = (int32x4_t)vzip2q_s16(v44, v46);
      int32x4_t v49 = (int32x4_t)vzip1q_s16(v44, v46);
      int8x16_t v50 = *(int8x16_t *)((char *)a2 + v19 + v33);
      int16x8_t v51 = (int16x8_t)vzip1q_s8(v45, v42);
      int8x16_t v52 = *(int8x16_t *)((char *)a2 + v40);
      int16x8_t v53 = (int16x8_t)vzip1q_s8(v47, v50);
      int32x4_t v54 = (int32x4_t)vzip1q_s16(v51, v53);
      int8x16_t v55 = *(int8x16_t *)((char *)a2 + v40 + a6);
      int32x4_t v56 = (int32x4_t)vzip2q_s16(v51, v53);
      int8x16_t v57 = *(int8x16_t *)((char *)a2 + v40 + v34);
      int16x8_t v58 = (int16x8_t)vzip2q_s8(v45, v42);
      int16x8_t v59 = (int16x8_t)vzip2q_s8(v47, v50);
      int8x16_t v60 = *(int8x16_t *)((char *)a2 + v40 + v33);
      uint64_t v61 = 12 * a6;
      int32x4_t v62 = (int32x4_t)vzip2q_s16(v58, v59);
      int32x4_t v63 = (int32x4_t)vzip1q_s16(v58, v59);
      int8x16_t v64 = *(int8x16_t *)((char *)a2 + v61 + a6);
      int8x16_t v65 = *(int8x16_t *)((char *)a2 + v61 + v34);
      int16x8_t v66 = (int16x8_t)vzip1q_s8(v52, v55);
      int16x8_t v67 = (int16x8_t)vzip1q_s8(v57, v60);
      int8x16_t v68 = *(int8x16_t *)((char *)a2 + v61 + v33);
      int32x4_t v69 = (int32x4_t)vzip1q_s16(v66, v67);
      int32x4_t v70 = (int32x4_t)vzip2q_s16(v66, v67);
      int8x16_t v71 = *(int8x16_t *)((char *)a2 + v61);
      int16x8_t v72 = (int16x8_t)vzip2q_s8(v52, v55);
      int16x8_t v73 = (int16x8_t)vzip2q_s8(v57, v60);
      int32x4_t v74 = (int32x4_t)vzip2q_s16(v72, v73);
      char v75 = byte_221A37980[v25];
      int32x4_t v76 = (int32x4_t)vzip1q_s16(v72, v73);
      char v442 = byte_221A37940[v24];
      int16x8_t v77 = (int16x8_t)vzip1q_s8(v71, v64);
      int16x8_t v78 = (int16x8_t)vzip1q_s8(v65, v68);
      char v443 = v442;
      int32x4_t v79 = (int32x4_t)vzip1q_s16(v77, v78);
      char v444 = v442;
      int32x4_t v80 = (int32x4_t)vzip2q_s16(v77, v78);
      int16x8_t v81 = (int16x8_t)vzip2q_s8(v71, v64);
      v440[0] = v32;
      int16x8_t v82 = (int16x8_t)vzip2q_s8(v65, v68);
      v440[1] = v75;
      int32x4_t v83 = (int32x4_t)vzip2q_s16(v81, v82);
      int32x4_t v84 = (int32x4_t)vzip1q_s16(v81, v82);
      v440[2] = v75;
      int64x2_t v85 = (int64x2_t)vzip1q_s32(v41, v54);
      v440[3] = v75;
      int64x2_t v86 = (int64x2_t)vzip1q_s32(v69, v79);
      int64x2_t v87 = vzip1q_s64(v85, v86);
      v439[0] = v30;
      int64x2_t v88 = vzip2q_s64(v85, v86);
      v439[1] = v24;
      int64x2_t v89 = (int64x2_t)vzip2q_s32(v41, v54);
      int64x2_t v90 = (int64x2_t)vzip2q_s32(v69, v79);
      v439[2] = v24;
      int64x2_t v91 = vzip1q_s64(v89, v90);
      v439[3] = v24;
      int64x2_t v92 = vzip2q_s64(v89, v90);
      int64x2_t v93 = (int64x2_t)vzip1q_s32(v43, v56);
      int64x2_t v94 = (int64x2_t)vzip1q_s32(v70, v80);
      a8[4] = (int8x16_t)v87;
      a8[5] = (int8x16_t)v88;
      int64x2_t v95 = (int64x2_t)vzip2q_s32(v43, v56);
      a8[6] = (int8x16_t)v91;
      a8[7] = (int8x16_t)v92;
      int64x2_t v96 = (int64x2_t)vzip2q_s32(v70, v80);
      int64x2_t v97 = vzip1q_s64(v95, v96);
      int64x2_t v98 = vzip2q_s64(v95, v96);
      int64x2_t v99 = (int64x2_t)vzip1q_s32(v49, v63);
      a8[8] = (int8x16_t)vzip1q_s64(v93, v94);
      a8[9] = (int8x16_t)vzip2q_s64(v93, v94);
      a8[10] = (int8x16_t)v97;
      a8[11] = (int8x16_t)v98;
      int64x2_t v100 = (int64x2_t)vzip1q_s32(v76, v84);
      a8[12] = (int8x16_t)vzip1q_s64(v99, v100);
      a8[13] = (int8x16_t)vzip2q_s64(v99, v100);
      int64x2_t v101 = (int64x2_t)vzip2q_s32(v49, v63);
      int64x2_t v102 = (int64x2_t)vzip2q_s32(v76, v84);
      a8[14] = (int8x16_t)vzip1q_s64(v101, v102);
      a8[15] = (int8x16_t)vzip2q_s64(v101, v102);
      int64x2_t v103 = (int64x2_t)vzip1q_s32(v48, v62);
      int64x2_t v104 = (int64x2_t)vzip1q_s32(v74, v83);
      int8x16_t v105 = (int8x16_t)vzip1q_s64(v103, v104);
      a8[16] = v105;
      a8[17] = (int8x16_t)vzip2q_s64(v103, v104);
      int64x2_t v106 = (int64x2_t)vzip2q_s32(v48, v62);
      int64x2_t v107 = (int64x2_t)vzip2q_s32(v74, v83);
      int8x16_t v108 = (int8x16_t)vzip1q_s64(v106, v107);
      int8x16_t v109 = (int8x16_t)vzip2q_s64(v106, v107);
      a8[18] = v108;
      a8[19] = v109;
      if (v16 <= 0x1F)
      {
        uint16x8_t v110 = &a3[-1].i8[v19];
        int16x8_t v111 = &a3[-1].i8[v40];
        int16x8_t v112 = &a3[-1].i8[v61];
        v109.i32[0] = *(__int32 *)((char *)&a3[-1].i32[3] + a6);
        v107.i32[0] = *(__int32 *)((char *)&a3[-1].i32[3] + v34);
        v108.i32[0] = a3[-1].i32[3];
        v105.i32[0] = *(__int32 *)((char *)&a3[-1].i32[3] + v33);
        int16x8_t v113 = (int16x8_t)vzip1q_s8((int8x16_t)v107, v105);
        int32x4_t v114 = (int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v108, v109), v113);
        __int32 v115 = *((_DWORD *)v110 + 3);
        v110 += 12;
        v113.i32[0] = *(_DWORD *)&v110[a6];
        v108.i32[0] = *(_DWORD *)&v110[v34];
        v105.i32[0] = v115;
        v76.i32[0] = *(_DWORD *)&v110[v33];
        int16x8_t v116 = (int16x8_t)vzip1q_s8(v108, (int8x16_t)v76);
        int32x4_t v117 = (int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v105, (int8x16_t)v113), v116);
        __int32 v118 = *((_DWORD *)v111 + 3);
        v111 += 12;
        v116.i32[0] = *(_DWORD *)&v111[a6];
        v105.i32[0] = *(_DWORD *)&v111[v34];
        v76.i32[0] = v118;
        v84.i32[0] = *(_DWORD *)&v111[v33];
        int16x8_t v119 = (int16x8_t)vzip1q_s8(v105, (int8x16_t)v84);
        int32x4_t v120 = (int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v76, (int8x16_t)v116), v119);
        __int32 v121 = *((_DWORD *)v112 + 3);
        v112 += 12;
        v119.i32[0] = *(_DWORD *)&v112[a6];
        v76.i32[0] = *(_DWORD *)&v112[v34];
        v84.i32[0] = v121;
        v99.i32[0] = *(_DWORD *)&v112[v33];
        int32x4_t v122 = (int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8((int8x16_t)v84, (int8x16_t)v119), (int16x8_t)vzip1q_s8((int8x16_t)v76, (int8x16_t)v99));
        int64x2_t v123 = (int64x2_t)vzip1q_s32(v114, v117);
        int64x2_t v124 = (int64x2_t)vzip2q_s32(v114, v117);
        int64x2_t v125 = (int64x2_t)vzip1q_s32(v120, v122);
        int64x2_t v126 = (int64x2_t)vzip2q_s32(v120, v122);
        *(int64x2_t *)a8 = vzip1q_s64(v123, v125);
        a8[1] = (int8x16_t)vzip2q_s64(v123, v125);
        a8[2] = (int8x16_t)vzip1q_s64(v124, v126);
        a8[3] = (int8x16_t)vzip2q_s64(v124, v126);
      }
      uint64_t v127 = 0;
      int16x8_t v128 = &v441;
      int16x8_t v129 = v440;
      uint16x8_t v130 = v439;
      int16x8_t v131 = (int16x8_t)vqtbl1q_s8((int8x16_t)xmmword_221A37920, (int8x16_t)xmmword_221A36310);
      v132.i64[0] = 0x2000200020002;
      v132.i64[1] = 0x2000200020002;
      int16x8_t v133 = a7;
      do
      {
        unsigned int v134 = v133->u8[0];
        unsigned int v136 = v133->i32[0];
        int16x8_t v133 = (int8x16_t *)((char *)v133 + 4);
        unint64_t v135 = v136;
        if (v134 <= 0x1F && v135 != 0)
        {
          v62.i32[0] = *v128;
          int8x16_t v138 = vzip1q_s8((int8x16_t)v62, (int8x16_t)v62);
          int8x16_t v139 = vzip1q_s8(v138, v138);
          int8x16_t v140 = vqtbl1q_s8(v139, (int8x16_t)xmmword_221A36310);
          v139.i32[0] = *v129;
          int8x16_t v141 = vzip1q_s8(v139, v139);
          int8x16_t v142 = vqtbl1q_s8(vzip1q_s8(v141, v141), (int8x16_t)xmmword_221A36310);
          int64x2_t v143 = &a8[v127];
          int8x16_t v145 = a8[v127 + 2];
          int8x16_t v144 = a8[v127 + 3];
          int32x4_t v62 = (int32x4_t)a8[v127 + 4];
          int8x16_t v146 = a8[v127 + 5];
          uint8x16_t v147 = vabdq_u8((uint8x16_t)v144, (uint8x16_t)v62);
          int8x16_t v148 = vbicq_s8(vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v144, (uint8x16_t)v145), (uint8x16_t)v142), v142)), vceqq_s8((int8x16_t)vminq_u8(v147, (uint8x16_t)v140), v140)), vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v62, (uint8x16_t)v146), (uint8x16_t)v142), v142));
          int8x16_t v149 = vbicq_s8(v18, v148);
          int8x16_t v150 = vpaddq_s8(v149, v149);
          int8x16_t v151 = vpaddq_s8(v150, v150);
          if (vpaddq_s8(v151, v151).u16[0] != 0xFFFF)
          {
            int16x8_t v152 = (int16x8_t)vzip2q_s8(v144, (int8x16_t)0);
            int16x8_t v153 = (int16x8_t)vzip1q_s8(v144, (int8x16_t)0);
            int16x8_t v154 = (int16x8_t)vzip2q_s8(v145, (int8x16_t)0);
            int16x8_t v155 = (int16x8_t)vzip1q_s8(v145, (int8x16_t)0);
            int16x8_t v156 = (int16x8_t)vzip2q_s8(v146, (int8x16_t)0);
            int16x8_t v157 = (int16x8_t)vzip1q_s8(v146, (int8x16_t)0);
            if (v134 == 4)
            {
              v9.i32[0] = (*v128 >> 2) + 2;
              int8x16_t v158 = vzip1q_s8((int8x16_t)v9, (int8x16_t)v9);
              int8x16_t v159 = vqtbl1q_s8(vzip1q_s8(v158, v158), (int8x16_t)xmmword_221A36310);
              int8x16_t v160 = vceqq_s8((int8x16_t)vminq_u8(v147, (uint8x16_t)v159), v159);
              int16x8_t v161 = vaddq_s16(v156, v154);
              int16x8_t v9 = vaddq_s16(v157, v155);
              int16x8_t v162 = vaddq_s16(vaddq_s16(v152, v154), v131);
              int16x8_t v163 = vaddq_s16(vaddq_s16(v153, v155), v131);
              v164.i64[0] = 0x1000100010001;
              v164.i64[1] = 0x1000100010001;
              int8x16_t v165 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v163, v9), v164)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v162, v161), v164));
              int16x8_t v166 = &a8[v127];
              int16x8_t v167 = (int16x8_t)vzip2q_s8((int8x16_t)v62, (int8x16_t)0);
              int16x8_t v168 = (int16x8_t)vzip1q_s8((int8x16_t)v62, (int8x16_t)0);
              int8x16_t v170 = a8[v127];
              int8x16_t v169 = a8[v127 + 1];
              int16x8_t v171 = (int16x8_t)vzip2q_s8(v169, (int8x16_t)0);
              int16x8_t v172 = (int16x8_t)vzip1q_s8(v169, (int8x16_t)0);
              int16x8_t v173 = vaddq_s16(v162, v167);
              int16x8_t v174 = vaddq_s16(v163, v168);
              int16x8_t v175 = vaddq_s16(v173, v171);
              int16x8_t v176 = vaddq_s16(v174, v172);
              int16x8_t v177 = vaddq_s16((int16x8_t)vzip2q_s8(v170, (int8x16_t)0), v171);
              int16x8_t v178 = vaddq_s16((int16x8_t)vzip1q_s8(v170, (int8x16_t)0), v172);
              v132.i64[0] = 0x2000200020002;
              v132.i64[1] = 0x2000200020002;
              int8x16_t v179 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v176, vaddq_s16(v131, vaddq_s16(v178, v178))), (uint16x8_t)v132)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v177, v177), v131), v175), (uint16x8_t)v132));
              int8x16_t v180 = vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v169, (uint8x16_t)v144), (uint8x16_t)v142), v142)), v160);
              int8x16_t v181 = vbslq_s8(v180, vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v174, v157), v176), (uint16x8_t)v132)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v173, v156), v175), (uint16x8_t)v132)), v165);
              int8x16_t v18 = (int8x16_t)xmmword_221A37900;
              v166[1] = vorrq_s8(vandq_s8(vbslq_s8(v180, v179, v169), v148), vbicq_s8(v169, v148));
              v143[2] = vorrq_s8(vandq_s8(vbslq_s8(v180, vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)v176, v164)), (int16x8_t)vshlq_u16((uint16x8_t)v175, v164)), v145), v148), vbicq_s8(v145, v148));
              v143[3] = vorrq_s8(vandq_s8(v181, v148), vbicq_s8(v144, v148));
              int16x8_t v182 = vaddq_s16(vaddq_s16(v156, v167), v131);
              int16x8_t v183 = vaddq_s16(vaddq_s16(v157, v168), v131);
              int8x16_t v184 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v183, v9), v164)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v182, v161), v164));
              int8x16_t v185 = a8[v127 + 6];
              int8x16_t v186 = a8[v127 + 7];
              int16x8_t v187 = (int16x8_t)vzip2q_s8(v185, (int8x16_t)0);
              int16x8_t v188 = (int16x8_t)vzip1q_s8(v185, (int8x16_t)0);
              int16x8_t v189 = vaddq_s16(v182, v152);
              int16x8_t v190 = vaddq_s16(v183, v153);
              int16x8_t v191 = vaddq_s16(v189, v187);
              int16x8_t v192 = vaddq_s16(v190, v188);
              int16x8_t v193 = vaddq_s16((int16x8_t)vzip2q_s8(v186, (int8x16_t)0), v187);
              int16x8_t v194 = vaddq_s16((int16x8_t)vzip1q_s8(v186, (int8x16_t)0), v188);
              int8x16_t v195 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v192, vaddq_s16(v131, vaddq_s16(v194, v194))), (uint16x8_t)v132)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v193, v193), v131), v191), (uint16x8_t)v132));
              int8x16_t v196 = vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v185, (uint8x16_t)v62), (uint8x16_t)v142), v142)), v160);
              v143[4] = vorrq_s8(vandq_s8(vbslq_s8(v196, vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v190, v155), v192), (uint16x8_t)v132)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v189, v154), v191), (uint16x8_t)v132)), v184), v148), vbicq_s8((int8x16_t)v62, v148));
              v143[5] = vorrq_s8(vandq_s8(vbslq_s8(v196, vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)v192, v164)), (int16x8_t)vshlq_u16((uint16x8_t)v191, v164)), v146), v148), vbicq_s8(v146, v148));
              v166[6] = vorrq_s8(vandq_s8(vbslq_s8(v196, v195, v185), v148), vbicq_s8(v185, v148));
            }
            else
            {
              int16x8_t v197 = (int16x8_t)vzip1q_s8(v20, v20);
              int8x16_t v198 = vceqzq_s8((int8x16_t)vzip1q_s16(v197, v197));
              int8x16_t v199 = (char *)&unk_221A379C0 + 4 * *v130;
              int8x16_t v200 = vbicq_s8(v148, v198);
              v198.i32[0] = v199[v135] | (v199[BYTE1(v135)] << 8) | (v199[BYTE2(v135)] << 16) | (v199[v135 >> 24] << 24);
              int16x8_t v201 = (int16x8_t)vzip1q_s8(v198, v198);
              int8x16_t v202 = a8[v127 + 1];
              int16x8_t v9 = (int16x8_t)a8[v127 + 6];
              int8x16_t v203 = vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v9, (uint8x16_t)v62), (uint8x16_t)v142), v142);
              int8x16_t v204 = vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v202, (uint8x16_t)v144), (uint8x16_t)v142), v142);
              int8x16_t v205 = (int8x16_t)vzip1q_s16(v201, v201);
              v206.i64[0] = 0x202020202020202;
              v206.i64[1] = 0x202020202020202;
              int8x16_t v207 = vaddq_s8(vaddq_s8(vsubq_s8(vbicq_s8(v206, v203), v203), v204), v205);
              int16x8_t v208 = (int16x8_t)vqtbl1q_s8((int8x16_t)xmmword_221A37910, (int8x16_t)xmmword_221A36310);
              int16x8_t v209 = (int16x8_t)vzip2q_s8((int8x16_t)v62, (int8x16_t)0);
              int16x8_t v210 = (int16x8_t)vzip1q_s8((int8x16_t)v62, (int8x16_t)0);
              int16x8_t v211 = (int16x8_t)vzip2q_s8(v207, (int8x16_t)0);
              int16x8_t v212 = vminq_s16(vmaxq_s16(vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v154, v156), v208), vshlq_n_s16(vsubq_s16(v209, v152), 2uLL)), v132), vnegq_s16(v211)), v211);
              int16x8_t v213 = (int16x8_t)vzip1q_s8(v207, (int8x16_t)0);
              int16x8_t v214 = vminq_s16(vmaxq_s16(vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v155, v157), v208), vshlq_n_s16(vsubq_s16(v210, v153), 2uLL)), v132), vnegq_s16(v213)), v213);
              int8x16_t v215 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(v214, v153)), vaddq_s16(v212, v152));
              int8x16_t v216 = vqmovun_high_s16(vqmovun_s16(vsubq_s16(v210, v214)), vsubq_s16(v209, v212));
              int8x16_t v217 = (int8x16_t)vrhaddq_u8((uint8x16_t)v144, (uint8x16_t)v62);
              int16x8_t v218 = (int16x8_t)vzip2q_s8(v217, (int8x16_t)0);
              int16x8_t v219 = (int16x8_t)vzip1q_s8(v217, (int8x16_t)0);
              int16x8_t v220 = vaddq_s16(vsubq_s16((int16x8_t)vzip2q_s8(v202, (int8x16_t)0), vaddq_s16(v154, v154)), v218);
              int16x8_t v221 = vsubq_s16(vaddq_s16(v219, (int16x8_t)vzip1q_s8(v202, (int8x16_t)0)), vaddq_s16(v155, v155));
              int16x8_t v222 = (int16x8_t)vzip2q_s8(v205, (int8x16_t)0);
              int16x8_t v223 = vnegq_s16(v222);
              v224.i64[0] = -1;
              v224.i64[1] = -1;
              int16x8_t v225 = (int16x8_t)vzip1q_s8(v205, (int8x16_t)0);
              int16x8_t v226 = vnegq_s16(v225);
              v143[2] = vbslq_s8(v200, vbslq_s8(v204, v145, vaddq_s8(vqmovn_high_s16(vqmovn_s16(vminq_s16(vmaxq_s16(vshlq_s16(v221, v224), v226), v225)), vminq_s16(vmaxq_s16(vshlq_s16(v220, v224), v223), v222)), v145)), v145);
              v143[3] = vbslq_s8(v200, v215, v144);
              v143[4] = vbslq_s8(v200, v216, (int8x16_t)v62);
              v143[5] = vbslq_s8(v200, vaddq_s8(v146, vbicq_s8(vqmovn_high_s16(vqmovn_s16(vminq_s16(vmaxq_s16(vshlq_s16(vsubq_s16(vaddq_s16(v219, (int16x8_t)vzip1q_s8((int8x16_t)v9, (int8x16_t)0)), vaddq_s16(v157, v157)), v224), v226), v225)), vminq_s16(vmaxq_s16(vshlq_s16(vsubq_s16(
                                        vaddq_s16(v218, (int16x8_t)vzip2q_s8((int8x16_t)v9, (int8x16_t)0)),
                                        vaddq_s16(v156, v156)),
                                      v224),
                                    v223),
                                  v222)),
                              v203)),
                          v146);
            }
          }
        }
        int8x16_t v20 = vextq_s8(v20, (int8x16_t)0, 4uLL);
        ++v128;
        ++v129;
        ++v130;
        v127 += 4;
      }
      while (v127 != 16);
      int8x16_t v227 = a8[4];
      int8x16_t v228 = a8[5];
      int16x8_t v229 = (int16x8_t)vzip1q_s8(v227, v228);
      int8x16_t v230 = a8[6];
      int8x16_t v231 = a8[7];
      int16x8_t v232 = (int16x8_t)vzip1q_s8(v230, v231);
      int32x4_t v233 = (int32x4_t)vzip1q_s16(v229, v232);
      int32x4_t v234 = (int32x4_t)vzip2q_s16(v229, v232);
      int16x8_t v235 = (int16x8_t)vzip2q_s8(v227, v228);
      int16x8_t v236 = (int16x8_t)vzip2q_s8(v230, v231);
      int32x4_t v237 = (int32x4_t)vzip2q_s16(v235, v236);
      int32x4_t v238 = (int32x4_t)vzip1q_s16(v235, v236);
      int8x16_t v239 = a8[8];
      int8x16_t v240 = a8[9];
      int16x8_t v241 = (int16x8_t)vzip1q_s8(v239, v240);
      int8x16_t v242 = a8[10];
      int8x16_t v243 = a8[11];
      int16x8_t v244 = (int16x8_t)vzip1q_s8(v242, v243);
      int32x4_t v245 = (int32x4_t)vzip1q_s16(v241, v244);
      int32x4_t v246 = (int32x4_t)vzip2q_s16(v241, v244);
      int16x8_t v247 = (int16x8_t)vzip2q_s8(v239, v240);
      int16x8_t v248 = (int16x8_t)vzip2q_s8(v242, v243);
      int32x4_t v249 = (int32x4_t)vzip2q_s16(v247, v248);
      int32x4_t v250 = (int32x4_t)vzip1q_s16(v247, v248);
      int8x16_t v251 = a8[12];
      int8x16_t v252 = a8[13];
      int16x8_t v253 = (int16x8_t)vzip1q_s8(v251, v252);
      int8x16_t v254 = a8[14];
      int8x16_t v255 = a8[15];
      int16x8_t v256 = (int16x8_t)vzip1q_s8(v254, v255);
      int32x4_t v257 = (int32x4_t)vzip1q_s16(v253, v256);
      int32x4_t v258 = (int32x4_t)vzip2q_s16(v253, v256);
      int16x8_t v259 = (int16x8_t)vzip2q_s8(v251, v252);
      int16x8_t v260 = (int16x8_t)vzip2q_s8(v254, v255);
      int32x4_t v261 = (int32x4_t)vzip2q_s16(v259, v260);
      int32x4_t v262 = (int32x4_t)vzip1q_s16(v259, v260);
      int8x16_t v263 = a8[16];
      int8x16_t v264 = a8[17];
      int8x16_t v265 = a8[18];
      int8x16_t v266 = a8[19];
      int16x8_t v267 = (int16x8_t)vzip1q_s8(v263, v264);
      int16x8_t v268 = (int16x8_t)vzip1q_s8(v265, v266);
      int32x4_t v269 = (int32x4_t)vzip1q_s16(v267, v268);
      int32x4_t v270 = (int32x4_t)vzip2q_s16(v267, v268);
      int16x8_t v271 = (int16x8_t)vzip2q_s8(v263, v264);
      int16x8_t v272 = (int16x8_t)vzip2q_s8(v265, v266);
      int32x4_t v273 = (int32x4_t)vzip2q_s16(v271, v272);
      int32x4_t v274 = (int32x4_t)vzip1q_s16(v271, v272);
      v275 = (int64x2_t *)((char *)a3 + v19);
      int v276 = (int64x2_t *)((char *)a3 + 8 * a6);
      int v277 = (int64x2_t *)((char *)a3 + v61);
      int64x2_t v278 = (int64x2_t)vzip1q_s32(v233, v245);
      int64x2_t v279 = (int64x2_t)vzip1q_s32(v257, v269);
      *a3 = vzip1q_s64(v278, v279);
      *(int64x2_t *)((char *)a3 + a6) = vzip2q_s64(v278, v279);
      int64x2_t v280 = (int64x2_t)vzip2q_s32(v233, v245);
      int64x2_t v281 = (int64x2_t)vzip2q_s32(v257, v269);
      *(int64x2_t *)((char *)a3 + v34) = vzip1q_s64(v280, v281);
      *(int64x2_t *)((char *)a3 + v33) = vzip2q_s64(v280, v281);
      int64x2_t v282 = (int64x2_t)vzip1q_s32(v234, v246);
      int64x2_t v8 = (int64x2_t)vzip1q_s32(v258, v270);
      int64x2_t *v275 = vzip1q_s64(v282, v8);
      *(int64x2_t *)((char *)v275 + a6) = vzip2q_s64(v282, v8);
      int64x2_t v283 = (int64x2_t)vzip2q_s32(v234, v246);
      int64x2_t v284 = (int64x2_t)vzip2q_s32(v258, v270);
      *(int64x2_t *)((char *)v275 + v34) = vzip1q_s64(v283, v284);
      *(int64x2_t *)((char *)v275 + v33) = vzip2q_s64(v283, v284);
      int64x2_t v285 = (int64x2_t)vzip1q_s32(v238, v250);
      int64x2_t v286 = (int64x2_t)vzip1q_s32(v262, v274);
      *int v276 = vzip1q_s64(v285, v286);
      *(int64x2_t *)((char *)v276 + a6) = vzip2q_s64(v285, v286);
      int64x2_t v287 = (int64x2_t)vzip2q_s32(v238, v250);
      int64x2_t v288 = (int64x2_t)vzip2q_s32(v262, v274);
      *(int64x2_t *)((char *)v276 + v34) = vzip1q_s64(v287, v288);
      *(int64x2_t *)((char *)v276 + v33) = vzip2q_s64(v287, v288);
      int64x2_t v289 = (int64x2_t)vzip1q_s32(v237, v249);
      int64x2_t v290 = (int64x2_t)vzip1q_s32(v261, v273);
      *int v277 = vzip1q_s64(v289, v290);
      *(int64x2_t *)((char *)v277 + a6) = vzip2q_s64(v289, v290);
      int64x2_t v291 = (int64x2_t)vzip2q_s32(v237, v249);
      int64x2_t v292 = (int64x2_t)vzip2q_s32(v261, v273);
      *(int64x2_t *)((char *)v277 + v34) = vzip1q_s64(v291, v292);
      *(int64x2_t *)((char *)v277 + v33) = vzip2q_s64(v291, v292);
      v17.i64[0] = 0x1F1F1F1F1F1F1F1FLL;
      v17.i64[1] = 0x1F1F1F1F1F1F1F1FLL;
      if (v16 <= 0x1F)
      {
        int8x16_t v293 = a8[1];
        int8x16_t v294 = a8[2];
        int8x16_t v295 = a8[3];
        int8x16_t v296 = vzip1q_s8(*a8, v294);
        int8x16_t v297 = vzip2q_s8(*a8, v294);
        int8x16_t v298 = vzip1q_s8(v293, v295);
        int8x16_t v299 = vzip2q_s8(v293, v295);
        int8x16_t v300 = vzip1q_s8(v296, v298);
        int8x16_t v301 = vextq_s8(v300, (int8x16_t)0, 4uLL);
        a3[-1].i32[3] = v300.i32[0];
        int v302 = (__int32 *)((char *)&a3[-1].i32[3] + a6);
        *int v302 = v301.i32[0];
        int v303 = (_DWORD *)((char *)v302 + a6);
        v300.i64[0] = vextq_s8(v301, v297, 4uLL).u64[0];
        *int v303 = v300.i32[0];
        unsigned int v304 = (_DWORD *)((char *)v303 + a6);
        *unsigned int v304 = v300.i32[1];
        int8x16_t v305 = vzip2q_s8(v296, v298);
        unsigned int v306 = (_DWORD *)((char *)v304 + a6);
        *unsigned int v306 = v305.i32[0];
        unsigned int v307 = (_DWORD *)((char *)v306 + a6);
        int8x16_t v308 = vextq_s8(v305, (int8x16_t)0, 4uLL);
        *unsigned int v307 = v308.i32[0];
        unsigned int v309 = (_DWORD *)((char *)v307 + a6);
        v308.i64[0] = vextq_s8(v308, v297, 4uLL).u64[0];
        *unsigned int v309 = v308.i32[0];
        unsigned int v310 = (_DWORD *)((char *)v309 + a6);
        *unsigned int v310 = v308.i32[1];
        int8x16_t v311 = vzip1q_s8(v297, v299);
        int v312 = (_DWORD *)((char *)v310 + a6);
        *int v312 = v311.i32[0];
        int v313 = (_DWORD *)((char *)v312 + a6);
        int8x16_t v314 = vextq_s8(v311, (int8x16_t)0, 4uLL);
        *int v313 = v314.i32[0];
        unsigned int v315 = (_DWORD *)((char *)v313 + a6);
        v314.i64[0] = vextq_s8(v314, v297, 4uLL).u64[0];
        *unsigned int v315 = v314.i32[0];
        uint64_t v316 = (_DWORD *)((char *)v315 + a6);
        *uint64_t v316 = v314.i32[1];
        int8x16_t v317 = vzip2q_s8(v297, v299);
        int v318 = (_DWORD *)((char *)v316 + a6);
        *int v318 = v317.i32[0];
        v319 = (_DWORD *)((char *)v318 + a6);
        int8x16_t v320 = vextq_s8(v317, (int8x16_t)0, 4uLL);
        _DWORD *v319 = v320.i32[0];
        unsigned int v321 = (_DWORD *)((char *)v319 + a6);
        v320.i64[0] = vextq_s8(v320, v320, 4uLL).u64[0];
        *unsigned int v321 = v320.i32[0];
        *(_DWORD *)((char *)v321 + a6) = v320.i32[1];
      }
    }
  }
  if (a7[1].u8[0] <= 0x3Fu)
  {
    int8x16_t v322 = a7[1];
    int8x16_t v323 = vandq_s8(vorrq_s8(vceqzq_s8(v322), vcgtq_s8(v322, v17)), v18);
    int8x16_t v324 = vpaddq_s8(v323, v323);
    int8x16_t v325 = vpaddq_s8(v324, v324);
    if (vpaddq_s8(v325, v325).u16[0] != 0xFFFF)
    {
      uint64_t v326 = 0;
      int v327 = 0;
      unsigned int v328 = (v15 + v12) & ~((v15 + v12) >> 31);
      if (v328 >= 0x33) {
        unsigned int v328 = 51;
      }
      unsigned int v329 = (v15 + v13) & ~((v15 + v13) >> 31);
      if (v329 >= 0x33) {
        unsigned int v329 = 51;
      }
      unsigned int v330 = v15
           + *(unsigned __int8 *)(*(void *)(a1 + 112) + a4 + *(_DWORD *)(a1 + 12) * (a5 - (a5 != 0)))
           + 1;
      unsigned int v331 = (v12 + (v330 >> 1)) & ~((int)(v12 + (v330 >> 1)) >> 31);
      if (v331 >= 0x33) {
        unsigned int v331 = 51;
      }
      unsigned int v332 = (v13 + (v330 >> 1)) & ~((int)(v13 + (v330 >> 1)) >> 31);
      if (v332 >= 0x33) {
        unsigned int v333 = 51;
      }
      else {
        unsigned int v333 = v332;
      }
      char v334 = byte_221A37980[v333];
      char v335 = byte_221A37940[v328];
      char v336 = byte_221A37980[v329];
      v438[0] = byte_221A37940[v331];
      v438[1] = v335;
      v438[2] = v335;
      v438[3] = v335;
      v437[0] = v334;
      v437[1] = v336;
      v437[2] = v336;
      v437[3] = v336;
      v436[0] = v331;
      v436[1] = v328;
      v436[2] = v328;
      v436[3] = v328;
      int v337 = a7 + 1;
      int8x16_t v338 = (int8x16_t)xmmword_221A37920;
      int16x8_t v339 = (int16x8_t)vqtbl1q_s8((int8x16_t)xmmword_221A37920, (int8x16_t)xmmword_221A36310);
      v340.i64[0] = 0x2000200020002;
      v340.i64[1] = 0x2000200020002;
      do
      {
        unsigned int v341 = v337->u8[0];
        unsigned int v343 = v337->i32[0];
        int v337 = (int8x16_t *)((char *)v337 + 4);
        unint64_t v342 = v343;
        if (v341 <= 0x1F && v342 != 0)
        {
          v338.i32[0] = v438[v326];
          int8x16_t v345 = vzip1q_s8(v338, v338);
          int8x16_t v346 = vqtbl1q_s8(vzip1q_s8(v345, v345), (int8x16_t)xmmword_221A36310);
          v8.i32[0] = v437[v326];
          int8x16_t v347 = vzip1q_s8((int8x16_t)v8, (int8x16_t)v8);
          int8x16_t v348 = vqtbl1q_s8(vzip1q_s8(v347, v347), (int8x16_t)xmmword_221A36310);
          int v349 = (uint8x16_t *)&a3->i8[v327];
          int8x16_t v350 = *(int8x16_t *)((char *)v349 - 2 * (int)a6);
          int8x16_t v351 = *(int8x16_t *)((char *)v349 - (int)a6);
          int64x2_t v8 = *(int64x2_t *)v349;
          int8x16_t v352 = *(int8x16_t *)((char *)v349 + (int)a6);
          uint8x16_t v353 = vabdq_u8((uint8x16_t)v351, *v349);
          int8x16_t v354 = vbicq_s8(vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v351, (uint8x16_t)v350), (uint8x16_t)v348), v348)), vceqq_s8((int8x16_t)vminq_u8(v353, (uint8x16_t)v346), v346)), vceqq_s8((int8x16_t)vminq_u8(vabdq_u8(*v349, (uint8x16_t)v352), (uint8x16_t)v348), v348));
          int8x16_t v355 = vbicq_s8(v18, v354);
          int8x16_t v356 = vpaddq_s8(v355, v355);
          int8x16_t v357 = vpaddq_s8(v356, v356);
          int8x16_t v338 = vpaddq_s8(v357, v357);
          if (v338.i16[0] != -1)
          {
            int16x8_t v358 = (int16x8_t)vzip2q_s8(v351, (int8x16_t)0);
            int16x8_t v359 = (int16x8_t)vzip1q_s8(v351, (int8x16_t)0);
            int16x8_t v360 = (int16x8_t)vzip2q_s8(v350, (int8x16_t)0);
            int16x8_t v361 = (int16x8_t)vzip1q_s8(v350, (int8x16_t)0);
            int16x8_t v362 = (int16x8_t)vzip2q_s8(v352, (int8x16_t)0);
            int16x8_t v363 = (int16x8_t)vzip1q_s8(v352, (int8x16_t)0);
            if (v341 == 4)
            {
              v338.i32[0] = (v438[v326] >> 2) + 2;
              int8x16_t v364 = vzip1q_s8(v338, v338);
              int8x16_t v365 = vqtbl1q_s8(vzip1q_s8(v364, v364), (int8x16_t)xmmword_221A36310);
              int8x16_t v366 = vceqq_s8((int8x16_t)vminq_u8(v353, (uint8x16_t)v365), v365);
              int16x8_t v367 = vaddq_s16(v362, v360);
              int16x8_t v368 = vaddq_s16(v363, v361);
              int16x8_t v369 = vaddq_s16(vaddq_s16(v358, v360), v339);
              int16x8_t v370 = vaddq_s16(vaddq_s16(v359, v361), v339);
              v371.i64[0] = 0x1000100010001;
              v371.i64[1] = 0x1000100010001;
              int8x16_t v372 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v370, v368), v371)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v369, v367), v371));
              int8x16_t v373 = *(int8x16_t *)((char *)v349 - 3 * (int)a6);
              int16x8_t v374 = (int16x8_t)vzip2q_s8((int8x16_t)v8, (int8x16_t)0);
              int16x8_t v375 = (int16x8_t)vzip1q_s8((int8x16_t)v8, (int8x16_t)0);
              int16x8_t v376 = (int16x8_t)vzip2q_s8(v373, (int8x16_t)0);
              int16x8_t v377 = (int16x8_t)vzip1q_s8(v373, (int8x16_t)0);
              int16x8_t v378 = vaddq_s16(v369, v374);
              int16x8_t v379 = vaddq_s16(v370, v375);
              int16x8_t v380 = vaddq_s16(v378, v376);
              int16x8_t v381 = vaddq_s16(v379, v377);
              int8x16_t v382 = *(int8x16_t *)((char *)v349 - (int)v19);
              int16x8_t v383 = vaddq_s16((int16x8_t)vzip2q_s8(v382, (int8x16_t)0), v376);
              v340.i64[0] = 0x2000200020002;
              v340.i64[1] = 0x2000200020002;
              int16x8_t v384 = vaddq_s16((int16x8_t)vzip1q_s8(v382, (int8x16_t)0), v377);
              int8x16_t v385 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v379, v363), v381), (uint16x8_t)v340)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v378, v362), v380), (uint16x8_t)v340));
              int8x16_t v386 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)v381, v371)), (int16x8_t)vshlq_u16((uint16x8_t)v380, v371));
              int8x16_t v387 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v381, vaddq_s16(v339, vaddq_s16(v384, v384))), (uint16x8_t)v340)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v383, v383), v339), v380), (uint16x8_t)v340));
              int8x16_t v388 = vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v373, (uint8x16_t)v351), (uint8x16_t)v348), v348)), v366);
              *(int8x16_t *)((char *)v349 - 3 * (int)a6) = vorrq_s8(vandq_s8(vbslq_s8(v388, v387, v373), v354), vbicq_s8(v373, v354));
              *(int8x16_t *)((char *)v349 - 2 * (int)a6) = vorrq_s8(vandq_s8(vbslq_s8(v388, v386, v350), v354), vbicq_s8(v350, v354));
              *(int8x16_t *)((char *)v349 - (int)a6) = vorrq_s8(vandq_s8(vbslq_s8(v388, v385, v372), v354), vbicq_s8(v351, v354));
              int16x8_t v389 = vaddq_s16(v362, v374);
              int8x16_t v18 = (int8x16_t)xmmword_221A37900;
              int16x8_t v390 = vaddq_s16(v389, v339);
              int16x8_t v391 = vaddq_s16(vaddq_s16(v363, v375), v339);
              int8x16_t v392 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v391, v368), v371)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v390, v367), v371));
              int8x16_t v393 = *(int8x16_t *)((char *)v349 + 2 * (int)a6);
              int16x8_t v394 = (int16x8_t)vzip2q_s8(v393, (int8x16_t)0);
              int16x8_t v395 = (int16x8_t)vzip1q_s8(v393, (int8x16_t)0);
              int16x8_t v396 = vaddq_s16(v390, v358);
              int16x8_t v397 = vaddq_s16(v391, v359);
              int16x8_t v398 = vaddq_s16(v396, v394);
              int16x8_t v399 = vaddq_s16(v397, v395);
              int8x16_t v400 = *(int8x16_t *)((char *)v349 + 3 * (int)a6);
              int16x8_t v401 = vaddq_s16((int16x8_t)vzip2q_s8(v400, (int8x16_t)0), v394);
              int16x8_t v402 = vaddq_s16((int16x8_t)vzip1q_s8(v400, (int8x16_t)0), v395);
              int8x16_t v403 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v397, v361), v399), (uint16x8_t)v340)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(v396, v360), v398), (uint16x8_t)v340));
              int8x16_t v404 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v399, vaddq_s16(v339, vaddq_s16(v402, v402))), (uint16x8_t)v340)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v401, v401), v339), v398), (uint16x8_t)v340));
              int8x16_t v405 = vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v393, (uint8x16_t)v8), (uint8x16_t)v348), v348)), v366);
              int8x16_t v338 = vorrq_s8(vandq_s8(vbslq_s8(v405, vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)v399, v371)), (int16x8_t)vshlq_u16((uint16x8_t)v398, v371)), v352), v354), vbicq_s8(v352, v354));
              *(int8x16_t *)int v349 = vorrq_s8(vandq_s8(vbslq_s8(v405, v403, v392), v354), vbicq_s8((int8x16_t)v8, v354));
              *(int8x16_t *)((char *)v349 + (int)a6) = v338;
              *(int8x16_t *)((char *)v349 + 2 * (int)a6) = vorrq_s8(vandq_s8(vbslq_s8(v405, v404, v393), v354), vbicq_s8(v393, v354));
            }
            else
            {
              int16x8_t v406 = (int16x8_t)vzip1q_s8(v322, v322);
              int8x16_t v407 = vceqzq_s8((int8x16_t)vzip1q_s16(v406, v406));
              int8x16_t v408 = vbicq_s8(v354, v407);
              int v409 = (char *)&unk_221A379C0 + 4 * v436[v326];
              v407.i32[0] = v409[v342] | (v409[BYTE1(v342)] << 8) | (v409[BYTE2(v342)] << 16) | (v409[v342 >> 24] << 24);
              int8x16_t v410 = *(int8x16_t *)((char *)v349 - 3 * (int)a6);
              int8x16_t v411 = *(int8x16_t *)((char *)v349 + 2 * (int)a6);
              int16x8_t v412 = (int16x8_t)vzip1q_s8(v407, v407);
              int8x16_t v413 = vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v411, (uint8x16_t)v8), (uint8x16_t)v348), v348);
              int8x16_t v414 = vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v410, (uint8x16_t)v351), (uint8x16_t)v348), v348);
              int8x16_t v415 = (int8x16_t)vzip1q_s16(v412, v412);
              v416.i64[0] = 0x202020202020202;
              v416.i64[1] = 0x202020202020202;
              int8x16_t v417 = vaddq_s8(vaddq_s8(vsubq_s8(vbicq_s8(v416, v413), v413), v414), v415);
              int16x8_t v418 = (int16x8_t)vzip2q_s8((int8x16_t)v8, (int8x16_t)0);
              int16x8_t v419 = (int16x8_t)vzip1q_s8((int8x16_t)v8, (int8x16_t)0);
              v416.i64[0] = 0x4000400040004;
              v416.i64[1] = 0x4000400040004;
              int16x8_t v420 = (int16x8_t)vzip2q_s8(v417, (int8x16_t)0);
              int16x8_t v421 = vminq_s16(vmaxq_s16(vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v360, v362), (int16x8_t)v416), vshlq_n_s16(vsubq_s16(v418, v358), 2uLL)), v340), vnegq_s16(v420)), v420);
              int16x8_t v422 = (int16x8_t)vzip1q_s8(v417, (int8x16_t)0);
              int16x8_t v423 = vminq_s16(vmaxq_s16(vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v361, v363), (int16x8_t)v416), vshlq_n_s16(vsubq_s16(v419, v359), 2uLL)), v340), vnegq_s16(v422)), v422);
              int8x16_t v424 = vqmovun_high_s16(vqmovun_s16(vaddq_s16(v423, v359)), vaddq_s16(v421, v358));
              int8x16_t v425 = vqmovun_high_s16(vqmovun_s16(vsubq_s16(v419, v423)), vsubq_s16(v418, v421));
              int8x16_t v426 = (int8x16_t)vrhaddq_u8((uint8x16_t)v351, (uint8x16_t)v8);
              int16x8_t v427 = (int16x8_t)vzip2q_s8(v426, (int8x16_t)0);
              int16x8_t v428 = (int16x8_t)vzip1q_s8(v426, (int8x16_t)0);
              int16x8_t v429 = vaddq_s16(vsubq_s16((int16x8_t)vzip2q_s8(v410, (int8x16_t)0), vaddq_s16(v360, v360)), v427);
              int16x8_t v430 = vsubq_s16(vaddq_s16(v428, (int16x8_t)vzip1q_s8(v410, (int8x16_t)0)), vaddq_s16(v361, v361));
              int16x8_t v431 = (int16x8_t)vzip2q_s8(v415, (int8x16_t)0);
              int16x8_t v432 = vnegq_s16(v431);
              v416.i64[0] = -1;
              v416.i64[1] = -1;
              int16x8_t v433 = (int16x8_t)vzip1q_s8(v415, (int8x16_t)0);
              int16x8_t v434 = vnegq_s16(v433);
              *(int8x16_t *)((char *)v349 - 2 * (int)a6) = vbslq_s8(v408, vbslq_s8(v414, v350, vaddq_s8(vqmovn_high_s16(vqmovn_s16(vminq_s16(vmaxq_s16(vshlq_s16(v430, (int16x8_t)v416), v434), v433)), vminq_s16(vmaxq_s16(vshlq_s16(v429, (int16x8_t)v416), v432), v431)), v350)), v350);
              *(int8x16_t *)((char *)v349 - (int)a6) = vbslq_s8(v408, v424, v351);
              int8x16_t v338 = vbslq_s8(v408, vaddq_s8(v352, vbicq_s8(vqmovn_high_s16(vqmovn_s16(vminq_s16(vmaxq_s16(vshlq_s16(vsubq_s16(vaddq_s16(v428, (int16x8_t)vzip1q_s8(v411, (int8x16_t)0)), vaddq_s16(v363, v363)), (int16x8_t)v416), v434), v433)), vminq_s16(vmaxq_s16(vshlq_s16(vsubq_s16(
                                     vaddq_s16(v427, (int16x8_t)vzip2q_s8(v411, (int8x16_t)0)),
                                     vaddq_s16(v362, v362)),
                                   (int16x8_t)v416),
                                 v432),
                               v431)),
                           v413)),
                       v352);
              *(int8x16_t *)int v349 = vbslq_s8(v408, v425, (int8x16_t)v8);
              *(int8x16_t *)((char *)v349 + (int)a6) = v338;
            }
          }
        }
        int8x16_t v322 = vextq_s8(v322, (int8x16_t)0, 4uLL);
        ++v326;
        v327 += v19;
      }
      while (v326 != 4);
    }
  }
  return 0;
}

uint64_t sub_2219E1598(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v5 = *(unsigned int *)(*(void *)(a1 + 80) + 152);
  uint64_t v6 = *(void *)(a1 + 152);
  int v7 = *(_DWORD *)(a1 + 12);
  int v30 = -1;
  if (a4 >= a5) {
    return 0;
  }
  int v8 = a4;
  uint64_t v11 = (int8x16_t *)(v6 + 48 * (a2 + v7 * a4));
  int v26 = 16 * a2;
  unsigned int v27 = a2;
  while (a2 >= a3)
  {
LABEL_18:
    ++v8;
    a2 = v27;
    if (v8 == a5) {
      return 0;
    }
  }
  int v12 = 8 * v8;
  int v13 = a2;
  int v14 = v26;
  while (1)
  {
    int v15 = *(unsigned __int8 **)(a1 + 80);
    if (*(_DWORD *)(a1 + 188) && v15[3])
    {
      int v16 = v15[5];
      int v17 = *v15;
      uint64_t v18 = *((void *)v15 + 5) + (v14 & 0xFFFFFFF0);
      int v19 = *((_DWORD *)v15 + 38);
      uint64_t v20 = v18 + (v12 * v19);
      if (v17)
      {
        uint64_t v20 = v18 + (16 * v8 * v19);
        int v21 = 16 * v8;
      }
      else
      {
        int v21 = 8 * v8;
      }
      uint64_t v22 = v18 + v5 + (v21 * v19);
      int8x16_t v23 = (int16x8_t *)(v16 ? v22 : v20);
      unsigned int v24 = 2 * v5;
    }
    else
    {
      int8x16_t v23 = (int16x8_t *)(*((void *)v15 + 5) + (v14 & 0xFFFFFFF0) + (v12 * *((_DWORD *)v15 + 38)));
      unsigned int v24 = v5;
    }
    if ((v11[1].i8[0] & 0xC0) + v11->u8[0] <= 0x7F)
    {
      uint64_t result = sub_2219E1724(a1, v23, v23->i16, v24, v13, v8, v11, (uint64_t)v29);
      if (result) {
        return result;
      }
    }
    v11 += 3;
    v14 += 16;
    if (a3 == ++v13) {
      goto LABEL_18;
    }
  }
}

uint64_t sub_2219E1724(uint64_t a1, int16x8_t *a2, __int16 *a3, unsigned int a4, int a5, int a6, int8x16_t *a7, uint64_t a8)
{
  uint64_t v249 = *MEMORY[0x263EF8340];
  int v8 = *(_DWORD *)(a1 + 12);
  unsigned int v9 = a5 + v8 * a6;
  unsigned int v10 = *(unsigned __int16 *)(*(void *)(a1 + 72) + 2 * v9);
  if ((v10 & 0xC000) != 0) {
    return 4294958327;
  }
  uint64_t v11 = *(void *)(a1 + 120);
  uint64_t v12 = *(void *)(a1 + 128);
  uint64_t v13 = *(unsigned __int8 *)(v11 + v9);
  unsigned int v14 = v9 - (a5 != 0);
  unsigned int v15 = a5 + v8 * (a6 - (a6 != 0));
  unsigned int v16 = (v13 + 1 + *(unsigned __int8 *)(v11 + v14)) >> 1;
  uint64_t v17 = *(unsigned __int8 *)(v12 + v9);
  unsigned int v18 = (v13 + 1 + *(unsigned __int8 *)(v11 + v15)) >> 1;
  unsigned int v19 = (v17 + 1 + *(unsigned __int8 *)(v12 + v14)) >> 1;
  unsigned int v20 = (v17 + 1 + *(unsigned __int8 *)(v12 + v15)) >> 1;
  int v21 = (v13 << 12) | (v16 << 6) | (v10 << 18) | v18;
  int v22 = (v17 << 12) | (v19 << 6) | (v10 << 18) | v20;
  if (*(_DWORD *)(a8 + 128) == v21 && *(_DWORD *)(a8 + 132) == v22) {
    goto LABEL_4;
  }
  *(_DWORD *)(a8 + 128) = v21;
  *(_DWORD *)(a8 + 132) = v22;
  uint64_t v205 = *(void *)(a1 + 48) + 12 * v10;
  uint64_t v206 = *(char *)(v205 + 10);
  uint64_t v207 = v206 + v13;
  uint64_t v208 = v206 + v16;
  uint64_t v209 = v206 + v18;
  uint64_t v210 = v206 + v17;
  uint64_t v211 = v206 + v19;
  uint64_t v212 = v206 + v20;
  BOOL v213 = (int)v207 < -12 || (int)v208 < -12;
  BOOL v214 = v213 || (int)v209 < -12;
  BOOL v215 = v214 || (int)v210 < -12;
  BOOL v216 = v215 || (int)v211 < -12;
  if (v216 || (int)v212 < -12) {
    return 4294958327;
  }
  uint64_t result = 4294958327;
  if ((int)v207 > 63) {
    return result;
  }
  if ((int)v208 > 63) {
    return result;
  }
  if ((int)v209 > 63) {
    return result;
  }
  if ((int)v210 > 63) {
    return result;
  }
  if ((int)v211 > 63) {
    return result;
  }
  if ((int)v212 > 63) {
    return result;
  }
  uint64_t v218 = *(char *)(v205 + 11);
  uint64_t v219 = v218 + v13;
  if ((int)v218 + (int)v13 < -12) {
    return result;
  }
  uint64_t v220 = v218 + v16;
  if ((int)v220 < -12) {
    return result;
  }
  uint64_t v221 = v218 + v18;
  if ((int)v221 < -12) {
    return result;
  }
  uint64_t v222 = v218 + v17;
  if ((int)v222 < -12) {
    return result;
  }
  uint64_t v223 = v218 + v19;
  if ((int)v223 < -12) {
    return result;
  }
  uint64_t v224 = v218 + v20;
  if ((int)v224 < -12
    || (int)v219 > 63
    || (int)v220 > 63
    || (int)v221 > 63
    || (int)v222 > 63
    || (int)v223 > 63
    || (int)v224 > 63)
  {
    return result;
  }
  uint64_t v225 = byte_221A3C3C8[v207];
  uint64_t v226 = byte_221A3C3C8[v208];
  uint64_t v227 = byte_221A3C3C8[v209];
  uint64_t v228 = byte_221A3C3C8[v210];
  uint64_t v229 = byte_221A3C3C8[v211];
  uint64_t v230 = byte_221A3C3C8[v212];
  int v231 = byte_221A37940[v227];
  int v232 = byte_221A37980[byte_221A3C3C8[v221]];
  int v233 = byte_221A37940[v230];
  int v234 = byte_221A37980[byte_221A3C3C8[v224]];
  int v235 = byte_221A37940[v225] | (byte_221A37940[v228] << 8);
  int v236 = byte_221A37980[byte_221A3C3C8[v219]] | (byte_221A37980[byte_221A3C3C8[v222]] << 8);
  LODWORD(v237) = v225;
  DWORD1(v237) = v235 | (v235 << 16);
  *((void *)&v237 + 1) = __PAIR64__(v228, v236 | (v236 << 16));
  LODWORD(v225) = byte_221A37980[byte_221A3C3C8[v220]] | (byte_221A37980[byte_221A3C3C8[v223]] << 8);
  LODWORD(v238) = v226;
  DWORD1(v238) = byte_221A37940[v226] | (byte_221A37940[v229] << 8) | ((byte_221A37940[v226] | (byte_221A37940[v229] << 8)) << 16);
  DWORD2(v238) = v225 | (v225 << 16);
  HIDWORD(v238) = v229;
  *(_OWORD *)a8 = v238;
  *(_OWORD *)(a8 + 16) = v237;
  LODWORD(v238) = v227;
  DWORD1(v238) = v231 | (v233 << 8) | ((v231 | (v233 << 8)) << 16);
  DWORD2(v238) = v232 | (v234 << 8) | ((v232 | (v234 << 8)) << 16);
  HIDWORD(v238) = v230;
  *(_OWORD *)(a8 + 32) = v237;
  *(_OWORD *)(a8 + 48) = v237;
  *(_OWORD *)(a8 + 64) = v238;
  *(_OWORD *)(a8 + 80) = v237;
  *(_OWORD *)(a8 + 96) = v237;
  *(_OWORD *)(a8 + 112) = v237;
LABEL_4:
  int8x16_t v23 = *a7;
  v24.i64[0] = 0x1F1F1F1F1F1F1F1FLL;
  v24.i64[1] = 0x1F1F1F1F1F1F1F1FLL;
  if (a7->u8[0] <= 0x3Fu)
  {
    int8x16_t v25 = vandq_s8(vorrq_s8(vceqzq_s8(v23), vcgtq_s8(v23, v24)), (int8x16_t)xmmword_221A37900);
    int8x16_t v26 = vpaddq_s8(v25, v25);
    int8x16_t v27 = vpaddq_s8(v26, v26);
    if (vpaddq_s8(v27, v27).u16[0] != 0xFFFF)
    {
      unsigned __int8 v28 = *a7;
      uint64_t v29 = 2 * a4;
      uint64_t v30 = a4;
      uint64_t v31 = 3 * a4;
      int16x8_t v32 = *(int16x8_t *)((char *)a2 + a4);
      int16x8_t v33 = *(int16x8_t *)((char *)a2 + (v30 * 2));
      int16x8_t v34 = *(int16x8_t *)((char *)a2 + v31);
      int16x8_t v35 = *(int16x8_t *)((char *)a2 + v29 * 2 + a4);
      int16x8_t v36 = *(int16x8_t *)((char *)a2 + v29 * 2 + (v30 * 2));
      int16x8_t v37 = *(int16x8_t *)((char *)a2 + v29 * 2);
      int16x8_t v38 = vzip1q_s16(*a2, v37);
      int16x8_t v39 = vzip2q_s16(*a2, v37);
      int16x8_t v40 = vzip1q_s16(v32, v35);
      int16x8_t v41 = *(int16x8_t *)((char *)a2 + v29 * 2 + v31);
      int16x8_t v42 = vzip2q_s16(v32, v35);
      int16x8_t v43 = vzip1q_s16(v33, v36);
      int16x8_t v44 = vzip2q_s16(v33, v36);
      int16x8_t v45 = vzip1q_s16(v34, v41);
      int16x8_t v46 = vzip2q_s16(v34, v41);
      int16x4x2_t v47 = (int16x4x2_t)vzip1q_s16(v38, v43);
      int32x4_t v48 = &v241;
      int16x4x2_t v49 = (int16x4x2_t)vzip2q_s16(v38, v43);
      int16x4x2_t v50 = (int16x4x2_t)vzip1q_s16(v39, v44);
      int16x4x2_t v51 = (int16x4x2_t)vzip2q_s16(v39, v44);
      int16x8_t v52 = vzip1q_s16(v40, v45);
      int16x8_t v53 = vzip2q_s16(v40, v45);
      int16x8_t v54 = vzip1q_s16(v42, v46);
      vst2_s16(v48->i16, v47);
      int8x16_t v55 = &v243;
      vst2_s16(v55->i16, v49);
      int16x8_t v56 = vzip2q_s16(v42, v46);
      int8x16_t v57 = &v245;
      int16x8_t v242 = vzip2q_s16((int16x8_t)v47, v52);
      int16x8_t v244 = vzip2q_s16((int16x8_t)v49, v53);
      vst2_s16(v57->i16, v50);
      int16x8_t v58 = &v247;
      vst2_s16(v58->i16, v51);
      int16x8_t v246 = vzip2q_s16((int16x8_t)v50, v54);
      int16x8_t v248 = vzip2q_s16((int16x8_t)v51, v56);
      if (v23.u8[0] <= 0x1Fu)
      {
        int16x8_t v59 = (int16x8_t *)&a3[v29 - 8];
        int16x4x2_t v60 = (int16x4x2_t)vzip2q_s16(vzip2q_s16(*((int16x8_t *)a3 - 1), *v59), vzip2q_s16(*(int16x8_t *)&a3[v30 - 8], *(int16x8_t *)((char *)v59 + v30 * 2)));
        int16x8_t v61 = vzip2q_s16(vzip2q_s16(*(int16x8_t *)((char *)a3 + a4 - 16), *(int16x8_t *)((char *)v59 + a4)), vzip2q_s16(*(int16x8_t *)((char *)a3 + v31 - 16), *(int16x8_t *)((char *)v59 + v31)));
        int32x4_t v62 = v239;
        vst2_s16(v62, v60);
        v62 += 8;
        *(int16x8_t *)int32x4_t v62 = vzip2q_s16((int16x8_t)v60, v61);
      }
      uint64_t v63 = 0;
      char v64 = 1;
      v65.i64[0] = 0x2000200020002;
      v65.i64[1] = 0x2000200020002;
      v66.i64[0] = 0x1000100010001;
      v66.i64[1] = 0x1000100010001;
      v67.i64[0] = 0x101010101010101;
      v67.i64[1] = 0x101010101010101;
      v68.i64[0] = 0x4000400040004;
      v68.i64[1] = 0x4000400040004;
      v69.i64[0] = 0x2000200020002;
      v69.i64[1] = 0x2000200020002;
      int32x4_t v70 = (int8x16_t *)a8;
      int8x16_t v71 = a7;
      do
      {
        char v72 = v64;
        unsigned int v73 = v71->u8[0];
        unsigned int v75 = v71->i32[0];
        int8x16_t v71 = (int8x16_t *)((char *)v71 + 8);
        unint64_t v74 = v75;
        if (v73 <= 0x1F && v74 != 0)
        {
          int8x16_t v77 = *v70;
          int8x16_t v78 = vqtbl1q_s8(*v70, (int8x16_t)xmmword_221A368E0);
          int8x16_t v79 = vqtbl1q_s8(*v70, (int8x16_t)xmmword_221A37930);
          int32x4_t v80 = (int8x16_t *)&v241.i8[v63 * 2];
          int8x16_t v81 = *(int8x16_t *)&v239[v63];
          int8x16_t v83 = *(int8x16_t *)&v240[v63];
          int8x16_t v82 = *(int8x16_t *)((char *)&v241 + v63 * 2);
          int8x16_t v84 = *(int8x16_t *)((char *)&v241 + v63 * 2 + 16);
          int8x16_t v85 = vbicq_s8(vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v83, (uint8x16_t)v81), (uint8x16_t)v79), v79)), vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v83, (uint8x16_t)v82), (uint8x16_t)v78), v78)), vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v82, (uint8x16_t)v84), (uint8x16_t)v79), v79));
          int8x16_t v86 = vbicq_s8((int8x16_t)xmmword_221A37900, v85);
          int8x16_t v87 = vpaddq_s8(v86, v86);
          int8x16_t v88 = vpaddq_s8(v87, v87);
          if (vpaddq_s8(v88, v88).u16[0] != 0xFFFF)
          {
            int16x8_t v89 = (int16x8_t)vzip2q_s8(v83, (int8x16_t)0);
            int16x8_t v90 = (int16x8_t)vzip1q_s8(v83, (int8x16_t)0);
            int16x8_t v91 = (int16x8_t)vzip2q_s8(v81, (int8x16_t)0);
            int16x8_t v92 = (int16x8_t)vzip1q_s8(v81, (int8x16_t)0);
            int16x8_t v93 = (int16x8_t)vzip2q_s8(v84, (int8x16_t)0);
            int16x8_t v94 = (int16x8_t)vzip1q_s8(v84, (int8x16_t)0);
            int16x8_t v95 = (int16x8_t)vzip2q_s8(v82, (int8x16_t)0);
            int16x8_t v96 = (int16x8_t)vzip1q_s8(v82, (int8x16_t)0);
            if (v73 == 4)
            {
              int16x8_t v97 = vaddq_s16(vaddq_s16(v93, v91), v65);
              int16x8_t v98 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v97, vaddq_s16(v91, v89)), v66);
              int16x8_t v99 = vaddq_s16(vaddq_s16(v94, v92), v65);
              int8x16_t v100 = vorrq_s8(vandq_s8(vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v99, vaddq_s16(v92, v90)), v66)), v98), v85), vbicq_s8(v83, v85));
              int8x16_t v101 = vorrq_s8(vandq_s8(vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v99, vaddq_s16(v96, v94)), v66)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v97, vaddq_s16(v95, v93)), v66)), v85), vbicq_s8(v82, v85));
            }
            else
            {
              unint64_t v102 = v74 >> 24;
              unsigned __int8 v103 = BYTE2(v74);
              int16x8_t v104 = (int16x8_t)vzip1q_s8(v23, v23);
              int8x16_t v105 = (char *)&byte_221A379C0[4 * v77.u32[0]];
              uint64_t v106 = v74;
              int v107 = v105[v74];
              uint64_t v108 = BYTE1(v74);
              int8x16_t v109 = vceqzq_s8((int8x16_t)vzip1q_s16(v104, v104));
              uint64_t v110 = v103;
              int8x16_t v111 = vbicq_s8(v85, v109);
              v77.i32[0] = v107 | (v105[v108] << 8) | (v105[v110] << 16) | (v105[v102] << 24);
              v109.i32[0] = byte_221A379C0[4 * v77.u32[3] + v106] | (byte_221A379C0[4 * v77.u32[3] + v108] << 8) | (byte_221A379C0[4 * v77.u32[3] + v110] << 16) | (byte_221A379C0[4 * v77.u32[3] + v102] << 24);
              int8x16_t v112 = vaddq_s8(vzip1q_s8(vzip1q_s8(v77, v77), vzip1q_s8(v109, v109)), v67);
              int16x8_t v113 = vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v92, v94), v68), vshlq_n_s16(vsubq_s16(v96, v90), 2uLL)), v69);
              int16x8_t v114 = (int16x8_t)vzip2q_s8(v112, (int8x16_t)0);
              int16x8_t v115 = vminq_s16(vmaxq_s16(vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v91, v93), v68), vshlq_n_s16(vsubq_s16(v95, v89), 2uLL)), v69), vnegq_s16(v114)), v114);
              int16x8_t v116 = (int16x8_t)vzip1q_s8(v112, (int8x16_t)0);
              int16x8_t v117 = vminq_s16(vmaxq_s16(v113, vnegq_s16(v116)), v116);
              int8x16_t v100 = vbslq_s8(v111, vqmovun_high_s16(vqmovun_s16(vaddq_s16(v117, v90)), vaddq_s16(v115, v89)), v83);
              int8x16_t v101 = vbslq_s8(v111, vqmovun_high_s16(vqmovun_s16(vsubq_s16(v96, v117)), vsubq_s16(v95, v115)), v82);
            }
            v80[-1] = v100;
            *int32x4_t v80 = v101;
          }
        }
        char v64 = 0;
        int8x16_t v23 = vextq_s8(v23, (int8x16_t)0, 8uLL);
        ++v70;
        uint64_t v63 = 32;
      }
      while ((v72 & 1) != 0);
      int16x8_t v118 = vzip1q_s16(v241, v245);
      int16x8_t v119 = vzip2q_s16(v241, v245);
      int16x8_t v120 = vzip1q_s16(v242, v246);
      int16x8_t v121 = vzip2q_s16(v242, v246);
      int16x8_t v122 = vzip1q_s16(v243, v247);
      int16x8_t v123 = vzip2q_s16(v243, v247);
      int16x8_t v124 = vzip1q_s16(v244, v248);
      int16x8_t v125 = vzip2q_s16(v244, v248);
      int16x4x2_t v126 = (int16x4x2_t)vzip1q_s16(v118, v122);
      int16x4x2_t v127 = (int16x4x2_t)vzip2q_s16(v118, v122);
      int16x4x2_t v128 = (int16x4x2_t)vzip1q_s16(v119, v123);
      int16x4x2_t v129 = (int16x4x2_t)vzip2q_s16(v119, v123);
      int16x8_t v130 = vzip1q_s16(v120, v124);
      int16x8_t v131 = vzip2q_s16(v120, v124);
      int16x8_t v132 = vzip1q_s16(v121, v125);
      int16x8_t v133 = vzip2q_s16(v121, v125);
      vst2_s16(a3, v126);
      unint64_t v135 = (int16x8_t *)((char *)a3 + v31);
      *(int16x8_t *)((char *)a3 + a4) = vzip2q_s16((int16x8_t)v126, v130);
      unsigned int v136 = &a3[v30];
      vst2_s16(v136, v127);
      *unint64_t v135 = vzip2q_s16((int16x8_t)v127, v131);
      int8x16_t v137 = &a3[v29];
      vst2_s16(v137, v128);
      int8x16_t v138 = (int16x8_t *)((char *)v137 + v31);
      *(int16x8_t *)((char *)&a3[v29] + a4) = vzip2q_s16((int16x8_t)v128, v132);
      int8x16_t v139 = &a3[v29 + v30];
      vst2_s16(v139, v129);
      *int8x16_t v138 = vzip2q_s16((int16x8_t)v129, v133);
      if (v28 <= 0x1Fu)
      {
        *(a3 - 1) = v240[0];
        int8x16_t v140 = a3 - 1;
        *(__int16 *)((char *)v140 + a4) = v240[1];
        v140[v30] = v240[2];
        *(__int16 *)((char *)v140 + v31) = v240[3];
        v140[v29] = v240[4];
        *(__int16 *)((char *)a3 + 5 * a4 - 2) = v240[5];
        a3[3 * a4 - 1] = v240[6];
        *(__int16 *)((char *)a3 + 7 * a4 - 2) = v240[7];
      }
    }
  }
  uint64_t result = 0;
  int8x16_t v142 = a7[1];
  if (v142.u8[0] <= 0x3Fu)
  {
    int8x16_t v143 = vandq_s8(vorrq_s8(vceqzq_s8(v142), vcgtq_s8(v142, v24)), (int8x16_t)xmmword_221A37900);
    int8x16_t v144 = vpaddq_s8(v143, v143);
    int8x16_t v145 = vpaddq_s8(v144, v144);
    if (vpaddq_s8(v145, v145).u16[0] != 0xFFFF)
    {
      uint64_t v146 = 0;
      uint64_t v147 = 4 * a4;
      uint64_t v148 = -(uint64_t)(2 * a4);
      int8x16_t v149 = (int8x16_t *)(a8 + 64);
      int8x16_t v150 = a7 + 1;
      v151.i64[0] = 0x2000200020002;
      v151.i64[1] = 0x2000200020002;
      char v152 = 1;
      uint64_t v153 = a4;
      v154.i64[0] = 0x1000100010001;
      v154.i64[1] = 0x1000100010001;
      v155.i64[0] = 0x101010101010101;
      v155.i64[1] = 0x101010101010101;
      uint64_t v156 = -(uint64_t)a4;
      v157.i64[0] = 0x4000400040004;
      v157.i64[1] = 0x4000400040004;
      v158.i64[0] = 0x2000200020002;
      v158.i64[1] = 0x2000200020002;
      do
      {
        char v159 = v152;
        unsigned int v160 = v150->u8[0];
        unsigned int v162 = v150->i32[0];
        int8x16_t v150 = (int8x16_t *)((char *)v150 + 8);
        unint64_t v161 = v162;
        if (v160 <= 0x1F && v161 != 0)
        {
          int8x16_t v164 = *v149;
          int8x16_t v165 = vqtbl1q_s8(*v149, (int8x16_t)xmmword_221A368E0);
          int8x16_t v166 = vqtbl1q_s8(*v149, (int8x16_t)xmmword_221A37930);
          int16x8_t v167 = (uint8x16_t *)((char *)a3 + v146 * v147);
          int8x16_t v168 = *(int8x16_t *)((char *)v167 + v148);
          int8x16_t v169 = *(int8x16_t *)((char *)v167 + v156);
          int8x16_t v170 = *(int8x16_t *)v167;
          int8x16_t v171 = *(int8x16_t *)((char *)v167 + v153);
          int8x16_t v172 = vbicq_s8(vbicq_s8(vmvnq_s8(vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v169, (uint8x16_t)v168), (uint8x16_t)v166), v166)), vceqq_s8((int8x16_t)vminq_u8(vabdq_u8((uint8x16_t)v169, *v167), (uint8x16_t)v165), v165)), vceqq_s8((int8x16_t)vminq_u8(vabdq_u8(*v167, (uint8x16_t)v171), (uint8x16_t)v166), v166));
          int8x16_t v173 = vbicq_s8((int8x16_t)xmmword_221A37900, v172);
          int8x16_t v174 = vpaddq_s8(v173, v173);
          int8x16_t v175 = vpaddq_s8(v174, v174);
          if (vpaddq_s8(v175, v175).u16[0] != 0xFFFF)
          {
            int16x8_t v176 = (int16x8_t)vzip2q_s8(v169, (int8x16_t)0);
            int16x8_t v177 = (int16x8_t)vzip1q_s8(v169, (int8x16_t)0);
            int16x8_t v178 = (int16x8_t)vzip2q_s8(v168, (int8x16_t)0);
            int16x8_t v179 = (int16x8_t)vzip1q_s8(v168, (int8x16_t)0);
            int16x8_t v180 = (int16x8_t)vzip2q_s8(v171, (int8x16_t)0);
            int16x8_t v181 = (int16x8_t)vzip1q_s8(v171, (int8x16_t)0);
            int16x8_t v182 = (int16x8_t)vzip2q_s8(v170, (int8x16_t)0);
            int16x8_t v183 = (int16x8_t)vzip1q_s8(v170, (int8x16_t)0);
            if (v160 == 4)
            {
              int16x8_t v184 = vaddq_s16(vaddq_s16(v180, v178), v151);
              int16x8_t v185 = (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v184, vaddq_s16(v178, v176)), v154);
              int16x8_t v186 = vaddq_s16(vaddq_s16(v181, v179), v151);
              int8x16_t v187 = vorrq_s8(vandq_s8(vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v186, vaddq_s16(v179, v177)), v154)), v185), v172), vbicq_s8(v169, v172));
              int8x16_t v188 = vorrq_s8(vandq_s8(vqmovun_high_s16(vqmovun_s16((int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v186, vaddq_s16(v183, v181)), v154)), (int16x8_t)vshlq_u16((uint16x8_t)vaddq_s16(v184, vaddq_s16(v182, v180)), v154)), v172), vbicq_s8(v170, v172));
            }
            else
            {
              unint64_t v189 = v161 >> 24;
              unsigned __int8 v190 = BYTE2(v161);
              int16x8_t v191 = (int16x8_t)vzip1q_s8(v142, v142);
              int16x8_t v192 = (char *)&byte_221A379C0[4 * v164.u32[0]];
              uint64_t v193 = v161;
              int v194 = v192[v161];
              uint64_t v195 = BYTE1(v161);
              int8x16_t v196 = vceqzq_s8((int8x16_t)vzip1q_s16(v191, v191));
              uint64_t v197 = v190;
              int8x16_t v198 = vbicq_s8(v172, v196);
              v164.i32[0] = v194 | (v192[v195] << 8) | (v192[v197] << 16) | (v192[v189] << 24);
              v196.i32[0] = byte_221A379C0[4 * v164.u32[3] + v193] | (byte_221A379C0[4 * v164.u32[3] + v195] << 8) | (byte_221A379C0[4 * v164.u32[3] + v197] << 16) | (byte_221A379C0[4 * v164.u32[3] + v189] << 24);
              int8x16_t v199 = vaddq_s8(vzip1q_s8(vzip1q_s8(v164, v164), vzip1q_s8(v196, v196)), v155);
              int16x8_t v200 = vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v179, v181), v157), vshlq_n_s16(vsubq_s16(v183, v177), 2uLL)), v158);
              int16x8_t v201 = (int16x8_t)vzip2q_s8(v199, (int8x16_t)0);
              int16x8_t v202 = vminq_s16(vmaxq_s16(vshlq_s16(vaddq_s16(vaddq_s16(vsubq_s16(v178, v180), v157), vshlq_n_s16(vsubq_s16(v182, v176), 2uLL)), v158), vnegq_s16(v201)), v201);
              int16x8_t v203 = (int16x8_t)vzip1q_s8(v199, (int8x16_t)0);
              int16x8_t v204 = vminq_s16(vmaxq_s16(v200, vnegq_s16(v203)), v203);
              int8x16_t v187 = vbslq_s8(v198, vqmovun_high_s16(vqmovun_s16(vaddq_s16(v204, v177)), vaddq_s16(v202, v176)), v169);
              int8x16_t v188 = vbslq_s8(v198, vqmovun_high_s16(vqmovun_s16(vsubq_s16(v183, v204)), vsubq_s16(v182, v202)), v170);
            }
            *(int8x16_t *)((char *)v167 + v156) = v187;
            *int16x8_t v167 = (uint8x16_t)v188;
          }
        }
        char v152 = 0;
        int8x16_t v142 = vextq_s8(v142, (int8x16_t)0, 8uLL);
        ++v149;
        uint64_t v146 = 1;
      }
      while ((v159 & 1) != 0);
      return 0;
    }
  }
  return result;
}

uint64_t sub_2219E21C8(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v61 = *MEMORY[0x263EF8340];
  uint64_t v6 = *(void *)(a1 + 80);
  unsigned int v7 = *(_DWORD *)(v6 + 100) + 15;
  uint64_t v8 = *(unsigned int *)(v6 + 136);
  uint64_t v9 = *(unsigned int *)(v6 + 152);
  uint64_t v10 = *(void *)(v6 + 32);
  uint64_t v11 = *(void *)(v6 + 40);
  uint64_t v12 = *(void *)(a1 + 176);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v14 = *(unsigned int *)(a1 + 104);
  int v15 = 16 * a4 - 4;
  if (!a4) {
    int v15 = 0;
  }
  if (*(unsigned char *)v6 && *(unsigned char *)(v6 + 3))
  {
    unsigned int v16 = (v7 & 0xFFFFFFF0) + ~(2 * *(_DWORD *)(a1 + 208));
    int v17 = *(unsigned __int8 *)(v6 + 5);
    uint64_t v18 = v11 + v9;
    if (v17) {
      v10 += v8;
    }
    LODWORD(v8) = 2 * v8;
    LODWORD(v9) = 2 * v9;
    if (v17)
    {
      uint64_t v11 = v18;
      v12 += *(unsigned int *)(a1 + 184);
      v13 += v14;
    }
    unsigned int v50 = 2 * *(_DWORD *)(a1 + 184);
    LODWORD(v14) = 2 * v14;
  }
  else
  {
    unsigned int v50 = *(_DWORD *)(a1 + 184);
    unsigned int v16 = (v7 & 0xFFFFFFF0) + (2 * *(_DWORD *)(a1 + 212) - 4) * *(_DWORD *)(a1 + 208) - 1;
  }
  unsigned int v19 = sub_22190EAC0;
  if (!*(_DWORD *)(a1 + 268)) {
    unsigned int v19 = sub_22190ED28;
  }
  *(void *)(a1 + 248) = v19;
  *(void *)(a1 + 256) = sub_22190EDF8;
  int v59 = -1;
  if (a4 >= a5) {
    return 0;
  }
  int v49 = v14;
  int v42 = 16 * v8;
  int v20 = v16 - v15;
  uint64_t v53 = (v7 >> 4) - 1;
  if (v7 >> 4 == 1) {
    int v21 = 8;
  }
  else {
    int v21 = 6;
  }
  int v54 = v20;
  if (v21 >= v20) {
    int v21 = v20;
  }
  int v52 = 2 * v21;
  if (a2) {
    unsigned int v22 = a2 - 1;
  }
  else {
    unsigned int v22 = 0;
  }
  uint64_t v23 = 16 * v22;
  uint64_t v43 = v11;
  uint64_t v44 = v10;
  uint64_t v48 = v10 + v23;
  uint64_t v47 = v11 + v23;
  uint64_t v45 = v13 + v23;
  uint64_t v46 = v12 + v23;
  uint64_t v24 = a4;
  uint64_t v51 = a5;
  unsigned int v57 = v8;
  while (a3 <= a2)
  {
LABEL_28:
    if (v24 == v53) {
      int v29 = 9;
    }
    else {
      int v29 = 7;
    }
    if (v29 >= v54) {
      int v29 = v54;
    }
    int v30 = 2 * v29 + 2;
    if (v24) {
      int v31 = v30;
    }
    else {
      int v31 = v52;
    }
    if (v31 >= 1)
    {
      int v32 = 16 * v24 - 4;
      uint64_t v33 = (v32 * v8);
      uint64_t v34 = v47;
      uint64_t v35 = v48 + v33;
      int v36 = 8 * v24 - 2;
      uint64_t v37 = v47 + (v36 * v9);
      uint64_t v38 = v46 + v32 * v50;
      uint64_t v39 = v45 + (v36 * v49);
      if (v24) {
        uint64_t v40 = v35;
      }
      else {
        uint64_t v40 = v48;
      }
      if (v24)
      {
        uint64_t v34 = v37;
        uint64_t v41 = v39;
      }
      else
      {
        uint64_t v38 = v46;
        uint64_t v41 = v45;
      }
      if (*(_DWORD *)(a1 + 88) == 875704438) {
        sub_22190F064(v40, v34, 16 * (a3 - a2), 0, v31, v57, v9, v38, v41, v50, v49);
      }
      else {
        (*(void (**)(uint64_t))(a1 + 248))(v40);
      }
      LODWORD(v8) = v57;
    }
    if (++v24 == v51) {
      return 0;
    }
  }
  int8x16_t v25 = (int8x16_t *)(*(void *)(a1 + 152) + 48 * (a2 + *(_DWORD *)(a1 + 12) * v24));
  int v26 = a2;
  int v27 = 16 * a2;
  while (1)
  {
    if ((v25[1].i8[0] & 0xC0) + v25->u8[0] <= 0x7F)
    {
      sub_2219E0414(a1, (int8x16_t *)(v44 + (v42 * v24) + (v27 & 0xFFFFFFF0)), (int64x2_t *)(v44 + (v42 * v24) + (v27 & 0xFFFFFFF0)), v26, v24, v57, v25, v60);
      uint64_t result = sub_2219E1724(a1, (int16x8_t *)(v43 + (8 * v9 * v24) + (v27 & 0xFFFFFFF0)), (__int16 *)(v43 + (8 * v9 * v24) + (v27 & 0xFFFFFFF0)), v9, v26, v24, v25, (uint64_t)v58);
      LODWORD(v8) = v57;
      if (result) {
        return result;
      }
    }
    v25 += 3;
    v27 += 16;
    if (a3 == ++v26) {
      goto LABEL_28;
    }
  }
}

uint64_t sub_2219E25F0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, unsigned int a8, unsigned int a9, uint64_t a10, int a11, int a12)
{
  uint64_t v138 = a2;
  uint64_t v139 = a4;
  uint64_t v13 = *(unsigned char **)(a1 + 80);
  int v148 = 16 * a8;
  if (a8) {
    int v14 = 16 * a8 - 4;
  }
  else {
    int v14 = 0;
  }
  if (*v13 && v13[3])
  {
    int v151 = ~(2 * *(_DWORD *)(a1 + 208)) + 16 * a12;
    int v15 = v13[5];
    BOOL v16 = v15 == 0;
    if (v15) {
      uint64_t v17 = a5;
    }
    else {
      uint64_t v17 = 0;
    }
    uint64_t v18 = a4 + v17;
    if (v16) {
      uint64_t v19 = 0;
    }
    else {
      uint64_t v19 = a11;
    }
    uint64_t v131 = a10 + v19;
    if (v16) {
      uint64_t v20 = 0;
    }
    else {
      uint64_t v20 = a3;
    }
    uint64_t v138 = a2 + v20;
    uint64_t v139 = v18;
    a3 *= 2;
    a5 *= 2;
    int v134 = 2 * a11;
  }
  else
  {
    uint64_t v131 = a10;
    int v134 = a11;
    int v151 = (2 * *(_DWORD *)(a1 + 212) - 4) * *(_DWORD *)(a1 + 208) + 16 * a12 - 1;
  }
  unsigned int v21 = a9;
  uint64_t v22 = 2 * a3;
  uint64_t v144 = 2 * a5;
  int v150 = a7 - a6;
  if (a7 > a6)
  {
    int v146 = 8 * a8;
    uint64_t v23 = a6;
    uint64_t v140 = a7;
    unsigned int v24 = a3;
    unsigned int v25 = a5;
    int v142 = a8;
    while (a8 >= v21)
    {
LABEL_59:
      ++v23;
      a8 = v142;
      if (v23 == v140) {
        goto LABEL_60;
      }
    }
    uint64_t v26 = (16 * v23);
    int v27 = v148;
    int v28 = v142;
    while (1)
    {
      int v29 = *(_DWORD *)(a1 + 12);
      unsigned int v30 = v23 + v29 * v28;
      uint64_t v31 = *(void *)(a1 + 144);
      unsigned int v32 = v28 && *(unsigned char *)(v31 + v30) == 1 && *(unsigned __int8 *)(v31 + v30 - v29) == 2;
      int v33 = *(unsigned __int8 *)(v31 + v30);
      if (!v23) {
        goto LABEL_29;
      }
      if (v33 == 2)
      {
        BOOL v35 = 0;
        BOOL v34 = *(unsigned __int8 *)(v31 + v30 - 1) == 1;
        goto LABEL_31;
      }
      if (v33 == 1)
      {
        BOOL v34 = 0;
        BOOL v35 = *(unsigned __int8 *)(v31 + v30 - 1) == 2;
      }
      else
      {
LABEL_29:
        BOOL v35 = 0;
        BOOL v34 = 0;
      }
LABEL_31:
      if (v33 == 2)
      {
        uint64_t v36 = *(void *)(*(void *)(a1 + 80) + 32)
            + v26
            + (*(_DWORD *)(*(void *)(a1 + 80) + 136) * v148);
        unsigned int v37 = (v28 << 31 >> 31) & a3;
        int v38 = v22;
      }
      else
      {
        uint64_t v39 = *(void *)(a1 + 80);
        uint64_t v36 = *(void *)(v39 + 32) + v26;
        unsigned int v37 = v27 * *(_DWORD *)(v39 + 136);
        int v38 = a3;
      }
      uint64_t v40 = (unsigned __int8 *)(*(void *)(a1 + 152) + 48 * v30);
      if ((v40[16] & 0xC0) + *v40 <= 0x7F)
      {
        if (v34) {
          int v41 = 2;
        }
        else {
          int v41 = 0;
        }
        sub_221A317A0((unsigned __int8 *)a1, v36 + v37, v36 + v37, v23, v28, v38, v40, v32, v41 | v35);
        unsigned int v21 = a9;
        a5 = v25;
        a3 = v24;
      }
      ++v28;
      v27 += 16;
      if (v21 == v28)
      {
        int v42 = v146;
        int v43 = v142;
        while (1)
        {
          BOOL v44 = 0;
          int v45 = *(_DWORD *)(a1 + 12);
          unsigned int v46 = v23 + v45 * v43;
          uint64_t v47 = *(void *)(a1 + 144);
          int v48 = *(unsigned __int8 *)(v47 + v46);
          if (v43 && v48 == 1) {
            BOOL v44 = *(unsigned __int8 *)(v47 + v46 - v45) == 2;
          }
          if (!v23) {
            break;
          }
          if (v48 == 1)
          {
            BOOL v49 = 0;
            BOOL v50 = *(unsigned __int8 *)(v47 + v46 - 1) == 2;
          }
          else
          {
            if (v48 != 2) {
              break;
            }
            BOOL v50 = 0;
            BOOL v49 = *(unsigned __int8 *)(v47 + v46 - 1) == 1;
          }
LABEL_50:
          uint64_t v51 = (unsigned __int8 *)(*(void *)(a1 + 152) + 48 * v46);
          if (v48 == 2)
          {
            uint64_t v52 = *(void *)(*(void *)(a1 + 80) + 40)
                + v26
                + (v146 * *(_DWORD *)(*(void *)(a1 + 80) + 152));
            unsigned int v53 = (v43 << 31 >> 31) & a5;
            int v54 = v144;
          }
          else
          {
            uint64_t v55 = *(void *)(a1 + 80);
            uint64_t v52 = *(void *)(v55 + 40) + v26;
            unsigned int v53 = v42 * *(_DWORD *)(v55 + 152);
            int v54 = a5;
          }
          if ((v51[16] & 0xC0) + *v51 <= 0x7F)
          {
            if (v49) {
              int v56 = 2;
            }
            else {
              int v56 = 0;
            }
            sub_221A325F4(a1, v52 + v53, v52 + v53, v23, v43, v54, v51, (unsigned __int8 *)v44, v56 | v50);
            unsigned int v21 = a9;
            a5 = v25;
            a3 = v24;
          }
          ++v43;
          v42 += 8;
          if (v21 == v43) {
            goto LABEL_59;
          }
        }
        BOOL v50 = 0;
        BOOL v49 = 0;
        goto LABEL_50;
      }
    }
  }
LABEL_60:
  if (a8 < v21)
  {
    uint64_t v57 = v131 + 32 * a6;
    int v58 = v134;
    uint64_t v59 = (a12 - 1);
    uint64_t v60 = 16 * a6;
    int v61 = 16 * a3;
    uint64_t v62 = 4 * a3;
    int v63 = 8 * a5;
    uint64_t v149 = v134;
    if (a12 == 1) {
      unsigned int v64 = 8;
    }
    else {
      unsigned int v64 = 6;
    }
    uint64_t v65 = a5;
    uint64_t v130 = v57 + v134;
    uint64_t v132 = v131 + 32 * a6;
    uint64_t v66 = (v61 * v59);
    uint64_t v67 = 2 * v134;
    uint64_t v68 = v139 - v144;
    int v69 = a5 * a8;
    uint64_t v70 = v57 - 4 * v134;
    unsigned int v71 = 8 * v69;
    uint64_t v72 = a8;
    uint64_t v147 = v138 + a3 - v62;
    int v73 = a3 * a8;
    int v74 = 16 * v134;
    unsigned int v75 = 16 * v73;
    uint64_t v143 = v70 + (16 * v134 * v59);
    uint64_t v145 = v138 - v62;
    uint64_t v76 = v68;
    uint64_t v141 = v68 + (v63 * v59);
    uint64_t v135 = v138 + v66 + a3 - v62;
    uint64_t v137 = v143 + v58;
    uint64_t v133 = v138 + v66 - v62;
    uint64_t v129 = v138 + a3;
    do
    {
      if (!v72 || v72 == v59)
      {
        if (v72)
        {
          if (v72 == v59 && v14 <= v151)
          {
            unsigned int v94 = 0;
            uint64_t v95 = v133;
            uint64_t v96 = v135;
            uint64_t v97 = v141;
            uint64_t v98 = v143;
            uint64_t v99 = v137;
            do
            {
              if (v150 >= 1)
              {
                uint64_t v100 = 0;
                uint64_t v101 = v95;
                uint64_t v102 = v96;
                uint64_t v103 = v97;
                unsigned int v104 = v150 + 1;
                do
                {
                  int8x16_t v105 = (char *)(v99 + v100);
                  int8x16_t v106 = *(int8x16_t *)(v101 + v60);
                  int8x16_t v107 = *(int8x16_t *)(v103 + v60);
                  int8x16_t v108 = *(int8x16_t *)(v102 + v60);
                  int8x16_t v109 = (char *)(v98 + v100);
                  uint64_t v110 = *(void *)(v103 + v60);
                  vst2_s8(v109, *(int8x8x2_t *)((char *)&v106 - 8));
                  v109 += 16;
                  *(int8x16_t *)int8x16_t v109 = vzip2q_s8(v107, v106);
                  vst2_s8(v105, (int8x8x2_t)v107);
                  v105 += 16;
                  --v104;
                  v100 += 32;
                  *(int8x16_t *)int8x16_t v105 = vzip2q_s8(v107, v108);
                  v103 += 16;
                  v102 += 16;
                  v101 += 16;
                }
                while (v104 > 1);
              }
              v14 += 2;
              if (v94 > 8) {
                break;
              }
              v98 += v67;
              v99 += v67;
              ++v94;
              v97 += v65;
              v96 += v22;
              v95 += v22;
            }
            while (v14 <= v151);
          }
        }
        else if (v14 <= v151)
        {
          unsigned int v111 = 0;
          uint64_t v112 = v138;
          uint64_t v113 = v139;
          uint64_t v114 = v129;
          uint64_t v115 = v130;
          uint64_t v116 = v132;
          do
          {
            if (v150 >= 1)
            {
              uint64_t v117 = 0;
              uint64_t v118 = v112;
              uint64_t v119 = v114;
              uint64_t v120 = v113;
              unsigned int v121 = v150 + 1;
              do
              {
                int16x8_t v122 = (char *)(v115 + v117);
                int8x16_t v123 = *(int8x16_t *)(v118 + v60);
                int8x16_t v124 = *(int8x16_t *)(v120 + v60);
                int8x16_t v125 = *(int8x16_t *)(v119 + v60);
                int16x4x2_t v126 = (char *)(v116 + v117);
                uint64_t v127 = *(void *)(v120 + v60);
                vst2_s8(v126, *(int8x8x2_t *)((char *)&v123 - 8));
                v126 += 16;
                *(int8x16_t *)int16x4x2_t v126 = vzip2q_s8(v124, v123);
                vst2_s8(v122, (int8x8x2_t)v124);
                v122 += 16;
                --v121;
                v117 += 32;
                *(int8x16_t *)int16x8_t v122 = vzip2q_s8(v124, v125);
                v120 += 16;
                v119 += 16;
                v118 += 16;
              }
              while (v121 > 1);
            }
            ++v111;
            v14 += 2;
            if (v111 >= v64) {
              break;
            }
            v116 += v67;
            v115 += v67;
            v113 += v65;
            v114 += v22;
            v112 += v22;
          }
          while (v14 <= v151);
        }
      }
      else if (v14 <= v151)
      {
        unsigned int v77 = 0;
        uint64_t v78 = v76 + v71;
        uint64_t v79 = v147 + v75;
        uint64_t v80 = v145 + v75;
        uint64_t v81 = v70 + (v74 * v72);
        uint64_t v82 = v81 + v149;
        do
        {
          if (v150 >= 1)
          {
            uint64_t v83 = 0;
            uint64_t v84 = v80;
            uint64_t v85 = v79;
            uint64_t v86 = v78;
            unsigned int v87 = v150 + 1;
            do
            {
              int8x16_t v88 = (char *)(v82 + v83);
              int8x16_t v89 = *(int8x16_t *)(v84 + v60);
              int8x16_t v90 = *(int8x16_t *)(v86 + v60);
              int8x16_t v91 = *(int8x16_t *)(v85 + v60);
              int16x8_t v92 = (char *)(v81 + v83);
              uint64_t v93 = *(void *)(v86 + v60);
              vst2_s8(v92, *(int8x8x2_t *)((char *)&v89 - 8));
              v92 += 16;
              *(int8x16_t *)int16x8_t v92 = vzip2q_s8(v90, v89);
              vst2_s8(v88, (int8x8x2_t)v90);
              v88 += 16;
              --v87;
              v83 += 32;
              *(int8x16_t *)int8x16_t v88 = vzip2q_s8(v90, v91);
              v86 += 16;
              v85 += 16;
              v84 += 16;
            }
            while (v87 > 1);
          }
          v14 += 2;
          if (v77 > 6) {
            break;
          }
          v81 += v67;
          v82 += v67;
          ++v77;
          v78 += v65;
          v79 += v22;
          v80 += v22;
        }
        while (v14 <= v151);
      }
      ++v72;
      v71 += v63;
      v75 += v61;
    }
    while (v72 != a9);
  }
  return 0;
}

uint64_t sub_2219E2D58(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, char a6, _DWORD *a7)
{
  uint64_t v135 = *MEMORY[0x263EF8340];
  uint64_t v10 = *(void *)(a1 + 80);
  uint64_t v11 = *(unsigned int *)(v10 + 136);
  unsigned int v12 = *(_DWORD *)(v10 + 100) + 15;
  uint64_t v13 = *(void *)(a1 + 232) + (4 * v11);
  uint64_t v127 = *(void *)(v10 + 32);
  uint64_t v121 = *(void *)(v10 + 40);
  uint64_t v130 = *(unsigned int *)(v10 + 152);
  uint64_t v14 = v13 + (16 * v11) + (unint64_t)(2 * v130);
  uint64_t v15 = *(void *)(a1 + 176);
  signed int v16 = *(_DWORD *)(a1 + 184);
  int v17 = 16 * a4 - 4;
  if (!a4) {
    int v17 = 0;
  }
  if (*(unsigned char *)v10 && *(unsigned char *)(v10 + 3))
  {
    unsigned int v18 = (v12 & 0xFFFFFFF0) + ~(2 * *(_DWORD *)(a1 + 208));
    int v19 = *(unsigned __int8 *)(v10 + 5);
    uint64_t v20 = v127;
    uint64_t v21 = v121;
    if (v19)
    {
      v15 += v16;
      v14 += v130;
      uint64_t v21 = v121 + v130;
    }
    uint64_t v121 = v21;
    if (v19)
    {
      v13 += v11;
      uint64_t v20 = v127 + v11;
    }
    uint64_t v127 = v20;
    uint64_t v11 = (2 * v11);
    v16 *= 2;
    uint64_t v130 = (2 * v130);
  }
  else
  {
    unsigned int v18 = (v12 & 0xFFFFFFF0) + (2 * *(_DWORD *)(a1 + 212) - 4) * *(_DWORD *)(a1 + 208) - 1;
  }
  int v22 = *(unsigned __int8 *)(a1 + 226);
  int v23 = *(unsigned __int8 *)(a1 + 225);
  if (!(a4 | a2))
  {
    unsigned int v24 = sub_22190E1A8;
    if (!*(unsigned char *)(a1 + 226)) {
      unsigned int v24 = sub_22190EDF8;
    }
    *(void *)(a1 + 256) = v24;
  }
  int v133 = -1;
  if (a4 >= a5) {
    return 0;
  }
  int v91 = v22;
  uint64_t v25 = v11;
  unsigned int v26 = v12 >> 4;
  if (a2) {
    unsigned int v27 = a2 - 1;
  }
  else {
    unsigned int v27 = 0;
  }
  uint64_t v28 = 16 * v27;
  uint64_t v29 = (4 * v11);
  uint64_t v108 = v13 + v28;
  uint64_t v107 = v13 + v28 - v29;
  uint64_t v30 = (2 * v130);
  uint64_t v106 = v14 + v28;
  uint64_t v105 = v14 + v28 - v30;
  int v31 = v18 - v17;
  if (v31 >= 7) {
    int v32 = 7;
  }
  else {
    int v32 = v31;
  }
  if (v31 >= 9) {
    int v33 = 9;
  }
  else {
    int v33 = v31;
  }
  uint64_t v34 = v26 - 1;
  unsigned int v89 = 2 * v32 + 2;
  unsigned int v88 = 2 * v33 + 2;
  if (v26 == 1) {
    int v35 = 8;
  }
  else {
    int v35 = 6;
  }
  if (v35 < v31) {
    int v31 = v35;
  }
  unsigned int v90 = 2 * v31;
  unsigned int v111 = 16 * (a3 - a2);
  uint64_t v36 = 16 * a2;
  int v116 = 16 * v11;
  uint64_t v103 = v13 - v29 + v36;
  uint64_t v102 = v103 + (16 * v11);
  uint64_t v37 = v14 - v30 + v36;
  uint64_t v99 = v127 + v28;
  uint64_t v98 = v121 + v28;
  uint64_t v83 = v15;
  uint64_t v113 = 32 * v27;
  unsigned int v87 = 16 * v34 - 4;
  uint64_t v109 = v15 + v113;
  uint64_t v86 = v15 + v113 + v87 * v16;
  uint64_t v38 = a4;
  uint64_t v112 = a5;
  uint64_t v104 = v34;
  int v92 = 16 * a2;
  uint64_t v93 = a2;
  unsigned int v120 = 16 * v11 * a4;
  unsigned int v118 = 16 * (a2 + v11 * a4);
  int v85 = 8 * v34 - 2;
  int v115 = 8 * v130;
  uint64_t v100 = v37 + (8 * v130);
  uint64_t v101 = v37;
  uint64_t v128 = v14;
  uint64_t v129 = a3;
  unsigned int v119 = 8 * v130 * a4;
  unsigned int v117 = v119 + 16 * a2;
  signed int v95 = v16;
  unsigned int v96 = a2;
  unsigned int v123 = a3;
  uint64_t v126 = v11;
  uint64_t v122 = v13;
  int v94 = v23;
  unsigned int v114 = a3 - a2;
  unsigned int v110 = a2 - a3;
  while (1)
  {
    uint64_t v39 = (int8x16_t *)(*(void *)(a1 + 152) + 48 * (a2 + *(_DWORD *)(a1 + 12) * v38));
    uint64_t v131 = v38;
    if (!v23) {
      break;
    }
    if (a2 >= a3) {
      goto LABEL_56;
    }
    uint64_t v125 = v127 + (v116 * v38);
    uint64_t v124 = v121 + (v115 * v38);
    int v41 = v92;
    uint64_t v40 = v93;
    do
    {
      if (*(_DWORD *)(a1 + 264) >= (int)*(unsigned __int8 *)(*(void *)(a1 + 112)
                                                            + (v40 + *(_DWORD *)(a1 + 12) * v38)))
      {
        uint64_t v49 = v41 & 0xFFFFFFF0;
        unsigned int v50 = 17;
        uint64_t v51 = v49;
        do
        {
          *(_OWORD *)(v13 + v51) = *(_OWORD *)(v127 + v120 + v51);
          v51 += v25;
          --v50;
        }
        while (v50 > 1);
        for (unsigned int i = 9; i > 1; --i)
        {
          *(_OWORD *)(v14 + v49) = *(_OWORD *)(v121 + v119 + v49);
          v49 += v130;
        }
      }
      else
      {
        uint64_t v42 = (16 * v40);
        int v43 = (int64x2_t *)(v13 + v42);
        BOOL v44 = (int16x8_t *)(v124 + v42);
        int v45 = (__int16 *)(v14 + v42);
        sub_2219E0414(a1, (int8x16_t *)(v125 + v42), v43, v40, v38, v126, v39, v134);
        unsigned int v46 = v44;
        uint64_t v13 = v122;
        uint64_t v47 = v45;
        a3 = v123;
        uint64_t result = sub_2219E1724(a1, v46, v47, v130, v40, v131, v39, (uint64_t)v132);
        uint64_t v38 = v131;
        uint64_t v14 = v128;
        if (result) {
          return result;
        }
      }
      v39 += 3;
      ++v40;
      v41 += 16;
    }
    while (v40 != v129);
LABEL_55:
    signed int v16 = v95;
    a2 = v96;
    uint64_t v11 = v126;
    int v23 = v94;
    if (v94)
    {
LABEL_56:
      uint64_t v59 = v107;
      uint64_t v60 = v108;
      uint64_t v61 = v105;
      uint64_t v62 = v106;
      if (!v38) {
        goto LABEL_62;
      }
      goto LABEL_60;
    }
LABEL_58:
    uint64_t v62 = v98;
    uint64_t v60 = v99;
    if (!v38)
    {
LABEL_62:
      unsigned int v66 = 0;
      uint64_t v64 = *(void *)(a1 + 96);
      uint64_t v65 = v64 + v113;
      uint64_t v61 = v62;
      uint64_t v59 = v60;
      uint64_t v67 = v90;
      uint64_t v68 = v109;
      unsigned int v63 = v114;
      goto LABEL_64;
    }
    uint64_t v59 = v99 + ((16 * v38 - 4) * v11);
    uint64_t v61 = v98 + ((8 * v38 - 2) * v130);
LABEL_60:
    unsigned int v63 = v114;
    if (v38 == v104)
    {
      uint64_t v64 = *(void *)(a1 + 96);
      uint64_t v65 = v64 + v113 + (*(_DWORD *)(a1 + 104) * v85);
      unsigned int v66 = v87;
      uint64_t v67 = v88;
      uint64_t v68 = v86;
    }
    else
    {
      unsigned int v66 = 16 * v38 - 4;
      uint64_t v68 = v109 + v66 * v16;
      uint64_t v64 = *(void *)(a1 + 96);
      uint64_t v65 = v64 + v113 + (*(_DWORD *)(a1 + 104) * (8 * v38 - 2));
      uint64_t v67 = v89;
    }
LABEL_64:
    if (*(void *)(a1 + 240))
    {
      (*(void (**)(uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, signed int, void))(a1 + 256))(v59, v61, v111, 0, v67, v11, v130, v68, v16, *(void *)(a1 + 240));
      goto LABEL_66;
    }
    int v71 = *(_DWORD *)(a1 + 88);
    if (!v91)
    {
      if (v71 == 875704438) {
        sub_22190F064(v59, v61, v111, 0, v67, v11, v130, v68, v65, v16, *(_DWORD *)(a1 + 104));
      }
      else {
        sub_22190ED28(v59, v61, v111, 0, v67, v11, v130, v68, v16);
      }
LABEL_66:
      uint64_t v14 = v128;
      uint64_t v69 = v131;
      unsigned int v70 = v110;
      if (v23) {
        goto LABEL_78;
      }
      goto LABEL_90;
    }
    if (v23)
    {
      if (v71 == 875704438) {
        sub_22190E540(v59, v61, v111, 0, v67, v11, v130, v68, v65, v16, *(_DWORD *)(a1 + 104), 0, a7);
      }
      else {
        sub_22190DFF0(v59, v61, v111, 0, v67, v11, v130, v68, v16, 0, a7);
      }
      uint64_t v14 = v128;
      uint64_t v69 = v131;
      unsigned int v70 = v110;
LABEL_78:
      int v73 = 4;
      uint64_t v75 = v102;
      uint64_t v74 = v103;
      do
      {
        if (v63)
        {
          unsigned int v76 = 0;
          unsigned int v77 = v70;
          do
          {
            *(_OWORD *)(v74 + v76) = *(_OWORD *)(v75 + v76);
            v76 += 16;
            BOOL v53 = __CFADD__(v77++, 1);
          }
          while (!v53);
        }
        v75 += v25;
        v74 += v25;
        BOOL v53 = v73-- != 0;
      }
      while (v73 != 0 && v53);
      int v78 = 2;
      uint64_t v80 = v100;
      uint64_t v79 = v101;
      do
      {
        if (v63)
        {
          unsigned int v81 = 0;
          unsigned int v82 = v70;
          do
          {
            *(_OWORD *)(v79 + v81) = *(_OWORD *)(v80 + v81);
            v81 += 16;
            BOOL v53 = __CFADD__(v82++, 1);
          }
          while (!v53);
        }
        v80 += v130;
        v79 += v130;
        BOOL v53 = v78-- != 0;
      }
      while (v78 != 0 && v53);
      goto LABEL_90;
    }
    int v72 = v66 + v67;
    if (v71 == 875704438) {
      sub_22190E540(v127, v121, v111, v66, v72, v11, v130, v83, v64, v16, *(_DWORD *)(a1 + 104), a6, a7);
    }
    else {
      sub_22190DFF0(v127, v121, v111, v66, v72, v11, v130, v83, v16, a6, a7);
    }
    uint64_t v14 = v128;
    uint64_t v69 = v131;
LABEL_90:
    uint64_t v38 = v69 + 1;
    v120 += v116;
    v119 += v115;
    v118 += v116;
    v117 += v115;
    if (v38 == v112) {
      return 0;
    }
  }
  if (*(unsigned char *)(*(void *)(a1 + 80) + 3)) {
    BOOL v53 = a2 >= a3;
  }
  else {
    BOOL v53 = 1;
  }
  if (v53) {
    goto LABEL_58;
  }
  unsigned int v54 = v118;
  int v55 = a2;
  do
  {
    if ((v39[1].i8[0] & 0xC0) + v39->u8[0] <= 0x7F)
    {
      sub_2219E0414(a1, (int8x16_t *)(v127 + v54), (int64x2_t *)(v127 + v54), v55, v38, v11, v39, v134);
      uint64_t v38 = v131;
    }
    v39 += 3;
    ++v55;
    v54 += 16;
  }
  while (a3 != v55);
  int v56 = (int8x16_t *)(*(void *)(a1 + 152) + 48 * (a2 + *(_DWORD *)(a1 + 12) * v38));
  unsigned int v57 = v117;
  int v58 = a2;
  while (1)
  {
    if ((v56[1].i8[0] & 0xC0) + v56->u8[0] <= 0x7F)
    {
      uint64_t result = sub_2219E1724(a1, (int16x8_t *)(v121 + v57), (__int16 *)(v121 + v57), v130, v58, v131, v56, (uint64_t)v132);
      uint64_t v38 = v131;
      if (result) {
        return result;
      }
    }
    v56 += 3;
    ++v58;
    v57 += 16;
    if (a3 == v58) {
      goto LABEL_55;
    }
  }
}

uint64_t sub_2219E3624(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5)
{
  unsigned int v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = *(void *)(a1 + 80);
  unsigned int v9 = *(_DWORD *)(v8 + 100) + 15;
  unsigned int v10 = *(_DWORD *)(v8 + 136);
  uint64_t v11 = *(void *)(a1 + 232) + 4 * v10;
  uint64_t v12 = *(void *)(v8 + 32);
  uint64_t v85 = *(void *)(v8 + 40);
  uint64_t v89 = *(unsigned int *)(v8 + 152);
  uint64_t v90 = v10;
  uint64_t v13 = v11 + 16 * v10 + (unint64_t)(2 * v89);
  int v14 = 16 * a4 - 4;
  if (!a4) {
    int v14 = 0;
  }
  if (*(unsigned char *)v8 && *(unsigned char *)(v8 + 3))
  {
    unsigned int v15 = (v9 & 0xFFFFFFF0) + ~(2 * *(_DWORD *)(a1 + 208));
    int v16 = *(unsigned __int8 *)(v8 + 5);
    uint64_t v17 = v85;
    if (v16)
    {
      v13 += v89;
      uint64_t v17 = v85 + v89;
    }
    uint64_t v85 = v17;
    if (v16)
    {
      v11 += v90;
      v12 += v90;
    }
    LODWORD(v89) = 2 * v89;
    LODWORD(v90) = 2 * v90;
  }
  else
  {
    unsigned int v15 = (v9 & 0xFFFFFFF0) + (2 * *(_DWORD *)(a1 + 212) - 4) * *(_DWORD *)(a1 + 208) - 1;
  }
  int v18 = *(unsigned __int8 *)(a1 + 225);
  if (!(a4 | a2))
  {
    if (*(unsigned char *)(a1 + 226)) {
      int v19 = sub_221A0BE00;
    }
    else {
      int v19 = sub_221A0C59C;
    }
    uint64_t v20 = sub_221A0C034;
    if (!*(unsigned char *)(a1 + 226)) {
      uint64_t v20 = sub_221A0C920;
    }
    *(void *)(a1 + 248) = v19;
    *(void *)(a1 + 256) = v20;
  }
  if (a4 < a5)
  {
    unsigned int v21 = v9 >> 4;
    int v80 = 16 * v90;
    int v79 = 8 * v89;
    if (a2) {
      unsigned int v22 = a2 - 1;
    }
    else {
      unsigned int v22 = 0;
    }
    uint64_t v23 = 16 * v22;
    uint64_t v24 = (4 * v90);
    uint64_t v25 = (2 * v89);
    int v26 = v15 - v14;
    if (v26 >= 7) {
      int v27 = 7;
    }
    else {
      int v27 = v26;
    }
    if (v26 >= 9) {
      int v28 = 9;
    }
    else {
      int v28 = v26;
    }
    unsigned int v76 = v22;
    int v29 = 2 * v27;
    int v30 = 2 * v28;
    if (v21 == 1) {
      int v31 = 8;
    }
    else {
      int v31 = 6;
    }
    if (v31 < v26) {
      int v26 = v31;
    }
    int v77 = 2 * v26;
    uint64_t v74 = v11 + v23;
    uint64_t v75 = v21 - 1;
    uint64_t v73 = v11 + v23 - v24;
    uint64_t v72 = v13 + v23;
    uint64_t v71 = v13 + v23 - v25;
    int v61 = 16 * v6;
    unsigned int v84 = 16 * v90 * a4;
    unsigned int v82 = 16 * (v6 + v90 * a4);
    uint64_t v63 = v12 + v23;
    uint64_t v62 = v85 + v23;
    int v70 = v29 + 2;
    int v69 = v30 + 2;
    uint64_t v68 = (void *)(v11 - v24);
    uint64_t v67 = (void *)(v13 - v25);
    uint64_t v60 = v6;
    uint64_t v32 = a4;
    uint64_t v78 = a5;
    uint64_t v92 = a3;
    unsigned int v83 = 8 * v89 * a4;
    unsigned int v81 = v83 + 16 * v6;
    unsigned int v66 = v6;
    uint64_t v65 = v12;
    int v64 = v18;
    unsigned int v86 = a3;
    do
    {
      int v33 = *(_DWORD *)(v7 + 12);
      uint64_t v34 = (unsigned __int8 *)(*(void *)(v7 + 152) + 48 * (v6 + v33 * v32));
      uint64_t v94 = v32;
      if (v18)
      {
        if (v6 >= a3)
        {
          unsigned int v35 = a3 - (v33 != a3);
LABEL_60:
          uint64_t v52 = v72;
          uint64_t v53 = v73;
          uint64_t v54 = v71;
          uint64_t v55 = v74;
          int v56 = v77;
          if (v32) {
            goto LABEL_64;
          }
          goto LABEL_68;
        }
        uint64_t v37 = v12 + v84;
        uint64_t v88 = v12 + (v80 * v32);
        uint64_t v87 = v85 + (v79 * v32);
        uint64_t v38 = v60;
        int v39 = v61;
        do
        {
          if (*(_DWORD *)(v7 + 264) >= (int)*(unsigned __int8 *)(*(void *)(v7 + 112)
                                                                + (v38 + *(_DWORD *)(v7 + 12) * v32)))
          {
            uint64_t v43 = v39 & 0xFFFFFFF0;
            unsigned int v44 = 17;
            uint64_t v45 = v43;
            do
            {
              *(_OWORD *)(v11 + v45) = *(_OWORD *)(v37 + v45);
              v45 += v90;
              --v44;
            }
            while (v44 > 1);
            for (unsigned int i = 9; i > 1; --i)
            {
              *(_OWORD *)(v13 + v43) = *(_OWORD *)(v85 + v83 + v43);
              v43 += v89;
            }
          }
          else
          {
            uint64_t v40 = (16 * v38);
            uint64_t v91 = v87 + v40;
            uint64_t v41 = v13 + v40;
            sub_221A317A0((unsigned __int8 *)v7, v88 + v40, v11 + v40, v38, v32, v90, v34, 0, 0);
            uint64_t v42 = v41;
            a3 = v86;
            sub_221A325F4(a1, v91, v42, v38, v94, v89, v34, 0, 0);
            uint64_t v7 = a1;
            uint64_t v32 = v94;
          }
          v34 += 48;
          ++v38;
          v39 += 16;
        }
        while (v38 != v92);
      }
      else
      {
        if (*(unsigned char *)(*(void *)(v7 + 80) + 3)) {
          BOOL v36 = v6 >= a3;
        }
        else {
          BOOL v36 = 1;
        }
        if (v36)
        {
          unsigned int v35 = a3 - (v33 != a3);
          goto LABEL_62;
        }
        unsigned int v47 = v82;
        int v48 = v6;
        do
        {
          if ((v34[16] & 0xC0) + *v34 <= 0x7F)
          {
            sub_221A317A0((unsigned __int8 *)v7, v12 + v47, v12 + v47, v48, v32, v90, v34, 0, 0);
            uint64_t v7 = a1;
            uint64_t v32 = v94;
          }
          v34 += 48;
          ++v48;
          v47 += 16;
        }
        while (a3 != v48);
        uint64_t v49 = (unsigned __int8 *)(*(void *)(v7 + 152) + 48 * (v6 + *(_DWORD *)(v7 + 12) * v32));
        unsigned int v50 = v81;
        int v51 = v6;
        do
        {
          if ((v49[16] & 0xC0) + *v49 <= 0x7F)
          {
            sub_221A325F4(v7, v85 + v50, v85 + v50, v51, v32, v89, v49, 0, 0);
            uint64_t v7 = a1;
            uint64_t v32 = v94;
          }
          v49 += 48;
          ++v51;
          v50 += 16;
        }
        while (a3 != v51);
      }
      unsigned int v35 = a3 - (*(_DWORD *)(v7 + 12) != a3);
      uint64_t v12 = v65;
      unsigned int v6 = v66;
      int v18 = v64;
      if (v64) {
        goto LABEL_60;
      }
LABEL_62:
      if (v32)
      {
        uint64_t v53 = v63 + ((16 * v32 - 4) * v90);
        uint64_t v54 = v62 + ((8 * v32 - 2) * v89);
LABEL_64:
        if (v32 == v75) {
          int v56 = v69;
        }
        else {
          int v56 = v70;
        }
        uint64_t v52 = v54;
        uint64_t v55 = v53;
        goto LABEL_68;
      }
      uint64_t v52 = v62;
      uint64_t v55 = v63;
      int v56 = v77;
LABEL_68:
      if (v56 >= 1)
      {
        uint64_t v57 = 16 * (v35 - v76);
        if (*(void *)(v7 + 240)) {
          int v58 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v7 + 256);
        }
        else {
          int v58 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v7 + 248);
        }
        v58(v55, v52, v57, 0);
        uint64_t v7 = a1;
        uint64_t v32 = v94;
      }
      if (v18)
      {
        memcpy(v68, (const void *)(v11 + (12 * v90)), (4 * v90));
        memcpy(v67, (const void *)(v13 + (6 * v89)), (2 * v89));
        uint64_t v7 = a1;
        uint64_t v32 = v94;
      }
      ++v32;
      v84 += v80;
      v83 += v79;
      v81 += v79;
      v82 += v80;
    }
    while (v32 != v78);
  }
  return 0;
}

uint64_t sub_2219E3CD4(int8x16_t *a1, int a2, int8x16_t *a3, int a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a2;
  int16x8_t v6 = 0uLL;
  int v7 = 4;
  do
  {
    int16x8_t v32 = v6;
    uint8x16_t v8 = (uint8x16_t)vzip1q_s8(*a3, *a1);
    uint8x16_t v9 = (uint8x16_t)vzip2q_s8(*a3, *a1);
    int16x8_t v10 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v9.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v9), (int16x8_t)xmmword_221A360C0));
    int8x16_t v11 = *(int8x16_t *)((char *)a3 + v4);
    int8x16_t v12 = *(int8x16_t *)((char *)a1 + v5);
    uint8x16_t v13 = (uint8x16_t)vzip1q_s8(v11, v12);
    uint8x16_t v14 = (uint8x16_t)vzip2q_s8(v11, v12);
    int16x8_t v15 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v14.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v14), (int16x8_t)xmmword_221A360C0));
    int v16 = (int8x16_t *)((char *)a3 + v4 + v4);
    uint64_t v17 = (int8x16_t *)((char *)a1 + v5 + v5);
    uint8x16_t v18 = (uint8x16_t)vzip1q_s8(*v16, *v17);
    uint8x16_t v19 = (uint8x16_t)vzip2q_s8(*v16, *v17);
    int16x8_t v20 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v19.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v19), (int16x8_t)xmmword_221A360C0));
    unsigned int v21 = &v16->i8[v4];
    int8x16_t v22 = *(int8x16_t *)((char *)v16 + v4);
    uint64_t v23 = &v17->i8[v5];
    int8x16_t v24 = *(int8x16_t *)((char *)v17 + v5);
    uint8x16_t v25 = (uint8x16_t)vzip1q_s8(v22, v24);
    uint8x16_t v26 = (uint8x16_t)vzip2q_s8(v22, v24);
    *(double *)v27.i64 = sub_2219E4B48(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v8.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v8), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v13.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v13), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v18.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v18), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v25.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v25), (int16x8_t)xmmword_221A360C0)), v10, v15, v20, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v26.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v26), (int16x8_t)xmmword_221A360C0)));
    int16x8_t v28 = vaddq_s16(v32, v27);
    int16x8_t v6 = v28;
    a3 = (int8x16_t *)&v21[v4];
    a1 = (int8x16_t *)&v23[v5];
    --v7;
  }
  while (v7);
  int16x8_t v29 = vpaddq_s16(v28, v28);
  int16x8_t v30 = vpaddq_s16(v29, v29);
  return vpaddq_s16(v30, v30).u16[0];
}

uint64_t sub_2219E3E58(int8x16_t *a1, int a2, int8x16_t *a3, int a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a2;
  int16x8_t v6 = 0uLL;
  char v7 = 1;
  do
  {
    int16x8_t v33 = v6;
    char v8 = v7;
    uint8x16_t v9 = (uint8x16_t)vzip1q_s8(*a3, *a1);
    uint8x16_t v10 = (uint8x16_t)vzip2q_s8(*a3, *a1);
    int16x8_t v11 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v10.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v10), (int16x8_t)xmmword_221A360C0));
    int8x16_t v12 = *(int8x16_t *)((char *)a3 + v4);
    int8x16_t v13 = *(int8x16_t *)((char *)a1 + v5);
    uint8x16_t v14 = (uint8x16_t)vzip1q_s8(v12, v13);
    uint8x16_t v15 = (uint8x16_t)vzip2q_s8(v12, v13);
    int16x8_t v16 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v15.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v15), (int16x8_t)xmmword_221A360C0));
    uint64_t v17 = (int8x16_t *)((char *)a3 + v4 + v4);
    uint8x16_t v18 = (int8x16_t *)((char *)a1 + v5 + v5);
    uint8x16_t v19 = (uint8x16_t)vzip1q_s8(*v17, *v18);
    uint8x16_t v20 = (uint8x16_t)vzip2q_s8(*v17, *v18);
    int16x8_t v21 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v20.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v20), (int16x8_t)xmmword_221A360C0));
    int8x16_t v22 = &v17->i8[v4];
    int8x16_t v23 = *(int8x16_t *)((char *)v17 + v4);
    int8x16_t v24 = &v18->i8[v5];
    int8x16_t v25 = *(int8x16_t *)((char *)v18 + v5);
    uint8x16_t v26 = (uint8x16_t)vzip1q_s8(v23, v25);
    uint8x16_t v27 = (uint8x16_t)vzip2q_s8(v23, v25);
    *(double *)v28.i64 = sub_2219E4B48(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v9.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v9), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v14.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v14), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v19.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v19), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v26.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v26), (int16x8_t)xmmword_221A360C0)), v11, v16, v21, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v27.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v27), (int16x8_t)xmmword_221A360C0)));
    char v7 = 0;
    int16x8_t v29 = vaddq_s16(v33, v28);
    int16x8_t v6 = v29;
    a3 = (int8x16_t *)&v22[v4];
    a1 = (int8x16_t *)&v24[v5];
  }
  while ((v8 & 1) != 0);
  int16x8_t v30 = vpaddq_s16(v29, v29);
  int16x8_t v31 = vpaddq_s16(v30, v30);
  return vpaddq_s16(v31, v31).u16[0];
}

uint64_t sub_2219E3FE0(uint64_t *a1, int a2, uint64_t *a3, int a4, double a5, double a6, int8x16_t a7, int8x16_t a8, int8x16_t a9, int8x16_t a10, int8x16_t a11, int8x16_t a12)
{
  uint64_t v16 = 2 * a4;
  uint64_t v17 = 2 * a2;
  uint64_t v50 = a2;
  uint64_t v51 = a4;
  uint64_t v49 = 3 * a2;
  uint64_t v48 = 6 * a2;
  uint64_t v46 = 4 * a2;
  uint64_t v47 = 7 * a2;
  uint64_t v45 = 5 * a2;
  uint64_t v18 = 3 * a4;
  uint64_t v19 = 6 * a4;
  uint64_t v20 = 7 * a4;
  uint64_t v21 = 4 * a4;
  int8x16_t v22 = 0uLL;
  char v23 = 1;
  v24.i64[1] = 0xFFFF0001FFFF0001;
  uint64_t v25 = 5 * a4;
  do
  {
    int16x8_t v52 = (int16x8_t)v22;
    v22.i64[0] = *a3;
    v24.i64[0] = *a1;
    uint8x16_t v26 = (uint8x16_t)vzip1q_s8(v22, v24);
    a7.i64[0] = *(uint64_t *)((char *)a3 + v51);
    char v27 = v23;
    a8.i64[0] = *(uint64_t *)((char *)a1 + v50);
    uint8x16_t v28 = (uint8x16_t)vzip1q_s8(a7, a8);
    int8x16_t v29 = (int8x16_t)vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v28.i8), (int16x8_t)xmmword_221A360C0);
    int16x8_t v30 = vpaddq_s16((int16x8_t)v29, vmulq_s16((int16x8_t)vmovl_high_u8(v28), (int16x8_t)xmmword_221A360C0));
    v29.i64[0] = *(uint64_t *)((char *)a3 + v16);
    a8.i64[0] = *(uint64_t *)((char *)a1 + v17);
    a9.i64[0] = *(uint64_t *)((char *)a3 + v18);
    a10.i64[0] = *(uint64_t *)((char *)a1 + v49);
    uint8x16_t v31 = (uint8x16_t)vzip1q_s8(v29, a8);
    uint8x16_t v32 = (uint8x16_t)vzip1q_s8(a9, a10);
    int8x16_t v33 = (int8x16_t)vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v32.i8), (int16x8_t)xmmword_221A360C0);
    int16x8_t v34 = vpaddq_s16((int16x8_t)v33, vmulq_s16((int16x8_t)vmovl_high_u8(v32), (int16x8_t)xmmword_221A360C0));
    v33.i64[0] = *(uint64_t *)((char *)a3 + v21);
    a10.i64[0] = *(uint64_t *)((char *)a1 + v46);
    a11.i64[0] = *(uint64_t *)((char *)a3 + v25);
    a12.i64[0] = *(uint64_t *)((char *)a1 + v45);
    uint8x16_t v35 = (uint8x16_t)vzip1q_s8(v33, a10);
    uint8x16_t v36 = (uint8x16_t)vzip1q_s8(a11, a12);
    int8x16_t v37 = (int8x16_t)vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v36.i8), (int16x8_t)xmmword_221A360C0);
    int16x8_t v38 = vpaddq_s16((int16x8_t)v37, vmulq_s16((int16x8_t)vmovl_high_u8(v36), (int16x8_t)xmmword_221A360C0));
    v37.i64[0] = *(uint64_t *)((char *)a3 + v19);
    a12.i64[0] = *(uint64_t *)((char *)a1 + v48);
    v12.i64[0] = *(uint64_t *)((char *)a3 + v20);
    v13.i64[0] = *(uint64_t *)((char *)a1 + v47);
    a3 = (uint64_t *)((char *)a3 + 2 * v16 + v16 + v16);
    a1 = (uint64_t *)((char *)a1 + 2 * v17 + v17 + v17);
    uint8x16_t v39 = (uint8x16_t)vzip1q_s8(v37, a12);
    uint8x16_t v40 = (uint8x16_t)vzip1q_s8(v12, v13);
    *(double *)v41.i64 = sub_2219E4B48(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v26.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v26), (int16x8_t)xmmword_221A360C0)), v30, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v31.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v31), (int16x8_t)xmmword_221A360C0)), v34, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v35.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v35), (int16x8_t)xmmword_221A360C0)), v38, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v39.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v39), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v40.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v40), (int16x8_t)xmmword_221A360C0)));
    char v23 = 0;
    int8x16_t v24 = (int8x16_t)vaddq_s16(v52, v41);
    int8x16_t v22 = v24;
  }
  while ((v27 & 1) != 0);
  int16x8_t v42 = vpaddq_s16((int16x8_t)v24, (int16x8_t)v24);
  int16x8_t v43 = vpaddq_s16(v42, v42);
  return vpaddq_s16(v43, v43).u16[0];
}

uint64_t sub_2219E41FC(unint64_t *a1, int a2, unint64_t *a3, int a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, int8x16_t a9, int8x16_t a10, int8x16_t a11)
{
  a5.i64[0] = *a3;
  a6.i64[0] = *a1;
  a7.i64[0] = *(unint64_t *)((char *)a3 + a4);
  a8.i64[0] = *(unint64_t *)((char *)a1 + a2);
  uint8x16_t v14 = (uint64_t *)((char *)a3 + 2 * a4);
  uint8x16_t v15 = (unint64_t *)((char *)a1 + 2 * a2);
  uint8x16_t v16 = (uint8x16_t)vzip1q_s8(a5, a6);
  uint8x16_t v17 = (uint8x16_t)vzip1q_s8(a7, a8);
  int8x16_t v18 = (int8x16_t)vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v17.i8), (int16x8_t)xmmword_221A360C0);
  int16x8_t v19 = vpaddq_s16((int16x8_t)v18, vmulq_s16((int16x8_t)vmovl_high_u8(v17), (int16x8_t)xmmword_221A360C0));
  v18.i64[0] = *v14;
  a8.i64[0] = *v15;
  a9.i64[0] = *(uint64_t *)((char *)v14 + a4);
  a10.i64[0] = *(unint64_t *)((char *)v15 + a2);
  uint64_t v20 = (uint64_t *)((char *)v14 + 2 * a4);
  uint64_t v21 = (unint64_t *)((char *)v15 + 2 * a2);
  uint8x16_t v22 = (uint8x16_t)vzip1q_s8(v18, a8);
  uint8x16_t v23 = (uint8x16_t)vzip1q_s8(a9, a10);
  int8x16_t v24 = (int8x16_t)vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v23.i8), (int16x8_t)xmmword_221A360C0);
  int16x8_t v25 = vpaddq_s16((int16x8_t)v24, vmulq_s16((int16x8_t)vmovl_high_u8(v23), (int16x8_t)xmmword_221A360C0));
  v24.i64[0] = *v20;
  a10.i64[0] = *v21;
  a11.i64[0] = *(uint64_t *)((char *)v20 + a4);
  v11.i64[0] = *(unint64_t *)((char *)v21 + a2);
  uint8x16_t v26 = (uint64_t *)((char *)v20 + 2 * a4);
  char v27 = (uint64_t *)((char *)v21 + 2 * a2);
  uint8x16_t v28 = (uint8x16_t)vzip1q_s8(v24, a10);
  uint8x16_t v29 = (uint8x16_t)vzip1q_s8(a11, v11);
  int8x16_t v30 = (int8x16_t)vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v29.i8), (int16x8_t)xmmword_221A360C0);
  int16x8_t v31 = vpaddq_s16((int16x8_t)v30, vmulq_s16((int16x8_t)vmovl_high_u8(v29), (int16x8_t)xmmword_221A360C0));
  v30.i64[0] = *v26;
  v11.i64[0] = *v27;
  v12.i64[0] = *(uint64_t *)((char *)v26 + a4);
  v13.i64[0] = *(uint64_t *)((char *)v27 + a2);
  uint8x16_t v32 = (uint8x16_t)vzip1q_s8(v30, v11);
  uint8x16_t v33 = (uint8x16_t)vzip1q_s8(v12, v13);
  *(double *)v34.i64 = sub_2219E4B48(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v16.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v16), (int16x8_t)xmmword_221A360C0)), v19, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v22.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v22), (int16x8_t)xmmword_221A360C0)), v25, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v28.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v28), (int16x8_t)xmmword_221A360C0)), v31, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v32.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v32), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v33.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v33), (int16x8_t)xmmword_221A360C0)));
  int16x8_t v35 = vpaddq_s16(v34, v34);
  int16x8_t v36 = vpaddq_s16(v35, v35);
  return vpaddq_s16(v36, v36).u16[0];
}

uint64_t sub_2219E4344(int8x16_t *a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7 = 0;
  uint64_t v8 = a5;
  uint64_t v9 = a2;
  int16x8_t v10 = 0uLL;
  uint64_t v11 = 4 * a5;
  int v12 = 4;
  do
  {
    int16x8_t v41 = v10;
    int8x16_t v13 = (int8x16_t)vrhaddq_u8(*(uint8x16_t *)(a3 + v7), *(uint8x16_t *)(a4 + v7));
    uint8x16_t v14 = (uint8x16_t)vzip1q_s8(v13, *a1);
    uint8x16_t v15 = (uint8x16_t)vzip2q_s8(v13, *a1);
    int16x8_t v16 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v15.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v15), (int16x8_t)xmmword_221A360C0));
    uint8x16_t v17 = (uint8x16_t *)(a3 + v7 + v8);
    int8x16_t v18 = *(int8x16_t *)((char *)a1 + v9);
    int16x8_t v19 = (uint8x16_t *)(a4 + v7 + v8);
    int8x16_t v20 = (int8x16_t)vrhaddq_u8(*v17, *v19);
    uint8x16_t v21 = (uint8x16_t)vzip1q_s8(v20, v18);
    uint8x16_t v22 = (uint8x16_t)vzip2q_s8(v20, v18);
    int16x8_t v23 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v22.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v22), (int16x8_t)xmmword_221A360C0));
    int8x16_t v24 = (uint8x16_t *)((char *)v17 + v8);
    int16x8_t v25 = (int8x16_t *)((char *)a1 + v9 + v9);
    uint8x16_t v26 = (uint8x16_t *)((char *)v19 + v8);
    int8x16_t v27 = (int8x16_t)vrhaddq_u8(*v24, *v26);
    uint8x16_t v28 = (uint8x16_t)vzip1q_s8(v27, *v25);
    uint8x16_t v29 = (uint8x16_t)vzip2q_s8(v27, *v25);
    int16x8_t v30 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v29.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v29), (int16x8_t)xmmword_221A360C0));
    int16x8_t v31 = &v25->i8[v9];
    int8x16_t v32 = *(int8x16_t *)((char *)v25 + v9);
    int8x16_t v33 = (int8x16_t)vrhaddq_u8(*(uint8x16_t *)((char *)v24 + v8), *(uint8x16_t *)((char *)v26 + v8));
    uint8x16_t v34 = (uint8x16_t)vzip1q_s8(v33, v32);
    uint8x16_t v35 = (uint8x16_t)vzip2q_s8(v33, v32);
    *(double *)v36.i64 = sub_2219E4B48(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v14.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v14), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v21.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v21), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v28.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v28), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v34.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v34), (int16x8_t)xmmword_221A360C0)), v16, v23, v30, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v35.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v35), (int16x8_t)xmmword_221A360C0)));
    int16x8_t v37 = vaddq_s16(v41, v36);
    int16x8_t v10 = v37;
    v7 += v11;
    a1 = (int8x16_t *)&v31[v9];
    --v12;
  }
  while (v12);
  int16x8_t v38 = vpaddq_s16(v37, v37);
  int16x8_t v39 = vpaddq_s16(v38, v38);
  return vpaddq_s16(v39, v39).u16[0];
}

uint64_t sub_2219E450C(int8x16_t *a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7 = 0;
  uint64_t v8 = a5;
  uint64_t v9 = a2;
  int16x8_t v10 = 0uLL;
  uint64_t v11 = 4 * a5;
  char v12 = 1;
  do
  {
    int16x8_t v42 = v10;
    char v13 = v12;
    int8x16_t v14 = (int8x16_t)vrhaddq_u8(*(uint8x16_t *)(a3 + v7), *(uint8x16_t *)(a4 + v7));
    uint8x16_t v15 = (uint8x16_t)vzip1q_s8(v14, *a1);
    uint8x16_t v16 = (uint8x16_t)vzip2q_s8(v14, *a1);
    int16x8_t v17 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v16.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v16), (int16x8_t)xmmword_221A360C0));
    int8x16_t v18 = (uint8x16_t *)(a3 + v7 + v8);
    int8x16_t v19 = *(int8x16_t *)((char *)a1 + v9);
    int8x16_t v20 = (uint8x16_t *)(a4 + v7 + v8);
    int8x16_t v21 = (int8x16_t)vrhaddq_u8(*v18, *v20);
    uint8x16_t v22 = (uint8x16_t)vzip1q_s8(v21, v19);
    uint8x16_t v23 = (uint8x16_t)vzip2q_s8(v21, v19);
    int16x8_t v24 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v23.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v23), (int16x8_t)xmmword_221A360C0));
    int16x8_t v25 = (uint8x16_t *)((char *)v18 + v8);
    uint8x16_t v26 = (int8x16_t *)((char *)a1 + v9 + v9);
    int8x16_t v27 = (uint8x16_t *)((char *)v20 + v8);
    int8x16_t v28 = (int8x16_t)vrhaddq_u8(*v25, *v27);
    uint8x16_t v29 = (uint8x16_t)vzip1q_s8(v28, *v26);
    uint8x16_t v30 = (uint8x16_t)vzip2q_s8(v28, *v26);
    int16x8_t v31 = vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v30.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v30), (int16x8_t)xmmword_221A360C0));
    int8x16_t v32 = &v26->i8[v9];
    int8x16_t v33 = *(int8x16_t *)((char *)v26 + v9);
    int8x16_t v34 = (int8x16_t)vrhaddq_u8(*(uint8x16_t *)((char *)v25 + v8), *(uint8x16_t *)((char *)v27 + v8));
    uint8x16_t v35 = (uint8x16_t)vzip1q_s8(v34, v33);
    uint8x16_t v36 = (uint8x16_t)vzip2q_s8(v34, v33);
    *(double *)v37.i64 = sub_2219E4B48(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v15.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v15), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v22.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v22), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v29.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v29), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v35.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v35), (int16x8_t)xmmword_221A360C0)), v17, v24, v31, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v36.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v36), (int16x8_t)xmmword_221A360C0)));
    char v12 = 0;
    int16x8_t v38 = vaddq_s16(v42, v37);
    int16x8_t v10 = v38;
    v7 += v11;
    a1 = (int8x16_t *)&v32[v9];
  }
  while ((v13 & 1) != 0);
  int16x8_t v39 = vpaddq_s16(v38, v38);
  int16x8_t v40 = vpaddq_s16(v39, v39);
  return vpaddq_s16(v40, v40).u16[0];
}

uint64_t sub_2219E46D8(unint64_t *a1, int a2, uint64_t a3, uint64_t a4, int a5, double a6, double a7, uint8x16_t a8, int8x16_t a9, int8x16_t a10, uint8x16_t a11, int8x16_t a12, uint8x16_t a13)
{
  uint64_t v19 = 0;
  uint64_t v72 = a4 + a5;
  uint64_t v20 = 2 * a2;
  uint64_t v70 = 8 * a5;
  uint64_t v21 = 3 * a5;
  uint64_t v22 = 7 * a5;
  uint64_t v69 = a4 + v22;
  uint64_t v68 = a4 + 6 * a5;
  uint64_t v23 = 5 * a5;
  uint64_t v67 = a4 + v23;
  uint64_t v65 = a4 + v21;
  uint64_t v66 = a4 + 4 * a5;
  uint64_t v63 = a3 + a5;
  uint64_t v64 = a4 + 2 * a5;
  uint64_t v62 = a3 + v22;
  uint64_t v61 = a3 + 6 * a5;
  uint64_t v60 = a3 + v23;
  uint64_t v58 = a3 + v21;
  uint64_t v59 = a3 + 4 * a5;
  uint64_t v57 = a3 + 2 * a5;
  uint64_t v71 = a2;
  uint64_t v24 = 3 * a2;
  uint64_t v25 = 6 * a2;
  uint64_t v26 = 7 * a2;
  uint64_t v27 = 4 * a2;
  uint8x16_t v28 = 0uLL;
  v29.i64[1] = 0xFFFF0001FFFF0001;
  char v30 = 1;
  uint64_t v31 = 5 * a2;
  do
  {
    int16x8_t v74 = (int16x8_t)v28;
    v28.i64[0] = *(void *)(a3 + v19);
    v29.i64[0] = *(void *)(a4 + v19);
    int8x16_t v32 = (int8x16_t)vrhaddq_u8(v28, (uint8x16_t)v29);
    v29.i64[0] = *(void *)(v63 + v19);
    a8.i64[0] = *(void *)(v72 + v19);
    int8x16_t v33 = (int8x16_t)vrhaddq_u8((uint8x16_t)v29, a8);
    a8.i64[0] = *a1;
    uint8x16_t v34 = (uint8x16_t)vzip1q_s8(v32, (int8x16_t)a8);
    char v35 = v30;
    a9.i64[0] = *(unint64_t *)((char *)a1 + v71);
    uint8x16_t v36 = (uint8x16_t)vzip1q_s8(v33, a9);
    int16x8_t v37 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v36.i8), (int16x8_t)xmmword_221A360C0);
    int16x8_t v38 = vpaddq_s16(v37, vmulq_s16((int16x8_t)vmovl_high_u8(v36), (int16x8_t)xmmword_221A360C0));
    v37.i64[0] = *(void *)(v57 + v19);
    a9.i64[0] = *(void *)(v58 + v19);
    a10.i64[0] = *(unint64_t *)((char *)a1 + v24);
    a11.i64[0] = *(void *)(v64 + v19);
    a12.i64[0] = *(unint64_t *)((char *)a1 + v20);
    a13.i64[0] = *(void *)(v65 + v19);
    uint8x16_t v39 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)v37, a11), a12);
    int16x8_t v40 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v39.i8), (int16x8_t)xmmword_221A360C0);
    int16x8_t v41 = vpaddq_s16(v40, vmulq_s16((int16x8_t)vmovl_high_u8(v39), (int16x8_t)xmmword_221A360C0));
    uint8x16_t v42 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)a9, a13), a10);
    int16x8_t v43 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v42.i8), (int16x8_t)xmmword_221A360C0);
    v40.i64[0] = *(void *)(v59 + v19);
    a12.i64[0] = *(unint64_t *)((char *)a1 + v27);
    a13.i64[0] = *(void *)(v60 + v19);
    v13.i64[0] = *(unint64_t *)((char *)a1 + v31);
    int16x8_t v44 = vpaddq_s16(v43, vmulq_s16((int16x8_t)vmovl_high_u8(v42), (int16x8_t)xmmword_221A360C0));
    v43.i64[0] = *(void *)(v66 + v19);
    v14.i64[0] = *(void *)(v67 + v19);
    uint8x16_t v45 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)v40, (uint8x16_t)v43), a12);
    uint8x16_t v46 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8(a13, (uint8x16_t)v14), v13);
    int16x8_t v47 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v46.i8), (int16x8_t)xmmword_221A360C0);
    a13.i64[0] = *(void *)(v61 + v19);
    v13.i64[0] = *(unint64_t *)((char *)a1 + v25);
    int16x8_t v48 = vpaddq_s16(v47, vmulq_s16((int16x8_t)vmovl_high_u8(v46), (int16x8_t)xmmword_221A360C0));
    v47.i64[0] = *(void *)(v62 + v19);
    v14.i64[0] = *(unint64_t *)((char *)a1 + v26);
    a1 = (unint64_t *)((char *)a1 + 2 * v20 + v20 + v20);
    v15.i64[0] = *(void *)(v68 + v19);
    v16.i64[0] = *(void *)(v69 + v19);
    int8x16_t v49 = (int8x16_t)vrhaddq_u8(a13, v15);
    int8x16_t v50 = (int8x16_t)vrhaddq_u8((uint8x16_t)v47, v16);
    uint8x16_t v51 = (uint8x16_t)vzip1q_s8(v49, v13);
    uint8x16_t v52 = (uint8x16_t)vzip1q_s8(v50, v14);
    *(double *)v53.i64 = sub_2219E4B48(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v34.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v34), (int16x8_t)xmmword_221A360C0)), v38, v41, v44, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v45.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v45), (int16x8_t)xmmword_221A360C0)), v48, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v51.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v51), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v52.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v52), (int16x8_t)xmmword_221A360C0)));
    char v30 = 0;
    int16x8_t v29 = vaddq_s16(v74, v53);
    uint8x16_t v28 = (uint8x16_t)v29;
    v19 += v70;
  }
  while ((v35 & 1) != 0);
  int16x8_t v54 = vpaddq_s16(v29, v29);
  int16x8_t v55 = vpaddq_s16(v54, v54);
  return vpaddq_s16(v55, v55).u16[0];
}

uint64_t sub_2219E49B4(unint64_t *a1, int a2, unint64_t *a3, unint64_t *a4, int a5, uint8x16_t a6, int8x16_t a7, uint8x16_t a8, int8x16_t a9, uint8x16_t a10, uint8x16_t a11, uint8x16_t a12)
{
  a6.i64[0] = *a3;
  a7.i64[0] = *a1;
  a8.i64[0] = *(unint64_t *)((char *)a3 + a5);
  a9.i64[0] = *(unint64_t *)((char *)a1 + a2);
  int16x8_t v17 = (uint64_t *)((char *)a3 + 2 * a5);
  int8x16_t v18 = (unint64_t *)((char *)a1 + 2 * a2);
  a10.i64[0] = *a4;
  a11.i64[0] = *(unint64_t *)((char *)a4 + a5);
  uint64_t v19 = (unint64_t *)((char *)a4 + 2 * a5);
  uint8x16_t v20 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8(a6, a10), a7);
  uint8x16_t v21 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8(a8, a11), a9);
  int16x8_t v22 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v21.i8), (int16x8_t)xmmword_221A360C0);
  int16x8_t v23 = vpaddq_s16(v22, vmulq_s16((int16x8_t)vmovl_high_u8(v21), (int16x8_t)xmmword_221A360C0));
  v22.i64[0] = *v17;
  a9.i64[0] = *(uint64_t *)((char *)v17 + a5);
  a10.i64[0] = *v18;
  a11.i64[0] = *(unint64_t *)((char *)v18 + a2);
  uint64_t v24 = (uint64_t *)((char *)v17 + 2 * a5);
  uint64_t v25 = (unint64_t *)((char *)v18 + 2 * a2);
  a12.i64[0] = *v19;
  v12.i64[0] = *(unint64_t *)((char *)v19 + a5);
  uint64_t v26 = (uint64_t *)((char *)v19 + 2 * a5);
  uint8x16_t v27 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)v22, a12), (int8x16_t)a10);
  uint8x16_t v28 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)a9, (uint8x16_t)v12), (int8x16_t)a11);
  int16x8_t v29 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v28.i8), (int16x8_t)xmmword_221A360C0);
  int16x8_t v30 = vpaddq_s16(v29, vmulq_s16((int16x8_t)vmovl_high_u8(v28), (int16x8_t)xmmword_221A360C0));
  v29.i64[0] = *v24;
  a11.i64[0] = *v25;
  a12.i64[0] = *(uint64_t *)((char *)v24 + a5);
  v12.i64[0] = *(unint64_t *)((char *)v25 + a2);
  uint64_t v31 = (uint64_t *)((char *)v24 + 2 * a5);
  int8x16_t v32 = (uint64_t *)((char *)v25 + 2 * a2);
  v13.i64[0] = *v26;
  v14.i64[0] = *(uint64_t *)((char *)v26 + a5);
  int8x16_t v33 = (uint64_t *)((char *)v26 + 2 * a5);
  uint8x16_t v34 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)v29, (uint8x16_t)v13), (int8x16_t)a11);
  uint8x16_t v35 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8(a12, (uint8x16_t)v14), v12);
  int16x8_t v36 = vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v35.i8), (int16x8_t)xmmword_221A360C0);
  int16x8_t v37 = vpaddq_s16(v36, vmulq_s16((int16x8_t)vmovl_high_u8(v35), (int16x8_t)xmmword_221A360C0));
  v36.i64[0] = *v31;
  v12.i64[0] = *(uint64_t *)((char *)v31 + a5);
  v13.i64[0] = *(uint64_t *)((char *)v32 + a2);
  v14.i64[0] = *v32;
  v15.i64[0] = *v33;
  v16.i64[0] = *(uint64_t *)((char *)v33 + a5);
  uint8x16_t v38 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)v36, v15), v14);
  uint8x16_t v39 = (uint8x16_t)vzip1q_s8((int8x16_t)vrhaddq_u8((uint8x16_t)v12, v16), v13);
  *(double *)v40.i64 = sub_2219E4B48(vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v20.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v20), (int16x8_t)xmmword_221A360C0)), v23, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v27.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v27), (int16x8_t)xmmword_221A360C0)), v30, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v34.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v34), (int16x8_t)xmmword_221A360C0)), v37, vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v38.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v38), (int16x8_t)xmmword_221A360C0)), vpaddq_s16(vmulq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)v39.i8), (int16x8_t)xmmword_221A360C0), vmulq_s16((int16x8_t)vmovl_high_u8(v39), (int16x8_t)xmmword_221A360C0)));
  int16x8_t v41 = vpaddq_s16(v40, v40);
  int16x8_t v42 = vpaddq_s16(v41, v41);
  return vpaddq_s16(v42, v42).u16[0];
}

double sub_2219E4B48(int16x8_t a1, int16x8_t a2, int16x8_t a3, int16x8_t a4, int16x8_t a5, int16x8_t a6, int16x8_t a7, int16x8_t a8)
{
  int16x8_t v8 = vaddq_s16(a2, a1);
  int16x8_t v9 = vsubq_s16(a1, a2);
  int16x8_t v10 = vaddq_s16(a4, a3);
  int16x8_t v11 = vsubq_s16(a3, a4);
  int16x8_t v12 = vaddq_s16(a6, a5);
  int16x8_t v13 = vsubq_s16(a5, a6);
  int16x8_t v14 = vaddq_s16(a8, a7);
  int16x8_t v15 = vsubq_s16(a7, a8);
  int16x8_t v16 = vzip1q_s16(v8, v9);
  int16x8_t v17 = vzip2q_s16(v8, v9);
  int16x8_t v18 = vzip1q_s16(v10, v11);
  int16x8_t v19 = vzip2q_s16(v10, v11);
  int16x8_t v20 = vzip1q_s16(v12, v13);
  int16x8_t v21 = vzip2q_s16(v12, v13);
  int16x8_t v22 = vzip1q_s16(v14, v15);
  int16x8_t v23 = vzip2q_s16(v14, v15);
  int32x4_t v24 = (int32x4_t)vaddq_s16(v18, v16);
  int32x4_t v25 = (int32x4_t)vsubq_s16(v16, v18);
  int32x4_t v26 = (int32x4_t)vaddq_s16(v19, v17);
  int32x4_t v27 = (int32x4_t)vsubq_s16(v17, v19);
  int32x4_t v28 = (int32x4_t)vaddq_s16(v22, v20);
  int32x4_t v29 = (int32x4_t)vsubq_s16(v20, v22);
  int32x4_t v30 = (int32x4_t)vaddq_s16(v23, v21);
  int32x4_t v31 = (int32x4_t)vsubq_s16(v21, v23);
  int16x8_t v32 = (int16x8_t)vzip1q_s32(v24, v25);
  int16x8_t v33 = (int16x8_t)vzip2q_s32(v24, v25);
  int16x8_t v34 = (int16x8_t)vzip1q_s32(v26, v27);
  int16x8_t v35 = (int16x8_t)vzip2q_s32(v26, v27);
  int16x8_t v36 = (int16x8_t)vzip1q_s32(v28, v29);
  int16x8_t v37 = (int16x8_t)vzip2q_s32(v28, v29);
  int16x8_t v38 = (int16x8_t)vzip1q_s32(v30, v31);
  int16x8_t v39 = (int16x8_t)vzip2q_s32(v30, v31);
  int16x8_t v40 = vaddq_s16(v32, v33);
  int16x8_t v41 = vsubq_s16(v32, v33);
  int64x2_t v42 = (int64x2_t)vaddq_s16(v34, v35);
  int64x2_t v43 = (int64x2_t)vsubq_s16(v34, v35);
  int16x8_t v44 = vaddq_s16(v36, v37);
  int16x8_t v45 = vsubq_s16(v36, v37);
  int64x2_t v46 = (int64x2_t)vaddq_s16(v38, v39);
  int64x2_t v47 = (int64x2_t)vsubq_s16(v38, v39);
  int16x8_t v48 = (int16x8_t)vzip2q_s64((int64x2_t)v40, v42);
  int16x8_t v49 = (int16x8_t)vzip2q_s64((int64x2_t)v41, v43);
  int16x8_t v50 = (int16x8_t)vzip2q_s64((int64x2_t)v44, v46);
  int16x8_t v51 = (int16x8_t)vzip2q_s64((int64x2_t)v45, v47);
  v40.i64[1] = v42.i64[0];
  v41.i64[1] = v43.i64[0];
  v44.i64[1] = v46.i64[0];
  v45.i64[1] = v47.i64[0];
  *(void *)&double result = vaddq_s16(vaddq_s16(vmaxq_s16(vabsq_s16(v41), vabsq_s16(v49)), vmaxq_s16(vabsq_s16(v40), vabsq_s16(v48))), vaddq_s16(vmaxq_s16(vabsq_s16(v44), vabsq_s16(v50)), vmaxq_s16(vabsq_s16(v45), vabsq_s16(v51)))).u64[0];
  return result;
}

uint64_t sub_2219E4C48(uint64_t a1, unsigned int a2, char a3, char a4, char a5, char a6)
{
  if (*(_DWORD *)(a1 + 20) < a2) {
    return 4294958327;
  }
  sub_221A341D0(*(pthread_mutex_t **)(a1 + 64));
  if (*(_DWORD *)(a1 + 56) >= a2 + 1)
  {
    int16x8_t v15 = *(char **)(a1 + 48);
  }
  else
  {
    if (2 * (a2 + 1) >= *(_DWORD *)(a1 + 20)) {
      unsigned int v13 = *(_DWORD *)(a1 + 20);
    }
    else {
      unsigned int v13 = 2 * (a2 + 1);
    }
    int16x8_t v14 = (char *)sub_221A12A5C((void *)(12 * v13));
    int16x8_t v15 = v14;
    if (*(_DWORD *)(a1 + 56))
    {
      uint64_t v16 = 0;
      unint64_t v17 = 0;
      do
      {
        int16x8_t v18 = (uint64_t *)(*(void *)(a1 + 48) + v16);
        int16x8_t v19 = &v14[v16];
        uint64_t v20 = *v18;
        *((_DWORD *)v19 + 2) = *((_DWORD *)v18 + 2);
        *(void *)int16x8_t v19 = v20;
        ++v17;
        v16 += 12;
      }
      while (v17 < *(unsigned int *)(a1 + 56));
    }
    j__free(*(void **)(a1 + 48));
    *(void *)(a1 + 48) = v15;
    *(_DWORD *)(a1 + 56) = v13;
  }
  v15[12 * a2 + 9] = a4;
  *(unsigned char *)(*(void *)(a1 + 48) + 12 * a2 + 10) = 2 * a5;
  *(unsigned char *)(*(void *)(a1 + 48) + 12 * a2 + 11) = 2 * a6;
  *(unsigned char *)(*(void *)(a1 + 48) + 12 * a2 + 8) = a3;
  sub_221A341DC(*(pthread_mutex_t **)(a1 + 64));
  return 0;
}

uint64_t sub_2219E4D7C(uint64_t result, int a2, int a3, unsigned char *a4)
{
  BOOL v4 = a4[12] != 0;
  BOOL v5 = a4[2] != 0;
  char v6 = v5 | (2 * (*a4 != 0));
  BOOL v7 = a4[6] != 0;
  BOOL v8 = a4[7] != 0;
  BOOL v9 = a4[9] != 0;
  char v10 = v9 | (2 * (a4[8] != 0));
  char v11 = 4 * (a4[3] != 0);
  char v12 = v11 | (8 * (a4[1] != 0));
  char v13 = v11 | (8 * v5);
  BOOL v14 = a4[10] != 0;
  BOOL v15 = a4[11] != 0;
  char v16 = (4 * v15) | (8 * v14);
  char v17 = v14 | (4 * v6);
  char v18 = v12 | (2 * v9);
  BOOL v19 = a4[13] != 0;
  BOOL v20 = a4[14] != 0;
  char v21 = v20 | (4 * (v7 | (2 * (a4[4] != 0)))) | (2 * v4);
  char v22 = (4 * v8) | (8 * (a4[5] != 0)) | (2 * v19);
  char v23 = (a4[5] != 0) | (4 * ((a4[1] != 0) | (2 * (*a4 != 0)))) | (2 * (a4[4] != 0));
  char v24 = v13 | (2 * v7);
  BOOL v25 = a4[15] != 0;
  int32x4_t v26 = (unsigned char *)(*(void *)(result + 32) + 4 * (a2 + *(_DWORD *)(result + 12) * a3));
  *int32x4_t v26 = v18 | (16 * (v17 & 0xFD | (2 * (a4[8] != 0)))) | v15;
  v26[1] = v22 | (16 * v21) | v25;
  v26[2] = v24 | (16 * v23) | v8;
  v26[3] = v16 | (2 * v20) | (16 * (v19 | (4 * v10) | (2 * v4))) | v25;
  return result;
}

double sub_2219E4EEC(uint64_t a1, int a2, int a3, int8x16_t *a4)
{
  int16x8_t v4 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vcgtzq_s8(*a4), (int8x16_t)xmmword_221A37AC0), (int8x16_t)xmmword_221A37AD0);
  v5.i64[0] = 0x7000700070007;
  v5.i64[1] = 0x7000700070007;
  int64x2_t v6 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s16(v4, 8uLL), (int8x16_t)vshlq_u16((uint16x8_t)v4, v5));
  int8x16_t v7 = vandq_s8(vcltzq_s8((int8x16_t)v6), (int8x16_t)xmmword_221A37900);
  int8x16_t v8 = vpaddq_s8(v7, v7);
  int8x16_t v9 = vpaddq_s8(v8, v8);
  int64x2_t v10 = (int64x2_t)vzip1q_s8((int8x16_t)vdupq_laneq_s64(v6, 1), (int8x16_t)v6);
  int8x16_t v11 = vandq_s8(vcltzq_s8(vqtbl1q_s8(vzip1q_s8((int8x16_t)v10, (int8x16_t)vdupq_laneq_s64(v10, 1)), (int8x16_t)xmmword_221A368F0)), (int8x16_t)xmmword_221A37900);
  int8x16_t v12 = vpaddq_s8(v11, v11);
  int8x16_t v13 = vpaddq_s8(v12, v12);
  *(void *)&double result = vpaddq_s8(v13, v13).u64[0];
  *(_DWORD *)(*(void *)(a1 + 32) + 4 * (a2 + *(_DWORD *)(a1 + 12) * a3)) = LOWORD(result) | (vpaddq_s8(v9, v9).u16[0] << 16);
  return result;
}

uint64_t *sub_2219E4F88(uint64_t *result, uint64_t a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6, int32x4_t a7, int32x4_t a8, int32x4_t a9)
{
  uint64_t v9 = *((unsigned __int8 *)result + 225);
  int v151 = result;
  __int32 v10 = *((_DWORD *)result + 47);
  if (v10) {
    int v11 = 2;
  }
  else {
    int v11 = 4;
  }
  signed int v164 = v11;
  if (v10) {
    int v12 = 50529027;
  }
  else {
    int v12 = 67372036;
  }
  int v133 = v12;
  if (a5 < a6)
  {
    a7.i32[0] = 0;
    a8.i32[0] = 0;
    a9.i32[0] = *((_DWORD *)result + 47);
    int32x4_t v13 = vdupq_lane_s32((int32x2_t)*(_OWORD *)&vceqq_s32(a9, a7), 0);
    int8x16_t v14 = vbslq_s8((int8x16_t)v13, (int8x16_t)xmmword_221A37B20, (int8x16_t)xmmword_221A37B10);
    uint64_t v145 = (char *)&unk_221A3C5C8 + dword_267F69F78;
    uint64_t v15 = *((unsigned int *)result + 3);
    int v16 = 4 * v15;
    double result = (uint64_t *)result[6];
    uint64_t v17 = *v151;
    v13.i32[0] = v10;
    unsigned int v18 = v15 * a5 + a3;
    uint64_t v19 = v151[19] + 48 * v18;
    int32x2_t v20 = (int32x2_t)vceqq_s32(v13, a8).u64[0];
    char v21 = (unint64_t *)(*(void *)(a2 + 104) + 8 * v18);
    char v22 = (unsigned int *)(v151[4] + 4 * v18);
    char v23 = (unsigned __int16 *)(v151[9] + 2 * v18);
    if (a5) {
      unsigned int v24 = v15;
    }
    else {
      unsigned int v24 = 0;
    }
    int8x16_t v25 = (int8x16_t)vdupq_lane_s32(v20, 0);
    if (a5) {
      int v26 = v12;
    }
    else {
      int v26 = 538976288;
    }
    int v135 = v26;
    if (a3) {
      uint64_t v27 = -1;
    }
    else {
      uint64_t v27 = 0;
    }
    uint64_t v127 = v27;
    unint64_t v28 = a2 + 32;
    int8x16_t v29 = (int8x16_t)xmmword_221A37B30;
    unint64_t v30 = a2 + 64;
    uint64_t v126 = -v15;
    int v146 = 16 * v15 * a5;
    int v147 = 4 * a5;
    int16x8_t v31 = (int16x8_t)vbslq_s8(v25, (int8x16_t)xmmword_221A37B40, (int8x16_t)xmmword_221A37B30);
    unsigned int v142 = v15;
    int v130 = 16 * v15;
    int8x16_t v32 = (int8x16_t)xmmword_221A37900;
    int8x16_t v33 = (int8x16_t)xmmword_221A37B70;
    int8x16_t v34 = (int8x16_t)xmmword_221A37B60;
    unsigned int v140 = v9;
    unsigned int v141 = a4;
    unsigned int v131 = a3;
    int8x16_t v163 = v14;
    int v162 = 4 * v15;
    uint64_t v139 = result;
    uint64_t v161 = *v151;
    unint64_t v137 = v30;
    unint64_t v138 = v28;
    int16x8_t v160 = v31;
    do
    {
      if (a3 < a4)
      {
        int v134 = 4 * a5;
        int v129 = a5 * v142 - 1;
        int v128 = (a5 - 1) * v142;
        uint64_t v35 = v127;
        unsigned int v36 = a3;
        uint64_t v37 = -(uint64_t)v24;
        uint64_t v143 = v37;
        unsigned int v144 = a5;
        do
        {
          uint64_t v38 = *v23;
          uint64_t v39 = *((unsigned __int8 *)result + 12 * v38 + 9);
          if (v39 == 1)
          {
            *(unsigned char *)uint64_t v19 = 0x80;
          }
          else
          {
            unint64_t v40 = *v21;
            BOOL v42 = v28 <= *v21 && v40 <= v30;
            if (!(v9 | v42))
            {
              v33.i32[0] = 0;
              int v43 = v23[v35];
              int v158 = v23[v37];
              v29.i8[0] = *(unsigned char *)(v151[17] + v36 + *((_DWORD *)v151 + 3) * a5);
              int8x16_t v44 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(v29, v33), 0);
              int8x16_t v29 = (int8x16_t)xmmword_221A37B50;
              v45.i64[0] = 0x202020202020202;
              v45.i64[1] = 0x202020202020202;
              int8x16_t v33 = vbslq_s8(v44, v45, (int8x16_t)xmmword_221A37B50);
              *(int8x16_t *)uint64_t v19 = v33;
              *(int8x16_t *)(v19 + 16) = v33;
              unsigned int v46 = *v22;
              uint64_t v47 = v151[17];
              unsigned int v48 = v36 + *((_DWORD *)v151 + 3) * a5;
              int v49 = *(unsigned __int8 *)(v47 + v48);
              if (*(unsigned char *)(v47 + v48))
              {
                int8x16_t v33 = vbicq_s8((int8x16_t)xmmword_221A37AF0, (int8x16_t)vceqzq_s32((int32x4_t)vandq_s8((int8x16_t)vdupq_n_s32(v46), (int8x16_t)xmmword_221A37AE0)));
                int8x16_t v29 = vextq_s8(v33, v33, 8uLL);
                *(int8x8_t *)v33.i8 = vorr_s8(*(int8x8_t *)v33.i8, *(int8x8_t *)v29.i8);
                v46 |= v33.i32[0] | v33.i32[1];
              }
              uint64_t v50 = v145[*((unsigned __int8 *)result + 12 * v38 + 8)];
              int v51 = *(unsigned __int16 *)(v40 + 10);
              unint64_t v52 = v21[v35];
              uint64_t v53 = (v46 >> 4) & 0xFFF0FFF | v46;
              if (v53)
              {
                if (((v46 >> 4) & 0xFFF0000 | v46 & 0xFFF0000) == 0xFFF0000) {
                  int v54 = 1;
                }
                else {
                  int v54 = 4;
                }
                unsigned int v167 = v54;
                int v55 = ((v46 >> 4) & 0xFFF0000 | v46 & 0xFFF0000) == 268369920;
              }
              else
              {
                int v55 = 0;
                if ((v51 & 0xFFFFFFFD) == 0x100)
                {
                  int8x16_t v33 = (int8x16_t)xmmword_221A37B00;
                  *(_OWORD *)uint64_t v19 = xmmword_221A37B00;
                  int v56 = 1;
                }
                else
                {
                  int v56 = 4;
                }
                unsigned int v167 = v56;
              }
              uint64_t v57 = (_OWORD *)(v19 + 16);
              uint64_t v58 = 4 * v36;
              BOOL v59 = v39 != 2 || v43 == v38;
              __int16 v152 = v51;
              if (!v59)
              {
LABEL_58:
                uint64_t v60 = v9;
                int v61 = 0;
                int v169 = 0;
                *(unsigned char *)uint64_t v19 = 32;
                goto LABEL_59;
              }
              if (v28 <= v52 && v52 <= v30)
              {
                uint64_t v60 = v9;
                int v169 = 0;
                *(_DWORD *)uint64_t v19 = 67372036;
                int v61 = 1;
LABEL_59:
                unsigned int v171 = v53;
                uint64_t v67 = (unsigned char *)v19;
                goto LABEL_60;
              }
              if (!v58) {
                goto LABEL_58;
              }
              uint64_t v60 = v9;
              int v62 = v55;
              unsigned int v63 = *(v22 - 1);
              if (*(unsigned char *)(v151[17] + v129 + v36))
              {
                if ((v63 & 0xCC0000) != 0) {
                  int v64 = 13382400;
                }
                else {
                  int v64 = 0;
                }
                if ((v63 & 0x330000) != 0) {
                  int v65 = 3342387;
                }
                else {
                  int v65 = 0;
                }
                v63 |= v65 | v64;
              }
              int v66 = 0;
              unsigned int v171 = v53 | (HIWORD(v63) << 28);
              uint64_t v67 = (unsigned char *)v19;
              int v55 = v62;
              while (1)
              {
                int v169 = v66;
                if ((v66 & v49) != 0)
                {
                  int v61 = 0;
                  *uint64_t v67 = 32;
                }
                else
                {
                  int v61 = 1;
                  unsigned int v71 = v171;
                  if (v171 >> 28 != 15)
                  {
                    uint64_t v136 = v38;
                    int v154 = v49;
                    uint64_t v156 = v22;
                    uint64_t v72 = 0;
                    int v73 = v146 + v169;
                    unsigned int v150 = v36;
                    int v148 = v23;
                    uint64_t v149 = v19;
                    int v165 = v55;
                    do
                    {
                      if ((v71 & 0x80000000) != 0)
                      {
                        int v61 = 1;
                      }
                      else
                      {
                        int16x8_t v74 = *(int16x8_t **)(v17 + 8 * (v58 + v73));
                        uint64_t v75 = *(int16x8_t **)(v17 + 8 * (v58 + v73 - 1));
                        if (v74 == v75)
                        {
                          LOBYTE(v85) = 0;
                          int v61 = 1;
                        }
                        else
                        {
                          int8x16_t v29 = *(int8x16_t *)v74;
                          int8x16_t v33 = *(int8x16_t *)v75;
                          int16x8_t v76 = vsubq_s16(*v74, *v75);
                          int8x16_t v77 = (int8x16_t)vmaxq_s16(v76, vnegq_s16(v76));
                          if ((v50 & 2) != 0)
                          {
                            int8x16_t v94 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v77, v34), v31), v32);
                            int8x16_t v95 = vpaddq_s8(v94, v94);
                            int8x16_t v96 = vpaddq_s8(v95, v95);
                            int8x16_t v33 = vpaddq_s8(v96, v96);
                            BOOL v85 = v33.i16[0] != 0;
                          }
                          else
                          {
                            if ((vceqq_s8(v29, v33).i32[3] & 1) == 0)
                            {
                              v173.val[0].i64[1] = 0xF0E0D0C0B0A0908;
                              v173.val[1] = vqtbl1q_s8(v33, (int8x16_t)xmmword_221A36950);
                              v78.i32[0] = v173.val[1].u16[4];
                              v78.i32[1] = v173.val[1].u16[6];
                              *(uint32x2_t *)v173.val[0].i8 = vshr_n_u32((uint32x2_t)vrev32_s8(v78), 0x10uLL);
                              v173.val[0] = (int8x16_t)vsubq_s16((int16x8_t)v29, (int16x8_t)vqtbl2q_s8(v173, (int8x16_t)xmmword_221A37B70));
                              int8x16_t v77 = (int8x16_t)vmaxq_s16((int16x8_t)v173.val[0], vnegq_s16((int16x8_t)v173.val[0]));
                            }
                            v79.i32[0] = v29.u8[12];
                            v79.i32[1] = v29.u8[13];
                            *(int8x8_t *)v29.i8 = vand_s8(v79, (int8x8_t)0xFF000000FFLL);
                            v79.i32[0] = v33.u8[13];
                            v79.i32[1] = v33.u8[12];
                            int32x2_t v80 = (int32x2_t)vand_s8(v79, (int8x8_t)0xFF000000FFLL);
                            int8x16_t v81 = xmmword_221A37B90[(v29.u8[8] >> 4) & 2 | ((v29.i8[9] & 0xE0) >> 5)];
                            int8x16_t v82 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v77, v81), (int16x8_t)vandq_s8(v14, v81)), v32);
                            int8x16_t v83 = vpaddq_s8(v82, v82);
                            int8x16_t v84 = vpaddq_s8(v83, v83);
                            BOOL v85 = vpaddq_s8(v84, v84).u16[0] != 0;
                            int32x2_t v86 = vsub_s32(*(int32x2_t *)v29.i8, v80);
                            *(int32x2_t *)v29.i8 = vdup_lane_s32(v86, 1);
                            *(int8x8_t *)v33.i8 = vorr_s8((int8x8_t)v86, *(int8x8_t *)v29.i8);
                            if (!v33.i32[0])
                            {
                              uint64_t v87 = v21;
                              uint64_t v88 = v58;
                              uint64_t v89 = v39;
                              uint64_t v90 = v57;
                              uint64_t v91 = v53;
                              uint64_t v92 = v50;
                              int v93 = sub_221A313BC(v74->i16, v75->i16, v164, 0, 0, *(int32x2_t *)v33.i8, *(int32x2_t *)v29.i8);
                              uint64_t v50 = v92;
                              uint64_t v53 = v91;
                              uint64_t v57 = v90;
                              uint64_t v39 = v89;
                              uint64_t v58 = v88;
                              char v21 = v87;
                              char v23 = v148;
                              uint64_t v19 = v149;
                              unsigned int v36 = v150;
                              int8x16_t v34 = (int8x16_t)xmmword_221A37B60;
                              int8x16_t v32 = (int8x16_t)xmmword_221A37900;
                              int16x8_t v31 = v160;
                              uint64_t v17 = v161;
                              int v16 = v162;
                              int8x16_t v14 = v163;
                              BOOL v85 = v93;
                            }
                            int v55 = v165;
                          }
                          int v61 = v85 | 1;
                        }
                        v67[v72] = v85;
                      }
                      v71 *= 2;
                      ++v72;
                      v73 += v16;
                    }
                    while (v72 != 4);
                    uint64_t v60 = v140;
                    a4 = v141;
                    unint64_t v28 = v138;
                    double result = v139;
                    char v22 = v156;
                    uint64_t v38 = v136;
                    unint64_t v30 = v137;
                    uint64_t v37 = v143;
                    int v49 = v154;
                    a5 = v144;
                  }
                }
LABEL_60:
                v55 |= v61;
                *v67 |= (32 * v61) ^ 0x20;
                v67 += 4;
                int v66 = v169 + 1;
                if (v169 + 1 >= v167) {
                  break;
                }
                v171 *= 16;
              }
              *(unsigned char *)v19 |= ((_BYTE)v55 << 6) ^ 0x40;
              unint64_t v68 = v21[v37];
              if (v53)
              {
                int v69 = (v53 & 0xFFF) == 4095;
                if ((v53 & 0xFFF) == 0xFFF) {
                  int v70 = 1;
                }
                else {
                  int v70 = 4;
                }
              }
              else
              {
                int v69 = 0;
                if ((v152 & 0xFFFE) == 0x100)
                {
                  int8x16_t v33 = (int8x16_t)xmmword_221A37B00;
                  *uint64_t v57 = xmmword_221A37B00;
                  int v70 = 1;
                }
                else
                {
                  int v70 = 4;
                }
              }
              int v172 = v70;
              uint64_t v9 = v60;
              unsigned int v97 = v53 << 16;
              if (v39 == 2 && v158 != v38)
              {
                int v98 = 0;
                unsigned int v99 = 0;
                *(unsigned char *)uint64_t v57 = 32;
                uint64_t v100 = v57;
                unsigned int v101 = v172;
                goto LABEL_106;
              }
              unsigned int v101 = v70;
              if (v28 <= v68 && v68 <= v30)
              {
                unsigned int v99 = 0;
                *(_DWORD *)uint64_t v57 = v135;
                int v98 = 1;
LABEL_105:
                uint64_t v100 = v57;
                goto LABEL_106;
              }
              if (!v134)
              {
                int v98 = 0;
                unsigned int v99 = 0;
                *(unsigned char *)uint64_t v57 = 32;
                goto LABEL_105;
              }
              unsigned int v102 = v22[v126];
              if (*(unsigned char *)(v151[17] + v36 + v128))
              {
                if ((v102 & 0x33000000) != 0) {
                  int v103 = 855638220;
                }
                else {
                  int v103 = 0;
                }
                if ((v102 & 0x330000) != 0) {
                  int v104 = 3342387;
                }
                else {
                  int v104 = 0;
                }
                v102 |= v104 | v103;
              }
              unsigned int v99 = 0;
              v97 |= v102 << 28;
              uint64_t v100 = v57;
              do
              {
                if ((v99 & v49) != 0)
                {
                  int v98 = 0;
                  *uint64_t v100 = 32;
                }
                else
                {
                  int v98 = 1;
                  if (v97 >> 28 != 15)
                  {
                    int v166 = v69;
                    int8x16_t v170 = v57;
                    unsigned int v153 = v99;
                    int v155 = v49;
                    int16x8_t v157 = v22;
                    uint64_t v105 = 0;
                    uint64_t v106 = v17 + 8 * (v58 + v142 * (4 * (v147 + v99) - 4));
                    int v168 = v58;
                    uint64_t v107 = v17 + 8 * (v58 + v16 * (v147 + v99));
                    unsigned int v159 = v97;
                    do
                    {
                      if ((v97 & 0x80000000) != 0)
                      {
                        int v98 = 1;
                      }
                      else
                      {
                        uint64_t v108 = *(int16x8_t **)(v107 + 8 * v105);
                        uint64_t v109 = *(int16x8_t **)(v106 + 8 * v105);
                        if (v108 == v109)
                        {
                          LOBYTE(v119) = 0;
                          int v98 = 1;
                        }
                        else
                        {
                          int8x16_t v29 = *(int8x16_t *)v108;
                          int8x16_t v33 = *(int8x16_t *)v109;
                          int16x8_t v110 = vsubq_s16(*v108, *v109);
                          int8x16_t v111 = (int8x16_t)vmaxq_s16(v110, vnegq_s16(v110));
                          if ((v50 & 2) != 0)
                          {
                            int8x16_t v123 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v111, v34), v31), v32);
                            int8x16_t v124 = vpaddq_s8(v123, v123);
                            int8x16_t v125 = vpaddq_s8(v124, v124);
                            int8x16_t v33 = vpaddq_s8(v125, v125);
                            BOOL v119 = v33.i16[0] != 0;
                          }
                          else
                          {
                            if ((vceqq_s8(v29, v33).i32[3] & 1) == 0)
                            {
                              v174.val[0].i64[1] = 0xF0E0D0C0B0A0908;
                              v174.val[1] = vqtbl1q_s8(v33, (int8x16_t)xmmword_221A36950);
                              v112.i32[0] = v174.val[1].u16[4];
                              v112.i32[1] = v174.val[1].u16[6];
                              *(uint32x2_t *)v174.val[0].i8 = vshr_n_u32((uint32x2_t)vrev32_s8(v112), 0x10uLL);
                              v174.val[0] = (int8x16_t)vsubq_s16((int16x8_t)v29, (int16x8_t)vqtbl2q_s8(v174, (int8x16_t)xmmword_221A37B70));
                              int8x16_t v111 = (int8x16_t)vmaxq_s16((int16x8_t)v174.val[0], vnegq_s16((int16x8_t)v174.val[0]));
                            }
                            v113.i32[0] = v29.u8[12];
                            v113.i32[1] = v29.u8[13];
                            *(int8x8_t *)v29.i8 = vand_s8(v113, (int8x8_t)0xFF000000FFLL);
                            v113.i32[0] = v33.u8[13];
                            v113.i32[1] = v33.u8[12];
                            int32x2_t v114 = (int32x2_t)vand_s8(v113, (int8x8_t)0xFF000000FFLL);
                            int8x16_t v115 = xmmword_221A37B90[(v29.u8[8] >> 4) & 2 | ((v29.i8[9] & 0xE0) >> 5)];
                            int8x16_t v116 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v111, v115), (int16x8_t)vandq_s8(v14, v115)), v32);
                            int8x16_t v117 = vpaddq_s8(v116, v116);
                            int8x16_t v118 = vpaddq_s8(v117, v117);
                            BOOL v119 = vpaddq_s8(v118, v118).u16[0] != 0;
                            int32x2_t v120 = vsub_s32(*(int32x2_t *)v29.i8, v114);
                            *(int32x2_t *)v29.i8 = vdup_lane_s32(v120, 1);
                            *(int8x8_t *)v33.i8 = vorr_s8((int8x8_t)v120, *(int8x8_t *)v29.i8);
                            if (!v33.i32[0])
                            {
                              uint64_t v121 = v50;
                              int v122 = sub_221A313BC(v108->i16, v109->i16, v164, 0, 0, *(int32x2_t *)v33.i8, *(int32x2_t *)v29.i8);
                              uint64_t v50 = v121;
                              int8x16_t v34 = (int8x16_t)xmmword_221A37B60;
                              int8x16_t v32 = (int8x16_t)xmmword_221A37900;
                              int16x8_t v31 = v160;
                              uint64_t v17 = v161;
                              int v16 = v162;
                              int8x16_t v14 = v163;
                              BOOL v119 = v122;
                            }
                          }
                          int v98 = v119 | 1;
                        }
                        v100[v105] = v119;
                      }
                      v97 *= 2;
                      ++v105;
                    }
                    while (v105 != 4);
                    a5 = v144;
                    uint64_t v9 = v140;
                    a4 = v141;
                    unint64_t v28 = v138;
                    double result = v139;
                    char v22 = v157;
                    unint64_t v30 = v137;
                    uint64_t v37 = v143;
                    unsigned int v99 = v153;
                    int v49 = v155;
                    uint64_t v57 = v170;
                    int v69 = v166;
                    LODWORD(v58) = v168;
                    unsigned int v101 = v172;
                    unsigned int v97 = v159;
                  }
                }
LABEL_106:
                v69 |= v98;
                *v100 |= (32 * v98) ^ 0x20;
                v100 += 4;
                v97 *= 16;
                ++v99;
              }
              while (v99 < v101);
              *(unsigned char *)v57 |= ((_BYTE)v69 << 6) ^ 0x40;
            }
          }
          ++v23;
          ++v22;
          ++v21;
          v19 += 48;
          ++v36;
          uint64_t v35 = -1;
        }
        while (v36 < a4);
      }
      ++a5;
      a3 = v131;
      v146 += v130;
      v147 += 4;
      unsigned int v24 = v142;
      int v135 = v133;
    }
    while (a5 != a6);
  }
  return result;
}

uint64_t sub_2219E5A18(uint64_t *a1, uint64_t a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6, int32x4_t a7, int32x4_t a8, int32x4_t a9)
{
  uint64_t result = 0;
  int v11 = *((unsigned __int8 *)a1 + 225);
  int v12 = *((_DWORD *)a1 + 47);
  if (v12) {
    int v13 = 2;
  }
  else {
    int v13 = 4;
  }
  signed int v161 = v13;
  if (v12) {
    char v14 = 3;
  }
  else {
    char v14 = 4;
  }
  if (a5 >= a6) {
    return result;
  }
  a7.i32[0] = 0;
  a8.i32[0] = 0;
  a9.i32[0] = *((_DWORD *)a1 + 47);
  int32x4_t v15 = vdupq_lane_s32((int32x2_t)*(_OWORD *)&vceqq_s32(a9, a7), 0);
  int8x16_t v16 = vbslq_s8((int8x16_t)v15, (int8x16_t)xmmword_221A37B20, (int8x16_t)xmmword_221A37B10);
  uint64_t v17 = (char *)&unk_221A3C5C8 + dword_267F69F78;
  uint64_t v18 = *((unsigned int *)a1 + 3);
  int v19 = 4 * v18;
  uint64_t v20 = a1[6];
  uint64_t v160 = *a1;
  v15.i32[0] = a9.i32[0];
  unsigned int v21 = v18 * a5 + a3;
  uint64_t v22 = a1[19] + 48 * v21;
  char v23 = (unint64_t *)(*(void *)(a2 + 104) + 8 * v21);
  unsigned int v24 = (unsigned int *)(a1[4] + 4 * v21);
  int32x2_t v25 = (int32x2_t)vceqq_s32(v15, a8).u64[0];
  int v26 = (unsigned __int16 *)(a1[9] + 2 * v21);
  if (a5) {
    unsigned int v27 = *((_DWORD *)a1 + 3);
  }
  else {
    unsigned int v27 = 0;
  }
  if (a5) {
    char v28 = v14;
  }
  else {
    char v28 = 32;
  }
  if (a3) {
    uint64_t v29 = -1;
  }
  else {
    uint64_t v29 = 0;
  }
  uint64_t v158 = v29;
  if (a3) {
    char v30 = 4;
  }
  else {
    char v30 = 32;
  }
  char v157 = v30;
  int16x8_t v31 = (int16x8_t)xmmword_221A37B30;
  unint64_t v32 = a2 + 32;
  unint64_t v33 = a2 + 64;
  uint64_t v137 = -v18;
  int v169 = 4 * a5;
  int16x8_t v34 = (int16x8_t)vbslq_s8((int8x16_t)vdupq_lane_s32(v25, 0), (int8x16_t)xmmword_221A37B40, (int8x16_t)xmmword_221A37B30);
  int v171 = 16 * v18 * a5;
  int v159 = 16 * v18;
  int8x16_t v35 = (int8x16_t)xmmword_221A37B50;
  v36.i64[0] = 0x202020202020202;
  v36.i64[1] = 0x202020202020202;
  int8x16_t v37 = (int8x16_t)xmmword_221A37B00;
  int8x16_t v38 = (int8x16_t)xmmword_221A37900;
  int8x16_t v39 = (int8x16_t)xmmword_221A36950;
  int8x16_t v40 = (int8x16_t)xmmword_221A37B70;
  int8x16_t v41 = (int8x16_t)xmmword_221A37B60;
  v42.i64[0] = 0x303030303030303;
  v42.i64[1] = 0x303030303030303;
  unint64_t v163 = v33;
  unsigned int v145 = a4;
  unsigned int v146 = a6;
  unsigned int v144 = a3;
  uint64_t v143 = a1;
  char v141 = v14;
  int v142 = *((unsigned __int8 *)a1 + 225);
  int8x16_t v156 = v16;
  int v139 = *((_DWORD *)a1 + 3);
  unsigned int v140 = (char *)&unk_221A3C5C8 + dword_267F69F78;
  int v155 = 4 * v18;
  uint64_t v138 = a1[6];
  unint64_t v165 = v32;
  int16x8_t v154 = v34;
  while (a3 >= a4)
  {
LABEL_151:
    ++a5;
    v169 += 4;
    v171 += v159;
    unsigned int v27 = v18;
    char v28 = v14;
    if (a5 == a6) {
      return 0;
    }
  }
  unsigned __int8 v175 = v28;
  int v153 = 4 * a5;
  int v151 = (a5 - 1) * v18;
  int v152 = a5 * v18 - 1;
  uint64_t v43 = v158;
  unsigned __int8 v44 = v157;
  unsigned int v45 = a3;
  uint64_t v176 = -(uint64_t)v27;
  while (1)
  {
    v37.i32[0] = 0;
    v31.i8[0] = *(unsigned char *)(a1[17] + v45 + *((_DWORD *)a1 + 3) * a5);
    int8x16_t v37 = vbslq_s8(vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8((int8x16_t)v31, v37), 0), v36, v35);
    *(int8x16_t *)(v22 + 16) = v37;
    unsigned int v46 = (_DWORD *)(v22 + 16);
    *(int8x16_t *)uint64_t v22 = v37;
    unsigned int v47 = *v26;
    if (*((_DWORD *)a1 + 14) < v47) {
      return 4294958327;
    }
    if (*(unsigned char *)(v20 + 12 * *v26 + 9) != 1) {
      break;
    }
    *(unsigned char *)uint64_t v22 = 0x80;
LABEL_67:
    ++v26;
    ++v24;
    ++v23;
    v22 += 48;
    ++v45;
    unsigned __int8 v44 = 4;
    uint64_t v43 = -1;
    if (v45 >= a4) {
      goto LABEL_151;
    }
  }
  int v183 = *(unsigned __int8 *)(v20 + 12 * *v26 + 9);
  unint64_t v48 = *v23;
  int v49 = v26[v43];
  int v177 = v26[v176];
  BOOL v51 = v32 <= *v23 && v48 <= v33;
  if (v11 | v51)
  {
    v37.i32[0] = 0;
    v31.i8[0] = *(unsigned char *)(a1[17] + v45 + *((_DWORD *)a1 + 3) * a5);
    int8x16_t v52 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8((int8x16_t)v31, v37), 0);
    int16x8_t v31 = (int16x8_t)xmmword_221A37B80;
    int8x16_t v37 = vbslq_s8(v52, v42, (int8x16_t)xmmword_221A37B80);
    *(int8x16_t *)uint64_t v22 = v37;
    *(int8x16_t *)(v22 + 16) = v37;
    *(_DWORD *)uint64_t v22 = 16843009 * v44;
    _DWORD *v46 = 16843009 * v175;
    if (v183 == 2)
    {
      *(_DWORD *)uint64_t v22 = 16843009 * (v44 | (32 * (v49 != v47)));
      _DWORD *v46 = 16843009 * (v175 | (32 * (v177 != v47)));
    }
    goto LABEL_67;
  }
  unsigned int v53 = bswap32(*v24);
  int v172 = *(unsigned __int8 *)(a1[17] + v45 + *((_DWORD *)a1 + 3) * a5);
  if (*(unsigned char *)(a1[17] + v45 + *((_DWORD *)a1 + 3) * a5))
  {
    int8x16_t v37 = vbicq_s8((int8x16_t)xmmword_221A37AF0, (int8x16_t)vceqzq_s32((int32x4_t)vandq_s8((int8x16_t)vdupq_n_s32(v53), (int8x16_t)xmmword_221A37AE0)));
    int16x8_t v31 = (int16x8_t)vextq_s8(v37, v37, 8uLL);
    *(int8x8_t *)v37.i8 = vorr_s8(*(int8x8_t *)v37.i8, *(int8x8_t *)v31.i8);
    v53 |= v37.i32[0] | v37.i32[1];
  }
  char v166 = v17[*(unsigned __int8 *)(v20 + 12 * *v26 + 8)];
  int v54 = *(unsigned __int16 *)(v48 + 10);
  unint64_t v55 = v23[v43];
  int v56 = (v53 >> 4) & 0xFFF0FFF | v53;
  unint64_t v32 = v165;
  __int16 v162 = v54;
  if (v56)
  {
    BOOL v57 = ((v53 >> 4) & 0xFFF0000 | v53 & 0xFFF0000) == 268369920;
    if (((v53 >> 4) & 0xFFF0000 | v53 & 0xFFF0000) == 0xFFF0000) {
      int v58 = 1;
    }
    else {
      int v58 = 4;
    }
    unsigned int v173 = v58;
    int v164 = -1;
    int v59 = *(unsigned __int8 *)(a1[17] + v45 + *((_DWORD *)a1 + 3) * a5);
    int v60 = *(unsigned __int8 *)(v20 + 12 * *v26 + 9);
  }
  else
  {
    int v60 = *(unsigned __int8 *)(v20 + 12 * *v26 + 9);
    if ((v54 & 0xFFFFFFFD) == 0x100)
    {
      int v164 = 0;
      BOOL v57 = 0;
      int8x16_t v37 = (int8x16_t)xmmword_221A37B00;
      *(_OWORD *)uint64_t v22 = xmmword_221A37B00;
      int v61 = 1;
    }
    else
    {
      BOOL v57 = 0;
      int v164 = -1;
      int v61 = 4;
    }
    unsigned int v173 = v61;
    int v59 = v172;
  }
  int v167 = 4 * v45;
  int v168 = v56;
  if (v60 == 2 && v49 != v47)
  {
    unsigned int v179 = v56;
    int v181 = 0;
    int v63 = 0;
    *(unsigned char *)uint64_t v22 = 32;
    int v64 = (unsigned char *)v22;
    int v65 = v57;
LABEL_66:
    unsigned int v71 = v173;
    goto LABEL_69;
  }
  int v65 = v57;
  if (v165 <= v55 && v55 <= v33)
  {
    int v181 = 0;
    *(_DWORD *)uint64_t v22 = 67372036;
    int v63 = 1;
LABEL_65:
    unsigned int v179 = v56;
    int v64 = (unsigned char *)v22;
    goto LABEL_66;
  }
  if (!v167)
  {
    int v181 = 0;
    int v63 = 0;
    *(unsigned char *)uint64_t v22 = 32;
    goto LABEL_65;
  }
  unsigned int v66 = bswap32(*(v24 - 1));
  if (*(unsigned char *)(a1[17] + v152 + v45))
  {
    if ((v66 & 0xCC0000) != 0) {
      int v67 = 13382400;
    }
    else {
      int v67 = 0;
    }
    if ((v66 & 0x330000) != 0) {
      int v68 = 3342387;
    }
    else {
      int v68 = 0;
    }
    v66 |= v68 | v67;
  }
  int v69 = 0;
  unsigned int v70 = v56 | (HIWORD(v66) << 28);
  int v64 = (unsigned char *)v22;
  int v65 = v57;
  unsigned int v71 = v173;
  do
  {
    unsigned int v179 = v70;
    int v181 = v69;
    if ((v69 & v59) != 0)
    {
      int v63 = 0;
      *int v64 = 32;
    }
    else
    {
      int v170 = v65;
      unsigned int v75 = v70 >> 28;
      int v63 = v164 | v75 | (v69 == 0);
      if (v63)
      {
        int v63 = 1;
        if (v75 != 15)
        {
          int v147 = v24;
          unsigned int v149 = a5;
          uint64_t v76 = 0;
          unsigned int v77 = v179;
          int v78 = v171 + v181;
          uint64_t v79 = v160;
          char v80 = v166;
          int v81 = 4 * v45;
          while (1)
          {
            int8x16_t v82 = *(int16x8_t **)(v79 + 8 * (v81 + v78));
            int8x16_t v83 = *(int16x8_t **)(v79 + 8 * (v81 + v78 - 1));
            if (!v82 || v83 == 0) {
              return 4294958327;
            }
            if ((v77 & 0x80000000) != 0)
            {
              int v63 = 1;
            }
            else
            {
              if (v82 == v83)
              {
                LOBYTE(v96) = 0;
                int v63 = 1;
              }
              else
              {
                int16x8_t v31 = *v82;
                int8x16_t v37 = *(int8x16_t *)v83;
                int16x8_t v85 = vsubq_s16(*v82, *v83);
                int8x16_t v86 = (int8x16_t)vmaxq_s16(v85, vnegq_s16(v85));
                if ((v80 & 2) != 0)
                {
                  int8x16_t v99 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v86, v41), v34), v38);
                  int8x16_t v100 = vpaddq_s8(v99, v99);
                  int8x16_t v101 = vpaddq_s8(v100, v100);
                  int8x16_t v37 = vpaddq_s8(v101, v101);
                  BOOL v96 = v37.i16[0] != 0;
                }
                else
                {
                  if ((vceqq_s8(*(int8x16_t *)&v31, v37).i32[3] & 1) == 0)
                  {
                    int8x16_t v87 = vqtbl1q_s8(v37, v39);
                    v88.i32[0] = v87.u16[4];
                    v88.i32[1] = v87.u16[6];
                    *(uint32x2_t *)v86.i8 = vshr_n_u32((uint32x2_t)vrev32_s8(v88), 0x10uLL);
                    int16x8_t v89 = vsubq_s16(v31, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v86.i8, v40));
                    int8x16_t v86 = (int8x16_t)vmaxq_s16(v89, vnegq_s16(v89));
                  }
                  v90.i32[0] = v31.u8[12];
                  v90.i32[1] = v31.u8[13];
                  *(int8x8_t *)v31.i8 = vand_s8(v90, (int8x8_t)0xFF000000FFLL);
                  v90.i32[0] = v37.u8[13];
                  v90.i32[1] = v37.u8[12];
                  int32x2_t v91 = (int32x2_t)vand_s8(v90, (int8x8_t)0xFF000000FFLL);
                  int8x16_t v92 = xmmword_221A37B90[(v31.u8[8] >> 4) & 2 | ((v31.i8[9] & 0xE0) >> 5)];
                  int8x16_t v93 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v86, v92), (int16x8_t)vandq_s8(v16, v92)), v38);
                  int8x16_t v94 = vpaddq_s8(v93, v93);
                  int8x16_t v95 = vpaddq_s8(v94, v94);
                  BOOL v96 = vpaddq_s8(v95, v95).u16[0] != 0;
                  int32x2_t v97 = vsub_s32(*(int32x2_t *)v31.i8, v91);
                  *(int32x2_t *)v31.i8 = vdup_lane_s32(v97, 1);
                  *(int8x8_t *)v37.i8 = vorr_s8((int8x8_t)v97, *(int8x8_t *)v31.i8);
                  if (!v37.i32[0])
                  {
                    int v98 = sub_221A313BC(v82->i16, v83->i16, v161, 0, 0, *(int32x2_t *)v37.i8, *(int32x2_t *)v31.i8);
                    unsigned int v71 = v173;
                    char v80 = v166;
                    int v81 = 4 * v45;
                    v42.i64[0] = 0x303030303030303;
                    v42.i64[1] = 0x303030303030303;
                    int8x16_t v41 = (int8x16_t)xmmword_221A37B60;
                    int8x16_t v40 = (int8x16_t)xmmword_221A37B70;
                    int8x16_t v39 = (int8x16_t)xmmword_221A36950;
                    int8x16_t v38 = (int8x16_t)xmmword_221A37900;
                    v36.i64[0] = 0x202020202020202;
                    v36.i64[1] = 0x202020202020202;
                    int8x16_t v35 = (int8x16_t)xmmword_221A37B50;
                    int16x8_t v34 = v154;
                    unint64_t v32 = v165;
                    uint64_t v79 = v160;
                    int v19 = v155;
                    int8x16_t v16 = v156;
                    BOOL v96 = v98;
                  }
                  int v65 = v170;
                }
                int v63 = v96 | 1;
              }
              v64[v76] = v96;
            }
            v77 *= 2;
            ++v76;
            v78 += v19;
            if (v76 == 4)
            {
              a4 = v145;
              a6 = v146;
              a5 = v149;
              a3 = v144;
              a1 = v143;
              char v14 = v141;
              int v11 = v142;
              LODWORD(v18) = v139;
              uint64_t v17 = v140;
              uint64_t v20 = v138;
              unsigned int v24 = v147;
              int v59 = v172;
              int v60 = v183;
              break;
            }
          }
        }
      }
      else
      {
        *int v64 = 32;
      }
    }
LABEL_69:
    v65 |= v63;
    *v64 |= (32 * v63) ^ 0x20;
    v64 += 4;
    unsigned int v70 = 16 * v179;
    int v69 = v181 + 1;
  }
  while (v181 + 1 < v71);
  *(unsigned char *)v22 |= ((_BYTE)v65 << 6) ^ 0x40;
  unint64_t v72 = v23[v176];
  if (v168)
  {
    int v73 = (v168 & 0xFFF) == 4095;
    if ((v168 & 0xFFF) == 0xFFF) {
      int v74 = 1;
    }
    else {
      int v74 = 4;
    }
    int v184 = v74;
    int v180 = -1;
  }
  else
  {
    if ((v162 & 0xFFFE) == 0x100)
    {
      int v180 = 0;
      int v73 = 0;
      int8x16_t v37 = (int8x16_t)xmmword_221A37B00;
      *(_OWORD *)unsigned int v46 = xmmword_221A37B00;
      int v102 = 1;
    }
    else
    {
      int v73 = 0;
      int v180 = -1;
      int v102 = 4;
    }
    int v184 = v102;
  }
  unsigned int v103 = v168 << 16;
  if (v60 == 2 && v177 != v47)
  {
    int v104 = 0;
    int v105 = 0;
    *(unsigned char *)unsigned int v46 = 32;
    uint64_t v106 = (unsigned char *)(v22 + 16);
LABEL_122:
    unsigned int v107 = v184;
    goto LABEL_123;
  }
  if (v32 <= v72 && v72 <= v163)
  {
    int v104 = 0;
    *(unsigned char *)unsigned int v46 = v175;
    *(unsigned char *)(v22 + 17) = v175;
    *(unsigned char *)(v22 + 18) = v175;
    int v105 = 1;
    uint64_t v106 = (unsigned char *)(v22 + 16);
    *(unsigned char *)(v22 + 19) = v175;
    goto LABEL_122;
  }
  unsigned int v107 = v184;
  if (!v153)
  {
    int v104 = 0;
    int v105 = 0;
    *(unsigned char *)unsigned int v46 = 32;
    uint64_t v106 = (unsigned char *)(v22 + 16);
    goto LABEL_123;
  }
  unsigned int v108 = bswap32(v24[v137]);
  if (*(unsigned char *)(a1[17] + v45 + v151))
  {
    if ((v108 & 0x33000000) != 0) {
      int v109 = 855638220;
    }
    else {
      int v109 = 0;
    }
    if ((v108 & 0x330000) != 0) {
      int v110 = 3342387;
    }
    else {
      int v110 = 0;
    }
    v108 |= v110 | v109;
  }
  int v104 = 0;
  unsigned int v103 = (v168 << 16) | (v108 << 28);
  uint64_t v106 = (unsigned char *)(v22 + 16);
  while (1)
  {
    if ((v104 & v59) != 0)
    {
      int v105 = 0;
      *uint64_t v106 = 32;
      goto LABEL_123;
    }
    unsigned int v182 = v103;
    int v105 = v180 | (v103 >> 28) | (v104 == 0);
    if (!v105)
    {
      *uint64_t v106 = 32;
      goto LABEL_123;
    }
    int v105 = 1;
    if (v103 >> 28 != 15) {
      break;
    }
LABEL_123:
    v73 |= v105;
    *v106 |= (32 * v105) ^ 0x20;
    v106 += 4;
    v103 *= 16;
    if (++v104 >= v107)
    {
      *(unsigned char *)v46 |= ((_BYTE)v73 << 6) ^ 0x40;
      unint64_t v33 = v163;
      goto LABEL_67;
    }
  }
  int v148 = v24;
  unsigned int v150 = a5;
  uint64_t v111 = 0;
  char v112 = v166;
  int v113 = v167 + v19 * (v169 + v104);
  int v114 = v167 + v18 * (4 * (v169 + v104) - 4);
  unsigned int v115 = v103;
  uint64_t v116 = v160;
  int v178 = v73;
  int v174 = v113;
  while (1)
  {
    int8x16_t v117 = *(int16x8_t **)(v116 + 8 * (v113 + v111));
    int8x16_t v118 = *(int16x8_t **)(v116 + 8 * (v114 + v111));
    if (!v117 || v118 == 0) {
      return 4294958327;
    }
    if ((v115 & 0x80000000) != 0)
    {
      int v105 = 1;
    }
    else
    {
      if (v117 == v118)
      {
        LOBYTE(v131) = 0;
        int v105 = 1;
      }
      else
      {
        int16x8_t v31 = *v117;
        int8x16_t v37 = *(int8x16_t *)v118;
        int16x8_t v120 = vsubq_s16(*v117, *v118);
        int8x16_t v121 = (int8x16_t)vmaxq_s16(v120, vnegq_s16(v120));
        if ((v112 & 2) != 0)
        {
          int8x16_t v134 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v121, v41), v34), v38);
          int8x16_t v135 = vpaddq_s8(v134, v134);
          int8x16_t v136 = vpaddq_s8(v135, v135);
          int8x16_t v37 = vpaddq_s8(v136, v136);
          BOOL v131 = v37.i16[0] != 0;
        }
        else
        {
          if ((vceqq_s8(*(int8x16_t *)&v31, v37).i32[3] & 1) == 0)
          {
            int8x16_t v122 = vqtbl1q_s8(v37, v39);
            v123.i32[0] = v122.u16[4];
            v123.i32[1] = v122.u16[6];
            *(uint32x2_t *)v121.i8 = vshr_n_u32((uint32x2_t)vrev32_s8(v123), 0x10uLL);
            int16x8_t v124 = vsubq_s16(v31, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v121.i8, v40));
            int8x16_t v121 = (int8x16_t)vmaxq_s16(v124, vnegq_s16(v124));
          }
          v125.i32[0] = v31.u8[12];
          v125.i32[1] = v31.u8[13];
          *(int8x8_t *)v31.i8 = vand_s8(v125, (int8x8_t)0xFF000000FFLL);
          v125.i32[0] = v37.u8[13];
          v125.i32[1] = v37.u8[12];
          int32x2_t v126 = (int32x2_t)vand_s8(v125, (int8x8_t)0xFF000000FFLL);
          int8x16_t v127 = xmmword_221A37B90[(v31.u8[8] >> 4) & 2 | ((v31.i8[9] & 0xE0) >> 5)];
          int8x16_t v128 = vandq_s8((int8x16_t)vcgtq_s16((int16x8_t)vandq_s8(v121, v127), (int16x8_t)vandq_s8(v16, v127)), v38);
          int8x16_t v129 = vpaddq_s8(v128, v128);
          int8x16_t v130 = vpaddq_s8(v129, v129);
          BOOL v131 = vpaddq_s8(v130, v130).u16[0] != 0;
          int32x2_t v132 = vsub_s32(*(int32x2_t *)v31.i8, v126);
          *(int32x2_t *)v31.i8 = vdup_lane_s32(v132, 1);
          *(int8x8_t *)v37.i8 = vorr_s8((int8x8_t)v132, *(int8x8_t *)v31.i8);
          if (!v37.i32[0])
          {
            int v133 = sub_221A313BC(v117->i16, v118->i16, v161, 0, 0, *(int32x2_t *)v37.i8, *(int32x2_t *)v31.i8);
            int v113 = v174;
            int v73 = v178;
            char v112 = v166;
            v42.i64[0] = 0x303030303030303;
            v42.i64[1] = 0x303030303030303;
            int8x16_t v41 = (int8x16_t)xmmword_221A37B60;
            int8x16_t v40 = (int8x16_t)xmmword_221A37B70;
            int8x16_t v39 = (int8x16_t)xmmword_221A36950;
            int8x16_t v38 = (int8x16_t)xmmword_221A37900;
            v36.i64[0] = 0x202020202020202;
            v36.i64[1] = 0x202020202020202;
            int8x16_t v35 = (int8x16_t)xmmword_221A37B50;
            int16x8_t v34 = v154;
            unint64_t v32 = v165;
            uint64_t v116 = v160;
            int v19 = v155;
            int8x16_t v16 = v156;
            BOOL v131 = v133;
          }
          unsigned int v103 = v182;
        }
        int v105 = v131 | 1;
      }
      v106[v111] = v131;
    }
    v115 *= 2;
    if (++v111 == 4)
    {
      a4 = v145;
      a6 = v146;
      a5 = v150;
      a3 = v144;
      a1 = v143;
      char v14 = v141;
      int v11 = v142;
      LODWORD(v18) = v139;
      uint64_t v17 = v140;
      uint64_t v20 = v138;
      unsigned int v24 = v148;
      int v59 = v172;
      goto LABEL_122;
    }
  }
}

uint64_t sub_2219E6608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v147 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 40);
  unsigned int v4 = (*(unsigned __int8 *)(v3 + 55) / 6u) & 0x1F;
  unsigned __int8 v5 = *(unsigned char *)(v3 + 55) % 6u;
  int v6 = *(unsigned __int8 *)(v3 + 52);
  int v146 = v6;
  int32x4_t v145 = vdupq_n_s32(16843009 * v6);
  int8x16_t v7 = *(int8x16_t **)(a1 + 56);
  int v8 = *(unsigned __int8 *)(a1 + 1422192);
  if (*(unsigned char *)(a1 + 1422192))
  {
    int16x8_t v9 = *(int16x8_t *)&asc_221A38400[16 * v5];
    int16x8_t v10 = *(int16x8_t *)(a3 + 16 * v5);
    unsigned int v11 = v4 - 4;
    if (v4 <= 3)
    {
      unsigned int v19 = 0;
      int v18 = 0;
      int v13 = 1 << (3 - v4);
    }
    else
    {
      if (v4 >= 6)
      {
        uint64_t result = 0;
        LOWORD(v13) = 0;
        unsigned int v14 = 0;
        unsigned int v15 = 0;
        unsigned int v16 = 0;
        unsigned int v17 = (unsigned __int16)(v4 - 6);
        int v18 = 1;
        goto LABEL_9;
      }
      LOWORD(v13) = 0;
      int v18 = 1;
      unsigned int v19 = v4 - 4;
      unsigned int v11 = 0;
    }
    unsigned int v17 = 0;
    unsigned int v16 = 6 - v4;
    uint64_t result = 1;
    unsigned int v15 = 1 << (5 - v4);
    unsigned int v14 = v11;
    unsigned int v11 = v19;
  }
  else
  {
    int v18 = 0;
    LOWORD(v13) = 0;
    unsigned int v14 = 0;
    unsigned int v11 = 0;
    unsigned int v15 = 0;
    unsigned int v16 = 0;
    unsigned int v17 = 0;
    int16x8_t v10 = (int16x8_t)vshlq_u16(*(uint16x8_t *)&asc_221A38400[16 * v5], (uint16x8_t)vdupq_n_s16(v4));
    uint64_t result = 1;
    int16x8_t v9 = v10;
  }
LABEL_9:
  int16x8_t v20 = (int16x8_t)vqtbl1q_s8((int8x16_t)vzip1q_s16(v10, v10), (int8x16_t)xmmword_221A36310);
  int8x16_t v21 = v7[1];
  v22.i64[0] = 0xFFFF000000000000;
  v22.i64[1] = 0xFFFF000000000000;
  v23.i64[0] = 0xFFFFLL;
  v23.i64[1] = 0xFFFFLL;
  int16x8_t v24 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vorrq_s8(vandq_s8(v21, (int8x16_t)xmmword_221A37C10), vandq_s8(*v7, (int8x16_t)xmmword_221A37BF0)), vextq_s8((int8x16_t)0, vandq_s8(v21, v22), 0xEuLL)), (int8x16_t)xmmword_221A37C20), (int8x16_t)xmmword_221A36960);
  int16x8_t v25 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vorrq_s8(vandq_s8(v21, (int8x16_t)xmmword_221A37C00), vandq_s8(*v7, (int8x16_t)xmmword_221A37C10)), vextq_s8(vandq_s8(*v7, v23), (int8x16_t)0, 2uLL)), (int8x16_t)xmmword_221A36970), (int8x16_t)xmmword_221A37C30);
  if (v8)
  {
    if ((result & 1) == 0)
    {
      int16x8_t v33 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v24, v20));
      int16x8_t v34 = vmulq_s16(v24, v20);
      uint32x4_t v35 = (uint32x4_t)vzip2q_s16(v34, v33);
      uint32x4_t v36 = (uint32x4_t)vdupq_n_s32(v17);
      uint32x4_t v37 = (uint32x4_t)vzip1q_s16(v34, v33);
      int32x4_t v29 = (int32x4_t)vshlq_u32(v35, v36);
      int32x4_t v30 = (int32x4_t)vshlq_u32(v37, v36);
      int16x8_t v38 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v25, v20));
      int16x8_t v39 = vmulq_s16(v25, v20);
      uint32x4_t v40 = (uint32x4_t)vzip2q_s16(v39, v38);
      int32x4_t v26 = (int32x4_t)vzip1q_s16(v39, v38);
      int32x4_t v41 = (int32x4_t)vshlq_u32(v40, v36);
      int32x4_t v42 = (int32x4_t)vshlq_u32((uint32x4_t)v26, v36);
      v26.i32[0] = 0;
      goto LABEL_18;
    }
    v26.i32[0] = v16;
    int16x8_t v27 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v24, v20));
    int16x8_t v28 = vmulq_s16(v24, v20);
    int32x4_t v29 = (int32x4_t)vzip2q_s16(v28, v27);
    int32x4_t v30 = vaddq_s32((int32x4_t)v15, (int32x4_t)vzip1q_s16(v28, v27));
    int16x8_t v31 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v25, v20));
    int16x8_t v32 = vmulq_s16(v25, v20);
  }
  else
  {
    if ((v20.i8[0] & 3) != 0)
    {
      int32x4_t v26 = (int32x4_t)xmmword_221A37C40;
    }
    else
    {
      v43.i64[0] = 0x1000100010001;
      v43.i64[1] = 0x1000100010001;
      int16x8_t v20 = (int16x8_t)vshlq_u16((uint16x8_t)v20, v43);
      int32x4_t v26 = 0uLL;
    }
    int16x8_t v44 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v24, v20));
    int16x8_t v45 = vmulq_s16(v20, v24);
    int32x4_t v29 = (int32x4_t)vzip2q_s16(v45, v44);
    int32x4_t v30 = vaddq_s32(v26, (int32x4_t)vzip1q_s16(v45, v44));
    int16x8_t v31 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v20.i8), (int16x8_t)vmull_high_s16(v25, v20));
    int16x8_t v32 = vmulq_s16(v20, v25);
  }
  int32x4_t v41 = (int32x4_t)vzip2q_s16(v32, v31);
  int32x4_t v42 = (int32x4_t)vzip1q_s16(v32, v31);
LABEL_18:
  int32x4_t v46 = vaddq_s32(v30, v42);
  int32x4_t v47 = vaddq_s32(v29, v41);
  int32x4_t v48 = vsubq_s32(v30, v42);
  int32x4_t v49 = vsubq_s32(v29, v41);
  int32x4_t v50 = vaddq_s32(v46, v47);
  int32x4_t v51 = vsubq_s32(v46, v47);
  int32x4_t v52 = vsubq_s32(v48, v49);
  int32x4_t v53 = vaddq_s32(v48, v49);
  int32x4_t v54 = vzip1q_s32(v50, v52);
  int32x4_t v55 = vzip2q_s32(v50, v52);
  int32x4_t v56 = vzip1q_s32(v51, v53);
  int32x4_t v57 = vzip2q_s32(v51, v53);
  int32x4_t v58 = vzip1q_s32(v54, v56);
  int32x4_t v59 = vzip2q_s32(v54, v56);
  int32x4_t v60 = vzip1q_s32(v55, v57);
  int32x4_t v61 = vzip2q_s32(v55, v57);
  int32x4_t v62 = vaddq_s32(v58, v59);
  int32x4_t v63 = vsubq_s32(v58, v59);
  int32x4_t v64 = vaddq_s32(v60, v61);
  int32x4_t v65 = vsubq_s32(v60, v61);
  int32x4_t v66 = vaddq_s32(v62, v64);
  int32x4_t v67 = vsubq_s32(v62, v64);
  int32x4_t v68 = vsubq_s32(v63, v65);
  int32x4_t v69 = vaddq_s32(v63, v65);
  int32x4_t v70 = vdupq_n_s32(-v26.i32[0]);
  int32x4_t v71 = vshlq_s32(v66, v70);
  int32x4_t v72 = vshlq_s32(v67, v70);
  int32x4_t v73 = vshlq_s32(v68, v70);
  int32x4_t v74 = vshlq_s32(v69, v70);
  *(int16x4_t *)v70.i8 = vqmovn_s32(v71);
  *(int16x4_t *)v71.i8 = vqmovn_s32(v72);
  *(int16x4_t *)v72.i8 = vqmovn_s32(v73);
  *(int16x4_t *)v74.i8 = vqmovn_s32(v74);
  int16x8_t v75 = (int16x8_t)vzip1q_s32(v70, v71);
  int16x8_t v76 = (int16x8_t)vzip1q_s32(v72, v74);
  int16x8_t v77 = (int16x8_t)vqtbl1q_s8((int8x16_t)xmmword_221A37C50, (int8x16_t)xmmword_221A36310);
  int16x8_t v78 = vqaddq_s16(v75, v77);
  int16x8_t v79 = vqaddq_s16(v76, v77);
  if (v6)
  {
    uint64_t v80 = 0;
    uint16x8_t v81 = (uint16x8_t)vdupq_n_s16(v11);
    int8x16_t v82 = v7 + 3;
    int32x4_t v83 = vdupq_n_s32(v14);
    v84.i64[0] = 0x5000500050005;
    v84.i64[1] = 0x5000500050005;
    uint64_t result = (uint64_t)&unk_221A37000;
    v85.i64[0] = -1;
    v85.i64[1] = -1;
    do
    {
      int8x16_t v86 = (int16x8_t *)(a2 + (unsigned __int16)word_221A383D0[v80]);
      if (v145.i16[v80])
      {
        int16x8_t v87 = (int16x8_t)vandq_s8((int8x16_t)v78, (int8x16_t)xmmword_221A37D20);
        int8x16_t v88 = v82[-1];
        int8x16_t v89 = v82[1];
        int8x16_t v90 = v82[2];
        v152.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v88, (int8x16_t)xmmword_221A37C60), (int8x16_t)xmmword_221A37C70), (int8x16_t)xmmword_221A37C80);
        v152.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(*v82, (int8x16_t)xmmword_221A37C90), (int8x16_t)xmmword_221A37CA0), (int8x16_t)xmmword_221A369E0);
        int16x8_t v91 = (int16x8_t)vqtbl2q_s8(v152, (int8x16_t)xmmword_221A37CB0);
        v148.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v88, (int8x16_t)xmmword_221A37CC0), (int8x16_t)xmmword_221A37CD0), (int8x16_t)xmmword_221A362D0);
        v148.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(*v82, (int8x16_t)xmmword_221A37CE0), (int8x16_t)xmmword_221A36860), (int8x16_t)xmmword_221A369D0);
        int16x8_t v92 = (int16x8_t)vqtbl2q_s8(v148, (int8x16_t)xmmword_221A37CF0);
        v150.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v89, (int8x16_t)xmmword_221A37C60), (int8x16_t)xmmword_221A37C70), (int8x16_t)xmmword_221A37C80);
        v150.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v90, (int8x16_t)xmmword_221A37C90), (int8x16_t)xmmword_221A37CA0), (int8x16_t)xmmword_221A369E0);
        int16x8_t v93 = (int16x8_t)vqtbl2q_s8(v150, (int8x16_t)xmmword_221A37CB0);
        v150.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v89, (int8x16_t)xmmword_221A37CC0), (int8x16_t)xmmword_221A37CD0), (int8x16_t)xmmword_221A362D0);
        v150.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v90, (int8x16_t)xmmword_221A37CE0), (int8x16_t)xmmword_221A36860), (int8x16_t)xmmword_221A369D0);
        int16x8_t v94 = (int16x8_t)vqtbl2q_s8(v150, (int8x16_t)xmmword_221A37CF0);
        if (v8)
        {
          if (v18)
          {
            int16x8_t v95 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v91, v9), v81);
            int16x8_t v96 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v92, v9), v81);
            int16x8_t v97 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v93, v9), v81);
            int64x2_t v98 = (int64x2_t)vshlq_u16((uint16x8_t)vmulq_s16(v94, v9), v81);
          }
          else
          {
            int32x4_t v104 = (int32x4_t)vqtbl1q_s8((int8x16_t)(__int16)v13, (int8x16_t)xmmword_221A36310);
            int16x8_t v105 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v91.i8, *(int16x4_t *)v9.i8), (int16x8_t)vmull_high_s16(v91, v9));
            int16x8_t v106 = vmulq_s16(v91, v9);
            int16x8_t v95 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v106, v105), v104), v83)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v106, v105), v104), v83));
            int16x8_t v107 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v92.i8, *(int16x4_t *)v9.i8), (int16x8_t)vmull_high_s16(v92, v9));
            int16x8_t v108 = vmulq_s16(v92, v9);
            int16x8_t v96 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v108, v107), v104), v83)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v108, v107), v104), v83));
            int16x8_t v109 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v93.i8, *(int16x4_t *)v9.i8), (int16x8_t)vmull_high_s16(v93, v9));
            int16x8_t v110 = vmulq_s16(v93, v9);
            int16x8_t v97 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v110, v109), v104), v83)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v110, v109), v104), v83));
            int16x8_t v111 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v94.i8, *(int16x4_t *)v9.i8), (int16x8_t)vmull_high_s16(v94, v9));
            int16x8_t v112 = vmulq_s16(v94, v9);
            int64x2_t v98 = (int64x2_t)vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v112, v111), v104), v83)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v112, v111), v104), v83));
          }
          int64x2_t v102 = (int64x2_t)vaddq_s16(v95, v87);
          int64x2_t v103 = (int64x2_t)vaddq_s16(v97, v87);
        }
        else
        {
          int64x2_t v102 = (int64x2_t)vmlaq_s16(v87, v91, v9);
          int16x8_t v96 = vmulq_s16(v92, v9);
          int64x2_t v103 = (int64x2_t)vmlaq_s16(v87, v93, v9);
          int64x2_t v98 = (int64x2_t)vmulq_s16(v94, v9);
        }
        int64x2_t v113 = v102;
        v113.i16[0] = v78.i16[0];
        int16x8_t v114 = (int16x8_t)vzip2q_s64(v102, v103);
        v103.i16[0] = vqtbl1q_s8((int8x16_t)vzip1q_s16(v78, v78), (int8x16_t)xmmword_221A368E0).u16[0];
        int16x8_t v115 = (int16x8_t)vzip1q_s64(v113, v103);
        int16x8_t v116 = (int16x8_t)vzip2q_s64((int64x2_t)v96, v98);
        v96.i64[1] = v98.i64[0];
        int16x8_t v117 = vaddq_s16(v115, v96);
        int16x8_t v118 = vsubq_s16(v115, v96);
        int16x8_t v119 = vshlq_s16(v116, v85);
        int16x8_t v120 = vsubq_s16(vshlq_s16(v114, v85), v116);
        int16x8_t v121 = vaddq_s16(v119, v114);
        int16x8_t v122 = vaddq_s16(v117, v121);
        int16x8_t v123 = vaddq_s16(v118, v120);
        int16x8_t v124 = vsubq_s16(v118, v120);
        int16x8_t v125 = vsubq_s16(v117, v121);
        int16x8_t v126 = vzip1q_s16(v122, v124);
        int16x8_t v127 = vzip2q_s16(v122, v124);
        int16x8_t v128 = vzip1q_s16(v123, v125);
        int16x8_t v129 = vzip2q_s16(v123, v125);
        v149.val[1] = (int8x16_t)vdupq_lane_s64(v127.i64[0], 0);
        v149.val[0] = (int8x16_t)vdupq_lane_s64(v129.i64[0], 0);
        int16x8_t v130 = vzip1q_s16(v126, v128);
        v149.val[0] = vqtbl2q_s8(v149, (int8x16_t)xmmword_221A37BC0);
        v149.val[1] = (int8x16_t)vzip2q_s64((int64x2_t)v130, (int64x2_t)v149.val[0]);
        v151.val[1] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v126, 1);
        v151.val[0] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v128, 1);
        int16x8_t v131 = (int16x8_t)vqtbl2q_s8(v151, (int8x16_t)xmmword_221A36990);
        int64x2_t v132 = (int64x2_t)vzip2q_s16(v127, v129);
        int16x8_t v133 = (int16x8_t)vzip2q_s64((int64x2_t)v131, v132);
        v130.i64[1] = v149.val[0].i64[0];
        v131.i64[1] = v132.i64[0];
        int16x8_t v134 = vaddq_s16(v130, v131);
        int16x8_t v135 = vsubq_s16(v130, v131);
        v149.val[0] = (int8x16_t)vshlq_s16(v133, v85);
        int16x8_t v136 = vsubq_s16(vshlq_s16((int16x8_t)v149.val[1], v85), v133);
        int16x8_t v137 = vaddq_s16((int16x8_t)v149.val[0], (int16x8_t)v149.val[1]);
        *int8x16_t v86 = vshlq_s16(vaddq_s16(v134, v137), v84);
        v86[2] = vshlq_s16(vaddq_s16(v135, v136), v84);
        int16x8_t v101 = vshlq_s16(vsubq_s16(v134, v137), v84);
        v86[4] = vshlq_s16(vsubq_s16(v135, v136), v84);
      }
      else
      {
        int16x8_t v99 = vshlq_s16(v78, v84);
        int32x4_t v100 = (int32x4_t)vzip1q_s16(v99, v99);
        int16x8_t v101 = (int16x8_t)vzip1q_s32(v100, v100);
        *int8x16_t v86 = v101;
        v86[2] = v101;
        v86[4] = v101;
      }
      v86[6] = v101;
      ++v80;
      int16x8_t v78 = (int16x8_t)vextq_s8((int8x16_t)v78, (int8x16_t)v79, 4uLL);
      int16x8_t v79 = (int16x8_t)vqtbl1q_s8((int8x16_t)v79, (int8x16_t)xmmword_221A37D00);
      v82 += 4;
    }
    while (v80 != 8);
  }
  else
  {
    uint64_t v138 = 0;
    v139.i64[0] = 0x5000500050005;
    v139.i64[1] = 0x5000500050005;
    int16x8_t v140 = vshlq_s16(v78, v139);
    int8x16_t v141 = (int8x16_t)vshlq_s16(v79, v139);
    do
    {
      int v142 = (int32x4_t *)(a2 + (unsigned __int16)word_221A383D0[v138]);
      int32x4_t v143 = (int32x4_t)vzip1q_s16(v140, v140);
      int32x4_t v144 = vzip1q_s32(v143, v143);
      *int v142 = v144;
      v142[2] = v144;
      v142[4] = v144;
      v142[6] = v144;
      int16x8_t v140 = (int16x8_t)vextq_s8((int8x16_t)v140, v141, 4uLL);
      int8x16_t v141 = vqtbl1q_s8(v141, (int8x16_t)xmmword_221A37D00);
      ++v138;
    }
    while (v138 != 8);
  }
  return result;
}

int8x16_t sub_2219E6DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(void *)(a1 + 40);
  unsigned int v5 = (*(unsigned __int8 *)(v4 + 55) / 6u) & 0x1F;
  unsigned __int8 v6 = *(unsigned char *)(v4 + 55) % 6u;
  int v7 = *(unsigned __int8 *)(v4 + 52);
  int v40 = v7;
  int32x4_t v39 = vdupq_n_s32(16843009 * v7);
  uint64_t v8 = *(void *)(a1 + 56);
  int v9 = *(unsigned __int8 *)(a1 + 1422192);
  if (*(unsigned char *)(a1 + 1422192))
  {
    int16x8_t v36 = *(int16x8_t *)&asc_221A38400[16 * v6];
    int16x8_t v10 = *(int16x8_t *)(a3 + 16 * v6);
    if (v5 <= 3)
    {
      unsigned int v11 = 0;
      int v18 = 0;
      int v13 = 4 - v5;
      int v12 = 1 << (3 - v5);
    }
    else
    {
      unsigned int v11 = v5 - 4;
      if (v5 >= 6)
      {
        LOWORD(v12) = 0;
        int v13 = 0;
        LOWORD(v14) = 0;
        unsigned __int16 v15 = 0;
        unsigned __int16 v16 = v5 - 6;
        int v17 = 1;
        int v18 = 1;
        goto LABEL_9;
      }
      int v13 = 0;
      LOWORD(v12) = 0;
      int v18 = 1;
    }
    int v17 = 0;
    unsigned __int16 v16 = 0;
    unsigned __int16 v15 = 6 - v5;
    int v14 = 1 << (5 - v5);
  }
  else
  {
    int v17 = 0;
    int v18 = 0;
    LOWORD(v12) = 0;
    int v13 = 0;
    unsigned int v11 = 0;
    LOWORD(v14) = 0;
    unsigned __int16 v15 = 0;
    unsigned __int16 v16 = 0;
    int16x8_t v10 = (int16x8_t)vshlq_u16(*(uint16x8_t *)&asc_221A38400[16 * v6], (uint16x8_t)vdupq_n_s16(v5));
    int16x8_t v36 = v10;
  }
LABEL_9:
  sub_2219F1F10(v8, (float *)v41[0].i32, v17, v9, v16, v15, v14, (uint16x8_t)vqtbl1q_s8((int8x16_t)vzip1q_s16(v10, v10), (int8x16_t)xmmword_221A36310));
  int16x8_t v19 = (int16x8_t)vqtbl1q_s8((int8x16_t)xmmword_221A37C50, (int8x16_t)xmmword_221A36310);
  int8x16_t v20 = (int8x16_t)vqaddq_s16(v41[0], v19);
  int8x16_t v21 = (int8x16_t)vqaddq_s16(v41[1], v19);
  if (v7)
  {
    uint64_t v22 = 0;
    uint64_t v23 = v8 + 32;
    do
    {
      uint64_t v24 = a2 + (unsigned __int16)word_221A383D0[v22];
      if (v39.i16[v22])
      {
        int8x16_t v37 = v20;
        int8x16_t v38 = v21;
        sub_2219F20E0(v23, v23 + 32, (int16x8_t *)v24, v18, v11, v13, (__int16)v12, v9, (int16x8_t)v20.u16[0], (__n128)vqtbl1q_s8((int8x16_t)vzip1q_s16((int16x8_t)v20, (int16x8_t)v20), (int8x16_t)xmmword_221A368E0), v36);
        int8x16_t v20 = v37;
        int8x16_t v21 = v38;
      }
      else
      {
        v25.i64[0] = 0x5000500050005;
        v25.i64[1] = 0x5000500050005;
        int16x8_t v26 = vshlq_s16((int16x8_t)v20, v25);
        int32x4_t v27 = (int32x4_t)vzip1q_s16(v26, v26);
        int32x4_t v28 = vzip1q_s32(v27, v27);
        *(int32x4_t *)uint64_t v24 = v28;
        *(int32x4_t *)(v24 + 32) = v28;
        *(int32x4_t *)(v24 + 64) = v28;
        *(int32x4_t *)(v24 + 96) = v28;
      }
      ++v22;
      int8x16_t v20 = vextq_s8(v20, v21, 4uLL);
      int8x16_t result = (int8x16_t)xmmword_221A37D00;
      int8x16_t v21 = vqtbl1q_s8(v21, (int8x16_t)xmmword_221A37D00);
      v23 += 64;
    }
    while (v22 != 8);
  }
  else
  {
    uint64_t v30 = 0;
    v31.i64[0] = 0x5000500050005;
    v31.i64[1] = 0x5000500050005;
    int8x16_t result = (int8x16_t)vshlq_s16((int16x8_t)v20, v31);
    int8x16_t v32 = (int8x16_t)vshlq_s16((int16x8_t)v21, v31);
    do
    {
      int16x8_t v33 = (int32x4_t *)(a2 + (unsigned __int16)word_221A383D0[v30]);
      int32x4_t v34 = (int32x4_t)vzip1q_s16((int16x8_t)result, (int16x8_t)result);
      int32x4_t v35 = vzip1q_s32(v34, v34);
      int32x4_t *v33 = v35;
      v33[2] = v35;
      v33[4] = v35;
      v33[6] = v35;
      int8x16_t result = vextq_s8(result, v32, 4uLL);
      int8x16_t v32 = vqtbl1q_s8(v32, (int8x16_t)xmmword_221A37D00);
      ++v30;
    }
    while (v30 != 8);
  }
  return result;
}

void sub_2219E70C0(uint64_t a1, _OWORD *a2)
{
  v36[3] = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 40);
  unsigned int v4 = *(unsigned __int8 *)(v3 + 52);
  if (*(unsigned char *)(v3 + 52))
  {
    uint64_t v5 = 0;
    unsigned __int8 v6 = *(unsigned char *)(v3 + 55);
    int v34 = *(unsigned __int8 *)(v3 + 52);
    do
    {
      int v7 = v4 & 1;
      v4 >>= 1;
      *(_DWORD *)&v33[v5] = -v7;
      v5 += 4;
    }
    while (v5 != 16);
    int v8 = *(unsigned __int8 *)(a1 + 1422192);
    int v9 = *(int8x16_t **)(a1 + 56);
    int v10 = *(unsigned __int8 *)(a1 + 31);
    int v11 = v34;
    *a2 = 0u;
    a2[1] = 0u;
    a2[2] = 0u;
    a2[3] = 0u;
    a2[4] = 0u;
    a2[5] = 0u;
    a2[6] = 0u;
    a2[7] = 0u;
    a2[8] = 0u;
    a2[9] = 0u;
    a2[10] = 0u;
    a2[11] = 0u;
    a2[12] = 0u;
    a2[13] = 0u;
    a2[14] = 0u;
    a2[15] = 0u;
    a2[16] = 0u;
    a2[17] = 0u;
    a2[18] = 0u;
    a2[19] = 0u;
    a2[20] = 0u;
    a2[21] = 0u;
    a2[22] = 0u;
    a2[23] = 0u;
    a2[24] = 0u;
    a2[25] = 0u;
    a2[26] = 0u;
    a2[27] = 0u;
    a2[28] = 0u;
    a2[29] = 0u;
    a2[30] = 0u;
    a2[31] = 0u;
    if (v11)
    {
      unsigned int v12 = (v6 / 6u) & 0x1F;
      int v13 = v9 + 2;
      if (v10 == 2)
      {
        int v14 = (uint16x4_t *)&asc_221A38400[2 * (8 * (v6 % 6u))];
        if (v8)
        {
          int16x8_t v35 = *(int16x8_t *)v14->i8;
          int v15 = v8;
          if (v12 < 4)
          {
            __int16 v31 = 0;
            int v18 = 0;
            char v16 = 4 - v12;
            int v17 = 1 << (3 - v12);
          }
          else
          {
            char v16 = 0;
            LOWORD(v17) = 0;
            __int16 v31 = v12 - 4;
            int v18 = 1;
          }
        }
        else
        {
          int v15 = 0;
          __int16 v31 = 0;
          char v16 = 0;
          LOWORD(v17) = 0;
          int v18 = 0;
          uint32x4_t v24 = (uint32x4_t)vdupq_n_s32(v12);
          int16x8_t v35 = vuzp1q_s16((int16x8_t)vshlq_u32(vmovl_u16(*v14), v24), (int16x8_t)vshlq_u32(vmovl_u16(v14[1]), v24));
        }
        for (uint64_t i = 0; i != 8; ++i)
        {
          if (*(_WORD *)&v33[i * 2])
          {
            int16x8_t v26 = (_WORD *)((char *)a2 + (unsigned __int16)word_221A383D0[i]);
            v36[0] = 0;
            v36[1] = 0;
            sub_2219F285C(v13->i16, v13[2].i16, (__int16 *)&xmmword_221A37D10, (__int16 *)&xmmword_221A37D10, (unsigned __int16 *)v36, (unsigned __int16 *)&v35, v26, 1, v18, v31, SHIBYTE(v31), v16, v17, v15);
          }
          v13 += 4;
        }
      }
      else
      {
        if (v8)
        {
          int16x8_t v32 = *(int16x8_t *)&asc_221A38400[16 * (v6 % 6u)];
          unsigned int v20 = v12 - 4;
          if (v12 < 4)
          {
            int v23 = 0;
            unsigned int v20 = 0;
            unsigned __int16 v22 = 4 - v12;
            int v21 = 1 << (3 - v12);
          }
          else
          {
            LOWORD(v21) = 0;
            unsigned __int16 v22 = 0;
            int v23 = 1;
          }
        }
        else
        {
          int v23 = 0;
          LOWORD(v21) = 0;
          unsigned __int16 v22 = 0;
          unsigned int v20 = 0;
          int16x8_t v32 = (int16x8_t)vshlq_u16(*(uint16x8_t *)&asc_221A38400[2 * (8 * (v6 % 6u))], (uint16x8_t)vdupq_n_s16(v12));
        }
        uint64_t v27 = 0;
        unsigned __int16 v28 = v21;
        do
        {
          if (*(_WORD *)&v33[v27 * 2])
          {
            int32x4_t v29 = (int16x8_t *)((char *)a2 + (unsigned __int16)word_221A383D0[v27]);
            uint64_t v30 = v13 + 2;
            if (v8) {
              sub_2219F2350(v13, v30, v29, v23, v20, v22, v28, (int16x8_t)xmmword_221A37D10, v32);
            }
            else {
              sub_2219F262C(v13, v30, v29, 1, (int16x8_t)xmmword_221A37D10, v32);
            }
          }
          ++v27;
          v13 += 4;
        }
        while (v27 != 8);
      }
    }
  }
  else
  {
    int16x8_t v19 = (void (*)(_OWORD *, uint64_t))off_26AAE6B20;
    v19(a2, 16);
  }
}

uint64_t sub_2219E7498(uint64_t result, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = *(void *)(result + 40);
  unsigned int v5 = *(unsigned __int8 *)(v4 + 52);
  unsigned __int8 v6 = *(unsigned char *)(v4 + 55);
  uint64_t v7 = *(void *)(result + 56);
  int v8 = *(unsigned __int8 *)(result + 1422192);
  a2[30] = 0u;
  a2[31] = 0u;
  a2[28] = 0u;
  a2[29] = 0u;
  a2[26] = 0u;
  a2[27] = 0u;
  a2[24] = 0u;
  a2[25] = 0u;
  a2[22] = 0u;
  a2[23] = 0u;
  a2[20] = 0u;
  a2[21] = 0u;
  a2[18] = 0u;
  a2[19] = 0u;
  unsigned int v9 = v6;
  a2[16] = 0u;
  a2[17] = 0u;
  unsigned int v10 = v6 / 6u;
  uint64_t v11 = v6 % 6u;
  a2[14] = 0u;
  a2[15] = 0u;
  a2[12] = 0u;
  a2[13] = 0u;
  int8x16_t v217 = (unsigned __int16 *)((char *)&unk_221A38470 + 128 * v11);
  a2[10] = 0u;
  a2[11] = 0u;
  unsigned int v12 = (__int16 *)(a3 + (v11 << 7));
  char v13 = 6 - v10;
  a2[8] = 0u;
  a2[9] = 0u;
  int v14 = 1 << (5 - v10);
  a2[6] = 0u;
  a2[7] = 0u;
  unsigned int v15 = (unsigned __int16)(v10 - 6);
  BOOL v16 = v9 >= 0x24;
  BOOL v17 = v9 < 0x24;
  if (v16) {
    int v14 = 0;
  }
  a2[4] = 0uLL;
  a2[5] = 0uLL;
  if (v16) {
    char v13 = 0;
  }
  if (!v16) {
    unsigned int v15 = 0;
  }
  int v220 = v8;
  if (v8) {
    int v18 = v17;
  }
  else {
    int v18 = 1;
  }
  int v218 = v18;
  a2[2] = 0uLL;
  a2[3] = 0uLL;
  *a2 = 0uLL;
  a2[1] = 0uLL;
  if (v8) {
    int v19 = v14;
  }
  else {
    int v19 = 0;
  }
  int v216 = v19;
  if (v8) {
    char v20 = v13;
  }
  else {
    char v20 = 0;
  }
  char v215 = v20;
  if (v8) {
    unsigned int v21 = v15;
  }
  else {
    unsigned int v21 = 0;
  }
  unsigned int v222 = v21;
  if (v8) {
    unsigned int v22 = v10;
  }
  else {
    unsigned int v22 = v10 - 2;
  }
  int v23 = (__int16 *)(v7 + 80);
  uint64_t v219 = v12;
  do
  {
    if (v5)
    {
      unsigned int v533 = v5;
      int v24 = *(v23 - 24);
      int v25 = *(v23 - 23);
      unsigned int v531 = (_WORD *)a2 + *(__int16 *)((char *)&word_221A38460 + v3);
      int v578 = *(v23 - 19);
      int v582 = *(v23 - 18);
      int v441 = *(v23 - 9);
      int v479 = v23[3];
      int v545 = v23[4];
      int v26 = *(v23 - 22);
      int v27 = *(v23 - 20);
      int v28 = *(v23 - 17);
      int v401 = *(v23 - 11);
      int v408 = *(v23 - 10);
      int v494 = v23[2];
      int v520 = v23[5];
      int v562 = v23[18];
      int v29 = *(v23 - 21);
      int v30 = *(v23 - 16);
      int v31 = *(v23 - 12);
      int v389 = *(v23 - 7);
      int v415 = *(v23 - 8);
      int v420 = v23[1];
      int v446 = v23[6];
      int v525 = v23[17];
      int v566 = v23[19];
      int v32 = *(v23 - 15);
      int v33 = *(v23 - 13);
      int v34 = *(v23 - 6);
      int v395 = *v23;
      int v424 = v23[7];
      int v456 = v23[16];
      int v505 = v23[20];
      int v550 = v23[29];
      int v35 = *(v23 - 14);
      int v36 = *(v23 - 5);
      int v37 = *(v23 - 1);
      int v433 = v23[8];
      int v461 = v23[15];
      int v484 = v23[21];
      int v510 = v23[28];
      int v554 = v23[30];
      int v38 = *(v23 - 4);
      int v39 = v23[9];
      int v437 = v23[14];
      int v467 = v23[22];
      int v489 = v23[27];
      int v515 = v23[31];
      int v558 = v23[36];
      int v40 = *(v23 - 3);
      int v41 = v23[10];
      int v42 = v23[13];
      int v451 = v23[23];
      int v474 = v23[26];
      int v499 = v23[32];
      int v535 = v23[35];
      int v570 = v23[37];
      int v43 = v23[11];
      int v44 = v23[12];
      int v45 = v23[24];
      int v429 = v23[33];
      int v470 = v23[34];
      int v540 = v23[38];
      unsigned int v46 = v222;
      if (!v220) {
        unsigned int v46 = v22;
      }
      int v532 = v23;
      int v574 = v23[39];
      uint64_t v534 = v3;
      unsigned int v530 = v46;
      if (v220)
      {
        int v47 = v23[25];
        int v48 = *(v23 - 2);
        int v49 = v582;
        if (v218)
        {
          int v380 = v216 + v219[2] * v29;
          int v363 = v216 + v219[7] * v43;
          int v347 = v216 + v219[10] * v30;
          int v334 = v216 + v219[12] * v36;
          int v295 = v216 + v219[19] * v34;
          int v285 = v216 + v219[21] * v39;
          int v291 = v216 + v219[20] * v37;
          int v279 = v216 + v219[22] * v42;
          int v583 = v216 + v219[25] * v401;
          int v50 = v216 + v219[27] * v395;
          int v396 = v216 + v219[28] * v433;
          int v402 = v216 + v219[26] * v389;
          int v263 = v216 + v219[30] * v451;
          int v269 = v216 + v219[29] * v437;
          int v258 = v216 + v219[31] * v47;
          int v51 = v216 + v219[32] * v408;
          int v409 = v216 + v219[36] * v461;
          int v249 = v216 + v219[40] * v441;
          int v253 = v216 + v219[39] * v429;
          int v245 = v216 + v219[41] * v494;
          int v234 = v216 + v219[43] * v456;
          int v238 = v216 + v219[42] * v446;
          int v227 = v216 + v219[46] * v499;
          int v231 = v216 + v219[45] * v489;
          int v223 = v216 + v219[47] * v470;
          int v52 = v216 + v219[48] * v479;
          int v53 = v216 + v219[49] * v520;
          int v54 = v216 + v219[50] * v525;
          int v55 = v216 + v219[51] * v505;
          int v56 = v216 + v219[53] * v515;
          int v57 = v216 + v219[54] * v535;
          int v58 = v216 + v219[55] * v540;
          int v59 = v216 + v219[56] * v545;
          int v546 = (*v219 * v24 + v216) >> v215;
          int v541 = (v216 + v219[1] * v26) >> v215;
          int v536 = v380 >> v215;
          int v516 = (v216 + v219[3] * v32) >> v215;
          int v500 = (v216 + v219[4] * v35) >> v215;
          int v60 = (v216 + v219[5] * v38) >> v215;
          int v490 = (v216 + v219[6] * v40) >> v215;
          int v471 = v363 >> v215;
          int v385 = (v216 + v219[8] * v25) >> v215;
          int v390 = (v216 + v219[9] * v27) >> v215;
          int v307 = v347 >> v215;
          int v311 = (v216 + v219[11] * v33) >> v215;
          int v314 = v334 >> v215;
          int v303 = (v216 + v219[13] * v48) >> v215;
          int v322 = (v216 + v219[14] * v41) >> v215;
          int v318 = (v216 + v219[15] * v44) >> v215;
          int v462 = (v216 + v219[16] * v578) >> v215;
          int v457 = (v216 + v219[17] * v28) >> v215;
          int v452 = (v216 + v219[18] * v31) >> v215;
          int v447 = v295 >> v215;
          int v442 = v291 >> v215;
          int v438 = v285 >> v215;
          int v434 = v279 >> v215;
          int v430 = (v216 + v219[23] * v45) >> v215;
          int v242 = (v216 + v219[24] * v49) >> v215;
          int v61 = v583 >> v215;
          int v275 = v402 >> v215;
          int v280 = v50 >> v215;
          int v286 = v396 >> v215;
          int v300 = v263 >> v215;
          int v292 = v269 >> v215;
          int v296 = v258 >> v215;
          int v526 = v51 >> v215;
          int v521 = (v216 + v219[33] * v415) >> v215;
          int v506 = (v216 + v219[34] * v420) >> v215;
          int v495 = (v216 + v219[35] * v424) >> v215;
          int v62 = v409 >> v215;
          int v480 = (v216 + v219[37] * v467) >> v215;
          int v475 = (v216 + v219[38] * v474) >> v215;
          int v425 = v253 >> v215;
          int v63 = v249 >> v215;
          int v246 = v245 >> v215;
          int v64 = v238 >> v215;
          int v65 = v234 >> v215;
          int v270 = (v216 + v219[44] * v484) >> v215;
          int v264 = v231 >> v215;
          int v259 = v227 >> v215;
          int v375 = v52 >> v215;
          int v369 = v53 >> v215;
          int v364 = v54 >> v215;
          int v358 = v55 >> v215;
          int v348 = (v216 + v219[52] * v510) >> v215;
          int v341 = v56 >> v215;
          int v250 = v57 >> v215;
          int v254 = v58 >> v215;
          int v66 = v59 >> v215;
          int v67 = (v216 + v219[57] * v562) >> v215;
          int v68 = (v216 + v219[58] * v566) >> v215;
          int v69 = (v216 + v219[59] * v550) >> v215;
          int v70 = (v216 + v219[60] * v554) >> v215;
          int v71 = (v216 + v219[61] * v558) >> v215;
          int v72 = (v216 + v219[62] * v570) >> v215;
          int v73 = (v216 + v219[63] * v574) >> v215;
          int v74 = v223 >> v215;
        }
        else
        {
          int v85 = v219[2] * v29;
          int v370 = v219[7] * v43;
          int v353 = v219[10] * v30;
          int v342 = v219[12] * v36;
          int v335 = v219[14] * v41;
          int v297 = v219[19] * v34;
          int v287 = v219[21] * v39;
          int v281 = v219[22] * v42;
          int v584 = v219[25] * v401;
          int v86 = v219[27] * v395;
          int v397 = v219[28] * v433;
          int v403 = v219[26] * v389;
          int v266 = v219[30] * v451;
          int v272 = v219[29] * v437;
          int v261 = v219[31] * v47;
          int v87 = v219[32] * v408;
          int v88 = v219[36] * v461;
          int v410 = v219[39] * v429;
          int v252 = v219[41] * v494;
          int v256 = v219[40] * v441;
          int v236 = v219[43] * v456;
          int v240 = v219[42] * v446;
          int v229 = v219[46] * v499;
          int v233 = v219[45] * v489;
          int v225 = v219[47] * v470;
          int v89 = *v219 * v24;
          int v90 = v219[48] * v479;
          int v91 = v219[49] * v520;
          int v92 = v219[50] * v525;
          int v93 = v219[51] * v505;
          int v94 = v219[53] * v515;
          int v95 = v219[54] * v535;
          int v96 = v219[55] * v540;
          int v97 = v219[56] * v545;
          int v546 = v89 << v222;
          int v541 = (v219[1] * v26) << v222;
          int v536 = v85 << v222;
          int v516 = (v219[3] * v32) << v222;
          int v500 = (v219[4] * v35) << v222;
          int v60 = (v219[5] * v38) << v222;
          int v490 = (v219[6] * v40) << v222;
          int v471 = v370 << v222;
          int v385 = (v219[8] * v25) << v222;
          int v390 = (v219[9] * v27) << v222;
          int v307 = v353 << v222;
          int v311 = (v219[11] * v33) << v222;
          int v303 = (v219[13] * v48) << v222;
          int v322 = v335 << v222;
          int v314 = v342 << v222;
          int v318 = (v219[15] * v44) << v222;
          int v462 = (v219[16] * v578) << v222;
          int v452 = (v219[18] * v31) << v222;
          int v457 = (v219[17] * v28) << v222;
          int v442 = (v219[20] * v37) << v222;
          int v447 = v297 << v222;
          int v434 = v281 << v222;
          int v438 = v287 << v222;
          int v430 = (v219[23] * v45) << v222;
          int v242 = (v219[24] * v49) << v222;
          int v61 = v584 << v222;
          int v275 = v403 << v222;
          int v280 = v86 << v222;
          int v286 = v397 << v222;
          int v292 = v272 << v222;
          int v296 = v261 << v222;
          int v300 = v266 << v222;
          int v526 = v87 << v222;
          int v521 = (v219[33] * v415) << v222;
          int v506 = (v219[34] * v420) << v222;
          int v495 = (v219[35] * v424) << v222;
          int v480 = (v219[37] * v467) << v222;
          int v475 = (v219[38] * v474) << v222;
          int v425 = v410 << v222;
          int v62 = v88 << v222;
          int v63 = v256 << v222;
          int v246 = v252 << v222;
          int v64 = v240 << v222;
          int v65 = v236 << v222;
          int v264 = v233 << v222;
          int v270 = (v219[44] * v484) << v222;
          int v259 = v229 << v222;
          int v74 = v225 << v222;
          int v369 = v91 << v222;
          int v375 = v90 << v222;
          int v358 = v93 << v222;
          int v364 = v92 << v222;
          int v341 = v94 << v222;
          int v348 = (v219[52] * v510) << v222;
          int v250 = v95 << v222;
          int v254 = v96 << v222;
          int v66 = v97 << v222;
          int v67 = (v219[57] * v562) << v222;
          int v68 = (v219[58] * v566) << v222;
          int v69 = (v219[59] * v550) << v222;
          int v70 = (v219[60] * v554) << v222;
          int v71 = (v219[61] * v558) << v222;
          int v72 = (v219[62] * v570) << v222;
          int v73 = (v219[63] * v574) << v222;
        }
      }
      else
      {
        int v271 = v217[28] * (unsigned __int16)v433;
        int v276 = v217[26] * (unsigned __int16)v389;
        int v260 = v217[30] * (unsigned __int16)v451;
        int v265 = v217[29] * (unsigned __int16)v437;
        int v251 = v217[39] * (unsigned __int16)v429;
        int v255 = v217[36] * (unsigned __int16)v461;
        int v247 = v217[40] * (unsigned __int16)v441;
        int v235 = v217[42] * (unsigned __int16)v446;
        int v239 = v217[41] * (unsigned __int16)v494;
        int v228 = v217[45] * (unsigned __int16)v489;
        int v232 = v217[43] * (unsigned __int16)v456;
        int v224 = v217[46] * (unsigned __int16)v499;
        int v75 = v217[47] * (unsigned __int16)v470;
        int v76 = v217[48] * (unsigned __int16)v479;
        int v77 = v217[49] * (unsigned __int16)v520;
        int v78 = v217[50] * (unsigned __int16)v525;
        int v79 = v217[51] * (unsigned __int16)v505;
        int v80 = v217[53] * (unsigned __int16)v515;
        int v81 = v217[54] * (unsigned __int16)v535;
        int v82 = v217[55] * (unsigned __int16)v540;
        int v83 = v217[56] * (unsigned __int16)v545;
        int v546 = (*v217 * (unsigned __int16)*(v23 - 24)) << v22;
        int v541 = (v217[1] * (unsigned __int16)*(v23 - 22)) << v22;
        int v536 = (v217[2] * (unsigned __int16)*(v23 - 21)) << v22;
        int v516 = (v217[3] * (unsigned __int16)*(v23 - 15)) << v22;
        int v500 = (v217[4] * (unsigned __int16)*(v23 - 14)) << v22;
        int v60 = (v217[5] * (unsigned __int16)*(v23 - 4)) << v22;
        int v490 = (v217[6] * (unsigned __int16)*(v23 - 3)) << v22;
        int v471 = (v217[7] * (unsigned __int16)v23[11]) << v22;
        int v385 = (v217[8] * (unsigned __int16)*(v23 - 23)) << v22;
        int v390 = (v217[9] * (unsigned __int16)*(v23 - 20)) << v22;
        int v307 = (v217[10] * (unsigned __int16)*(v23 - 16)) << v22;
        int v311 = (v217[11] * (unsigned __int16)*(v23 - 13)) << v22;
        int v314 = (v217[12] * (unsigned __int16)*(v23 - 5)) << v22;
        int v303 = (v217[13] * (unsigned __int16)*(v23 - 2)) << v22;
        int v322 = (v217[14] * (unsigned __int16)v23[10]) << v22;
        int v318 = (v217[15] * (unsigned __int16)v23[12]) << v22;
        int v462 = (v217[16] * (unsigned __int16)v578) << v22;
        int v457 = (v217[17] * (unsigned __int16)*(v23 - 17)) << v22;
        int v452 = (v217[18] * (unsigned __int16)*(v23 - 12)) << v22;
        int v447 = (v217[19] * (unsigned __int16)*(v23 - 6)) << v22;
        int v442 = (v217[20] * (unsigned __int16)*(v23 - 1)) << v22;
        int v438 = (v217[21] * (unsigned __int16)v23[9]) << v22;
        int v434 = (v217[22] * (unsigned __int16)v23[13]) << v22;
        int v430 = (v217[23] * (unsigned __int16)v23[24]) << v22;
        int v242 = (v217[24] * (unsigned __int16)v582) << v22;
        int v275 = v276 << v22;
        int v280 = (v217[27] * (unsigned __int16)v395) << v22;
        int v286 = v271 << v22;
        int v300 = v260 << v22;
        int v292 = v265 << v22;
        int v296 = (v217[31] * (unsigned __int16)v23[25]) << v22;
        int v526 = (v217[32] * (unsigned __int16)v408) << v22;
        int v521 = (v217[33] * (unsigned __int16)v415) << v22;
        int v506 = (v217[34] * (unsigned __int16)v420) << v22;
        int v495 = (v217[35] * (unsigned __int16)v424) << v22;
        int v84 = v255 << v22;
        int v480 = (v217[37] * (unsigned __int16)v467) << v22;
        int v475 = (v217[38] * (unsigned __int16)v474) << v22;
        int v425 = v251 << v22;
        int v63 = v247 << v22;
        int v246 = v239 << v22;
        int v65 = v232 << v22;
        int v264 = v228 << v22;
        int v270 = (v217[44] * (unsigned __int16)v484) << v22;
        int v74 = v75 << v22;
        int v375 = v76 << v22;
        int v364 = v78 << v22;
        int v369 = v77 << v22;
        int v358 = v79 << v22;
        int v341 = v80 << v22;
        int v348 = (v217[52] * (unsigned __int16)v510) << v22;
        int v250 = v81 << v22;
        int v254 = v82 << v22;
        int v259 = v224 << v22;
        int v66 = v83 << v22;
        int v67 = (v217[57] * (unsigned __int16)v562) << v22;
        int v68 = (v217[58] * (unsigned __int16)v566) << v22;
        int v69 = (v217[59] * (unsigned __int16)v550) << v22;
        int v70 = (v217[60] * (unsigned __int16)v554) << v22;
        int v71 = (v217[61] * (unsigned __int16)v558) << v22;
        int v72 = (v217[62] * (unsigned __int16)v570) << v22;
        int v64 = v235 << v22;
        int v73 = (v217[63] * (unsigned __int16)v574) << v22;
        int v62 = v84;
        int v61 = (v217[25] * (unsigned __int16)v401) << v22;
      }
      int v585 = v63 - v242 - (v66 + ((__int16)v66 >> 1));
      int v579 = v246 - v61 - (v67 + ((__int16)v67 >> 1));
      int v575 = v64 - v275 - (v68 + ((__int16)v68 >> 1));
      int v571 = v65 - v280 - (v69 + ((__int16)v69 >> 1));
      int v567 = v270 - v286 - (v70 + ((__int16)v70 >> 1));
      int v563 = v264 - v292 - (v71 + ((__int16)v71 >> 1));
      int v559 = v259 - v300 - (v72 + ((__int16)v72 >> 1));
      int v555 = v74 - v296 - (v73 + ((__int16)v73 >> 1));
      int v551 = v546 + v526;
      int v511 = v546 - v526;
      int v547 = v541 + v521;
      int v527 = v541 - v521;
      int v542 = v536 + v506;
      int v522 = v536 - v506;
      int v537 = v516 + v495;
      int v517 = v516 - v495;
      int v507 = v500 + v62;
      int v485 = v500 - v62;
      int v416 = v246 + v67 + ((__int16)v246 >> 1);
      int v501 = v60 + v480;
      int v481 = v60 - v480;
      int v496 = v490 + v475;
      int v476 = v490 - v475;
      int v491 = v471 + v425;
      int v472 = v471 - v425;
      int v404 = v67 - (v61 + ((__int16)v61 >> 1));
      int v411 = v68 - (v275 + ((__int16)v275 >> 1));
      int v98 = v64;
      int v99 = v64 + v68 + ((__int16)v64 >> 1);
      int v100 = v69 - (v280 + ((__int16)v280 >> 1));
      int v101 = v65 + v69 + ((__int16)v65 >> 1);
      int v381 = v70 - (v286 + ((__int16)v286 >> 1));
      int v102 = v270 + v70 + ((__int16)v270 >> 1);
      int v354 = v71 - (v292 + ((__int16)v292 >> 1));
      int v336 = v264 + v71 + ((__int16)v264 >> 1);
      int v103 = v72 - (v300 + ((__int16)v300 >> 1));
      int v326 = v259 + v72 + ((__int16)v259 >> 1);
      int v104 = v74 + v73 + ((__int16)v74 >> 1);
      int v426 = ((__int16)v462 >> 1) - v375;
      int v463 = v462 + ((__int16)v375 >> 1);
      int v376 = ((__int16)v457 >> 1) - v369;
      int v105 = v457 + ((__int16)v369 >> 1);
      int v371 = ((__int16)v452 >> 1) - v364;
      int v453 = v452 + ((__int16)v364 >> 1);
      int v458 = v105;
      int v365 = ((__int16)v447 >> 1) - v358;
      int v106 = v447 + ((__int16)v358 >> 1);
      int v359 = ((__int16)v442 >> 1) - v348;
      int v443 = v442 + ((__int16)v348 >> 1);
      int v349 = ((__int16)v438 >> 1) - v341;
      int v439 = v438 + ((__int16)v341 >> 1);
      int v343 = ((__int16)v434 >> 1) - v250;
      int v107 = ((__int16)v430 >> 1) - v254;
      int v431 = v430 + ((__int16)v254 >> 1);
      int v435 = v434 + ((__int16)v250 >> 1);
      int v108 = v280 + v65 + v311;
      int v109 = v296 + v74 + v318;
      int v110 = v66 - (v242 + ((__int16)v242 >> 1)) + v385;
      int v111 = v63 + v66 + ((__int16)v63 >> 1) - v385;
      int v112 = v404 + v390;
      int v113 = v416 - v390;
      int v386 = v242 + v63 + v385 + ((__int16)v385 >> 1);
      int v391 = v61 + v246 + v390 + ((__int16)v390 >> 1);
      int v114 = v411 + v307;
      int v115 = v99 - v307;
      int v116 = v275 + v98 + v307 + ((__int16)v307 >> 1);
      int v117 = v100 + v311;
      int v118 = v101 - v311;
      int v119 = v381 + v314;
      int v120 = v102 - v314;
      int v398 = v108 + ((__int16)v311 >> 1);
      int v405 = v286 + v270 + v314 + ((__int16)v314 >> 1);
      int v121 = v354 + v303;
      int v122 = v336 - v303;
      int v123 = v103 + v322;
      int v124 = v326 - v322;
      int v412 = v292 + v264 + v303 + ((__int16)v303 >> 1);
      int v417 = v300 + v259 + v322 + ((__int16)v322 >> 1);
      int v125 = v73 - (v296 + ((__int16)v296 >> 1)) + v318;
      int v126 = v104 - v318;
      int v421 = v109 + ((__int16)v318 >> 1);
      int v468 = v511 + v426;
      int v382 = v511 - v426;
      int v427 = v527 + v376;
      int v377 = v527 - v376;
      int v528 = v522 + v371;
      int v372 = v522 - v371;
      int v523 = v517 + v365;
      int v366 = v517 - v365;
      int v518 = v485 + v359;
      int v355 = v485 - v359;
      int v486 = v481 + v349;
      int v350 = v481 - v349;
      int v482 = v476 + v343;
      int v337 = v476 - v343;
      int v477 = v472 + v107;
      int v473 = v472 - v107;
      int v360 = v110 + ((__int16)v111 >> 2);
      int v323 = ((__int16)v110 >> 2) - v111;
      int v344 = v112 + ((__int16)v113 >> 2);
      int v319 = ((__int16)v112 >> 2) - v113;
      int v312 = ((__int16)v114 >> 2) - v115;
      int v315 = v114 + ((__int16)v115 >> 2);
      int v308 = ((__int16)v117 >> 2) - v118;
      int v327 = v119 + ((__int16)v120 >> 2);
      int v330 = v117 + ((__int16)v118 >> 2);
      int v304 = ((__int16)v119 >> 2) - v120;
      int v127 = v121 + ((__int16)v122 >> 2);
      int v301 = ((__int16)v121 >> 2) - v122;
      int v128 = v123 + ((__int16)v124 >> 2);
      int v298 = ((__int16)v123 >> 2) - v124;
      int v129 = v125 + ((__int16)v126 >> 2);
      int v267 = ((__int16)v125 >> 2) - v126;
      int v288 = v551 + v463;
      int v130 = v551 - v463;
      int v464 = v547 + v458;
      int v131 = v547 - v458;
      int v459 = v542 + v453;
      int v132 = v542 - v453;
      int v454 = v537 + v106;
      int v282 = v507 + v443;
      int v133 = v507 - v443;
      int v241 = v501 + v439;
      int v134 = v501 - v439;
      int v237 = v496 + v435;
      int v135 = v496 - v435;
      int v136 = v585 + ((__int16)v386 >> 2);
      int v137 = v386 - ((__int16)v585 >> 2);
      int v138 = v579 + ((__int16)v391 >> 2);
      int v139 = v391 - ((__int16)v579 >> 2);
      int v140 = v575 + ((__int16)v116 >> 2);
      int v141 = v116 - ((__int16)v575 >> 2);
      int v142 = v571 + ((__int16)v398 >> 2);
      int v143 = v398 - ((__int16)v571 >> 2);
      int v144 = v567 + ((__int16)v405 >> 2);
      int v145 = v405 - ((__int16)v567 >> 2);
      int v146 = v563 + ((__int16)v412 >> 2);
      int v147 = v412 - ((__int16)v563 >> 2);
      int v148 = v559 + ((__int16)v417 >> 2);
      int v149 = v417 - ((__int16)v559 >> 2);
      int v150 = v555 + ((__int16)v421 >> 2);
      int v151 = v421 - ((__int16)v555 >> 2);
      int v512 = v130 + v136;
      int v508 = v130 - v136;
      int v568 = v131 + v138;
      int v586 = v131 - v138;
      int v418 = v132 + v140;
      int v422 = v132 - v140;
      int v552 = v537 - v106 + v142;
      int v548 = v537 - v106 - v142;
      int v497 = v133 + v144;
      int v502 = v133 - v144;
      int v277 = v134 + v146;
      int v556 = v134 - v146;
      int v406 = v135 + v148;
      int v413 = v135 - v148;
      int v543 = v491 - v431 + v150;
      int v243 = v491 - v431 - v150;
      int v444 = v382 + v360;
      int v448 = v382 - v360;
      int v564 = v377 + v344;
      int v580 = v377 - v344;
      int v345 = v372 + v315;
      int v361 = v372 - v315;
      int v152 = v366 + v330;
      int v230 = v366 - v330;
      int v273 = v350 + v127;
      int v257 = v350 - v127;
      int v331 = v337 + v128;
      int v351 = v337 - v128;
      int v153 = v473 + v129;
      int v538 = v473 - v129;
      int v154 = v468 + v323;
      int v155 = v468 - v323;
      int v560 = v427 + v319;
      int v576 = v427 - v319;
      int v316 = v528 + v312;
      int v338 = v528 - v312;
      int v156 = v523 + v308;
      int v226 = v523 - v308;
      int v157 = v518 + v304;
      int v158 = v518 - v304;
      int v293 = v486 + v301;
      int v262 = v486 - v301;
      int v309 = v482 + v298;
      int v324 = v482 - v298;
      int v159 = v477 + v267;
      int v160 = v477 - v267;
      int v161 = v288 + v137;
      int v162 = v288 - v137;
      int v163 = v464 + v139;
      int v572 = v464 - v139;
      int v302 = v459 + v141;
      int v320 = v459 - v141;
      int v164 = v454 + v143;
      int v165 = v454 - v143;
      int v166 = v282 + v145;
      int v167 = v282 - v145;
      int v283 = v241 - v147;
      int v289 = v241 + v147;
      int v168 = v491 + v431 + v151;
      int v169 = v491 + v431 - v151;
      int v465 = v289 - v164 - (v168 + ((__int16)v168 >> 1));
      int v460 = v293 - v156 - (v477 + v267 + ((v477 + v267) << 16 >> 17));
      int v492 = v273 - v152 - (v153 + ((__int16)v153 >> 1));
      int v487 = v277 - v552 - (v543 + ((__int16)v543 >> 1));
      int v483 = v556 - v548 - (v243 + ((__int16)v243 >> 1));
      int v478 = v257 - v230 - (v538 + ((__int16)v538 >> 1));
      int v469 = v283 - v165 - (v169 + ((__int16)v169 >> 1));
      int v455 = v161 + v166;
      int v305 = v161 - v166;
      int v529 = v154 + v157;
      int v399 = v154 - v157;
      int v524 = v444 + v355 + v327;
      int v392 = v444 - (v355 + v327);
      int v519 = v512 + v497;
      int v387 = v512 - v497;
      int v513 = v508 + v502;
      int v383 = v508 - v502;
      int v509 = v448 + v355 - v327;
      int v378 = v448 - (v355 - v327);
      int v503 = v155 + v158;
      int v373 = v155 - v158;
      int v498 = v162 + v167;
      int v367 = v162 - v167;
      int v268 = v164;
      int v328 = v168 + v163 - (v164 + ((__int16)v164 >> 1));
      int v248 = v152;
      int v356 = v159 + v560 - (v156 + ((__int16)v156 >> 1));
      int v449 = v153 + v564 - (v152 + ((__int16)v152 >> 1));
      int v445 = v543 + v568 - (v552 + ((__int16)v552 >> 1));
      int v440 = v243 + v586 - (v548 + ((__int16)v548 >> 1));
      int v436 = v538 + v580 - (v230 + ((__int16)v230 >> 1));
      int v432 = v160 + v576 - (v226 + ((__int16)v226 >> 1));
      int v170 = v165;
      int v428 = v169 + v572 - (v165 + ((__int16)v165 >> 1));
      int v171 = v277 + v543 + ((__int16)v277 >> 1);
      int v172 = v556 + v243 + ((__int16)v556 >> 1);
      int v173 = v257 + v538 + ((__int16)v257 >> 1);
      int v174 = v283 + v169 + ((__int16)v283 >> 1);
      int v244 = ((__int16)v302 >> 1) - (v237 + v149);
      int v544 = v302 + ((__int16)(v237 + v149) >> 1);
      int v539 = v316 + ((__int16)v309 >> 1);
      int v175 = ((__int16)v345 >> 1) - v331;
      int v346 = v345 + ((__int16)v331 >> 1);
      int v176 = ((__int16)v418 >> 1) - v406;
      int v419 = v418 + ((__int16)v406 >> 1);
      int v177 = ((__int16)v422 >> 1) - v413;
      int v423 = v422 + ((__int16)v413 >> 1);
      int v178 = ((__int16)v361 >> 1) - v351;
      int v414 = v361 + ((__int16)v351 >> 1);
      int v179 = ((__int16)v338 >> 1) - v324;
      int v407 = v338 + ((__int16)v324 >> 1);
      int v180 = ((__int16)v320 >> 1) - (v237 - v149);
      int v362 = v320 + ((__int16)(v237 - v149) >> 1);
      int v181 = v289 + v168 + ((__int16)v289 >> 1) - v163;
      int v182 = v268 + v289 + v163 + ((__int16)v163 >> 1);
      int v183 = v293 + v159 + ((__int16)v293 >> 1) - v560;
      int v184 = v156 + v293 + v560 + ((__int16)v560 >> 1);
      int v185 = v273 + v153 + ((__int16)v273 >> 1) - v564;
      int v186 = v248 + v273 + v564 + ((__int16)v564 >> 1);
      int v339 = v171 - v568;
      int v187 = v552 + v277 + v568 + ((__int16)v568 >> 1);
      int v332 = v172 - v586;
      int v188 = v548 + v556 + v586 + ((__int16)v586 >> 1);
      int v189 = v173 - v580;
      int v190 = v230 + v257 + v580 + ((__int16)v580 >> 1);
      int v191 = v262 + v160 + ((__int16)v262 >> 1) - v576;
      int v192 = v226 + v262 + v576 + ((__int16)v576 >> 1);
      int v193 = v174 - v572;
      int v194 = v170 + v283 + v572 + ((__int16)v572 >> 1);
      int v587 = v305 + v244;
      int v561 = v305 - v244;
      int v195 = ((__int16)v316 >> 1) - v309;
      int v581 = v399 + v195;
      int v557 = v399 - v195;
      int v577 = v392 + v175;
      int v553 = v392 - v175;
      int v573 = v387 + v176;
      int v549 = v387 - v176;
      int v569 = v383 + v177;
      int v352 = v383 - v177;
      int v565 = v378 + v178;
      int v379 = v378 - v178;
      int v388 = v373 + v179;
      int v374 = v373 - v179;
      int v384 = v367 + v180;
      int v368 = v367 - v180;
      int v400 = v328 + ((__int16)v181 >> 2);
      int v329 = ((__int16)v328 >> 2) - v181;
      int v393 = v356 + ((__int16)v183 >> 2);
      int v357 = ((__int16)v356 >> 2) - v183;
      int v294 = v465 + ((__int16)v182 >> 2);
      int v196 = v182 - ((__int16)v465 >> 2);
      int v466 = v460 + ((__int16)v184 >> 2);
      int v321 = v184 - ((__int16)v460 >> 2);
      int v325 = v196;
      int v278 = v492 + ((__int16)v186 >> 2);
      int v197 = v186 - ((__int16)v492 >> 2);
      int v493 = v487 + ((__int16)v187 >> 2);
      int v313 = v187 - ((__int16)v487 >> 2);
      int v317 = v197;
      int v198 = v483 + ((__int16)v188 >> 2);
      int v199 = v478 + ((__int16)v190 >> 2);
      int v306 = v190 - ((__int16)v478 >> 2);
      int v310 = v188 - ((__int16)v483 >> 2);
      int v200 = v262 - v226 - (v160 + ((__int16)v160 >> 1));
      int v201 = v200 + ((__int16)v192 >> 2);
      int v202 = v192 - ((__int16)v200 >> 2);
      int v203 = v469 + ((__int16)v194 >> 2);
      int v299 = v194 - ((__int16)v469 >> 2);
      int v204 = v449 + ((__int16)v185 >> 2);
      int v290 = ((__int16)v449 >> 2) - v185;
      int v205 = v445 + ((__int16)v339 >> 2);
      int v284 = ((__int16)v445 >> 2) - v339;
      int v206 = v440 + ((__int16)v332 >> 2);
      int v333 = ((__int16)v440 >> 2) - v332;
      int v207 = v436 + ((__int16)v189 >> 2);
      int v274 = ((__int16)v436 >> 2) - v189;
      int v208 = v432 + ((__int16)v191 >> 2);
      int v340 = ((__int16)v432 >> 2) - v191;
      int v209 = v428 + ((__int16)v193 >> 2);
      int v210 = ((__int16)v428 >> 2) - v193;
      int v211 = v513 + v423;
      int v212 = v513 - v423;
      int v213 = v503 + v407;
      int v450 = v201 + v503 - v407;
      int v488 = v503 - v407 - v201;
      int v214 = v393 + v557;
      int v504 = v557 - v393;
      int v394 = v205 + v549;
      int v514 = v549 - v205;
      int8x16_t result = (v306 + v509 + v414);
      *unsigned int v531 = (((v325 + v455 + v544) << 16) + 0x200000) >> 22;
      v531[1] = (((v321 + v529 + v539) << 16) + 0x200000) >> 22;
      v531[2] = (((v317 + v524 + v346) << 16) + 0x200000) >> 22;
      v531[3] = (((v313 + v519 + v419) << 16) + 0x200000) >> 22;
      v531[4] = (((v310 + v211) << 16) + 0x200000) >> 22;
      v531[5] = ((result << 16) + 0x200000) >> 22;
      v531[6] = (((v202 + v213) << 16) + 0x200000) >> 22;
      v531[7] = (((v299 + v498 + v362) << 16) + 0x200000) >> 22;
      v531[16] = (((v329 + v587) << 16) + 0x200000) >> 22;
      v531[17] = (((v357 + v581) << 16) + 0x200000) >> 22;
      v531[18] = (((v290 + v577) << 16) + 0x200000) >> 22;
      v531[19] = (((v284 + v573) << 16) + 0x200000) >> 22;
      v531[20] = (((v333 + v569) << 16) + 0x200000) >> 22;
      v531[21] = (((v274 + v565) << 16) + 0x200000) >> 22;
      v531[22] = (((v340 + v388) << 16) + 0x200000) >> 22;
      v531[23] = (((v210 + v384) << 16) + 0x200000) >> 22;
      v531[32] = (((v400 + v561) << 16) + 0x200000) >> 22;
      v531[33] = ((v214 << 16) + 0x200000) >> 22;
      v531[34] = (((v204 + v553) << 16) + 0x200000) >> 22;
      v531[35] = ((v394 << 16) + 0x200000) >> 22;
      v531[36] = (((v206 + v352) << 16) + 0x200000) >> 22;
      v531[37] = (((v207 + v379) << 16) + 0x200000) >> 22;
      v531[38] = (((v208 + v374) << 16) + 0x200000) >> 22;
      v531[39] = (((v209 + v368) << 16) + 0x200000) >> 22;
      v531[48] = (((v294 + v455 - v544) << 16) + 0x200000) >> 22;
      v531[49] = (((v466 + v529 - v539) << 16) + 0x200000) >> 22;
      v531[50] = (((v278 + v524 - v346) << 16) + 0x200000) >> 22;
      v531[51] = (((v493 + v519 - v419) << 16) + 0x200000) >> 22;
      v531[52] = (((v198 + v212) << 16) + 0x200000) >> 22;
      v531[53] = (((v199 + v509 - v414) << 16) + 0x200000) >> 22;
      v531[54] = ((v450 << 16) + 0x200000) >> 22;
      v531[55] = (((v203 + v498 - v362) << 16) + 0x200000) >> 22;
      v531[64] = (((v455 - v544 - v294) << 16) + 0x200000) >> 22;
      v531[65] = (((v529 - v539 - v466) << 16) + 0x200000) >> 22;
      v531[66] = (((v524 - v346 - v278) << 16) + 0x200000) >> 22;
      v531[67] = (((v519 - v419 - v493) << 16) + 0x200000) >> 22;
      v531[68] = (((v212 - v198) << 16) + 0x200000) >> 22;
      v531[69] = (((v509 - v414 - v199) << 16) + 0x200000) >> 22;
      v531[70] = ((v488 << 16) + 0x200000) >> 22;
      v531[71] = (((v498 - v362 - v203) << 16) + 0x200000) >> 22;
      v531[80] = (((v561 - v400) << 16) + 0x200000) >> 22;
      v531[81] = ((v504 << 16) + 0x200000) >> 22;
      v531[82] = (((v553 - v204) << 16) + 0x200000) >> 22;
      v531[83] = ((v514 << 16) + 0x200000) >> 22;
      v531[84] = (((v352 - v206) << 16) + 0x200000) >> 22;
      v531[85] = (((v379 - v207) << 16) + 0x200000) >> 22;
      v531[86] = (((v374 - v208) << 16) + 0x200000) >> 22;
      v531[87] = (((v368 - v209) << 16) + 0x200000) >> 22;
      v531[96] = (((v587 - v329) << 16) + 0x200000) >> 22;
      v531[97] = (((v581 - v357) << 16) + 0x200000) >> 22;
      v531[98] = (((v577 - v290) << 16) + 0x200000) >> 22;
      v531[99] = (((v573 - v284) << 16) + 0x200000) >> 22;
      v531[100] = (((v569 - v333) << 16) + 0x200000) >> 22;
      v531[101] = (((v565 - v274) << 16) + 0x200000) >> 22;
      v531[102] = (((v388 - v340) << 16) + 0x200000) >> 22;
      v531[103] = (((v384 - v210) << 16) + 0x200000) >> 22;
      v531[112] = (((v455 + v544 - v325) << 16) + 0x200000) >> 22;
      v531[113] = (((v529 + v539 - v321) << 16) + 0x200000) >> 22;
      v531[114] = (((v524 + v346 - v317) << 16) + 0x200000) >> 22;
      v531[115] = (((v519 + v419 - v313) << 16) + 0x200000) >> 22;
      v531[116] = (((v211 - v310) << 16) + 0x200000) >> 22;
      v531[117] = (((v509 + v414 - v306) << 16) + 0x200000) >> 22;
      v531[118] = (((v213 - v202) << 16) + 0x200000) >> 22;
      v531[119] = (((v498 + v362 - v299) << 16) + 0x200000) >> 22;
      unsigned int v22 = v530;
      uint64_t v3 = v534;
      unsigned int v5 = v533;
      int v23 = v532;
    }
    v5 >>= 1;
    v3 += 2;
    v23 += 64;
  }
  while (v3 != 8);
  return result;
}

uint64_t sub_2219EA0A8(uint64_t result, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = *(void *)(result + 40);
  unsigned int v5 = *(unsigned __int8 *)(v4 + 52);
  unsigned __int8 v6 = *(unsigned char *)(v4 + 55);
  uint64_t v7 = *(void *)(result + 56);
  int v8 = *(unsigned __int8 *)(result + 1422192);
  a2[30] = 0u;
  a2[31] = 0u;
  a2[28] = 0u;
  a2[29] = 0u;
  a2[26] = 0u;
  a2[27] = 0u;
  a2[24] = 0u;
  a2[25] = 0u;
  a2[22] = 0u;
  a2[23] = 0u;
  a2[20] = 0u;
  a2[21] = 0u;
  a2[18] = 0u;
  a2[19] = 0u;
  unsigned int v9 = v6;
  a2[16] = 0u;
  a2[17] = 0u;
  unsigned int v10 = v6 / 6u;
  uint64_t v11 = v6 % 6u;
  a2[14] = 0u;
  a2[15] = 0u;
  a2[12] = 0u;
  a2[13] = 0u;
  int8x16_t v217 = (unsigned __int16 *)((char *)&unk_221A38470 + 128 * v11);
  a2[10] = 0u;
  a2[11] = 0u;
  unsigned int v12 = (__int16 *)(a3 + (v11 << 7));
  char v13 = 6 - v10;
  a2[8] = 0u;
  a2[9] = 0u;
  int v14 = 1 << (5 - v10);
  a2[6] = 0u;
  a2[7] = 0u;
  unsigned int v15 = (unsigned __int16)(v10 - 6);
  BOOL v16 = v9 >= 0x24;
  BOOL v17 = v9 < 0x24;
  if (v16) {
    int v14 = 0;
  }
  a2[4] = 0uLL;
  a2[5] = 0uLL;
  if (v16) {
    char v13 = 0;
  }
  if (!v16) {
    unsigned int v15 = 0;
  }
  int v220 = v8;
  if (v8) {
    int v18 = v17;
  }
  else {
    int v18 = 1;
  }
  int v218 = v18;
  a2[2] = 0uLL;
  a2[3] = 0uLL;
  *a2 = 0uLL;
  a2[1] = 0uLL;
  if (v8) {
    int v19 = v14;
  }
  else {
    int v19 = 0;
  }
  int v216 = v19;
  if (v8) {
    char v20 = v13;
  }
  else {
    char v20 = 0;
  }
  char v215 = v20;
  if (v8) {
    unsigned int v21 = v15;
  }
  else {
    unsigned int v21 = 0;
  }
  unsigned int v222 = v21;
  if (v8) {
    unsigned int v22 = v10;
  }
  else {
    unsigned int v22 = v10 - 2;
  }
  int v23 = (__int16 *)(v7 + 80);
  uint64_t v219 = v12;
  do
  {
    if (v5)
    {
      unsigned int v533 = v5;
      int v24 = *(v23 - 24);
      int v25 = *(v23 - 21);
      unsigned int v531 = (_WORD *)a2 + *(__int16 *)((char *)&word_221A38460 + v3);
      int v578 = *(v23 - 16);
      int v582 = *(v23 - 9);
      int v441 = v23[6];
      int v479 = v23[14];
      int v545 = v23[28];
      int v26 = *(v23 - 23);
      int v27 = *(v23 - 20);
      int v28 = *(v23 - 10);
      int v401 = *(v23 - 3);
      int v408 = *(v23 - 2);
      int v494 = v23[13];
      int v520 = v23[21];
      int v562 = v23[29];
      int v29 = *(v23 - 22);
      int v30 = *(v23 - 17);
      int v31 = *(v23 - 8);
      int v389 = *(v23 - 1);
      int v415 = v23[5];
      int v420 = v23[7];
      int v446 = v23[15];
      int v525 = v23[22];
      int v566 = v23[34];
      int v32 = *(v23 - 19);
      int v33 = *(v23 - 15);
      int v34 = *(v23 - 4);
      int v395 = v23[4];
      int v424 = v23[12];
      int v456 = v23[20];
      int v505 = v23[27];
      int v550 = v23[35];
      int v35 = *(v23 - 18);
      int v36 = *(v23 - 11);
      int v37 = *v23;
      int v433 = v23[8];
      int v461 = v23[16];
      int v484 = v23[23];
      int v510 = v23[30];
      int v554 = v23[36];
      int v38 = *(v23 - 14);
      int v39 = v23[1];
      int v437 = v23[9];
      int v467 = v23[17];
      int v489 = v23[24];
      int v515 = v23[31];
      int v558 = v23[37];
      int v40 = *(v23 - 13);
      int v41 = *(v23 - 6);
      int v42 = v23[2];
      int v451 = v23[10];
      int v474 = v23[18];
      int v499 = v23[25];
      int v535 = v23[32];
      int v570 = v23[38];
      int v43 = *(v23 - 12);
      int v44 = *(v23 - 5);
      int v45 = v23[3];
      int v429 = v23[19];
      int v470 = v23[26];
      int v540 = v23[33];
      unsigned int v46 = v222;
      if (!v220) {
        unsigned int v46 = v22;
      }
      int v532 = v23;
      int v574 = v23[39];
      uint64_t v534 = v3;
      unsigned int v530 = v46;
      if (v220)
      {
        int v47 = v23[11];
        int v48 = *(v23 - 7);
        int v49 = v582;
        if (v218)
        {
          int v380 = v216 + v219[2] * v29;
          int v363 = v216 + v219[7] * v43;
          int v347 = v216 + v219[10] * v30;
          int v334 = v216 + v219[12] * v36;
          int v295 = v216 + v219[19] * v34;
          int v285 = v216 + v219[21] * v39;
          int v291 = v216 + v219[20] * v37;
          int v279 = v216 + v219[22] * v42;
          int v583 = v216 + v219[25] * v401;
          int v50 = v216 + v219[27] * v395;
          int v396 = v216 + v219[28] * v433;
          int v402 = v216 + v219[26] * v389;
          int v263 = v216 + v219[30] * v451;
          int v269 = v216 + v219[29] * v437;
          int v258 = v216 + v219[31] * v47;
          int v51 = v216 + v219[32] * v408;
          int v409 = v216 + v219[36] * v461;
          int v249 = v216 + v219[40] * v441;
          int v253 = v216 + v219[39] * v429;
          int v245 = v216 + v219[41] * v494;
          int v234 = v216 + v219[43] * v456;
          int v238 = v216 + v219[42] * v446;
          int v227 = v216 + v219[46] * v499;
          int v231 = v216 + v219[45] * v489;
          int v223 = v216 + v219[47] * v470;
          int v52 = v216 + v219[48] * v479;
          int v53 = v216 + v219[49] * v520;
          int v54 = v216 + v219[50] * v525;
          int v55 = v216 + v219[51] * v505;
          int v56 = v216 + v219[53] * v515;
          int v57 = v216 + v219[54] * v535;
          int v58 = v216 + v219[55] * v540;
          int v59 = v216 + v219[56] * v545;
          int v546 = (*v219 * v24 + v216) >> v215;
          int v541 = (v216 + v219[1] * v26) >> v215;
          int v536 = v380 >> v215;
          int v516 = (v216 + v219[3] * v32) >> v215;
          int v500 = (v216 + v219[4] * v35) >> v215;
          int v60 = (v216 + v219[5] * v38) >> v215;
          int v490 = (v216 + v219[6] * v40) >> v215;
          int v471 = v363 >> v215;
          int v385 = (v216 + v219[8] * v25) >> v215;
          int v390 = (v216 + v219[9] * v27) >> v215;
          int v307 = v347 >> v215;
          int v311 = (v216 + v219[11] * v33) >> v215;
          int v314 = v334 >> v215;
          int v303 = (v216 + v219[13] * v48) >> v215;
          int v322 = (v216 + v219[14] * v41) >> v215;
          int v318 = (v216 + v219[15] * v44) >> v215;
          int v462 = (v216 + v219[16] * v578) >> v215;
          int v457 = (v216 + v219[17] * v28) >> v215;
          int v452 = (v216 + v219[18] * v31) >> v215;
          int v447 = v295 >> v215;
          int v442 = v291 >> v215;
          int v438 = v285 >> v215;
          int v434 = v279 >> v215;
          int v430 = (v216 + v219[23] * v45) >> v215;
          int v242 = (v216 + v219[24] * v49) >> v215;
          int v61 = v583 >> v215;
          int v275 = v402 >> v215;
          int v280 = v50 >> v215;
          int v286 = v396 >> v215;
          int v300 = v263 >> v215;
          int v292 = v269 >> v215;
          int v296 = v258 >> v215;
          int v526 = v51 >> v215;
          int v521 = (v216 + v219[33] * v415) >> v215;
          int v506 = (v216 + v219[34] * v420) >> v215;
          int v495 = (v216 + v219[35] * v424) >> v215;
          int v62 = v409 >> v215;
          int v480 = (v216 + v219[37] * v467) >> v215;
          int v475 = (v216 + v219[38] * v474) >> v215;
          int v425 = v253 >> v215;
          int v63 = v249 >> v215;
          int v246 = v245 >> v215;
          int v64 = v238 >> v215;
          int v65 = v234 >> v215;
          int v270 = (v216 + v219[44] * v484) >> v215;
          int v264 = v231 >> v215;
          int v259 = v227 >> v215;
          int v375 = v52 >> v215;
          int v369 = v53 >> v215;
          int v364 = v54 >> v215;
          int v358 = v55 >> v215;
          int v348 = (v216 + v219[52] * v510) >> v215;
          int v341 = v56 >> v215;
          int v250 = v57 >> v215;
          int v254 = v58 >> v215;
          int v66 = v59 >> v215;
          int v67 = (v216 + v219[57] * v562) >> v215;
          int v68 = (v216 + v219[58] * v566) >> v215;
          int v69 = (v216 + v219[59] * v550) >> v215;
          int v70 = (v216 + v219[60] * v554) >> v215;
          int v71 = (v216 + v219[61] * v558) >> v215;
          int v72 = (v216 + v219[62] * v570) >> v215;
          int v73 = (v216 + v219[63] * v574) >> v215;
          int v74 = v223 >> v215;
        }
        else
        {
          int v85 = v219[2] * v29;
          int v370 = v219[7] * v43;
          int v353 = v219[10] * v30;
          int v342 = v219[12] * v36;
          int v335 = v219[14] * v41;
          int v297 = v219[19] * v34;
          int v287 = v219[21] * v39;
          int v281 = v219[22] * v42;
          int v584 = v219[25] * v401;
          int v86 = v219[27] * v395;
          int v397 = v219[28] * v433;
          int v403 = v219[26] * v389;
          int v266 = v219[30] * v451;
          int v272 = v219[29] * v437;
          int v261 = v219[31] * v47;
          int v87 = v219[32] * v408;
          int v88 = v219[36] * v461;
          int v410 = v219[39] * v429;
          int v252 = v219[41] * v494;
          int v256 = v219[40] * v441;
          int v236 = v219[43] * v456;
          int v240 = v219[42] * v446;
          int v229 = v219[46] * v499;
          int v233 = v219[45] * v489;
          int v225 = v219[47] * v470;
          int v89 = *v219 * v24;
          int v90 = v219[48] * v479;
          int v91 = v219[49] * v520;
          int v92 = v219[50] * v525;
          int v93 = v219[51] * v505;
          int v94 = v219[53] * v515;
          int v95 = v219[54] * v535;
          int v96 = v219[55] * v540;
          int v97 = v219[56] * v545;
          int v546 = v89 << v222;
          int v541 = (v219[1] * v26) << v222;
          int v536 = v85 << v222;
          int v516 = (v219[3] * v32) << v222;
          int v500 = (v219[4] * v35) << v222;
          int v60 = (v219[5] * v38) << v222;
          int v490 = (v219[6] * v40) << v222;
          int v471 = v370 << v222;
          int v385 = (v219[8] * v25) << v222;
          int v390 = (v219[9] * v27) << v222;
          int v307 = v353 << v222;
          int v311 = (v219[11] * v33) << v222;
          int v303 = (v219[13] * v48) << v222;
          int v322 = v335 << v222;
          int v314 = v342 << v222;
          int v318 = (v219[15] * v44) << v222;
          int v462 = (v219[16] * v578) << v222;
          int v452 = (v219[18] * v31) << v222;
          int v457 = (v219[17] * v28) << v222;
          int v442 = (v219[20] * v37) << v222;
          int v447 = v297 << v222;
          int v434 = v281 << v222;
          int v438 = v287 << v222;
          int v430 = (v219[23] * v45) << v222;
          int v242 = (v219[24] * v49) << v222;
          int v61 = v584 << v222;
          int v275 = v403 << v222;
          int v280 = v86 << v222;
          int v286 = v397 << v222;
          int v292 = v272 << v222;
          int v296 = v261 << v222;
          int v300 = v266 << v222;
          int v526 = v87 << v222;
          int v521 = (v219[33] * v415) << v222;
          int v506 = (v219[34] * v420) << v222;
          int v495 = (v219[35] * v424) << v222;
          int v480 = (v219[37] * v467) << v222;
          int v475 = (v219[38] * v474) << v222;
          int v425 = v410 << v222;
          int v62 = v88 << v222;
          int v63 = v256 << v222;
          int v246 = v252 << v222;
          int v64 = v240 << v222;
          int v65 = v236 << v222;
          int v264 = v233 << v222;
          int v270 = (v219[44] * v484) << v222;
          int v259 = v229 << v222;
          int v74 = v225 << v222;
          int v369 = v91 << v222;
          int v375 = v90 << v222;
          int v358 = v93 << v222;
          int v364 = v92 << v222;
          int v341 = v94 << v222;
          int v348 = (v219[52] * v510) << v222;
          int v250 = v95 << v222;
          int v254 = v96 << v222;
          int v66 = v97 << v222;
          int v67 = (v219[57] * v562) << v222;
          int v68 = (v219[58] * v566) << v222;
          int v69 = (v219[59] * v550) << v222;
          int v70 = (v219[60] * v554) << v222;
          int v71 = (v219[61] * v558) << v222;
          int v72 = (v219[62] * v570) << v222;
          int v73 = (v219[63] * v574) << v222;
        }
      }
      else
      {
        int v271 = v217[28] * (unsigned __int16)v433;
        int v276 = v217[26] * (unsigned __int16)v389;
        int v260 = v217[30] * (unsigned __int16)v451;
        int v265 = v217[29] * (unsigned __int16)v437;
        int v251 = v217[39] * (unsigned __int16)v429;
        int v255 = v217[36] * (unsigned __int16)v461;
        int v247 = v217[40] * (unsigned __int16)v441;
        int v235 = v217[42] * (unsigned __int16)v446;
        int v239 = v217[41] * (unsigned __int16)v494;
        int v228 = v217[45] * (unsigned __int16)v489;
        int v232 = v217[43] * (unsigned __int16)v456;
        int v224 = v217[46] * (unsigned __int16)v499;
        int v75 = v217[47] * (unsigned __int16)v470;
        int v76 = v217[48] * (unsigned __int16)v479;
        int v77 = v217[49] * (unsigned __int16)v520;
        int v78 = v217[50] * (unsigned __int16)v525;
        int v79 = v217[51] * (unsigned __int16)v505;
        int v80 = v217[53] * (unsigned __int16)v515;
        int v81 = v217[54] * (unsigned __int16)v535;
        int v82 = v217[55] * (unsigned __int16)v540;
        int v83 = v217[56] * (unsigned __int16)v545;
        int v546 = (*v217 * (unsigned __int16)*(v23 - 24)) << v22;
        int v541 = (v217[1] * (unsigned __int16)*(v23 - 23)) << v22;
        int v536 = (v217[2] * (unsigned __int16)*(v23 - 22)) << v22;
        int v516 = (v217[3] * (unsigned __int16)*(v23 - 19)) << v22;
        int v500 = (v217[4] * (unsigned __int16)*(v23 - 18)) << v22;
        int v60 = (v217[5] * (unsigned __int16)*(v23 - 14)) << v22;
        int v490 = (v217[6] * (unsigned __int16)*(v23 - 13)) << v22;
        int v471 = (v217[7] * (unsigned __int16)*(v23 - 12)) << v22;
        int v385 = (v217[8] * (unsigned __int16)*(v23 - 21)) << v22;
        int v390 = (v217[9] * (unsigned __int16)*(v23 - 20)) << v22;
        int v307 = (v217[10] * (unsigned __int16)*(v23 - 17)) << v22;
        int v311 = (v217[11] * (unsigned __int16)*(v23 - 15)) << v22;
        int v314 = (v217[12] * (unsigned __int16)*(v23 - 11)) << v22;
        int v303 = (v217[13] * (unsigned __int16)*(v23 - 7)) << v22;
        int v322 = (v217[14] * (unsigned __int16)*(v23 - 6)) << v22;
        int v318 = (v217[15] * (unsigned __int16)*(v23 - 5)) << v22;
        int v462 = (v217[16] * (unsigned __int16)v578) << v22;
        int v457 = (v217[17] * (unsigned __int16)*(v23 - 10)) << v22;
        int v452 = (v217[18] * (unsigned __int16)*(v23 - 8)) << v22;
        int v447 = (v217[19] * (unsigned __int16)*(v23 - 4)) << v22;
        int v442 = (v217[20] * (unsigned __int16)*v23) << v22;
        int v438 = (v217[21] * (unsigned __int16)v23[1]) << v22;
        int v434 = (v217[22] * (unsigned __int16)v23[2]) << v22;
        int v430 = (v217[23] * (unsigned __int16)v23[3]) << v22;
        int v242 = (v217[24] * (unsigned __int16)v582) << v22;
        int v275 = v276 << v22;
        int v280 = (v217[27] * (unsigned __int16)v395) << v22;
        int v286 = v271 << v22;
        int v300 = v260 << v22;
        int v292 = v265 << v22;
        int v296 = (v217[31] * (unsigned __int16)v23[11]) << v22;
        int v526 = (v217[32] * (unsigned __int16)v408) << v22;
        int v521 = (v217[33] * (unsigned __int16)v415) << v22;
        int v506 = (v217[34] * (unsigned __int16)v420) << v22;
        int v495 = (v217[35] * (unsigned __int16)v424) << v22;
        int v84 = v255 << v22;
        int v480 = (v217[37] * (unsigned __int16)v467) << v22;
        int v475 = (v217[38] * (unsigned __int16)v474) << v22;
        int v425 = v251 << v22;
        int v63 = v247 << v22;
        int v246 = v239 << v22;
        int v65 = v232 << v22;
        int v264 = v228 << v22;
        int v270 = (v217[44] * (unsigned __int16)v484) << v22;
        int v74 = v75 << v22;
        int v375 = v76 << v22;
        int v364 = v78 << v22;
        int v369 = v77 << v22;
        int v358 = v79 << v22;
        int v341 = v80 << v22;
        int v348 = (v217[52] * (unsigned __int16)v510) << v22;
        int v250 = v81 << v22;
        int v254 = v82 << v22;
        int v259 = v224 << v22;
        int v66 = v83 << v22;
        int v67 = (v217[57] * (unsigned __int16)v562) << v22;
        int v68 = (v217[58] * (unsigned __int16)v566) << v22;
        int v69 = (v217[59] * (unsigned __int16)v550) << v22;
        int v70 = (v217[60] * (unsigned __int16)v554) << v22;
        int v71 = (v217[61] * (unsigned __int16)v558) << v22;
        int v72 = (v217[62] * (unsigned __int16)v570) << v22;
        int v64 = v235 << v22;
        int v73 = (v217[63] * (unsigned __int16)v574) << v22;
        int v62 = v84;
        int v61 = (v217[25] * (unsigned __int16)v401) << v22;
      }
      int v585 = v63 - v242 - (v66 + ((__int16)v66 >> 1));
      int v579 = v246 - v61 - (v67 + ((__int16)v67 >> 1));
      int v575 = v64 - v275 - (v68 + ((__int16)v68 >> 1));
      int v571 = v65 - v280 - (v69 + ((__int16)v69 >> 1));
      int v567 = v270 - v286 - (v70 + ((__int16)v70 >> 1));
      int v563 = v264 - v292 - (v71 + ((__int16)v71 >> 1));
      int v559 = v259 - v300 - (v72 + ((__int16)v72 >> 1));
      int v555 = v74 - v296 - (v73 + ((__int16)v73 >> 1));
      int v551 = v546 + v526;
      int v511 = v546 - v526;
      int v547 = v541 + v521;
      int v527 = v541 - v521;
      int v542 = v536 + v506;
      int v522 = v536 - v506;
      int v537 = v516 + v495;
      int v517 = v516 - v495;
      int v507 = v500 + v62;
      int v485 = v500 - v62;
      int v416 = v246 + v67 + ((__int16)v246 >> 1);
      int v501 = v60 + v480;
      int v481 = v60 - v480;
      int v496 = v490 + v475;
      int v476 = v490 - v475;
      int v491 = v471 + v425;
      int v472 = v471 - v425;
      int v404 = v67 - (v61 + ((__int16)v61 >> 1));
      int v411 = v68 - (v275 + ((__int16)v275 >> 1));
      int v98 = v64;
      int v99 = v64 + v68 + ((__int16)v64 >> 1);
      int v100 = v69 - (v280 + ((__int16)v280 >> 1));
      int v101 = v65 + v69 + ((__int16)v65 >> 1);
      int v381 = v70 - (v286 + ((__int16)v286 >> 1));
      int v102 = v270 + v70 + ((__int16)v270 >> 1);
      int v354 = v71 - (v292 + ((__int16)v292 >> 1));
      int v336 = v264 + v71 + ((__int16)v264 >> 1);
      int v103 = v72 - (v300 + ((__int16)v300 >> 1));
      int v326 = v259 + v72 + ((__int16)v259 >> 1);
      int v104 = v74 + v73 + ((__int16)v74 >> 1);
      int v426 = ((__int16)v462 >> 1) - v375;
      int v463 = v462 + ((__int16)v375 >> 1);
      int v376 = ((__int16)v457 >> 1) - v369;
      int v105 = v457 + ((__int16)v369 >> 1);
      int v371 = ((__int16)v452 >> 1) - v364;
      int v453 = v452 + ((__int16)v364 >> 1);
      int v458 = v105;
      int v365 = ((__int16)v447 >> 1) - v358;
      int v106 = v447 + ((__int16)v358 >> 1);
      int v359 = ((__int16)v442 >> 1) - v348;
      int v443 = v442 + ((__int16)v348 >> 1);
      int v349 = ((__int16)v438 >> 1) - v341;
      int v439 = v438 + ((__int16)v341 >> 1);
      int v343 = ((__int16)v434 >> 1) - v250;
      int v107 = ((__int16)v430 >> 1) - v254;
      int v431 = v430 + ((__int16)v254 >> 1);
      int v435 = v434 + ((__int16)v250 >> 1);
      int v108 = v280 + v65 + v311;
      int v109 = v296 + v74 + v318;
      int v110 = v66 - (v242 + ((__int16)v242 >> 1)) + v385;
      int v111 = v63 + v66 + ((__int16)v63 >> 1) - v385;
      int v112 = v404 + v390;
      int v113 = v416 - v390;
      int v386 = v242 + v63 + v385 + ((__int16)v385 >> 1);
      int v391 = v61 + v246 + v390 + ((__int16)v390 >> 1);
      int v114 = v411 + v307;
      int v115 = v99 - v307;
      int v116 = v275 + v98 + v307 + ((__int16)v307 >> 1);
      int v117 = v100 + v311;
      int v118 = v101 - v311;
      int v119 = v381 + v314;
      int v120 = v102 - v314;
      int v398 = v108 + ((__int16)v311 >> 1);
      int v405 = v286 + v270 + v314 + ((__int16)v314 >> 1);
      int v121 = v354 + v303;
      int v122 = v336 - v303;
      int v123 = v103 + v322;
      int v124 = v326 - v322;
      int v412 = v292 + v264 + v303 + ((__int16)v303 >> 1);
      int v417 = v300 + v259 + v322 + ((__int16)v322 >> 1);
      int v125 = v73 - (v296 + ((__int16)v296 >> 1)) + v318;
      int v126 = v104 - v318;
      int v421 = v109 + ((__int16)v318 >> 1);
      int v468 = v511 + v426;
      int v382 = v511 - v426;
      int v427 = v527 + v376;
      int v377 = v527 - v376;
      int v528 = v522 + v371;
      int v372 = v522 - v371;
      int v523 = v517 + v365;
      int v366 = v517 - v365;
      int v518 = v485 + v359;
      int v355 = v485 - v359;
      int v486 = v481 + v349;
      int v350 = v481 - v349;
      int v482 = v476 + v343;
      int v337 = v476 - v343;
      int v477 = v472 + v107;
      int v473 = v472 - v107;
      int v360 = v110 + ((__int16)v111 >> 2);
      int v323 = ((__int16)v110 >> 2) - v111;
      int v344 = v112 + ((__int16)v113 >> 2);
      int v319 = ((__int16)v112 >> 2) - v113;
      int v312 = ((__int16)v114 >> 2) - v115;
      int v315 = v114 + ((__int16)v115 >> 2);
      int v308 = ((__int16)v117 >> 2) - v118;
      int v327 = v119 + ((__int16)v120 >> 2);
      int v330 = v117 + ((__int16)v118 >> 2);
      int v304 = ((__int16)v119 >> 2) - v120;
      int v127 = v121 + ((__int16)v122 >> 2);
      int v301 = ((__int16)v121 >> 2) - v122;
      int v128 = v123 + ((__int16)v124 >> 2);
      int v298 = ((__int16)v123 >> 2) - v124;
      int v129 = v125 + ((__int16)v126 >> 2);
      int v267 = ((__int16)v125 >> 2) - v126;
      int v288 = v551 + v463;
      int v130 = v551 - v463;
      int v464 = v547 + v458;
      int v131 = v547 - v458;
      int v459 = v542 + v453;
      int v132 = v542 - v453;
      int v454 = v537 + v106;
      int v282 = v507 + v443;
      int v133 = v507 - v443;
      int v241 = v501 + v439;
      int v134 = v501 - v439;
      int v237 = v496 + v435;
      int v135 = v496 - v435;
      int v136 = v585 + ((__int16)v386 >> 2);
      int v137 = v386 - ((__int16)v585 >> 2);
      int v138 = v579 + ((__int16)v391 >> 2);
      int v139 = v391 - ((__int16)v579 >> 2);
      int v140 = v575 + ((__int16)v116 >> 2);
      int v141 = v116 - ((__int16)v575 >> 2);
      int v142 = v571 + ((__int16)v398 >> 2);
      int v143 = v398 - ((__int16)v571 >> 2);
      int v144 = v567 + ((__int16)v405 >> 2);
      int v145 = v405 - ((__int16)v567 >> 2);
      int v146 = v563 + ((__int16)v412 >> 2);
      int v147 = v412 - ((__int16)v563 >> 2);
      int v148 = v559 + ((__int16)v417 >> 2);
      int v149 = v417 - ((__int16)v559 >> 2);
      int v150 = v555 + ((__int16)v421 >> 2);
      int v151 = v421 - ((__int16)v555 >> 2);
      int v512 = v130 + v136;
      int v508 = v130 - v136;
      int v568 = v131 + v138;
      int v586 = v131 - v138;
      int v418 = v132 + v140;
      int v422 = v132 - v140;
      int v552 = v537 - v106 + v142;
      int v548 = v537 - v106 - v142;
      int v497 = v133 + v144;
      int v502 = v133 - v144;
      int v277 = v134 + v146;
      int v556 = v134 - v146;
      int v406 = v135 + v148;
      int v413 = v135 - v148;
      int v543 = v491 - v431 + v150;
      int v243 = v491 - v431 - v150;
      int v444 = v382 + v360;
      int v448 = v382 - v360;
      int v564 = v377 + v344;
      int v580 = v377 - v344;
      int v345 = v372 + v315;
      int v361 = v372 - v315;
      int v152 = v366 + v330;
      int v230 = v366 - v330;
      int v273 = v350 + v127;
      int v257 = v350 - v127;
      int v331 = v337 + v128;
      int v351 = v337 - v128;
      int v153 = v473 + v129;
      int v538 = v473 - v129;
      int v154 = v468 + v323;
      int v155 = v468 - v323;
      int v560 = v427 + v319;
      int v576 = v427 - v319;
      int v316 = v528 + v312;
      int v338 = v528 - v312;
      int v156 = v523 + v308;
      int v226 = v523 - v308;
      int v157 = v518 + v304;
      int v158 = v518 - v304;
      int v293 = v486 + v301;
      int v262 = v486 - v301;
      int v309 = v482 + v298;
      int v324 = v482 - v298;
      int v159 = v477 + v267;
      int v160 = v477 - v267;
      int v161 = v288 + v137;
      int v162 = v288 - v137;
      int v163 = v464 + v139;
      int v572 = v464 - v139;
      int v302 = v459 + v141;
      int v320 = v459 - v141;
      int v164 = v454 + v143;
      int v165 = v454 - v143;
      int v166 = v282 + v145;
      int v167 = v282 - v145;
      int v283 = v241 - v147;
      int v289 = v241 + v147;
      int v168 = v491 + v431 + v151;
      int v169 = v491 + v431 - v151;
      int v465 = v289 - v164 - (v168 + ((__int16)v168 >> 1));
      int v460 = v293 - v156 - (v477 + v267 + ((v477 + v267) << 16 >> 17));
      int v492 = v273 - v152 - (v153 + ((__int16)v153 >> 1));
      int v487 = v277 - v552 - (v543 + ((__int16)v543 >> 1));
      int v483 = v556 - v548 - (v243 + ((__int16)v243 >> 1));
      int v478 = v257 - v230 - (v538 + ((__int16)v538 >> 1));
      int v469 = v283 - v165 - (v169 + ((__int16)v169 >> 1));
      int v455 = v161 + v166;
      int v305 = v161 - v166;
      int v529 = v154 + v157;
      int v399 = v154 - v157;
      int v524 = v444 + v355 + v327;
      int v392 = v444 - (v355 + v327);
      int v519 = v512 + v497;
      int v387 = v512 - v497;
      int v513 = v508 + v502;
      int v383 = v508 - v502;
      int v509 = v448 + v355 - v327;
      int v378 = v448 - (v355 - v327);
      int v503 = v155 + v158;
      int v373 = v155 - v158;
      int v498 = v162 + v167;
      int v367 = v162 - v167;
      int v268 = v164;
      int v328 = v168 + v163 - (v164 + ((__int16)v164 >> 1));
      int v248 = v152;
      int v356 = v159 + v560 - (v156 + ((__int16)v156 >> 1));
      int v449 = v153 + v564 - (v152 + ((__int16)v152 >> 1));
      int v445 = v543 + v568 - (v552 + ((__int16)v552 >> 1));
      int v440 = v243 + v586 - (v548 + ((__int16)v548 >> 1));
      int v436 = v538 + v580 - (v230 + ((__int16)v230 >> 1));
      int v432 = v160 + v576 - (v226 + ((__int16)v226 >> 1));
      int v170 = v165;
      int v428 = v169 + v572 - (v165 + ((__int16)v165 >> 1));
      int v171 = v277 + v543 + ((__int16)v277 >> 1);
      int v172 = v556 + v243 + ((__int16)v556 >> 1);
      int v173 = v257 + v538 + ((__int16)v257 >> 1);
      int v174 = v283 + v169 + ((__int16)v283 >> 1);
      int v244 = ((__int16)v302 >> 1) - (v237 + v149);
      int v544 = v302 + ((__int16)(v237 + v149) >> 1);
      int v539 = v316 + ((__int16)v309 >> 1);
      int v175 = ((__int16)v345 >> 1) - v331;
      int v346 = v345 + ((__int16)v331 >> 1);
      int v176 = ((__int16)v418 >> 1) - v406;
      int v419 = v418 + ((__int16)v406 >> 1);
      int v177 = ((__int16)v422 >> 1) - v413;
      int v423 = v422 + ((__int16)v413 >> 1);
      int v178 = ((__int16)v361 >> 1) - v351;
      int v414 = v361 + ((__int16)v351 >> 1);
      int v179 = ((__int16)v338 >> 1) - v324;
      int v407 = v338 + ((__int16)v324 >> 1);
      int v180 = ((__int16)v320 >> 1) - (v237 - v149);
      int v362 = v320 + ((__int16)(v237 - v149) >> 1);
      int v181 = v289 + v168 + ((__int16)v289 >> 1) - v163;
      int v182 = v268 + v289 + v163 + ((__int16)v163 >> 1);
      int v183 = v293 + v159 + ((__int16)v293 >> 1) - v560;
      int v184 = v156 + v293 + v560 + ((__int16)v560 >> 1);
      int v185 = v273 + v153 + ((__int16)v273 >> 1) - v564;
      int v186 = v248 + v273 + v564 + ((__int16)v564 >> 1);
      int v339 = v171 - v568;
      int v187 = v552 + v277 + v568 + ((__int16)v568 >> 1);
      int v332 = v172 - v586;
      int v188 = v548 + v556 + v586 + ((__int16)v586 >> 1);
      int v189 = v173 - v580;
      int v190 = v230 + v257 + v580 + ((__int16)v580 >> 1);
      int v191 = v262 + v160 + ((__int16)v262 >> 1) - v576;
      int v192 = v226 + v262 + v576 + ((__int16)v576 >> 1);
      int v193 = v174 - v572;
      int v194 = v170 + v283 + v572 + ((__int16)v572 >> 1);
      int v587 = v305 + v244;
      int v561 = v305 - v244;
      int v195 = ((__int16)v316 >> 1) - v309;
      int v581 = v399 + v195;
      int v557 = v399 - v195;
      int v577 = v392 + v175;
      int v553 = v392 - v175;
      int v573 = v387 + v176;
      int v549 = v387 - v176;
      int v569 = v383 + v177;
      int v352 = v383 - v177;
      int v565 = v378 + v178;
      int v379 = v378 - v178;
      int v388 = v373 + v179;
      int v374 = v373 - v179;
      int v384 = v367 + v180;
      int v368 = v367 - v180;
      int v400 = v328 + ((__int16)v181 >> 2);
      int v329 = ((__int16)v328 >> 2) - v181;
      int v393 = v356 + ((__int16)v183 >> 2);
      int v357 = ((__int16)v356 >> 2) - v183;
      int v294 = v465 + ((__int16)v182 >> 2);
      int v196 = v182 - ((__int16)v465 >> 2);
      int v466 = v460 + ((__int16)v184 >> 2);
      int v321 = v184 - ((__int16)v460 >> 2);
      int v325 = v196;
      int v278 = v492 + ((__int16)v186 >> 2);
      int v197 = v186 - ((__int16)v492 >> 2);
      int v493 = v487 + ((__int16)v187 >> 2);
      int v313 = v187 - ((__int16)v487 >> 2);
      int v317 = v197;
      int v198 = v483 + ((__int16)v188 >> 2);
      int v199 = v478 + ((__int16)v190 >> 2);
      int v306 = v190 - ((__int16)v478 >> 2);
      int v310 = v188 - ((__int16)v483 >> 2);
      int v200 = v262 - v226 - (v160 + ((__int16)v160 >> 1));
      int v201 = v200 + ((__int16)v192 >> 2);
      int v202 = v192 - ((__int16)v200 >> 2);
      int v203 = v469 + ((__int16)v194 >> 2);
      int v299 = v194 - ((__int16)v469 >> 2);
      int v204 = v449 + ((__int16)v185 >> 2);
      int v290 = ((__int16)v449 >> 2) - v185;
      int v205 = v445 + ((__int16)v339 >> 2);
      int v284 = ((__int16)v445 >> 2) - v339;
      int v206 = v440 + ((__int16)v332 >> 2);
      int v333 = ((__int16)v440 >> 2) - v332;
      int v207 = v436 + ((__int16)v189 >> 2);
      int v274 = ((__int16)v436 >> 2) - v189;
      int v208 = v432 + ((__int16)v191 >> 2);
      int v340 = ((__int16)v432 >> 2) - v191;
      int v209 = v428 + ((__int16)v193 >> 2);
      int v210 = ((__int16)v428 >> 2) - v193;
      int v211 = v513 + v423;
      int v212 = v513 - v423;
      int v213 = v503 + v407;
      int v450 = v201 + v503 - v407;
      int v488 = v503 - v407 - v201;
      int v214 = v393 + v557;
      int v504 = v557 - v393;
      int v394 = v205 + v549;
      int v514 = v549 - v205;
      int8x16_t result = (v306 + v509 + v414);
      *unsigned int v531 = (((v325 + v455 + v544) << 16) + 0x200000) >> 22;
      v531[1] = (((v321 + v529 + v539) << 16) + 0x200000) >> 22;
      v531[2] = (((v317 + v524 + v346) << 16) + 0x200000) >> 22;
      v531[3] = (((v313 + v519 + v419) << 16) + 0x200000) >> 22;
      v531[4] = (((v310 + v211) << 16) + 0x200000) >> 22;
      v531[5] = ((result << 16) + 0x200000) >> 22;
      v531[6] = (((v202 + v213) << 16) + 0x200000) >> 22;
      v531[7] = (((v299 + v498 + v362) << 16) + 0x200000) >> 22;
      v531[16] = (((v329 + v587) << 16) + 0x200000) >> 22;
      v531[17] = (((v357 + v581) << 16) + 0x200000) >> 22;
      v531[18] = (((v290 + v577) << 16) + 0x200000) >> 22;
      v531[19] = (((v284 + v573) << 16) + 0x200000) >> 22;
      v531[20] = (((v333 + v569) << 16) + 0x200000) >> 22;
      v531[21] = (((v274 + v565) << 16) + 0x200000) >> 22;
      v531[22] = (((v340 + v388) << 16) + 0x200000) >> 22;
      v531[23] = (((v210 + v384) << 16) + 0x200000) >> 22;
      v531[32] = (((v400 + v561) << 16) + 0x200000) >> 22;
      v531[33] = ((v214 << 16) + 0x200000) >> 22;
      v531[34] = (((v204 + v553) << 16) + 0x200000) >> 22;
      v531[35] = ((v394 << 16) + 0x200000) >> 22;
      v531[36] = (((v206 + v352) << 16) + 0x200000) >> 22;
      v531[37] = (((v207 + v379) << 16) + 0x200000) >> 22;
      v531[38] = (((v208 + v374) << 16) + 0x200000) >> 22;
      v531[39] = (((v209 + v368) << 16) + 0x200000) >> 22;
      v531[48] = (((v294 + v455 - v544) << 16) + 0x200000) >> 22;
      v531[49] = (((v466 + v529 - v539) << 16) + 0x200000) >> 22;
      v531[50] = (((v278 + v524 - v346) << 16) + 0x200000) >> 22;
      v531[51] = (((v493 + v519 - v419) << 16) + 0x200000) >> 22;
      v531[52] = (((v198 + v212) << 16) + 0x200000) >> 22;
      v531[53] = (((v199 + v509 - v414) << 16) + 0x200000) >> 22;
      v531[54] = ((v450 << 16) + 0x200000) >> 22;
      v531[55] = (((v203 + v498 - v362) << 16) + 0x200000) >> 22;
      v531[64] = (((v455 - v544 - v294) << 16) + 0x200000) >> 22;
      v531[65] = (((v529 - v539 - v466) << 16) + 0x200000) >> 22;
      v531[66] = (((v524 - v346 - v278) << 16) + 0x200000) >> 22;
      v531[67] = (((v519 - v419 - v493) << 16) + 0x200000) >> 22;
      v531[68] = (((v212 - v198) << 16) + 0x200000) >> 22;
      v531[69] = (((v509 - v414 - v199) << 16) + 0x200000) >> 22;
      v531[70] = ((v488 << 16) + 0x200000) >> 22;
      v531[71] = (((v498 - v362 - v203) << 16) + 0x200000) >> 22;
      v531[80] = (((v561 - v400) << 16) + 0x200000) >> 22;
      v531[81] = ((v504 << 16) + 0x200000) >> 22;
      v531[82] = (((v553 - v204) << 16) + 0x200000) >> 22;
      v531[83] = ((v514 << 16) + 0x200000) >> 22;
      v531[84] = (((v352 - v206) << 16) + 0x200000) >> 22;
      v531[85] = (((v379 - v207) << 16) + 0x200000) >> 22;
      v531[86] = (((v374 - v208) << 16) + 0x200000) >> 22;
      v531[87] = (((v368 - v209) << 16) + 0x200000) >> 22;
      v531[96] = (((v587 - v329) << 16) + 0x200000) >> 22;
      v531[97] = (((v581 - v357) << 16) + 0x200000) >> 22;
      v531[98] = (((v577 - v290) << 16) + 0x200000) >> 22;
      v531[99] = (((v573 - v284) << 16) + 0x200000) >> 22;
      v531[100] = (((v569 - v333) << 16) + 0x200000) >> 22;
      v531[101] = (((v565 - v274) << 16) + 0x200000) >> 22;
      v531[102] = (((v388 - v340) << 16) + 0x200000) >> 22;
      v531[103] = (((v384 - v210) << 16) + 0x200000) >> 22;
      v531[112] = (((v455 + v544 - v325) << 16) + 0x200000) >> 22;
      v531[113] = (((v529 + v539 - v321) << 16) + 0x200000) >> 22;
      v531[114] = (((v524 + v346 - v317) << 16) + 0x200000) >> 22;
      v531[115] = (((v519 + v419 - v313) << 16) + 0x200000) >> 22;
      v531[116] = (((v211 - v310) << 16) + 0x200000) >> 22;
      v531[117] = (((v509 + v414 - v306) << 16) + 0x200000) >> 22;
      v531[118] = (((v213 - v202) << 16) + 0x200000) >> 22;
      v531[119] = (((v498 + v362 - v299) << 16) + 0x200000) >> 22;
      unsigned int v22 = v530;
      uint64_t v3 = v534;
      unsigned int v5 = v533;
      int v23 = v532;
    }
    v5 >>= 1;
    v3 += 2;
    v23 += 64;
  }
  while (v3 != 8);
  return result;
}

uint64_t sub_2219ECCB8(uint64_t result, _OWORD *a2)
{
  uint64_t v2 = 0;
  uint64_t v68 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(result + 40);
  unsigned int v4 = *(unsigned __int8 *)(v3 + 52);
  unsigned int v5 = *(unsigned __int8 *)(v3 + 55);
  do
  {
    int v6 = v4 & 1;
    v4 >>= 1;
    *(_DWORD *)&v67[v2] = -v6;
    v2 += 4;
  }
  while (v2 != 16);
  uint64_t v7 = *(int8x16_t **)(result + 56);
  int v8 = *(unsigned __int8 *)(result + 1422192);
  a2[30] = 0u;
  a2[31] = 0u;
  a2[28] = 0u;
  a2[29] = 0u;
  a2[26] = 0u;
  a2[27] = 0u;
  a2[24] = 0u;
  a2[25] = 0u;
  a2[22] = 0u;
  a2[23] = 0u;
  a2[20] = 0u;
  a2[21] = 0u;
  a2[18] = 0u;
  a2[19] = 0u;
  a2[16] = 0u;
  a2[17] = 0u;
  a2[14] = 0u;
  a2[15] = 0u;
  a2[12] = 0u;
  a2[13] = 0u;
  a2[10] = 0u;
  a2[11] = 0u;
  a2[8] = 0u;
  a2[9] = 0u;
  a2[6] = 0u;
  a2[7] = 0u;
  a2[4] = 0u;
  a2[5] = 0u;
  unsigned int v9 = (171 * v5) >> 10;
  a2[2] = 0u;
  a2[3] = 0u;
  *a2 = 0u;
  a2[1] = 0u;
  int16x8_t v10 = *(int16x8_t *)&asc_221A38400[16 * (((_BYTE)v5 - 6 * (_BYTE)v9) & 0x1F)];
  if (v8)
  {
    if (v5 < 0x18)
    {
      unsigned int v14 = 0;
      unsigned int v13 = v9 - 4;
      char v11 = 1;
      unsigned int v12 = 1 << (3 - v9);
    }
    else
    {
      char v11 = 0;
      unsigned int v12 = 0;
      unsigned int v13 = 0;
      unsigned int v14 = v9 - 4;
    }
  }
  else
  {
    unsigned int v12 = 0;
    unsigned int v13 = 0;
    unsigned int v14 = 0;
    int16x8_t v10 = (int16x8_t)vshlq_u16((uint16x8_t)v10, (uint16x8_t)vdupq_n_s16(v9));
    char v11 = 1;
  }
  uint64_t v15 = 0;
  int32x4_t v16 = (int32x4_t)v12;
  uint16x8_t v17 = (uint16x8_t)vdupq_n_s16(v14);
  int32x4_t v18 = vdupq_n_s32(v13);
  int v19 = v7 + 3;
  v20.i64[0] = -1;
  v20.i64[1] = -1;
  v21.i64[0] = 0x5000500050005;
  v21.i64[1] = 0x5000500050005;
  do
  {
    if (*(_WORD *)&v67[v15 * 2])
    {
      int8x16_t v22 = v19[-1];
      int8x16_t v23 = v19[1];
      int8x16_t v24 = v19[2];
      v71.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v22, (int8x16_t)xmmword_221A37C60), (int8x16_t)xmmword_221A37C70), (int8x16_t)xmmword_221A37C80);
      v71.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(*v19, (int8x16_t)xmmword_221A37C90), (int8x16_t)xmmword_221A37CA0), (int8x16_t)xmmword_221A369E0);
      int16x8_t v25 = (int16x8_t)vqtbl2q_s8(v71, (int8x16_t)xmmword_221A37CB0);
      v71.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v22, (int8x16_t)xmmword_221A37CC0), (int8x16_t)xmmword_221A37CD0), (int8x16_t)xmmword_221A362D0);
      v71.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(*v19, (int8x16_t)xmmword_221A37CE0), (int8x16_t)xmmword_221A36860), (int8x16_t)xmmword_221A369D0);
      int16x8_t v26 = (int16x8_t)vqtbl2q_s8(v71, (int8x16_t)xmmword_221A37CF0);
      v69.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v23, (int8x16_t)xmmword_221A37C60), (int8x16_t)xmmword_221A37C70), (int8x16_t)xmmword_221A37C80);
      v69.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v24, (int8x16_t)xmmword_221A37C90), (int8x16_t)xmmword_221A37CA0), (int8x16_t)xmmword_221A369E0);
      int16x8_t v27 = (int16x8_t)vqtbl2q_s8(v69, (int8x16_t)xmmword_221A37CB0);
      int8x16_t v28 = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v23, (int8x16_t)xmmword_221A37CC0), (int8x16_t)xmmword_221A37CD0), (int8x16_t)xmmword_221A362D0);
      v71.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v24, (int8x16_t)xmmword_221A37CE0), (int8x16_t)xmmword_221A36860), (int8x16_t)xmmword_221A369D0);
      int16x8_t v29 = (int16x8_t)vqtbl2q_s8(v71, (int8x16_t)xmmword_221A37CF0);
      if (v8)
      {
        if (v11)
        {
          int32x4_t v16 = (int32x4_t)vqtbl1q_s8((int8x16_t)v16, (int8x16_t)xmmword_221A36310);
          int16x8_t v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v25, v10));
          int16x8_t v31 = vmulq_s16(v25, v10);
          int16x8_t v32 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v31, v30), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v31, v30), v16), v18));
          int16x8_t v33 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v26.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v26, v10));
          int16x8_t v34 = vmulq_s16(v26, v10);
          int16x8_t v35 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v34, v33), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v34, v33), v16), v18));
          int16x8_t v36 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v27.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v27, v10));
          int16x8_t v37 = vmulq_s16(v27, v10);
          int16x8_t v38 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v37, v36), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v37, v36), v16), v18));
          int16x8_t v39 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v29.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v29, v10));
          int16x8_t v40 = vmulq_s16(v29, v10);
          int64x2_t v41 = (int64x2_t)vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v40, v39), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v40, v39), v16), v18));
        }
        else
        {
          int16x8_t v32 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v25, v10), v17);
          int16x8_t v35 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v26, v10), v17);
          int16x8_t v38 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v27, v10), v17);
          int64x2_t v41 = (int64x2_t)vshlq_u16((uint16x8_t)vmulq_s16(v29, v10), v17);
        }
      }
      else
      {
        int16x8_t v32 = vmulq_s16(v25, v10);
        int16x8_t v35 = vmulq_s16(v26, v10);
        int16x8_t v38 = vmulq_s16(v27, v10);
        int64x2_t v41 = (int64x2_t)vmulq_s16(v29, v10);
      }
      int v42 = (int16x8_t *)((char *)a2 + 2 * word_221A383F0[v15]);
      int64x2_t v43 = (int64x2_t)vaddq_s16(v38, (int16x8_t)xmmword_221A37D10);
      int16x8_t v44 = vaddq_s16(v32, (int16x8_t)xmmword_221A37D10);
      int16x8_t v45 = (int16x8_t)vzip2q_s64((int64x2_t)v44, v43);
      int16x8_t v46 = (int16x8_t)vzip2q_s64((int64x2_t)v35, v41);
      v44.i64[1] = v43.i64[0];
      v35.i64[1] = v41.i64[0];
      int16x8_t v47 = vaddq_s16(v44, v35);
      int16x8_t v48 = vsubq_s16(v44, v35);
      int16x8_t v49 = vsubq_s16(vshlq_s16(v45, v20), v46);
      int16x8_t v50 = vaddq_s16(vshlq_s16(v46, v20), v45);
      int16x8_t v51 = vaddq_s16(v47, v50);
      int16x8_t v52 = vaddq_s16(v48, v49);
      int16x8_t v53 = vsubq_s16(v48, v49);
      int16x8_t v54 = vsubq_s16(v47, v50);
      int16x8_t v55 = vzip1q_s16(v51, v53);
      int16x8_t v56 = vzip2q_s16(v51, v53);
      int16x8_t v57 = vzip1q_s16(v52, v54);
      int16x8_t v58 = vzip2q_s16(v52, v54);
      v70.val[1] = (int8x16_t)vdupq_lane_s64(v56.i64[0], 0);
      v70.val[0] = (int8x16_t)vdupq_lane_s64(v58.i64[0], 0);
      int16x8_t v59 = vzip1q_s16(v55, v57);
      v70.val[0] = vqtbl2q_s8(v70, (int8x16_t)xmmword_221A37BC0);
      v70.val[1] = (int8x16_t)vzip2q_s64((int64x2_t)v59, (int64x2_t)v70.val[0]);
      v72.val[1] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v55, 1);
      v72.val[0] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v57, 1);
      int16x8_t v60 = (int16x8_t)vqtbl2q_s8(v72, (int8x16_t)xmmword_221A36990);
      int64x2_t v61 = (int64x2_t)vzip2q_s16(v56, v58);
      int16x8_t v62 = (int16x8_t)vzip2q_s64((int64x2_t)v60, v61);
      v59.i64[1] = v70.val[0].i64[0];
      v60.i64[1] = v61.i64[0];
      int16x8_t v63 = vaddq_s16(v59, v60);
      int16x8_t v64 = vsubq_s16(v59, v60);
      v70.val[0] = (int8x16_t)vshlq_s16(v62, v20);
      int16x8_t v65 = vsubq_s16(vshlq_s16((int16x8_t)v70.val[1], v20), v62);
      int16x8_t v66 = vaddq_s16((int16x8_t)v70.val[0], (int16x8_t)v70.val[1]);
      *int v42 = vshlq_s16(vaddq_s16(v63, v66), v21);
      v42[2] = vshlq_s16(vaddq_s16(v64, v65), v21);
      v42[4] = vshlq_s16(vsubq_s16(v64, v65), v21);
      v42[6] = vshlq_s16(vsubq_s16(v63, v66), v21);
    }
    ++v15;
    v19 += 4;
  }
  while (v15 != 8);
  return result;
}

int8x16_t *sub_2219ED140(int8x16_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = 0;
  uint64_t v68 = *MEMORY[0x263EF8340];
  unsigned int v4 = result[51].u8[0];
  unsigned int v5 = result[51].u8[2];
  do
  {
    int v6 = v4 & 1;
    v4 >>= 1;
    *(_DWORD *)&v67[v3] = -v6;
    v3 += 4;
  }
  while (v3 != 16);
  *(_OWORD *)(a3 + 112) = 0u;
  uint64_t v7 = (_OWORD *)(a3 + 112);
  int v8 = *((unsigned __int8 *)v7 - 100);
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  v7[6] = 0u;
  v7[7] = 0u;
  v7[8] = 0u;
  v7[9] = 0u;
  v7[10] = 0u;
  v7[11] = 0u;
  v7[12] = 0u;
  v7[13] = 0u;
  v7[14] = 0u;
  v7[15] = 0u;
  v7[16] = 0u;
  v7[17] = 0u;
  v7[18] = 0u;
  v7[19] = 0u;
  v7[20] = 0u;
  v7[21] = 0u;
  v7[22] = 0u;
  v7[23] = 0u;
  v7[24] = 0u;
  v7[25] = 0u;
  v7[26] = 0u;
  v7[27] = 0u;
  v7[28] = 0u;
  unsigned int v9 = (171 * v5) >> 10;
  v7[29] = 0u;
  v7[30] = 0u;
  v7[31] = 0u;
  int16x8_t v10 = *(int16x8_t *)&asc_221A38400[16 * (((_BYTE)v5 - 6 * (_BYTE)v9) & 0x1F)];
  if (v8)
  {
    if (v5 < 0x18)
    {
      unsigned int v14 = 0;
      unsigned int v13 = v9 - 4;
      char v11 = 1;
      unsigned int v12 = 1 << (3 - v9);
    }
    else
    {
      char v11 = 0;
      unsigned int v12 = 0;
      unsigned int v13 = 0;
      unsigned int v14 = v9 - 4;
    }
  }
  else
  {
    unsigned int v12 = 0;
    unsigned int v13 = 0;
    unsigned int v14 = 0;
    int16x8_t v10 = (int16x8_t)vshlq_u16((uint16x8_t)v10, (uint16x8_t)vdupq_n_s16(v9));
    char v11 = 1;
  }
  uint64_t v15 = 0;
  int32x4_t v16 = (int32x4_t)v12;
  uint16x8_t v17 = (uint16x8_t)vdupq_n_s16(v14);
  int32x4_t v18 = vdupq_n_s32(v13);
  int v19 = result + 3;
  v20.i64[0] = -1;
  v20.i64[1] = -1;
  v21.i64[0] = 0x5000500050005;
  v21.i64[1] = 0x5000500050005;
  do
  {
    if (*(_WORD *)&v67[v15 * 2])
    {
      int8x16_t v22 = v19[-1];
      int8x16_t v23 = v19[1];
      int8x16_t v24 = v19[2];
      v71.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v22, (int8x16_t)xmmword_221A37C60), (int8x16_t)xmmword_221A37C70), (int8x16_t)xmmword_221A37C80);
      v71.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(*v19, (int8x16_t)xmmword_221A37C90), (int8x16_t)xmmword_221A37CA0), (int8x16_t)xmmword_221A369E0);
      int16x8_t v25 = (int16x8_t)vqtbl2q_s8(v71, (int8x16_t)xmmword_221A37CB0);
      v71.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v22, (int8x16_t)xmmword_221A37CC0), (int8x16_t)xmmword_221A37CD0), (int8x16_t)xmmword_221A362D0);
      v71.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(*v19, (int8x16_t)xmmword_221A37CE0), (int8x16_t)xmmword_221A36860), (int8x16_t)xmmword_221A369D0);
      int16x8_t v26 = (int16x8_t)vqtbl2q_s8(v71, (int8x16_t)xmmword_221A37CF0);
      v69.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v23, (int8x16_t)xmmword_221A37C60), (int8x16_t)xmmword_221A37C70), (int8x16_t)xmmword_221A37C80);
      v69.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v24, (int8x16_t)xmmword_221A37C90), (int8x16_t)xmmword_221A37CA0), (int8x16_t)xmmword_221A369E0);
      int16x8_t v27 = (int16x8_t)vqtbl2q_s8(v69, (int8x16_t)xmmword_221A37CB0);
      int8x16_t v28 = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v23, (int8x16_t)xmmword_221A37CC0), (int8x16_t)xmmword_221A37CD0), (int8x16_t)xmmword_221A362D0);
      v71.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v24, (int8x16_t)xmmword_221A37CE0), (int8x16_t)xmmword_221A36860), (int8x16_t)xmmword_221A369D0);
      int16x8_t v29 = (int16x8_t)vqtbl2q_s8(v71, (int8x16_t)xmmword_221A37CF0);
      if (v8)
      {
        if (v11)
        {
          int32x4_t v16 = (int32x4_t)vqtbl1q_s8((int8x16_t)v16, (int8x16_t)xmmword_221A36310);
          int16x8_t v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v25, v10));
          int16x8_t v31 = vmulq_s16(v25, v10);
          int16x8_t v32 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v31, v30), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v31, v30), v16), v18));
          int16x8_t v33 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v26.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v26, v10));
          int16x8_t v34 = vmulq_s16(v26, v10);
          int16x8_t v35 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v34, v33), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v34, v33), v16), v18));
          int16x8_t v36 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v27.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v27, v10));
          int16x8_t v37 = vmulq_s16(v27, v10);
          int16x8_t v38 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v37, v36), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v37, v36), v16), v18));
          int16x8_t v39 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v29.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v29, v10));
          int16x8_t v40 = vmulq_s16(v29, v10);
          int64x2_t v41 = (int64x2_t)vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v40, v39), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v40, v39), v16), v18));
        }
        else
        {
          int16x8_t v32 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v25, v10), v17);
          int16x8_t v35 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v26, v10), v17);
          int16x8_t v38 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v27, v10), v17);
          int64x2_t v41 = (int64x2_t)vshlq_u16((uint16x8_t)vmulq_s16(v29, v10), v17);
        }
      }
      else
      {
        int16x8_t v32 = vmulq_s16(v25, v10);
        int16x8_t v35 = vmulq_s16(v26, v10);
        int16x8_t v38 = vmulq_s16(v27, v10);
        int64x2_t v41 = (int64x2_t)vmulq_s16(v29, v10);
      }
      int v42 = (int16x8_t *)((char *)v7 + 2 * word_221A383F0[v15]);
      int64x2_t v43 = (int64x2_t)vaddq_s16(v38, (int16x8_t)xmmword_221A37D10);
      int16x8_t v44 = vaddq_s16(v32, (int16x8_t)xmmword_221A37D10);
      int16x8_t v45 = (int16x8_t)vzip2q_s64((int64x2_t)v44, v43);
      int16x8_t v46 = (int16x8_t)vzip2q_s64((int64x2_t)v35, v41);
      v44.i64[1] = v43.i64[0];
      v35.i64[1] = v41.i64[0];
      int16x8_t v47 = vaddq_s16(v44, v35);
      int16x8_t v48 = vsubq_s16(v44, v35);
      int16x8_t v49 = vsubq_s16(vshlq_s16(v45, v20), v46);
      int16x8_t v50 = vaddq_s16(vshlq_s16(v46, v20), v45);
      int16x8_t v51 = vaddq_s16(v47, v50);
      int16x8_t v52 = vaddq_s16(v48, v49);
      int16x8_t v53 = vsubq_s16(v48, v49);
      int16x8_t v54 = vsubq_s16(v47, v50);
      int16x8_t v55 = vzip1q_s16(v51, v53);
      int16x8_t v56 = vzip2q_s16(v51, v53);
      int16x8_t v57 = vzip1q_s16(v52, v54);
      int16x8_t v58 = vzip2q_s16(v52, v54);
      v70.val[1] = (int8x16_t)vdupq_lane_s64(v56.i64[0], 0);
      v70.val[0] = (int8x16_t)vdupq_lane_s64(v58.i64[0], 0);
      int16x8_t v59 = vzip1q_s16(v55, v57);
      v70.val[0] = vqtbl2q_s8(v70, (int8x16_t)xmmword_221A37BC0);
      v70.val[1] = (int8x16_t)vzip2q_s64((int64x2_t)v59, (int64x2_t)v70.val[0]);
      v72.val[1] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v55, 1);
      v72.val[0] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v57, 1);
      int16x8_t v60 = (int16x8_t)vqtbl2q_s8(v72, (int8x16_t)xmmword_221A36990);
      int64x2_t v61 = (int64x2_t)vzip2q_s16(v56, v58);
      int16x8_t v62 = (int16x8_t)vzip2q_s64((int64x2_t)v60, v61);
      v59.i64[1] = v70.val[0].i64[0];
      v60.i64[1] = v61.i64[0];
      int16x8_t v63 = vaddq_s16(v59, v60);
      int16x8_t v64 = vsubq_s16(v59, v60);
      v70.val[0] = (int8x16_t)vshlq_s16(v62, v20);
      int16x8_t v65 = vsubq_s16(vshlq_s16((int16x8_t)v70.val[1], v20), v62);
      int16x8_t v66 = vaddq_s16((int16x8_t)v70.val[0], (int16x8_t)v70.val[1]);
      *int v42 = vshlq_s16(vaddq_s16(v63, v66), v21);
      v42[2] = vshlq_s16(vaddq_s16(v64, v65), v21);
      v42[4] = vshlq_s16(vsubq_s16(v64, v65), v21);
      v42[6] = vshlq_s16(vsubq_s16(v63, v66), v21);
    }
    ++v15;
    v19 += 4;
  }
  while (v15 != 8);
  return result;
}

int16x8_t *sub_2219ED5BC(int16x8_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = 0;
  uint64_t v65 = *MEMORY[0x263EF8340];
  unsigned int v4 = result[51].u8[0];
  unsigned int v5 = result[51].u8[2];
  do
  {
    int v6 = v4 & 1;
    v4 >>= 1;
    *(_DWORD *)&v64[v3] = -v6;
    v3 += 4;
  }
  while (v3 != 16);
  *(_OWORD *)(a3 + 112) = 0u;
  uint64_t v7 = (_OWORD *)(a3 + 112);
  int v8 = *((unsigned __int8 *)v7 - 100);
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  v7[6] = 0u;
  v7[7] = 0u;
  v7[8] = 0u;
  v7[9] = 0u;
  v7[10] = 0u;
  v7[11] = 0u;
  v7[12] = 0u;
  v7[13] = 0u;
  v7[14] = 0u;
  v7[15] = 0u;
  v7[16] = 0u;
  v7[17] = 0u;
  v7[18] = 0u;
  v7[19] = 0u;
  v7[20] = 0u;
  v7[21] = 0u;
  v7[22] = 0u;
  v7[23] = 0u;
  v7[24] = 0u;
  v7[25] = 0u;
  v7[26] = 0u;
  v7[27] = 0u;
  v7[28] = 0u;
  unsigned int v9 = (171 * v5) >> 10;
  v7[29] = 0u;
  v7[30] = 0u;
  v7[31] = 0u;
  int16x8_t v10 = *(int16x8_t *)&asc_221A38400[16 * (((_BYTE)v5 - 6 * (_BYTE)v9) & 0x1F)];
  if (v8)
  {
    if (v5 < 0x18)
    {
      unsigned int v14 = 0;
      unsigned int v13 = v9 - 4;
      char v11 = 1;
      unsigned int v12 = 1 << (3 - v9);
    }
    else
    {
      char v11 = 0;
      unsigned int v12 = 0;
      unsigned int v13 = 0;
      unsigned int v14 = v9 - 4;
    }
  }
  else
  {
    unsigned int v12 = 0;
    unsigned int v13 = 0;
    unsigned int v14 = 0;
    int16x8_t v10 = (int16x8_t)vshlq_u16((uint16x8_t)v10, (uint16x8_t)vdupq_n_s16(v9));
    char v11 = 1;
  }
  uint64_t v15 = 0;
  int32x4_t v16 = (int32x4_t)v12;
  uint16x8_t v17 = (uint16x8_t)vdupq_n_s16(v14);
  int32x4_t v18 = vdupq_n_s32(v13);
  int v19 = result + 5;
  v20.i64[0] = 0xFFFF00000000;
  v20.i64[1] = 0xFFFF00000000;
  v21.i64[0] = -1;
  v21.i64[1] = -1;
  v22.i64[0] = 0x5000500050005;
  v22.i64[1] = 0x5000500050005;
  do
  {
    if (*(_WORD *)&v64[v15 * 2])
    {
      int16x8_t v23 = v19[-2];
      int16x8_t v24 = *v19;
      int16x8_t v25 = (int16x8_t)vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, vandq_s8((int8x16_t)v19[-3], v20), 0xCuLL), vandq_s8((int8x16_t)v19[-3], (int8x16_t)xmmword_221A37BD0)), vextq_s8(vandq_s8((int8x16_t)v19[-3], (int8x16_t)xmmword_221A37BE0), (int8x16_t)0, 2uLL));
      int16x8_t v26 = (int16x8_t)vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, vandq_s8((int8x16_t)v19[-1], v20), 0xCuLL), vandq_s8((int8x16_t)v19[-1], (int8x16_t)xmmword_221A37BD0)), vextq_s8(vandq_s8((int8x16_t)v19[-1], (int8x16_t)xmmword_221A37BE0), (int8x16_t)0, 2uLL));
      if (v8)
      {
        if (v11)
        {
          int32x4_t v16 = (int32x4_t)vqtbl1q_s8((int8x16_t)v16, (int8x16_t)xmmword_221A36310);
          int16x8_t v27 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v25, v10));
          int16x8_t v28 = vmulq_s16(v25, v10);
          int16x8_t v29 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v28, v27), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v28, v27), v16), v18));
          int16x8_t v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v23.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v23, v10));
          int16x8_t v31 = vmulq_s16(v23, v10);
          int16x8_t v32 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v31, v30), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v31, v30), v16), v18));
          int16x8_t v33 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v26.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v26, v10));
          int16x8_t v34 = vmulq_s16(v26, v10);
          int16x8_t v35 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v34, v33), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v34, v33), v16), v18));
          int16x8_t v36 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v24, v10));
          int16x8_t v37 = vmulq_s16(v24, v10);
          int64x2_t v38 = (int64x2_t)vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v37, v36), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v37, v36), v16), v18));
        }
        else
        {
          int16x8_t v29 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v25, v10), v17);
          int16x8_t v32 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v23, v10), v17);
          int16x8_t v35 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v26, v10), v17);
          int64x2_t v38 = (int64x2_t)vshlq_u16((uint16x8_t)vmulq_s16(v24, v10), v17);
        }
      }
      else
      {
        int16x8_t v29 = vmulq_s16(v25, v10);
        int16x8_t v32 = vmulq_s16(v23, v10);
        int16x8_t v35 = vmulq_s16(v26, v10);
        int64x2_t v38 = (int64x2_t)vmulq_s16(v24, v10);
      }
      int16x8_t v39 = (int16x8_t *)((char *)v7 + 2 * word_221A383F0[v15]);
      int64x2_t v40 = (int64x2_t)vaddq_s16(v35, (int16x8_t)xmmword_221A37D10);
      int16x8_t v41 = vaddq_s16(v29, (int16x8_t)xmmword_221A37D10);
      int16x8_t v42 = (int16x8_t)vzip2q_s64((int64x2_t)v41, v40);
      int16x8_t v43 = (int16x8_t)vzip2q_s64((int64x2_t)v32, v38);
      v41.i64[1] = v40.i64[0];
      v32.i64[1] = v38.i64[0];
      int16x8_t v44 = vaddq_s16(v41, v32);
      int16x8_t v45 = vsubq_s16(v41, v32);
      int16x8_t v46 = vsubq_s16(vshlq_s16(v42, v21), v43);
      int16x8_t v47 = vaddq_s16(vshlq_s16(v43, v21), v42);
      int16x8_t v48 = vaddq_s16(v44, v47);
      int16x8_t v49 = vaddq_s16(v45, v46);
      int16x8_t v50 = vsubq_s16(v45, v46);
      int16x8_t v51 = vsubq_s16(v44, v47);
      int16x8_t v52 = vzip1q_s16(v48, v50);
      int16x8_t v53 = vzip2q_s16(v48, v50);
      int16x8_t v54 = vzip1q_s16(v49, v51);
      int16x8_t v55 = vzip2q_s16(v49, v51);
      v66.val[1] = (int8x16_t)vdupq_lane_s64(v53.i64[0], 0);
      v66.val[0] = (int8x16_t)vdupq_lane_s64(v55.i64[0], 0);
      int16x8_t v56 = vzip1q_s16(v52, v54);
      v66.val[0] = vqtbl2q_s8(v66, (int8x16_t)xmmword_221A37BC0);
      v66.val[1] = (int8x16_t)vzip2q_s64((int64x2_t)v56, (int64x2_t)v66.val[0]);
      v67.val[1] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v52, 1);
      v67.val[0] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v54, 1);
      int16x8_t v57 = (int16x8_t)vqtbl2q_s8(v67, (int8x16_t)xmmword_221A36990);
      int64x2_t v58 = (int64x2_t)vzip2q_s16(v53, v55);
      int16x8_t v59 = (int16x8_t)vzip2q_s64((int64x2_t)v57, v58);
      v56.i64[1] = v66.val[0].i64[0];
      v57.i64[1] = v58.i64[0];
      int16x8_t v60 = vaddq_s16(v56, v57);
      int16x8_t v61 = vsubq_s16(v56, v57);
      v66.val[0] = (int8x16_t)vshlq_s16(v59, v21);
      int16x8_t v62 = vsubq_s16(vshlq_s16((int16x8_t)v66.val[1], v21), v59);
      int16x8_t v63 = vaddq_s16((int16x8_t)v66.val[0], (int16x8_t)v66.val[1]);
      *int16x8_t v39 = vshlq_s16(vaddq_s16(v60, v63), v22);
      v39[2] = vshlq_s16(vaddq_s16(v61, v62), v22);
      v39[4] = vshlq_s16(vsubq_s16(v61, v62), v22);
      v39[6] = vshlq_s16(vsubq_s16(v60, v63), v22);
    }
    ++v15;
    v19 += 4;
  }
  while (v15 != 8);
  return result;
}

_WORD *sub_2219ED988(_WORD *result, double a2, double a3, int8x16_t a4, double a5, double a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a4.i32[0] = 0;
  uint64_t v10 = 0;
  unsigned int v11 = *((unsigned __int8 *)result + 816);
  unsigned __int8 v12 = *((unsigned char *)result + 818);
  int8x16_t v13 = 0uLL;
  *(_OWORD *)(a9 + 112) = 0u;
  unsigned int v14 = (_OWORD *)(a9 + 112);
  __int32 v15 = *((unsigned __int8 *)v14 - 100);
  v14[1] = 0u;
  v14[2] = 0u;
  v14[3] = 0u;
  v14[4] = 0u;
  v14[5] = 0u;
  v14[6] = 0u;
  v14[7] = 0u;
  v14[8] = 0u;
  v14[9] = 0u;
  v14[10] = 0u;
  v14[11] = 0u;
  v14[12] = 0u;
  v14[13] = 0u;
  v14[14] = 0u;
  v14[15] = 0u;
  v14[16] = 0u;
  v14[17] = 0u;
  v14[18] = 0u;
  v14[19] = 0u;
  v14[20] = 0u;
  v14[21] = 0u;
  v14[22] = 0u;
  v14[23] = 0u;
  v14[24] = 0u;
  v14[25] = 0u;
  v14[26] = 0u;
  unsigned int v16 = v12;
  unsigned int v17 = v12 / 6u;
  uint64_t v18 = v12 % 6u;
  int v19 = (uint16x8_t *)((char *)&unk_221A38470 + 128 * v18);
  uint64_t v20 = a10 + (v18 << 7);
  int8x16_t v21 = (int8x16_t)xmmword_221A362D0;
  int16x8_t v22 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)xmmword_221A37D10, (int8x16_t)xmmword_221A36310), (int8x16_t)xmmword_221A362E0), (int8x16_t)xmmword_221A362D0);
  v14[27] = 0u;
  v14[28] = 0u;
  unsigned int v23 = v17 - 6;
  int v24 = 1 << (5 - v17);
  v14[29] = 0u;
  v14[30] = 0u;
  unsigned __int32 v25 = (unsigned __int16)(v17 - 6);
  if (v16 < 0x24) {
    unsigned __int32 v25 = 0;
  }
  v14[31] = 0uLL;
  if (v16 >= 0x24)
  {
    unsigned int v23 = 0;
    int v24 = 0;
  }
  BOOL v26 = v16 < 0x24;
  if (!v15)
  {
    BOOL v26 = 1;
    unsigned __int32 v25 = 0;
    unsigned int v23 = 0;
    int v24 = 0;
    v17 -= 2;
  }
  v21.i32[0] = v15;
  int8x16_t v27 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(v21, a4), 0);
  v21.i32[0] = v17;
  a7.i32[0] = v25;
  v13.i32[0] = v24;
  int32x4_t v28 = (int32x4_t)vqtbl1q_s8(v13, (int8x16_t)xmmword_221A36310);
  uint16x8_t v29 = (uint16x8_t)vdupq_lane_s16((int16x4_t)*(_OWORD *)&vbslq_s8(v27, v21, a7), 0);
  int32x4_t v30 = vdupq_n_s32(v23);
  int16x8_t v31 = result + 40;
  v32.i64[0] = -1;
  v32.i64[1] = -1;
  v33.i64[0] = 0x1000100010001;
  v33.i64[1] = 0x1000100010001;
  v34.i64[0] = 0x5000500050005;
  v34.i64[1] = 0x5000500050005;
  do
  {
    if ((v11 & 1) == 0) {
      goto LABEL_16;
    }
    v35.i16[0] = *(v31 - 24);
    v35.i16[1] = *(v31 - 22);
    v35.i16[2] = *(v31 - 21);
    v35.i16[3] = *(v31 - 15);
    v36.i16[0] = *(v31 - 23);
    v36.i16[1] = *(v31 - 20);
    v36.i16[2] = *(v31 - 16);
    v36.i16[3] = *(v31 - 13);
    v37.i16[0] = *(v31 - 19);
    v37.i16[1] = *(v31 - 17);
    v37.i16[2] = *(v31 - 12);
    v37.i16[3] = *(v31 - 6);
    v38.i16[0] = *(v31 - 18);
    v38.i16[1] = *(v31 - 11);
    v38.i16[2] = *(v31 - 7);
    v38.i16[3] = *v31;
    v39.i16[0] = *(v31 - 10);
    v39.i16[1] = *(v31 - 8);
    v39.i16[2] = v31[1];
    v39.i16[3] = v31[7];
    v40.i16[0] = *(v31 - 9);
    v40.i16[1] = v31[2];
    v40.i16[2] = v31[6];
    v40.i16[3] = v31[16];
    v41.i16[0] = v31[3];
    v41.i16[1] = v31[5];
    v41.i16[2] = v31[17];
    v41.i16[3] = v31[20];
    int8x16_t result = v31 + 29;
    v42.i16[0] = v31[4];
    v42.i16[1] = v31[18];
    v42.i16[2] = v31[19];
    v42.i16[3] = v31[29];
    *(int16x4_t *)v43.i8 = v35;
    v43.i16[4] = *(v31 - 14);
    *(int16x4_t *)v44.i8 = v36;
    v44.i16[4] = *(v31 - 5);
    *(int16x4_t *)v45.i8 = v37;
    v45.i16[4] = *(v31 - 1);
    *(int16x4_t *)v46.i8 = v38;
    v46.i16[4] = v31[8];
    *(int16x4_t *)v47.i8 = v39;
    v47.i16[4] = v31[15];
    *(int16x4_t *)v48.i8 = v40;
    v48.i16[4] = v31[21];
    *(int16x4_t *)v49.i8 = v41;
    v49.i16[4] = v31[28];
    *(int16x4_t *)v50.i8 = v42;
    v50.i16[4] = v31[30];
    v43.i16[5] = *(v31 - 4);
    v44.i16[5] = *(v31 - 2);
    v45.i16[5] = v31[9];
    v46.i16[5] = v31[14];
    v47.i16[5] = v31[22];
    v48.i16[5] = v31[27];
    v49.i16[5] = v31[31];
    v50.i16[5] = v31[36];
    v43.i16[6] = *(v31 - 3);
    v44.i16[6] = v31[10];
    v45.i16[6] = v31[13];
    v46.i16[6] = v31[23];
    v47.i16[6] = v31[26];
    v48.i16[6] = v31[32];
    v49.i16[6] = v31[35];
    v50.i16[6] = v31[37];
    v43.i16[7] = v31[11];
    v44.i16[7] = v31[12];
    v45.i16[7] = v31[24];
    v46.i16[7] = v31[25];
    v47.i16[7] = v31[33];
    v48.i16[7] = v31[34];
    v49.i16[7] = v31[38];
    v50.i16[7] = v31[39];
    if (!v15)
    {
      int16x8_t v54 = vmulq_s16((int16x8_t)vshlq_u16(*v19, v29), v43);
      int16x8_t v59 = vmulq_s16((int16x8_t)vshlq_u16(v19[1], v29), v44);
      int16x8_t v62 = vmulq_s16((int16x8_t)vshlq_u16(v19[2], v29), v45);
      int16x8_t v67 = vmulq_s16((int16x8_t)vshlq_u16(v19[3], v29), v46);
      int16x8_t v70 = vmulq_s16((int16x8_t)vshlq_u16(v19[4], v29), v47);
      int16x8_t v75 = vmulq_s16((int16x8_t)vshlq_u16(v19[5], v29), v48);
      int16x8_t v78 = vmulq_s16((int16x8_t)vshlq_u16(v19[6], v29), v49);
      int16x8_t v83 = (int16x8_t)vshlq_u16(v19[7], v29);
LABEL_14:
      int16x8_t v82 = vmulq_s16(v83, v50);
      goto LABEL_15;
    }
    int16x8_t v51 = *(int16x8_t *)v20;
    if (!v26)
    {
      int16x8_t v54 = vmulq_s16((int16x8_t)vshlq_u16((uint16x8_t)v51, v29), v43);
      int16x8_t v59 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v20 + 16), v29), v44);
      int16x8_t v62 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v20 + 32), v29), v45);
      int16x8_t v67 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v20 + 48), v29), v46);
      int16x8_t v70 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v20 + 64), v29), v47);
      int16x8_t v75 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v20 + 80), v29), v48);
      int16x8_t v78 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v20 + 96), v29), v49);
      int16x8_t v83 = (int16x8_t)vshlq_u16(*(uint16x8_t *)(v20 + 112), v29);
      goto LABEL_14;
    }
    int16x8_t v52 = vuzp2q_s16((int16x8_t)vmull_s16(v35, *(int16x4_t *)v51.i8), (int16x8_t)vmull_high_s16(v43, v51));
    int16x8_t v53 = vmulq_s16(v51, v43);
    int16x8_t v54 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v53, v52), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v53, v52), v28), v30));
    int16x8_t v55 = *(int16x8_t *)(v20 + 16);
    int16x8_t v56 = *(int16x8_t *)(v20 + 32);
    int16x8_t v57 = vuzp2q_s16((int16x8_t)vmull_s16(v36, *(int16x4_t *)v55.i8), (int16x8_t)vmull_high_s16(v44, v55));
    int16x8_t v58 = vmulq_s16(v55, v44);
    int16x8_t v59 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v58, v57), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v58, v57), v28), v30));
    int16x8_t v60 = vuzp2q_s16((int16x8_t)vmull_s16(v37, *(int16x4_t *)v56.i8), (int16x8_t)vmull_high_s16(v45, v56));
    int16x8_t v61 = vmulq_s16(v56, v45);
    int16x8_t v62 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v61, v60), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v61, v60), v28), v30));
    int16x8_t v63 = *(int16x8_t *)(v20 + 48);
    int16x8_t v64 = *(int16x8_t *)(v20 + 64);
    int16x8_t v65 = vuzp2q_s16((int16x8_t)vmull_s16(v38, *(int16x4_t *)v63.i8), (int16x8_t)vmull_high_s16(v46, v63));
    int16x8_t v66 = vmulq_s16(v63, v46);
    int16x8_t v67 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v66, v65), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v66, v65), v28), v30));
    int16x8_t v68 = vuzp2q_s16((int16x8_t)vmull_s16(v39, *(int16x4_t *)v64.i8), (int16x8_t)vmull_high_s16(v47, v64));
    int16x8_t v69 = vmulq_s16(v64, v47);
    int16x8_t v70 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v69, v68), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v69, v68), v28), v30));
    int16x8_t v71 = *(int16x8_t *)(v20 + 80);
    int16x8_t v72 = *(int16x8_t *)(v20 + 96);
    int16x8_t v73 = vuzp2q_s16((int16x8_t)vmull_s16(v40, *(int16x4_t *)v71.i8), (int16x8_t)vmull_high_s16(v48, v71));
    int16x8_t v74 = vmulq_s16(v71, v48);
    int16x8_t v75 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v74, v73), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v74, v73), v28), v30));
    int16x8_t v76 = vuzp2q_s16((int16x8_t)vmull_s16(v41, *(int16x4_t *)v72.i8), (int16x8_t)vmull_high_s16(v49, v72));
    int16x8_t v77 = vmulq_s16(v72, v49);
    int16x8_t v78 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v77, v76), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v77, v76), v28), v30));
    int16x8_t v79 = *(int16x8_t *)(v20 + 112);
    int16x8_t v80 = vuzp2q_s16((int16x8_t)vmull_s16(v42, *(int16x4_t *)v79.i8), (int16x8_t)vmull_high_s16(v50, v79));
    int16x8_t v81 = vmulq_s16(v79, v50);
    int16x8_t v82 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v81, v80), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v81, v80), v28), v30));
LABEL_15:
    int16x8_t v84 = vaddq_s16(v70, v54);
    int v85 = (int16x8_t *)((char *)v14 + 2 * word_221A38460[v10]);
    int16x8_t v86 = vsubq_s16(v75, vaddq_s16(vaddq_s16(v67, v82), vshlq_s16(v82, v32)));
    int16x8_t v87 = vsubq_s16(v54, v70);
    int16x8_t v88 = vsubq_s16(vaddq_s16(v59, v82), vaddq_s16(v67, vshlq_s16(v67, v32)));
    int16x8_t v89 = vsubq_s16(vshlq_s16(v62, v32), v78);
    int16x8_t v90 = vaddq_s16(vaddq_s16(vsubq_s16(v75, v59), v82), vshlq_s16(v75, v32));
    int16x8_t v91 = vaddq_s16(vshlq_s16(v78, v32), v62);
    int16x8_t v92 = vaddq_s16(vaddq_s16(v67, vaddq_s16(v59, v75)), vshlq_s16(v59, v32));
    int16x8_t v93 = vaddq_s16(v91, v84);
    int16x8_t v94 = vaddq_s16(vshlq_s16(v92, v33), v86);
    int16x8_t v95 = vaddq_s16(v89, v87);
    int16x8_t v96 = vaddq_s16(vshlq_s16(v90, v33), v88);
    int16x8_t v97 = vsubq_s16(v87, v89);
    int16x8_t v98 = vsubq_s16(vshlq_s16(v88, v33), v90);
    int16x8_t v99 = vsubq_s16(v84, v91);
    int16x8_t v100 = vsubq_s16(v92, vshlq_s16(v86, v33));
    int16x8_t v101 = vaddq_s16(v100, v93);
    int16x8_t v102 = vaddq_s16(v98, v95);
    int16x8_t v103 = vaddq_s16(v96, v97);
    int16x8_t v104 = vaddq_s16(v94, v99);
    int16x8_t v105 = vsubq_s16(v99, v94);
    int16x8_t v106 = vsubq_s16(v97, v96);
    int16x8_t v107 = vsubq_s16(v95, v98);
    int16x8_t v108 = vsubq_s16(v93, v100);
    int32x4_t v109 = (int32x4_t)vzip1q_s16(v101, v102);
    int32x4_t v110 = (int32x4_t)vzip2q_s16(v101, v102);
    int32x4_t v111 = (int32x4_t)vzip1q_s16(v103, v104);
    int32x4_t v112 = (int32x4_t)vzip2q_s16(v103, v104);
    int32x4_t v113 = (int32x4_t)vzip1q_s16(v105, v106);
    int32x4_t v114 = (int32x4_t)vzip2q_s16(v105, v106);
    int32x4_t v115 = (int32x4_t)vzip1q_s16(v107, v108);
    int32x4_t v116 = (int32x4_t)vzip2q_s16(v107, v108);
    int64x2_t v117 = (int64x2_t)vzip1q_s32(v109, v111);
    int64x2_t v118 = (int64x2_t)vzip2q_s32(v109, v111);
    int64x2_t v119 = (int64x2_t)vzip1q_s32(v113, v115);
    int64x2_t v120 = (int64x2_t)vzip2q_s32(v113, v115);
    int64x2_t v121 = (int64x2_t)vzip1q_s32(v110, v112);
    int64x2_t v122 = (int64x2_t)vzip2q_s32(v110, v112);
    int64x2_t v123 = (int64x2_t)vzip1q_s32(v114, v116);
    int64x2_t v124 = (int64x2_t)vzip2q_s32(v114, v116);
    int16x8_t v125 = (int16x8_t)vzip1q_s64(v117, v119);
    int16x8_t v126 = (int16x8_t)vzip2q_s64(v117, v119);
    int16x8_t v127 = (int16x8_t)vzip1q_s64(v118, v120);
    int16x8_t v128 = (int16x8_t)vzip2q_s64(v118, v120);
    int16x8_t v129 = (int16x8_t)vzip1q_s64(v121, v123);
    int16x8_t v130 = (int16x8_t)vzip2q_s64(v121, v123);
    int16x8_t v131 = (int16x8_t)vzip1q_s64(v122, v124);
    int16x8_t v132 = (int16x8_t)vzip2q_s64(v122, v124);
    int16x8_t v133 = vaddq_s16(v125, v129);
    int16x8_t v134 = vsubq_s16(v130, vaddq_s16(vshlq_s16(v132, v32), vaddq_s16(v132, v128)));
    int16x8_t v135 = vsubq_s16(v125, v129);
    int16x8_t v136 = vsubq_s16(vaddq_s16(v132, v126), vaddq_s16(vshlq_s16(v128, v32), v128));
    int16x8_t v137 = vsubq_s16(vshlq_s16(v127, v32), v131);
    int16x8_t v138 = vaddq_s16(vsubq_s16(vshlq_s16(v130, v32), v126), vaddq_s16(v132, v130));
    int16x8_t v139 = vaddq_s16(vshlq_s16(v131, v32), v127);
    int16x8_t v140 = vaddq_s16(vaddq_s16(vshlq_s16(v126, v32), vaddq_s16(v130, v128)), v126);
    int16x8_t v141 = vaddq_s16(v134, vshlq_s16(v140, v33));
    int16x8_t v142 = vaddq_s16(v136, vshlq_s16(v138, v33));
    int16x8_t v143 = vsubq_s16(v135, v137);
    int16x8_t v144 = vsubq_s16(vshlq_s16(v136, v33), v138);
    int16x8_t v145 = vsubq_s16(v133, v139);
    int16x8_t v146 = vsubq_s16(v140, vshlq_s16(v134, v33));
    int16x8_t v147 = vaddq_s16(vaddq_s16(v133, v22), v139);
    int16x8_t v148 = vaddq_s16(vaddq_s16(v135, v22), v137);
    int16x8_t v149 = vaddq_s16(v143, v22);
    int16x8_t v150 = vaddq_s16(v145, v22);
    *int v85 = vshlq_s16(vaddq_s16(v147, v146), v34);
    v85[2] = vshlq_s16(vaddq_s16(v148, v144), v34);
    v85[4] = vshlq_s16(vaddq_s16(v149, v142), v34);
    v85[6] = vshlq_s16(vaddq_s16(v150, v141), v34);
    v85[8] = vshlq_s16(vsubq_s16(v150, v141), v34);
    v85[10] = vshlq_s16(vsubq_s16(v149, v142), v34);
    v85[12] = vshlq_s16(vsubq_s16(v148, v144), v34);
    v85[14] = vshlq_s16(vsubq_s16(v147, v146), v34);
LABEL_16:
    v11 >>= 1;
    ++v10;
    v31 += 64;
  }
  while (v10 != 4);
  return result;
}

uint64_t sub_2219EE180(uint64_t result, double a2, int8x16_t a3, double a4, double a5, double a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a3.i32[0] = 0;
  uint64_t v14 = 0;
  unsigned int v15 = *(unsigned __int8 *)(result + 816);
  unsigned __int8 v16 = *(unsigned char *)(result + 818);
  int8x16_t v17 = 0uLL;
  *(_OWORD *)(a9 + 112) = 0u;
  uint64_t v18 = (_OWORD *)(a9 + 112);
  __int32 v19 = *((unsigned __int8 *)v18 - 100);
  v18[1] = 0u;
  v18[2] = 0u;
  v18[3] = 0u;
  v18[4] = 0u;
  v18[5] = 0u;
  v18[6] = 0u;
  v18[7] = 0u;
  v18[8] = 0u;
  v18[9] = 0u;
  v18[10] = 0u;
  v18[11] = 0u;
  v18[12] = 0u;
  v18[13] = 0u;
  v18[14] = 0u;
  v18[15] = 0u;
  v18[16] = 0u;
  v18[17] = 0u;
  v18[18] = 0u;
  v18[19] = 0u;
  v18[20] = 0u;
  v18[21] = 0u;
  v18[22] = 0u;
  v18[23] = 0u;
  v18[24] = 0u;
  v18[25] = 0u;
  v18[26] = 0u;
  unsigned int v20 = v16;
  unsigned int v21 = v16 / 6u;
  uint64_t v22 = v16 % 6u;
  unsigned int v23 = (uint16x8_t *)((char *)&unk_221A38470 + 128 * v22);
  uint64_t v24 = a10 + (v22 << 7);
  int8x16_t v25 = (int8x16_t)xmmword_221A362D0;
  int16x8_t v26 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)xmmword_221A37D10, (int8x16_t)xmmword_221A36310), (int8x16_t)xmmword_221A362E0), (int8x16_t)xmmword_221A362D0);
  unsigned int v27 = v21 - 6;
  int v28 = 1 << (5 - v21);
  v18[27] = 0u;
  v18[28] = 0u;
  unsigned __int32 v29 = (unsigned __int16)(v21 - 6);
  if (v20 < 0x24) {
    unsigned __int32 v29 = 0;
  }
  v18[29] = 0uLL;
  v18[30] = 0uLL;
  if (v20 >= 0x24)
  {
    unsigned int v27 = 0;
    int v28 = 0;
  }
  BOOL v30 = v20 < 0x24;
  if (!v19) {
    BOOL v30 = 1;
  }
  v18[31] = 0uLL;
  if (!v19)
  {
    unsigned __int32 v29 = 0;
    unsigned int v27 = 0;
    int v28 = 0;
    v21 -= 2;
  }
  v25.i32[0] = v19;
  int8x16_t v31 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(v25, a3), 0);
  v25.i32[0] = v21;
  a7.i32[0] = v29;
  v17.i32[0] = v28;
  uint16x8_t v32 = (uint16x8_t)vdupq_lane_s16((int16x4_t)*(_OWORD *)&vbslq_s8(v31, v25, a7), 0);
  int32x4_t v33 = vdupq_n_s32(v27);
  int32x4_t v34 = (int32x4_t)vqtbl1q_s8(v17, (int8x16_t)xmmword_221A36310);
  int16x4_t v35 = word_221A38460;
  v36.i64[0] = -1;
  v36.i64[1] = -1;
  v37.i64[0] = 0x1000100010001;
  v37.i64[1] = 0x1000100010001;
  v38.i64[0] = 0x5000500050005;
  v38.i64[1] = 0x5000500050005;
  do
  {
    if ((v15 & 1) == 0) {
      goto LABEL_18;
    }
    v40.i16[0] = *(_WORD *)(result + v14 + 38);
    v13.i16[0] = *(_WORD *)(result + v14 + 136);
    v13.i16[2] = *(_WORD *)(result + v14 + 138);
    v39.i32[0] = *(_DWORD *)(result + v14 + 32);
    v39.i16[2] = *(_WORD *)(result + v14 + 36);
    v39.i16[3] = *(_WORD *)(result + v14 + 42);
    v40.i16[1] = *(_WORD *)(result + v14 + 40);
    v40.i16[2] = *(_WORD *)(result + v14 + 46);
    v40.i16[3] = *(_WORD *)(result + v14 + 50);
    v10.i16[0] = *(_WORD *)(result + v14 + 148);
    v10.i16[2] = *(_WORD *)(result + v14 + 150);
    *(int16x4_t *)v41.i8 = v39;
    v41.i16[4] = *(_WORD *)(result + v14 + 44);
    *(int16x4_t *)v42.i8 = v40;
    v42.i16[4] = *(_WORD *)(result + v14 + 58);
    v41.i16[5] = *(_WORD *)(result + v14 + 52);
    v42.i16[5] = *(_WORD *)(result + v14 + 66);
    v11.i32[0] = *(unsigned __int16 *)(result + v14 + 54);
    v11.i16[2] = *(_WORD *)(result + v14 + 56);
    v41.i32[3] = vmovn_s32((int32x4_t)v11).u32[0];
    v12.i32[0] = *(unsigned __int16 *)(result + v14 + 68);
    v12.i16[2] = *(_WORD *)(result + v14 + 70);
    v42.i32[3] = vmovn_s32((int32x4_t)v12).u32[0];
    v43.i16[0] = *(_WORD *)(result + v14 + 48);
    v43.i16[1] = *(_WORD *)(result + v14 + 60);
    v43.i16[2] = *(_WORD *)(result + v14 + 64);
    v43.i16[3] = *(_WORD *)(result + v14 + 72);
    v43.i64[1] = *(void *)(result + v14 + 80);
    v44.i16[0] = *(_WORD *)(result + v14 + 62);
    v44.i16[1] = *(_WORD *)(result + v14 + 74);
    v44.i16[2] = *(_WORD *)(result + v14 + 78);
    v44.i16[3] = *(_WORD *)(result + v14 + 88);
    v44.i64[1] = *(void *)(result + v14 + 96);
    v45.i16[0] = *(_WORD *)(result + v14 + 76);
    v45.i16[1] = *(_WORD *)(result + v14 + 90);
    v45.i16[2] = *(_WORD *)(result + v14 + 94);
    v45.i16[3] = *(_WORD *)(result + v14 + 104);
    v45.i64[1] = *(void *)(result + v14 + 112);
    v46.i16[0] = *(_WORD *)(result + v14 + 92);
    v46.i16[1] = *(_WORD *)(result + v14 + 106);
    v46.i16[2] = *(_WORD *)(result + v14 + 110);
    v46.i16[3] = *(_WORD *)(result + v14 + 120);
    v46.i64[1] = *(void *)(result + v14 + 126);
    v47.i16[0] = *(_WORD *)(result + v14 + 108);
    v47.i16[1] = *(_WORD *)(result + v14 + 122);
    v47.i16[2] = *(_WORD *)(result + v14 + 124);
    v47.i16[3] = *(_WORD *)(result + v14 + 134);
    v47.i64[1] = *(void *)(result + v14 + 140);
    int16x4_t v10 = vuzp1_s16(*(int16x4_t *)v13.i8, v10);
    *(int16x4_t *)v48.i8 = v10;
    v48.i64[1] = *(void *)(result + v14 + 152);
    if (!v19)
    {
      int16x8_t v57 = vmulq_s16((int16x8_t)vshlq_u16(*v23, v32), v41);
      int16x8_t v62 = vmulq_s16((int16x8_t)vshlq_u16(v23[1], v32), v42);
      int16x8_t v65 = vmulq_s16((int16x8_t)vshlq_u16(v23[2], v32), v43);
      int16x8_t v70 = vmulq_s16((int16x8_t)vshlq_u16(v23[3], v32), v44);
      int16x8_t v73 = vmulq_s16((int16x8_t)vshlq_u16(v23[4], v32), v45);
      int16x8_t v78 = vmulq_s16((int16x8_t)vshlq_u16(v23[5], v32), v46);
      uint16x8_t v86 = v23[7];
      int16x8_t v81 = vmulq_s16((int16x8_t)vshlq_u16(v23[6], v32), v47);
LABEL_16:
      int16x8_t v85 = vmulq_s16((int16x8_t)vshlq_u16(v86, v32), v48);
      goto LABEL_17;
    }
    int16x8_t v49 = *(int16x8_t *)v24;
    if (!v30)
    {
      int16x8_t v57 = vmulq_s16((int16x8_t)vshlq_u16((uint16x8_t)v49, v32), v41);
      int16x8_t v62 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v24 + 16), v32), v42);
      int16x8_t v65 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v24 + 32), v32), v43);
      int16x8_t v70 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v24 + 48), v32), v44);
      int16x8_t v73 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v24 + 64), v32), v45);
      int16x8_t v78 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v24 + 80), v32), v46);
      int16x8_t v81 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v24 + 96), v32), v47);
      uint16x8_t v86 = *(uint16x8_t *)(v24 + 112);
      goto LABEL_16;
    }
    v50.i16[1] = *(_WORD *)(result + v14 + 60);
    v50.i16[2] = *(_WORD *)(result + v14 + 64);
    v50.i16[3] = *(_WORD *)(result + v14 + 72);
    v51.i16[1] = *(_WORD *)(result + v14 + 74);
    v51.i16[2] = *(_WORD *)(result + v14 + 78);
    v51.i16[3] = *(_WORD *)(result + v14 + 88);
    v52.i16[1] = *(_WORD *)(result + v14 + 90);
    v52.i16[2] = *(_WORD *)(result + v14 + 94);
    v52.i16[3] = *(_WORD *)(result + v14 + 104);
    v53.i16[1] = *(_WORD *)(result + v14 + 106);
    v53.i16[2] = *(_WORD *)(result + v14 + 110);
    v53.i16[3] = *(_WORD *)(result + v14 + 120);
    v54.i16[1] = *(_WORD *)(result + v14 + 122);
    v54.i16[2] = *(_WORD *)(result + v14 + 124);
    v54.i16[3] = *(_WORD *)(result + v14 + 134);
    int16x8_t v55 = vuzp2q_s16((int16x8_t)vmull_s16(v39, *(int16x4_t *)v49.i8), (int16x8_t)vmull_high_s16(v41, v49));
    int16x8_t v56 = vmulq_s16(v49, v41);
    int16x8_t v57 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v56, v55), v34), v33)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v56, v55), v34), v33));
    int16x8_t v58 = *(int16x8_t *)(v24 + 16);
    int16x8_t v59 = *(int16x8_t *)(v24 + 32);
    int16x8_t v60 = vuzp2q_s16((int16x8_t)vmull_s16(v40, *(int16x4_t *)v58.i8), (int16x8_t)vmull_high_s16(v42, v58));
    int16x8_t v61 = vmulq_s16(v58, v42);
    int16x8_t v62 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v61, v60), v34), v33)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v61, v60), v34), v33));
    v50.i16[0] = *(_WORD *)(result + v14 + 48);
    int16x8_t v63 = vuzp2q_s16((int16x8_t)vmull_s16(v50, *(int16x4_t *)v59.i8), (int16x8_t)vmull_s16(*(int16x4_t *)(result + v14 + 80), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v59, (int8x16_t)v59, 8uLL)));
    int16x8_t v64 = vmulq_s16(v59, v43);
    int16x8_t v65 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v64, v63), v34), v33)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v64, v63), v34), v33));
    int16x8_t v66 = *(int16x8_t *)(v24 + 48);
    int16x8_t v67 = *(int16x8_t *)(v24 + 64);
    v51.i16[0] = *(_WORD *)(result + v14 + 62);
    int16x8_t v68 = vuzp2q_s16((int16x8_t)vmull_s16(v51, *(int16x4_t *)v66.i8), (int16x8_t)vmull_s16(*(int16x4_t *)(result + v14 + 96), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v66, (int8x16_t)v66, 8uLL)));
    int16x8_t v69 = vmulq_s16(v66, v44);
    int16x8_t v70 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v69, v68), v34), v33)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v69, v68), v34), v33));
    v52.i16[0] = *(_WORD *)(result + v14 + 76);
    int16x8_t v71 = vuzp2q_s16((int16x8_t)vmull_s16(v52, *(int16x4_t *)v67.i8), (int16x8_t)vmull_s16(*(int16x4_t *)(result + v14 + 112), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v67, (int8x16_t)v67, 8uLL)));
    int16x8_t v72 = vmulq_s16(v67, v45);
    int16x8_t v73 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v72, v71), v34), v33)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v72, v71), v34), v33));
    int16x8_t v74 = *(int16x8_t *)(v24 + 80);
    int16x8_t v75 = *(int16x8_t *)(v24 + 96);
    v53.i16[0] = *(_WORD *)(result + v14 + 92);
    int16x8_t v76 = vuzp2q_s16((int16x8_t)vmull_s16(v53, *(int16x4_t *)v74.i8), (int16x8_t)vmull_s16(*(int16x4_t *)(result + v14 + 126), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v74, (int8x16_t)v74, 8uLL)));
    int16x8_t v77 = vmulq_s16(v74, v46);
    int16x8_t v78 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v77, v76), v34), v33)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v77, v76), v34), v33));
    v54.i16[0] = *(_WORD *)(result + v14 + 108);
    int16x8_t v79 = vuzp2q_s16((int16x8_t)vmull_s16(v54, *(int16x4_t *)v75.i8), (int16x8_t)vmull_s16(*(int16x4_t *)(result + v14 + 140), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v75, (int8x16_t)v75, 8uLL)));
    int16x8_t v80 = vmulq_s16(v75, v47);
    int16x8_t v81 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v80, v79), v34), v33)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v80, v79), v34), v33));
    int16x8_t v82 = *(int16x8_t *)(v24 + 112);
    int16x8_t v83 = vuzp2q_s16((int16x8_t)vmull_s16(v10, *(int16x4_t *)v82.i8), (int16x8_t)vmull_s16(*(int16x4_t *)(result + v14 + 152), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v82, (int8x16_t)v82, 8uLL)));
    int16x8_t v84 = vmulq_s16(v82, v48);
    int16x8_t v85 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v84, v83), v34), v33)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v84, v83), v34), v33));
LABEL_17:
    int16x8_t v87 = vaddq_s16(v73, v57);
    int16x8_t v88 = (int16x8_t *)((char *)v18 + 2 * *v35);
    int16x8_t v89 = vsubq_s16(v78, vaddq_s16(v70, vaddq_s16(v85, vshlq_s16(v85, v36))));
    int16x8_t v90 = vsubq_s16(v57, v73);
    int16x8_t v91 = vsubq_s16(vaddq_s16(v62, v85), vaddq_s16(v70, vshlq_s16(v70, v36)));
    int16x8_t v92 = vsubq_s16(vshlq_s16(v65, v36), v81);
    int16x8_t v93 = vaddq_s16(vsubq_s16(v78, v62), vaddq_s16(v85, vshlq_s16(v78, v36)));
    int16x8_t v94 = vaddq_s16(vshlq_s16(v81, v36), v65);
    int16x8_t v95 = vaddq_s16(vaddq_s16(v70, vaddq_s16(v62, v78)), vshlq_s16(v62, v36));
    int16x8_t v96 = vaddq_s16(v94, v87);
    int16x8_t v97 = vaddq_s16(vshlq_s16(v95, v37), v89);
    int16x8_t v98 = vaddq_s16(v92, v90);
    int16x8_t v99 = vaddq_s16(vshlq_s16(v93, v37), v91);
    int16x8_t v100 = vsubq_s16(v90, v92);
    int16x8_t v101 = vsubq_s16(vshlq_s16(v91, v37), v93);
    int16x8_t v102 = vsubq_s16(v87, v94);
    int16x8_t v103 = vsubq_s16(v95, vshlq_s16(v89, v37));
    int16x8_t v104 = vaddq_s16(v103, v96);
    int16x8_t v105 = vaddq_s16(v101, v98);
    int16x8_t v106 = vaddq_s16(v99, v100);
    int16x8_t v107 = vaddq_s16(v97, v102);
    int16x8_t v108 = vsubq_s16(v102, v97);
    int16x8_t v109 = vsubq_s16(v100, v99);
    int16x8_t v110 = vsubq_s16(v98, v101);
    int16x8_t v111 = vsubq_s16(v96, v103);
    int32x4_t v112 = (int32x4_t)vzip1q_s16(v104, v105);
    int32x4_t v113 = (int32x4_t)vzip2q_s16(v104, v105);
    int32x4_t v114 = (int32x4_t)vzip1q_s16(v106, v107);
    int32x4_t v115 = (int32x4_t)vzip2q_s16(v106, v107);
    int32x4_t v116 = (int32x4_t)vzip1q_s16(v108, v109);
    int32x4_t v117 = (int32x4_t)vzip2q_s16(v108, v109);
    int32x4_t v118 = (int32x4_t)vzip1q_s16(v110, v111);
    int32x4_t v119 = (int32x4_t)vzip2q_s16(v110, v111);
    int64x2_t v120 = (int64x2_t)vzip1q_s32(v112, v114);
    int64x2_t v121 = (int64x2_t)vzip2q_s32(v112, v114);
    int64x2_t v122 = (int64x2_t)vzip1q_s32(v116, v118);
    int64x2_t v123 = (int64x2_t)vzip2q_s32(v116, v118);
    int64x2_t v124 = (int64x2_t)vzip1q_s32(v113, v115);
    int64x2_t v125 = (int64x2_t)vzip2q_s32(v113, v115);
    int64x2_t v126 = (int64x2_t)vzip1q_s32(v117, v119);
    int64x2_t v127 = (int64x2_t)vzip2q_s32(v117, v119);
    int16x8_t v128 = (int16x8_t)vzip1q_s64(v120, v122);
    int16x8_t v129 = (int16x8_t)vzip2q_s64(v120, v122);
    int16x8_t v130 = (int16x8_t)vzip1q_s64(v121, v123);
    int16x8_t v131 = (int16x8_t)vzip2q_s64(v121, v123);
    int16x8_t v132 = (int16x8_t)vzip1q_s64(v124, v126);
    int16x8_t v133 = (int16x8_t)vzip2q_s64(v124, v126);
    int16x8_t v134 = (int16x8_t)vzip1q_s64(v125, v127);
    int16x8_t v135 = (int16x8_t)vzip2q_s64(v125, v127);
    int16x8_t v136 = vaddq_s16(v128, v132);
    int16x8_t v137 = vsubq_s16(v133, vaddq_s16(vshlq_s16(v135, v36), vaddq_s16(v135, v131)));
    int16x8_t v138 = vsubq_s16(v128, v132);
    int16x8_t v139 = vsubq_s16(vaddq_s16(v135, v129), vaddq_s16(vshlq_s16(v131, v36), v131));
    int16x8_t v140 = vsubq_s16(vshlq_s16(v130, v36), v134);
    int16x8_t v141 = vaddq_s16(vsubq_s16(vshlq_s16(v133, v36), v129), vaddq_s16(v135, v133));
    int16x8_t v142 = vaddq_s16(vshlq_s16(v134, v36), v130);
    int16x8_t v143 = vaddq_s16(vaddq_s16(vshlq_s16(v129, v36), vaddq_s16(v133, v131)), v129);
    int16x8_t v144 = vaddq_s16(v137, vshlq_s16(v143, v37));
    int16x8_t v145 = vaddq_s16(v139, vshlq_s16(v141, v37));
    int16x8_t v146 = vsubq_s16(v138, v140);
    int16x8_t v147 = vsubq_s16(vshlq_s16(v139, v37), v141);
    int16x8_t v148 = vsubq_s16(v136, v142);
    int16x8_t v149 = vsubq_s16(v143, vshlq_s16(v137, v37));
    int16x8_t v12 = vaddq_s16(vaddq_s16(v136, v26), v142);
    int16x8_t v11 = vaddq_s16(vaddq_s16(v138, v26), v140);
    int16x8_t v150 = vaddq_s16(v146, v26);
    int16x8_t v151 = vaddq_s16(v148, v26);
    *int16x8_t v88 = vshlq_s16(vaddq_s16(v12, v149), v38);
    int16x8_t v13 = vshlq_s16(vaddq_s16(v11, v147), v38);
    v88[2] = v13;
    v88[4] = vshlq_s16(vaddq_s16(v150, v145), v38);
    v88[6] = vshlq_s16(vaddq_s16(v151, v144), v38);
    v88[8] = vshlq_s16(vsubq_s16(v151, v144), v38);
    v88[10] = vshlq_s16(vsubq_s16(v150, v145), v38);
    v88[12] = vshlq_s16(vsubq_s16(v11, v147), v38);
    v88[14] = vshlq_s16(vsubq_s16(v12, v149), v38);
LABEL_18:
    v15 >>= 1;
    ++v35;
    v14 += 128;
  }
  while (v14 != 512);
  return result;
}

int8x16_t *sub_2219EE974(int8x16_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v147 = *MEMORY[0x263EF8340];
  unsigned int v4 = (result[51].u8[2] / 6u) & 0x1F;
  unsigned __int8 v5 = result[51].i8[2] % 6u;
  int v6 = result[51].u8[0];
  int v146 = v6;
  int32x4_t v145 = vdupq_n_s32(16843009 * v6);
  int v7 = *(unsigned __int8 *)(a3 + 12);
  if (*(unsigned char *)(a3 + 12))
  {
    int16x8_t v8 = *(int16x8_t *)&asc_221A38400[16 * v5];
    int16x8_t v9 = *(int16x8_t *)(a4 + 16 * v5);
    unsigned int v10 = v4 - 4;
    if (v4 <= 3)
    {
      unsigned int v18 = 0;
      int v17 = 0;
      int v12 = 1 << (3 - v4);
    }
    else
    {
      if (v4 >= 6)
      {
        char v11 = 0;
        LOWORD(v12) = 0;
        unsigned int v13 = 0;
        unsigned int v14 = 0;
        unsigned int v15 = 0;
        unsigned int v16 = (unsigned __int16)(v4 - 6);
        int v17 = 1;
        goto LABEL_9;
      }
      LOWORD(v12) = 0;
      int v17 = 1;
      unsigned int v18 = v4 - 4;
      unsigned int v10 = 0;
    }
    unsigned int v16 = 0;
    unsigned int v15 = 6 - v4;
    char v11 = 1;
    unsigned int v14 = 1 << (5 - v4);
    unsigned int v13 = v10;
    unsigned int v10 = v18;
  }
  else
  {
    int v17 = 0;
    LOWORD(v12) = 0;
    unsigned int v13 = 0;
    unsigned int v10 = 0;
    unsigned int v14 = 0;
    unsigned int v15 = 0;
    unsigned int v16 = 0;
    int16x8_t v9 = (int16x8_t)vshlq_u16(*(uint16x8_t *)&asc_221A38400[16 * v5], (uint16x8_t)vdupq_n_s16(v4));
    char v11 = 1;
    int16x8_t v8 = v9;
  }
LABEL_9:
  int16x8_t v19 = (int16x8_t)vqtbl1q_s8((int8x16_t)vzip1q_s16(v9, v9), (int8x16_t)xmmword_221A36310);
  int8x16_t v20 = result[1];
  v21.i64[0] = 0xFFFF000000000000;
  v21.i64[1] = 0xFFFF000000000000;
  v22.i64[0] = 0xFFFFLL;
  v22.i64[1] = 0xFFFFLL;
  int16x8_t v23 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vorrq_s8(vandq_s8(v20, (int8x16_t)xmmword_221A37C10), vandq_s8(*result, (int8x16_t)xmmword_221A37BF0)), vextq_s8((int8x16_t)0, vandq_s8(v20, v21), 0xEuLL)), (int8x16_t)xmmword_221A37C20), (int8x16_t)xmmword_221A36960);
  int16x8_t v24 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vorrq_s8(vorrq_s8(vandq_s8(v20, (int8x16_t)xmmword_221A37C00), vandq_s8(*result, (int8x16_t)xmmword_221A37C10)), vextq_s8(vandq_s8(*result, v22), (int8x16_t)0, 2uLL)), (int8x16_t)xmmword_221A36970), (int8x16_t)xmmword_221A37C30);
  if (*(unsigned char *)(a3 + 12))
  {
    if ((v11 & 1) == 0)
    {
      int16x8_t v32 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v23.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v23, v19));
      int16x8_t v33 = vmulq_s16(v23, v19);
      uint32x4_t v34 = (uint32x4_t)vzip2q_s16(v33, v32);
      uint32x4_t v35 = (uint32x4_t)vdupq_n_s32(v16);
      uint32x4_t v36 = (uint32x4_t)vzip1q_s16(v33, v32);
      int32x4_t v28 = (int32x4_t)vshlq_u32(v34, v35);
      int32x4_t v29 = (int32x4_t)vshlq_u32(v36, v35);
      int16x8_t v37 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v24, v19));
      int16x8_t v38 = vmulq_s16(v24, v19);
      uint32x4_t v39 = (uint32x4_t)vzip2q_s16(v38, v37);
      int32x4_t v25 = (int32x4_t)vzip1q_s16(v38, v37);
      int32x4_t v40 = (int32x4_t)vshlq_u32(v39, v35);
      int32x4_t v41 = (int32x4_t)vshlq_u32((uint32x4_t)v25, v35);
      v25.i32[0] = 0;
      goto LABEL_18;
    }
    v25.i32[0] = v15;
    int16x8_t v26 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v23.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v23, v19));
    int16x8_t v27 = vmulq_s16(v23, v19);
    int32x4_t v28 = (int32x4_t)vzip2q_s16(v27, v26);
    int32x4_t v29 = vaddq_s32((int32x4_t)v14, (int32x4_t)vzip1q_s16(v27, v26));
    int16x8_t v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v24, v19));
    int16x8_t v31 = vmulq_s16(v24, v19);
  }
  else
  {
    if ((v19.i8[0] & 3) != 0)
    {
      int32x4_t v25 = (int32x4_t)xmmword_221A37C40;
    }
    else
    {
      v42.i64[0] = 0x1000100010001;
      v42.i64[1] = 0x1000100010001;
      int16x8_t v19 = (int16x8_t)vshlq_u16((uint16x8_t)v19, v42);
      int32x4_t v25 = 0uLL;
    }
    int16x8_t v43 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v23.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v23, v19));
    int16x8_t v44 = vmulq_s16(v19, v23);
    int32x4_t v28 = (int32x4_t)vzip2q_s16(v44, v43);
    int32x4_t v29 = vaddq_s32(v25, (int32x4_t)vzip1q_s16(v44, v43));
    int16x8_t v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v19.i8), (int16x8_t)vmull_high_s16(v24, v19));
    int16x8_t v31 = vmulq_s16(v19, v24);
  }
  int32x4_t v40 = (int32x4_t)vzip2q_s16(v31, v30);
  int32x4_t v41 = (int32x4_t)vzip1q_s16(v31, v30);
LABEL_18:
  uint64_t v45 = a3 + 112;
  int32x4_t v46 = vaddq_s32(v29, v41);
  int32x4_t v47 = vaddq_s32(v28, v40);
  int32x4_t v48 = vsubq_s32(v29, v41);
  int32x4_t v49 = vsubq_s32(v28, v40);
  int32x4_t v50 = vaddq_s32(v46, v47);
  int32x4_t v51 = vsubq_s32(v46, v47);
  int32x4_t v52 = vsubq_s32(v48, v49);
  int32x4_t v53 = vaddq_s32(v48, v49);
  int32x4_t v54 = vzip1q_s32(v50, v52);
  int32x4_t v55 = vzip2q_s32(v50, v52);
  int32x4_t v56 = vzip1q_s32(v51, v53);
  int32x4_t v57 = vzip2q_s32(v51, v53);
  int32x4_t v58 = vzip1q_s32(v54, v56);
  int32x4_t v59 = vzip2q_s32(v54, v56);
  int32x4_t v60 = vzip1q_s32(v55, v57);
  int32x4_t v61 = vzip2q_s32(v55, v57);
  int32x4_t v62 = vaddq_s32(v58, v59);
  int32x4_t v63 = vsubq_s32(v58, v59);
  int32x4_t v64 = vaddq_s32(v60, v61);
  int32x4_t v65 = vsubq_s32(v60, v61);
  int32x4_t v66 = vaddq_s32(v62, v64);
  int32x4_t v67 = vsubq_s32(v62, v64);
  int32x4_t v68 = vsubq_s32(v63, v65);
  int32x4_t v69 = vaddq_s32(v63, v65);
  int32x4_t v70 = vdupq_n_s32(-v25.i32[0]);
  int32x4_t v71 = vshlq_s32(v66, v70);
  int32x4_t v72 = vshlq_s32(v67, v70);
  int32x4_t v73 = vshlq_s32(v68, v70);
  int32x4_t v74 = vshlq_s32(v69, v70);
  *(int16x4_t *)v70.i8 = vqmovn_s32(v71);
  *(int16x4_t *)v71.i8 = vqmovn_s32(v72);
  *(int16x4_t *)v72.i8 = vqmovn_s32(v73);
  *(int16x4_t *)v74.i8 = vqmovn_s32(v74);
  int16x8_t v75 = (int16x8_t)vzip1q_s32(v70, v71);
  int16x8_t v76 = (int16x8_t)vzip1q_s32(v72, v74);
  int16x8_t v77 = (int16x8_t)vqtbl1q_s8((int8x16_t)xmmword_221A37C50, (int8x16_t)xmmword_221A36310);
  int16x8_t v78 = vqaddq_s16(v75, v77);
  int16x8_t v79 = vqaddq_s16(v76, v77);
  if (v6)
  {
    uint64_t v80 = 0;
    uint16x8_t v81 = (uint16x8_t)vdupq_n_s16(v10);
    int16x8_t v82 = result + 3;
    int32x4_t v83 = vdupq_n_s32(v13);
    v84.i64[0] = 0x5000500050005;
    v84.i64[1] = 0x5000500050005;
    int8x16_t result = (int8x16_t *)&unk_221A37000;
    v85.i64[0] = -1;
    v85.i64[1] = -1;
    do
    {
      uint16x8_t v86 = (int16x8_t *)(v45 + (unsigned __int16)word_221A383D0[v80]);
      if (v145.i16[v80])
      {
        int16x8_t v87 = (int16x8_t)vandq_s8((int8x16_t)v78, (int8x16_t)xmmword_221A37D20);
        int8x16_t v88 = v82[-1];
        int8x16_t v89 = v82[1];
        int8x16_t v90 = v82[2];
        v152.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v88, (int8x16_t)xmmword_221A37C60), (int8x16_t)xmmword_221A37C70), (int8x16_t)xmmword_221A37C80);
        v152.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(*v82, (int8x16_t)xmmword_221A37C90), (int8x16_t)xmmword_221A37CA0), (int8x16_t)xmmword_221A369E0);
        int16x8_t v91 = (int16x8_t)vqtbl2q_s8(v152, (int8x16_t)xmmword_221A37CB0);
        v148.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v88, (int8x16_t)xmmword_221A37CC0), (int8x16_t)xmmword_221A37CD0), (int8x16_t)xmmword_221A362D0);
        v148.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(*v82, (int8x16_t)xmmword_221A37CE0), (int8x16_t)xmmword_221A36860), (int8x16_t)xmmword_221A369D0);
        int16x8_t v92 = (int16x8_t)vqtbl2q_s8(v148, (int8x16_t)xmmword_221A37CF0);
        v150.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v89, (int8x16_t)xmmword_221A37C60), (int8x16_t)xmmword_221A37C70), (int8x16_t)xmmword_221A37C80);
        v150.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v90, (int8x16_t)xmmword_221A37C90), (int8x16_t)xmmword_221A37CA0), (int8x16_t)xmmword_221A369E0);
        int16x8_t v93 = (int16x8_t)vqtbl2q_s8(v150, (int8x16_t)xmmword_221A37CB0);
        v150.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v89, (int8x16_t)xmmword_221A37CC0), (int8x16_t)xmmword_221A37CD0), (int8x16_t)xmmword_221A362D0);
        v150.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v90, (int8x16_t)xmmword_221A37CE0), (int8x16_t)xmmword_221A36860), (int8x16_t)xmmword_221A369D0);
        int16x8_t v94 = (int16x8_t)vqtbl2q_s8(v150, (int8x16_t)xmmword_221A37CF0);
        if (v7)
        {
          if (v17)
          {
            int16x8_t v95 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v91, v8), v81);
            int16x8_t v96 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v92, v8), v81);
            int16x8_t v97 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v93, v8), v81);
            int64x2_t v98 = (int64x2_t)vshlq_u16((uint16x8_t)vmulq_s16(v94, v8), v81);
          }
          else
          {
            int32x4_t v104 = (int32x4_t)vqtbl1q_s8((int8x16_t)(__int16)v12, (int8x16_t)xmmword_221A36310);
            int16x8_t v105 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v91.i8, *(int16x4_t *)v8.i8), (int16x8_t)vmull_high_s16(v91, v8));
            int16x8_t v106 = vmulq_s16(v91, v8);
            int16x8_t v95 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v106, v105), v104), v83)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v106, v105), v104), v83));
            int16x8_t v107 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v92.i8, *(int16x4_t *)v8.i8), (int16x8_t)vmull_high_s16(v92, v8));
            int16x8_t v108 = vmulq_s16(v92, v8);
            int16x8_t v96 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v108, v107), v104), v83)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v108, v107), v104), v83));
            int16x8_t v109 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v93.i8, *(int16x4_t *)v8.i8), (int16x8_t)vmull_high_s16(v93, v8));
            int16x8_t v110 = vmulq_s16(v93, v8);
            int16x8_t v97 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v110, v109), v104), v83)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v110, v109), v104), v83));
            int16x8_t v111 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v94.i8, *(int16x4_t *)v8.i8), (int16x8_t)vmull_high_s16(v94, v8));
            int16x8_t v112 = vmulq_s16(v94, v8);
            int64x2_t v98 = (int64x2_t)vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v112, v111), v104), v83)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v112, v111), v104), v83));
          }
          int64x2_t v102 = (int64x2_t)vaddq_s16(v95, v87);
          int64x2_t v103 = (int64x2_t)vaddq_s16(v97, v87);
        }
        else
        {
          int64x2_t v102 = (int64x2_t)vmlaq_s16(v87, v91, v8);
          int16x8_t v96 = vmulq_s16(v92, v8);
          int64x2_t v103 = (int64x2_t)vmlaq_s16(v87, v93, v8);
          int64x2_t v98 = (int64x2_t)vmulq_s16(v94, v8);
        }
        int64x2_t v113 = v102;
        v113.i16[0] = v78.i16[0];
        int16x8_t v114 = (int16x8_t)vzip2q_s64(v102, v103);
        v103.i16[0] = vqtbl1q_s8((int8x16_t)vzip1q_s16(v78, v78), (int8x16_t)xmmword_221A368E0).u16[0];
        int16x8_t v115 = (int16x8_t)vzip1q_s64(v113, v103);
        int16x8_t v116 = (int16x8_t)vzip2q_s64((int64x2_t)v96, v98);
        v96.i64[1] = v98.i64[0];
        int16x8_t v117 = vaddq_s16(v115, v96);
        int16x8_t v118 = vsubq_s16(v115, v96);
        int16x8_t v119 = vshlq_s16(v116, v85);
        int16x8_t v120 = vsubq_s16(vshlq_s16(v114, v85), v116);
        int16x8_t v121 = vaddq_s16(v119, v114);
        int16x8_t v122 = vaddq_s16(v117, v121);
        int16x8_t v123 = vaddq_s16(v118, v120);
        int16x8_t v124 = vsubq_s16(v118, v120);
        int16x8_t v125 = vsubq_s16(v117, v121);
        int16x8_t v126 = vzip1q_s16(v122, v124);
        int16x8_t v127 = vzip2q_s16(v122, v124);
        int16x8_t v128 = vzip1q_s16(v123, v125);
        int16x8_t v129 = vzip2q_s16(v123, v125);
        v149.val[1] = (int8x16_t)vdupq_lane_s64(v127.i64[0], 0);
        v149.val[0] = (int8x16_t)vdupq_lane_s64(v129.i64[0], 0);
        int16x8_t v130 = vzip1q_s16(v126, v128);
        v149.val[0] = vqtbl2q_s8(v149, (int8x16_t)xmmword_221A37BC0);
        v149.val[1] = (int8x16_t)vzip2q_s64((int64x2_t)v130, (int64x2_t)v149.val[0]);
        v151.val[1] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v126, 1);
        v151.val[0] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v128, 1);
        int16x8_t v131 = (int16x8_t)vqtbl2q_s8(v151, (int8x16_t)xmmword_221A36990);
        int64x2_t v132 = (int64x2_t)vzip2q_s16(v127, v129);
        int16x8_t v133 = (int16x8_t)vzip2q_s64((int64x2_t)v131, v132);
        v130.i64[1] = v149.val[0].i64[0];
        v131.i64[1] = v132.i64[0];
        int16x8_t v134 = vaddq_s16(v130, v131);
        int16x8_t v135 = vsubq_s16(v130, v131);
        v149.val[0] = (int8x16_t)vshlq_s16(v133, v85);
        int16x8_t v136 = vsubq_s16(vshlq_s16((int16x8_t)v149.val[1], v85), v133);
        int16x8_t v137 = vaddq_s16((int16x8_t)v149.val[0], (int16x8_t)v149.val[1]);
        *uint16x8_t v86 = vshlq_s16(vaddq_s16(v134, v137), v84);
        v86[2] = vshlq_s16(vaddq_s16(v135, v136), v84);
        int16x8_t v101 = vshlq_s16(vsubq_s16(v134, v137), v84);
        v86[4] = vshlq_s16(vsubq_s16(v135, v136), v84);
      }
      else
      {
        int16x8_t v99 = vshlq_s16(v78, v84);
        int32x4_t v100 = (int32x4_t)vzip1q_s16(v99, v99);
        int16x8_t v101 = (int16x8_t)vzip1q_s32(v100, v100);
        *uint16x8_t v86 = v101;
        v86[2] = v101;
        v86[4] = v101;
      }
      v86[6] = v101;
      ++v80;
      int16x8_t v78 = (int16x8_t)vextq_s8((int8x16_t)v78, (int8x16_t)v79, 4uLL);
      int16x8_t v79 = (int16x8_t)vqtbl1q_s8((int8x16_t)v79, (int8x16_t)xmmword_221A37D00);
      v82 += 4;
    }
    while (v80 != 8);
  }
  else
  {
    uint64_t v138 = 0;
    v139.i64[0] = 0x5000500050005;
    v139.i64[1] = 0x5000500050005;
    int16x8_t v140 = vshlq_s16(v78, v139);
    int8x16_t v141 = (int8x16_t)vshlq_s16(v79, v139);
    do
    {
      int16x8_t v142 = (int32x4_t *)(v45 + (unsigned __int16)word_221A383D0[v138]);
      int32x4_t v143 = (int32x4_t)vzip1q_s16(v140, v140);
      int32x4_t v144 = vzip1q_s32(v143, v143);
      *int16x8_t v142 = v144;
      v142[2] = v144;
      v142[4] = v144;
      v142[6] = v144;
      int16x8_t v140 = (int16x8_t)vextq_s8((int8x16_t)v140, v141, 4uLL);
      int8x16_t v141 = vqtbl1q_s8(v141, (int8x16_t)xmmword_221A37D00);
      ++v138;
    }
    while (v138 != 8);
  }
  return result;
}

int16x8_t sub_2219EF11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  unsigned int v5 = (*(unsigned __int8 *)(a1 + 818) / 6u) & 0x1F;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 818) % 6u;
  int v7 = *(unsigned __int8 *)(a1 + 816);
  int v40 = v7;
  int32x4_t v39 = vdupq_n_s32(16843009 * v7);
  int v8 = *(unsigned __int8 *)(a3 + 12);
  if (*(unsigned char *)(a3 + 12))
  {
    int16x8_t v36 = *(int16x8_t *)&asc_221A38400[16 * v6];
    int16x8_t v9 = *(int16x8_t *)(a4 + 16 * v6);
    if (v5 <= 3)
    {
      unsigned int v10 = 0;
      int v17 = 0;
      int v12 = 4 - v5;
      int v11 = 1 << (3 - v5);
    }
    else
    {
      unsigned int v10 = v5 - 4;
      if (v5 >= 6)
      {
        LOWORD(v11) = 0;
        int v12 = 0;
        LOWORD(v13) = 0;
        unsigned __int16 v14 = 0;
        unsigned __int16 v15 = v5 - 6;
        int v16 = 1;
        int v17 = 1;
        goto LABEL_9;
      }
      int v12 = 0;
      LOWORD(v11) = 0;
      int v17 = 1;
    }
    int v16 = 0;
    unsigned __int16 v15 = 0;
    unsigned __int16 v14 = 6 - v5;
    int v13 = 1 << (5 - v5);
  }
  else
  {
    int v16 = 0;
    int v17 = 0;
    LOWORD(v11) = 0;
    int v12 = 0;
    unsigned int v10 = 0;
    LOWORD(v13) = 0;
    unsigned __int16 v14 = 0;
    unsigned __int16 v15 = 0;
    int16x8_t v9 = (int16x8_t)vshlq_u16(*(uint16x8_t *)&asc_221A38400[16 * v6], (uint16x8_t)vdupq_n_s16(v5));
    int16x8_t v36 = v9;
  }
LABEL_9:
  uint64_t v18 = a3 + 112;
  sub_2219F1F10(a1, (float *)v41[0].i32, v16, v8, v15, v14, v13, (uint16x8_t)vqtbl1q_s8((int8x16_t)vzip1q_s16(v9, v9), (int8x16_t)xmmword_221A36310));
  int16x8_t v19 = (int16x8_t)vqtbl1q_s8((int8x16_t)xmmword_221A37C50, (int8x16_t)xmmword_221A36310);
  int16x8_t v20 = vqaddq_s16(v41[0], v19);
  int16x8_t v21 = vqaddq_s16(v41[1], v19);
  if (v7)
  {
    uint64_t v22 = 0;
    uint64_t v23 = a1 + 32;
    do
    {
      uint64_t v24 = v18 + (unsigned __int16)word_221A383D0[v22];
      if (v39.i16[v22])
      {
        int16x8_t v37 = v20;
        int16x8_t v38 = v21;
        sub_2219F20E0(v23, v23 + 32, (int16x8_t *)v24, v17, v10, v12, (__int16)v11, v8, (int16x8_t)v20.u16[0], (__n128)vqtbl1q_s8((int8x16_t)vzip1q_s16(v20, v20), (int8x16_t)xmmword_221A368E0), v36);
        int16x8_t v20 = v37;
        int16x8_t v21 = v38;
      }
      else
      {
        v25.i64[0] = 0x5000500050005;
        v25.i64[1] = 0x5000500050005;
        int16x8_t v26 = vshlq_s16(v20, v25);
        int32x4_t v27 = (int32x4_t)vzip1q_s16(v26, v26);
        int32x4_t v28 = vzip1q_s32(v27, v27);
        *(int32x4_t *)uint64_t v24 = v28;
        *(int32x4_t *)(v24 + 32) = v28;
        *(int32x4_t *)(v24 + 64) = v28;
        *(int32x4_t *)(v24 + 96) = v28;
      }
      ++v22;
      int16x8_t v20 = (int16x8_t)vextq_s8((int8x16_t)v20, (int8x16_t)v21, 4uLL);
      int16x8_t result = (int16x8_t)xmmword_221A37D00;
      int16x8_t v21 = (int16x8_t)vqtbl1q_s8((int8x16_t)v21, (int8x16_t)xmmword_221A37D00);
      v23 += 64;
    }
    while (v22 != 8);
  }
  else
  {
    uint64_t v30 = 0;
    v31.i64[0] = 0x5000500050005;
    v31.i64[1] = 0x5000500050005;
    int16x8_t result = vshlq_s16(v20, v31);
    int8x16_t v32 = (int8x16_t)vshlq_s16(v21, v31);
    do
    {
      int16x8_t v33 = (int32x4_t *)(v18 + (unsigned __int16)word_221A383D0[v30]);
      int32x4_t v34 = (int32x4_t)vzip1q_s16(result, result);
      int32x4_t v35 = vzip1q_s32(v34, v34);
      int32x4_t *v33 = v35;
      v33[2] = v35;
      v33[4] = v35;
      v33[6] = v35;
      int16x8_t result = (int16x8_t)vextq_s8((int8x16_t)result, v32, 4uLL);
      int8x16_t v32 = vqtbl1q_s8(v32, (int8x16_t)xmmword_221A37D00);
      ++v30;
    }
    while (v30 != 8);
  }
  return result;
}

uint64_t sub_2219EF418(int16x8_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  char v7 = sub_221A2508C(a1[51].u8[2], *(char *)(a3 + 13));
  char v6 = sub_221A2508C(a1[51].u8[2], *(char *)(a3 + 14));
  int v9 = a1[51].u8[1];
  sub_2219EF4C0(a1 + 50, (uint64_t)a1[34].i64, (uint64_t)a1[42].i64, (uint64_t)v8, &v7, &v6, (_OWORD *)(a3 + 624), *(unsigned __int8 *)(a3 + 12));
  return 0;
}

int16x8_t *sub_2219EF4C0(int16x8_t *result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5, unsigned char *a6, _OWORD *a7, int a8)
{
  int v8 = *(_DWORD *)(a4 + 16);
  if (v8)
  {
    int16x8_t v9 = (int16x8_t)vshlq_u16(*(uint16x8_t *)&asc_221A38400[((unint64_t)*a5 >> 1) & 0x70], (uint16x8_t)vdupq_n_s16(*a5 & 0x1F));
    int16x8_t v10 = (int16x8_t)vshlq_u16(*(uint16x8_t *)&asc_221A38400[((unint64_t)*a6 >> 1) & 0x70], (uint16x8_t)vdupq_n_s16(*a6 & 0x1F));
    int16x8_t v11 = vzip2q_s16((int16x8_t)vdupq_lane_s64(result->i64[0], 0), *result);
    int16x8_t v12 = (int16x8_t)vqtbl1q_s8((int8x16_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v9, (int8x16_t)xmmword_221A362E0), (int16x8_t)vqtbl1q_s8((int8x16_t)v10, (int8x16_t)xmmword_221A362E0)), (int8x16_t)xmmword_221A36310);
    int16x8_t v13 = vmulq_s16(v11, v12);
    if (a8)
    {
      int16x8_t v14 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v11.i8, *(int16x4_t *)v12.i8), (int16x8_t)vmull_high_s16(v11, v12));
      int32x4_t v15 = (int32x4_t)vzip1q_s16(v13, v14);
      int32x4_t v16 = (int32x4_t)vzip2q_s16(v13, v14);
      int64x2_t v17 = (int64x2_t)vaddq_s32(v15, v16);
      int64x2_t v18 = (int64x2_t)vsubq_s32(v15, v16);
      v15.i64[0] = v17.i64[0];
      v15.i64[1] = v18.i64[0];
      int32x4_t v19 = (int32x4_t)vzip2q_s64(v17, v18);
      int32x4_t v20 = vaddq_s32(v15, v19);
      int64x2_t v21 = (int64x2_t)vsubq_s32(v15, v19);
      v15.i64[0] = v20.i64[0];
      v15.i64[1] = v21.i64[0];
      int32x4_t v22 = (int32x4_t)vzip2q_s64((int64x2_t)v20, v21);
      v20.i64[0] = 0x400000004;
      v20.i64[1] = 0x400000004;
      int16x8_t v23 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(v15, v20)), vshlq_s32(v22, v20));
    }
    else
    {
      int16x8_t v24 = (int16x8_t)vqtbl1q_s8((int8x16_t)v13, (int8x16_t)xmmword_221A368F0);
      int16x8_t v25 = (int16x8_t)vzip1q_s32((int32x4_t)vqaddq_s16(v13, v24), (int32x4_t)vqsubq_s16(v13, v24));
      int16x8_t v26 = (int16x8_t)vqtbl1q_s8((int8x16_t)v25, (int8x16_t)xmmword_221A368F0);
      int16x8_t v27 = (int16x8_t)vzip1q_s32((int32x4_t)vqaddq_s16(v25, v26), (int32x4_t)vqsubq_s16(v25, v26));
      v25.i64[0] = -1;
      v25.i64[1] = -1;
      int16x8_t v23 = vshlq_s16(v27, v25);
    }
    int16x8_t v28 = vqaddq_s16(v23, (int16x8_t)vqtbl1q_s8((int8x16_t)xmmword_221A37C50, (int8x16_t)xmmword_221A36310));
    if ((v8 & 2) != 0)
    {
      uint64_t v34 = 0;
      int16x8_t v35 = vzip1q_s16(v9, v10);
      int16x8_t v36 = vzip2q_s16(v9, v10);
      int16x8_t v37 = &byte_221A383E0;
      v38.i64[0] = -1;
      v38.i64[1] = -1;
      v39.i64[0] = 0x5000500050005;
      v39.i64[1] = 0x5000500050005;
      v40.i64[0] = 0x300000003;
      v40.i64[1] = 0x300000003;
      do
      {
        int8x16_t v41 = *(int8x16_t *)(a2 + v34);
        int8x16_t v42 = *(int8x16_t *)(a2 + v34 + 16);
        int8x16_t v43 = *(int8x16_t *)(a3 + v34);
        int8x16_t v44 = *(int8x16_t *)(a3 + v34 + 16);
        v89.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v41, (int8x16_t)xmmword_221A37C60), (int8x16_t)xmmword_221A37C70), (int8x16_t)xmmword_221A37C80);
        v89.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v42, (int8x16_t)xmmword_221A37C90), (int8x16_t)xmmword_221A37CA0), (int8x16_t)xmmword_221A369E0);
        int16x8_t v45 = (int16x8_t)vqtbl2q_s8(v89, (int8x16_t)xmmword_221A37CB0);
        v89.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v41, (int8x16_t)xmmword_221A37CC0), (int8x16_t)xmmword_221A37CD0), (int8x16_t)xmmword_221A362D0);
        v89.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v42, (int8x16_t)xmmword_221A37CE0), (int8x16_t)xmmword_221A36860), (int8x16_t)xmmword_221A369D0);
        int16x8_t v46 = (int16x8_t)vqtbl2q_s8(v89, (int8x16_t)xmmword_221A37CF0);
        v89.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v43, (int8x16_t)xmmword_221A37C60), (int8x16_t)xmmword_221A37C70), (int8x16_t)xmmword_221A37C80);
        v89.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v44, (int8x16_t)xmmword_221A37C90), (int8x16_t)xmmword_221A37CA0), (int8x16_t)xmmword_221A369E0);
        v89.val[0] = vqtbl2q_s8(v89, (int8x16_t)xmmword_221A37CB0);
        v89.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v43, (int8x16_t)xmmword_221A37CC0), (int8x16_t)xmmword_221A37CD0), (int8x16_t)xmmword_221A362D0);
        int8x16_t v47 = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v44, (int8x16_t)xmmword_221A37CE0), (int8x16_t)xmmword_221A36860), (int8x16_t)xmmword_221A369D0);
        v89.val[1] = vqtbl2q_s8(*(int8x16x2_t *)((char *)&v89 + 16), (int8x16_t)xmmword_221A37CF0);
        int16x8_t v48 = vzip1q_s16(v45, (int16x8_t)v89.val[0]);
        int16x8_t v49 = vzip2q_s16(v45, (int16x8_t)v89.val[0]);
        int16x8_t v50 = vzip1q_s16(v46, (int16x8_t)v89.val[1]);
        int16x8_t v51 = vzip2q_s16(v46, (int16x8_t)v89.val[1]);
        if (a8)
        {
          int32x4_t v52 = (int32x4_t)vqtbl1q_s8((int8x16_t)xmmword_221A36920, (int8x16_t)xmmword_221A36310);
          int16x8_t v53 = vmulq_s16(v48, v35);
          int16x8_t v54 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v48.i8, *(int16x4_t *)v35.i8), (int16x8_t)vmull_high_s16(v48, v35));
          int16x8_t v55 = (int16x8_t)vzip1q_s64((int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip1q_s16(v53, v54), v52), v40), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360), (int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip2q_s16(v53, v54), v52), v40), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360));
          int16x8_t v56 = vmulq_s16(v49, v36);
          int16x8_t v57 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v49.i8, *(int16x4_t *)v36.i8), (int16x8_t)vmull_high_s16(v49, v36));
          int16x8_t v58 = (int16x8_t)vzip1q_s64((int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip1q_s16(v56, v57), v52), v40), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360), (int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip2q_s16(v56, v57), v52), v40), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360));
          int16x8_t v59 = vmulq_s16(v50, v35);
          int16x8_t v60 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v50.i8, *(int16x4_t *)v35.i8), (int16x8_t)vmull_high_s16(v50, v35));
          int16x8_t v61 = (int16x8_t)vzip1q_s64((int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip1q_s16(v59, v60), v52), v40), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360), (int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip2q_s16(v59, v60), v52), v40), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360));
          int16x8_t v62 = vmulq_s16(v51, v36);
          int16x8_t v63 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v51.i8, *(int16x4_t *)v36.i8), (int16x8_t)vmull_high_s16(v51, v36));
          int16x8_t v64 = (int16x8_t)vzip1q_s64((int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip1q_s16(v62, v63), v52), v40), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360), (int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip2q_s16(v62, v63), v52), v40), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360));
        }
        else
        {
          int16x8_t v55 = vmulq_s16(v48, v35);
          int16x8_t v58 = vmulq_s16(v49, v36);
          int16x8_t v61 = vmulq_s16(v50, v35);
          int16x8_t v64 = vmulq_s16(v51, v36);
        }
        unsigned int v65 = *v37++;
        int32x4_t v66 = (int16x8_t *)((char *)a7 + v65);
        v55.i32[0] = v28.i32[0];
        int16x8_t v67 = vaddq_s16(v55, v61);
        int16x8_t v68 = vsubq_s16(v55, v61);
        int16x8_t v69 = vshlq_s16(v64, v38);
        int16x8_t v70 = vsubq_s16(vshlq_s16(v58, v38), v64);
        int16x8_t v71 = vaddq_s16(v69, v58);
        int32x4_t v72 = (int32x4_t)vaddq_s16(v67, v71);
        int32x4_t v73 = (int32x4_t)vaddq_s16(v68, v70);
        int32x4_t v74 = (int32x4_t)vsubq_s16(v68, v70);
        int32x4_t v75 = (int32x4_t)vsubq_s16(v67, v71);
        int32x4_t v76 = vzip1q_s32(v72, v74);
        int32x4_t v77 = vzip2q_s32(v72, v74);
        int32x4_t v78 = vzip1q_s32(v73, v75);
        int32x4_t v79 = vzip2q_s32(v73, v75);
        int16x8_t v80 = (int16x8_t)vzip1q_s32(v76, v78);
        int16x8_t v81 = (int16x8_t)vzip2q_s32(v76, v78);
        int16x8_t v82 = (int16x8_t)vzip1q_s32(v77, v79);
        int16x8_t v83 = (int16x8_t)vzip2q_s32(v77, v79);
        int16x8_t v84 = vaddq_s16(v80, v82);
        int16x8_t v85 = vsubq_s16(v80, v82);
        int16x8_t v86 = vshlq_s16(v83, v38);
        int16x8_t v87 = vsubq_s16(vshlq_s16(v81, v38), v83);
        int16x8_t v88 = vaddq_s16(v86, v81);
        *int32x4_t v66 = vshlq_s16(vaddq_s16(v84, v88), v39);
        v66[2] = vshlq_s16(vaddq_s16(v85, v87), v39);
        v66[4] = vshlq_s16(vsubq_s16(v85, v87), v39);
        v66[6] = vshlq_s16(vsubq_s16(v84, v88), v39);
        int16x8_t v28 = (int16x8_t)vqtbl1q_s8((int8x16_t)v28, (int8x16_t)xmmword_221A37D00);
        v34 += 32;
      }
      while (v34 != 128);
    }
    else
    {
      uint64_t v29 = 0;
      v30.i64[0] = 0x5000500050005;
      v30.i64[1] = 0x5000500050005;
      int8x16_t v31 = (int8x16_t)vshlq_s16(v28, v30);
      do
      {
        int8x16_t v32 = (int8x16_t *)((char *)a7 + *((unsigned __int8 *)&word_221A383D0[8] + v29));
        int8x16_t v33 = vqtbl1q_s8(v31, (int8x16_t)xmmword_221A36310);
        *int8x16_t v32 = v33;
        v32[2] = v33;
        v32[4] = v33;
        v32[6] = v33;
        int8x16_t v31 = vqtbl1q_s8(v31, (int8x16_t)xmmword_221A37D00);
        ++v29;
      }
      while (v29 != 4);
    }
  }
  else
  {
    a7[14] = 0u;
    a7[15] = 0u;
    a7[12] = 0u;
    a7[13] = 0u;
    a7[10] = 0u;
    a7[11] = 0u;
    a7[8] = 0u;
    a7[9] = 0u;
    a7[6] = 0u;
    a7[7] = 0u;
    a7[4] = 0u;
    a7[5] = 0u;
    a7[2] = 0u;
    a7[3] = 0u;
    *a7 = 0u;
    a7[1] = 0u;
  }
  return result;
}

uint64_t sub_2219EF990(int16x8_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  char v7 = sub_221A2508C(a1[51].u8[2], *(char *)(a3 + 13));
  char v6 = sub_221A2508C(a1[51].u8[2], *(char *)(a3 + 14));
  int v9 = a1[51].u8[1];
  sub_2219EFA38(a1 + 50, (uint64_t)a1[34].i64, (uint64_t)a1[42].i64, (uint64_t)v8, &v7, &v6, (_OWORD *)(a3 + 624), *(unsigned __int8 *)(a3 + 12));
  return 0;
}

int16x8_t *sub_2219EFA38(int16x8_t *result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5, unsigned char *a6, _OWORD *a7, int a8)
{
  int v8 = *(_DWORD *)(a4 + 16);
  if (v8)
  {
    int16x8_t v9 = (int16x8_t)vshlq_u16(*(uint16x8_t *)&asc_221A38400[((unint64_t)*a5 >> 1) & 0x70], (uint16x8_t)vdupq_n_s16(*a5 & 0x1F));
    int16x8_t v10 = (int16x8_t)vshlq_u16(*(uint16x8_t *)&asc_221A38400[((unint64_t)*a6 >> 1) & 0x70], (uint16x8_t)vdupq_n_s16(*a6 & 0x1F));
    int16x8_t v11 = vzip2q_s16((int16x8_t)vdupq_lane_s64(result->i64[0], 0), *result);
    int16x8_t v12 = (int16x8_t)vqtbl1q_s8((int8x16_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v9, (int8x16_t)xmmword_221A362E0), (int16x8_t)vqtbl1q_s8((int8x16_t)v10, (int8x16_t)xmmword_221A362E0)), (int8x16_t)xmmword_221A36310);
    int16x8_t v13 = vmulq_s16(v11, v12);
    if (a8)
    {
      int16x8_t v14 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v11.i8, *(int16x4_t *)v12.i8), (int16x8_t)vmull_high_s16(v11, v12));
      int32x4_t v15 = (int32x4_t)vzip1q_s16(v13, v14);
      int32x4_t v16 = (int32x4_t)vzip2q_s16(v13, v14);
      int64x2_t v17 = (int64x2_t)vaddq_s32(v15, v16);
      int64x2_t v18 = (int64x2_t)vsubq_s32(v15, v16);
      v15.i64[0] = v17.i64[0];
      v15.i64[1] = v18.i64[0];
      int32x4_t v19 = (int32x4_t)vzip2q_s64(v17, v18);
      int32x4_t v20 = vaddq_s32(v15, v19);
      int64x2_t v21 = (int64x2_t)vsubq_s32(v15, v19);
      v15.i64[0] = v20.i64[0];
      v15.i64[1] = v21.i64[0];
      int32x4_t v22 = (int32x4_t)vzip2q_s64((int64x2_t)v20, v21);
      v20.i64[0] = 0x400000004;
      v20.i64[1] = 0x400000004;
      int16x8_t v23 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(v15, v20)), vshlq_s32(v22, v20));
    }
    else
    {
      int16x8_t v24 = (int16x8_t)vqtbl1q_s8((int8x16_t)v13, (int8x16_t)xmmword_221A368F0);
      int16x8_t v25 = (int16x8_t)vzip1q_s32((int32x4_t)vqaddq_s16(v13, v24), (int32x4_t)vqsubq_s16(v13, v24));
      int16x8_t v26 = (int16x8_t)vqtbl1q_s8((int8x16_t)v25, (int8x16_t)xmmword_221A368F0);
      int16x8_t v27 = (int16x8_t)vzip1q_s32((int32x4_t)vqaddq_s16(v25, v26), (int32x4_t)vqsubq_s16(v25, v26));
      v25.i64[0] = -1;
      v25.i64[1] = -1;
      int16x8_t v23 = vshlq_s16(v27, v25);
    }
    int16x8_t v28 = vqaddq_s16(v23, (int16x8_t)vqtbl1q_s8((int8x16_t)xmmword_221A37C50, (int8x16_t)xmmword_221A36310));
    if ((v8 & 2) != 0)
    {
      uint64_t v34 = 0;
      int16x8_t v35 = vzip1q_s16(v9, v10);
      int16x8_t v36 = vzip2q_s16(v9, v10);
      int16x8_t v37 = &byte_221A383E0;
      v38.i64[0] = 0xFFFF00000000;
      v38.i64[1] = 0xFFFF00000000;
      v39.i64[0] = -1;
      v39.i64[1] = -1;
      v40.i64[0] = 0x5000500050005;
      v40.i64[1] = 0x5000500050005;
      v41.i64[0] = 0x300000003;
      v41.i64[1] = 0x300000003;
      do
      {
        int16x8_t v42 = *(int16x8_t *)(a2 + v34 + 16);
        int16x8_t v43 = *(int16x8_t *)(a3 + v34 + 16);
        int16x8_t v44 = (int16x8_t)vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, vandq_s8(*(int8x16_t *)(a2 + v34), v38), 0xCuLL), vandq_s8(*(int8x16_t *)(a2 + v34), (int8x16_t)xmmword_221A37BD0)), vextq_s8(vandq_s8(*(int8x16_t *)(a2 + v34), (int8x16_t)xmmword_221A37BE0), (int8x16_t)0, 2uLL));
        int16x8_t v45 = (int16x8_t)vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, vandq_s8(*(int8x16_t *)(a3 + v34), v38), 0xCuLL), vandq_s8(*(int8x16_t *)(a3 + v34), (int8x16_t)xmmword_221A37BD0)), vextq_s8(vandq_s8(*(int8x16_t *)(a3 + v34), (int8x16_t)xmmword_221A37BE0), (int8x16_t)0, 2uLL));
        int16x8_t v46 = vzip1q_s16(v44, v45);
        int16x8_t v47 = vzip2q_s16(v44, v45);
        int16x8_t v48 = vzip1q_s16(v42, v43);
        int16x8_t v49 = vzip2q_s16(v42, v43);
        if (a8)
        {
          int32x4_t v50 = (int32x4_t)vqtbl1q_s8((int8x16_t)xmmword_221A36920, (int8x16_t)xmmword_221A36310);
          int16x8_t v51 = vmulq_s16(v46, v35);
          int16x8_t v52 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v46.i8, *(int16x4_t *)v35.i8), (int16x8_t)vmull_high_s16(v46, v35));
          int16x8_t v53 = (int16x8_t)vzip1q_s64((int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip1q_s16(v51, v52), v50), v41), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360), (int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip2q_s16(v51, v52), v50), v41), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360));
          int16x8_t v54 = vmulq_s16(v47, v36);
          int16x8_t v55 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v47.i8, *(int16x4_t *)v36.i8), (int16x8_t)vmull_high_s16(v47, v36));
          int16x8_t v56 = (int16x8_t)vzip1q_s64((int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip1q_s16(v54, v55), v50), v41), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360), (int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip2q_s16(v54, v55), v50), v41), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360));
          int16x8_t v57 = vmulq_s16(v48, v35);
          int16x8_t v58 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v48.i8, *(int16x4_t *)v35.i8), (int16x8_t)vmull_high_s16(v48, v35));
          int16x8_t v59 = (int16x8_t)vzip1q_s64((int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip1q_s16(v57, v58), v50), v41), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360), (int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip2q_s16(v57, v58), v50), v41), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360));
          int16x8_t v60 = vmulq_s16(v49, v36);
          int16x8_t v61 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v49.i8, *(int16x4_t *)v36.i8), (int16x8_t)vmull_high_s16(v49, v36));
          int16x8_t v62 = (int16x8_t)vzip1q_s64((int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip1q_s16(v60, v61), v50), v41), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360), (int64x2_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32((int32x4_t)vzip2q_s16(v60, v61), v50), v41), (int8x16_t)xmmword_221A37D30), (int8x16_t)xmmword_221A37D40), (int8x16_t)xmmword_221A36360));
        }
        else
        {
          int16x8_t v53 = vmulq_s16(v46, v35);
          int16x8_t v56 = vmulq_s16(v47, v36);
          int16x8_t v59 = vmulq_s16(v48, v35);
          int16x8_t v62 = vmulq_s16(v49, v36);
        }
        unsigned int v63 = *v37++;
        int16x8_t v64 = (int16x8_t *)((char *)a7 + v63);
        v53.i32[0] = v28.i32[0];
        int16x8_t v65 = vaddq_s16(v53, v59);
        int16x8_t v66 = vsubq_s16(v53, v59);
        int16x8_t v67 = vshlq_s16(v62, v39);
        int16x8_t v68 = vsubq_s16(vshlq_s16(v56, v39), v62);
        int16x8_t v69 = vaddq_s16(v67, v56);
        int32x4_t v70 = (int32x4_t)vaddq_s16(v65, v69);
        int32x4_t v71 = (int32x4_t)vaddq_s16(v66, v68);
        int32x4_t v72 = (int32x4_t)vsubq_s16(v66, v68);
        int32x4_t v73 = (int32x4_t)vsubq_s16(v65, v69);
        int32x4_t v74 = vzip1q_s32(v70, v72);
        int32x4_t v75 = vzip2q_s32(v70, v72);
        int32x4_t v76 = vzip1q_s32(v71, v73);
        int32x4_t v77 = vzip2q_s32(v71, v73);
        int16x8_t v78 = (int16x8_t)vzip1q_s32(v74, v76);
        int16x8_t v79 = (int16x8_t)vzip2q_s32(v74, v76);
        int16x8_t v80 = (int16x8_t)vzip1q_s32(v75, v77);
        int16x8_t v81 = (int16x8_t)vzip2q_s32(v75, v77);
        int16x8_t v82 = vaddq_s16(v78, v80);
        int16x8_t v83 = vsubq_s16(v78, v80);
        int16x8_t v84 = vshlq_s16(v81, v39);
        int16x8_t v85 = vsubq_s16(vshlq_s16(v79, v39), v81);
        int16x8_t v86 = vaddq_s16(v84, v79);
        *int16x8_t v64 = vshlq_s16(vaddq_s16(v82, v86), v40);
        v64[2] = vshlq_s16(vaddq_s16(v83, v85), v40);
        v64[4] = vshlq_s16(vsubq_s16(v83, v85), v40);
        v64[6] = vshlq_s16(vsubq_s16(v82, v86), v40);
        int16x8_t v28 = (int16x8_t)vqtbl1q_s8((int8x16_t)v28, (int8x16_t)xmmword_221A37D00);
        v34 += 32;
      }
      while (v34 != 128);
    }
    else
    {
      uint64_t v29 = 0;
      v30.i64[0] = 0x5000500050005;
      v30.i64[1] = 0x5000500050005;
      int8x16_t v31 = (int8x16_t)vshlq_s16(v28, v30);
      do
      {
        int8x16_t v32 = (int8x16_t *)((char *)a7 + *((unsigned __int8 *)&word_221A383D0[8] + v29));
        int8x16_t v33 = vqtbl1q_s8(v31, (int8x16_t)xmmword_221A36310);
        *int8x16_t v32 = v33;
        v32[2] = v33;
        v32[4] = v33;
        v32[6] = v33;
        int8x16_t v31 = vqtbl1q_s8(v31, (int8x16_t)xmmword_221A37D00);
        ++v29;
      }
      while (v29 != 4);
    }
  }
  else
  {
    a7[14] = 0u;
    a7[15] = 0u;
    a7[12] = 0u;
    a7[13] = 0u;
    a7[10] = 0u;
    a7[11] = 0u;
    a7[8] = 0u;
    a7[9] = 0u;
    a7[6] = 0u;
    a7[7] = 0u;
    a7[4] = 0u;
    a7[5] = 0u;
    a7[2] = 0u;
    a7[3] = 0u;
    *a7 = 0u;
    a7[1] = 0u;
  }
  return result;
}

uint64_t sub_2219EFE58(uint64_t result, _OWORD *a2)
{
  uint64_t v2 = 0;
  uint64_t v65 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(result + 40);
  unsigned int v4 = *(unsigned __int8 *)(v3 + 52);
  unsigned int v5 = *(unsigned __int8 *)(v3 + 55);
  do
  {
    int v6 = v4 & 1;
    v4 >>= 1;
    *(_DWORD *)&v64[v2] = -v6;
    v2 += 4;
  }
  while (v2 != 16);
  char v7 = *(int16x8_t **)(result + 56);
  int v8 = *(unsigned __int8 *)(result + 1422192);
  a2[30] = 0u;
  a2[31] = 0u;
  a2[28] = 0u;
  a2[29] = 0u;
  a2[26] = 0u;
  a2[27] = 0u;
  a2[24] = 0u;
  a2[25] = 0u;
  a2[22] = 0u;
  a2[23] = 0u;
  a2[20] = 0u;
  a2[21] = 0u;
  a2[18] = 0u;
  a2[19] = 0u;
  a2[16] = 0u;
  a2[17] = 0u;
  a2[14] = 0u;
  a2[15] = 0u;
  a2[12] = 0u;
  a2[13] = 0u;
  a2[10] = 0u;
  a2[11] = 0u;
  a2[8] = 0u;
  a2[9] = 0u;
  a2[6] = 0u;
  a2[7] = 0u;
  a2[4] = 0u;
  a2[5] = 0u;
  unsigned int v9 = (171 * v5) >> 10;
  a2[2] = 0u;
  a2[3] = 0u;
  *a2 = 0u;
  a2[1] = 0u;
  int16x8_t v10 = *(int16x8_t *)&asc_221A38400[16 * (((_BYTE)v5 - 6 * (_BYTE)v9) & 0x1F)];
  if (v8)
  {
    if (v5 < 0x18)
    {
      unsigned int v14 = 0;
      unsigned int v13 = v9 - 4;
      char v11 = 1;
      unsigned int v12 = 1 << (3 - v9);
    }
    else
    {
      char v11 = 0;
      unsigned int v12 = 0;
      unsigned int v13 = 0;
      unsigned int v14 = v9 - 4;
    }
  }
  else
  {
    unsigned int v12 = 0;
    unsigned int v13 = 0;
    unsigned int v14 = 0;
    int16x8_t v10 = (int16x8_t)vshlq_u16((uint16x8_t)v10, (uint16x8_t)vdupq_n_s16(v9));
    char v11 = 1;
  }
  uint64_t v15 = 0;
  int32x4_t v16 = (int32x4_t)v12;
  uint16x8_t v17 = (uint16x8_t)vdupq_n_s16(v14);
  int32x4_t v18 = vdupq_n_s32(v13);
  int32x4_t v19 = v7 + 5;
  v20.i64[0] = 0xFFFF00000000;
  v20.i64[1] = 0xFFFF00000000;
  v21.i64[0] = -1;
  v21.i64[1] = -1;
  v22.i64[0] = 0x5000500050005;
  v22.i64[1] = 0x5000500050005;
  do
  {
    if (*(_WORD *)&v64[v15 * 2])
    {
      int16x8_t v23 = v19[-2];
      int16x8_t v24 = *v19;
      int16x8_t v25 = (int16x8_t)vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, vandq_s8((int8x16_t)v19[-3], v20), 0xCuLL), vandq_s8((int8x16_t)v19[-3], (int8x16_t)xmmword_221A37BD0)), vextq_s8(vandq_s8((int8x16_t)v19[-3], (int8x16_t)xmmword_221A37BE0), (int8x16_t)0, 2uLL));
      int16x8_t v26 = (int16x8_t)vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, vandq_s8((int8x16_t)v19[-1], v20), 0xCuLL), vandq_s8((int8x16_t)v19[-1], (int8x16_t)xmmword_221A37BD0)), vextq_s8(vandq_s8((int8x16_t)v19[-1], (int8x16_t)xmmword_221A37BE0), (int8x16_t)0, 2uLL));
      if (v8)
      {
        if (v11)
        {
          int32x4_t v16 = (int32x4_t)vqtbl1q_s8((int8x16_t)v16, (int8x16_t)xmmword_221A36310);
          int16x8_t v27 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v25, v10));
          int16x8_t v28 = vmulq_s16(v25, v10);
          int16x8_t v29 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v28, v27), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v28, v27), v16), v18));
          int16x8_t v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v23.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v23, v10));
          int16x8_t v31 = vmulq_s16(v23, v10);
          int16x8_t v32 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v31, v30), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v31, v30), v16), v18));
          int16x8_t v33 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v26.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v26, v10));
          int16x8_t v34 = vmulq_s16(v26, v10);
          int16x8_t v35 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v34, v33), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v34, v33), v16), v18));
          int16x8_t v36 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v10.i8), (int16x8_t)vmull_high_s16(v24, v10));
          int16x8_t v37 = vmulq_s16(v24, v10);
          int64x2_t v38 = (int64x2_t)vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v37, v36), v16), v18)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v37, v36), v16), v18));
        }
        else
        {
          int16x8_t v29 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v25, v10), v17);
          int16x8_t v32 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v23, v10), v17);
          int16x8_t v35 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v26, v10), v17);
          int64x2_t v38 = (int64x2_t)vshlq_u16((uint16x8_t)vmulq_s16(v24, v10), v17);
        }
      }
      else
      {
        int16x8_t v29 = vmulq_s16(v25, v10);
        int16x8_t v32 = vmulq_s16(v23, v10);
        int16x8_t v35 = vmulq_s16(v26, v10);
        int64x2_t v38 = (int64x2_t)vmulq_s16(v24, v10);
      }
      int16x8_t v39 = (int16x8_t *)((char *)a2 + 2 * word_221A383F0[v15]);
      int64x2_t v40 = (int64x2_t)vaddq_s16(v35, (int16x8_t)xmmword_221A37D10);
      int16x8_t v41 = vaddq_s16(v29, (int16x8_t)xmmword_221A37D10);
      int16x8_t v42 = (int16x8_t)vzip2q_s64((int64x2_t)v41, v40);
      int16x8_t v43 = (int16x8_t)vzip2q_s64((int64x2_t)v32, v38);
      v41.i64[1] = v40.i64[0];
      v32.i64[1] = v38.i64[0];
      int16x8_t v44 = vaddq_s16(v41, v32);
      int16x8_t v45 = vsubq_s16(v41, v32);
      int16x8_t v46 = vsubq_s16(vshlq_s16(v42, v21), v43);
      int16x8_t v47 = vaddq_s16(vshlq_s16(v43, v21), v42);
      int16x8_t v48 = vaddq_s16(v44, v47);
      int16x8_t v49 = vaddq_s16(v45, v46);
      int16x8_t v50 = vsubq_s16(v45, v46);
      int16x8_t v51 = vsubq_s16(v44, v47);
      int16x8_t v52 = vzip1q_s16(v48, v50);
      int16x8_t v53 = vzip2q_s16(v48, v50);
      int16x8_t v54 = vzip1q_s16(v49, v51);
      int16x8_t v55 = vzip2q_s16(v49, v51);
      v66.val[1] = (int8x16_t)vdupq_lane_s64(v53.i64[0], 0);
      v66.val[0] = (int8x16_t)vdupq_lane_s64(v55.i64[0], 0);
      int16x8_t v56 = vzip1q_s16(v52, v54);
      v66.val[0] = vqtbl2q_s8(v66, (int8x16_t)xmmword_221A37BC0);
      v66.val[1] = (int8x16_t)vzip2q_s64((int64x2_t)v56, (int64x2_t)v66.val[0]);
      v67.val[1] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v52, 1);
      v67.val[0] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v54, 1);
      int16x8_t v57 = (int16x8_t)vqtbl2q_s8(v67, (int8x16_t)xmmword_221A36990);
      int64x2_t v58 = (int64x2_t)vzip2q_s16(v53, v55);
      int16x8_t v59 = (int16x8_t)vzip2q_s64((int64x2_t)v57, v58);
      v56.i64[1] = v66.val[0].i64[0];
      v57.i64[1] = v58.i64[0];
      int16x8_t v60 = vaddq_s16(v56, v57);
      int16x8_t v61 = vsubq_s16(v56, v57);
      v66.val[0] = (int8x16_t)vshlq_s16(v59, v21);
      int16x8_t v62 = vsubq_s16(vshlq_s16((int16x8_t)v66.val[1], v21), v59);
      int16x8_t v63 = vaddq_s16((int16x8_t)v66.val[0], (int16x8_t)v66.val[1]);
      *int16x8_t v39 = vshlq_s16(vaddq_s16(v60, v63), v22);
      v39[2] = vshlq_s16(vaddq_s16(v61, v62), v22);
      v39[4] = vshlq_s16(vsubq_s16(v61, v62), v22);
      v39[6] = vshlq_s16(vsubq_s16(v60, v63), v22);
    }
    ++v15;
    v19 += 4;
  }
  while (v15 != 8);
  return result;
}

unint64_t sub_2219F0230(unint64_t result, _OWORD *a2, uint64_t a3, double a4, int8x16_t a5, double a6, double a7, double a8, int8x16_t a9)
{
  a5.i32[0] = 0;
  uint64_t v9 = 0;
  uint64_t v10 = *(void *)(result + 40);
  unsigned int v11 = *(unsigned __int8 *)(v10 + 52);
  unsigned __int8 v12 = *(unsigned char *)(v10 + 55);
  __int32 v13 = *(unsigned __int8 *)(result + 1422192);
  uint64_t v14 = *(void *)(result + 56);
  v15.i32[1] = 0;
  v15.i64[1] = 0;
  a2[30] = 0u;
  a2[31] = 0u;
  a2[28] = 0u;
  a2[29] = 0u;
  a2[26] = 0u;
  a2[27] = 0u;
  a2[24] = 0u;
  a2[25] = 0u;
  a2[22] = 0u;
  a2[23] = 0u;
  a2[20] = 0u;
  a2[21] = 0u;
  a2[18] = 0u;
  a2[19] = 0u;
  a2[16] = 0u;
  a2[17] = 0u;
  a2[14] = 0u;
  a2[15] = 0u;
  a2[12] = 0u;
  a2[13] = 0u;
  a2[10] = 0u;
  a2[11] = 0u;
  a2[8] = 0u;
  a2[9] = 0u;
  a2[6] = 0u;
  a2[7] = 0u;
  a2[4] = 0u;
  a2[5] = 0u;
  a2[2] = 0u;
  a2[3] = 0u;
  *a2 = 0u;
  a2[1] = 0u;
  unsigned int v16 = v12;
  unsigned int v17 = v12 / 6u;
  uint64_t v18 = v12 % 6u;
  int32x4_t v19 = (uint16x8_t *)((char *)&unk_221A38470 + 128 * v18);
  uint64_t v20 = a3 + (v18 << 7);
  int8x16_t v21 = (int8x16_t)xmmword_221A362D0;
  int16x8_t v22 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)xmmword_221A37D10, (int8x16_t)xmmword_221A36310), (int8x16_t)xmmword_221A362E0), (int8x16_t)xmmword_221A362D0);
  unsigned int v23 = v17 - 6;
  LODWORD(result) = 1 << (5 - v17);
  unsigned __int32 v24 = (unsigned __int16)(v17 - 6);
  if (v16 >= 0x24) {
    unsigned int v23 = 0;
  }
  else {
    unsigned __int32 v24 = 0;
  }
  if (v16 < 0x24)
  {
    int v25 = 1;
  }
  else
  {
    LODWORD(result) = 0;
    int v25 = 0;
  }
  if (v13)
  {
    int16x8_t result = result;
  }
  else
  {
    int v25 = 1;
    unsigned __int32 v24 = 0;
    unsigned int v23 = 0;
    int16x8_t result = 0;
  }
  if (!v13) {
    v17 -= 2;
  }
  v21.i32[0] = v13;
  int8x16_t v26 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(v21, a5), 0);
  v21.i32[0] = v17;
  a9.i32[0] = v24;
  v15.i32[0] = result;
  int16x4_t v27 = (int16x4_t)vbslq_s8(v26, v21, a9).u64[0];
  int32x4_t v28 = (int32x4_t)vqtbl1q_s8(v15, (int8x16_t)xmmword_221A36310);
  uint16x8_t v29 = (uint16x8_t)vdupq_lane_s16(v27, 0);
  int32x4_t v30 = vdupq_n_s32(v23);
  int16x8_t v31 = (__int16 *)(v14 + 80);
  v32.i64[0] = -1;
  v32.i64[1] = -1;
  v33.i64[0] = 0x1000100010001;
  v33.i64[1] = 0x1000100010001;
  v34.i64[0] = 0x5000500050005;
  v34.i64[1] = 0x5000500050005;
  do
  {
    if ((v11 & 1) == 0) {
      goto LABEL_21;
    }
    v35.i16[0] = *(v31 - 24);
    v35.i16[1] = *(v31 - 22);
    v35.i16[2] = *(v31 - 21);
    v35.i16[3] = *(v31 - 15);
    v36.i16[0] = *(v31 - 23);
    v36.i16[1] = *(v31 - 20);
    v36.i16[2] = *(v31 - 16);
    v36.i16[3] = *(v31 - 13);
    v37.i16[0] = *(v31 - 19);
    v37.i16[1] = *(v31 - 17);
    v37.i16[2] = *(v31 - 12);
    v37.i16[3] = *(v31 - 6);
    v38.i16[0] = *(v31 - 18);
    v38.i16[1] = *(v31 - 11);
    v38.i16[2] = *(v31 - 7);
    v38.i16[3] = *v31;
    v39.i16[0] = *(v31 - 10);
    v39.i16[1] = *(v31 - 8);
    v39.i16[2] = v31[1];
    v39.i16[3] = v31[7];
    v40.i16[0] = *(v31 - 9);
    v40.i16[1] = v31[2];
    v40.i16[2] = v31[6];
    v40.i16[3] = v31[16];
    v41.i16[0] = v31[3];
    v41.i16[1] = v31[5];
    v41.i16[2] = v31[17];
    v41.i16[3] = v31[20];
    int16x8_t result = (unint64_t)(v31 + 29);
    v42.i16[0] = v31[4];
    v42.i16[1] = v31[18];
    v42.i16[2] = v31[19];
    v42.i16[3] = v31[29];
    *(int16x4_t *)v43.i8 = v35;
    v43.i16[4] = *(v31 - 14);
    *(int16x4_t *)v44.i8 = v36;
    v44.i16[4] = *(v31 - 5);
    *(int16x4_t *)v45.i8 = v37;
    v45.i16[4] = *(v31 - 1);
    *(int16x4_t *)v46.i8 = v38;
    v46.i16[4] = v31[8];
    *(int16x4_t *)v47.i8 = v39;
    v47.i16[4] = v31[15];
    *(int16x4_t *)v48.i8 = v40;
    v48.i16[4] = v31[21];
    *(int16x4_t *)v49.i8 = v41;
    v49.i16[4] = v31[28];
    *(int16x4_t *)v50.i8 = v42;
    v50.i16[4] = v31[30];
    v43.i16[5] = *(v31 - 4);
    v44.i16[5] = *(v31 - 2);
    v45.i16[5] = v31[9];
    v46.i16[5] = v31[14];
    v47.i16[5] = v31[22];
    v48.i16[5] = v31[27];
    v49.i16[5] = v31[31];
    v50.i16[5] = v31[36];
    v43.i16[6] = *(v31 - 3);
    v44.i16[6] = v31[10];
    v45.i16[6] = v31[13];
    v46.i16[6] = v31[23];
    v47.i16[6] = v31[26];
    v48.i16[6] = v31[32];
    v49.i16[6] = v31[35];
    v50.i16[6] = v31[37];
    v43.i16[7] = v31[11];
    v44.i16[7] = v31[12];
    v45.i16[7] = v31[24];
    v46.i16[7] = v31[25];
    v47.i16[7] = v31[33];
    v48.i16[7] = v31[34];
    v49.i16[7] = v31[38];
    v50.i16[7] = v31[39];
    if (!v13)
    {
      int16x8_t v54 = vmulq_s16((int16x8_t)vshlq_u16(*v19, v29), v43);
      int16x8_t v59 = vmulq_s16((int16x8_t)vshlq_u16(v19[1], v29), v44);
      int16x8_t v62 = vmulq_s16((int16x8_t)vshlq_u16(v19[2], v29), v45);
      int16x8_t v67 = vmulq_s16((int16x8_t)vshlq_u16(v19[3], v29), v46);
      int16x8_t v70 = vmulq_s16((int16x8_t)vshlq_u16(v19[4], v29), v47);
      int16x8_t v75 = vmulq_s16((int16x8_t)vshlq_u16(v19[5], v29), v48);
      int16x8_t v78 = vmulq_s16((int16x8_t)vshlq_u16(v19[6], v29), v49);
      int16x8_t v83 = (int16x8_t)vshlq_u16(v19[7], v29);
LABEL_19:
      int16x8_t v82 = vmulq_s16(v83, v50);
      goto LABEL_20;
    }
    int16x8_t v51 = *(int16x8_t *)v20;
    if (!v25)
    {
      int16x8_t v54 = vmulq_s16((int16x8_t)vshlq_u16((uint16x8_t)v51, v29), v43);
      int16x8_t v59 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v20 + 16), v29), v44);
      int16x8_t v62 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v20 + 32), v29), v45);
      int16x8_t v67 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v20 + 48), v29), v46);
      int16x8_t v70 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v20 + 64), v29), v47);
      int16x8_t v75 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v20 + 80), v29), v48);
      int16x8_t v78 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v20 + 96), v29), v49);
      int16x8_t v83 = (int16x8_t)vshlq_u16(*(uint16x8_t *)(v20 + 112), v29);
      goto LABEL_19;
    }
    int16x8_t v52 = vuzp2q_s16((int16x8_t)vmull_s16(v35, *(int16x4_t *)v51.i8), (int16x8_t)vmull_high_s16(v43, v51));
    int16x8_t v53 = vmulq_s16(v51, v43);
    int16x8_t v54 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v53, v52), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v53, v52), v28), v30));
    int16x8_t v55 = *(int16x8_t *)(v20 + 16);
    int16x8_t v56 = *(int16x8_t *)(v20 + 32);
    int16x8_t v57 = vuzp2q_s16((int16x8_t)vmull_s16(v36, *(int16x4_t *)v55.i8), (int16x8_t)vmull_high_s16(v44, v55));
    int16x8_t v58 = vmulq_s16(v55, v44);
    int16x8_t v59 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v58, v57), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v58, v57), v28), v30));
    int16x8_t v60 = vuzp2q_s16((int16x8_t)vmull_s16(v37, *(int16x4_t *)v56.i8), (int16x8_t)vmull_high_s16(v45, v56));
    int16x8_t v61 = vmulq_s16(v56, v45);
    int16x8_t v62 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v61, v60), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v61, v60), v28), v30));
    int16x8_t v63 = *(int16x8_t *)(v20 + 48);
    int16x8_t v64 = *(int16x8_t *)(v20 + 64);
    int16x8_t v65 = vuzp2q_s16((int16x8_t)vmull_s16(v38, *(int16x4_t *)v63.i8), (int16x8_t)vmull_high_s16(v46, v63));
    int16x8_t v66 = vmulq_s16(v63, v46);
    int16x8_t v67 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v66, v65), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v66, v65), v28), v30));
    int16x8_t v68 = vuzp2q_s16((int16x8_t)vmull_s16(v39, *(int16x4_t *)v64.i8), (int16x8_t)vmull_high_s16(v47, v64));
    int16x8_t v69 = vmulq_s16(v64, v47);
    int16x8_t v70 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v69, v68), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v69, v68), v28), v30));
    int16x8_t v71 = *(int16x8_t *)(v20 + 80);
    int16x8_t v72 = *(int16x8_t *)(v20 + 96);
    int16x8_t v73 = vuzp2q_s16((int16x8_t)vmull_s16(v40, *(int16x4_t *)v71.i8), (int16x8_t)vmull_high_s16(v48, v71));
    int16x8_t v74 = vmulq_s16(v71, v48);
    int16x8_t v75 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v74, v73), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v74, v73), v28), v30));
    int16x8_t v76 = vuzp2q_s16((int16x8_t)vmull_s16(v41, *(int16x4_t *)v72.i8), (int16x8_t)vmull_high_s16(v49, v72));
    int16x8_t v77 = vmulq_s16(v72, v49);
    int16x8_t v78 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v77, v76), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v77, v76), v28), v30));
    int16x8_t v79 = *(int16x8_t *)(v20 + 112);
    int16x8_t v80 = vuzp2q_s16((int16x8_t)vmull_s16(v42, *(int16x4_t *)v79.i8), (int16x8_t)vmull_high_s16(v50, v79));
    int16x8_t v81 = vmulq_s16(v79, v50);
    int16x8_t v82 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v81, v80), v28), v30)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v81, v80), v28), v30));
LABEL_20:
    int16x8_t v84 = vaddq_s16(v70, v54);
    int16x8_t v85 = (int16x8_t *)((char *)a2 + 2 * word_221A38460[v9]);
    int16x8_t v86 = vsubq_s16(v75, vaddq_s16(vaddq_s16(v67, v82), vshlq_s16(v82, v32)));
    int16x8_t v87 = vsubq_s16(v54, v70);
    int16x8_t v88 = vsubq_s16(vaddq_s16(v59, v82), vaddq_s16(v67, vshlq_s16(v67, v32)));
    int16x8_t v89 = vsubq_s16(vshlq_s16(v62, v32), v78);
    int16x8_t v90 = vaddq_s16(vaddq_s16(vsubq_s16(v75, v59), v82), vshlq_s16(v75, v32));
    int16x8_t v91 = vaddq_s16(vshlq_s16(v78, v32), v62);
    int16x8_t v92 = vaddq_s16(vaddq_s16(v67, vaddq_s16(v59, v75)), vshlq_s16(v59, v32));
    int16x8_t v93 = vaddq_s16(v91, v84);
    int16x8_t v94 = vaddq_s16(vshlq_s16(v92, v33), v86);
    int16x8_t v95 = vaddq_s16(v89, v87);
    int16x8_t v96 = vaddq_s16(vshlq_s16(v90, v33), v88);
    int16x8_t v97 = vsubq_s16(v87, v89);
    int16x8_t v98 = vsubq_s16(vshlq_s16(v88, v33), v90);
    int16x8_t v99 = vsubq_s16(v84, v91);
    int16x8_t v100 = vsubq_s16(v92, vshlq_s16(v86, v33));
    int16x8_t v101 = vaddq_s16(v100, v93);
    int16x8_t v102 = vaddq_s16(v98, v95);
    int16x8_t v103 = vaddq_s16(v96, v97);
    int16x8_t v104 = vaddq_s16(v94, v99);
    int16x8_t v105 = vsubq_s16(v99, v94);
    int16x8_t v106 = vsubq_s16(v97, v96);
    int16x8_t v107 = vsubq_s16(v95, v98);
    int16x8_t v108 = vsubq_s16(v93, v100);
    int32x4_t v109 = (int32x4_t)vzip1q_s16(v101, v102);
    int32x4_t v110 = (int32x4_t)vzip2q_s16(v101, v102);
    int32x4_t v111 = (int32x4_t)vzip1q_s16(v103, v104);
    int32x4_t v112 = (int32x4_t)vzip2q_s16(v103, v104);
    int32x4_t v113 = (int32x4_t)vzip1q_s16(v105, v106);
    int32x4_t v114 = (int32x4_t)vzip2q_s16(v105, v106);
    int32x4_t v115 = (int32x4_t)vzip1q_s16(v107, v108);
    int32x4_t v116 = (int32x4_t)vzip2q_s16(v107, v108);
    int64x2_t v117 = (int64x2_t)vzip1q_s32(v109, v111);
    int64x2_t v118 = (int64x2_t)vzip2q_s32(v109, v111);
    int64x2_t v119 = (int64x2_t)vzip1q_s32(v113, v115);
    int64x2_t v120 = (int64x2_t)vzip2q_s32(v113, v115);
    int64x2_t v121 = (int64x2_t)vzip1q_s32(v110, v112);
    int64x2_t v122 = (int64x2_t)vzip2q_s32(v110, v112);
    int64x2_t v123 = (int64x2_t)vzip1q_s32(v114, v116);
    int64x2_t v124 = (int64x2_t)vzip2q_s32(v114, v116);
    int16x8_t v125 = (int16x8_t)vzip1q_s64(v117, v119);
    int16x8_t v126 = (int16x8_t)vzip2q_s64(v117, v119);
    int16x8_t v127 = (int16x8_t)vzip1q_s64(v118, v120);
    int16x8_t v128 = (int16x8_t)vzip2q_s64(v118, v120);
    int16x8_t v129 = (int16x8_t)vzip1q_s64(v121, v123);
    int16x8_t v130 = (int16x8_t)vzip2q_s64(v121, v123);
    int16x8_t v131 = (int16x8_t)vzip1q_s64(v122, v124);
    int16x8_t v132 = (int16x8_t)vzip2q_s64(v122, v124);
    int16x8_t v133 = vaddq_s16(v125, v129);
    int16x8_t v134 = vsubq_s16(v130, vaddq_s16(vshlq_s16(v132, v32), vaddq_s16(v132, v128)));
    int16x8_t v135 = vsubq_s16(v125, v129);
    int16x8_t v136 = vsubq_s16(vaddq_s16(v132, v126), vaddq_s16(vshlq_s16(v128, v32), v128));
    int16x8_t v137 = vsubq_s16(vshlq_s16(v127, v32), v131);
    int16x8_t v138 = vaddq_s16(vsubq_s16(vshlq_s16(v130, v32), v126), vaddq_s16(v132, v130));
    int16x8_t v139 = vaddq_s16(vshlq_s16(v131, v32), v127);
    int16x8_t v140 = vaddq_s16(vaddq_s16(vshlq_s16(v126, v32), vaddq_s16(v130, v128)), v126);
    int16x8_t v141 = vaddq_s16(v134, vshlq_s16(v140, v33));
    int16x8_t v142 = vaddq_s16(v136, vshlq_s16(v138, v33));
    int16x8_t v143 = vsubq_s16(v135, v137);
    int16x8_t v144 = vsubq_s16(vshlq_s16(v136, v33), v138);
    int16x8_t v145 = vsubq_s16(v133, v139);
    int16x8_t v146 = vsubq_s16(v140, vshlq_s16(v134, v33));
    int16x8_t v147 = vaddq_s16(vaddq_s16(v133, v22), v139);
    int16x8_t v148 = vaddq_s16(vaddq_s16(v135, v22), v137);
    int16x8_t v149 = vaddq_s16(v143, v22);
    int16x8_t v150 = vaddq_s16(v145, v22);
    *int16x8_t v85 = vshlq_s16(vaddq_s16(v147, v146), v34);
    v85[2] = vshlq_s16(vaddq_s16(v148, v144), v34);
    v85[4] = vshlq_s16(vaddq_s16(v149, v142), v34);
    v85[6] = vshlq_s16(vaddq_s16(v150, v141), v34);
    v85[8] = vshlq_s16(vsubq_s16(v150, v141), v34);
    v85[10] = vshlq_s16(vsubq_s16(v149, v142), v34);
    v85[12] = vshlq_s16(vsubq_s16(v148, v144), v34);
    v85[14] = vshlq_s16(vsubq_s16(v147, v146), v34);
LABEL_21:
    v11 >>= 1;
    ++v9;
    v31 += 64;
  }
  while (v9 != 4);
  return result;
}

uint64_t sub_2219F0A34(uint64_t result, _OWORD *a2, uint64_t a3, double a4, int8x16_t a5, double a6, double a7, double a8, int8x16_t a9)
{
  a5.i32[0] = 0;
  uint64_t v13 = 0;
  uint64_t v14 = *(void *)(result + 40);
  unsigned int v15 = *(unsigned __int8 *)(v14 + 52);
  unsigned __int8 v16 = *(unsigned char *)(v14 + 55);
  uint64_t v17 = *(void *)(result + 56);
  __int32 v18 = *(unsigned __int8 *)(result + 1422192);
  v19.i32[1] = 0;
  v19.i64[1] = 0;
  a2[30] = 0u;
  a2[31] = 0u;
  a2[28] = 0u;
  a2[29] = 0u;
  a2[26] = 0u;
  a2[27] = 0u;
  a2[24] = 0u;
  a2[25] = 0u;
  a2[22] = 0u;
  a2[23] = 0u;
  a2[20] = 0u;
  a2[21] = 0u;
  a2[18] = 0u;
  a2[19] = 0u;
  a2[16] = 0u;
  a2[17] = 0u;
  a2[14] = 0u;
  a2[15] = 0u;
  a2[12] = 0u;
  a2[13] = 0u;
  a2[10] = 0u;
  a2[11] = 0u;
  a2[8] = 0u;
  a2[9] = 0u;
  a2[6] = 0u;
  a2[7] = 0u;
  a2[4] = 0u;
  a2[5] = 0u;
  a2[2] = 0u;
  a2[3] = 0u;
  *a2 = 0u;
  a2[1] = 0u;
  unsigned int v20 = v16;
  unsigned int v21 = v16 / 6u;
  uint64_t v22 = v16 % 6u;
  unsigned int v23 = (uint16x8_t *)((char *)&unk_221A38470 + 128 * v22);
  uint64_t v24 = a3 + (v22 << 7);
  int8x16_t v25 = (int8x16_t)xmmword_221A362D0;
  int16x8_t v26 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)xmmword_221A37D10, (int8x16_t)xmmword_221A36310), (int8x16_t)xmmword_221A362E0), (int8x16_t)xmmword_221A362D0);
  unsigned int v27 = v21 - 6;
  LODWORD(result) = 1 << (5 - v21);
  unsigned __int32 v28 = (unsigned __int16)(v21 - 6);
  if (v20 >= 0x24) {
    unsigned int v27 = 0;
  }
  else {
    unsigned __int32 v28 = 0;
  }
  if (v20 < 0x24)
  {
    int v29 = 1;
  }
  else
  {
    LODWORD(result) = 0;
    int v29 = 0;
  }
  if (v18)
  {
    int16x8_t result = result;
  }
  else
  {
    int v29 = 1;
    unsigned __int32 v28 = 0;
    unsigned int v27 = 0;
    int16x8_t result = 0;
  }
  if (!v18) {
    v21 -= 2;
  }
  v25.i32[0] = v18;
  int8x16_t v30 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(v25, a5), 0);
  v25.i32[0] = v21;
  a9.i32[0] = v28;
  v19.i32[0] = result;
  uint16x8_t v31 = (uint16x8_t)vdupq_lane_s16((int16x4_t)*(_OWORD *)&vbslq_s8(v30, v25, a9), 0);
  int32x4_t v32 = vdupq_n_s32(v27);
  int32x4_t v33 = (int32x4_t)vqtbl1q_s8(v19, (int8x16_t)xmmword_221A36310);
  int16x8_t v34 = word_221A38460;
  v35.i64[0] = -1;
  v35.i64[1] = -1;
  v36.i64[0] = 0x1000100010001;
  v36.i64[1] = 0x1000100010001;
  v37.i64[0] = 0x5000500050005;
  v37.i64[1] = 0x5000500050005;
  do
  {
    if ((v15 & 1) == 0) {
      goto LABEL_21;
    }
    v39.i16[0] = *(_WORD *)(v17 + v13 + 38);
    int16x8_t result = *(unsigned __int16 *)(v17 + v13 + 90);
    v12.i16[0] = *(_WORD *)(v17 + v13 + 136);
    v12.i16[2] = *(_WORD *)(v17 + v13 + 138);
    v38.i32[0] = *(_DWORD *)(v17 + v13 + 32);
    v38.i16[2] = *(_WORD *)(v17 + v13 + 36);
    v38.i16[3] = *(_WORD *)(v17 + v13 + 42);
    v39.i16[1] = *(_WORD *)(v17 + v13 + 40);
    v39.i16[2] = *(_WORD *)(v17 + v13 + 46);
    v39.i16[3] = *(_WORD *)(v17 + v13 + 50);
    v9.i16[0] = *(_WORD *)(v17 + v13 + 148);
    v9.i16[2] = *(_WORD *)(v17 + v13 + 150);
    *(int16x4_t *)v40.i8 = v38;
    v40.i16[4] = *(_WORD *)(v17 + v13 + 44);
    *(int16x4_t *)v41.i8 = v39;
    v41.i16[4] = *(_WORD *)(v17 + v13 + 58);
    v40.i16[5] = *(_WORD *)(v17 + v13 + 52);
    v41.i16[5] = *(_WORD *)(v17 + v13 + 66);
    v10.i32[0] = *(unsigned __int16 *)(v17 + v13 + 54);
    v10.i16[2] = *(_WORD *)(v17 + v13 + 56);
    v40.i32[3] = vmovn_s32((int32x4_t)v10).u32[0];
    v11.i32[0] = *(unsigned __int16 *)(v17 + v13 + 68);
    v11.i16[2] = *(_WORD *)(v17 + v13 + 70);
    v41.i32[3] = vmovn_s32((int32x4_t)v11).u32[0];
    v42.i16[0] = *(_WORD *)(v17 + v13 + 48);
    v42.i16[1] = *(_WORD *)(v17 + v13 + 60);
    v42.i16[2] = *(_WORD *)(v17 + v13 + 64);
    v42.i16[3] = *(_WORD *)(v17 + v13 + 72);
    v42.i64[1] = *(void *)(v17 + v13 + 80);
    v43.i16[0] = *(_WORD *)(v17 + v13 + 62);
    v43.i16[1] = *(_WORD *)(v17 + v13 + 74);
    v43.i16[2] = *(_WORD *)(v17 + v13 + 78);
    v43.i16[3] = *(_WORD *)(v17 + v13 + 88);
    v43.i64[1] = *(void *)(v17 + v13 + 96);
    v44.i16[0] = *(_WORD *)(v17 + v13 + 76);
    v44.i16[1] = *(_WORD *)(v17 + v13 + 90);
    v44.i16[2] = *(_WORD *)(v17 + v13 + 94);
    v44.i16[3] = *(_WORD *)(v17 + v13 + 104);
    v44.i64[1] = *(void *)(v17 + v13 + 112);
    v45.i16[0] = *(_WORD *)(v17 + v13 + 92);
    v45.i16[1] = *(_WORD *)(v17 + v13 + 106);
    v45.i16[2] = *(_WORD *)(v17 + v13 + 110);
    v45.i16[3] = *(_WORD *)(v17 + v13 + 120);
    v45.i64[1] = *(void *)(v17 + v13 + 126);
    v46.i16[0] = *(_WORD *)(v17 + v13 + 108);
    v46.i16[1] = *(_WORD *)(v17 + v13 + 122);
    v46.i16[2] = *(_WORD *)(v17 + v13 + 124);
    v46.i16[3] = *(_WORD *)(v17 + v13 + 134);
    v46.i64[1] = *(void *)(v17 + v13 + 140);
    int16x4_t v9 = vuzp1_s16(*(int16x4_t *)v12.i8, v9);
    *(int16x4_t *)v47.i8 = v9;
    v47.i64[1] = *(void *)(v17 + v13 + 152);
    if (!v18)
    {
      int16x8_t v56 = vmulq_s16((int16x8_t)vshlq_u16(*v23, v31), v40);
      int16x8_t v61 = vmulq_s16((int16x8_t)vshlq_u16(v23[1], v31), v41);
      int16x8_t v64 = vmulq_s16((int16x8_t)vshlq_u16(v23[2], v31), v42);
      int16x8_t v69 = vmulq_s16((int16x8_t)vshlq_u16(v23[3], v31), v43);
      int16x8_t v72 = vmulq_s16((int16x8_t)vshlq_u16(v23[4], v31), v44);
      int16x8_t v77 = vmulq_s16((int16x8_t)vshlq_u16(v23[5], v31), v45);
      uint16x8_t v85 = v23[7];
      int16x8_t v80 = vmulq_s16((int16x8_t)vshlq_u16(v23[6], v31), v46);
LABEL_19:
      int16x8_t v84 = vmulq_s16((int16x8_t)vshlq_u16(v85, v31), v47);
      goto LABEL_20;
    }
    int16x8_t v48 = *(int16x8_t *)v24;
    if (!v29)
    {
      int16x8_t v56 = vmulq_s16((int16x8_t)vshlq_u16((uint16x8_t)v48, v31), v40);
      int16x8_t v61 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v24 + 16), v31), v41);
      int16x8_t v64 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v24 + 32), v31), v42);
      int16x8_t v69 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v24 + 48), v31), v43);
      int16x8_t v72 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v24 + 64), v31), v44);
      int16x8_t v77 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v24 + 80), v31), v45);
      int16x8_t v80 = vmulq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v24 + 96), v31), v46);
      uint16x8_t v85 = *(uint16x8_t *)(v24 + 112);
      goto LABEL_19;
    }
    v49.i16[1] = *(_WORD *)(v17 + v13 + 60);
    v49.i16[2] = *(_WORD *)(v17 + v13 + 64);
    v49.i16[3] = *(_WORD *)(v17 + v13 + 72);
    v50.i16[1] = *(_WORD *)(v17 + v13 + 74);
    v50.i16[2] = *(_WORD *)(v17 + v13 + 78);
    v50.i16[3] = *(_WORD *)(v17 + v13 + 88);
    v51.i16[1] = *(_WORD *)(v17 + v13 + 90);
    v51.i16[2] = *(_WORD *)(v17 + v13 + 94);
    v51.i16[3] = *(_WORD *)(v17 + v13 + 104);
    v52.i16[1] = *(_WORD *)(v17 + v13 + 106);
    v52.i16[2] = *(_WORD *)(v17 + v13 + 110);
    v52.i16[3] = *(_WORD *)(v17 + v13 + 120);
    v53.i16[1] = *(_WORD *)(v17 + v13 + 122);
    v53.i16[2] = *(_WORD *)(v17 + v13 + 124);
    v53.i16[3] = *(_WORD *)(v17 + v13 + 134);
    int16x8_t v54 = vuzp2q_s16((int16x8_t)vmull_s16(v38, *(int16x4_t *)v48.i8), (int16x8_t)vmull_high_s16(v40, v48));
    int16x8_t v55 = vmulq_s16(v48, v40);
    int16x8_t v56 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v55, v54), v33), v32)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v55, v54), v33), v32));
    int16x8_t v57 = *(int16x8_t *)(v24 + 16);
    int16x8_t v58 = *(int16x8_t *)(v24 + 32);
    int16x8_t v59 = vuzp2q_s16((int16x8_t)vmull_s16(v39, *(int16x4_t *)v57.i8), (int16x8_t)vmull_high_s16(v41, v57));
    int16x8_t v60 = vmulq_s16(v57, v41);
    int16x8_t v61 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v60, v59), v33), v32)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v60, v59), v33), v32));
    v49.i16[0] = *(_WORD *)(v17 + v13 + 48);
    int16x8_t v62 = vuzp2q_s16((int16x8_t)vmull_s16(v49, *(int16x4_t *)v58.i8), (int16x8_t)vmull_s16(*(int16x4_t *)(v17 + v13 + 80), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v58, (int8x16_t)v58, 8uLL)));
    int16x8_t v63 = vmulq_s16(v58, v42);
    int16x8_t v64 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v63, v62), v33), v32)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v63, v62), v33), v32));
    int16x8_t v65 = *(int16x8_t *)(v24 + 48);
    int16x8_t v66 = *(int16x8_t *)(v24 + 64);
    v50.i16[0] = *(_WORD *)(v17 + v13 + 62);
    int16x8_t v67 = vuzp2q_s16((int16x8_t)vmull_s16(v50, *(int16x4_t *)v65.i8), (int16x8_t)vmull_s16(*(int16x4_t *)(v17 + v13 + 96), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v65, (int8x16_t)v65, 8uLL)));
    int16x8_t v68 = vmulq_s16(v65, v43);
    int16x8_t v69 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v68, v67), v33), v32)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v68, v67), v33), v32));
    v51.i16[0] = *(_WORD *)(v17 + v13 + 76);
    int16x8_t v70 = vuzp2q_s16((int16x8_t)vmull_s16(v51, *(int16x4_t *)v66.i8), (int16x8_t)vmull_s16(*(int16x4_t *)(v17 + v13 + 112), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v66, (int8x16_t)v66, 8uLL)));
    int16x8_t v71 = vmulq_s16(v66, v44);
    int16x8_t v72 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v71, v70), v33), v32)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v71, v70), v33), v32));
    int16x8_t v73 = *(int16x8_t *)(v24 + 80);
    int16x8_t v74 = *(int16x8_t *)(v24 + 96);
    v52.i16[0] = *(_WORD *)(v17 + v13 + 92);
    int16x8_t v75 = vuzp2q_s16((int16x8_t)vmull_s16(v52, *(int16x4_t *)v73.i8), (int16x8_t)vmull_s16(*(int16x4_t *)(v17 + v13 + 126), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v73, (int8x16_t)v73, 8uLL)));
    int16x8_t v76 = vmulq_s16(v73, v45);
    int16x8_t v77 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v76, v75), v33), v32)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v76, v75), v33), v32));
    v53.i16[0] = *(_WORD *)(v17 + v13 + 108);
    int16x8_t v78 = vuzp2q_s16((int16x8_t)vmull_s16(v53, *(int16x4_t *)v74.i8), (int16x8_t)vmull_s16(*(int16x4_t *)(v17 + v13 + 140), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v74, (int8x16_t)v74, 8uLL)));
    int16x8_t v79 = vmulq_s16(v74, v46);
    int16x8_t v80 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v79, v78), v33), v32)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v79, v78), v33), v32));
    int16x8_t v81 = *(int16x8_t *)(v24 + 112);
    int16x8_t v82 = vuzp2q_s16((int16x8_t)vmull_s16(v9, *(int16x4_t *)v81.i8), (int16x8_t)vmull_s16(*(int16x4_t *)(v17 + v13 + 152), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v81, (int8x16_t)v81, 8uLL)));
    int16x8_t v83 = vmulq_s16(v81, v47);
    int16x8_t v84 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v83, v82), v33), v32)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v83, v82), v33), v32));
LABEL_20:
    int16x8_t v86 = vaddq_s16(v72, v56);
    int16x8_t v87 = (int16x8_t *)((char *)a2 + 2 * *v34);
    int16x8_t v88 = vsubq_s16(v77, vaddq_s16(v69, vaddq_s16(v84, vshlq_s16(v84, v35))));
    int16x8_t v89 = vsubq_s16(v56, v72);
    int16x8_t v90 = vsubq_s16(vaddq_s16(v61, v84), vaddq_s16(v69, vshlq_s16(v69, v35)));
    int16x8_t v91 = vsubq_s16(vshlq_s16(v64, v35), v80);
    int16x8_t v92 = vaddq_s16(vsubq_s16(v77, v61), vaddq_s16(v84, vshlq_s16(v77, v35)));
    int16x8_t v93 = vaddq_s16(vshlq_s16(v80, v35), v64);
    int16x8_t v94 = vaddq_s16(vaddq_s16(v69, vaddq_s16(v61, v77)), vshlq_s16(v61, v35));
    int16x8_t v95 = vaddq_s16(v93, v86);
    int16x8_t v96 = vaddq_s16(vshlq_s16(v94, v36), v88);
    int16x8_t v97 = vaddq_s16(v91, v89);
    int16x8_t v98 = vaddq_s16(vshlq_s16(v92, v36), v90);
    int16x8_t v99 = vsubq_s16(v89, v91);
    int16x8_t v100 = vsubq_s16(vshlq_s16(v90, v36), v92);
    int16x8_t v101 = vsubq_s16(v86, v93);
    int16x8_t v102 = vsubq_s16(v94, vshlq_s16(v88, v36));
    int16x8_t v103 = vaddq_s16(v102, v95);
    int16x8_t v104 = vaddq_s16(v100, v97);
    int16x8_t v105 = vaddq_s16(v98, v99);
    int16x8_t v106 = vaddq_s16(v96, v101);
    int16x8_t v107 = vsubq_s16(v101, v96);
    int16x8_t v108 = vsubq_s16(v99, v98);
    int16x8_t v109 = vsubq_s16(v97, v100);
    int16x8_t v110 = vsubq_s16(v95, v102);
    int32x4_t v111 = (int32x4_t)vzip1q_s16(v103, v104);
    int32x4_t v112 = (int32x4_t)vzip2q_s16(v103, v104);
    int32x4_t v113 = (int32x4_t)vzip1q_s16(v105, v106);
    int32x4_t v114 = (int32x4_t)vzip2q_s16(v105, v106);
    int32x4_t v115 = (int32x4_t)vzip1q_s16(v107, v108);
    int32x4_t v116 = (int32x4_t)vzip2q_s16(v107, v108);
    int32x4_t v117 = (int32x4_t)vzip1q_s16(v109, v110);
    int32x4_t v118 = (int32x4_t)vzip2q_s16(v109, v110);
    int64x2_t v119 = (int64x2_t)vzip1q_s32(v111, v113);
    int64x2_t v120 = (int64x2_t)vzip2q_s32(v111, v113);
    int64x2_t v121 = (int64x2_t)vzip1q_s32(v115, v117);
    int64x2_t v122 = (int64x2_t)vzip2q_s32(v115, v117);
    int64x2_t v123 = (int64x2_t)vzip1q_s32(v112, v114);
    int64x2_t v124 = (int64x2_t)vzip2q_s32(v112, v114);
    int64x2_t v125 = (int64x2_t)vzip1q_s32(v116, v118);
    int64x2_t v126 = (int64x2_t)vzip2q_s32(v116, v118);
    int16x8_t v127 = (int16x8_t)vzip1q_s64(v119, v121);
    int16x8_t v128 = (int16x8_t)vzip2q_s64(v119, v121);
    int16x8_t v129 = (int16x8_t)vzip1q_s64(v120, v122);
    int16x8_t v130 = (int16x8_t)vzip2q_s64(v120, v122);
    int16x8_t v131 = (int16x8_t)vzip1q_s64(v123, v125);
    int16x8_t v132 = (int16x8_t)vzip2q_s64(v123, v125);
    int16x8_t v133 = (int16x8_t)vzip1q_s64(v124, v126);
    int16x8_t v134 = (int16x8_t)vzip2q_s64(v124, v126);
    int16x8_t v135 = vaddq_s16(v127, v131);
    int16x8_t v136 = vsubq_s16(v132, vaddq_s16(vshlq_s16(v134, v35), vaddq_s16(v134, v130)));
    int16x8_t v137 = vsubq_s16(v127, v131);
    int16x8_t v138 = vsubq_s16(vaddq_s16(v134, v128), vaddq_s16(vshlq_s16(v130, v35), v130));
    int16x8_t v139 = vsubq_s16(vshlq_s16(v129, v35), v133);
    int16x8_t v140 = vaddq_s16(vsubq_s16(vshlq_s16(v132, v35), v128), vaddq_s16(v134, v132));
    int16x8_t v141 = vaddq_s16(vshlq_s16(v133, v35), v129);
    int16x8_t v142 = vaddq_s16(vaddq_s16(vshlq_s16(v128, v35), vaddq_s16(v132, v130)), v128);
    int16x8_t v143 = vaddq_s16(v136, vshlq_s16(v142, v36));
    int16x8_t v144 = vaddq_s16(v138, vshlq_s16(v140, v36));
    int16x8_t v145 = vsubq_s16(v137, v139);
    int16x8_t v146 = vsubq_s16(vshlq_s16(v138, v36), v140);
    int16x8_t v147 = vsubq_s16(v135, v141);
    int16x8_t v148 = vsubq_s16(v142, vshlq_s16(v136, v36));
    int16x8_t v11 = vaddq_s16(vaddq_s16(v135, v26), v141);
    int16x8_t v10 = vaddq_s16(vaddq_s16(v137, v26), v139);
    int16x8_t v149 = vaddq_s16(v145, v26);
    int16x8_t v150 = vaddq_s16(v147, v26);
    *int16x8_t v87 = vshlq_s16(vaddq_s16(v11, v148), v37);
    int16x8_t v12 = vshlq_s16(vaddq_s16(v10, v146), v37);
    v87[2] = v12;
    v87[4] = vshlq_s16(vaddq_s16(v149, v144), v37);
    v87[6] = vshlq_s16(vaddq_s16(v150, v143), v37);
    v87[8] = vshlq_s16(vsubq_s16(v150, v143), v37);
    v87[10] = vshlq_s16(vsubq_s16(v149, v144), v37);
    v87[12] = vshlq_s16(vsubq_s16(v10, v146), v37);
    v87[14] = vshlq_s16(vsubq_s16(v11, v148), v37);
LABEL_21:
    v15 >>= 1;
    ++v34;
    v13 += 128;
  }
  while (v13 != 512);
  return result;
}

uint64_t sub_2219F1234(uint64_t a1, _OWORD *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(void *)(a1 + 40);
  char v7 = sub_221A2508C(*(unsigned __int8 *)(v4 + 55), *(char *)(v4 + 56));
  char v6 = sub_221A2508C(*(unsigned __int8 *)(v4 + 55), *(char *)(*(void *)(a1 + 40) + 57));
  int v9 = *(unsigned __int8 *)(v4 + 53);
  sub_2219EF4C0((int16x8_t *)(*(void *)(a1 + 56) + 800), *(void *)(a1 + 56) + 544, *(void *)(a1 + 56) + 672, (uint64_t)v8, &v7, &v6, a2, *(unsigned __int8 *)(a1 + 1422192));
  return 0;
}

uint64_t sub_2219F12F8(uint64_t a1, _OWORD *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(void *)(a1 + 40);
  char v7 = sub_221A2508C(*(unsigned __int8 *)(v4 + 55), *(char *)(v4 + 56));
  char v6 = sub_221A2508C(*(unsigned __int8 *)(v4 + 55), *(char *)(*(void *)(a1 + 40) + 57));
  int v9 = *(unsigned __int8 *)(v4 + 53);
  sub_2219EFA38((int16x8_t *)(*(void *)(a1 + 56) + 800), *(void *)(a1 + 56) + 544, *(void *)(a1 + 56) + 672, (uint64_t)v8, &v7, &v6, a2, *(unsigned __int8 *)(a1 + 1422192));
  return 0;
}

int16x8_t *sub_2219F13BC(int16x8_t *result, unsigned __int8 a2, uint64_t a3, uint64_t a4, _DWORD *a5, int16x8_t *a6)
{
  uint64_t v115 = *MEMORY[0x263EF8340];
  unsigned int v6 = a2 & 0x1F;
  unsigned int v7 = v6 + 15;
  unint64_t v8 = 1431655766 * (1 << ((a2 & 0x1F) + 15));
  unsigned int v9 = 2 * (HIDWORD(v8) + (v8 >> 63));
  uint64_t v10 = a2 >> 5;
  *a5 = 0;
  if (v6 < 6)
  {
    int32x4_t v55 = vdupq_n_s32(v9);
    uint32x4_t v56 = (uint32x4_t)vdupq_n_s32(~v7);
    int32x4_t v57 = vdupq_n_s32(0x20u >> v6);
    int32x4_t v58 = vdupq_n_s32((a2 & 0x1Fu) - 6);
    int16x8_t v59 = result + 1;
    int16x8_t v60 = a6 + 1;
    uint64_t v61 = (v10 << 7) | 0x10;
    int16x8_t v62 = (int16x8_t *)((char *)&unk_221A37D50 + v61);
    int16x8_t v63 = (int16x8_t *)((char *)&unk_221A38050 + v61);
    int16x8_t v64 = (int16x8_t *)v114;
    v65.i64[0] = 0xE000E000E000ELL;
    v65.i64[1] = 0xE000E000E000ELL;
    unint64_t v66 = -16;
    do
    {
      int16x8_t v67 = v59[-1];
      int16x8_t v68 = v62[-1];
      int16x8_t v69 = vshlq_s16(v67, v65);
      int16x8_t v70 = vshlq_s16(*v59, v65);
      int16x8_t v71 = vsubq_s16((int16x8_t)veorq_s8((int8x16_t)v69, (int8x16_t)v67), v69);
      int16x8_t v72 = vsubq_s16((int16x8_t)veorq_s8((int8x16_t)v70, *(int8x16_t *)v59), v70);
      int16x8_t v73 = vmulq_s16(v71, v68);
      int16x8_t v74 = (int16x8_t)vmull_s16(*(int16x4_t *)v71.i8, *(int16x4_t *)v68.i8);
      int16x8_t v75 = (int16x8_t)vmull_high_s16(v71, v68);
      int16x8_t v76 = vmulq_s16(v72, *v62);
      int16x8_t v77 = vuzp2q_s16(v74, v75);
      int16x8_t v78 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v72.i8, *(int16x4_t *)v62->i8), (int16x8_t)vmull_high_s16(v72, *v62));
      int32x4_t v79 = (int32x4_t)vzip1q_s16(v76, v78);
      int32x4_t v80 = (int32x4_t)vzip2q_s16(v76, v78);
      uint32x4_t v81 = (uint32x4_t)vaddq_s32(v55, (int32x4_t)vzip1q_s16(v73, v77));
      int8x16_t v82 = (int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32(v55, (int32x4_t)vzip2q_s16(v73, v77)), v56);
      int32x4_t v83 = (int32x4_t)vzip1q_s16(v69, v69);
      int32x4_t v84 = vsubq_s32((int32x4_t)veorq_s8((int8x16_t)vshlq_u32(v81, v56), (int8x16_t)v83), v83);
      int32x4_t v85 = (int32x4_t)vzip2q_s16(v69, v69);
      int32x4_t v86 = (int32x4_t)vzip1q_s16(v70, v70);
      int32x4_t v87 = vsubq_s32((int32x4_t)veorq_s8(v82, (int8x16_t)v85), v85);
      int32x4_t v88 = (int32x4_t)vzip2q_s16(v70, v70);
      int32x4_t v89 = vsubq_s32((int32x4_t)veorq_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32(v55, v80), v56), (int8x16_t)v88), v88);
      *(int16x4_t *)v84.i8 = vqmovn_s32(v84);
      int16x8_t v90 = vqmovn_high_s32(*(int16x4_t *)v84.i8, v87);
      int16x4_t v91 = vqmovn_s32(vsubq_s32((int32x4_t)veorq_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32(v55, v79), v56), (int8x16_t)v86), v86));
      int16x8_t v92 = vqmovn_high_s32(v91, v89);
      int8x16_t v93 = vandq_s8((int8x16_t)vceqzq_s16(v90), (int8x16_t)xmmword_221A37900);
      int8x16_t v94 = vpaddq_s8(v93, v93);
      int8x16_t v95 = vpaddq_s8(v94, v94);
      int8x16_t v96 = vandq_s8((int8x16_t)vceqzq_s16(v92), (int8x16_t)xmmword_221A37900);
      unsigned __int16 v97 = vpaddq_s8(v95, v95).u16[0];
      int8x16_t v98 = vpaddq_s8(v96, v96);
      int8x16_t v99 = vpaddq_s8(v98, v98);
      *a5 |= ~(vpaddq_s8(v99, v99).u16[0] | (v97 << 16));
      int16x8_t v100 = v63[-1];
      int16x8_t v101 = (int16x8_t)vmull_s16(vqmovn_s32(v87), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v100, (int8x16_t)v100, 8uLL));
      int16x8_t v102 = *v63;
      v63 += 2;
      int16x8_t v103 = (int16x8_t)vmull_s16(*(int16x4_t *)v84.i8, *(int16x4_t *)v100.i8);
      int16x8_t v104 = vmulq_s16(v100, v90);
      int16x8_t v105 = vuzp2q_s16(v103, v101);
      int16x8_t v106 = vmulq_s16(v102, v92);
      int16x8_t v107 = vuzp2q_s16((int16x8_t)vmull_s16(v91, *(int16x4_t *)v102.i8), (int16x8_t)vmull_s16(vqmovn_s32(v89), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v102, (int8x16_t)v102, 8uLL)));
      v60[-1] = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32(vshlq_n_s32((int32x4_t)vzip1q_s16(v104, v105), 4uLL), v57), v58)), vshlq_s32(vaddq_s32(vshlq_n_s32((int32x4_t)vzip2q_s16(v104, v105), 4uLL), v57), v58));
      *int16x8_t v60 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32(vshlq_n_s32((int32x4_t)vzip1q_s16(v106, v107), 4uLL), v57), v58)), vshlq_s32(vaddq_s32(vshlq_n_s32((int32x4_t)vzip2q_s16(v106, v107), 4uLL), v57), v58));
      v66 += 16;
      v59 += 2;
      v60 += 2;
      v64[-1] = v90;
      *int16x8_t v64 = v92;
      v62 += 2;
      v64 += 2;
    }
    while (v66 < 0x30);
  }
  else
  {
    int32x4_t v11 = vdupq_n_s32(v9);
    uint32x4_t v12 = (uint32x4_t)vdupq_n_s32(~v7);
    uint32x4_t v13 = (uint32x4_t)vdupq_n_s32(v6 - 2);
    uint64_t v14 = result + 1;
    unsigned int v15 = a6 + 1;
    uint64_t v16 = (v10 << 7) | 0x10;
    uint64_t v17 = (int16x8_t *)((char *)&unk_221A37D50 + v16);
    __int32 v18 = (int16x8_t *)((char *)&unk_221A38050 + v16);
    int8x16_t v19 = (int16x8_t *)v114;
    v20.i64[0] = 0xE000E000E000ELL;
    v20.i64[1] = 0xE000E000E000ELL;
    unint64_t v21 = -16;
    do
    {
      int16x8_t v22 = v14[-1];
      int16x8_t v23 = v17[-1];
      int16x8_t v24 = vshlq_s16(v22, v20);
      int16x8_t v25 = vshlq_s16(*v14, v20);
      int16x8_t v26 = vsubq_s16((int16x8_t)veorq_s8((int8x16_t)v24, (int8x16_t)v22), v24);
      int16x8_t v27 = vsubq_s16((int16x8_t)veorq_s8((int8x16_t)v25, *(int8x16_t *)v14), v25);
      int16x8_t v28 = vmulq_s16(v26, v23);
      int16x8_t v29 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v26.i8, *(int16x4_t *)v23.i8), (int16x8_t)vmull_high_s16(v26, v23));
      int32x4_t v30 = (int32x4_t)vzip1q_s16(v28, v29);
      int16x8_t v31 = vmulq_s16(v27, *v17);
      int16x8_t v32 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v27.i8, *(int16x4_t *)v17->i8), (int16x8_t)vmull_high_s16(v27, *v17));
      int32x4_t v33 = (int32x4_t)vzip1q_s16(v31, v32);
      int8x16_t v34 = (int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32(v11, (int32x4_t)vzip2q_s16(v28, v29)), v12);
      int32x4_t v35 = (int32x4_t)vzip1q_s16(v24, v24);
      int32x4_t v36 = vsubq_s32((int32x4_t)veorq_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32(v11, v30), v12), (int8x16_t)v35), v35);
      int32x4_t v37 = (int32x4_t)vzip2q_s16(v24, v24);
      int32x4_t v38 = (int32x4_t)vzip1q_s16(v25, v25);
      int32x4_t v39 = vsubq_s32((int32x4_t)veorq_s8(v34, (int8x16_t)v37), v37);
      int32x4_t v40 = (int32x4_t)vzip2q_s16(v25, v25);
      int32x4_t v41 = vsubq_s32((int32x4_t)veorq_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32(v11, (int32x4_t)vzip2q_s16(v31, v32)), v12), (int8x16_t)v40), v40);
      *(int16x4_t *)v36.i8 = vqmovn_s32(v36);
      int16x8_t v42 = vqmovn_high_s32(*(int16x4_t *)v36.i8, v39);
      *(int16x4_t *)v33.i8 = vqmovn_s32(vsubq_s32((int32x4_t)veorq_s8((int8x16_t)vshlq_u32((uint32x4_t)vaddq_s32(v11, v33), v12), (int8x16_t)v38), v38));
      int16x8_t v43 = vqmovn_high_s32(*(int16x4_t *)v33.i8, v41);
      int8x16_t v44 = vandq_s8((int8x16_t)vceqzq_s16(v42), (int8x16_t)xmmword_221A37900);
      int8x16_t v45 = vpaddq_s8(v44, v44);
      int8x16_t v46 = vpaddq_s8(v45, v45);
      int8x16_t v47 = vandq_s8((int8x16_t)vceqzq_s16(v43), (int8x16_t)xmmword_221A37900);
      int8x16_t v48 = vpaddq_s8(v47, v47);
      int8x16_t v49 = vpaddq_s8(v48, v48);
      *a5 |= ~(vpaddq_s8(v49, v49).u16[0] | (vpaddq_s8(v46, v46).u16[0] << 16));
      int16x8_t v50 = v18[-1];
      int16x8_t v51 = vmulq_s16(v50, v42);
      int16x8_t v52 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v36.i8, *(int16x4_t *)v50.i8), (int16x8_t)vmull_s16(vqmovn_s32(v39), (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v50, (int8x16_t)v50, 8uLL)));
      int16x8_t v53 = vmulq_s16(*v18, v43);
      int16x8_t v54 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v33.i8, *(int16x4_t *)v18->i8), (int16x8_t)vmull_s16(vqmovn_s32(v41), (int16x4_t)*(_OWORD *)&vextq_s8(*(int8x16_t *)v18, *(int8x16_t *)v18, 8uLL)));
      v15[-1] = vqmovn_high_s32(vqmovn_s32((int32x4_t)vshlq_u32((uint32x4_t)vzip1q_s16(v51, v52), v13)), (int32x4_t)vshlq_u32((uint32x4_t)vzip2q_s16(v51, v52), v13));
      int16x8_t *v15 = vqmovn_high_s32(vqmovn_s32((int32x4_t)vshlq_u32((uint32x4_t)vzip1q_s16(v53, v54), v13)), (int32x4_t)vshlq_u32((uint32x4_t)vzip2q_s16(v53, v54), v13));
      v21 += 16;
      v14 += 2;
      v15 += 2;
      v19[-1] = v42;
      *int8x16_t v19 = v43;
      v17 += 2;
      v18 += 2;
      v19 += 2;
    }
    while (v21 < 0x30);
  }
  int v108 = v111;
  *(_DWORD *)a4 = v110;
  *(_DWORD *)(a4 + 10) = v108;
  int v109 = v113;
  *(_DWORD *)(a4 + 28) = v112;
  *(_DWORD *)(a4 + 54) = v109;
  *(_WORD *)(a4 + 4) = v114[0];
  *(_WORD *)(a4 + 8) = v114[1];
  *(_WORD *)(a4 + 14) = v114[2];
  *(_WORD *)(a4 + 26) = v114[3];
  *(_WORD *)(a4 + 32) = v114[4];
  *(_WORD *)(a4 + 52) = v114[5];
  *(_WORD *)(a4 + 58) = v114[6];
  *(_WORD *)(a4 + 84) = v114[7];
  *(_WORD *)(a4 + 6) = v114[8];
  *(_WORD *)(a4 + 16) = v114[9];
  *(_WORD *)(a4 + 24) = v114[10];
  *(_WORD *)(a4 + 34) = v114[11];
  *(_WORD *)(a4 + 50) = v114[12];
  *(_WORD *)(a4 + 60) = v114[13];
  *(_WORD *)(a4 + 82) = v114[14];
  *(_WORD *)(a4 + 86) = v114[15];
  *(_WORD *)(a4 + 18) = v114[16];
  *(_WORD *)(a4 + 22) = v114[17];
  *(_WORD *)(a4 + 36) = v114[18];
  *(_WORD *)(a4 + 48) = v114[19];
  *(_WORD *)(a4 + 62) = v114[20];
  *(_WORD *)(a4 + 80) = v114[21];
  *(_WORD *)(a4 + 88) = v114[22];
  *(_WORD *)(a4 + 106) = v114[23];
  *(_WORD *)(a4 + 20) = v114[24];
  *(_WORD *)(a4 + 38) = v114[25];
  *(_WORD *)(a4 + 46) = v114[26];
  *(_WORD *)(a4 + 64) = v114[27];
  *(_WORD *)(a4 + 78) = v114[28];
  *(_WORD *)(a4 + 90) = v114[29];
  *(_WORD *)(a4 + 104) = v114[30];
  *(_WORD *)(a4 + 108) = v114[31];
  *(_WORD *)(a4 + 40) = v114[32];
  *(_WORD *)(a4 + 44) = v114[33];
  *(_WORD *)(a4 + 66) = v114[34];
  *(_WORD *)(a4 + 76) = v114[35];
  *(_WORD *)(a4 + 92) = v114[36];
  *(_WORD *)(a4 + 102) = v114[37];
  *(_WORD *)(a4 + 110) = v114[38];
  *(_WORD *)(a4 + 120) = v114[39];
  *(_WORD *)(a4 + 42) = v114[40];
  *(_WORD *)(a4 + 68) = v114[41];
  *(_WORD *)(a4 + 74) = v114[42];
  *(_WORD *)(a4 + 94) = v114[43];
  *(_WORD *)(a4 + 100) = v114[44];
  *(_WORD *)(a4 + 112) = v114[45];
  *(_WORD *)(a4 + 118) = v114[46];
  *(_WORD *)(a4 + 122) = v114[47];
  *(_WORD *)(a4 + 70) = v114[48];
  *(_WORD *)(a4 + 72) = v114[49];
  *(_WORD *)(a4 + 96) = v114[50];
  *(_WORD *)(a4 + 98) = v114[51];
  *(_WORD *)(a4 + 114) = v114[52];
  *(_WORD *)(a4 + 116) = v114[53];
  *(_WORD *)(a4 + 124) = v114[54];
  *(_WORD *)(a4 + 126) = v114[55];
  return result;
}

int16x8_t sub_2219F19F4(int16x8_t *a1, int16x8_t *a2)
{
  int16x8_t v2 = a1[1];
  int32x4_t v3 = (int32x4_t)vzip1q_s16(*a1, v2);
  int32x4_t v4 = (int32x4_t)vzip2q_s16(*a1, v2);
  int16x8_t v5 = a1[2];
  int16x8_t v6 = a1[3];
  int32x4_t v7 = (int32x4_t)vzip1q_s16(v5, v6);
  int16x8_t v8 = a1[4];
  int16x8_t v9 = a1[5];
  int32x4_t v10 = (int32x4_t)vzip2q_s16(v5, v6);
  int32x4_t v11 = (int32x4_t)vzip1q_s16(v8, v9);
  int32x4_t v12 = (int32x4_t)vzip2q_s16(v8, v9);
  int16x8_t v13 = a1[6];
  int16x8_t v14 = a1[7];
  int32x4_t v15 = (int32x4_t)vzip1q_s16(v13, v14);
  int32x4_t v16 = (int32x4_t)vzip2q_s16(v13, v14);
  int64x2_t v17 = (int64x2_t)vzip1q_s32(v3, v7);
  int64x2_t v18 = (int64x2_t)vzip2q_s32(v3, v7);
  int64x2_t v19 = (int64x2_t)vzip1q_s32(v4, v10);
  int64x2_t v20 = (int64x2_t)vzip2q_s32(v4, v10);
  int64x2_t v21 = (int64x2_t)vzip1q_s32(v11, v15);
  int64x2_t v22 = (int64x2_t)vzip2q_s32(v11, v15);
  int64x2_t v23 = (int64x2_t)vzip1q_s32(v12, v16);
  int64x2_t v24 = (int64x2_t)vzip2q_s32(v12, v16);
  int16x8_t v25 = (int16x8_t)vzip1q_s64(v17, v21);
  int16x8_t v26 = (int16x8_t)vzip2q_s64(v17, v21);
  int16x8_t v27 = (int16x8_t)vzip1q_s64(v19, v23);
  int16x8_t v28 = (int16x8_t)vzip2q_s64(v19, v23);
  int16x8_t v29 = (int16x8_t)vzip1q_s64(v18, v22);
  int16x8_t v30 = (int16x8_t)vzip2q_s64(v18, v22);
  int16x8_t v31 = (int16x8_t)vzip1q_s64(v20, v24);
  int16x8_t v32 = vaddq_s16((int16x8_t)vzip2q_s64(v20, v24), v25);
  int16x8_t v33 = vsubq_s16(vaddq_s16(v25, v25), v32);
  int16x8_t v34 = vaddq_s16(v31, v26);
  int16x8_t v35 = vsubq_s16(vaddq_s16(v26, v26), v34);
  int16x8_t v36 = vaddq_s16(v28, v29);
  int16x8_t v37 = vsubq_s16(vaddq_s16(v29, v29), v36);
  int16x8_t v38 = vaddq_s16(v27, v30);
  int16x8_t v39 = vsubq_s16(vaddq_s16(v30, v30), v38);
  int16x8_t v40 = vaddq_s16(v38, v32);
  int16x8_t v41 = vsubq_s16(vaddq_s16(v32, v32), v40);
  int16x8_t v42 = vaddq_s16(v36, v34);
  int16x8_t v43 = vsubq_s16(vaddq_s16(v34, v34), v42);
  v32.i64[0] = -1;
  v32.i64[1] = -1;
  int16x8_t v44 = vaddq_s16(vaddq_s16(vaddq_s16(v33, v35), vshlq_s16(v33, v32)), v37);
  int16x8_t v45 = vsubq_s16(vaddq_s16(vaddq_s16(v39, v35), vshlq_s16(v39, v32)), v37);
  int16x8_t v46 = vaddq_s16(v39, v33);
  int16x8_t v47 = vsubq_s16(vaddq_s16(v33, v33), vaddq_s16(vaddq_s16(v37, vshlq_s16(v37, v32)), v46));
  int16x8_t v48 = vsubq_s16(v46, vaddq_s16(v35, vshlq_s16(v35, v32)));
  int16x8_t v49 = vaddq_s16(v42, v40);
  int16x8_t v50 = vsubq_s16(vaddq_s16(v40, v40), v49);
  v35.i64[0] = 0x1000100010001;
  v35.i64[1] = 0x1000100010001;
  int16x8_t v51 = vaddq_s16(v44, vshlq_s16(v45, v35));
  int16x8_t v52 = vsubq_s16(vshlq_s16(v44, v35), v45);
  int16x8_t v53 = vaddq_s16(v41, vshlq_s16(v43, v32));
  int16x8_t v54 = vsubq_s16(vshlq_s16(v41, v32), v43);
  int16x8_t v55 = vaddq_s16(v47, vshlq_s16(v48, v35));
  int16x8_t v56 = vsubq_s16(v48, vshlq_s16(v47, v35));
  int32x4_t v57 = (int32x4_t)vzip1q_s16(v49, v51);
  int32x4_t v58 = (int32x4_t)vzip2q_s16(v49, v51);
  int32x4_t v59 = (int32x4_t)vzip1q_s16(v53, v55);
  int32x4_t v60 = (int32x4_t)vzip2q_s16(v53, v55);
  int32x4_t v61 = (int32x4_t)vzip1q_s16(v50, v56);
  int32x4_t v62 = (int32x4_t)vzip2q_s16(v50, v56);
  int32x4_t v63 = (int32x4_t)vzip1q_s16(v54, v52);
  int32x4_t v64 = (int32x4_t)vzip2q_s16(v54, v52);
  int64x2_t v65 = (int64x2_t)vzip1q_s32(v57, v59);
  int64x2_t v66 = (int64x2_t)vzip2q_s32(v57, v59);
  int64x2_t v67 = (int64x2_t)vzip1q_s32(v58, v60);
  int64x2_t v68 = (int64x2_t)vzip2q_s32(v58, v60);
  int64x2_t v69 = (int64x2_t)vzip1q_s32(v61, v63);
  int64x2_t v70 = (int64x2_t)vzip2q_s32(v61, v63);
  int64x2_t v71 = (int64x2_t)vzip1q_s32(v62, v64);
  int64x2_t v72 = (int64x2_t)vzip2q_s32(v62, v64);
  int16x8_t v73 = (int16x8_t)vzip1q_s64(v65, v69);
  int16x8_t v74 = (int16x8_t)vzip2q_s64(v65, v69);
  int16x8_t v75 = (int16x8_t)vzip1q_s64(v67, v71);
  int16x8_t v76 = (int16x8_t)vzip2q_s64(v67, v71);
  int16x8_t v77 = (int16x8_t)vzip1q_s64(v66, v70);
  int16x8_t v78 = (int16x8_t)vzip2q_s64(v66, v70);
  int16x8_t v79 = (int16x8_t)vzip1q_s64(v68, v72);
  int16x8_t v80 = vaddq_s16((int16x8_t)vzip2q_s64(v68, v72), v73);
  int16x8_t v81 = vsubq_s16(vaddq_s16(v73, v73), v80);
  int16x8_t v82 = vaddq_s16(v79, v74);
  int16x8_t v83 = vsubq_s16(vaddq_s16(v74, v74), v82);
  int16x8_t v84 = vaddq_s16(v76, v77);
  int16x8_t v85 = vsubq_s16(vaddq_s16(v77, v77), v84);
  int16x8_t v86 = vaddq_s16(v75, v78);
  int16x8_t v87 = vsubq_s16(vaddq_s16(v78, v78), v86);
  int16x8_t v88 = vaddq_s16(v86, v80);
  int16x8_t v89 = vsubq_s16(vaddq_s16(v80, v80), v88);
  int16x8_t v90 = vaddq_s16(v84, v82);
  int16x8_t v91 = vsubq_s16(vaddq_s16(v82, v82), v90);
  int16x8_t v92 = vaddq_s16(vaddq_s16(vaddq_s16(v81, v83), vshlq_s16(v81, v32)), v85);
  int16x8_t v93 = vsubq_s16(vaddq_s16(vaddq_s16(v87, v83), vshlq_s16(v87, v32)), v85);
  int16x8_t v94 = vaddq_s16(v87, v81);
  int16x8_t v95 = vsubq_s16(vaddq_s16(v81, v81), vaddq_s16(vaddq_s16(v85, vshlq_s16(v85, v32)), v94));
  int16x8_t v96 = vsubq_s16(v94, vaddq_s16(v83, vshlq_s16(v83, v32)));
  int16x8_t v97 = vaddq_s16(v90, v88);
  *a2 = v97;
  a2[1] = vaddq_s16(v92, vshlq_s16(v93, v35));
  a2[2] = vaddq_s16(v89, vshlq_s16(v91, v32));
  a2[3] = vaddq_s16(v95, vshlq_s16(v96, v35));
  a2[4] = vsubq_s16(vaddq_s16(v88, v88), v97);
  a2[5] = vsubq_s16(v96, vshlq_s16(v95, v35));
  int16x8_t result = vsubq_s16(vshlq_s16(v89, v32), v91);
  a2[6] = result;
  a2[7] = vsubq_s16(vshlq_s16(v92, v35), v93);
  return result;
}

int16x8_t sub_2219F1C70(int16x8_t *a1, int16x8_t *a2)
{
  int16x8_t v2 = a1[1];
  int32x4_t v3 = (int32x4_t)vzip1q_s16(*a1, v2);
  int32x4_t v4 = (int32x4_t)vzip2q_s16(*a1, v2);
  int16x8_t v5 = a1[2];
  int16x8_t v6 = a1[3];
  int32x4_t v7 = (int32x4_t)vzip1q_s16(v5, v6);
  int32x4_t v8 = (int32x4_t)vzip2q_s16(v5, v6);
  int16x8_t v9 = a1[4];
  int16x8_t v10 = a1[5];
  int32x4_t v11 = (int32x4_t)vzip1q_s16(v9, v10);
  int32x4_t v12 = (int32x4_t)vzip2q_s16(v9, v10);
  int16x8_t v13 = a1[6];
  int16x8_t v14 = a1[7];
  int32x4_t v15 = (int32x4_t)vzip1q_s16(v13, v14);
  int32x4_t v16 = (int32x4_t)vzip2q_s16(v13, v14);
  int64x2_t v17 = (int64x2_t)vzip1q_s32(v3, v7);
  int64x2_t v18 = (int64x2_t)vzip2q_s32(v3, v7);
  int64x2_t v19 = (int64x2_t)vzip1q_s32(v4, v8);
  int16x8_t v20 = (int16x8_t)vzip2q_s32(v4, v8);
  int64x2_t v21 = (int64x2_t)vzip1q_s32(v11, v15);
  int64x2_t v22 = (int64x2_t)vzip2q_s32(v11, v15);
  int64x2_t v23 = (int64x2_t)vzip1q_s32(v12, v16);
  int64x2_t v24 = (int64x2_t)vzip2q_s32(v12, v16);
  int16x8_t v25 = (int16x8_t)vzip1q_s64(v17, v21);
  int16x8_t v26 = (int16x8_t)vzip2q_s64(v17, v21);
  int16x8_t v27 = (int16x8_t)vzip1q_s64(v19, v23);
  int16x8_t v28 = (int16x8_t)vzip2q_s64(v19, v23);
  int16x8_t v29 = (int16x8_t)vzip1q_s64(v18, v22);
  int16x8_t v30 = (int16x8_t)vzip2q_s64(v18, v22);
  int16x8_t v31 = (int16x8_t)vzip1q_s64((int64x2_t)v20, v24);
  int16x8_t v32 = (int16x8_t)vzip2q_s64((int64x2_t)v20, v24);
  int16x8_t v33 = vaddq_s16(v27, v25);
  int16x8_t v34 = vsubq_s16(vaddq_s16(v25, v25), v33);
  v20.i64[0] = -1;
  v20.i64[1] = -1;
  int16x8_t v35 = vsubq_s16(vshlq_s16(v29, v20), v31);
  int16x8_t v36 = vaddq_s16(vshlq_s16(v31, v20), v29);
  int16x8_t v37 = vaddq_s16(vaddq_s16(vshlq_s16(v26, v20), vaddq_s16(v26, v30)), v28);
  int16x8_t v38 = vsubq_s16(vaddq_s16(vshlq_s16(v28, v20), vaddq_s16(v28, v32)), v26);
  int16x8_t v39 = vsubq_s16(vaddq_s16(v32, v26), vaddq_s16(vshlq_s16(v30, v20), v30));
  int16x8_t v40 = vsubq_s16(v28, vaddq_s16(vaddq_s16(v30, v32), vshlq_s16(v32, v20)));
  int16x8_t v41 = vaddq_s16(v36, v33);
  int16x8_t v42 = vsubq_s16(vaddq_s16(v33, v33), v41);
  int16x8_t v43 = vaddq_s16(v34, v35);
  int16x8_t v44 = vsubq_s16(vaddq_s16(v34, v34), v43);
  v26.i64[0] = 0x1000100010001;
  v26.i64[1] = 0x1000100010001;
  int16x8_t v45 = vaddq_s16(v40, vshlq_s16(v37, v26));
  int16x8_t v46 = vaddq_s16(vsubq_s16(v37, vshlq_s16(v40, v26)), v41);
  int16x8_t v47 = vsubq_s16(vaddq_s16(v41, v41), v46);
  int16x8_t v48 = vaddq_s16(vsubq_s16(vshlq_s16(v39, v26), v38), v43);
  int16x8_t v49 = vsubq_s16(vaddq_s16(v43, v43), v48);
  int16x8_t v50 = vaddq_s16(vaddq_s16(vshlq_s16(v38, v26), v39), v44);
  int16x8_t v51 = vsubq_s16(vaddq_s16(v44, v44), v50);
  int16x8_t v52 = vaddq_s16(v45, v42);
  int16x8_t v53 = vsubq_s16(vaddq_s16(v42, v42), v52);
  int32x4_t v54 = (int32x4_t)vzip1q_s16(v46, v48);
  int32x4_t v55 = (int32x4_t)vzip2q_s16(v46, v48);
  int32x4_t v56 = (int32x4_t)vzip1q_s16(v50, v52);
  int32x4_t v57 = (int32x4_t)vzip2q_s16(v50, v52);
  int32x4_t v58 = (int32x4_t)vzip1q_s16(v53, v51);
  int32x4_t v59 = (int32x4_t)vzip2q_s16(v53, v51);
  int32x4_t v60 = (int32x4_t)vzip1q_s16(v49, v47);
  int32x4_t v61 = (int32x4_t)vzip2q_s16(v49, v47);
  int64x2_t v62 = (int64x2_t)vzip1q_s32(v54, v56);
  int64x2_t v63 = (int64x2_t)vzip2q_s32(v54, v56);
  int64x2_t v64 = (int64x2_t)vzip1q_s32(v55, v57);
  int64x2_t v65 = (int64x2_t)vzip2q_s32(v55, v57);
  int64x2_t v66 = (int64x2_t)vzip1q_s32(v58, v60);
  int64x2_t v67 = (int64x2_t)vzip2q_s32(v58, v60);
  int64x2_t v68 = (int64x2_t)vzip1q_s32(v59, v61);
  int16x8_t v69 = (int16x8_t)vzip2q_s32(v59, v61);
  int16x8_t v70 = (int16x8_t)vzip1q_s64(v62, v66);
  int16x8_t v71 = (int16x8_t)vzip2q_s64(v62, v66);
  int16x8_t v72 = (int16x8_t)vzip1q_s64(v64, v68);
  int16x8_t v73 = (int16x8_t)vzip2q_s64(v64, v68);
  int16x8_t v74 = (int16x8_t)vzip1q_s64(v63, v67);
  int16x8_t v75 = (int16x8_t)vzip2q_s64(v63, v67);
  int16x8_t v76 = (int16x8_t)vzip1q_s64(v65, (int64x2_t)v69);
  int16x8_t v77 = (int16x8_t)vzip2q_s64(v65, (int64x2_t)v69);
  v69.i64[0] = 0x20002000200020;
  v69.i64[1] = 0x20002000200020;
  int16x8_t v78 = vaddq_s16(v70, v69);
  int16x8_t v79 = vaddq_s16(v78, v72);
  int16x8_t v80 = vsubq_s16(vaddq_s16(v78, v78), v79);
  int16x8_t v81 = vsubq_s16(vshlq_s16(v74, v20), v76);
  int16x8_t v82 = vaddq_s16(vshlq_s16(v76, v20), v74);
  int16x8_t v83 = vaddq_s16(vaddq_s16(vshlq_s16(v71, v20), vaddq_s16(v71, v75)), v73);
  int16x8_t v84 = vsubq_s16(vaddq_s16(vshlq_s16(v73, v20), vaddq_s16(v73, v77)), v71);
  int16x8_t v85 = vsubq_s16(vaddq_s16(v77, v71), vaddq_s16(vshlq_s16(v75, v20), v75));
  int16x8_t v86 = vsubq_s16(v73, vaddq_s16(vshlq_s16(v77, v20), vaddq_s16(v77, v75)));
  int16x8_t v87 = vaddq_s16(v82, v79);
  int16x8_t v88 = vsubq_s16(vaddq_s16(v79, v79), v87);
  int16x8_t v89 = vaddq_s16(v80, v81);
  int16x8_t v90 = vsubq_s16(vaddq_s16(v80, v80), v89);
  int16x8_t v91 = vaddq_s16(v86, vshlq_s16(v83, v26));
  int16x8_t v92 = vaddq_s16(v85, vshlq_s16(v84, v26));
  int16x8_t v93 = vaddq_s16(vsubq_s16(v83, vshlq_s16(v86, v26)), v87);
  int16x8_t v94 = vsubq_s16(vaddq_s16(v87, v87), v93);
  int16x8_t v95 = vaddq_s16(vsubq_s16(vshlq_s16(v85, v26), v84), v89);
  int16x8_t v96 = vaddq_s16(v92, v90);
  int16x8_t v97 = vaddq_s16(v91, v88);
  v92.i64[0] = 0x5000500050005;
  v92.i64[1] = 0x5000500050005;
  *a2 = vshlq_s16(v93, v92);
  a2[1] = vshlq_s16(v95, v92);
  a2[2] = vshlq_s16(v96, v92);
  a2[3] = vshlq_s16(v97, v92);
  a2[4] = vshlq_s16(vsubq_s16(vaddq_s16(v88, v88), v97), v92);
  a2[5] = vshlq_s16(vsubq_s16(vaddq_s16(v90, v90), v96), v92);
  int16x8_t result = vshlq_s16(vsubq_s16(vaddq_s16(v89, v89), v95), v92);
  a2[6] = result;
  a2[7] = vshlq_s16(v94, v92);
  return result;
}

int32x4_t sub_2219F1F10(uint64_t a1, float *a2, int a3, int a4, unsigned __int16 a5, unsigned __int16 a6, unsigned __int16 a7, uint16x8_t a8)
{
  int64x2_t v8 = *(int64x2_t *)(a1 + 16);
  v9.i64[0] = 0xFFFF00000000;
  v9.i64[1] = 0xFFFF00000000;
  int64x2_t v10 = (int64x2_t)vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, vandq_s8(*(int8x16_t *)a1, v9), 0xCuLL), vandq_s8(*(int8x16_t *)a1, (int8x16_t)xmmword_221A37BD0)), vextq_s8(vandq_s8(*(int8x16_t *)a1, (int8x16_t)xmmword_221A37BE0), (int8x16_t)0, 2uLL));
  int16x8_t v11 = (int16x8_t)vzip1q_s64(v10, v8);
  int16x8_t v12 = (int16x8_t)vzip2q_s64(v10, v8);
  if (!a4)
  {
    if ((a8.i8[0] & 3) != 0)
    {
      int32x4_t v25 = (int32x4_t)xmmword_221A37C40;
    }
    else
    {
      v30.i64[0] = 0x1000100010001;
      v30.i64[1] = 0x1000100010001;
      a8 = vshlq_u16(a8, v30);
      int32x4_t v25 = 0uLL;
    }
    int16x8_t v31 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v11.i8, *(int16x4_t *)a8.i8), (int16x8_t)vmull_high_s16(v11, (int16x8_t)a8));
    int16x8_t v32 = vmulq_s16((int16x8_t)a8, v11);
    int32x4_t v18 = (int32x4_t)vzip2q_s16(v32, v31);
    int32x4_t v19 = vaddq_s32(v25, (int32x4_t)vzip1q_s16(v32, v31));
    int16x8_t v28 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)a8.i8), (int16x8_t)vmull_high_s16(v12, (int16x8_t)a8));
    int16x8_t v29 = vmulq_s16((int16x8_t)a8, v12);
    goto LABEL_9;
  }
  if (!a3)
  {
    v25.i32[0] = a6;
    int16x8_t v26 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v11.i8, *(int16x4_t *)a8.i8), (int16x8_t)vmull_high_s16(v11, (int16x8_t)a8));
    int16x8_t v27 = vmulq_s16(v11, (int16x8_t)a8);
    int32x4_t v18 = (int32x4_t)vzip2q_s16(v27, v26);
    int32x4_t v19 = vaddq_s32((int32x4_t)a7, (int32x4_t)vzip1q_s16(v27, v26));
    int16x8_t v28 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)a8.i8), (int16x8_t)vmull_high_s16(v12, (int16x8_t)a8));
    int16x8_t v29 = vmulq_s16(v12, (int16x8_t)a8);
LABEL_9:
    int32x4_t v23 = (int32x4_t)vzip2q_s16(v29, v28);
    int32x4_t v24 = (int32x4_t)vzip1q_s16(v29, v28);
    goto LABEL_10;
  }
  int16x8_t v13 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v11.i8, *(int16x4_t *)a8.i8), (int16x8_t)vmull_high_s16(v11, (int16x8_t)a8));
  int16x8_t v14 = vmulq_s16(v11, (int16x8_t)a8);
  uint32x4_t v15 = (uint32x4_t)vzip2q_s16(v14, v13);
  uint32x4_t v16 = (uint32x4_t)vdupq_n_s32(a5);
  uint32x4_t v17 = (uint32x4_t)vzip1q_s16(v14, v13);
  int32x4_t v18 = (int32x4_t)vshlq_u32(v15, v16);
  int32x4_t v19 = (int32x4_t)vshlq_u32(v17, v16);
  int16x8_t v20 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)a8.i8), (int16x8_t)vmull_high_s16(v12, (int16x8_t)a8));
  int16x8_t v21 = vmulq_s16(v12, (int16x8_t)a8);
  uint32x4_t v22 = (uint32x4_t)vzip2q_s16(v21, v20);
  int32x4_t v25 = (int32x4_t)vzip1q_s16(v21, v20);
  int32x4_t v23 = (int32x4_t)vshlq_u32(v22, v16);
  int32x4_t v24 = (int32x4_t)vshlq_u32((uint32x4_t)v25, v16);
  v25.i32[0] = 0;
LABEL_10:
  int32x4_t v33 = vaddq_s32(v19, v24);
  int32x4_t v34 = vaddq_s32(v18, v23);
  int32x4_t v35 = vsubq_s32(v19, v24);
  int32x4_t v36 = vsubq_s32(v18, v23);
  int32x4_t v37 = vaddq_s32(v33, v34);
  int32x4_t v38 = vsubq_s32(v33, v34);
  int32x4_t v39 = vsubq_s32(v35, v36);
  int32x4_t v40 = vaddq_s32(v35, v36);
  int32x4_t v41 = vzip1q_s32(v37, v39);
  int32x4_t v42 = vzip2q_s32(v37, v39);
  int32x4_t v43 = vzip1q_s32(v38, v40);
  int32x4_t v44 = vzip2q_s32(v38, v40);
  int32x4_t v45 = vzip1q_s32(v41, v43);
  int32x4_t v46 = vzip2q_s32(v41, v43);
  int32x4_t v47 = vzip1q_s32(v42, v44);
  int32x4_t v48 = vzip2q_s32(v42, v44);
  int32x4_t v49 = vaddq_s32(v45, v46);
  int32x4_t v50 = vsubq_s32(v45, v46);
  int32x4_t v51 = vaddq_s32(v47, v48);
  int32x4_t v52 = vsubq_s32(v47, v48);
  int32x4_t v53 = vaddq_s32(v49, v51);
  int32x4_t v54 = vdupq_n_s32(-v25.i32[0]);
  float32x2x2_t v55 = (float32x2x2_t)vshlq_s32(vsubq_s32(v49, v51), v54);
  int32x4_t v56 = vshlq_s32(vsubq_s32(v50, v52), v54);
  int32x4_t result = vshlq_s32(vaddq_s32(v50, v52), v54);
  *(int16x4_t *)v54.i8 = vqmovn_s32(vshlq_s32(v53, v54));
  *(int16x4_t *)v50.i8 = vqmovn_s32((int32x4_t)v55);
  v55.val[0] = (float32x2_t)vqmovn_s32(v56);
  *(int16x4_t *)v56.i8 = vqmovn_s32(result);
  vst2_f32(a2, *(float32x2x2_t *)((char *)&v50 - 8));
  int32x4_t v58 = a2 + 4;
  vst2_f32(v58, v55);
  return result;
}

int16x8_t sub_2219F20E0(uint64_t a1, uint64_t a2, int16x8_t *a3, int a4, unsigned int a5, int a6, unsigned int a7, int a8, int16x8_t a9, __n128 a10, int16x8_t a11)
{
  int16x8_t v11 = *(int16x8_t *)(a1 + 16);
  int16x8_t v12 = *(int16x8_t *)(a2 + 16);
  v13.i64[0] = 0xFFFF00000000;
  v13.i64[1] = 0xFFFF00000000;
  int16x8_t v14 = (int16x8_t)vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, vandq_s8(*(int8x16_t *)a1, v13), 0xCuLL), vandq_s8(*(int8x16_t *)a1, (int8x16_t)xmmword_221A37BD0)), vextq_s8(vandq_s8(*(int8x16_t *)a1, (int8x16_t)xmmword_221A37BE0), (int8x16_t)0, 2uLL));
  int16x8_t v15 = (int16x8_t)vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, vandq_s8(*(int8x16_t *)a2, v13), 0xCuLL), vandq_s8(*(int8x16_t *)a2, (int8x16_t)xmmword_221A37BD0)), vextq_s8(vandq_s8(*(int8x16_t *)a2, (int8x16_t)xmmword_221A37BE0), (int8x16_t)0, 2uLL));
  if (a8)
  {
    if (a4)
    {
      uint16x8_t v16 = (uint16x8_t)vdupq_n_s16(a5);
      int16x8_t v17 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v14, a11), v16);
      int16x8_t v18 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v11, a11), v16);
      int16x8_t v19 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v15, a11), v16);
      int64x2_t v20 = (int64x2_t)vshlq_u16((uint16x8_t)vmulq_s16(v12, a11), v16);
    }
    else
    {
      int32x4_t v23 = (int32x4_t)vqtbl1q_s8((int8x16_t)a7, (int8x16_t)xmmword_221A36310);
      int16x8_t v24 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v14.i8, *(int16x4_t *)a11.i8), (int16x8_t)vmull_high_s16(v14, a11));
      int16x8_t v25 = vmulq_s16(v14, a11);
      int32x4_t v26 = (int32x4_t)vzip2q_s16(v25, v24);
      int32x4_t v27 = (int32x4_t)vzip1q_s16(v25, v24);
      int32x4_t v28 = vaddq_s32(v26, v23);
      int32x4_t v29 = vdupq_n_s32(-a6);
      int16x8_t v17 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32(v27, v23), v29)), vshlq_s32(v28, v29));
      int16x8_t v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v11.i8, *(int16x4_t *)a11.i8), (int16x8_t)vmull_high_s16(v11, a11));
      int16x8_t v31 = vmulq_s16(v11, a11);
      int16x8_t v18 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v31, v30), v23), v29)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v31, v30), v23), v29));
      int16x8_t v32 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v15.i8, *(int16x4_t *)a11.i8), (int16x8_t)vmull_high_s16(v15, a11));
      int16x8_t v33 = vmulq_s16(v15, a11);
      int16x8_t v19 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v33, v32), v23), v29)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v33, v32), v23), v29));
      int16x8_t v34 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)a11.i8), (int16x8_t)vmull_high_s16(v12, a11));
      int16x8_t v35 = vmulq_s16(v12, a11);
      int64x2_t v20 = (int64x2_t)vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v35, v34), v23), v29)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v35, v34), v23), v29));
    }
    int64x2_t v21 = (int64x2_t)vaddq_s16(v17, a9);
    int64x2_t v22 = (int64x2_t)vaddq_s16(v19, a9);
  }
  else
  {
    int64x2_t v21 = (int64x2_t)vmlaq_s16(a9, v14, a11);
    int16x8_t v18 = vmulq_s16(v11, a11);
    int64x2_t v22 = (int64x2_t)vmlaq_s16(a9, v15, a11);
    int64x2_t v20 = (int64x2_t)vmulq_s16(v12, a11);
  }
  int64x2_t v36 = v21;
  v36.i16[0] = a9.i16[0];
  int16x8_t v37 = (int16x8_t)vzip2q_s64(v21, v22);
  v22.i16[0] = a10.n128_u16[0];
  int16x8_t v38 = (int16x8_t)vzip1q_s64(v36, v22);
  int16x8_t v39 = (int16x8_t)vzip2q_s64((int64x2_t)v18, v20);
  v18.i64[1] = v20.i64[0];
  int16x8_t v40 = vaddq_s16(v38, v18);
  v41.i64[0] = -1;
  v41.i64[1] = -1;
  int16x8_t v42 = vsubq_s16(v38, v18);
  int16x8_t v43 = vshlq_s16(v39, v41);
  int16x8_t v44 = vsubq_s16(vshlq_s16(v37, v41), v39);
  int16x8_t v45 = vaddq_s16(v43, v37);
  int16x8_t v46 = vaddq_s16(v40, v45);
  int16x8_t v47 = vaddq_s16(v42, v44);
  int16x8_t v48 = vsubq_s16(v42, v44);
  int16x8_t v49 = vsubq_s16(v40, v45);
  int16x8_t v50 = vzip1q_s16(v46, v48);
  int16x8_t v51 = vzip2q_s16(v46, v48);
  int16x8_t v52 = vzip1q_s16(v47, v49);
  int16x8_t v53 = vzip2q_s16(v47, v49);
  v66.val[1] = (int8x16_t)vdupq_lane_s64(v51.i64[0], 0);
  v66.val[0] = (int8x16_t)vdupq_lane_s64(v53.i64[0], 0);
  int16x8_t v54 = vzip1q_s16(v50, v52);
  v66.val[0] = vqtbl2q_s8(v66, (int8x16_t)xmmword_221A37BC0);
  v66.val[1] = (int8x16_t)vzip2q_s64((int64x2_t)v54, (int64x2_t)v66.val[0]);
  v67.val[1] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v50, 1);
  v67.val[0] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v52, 1);
  int16x8_t v55 = (int16x8_t)vqtbl2q_s8(v67, (int8x16_t)xmmword_221A36990);
  int64x2_t v56 = (int64x2_t)vzip2q_s16(v51, v53);
  int16x8_t v57 = (int16x8_t)vzip2q_s64((int64x2_t)v55, v56);
  v54.i64[1] = v66.val[0].i64[0];
  v55.i64[1] = v56.i64[0];
  int16x8_t v58 = vaddq_s16(v54, v55);
  int16x8_t v59 = vsubq_s16(v54, v55);
  int16x8_t v60 = vshlq_s16(v57, v41);
  int16x8_t v61 = vsubq_s16(vshlq_s16((int16x8_t)v66.val[1], v41), v57);
  int16x8_t v62 = vaddq_s16(v60, (int16x8_t)v66.val[1]);
  int16x8_t v63 = vaddq_s16(v59, v61);
  int16x8_t v64 = vsubq_s16(v59, v61);
  v59.i64[0] = 0x5000500050005;
  v59.i64[1] = 0x5000500050005;
  *a3 = vshlq_s16(vaddq_s16(v58, v62), v59);
  a3[2] = vshlq_s16(v63, v59);
  int16x8_t result = vshlq_s16(vsubq_s16(v58, v62), v59);
  a3[4] = vshlq_s16(v64, v59);
  a3[6] = result;
  return result;
}

int16x8_t sub_2219F2350(int8x16_t *a1, int8x16_t *a2, int16x8_t *a3, int a4, unsigned int a5, unsigned __int16 a6, unsigned __int16 a7, int16x8_t a8, int16x8_t a9)
{
  int8x16_t v9 = a1[1];
  int8x16_t v10 = a2[1];
  v67.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(*a1, (int8x16_t)xmmword_221A37C60), (int8x16_t)xmmword_221A37C70), (int8x16_t)xmmword_221A37C80);
  v67.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v9, (int8x16_t)xmmword_221A37C90), (int8x16_t)xmmword_221A37CA0), (int8x16_t)xmmword_221A369E0);
  int16x8_t v11 = (int16x8_t)vqtbl2q_s8(v67, (int8x16_t)xmmword_221A37CB0);
  v68.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(*a1, (int8x16_t)xmmword_221A37CC0), (int8x16_t)xmmword_221A37CD0), (int8x16_t)xmmword_221A362D0);
  v68.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v9, (int8x16_t)xmmword_221A37CE0), (int8x16_t)xmmword_221A36860), (int8x16_t)xmmword_221A369D0);
  int16x8_t v12 = (int16x8_t)vqtbl2q_s8(v68, (int8x16_t)xmmword_221A37CF0);
  v66.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(*a2, (int8x16_t)xmmword_221A37C60), (int8x16_t)xmmword_221A37C70), (int8x16_t)xmmword_221A37C80);
  v66.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v10, (int8x16_t)xmmword_221A37C90), (int8x16_t)xmmword_221A37CA0), (int8x16_t)xmmword_221A369E0);
  int16x8_t v13 = (int16x8_t)vqtbl2q_s8(v66, (int8x16_t)xmmword_221A37CB0);
  v66.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(*a2, (int8x16_t)xmmword_221A37CC0), (int8x16_t)xmmword_221A37CD0), (int8x16_t)xmmword_221A362D0);
  v66.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v10, (int8x16_t)xmmword_221A37CE0), (int8x16_t)xmmword_221A36860), (int8x16_t)xmmword_221A369D0);
  int16x8_t v14 = (int16x8_t)vqtbl2q_s8(v66, (int8x16_t)xmmword_221A37CF0);
  if (a4)
  {
    uint16x8_t v15 = (uint16x8_t)vdupq_n_s16(a5);
    int16x8_t v16 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v11, a9), v15);
    int16x8_t v17 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v12, a9), v15);
    int16x8_t v18 = (int16x8_t)vshlq_u16((uint16x8_t)vmulq_s16(v13, a9), v15);
    int64x2_t v19 = (int64x2_t)vshlq_u16((uint16x8_t)vmulq_s16(v14, a9), v15);
  }
  else
  {
    int32x4_t v20 = (int32x4_t)vqtbl1q_s8((int8x16_t)a7, (int8x16_t)xmmword_221A36310);
    int16x8_t v21 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v11.i8, *(int16x4_t *)a9.i8), (int16x8_t)vmull_high_s16(v11, a9));
    int16x8_t v22 = vmulq_s16(v11, a9);
    int32x4_t v23 = (int32x4_t)vzip2q_s16(v22, v21);
    int32x4_t v24 = (int32x4_t)vzip1q_s16(v22, v21);
    int32x4_t v25 = vaddq_s32(v23, v20);
    int32x4_t v26 = vdupq_n_s32(-a6);
    int16x8_t v16 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32(v24, v20), v26)), vshlq_s32(v25, v26));
    int16x8_t v27 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)a9.i8), (int16x8_t)vmull_high_s16(v12, a9));
    int16x8_t v28 = vmulq_s16(v12, a9);
    int16x8_t v17 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v28, v27), v20), v26)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v28, v27), v20), v26));
    int16x8_t v29 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v13.i8, *(int16x4_t *)a9.i8), (int16x8_t)vmull_high_s16(v13, a9));
    int16x8_t v30 = vmulq_s16(v13, a9);
    int16x8_t v18 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v30, v29), v20), v26)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v30, v29), v20), v26));
    int16x8_t v31 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v14.i8, *(int16x4_t *)a9.i8), (int16x8_t)vmull_high_s16(v14, a9));
    int16x8_t v32 = vmulq_s16(v14, a9);
    int64x2_t v19 = (int64x2_t)vqmovn_high_s32(vqmovn_s32(vshlq_s32(vaddq_s32((int32x4_t)vzip1q_s16(v32, v31), v20), v26)), vshlq_s32(vaddq_s32((int32x4_t)vzip2q_s16(v32, v31), v20), v26));
  }
  int16x8_t v33 = vaddq_s16(v16, a8);
  int64x2_t v34 = (int64x2_t)vaddq_s16(v18, a8);
  int16x8_t v35 = (int16x8_t)vzip2q_s64((int64x2_t)v33, v34);
  int16x8_t v36 = (int16x8_t)vzip2q_s64((int64x2_t)v17, v19);
  v33.i64[1] = v34.i64[0];
  v17.i64[1] = v19.i64[0];
  int16x8_t v37 = vaddq_s16(v33, v17);
  v38.i64[0] = -1;
  v38.i64[1] = -1;
  int16x8_t v39 = vsubq_s16(v33, v17);
  int16x8_t v40 = vshlq_s16(v36, v38);
  int16x8_t v41 = vsubq_s16(vshlq_s16(v35, v38), v36);
  int16x8_t v42 = vaddq_s16(v40, v35);
  int16x8_t v43 = vaddq_s16(v37, v42);
  int16x8_t v44 = vaddq_s16(v39, v41);
  int16x8_t v45 = vsubq_s16(v39, v41);
  int16x8_t v46 = vsubq_s16(v37, v42);
  int16x8_t v47 = vzip1q_s16(v43, v45);
  int16x8_t v48 = vzip2q_s16(v43, v45);
  int16x8_t v49 = vzip1q_s16(v44, v46);
  int16x8_t v50 = vzip2q_s16(v44, v46);
  v64.val[1] = (int8x16_t)vdupq_lane_s64(v48.i64[0], 0);
  v64.val[0] = (int8x16_t)vdupq_lane_s64(v50.i64[0], 0);
  int16x8_t v51 = vzip1q_s16(v47, v49);
  v64.val[0] = vqtbl2q_s8(v64, (int8x16_t)xmmword_221A37BC0);
  v64.val[1] = (int8x16_t)vzip2q_s64((int64x2_t)v51, (int64x2_t)v64.val[0]);
  v65.val[1] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v47, 1);
  v65.val[0] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v49, 1);
  int16x8_t v52 = (int16x8_t)vqtbl2q_s8(v65, (int8x16_t)xmmword_221A36990);
  int64x2_t v53 = (int64x2_t)vzip2q_s16(v48, v50);
  int16x8_t v54 = (int16x8_t)vzip2q_s64((int64x2_t)v52, v53);
  v51.i64[1] = v64.val[0].i64[0];
  v52.i64[1] = v53.i64[0];
  int16x8_t v55 = vaddq_s16(v51, v52);
  int16x8_t v56 = vshlq_s16((int16x8_t)v64.val[1], v38);
  int16x8_t v57 = vsubq_s16(v51, v52);
  int16x8_t v58 = vshlq_s16(v54, v38);
  int16x8_t v59 = vsubq_s16(v56, v54);
  int16x8_t v60 = vaddq_s16(v58, (int16x8_t)v64.val[1]);
  int16x8_t v61 = vaddq_s16(v55, v60);
  int16x8_t v62 = vsubq_s16(v55, v60);
  v60.i64[0] = 0x5000500050005;
  v60.i64[1] = 0x5000500050005;
  *a3 = vshlq_s16(v61, v60);
  a3[2] = vshlq_s16(vaddq_s16(v57, v59), v60);
  int16x8_t result = vshlq_s16(v62, v60);
  a3[4] = vshlq_s16(vsubq_s16(v57, v59), v60);
  a3[6] = result;
  return result;
}

int16x8_t sub_2219F262C(_OWORD *a1, _OWORD *a2, int16x8_t *a3, int a4, int16x8_t a5, int16x8_t a6)
{
  int8x16_t v7 = *(int8x16_t *)a1;
  int16x8_t v6 = *((int16x8_t *)a1 + 1);
  int8x16_t v9 = *(int8x16_t *)a2;
  int16x8_t v8 = *((int16x8_t *)a2 + 1);
  if (a4)
  {
    v10.i64[0] = 0xFFFF00000000;
    v10.i64[1] = 0xFFFF00000000;
    int16x8_t v11 = (int16x8_t)vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, vandq_s8(v7, v10), 0xCuLL), vandq_s8(v7, (int8x16_t)xmmword_221A37BD0)), vextq_s8(vandq_s8(v7, (int8x16_t)xmmword_221A37BE0), (int8x16_t)0, 2uLL));
    int16x8_t v12 = (int16x8_t)vorrq_s8(vorrq_s8(vextq_s8((int8x16_t)0, vandq_s8(v9, v10), 0xCuLL), vandq_s8(v9, (int8x16_t)xmmword_221A37BD0)), vextq_s8(vandq_s8(v9, (int8x16_t)xmmword_221A37BE0), (int8x16_t)0, 2uLL));
  }
  else
  {
    v49.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v7, (int8x16_t)xmmword_221A37C60), (int8x16_t)xmmword_221A37C70), (int8x16_t)xmmword_221A37C80);
    v49.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)v6, (int8x16_t)xmmword_221A37C90), (int8x16_t)xmmword_221A37CA0), (int8x16_t)xmmword_221A369E0);
    int16x8_t v11 = (int16x8_t)vqtbl2q_s8(v49, (int8x16_t)xmmword_221A37CB0);
    v50.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v7, (int8x16_t)xmmword_221A37CC0), (int8x16_t)xmmword_221A37CD0), (int8x16_t)xmmword_221A362D0);
    v50.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)v6, (int8x16_t)xmmword_221A37CE0), (int8x16_t)xmmword_221A36860), (int8x16_t)xmmword_221A369D0);
    int16x8_t v6 = (int16x8_t)vqtbl2q_s8(v50, (int8x16_t)xmmword_221A37CF0);
    v46.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v9, (int8x16_t)xmmword_221A37C60), (int8x16_t)xmmword_221A37C70), (int8x16_t)xmmword_221A37C80);
    v46.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_221A37C90), (int8x16_t)xmmword_221A37CA0), (int8x16_t)xmmword_221A369E0);
    int16x8_t v12 = (int16x8_t)vqtbl2q_s8(v46, (int8x16_t)xmmword_221A37CB0);
    v47.val[0] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8(v9, (int8x16_t)xmmword_221A37CC0), (int8x16_t)xmmword_221A37CD0), (int8x16_t)xmmword_221A362D0);
    v47.val[1] = vqtbl1q_s8(vqtbl1q_s8(vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_221A37CE0), (int8x16_t)xmmword_221A36860), (int8x16_t)xmmword_221A369D0);
    int16x8_t v8 = (int16x8_t)vqtbl2q_s8(v47, (int8x16_t)xmmword_221A37CF0);
  }
  int16x8_t v13 = vmlaq_s16(a5, v11, a6);
  int16x8_t v14 = vmulq_s16(v6, a6);
  int64x2_t v15 = (int64x2_t)vmlaq_s16(a5, v12, a6);
  int16x8_t v16 = vmulq_s16(v8, a6);
  int16x8_t v17 = (int16x8_t)vzip2q_s64((int64x2_t)v13, v15);
  int16x8_t v18 = (int16x8_t)vzip2q_s64((int64x2_t)v14, (int64x2_t)v16);
  v13.i64[1] = v15.i64[0];
  v14.i64[1] = v16.i64[0];
  int16x8_t v19 = vaddq_s16(v13, v14);
  v16.i64[0] = -1;
  v16.i64[1] = -1;
  int16x8_t v20 = vsubq_s16(v13, v14);
  int16x8_t v21 = vshlq_s16(v18, v16);
  int16x8_t v22 = vsubq_s16(vshlq_s16(v17, v16), v18);
  int16x8_t v23 = vaddq_s16(v21, v17);
  int16x8_t v24 = vaddq_s16(v19, v23);
  int16x8_t v25 = vaddq_s16(v20, v22);
  int16x8_t v26 = vsubq_s16(v20, v22);
  int16x8_t v27 = vsubq_s16(v19, v23);
  int16x8_t v28 = vzip1q_s16(v24, v26);
  int16x8_t v29 = vzip2q_s16(v24, v26);
  int16x8_t v30 = vzip1q_s16(v25, v27);
  int16x8_t v31 = vzip2q_s16(v25, v27);
  v45.val[1] = (int8x16_t)vdupq_lane_s64(v29.i64[0], 0);
  v45.val[0] = (int8x16_t)vdupq_lane_s64(v31.i64[0], 0);
  int16x8_t v32 = vzip1q_s16(v28, v30);
  v45.val[0] = vqtbl2q_s8(v45, (int8x16_t)xmmword_221A37BC0);
  v45.val[1] = (int8x16_t)vzip2q_s64((int64x2_t)v32, (int64x2_t)v45.val[0]);
  v48.val[1] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v28, 1);
  v48.val[0] = (int8x16_t)vdupq_laneq_s64((int64x2_t)v30, 1);
  int16x8_t v33 = (int16x8_t)vqtbl2q_s8(v48, (int8x16_t)xmmword_221A36990);
  int64x2_t v34 = (int64x2_t)vzip2q_s16(v29, v31);
  int16x8_t v35 = (int16x8_t)vzip2q_s64((int64x2_t)v33, v34);
  v32.i64[1] = v45.val[0].i64[0];
  v33.i64[1] = v34.i64[0];
  int16x8_t v36 = vaddq_s16(v32, v33);
  int16x8_t v37 = vshlq_s16((int16x8_t)v45.val[1], v16);
  int16x8_t v38 = vsubq_s16(v32, v33);
  int16x8_t v39 = vshlq_s16(v35, v16);
  int16x8_t v40 = vsubq_s16(v37, v35);
  int16x8_t v41 = vaddq_s16(v39, (int16x8_t)v45.val[1]);
  int16x8_t v42 = vaddq_s16(v36, v41);
  int16x8_t v43 = vsubq_s16(v36, v41);
  v41.i64[0] = 0x5000500050005;
  v41.i64[1] = 0x5000500050005;
  *a3 = vshlq_s16(v42, v41);
  a3[2] = vshlq_s16(vaddq_s16(v38, v40), v41);
  int16x8_t result = vshlq_s16(v43, v41);
  a3[4] = vshlq_s16(vsubq_s16(v38, v40), v41);
  a3[6] = result;
  return result;
}

uint64_t sub_2219F285C(__int16 *a1, __int16 *a2, __int16 *a3, __int16 *a4, unsigned __int16 *a5, unsigned __int16 *a6, _WORD *a7, int a8, int a9, char a10, char a11, char a12, unsigned __int16 a13, int a14)
{
  int v14 = (unsigned __int16)a2[13];
  if (a8) {
    int v15 = (unsigned __int16)a2[14];
  }
  else {
    int v15 = (unsigned __int16)a2[13];
  }
  if (!a8) {
    int v14 = (unsigned __int16)a2[12];
  }
  int v249 = v14;
  if (a8) {
    int v16 = (unsigned __int16)a2[12];
  }
  else {
    int v16 = (unsigned __int16)a2[6];
  }
  int v238 = v16;
  if (a8) {
    __int16 v17 = a2[11];
  }
  else {
    __int16 v17 = a2[14];
  }
  __int16 v229 = v17;
  if (a8) {
    __int16 v18 = a2[10];
  }
  else {
    __int16 v18 = a2[11];
  }
  __int16 v221 = v18;
  if (a8) {
    __int16 v19 = a2[7];
  }
  else {
    __int16 v19 = a2[10];
  }
  int v255 = v15;
  __int16 v258 = v19;
  if (a8) {
    int v20 = (unsigned __int16)a2[9];
  }
  else {
    int v20 = (unsigned __int16)a2[7];
  }
  if (a8) {
    int v21 = (unsigned __int16)a2[6];
  }
  else {
    int v21 = (unsigned __int16)a2[8];
  }
  int v252 = v21;
  if (a8) {
    __int16 v22 = a2[8];
  }
  else {
    __int16 v22 = a2[5];
  }
  int v223 = v20;
  __int16 v225 = v22;
  if (a8) {
    int v23 = (unsigned __int16)a2[5];
  }
  else {
    int v23 = (unsigned __int16)a2[4];
  }
  if (a8) {
    __int16 v24 = a2[4];
  }
  else {
    __int16 v24 = a2[9];
  }
  if (a8) {
    int v25 = (unsigned __int16)a2[2];
  }
  else {
    int v25 = (unsigned __int16)a2[1];
  }
  int v227 = v25;
  if (a8) {
    int v26 = (unsigned __int16)a2[1];
  }
  else {
    int v26 = (unsigned __int16)a2[2];
  }
  int v209 = v26;
  if (a8) {
    int v27 = (unsigned __int16)a1[14];
  }
  else {
    int v27 = (unsigned __int16)a1[13];
  }
  int v241 = v23;
  int v243 = v27;
  if (a8) {
    int v28 = (unsigned __int16)a1[13];
  }
  else {
    int v28 = (unsigned __int16)a1[12];
  }
  if (a8) {
    int v29 = (unsigned __int16)a1[12];
  }
  else {
    int v29 = (unsigned __int16)a1[6];
  }
  int v215 = v29;
  __int16 v218 = v24;
  if (a8) {
    __int16 v30 = a1[11];
  }
  else {
    __int16 v30 = a1[14];
  }
  __int16 v212 = v30;
  if (a8) {
    __int16 v31 = a1[10];
  }
  else {
    __int16 v31 = a1[11];
  }
  if (a8) {
    int v32 = (unsigned __int16)a1[7];
  }
  else {
    int v32 = (unsigned __int16)a1[10];
  }
  int v246 = v32;
  if (a8) {
    int v33 = (unsigned __int16)a1[9];
  }
  else {
    int v33 = (unsigned __int16)a1[7];
  }
  if (a8) {
    int v34 = (unsigned __int16)a1[6];
  }
  else {
    int v34 = (unsigned __int16)a1[8];
  }
  int v232 = v28;
  int v235 = v34;
  if (a8) {
    __int16 v35 = a1[8];
  }
  else {
    __int16 v35 = a1[5];
  }
  if (a8) {
    int v36 = (unsigned __int16)a1[5];
  }
  else {
    int v36 = (unsigned __int16)a1[4];
  }
  if (a8) {
    __int16 v37 = a1[4];
  }
  else {
    __int16 v37 = a1[9];
  }
  if (a8) {
    int v38 = (unsigned __int16)a1[2];
  }
  else {
    int v38 = (unsigned __int16)a1[1];
  }
  if (a8) {
    int v39 = (unsigned __int16)a1[1];
  }
  else {
    int v39 = (unsigned __int16)a1[2];
  }
  __int16 v40 = *a3;
  int v41 = (unsigned __int16)a3[1];
  __int16 v42 = a3[2];
  __int16 v43 = a3[3];
  int v283 = (unsigned __int16)a3[4];
  int v285 = (unsigned __int16)a3[5];
  int v44 = (unsigned __int16)a3[6];
  int v45 = (unsigned __int16)a3[7];
  __int16 v261 = *a4;
  __int16 v271 = a4[3];
  int v275 = (unsigned __int16)a4[4];
  __int16 v277 = v43;
  int v46 = (unsigned __int16)a4[6];
  __int16 v47 = a4[7];
  int v286 = *a5;
  int v288 = a5[1];
  int v290 = a5[2];
  int v292 = a5[3];
  int v295 = (unsigned __int16)a4[1];
  int v265 = a5[4];
  __int16 v267 = a4[2];
  int v269 = a5[5];
  int v273 = a5[6];
  int v279 = a5[7];
  int v281 = (unsigned __int16)a4[5];
  int v48 = *a6;
  int v49 = a6[1];
  int v50 = a6[2];
  int v51 = a6[3];
  int v52 = a6[4];
  int v53 = a6[5];
  int v54 = a6[6];
  int v55 = a6[7];
  int v56 = *a1;
  int v57 = a1[3];
  int v58 = a1[15];
  int v59 = *a2;
  int v60 = a2[3];
  int v61 = a2[15];
  __int16 v300 = v47;
  int v298 = v46;
  __int16 v263 = v40;
  if (a14)
  {
    int v183 = v49;
    int v184 = v55;
    int v185 = v60;
    __int16 v186 = v33;
    int v187 = v50;
    __int16 v188 = v31;
    int v189 = v41;
    int v194 = v51;
    __int16 v196 = v37;
    int v198 = v52;
    __int16 v200 = v38;
    int v202 = v53;
    int v204 = v54;
    __int16 v190 = v42;
    int v191 = v44;
    int v192 = v45;
    int v62 = v56 * v48;
    int v63 = v35;
    if (a9)
    {
      int v64 = v62;
      int v65 = v229 * v51;
      int v66 = (__int16)v238 * v52;
      int v67 = (__int16)v232 * v202;
      int v68 = (__int16)v241 * v202;
      int v69 = (__int16)v249 * v202;
      int v70 = (__int16)v243 * v204;
      int v71 = (__int16)v252 * v204;
      int v72 = (__int16)v255 * v204;
      int v73 = v258 * v184;
      int v74 = v64 << a10;
      int v259 = ((__int16)v39 * v49) << a10;
      int v256 = (v57 * v50) << a10;
      int v230 = (v200 * v52) << a10;
      int v250 = ((__int16)v235 * v204) << a10;
      int v236 = ((__int16)v246 * v184) << a10;
      int v239 = ((__int16)v36 * v202) << a10;
      int v201 = (v63 * v48) << a10;
      int v203 = ((__int16)v33 * v49) << a10;
      int v205 = (v37 * v194) << a10;
      int v206 = (v188 * v50) << a10;
      int v247 = (v212 * v194) << a10;
      int v207 = ((__int16)v215 * v52) << a10;
      int v75 = v67 << a10;
      int v253 = (v58 * v184) << a10;
      int v76 = (v59 * v48) << a10;
      int v233 = ((__int16)v209 * v49) << a10;
      int v197 = (v218 * v194) << a10;
      int v199 = (v185 * v50) << a10;
      int v228 = ((__int16)v227 * v52) << a10;
      int v242 = v68 << a10;
      int v244 = v70 << a10;
      int v77 = v71 << a10;
      int v54 = v73 << a10;
      int v224 = ((__int16)v223 * v49) << a10;
      int v226 = (v225 * v48) << a10;
      int v219 = v65 << a10;
      int v222 = (v221 * v50) << a10;
      int v216 = v66 << a10;
      int v78 = v69 << a10;
      int v79 = v72 << a10;
      int v80 = (v61 * v184) << a10;
    }
    else
    {
      int v111 = v225 * v48;
      int v112 = (__int16)v235 * v204 + a13;
      int v113 = v35 * v48 + a13;
      int v114 = v212 * v51 + a13;
      int v115 = (__int16)v215 * v198 + a13;
      int v116 = (__int16)v243 * v204 + a13;
      int v117 = v59 * v48 + a13;
      int v118 = (__int16)v209 * v49 + a13;
      int v119 = v218 * v194 + a13;
      int v120 = (__int16)v227 * v198 + a13;
      int v121 = (__int16)v252 * v204 + a13;
      int v122 = v258 * v55 + a13;
      int v123 = v111 + a13;
      int v220 = v229 * v194 + a13;
      int v217 = (__int16)v238 * v198 + a13;
      int v214 = (__int16)v249 * v53 + a13;
      int v211 = (__int16)v255 * v204 + a13;
      int v74 = (v62 + a13) >> a12;
      int v259 = ((__int16)v39 * v183 + a13) >> a12;
      int v256 = (v57 * v187 + a13) >> a12;
      int v205 = (v196 * v194 + a13) >> a12;
      int v230 = (v200 * v198 + a13) >> a12;
      int v239 = ((__int16)v36 * v53 + a13) >> a12;
      int v250 = v112 >> a12;
      int v236 = ((__int16)v246 * v55 + a13) >> a12;
      int v201 = v113 >> a12;
      int v203 = (v186 * v183 + a13) >> a12;
      int v206 = (v31 * v187 + a13) >> a12;
      int v207 = v115 >> a12;
      int v75 = ((__int16)v232 * v53 + a13) >> a12;
      int v244 = v116 >> a12;
      int v247 = v114 >> a12;
      int v253 = (v58 * v55 + a13) >> a12;
      int v76 = v117 >> a12;
      int v233 = v118 >> a12;
      int v197 = v119 >> a12;
      int v199 = (v185 * v187 + a13) >> a12;
      int v228 = v120 >> a12;
      int v242 = ((__int16)v241 * v53 + a13) >> a12;
      int v77 = v121 >> a12;
      int v54 = v122 >> a12;
      int v224 = ((__int16)v223 * v183 + a13) >> a12;
      int v226 = v123 >> a12;
      int v219 = v220 >> a12;
      int v222 = (v221 * v187 + a13) >> a12;
      int v216 = v217 >> a12;
      int v78 = v214 >> a12;
      int v79 = v211 >> a12;
      int v80 = (v61 * v55 + a13) >> a12;
    }
    int v208 = v78;
    __int16 v210 = v80;
    int v213 = v79;
    __int16 v110 = v40;
    int v109 = v265;
    __int16 v97 = v40 + v74;
    __int16 v195 = v40 + v76;
    int v44 = v191;
    int v45 = v192;
    int v91 = v283;
    int v92 = v285;
    int v102 = v279;
    int v101 = v281;
    int v103 = v275;
    __int16 v89 = v277;
    __int16 v105 = v271;
    int v104 = v273;
    int v107 = v189;
    __int16 v86 = v190;
    __int16 v108 = v267;
    int v106 = v269;
    int v94 = v259;
    __int16 v100 = v261;
    int v99 = v253;
    __int16 v87 = v256;
    __int16 v90 = v247;
    int v98 = v236;
    int v96 = v239;
    int v85 = v233;
  }
  else
  {
    __int16 v193 = v40 + v56 * v48;
    LOWORD(v201) = v35 * v48;
    __int16 v195 = v40 + v59 * v48;
    __int16 v81 = v225 * v48;
    int v82 = v41;
    int v83 = v41 + v39 * v49;
    int v84 = v33 * v49;
    int v85 = v41 + v209 * v49;
    int v224 = v223 * v49;
    LOWORD(v226) = v81;
    __int16 v86 = v42;
    __int16 v87 = v42 + v57 * v50;
    LOWORD(v206) = v31 * v50;
    __int16 v88 = v42 + v60 * v50;
    __int16 v89 = v277;
    int v203 = v84;
    LOWORD(v205) = v277 + v37 * v51;
    __int16 v90 = v212 * v51;
    LOWORD(v197) = v277 + v218 * v51;
    LOWORD(v199) = v88;
    LOWORD(v219) = v229 * v51;
    LOWORD(v222) = v221 * v50;
    int v91 = v283;
    int v92 = v285;
    int v93 = v283 + v38 * v52;
    int v94 = v83;
    int v95 = v215 * v52;
    int v228 = v283 + v227 * v52;
    int v230 = v93;
    int v216 = v238 * v52;
    int v96 = v285 + v36 * v53;
    int v75 = v232 * v53;
    int v207 = v95;
    int v208 = v249 * v53;
    int v250 = v44 + v235 * v54;
    int v242 = v285 + v241 * v53;
    int v244 = v243 * v54;
    __int16 v97 = v193;
    int v77 = v44 + v252 * v54;
    int v213 = v255 * v54;
    int v98 = v45 + v246 * v55;
    int v99 = v58 * v55;
    __int16 v100 = v261;
    LOWORD(v54) = v45 + v258 * v55;
    __int16 v210 = v61 * v55;
    int v102 = v279;
    int v101 = v281;
    int v104 = v273;
    int v103 = v275;
    int v106 = v269;
    __int16 v105 = v271;
    int v107 = v82;
    int v109 = v265;
    __int16 v108 = v267;
    __int16 v110 = v263;
  }
  if (v286) {
    __int16 v97 = v110;
  }
  __int16 v124 = v195;
  if (v286) {
    __int16 v124 = v100;
  }
  __int16 v287 = v124;
  if (v288) {
    int v125 = v107;
  }
  else {
    int v125 = v94;
  }
  int v126 = v295;
  if (!v288) {
    int v126 = v85;
  }
  int v289 = v126;
  if (!v290) {
    __int16 v86 = v87;
  }
  __int16 v127 = v199;
  if (v290) {
    __int16 v127 = v108;
  }
  __int16 v296 = v127;
  if (v292) {
    __int16 v128 = v89;
  }
  else {
    __int16 v128 = v205;
  }
  __int16 v129 = v197;
  if (v292) {
    __int16 v129 = v105;
  }
  __int16 v293 = v129;
  if (v109) {
    int v130 = v91;
  }
  else {
    int v130 = v230;
  }
  if (v109) {
    int v131 = v103;
  }
  else {
    int v131 = v228;
  }
  if (v106) {
    int v132 = v92;
  }
  else {
    int v132 = v96;
  }
  if (v106) {
    int v133 = v101;
  }
  else {
    int v133 = v242;
  }
  if (v104) {
    int v134 = v44;
  }
  else {
    int v134 = v250;
  }
  if (v104) {
    int v135 = v298;
  }
  else {
    int v135 = v77;
  }
  if (v102) {
    int v136 = v45;
  }
  else {
    int v136 = v98;
  }
  if (v102) {
    __int16 v137 = v300;
  }
  else {
    __int16 v137 = v54;
  }
  __int16 v231 = v135;
  __int16 v138 = v97 + v201;
  __int16 v139 = v97 - v201;
  int v140 = v125 + v203;
  int v141 = v125 - v203;
  __int16 v142 = v86 + v206;
  __int16 v143 = v86 - v206;
  __int16 v144 = v128 + v90;
  __int16 v145 = v128 - v90;
  int v146 = v130 + ((__int16)v207 >> 1);
  int v147 = ((__int16)v130 >> 1) - v207;
  int v148 = v132 + ((__int16)v75 >> 1);
  int v149 = ((__int16)v132 >> 1) - v75;
  int v150 = v134 + ((__int16)v244 >> 1);
  int v151 = ((__int16)v134 >> 1) - v244;
  int v152 = v136 + ((__int16)v99 >> 1);
  int v153 = ((__int16)v136 >> 1) - v99;
  __int16 v248 = v139 - v147;
  __int16 v264 = v141 + v149;
  __int16 v257 = v139 + v147;
  __int16 v260 = v141 - v149;
  __int16 v301 = v144 + v152;
  int v291 = v140 + v148 + ((__int16)(v144 + v152) >> 1);
  __int16 v284 = v138 + v146;
  __int16 v282 = v142 + v150;
  __int16 v299 = v138 + v146 + v142 + v150;
  *a7 = (__int16)(v299 + v291) >> 6;
  __int16 v262 = v145 + v153;
  __int16 v245 = v143 + v151;
  __int16 v274 = v139 + v147 + v143 + v151;
  int v276 = v141 + v149 + ((__int16)(v145 + v153) >> 1);
  a7[1] = (__int16)(v274 + v276) >> 6;
  __int16 v251 = v143 - v151;
  __int16 v254 = v145 - v153;
  __int16 v270 = v139 - v147 + v143 - v151;
  int v272 = v141 - v149 + ((__int16)(v145 - v153) >> 1);
  a7[2] = (__int16)(v270 + v272) >> 6;
  __int16 v234 = v142 - v150;
  __int16 v237 = v138 - v146;
  __int16 v240 = v144 - v152;
  __int16 v266 = v138 - v146 + v142 - v150;
  int v268 = v140 - v148 + ((__int16)(v144 - v152) >> 1);
  a7[3] = (__int16)(v266 + v268) >> 6;
  int v154 = v131 + ((__int16)v216 >> 1);
  int v155 = v133 + ((__int16)v208 >> 1);
  int v156 = v135 + ((__int16)v213 >> 1);
  __int16 v157 = v137 + (v210 >> 1);
  __int16 v158 = v293 + v219;
  __int16 v159 = v293 + v219 + v157;
  int v160 = v289 + v224 + v155;
  LOWORD(v146) = v296 + v222;
  __int16 v161 = v287 + v226 + v154;
  __int16 v162 = v296 + v222 + v156;
  __int16 v278 = v161 + v162;
  int v280 = v160 + (v159 >> 1);
  a7[4] = (__int16)(v161 + v162 + v280) >> 6;
  LOWORD(v147) = v296 - v222;
  LOWORD(v153) = v293 - v219;
  int v163 = ((__int16)v131 >> 1) - v216;
  int v164 = ((__int16)v133 >> 1) - v208;
  int v165 = (v231 >> 1) - v213;
  __int16 v166 = (v137 >> 1) - v210;
  __int16 v167 = v153 + v166;
  __int16 v168 = v289 - v224 + v164;
  LOWORD(v151) = v296 - v222 + v165;
  __int16 v294 = v287 - v226 + v163 + v151;
  int v297 = v289 - v224 + v164 + ((__int16)(v153 + v166) >> 1);
  a7[5] = (__int16)(v294 + v297) >> 6;
  __int16 v169 = v287 - v226 - v163;
  int v170 = v289 - v224 - v164;
  LOWORD(v165) = v147 - v165;
  __int16 v171 = v153 - v166;
  __int16 v172 = v289 + v224 - v155;
  __int16 v173 = v158 - v157;
  __int16 v174 = v161 - v162;
  LOWORD(v163) = v287 - v226 + v163 - v151;
  LOWORD(v164) = v169 + v165;
  __int16 v175 = v169 - v165;
  LOWORD(v151) = v287 + v226 - v154 - (v146 - v156);
  LOWORD(v147) = ((__int16)(v140 + v148) >> 1) - v301;
  __int16 v176 = (v264 >> 1) - v262;
  LOWORD(v153) = (v260 >> 1) - v254;
  __int16 v177 = ((__int16)(v140 - v148) >> 1) - v240;
  __int16 v178 = ((__int16)v160 >> 1) - v159;
  __int16 v179 = (v168 >> 1) - v167;
  int v180 = v170 + (v171 >> 1);
  __int16 v181 = ((__int16)v170 >> 1) - v171;
  LOWORD(v149) = (v172 >> 1) - v173;
  a7[6] = (__int16)(v164 + v180) >> 6;
  a7[7] = (__int16)(v287 + v226 - v154 + v146 - v156 + v172 + (v173 >> 1)) >> 6;
  a7[16] = (__int16)(v284 - v282 + v147) >> 6;
  a7[17] = (__int16)(v257 - v245 + v176) >> 6;
  a7[18] = (__int16)(v248 - v251 + v153) >> 6;
  a7[19] = (__int16)(v237 - v234 + v177) >> 6;
  a7[20] = (__int16)(v174 + v178) >> 6;
  a7[21] = (__int16)(v163 + v179) >> 6;
  a7[22] = (__int16)(v175 + v181) >> 6;
  uint64_t result = (__int16)(v248 - v251 - v153) >> 6;
  a7[23] = (__int16)(v151 + v149) >> 6;
  a7[32] = (__int16)(v284 - v282 - v147) >> 6;
  a7[33] = (__int16)(v257 - v245 - v176) >> 6;
  a7[34] = result;
  a7[35] = (__int16)(v237 - v234 - v177) >> 6;
  a7[36] = (__int16)(v174 - v178) >> 6;
  a7[37] = (__int16)(v163 - v179) >> 6;
  a7[38] = (__int16)(v175 - v181) >> 6;
  a7[39] = (__int16)(v151 - v149) >> 6;
  a7[48] = (__int16)(v299 - v291) >> 6;
  a7[49] = (__int16)(v274 - v276) >> 6;
  a7[50] = (__int16)(v270 - v272) >> 6;
  a7[51] = (__int16)(v266 - v268) >> 6;
  a7[52] = (__int16)(v278 - v280) >> 6;
  a7[53] = (__int16)(v294 - v297) >> 6;
  a7[54] = (__int16)(v164 - v180) >> 6;
  a7[55] = (__int16)(v287 + v226 - v154 + v146 - v156 - (v172 + (v173 >> 1))) >> 6;
  return result;
}

uint64_t sub_2219F373C(uint64_t a1, unsigned int a2)
{
  if (a2 < 0x10)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    unsigned int v4 = 0;
    goto LABEL_32;
  }
  unsigned int v4 = 0;
  LODWORD(v3) = 0;
  int v2 = 0;
  for (unsigned int i = 16; i <= a2; i += 16)
  {
    int8x16_t v6 = *(int8x16_t *)(a1 + v4);
    int8x16_t v7 = vandq_s8(vceqzq_s8(v6), (int8x16_t)xmmword_221A37900);
    int8x16_t v8 = vpaddq_s8(v7, v7);
    int8x16_t v9 = vpaddq_s8(v8, v8);
    if (!vpaddq_s8(v9, v9).u16[0])
    {
      *(int8x16_t *)(a1 + v3) = v6;
      uint64_t v3 = (v3 + 16);
      goto LABEL_20;
    }
    if (v6.i8[0])
    {
      char v10 = *(_OWORD *)(a1 + v4);
      do
      {
        *(unsigned char *)(a1 + v3) = v10;
        ++v4;
        LODWORD(v3) = v3 + 1;
        char v10 = *(unsigned char *)(a1 + v4);
      }
      while (v10);
    }
    *(unsigned char *)(a1 + v3) = 0;
    uint64_t v3 = (v3 + 1);
    unsigned int i = v4 + 1;
    int v2 = 1;
    if (v4 + 1 < a2)
    {
      while (1)
      {
        int v11 = v3;
        if (v2 == 2)
        {
          if (*(unsigned char *)(a1 + i) == 3)
          {
            if (++i >= a2)
            {
              int v2 = 2;
              break;
            }
            int v2 = 0;
          }
          else
          {
            int v2 = 2;
          }
        }
        *(unsigned char *)(a1 + v3) = *(unsigned char *)(a1 + i);
        if (*(unsigned __int8 *)(a1 + i++))
        {
          int v2 = 0;
LABEL_19:
          uint64_t v3 = (v11 + 1);
          break;
        }
        ++v2;
        uint64_t v3 = (v3 + 1);
        if (i >= a2) {
          goto LABEL_19;
        }
      }
    }
LABEL_20:
    unsigned int v4 = i;
  }
LABEL_32:
  while (v4 < a2)
  {
    if (v2 == 2)
    {
      if (*(unsigned char *)(a1 + v4) == 3)
      {
        if (++v4 >= a2) {
          break;
        }
        int v2 = 0;
      }
      else
      {
        int v2 = 2;
      }
    }
    *(unsigned char *)(a1 + v3) = *(unsigned char *)(a1 + v4);
    if (*(unsigned char *)(a1 + v4)) {
      int v2 = 0;
    }
    else {
      ++v2;
    }
    uint64_t v3 = (v3 + 1);
    ++v4;
  }
  if (v3 < a2) {
    bzero((void *)(a1 + v3), ~v3 + a2);
  }
  return v3;
}

uint64_t sub_2219F38D8(unsigned int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = 4294958327;
  if (a1 && a3)
  {
    *(void *)a3 = a1;
    *(void *)(a3 + 16) = a1;
    *(_DWORD *)(a3 + 32) = bswap32(*a1);
    *(unsigned char *)(a3 + 36) = 0;
    unsigned int v4 = (char *)a1 + a2;
    *(void *)(a3 + 24) = v4;
    *(_DWORD *)(a3 + 8) = a2;
    *(_DWORD *)(a3 + 12) = a2;
    if (!*(v4 - 1))
    {
      int16x8_t v5 = (unsigned __int8 *)a1 + a2 - 2;
      while (a2)
      {
        *(_DWORD *)(a3 + 12) = --a2;
        if (*v5--) {
          goto LABEL_7;
        }
      }
      return 4294958327;
    }
LABEL_7:
    if (!a2) {
      return 4294958327;
    }
    return 0;
  }
  return v3;
}

BOOL sub_2219F3948(uint64_t a1)
{
  unint64_t v1 = *(void *)a1 + *(unsigned int *)(a1 + 12) - 1;
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 < v1) {
    return 1;
  }
  if (v2 != v1) {
    return 0;
  }
  char v4 = *(unsigned char *)(a1 + 36);
  int v5 = *(_DWORD *)(a1 + 32) >> (v4 + 24);
  int v6 = 1 << (7 - v4);
  if (v5) {
    BOOL v7 = v5 == v6;
  }
  else {
    BOOL v7 = 1;
  }
  return !v7;
}

uint64_t sub_2219F39A8(unsigned int *a1, int a2, void *a3)
{
  uint64_t v3 = *a1;
  *a3 = 0;
  if ((int)v3 < 1) {
    return 4294958327;
  }
  for (unsigned int i = (unsigned __int8 *)a1 + 27; *i != a2; i += 1880)
  {
    if (!--v3) {
      return 4294958327;
    }
  }
  uint64_t result = 0;
  *a3 = i - 15;
  return result;
}

uint64_t sub_2219F39EC(uint64_t a1, int a2, void *a3)
{
  uint64_t v3 = *(unsigned int *)(a1 + 4);
  if ((int)v3 < 1) {
    return 4294958327;
  }
  char v4 = (_DWORD *)(a1 + 60176);
  do
  {
    if (*v4 == a2)
    {
      uint64_t result = 0;
      *a3 = v4;
      return result;
    }
    v4 += 84;
    --v3;
  }
  while (v3);
  if (*a3) {
    return 0;
  }
  else {
    return 4294958327;
  }
}

uint64_t sub_2219F3A40(int a1, uint64_t a2)
{
  if (!a2) {
    return 4294958327;
  }
  uint64_t v3 = *(unsigned int *)(a2 + 12);
  if (v3)
  {
    uint64_t v5 = a2 + 216;
    uint64_t v6 = *(unsigned int *)(a2 + 12);
    BOOL v7 = (uint64_t *)(a2 + 216);
    do
    {
      uint64_t v8 = *v7;
      if (!*v7) {
        return 4294958327;
      }
      if (a1 || *(unsigned char *)(v8 + 1377) && !*(unsigned char *)(v8 + 1372))
      {
        int8x16_t v9 = *(void **)(v8 + 7264);
        if (v9)
        {
          j__free(v9);
          *(void *)(v8 + 7264) = 0;
        }
        *(unsigned char *)(v8 + 2) = 0;
        uint64_t *v7 = 0;
      }
      ++v7;
      --v6;
    }
    while (v6);
    unsigned int v11 = 0;
    int16x8_t v12 = (void *)(a2 + 216);
    do
    {
      if (*v12) {
        *(void *)(v5 + 8 * v11++) = *v12;
      }
      ++v12;
      --v3;
    }
    while (v3);
  }
  else
  {
    unsigned int v11 = 0;
  }
  uint64_t result = 0;
  *(_DWORD *)(a2 + 12) = v11;
  return result;
}

uint64_t sub_2219F3B24(uint64_t a1)
{
  if (!a1) {
    return 4294958327;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 12);
  if (v2)
  {
    uint64_t v3 = a1 + 216;
    uint64_t v4 = *(unsigned int *)(a1 + 12);
    uint64_t v5 = (uint64_t *)(a1 + 216);
    do
    {
      uint64_t v6 = *v5;
      if (!*v5) {
        return 4294958327;
      }
      if (!*(unsigned char *)(v6 + 1372))
      {
        BOOL v7 = *(void **)(v6 + 7264);
        if (v7)
        {
          j__free(v7);
          *(void *)(v6 + 7264) = 0;
        }
        *(unsigned char *)(v6 + 2) = 0;
        uint64_t *v5 = 0;
      }
      ++v5;
      --v4;
    }
    while (v4);
    unsigned int v8 = 0;
    int8x16_t v9 = (void *)(a1 + 216);
    do
    {
      if (*v9) {
        *(void *)(v3 + 8 * v8++) = *v9;
      }
      ++v9;
      --v2;
    }
    while (v2);
  }
  else
  {
    unsigned int v8 = 0;
  }
  uint64_t result = 0;
  *(_DWORD *)(a1 + 12) = v8;
  return result;
}

uint64_t sub_2219F3BE8(uint64_t a1)
{
  uint64_t v2 = 0;
  uint64_t v3 = a1 + 232;
  do
  {
    uint64_t v4 = a1 + 760 * v2;
    int v6 = *(_DWORD *)(v4 + 28);
    uint64_t v5 = (unsigned int *)(v4 + 28);
    if (v6 && v5 - 3 != *(unsigned int **)(a1 + 22816))
    {
      unint64_t v7 = 0;
      do
        *(unsigned char *)(*(void *)(v3 + 8 * v7++) + 1372) = 0;
      while (v7 < *v5);
      sub_2219F3A40(0, (uint64_t)(v5 - 3));
    }
    ++v2;
    v3 += 760;
  }
  while (v2 != 30);
  return 0;
}

uint64_t sub_2219F3C70(int a1, uint64_t a2, int a3, int a4)
{
  unsigned int v7 = a3 & 0xFFFFFFFD;
  uint64_t v8 = *(void *)(a2 + 22816);
  if ((a3 & 0xFFFFFFFD) != 1)
  {
    if (!a1 && v8) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v8)
  {
    uint64_t v10 = a2 + 16;
    goto LABEL_17;
  }
  uint64_t result = 0;
  if (a1 && !a4)
  {
LABEL_8:
    uint64_t v10 = a2 + 16;
    if (v8) {
      BOOL v11 = v8 == a2 + 22056;
    }
    else {
      BOOL v11 = 1;
    }
    if (!v11)
    {
      uint64_t v12 = a2 + 776;
      uint64_t v13 = 29;
      while (v12 - 760 != v8)
      {
        v12 += 760;
        if (!--v13)
        {
          *(void *)(a2 + 22816) = 0;
          return 4294958327;
        }
      }
LABEL_18:
      *(void *)(a2 + 22816) = v12;
      uint64_t v14 = *(void *)(a2 + 22824);
      if (v12 == v14)
      {
        uint64_t v14 = sub_2219F3D88(v10, v12, v12);
        *(void *)(a2 + 22824) = v14;
        if (!a4) {
          goto LABEL_25;
        }
      }
      else if (!a4)
      {
        goto LABEL_25;
      }
      if (v7 == 1)
      {
        if (!v14)
        {
LABEL_26:
          uint64_t result = 0;
          *(void *)(a2 + 22824) = *(void *)(a2 + 22816);
          return result;
        }
        return 0;
      }
LABEL_25:
      *(_DWORD *)(v12 + 208) = 0;
      *(void *)uint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      *(_DWORD *)(v12 + 16) = 0;
      *(void *)(v12 + 24) = 0;
      *(void *)(v12 + 32) = 0;
      *(void *)(v12 + 40) = 0xFFFFFFFFLL;
      if (!*(void *)(a2 + 22824)) {
        goto LABEL_26;
      }
      return 0;
    }
LABEL_17:
    uint64_t v12 = v10;
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_2219F3D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = 0;
  uint64_t v4 = a2;
  while (1)
  {
    uint64_t v5 = a1;
    if (v4)
    {
      uint64_t v5 = a1;
      if (v4 != a1 + 22040)
      {
        uint64_t v6 = 29;
        uint64_t v7 = a1;
        while (v7 != v4)
        {
          v7 += 760;
          if (!--v6) {
            goto LABEL_15;
          }
        }
        uint64_t v5 = v7 + 760;
      }
    }
    if (v5) {
      break;
    }
LABEL_15:
    uint64_t v4 = 0;
LABEL_16:
    if (v4 != a2 && v4 != a3 && ++v3 != 30) {
      continue;
    }
    return v4;
  }
  uint64_t v8 = *(unsigned int *)(v5 + 12);
  if (!v8)
  {
LABEL_14:
    uint64_t v4 = v5;
    goto LABEL_16;
  }
  uint64_t v9 = 0;
  uint64_t v10 = 8 * v8;
  while (*(unsigned char *)(*(void *)(v5 + v9 + 216) + 1377))
  {
    v9 += 8;
    if (v10 == v9) {
      goto LABEL_14;
    }
  }
  return v5;
}

uint64_t sub_2219F3E38(uint64_t a1, int a2)
{
  uint64_t v3 = a1 + 5039776;
  uint64_t v4 = a1 + 5016976;
  uint64_t v5 = *(void *)(a1 + 5039776);
  uint64_t v6 = sub_2219F3D88(a1 + 5016976, v5, v5);
  if (!*(_DWORD *)(v3 + 2032)) {
    return 4294954945;
  }
  uint64_t v7 = v6;
  if (!v6) {
    return 4294954944;
  }
  if (!v5) {
    return 4294954943;
  }
  while (1)
  {
    if (v7 == v5)
    {
      unint64_t v20 = *(unsigned int *)(v5 + 12);
      if (v20)
      {
        for (unint64_t i = 0; i < v20; ++i)
        {
          uint64_t v22 = *(void *)(v5 + 216 + 8 * i);
          int v23 = *(_DWORD *)(v22 + 1264);
          int v24 = a2 - v23;
          BOOL v15 = __OFSUB__(v23, a2);
          int v25 = v23 - a2;
          if ((v25 < 0) ^ v15 | (v25 == 0)) {
            int v25 = v24;
          }
          if (v25 >= 41)
          {
            *(unsigned char *)(v22 + 1377) = 1;
            unint64_t v20 = *(unsigned int *)(v5 + 12);
          }
        }
      }
      return 0;
    }
    if (!*(_DWORD *)(v7 + 12)) {
      goto LABEL_18;
    }
    unint64_t v8 = 0;
    uint64_t v9 = v7 + 216;
    do
    {
      *(unsigned char *)(*(void *)(v9 + 8 * v8++) + 1372) = 0;
      unint64_t v10 = *(unsigned int *)(v7 + 12);
    }
    while (v8 < v10);
    if (!*(_DWORD *)(v7 + 12)) {
      goto LABEL_18;
    }
    unint64_t v11 = 0;
    do
    {
      uint64_t v12 = *(void *)(v9 + 8 * v11);
      int v13 = *(_DWORD *)(v12 + 1264);
      int v14 = a2 - v13;
      BOOL v15 = __OFSUB__(v13, a2);
      int v16 = v13 - a2;
      if ((v16 < 0) ^ v15 | (v16 == 0)) {
        int v16 = v14;
      }
      if (v16 >= 41)
      {
        *(unsigned char *)(v12 + 1377) = 1;
        unint64_t v10 = *(unsigned int *)(v7 + 12);
      }
      ++v11;
    }
    while (v11 < v10);
    if (v10 == 1) {
      int v17 = 1;
    }
    else {
LABEL_18:
    }
      int v17 = 0;
    sub_2219F3A40(v17, v7);
    uint64_t v18 = sub_2219F3D88(v4, v7, v5);
    if (!v18) {
      return 4294954942;
    }
    uint64_t v7 = v18;
    if (v18 == v5) {
      return 0;
    }
  }
}

uint64_t sub_2219F3FB4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 5039784);
  uint64_t v2 = *(unsigned int *)(v1 + 12);
  if ((int)v2 < 1) {
    return 0;
  }
  uint64_t v3 = 0;
  unsigned int v4 = 0;
  int v5 = 0x7FFFFFFF;
  int v6 = -1;
  while (1)
  {
    uint64_t v7 = *(void *)(v1 + 8 * v3 + 216);
    if (!v7) {
      break;
    }
    if (!*(unsigned char *)(v7 + 1377) && !*(unsigned char *)(v7 + 36) && (!*(unsigned char *)(v7 + 1362) || *(unsigned char *)(v7 + 34)))
    {
      if (*(_DWORD *)(v7 + 1280) < v5)
      {
        int v5 = *(_DWORD *)(v7 + 1280);
        int v6 = v3;
      }
      if (*(unsigned char *)(v7 + 4) && *(unsigned char *)(v7 + 1376)) {
        ++v4;
      }
    }
    if (v2 == ++v3)
    {
      if (v1 != *(void *)(a1 + 5039776) && v4 != 0) {
        return 9999999;
      }
      break;
    }
  }
  if (v6 == -1) {
    return 0;
  }
  unsigned int v9 = v2 - v6;
  if ((int)v9 >= (int)v4) {
    return v4;
  }
  else {
    return v9;
  }
}

uint64_t sub_2219F4074(int a1, int a2, uint64_t a3)
{
  if (a2 < 1) {
    return 0;
  }
  uint64_t v3 = 0;
  int v4 = -2147483647;
  int v5 = -1;
  do
  {
    uint64_t v6 = *(void *)(a3 + 8 * v3);
    if (!v6) {
      break;
    }
    if ((*(unsigned char *)(v6 + 1376) || *(unsigned char *)(v6 + 1380)) && *(unsigned char *)(v6 + 1372) && !*(unsigned char *)(v6 + 34))
    {
      int v7 = *(_DWORD *)(v6 + 1280);
      if (v7 < a1 && v7 > v4)
      {
        int v4 = v7;
        int v5 = v3;
      }
    }
    ++v3;
  }
  while (a2 != v3);
  if (v5 == -1) {
    return 0;
  }
  else {
    return *(void *)(a3 + 8 * v5);
  }
}

uint64_t sub_2219F40F8(int8x16_t *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, int8x16_t *a9, int a10)
{
  int v14 = (uint64_t *)a9;
  uint64_t v15 = *(unsigned int *)(a4 + 12);
  if (a9) {
    int v16 = a9;
  }
  else {
    int v16 = a1;
  }
  uint64_t v17 = a4 + 216;
  bzero(v16, 0x220uLL);
  if (a2 != 6 && a2 != 1)
  {
    if (*(unsigned char *)(a3 + 1362))
    {
      switch(a2)
      {
        case 0:
        case 5:
          goto LABEL_15;
        case 2:
        case 7:
          goto LABEL_13;
        default:
          goto LABEL_14;
      }
    }
    switch(a2)
    {
      case 0:
      case 5:
        break;
      case 2:
      case 7:
        if (*(unsigned char *)(a3 + 1371)) {
          goto LABEL_14;
        }
        break;
      default:
        goto LABEL_14;
    }
    int v93 = a8;
    int v47 = a7;
    int v20 = 0;
    if ((int)v15 >= 1)
    {
      int v48 = 0;
      int v49 = *(_DWORD *)(a3 + 1292);
      do
      {
        if (a10 == 1)
        {
          uint64_t v50 = 0;
          int v51 = -2147483647;
          int v52 = -1;
          do
          {
            uint64_t v53 = *(void *)(v17 + 8 * v50);
            if (!v53) {
              break;
            }
            if ((*(unsigned char *)(v53 + 1380) || *(unsigned char *)(v53 + 1376))
              && !*(unsigned char *)(v53 + 34)
              && *(unsigned char *)(v53 + 1372)
              && !*(unsigned char *)(v53 + 1364)
              && *(_DWORD *)(v53 + 1292) < v49
              && *(_DWORD *)(v53 + 1292) > v51)
            {
              int v51 = *(_DWORD *)(v53 + 1292);
              int v52 = v50;
            }
            ++v50;
          }
          while (v15 != v50);
        }
        else
        {
          uint64_t v54 = 0;
          int v51 = -2147483647;
          int v52 = -1;
          do
          {
            uint64_t v55 = *(void *)(v17 + 8 * v54);
            if (!v55) {
              break;
            }
            if (*(unsigned char *)(v55 + 1376))
            {
              if (!*(unsigned char *)(v55 + 34))
              {
                if (*(unsigned char *)(v55 + 1372))
                {
                  if (!*(unsigned char *)(v55 + 1364))
                  {
                    int v56 = *(_DWORD *)(v55 + 1292);
                    if (v56 < v49 && v56 > v51)
                    {
                      int v51 = v56;
                      int v52 = v54;
                    }
                  }
                }
              }
            }
            ++v54;
          }
          while (v15 != v54);
        }
        int v49 = v51;
        if (v52 == -1) {
          break;
        }
        int v57 = *(int32x2_t **)(v17 + 8 * v52);
        if (!v57) {
          break;
        }
        if (!v57[4].i8[1] || *(void *)&v57[169])
        {
          if (sub_2219F4B9C(v57)) {
            return 4294958327;
          }
          if (v20 <= 33) {
            v16->i64[v20++] = (uint64_t)v57;
          }
        }
        ++v48;
      }
      while (v48 != v15);
    }
    int v58 = -1000;
    a7 = v47;
    a8 = v93;
    while (1)
    {
      uint64_t v59 = sub_2219F4E50(v58, v15, v17);
      if (!v59) {
        break;
      }
      uint64_t v60 = v59;
      int v58 = *(_DWORD *)(v59 + 1300);
      if ((!*(unsigned char *)(v60 + 33) || *(void *)(v60 + 1352)) && v20 <= 33)
      {
        v16->i64[v20] = v60;
        *(unsigned char *)(v60 + 1362) = 0;
        *(unsigned char *)(v60 + 32) = 0;
        ++v20;
      }
    }
    v16[51].i32[0] = v20;
    v16[51].i32[2] = v20;
    v16[51].i32[1] = 0;
    v16[51].i32[3] = 0;
    goto LABEL_202;
  }
  if (!*(unsigned char *)(a3 + 1362))
  {
    int v92 = a8;
    int v90 = a7;
    if ((int)v15 < 1)
    {
      int v80 = 0;
    }
    else
    {
      int v29 = 0;
      uint64_t v30 = a3;
      int v31 = 0;
      int v32 = 0;
      int v33 = *(_DWORD *)(v30 + 1280);
      int v34 = v33;
      do
      {
        __int16 v35 = (int32x2_t *)sub_2219F4074(v33, v15, v17);
        if (v35)
        {
          int v36 = v35;
          if (!v35[170].i8[4])
          {
            if (v35[4].i8[1] && !*(void *)&v35[169])
            {
              int v33 = v35[160].i32[0];
            }
            else
            {
              if (v31 <= 33)
              {
                v16->i64[v31] = (uint64_t)v35;
                if (v33 >= v35[160].i32[0]) {
                  int v33 = v35[160].i32[0];
                }
                ++v31;
              }
              if (sub_2219F4B9C(v35)) {
                return 4294958327;
              }
              if (v33 >= v36[160].i32[0]) {
                int v33 = v36[160].i32[0];
              }
            }
          }
        }
        uint64_t v37 = 0;
        int v38 = 0x7FFFFFFF;
        int v39 = -1;
        do
        {
          uint64_t v40 = *(void *)(v17 + 8 * v37);
          if (!v40) {
            goto LABEL_59;
          }
          if (*(unsigned char *)(v40 + 1376) || *(unsigned char *)(v40 + 1380))
          {
            if (*(unsigned char *)(v40 + 1372))
            {
              int v41 = *(_DWORD *)(v40 + 1280);
              if (v41 > v34 && !*(unsigned char *)(v40 + 34) && (v39 == -1 || v41 < v38))
              {
                int v38 = v41;
                int v39 = v37;
              }
            }
          }
          ++v37;
        }
        while (v15 != v37);
        if (v39 != -1)
        {
LABEL_59:
          int v44 = *(int32x2_t **)(v17 + 8 * v39);
          if (v44 && !v44[170].i8[4])
          {
            if (v44[4].i8[1] && !*(void *)&v44[169])
            {
              int v34 = v44[160].i32[0];
            }
            else
            {
              if (v29 <= 33)
              {
                v16[17].i64[v29] = (uint64_t)v44;
                if (v34 <= v44[160].i32[0]) {
                  int v34 = v44[160].i32[0];
                }
                ++v29;
              }
              if (sub_2219F4B9C(v44)) {
                return 4294958327;
              }
              __int32 v45 = v44[160].i32[1];
              __int32 v46 = v44[161].i32[0];
              if (v45 <= v46)
              {
                if (v34 <= v46) {
                  int v34 = v44[161].i32[0];
                }
              }
              else if (v34 <= v45)
              {
                int v34 = v44[160].i32[1];
              }
            }
          }
        }
        ++v32;
      }
      while (v32 != v15);
      int v80 = v31;
      if (v29 >= 1)
      {
        int v81 = 0;
        int v80 = v31;
        do
        {
          if (v80 <= 33)
          {
            int v82 = &v16->i8[8 * v81++];
            v16->i64[v80++] = *((void *)v82 + 34);
          }
        }
        while (v81 < v29);
      }
      if (v31 >= 1)
      {
        int v83 = 0;
        do
        {
          if (v29 <= 33)
          {
            uint64_t v84 = v16->i64[v83++];
            int v85 = &v16->i8[8 * v29++];
            *((void *)v85 + 34) = v84;
          }
        }
        while (v83 < v31);
      }
      if (v29 != v80) {
        return 4294958327;
      }
    }
    uint64_t v86 = sub_2219F4E50(-1000, v15, v17);
    if (!v86)
    {
      int v20 = v80;
LABEL_195:
      if (v20 >= 2)
      {
        for (uint64_t i = 0; i != v20; ++i)
        {
          if (v16->i64[i] != v16[17].i64[i]) {
            goto LABEL_200;
          }
        }
        v16[17] = vextq_s8(*v16, *v16, 8uLL);
      }
LABEL_200:
      v16[51].i32[0] = v20;
      v16[51].i32[2] = v20;
      v16[51].i32[1] = v80;
      v16[51].i32[3] = v80;
      a7 = v90;
LABEL_201:
      a8 = v92;
      goto LABEL_202;
    }
    __int16 v87 = (int32x2_t *)v86;
    int v20 = v80;
    while (1)
    {
      if (!v87[4].i8[1] || *(void *)&v87[169])
      {
        if (v20 <= 33) {
          v16->i64[v20++] = (uint64_t)v87;
        }
        if (v80 <= 33)
        {
          __int16 v88 = &v16->i8[8 * v80++];
          *((void *)v88 + 34) = v87;
        }
        if (sub_2219F4B9C(v87)) {
          return 4294958327;
        }
      }
      __int16 v87 = (int32x2_t *)sub_2219F4E50(v87[162].i32[1], v15, v17);
      if (!v87) {
        goto LABEL_195;
      }
    }
  }
  if (((1 << a2) & 0x21) != 0)
  {
LABEL_15:
    int v92 = a8;
    int v19 = a7;
    int v20 = 0;
    int v99 = *(_DWORD *)(a3 + 1292);
    int v98 = v99 + 1;
    int v21 = *(unsigned __int8 *)(a3 + 37);
    BOOL v22 = *(unsigned char *)(a3 + 37) == 0;
    BOOL v23 = 1;
    BOOL v24 = 1;
    while (1)
    {
      if (v24)
      {
        uint64_t v25 = sub_2219F5350(v21, &v99, v15, v17);
        uint64_t v26 = v25;
        if (v25 && v20 <= 33)
        {
          v16->i64[v20] = v25;
          v16[34].i32[v20] = v21;
          sub_2219F4FFC(v25);
          ++v20;
        }
        if (v23)
        {
LABEL_21:
          uint64_t v27 = sub_2219F5350(v22, &v98, v15, v17);
          uint64_t v28 = v27;
          if (v27 && v20 <= 33)
          {
            v16->i64[v20] = v27;
            v16[34].i32[v20] = v22;
            sub_2219F4FFC(v27);
            ++v20;
          }
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v26 = 0;
        if (v23) {
          goto LABEL_21;
        }
      }
      uint64_t v28 = 0;
LABEL_26:
      BOOL v24 = v26 != 0;
      BOOL v23 = v28 != 0;
      if (!(v26 | v28))
      {
        v16[51].i32[0] = v20;
        v16[51].i32[2] = v20;
        v16[51].i32[1] = 0;
        v16[51].i32[3] = 0;
        a7 = v19;
        int v14 = (uint64_t *)a9;
        goto LABEL_201;
      }
    }
  }
  if (((1 << a2) & 0x42) == 0)
  {
    if (((1 << a2) & 0x84) == 0) {
      goto LABEL_14;
    }
LABEL_13:
    if (*(unsigned char *)(a3 + 1371))
    {
LABEL_14:
      uint64_t result = 0;
      v16[51] = 0u;
      goto LABEL_205;
    }
    goto LABEL_15;
  }
  int v91 = a7;
  int v94 = a8;
  int v61 = 0;
  int v62 = 0;
  int v20 = 0;
  int v97 = *(unsigned __int8 *)(a3 + 37);
  BOOL v96 = v97 == 0;
  int v99 = *(_DWORD *)(a3 + 1280);
  int v98 = v99 + 1;
  uint64_t v63 = a3;
  uint64_t v64 = a3;
  do
  {
    if (v62)
    {
      if (!v64)
      {
        BOOL v65 = 0;
        goto LABEL_129;
      }
      goto LABEL_125;
    }
    uint64_t v66 = sub_2219F4ECC(v97, &v99, v15, v17, a3);
    if (!v66)
    {
      int v99 = *(_DWORD *)(a3 + 1280);
      int v62 = 1;
LABEL_125:
      uint64_t v64 = sub_2219F4F64(v97, &v99, v15, v17);
      goto LABEL_126;
    }
    uint64_t v64 = v66;
    int v62 = 0;
LABEL_126:
    BOOL v65 = v64 != 0;
    if (v64 && v20 <= 33)
    {
      v16->i64[v20] = v64;
      v16[34].i32[v20] = v97;
      sub_2219F4FFC(v64);
      ++v20;
      BOOL v65 = 1;
    }
LABEL_129:
    if (v61)
    {
      if (!v63)
      {
        BOOL v67 = 0;
        continue;
      }
      goto LABEL_135;
    }
    uint64_t v68 = sub_2219F4ECC(v96, &v98, v15, v17, a3);
    if (!v68)
    {
      int v98 = *(_DWORD *)(a3 + 1280);
      int v61 = 1;
LABEL_135:
      uint64_t v63 = sub_2219F4F64(v96, &v98, v15, v17);
      goto LABEL_136;
    }
    uint64_t v63 = v68;
    int v61 = 0;
LABEL_136:
    BOOL v67 = v63 != 0;
    if (v63 && v20 <= 33)
    {
      v16->i64[v20] = v63;
      v16[34].i32[v20] = v96;
      sub_2219F4FFC(v63);
      ++v20;
      BOOL v67 = 1;
    }
  }
  while (v65 || v67);
  uint64_t v69 = a3;
  int v70 = 0;
  int v71 = 0;
  int v72 = 0;
  int v98 = *(_DWORD *)(v69 + 1280);
  int v99 = v98;
  uint64_t v73 = v69;
  uint64_t v95 = v69;
  do
  {
    if (v71)
    {
      if (!v69)
      {
        BOOL v74 = 0;
        goto LABEL_151;
      }
      goto LABEL_147;
    }
    uint64_t v75 = sub_2219F4F64(v97, &v99, v15, v17);
    if (!v75)
    {
      int v99 = *(_DWORD *)(v95 + 1280);
      int v71 = 1;
LABEL_147:
      uint64_t v69 = sub_2219F4ECC(v97, &v99, v15, v17, v95);
      goto LABEL_148;
    }
    uint64_t v69 = v75;
    int v71 = 0;
LABEL_148:
    BOOL v74 = v69 != 0;
    if (v69 && v72 <= 33)
    {
      v16[17].i64[v72] = v69;
      v16[42].i32[v72 + 2] = v97;
      sub_2219F4FFC(v69);
      ++v72;
      BOOL v74 = 1;
    }
LABEL_151:
    if (v70)
    {
      if (!v73)
      {
        BOOL v76 = 0;
        continue;
      }
      goto LABEL_157;
    }
    uint64_t v77 = sub_2219F4F64(v96, &v98, v15, v17);
    if (!v77)
    {
      int v98 = *(_DWORD *)(v95 + 1280) + 1;
      int v70 = 1;
LABEL_157:
      uint64_t v73 = sub_2219F4ECC(v96, &v98, v15, v17, v95);
      goto LABEL_158;
    }
    uint64_t v73 = v77;
    int v70 = 0;
LABEL_158:
    BOOL v76 = v73 != 0;
    if (v73 && v72 <= 33)
    {
      v16[17].i64[v72] = v73;
      v16[42].i32[v72 + 2] = v96;
      sub_2219F4FFC(v73);
      ++v72;
      BOOL v76 = 1;
    }
  }
  while (v74 || v76);
  int v14 = (uint64_t *)a9;
  if (v20 >= 2)
  {
    uint64_t v78 = 0;
    int v79 = (uint64_t *)v16;
    while (*v79 == v79[34] && v16[34].i32[v78] == v16[42].i32[v78 + 2])
    {
      ++v79;
      if (v20 == ++v78)
      {
        v16[17] = vextq_s8(*v16, *v16, 8uLL);
        v16[42].i32[3] = v16[34].i32[0];
        v16[42].i32[2] = v16[34].i32[1];
        break;
      }
    }
  }
  v16[51].i32[0] = v20;
  v16[51].i32[2] = v20;
  v16[51].i32[1] = v72;
  v16[51].i32[3] = v72;
  a7 = v91;
  a8 = v94;
LABEL_202:
  uint64_t result = 0;
  if (v14 && v20 >= 1) {
    uint64_t result = sub_2219F53E8(v14);
  }
LABEL_205:
  if (a7 >= 1 && v16[51].i32[2] >= a7) {
    v16[51].i32[2] = a7;
  }
  if (a8 >= 1 && v16[51].i32[3] >= a8) {
    v16[51].i32[3] = a8;
  }
  return result;
}

uint64_t sub_2219F4B9C(int32x2_t *a1)
{
  if (!a1[170].i8[2]) {
    return 0;
  }
  a1[4].i8[0] = 0;
  uint64_t v2 = (uint64_t)&a1[4];
  *(unsigned char *)(v2 + 1330) = 0;
  *(unsigned char *)(v2 + 5) = 0;
  __int32 v3 = *(_DWORD *)(v2 + 104);
  if (*(unsigned char *)(v2 + 1))
  {
    v3 *= 2;
    unsigned int v4 = 2 * a1[17].i32[1];
    int32x2_t v5 = vadd_s32(a1[19], a1[19]);
  }
  else
  {
    unsigned int v4 = a1[17].u32[1];
    int32x2_t v5 = a1[19];
  }
  a1[16].i32[0] = v3;
  a1[16].i32[1] = v4;
  a1[18] = v5;
  int32x2_t v6 = a1[169];
  if (!*(void *)&v6) {
    return 4294958327;
  }
  if (a1[4].i8[6])
  {
    __int32 v7 = *(_DWORD *)(*(void *)&v6 + 1284);
    a1[160].i32[1] = v7;
    __int32 v8 = a1[161].i32[0];
  }
  else
  {
    __int32 v8 = *(_DWORD *)(*(void *)&v6 + 1288);
    a1[161].i32[0] = v8;
    __int32 v7 = a1[160].i32[1];
  }
  if (v8 < v7) {
    __int32 v7 = v8;
  }
  a1[160].i32[0] = v7;
  a1[75] = vadd_s32(vdup_n_s32(v4), (int32x2_t)0xFFFFFFFF00000002);
  int32x2_t v10 = a1[52];
  if (v10)
  {
    *(_DWORD *)(*(void *)&v10 + 72) = 1;
    *(void *)(*(void *)&v10 + 64) = 0x100000001;
    *(_OWORD *)(*(void *)&v10 + 128) = xmmword_221A366C0;
  }
  int32x2_t v11 = a1[53];
  if (v11)
  {
    *(_DWORD *)(*(void *)&v11 + 72) = 1;
    *(void *)(*(void *)&v11 + 64) = 0x100000001;
    *(_OWORD *)(*(void *)&v11 + 128) = xmmword_221A366C0;
  }
  int32x2_t v12 = a1[54];
  if (v12)
  {
    *(_DWORD *)(*(void *)&v12 + 72) = 1;
    *(void *)(*(void *)&v12 + 64) = 0x100000001;
    *(_OWORD *)(*(void *)&v12 + 128) = xmmword_221A366C0;
  }
  sub_221926888(v2, a1[23].i32[0]);
  if (a1->i8[3]) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v13 = a1[21].i32[0];
  if (v13)
  {
    __int32 v14 = a1[23].i32[0];
    if (v14)
    {
      int v15 = 0;
      int32x2_t v17 = a1[8];
      int32x2_t v16 = a1[9];
      uint64_t v18 = a1[22].i32[1];
      uint64_t v19 = a1[16].i32[1];
      uint64_t v20 = a1[18].i32[1];
      uint64_t v21 = a1[20].i32[1];
      uint64_t v22 = *(void *)&v17 - 32;
      uint64_t v23 = 2 * v13;
      uint64_t v24 = v21 + 48;
      do
      {
        if ((int)v21 >= -63)
        {
          uint64_t v25 = 0;
          do
          {
            long long v26 = *(_OWORD *)(v22 + v25);
            *(_OWORD *)(v22 - v13 + v25) = v26;
            *(_OWORD *)(v22 - 2 * v13 + v25) = v26;
            BOOL v27 = v25 < v24;
            v25 += 16;
          }
          while (v27);
        }
        v22 -= 2 * v13;
        ++v15;
      }
      while (v15 != 10);
      int v28 = 0;
      uint64_t v29 = (v19 - 1) * v13;
      uint64_t v30 = *(void *)&v17 + v29 - 32;
      uint64_t v31 = v13 + *(void *)&v17 + v29 - 32;
      uint64_t v32 = v29 + v23 + *(void *)&v17 - 32;
      do
      {
        if ((int)v21 >= -63)
        {
          uint64_t v33 = 0;
          do
          {
            long long v34 = *(_OWORD *)(v30 + v33);
            *(_OWORD *)(v31 + v33) = v34;
            *(_OWORD *)(v32 + v33) = v34;
            BOOL v27 = v33 < v24;
            v33 += 16;
          }
          while (v27);
        }
        v30 += v23;
        ++v28;
        v31 += v23;
        v32 += v23;
      }
      while (v28 != 10);
      int v35 = 0;
      uint64_t v36 = *(void *)&v16 - 16;
      uint64_t v37 = v18 + 16;
      do
      {
        if ((int)v18 >= -31)
        {
          uint64_t v38 = 0;
          do
          {
            *(_OWORD *)(v36 - v14 + v38) = *(_OWORD *)(v36 + v38);
            BOOL v27 = v38 < v37;
            v38 += 16;
          }
          while (v27);
        }
        v36 -= v14;
        ++v35;
      }
      while (v35 != 8);
      int v39 = 0;
      uint64_t v40 = *(void *)&v16 + (v20 - 1) * v14 - 16;
      do
      {
        if ((int)v18 >= -31)
        {
          uint64_t v41 = 0;
          do
          {
            *(_OWORD *)(v40 + v14 + v41) = *(_OWORD *)(v40 + v41);
            BOOL v27 = v41 < v37;
            v41 += 16;
          }
          while (v27);
        }
        v40 += v14;
        ++v39;
      }
      while (v39 != 8);
      return 0;
    }
  }
  return result;
}

uint64_t sub_2219F4E50(int a1, int a2, uint64_t a3)
{
  if (a2 < 1) {
    return 0;
  }
  uint64_t v3 = 0;
  int v4 = -1;
  int v5 = 0x7FFFFFFF;
  do
  {
    uint64_t v6 = *(void *)(a3 + 8 * v3);
    if (!v6) {
      break;
    }
    if (*(unsigned char *)(v6 + 1376) && *(unsigned char *)(v6 + 1372) && *(unsigned char *)(v6 + 1364))
    {
      int v7 = *(_DWORD *)(v6 + 1300);
      if (v7 > a1 && v7 < v5)
      {
        int v4 = v3;
        int v5 = v7;
      }
    }
    ++v3;
  }
  while (a2 != v3);
  if (v4 == -1) {
    return 0;
  }
  else {
    return *(void *)(a3 + 8 * v4);
  }
}

uint64_t sub_2219F4ECC(int a1, int *a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a3 < 1) {
    goto LABEL_16;
  }
  uint64_t v5 = 0;
  int v6 = -2147483647;
  int v7 = -1;
  do
  {
    uint64_t v8 = *(void *)(a4 + 8 * v5);
    if (!v8) {
      break;
    }
    if (v8 != a5 && *(unsigned char *)(v8 + 1372))
    {
      if (*(unsigned char *)(v8 + 1364)) {
        BOOL v9 = 0;
      }
      else {
        BOOL v9 = *(unsigned __int8 *)(v8 + 37) == a1;
      }
      if (v9)
      {
        int v10 = *(_DWORD *)(v8 + 1280);
        if (v10 < *a2 && v10 > v6)
        {
          int v6 = v10;
          int v7 = v5;
        }
      }
    }
    ++v5;
  }
  while (a3 != v5);
  if (v7 == -1)
  {
LABEL_16:
    uint64_t result = 0;
    *a2 = -2147483647;
  }
  else
  {
    *a2 = v6;
    return *(void *)(a4 + 8 * v7);
  }
  return result;
}

uint64_t sub_2219F4F64(int a1, int *a2, int a3, uint64_t a4)
{
  if (a3 < 1) {
    goto LABEL_16;
  }
  uint64_t v4 = 0;
  int v5 = 0x7FFFFFFF;
  int v6 = -1;
  do
  {
    uint64_t v7 = *(void *)(a4 + 8 * v4);
    if (!v7) {
      break;
    }
    if (*(unsigned char *)(v7 + 1376) && *(unsigned char *)(v7 + 1372))
    {
      if (*(unsigned char *)(v7 + 1364)) {
        BOOL v8 = 0;
      }
      else {
        BOOL v8 = *(unsigned __int8 *)(v7 + 37) == a1;
      }
      if (v8)
      {
        int v9 = *(_DWORD *)(v7 + 1280);
        if (v9 > *a2 && v9 < v5)
        {
          int v5 = v9;
          int v6 = v4;
        }
      }
    }
    ++v4;
  }
  while (a3 != v4);
  if (v6 == -1)
  {
LABEL_16:
    uint64_t result = 0;
    *a2 = 0x7FFFFFFF;
  }
  else
  {
    *a2 = v5;
    return *(void *)(a4 + 8 * v6);
  }
  return result;
}

uint64_t sub_2219F4FFC(uint64_t result)
{
  if (*(unsigned char *)(result + 1362)) {
    return result;
  }
  uint64_t v1 = result;
  *(unsigned char *)(result + 32) = 1;
  uint64_t v2 = result + 32;
  *(unsigned char *)(v2 + 1330) = 1;
  unsigned int v3 = *(_DWORD *)(v2 + 104);
  if (!*(unsigned char *)(v2 + 1))
  {
    unsigned int v4 = *(_DWORD *)(v1 + 140) >> 1;
    *(_DWORD *)(v1 + 128) = v3 >> 1;
    *(_DWORD *)(v1 + 132) = v4;
    *(uint32x2_t *)(v1 + 144) = vshr_n_u32(*(uint32x2_t *)(v1 + 152), 1uLL);
    if (*(unsigned char *)(v1 + 38)) {
      goto LABEL_6;
    }
LABEL_8:
    int v6 = (_DWORD *)(v1 + 1284);
    goto LABEL_9;
  }
  unsigned int v4 = *(_DWORD *)(v1 + 140);
  *(_DWORD *)(v1 + 128) = v3;
  *(_DWORD *)(v1 + 132) = v4;
  *(void *)(v1 + 144) = *(void *)(v1 + 152);
  int v5 = *(unsigned __int8 *)(v1 + 38);
  *(unsigned char *)(v1 + 37) = v5;
  if (!v5)
  {
    *(_DWORD *)(v1 + 1288) = 0x7FFFFFFF;
    goto LABEL_8;
  }
  *(_DWORD *)(v1 + 1284) = 0x7FFFFFFF;
LABEL_6:
  int v6 = (_DWORD *)(v1 + 1288);
LABEL_9:
  *(_DWORD *)(v1 + 1280) = *v6;
  *(int32x2_t *)(v1 + 600) = vadd_s32(vdup_n_s32(v4), (int32x2_t)0xFFFFFFFF00000002);
  uint64_t v7 = *(void *)(v1 + 416);
  if (v7)
  {
    *(_DWORD *)(v7 + 72) = 1;
    *(void *)(v7 + 64) = 0x100000001;
    *(_OWORD *)(v7 + 128) = xmmword_221A366C0;
  }
  uint64_t v8 = *(void *)(v1 + 424);
  if (v8)
  {
    *(_DWORD *)(v8 + 72) = 1;
    *(void *)(v8 + 64) = 0x100000001;
    *(_OWORD *)(v8 + 128) = xmmword_221A366C0;
  }
  uint64_t v9 = *(void *)(v1 + 432);
  if (v9)
  {
    *(_DWORD *)(v9 + 72) = 1;
    *(void *)(v9 + 64) = 0x100000001;
    *(_OWORD *)(v9 + 128) = xmmword_221A366C0;
  }
  uint64_t result = sub_221926888(v2, *(_DWORD *)(v1 + 184));
  if (!*(unsigned char *)(v1 + 3))
  {
    uint64_t v10 = *(int *)(v1 + 168);
    if (v10)
    {
      int v11 = *(_DWORD *)(v1 + 184);
      if (v11)
      {
        int v12 = 0;
        uint64_t v14 = *(void *)(v1 + 64);
        uint64_t v13 = *(void *)(v1 + 72);
        uint64_t v15 = *(int *)(v1 + 180);
        int v16 = 2 * *(_DWORD *)(v1 + 132);
        int v17 = 2 * *(_DWORD *)(v1 + 148);
        uint64_t v18 = 2 * v10;
        uint64_t v19 = *(int *)(v1 + 164);
        uint64_t v20 = v14 - 32;
        uint64_t v21 = v19 + 48;
        uint64_t v22 = v14 - 2 * v10;
        uint64_t v23 = v14 + v10;
        uint64_t v24 = v14 - v10;
        do
        {
          if ((int)v19 >= -63)
          {
            uint64_t v25 = -16;
            do
            {
              *(_OWORD *)(v22 + v25 - 16) = *(_OWORD *)(v20 + v25 + 16);
              *(_OWORD *)(v24 + v25 - 16) = *(_OWORD *)(v23 + v25 - 16);
              v25 += 16;
            }
            while (v25 < v21);
          }
          v20 -= 2 * v10;
          ++v12;
          v22 -= 2 * v10;
          v23 -= 2 * v10;
          v24 -= 2 * v10;
        }
        while (v12 != 20);
        int v26 = 0;
        int v27 = (v16 - 2) * v10;
        uint64_t result = v14 + v27 - 32;
        uint64_t v28 = v10 + v27;
        uint64_t v29 = 3 * v10 + v27;
        uint64_t v30 = v18 + v27 + v14 - 32;
        uint64_t v31 = v28 + v14 - 32;
        uint64_t v32 = v29 + v14 - 32;
        do
        {
          if ((int)v19 >= -63)
          {
            uint64_t v33 = -16;
            do
            {
              *(_OWORD *)(v30 + v33 + 16) = *(_OWORD *)(result + v33 + 16);
              *(_OWORD *)(v32 + v33 + 16) = *(_OWORD *)(v31 + v33 + 16);
              v33 += 16;
            }
            while (v33 < v21);
          }
          result += v18;
          ++v26;
          v30 += v18;
          v31 += v18;
          v32 += v18;
        }
        while (v26 != 20);
        int v34 = 0;
        uint64_t v35 = v13 - 16;
        uint64_t v36 = 2 * v11;
        uint64_t v37 = v15 + 16;
        do
        {
          if ((int)v15 >= -31)
          {
            uint64_t v38 = 0;
            uint64_t result = v35 - 2 * v11;
            do
            {
              *(_OWORD *)(result + v38) = *(_OWORD *)(v35 + v38);
              *(_OWORD *)(v35 - v11 + v38) = *(_OWORD *)(v35 + v11 + v38);
              BOOL v39 = v38 < v37;
              v38 += 16;
            }
            while (v39);
          }
          v35 -= 2 * v11;
          ++v34;
        }
        while (v34 != 8);
        int v40 = 0;
        int v41 = (v17 - 2) * v11;
        uint64_t v42 = v13 + v41 - 16;
        uint64_t v43 = v11 + (uint64_t)v41;
        uint64_t v44 = 3 * v11 + v41;
        uint64_t v45 = v36 + v41 + v13 - 16;
        uint64_t v46 = v43 + v13 - 16;
        uint64_t v47 = v44 + v13 - 16;
        do
        {
          if ((int)v15 >= -31)
          {
            uint64_t v48 = -16;
            do
            {
              *(_OWORD *)(v45 + v48 + 16) = *(_OWORD *)(v42 + v48 + 16);
              *(_OWORD *)(v47 + v48 + 16) = *(_OWORD *)(v46 + v48 + 16);
              v48 += 16;
            }
            while (v48 < v37);
          }
          v42 += v36;
          ++v40;
          v45 += v36;
          v46 += v36;
          v47 += v36;
        }
        while (v40 != 8);
      }
    }
  }
  return result;
}

uint64_t sub_2219F5350(int a1, int *a2, int a3, uint64_t a4)
{
  if (a3 < 1) {
    goto LABEL_16;
  }
  uint64_t v4 = 0;
  int v5 = -2147483647;
  int v6 = -1;
  do
  {
    uint64_t v7 = *(void *)(a4 + 8 * v4);
    if (!v7) {
      break;
    }
    if (*(unsigned char *)(v7 + 1376) && *(unsigned char *)(v7 + 1372))
    {
      if (*(unsigned char *)(v7 + 1364)) {
        BOOL v8 = 0;
      }
      else {
        BOOL v8 = *(unsigned __int8 *)(v7 + 37) == a1;
      }
      if (v8)
      {
        int v9 = *(_DWORD *)(v7 + 1292);
        if (v9 < *a2 && v9 > v5)
        {
          int v5 = v9;
          int v6 = v4;
        }
      }
    }
    ++v4;
  }
  while (a3 != v4);
  if (v6 == -1)
  {
LABEL_16:
    uint64_t result = 0;
    *a2 = -2147483647;
  }
  else
  {
    *a2 = v5;
    return *(void *)(a4 + 8 * v6);
  }
  return result;
}

uint64_t sub_2219F53E8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (!*a1) {
    return 4294958327;
  }
  uint64_t v2 = *((int *)a1 + 204);
  if ((int)v2 <= 33)
  {
    do
      a1[v2++] = v1;
    while (v2 != 34);
  }
  uint64_t v3 = *((int *)a1 + 205);
  if ((int)v3 <= 33)
  {
    do
      a1[v3++ + 34] = v1;
    while (v3 != 34);
  }
  return 0;
}

uint64_t sub_2219F543C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 22816);
  unsigned int v5 = *(_DWORD *)(v4 + 12);
  if (v5 >= 0x44)
  {
    sub_2219F3B24(v4);
    uint64_t v4 = *(void *)(a2 + 22816);
    unsigned int v5 = *(_DWORD *)(v4 + 12);
    if (v5 > 0x43) {
      return 4294958327;
    }
  }
  uint64_t v6 = 0;
  *(unsigned char *)(a1 + 2) = 1;
  *(void *)(v4 + 8 * v5 + 216) = a1;
  ++*(_DWORD *)(*(void *)(a2 + 22816) + 12);
  return v6;
}

uint64_t sub_2219F54B4(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 8);
  uint64_t v3 = *(unsigned int *)(a2 + 12);
  if ((int)v3 < 1) {
    return (v2 >> 31) & 0xFFFFDCF7;
  }
  uint64_t v4 = 0;
  int v5 = 0;
  uint64_t v6 = (uint64_t *)(a2 + 216);
  int v7 = -1;
  int v8 = 0x7FFFFFFF;
  do
  {
    uint64_t v9 = v6[v4];
    if (*(unsigned char *)(v9 + 1372) && *(unsigned char *)(v9 + 1376) && (!*(unsigned char *)(v9 + 34) || !*(void *)(v9 + 1352)))
    {
      if (*(_DWORD *)(v9 + 1292) < v8 && !*(unsigned char *)(v9 + 1364))
      {
        int v7 = v4;
        int v8 = *(_DWORD *)(v9 + 1292);
      }
      ++v5;
    }
    ++v4;
  }
  while (v3 != v4);
  if (v5 <= v2) {
    return 0;
  }
  if (v7 < 0) {
    return 4294958327;
  }
  do
  {
    uint64_t v10 = *v6;
    if (*(_DWORD *)(*v6 + 1292) == v8)
    {
      if (*(unsigned char *)(v10 + 1376))
      {
        *(unsigned char *)(v10 + 1372) = 0;
        int v11 = *(unsigned char **)(v10 + 1352);
        if (v11)
        {
          if (v11[36])
          {
            v11[1372] = 0;
            v11[1377] = 1;
            *(void *)(v10 + 1352) = 0;
          }
        }
      }
    }
    ++v6;
    --v3;
  }
  while (v3);
  if (v5 - 1 == v2) {
    return 0;
  }
  else {
    return 4294958327;
  }
}

uint64_t sub_2219F55AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 22824);
  if (v2 == *(void *)(a1 + 22816))
  {
LABEL_20:
    uint64_t result = sub_2219F54B4(a1, *(void *)(a1 + 22816));
    if (!result)
    {
      uint64_t v11 = *(void *)(a1 + 22816);
      return sub_2219F3A40(0, v11);
    }
    return result;
  }
  if (v2 && (uint64_t v3 = *(unsigned int *)(v2 + 12), v3))
  {
    uint64_t v4 = v2 + 216;
    while (1)
    {
      BOOL v5 = *(unsigned char *)(*(void *)v4 + 1377) != 0;
      if (!*(unsigned char *)(*(void *)v4 + 1377)) {
        break;
      }
      v4 += 8;
      if (!--v3) {
        goto LABEL_9;
      }
    }
    int v6 = 0;
  }
  else
  {
    BOOL v5 = 1;
LABEL_9:
    int v6 = 1;
  }
  uint64_t result = sub_2219F3A40(v6, v2);
  if (!result)
  {
    if (v5)
    {
      uint64_t v8 = a1 + 16;
      uint64_t v9 = *(void *)(a1 + 22824);
      if (v9 && v9 != a1 + 22056)
      {
        uint64_t v8 = a1 + 776;
        uint64_t v10 = 29;
        while (v8 - 760 != v9)
        {
          v8 += 760;
          if (!--v10)
          {
            *(void *)(a1 + 22824) = 0;
            return 4294958327;
          }
        }
      }
      *(void *)(a1 + 22824) = v8;
    }
    goto LABEL_20;
  }
  return result;
}

void sub_2219F56A8(uint64_t a1)
{
  uint64_t v1 = 0;
  uint64_t v2 = (_DWORD *)(a1 + 228);
  do
  {
    *(v2 - 1) = 0;
    *uint64_t v2 = v1;
    *(void *)(v2 - 51) = 0;
    *(void *)(v2 - 53) = 0;
    *(v2 - 49) = 0;
    *(void *)(v2 - 45) = 0;
    ++v1;
    *(void *)(v2 - 47) = 0;
    *(void *)(v2 - 43) = 0xFFFFFFFFLL;
    v2 += 190;
  }
  while (v1 != 30);
  *(void *)(a1 + 23656) = 0;
  *(void *)(a1 + 23680) = 0;
  *(_DWORD *)(a1 + 23700) = 0;
  *(_OWORD *)(a1 + 22816) = 0u;
  bzero((void *)(a1 + 22840), 0x220uLL);
}

uint64_t sub_2219F570C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = 0;
  uint64_t v9 = *(void *)(a4 + 22816);
  if (*(unsigned char *)(a5 + 1362)) {
    int v10 = (2 * a2) | 1;
  }
  else {
    int v10 = a2;
  }
  while (2)
  {
    uint64_t result = *(unsigned int *)(a1 + 4 * v8);
    switch((int)result)
    {
      case 0:
        return result;
      case 1:
        uint64_t v12 = *(void *)(a4 + 22816);
        if (*(_DWORD *)(v12 + 12))
        {
          unint64_t v13 = 0;
          int v14 = v10 + ~*(_DWORD *)(a1 + 4 * v8 + 32);
          uint64_t v15 = v12 + 216;
          do
          {
            uint64_t v16 = *(void *)(v15 + 8 * v13);
            if (*(unsigned char *)(v16 + 1376) && !*(unsigned char *)(v16 + 1364) && *(unsigned char *)(v16 + 1372))
            {
              if (*(unsigned char *)(a5 + 1362)) {
                int v17 = (*(unsigned __int8 *)(v16 + 37) == *(unsigned __int8 *)(a5 + 37)) | (2 * *(_DWORD *)(v16 + 1292));
              }
              else {
                int v17 = *(_DWORD *)(v16 + 1292);
              }
              if (v17 == v14)
              {
                *(unsigned char *)(v16 + 1372) = 0;
                uint64_t v18 = *(unsigned char **)(*(void *)(v15 + 8 * v13) + 1352);
                if (v18)
                {
                  if (v18[36])
                  {
                    v18[1372] = 0;
                    v18[1377] = 1;
                    *(void *)(*(void *)(v15 + 8 * v13) + 1352) = 0;
                  }
                }
              }
            }
            ++v13;
          }
          while (v13 < *(unsigned int *)(v12 + 12));
        }
        goto LABEL_83;
      case 2:
        sub_2219F5BF0(a4, *(_DWORD *)(a1 + 4 * v8 + 64));
        goto LABEL_83;
      case 3:
        uint64_t v19 = a1 + 4 * v8;
        int v20 = *(_DWORD *)(v19 + 32);
        int v21 = *(_DWORD *)(v19 + 96);
        sub_2219F5BF0(a4, v21);
        uint64_t v22 = *(void *)(a4 + 22816);
        uint64_t v23 = *(unsigned int *)(v22 + 12);
        if (!v23) {
          goto LABEL_83;
        }
        uint64_t v24 = (uint64_t *)(v22 + 216);
        while (1)
        {
          uint64_t v25 = *v24;
          if (*(unsigned char *)(*v24 + 1376) && !*(unsigned char *)(v25 + 1364) && *(unsigned char *)(v25 + 1372))
          {
            int v26 = *(unsigned char *)(a5 + 1362)
                ? (*(unsigned __int8 *)(v25 + 37) == *(unsigned __int8 *)(a5 + 37)) | (2 * *(_DWORD *)(v25 + 1292))
                : *(_DWORD *)(v25 + 1292);
            if (v26 == v10 + ~v20) {
              break;
            }
          }
          ++v24;
          if (!--v23) {
            goto LABEL_83;
          }
        }
        *(unsigned char *)(v25 + 1364) = 1;
        *(_DWORD *)(*v24 + 1300) = v21;
        uint64_t v56 = *(void *)(*v24 + 1352);
        if (v56 && *(unsigned char *)(v56 + 36))
        {
          *(unsigned char *)(v56 + 1364) = 1;
          *(_DWORD *)(v56 + 1300) = v21;
        }
        goto LABEL_83;
      case 4:
        uint64_t v27 = *(void *)(a4 + 22816);
        *(_DWORD *)(v27 + 40) = *(_DWORD *)(a1 + 4 * v8 + 128) - 1;
        if (*(_DWORD *)(v27 + 12))
        {
          unint64_t v28 = 0;
          uint64_t v29 = v27 + 216;
          do
          {
            uint64_t v30 = *(void *)(v29 + 8 * v28);
            if (*(unsigned char *)(v30 + 1376))
            {
              if (*(unsigned char *)(v30 + 1364))
              {
                if (*(_DWORD *)(v30 + 1300) > *(_DWORD *)(v27 + 40))
                {
                  *(unsigned char *)(v30 + 1372) = 0;
                  *(unsigned char *)(*(void *)(v29 + 8 * v28) + 1364) = 0;
                  *(_DWORD *)(*(void *)(v29 + 8 * v28) + 1300) = -1;
                  uint64_t v31 = *(void *)(*(void *)(v29 + 8 * v28) + 1352);
                  if (v31)
                  {
                    if (*(unsigned char *)(v31 + 36))
                    {
                      *(unsigned char *)(v31 + 1372) = 0;
                      *(unsigned char *)(v31 + 1377) = 1;
                      *(unsigned char *)(v31 + 1364) = 0;
                      *(_DWORD *)(v31 + 1300) = -1;
                      *(void *)(*(void *)(v29 + 8 * v28) + 1352) = 0;
                    }
                  }
                }
              }
            }
            ++v28;
          }
          while (v28 < *(unsigned int *)(v27 + 12));
        }
        goto LABEL_83;
      case 5:
        *(_DWORD *)(v9 + 208) = 1;
        uint64_t v32 = *(void *)(a4 + 22816);
        unint64_t v33 = *(unsigned int *)(v32 + 12);
        if (v33)
        {
          unint64_t v34 = 0;
          uint64_t v35 = v32 + 216;
          do
          {
            uint64_t v36 = *(unsigned char **)(v35 + 8 * v34);
            if (v36[1376] && !v36[1364])
            {
              v36[1372] = 0;
              unint64_t v33 = *(unsigned int *)(v32 + 12);
            }
            ++v34;
          }
          while (v34 < v33);
          if (v33)
          {
            unint64_t v37 = 0;
            do
            {
              uint64_t v38 = *(unsigned char **)(v35 + 8 * v37);
              if (v38[1376])
              {
                if (v38[1364])
                {
                  v38[1372] = 0;
                  *(unsigned char *)(*(void *)(v35 + 8 * v37) + 1364) = 0;
                  *(_DWORD *)(*(void *)(v35 + 8 * v37) + 1300) = -1;
                  uint64_t v39 = *(void *)(*(void *)(v35 + 8 * v37) + 1352);
                  if (v39)
                  {
                    if (*(unsigned char *)(v39 + 36))
                    {
                      *(unsigned char *)(v39 + 1372) = 0;
                      *(unsigned char *)(v39 + 1377) = 1;
                      *(unsigned char *)(v39 + 1364) = 0;
                      *(_DWORD *)(v39 + 1300) = -1;
                      *(void *)(*(void *)(v35 + 8 * v37) + 1352) = 0;
                    }
                  }
                }
              }
              ++v37;
            }
            while (v37 < *(unsigned int *)(v32 + 12));
          }
        }
        uint64_t v40 = *(void *)(a4 + 22816);
        unsigned int v41 = *(_DWORD *)(v40 + 12);
        if (v41)
        {
          uint64_t v42 = v40 + 216;
          uint64_t v43 = (uint64_t *)(v40 + 216);
          uint64_t v44 = *(unsigned int *)(v40 + 12);
          do
          {
            uint64_t v45 = *v43;
            if (!*(unsigned char *)(*v43 + 1376)) {
              goto LABEL_60;
            }
            ++v43;
            --v44;
          }
          while (v44);
          uint64_t v45 = 0;
LABEL_60:
          uint64_t v46 = 0;
          while (1)
          {
            if (*(unsigned char *)(*(void *)(v42 + 8 * v46) + 1376))
            {
              if (v41) {
                goto LABEL_65;
              }
            }
            else
            {
              *(void *)(v42 + 8 * v46) = 0;
              if (v41)
              {
LABEL_65:
                uint64_t v47 = v41;
                uint64_t v48 = (void *)(v40 + 216);
                unsigned int v41 = 0;
                do
                {
                  if (*v48) {
                    *(void *)(v42 + 8 * v41++) = *v48;
                  }
                  ++v48;
                  --v47;
                }
                while (v47);
              }
            }
            *(_DWORD *)(v40 + 12) = v41;
            if (++v46 >= (unint64_t)v41) {
              goto LABEL_77;
            }
          }
        }
        uint64_t v45 = 0;
LABEL_77:
        if (!sub_2219F3C70(1, a4, 0, 0))
        {
          uint64_t v54 = *(void *)(a4 + 22816);
          uint64_t v55 = *(unsigned int *)(v54 + 12);
          if (v55 <= 0x43)
          {
            *(unsigned char *)(v45 + 2) = 1;
            *(void *)(v54 + 8 * v55 + 216) = v45;
            ++*(_DWORD *)(*(void *)(a4 + 22816) + 12);
            *(void *)(v45 + 1292) = 0;
            *(_DWORD *)(v45 + 1280) = 0;
            *(_DWORD *)(v54 + 16) = 0;
          }
        }
        goto LABEL_83;
      case 6:
        int v49 = *(_DWORD *)(a1 + 4 * v8 + 96);
        uint64_t v50 = *(void *)(a4 + 22816);
        sub_2219F5BF0(a4, v49);
        uint64_t v51 = *(unsigned int *)(v50 + 12);
        if (!v51) {
          goto LABEL_83;
        }
        int v52 = (uint64_t *)(v50 + 216);
        while (1)
        {
          uint64_t v53 = *v52;
          if (!*(unsigned char *)(*v52 + 1376)) {
            break;
          }
          ++v52;
          if (!--v51) {
            goto LABEL_83;
          }
        }
        if (*(unsigned char *)(v53 + 1372))
        {
          *(unsigned char *)(v53 + 1364) = 1;
          *(_DWORD *)(*v52 + 1300) = v49;
          if (*(_DWORD *)(v50 + 40) < v49) {
            *(_DWORD *)(v50 + 40) = v49;
          }
LABEL_83:
          if (++v8 == 8) {
            return 0;
          }
          continue;
        }
        return 4294958327;
      default:
        return 4294958327;
    }
  }
}

uint64_t sub_2219F5BF0(uint64_t result, int a2)
{
  uint64_t v2 = *(void *)(result + 22816);
  if (*(_DWORD *)(v2 + 12))
  {
    unint64_t v3 = 0;
    uint64_t v4 = v2 + 216;
    do
    {
      uint64_t v5 = *(void *)(v4 + 8 * v3);
      if (*(unsigned char *)(v5 + 1376))
      {
        if (*(unsigned char *)(v5 + 1364))
        {
          if (*(_DWORD *)(v5 + 1300) == a2)
          {
            *(unsigned char *)(v5 + 1372) = 0;
            *(unsigned char *)(*(void *)(v4 + 8 * v3) + 1364) = 0;
            *(_DWORD *)(*(void *)(v4 + 8 * v3) + 1300) = -1;
            uint64_t v6 = *(void *)(*(void *)(v4 + 8 * v3) + 1352);
            if (v6)
            {
              if (*(unsigned char *)(v6 + 36))
              {
                *(unsigned char *)(v6 + 1372) = 0;
                *(unsigned char *)(v6 + 1377) = 1;
                *(unsigned char *)(v6 + 1364) = 0;
                *(_DWORD *)(v6 + 1300) = -1;
                *(void *)(*(void *)(v4 + 8 * v3) + 1352) = 0;
              }
            }
          }
        }
      }
      ++v3;
    }
    while (v3 < *(unsigned int *)(v2 + 12));
  }
  return result;
}

uint64_t sub_2219F5C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if (*(_DWORD *)(a1 + 8) == 5) {
    goto LABEL_19;
  }
  uint64_t v8 = (_DWORD *)(a4 + 23696);
  uint64_t v9 = *(_DWORD **)(a4 + 22816);
  int v10 = *(_DWORD *)(a1 + 28);
  if (*(unsigned char *)(a2 + 1324))
  {
    if (!*(_DWORD *)(a4 + 23704))
    {
      if (!*(unsigned char *)(a1 + 32))
      {
        int v13 = v9[4];
        int v15 = v13 + 1;
        int v14 = *v8;
        goto LABEL_18;
      }
      if (*(unsigned char *)(a1 + 32) != 1)
      {
        int v38 = *(_DWORD *)(a1 + 28);
        int v13 = v9[4];
        int v14 = *v8;
        goto LABEL_24;
      }
      int v13 = v9[4];
      int v14 = *v8;
      if (v10 != (*v8 & v13))
      {
        int v15 = v13 + 1;
LABEL_18:
        if (v10 == (v15 & v14)) {
          goto LABEL_19;
        }
        int v38 = *(_DWORD *)(a1 + 28);
LABEL_24:
        uint64_t v22 = (char *)sub_221A12A48(0xAC0uLL);
        int v20 = v22;
        if (v22)
        {
          *(void *)(v22 + 4) = 1;
          unsigned int v40 = (v13 + 1) & v14;
          if (v40 == v38) {
            goto LABEL_20;
          }
          uint64_t v23 = 0;
          unint64_t v37 = v8;
LABEL_27:
          unsigned int v39 = 0;
          v20[7] = v40;
          uint64_t v24 = v23;
          while (1)
          {
            uint64_t v25 = v9[3];
            uint64_t v26 = sub_221A1518C(a3, 1);
            if (!v26) {
              break;
            }
            uint64_t v23 = (int32x4_t *)v26;
            bzero(*(void **)(v26 + 40), *(unsigned int *)(v26 + 56));
            if (v40 < v9[4] && (int)v25 >= 1)
            {
              int v27 = *(_DWORD *)(a2 + 1868);
              unint64_t v28 = v9 + 54;
              while (*(void *)v28)
              {
                *(_DWORD *)(*(void *)v28 + 1292) = *(_DWORD *)(*(void *)v28 + 1296) - v27;
                v28 += 2;
                if (!--v25) {
                  goto LABEL_34;
                }
              }
              break;
            }
LABEL_34:
            v23[80].i32[3] = v40;
            v23[81].i32[0] = v40;
            v23[85].i8[12] = 1;
            v23[86].i16[0] = 257;
            v23[85].i8[4] = 0;
            v23[2].i8[5] = v39;
            __int8 v29 = *(unsigned char *)(a1 + 32);
            v23[2].i8[0] = v29;
            v23[85].i8[2] = v29;
            v23[2].i8[1] = *(unsigned char *)(a1 + 32);
            v23[2].i8[2] = v39;
            v23[86].i8[3] = 1;
            v23->i32[3] = 0x7FFFFFFF;
            if (v39)
            {
              v24[84].i64[1] = (uint64_t)v23;
              v23[84].i64[1] = (uint64_t)v24;
            }
            if (*(unsigned char *)(a2 + 276))
            {
              uint64_t v30 = sub_2219F6058(a2, (uint64_t)v20, v9);
              if (v30) {
                goto LABEL_54;
              }
            }
            v23[80].i32[0] = 1000000;
            int v31 = 32 - 16 * *(unsigned __int8 *)(a2 + 1336);
            signed int v32 = (v31 + v31 * *(_DWORD *)(a2 + 1332)) >> (*(unsigned char *)(a1 + 32) != 0);
            v23[8] = vdupq_n_s32(v32);
            v23[9] = vdupq_n_s32(v32 >> 1);
            v23[37].i32[2] = v32 | 2;
            v23[37].i32[3] = v32 - 1;
            if (a5 != 2)
            {
              uint64_t v33 = v23[26].i64[0];
              if (v33)
              {
                *(_DWORD *)(v33 + 72) = 1;
                *(void *)(v33 + 64) = 0x100000001;
                *(_OWORD *)(v33 + 128) = xmmword_221A366C0;
              }
              uint64_t v34 = v23[26].i64[1];
              if (v34)
              {
                *(_DWORD *)(v34 + 72) = 1;
                *(void *)(v34 + 64) = 0x100000001;
                *(_OWORD *)(v34 + 128) = xmmword_221A366C0;
              }
              uint64_t v35 = v23[27].i64[0];
              if (v35)
              {
                *(_DWORD *)(v35 + 72) = 1;
                *(void *)(v35 + 64) = 0x100000001;
                *(_OWORD *)(v35 + 128) = xmmword_221A366C0;
              }
              sub_221926888((uint64_t)v23[2].i64, v23[11].i32[2]);
            }
            uint64_t v30 = sub_2219F55AC(a4);
            if (v30) {
              goto LABEL_54;
            }
            if (sub_2219F543C((uint64_t)v23, a4)) {
              break;
            }
            v9[4] = v40;
            uint64_t v30 = sub_2219F55AC(a4);
            if (v30)
            {
LABEL_54:
              uint64_t v19 = v30;
              goto LABEL_21;
            }
            uint64_t v24 = v23;
            if (v39++ >= *(unsigned __int8 *)(a1 + 32))
            {
              unsigned int v40 = *v37 & (v40 + 1);
              if (v40 != v38) {
                goto LABEL_27;
              }
              goto LABEL_20;
            }
          }
        }
        uint64_t v19 = 4294958327;
        goto LABEL_21;
      }
    }
LABEL_19:
    int v20 = 0;
LABEL_20:
    uint64_t v19 = 0;
    goto LABEL_21;
  }
  int v16 = *(_DWORD *)(a1 + 20);
  if (v16 != 7 && v16 != 2) {
    goto LABEL_19;
  }
  if (!*(_DWORD *)(a1 + 4)) {
    goto LABEL_19;
  }
  int v18 = v9[4];
  if (v10 == v18 || v10 == (*v8 & (v18 + 1))) {
    goto LABEL_19;
  }
  v9[1] = 0;
  v9[2] = 0;
  uint64_t v19 = sub_2219F6058(a2, a1, v9);
  int v20 = 0;
  v8[2] = 1;
  v8[3] = **(_DWORD **)(a4 + 22816);
LABEL_21:
  j__free(v20);
  return v19;
}

uint64_t sub_2219F6058(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  int v3 = *(unsigned __int8 *)(a1 + 276);
  if (v3 == 2)
  {
    uint64_t v12 = *(unsigned __int8 *)(a2 + 33);
    int v13 = *(_DWORD *)(a2 + 28);
    if (*(_DWORD *)(a2 + 8) == 5)
    {
      int v14 = 0;
      if (v13)
      {
        uint64_t v12 = 4294966630;
        int v15 = 0;
        goto LABEL_68;
      }
      int v15 = 0;
    }
    else
    {
      int v27 = *(_DWORD *)(a1 + 1868);
      if (v13 >= a3[9]) {
        int v27 = 0;
      }
      int v15 = v27 + a3[8];
    }
    int v14 = (__PAIR64__(2 * (v15 + v13), *(_DWORD *)(a2 + 4)) - 1) >> 32;
    if (*(unsigned char *)(a2 + 32))
    {
      if (!*(unsigned char *)(a2 + 33))
      {
        a3[7] = v14;
        do
        {
LABEL_68:
          uint64_t result = v12;
          *a3 = v14;
          uint64_t v12 = 4294958327;
        }
        while (*(_DWORD *)(a2 + 8) == 5 && v14 != 0);
        goto LABEL_82;
      }
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v12 = 0;
      a3[7] = v14;
    }
    a3[6] = v14;
    goto LABEL_68;
  }
  if (v3 == 1)
  {
    int v16 = *(_DWORD *)(a1 + 288);
    uint64_t v17 = *(unsigned int *)(a1 + 296);
    int v18 = *(_DWORD *)(a1 + 292);
    int v13 = *(_DWORD *)(a2 + 28);
    int v19 = *(_DWORD *)(a2 + 48);
    int v20 = *(_DWORD *)(a2 + 4);
    if (*(_DWORD *)(a2 + 8) == 5)
    {
      int v21 = 0;
      if (v13)
      {
        uint64_t result = 4294958327;
        int v15 = 0;
LABEL_81:
        *a3 = v21;
LABEL_82:
        if (a3[52])
        {
          int v15 = 0;
          int v13 = 0;
        }
        a3[8] = v15;
        a3[9] = v13;
        goto LABEL_85;
      }
      int v15 = 0;
    }
    else
    {
      int v28 = *(_DWORD *)(a1 + 1868);
      if (v13 >= a3[9]) {
        int v28 = 0;
      }
      int v15 = v28 + a3[8];
    }
    __int8 v29 = (int *)(a1 + 300);
    int v30 = v15 + v13;
    if (!v17) {
      int v30 = 0;
    }
    if (v20) {
      BOOL v31 = 1;
    }
    else {
      BOOL v31 = v30 <= 0;
    }
    int v32 = !v31;
    int v33 = v30 - v32;
    if ((int)v17 < 1)
    {
      int v34 = 0;
      if (v33) {
        goto LABEL_53;
      }
    }
    else
    {
      int v34 = 0;
      uint64_t v35 = v29;
      uint64_t v36 = v17;
      do
      {
        int v37 = *v35++;
        v34 += v37;
        --v36;
      }
      while (v36);
      if (v33)
      {
LABEL_53:
        int v38 = v33 - 1;
        int v39 = v38 / (int)v17;
        int v40 = v38 % (int)v17;
        int v41 = v39 * v34;
        if ((v40 & 0x80000000) == 0)
        {
          uint64_t v42 = (v40 + 1);
          do
          {
            int v43 = *v29++;
            v41 += v43;
            --v42;
          }
          while (v42);
        }
        goto LABEL_59;
      }
    }
    int v41 = 0;
LABEL_59:
    if (v20) {
      int v16 = 0;
    }
    int v44 = v41 + v16;
    if (*(unsigned char *)(a2 + 32))
    {
      if (*(unsigned char *)(a2 + 33))
      {
        int v21 = v19 + v18 + v44;
        a3[6] = v21;
      }
      else
      {
        int v21 = v44 + v19;
        a3[7] = v44 + v19;
      }
    }
    else
    {
      int v45 = v44 + v19;
      int v46 = *(_DWORD *)(a2 + 52) + v18 + v45;
      a3[6] = v46;
      a3[7] = v45;
      if (v45 >= v46) {
        int v21 = v46;
      }
      else {
        int v21 = v45;
      }
    }
    if (v21) {
      BOOL v48 = *(_DWORD *)(a2 + 8) == 5;
    }
    else {
      BOOL v48 = 0;
    }
    if (v48) {
      uint64_t result = 4294958327;
    }
    else {
      uint64_t result = 0;
    }
    goto LABEL_81;
  }
  if (*(unsigned char *)(a1 + 276)) {
    return 4294958327;
  }
  int v4 = *(_DWORD *)(a2 + 40);
  int v5 = *(_DWORD *)(a2 + 44);
  int v6 = *(unsigned __int8 *)(a2 + 32);
  int v7 = *(unsigned __int8 *)(a2 + 33);
  if (*(_DWORD *)(a2 + 8) == 5)
  {
    if (!*(_DWORD *)(a2 + 28))
    {
      uint64_t result = 0;
      a3[6] = v5;
      goto LABEL_85;
    }
    int v8 = 0;
    int v9 = 0;
    int v10 = 0;
    uint64_t result = 4294958327;
  }
  else
  {
    int v22 = *(_DWORD *)(a1 + 1872);
    int v24 = a3[1];
    int v23 = a3[2];
    if (v4 < v24 && (v22 >= 0 ? (int v25 = *(_DWORD *)(a1 + 1872)) : (int v25 = v22 + 1), v24 - v4 >= v25 >> 1))
    {
      int v9 = v23 + v22;
    }
    else
    {
      if (v22 >= 0) {
        int v26 = *(_DWORD *)(a1 + 1872);
      }
      else {
        int v26 = v22 + 1;
      }
      if (v4 - v24 <= v26 >> 1) {
        int v22 = 0;
      }
      int v9 = v23 - v22;
      if (v4 <= v24) {
        int v9 = a3[2];
      }
    }
    int v10 = v9 + v4;
    uint64_t result = 0;
    if (*(unsigned char *)(a2 + 32))
    {
      if (*(unsigned char *)(a2 + 33)) {
        a3[6] = v10;
      }
      else {
        a3[7] = v10;
      }
      int v8 = v9 + v4;
    }
    else
    {
      int v8 = v10 + v5;
      a3[6] = v8;
      a3[7] = v10;
      if (v10 < v8) {
        int v8 = v9 + v4;
      }
    }
  }
  *a3 = v8;
  if (*(_DWORD *)(a2 + 4))
  {
    if (a3[52])
    {
      if (v6)
      {
        a3[2] = 0;
        if (v7)
        {
          a3[1] = 0;
          goto LABEL_85;
        }
      }
      else
      {
        a3[2] = 0;
      }
      a3[1] = v10;
    }
    else
    {
      a3[1] = v4;
      a3[2] = v9;
    }
  }
LABEL_85:
  a3[52] = 0;
  if (*(unsigned char *)(a2 + 32))
  {
    if (*(unsigned char *)(a2 + 33)) {
      a3[7] = 0x7FFFFFFF;
    }
    else {
      a3[6] = 0x7FFFFFFF;
    }
  }
  return result;
}

uint64_t sub_2219F6388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, int a7, int a8, int a9, int a10)
{
  uint64_t v12 = (_DWORD *)(a4 + 22836);
  int v13 = *(_DWORD *)(a2 + 8);
  if (!*(_DWORD *)(a4 + 22836))
  {
    uint64_t v22 = 0;
LABEL_12:
    uint64_t v23 = 0;
    goto LABEL_25;
  }
  __int32 v70 = *(unsigned __int8 *)(a2 + 32);
  int v71 = *(_DWORD *)(a2 + 4);
  __int32 v69 = *(unsigned __int8 *)(a2 + 33);
  *uint64_t v12 = 0;
  sub_221A341D0(*(pthread_mutex_t **)a4);
  if (v13 == 5)
  {
    *(void *)(a4 + 23704) = 0;
    *(_DWORD *)(a4 + 8) = *(_DWORD *)(a1 + 1320);
    v12[215] = *(_DWORD *)(a1 + 1868) - 1;
    if (!a7)
    {
      unint64_t v19 = *(unsigned int *)(a3 + 48);
      if (v19)
      {
        for (unint64_t i = 0; i < v19; ++i)
        {
          uint64_t v21 = *(void *)(*(void *)(a3 + 40) + 8 * i);
          if (v21)
          {
            *(unsigned char *)(v21 + 1372) = 0;
            unint64_t v19 = *(unsigned int *)(a3 + 48);
          }
          else
          {
            ++*(_DWORD *)(a3 + 56);
          }
        }
      }
    }
  }
  else if (!*(void *)(a4 + 22816))
  {
    *(void *)(a4 + 23704) = 0x8000000100000001;
    *(_DWORD *)(a4 + 8) = *(_DWORD *)(a1 + 1320);
    v12[215] = *(_DWORD *)(a1 + 1868) - 1;
    int v34 = *(_DWORD *)(a2 + 20);
    if (v34 != 7 && v34 != 2)
    {
      uint64_t v22 = 0;
      uint64_t v23 = 4294958327;
      goto LABEL_25;
    }
  }
  int v72 = a5;
  if (!*(void *)(a4 + 22816))
  {
    *(int32x2_t *)(a4 + 23712) = vdup_n_s32(0x80000001);
    v12[221] = -2147483647;
    *(_OWORD *)(a4 + 23728) = 0u;
  }
  unsigned int v24 = a7 & 0xFFFFFFFD;
  if ((a7 & 0xFFFFFFFD) == 1) {
    int v25 = a7;
  }
  else {
    int v25 = 0;
  }
  if (v24 == 1) {
    int v26 = a8;
  }
  else {
    int v26 = 0;
  }
  uint64_t v27 = sub_2219F3C70(v13 == 5, a4, v25, v26);
  if (v27)
  {
    uint64_t v23 = v27;
    uint64_t v22 = 0;
LABEL_24:
    a5 = v72;
    goto LABEL_25;
  }
  sub_2219F3BE8(a4);
  if ((a6 & 0xFFFFFFFD) == 5)
  {
    uint64_t v29 = *(void *)(a4 + 22816);
    if (*(_DWORD *)(v29 + 12))
    {
      int v30 = *(_DWORD *)(a2 + 20);
      if (v30 == 7 || v30 == 2)
      {
        unint64_t v31 = 0;
        do
          *(unsigned char *)(*(void *)(v29 + 216 + 8 * v31++) + 1372) = 0;
        while (v31 < *(unsigned int *)(v29 + 12));
        sub_2219F3A40(1, *(void *)(a4 + 22816));
        v12[218] = -2147483647;
      }
    }
  }
  int v68 = a6;
  sub_2219F5C80(a2, a1, a3, a4, a6);
  uint64_t v32 = sub_221A1518C(a3, 1);
  uint64_t v22 = v32;
  if (!v32)
  {
LABEL_70:
    uint64_t v23 = 4294958327;
    goto LABEL_24;
  }
  uint64_t v33 = sub_2219F543C(v32, a4);
  if (v33)
  {
    uint64_t v23 = v33;
    goto LABEL_24;
  }
  int v35 = a10;
  BOOL v36 = (a7 & 0xFD) != 1;
  int v37 = *(int **)(a4 + 22816);
  if (a8 && v24 == 1)
  {
    BOOL v38 = 0;
    int v39 = v71;
  }
  else
  {
    v37[11] = *(unsigned __int8 *)(a2 + 2544);
    if (*(unsigned char *)(a2 + 2544))
    {
      long long v55 = *(_OWORD *)(a2 + 2564);
      *((_OWORD *)v37 + 3) = *(_OWORD *)(a2 + 2548);
      *((_OWORD *)v37 + 4) = v55;
      long long v56 = *(_OWORD *)(a2 + 2580);
      long long v57 = *(_OWORD *)(a2 + 2596);
      long long v58 = *(_OWORD *)(a2 + 2628);
      *((_OWORD *)v37 + 7) = *(_OWORD *)(a2 + 2612);
      *((_OWORD *)v37 + 8) = v58;
      *((_OWORD *)v37 + 5) = v56;
      *((_OWORD *)v37 + 6) = v57;
      long long v59 = *(_OWORD *)(a2 + 2644);
      long long v60 = *(_OWORD *)(a2 + 2660);
      long long v61 = *(_OWORD *)(a2 + 2692);
      *((_OWORD *)v37 + 11) = *(_OWORD *)(a2 + 2676);
      *((_OWORD *)v37 + 12) = v61;
      *((_OWORD *)v37 + 9) = v59;
      *((_OWORD *)v37 + 10) = v60;
    }
    uint64_t v62 = sub_2219F6058(a1, a2, v37);
    uint64_t v23 = v62;
    int v63 = v12[218];
    if (v63 == -2147483647)
    {
      BOOL v38 = 0;
      v12[218] = *v37;
      BOOL v36 = v24 != 1;
    }
    else
    {
      BOOL v36 = v24 != 1;
      if (v12[217] && *v37 < v63)
      {
        int v64 = *(_DWORD *)(a2 + 20);
        BOOL v38 = v64 != 2 && v64 != 7;
      }
      else
      {
        BOOL v38 = 0;
      }
    }
    if (v62) {
      goto LABEL_24;
    }
    if (v13 == 5)
    {
      *(int32x2_t *)(a4 + 23712) = vdup_n_s32(0x80000001);
      int v39 = v71;
      int v35 = a10;
    }
    else
    {
      int v39 = v71;
      int v35 = a10;
      if (a10 && (a10 & 1) == 0)
      {
        int v66 = *v37;
        int v67 = v12[219];
        if (*v37 <= v67)
        {
          v12[220] = v66;
          v12[226] = a10;
        }
        else
        {
          v12[220] = v67;
          v12[219] = v66;
          v12[226] = v12[225];
          v12[225] = a10;
        }
      }
    }
  }
  unsigned int v40 = *(_DWORD *)(a2 + 28);
  int v41 = v37[3];
  if (v40 < v37[4] && v41 >= 1)
  {
    int v42 = *(_DWORD *)(a1 + 1868);
    int v43 = v37 + 54;
    uint64_t v44 = v37[3];
    while (*(void *)v43)
    {
      *(_DWORD *)(*(void *)v43 + 1292) = *(_DWORD *)(*(void *)v43 + 1296) - v42;
      v43 += 2;
      if (!--v44)
      {
        unsigned int v40 = *(_DWORD *)(a2 + 28);
        goto LABEL_48;
      }
    }
    goto LABEL_70;
  }
LABEL_48:
  BOOL v45 = v39 > 0 && v24 == 1;
  BOOL v46 = v39 > 0 && v36;
  if (a8) {
    BOOL v45 = 0;
  }
  if (v45 || v46)
  {
    v37[4] = v40;
    v12[216] = *(_DWORD *)(a2 + 28);
    unsigned int v40 = *(_DWORD *)(a2 + 28);
  }
  char v47 = *(unsigned char *)(a2 + 2709);
  int v48 = *(_DWORD *)(a2 + 2712);
  int v49 = *(_DWORD *)(a2 + 20);
  unsigned __int8 v50 = *(unsigned char *)(a2 + 60);
  int32x2_t v51 = *(int32x2_t *)(v37 + 6);
  *(_DWORD *)(v22 + 1280) = *v37;
  *(int32x2_t *)(v22 + 1284) = vrev64_s32(v51);
  *(unsigned char *)(v22 + 1364) = v47;
  *(_DWORD *)(v22 + 1300) = v48;
  *(unsigned char *)(v22 + 1372) = v39 > 0;
  *(unsigned char *)(v22 + 1371) = v13 == 5;
  *(unsigned char *)(v22 + 1379) = v38;
  *(_WORD *)(v22 + 1376) = 0;
  *(unsigned char *)(v22 + 1369) = v49;
  *(_DWORD *)(v22 + 1292) = v40;
  *(_DWORD *)(v22 + 1296) = v40;
  *(_WORD *)(v22 + 1366) = v50;
  *(void *)(v22 + 1352) = 0;
  *(_DWORD *)(v22 + 1264) = v35;
  if (v24 == 1) {
    *(unsigned char *)(v22 + 1361) = a8;
  }
  a5 = v72;
  if (a9) {
    *(unsigned char *)(v22 + 4) = 0;
  }
  sub_2219F6908((int32x4_t *)v22, v70, v69, a1, a2, v41, (int32x4_t **)v37 + 27, a3, a4, v68);
  if (*(_DWORD *)(a2 + 8) == 5) {
    goto LABEL_12;
  }
  sub_2219F6D50(v22, *(void *)(a4 + 22816));
  if (a3) {
    sub_2219F6DE0(a3, v35);
  }
  uint64_t v23 = sub_2219F40F8((int8x16_t *)(a4 + 22840), *(_DWORD *)(a2 + 20), v22, *(void *)(a4 + 22816), v52, v53, 0, 0, 0, 0);
  if (!v23)
  {
    int v54 = *(_DWORD *)(a2 + 20);
    if (v54 != 2 && v54 != 7) {
      uint64_t v23 = sub_2219F6EA4(a1, a2, v22, a3, a4, v68);
    }
  }
LABEL_25:
  *a5 = v22;
  sub_221A341DC(*(pthread_mutex_t **)a4);
  return v23;
}

uint64_t sub_2219F6908(int32x4_t *a1, __int32 a2, __int32 a3, uint64_t a4, uint64_t a5, int a6, int32x4_t **a7, uint64_t a8, uint64_t a9, int a10)
{
  uint64_t v17 = *(void *)(a9 + 22816);
  a1[2].i8[0] = a2;
  int v18 = a1 + 2;
  v18[83].i8[2] = a2;
  v18[77].i32[1] = v18[79].i32[0] + 1000 * a2 + 1000;
  v18->i8[1] = a2;
  v18->i8[4] = 0;
  v18->i8[5] = a3;
  v18->i8[6] = a3;
  v18[-2].i32[3] = -1;
  int v19 = 32 - 16 * *(unsigned __int8 *)(a4 + 1336);
  signed int v20 = (v19 + v19 * *(_DWORD *)(a4 + 1332)) >> (a2 != 0);
  v18[6] = vdupq_n_s32(v20);
  v18[7] = vdupq_n_s32(v20 >> 1);
  v18[35].i32[2] = v20 | 2;
  v18[35].i32[3] = v20 - 1;
  if (a10 != 2)
  {
    uint64_t v21 = a1[26].i64[0];
    if (v21)
    {
      *(_DWORD *)(v21 + 72) = 1;
      *(void *)(v21 + 64) = 0x100000001;
      *(_OWORD *)(v21 + 128) = xmmword_221A366C0;
    }
    uint64_t v22 = a1[26].i64[1];
    if (v22)
    {
      *(_DWORD *)(v22 + 72) = 1;
      *(void *)(v22 + 64) = 0x100000001;
      *(_OWORD *)(v22 + 128) = xmmword_221A366C0;
    }
    uint64_t v23 = a1[27].i64[0];
    if (v23)
    {
      *(_DWORD *)(v23 + 72) = 1;
      *(void *)(v23 + 64) = 0x100000001;
      *(_OWORD *)(v23 + 128) = xmmword_221A366C0;
    }
    sub_221926888((uint64_t)v18, a1[11].i32[2]);
  }
  a1[2].i8[2] = 0;
  if (a2)
  {
    a1[2].i8[5] = a3;
    a1[2].i8[6] = a3;
    a1[84].i64[1] = 0;
    if (a6 < 1) {
      goto LABEL_25;
    }
    unsigned int v24 = 0;
    uint64_t v25 = a6;
    do
    {
      int v26 = *a7;
      if (*a7
        && v26[85].i8[2]
        && !v26[84].i64[1]
        && v26[81].i32[0] == a1[81].i32[0]
        && v26[85].u8[12] == a1[85].u8[12]
        && v26 != a1
        && v26[2].u8[5] != a1[2].u8[5])
      {
        v26[84].i64[1] = (uint64_t)a1;
        a1[84].i64[1] = (uint64_t)v26;
        unsigned int v24 = v26;
      }
      ++a7;
      --v25;
    }
    while (v25);
    if (!v24) {
      goto LABEL_25;
    }
    a1[2].i8[2] = 1;
    uint64_t v27 = (uint64_t)a1;
    goto LABEL_23;
  }
  if (!*(unsigned char *)(a4 + 1336) && a1[85].i8[12])
  {
    *(__int16 *)((char *)&a1[2].i16[2] + 1) = 0;
    uint64_t result = sub_221A1518C(a8, 1);
    if (!result) {
      return result;
    }
    uint64_t v27 = result;
    if (*(unsigned char *)(result + 1363) != 1) {
      return result;
    }
    uint64_t result = sub_2219F543C(result, a9);
    if (result) {
      return result;
    }
    *(unsigned char *)(v27 + 32) = 1;
    *(unsigned char *)(v27 + 1362) = 1;
    *(unsigned char *)(v27 + 36) = 1;
    *(_WORD *)(v27 + 33) = 257;
    *(_WORD *)(v27 + 37) = 257;
    *(_DWORD *)(v27 + 1268) = a1[81].i32[0] + 5000;
    int v41 = *(_DWORD *)(v17 + 24);
    char v42 = *(unsigned char *)(a5 + 2709);
    int v43 = *(_DWORD *)(a5 + 2712);
    __int8 v44 = a1[85].i8[12];
    int v45 = *(_DWORD *)(a5 + 20);
    int v46 = *(_DWORD *)(a5 + 28);
    unsigned __int8 v47 = *(unsigned char *)(a5 + 60);
    __int32 v48 = a1[79].i32[0];
    *(_DWORD *)(v27 + 1280) = v41;
    *(_DWORD *)(v27 + 1284) = 0x7FFFFFFF;
    *(_DWORD *)(v27 + 1288) = v41;
    *(unsigned char *)(v27 + 1364) = v42;
    *(_DWORD *)(v27 + 1300) = v43;
    *(unsigned char *)(v27 + 1372) = v44;
    *(unsigned char *)(v27 + 1371) = 0;
    *(unsigned char *)(v27 + 1379) = 0;
    *(_WORD *)(v27 + 1376) = 0;
    *(unsigned char *)(v27 + 1369) = v45;
    *(_DWORD *)(v27 + 1292) = v46;
    *(_DWORD *)(v27 + 1296) = v46;
    *(_WORD *)(v27 + 1366) = v47;
    *(void *)(v27 + 1352) = 0;
    *(_DWORD *)(v27 + 1264) = v48;
    *(unsigned char *)(v27 + 4) = 0;
    int v49 = 32 - 16 * *(unsigned __int8 *)(a4 + 1336);
    int v50 = v49 + v49 * *(_DWORD *)(a4 + 1332);
    *(int32x4_t *)(v27 + 128) = vdupq_n_s32(v50 >> 1);
    *(int32x4_t *)(v27 + 144) = vdupq_n_s32(v50 >> 2);
    *(_DWORD *)(v27 + 600) = (v50 >> 1) | 2;
    *(_DWORD *)(v27 + 604) = (v50 >> 1) - 1;
    if (a10 != 2)
    {
      uint64_t v51 = *(void *)(v27 + 416);
      if (v51)
      {
        *(_DWORD *)(v51 + 72) = 1;
        *(void *)(v51 + 64) = 0x100000001;
        *(_OWORD *)(v51 + 128) = xmmword_221A366C0;
      }
      uint64_t v52 = *(void *)(v27 + 424);
      if (v52)
      {
        *(_DWORD *)(v52 + 72) = 1;
        *(void *)(v52 + 64) = 0x100000001;
        *(_OWORD *)(v52 + 128) = xmmword_221A366C0;
      }
      uint64_t v53 = *(void *)(v27 + 432);
      if (v53)
      {
        *(_DWORD *)(v53 + 72) = 1;
        *(void *)(v53 + 64) = 0x100000001;
        *(_OWORD *)(v53 + 128) = xmmword_221A366C0;
      }
      sub_221926888(v27 + 32, *(_DWORD *)(v27 + 184));
    }
    *(void *)(v27 + 1352) = a1;
    a1[84].i64[1] = v27;
    unsigned int v24 = a1;
LABEL_23:
    *(void *)(v27 + 64) = v24[4].i64[0];
    *(void *)(v27 + 72) = v24[4].i64[1];
  }
LABEL_25:
  uint64_t result = sub_221A0582C(a4, (uint64_t)v55, 1);
  if (!result)
  {
    a1[20].i32[2] = v59;
    __int32 v29 = v55[0];
    int v30 = v55[1];
    __int32 v31 = v55[2];
    __int32 v32 = v56;
    __int32 v33 = v57;
    __int32 v34 = v58;
    a1[15].i32[0] = v56;
    a1[15].i32[1] = v33;
    a1[15].i32[2] = v34;
    a1[13].i32[2] = v29;
    a1[13].i32[3] = v32 - v31;
    int v35 = v34 - v33;
    if (v34 >= v33) {
      int v36 = v34 - v33;
    }
    else {
      int v36 = v35 + 1;
    }
    int v37 = v36 >> 1;
    if (v30 >= 0) {
      int v38 = v30;
    }
    else {
      int v38 = v30 + 1;
    }
    if (a2) {
      int v35 = v37;
    }
    a1[14].i32[2] = v35;
    a1[14].i32[3] = v31;
    int v39 = v38 >> 1;
    if (!a2) {
      int v39 = v30;
    }
    a1[14].i32[0] = v30;
    a1[14].i32[1] = v39;
    a1[13].i32[0] = 2 * v29;
    a1[16].i32[0] = a2;
    a1[16].i32[1] = a3;
    __int32 v40 = a1[2].u8[2];
    a1[16].i32[2] = v40;
    a1[16].i32[3] = v40;
    a1[18].i32[3] = 99999;
    a1[20].i8[4] = *(unsigned char *)(a4 + 16) == 0;
  }
  return result;
}

uint64_t sub_2219F6D50(uint64_t result, uint64_t a2)
{
  if (*(unsigned char *)(result + 1372))
  {
    uint64_t v2 = *(unsigned int *)(a2 + 12);
    if (!*(unsigned char *)(result + 1361) && (int)v2 >= 1)
    {
      int v4 = *(unsigned __int8 *)(result + 37);
      int v5 = *(_DWORD *)(result + 1292);
      int v6 = (uint64_t *)(a2 + 216);
      do
      {
        uint64_t v7 = *v6;
        if (!*v6) {
          break;
        }
        if (v7 != result && *(unsigned char *)(v7 + 1372))
        {
          if (!*(unsigned char *)(v7 + 1376)) {
            *(unsigned char *)(v7 + 1376) = 1;
          }
          if (!*(unsigned char *)(v7 + 1364)
            && (*(unsigned __int8 *)(v7 + 37) == v4 || *(unsigned char *)(v7 + 1362) == 0)
            && *(_DWORD *)(v7 + 1292) >= v5)
          {
            *(unsigned char *)(v7 + 1372) = 0;
            *(unsigned char *)(v7 + 1377) = 1;
            *(unsigned char *)(v7 + 2) = 0;
          }
        }
        ++v6;
        --v2;
      }
      while (v2);
    }
  }
  return result;
}

uint64_t sub_2219F6DE0(uint64_t a1, int a2)
{
  unint64_t v2 = *(unsigned int *)(a1 + 48);
  if (!v2) {
    return 0;
  }
  int v3 = 0;
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(unsigned int *)(a1 + 48);
  do
  {
    if (*(void *)v4 && *(unsigned char *)(*(void *)v4 + 1372)) {
      ++v3;
    }
    v4 += 8;
    --v5;
  }
  while (v5);
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8 * v6);
    if (!v7) {
      break;
    }
    int v8 = *(_DWORD *)(v7 + 1264);
    int v9 = a2 - v8;
    if (v8 > a2) {
      int v9 = v8 - a2;
    }
    if (v9 >= 41 && v8 && *(unsigned char *)(v7 + 1364) == 0)
    {
      if (*(unsigned char *)(v7 + 1372)) {
        BOOL v11 = v3 < 4;
      }
      else {
        BOOL v11 = 0;
      }
      if (!v11)
      {
        v3 -= *(unsigned __int8 *)(v7 + 1372) != 0;
        *(unsigned char *)(v7 + 1377) = 1;
        *(unsigned char *)(v7 + 1372) = 0;
        *(_WORD *)(v7 + 1) = 0;
        unint64_t v2 = *(unsigned int *)(a1 + 48);
      }
    }
    if (++v6 >= v2) {
      return 0;
    }
  }
  ++*(_DWORD *)(a1 + 56);
  return 4294958327;
}

uint64_t sub_2219F6EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6 = (int8x16_t *)(a5 + 22840);
  if (*(_DWORD *)(a5 + 23656))
  {
LABEL_2:
    return sub_2219F53E8(v6->i64);
  }
  uint64_t v14 = *(void *)(a5 + 22816);
  uint64_t v15 = sub_221A1518C(a4, 1);
  if (!v15) {
    return 4294967188;
  }
  uint64_t v16 = v15;
  *(_DWORD *)(v15 + 1264) = -1;
  uint64_t result = sub_2219F543C(v15, a5);
  if (result) {
    return result;
  }
  char v17 = *(unsigned char *)(a2 + 60);
  int v18 = *(_DWORD *)(a3 + 1264);
  BOOL v19 = v18 != 0;
  int v20 = v18 - 1;
  if (v20 == 0 || !v19) {
    int v20 = 1;
  }
  *(unsigned char *)(v16 + 1364) = 0;
  *(_WORD *)(v16 + 1371) = 256;
  *(unsigned char *)(v16 + 1379) = 0;
  *(_WORD *)(v16 + 1376) = 257;
  *(unsigned char *)(v16 + 1369) = 2;
  *(void *)(v16 + 1288) = 0;
  *(void *)(v16 + 1280) = 0;
  *(void *)(v16 + 1296) = 0xFFFFFFFF00000000;
  *(unsigned char *)(v16 + 1366) = v17;
  *(unsigned char *)(v16 + 1367) = 0;
  *(void *)(v16 + 1352) = 0;
  *(_DWORD *)(v16 + 1264) = v20;
  *(unsigned char *)(v16 + 4) = 1;
  if (*(_DWORD *)(a4 + 48) - 256 > -2) {
    return 4294967188;
  }
  sub_2219F6908((int32x4_t *)v16, 0, 0, a1, a2, *(_DWORD *)(v14 + 12), 0, a4, a5, a6);
  sub_22191ABB8(v16 + 32);
  uint64_t result = sub_2219F40F8(v6, *(_DWORD *)(a2 + 20), a3, *(void *)(a5 + 22816), v21, v22, 0, 0, 0, 0);
  if (!result)
  {
    if (v6[51].i32[0] < 1) {
      return 4294958327;
    }
    goto LABEL_2;
  }
  return result;
}

uint64_t sub_2219F7054(int a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t i = *(void *)(a2 + 22824);
  uint64_t v6 = *(void *)(a2 + 22816);
  if (i) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    uint64_t result = 0;
    uint64_t v10 = a2 + 16;
    uint64_t v11 = a2 + 22056;
    uint64_t v12 = a2 + 776;
    while (1)
    {
      uint64_t v13 = i;
      uint64_t v14 = *(unsigned int *)(i + 12);
      uint64_t v15 = (uint64_t *)(v13 + 216);
      if ((a3 & 0xFFFFFFFD) == 1)
      {
        if ((int)v14 < 1) {
          goto LABEL_30;
        }
        uint64_t v16 = 0;
        do
        {
          uint64_t v17 = *v15;
          if (!*v15) {
            break;
          }
          if (*(_DWORD *)(v17 + 1264) == a1
            && (!*(unsigned char *)(v17 + 1362) || !*(unsigned char *)(v17 + 37))
            && *(unsigned __int8 *)(v17 + 1361) == a4)
          {
            uint64_t v16 = *v15;
          }
          ++v15;
          --v14;
        }
        while (v14);
      }
      else
      {
        if ((int)v14 < 1) {
          goto LABEL_30;
        }
        uint64_t v16 = 0;
        do
        {
          uint64_t v18 = *v15;
          if (!*v15) {
            break;
          }
          if (*(_DWORD *)(v18 + 1264) == a1 && (!*(unsigned char *)(v18 + 1362) || *(unsigned __int8 *)(v18 + 37) == a5)) {
            uint64_t v16 = *v15;
          }
          ++v15;
          --v14;
        }
        while (v14);
      }
      if (v16)
      {
        if (*(unsigned char *)(v16 + 4)) {
          uint64_t v19 = v16;
        }
        else {
          uint64_t v19 = 0;
        }
        goto LABEL_31;
      }
LABEL_30:
      uint64_t v19 = 0;
LABEL_31:
      if (v19) {
        uint64_t result = v19;
      }
      if (v13 == v6) {
        return result;
      }
      uint64_t i = v10;
      if (v13 != v11)
      {
        uint64_t v20 = 29;
        for (uint64_t i = v12; i - 760 != v13; i += 760)
        {
          if (!--v20) {
            return result;
          }
        }
      }
    }
  }
  return 0;
}

uint64_t sub_2219F7188(uint64_t a1, uint64_t a2, int8x16_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (*(_DWORD *)(a1 + 8) == 5)
  {
    if (a3)
    {
      uint64_t result = 0;
      a3->i64[0] = 0;
      a3[17].i64[0] = 0;
      a3[51].i64[0] = 0;
      a3[52].i64[0] = 0;
      a3[51].i64[1] = 0;
      return result;
    }
    return 4294958327;
  }
  uint64_t result = sub_2219F40F8((int8x16_t *)(a2 + 22840), *(_DWORD *)(a1 + 20), a4, *(void *)(a2 + 22816), a5, a6, 0, 0, a3, 0);
  if (result) {
    return result;
  }
  unsigned int v11 = *(_DWORD *)(a1 + 20);
  if (a3)
  {
    if (v11 <= 8 && ((1 << v11) & 0x16B) != 0)
    {
      int v13 = *(_DWORD *)(a1 + 64) + 1;
      if (v13 <= 34)
      {
        uint64_t v14 = a3[51].u32[2];
        uint64_t v15 = (v14 - 1);
        if ((int)v14 >= 1)
        {
          if (a3->i64[v15])
          {
            if (a3[51].i32[0] <= 33 && (int)v14 < v13)
            {
              uint64_t v16 = 0;
              do
              {
                a3->i64[v14 + v16++] = a3->i64[v15];
                int v17 = a3[51].i32[0];
                a3[51].i32[0] = v17 + 1;
              }
              while (v17 <= 32 && v16 + v14 < v13);
              LODWORD(v14) = v14 + v16;
            }
            a3[51].i32[2] = v14;
            unsigned int v11 = *(_DWORD *)(a1 + 20);
          }
        }
      }
    }
    if (v11 == 6 || v11 == 1)
    {
      int v20 = *(_DWORD *)(a1 + 68) + 1;
      uint64_t v21 = a3[51].u32[3];
      if (v20 <= 34 && (int)v21 >= 1)
      {
        uint64_t v23 = &a3->i8[8 * (v21 - 1)];
        if (*((void *)v23 + 34))
        {
          if (a3[51].i32[1] <= 33 && (int)v21 < v20)
          {
            uint64_t v24 = 0;
            uint64_t v25 = (uint64_t *)(v23 + 272);
            do
            {
              a3[17].i64[v21 + v24++] = *v25;
              int v26 = a3[51].i32[1];
              a3[51].i32[1] = v26 + 1;
            }
            while (v26 <= 32 && v24 + v21 < v20);
            LODWORD(v21) = v21 + v24;
          }
          a3[51].i32[3] = v21;
          unsigned int v11 = *(_DWORD *)(a1 + 20);
        }
      }
    }
  }
  BOOL v28 = v11 == 6 || v11 == 1;
  if (v28 && a3[51].i32[0] != a3[51].i32[1]) {
    return 4294958327;
  }
  __int32 v29 = (_DWORD *)(a2 + 23696);
  if (*(unsigned char *)(a1 + 72) && a3[51].i32[0])
  {
    unsigned int v30 = *(_DWORD *)(a1 + 64);
    if (*(unsigned char *)(a1 + 32)) {
      unsigned int v31 = 32;
    }
    else {
      unsigned int v31 = 16;
    }
    if (v30 >= v31) {
      return 4294958327;
    }
    uint64_t result = sub_2219F757C(a3->i64, a1, *v29 + 1, a3[51].i32, v30, (int *)(a1 + 76), a1 + 340, a1 + 604);
    if (result) {
      return result;
    }
    uint64_t v32 = *(unsigned int *)(a1 + 64);
    if (!a3->i64[v32]) {
      return 4294958327;
    }
    a3[51].i32[0] = v32 + 1;
    a3[51].i32[2] = *(_DWORD *)(a1 + 64) + 1;
  }
  if (*(unsigned char *)(a1 + 73) && a3[51].i32[1])
  {
    uint64_t result = sub_2219F757C(a3[17].i64, a1, *v29 + 1, &a3[51].i32[1], *(_DWORD *)(a1 + 68), (int *)(a1 + 208), a1 + 472, a1 + 736);
    if (result) {
      return result;
    }
    uint64_t v33 = *(unsigned int *)(a1 + 68);
    if (!a3[17].i64[v33]) {
      return 4294958327;
    }
    a3[51].i32[1] = v33 + 1;
    a3[51].i32[3] = *(_DWORD *)(a1 + 68) + 1;
  }
  uint64_t v34 = a3[17].i64[0];
  if (v34)
  {
    if (!*(unsigned char *)(a4 + 1362) && *(unsigned char *)(v34 + 33))
    {
      uint64_t v41 = *(void *)(v34 + 1352);
      if (!v41) {
        return 4294958327;
      }
      uint64_t v42 = 1288;
      if (*(unsigned char *)(v34 + 38)) {
        uint64_t v43 = 1288;
      }
      else {
        uint64_t v43 = 1284;
      }
      int v44 = *(_DWORD *)(v34 + v43);
      if (!*(unsigned char *)(v41 + 38)) {
        uint64_t v42 = 1284;
      }
      int v45 = *(_DWORD *)(v41 + v42);
      int v46 = *(_DWORD *)(a4 + 1280);
      int v47 = v44 - v46;
      if (v47 < 0) {
        int v47 = -v47;
      }
      int v48 = v45 - v46;
      if (v48 < 0) {
        int v48 = -v48;
      }
      if (v48 == v47 && *(unsigned char *)(v41 + 38) != 0 || v48 < v47) {
        uint64_t v34 = *(void *)(v34 + 1352);
      }
    }
    if (*(unsigned char *)(v34 + 36))
    {
      uint64_t v34 = *(void *)(v34 + 1352);
      if (!v34) {
        return 4294958327;
      }
    }
  }
  a3[52].i64[0] = v34;
  uint64_t v35 = a3[51].u32[0];
  if ((int)v35 >= 1)
  {
    int v36 = (uint64_t *)a3;
    while (*v36)
    {
      ++v36;
      if (!--v35) {
        goto LABEL_69;
      }
    }
    return 4294958327;
  }
LABEL_69:
  uint64_t v37 = a3[51].u32[1];
  if ((int)v37 >= 1)
  {
    int v38 = a3 + 17;
    while (v38->i64[0])
    {
      int v38 = (int8x16_t *)((char *)v38 + 8);
      if (!--v37) {
        goto LABEL_73;
      }
    }
    return 4294958327;
  }
LABEL_73:
  unsigned int v39 = *(_DWORD *)(a1 + 20);
  if (v39 > 8 || ((1 << v39) & 0x16B) == 0) {
    return 0;
  }
  if (a3[51].i32[2] < *(_DWORD *)(a1 + 64) + 1) {
    return 4294958327;
  }
  if (v39 != 6 && v39 != 1) {
    return 0;
  }
  if (a3[51].i32[3] >= *(_DWORD *)(a1 + 68) + 1) {
    return 0;
  }
  else {
    return 4294958327;
  }
}

uint64_t sub_2219F757C(uint64_t *a1, uint64_t a2, int a3, int *a4, int a5, int *a6, uint64_t a7, uint64_t a8)
{
  if (*(unsigned char *)(a2 + 32))
  {
    a3 *= 2;
    int v8 = (2 * *(_DWORD *)(a2 + 28)) | 1;
  }
  else
  {
    int v8 = *(_DWORD *)(a2 + 28);
  }
  int v9 = *a6;
  if (*a6 == 3)
  {
    int v10 = *a4;
LABEL_6:
    uint64_t result = 0;
    if (v10 > a5 + 1) {
      *a4 = a5 + 1;
    }
  }
  else
  {
    unint64_t v12 = 0;
    int v13 = 0;
    int v14 = v8;
    while (v9 <= 3)
    {
      if (v9 <= 1)
      {
        int v15 = *(_DWORD *)(a7 + 4 * v12);
        int v16 = v14 + v15 + 1;
        if (v16 >= a3) {
          int v17 = a3;
        }
        else {
          int v17 = 0;
        }
        int v18 = v16 - v17;
        v14 += (a3 & ((v14 + ~v15) >> 31)) + ~v15;
        if (v9) {
          int v14 = v18;
        }
        if (v14 <= v8) {
          int v19 = 0;
        }
        else {
          int v19 = a3;
        }
        int v20 = v14 - v19;
        int v21 = *a4;
        int v22 = *(unsigned __int8 *)(a2 + 33);
        if (*a4 < 1)
        {
          uint64_t v23 = 0;
          goto LABEL_58;
        }
        uint64_t v23 = 0;
        int v24 = 0x7FFFFFFF;
        uint64_t v25 = a1;
        uint64_t v26 = *a4;
        int v27 = 0x7FFFFFFF;
        while (1)
        {
          uint64_t v28 = *v25;
          if (*v25)
          {
            if (v27 == 0x7FFFFFFF) {
              int v27 = *(unsigned __int8 *)(v28 + 1362);
            }
            if (*(unsigned char *)(v28 + 1362)) {
              int v29 = (*(unsigned __int8 *)(v28 + 37) == v22) | (2 * *(_DWORD *)(v28 + 1292));
            }
            else {
              int v29 = *(_DWORD *)(v28 + 1292);
            }
            if (*(unsigned char *)(v28 + 1364)) {
              BOOL v30 = 0;
            }
            else {
              BOOL v30 = v29 == v20;
            }
            if (v30)
            {
              uint64_t v23 = *v25;
LABEL_58:
              uint64_t v40 = v21;
              if (v13 < v21)
              {
                int v41 = *(unsigned __int8 *)(a2 + 32);
                do
                {
                  a1[v40] = a1[v40 - 1];
                  --v40;
                }
                while (v40 > v13);
                int v42 = v13 + 1;
                a1[v13] = v23;
                int v43 = v21 - v13;
                int v44 = &a1[v42];
                int v10 = v42;
                do
                {
                  uint64_t v45 = *v44;
                  if (*v44)
                  {
                    if (v41) {
                      int v46 = (*(unsigned __int8 *)(v45 + 37) == v22) | (2 * *(_DWORD *)(v45 + 1292));
                    }
                    else {
                      int v46 = *(_DWORD *)(v45 + 1292);
                    }
                    if (v46 != v20) {
                      a1[v10++] = v45;
                    }
                  }
                  ++v44;
                  --v43;
                }
                while (v43);
                int v13 = v42;
                goto LABEL_71;
              }
LABEL_70:
              int v10 = v13 + 1;
              a1[v13++] = v23;
              goto LABEL_71;
            }
            if (v24 == 0x7FFFFFFF)
            {
              int v24 = v29;
              uint64_t v23 = *v25;
            }
            if (v27 && *(unsigned __int8 *)(v23 + 37) != v22 && *(unsigned __int8 *)(v28 + 37) == v22)
            {
              int v24 = v29;
              uint64_t v23 = *v25;
            }
          }
          ++v25;
          if (!--v26) {
            goto LABEL_58;
          }
        }
      }
      int v31 = *(_DWORD *)(a8 + 4 * v12);
      int v32 = *a4;
      if (*a4 < 1)
      {
LABEL_46:
        uint64_t v23 = 0;
      }
      else
      {
        uint64_t v33 = a1;
        uint64_t v34 = *a4;
        while (1)
        {
          uint64_t v23 = *v33;
          if (*v33)
          {
            if (*(unsigned char *)(v23 + 1376) && *(unsigned char *)(v23 + 1364) && *(_DWORD *)(v23 + 1300) == v31) {
              break;
            }
          }
          ++v33;
          if (!--v34) {
            goto LABEL_46;
          }
        }
      }
      uint64_t v35 = v32;
      if (v13 >= v32) {
        goto LABEL_70;
      }
      do
      {
        a1[v35] = a1[v35 - 1];
        --v35;
      }
      while (v35 > v13);
      int v36 = v13 + 1;
      a1[v13] = v23;
      int v37 = v32 - v13;
      int v38 = &a1[v36];
      int v10 = v36;
      do
      {
        uint64_t v39 = *v38;
        if (!*(unsigned char *)(*v38 + 1376) || !*(unsigned char *)(v39 + 1364) || *(_DWORD *)(v39 + 1300) != v31) {
          a1[v10++] = v39;
        }
        ++v38;
        --v37;
      }
      while (v37);
      int v13 = v36;
LABEL_71:
      *a4 = v10;
      if (v12 <= 0x30)
      {
        int v9 = a6[++v12];
        if (v9 != 3) {
          continue;
        }
      }
      goto LABEL_6;
    }
    return 4294958327;
  }
  return result;
}

uint64_t sub_2219F7880(uint64_t a1, int a2, int a3, int a4, int a5, int a6)
{
  sub_221A341D0(*(pthread_mutex_t **)a1);
  uint64_t v12 = *(void *)(a1 + 22824);
  if (!v12) {
    goto LABEL_19;
  }
  if (v12 != *(void *)(a1 + 22816))
  {
    uint64_t v13 = *(unsigned int *)(v12 + 12);
    if (v13)
    {
      uint64_t v14 = 0;
      uint64_t v15 = 8 * v13;
      while (*(unsigned char *)(*(void *)(v12 + v14 + 216) + 1377))
      {
        v14 += 8;
        if (v15 == v14) {
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      if (sub_2219F3A40(1, v12)) {
        goto LABEL_19;
      }
      uint64_t v12 = a1 + 16;
      uint64_t v16 = *(void *)(a1 + 22824);
      if (v16 && v16 != a1 + 22056)
      {
        uint64_t v12 = a1 + 776;
        uint64_t v17 = 29;
        while (v12 - 760 != v16)
        {
          v12 += 760;
          if (!--v17)
          {
            uint64_t v18 = 0;
            *(void *)(a1 + 22824) = 0;
            goto LABEL_20;
          }
        }
      }
      *(void *)(a1 + 22824) = v12;
    }
  }
  if (!a3)
  {
    uint64_t v23 = v12;
    if ((a4 & 0xFFFFFFFD) == 1)
    {
      int v24 = a4;
      int v25 = a5;
    }
    else
    {
      int v24 = 0;
      int v25 = 0;
    }
    uint64_t v26 = (uint64_t)sub_2219F7A24(v23, v24, v25);
    goto LABEL_27;
  }
  if (a3 != 1)
  {
LABEL_19:
    uint64_t v18 = 0;
    goto LABEL_20;
  }
  if ((a4 & 0xFFFFFFFD) == 1)
  {
    int v19 = a4;
    int v20 = a5;
    int v21 = 0;
  }
  else
  {
    int v19 = 0;
    int v20 = 0;
    int v21 = a6;
  }
  uint64_t v26 = sub_2219F7054(a2, a1, v19, v20, v21);
LABEL_27:
  uint64_t v18 = v26;
  if (v26)
  {
    if (*(unsigned char *)(v26 + 1379))
    {
      *(_WORD *)(v26 + 1376) = 257;
      *(unsigned char *)(v26 + 4) = 1;
      if (*(unsigned char *)(v26 + 1362))
      {
        uint64_t v27 = *(void *)(v26 + 1352);
        if (v27)
        {
          *(_WORD *)(v27 + 1376) = 257;
          *(unsigned char *)(v27 + 4) = 1;
        }
      }
    }
  }
LABEL_20:
  sub_221A341DC(*(pthread_mutex_t **)a1);
  return v18;
}

unsigned char *sub_2219F7A24(uint64_t a1, int a2, int a3)
{
  uint64_t v3 = *(unsigned int *)(a1 + 12);
  if ((int)v3 < 1) {
    return 0;
  }
  uint64_t v4 = 0;
  uint64_t v5 = a1 + 216;
  int v6 = 0x7FFFFFFF;
  int v7 = -1;
  do
  {
    uint64_t v8 = *(void *)(v5 + 8 * v4);
    if (!v8) {
      return *(unsigned char **)(v5 + 8 * v7);
    }
    if (!*(unsigned char *)(v8 + 1377) && !*(unsigned char *)(v8 + 36))
    {
      int v9 = *(_DWORD *)(v8 + 1280);
      if (v9 < v6)
      {
        int v6 = v9;
        int v7 = v4;
      }
    }
    ++v4;
  }
  while (v3 != v4);
  if (v7 == -1) {
    return 0;
  }
  uint64_t result = *(unsigned char **)(v5 + 8 * v7);
  if (!result[4] || !result[1376] || (a2 & 0xFFFFFFFD) == 1 && result[1361] != a3) {
    return 0;
  }
  return result;
}

uint64_t sub_2219F7AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_221A34144();
  *(void *)a2 = v4;
  if (!v4) {
    return 4294967188;
  }
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(a1 + 1320);
  *(_DWORD *)(a2 + 23696) = *(_DWORD *)(a1 + 1868) - 1;
  sub_2219F56A8(a2);
  return 0;
}

uint64_t sub_2219F7B14(pthread_mutex_t **a1)
{
  if (a1)
  {
    sub_221A34190(*a1);
    *a1 = 0;
  }
  return 0;
}

uint64_t sub_2219F7B4C(uint64_t result, __int16 a2, __int16 a3, uint64_t a4)
{
  uint64_t v4 = 0;
  word_267F6950D = 17664;
  dword_267F69509 = 922815232;
  unk_267F6950F = xmmword_221A34C50;
  unk_267F6951F = 0x7FE272EB7FE55FEELL;
  unk_267F69527 = xmmword_221A38780;
  unk_267F69537 = unk_221A38790;
  unk_267F69547 = 0x7DEA4CF952FB38FCLL;
  unk_267F6958F = xmmword_221A387E8;
  unk_267F6959F = unk_221A387F8;
  unk_267F695AF = xmmword_221A38808;
  unk_267F6954F = xmmword_221A387A8;
  unk_267F6955F = unk_221A387B8;
  unk_267F6956F = xmmword_221A387C8;
  unk_267F6957F = unk_221A387D8;
  xmmword_267F69619 = unk_221A38872;
  unk_267F69629 = xmmword_221A38882;
  unk_267F69633 = *(long long *)((char *)&xmmword_221A38882 + 10);
  xmmword_267F695B9 = *(long long *)((char *)&xmmword_221A38808 + 10);
  unk_267F695C9 = xmmword_221A38822;
  xmmword_267F695D9 = unk_221A38832;
  unk_267F695E9 = xmmword_221A38842;
  word_267F696A3 = 25074;
  xmmword_267F69643 = xmmword_221A3889C;
  unk_267F69653 = unk_221A388AC;
  xmmword_267F69683 = xmmword_221A388DC;
  unk_267F69693 = unk_221A388EC;
  xmmword_267F69663 = xmmword_221A388BC;
  unk_267F69673 = unk_221A388CC;
  xmmword_267F696C7 = xmmword_221A3891E;
  unk_267F696D7 = unk_221A3892E;
  xmmword_267F696A7 = xmmword_221A388FE;
  unk_267F696B7 = unk_221A3890E;
  unk_267F69711 = *(long long *)((char *)&xmmword_221A3895E + 10);
  xmmword_267F696F7 = unk_221A3894E;
  unk_267F69707 = xmmword_221A3895E;
  xmmword_267F696E7 = xmmword_221A3893E;
  xmmword_267F69741 = xmmword_221A38998;
  unk_267F69751 = unk_221A389A8;
  xmmword_267F69721 = xmmword_221A38978;
  unk_267F69731 = unk_221A38988;
  unk_267F6978B = *(long long *)((char *)&xmmword_221A389D8 + 10);
  xmmword_267F69771 = unk_221A389C8;
  unk_267F69781 = xmmword_221A389D8;
  xmmword_267F69761 = xmmword_221A389B8;
  uint64_t v5 = &dword_267F6979B;
  xmmword_267F695F9 = unk_221A38852;
  unk_267F69609 = xmmword_221A38862;
  do
  {
    int *v5 = *(_DWORD *)((char *)&unk_221A389F2 + v4);
    *((_WORD *)v5 + 2) = *(_WORD *)((char *)&unk_221A389F2 + v4 + 4);
    v4 += 8;
    uint64_t v5 = (int *)((char *)v5 + 658);
  }
  while (v4 != 24);
  uint64_t v6 = 0;
  int v7 = &qword_267F697A1;
  do
  {
    uint64_t *v7 = qword_221A38A0A[v6];
    v6 += 3;
    int v7 = (uint64_t *)((char *)v7 + 658);
  }
  while (v6 != 9);
  uint64_t v8 = &qword_267F697A9;
  uint64_t v9 = 1u;
  do
  {
    uint64_t *v8 = qword_221A38A0A[v9];
    v9 += 3;
    uint64_t v8 = (uint64_t *)((char *)v8 + 658);
  }
  while (v9 != 10);
  int v10 = &qword_267F697B1;
  uint64_t v11 = 2u;
  do
  {
    *int v10 = qword_221A38A0A[v11];
    v11 += 3;
    int v10 = (uint64_t *)((char *)v10 + 658);
  }
  while (v11 != 11);
  uint64_t v12 = 0;
  uint64_t v13 = &xmmword_267F697B9;
  do
  {
    long long v14 = *(_OWORD *)((char *)&unk_221A38A52 + v12 + 16);
    *uint64_t v13 = *(_OWORD *)((char *)&unk_221A38A52 + v12);
    v13[1] = v14;
    *((void *)v13 + 4) = *(void *)((char *)&unk_221A38A52 + v12 + 32);
    v12 += 40;
    uint64_t v13 = (long long *)((char *)v13 + 658);
  }
  while (v12 != 120);
  uint64_t v15 = 0;
  uint64_t v16 = &xmmword_267F697E1;
  do
  {
    long long v17 = *(_OWORD *)((char *)&unk_221A38ACA + v15 + 80);
    v16[4] = *(_OWORD *)((char *)&unk_221A38ACA + v15 + 64);
    v16[5] = v17;
    v16[6] = *(_OWORD *)((char *)&unk_221A38ACA + v15 + 96);
    *(long long *)((char *)v16 + 106) = *(_OWORD *)((char *)&unk_221A38ACA + v15 + 106);
    long long v18 = *(_OWORD *)((char *)&unk_221A38ACA + v15 + 16);
    *uint64_t v16 = *(_OWORD *)((char *)&unk_221A38ACA + v15);
    v16[1] = v18;
    long long v19 = *(_OWORD *)((char *)&unk_221A38ACA + v15 + 32);
    long long v20 = *(_OWORD *)((char *)&unk_221A38ACA + v15 + 48);
    v15 += 122;
    v16[2] = v19;
    v16[3] = v20;
    uint64_t v16 = (long long *)((char *)v16 + 658);
  }
  while (v15 != 366);
  uint64_t v21 = 0;
  int v22 = &xmmword_267F6985B;
  do
  {
    long long v23 = *(_OWORD *)((char *)&unk_221A38C38 + v21 + 80);
    v22[4] = *(_OWORD *)((char *)&unk_221A38C38 + v21 + 64);
    v22[5] = v23;
    v22[6] = *(_OWORD *)((char *)&unk_221A38C38 + v21 + 96);
    *(long long *)((char *)v22 + 106) = *(_OWORD *)((char *)&unk_221A38C38 + v21 + 106);
    long long v24 = *(_OWORD *)((char *)&unk_221A38C38 + v21 + 16);
    long long *v22 = *(_OWORD *)((char *)&unk_221A38C38 + v21);
    v22[1] = v24;
    long long v25 = *(_OWORD *)((char *)&unk_221A38C38 + v21 + 32);
    long long v26 = *(_OWORD *)((char *)&unk_221A38C38 + v21 + 48);
    v21 += 122;
    v22[2] = v25;
    v22[3] = v26;
    int v22 = (long long *)((char *)v22 + 658);
  }
  while (v21 != 366);
  uint64_t v27 = 0;
  uint64_t v28 = &xmmword_267F698D5;
  do
  {
    long long v29 = *(_OWORD *)((char *)&unk_221A38DA6 + v27 + 80);
    v28[4] = *(_OWORD *)((char *)&unk_221A38DA6 + v27 + 64);
    v28[5] = v29;
    *((_WORD *)v28 + 48) = *(_WORD *)((char *)&unk_221A38DA6 + v27 + 96);
    long long v30 = *(_OWORD *)((char *)&unk_221A38DA6 + v27 + 16);
    *uint64_t v28 = *(_OWORD *)((char *)&unk_221A38DA6 + v27);
    v28[1] = v30;
    long long v32 = *(_OWORD *)((char *)&unk_221A38DA6 + v27 + 32);
    long long v31 = *(_OWORD *)((char *)&unk_221A38DA6 + v27 + 48);
    v27 += 98;
    v28[2] = v32;
    _OWORD v28[3] = v31;
    uint64_t v28 = (long long *)((char *)v28 + 658);
  }
  while (v27 != 294);
  uint64_t v33 = 0;
  uint64_t v34 = &xmmword_267F69939;
  do
  {
    long long v35 = *(_OWORD *)((char *)&unk_221A38ECC + v33 + 80);
    v34[4] = *(_OWORD *)((char *)&unk_221A38ECC + v33 + 64);
    v34[5] = v35;
    v34[6] = *(_OWORD *)((char *)&unk_221A38ECC + v33 + 96);
    *(long long *)((char *)v34 + 106) = *(_OWORD *)((char *)&unk_221A38ECC + v33 + 106);
    long long v36 = *(_OWORD *)((char *)&unk_221A38ECC + v33 + 16);
    *uint64_t v34 = *(_OWORD *)((char *)&unk_221A38ECC + v33);
    v34[1] = v36;
    long long v37 = *(_OWORD *)((char *)&unk_221A38ECC + v33 + 32);
    long long v38 = *(_OWORD *)((char *)&unk_221A38ECC + v33 + 48);
    v33 += 122;
    v34[2] = v37;
    v34[3] = v38;
    uint64_t v34 = (long long *)((char *)v34 + 658);
  }
  while (v33 != 366);
  uint64_t v39 = 0;
  uint64_t v40 = &xmmword_267F699B3;
  do
  {
    long long v41 = *(_OWORD *)((char *)&unk_221A3903A + v39 + 80);
    v40[4] = *(_OWORD *)((char *)&unk_221A3903A + v39 + 64);
    v40[5] = v41;
    v40[6] = *(_OWORD *)((char *)&unk_221A3903A + v39 + 96);
    *(long long *)((char *)v40 + 106) = *(_OWORD *)((char *)&unk_221A3903A + v39 + 106);
    long long v42 = *(_OWORD *)((char *)&unk_221A3903A + v39 + 16);
    *uint64_t v40 = *(_OWORD *)((char *)&unk_221A3903A + v39);
    v40[1] = v42;
    long long v43 = *(_OWORD *)((char *)&unk_221A3903A + v39 + 32);
    long long v44 = *(_OWORD *)((char *)&unk_221A3903A + v39 + 48);
    v39 += 122;
    v40[2] = v43;
    v40[3] = v44;
    uint64_t v40 = (long long *)((char *)v40 + 658);
  }
  while (v39 != 366);
  if (result)
  {
    for (uint64_t i = 0; i != 22; i += 2)
    {
      int v46 = (unsigned char *)(a4 + i);
      int v47 = (__int16)(byte_221A391A8[i + 1] + (unsigned __int16)((a3 * byte_221A391A8[i]) >> 4));
      if (v47 <= 1) {
        int v47 = 1;
      }
      if (v47 >= 0x7E) {
        int v47 = 126;
      }
      char v48 = 63 - v47;
      char v49 = v47 - 64;
      BOOL v50 = v47 > 0x3F;
      if (v50) {
        char v48 = v49;
      }
      unsigned char *v46 = v48;
      v46[1] = v50;
    }
    for (uint64_t j = 0; j != 20; j += 2)
    {
      uint64_t v52 = a4 + j;
      int v53 = (__int16)(byte_221A391BE[j + 1] + (unsigned __int16)((a3 * byte_221A391BE[j]) >> 4));
      if (v53 <= 1) {
        int v53 = 1;
      }
      if (v53 >= 0x7E) {
        int v53 = 126;
      }
      char v54 = 63 - v53;
      char v55 = v53 - 64;
      BOOL v56 = v53 > 0x3F;
      if (v56) {
        char v54 = v55;
      }
      *(unsigned char *)(v52 + 120) = v54;
      *(unsigned char *)(v52 + 121) = v56;
    }
    for (uint64_t k = 0; k != 658; k += 2)
    {
      uint64_t v58 = a4 + k;
      int v59 = (__int16)(*((char *)&dword_267F69509 + k + 1)
                    + (unsigned __int16)((a3 * *((char *)&dword_267F69509 + k)) >> 4));
      if (v59 <= 1) {
        int v59 = 1;
      }
      if (v59 >= 0x7E) {
        int v59 = 126;
      }
      char v60 = 63 - v59;
      char v61 = v59 - 64;
      BOOL v62 = v59 > 0x3F;
      if (v62) {
        char v60 = v61;
      }
      *(unsigned char *)(v58 + 140) = v60;
      *(unsigned char *)(v58 + 141) = v62;
    }
    for (uint64_t m = 0; m != 6; m += 2)
    {
      uint64_t v64 = a4 + m;
      int v65 = (__int16)(byte_221A391D2[m + 1] + (unsigned __int16)((a3 * byte_221A391D2[m]) >> 4));
      if (v65 <= 1) {
        int v65 = 1;
      }
      if (v65 >= 0x7E) {
        int v65 = 126;
      }
      char v66 = 63 - v65;
      char v67 = v65 - 64;
      BOOL v68 = v65 > 0x3F;
      if (v68) {
        char v66 = v67;
      }
      *(unsigned char *)(v64 + 798) = v66;
      *(unsigned char *)(v64 + 799) = v68;
    }
    for (uint64_t n = 0; n != 116; n += 2)
    {
      uint64_t v70 = a4 + n;
      int v71 = (__int16)(byte_221A391D8[n + 1] + (unsigned __int16)((a3 * byte_221A391D8[n]) >> 4));
      if (v71 <= 1) {
        int v71 = 1;
      }
      if (v71 >= 0x7E) {
        int v71 = 126;
      }
      char v72 = 63 - v71;
      char v73 = v71 - 64;
      BOOL v74 = v71 > 0x3F;
      if (v74) {
        char v72 = v73;
      }
      *(unsigned char *)(v70 + 804) = v72;
      *(unsigned char *)(v70 + 805) = v74;
    }
  }
  else
  {
    for (iuint64_t i = 0; ii != 22; ii += 2)
    {
      BOOL v76 = (unsigned char *)(a4 + ii);
      int v77 = (__int16)(byte_221A391A8[ii + 1] + (unsigned __int16)((a3 * byte_221A391A8[ii]) >> 4));
      if (v77 <= 1) {
        int v77 = 1;
      }
      if (v77 >= 0x7E) {
        int v77 = 126;
      }
      char v78 = 63 - v77;
      char v79 = v77 - 64;
      BOOL v80 = v77 > 0x3F;
      if (v80) {
        char v78 = v79;
      }
      *BOOL v76 = v78;
      v76[1] = v80;
    }
    uint64_t v81 = 0;
    int v82 = a2;
    do
    {
      uint64_t v83 = a4 + v81;
      int v84 = (__int16)(byte_221A3924C[26 * a2 + 1 + v81]
                    + (unsigned __int16)((a3 * byte_221A3924C[26 * a2 + v81]) >> 4));
      if (v84 <= 1) {
        int v84 = 1;
      }
      if (v84 >= 0x7E) {
        int v84 = 126;
      }
      char v85 = 63 - v84;
      char v86 = v84 - 64;
      BOOL v87 = v84 > 0x3F;
      if (v87) {
        char v85 = v86;
      }
      *(unsigned char *)(v83 + 22) = v85;
      *(unsigned char *)(v83 + 23) = v87;
      v81 += 2;
    }
    while (v81 != 26);
    uint64_t v88 = 0;
    int16x8_t v89 = vdupq_n_s16(a3);
    int v90 = (char *)&unk_221A3929A + 32 * a2;
    int8x16x2_t v135 = vld2q_s8(v90);
    int16x8_t v91 = vmovl_s8(*(int8x8_t *)v135.val[0].i8);
    int16x8_t v92 = vmovl_high_s8(v135.val[0]);
    int32x4_t v93 = vmull_high_s16(v89, v92);
    int32x4_t v94 = vmull_s16(*(int16x4_t *)v89.i8, *(int16x4_t *)v92.i8);
    v135.val[0].i64[0] = 0x1000100010001;
    v135.val[0].i64[1] = 0x1000100010001;
    uint16x8_t v95 = (uint16x8_t)vmaxq_s16(vaddw_s8(vshrn_high_n_s32(vshrn_n_s32(vmull_s16(*(int16x4_t *)v89.i8, *(int16x4_t *)v91.i8), 4uLL), vmull_high_s16(v89, v91), 4uLL), *(int8x8_t *)v135.val[1].i8), (int16x8_t)v135.val[0]);
    v135.val[0] = (int8x16_t)vmaxq_s16(vaddw_high_s8(vshrn_high_n_s32(vshrn_n_s32(v94, 4uLL), v93, 4uLL), v135.val[1]), (int16x8_t)v135.val[0]);
    v135.val[1].i64[0] = 0x7E007E007E007ELL;
    v135.val[1].i64[1] = 0x7E007E007E007ELL;
    v135.val[0] = (int8x16_t)vminq_u16((uint16x8_t)v135.val[0], (uint16x8_t)v135.val[1]);
    int8x16_t v96 = (int8x16_t)vminq_u16(v95, (uint16x8_t)v135.val[1]);
    v135.val[1].i64[0] = 0x3F003F003F003FLL;
    v135.val[1].i64[1] = 0x3F003F003F003FLL;
    int8x16_t v97 = vuzp1q_s8(v96, v135.val[0]);
    v94.i64[0] = 0x3F3F3F3F3F3F3F3FLL;
    v94.i64[1] = 0x3F3F3F3F3F3F3F3FLL;
    v93.i64[0] = 0xC0C0C0C0C0C0C0C0;
    v93.i64[1] = 0xC0C0C0C0C0C0C0C0;
    int8x16_t v98 = vuzp1q_s8((int8x16_t)vcgtq_u16((uint16x8_t)v96, (uint16x8_t)v135.val[1]), (int8x16_t)vcgtq_u16((uint16x8_t)v135.val[0], (uint16x8_t)v135.val[1]));
    v135.val[0] = vbslq_s8(v98, vaddq_s8(v97, (int8x16_t)v93), vsubq_s8((int8x16_t)v94, v97));
    v97.i64[0] = 0x101010101010101;
    v97.i64[1] = 0x101010101010101;
    v135.val[1] = vandq_s8(v98, v97);
    int v99 = (char *)(a4 + 48);
    vst2q_s8(v99, v135);
    do
    {
      __int16 v100 = (unsigned char *)(a4 + 80 + v88);
      int v101 = (__int16)(byte_221A392FA[28 * v82 + 1 + v88]
                     + (unsigned __int16)((a3 * byte_221A392FA[28 * v82 + v88]) >> 4));
      if (v101 <= 1) {
        int v101 = 1;
      }
      if (v101 >= 0x7E) {
        int v101 = 126;
      }
      char v102 = 63 - v101;
      char v103 = v101 - 64;
      BOOL v104 = v101 > 0x3F;
      if (v104) {
        char v102 = v103;
      }
      *__int16 v100 = v102;
      v100[1] = v104;
      v88 += 2;
    }
    while (v88 != 28);
    for (juint64_t j = 0; jj != 12; jj += 2)
    {
      int v106 = (unsigned char *)(a4 + 108 + jj);
      int v107 = (__int16)(byte_221A3934E[12 * v82 + 1 + jj]
                     + (unsigned __int16)((a3 * byte_221A3934E[12 * v82 + jj]) >> 4));
      if (v107 <= 1) {
        int v107 = 1;
      }
      if (v107 >= 0x7E) {
        int v107 = 126;
      }
      char v108 = 63 - v107;
      char v109 = v107 - 64;
      BOOL v110 = v107 > 0x3F;
      if (v110) {
        char v108 = v109;
      }
      *int v106 = v108;
      v106[1] = v110;
    }
    for (kuint64_t k = 0; kk != 20; kk += 2)
    {
      uint64_t v112 = a4 + kk;
      int v113 = (__int16)(byte_221A391BE[kk + 1] + (unsigned __int16)((a3 * byte_221A391BE[kk]) >> 4));
      if (v113 <= 1) {
        int v113 = 1;
      }
      if (v113 >= 0x7E) {
        int v113 = 126;
      }
      char v114 = 63 - v113;
      char v115 = v113 - 64;
      BOOL v116 = v113 > 0x3F;
      if (v116) {
        char v114 = v115;
      }
      *(unsigned char *)(v112 + 120) = v114;
      *(unsigned char *)(v112 + 121) = v116;
    }
    for (muint64_t m = 0; mm != 658; mm += 2)
    {
      uint64_t v118 = a4 + mm;
      int v119 = (__int16)(*((char *)&dword_267F6979B + 658 * v82 + mm + 1)
                     + (unsigned __int16)((a3 * *((char *)&dword_267F6979B + 658 * v82 + mm)) >> 4));
      if (v119 <= 1) {
        int v119 = 1;
      }
      if (v119 >= 0x7E) {
        int v119 = 126;
      }
      char v120 = 63 - v119;
      char v121 = v119 - 64;
      BOOL v122 = v119 > 0x3F;
      if (v122) {
        char v120 = v121;
      }
      *(unsigned char *)(v118 + 140) = v120;
      *(unsigned char *)(v118 + 141) = v122;
    }
    for (nuint64_t n = 0; nn != 6; nn += 2)
    {
      __int16 v124 = (unsigned char *)(a4 + 798 + nn);
      int v125 = (__int16)(byte_221A39372[6 * v82 + 1 + nn]
                     + (unsigned __int16)((a3 * byte_221A39372[6 * v82 + nn]) >> 4));
      if (v125 <= 1) {
        int v125 = 1;
      }
      if (v125 >= 0x7E) {
        int v125 = 126;
      }
      char v126 = 63 - v125;
      uint64_t result = (v125 - 64);
      BOOL v127 = v125 > 0x3F;
      if (v127) {
        char v126 = result;
      }
      *__int16 v124 = v126;
      v124[1] = v127;
    }
    uint64_t v128 = 0;
    __int16 v129 = (char *)&unk_221A39384 + 116 * v82 + 1;
    do
    {
      int v130 = (unsigned char *)(a4 + 804 + v128);
      int v131 = (__int16)(v129[v128] + (unsigned __int16)((a3 * v129[v128 - 1]) >> 4));
      if (v131 <= 1) {
        int v131 = 1;
      }
      if (v131 >= 0x7E) {
        int v131 = 126;
      }
      char v132 = 63 - v131;
      char v133 = v131 - 64;
      BOOL v134 = v131 > 0x3F;
      if (v134) {
        char v132 = v133;
      }
      *int v130 = v132;
      v130[1] = v134;
      v128 += 2;
    }
    while (v128 != 116);
  }
  return result;
}

uint64_t sub_2219F8548(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = a2;
  unint64_t v2 = *(unsigned int **)(a2 + 16);
  unint64_t v3 = *(void *)(a2 + 24);
  if (*(unsigned char *)(a2 + 36)) {
    unint64_t v2 = (unsigned int *)((char *)v2 + 1);
  }
  if ((unint64_t)v2 > v3) {
    unint64_t v2 = *(unsigned int **)(a2 + 24);
  }
  unsigned int v4 = bswap32(*v2);
  unsigned int v6 = *(unsigned int *)((char *)v2 + 1);
  uint64_t v5 = (char *)v2 + 1;
  unsigned int v7 = bswap32(v6);
  if ((unint64_t)v5 > v3) {
    uint64_t v5 = *(char **)(a2 + 24);
  }
  *(_DWORD *)uint64_t result = 510;
  *(_DWORD *)(result + 4) = v4 >> 23;
  *(void *)(a2 + 16) = v5;
  *(_DWORD *)(*(void *)(result + 8) + 32) = 2 * v7;
  *(unsigned char *)(*(void *)(result + 8) + 36) = 1;
  return result;
}

uint64_t sub_2219F85A8(uint64_t a1, int a2, __int16 a3, __int16 a4)
{
  BOOL v5 = a2 == 4 || a2 == 9;
  if (a2 == 7) {
    BOOL v5 = 1;
  }
  unsigned int v6 = a2 - 2;
  uint64_t v7 = a2 == 2 || v5;
  if ((0xA5u >> v6)) {
    __int16 v8 = 0;
  }
  else {
    __int16 v8 = a3;
  }
  if (v6 >= 8) {
    __int16 v9 = a3;
  }
  else {
    __int16 v9 = v8;
  }
  return sub_2219F7B4C(v7, v9, a4, a1 + 16);
}

uint64_t sub_2219F85F4(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = a2[1];
  unsigned int v3 = *(_DWORD *)(a1 + 4);
  uint64_t v4 = *a2;
  unsigned int v5 = byte_221A394E0[4 * v4 + (*(_DWORD *)a1 >> 6)];
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(unsigned int **)(v6 + 16);
  __int16 v8 = *(unsigned int **)(v6 + 24);
  unsigned int v9 = *(_DWORD *)(v6 + 32);
  int v10 = *(unsigned __int8 *)(v6 + 36);
  unsigned int v11 = *(_DWORD *)a1 - v5;
  if (v3 >= v11)
  {
    uint64_t v12 = v2 == 0;
    if (!*a2) {
      a2[1] = v2 ^ 1;
    }
    *a2 = word_221A39660[v4];
    v3 -= v11;
    unsigned int v11 = v5;
  }
  else
  {
    uint64_t v12 = a2[1];
    *a2 = word_221A395E0[v4];
    if (v11 > 0xFF) {
      goto LABEL_10;
    }
  }
  do
  {
    unsigned int v13 = v11;
    v11 *= 2;
    unint64_t v14 = (v10 + 1);
    int v10 = ((_BYTE)v10 + 1) & 7;
    uint64_t v7 = (unsigned int *)((char *)v7 + (v14 >> 3));
    unsigned int v3 = __PAIR64__(v3, v9) >> 31;
    unsigned int v9 = bswap32(*v7) << (v14 & 7);
    if (v7 > v8) {
      uint64_t v7 = v8;
    }
  }
  while (v13 < 0x80);
LABEL_10:
  *(_DWORD *)a1 = v11;
  *(_DWORD *)(a1 + 4) = v3;
  *(void *)(v6 + 16) = v7;
  *(_DWORD *)(v6 + 32) = v9;
  *(unsigned char *)(v6 + 36) = v10;
  return v12;
}

BOOL sub_2219F86C8(int *a1)
{
  uint64_t v1 = *((void *)a1 + 1);
  unint64_t v2 = *(void *)(v1 + 24);
  unint64_t v3 = *(unsigned __int8 *)(v1 + 36) + 1;
  uint64_t v4 = (unsigned int *)(*(void *)(v1 + 16) + (v3 >> 3));
  unsigned int v5 = *a1;
  HIDWORD(v7) = a1[1];
  LODWORD(v7) = *(_DWORD *)(v1 + 32);
  unsigned int v6 = v7 >> 31;
  unsigned int v8 = bswap32(*v4);
  if ((unint64_t)v4 <= v2) {
    unint64_t v2 = *(void *)(v1 + 16) + (v3 >> 3);
  }
  BOOL v9 = v6 >= v5;
  if (v6 < v5) {
    unsigned int v5 = 0;
  }
  char v10 = v3 & 7;
  a1[1] = v6 - v5;
  *(void *)(v1 + 16) = v2;
  *(_DWORD *)(v1 + 32) = v8 << v10;
  *(unsigned char *)(v1 + 36) = v10;
  return v9;
}

uint64_t sub_2219F8728(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 4);
  unsigned int v2 = *(_DWORD *)a1 - 2;
  if (v1 >= v2) {
    return 1;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(unsigned int **)(v3 + 16);
  unsigned int v5 = *(_DWORD *)(v3 + 32);
  int v6 = *(unsigned __int8 *)(v3 + 36);
  if (v2 <= 0xFF)
  {
    do
    {
      unsigned int v7 = v2;
      v2 *= 2;
      unint64_t v8 = (v6 + 1);
      int v6 = ((_BYTE)v6 + 1) & 7;
      uint64_t v4 = (unsigned int *)((char *)v4 + (v8 >> 3));
      unsigned int v1 = __PAIR64__(v1, v5) >> 31;
      unsigned int v5 = bswap32(*v4) << (v8 & 7);
      if ((unint64_t)v4 > *(void *)(v3 + 24)) {
        uint64_t v4 = *(unsigned int **)(v3 + 24);
      }
    }
    while (v7 < 0x80);
  }
  uint64_t v9 = 0;
  *(_DWORD *)a1 = v2;
  *(_DWORD *)(a1 + 4) = v1;
  *(void *)(v3 + 16) = v4;
  *(_DWORD *)(v3 + 32) = v5;
  *(unsigned char *)(v3 + 36) = v6;
  return v9;
}

uint64_t sub_2219F87AC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a5) {
    goto LABEL_14;
  }
  uint64_t v5 = *(void *)(a5 + 128);
  if (!v5 || (*(unsigned char *)(a5 + 185) & 1) == 0) {
    goto LABEL_14;
  }
  int v7 = *(unsigned __int8 *)(a5 + 31);
  int v8 = *(unsigned __int8 *)(v5 + 144);
  if (v7 == 2 && v8 == 0)
  {
    if (a1 >= 8) {
      a3 = *(void *)(a5 + 168) + 80;
    }
    unsigned int v11 = (char *)&unk_267F638B8;
  }
  else
  {
    if (v7 != 1 || v8 != 1)
    {
LABEL_14:
      unsigned int v11 = byte_267F63880;
      goto LABEL_15;
    }
    if (*(unsigned char *)(a5 + 16)) {
      unsigned int v11 = (char *)&unk_267F63918;
    }
    else {
      unsigned int v11 = (char *)&unk_267F638E8;
    }
  }
LABEL_15:
  uint64_t v12 = &v11[a1];
  unint64_t v13 = *v12;
  unint64_t v14 = v12[16];
  uint64_t v15 = a2;
  if ((v13 & 1) != 0 || (uint64_t v15 = a3) != 0)
  {
    int v16 = *(unsigned __int8 *)(v15 + ((v13 >> 1) & 0xF));
    LODWORD(v15) = 1;
    if (v14)
    {
LABEL_21:
      int v18 = *(unsigned __int8 *)(a2 + ((v14 >> 1) & 0xF));
      int v17 = 1;
      return byte_221A396E0[(unint64_t)((v17 & v15) + v16 + v18) >> (v17 & v15)];
    }
  }
  else
  {
    int v16 = 0;
    if (v14) {
      goto LABEL_21;
    }
  }
  a2 = a4;
  if (a4) {
    goto LABEL_21;
  }
  int v17 = 0;
  int v18 = 0;
  return byte_221A396E0[(unint64_t)((v17 & v15) + v16 + v18) >> (v17 & v15)];
}

uint64_t sub_2219F88A0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!a6) {
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a6 + 128);
  if (!v6 || (*(unsigned char *)(a6 + 185) & 1) == 0) {
    goto LABEL_7;
  }
  int v15 = *(unsigned __int8 *)(a6 + 31);
  int v16 = *(unsigned __int8 *)(v6 + 144);
  if (v15 == 2 && v16 == 0)
  {
    if (a1 > 1) {
      a3 = a5;
    }
    int v8 = (unsigned __int8 *)&unk_267F63948;
  }
  else
  {
    if (v15 != 1 || v16 != 1)
    {
LABEL_7:
      int v8 = (unsigned __int8 *)&unk_267F638B0;
      goto LABEL_8;
    }
    if (*(unsigned char *)(a6 + 16)) {
      int v8 = (unsigned __int8 *)&unk_267F63958;
    }
    else {
      int v8 = (unsigned __int8 *)&unk_267F63950;
    }
  }
LABEL_8:
  uint64_t v9 = a2;
  if ((a1 & 1) != 0 || (uint64_t v9 = a3) != 0)
  {
    int v10 = *(unsigned __int8 *)(v9 + v8[a1]);
    LODWORD(v9) = 1;
  }
  else
  {
    int v10 = 0;
  }
  uint64_t v11 = v8[a1 + 4];
  if ((a1 & 0xFFFFFFFE) == 2 || (a2 = a4) != 0)
  {
    int v12 = *(unsigned __int8 *)(a2 + v11);
    int v13 = 1;
  }
  else
  {
    int v13 = 0;
    int v12 = 0;
  }
  return byte_221A396E0[(unint64_t)((v13 & v9) + v10 + v12) >> (v13 & v9)];
}

void sub_2219F8990(void *a1)
{
}

_DWORD *sub_2219F89A4(_DWORD *result, _DWORD *a2)
{
  for (uint64_t i = 11; i != 15; ++i)
    result[i] += a2[i];
  do
  {
    result[i] += a2[i];
    ++i;
  }
  while (i != 18);
  int v3 = result[2];
  result[1] += a2[1];
  result[2] = v3 + a2[2];
  for (uint64_t j = 3; j != 8; ++j)
    result[j] += a2[j];
  do
  {
    result[j] += a2[j];
    ++j;
  }
  while (j != 11);
  *result += *a2;
  return result;
}

uint64_t sub_2219F8A4C(uint64_t a1, unsigned int a2)
{
  if (a2 <= 9 && ((1 << a2) & 0x294) != 0)
  {
    int32x2_t v2 = vmla_s32((int32x2_t)vaddvq_s32(vmlaq_s32((int32x4_t)vaddvq_s32(vmulq_s32(*(int32x4_t *)(a1 + 44), (int32x4_t)xmmword_221A39720)), *(int32x4_t *)(a1 + 16), vdupq_n_s32(0x20Bu))), *(int32x2_t *)(a1 + 36), (int32x2_t)0x14D00000032);
    unint64_t v3 = (unint64_t)vpadd_s32(v2, v2);
    int v4 = v3;
    LODWORD(v3) = *(_DWORD *)a1;
    return v4 + ((double)v3 * 7.30000019 + 0.5);
  }
  else
  {
    int32x2_t v6 = vmla_s32((int32x2_t)vaddvq_s32(vmlaq_s32((int32x4_t)vaddvq_s32(vmulq_s32(*(int32x4_t *)(a1 + 44), (int32x4_t)xmmword_221A39730)), *(int32x4_t *)(a1 + 16), vdupq_n_s32(0x1F4u))), *(int32x2_t *)(a1 + 36), (int32x2_t)0x15E000000C8);
    return 9 * *(_DWORD *)a1 + vpadd_s32(v6, v6).u32[0];
  }
}

int *sub_2219F8B3C(int *result, _DWORD *a2)
{
  uint64_t v2 = 0;
  uint64_t v3 = 12;
  do
  {
    for (uint64_t i = 0; i != 4; ++i)
      result[v3 + i] += a2[v3 + i];
    ++v2;
    v3 += 4;
  }
  while (v2 != 4);
  for (uint64_t j = 28; j != 32; ++j)
    result[j] += a2[j];
  int v6 = result[3];
  result[2] += a2[2];
  result[3] = v6 + a2[3];
  for (uint64_t k = 4; k != 9; ++k)
    result[k] += a2[k];
  do
  {
    result[k] += a2[k];
    ++k;
  }
  while (k != 12);
  uint64_t v8 = 0;
  int v9 = *result;
  result[1] += a2[1];
  int v10 = result + 33;
  *uint64_t result = v9 + *a2;
  uint64_t v11 = result + 34;
  char v12 = 1;
  do
  {
    char v13 = v12;
    int v14 = *((__int16 *)a2 + v8 + 66);
    if (*((__int16 *)v10 + v8) > v14) {
      *((_WORD *)v10 + v8) = v14;
    }
    int v15 = *((__int16 *)a2 + v8 + 68);
    if (*((__int16 *)v11 + v8) < v15) {
      *((_WORD *)v11 + v8) = v15;
    }
    char v12 = 0;
    uint64_t v8 = 1;
  }
  while ((v13 & 1) != 0);
  result[32] += a2[32];
  return result;
}

uint64_t sub_2219F8C74(uint64_t a1)
{
  uint64_t v1 = 0;
  unsigned int v2 = 0;
  do
  {
    unsigned int v3 = vaddvq_s32(vmlaq_s32((int32x4_t)v2, (int32x4_t)xmmword_221A39798[v1], *(int32x4_t *)(a1 + 48 + v1 * 16)));
    unsigned int v2 = v3;
    ++v1;
  }
  while (v1 != 4);
  int32x2_t v4 = vmla_s32((int32x2_t)vaddvq_s32(vmlaq_s32((int32x4_t)vaddvq_s32(vmlaq_s32((int32x4_t)v3, *(int32x4_t *)(a1 + 112), (int32x4_t)xmmword_221A39740)), *(int32x4_t *)(a1 + 20), vdupq_n_s32(0x2BCu))), *(int32x2_t *)(a1 + 40), (int32x2_t)0x15E000000C8);
  return vpadd_s32(v4, v4).u32[0] + 10 * *(_DWORD *)(a1 + 4);
}

double sub_2219F8D18(uint64_t a1)
{
  *(_OWORD *)(a1 + 204) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)&double result = 0x800080007FFF7FFFLL;
  *(void *)(a1 + 220) = 0x800080007FFF7FFFLL;
  return result;
}

uint64_t sub_2219F8D4C(_DWORD *a1, uint64_t a2, int a3)
{
  uint64_t v5 = *(unsigned __int8 **)(a2 + 40);
  if (v5[1] > 1u)
  {
    uint64_t result = sub_2219F9098(a2, (uint64_t)(a1 + 34), (uint64_t)(a1 + 50), a1 + 54, (uint64_t)(a1 + 55), (uint64_t)(a1 + 56));
    uint64_t v8 = a1 + 24;
    ++a1[22];
    int v9 = a1 + 25;
    int v10 = a1 + 26;
    uint64_t v11 = a1 + 31;
    int v7 = a1 + 23;
  }
  else
  {
    uint64_t result = (uint64_t)sub_2219F8EA4(a1, a2);
    int v7 = a1 + 4;
    uint64_t v8 = a1 + 5;
    int v9 = a1 + 6;
    int v10 = a1 + 7;
    uint64_t v11 = a1 + 12;
  }
  *v7 += a3;
  if ((v5[1] & 0xFE) == 4)
  {
    ++*v10;
LABEL_11:
    ++*v11;
    goto LABEL_12;
  }
  if (v5[52])
  {
    ++*v8;
    v10 += vaddvq_s32((int32x4_t)(*(_OWORD *)&vshlq_u32((uint32x4_t)vdupq_n_s32(v5[52]), (uint32x4_t)xmmword_221A39750) & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  }
  ++*v10;
  if (!v5[53]) {
    goto LABEL_11;
  }
  ++*v9;
  unint64_t v12 = v5[53];
  if (v12 <= 2)
  {
    v11 += v12;
    goto LABEL_11;
  }
LABEL_12:
  *a1 += 256;
  a1[3] += v5[55];
  return result;
}

_DWORD *sub_2219F8EA4(_DWORD *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  int v3 = *(unsigned __int8 *)(v2 + 1);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 2);
  if (v3 | v4)
  {
    int v10 = &result[byte_221A3C5F0[v4]];
    ++v10[15];
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = *(void *)(a2 + 176) + 32;
    do
    {
      unsigned int v7 = *(unsigned __int8 *)(v6 + v5);
      if (v7 <= 8)
      {
        int v8 = 1 << v7;
        if ((v8 & 0x1E0) != 0)
        {
          int v9 = result + 21;
        }
        else if ((v8 & 0x1C) != 0)
        {
          int v9 = result + 20;
        }
        else
        {
          int v9 = result + 19;
        }
        ++*v9;
      }
      ++v5;
    }
    while (v5 != 16);
  }
  return result;
}

int *sub_2219F8F38(_DWORD *a1, _DWORD *a2)
{
  int v4 = a1[1];
  *a1 += *a2;
  a1[1] = v4 + a2[1];
  int v5 = a1[3];
  a1[2] += a2[2];
  a1[3] = v5 + a2[3];
  sub_2219F89A4(a1 + 4, a2 + 4);
  return sub_2219F8B3C(a1 + 22, a2 + 22);
}

uint64_t sub_2219F8FB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 8) = a2;
  return result;
}

uint64_t sub_2219F8FC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4) += a2;
  return result;
}

unint64_t sub_2219F8FD0(uint64_t a1, unsigned int a2)
{
  unsigned int v4 = sub_2219F8A4C(a1 + 16, a2);
  unint64_t v5 = sub_2219F8C74(a1 + 88) + (unint64_t)v4;
  if (a2 <= 9 && ((1 << a2) & 0x294) != 0)
  {
    LODWORD(v6) = *(_DWORD *)(a1 + 4);
    unint64_t v7 = (unint64_t)((double)(v5 << 23) + (double)v6 * 61236840.0);
  }
  else
  {
    unint64_t v7 = 8808038 * (v5 + (10 * *(_DWORD *)(a1 + 4)));
  }
  return (v7 / 0x64 + 0x400000) >> 23;
}

uint64_t sub_2219F9098(uint64_t result, uint64_t a2, uint64_t a3, _DWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *(void *)(result + 48);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 272);
  if (v7 <= 4)
  {
    uint64_t v8 = *(void *)(result + 40);
    int v9 = *(unsigned __int8 *)(v8 + 1);
    BOOL v10 = v9 == 5 || v9 == 3;
    if (v10)
    {
      if (*(unsigned char *)v6) {
        uint64_t v11 = (unsigned __int8 *)&unk_221A3C6B4;
      }
      else {
        uint64_t v11 = (unsigned __int8 *)&unk_221A3C69D;
      }
    }
    else
    {
      uint64_t v11 = (unsigned __int8 *)&unk_221A3C698;
    }
    uint64_t v12 = a2 + 16 * v11[*(unsigned __int8 *)(v8 + 2)];
    if (v9 != 4) {
      a3 = v12;
    }
    if (*(unsigned char *)(v6 + 272))
    {
      uint64_t v14 = 0;
      int v15 = 0;
      uint64_t v16 = *(void *)(*(void *)(result + 176) + 112);
      uint64_t result = 2;
      do
      {
        uint64_t v17 = *(unsigned __int8 *)(v6 + 16 + 16 * v14 + 15);
        unsigned int v18 = *(unsigned __int16 *)(v6 + 26);
        if (v18 >= 0x103) {
          unsigned int v18 = 259;
        }
        unsigned int v19 = word_267F63970[40 * v18 + 24 + v14];
        int v20 = v19 * (v19 >> 8);
        uint64_t v21 = v16 + 16 * v14;
        if (v17 == 6)
        {
          uint64_t v22 = 0;
          __int16 v23 = *(_WORD *)(v21 + 2);
          int v24 = *(unsigned char *)v21 & 3;
          int v25 = v23 & 3;
          if (v25 == 2 || v24 == 2) {
            uint64_t v27 = 3;
          }
          else {
            uint64_t v27 = 2;
          }
          BOOL v10 = v24 == 0;
          int v28 = v25 | v24;
          if (v10 || v25 == 0) {
            uint64_t v30 = 1;
          }
          else {
            uint64_t v30 = v27;
          }
          if (v28) {
            uint64_t v31 = v30;
          }
          else {
            uint64_t v31 = 0;
          }
          ++*(_DWORD *)(a3 + 4 * v31);
          if ((unsigned __int16)(v23 - 112) >= 0xFF24u) {
            int v32 = 0;
          }
          else {
            int v32 = v20;
          }
          int v33 = v32 + v15;
          __int16 v34 = *(_WORD *)(v21 + 6);
          int v35 = *(unsigned char *)(v21 + 4) & 3;
          int v36 = v34 & 3;
          if (v36 == 2 || v35 == 2) {
            uint64_t v38 = 3;
          }
          else {
            uint64_t v38 = 2;
          }
          BOOL v10 = v36 == 0;
          int v39 = v36 | v35;
          if (v10) {
            uint64_t v38 = 1;
          }
          if ((*(unsigned char *)(v21 + 4) & 3) != 0) {
            uint64_t v40 = v38;
          }
          else {
            uint64_t v40 = 1;
          }
          if (!v39) {
            uint64_t v40 = 0;
          }
          ++*(_DWORD *)(a3 + 4 * v40);
          if ((unsigned __int16)(v34 - 112) >= 0xFF24u) {
            int v20 = 0;
          }
          char v41 = 1;
          do
          {
            uint64_t v42 = 0;
            char v43 = v41;
            char v44 = 1;
            uint64_t v45 = v21 + 4 * v22;
            do
            {
              char v46 = v44;
              int v47 = *(__int16 *)(v45 + 2 * v42);
              if (*(__int16 *)(a5 + 2 * v42) > v47)
              {
                *(_WORD *)(a5 + 2 * v42) = v47;
                LOWORD(v47) = *(_WORD *)(v45 + 2 * v42);
              }
              if (*(__int16 *)(a6 + 2 * v42) < (__int16)v47) {
                *(_WORD *)(a6 + 2 * v42) = v47;
              }
              char v44 = 0;
              uint64_t v42 = 1;
            }
            while ((v46 & 1) != 0);
            char v41 = 0;
            uint64_t v22 = 1;
          }
          while ((v43 & 1) != 0);
          int v15 = v33 + v20;
        }
        else
        {
          uint64_t v48 = 0;
          uint64_t v49 = v21 + 4 * (v17 - 4);
          __int16 v50 = *(_WORD *)(v49 + 2);
          int v51 = *(unsigned char *)v49 & 3;
          int v52 = v50 & 3;
          if (v52 == 2 || v51 == 2) {
            uint64_t v54 = 3;
          }
          else {
            uint64_t v54 = 2;
          }
          BOOL v10 = v51 == 0;
          int v55 = v52 | v51;
          if (v10 || v52 == 0) {
            uint64_t v57 = 1;
          }
          else {
            uint64_t v57 = v54;
          }
          if (v55) {
            uint64_t v58 = v57;
          }
          else {
            uint64_t v58 = 0;
          }
          ++*(_DWORD *)(a3 + 4 * v58);
          if ((unsigned __int16)(v50 - 112) >= 0xFF24u) {
            int v20 = 0;
          }
          char v59 = 1;
          do
          {
            char v60 = v59;
            int v61 = *(__int16 *)(v49 + 2 * v48);
            if (*(__int16 *)(a5 + 2 * v48) > v61)
            {
              *(_WORD *)(a5 + 2 * v48) = v61;
              LOWORD(v61) = *(_WORD *)(v49 + 2 * v48);
            }
            if (*(__int16 *)(a6 + 2 * v48) < (__int16)v61) {
              *(_WORD *)(a6 + 2 * v48) = v61;
            }
            char v59 = 0;
            uint64_t v48 = 1;
          }
          while ((v60 & 1) != 0);
          v15 += v20;
        }
        ++v14;
      }
      while (v14 != v7);
    }
    else
    {
      int v15 = 0;
    }
    *a4 += v15;
  }
  return result;
}

void sub_2219F933C(uint64_t a1)
{
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 108) = 0;
  *(void *)(a1 + 28) = 0;
  *(unsigned char *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 100) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(unsigned char *)(a1 + 96) = 0;
  *(_OWORD *)a1 = xmmword_221A39760;
  *(unsigned char *)(a1 + 36) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  uint64_t v2 = *(void **)(a1 + 56);
  if (v2)
  {
    j__free(v2);
    *(void *)(a1 + 56) = 0;
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 140) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 136) = 0;
}

void sub_2219F93C0(_DWORD *a1, int a2)
{
  *a1 = a2;
}

uint64_t sub_2219F93EC(int *a1, int a2, unsigned int a3, unsigned int a4, unsigned int a5, int a6)
{
  int v7 = a1[4];
  *((unsigned char *)a1 + 109) = 0;
  int v8 = *a1;
  if (*a1 <= 1) {
    return a1[5];
  }
  if (*((unsigned char *)a1 + 36) && *((void *)a1 + 5) > (unint64_t)a5)
  {
    while (1)
    {
      unsigned int v15 = a1[12];
      if (v15 >= a5) {
        break;
      }
      uint64_t v16 = (unsigned int *)(*((void *)a1 + 7) + 16 * v15);
      sub_2219F93EC(a1, *v16, v16[1], *((unsigned __int8 *)v16 + 12));
    }
    if (v15 > a5) {
      return a1[5];
    }
    int v8 = *a1;
  }
  unsigned int v17 = a1[3];
  unsigned int v18 = v8 - 1;
  if (v17 < v18)
  {
    if (!a1[28])
    {
      uint64_t result = v7 + 2 * a3 - (a1[2] + a2);
      if (!a6) {
        return result;
      }
      goto LABEL_20;
    }
    if (!v17)
    {
      uint64_t result = a3 + v18 * (a3 >> 1) - (a1[2] + a2);
      if (!a6) {
        return result;
      }
      goto LABEL_20;
    }
  }
  int v19 = v7 + a3 - (a1[2] + a2);
  int v20 = a1[5];
  if (v19 >= v20) {
    uint64_t result = v20;
  }
  else {
    uint64_t result = v19;
  }
  if (!a6) {
    return result;
  }
LABEL_20:
  if (a4 <= 9 && ((1 << a4) & 0x294) != 0) {
    a1[8] = v17;
  }
  if (v17 >= v18) {
    goto LABEL_29;
  }
  if (a1[28])
  {
    if (!v17)
    {
      a1[5] = v18 * a3;
      uint64_t v21 = a1 + 7;
LABEL_28:
      *uint64_t v21 = a2;
    }
  }
  else
  {
    uint64_t v21 = a1 + 7;
    int v22 = a1[7];
    a1[5] += a3;
    if (!v22) {
      goto LABEL_28;
    }
  }
LABEL_29:
  if (a1[29])
  {
    if (!*((unsigned char *)a1 + 136))
    {
      int v23 = a1[5];
      if ((int)result >= v23)
      {
        a1[30] = a5;
        a1[32] = a5;
        a1[33] = v23;
      }
      else if ((int)result < a1[33])
      {
        a1[32] = a5;
        a1[33] = result;
      }
    }
    if (a1[13] - 1 == a5 && (int)result < (int)(v18 * (a3 >> 1))) {
      *((_WORD *)a1 + 54) = 257;
    }
  }
  a1[3] = v17 + 1;
  a1[4] = result;
  a1[7] = (a2 - a1[7] + 32 * a1[7]) >> 5;
  if ((int)result < -a1[1]) {
    *((_WORD *)a1 + 54) = 257;
  }
  if (*((unsigned char *)a1 + 36))
  {
    if (a1[13] == a5) {
      a1[13] = a5 + 1;
    }
    if (a1[12] == a5 && *((void *)a1 + 5) > (unint64_t)a5)
    {
      *(_DWORD *)(*((void *)a1 + 7) + 16 * a5) = a2;
      *(_DWORD *)(*((void *)a1 + 7) + 16 * a1[12] + 8) = a1[4];
      *(unsigned char *)(*((void *)a1 + 7) + 16 * a1[12] + 12) = a4;
      *(_DWORD *)(*((void *)a1 + 7) + 16 * a1[12]++ + 4) = a3;
    }
  }
  return result;
}

uint64_t sub_2219F9688(int *a1, int a2, unsigned int a3, unsigned int a4, unsigned int a5)
{
  return sub_2219F93EC(a1, a2, a3, a4, a5, 1);
}

uint64_t sub_2219F9690(uint64_t result)
{
  *(_WORD *)uint64_t result = 0;
  *(_DWORD *)(result + 4) = -1;
  *(void *)(result + 8) = 0;
  *(unsigned char *)(result + 16) = 0;
  *(_DWORD *)(result + 20) = 1065353216;
  *(unsigned char *)(result + 24) = 0;
  *(void *)(result + 28) = 1065353216;
  return result;
}

uint64_t sub_2219F96B8(uint64_t a1)
{
  return *(unsigned int *)(*(void *)(a1 + 5041656) + 112);
}

uint64_t sub_2219F96CC(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 5041656) + 120);
}

uint64_t sub_2219F96E0(uint64_t a1)
{
  return *(unsigned int *)(*(void *)(a1 + 5041656) + 136);
}

uint64_t sub_2219F96F4(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 5041656) + 144);
}

uint64_t sub_2219F9708(uint64_t a1, unsigned int *a2, unsigned int *a3, unsigned __int8 *a4)
{
  uint64_t v4 = *a4;
  uint64_t v5 = a4[1];
  if (v4 == 32 || v5 == 32)
  {
    if (v5 == 32 && v4 == 32) {
      return 4294958327;
    }
    if (*(unsigned char *)(a1 + 29)) {
      return 4294958327;
    }
    unsigned int v34 = a2[1];
    unsigned int v35 = a3[1];
    if (v34 > v35) {
      return 4294958327;
    }
    int v36 = v5 == 32 ? a4 : a4 + 1;
    uint64_t v37 = *(void *)(*(void *)(a1 + 8 * (v5 != 32) + 224) + 8 * *v36);
    uint64_t v38 = *(void *)(a1 + 216);
    if (!v37 || v38 == 0) {
      return 4294958327;
    }
    if (*(_DWORD *)(v37 + 132) != *(_DWORD *)(v38 + 132)) {
      return 4294958327;
    }
    if (*(_DWORD *)(v37 + 148) != *(_DWORD *)(v38 + 148)) {
      return 4294958327;
    }
    uint64_t v40 = (char *)*(unsigned int *)(v37 + 168);
    if (v40 != *(_DWORD *)(v38 + 168)) {
      return 4294958327;
    }
    unint64_t v41 = *(unsigned int *)(v37 + 184);
    if (v41 != *(_DWORD *)(v38 + 184)) {
      return 4294958327;
    }
    unsigned int v42 = *a2;
    uint64_t v43 = 16 * *a2;
    uint64_t v44 = 16 * v34 * v40;
    uint64_t v45 = (char *)(*(void *)(v37 + 64) + v43 + v44);
    char v46 = (char *)(*(void *)(v38 + 64) + v43 + v44);
    __dst = &v40[(void)v46];
    unsigned int v47 = *a3;
    uint64_t v48 = &v40[(void)v45];
    uint64_t v49 = (2 * v40);
    int v141 = &v46[v49];
    int v140 = &v45[v49];
    uint64_t v50 = (3 * v40);
    __int16 v145 = &v46[v50];
    __int16 v144 = &v45[v50];
    uint64_t v51 = (4 * v40);
    int v147 = &v46[v51];
    int v146 = &v45[v51];
    uint64_t v52 = (5 * v40);
    int v151 = &v46[v52];
    int v150 = &v45[v52];
    uint64_t v53 = (6 * v40);
    int v153 = &v46[v53];
    int v152 = &v45[v53];
    uint64_t v54 = (8 * v40);
    uint64_t v55 = (7 * v40);
    __int16 v157 = &v46[v55];
    int v156 = &v45[v55];
    int v160 = &v46[v54];
    uint64_t v56 = (11 * v40);
    uint64_t v57 = (13 * v40);
    uint64_t v58 = (14 * v40);
    uint64_t v59 = (15 * v40);
    __src = &v45[v54];
    uint64_t v60 = (9 * v40);
    __int16 v142 = &v46[v60];
    __int16 v143 = &v45[v60];
    uint64_t v61 = (10 * v40);
    int v148 = &v46[v61];
    int v149 = &v45[v61];
    int v154 = &v46[v56];
    int v155 = &v45[v56];
    uint64_t v62 = (12 * v40);
    __int16 v158 = &v46[v62];
    __int16 v162 = &v45[v62];
    int v164 = &v46[v57];
    __int16 v166 = &v45[v57];
    __int16 v168 = &v46[v58];
    int v170 = &v45[v58];
    __int16 v186 = &v46[v59];
    int v63 = &v45[v59];
    if (v34 == v35)
    {
      size_t v64 = 16 * (v47 - v42) + 16;
      memcpy(v46, v45, v64);
      memcpy(__dst, v48, v64);
      memcpy(v141, v140, v64);
      memcpy(v145, v144, v64);
      memcpy(v147, v146, v64);
      memcpy(v151, v150, v64);
      memcpy(v153, v152, v64);
      memcpy(v157, v156, v64);
      memcpy(v160, __src, v64);
      memcpy(v142, v143, v64);
      memcpy(v148, v149, v64);
      memcpy(v154, v155, v64);
      memcpy(v158, v162, v64);
      memcpy(v164, v166, v64);
      memcpy(v168, v170, v64);
      memcpy(v186, v63, v64);
      int v65 = (char *)(*(void *)(v37 + 72) + v43 + *(_DWORD *)(v37 + 184) * 8 * v34);
      char v66 = (char *)(*(void *)(v38 + 72) + v43 + *(_DWORD *)(v38 + 184) * 8 * v34);
      memcpy(v66, v65, v64);
      memcpy(&v66[v41], &v65[v41], v64);
      memcpy(&v66[(2 * v41)], &v65[(2 * v41)], v64);
      memcpy(&v66[(3 * v41)], &v65[(3 * v41)], v64);
      memcpy(&v66[(4 * v41)], &v65[(4 * v41)], v64);
      memcpy(&v66[(5 * v41)], &v65[(5 * v41)], v64);
      memcpy(&v66[(6 * v41)], &v65[(6 * v41)], v64);
      uint64_t v67 = (7 * v41);
      BOOL v68 = &v66[v67];
      __int32 v69 = &v65[v67];
      size_t v70 = v64;
    }
    else
    {
      uint64_t v172 = (9 * v40);
      uint64_t v173 = (10 * v40);
      unsigned int v137 = v47;
      uint64_t v174 = (12 * v40);
      uint64_t v175 = (2 * v40);
      uint64_t v176 = (3 * v40);
      uint64_t v177 = (4 * v40);
      uint64_t v178 = (5 * v40);
      uint64_t v179 = (6 * v40);
      uint64_t v180 = (7 * v40);
      uint64_t v181 = (11 * v40);
      uint64_t v182 = (8 * v40);
      uint64_t v183 = (13 * v40);
      uint64_t v184 = (14 * v40);
      uint64_t v185 = (15 * v40);
      size_t v115 = (*(_DWORD *)(v37 + 164) - v43);
      memcpy(v46, v45, v115);
      memcpy(__dst, v48, v115);
      memcpy(v141, v140, v115);
      memcpy(v145, v144, v115);
      memcpy(v147, v146, v115);
      memcpy(v151, v150, v115);
      memcpy(v153, v152, v115);
      memcpy(v157, v156, v115);
      memcpy(v160, __src, v115);
      memcpy(v142, v143, v115);
      memcpy(v148, v149, v115);
      memcpy(v154, v155, v115);
      memcpy(v158, v162, v115);
      memcpy(v164, v166, v115);
      memcpy(v168, v170, v115);
      memcpy(v186, v63, v115);
      BOOL v116 = (char *)(*(void *)(v37 + 72) + v43 + *(_DWORD *)(v37 + 184) * 8 * v34);
      int v117 = (char *)(*(void *)(v38 + 72) + v43 + *(_DWORD *)(v38 + 184) * 8 * v34);
      memcpy(v117, v116, v115);
      memcpy(&v117[v41], &v116[v41], v115);
      uint64_t v171 = (2 * v41);
      memcpy(&v117[v171], &v116[v171], v115);
      uint64_t v169 = (3 * v41);
      memcpy(&v117[v169], &v116[v169], v115);
      uint64_t v167 = (4 * v41);
      memcpy(&v117[v167], &v116[v167], v115);
      uint64_t v165 = (5 * v41);
      memcpy(&v117[v165], &v116[v165], v115);
      unint64_t v163 = (6 * v41);
      memcpy(&v117[v163], &v116[v163], v115);
      uint64_t v118 = (7 * v41);
      int v119 = &v117[v118];
      uint64_t v120 = v118;
      memcpy(v119, &v116[v118], v115);
      unsigned int v121 = v35 - (v34 + 1);
      if (v35 != v34 + 1)
      {
        size_t v128 = *(unsigned int *)(v37 + 164);
        if (v128 != *(_DWORD *)(v37 + 180)) {
          return 4294958327;
        }
        __int16 v159 = (char *)v41;
        __int16 v161 = v40;
        int v129 = v121 <= 1 ? 1 : v35 - (v34 + 1);
        int v130 = 16 * v34 + 16;
        int v131 = 8 * v34 + 8;
        uint64_t v187 = v120;
        do
        {
          char v132 = (const void *)(*(void *)(v37 + 64) + (*(_DWORD *)(v37 + 168) * v130));
          char v133 = (void *)(*(void *)(v38 + 64) + (*(_DWORD *)(v38 + 168) * v130));
          memcpy(v133, v132, v128);
          memcpy(&v161[(void)v133], &v161[(void)v132], v128);
          memcpy((char *)v133 + v175, (char *)v132 + v175, v128);
          memcpy((char *)v133 + v176, (char *)v132 + v176, v128);
          memcpy((char *)v133 + v177, (char *)v132 + v177, v128);
          memcpy((char *)v133 + v178, (char *)v132 + v178, v128);
          memcpy((char *)v133 + v179, (char *)v132 + v179, v128);
          memcpy((char *)v133 + v180, (char *)v132 + v180, v128);
          memcpy((char *)v133 + v182, (char *)v132 + v182, v128);
          memcpy((char *)v133 + v172, (char *)v132 + v172, v128);
          memcpy((char *)v133 + v173, (char *)v132 + v173, v128);
          memcpy((char *)v133 + v181, (char *)v132 + v181, v128);
          memcpy((char *)v133 + v174, (char *)v132 + v174, v128);
          memcpy((char *)v133 + v183, (char *)v132 + v183, v128);
          memcpy((char *)v133 + v184, (char *)v132 + v184, v128);
          memcpy((char *)v133 + v185, (char *)v132 + v185, v128);
          BOOL v134 = (const void *)(*(void *)(v37 + 72) + (*(_DWORD *)(v37 + 184) * v131));
          int8x16x2_t v135 = (void *)(*(void *)(v38 + 72) + (*(_DWORD *)(v38 + 184) * v131));
          memcpy(v135, v134, v128);
          memcpy(&v159[(void)v135], &v159[(void)v134], v128);
          memcpy((char *)v135 + v171, (char *)v134 + v171, v128);
          memcpy((char *)v135 + v169, (char *)v134 + v169, v128);
          memcpy((char *)v135 + v167, (char *)v134 + v167, v128);
          memcpy((char *)v135 + v165, (char *)v134 + v165, v128);
          memcpy((char *)v135 + v163, (char *)v134 + v163, v128);
          int v136 = (char *)v134 + v187;
          uint64_t v120 = v187;
          memcpy((char *)v135 + v187, v136, v128);
          v130 += 16;
          v131 += 8;
          --v121;
          --v129;
        }
        while (v129);
        unint64_t v41 = (unint64_t)v159;
        uint64_t v40 = v161;
        if (v121) {
          return 4294958327;
        }
      }
      uint64_t v122 = v120;
      int v123 = (char *)(*(void *)(v37 + 64) + *(_DWORD *)(v37 + 168) * 16 * v35);
      __int16 v124 = (char *)(*(void *)(v38 + 64) + *(_DWORD *)(v38 + 168) * 16 * v35);
      size_t v125 = 16 * v137 + 16;
      memcpy(v124, v123, v125);
      memcpy(&v40[(void)v124], &v40[(void)v123], v125);
      memcpy(&v124[v175], &v123[v175], v125);
      memcpy(&v124[v176], &v123[v176], v125);
      memcpy(&v124[v177], &v123[v177], v125);
      memcpy(&v124[v178], &v123[v178], v125);
      memcpy(&v124[v179], &v123[v179], v125);
      memcpy(&v124[v180], &v123[v180], v125);
      memcpy(&v124[v182], &v123[v182], v125);
      memcpy(&v124[v172], &v123[v172], v125);
      memcpy(&v124[v173], &v123[v173], v125);
      memcpy(&v124[v181], &v123[v181], v125);
      memcpy(&v124[v174], &v123[v174], v125);
      memcpy(&v124[v183], &v123[v183], v125);
      memcpy(&v124[v184], &v123[v184], v125);
      memcpy(&v124[v185], &v123[v185], v125);
      char v126 = (char *)(*(void *)(v37 + 72) + *(_DWORD *)(v37 + 184) * 8 * v35);
      BOOL v127 = (char *)(*(void *)(v38 + 72) + *(_DWORD *)(v38 + 184) * 8 * v35);
      memcpy(v127, v126, v125);
      memcpy(&v127[v41], &v126[v41], v125);
      memcpy(&v127[v171], &v126[v171], v125);
      memcpy(&v127[v169], &v126[v169], v125);
      memcpy(&v127[v167], &v126[v167], v125);
      memcpy(&v127[v165], &v126[v165], v125);
      memcpy(&v127[v163], &v126[v163], v125);
      BOOL v68 = &v127[v122];
      __int32 v69 = &v126[v122];
      size_t v70 = v125;
    }
    memcpy(v68, v69, v70);
    return 0;
  }
  if (*(unsigned char *)(a1 + 29)) {
    return 4294958327;
  }
  unsigned int v7 = a2[1];
  unsigned int v8 = a3[1];
  if (v7 > v8) {
    return 4294958327;
  }
  uint64_t v9 = *(void *)(a1 + 216);
  uint64_t v10 = *(void *)(*(void *)(a1 + 224) + 8 * v4);
  uint64_t v11 = *(unsigned int *)(v10 + 168);
  if (v11 != *(_DWORD *)(v9 + 168)) {
    return 4294958327;
  }
  uint64_t v12 = *(unsigned int *)(v10 + 184);
  if (v12 != *(_DWORD *)(v9 + 184)) {
    return 4294958327;
  }
  unsigned int v13 = *a2;
  unsigned int v14 = *a3;
  uint64_t v15 = *(void *)(*(void *)(a1 + 232) + 8 * v5);
  if (v7 == v8)
  {
    unsigned int v16 = v14 - v13;
    if (v14 >= v13)
    {
      int v17 = 0;
      uint64_t v18 = 16 * v13;
      uint64_t v19 = v11 * 16 * v7;
      uint64_t v20 = *(void *)(v10 + 64) + v18 + v19;
      uint64_t v21 = *(void *)(v15 + 64) + v18 + *(_DWORD *)(v15 + 168) * 16 * v7;
      uint64_t v22 = *(void *)(v9 + 64) + v18 + v19;
      unint64_t v23 = 16 * v16 + 16;
      unint64_t v24 = v23 >> 4;
      if (v23 >> 4 <= 1) {
        LODWORD(v24) = 1;
      }
      do
      {
        if (v23)
        {
          uint64_t v25 = 0;
          do
          {
            *(uint8x16_t *)(v22 + 16 * v25) = vrhaddq_u8(*(uint8x16_t *)(v20 + 16 * v25), *(uint8x16_t *)(v21 + 16 * v25));
            ++v25;
          }
          while (v24 != v25);
        }
        v20 += v11;
        v21 += v11;
        v22 += v11;
        ++v17;
      }
      while (v17 != 16);
      int v26 = 0;
      int v27 = 8 * v7;
      uint64_t v28 = *(void *)(v10 + 72) + v18 + (*(_DWORD *)(v10 + 184) * v27);
      uint64_t v29 = *(void *)(v15 + 72) + v18 + (*(_DWORD *)(v15 + 184) * v27);
      uint64_t v30 = *(void *)(v9 + 72) + v18 + (*(_DWORD *)(v9 + 184) * v27);
      unint64_t v31 = v23 >> 4;
      if (v23 >> 4 <= 1) {
        LODWORD(v31) = 1;
      }
      do
      {
        if (v23)
        {
          uint64_t v32 = 0;
          do
          {
            *(uint8x16_t *)(v30 + 16 * v32) = vrhaddq_u8(*(uint8x16_t *)(v28 + 16 * v32), *(uint8x16_t *)(v29 + 16 * v32));
            ++v32;
          }
          while (v31 != v32);
        }
        uint64_t result = 0;
        v28 += v12;
        v29 += v12;
        v30 += v12;
        ++v26;
      }
      while (v26 != 8);
      return result;
    }
    return 4294958327;
  }
  int v71 = 0;
  uint64_t v72 = 16 * v13;
  uint64_t v73 = v11 * 16 * v7;
  uint64_t v74 = *(void *)(v10 + 64) + v72 + v73;
  uint64_t v75 = *(void *)(v15 + 64) + v72 + *(_DWORD *)(v15 + 168) * 16 * v7;
  uint64_t v76 = *(void *)(v9 + 64) + v72 + v73;
  unint64_t v77 = *(_DWORD *)(v10 + 164) - 16 * v13;
  unint64_t v78 = v77 >> 4;
  if (v77 >> 4 <= 1) {
    LODWORD(v78) = 1;
  }
  do
  {
    if (v77 >= 0x10)
    {
      uint64_t v79 = 0;
      do
      {
        *(uint8x16_t *)(v76 + 16 * v79) = vrhaddq_u8(*(uint8x16_t *)(v74 + 16 * v79), *(uint8x16_t *)(v75 + 16 * v79));
        ++v79;
      }
      while (v78 != v79);
    }
    v74 += v11;
    v75 += v11;
    v76 += v11;
    ++v71;
  }
  while (v71 != 16);
  int v80 = 0;
  uint64_t v81 = *(void *)(v10 + 72) + v72 + *(_DWORD *)(v10 + 184) * 8 * v7;
  uint64_t v82 = *(void *)(v15 + 72) + v72 + *(_DWORD *)(v15 + 184) * 8 * v7;
  uint64_t v83 = *(void *)(v9 + 72) + v72 + *(_DWORD *)(v9 + 184) * 8 * v7;
  unint64_t v84 = v77 >> 4;
  if (v77 >> 4 <= 1) {
    LODWORD(v84) = 1;
  }
  do
  {
    if (v77 >= 0x10)
    {
      uint64_t v85 = 0;
      do
      {
        *(uint8x16_t *)(v83 + 16 * v85) = vrhaddq_u8(*(uint8x16_t *)(v81 + 16 * v85), *(uint8x16_t *)(v82 + 16 * v85));
        ++v85;
      }
      while (v84 != v85);
    }
    v81 += v12;
    v82 += v12;
    v83 += v12;
    ++v80;
  }
  while (v80 != 8);
  unsigned int v86 = v7 + 1;
  unsigned int v87 = v8 - v86;
  if (v8 != v86)
  {
    unint64_t v102 = *(unsigned int *)(v10 + 164);
    if (v102 != *(_DWORD *)(v10 + 180)) {
      return 4294958327;
    }
    int v103 = 0;
    if (v87 <= 1) {
      unsigned int v87 = 1;
    }
    unint64_t v104 = v102 >> 4;
    if (v102 >> 4 <= 1) {
      LODWORD(v104) = 1;
    }
    do
    {
      int v105 = 0;
      uint64_t v106 = *(void *)(v10 + 64) + *(_DWORD *)(v10 + 168) * 16 * v86;
      uint64_t v107 = *(void *)(v15 + 64) + *(_DWORD *)(v15 + 168) * 16 * v86;
      uint64_t v108 = *(void *)(v9 + 64) + *(_DWORD *)(v9 + 168) * 16 * v86;
      do
      {
        if (v102 >= 0x10)
        {
          uint64_t v109 = 0;
          do
          {
            *(uint8x16_t *)(v108 + 16 * v109) = vrhaddq_u8(*(uint8x16_t *)(v106 + 16 * v109), *(uint8x16_t *)(v107 + 16 * v109));
            ++v109;
          }
          while (v104 != v109);
        }
        v106 += v11;
        v107 += v11;
        v108 += v11;
        ++v105;
      }
      while (v105 != 16);
      int v110 = 0;
      uint64_t v111 = *(void *)(v10 + 72) + *(_DWORD *)(v10 + 184) * 8 * v86;
      uint64_t v112 = *(void *)(v15 + 72) + *(_DWORD *)(v15 + 184) * 8 * v86;
      uint64_t v113 = *(void *)(v9 + 72) + *(_DWORD *)(v9 + 184) * 8 * v86;
      do
      {
        if (v102 >= 0x10)
        {
          uint64_t v114 = 0;
          do
          {
            *(uint8x16_t *)(v113 + 16 * v114) = vrhaddq_u8(*(uint8x16_t *)(v111 + 16 * v114), *(uint8x16_t *)(v112 + 16 * v114));
            ++v114;
          }
          while (v104 != v114);
        }
        v111 += v12;
        v112 += v12;
        v113 += v12;
        ++v110;
      }
      while (v110 != 8);
      ++v86;
      ++v103;
    }
    while (v103 != v87);
    if (v86 != v8) {
      return 4294958327;
    }
  }
  int v88 = 0;
  uint64_t v89 = *(void *)(v10 + 64) + *(_DWORD *)(v10 + 168) * 16 * v8;
  uint64_t v90 = *(void *)(v15 + 64) + *(_DWORD *)(v15 + 168) * 16 * v8;
  uint64_t v91 = *(void *)(v9 + 64) + *(_DWORD *)(v9 + 168) * 16 * v8;
  unint64_t v92 = 16 * v14 + 16;
  unint64_t v93 = v92 >> 4;
  if (v92 >> 4 <= 1) {
    LODWORD(v93) = 1;
  }
  do
  {
    if (v92)
    {
      uint64_t v94 = 0;
      do
      {
        *(uint8x16_t *)(v91 + 16 * v94) = vrhaddq_u8(*(uint8x16_t *)(v89 + 16 * v94), *(uint8x16_t *)(v90 + 16 * v94));
        ++v94;
      }
      while (v93 != v94);
    }
    v89 += v11;
    v90 += v11;
    v91 += v11;
    ++v88;
  }
  while (v88 != 16);
  int v95 = 0;
  int v96 = 8 * v8;
  uint64_t v97 = *(void *)(v10 + 72) + (*(_DWORD *)(v10 + 184) * v96);
  uint64_t v98 = *(void *)(v15 + 72) + (*(_DWORD *)(v15 + 184) * v96);
  uint64_t v99 = *(void *)(v9 + 72) + (*(_DWORD *)(v9 + 184) * v96);
  unint64_t v100 = v92 >> 4;
  if (v92 >> 4 <= 1) {
    LODWORD(v100) = 1;
  }
  do
  {
    if (v92)
    {
      uint64_t v101 = 0;
      do
      {
        *(uint8x16_t *)(v99 + 16 * v101) = vrhaddq_u8(*(uint8x16_t *)(v97 + 16 * v101), *(uint8x16_t *)(v98 + 16 * v101));
        ++v101;
      }
      while (v100 != v101);
    }
    uint64_t result = 0;
    v97 += v12;
    v98 += v12;
    v99 += v12;
    ++v95;
  }
  while (v95 != 8);
  return result;
}

uint64_t sub_2219FA668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5, uint64_t a6, uint64_t a7, int a8, int a9)
{
  *(void *)(a1 + 336) = *(void *)(a2 + 40);
  *(void *)(a1 + 328) = *(void *)(a3 + 832);
  *(void *)(a1 + 216) = *(void *)(a2 + 88);
  uint64_t v15 = *(void *)(a3 + 832);
  if (!*(unsigned char *)(a7 + 32))
  {
    if (v15 && *(unsigned char *)(v15 + 33))
    {
      char v16 = 2;
      goto LABEL_9;
    }
LABEL_8:
    char v16 = 0;
    goto LABEL_9;
  }
  if (!v15 || *(unsigned char *)(v15 + 33)) {
    goto LABEL_8;
  }
  char v16 = 1;
LABEL_9:
  *(unsigned char *)(a1 + 187) = v16;
  *(void *)(a1 + 224) = a3;
  *(void *)(a1 + 232) = a3 + 272;
  *(unsigned char *)(a1 + 29) = *(unsigned char *)(a7 + 32);
  *(_WORD *)(a1 + 31) = 0;
  if ((a8 & 0xFFFFFFFD) == 1 && a9)
  {
    int v17 = 0;
    *(_DWORD *)(a1 + 240) = 0;
  }
  else
  {
    *(_DWORD *)(a1 + 240) = *(_DWORD *)(a3 + 816);
    int v17 = *(_DWORD *)(a3 + 820);
  }
  *(_DWORD *)(a1 + 244) = v17;
  *(unsigned char *)(a1 + 28) = *(_DWORD *)(a7 + 20);
  *(unsigned char *)(a1 + 29) = *(unsigned char *)(a7 + 32);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a7 + 33);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a6 + 8) == 1;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 216) = a4;
  **(unsigned char **)(a1 + 48) = a5[1338];
  uint64_t v18 = *(unsigned char **)(a1 + 48);
  v18[4] = *(unsigned char *)(a6 + 85);
  v18[5] = *(unsigned char *)(a7 + 60);
  v18[2] = *(_DWORD *)(a7 + 64);
  v18[3] = *(_DWORD *)(a7 + 68);
  sub_2219FA868(a6, (_DWORD *)a7, (void *)a1);
  *(unsigned char *)(*(void *)(a1 + 40) + 56) = *(_DWORD *)(a6 + 80);
  *(unsigned char *)(*(void *)(a1 + 40) + 57) = *(unsigned char *)(a6 + 97);
  *(unsigned char *)(*(void *)(a1 + 48) + 1) = a5[16];
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a6 + 87);
  char v19 = a5[1337];
  if (v19) {
    char v19 = *(unsigned char *)(a7 + 32) == 0;
  }
  *(unsigned char *)(a1 + 185) = v19;
  sub_2219FAB78((uint64_t)a5, a6, a7, a1);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a4 + 1280);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 16);
  if (!*(unsigned char *)(a1 + 188)) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 185))
  {
    *(unsigned char *)(a1 + 189) = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 189) = 1;
    if (!*(void *)(a1 + 200)) {
      return 4294967188;
    }
  }
  if (*(void *)(a1 + 208)) {
    return 0;
  }
  else {
    return 4294967188;
  }
}

uint64_t sub_2219FA868(uint64_t result, _DWORD *a2, void *a3)
{
  uint64_t v3 = a3[6];
  if (*(_DWORD *)(result + 68) == 2 && ((v4 = a2[5], v4 != 6) ? (BOOL v5 = v4 == 1) : (BOOL v5 = 1), v5))
  {
    *(void *)(v3 + 332) = 0x500000005;
    *(void *)(v3 + 348) = 0x2000000020;
  }
  else
  {
    *(_DWORD *)(v3 + 332) = a2[218];
    *(_DWORD *)(v3 + 336) = a2[219];
    *(_DWORD *)(v3 + 348) = 1 << a2[218];
    *(_DWORD *)(v3 + 352) = 1 << a2[219];
    int v6 = a2[218];
    if (v6) {
      int v7 = 1 << (v6 - 1);
    }
    else {
      int v7 = 0;
    }
    *(_DWORD *)(v3 + 340) = v7;
    int v8 = a2[219];
    if (v8) {
      int v9 = 1 << (v8 - 1);
    }
    else {
      int v9 = 0;
    }
    *(_DWORD *)(v3 + 344) = v9;
  }
  int v10 = a2[5];
  if (v10 != 5 && v10) {
    int v11 = 0;
  }
  else {
    int v11 = *(unsigned __int8 *)(result + 64);
  }
  *(_DWORD *)(v3 + 356) = v11;
  int v12 = a2[5];
  if (v12 == 6 || v12 == 1) {
    int v13 = *(_DWORD *)(result + 68);
  }
  else {
    int v13 = 0;
  }
  *(_DWORD *)(v3 + 360) = v13;
  if (v11 | v13)
  {
    int v14 = a2[5];
    uint64_t v15 = a3[6];
    uint64_t v17 = a2[16];
    int v16 = a2[17];
    if ((int)v17 <= v16) {
      int v18 = a2[17];
    }
    else {
      int v18 = a2[16];
    }
    if ((v14 == 6 || v14 == 1) && *(_DWORD *)(result + 68) == 2)
    {
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v19 = (v18 + 1);
        uint64_t v20 = v15 + 1132;
        do
        {
          *(_DWORD *)(v20 + 8) = 0;
          *(void *)uint64_t v20 = 0;
          *(void *)(v20 + 384) = 0;
          *(_DWORD *)(v20 + 392) = 0;
          v20 += 12;
          --v19;
        }
        while (v19);
      }
    }
    else if ((v18 & 0x80000000) == 0)
    {
      uint64_t v21 = 0;
      uint64_t v22 = (v18 + 1);
      uint64_t v23 = a3[6];
      unint64_t v24 = a2;
      do
      {
        for (uint64_t i = 0; i != 3; ++i)
        {
          int v26 = (_DWORD *)(v23 + i * 4);
          v26[91] = v24[i + 252];
          v26[187] = v24[i + 348];
          v26[283] = v24[i + 444];
          v26[379] = v24[i + 540];
        }
        ++v21;
        v24 += 3;
        v23 += 12;
      }
      while (v21 != v22);
    }
    if ((v14 == 6 || v14 == 1) && (v17 & 0x80000000) == 0)
    {
      uint64_t v27 = 0;
      uint64_t v28 = a2 + 252;
      uint64_t v29 = v17 + 1;
      do
      {
        if ((v16 & 0x80000000) == 0)
        {
          uint64_t v30 = 0;
          unint64_t v31 = a2 + 348;
          uint64_t v32 = v15;
          do
          {
            for (uint64_t j = 0; j != 3; ++j)
            {
              int v34 = *(_DWORD *)(result + 68);
              if (v34 == 2)
              {
                uint64_t v36 = *(void *)(a3[28] + 8 * v27);
                int v37 = *(_DWORD *)(v36 + 1280);
                uint64_t v38 = *(void *)(a3[29] + 8 * v30);
                int v39 = *(_DWORD *)(v38 + 1280);
                int v40 = *(unsigned __int8 *)(v36 + 1364);
                if (v39 != v37 && *(unsigned char *)(v38 + 1364) == 0 && v40 == 0)
                {
                  int v44 = (((v39 - v37) >> 1) + 0x4000) / (v39 - v37) * (*(_DWORD *)(a3[27] + 1280) - v37);
                  int v45 = (v44 + 32) >> 6;
                  if (v44 > 65503) {
                    int v45 = 1023;
                  }
                  if (v44 < -65568) {
                    int v45 = -1024;
                  }
                  uint64_t v46 = v32 + j * 4;
                  *(_DWORD *)(v46 + 14188) = v45 >> 2;
                  *(_DWORD *)(v46 + 1900) = 64 - (v45 >> 2);
                  if ((v45 - 516) <= 0xFFFFFCFB)
                  {
                    *(_DWORD *)(v46 + 14188) = 32;
                    *(_DWORD *)(v46 + 1900) = 32;
                  }
                }
                else
                {
                  uint64_t v43 = v32 + j * 4;
                  *(_DWORD *)(v43 + 1900) = 32;
                  *(_DWORD *)(v43 + 14188) = 32;
                }
              }
              else if (v34 == 1)
              {
                uint64_t v35 = v32 + j * 4;
                *(_DWORD *)(v35 + 1900) = v28[j];
                *(_DWORD *)(v35 + 14188) = v31[j];
              }
            }
            ++v30;
            v32 += 12;
            v31 += 3;
          }
          while (v30 != v16 + 1);
        }
        ++v27;
        v15 += 384;
        v28 += 3;
      }
      while (v27 != v29);
    }
  }
  return result;
}

double sub_2219FAB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = *MEMORY[0x263EF8340];
  if (*(unsigned char *)(a2 + 88))
  {
    BOOL v5 = 1;
    *(unsigned char *)(a4 + 1422193) = 1;
  }
  else
  {
    int v6 = *(unsigned __int8 *)(a1 + 21);
    *(unsigned char *)(a4 + 1422193) = *(unsigned char *)(a1 + 21) != 0;
    if (v6) {
      BOOL v5 = 1;
    }
    else {
      BOOL v5 = *(unsigned char *)(a4 + 184) != 0;
    }
  }
  *(unsigned char *)(a4 + 1422192) = v5;
  memset(v55, 0, sizeof(v55));
  if (*(unsigned char *)(a2 + 88))
  {
    if (!*(unsigned char *)(a1 + 21))
    {
LABEL_35:
      uint64_t v17 = 0;
      unint64_t v18 = 0;
      while (1)
      {
        if (v18 <= 5)
        {
          if (*(unsigned char *)(a2 + v18 + 89))
          {
            if (*(unsigned char *)(a2 + v18 + 98))
            {
              if (v18 >= 3) {
                uint64_t v19 = &unk_267F637F0;
              }
              else {
                uint64_t v19 = &unk_267F637E0;
              }
            }
            else
            {
              uint64_t v19 = (_OWORD *)(a2 + v17 + 106);
            }
            goto LABEL_61;
          }
          if (v18 != 3 && v18)
          {
            uint64_t v19 = (_OWORD *)*((void *)v55 + (v18 - 1));
            goto LABEL_61;
          }
          if (*(unsigned char *)(a1 + 21))
          {
            uint64_t v19 = (_OWORD *)*((void *)v55 + v18);
          }
          else
          {
            if (v18) {
              uint64_t v19 = &unk_267F637F0;
            }
            else {
              uint64_t v19 = &unk_267F637E0;
            }
LABEL_61:
            *((void *)v55 + v18) = v19;
          }
          *(_OWORD *)(a4 + 1422194 + v17) = *v19;
          goto LABEL_63;
        }
        if (*(unsigned char *)(a2 + v18 + 89)) {
          break;
        }
        if (!*(unsigned char *)(a1 + 21)) {
          goto LABEL_51;
        }
        uint64_t v21 = (long long *)*((void *)v55 + v18);
LABEL_55:
        uint64_t v22 = (_OWORD *)(a4 + ((unint64_t)(v18 - 6) << 6) + 1422290);
        long long v23 = *v21;
        long long v24 = v21[1];
        long long v25 = v21[3];
        v22[2] = v21[2];
        v22[3] = v25;
        _OWORD *v22 = v23;
        v22[1] = v24;
LABEL_63:
        ++v18;
        v17 += 16;
        if (v18 == 8) {
          goto LABEL_64;
        }
      }
      uint64_t v20 = (v18 - 6);
      if (*(unsigned char *)(a2 + v20 + 104))
      {
LABEL_51:
        if (v18 == 6) {
          uint64_t v21 = (long long *)&unk_267F63800;
        }
        else {
          uint64_t v21 = (long long *)&unk_267F63840;
        }
      }
      else
      {
        uint64_t v21 = (long long *)(a2 + (v20 << 6) + 202);
      }
      *((void *)v55 + v18) = v21;
      goto LABEL_55;
    }
  }
  else if (!*(unsigned char *)(a1 + 21))
  {
    *(void *)&long long v52 = 0x1010101010101010;
    *((void *)&v52 + 1) = 0x1010101010101010;
    *(_OWORD *)(a4 + 1422258) = v52;
    *(_OWORD *)(a4 + 1422274) = v52;
    *(_OWORD *)(a4 + 1422226) = v52;
    *(_OWORD *)(a4 + 1422242) = v52;
    *(_OWORD *)(a4 + 1422194) = v52;
    *(_OWORD *)(a4 + 1422210) = v52;
    if (*(unsigned char *)(a3 + 32) || *(unsigned char *)(a1 + 1337))
    {
      *(_OWORD *)(a4 + 1422482) = v52;
      *(_OWORD *)(a4 + 1422498) = v52;
      *(_OWORD *)(a4 + 1422450) = v52;
      *(_OWORD *)(a4 + 1422466) = v52;
      *(_OWORD *)(a4 + 1422418) = v52;
      *(_OWORD *)(a4 + 1422434) = v52;
    }
    memcpy((void *)(a4 + 1422656), &unk_221A39BA0, 0x300uLL);
    memcpy((void *)(a4 + 1423424), &unk_221A39BA0, 0x300uLL);
    v46.i64[0] = 0x10000D0010000D0;
    *(_OWORD *)(a4 + 1424224) = xmmword_221A39F20;
    *(_OWORD *)(a4 + 1424240) = unk_221A39F30;
    *(_OWORD *)(a4 + 1424256) = xmmword_221A39F40;
    *(_OWORD *)(a4 + 1424272) = unk_221A39F50;
    *(_OWORD *)(a4 + 1424192) = xmmword_221A39F00;
    *(_OWORD *)(a4 + 1424208) = unk_221A39F10;
    *(_OWORD *)(a4 + 1424320) = xmmword_221A39F20;
    *(_OWORD *)(a4 + 1424336) = unk_221A39F30;
    *(_OWORD *)(a4 + 1424352) = xmmword_221A39F40;
    *(_OWORD *)(a4 + 1424368) = unk_221A39F50;
    *(_OWORD *)(a4 + 1424288) = xmmword_221A39F00;
    *(_OWORD *)(a4 + 1424304) = unk_221A39F10;
    return *(double *)v46.i64;
  }
  uint64_t v7 = 0;
  for (unint64_t i = 0; i != 8; ++i)
  {
    if (i > 5)
    {
      uint64_t v11 = (i - 6);
      if (*(unsigned char *)(a1 + i + 22) && !*(unsigned char *)(a1 + v11 + 36))
      {
        int v12 = (long long *)(a1 + (v11 << 6) + 134);
      }
      else if (i == 6)
      {
        int v12 = (long long *)&unk_267F63800;
      }
      else
      {
        int v12 = (long long *)&unk_267F63840;
      }
      *((void *)v55 + i) = v12;
      int v13 = (_OWORD *)(a4 + (v11 << 6) + 1422290);
      long long v14 = v12[3];
      long long v16 = *v12;
      long long v15 = v12[1];
      v13[2] = v12[2];
      v13[3] = v14;
      *int v13 = v16;
      v13[1] = v15;
    }
    else
    {
      if (*(unsigned char *)(a1 + i + 22))
      {
        if (i >= 3) {
          int v9 = &unk_267F637F0;
        }
        else {
          int v9 = &unk_267F637E0;
        }
        if (*(unsigned char *)(a1 + i + 30)) {
          int v10 = v9;
        }
        else {
          int v10 = (_OWORD *)(a1 + v7 + 38);
        }
      }
      else if (i != 3 && i)
      {
        int v10 = (_OWORD *)*((void *)v55 + (i - 1));
      }
      else if (i)
      {
        int v10 = &unk_267F637F0;
      }
      else
      {
        int v10 = &unk_267F637E0;
      }
      *((void *)v55 + i) = v10;
      *(_OWORD *)(a4 + 1422194 + v7) = *v10;
    }
    v7 += 16;
  }
  if (*(unsigned char *)(a2 + 88)) {
    goto LABEL_35;
  }
LABEL_64:
  if (*(unsigned char *)(a3 + 32) || *(unsigned char *)(a1 + 1337))
  {
    unint64_t v26 = 0;
    uint64_t v27 = a4 + 1422194;
    unsigned int v28 = -6;
    do
    {
      if (v26 > 5)
      {
        for (uint64_t j = 0; j != 64; ++j)
          *(unsigned char *)(a4 + ((unint64_t)(v26 - 6) << 6) + byte_221A39820[j] + 1422514) = *(unsigned char *)(a4 + 1422290 + ((unint64_t)v28 << 6) + j);
      }
      else
      {
        for (uint64_t k = 0; k != 16; ++k)
          *(unsigned char *)(a4 + 16 * v26 + byte_221A39810[k] + 1422418) = *(unsigned char *)(v27 + k);
      }
      ++v26;
      ++v28;
      v27 += 16;
    }
    while (v26 != 8);
  }
  uint64_t v31 = 0;
  char v32 = 1;
  do
  {
    uint64_t v33 = 0;
    char v34 = v32;
    do
    {
      *(_WORD *)&v54[128 * v31 + 2 * byte_221A39860[v33]] = *(unsigned __int8 *)(a4
                                                                                                + 1422290
                                                                                                + (v31 << 6)
                                                                                                + v33);
      ++v33;
    }
    while (v33 != 64);
    char v32 = 0;
    uint64_t v31 = 1;
  }
  while ((v34 & 1) != 0);
  uint64_t v35 = 0;
  uint64_t v36 = a4 + 1422656;
  int v37 = &xmmword_221A398A0;
  do
  {
    uint64_t v38 = 0;
    char v39 = 1;
    do
    {
      char v40 = v39;
      unint64_t v41 = (int16x8_t *)(v36 + 768 * v38);
      uint64_t v42 = v38 << 7;
      unint64_t v43 = -8;
      int v44 = (int16x8_t *)v37;
      do
      {
        int16x8_t v45 = *v44++;
        int16x8_t v46 = vmulq_s16(v45, *(int16x8_t *)&v54[v42]);
        *v41++ = v46;
        v43 += 8;
        v42 += 16;
      }
      while (v43 < 0x38);
      char v39 = 0;
      uint64_t v38 = 1;
    }
    while ((v40 & 1) != 0);
    ++v35;
    v36 += 128;
    v37 += 8;
  }
  while (v35 != 6);
  unint64_t v47 = 0;
  __int16 v48 = *(unsigned __int8 *)(a4 + 1422194);
  do
  {
    *(_WORD *)(a4 + 1424192 + 2 * v47) = asc_221A39EA0[v47] * v48;
    BOOL v49 = v47 >= 0x28;
    v47 += 8;
  }
  while (!v49);
  unint64_t v50 = 0;
  __int16 v51 = *(unsigned __int8 *)(a4 + 1422418);
  do
  {
    *(_WORD *)(a4 + 1424288 + 2 * v50) = asc_221A39EA0[v50] * v51;
    BOOL v49 = v50 >= 0x28;
    v50 += 8;
  }
  while (!v49);
  return *(double *)v46.i64;
}

uint64_t sub_2219FB0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, int *a7, _DWORD *a8, _DWORD *a9, unsigned __int8 a10, int a11, int a12, _DWORD *a13)
{
  uint64_t v13 = a4;
  uint64_t v14 = 0;
  v424[1] = *MEMORY[0x263EF8340];
  uint64_t v400 = *(void *)(a1 + 88);
  unsigned int v395 = *(_DWORD *)(a1 + 4);
  uint64_t v392 = *(void *)(a1 + 40);
  *(void *)(v392 + 80) = v400 + 32;
  uint64_t v15 = a4 + 1425504;
  unint64_t v423 = -1;
  v424[0] = -1;
  int v409 = *(unsigned char **)(a4 + 1016);
  int v391 = *(uint64_t ***)(a4 + 1176);
  uint64_t v385 = *(void *)(a4 + 1184);
  int v421 = 0;
  uint64_t v422 = 0;
  uint64_t v16 = *(void *)(a4 + 1104);
  if (v16) {
    uint64_t v17 = (unsigned __int8 *)(v16 + 120);
  }
  else {
    uint64_t v17 = 0;
  }
  int v420 = v17;
  signed int v414 = *(_DWORD *)(a1 + 4);
  int v18 = *(_DWORD *)(a1 + 16) * v414;
  uint64_t v417 = 0;
  unsigned int v388 = *(unsigned char *)(a4 + 1425576) == 0;
  int v416 = 0;
  int v19 = *(unsigned __int8 *)(a4 + 1161);
  int v20 = *(_DWORD *)(a4 + 1425560);
  int v411 = v18;
  if (v20 >= v18) {
    goto LABEL_375;
  }
  uint64_t v21 = *(void *)(a4 + 1425520);
  int v22 = *(unsigned __int8 *)(a4 + 1425540);
  if (a12)
  {
    unsigned int v23 = v20 / v414;
    int v24 = v20 / v414 - 1;
    if (v414 > v20) {
      int v24 = 0;
    }
    int v25 = v24 + 2;
    if (v23 >= 4) {
      unsigned int v26 = (v23 & 0xFFFFFFFE) - 2;
    }
    else {
      unsigned int v26 = 0;
    }
    if (*(unsigned char *)(a4 + 1161))
    {
      int v25 = v26 + 4;
      signed int v27 = v26;
    }
    else
    {
      signed int v27 = v24;
    }
    int v410 = v25 * v414 - 1;
  }
  else
  {
    int v410 = 0;
    signed int v27 = 0;
  }
  int v407 = *(_DWORD *)(a4 + 1428264) + *(_DWORD *)(a3 + 72) + 26;
  if (*(unsigned char *)(a4 + 1164))
  {
    if (!*(unsigned char *)(a4 + 1161)) {
      sub_221901768((uint64_t)v391);
    }
    if (!v385) {
      return 4294958327;
    }
    sub_2219F8548(v385, a4 + 1425504);
    sub_2219F85A8(v385, *(_DWORD *)(v15 + 60), *(unsigned __int8 *)(v15 + 2756), (char)v407);
  }
  LODWORD(v386) = v21;
  int v387 = v22;
  signed int v396 = v27;
  int v394 = 0;
  int v382 = 0;
  int v389 = 0;
  int v393 = 0;
  char v380 = 0;
  int v28 = 0;
  uint64_t v383 = v400 + 1152;
  uint64_t v29 = (int *)(v13 + 976);
  int v390 = 2 * v414;
  uint64_t v30 = (unsigned int *)(*(void *)(*(void *)(v13 + 1312) + 48) + 12 * a5);
  *uint64_t v30 = (63 * *(_DWORD *)(a1 + 156)) >> 6;
  v30[1] = 1;
  BOOL v32 = (a10 & 0xFD) == 1 && a11 != 0;
  BOOL v378 = v32;
  int v384 = (_DWORD *)(v13 + 1458280);
  uint64_t v33 = v13 + 1458264;
  BOOL v34 = 1;
  int v413 = v19;
  uint64_t v397 = v13;
  uint64_t v398 = v15;
  uint64_t v379 = v13 + 1458264;
  do
  {
    if (v20 >= v411)
    {
LABEL_371:
      uint64_t v14 = 4294958327;
      goto LABEL_375;
    }
    if (*(unsigned char *)(v13 + 1161))
    {
      BOOL v35 = v34;
      int v36 = v20 / v390;
      int v37 = v20 % v390;
      if (v20 % v390 >= 0) {
        int v38 = v20 % v390;
      }
      else {
        int v38 = v37 + 1;
      }
      int v39 = v38 >> 1;
      int v40 = v20 & 1;
      int v41 = v40 | (2 * v36);
    }
    else
    {
      BOOL v35 = v34;
      int v36 = v20 / v414;
      int v37 = v20 % v414;
      int v40 = v20 & 1;
      int v39 = v20 % v414;
      int v41 = v20 / v414;
    }
    *(_DWORD *)(v13 + 976) = v39;
    *(_DWORD *)(v13 + 988) = v41;
    *(_DWORD *)(v13 + 980) = v41;
    unsigned int v42 = v36 & 1;
    uint64_t v43 = *(void *)(v33 + 8 * (v42 ^ 1));
    *(void *)(v15 + 32752) = v43;
    *(void *)(v15 + 32744) = *(void *)(v33 + 8 * v42);
    *(void *)(v13 + 1152) = v43 + 400 * v37;
    unsigned int v412 = v37;
    *(void *)(*(void *)(v15 + 32752) + 400 * v37 + 112) = sub_221A15AE4(*(void *)(*(void *)(*(void *)(v13 + 1192) + 1152)
                                                                                        + 8 * a6));
    **(_DWORD **)(v13 + 1152) = v20;
    *(_DWORD *)(v13 + 992) = v20;
    *(unsigned char *)(*(void *)(v13 + 1152) + 144) = 0;
    *(unsigned char *)(*(void *)(v13 + 1016) + 3) = 0;
    if (v40) {
      char v44 = *(unsigned char *)(v13 + 1007);
    }
    else {
      char v44 = 0;
    }
    BOOL v34 = v35;
    *(unsigned char *)(v13 + 1007) = v44;
    unsigned int v45 = *(unsigned __int8 *)(v13 + 1004);
    if (v45 <= 9 && ((1 << v45) & 0x294) != 0)
    {
      BOOL v401 = 0;
      goto LABEL_41;
    }
    if (*(unsigned char *)(v13 + 1164))
    {
      int v230 = *(_DWORD *)(v15 + 56);
      uint64_t v231 = *(void *)(v15 + 32744);
      uint64_t v232 = *(void *)(v15 + 32752);
      if (v19)
      {
        sub_221A12C58(v230, v231, v232, (uint64_t)v29, v412);
        int v233 = (unsigned char *)(*(void *)(v13 + 1152) + 120);
        uint64_t v422 = (uint64_t)v233;
        if (v393)
        {
          int v234 = v416;
          HIDWORD(v417) = v416;
          *int v233 = v416;
        }
        else
        {
          uint64_t v266 = *(void *)(v13 + 1104);
          if (v266) {
            __int16 v267 = (unsigned __int8 *)(v266 + 120);
          }
          else {
            __int16 v267 = 0;
          }
          uint64_t v268 = *(void *)(v13 + 1112);
          if (v268) {
            int v269 = (unsigned char *)(v268 + 120);
          }
          else {
            int v269 = 0;
          }
          int v420 = v267;
          int v421 = v269;
          sub_221A1F280(v385, &v420, *(unsigned __int8 *)(v13 + 1004), (_DWORD *)&v417 + 1);
          int v234 = HIDWORD(v417);
        }
        BOOL v401 = 0;
        if (!v40 && v234)
        {
          ++*(_DWORD *)(v13 + 992);
          sub_221A12C58(*(_DWORD *)(v15 + 56), *(void *)(v15 + 32744), *(void *)(v15 + 32752), (uint64_t)v29, v412 + 1);
          uint64_t v270 = *(void *)(v13 + 1104);
          __int16 v271 = (unsigned __int8 *)(v270 + 120);
          if (!v270) {
            __int16 v271 = 0;
          }
          uint64_t v272 = *(void *)(v13 + 1112);
          if (v272) {
            int v273 = (unsigned char *)(v272 + 120);
          }
          else {
            int v273 = 0;
          }
          int v420 = v271;
          int v421 = v273;
          if (*(unsigned char *)(v13 + 1008) == 1) {
            unsigned char *v273 = BYTE4(v417);
          }
          uint64_t v422 = 0;
          sub_221A1F280(v385, &v420, *(unsigned __int8 *)(v13 + 1004), &v416);
          uint64_t v422 = *(void *)(v13 + 1152) + 120;
          if (v416)
          {
            char v274 = *(unsigned char *)(v13 + 1008);
          }
          else
          {
            sub_221A12F7C(*(unsigned int *)(v15 + 56), *(void *)(v15 + 32744), *(void *)(v15 + 32752), (uint64_t)v29, v412 + 1, (uint64_t)&v420);
            sub_221A1CF28(v385, &v420, &v417);
            char v274 = v417 + 1;
            int v389 = 1;
          }
          *(unsigned char *)(v13 + 1007) = v274;
          --*(_DWORD *)(v13 + 992);
          sub_221A12C58(*(_DWORD *)(v15 + 56), *(void *)(v15 + 32744), *(void *)(v15 + 32752), (uint64_t)v29, v412);
          BOOL v401 = 0;
          int v46 = 1;
          int v393 = 1;
          goto LABEL_42;
        }
        int v393 = 0;
      }
      else
      {
        sub_221A12FA8(v230, v231, v232, v29);
        BOOL v401 = 0;
        HIDWORD(v417) = sub_221901A5C(v391, v412);
      }
LABEL_41:
      int v46 = 1;
LABEL_42:
      int v403 = 0;
      int v399 = v46;
      while (1)
      {
        if (v20 >= v411) {
          goto LABEL_371;
        }
        int v47 = v46 - 1;
        if (v46 < v399 || v393)
        {
          if (*(unsigned char *)(v13 + 1161))
          {
            int v49 = v20 / v390;
            int v50 = v20 % v390;
            if (v20 % v390 >= 0) {
              int v51 = v20 % v390;
            }
            else {
              int v51 = v50 + 1;
            }
            int v52 = v51 >> 1;
            int v53 = v20 & 1 | (2 * v49);
          }
          else
          {
            int v49 = v20 / v414;
            int v50 = v20 % v414;
            int v52 = v20 % v414;
            int v53 = v20 / v414;
          }
          *(_DWORD *)(v397 + 976) = v52;
          *(_DWORD *)(v397 + 988) = v53;
          *(_DWORD *)(v397 + 980) = v53;
          unsigned int v54 = v49 & 1;
          uint64_t v55 = *(void *)(v397 + 1458264 + 8 * (v54 ^ 1));
          *(void *)(v398 + 32752) = v55;
          *(void *)(v398 + 32744) = *(void *)(v397 + 1458264 + 8 * v54);
          *(void *)(v397 + 1152) = v55 + 400 * v50;
          unsigned int v412 = v50;
          *(void *)(*(void *)(v398 + 32752) + 400 * v50 + 112) = sub_221A15AE4(*(void *)(*(void *)(*(void *)(v397 + 1192) + 1152)
                                                                                               + 8 * a6));
          **(_DWORD **)(v397 + 1152) = v20;
          *(_DWORD *)(v397 + 992) = v20;
          *(unsigned char *)(*(void *)(v397 + 1152) + 144) = 0;
          *(unsigned char *)(*(void *)(v397 + 1016) + 3) = 0;
          int v48 = *(unsigned __int8 *)(v397 + 1164);
          if (!*(unsigned char *)(v397 + 1164))
          {
            if (v20)
            {
              uint64_t v13 = v397;
              uint64_t v15 = v398;
              char v57 = *(unsigned char *)(v397 + 1007);
            }
            else
            {
              char v57 = 0;
              uint64_t v13 = v397;
              uint64_t v15 = v398;
            }
            *(unsigned char *)(v13 + 1007) = v57;
            goto LABEL_67;
          }
          uint64_t v13 = v397;
          uint64_t v15 = v398;
        }
        else
        {
          int v48 = *(unsigned __int8 *)(v13 + 1164);
          if (!*(unsigned char *)(v13 + 1164)) {
            goto LABEL_57;
          }
        }
        if (!v34) {
          goto LABEL_371;
        }
LABEL_57:
        if (v48)
        {
          unsigned int v56 = *(unsigned __int8 *)(v13 + 1004);
          if (v56 > 9 || ((1 << v56) & 0x294) == 0)
          {
            if (!(v401 | v47 | HIDWORD(v417))) {
              goto LABEL_74;
            }
            if (v19) {
              goto LABEL_69;
            }
            goto LABEL_94;
          }
        }
LABEL_67:
        int v58 = *(_DWORD *)(v15 + 56);
        uint64_t v59 = *(void *)(v15 + 32744);
        uint64_t v60 = *(void *)(v15 + 32752);
        if (v19)
        {
          sub_221A12C58(v58, v59, v60, (uint64_t)v29, v412);
          if (!(v401 | v47 | HIDWORD(v417))) {
            goto LABEL_74;
          }
LABEL_69:
          char v61 = *(unsigned char *)(v13 + 1007);
          if (v61)
          {
            int v62 = v389;
            if (*(unsigned char *)(v13 + 1164)) {
              int v62 = 0;
            }
            int v389 = v62;
          }
          else if (v46 > 2 || v401)
          {
            char v61 = *(unsigned char *)(v13 + 1008);
            *(unsigned char *)(v13 + 1007) = v61;
          }
          else
          {
            char v61 = v417 + 1;
            *(unsigned char *)(v13 + 1007) = v417 + 1;
            *(unsigned char *)(v13 + 1008) = 0;
          }
          *(unsigned char *)(*(void *)(v13 + 1152) + 144) = v61 - 1;
          if (*(unsigned char *)(v13 + 1007) == 2) {
            *(_DWORD *)(v13 + 980) &= ~1u;
          }
          sub_221A12C58(*(_DWORD *)(v15 + 56), *(void *)(v15 + 32744), *(void *)(v15 + 32752), (uint64_t)v29, v412);
          goto LABEL_94;
        }
        sub_221A12FA8(v58, v59, v60, v29);
        if (!(v401 | v47 | HIDWORD(v417)))
        {
LABEL_74:
          if (v28)
          {
            uint64_t v63 = a12
                ? sub_2219FD0D4((uint64_t)v29, (unsigned int *)v424, (unsigned int *)&v423, &v418)
                : sub_2219F9708((uint64_t)v29, (unsigned int *)v424, (unsigned int *)&v423, &v418);
            uint64_t v14 = v63;
            if (v63) {
              goto LABEL_375;
            }
          }
          if (v19)
          {
            if (v403 || (v20 & 1) == 0)
            {
              int v415 = -1;
              if (v389)
              {
                LOBYTE(v73) = v417;
              }
              else if (*(unsigned char *)(v13 + 1164))
              {
                uint64_t v97 = *(void *)(v13 + 1104);
                if (v97) {
                  uint64_t v98 = (unsigned __int8 *)(v97 + 120);
                }
                else {
                  uint64_t v98 = 0;
                }
                uint64_t v99 = *(void *)(v13 + 1112);
                if (v99) {
                  unint64_t v100 = (unsigned char *)(v99 + 120);
                }
                else {
                  unint64_t v100 = 0;
                }
                int v420 = v98;
                int v421 = v100;
                uint64_t v422 = *(void *)(v13 + 1152) + 120;
                sub_221A1CF28(v385, &v420, &v415);
                LOBYTE(v73) = v415;
              }
              else
              {
                uint64_t v101 = *(void *)(v15 + 16);
                unint64_t v102 = *(unsigned int **)(v15 + 24);
                unint64_t v103 = *(unsigned __int8 *)(v15 + 36);
                int v73 = *(_DWORD *)(v15 + 32) >> 31;
                int v415 = v73;
                char v104 = ++v103 & 7;
                int v105 = (unsigned int *)(v101 + (v103 >> 3));
                unsigned int v106 = bswap32(*v105) << (v103 & 7);
                if (v105 > v102) {
                  int v105 = v102;
                }
                *(void *)(v15 + 16) = v105;
                *(_DWORD *)(v15 + 32) = v106;
                *(unsigned char *)(v15 + 36) = v104;
              }
              int v389 = 0;
              char v64 = v73 + 1;
              *(unsigned char *)(v13 + 1007) = v64;
            }
            else
            {
              char v64 = *(unsigned char *)(v13 + 1007);
            }
            *(unsigned char *)(*(void *)(v13 + 1152) + 144) = v64 - 1;
            if (*(unsigned char *)(v13 + 1007) == 2) {
              *(_DWORD *)(v13 + 980) &= ~1u;
            }
            sub_221A12C58(*(_DWORD *)(v15 + 56), *(void *)(v15 + 32744), *(void *)(v15 + 32752), (uint64_t)v29, v412);
            goto LABEL_136;
          }
          *(unsigned char *)(v13 + 1007) = 0;
          if (*(unsigned char *)(v13 + 1164))
          {
            uint64_t v65 = sub_221901EA0(v391, (unsigned __int16 *)v29, 0, v388, v15, v403);
          }
          else
          {
LABEL_136:
            uint64_t v65 = sub_221A1AD30(v15, v388, a10, a11, (uint64_t)v29);
            if (*(void *)(v15 + 16) - *(void *)v15 > *(int *)(v15 + 12)) {
              goto LABEL_371;
            }
          }
          uint64_t v14 = v65;
          if (v65) {
            goto LABEL_375;
          }
          if ((v409[54] - 26) < 0xCCu) {
            goto LABEL_371;
          }
          int v407 = (char)v409[54]
               + (char)v407
               + 52
               - 52
               * (((20165 * ((char)v409[54] + (char)v407 + 52)) >> 20)
                + ((20165 * ((char)v409[54] + (char)v407 + 52)) >> 31));
          v409[55] = v407;
          if (v409[1] - 2 >= 4)
          {
            if (v409[1])
            {
              uint64_t v14 = 4294966630;
              goto LABEL_375;
            }
            if (v409[2] == 25)
            {
              uint64_t v121 = sub_221A134D4((uint64_t)v29);
            }
            else if (v378)
            {
              uint64_t v121 = sub_22190FE30((unint64_t)v29, v66.n128_f64[0], v67, v68, v69, v70, v71, v72);
            }
            else if (*(unsigned char *)(v13 + 1007) == 2)
            {
              uint64_t v121 = sub_22191007C((unint64_t)v29, (int32x4_t)v66, v67, v68, v69, v70, v71, v72);
            }
            else
            {
              uint64_t v121 = sub_22190FB48((unint64_t)v29, (int32x4_t)v66, v67, v68, v69, v70, v71, v72);
            }
            uint64_t v14 = v121;
            if (v121) {
              goto LABEL_375;
            }
          }
          else
          {
            if (*(unsigned char *)(v13 + 1007)) {
              uint64_t v107 = sub_22191188C((uint64_t)v29, v66, *(int32x2_t *)v67.i8, *(int32x2_t *)&v68, *(int32x2_t *)&v69, *(int32x2_t *)&v70);
            }
            else {
              uint64_t v107 = sub_221914ED8((uint64_t)v29, (int16x8_t)v66, (int16x8_t)v67);
            }
            uint64_t v14 = v107;
            if (v107) {
              goto LABEL_375;
            }
            int v415 = 0;
            int v116 = *(unsigned __int8 *)(v13 + 1007);
            if (a12)
            {
              if (v116 == 2) {
                int v117 = sub_221A143AC((uint64_t)v29, v108, v109, (int8x16_t)v110, (int8x16_t)v111, v112, v113, (int16x8_t)v114, v115);
              }
              else {
                int v117 = sub_221A14534(v29, v108, v109, v110, (int16x8_t)v111, v112, v113, v114, v115);
              }
LABEL_150:
              int v415 = v117;
              if (v117) {
                goto LABEL_151;
              }
            }
            else
            {
              if (v116 == 2)
              {
                int v117 = sub_221A132E8((uint64_t)v29, v108, v109, (int8x16_t)v110, (int8x16_t)v111, v112, v113, (int16x8_t)v114, v115);
                goto LABEL_150;
              }
              uint64_t v122 = sub_221A131E8(v29, &v415, v108, v109, v110, v111, v112, v113, v114, v115);
              if (v122) {
                goto LABEL_374;
              }
              if (v415)
              {
LABEL_151:
                uint64_t v118 = *(void *)(v13 + 1312);
                int v119 = *(_DWORD *)(v13 + 976);
                uint64_t v120 = (int8x16_t *)(*(void *)(v13 + 1152) + 80);
                if (*(unsigned char *)(v13 + 1007)) {
                  sub_2219E4D7C(v118, v119, *(_DWORD *)(v13 + 988), v120);
                }
                else {
                  sub_2219E4EEC(v118, v119, *(_DWORD *)(v13 + 980), v120);
                }
              }
            }
            int v394 = 1;
          }
          int v403 = 0;
          int v28 = 0;
          int v95 = *(unsigned __int8 *)(v15 + 36) - v387 + 8 * (*(void *)(v15 + 16) - v386);
          unsigned int v96 = -1;
          int v382 = 1;
          uint64_t v386 = *(void *)(v15 + 16);
          int v387 = *(unsigned __int8 *)(v15 + 36);
          goto LABEL_167;
        }
LABEL_94:
        sub_221A141F4((uint64_t)v29);
        if (*(unsigned char *)(v13 + 1007)) {
          uint64_t v79 = sub_22191188C((uint64_t)v29, v74, *(int32x2_t *)v75.i8, v76, v77, v78);
        }
        else {
          uint64_t v79 = sub_221914ED8((uint64_t)v29, (int16x8_t)v74, v75);
        }
        uint64_t v14 = v79;
        if (v79) {
          goto LABEL_375;
        }
        if (*(unsigned char *)(v13 + 1007)
          || (uint64_t v88 = *(void *)(v13 + 1024), *(unsigned char *)(v88 + 272) != 1)
          || (uint64_t v89 = *(_DWORD **)(*(void *)(v13 + 1152) + 112),
              int v90 = *(unsigned __int8 *)(v88 + 24),
              int v91 = *(unsigned __int8 *)(v88 + 25),
              v90 != 32)
          && *v89
          || v91 != 32 && v89[1]
          || *(_DWORD *)(v88 + 356)
          || *(_DWORD *)(v88 + 360))
        {
          if (v28)
          {
            uint64_t v92 = a12
                ? sub_2219FD0D4((uint64_t)v29, (unsigned int *)v424, (unsigned int *)&v423, &v418)
                : sub_2219F9708((uint64_t)v29, (unsigned int *)v424, (unsigned int *)&v423, &v418);
            uint64_t v14 = v92;
            if (v92) {
              goto LABEL_375;
            }
          }
          int v93 = *(unsigned __int8 *)(v13 + 1007);
          if (a12) {
            uint64_t v94 = v93 == 2
          }
                ? sub_221A144CC((uint64_t)v29, v80, (int16x8_t)v81, (int8x16_t)v82, (int8x16_t)v83, v84, v85, (int16x8_t)v86, v87): sub_221A1461C((uint64_t)v29, v80, v81, v82, (int16x8_t)v83, v84, v85, v86, v87);
          else {
            uint64_t v94 = v93 == 2
          }
                ? sub_221A13474((uint64_t)v29, v80, (int16x8_t)v81, (int8x16_t)v82, (int8x16_t)v83, v84, v85, (int16x8_t)v86, v87): sub_221A133F4((uint64_t)v29, v80, v81, v82, v83, v84, (int8x16_t)v85, v86, v87);
          uint64_t v14 = v94;
          if (v94) {
            goto LABEL_375;
          }
          int v95 = 0;
          int v28 = 0;
          unsigned int v96 = 0;
          goto LABEL_120;
        }
        if (v28)
        {
          if (v90 == v418 && v91 == v419)
          {
            int v95 = 0;
            unsigned int v96 = 0;
            ++v28;
            unint64_t v423 = *(void *)v29;
LABEL_120:
            int v394 = 1;
            int v403 = 1;
            goto LABEL_167;
          }
          if (a12) {
            uint64_t v228 = sub_2219FD0D4((uint64_t)v29, (unsigned int *)v424, (unsigned int *)&v423, &v418);
          }
          else {
            uint64_t v228 = sub_2219F9708((uint64_t)v29, (unsigned int *)v424, (unsigned int *)&v423, &v418);
          }
          uint64_t v14 = v228;
          if (v228) {
            goto LABEL_375;
          }
        }
        int v95 = 0;
        unsigned int v96 = 0;
        unsigned __int8 v418 = v90;
        unsigned __int8 v419 = v91;
        unsigned int v229 = *(_DWORD *)(v13 + 980);
        LODWORD(v424[0]) = *(_DWORD *)(v13 + 976);
        HIDWORD(v424[0]) = v229;
        unint64_t v423 = __PAIR64__(v229, v424[0]);
        int v394 = 1;
        int v403 = 1;
        int v28 = 1;
LABEL_167:
        if (*(unsigned char *)(a1 + 544)) {
          sub_2219F8D4C(v384, (uint64_t)v29, v95);
        }
        if (*(_DWORD *)(*(void *)(v13 + 1192) + 1164) <= *(_DWORD *)(v13 + 992)) {
          goto LABEL_373;
        }
        if (v413) {
          sub_221A13134((uint64_t)v29, a6);
        }
        else {
          sub_221A13094((uint64_t)v29, a6);
        }
        if (v409[1] || v409[2] != 25)
        {
          unsigned int v126 = (char)v407;
          char v127 = sub_221A25064((char)v407, *(char *)(*(void *)(v13 + 1016) + 56));
          char v128 = sub_221A25064((char)v407, *(char *)(*(void *)(v13 + 1016) + 57));
        }
        else
        {
          unsigned int v126 = 0;
          char v127 = 0;
          char v128 = 0;
        }
        uint64_t v129 = *(void *)(v13 + 1312);
        char v130 = *(unsigned char *)(*(void *)(v13 + 1016) + 3);
        char v131 = *(unsigned char *)(v13 + 1007);
        unsigned int v132 = *(_DWORD *)(v13 + 976) + *(_DWORD *)(v129 + 12) * *(_DWORD *)(v13 + 988);
        *(_WORD *)(*(void *)(v129 + 72) + 2 * v132) = a5;
        *(unsigned char *)(*(void *)(v129 + 112) + v132) = v126;
        *(unsigned char *)(*(void *)(v129 + 120) + v132) = v127;
        *(unsigned char *)(*(void *)(v129 + 128) + v132) = v128;
        *(unsigned char *)(*(void *)(v129 + 136) + v132) = v130;
        *(unsigned char *)(*(void *)(v129 + 144) + v132) = v131;
        uint64_t v133 = *(void *)(v129 + 48);
        uint64_t v134 = 12 * (unsigned __int16)a5;
        v124.i64[0] = *(void *)(v133 + v134);
        *(int32x2_t *)v123.i8 = vadd_s32(*(int32x2_t *)v124.i8, (int32x2_t)vand_s8((int8x8_t)(v126 | 0x100000000), (int8x8_t)vdup_n_s32(v96)));
        *(void *)(v133 + v134) = v123.i64[0];
        if (*(unsigned char *)(a3 + 8))
        {
          int v19 = v413;
          if (!v413 || (v20 & 1) != 0)
          {
            if (v413) {
              BOOL v34 = sub_221A1C90C(v385) == 0;
            }
            else {
              BOOL v34 = !sub_221901AE4(v391);
            }
          }
          else
          {
            BOOL v34 = 1;
          }
        }
        else
        {
          BOOL v34 = sub_2219F3948(v15);
          int v19 = v413;
        }
        *a7 = v20;
        if (!a12 || v20 != v410) {
          goto LABEL_285;
        }
        if (v28)
        {
          uint64_t v122 = sub_2219FD0D4((uint64_t)v29, (unsigned int *)v424, (unsigned int *)&v423, &v418);
          if (v122) {
            goto LABEL_374;
          }
        }
        if (v19)
        {
          signed int v135 = v396;
          unsigned int v136 = v396 + 2;
          sub_221A2F7E8((uint64_t *)v392, v383, v396, v396 + 2, *(double *)v123.i64, *(int8x8_t *)v124.i8);
          if (*(int *)(v392 + 184) <= 0) {
            goto LABEL_486;
          }
          uint64_t v137 = sub_2219E25F0(v392, *(void *)(v400 + 64), *(_DWORD *)(v400 + 168), *(void *)(v400 + 72), *(_DWORD *)(v400 + 184), 0, v395, v396, v136, *(void *)(v392 + 176), *(_DWORD *)(v392 + 184), (*(_DWORD *)(v400 + 132) + 15) >> 4);
          if (v137) {
            return v137;
          }
          if (!*(_DWORD *)(v392 + 220)) {
            goto LABEL_283;
          }
          uint64_t v139 = *(void *)(v400 + 64);
          uint64_t v138 = *(void *)(v400 + 72);
          int v140 = *(_DWORD *)(v400 + 168);
          int v141 = *(_DWORD *)(v400 + 184);
          if (*(unsigned char *)(v400 + 32))
          {
            uint64_t v142 = v140;
            uint64_t v143 = v141;
            if (!*(unsigned char *)(v400 + 37)) {
              uint64_t v143 = 0;
            }
            v138 += v143;
            if (!*(unsigned char *)(v400 + 37)) {
              uint64_t v142 = 0;
            }
            v139 += v142;
            v140 *= 2;
            v141 *= 2;
          }
          uint64_t v144 = *(int *)(v400 + 164);
          uint64_t v145 = *(int *)(v400 + 180);
          uint64_t v146 = *(int *)(v400 + 132);
          uint64_t v147 = *(int *)(v400 + 148);
          int v148 = 16 * v396;
          int v149 = 16 * v396 - 4;
          if (v396 < 1) {
            int v149 = 0;
          }
          int v150 = v148 + 32;
          int v151 = v148 + 28;
          if (v150 == v146) {
            int v151 = v150;
          }
          int v152 = v151 - v149;
          if (v151 > v149)
          {
            int v153 = (int8x16_t *)(v139 + v140 * (uint64_t)v149);
            do
            {
              int8x16_t v154 = vqtbl1q_s8((int8x16_t)(16843009 * v153->u8[0]), (int8x16_t)xmmword_221A36310);
              v153[-2] = v154;
              v153[-1] = v154;
              int v155 = (int8x16_t *)((char *)v153 + v144);
              int8x16_t v156 = vqtbl1q_s8((int8x16_t)(16843009 * v153->u8[v144 - 1]), (int8x16_t)xmmword_221A36310);
              *int v155 = v156;
              v155[1] = v156;
              int v153 = (int8x16_t *)((char *)v153 + v140);
              --v152;
            }
            while (v152);
          }
          int v157 = v149 >> 1;
          int v158 = (v151 >> 1) - (v149 >> 1);
          if (v151 >> 1 > v157)
          {
            __int16 v159 = (int8x16_t *)(v138 + v141 * (uint64_t)v157);
            do
            {
              int8x16_t v160 = vqtbl1q_s8((int8x16_t)(65537 * *(unsigned __int16 *)((char *)&v159->u16[-1] + v145)), (int8x16_t)xmmword_221A36310);
              v159[-1] = vqtbl1q_s8((int8x16_t)(65537 * v159->u16[0]), (int8x16_t)xmmword_221A36310);
              *(int8x16_t *)((char *)v159 + v145) = v160;
              __int16 v159 = (int8x16_t *)((char *)v159 + v141);
              --v158;
            }
            while (v158);
          }
          if (v396 <= 0)
          {
            int v161 = 0;
            uint64_t v162 = v139 - 32;
            uint64_t v163 = -2 * v140;
            do
            {
              if ((int)v144 >= -63)
              {
                uint64_t v164 = 0;
                do
                {
                  long long v165 = *(_OWORD *)(v162 + v164);
                  *(_OWORD *)(v162 - v140 + v164) = v165;
                  *(_OWORD *)(v162 + v163 + v164) = v165;
                  BOOL v166 = v164 < (int)v144 + 48;
                  v164 += 16;
                }
                while (v166);
              }
              v162 += v163;
              ++v161;
            }
            while (v161 != 10);
            int v167 = 0;
            uint64_t v168 = v138 - 16;
            do
            {
              if ((int)v145 >= -31)
              {
                uint64_t v169 = 0;
                do
                {
                  *(_OWORD *)(v168 - v141 + v169) = *(_OWORD *)(v168 + v169);
                  BOOL v166 = v169 < (int)v145 + 16;
                  v169 += 16;
                }
                while (v166);
              }
              v168 -= v141;
              ++v167;
            }
            while (v167 != 8);
          }
          if (v151 == v146)
          {
            int v170 = 0;
            uint64_t v171 = v140 * (v146 - 1);
            uint64_t v172 = v139 - 32;
            uint64_t v173 = v139 - 32 + v171;
            uint64_t v174 = 2 * v140;
            uint64_t v175 = v172 + v171 + v140;
            uint64_t v176 = v172 + v171 + v174;
            do
            {
              if ((int)v144 >= -63)
              {
                uint64_t v177 = 0;
                do
                {
                  long long v178 = *(_OWORD *)(v173 + v177);
                  *(_OWORD *)(v175 + v177) = v178;
                  *(_OWORD *)(v176 + v177) = v178;
                  BOOL v166 = v177 < v144 + 48;
                  v177 += 16;
                }
                while (v166);
              }
              v173 += v174;
              ++v170;
              v175 += v174;
              v176 += v174;
            }
            while (v170 != 10);
            int v179 = 0;
            uint64_t v180 = v138 + v141 * (v147 - 1) - 16;
            do
            {
              if ((int)v145 >= -31)
              {
                uint64_t v181 = 0;
                do
                {
                  *(_OWORD *)(v180 + v141 + v181) = *(_OWORD *)(v180 + v181);
                  BOOL v166 = v181 < v145 + 16;
                  v181 += 16;
                }
                while (v166);
              }
              v180 += v141;
              ++v179;
            }
            while (v179 != 8);
          }
        }
        else
        {
          signed int v135 = v396;
          unsigned int v182 = v396 + 1;
          sub_2219E5A18((uint64_t *)v392, v383, 0, v395, v396, v396 + 1, v123, v124, v125);
          if (*(int *)(v392 + 184) <= 0)
          {
LABEL_486:
            puts("cchung: simplifid to do LF for DVDApiDecoder only");
            exit(1);
          }
          if (*(unsigned char *)(v392 + 224) && (*(unsigned char *)(v392 + 225) || *(unsigned char *)(v392 + 226)))
          {
            if (!v396 && !*(void *)(v392 + 232)) {
              *(void *)(v392 + 232) = sub_221A12A5C((void *)(20 * *(_DWORD *)(v400 + 168)
            }
                                                                           + 11 * *(_DWORD *)(v400 + 184)));
            uint64_t v122 = sub_2219E2D58(v392, 0, v395, v396, v182, v380 & 1, a13);
            if (v122)
            {
LABEL_374:
              uint64_t v14 = v122;
              goto LABEL_375;
            }
            char v380 = 1;
            uint64_t v183 = v392;
          }
          else
          {
            uint64_t v122 = sub_2219E21C8(v392, 0, v395, v396, v182);
            uint64_t v183 = v392;
            if (v122) {
              goto LABEL_374;
            }
          }
          if (!*(_DWORD *)(v183 + 220))
          {
LABEL_284:
            int v28 = 0;
            v410 += v414;
            ++v396;
            goto LABEL_285;
          }
          uint64_t v185 = *(void *)(v400 + 64);
          uint64_t v184 = *(void *)(v400 + 72);
          int v186 = *(_DWORD *)(v400 + 168);
          int v187 = *(_DWORD *)(v400 + 184);
          if (*(unsigned char *)(v400 + 32))
          {
            uint64_t v188 = v186;
            uint64_t v189 = v187;
            if (!*(unsigned char *)(v400 + 37)) {
              uint64_t v189 = 0;
            }
            v184 += v189;
            if (!*(unsigned char *)(v400 + 37)) {
              uint64_t v188 = 0;
            }
            v185 += v188;
            v186 *= 2;
            v187 *= 2;
          }
          uint64_t v190 = *(int *)(v400 + 164);
          uint64_t v191 = *(int *)(v400 + 180);
          uint64_t v192 = *(int *)(v400 + 132);
          uint64_t v193 = *(int *)(v400 + 148);
          int v194 = 16 * v396 - 4;
          if (v396 < 1) {
            int v194 = 0;
          }
          int v195 = 16 * v396 + 16;
          if (v195 != v192) {
            int v195 = (16 * v396) | 0xC;
          }
          int v196 = v195 - v194;
          if (v195 > v194)
          {
            int v197 = (int8x16_t *)(v185 + v186 * (uint64_t)v194);
            do
            {
              int8x16_t v198 = vqtbl1q_s8((int8x16_t)(16843009 * v197->u8[0]), (int8x16_t)xmmword_221A36310);
              v197[-2] = v198;
              v197[-1] = v198;
              int v199 = (int8x16_t *)((char *)v197 + v190);
              int8x16_t v200 = vqtbl1q_s8((int8x16_t)(16843009 * v197->u8[v190 - 1]), (int8x16_t)xmmword_221A36310);
              *int v199 = v200;
              v199[1] = v200;
              int v197 = (int8x16_t *)((char *)v197 + v186);
              --v196;
            }
            while (v196);
          }
          int v201 = v194 >> 1;
          int v202 = (v195 >> 1) - (v194 >> 1);
          if (v195 >> 1 > v201)
          {
            int v203 = (int8x16_t *)(v184 + v187 * (uint64_t)v201);
            do
            {
              int8x16_t v204 = vqtbl1q_s8((int8x16_t)(65537 * *(unsigned __int16 *)((char *)&v203->u16[-1] + v191)), (int8x16_t)xmmword_221A36310);
              v203[-1] = vqtbl1q_s8((int8x16_t)(65537 * v203->u16[0]), (int8x16_t)xmmword_221A36310);
              *(int8x16_t *)((char *)v203 + v191) = v204;
              int v203 = (int8x16_t *)((char *)v203 + v187);
              --v202;
            }
            while (v202);
          }
          if (v396 <= 0)
          {
            int v205 = 0;
            uint64_t v206 = v185 - 32;
            uint64_t v207 = -2 * v186;
            do
            {
              if ((int)v190 >= -63)
              {
                uint64_t v208 = 0;
                do
                {
                  long long v209 = *(_OWORD *)(v206 + v208);
                  *(_OWORD *)(v206 - v186 + v208) = v209;
                  *(_OWORD *)(v206 + v207 + v208) = v209;
                  BOOL v166 = v208 < (int)v190 + 48;
                  v208 += 16;
                }
                while (v166);
              }
              v206 += v207;
              ++v205;
            }
            while (v205 != 10);
            int v210 = 0;
            uint64_t v211 = v184 - 16;
            do
            {
              if ((int)v191 >= -31)
              {
                uint64_t v212 = 0;
                do
                {
                  *(_OWORD *)(v211 - v187 + v212) = *(_OWORD *)(v211 + v212);
                  BOOL v166 = v212 < (int)v191 + 16;
                  v212 += 16;
                }
                while (v166);
              }
              v211 -= v187;
              ++v210;
            }
            while (v210 != 8);
          }
          if (v195 == v192)
          {
            int v213 = 0;
            uint64_t v214 = v186 * (v192 - 1);
            uint64_t v215 = v185 - 32;
            uint64_t v216 = v185 - 32 + v214;
            uint64_t v217 = 2 * v186;
            uint64_t v218 = v215 + v214 + v186;
            uint64_t v219 = v215 + v214 + v217;
            do
            {
              if ((int)v190 >= -63)
              {
                uint64_t v220 = 0;
                do
                {
                  long long v221 = *(_OWORD *)(v216 + v220);
                  *(_OWORD *)(v218 + v220) = v221;
                  *(_OWORD *)(v219 + v220) = v221;
                  BOOL v166 = v220 < v190 + 48;
                  v220 += 16;
                }
                while (v166);
              }
              v216 += v217;
              ++v213;
              v218 += v217;
              v219 += v217;
            }
            while (v213 != 10);
            int v222 = 0;
            uint64_t v223 = v184 + v187 * (v193 - 1) - 16;
            do
            {
              if ((int)v191 >= -31)
              {
                uint64_t v224 = 0;
                do
                {
                  *(_OWORD *)(v223 + v187 + v224) = *(_OWORD *)(v223 + v224);
                  BOOL v166 = v224 < v191 + 16;
                  v224 += 16;
                }
                while (v166);
              }
              v223 += v187;
              ++v222;
            }
            while (v222 != 8);
          }
        }
        if (!v19) {
          goto LABEL_284;
        }
        unsigned int v136 = v135 + 2;
LABEL_283:
        int v28 = 0;
        v410 += v390;
        signed int v396 = v136;
LABEL_285:
        int v20 = sub_221A143A4(v20);
        int v46 = v47;
        if (!v47)
        {
          uint64_t v33 = v379;
          goto LABEL_366;
        }
      }
    }
    uint64_t v236 = *(void *)(v15 + 16);
    int v235 = *(unsigned int **)(v15 + 24);
    int v237 = *(_DWORD *)(v15 + 32);
    uint64_t v238 = *(unsigned __int8 *)(v15 + 36);
    unsigned int v239 = __clz(v237 | 1);
    if (!v237) {
      ++v239;
    }
    if (v239 > 0xC)
    {
      unint64_t v246 = v238 + 1;
      int v247 = (v238 + 1) & 7;
      __int16 v248 = (unsigned int *)(v236 + (v246 >> 3));
      unsigned int v249 = bswap32(*v248) << v247;
      if (v248 <= v235) {
        int v250 = v248;
      }
      else {
        int v250 = *(unsigned int **)(v15 + 24);
      }
      if (v237 < 0)
      {
        unsigned int v254 = 0;
      }
      else
      {
        unsigned int v251 = 0;
        do
        {
          unsigned int v252 = v249;
          char v253 = v247;
          unsigned int v254 = v251 + 1;
          unint64_t v255 = (v247 + 1);
          int v247 = ((_BYTE)v247 + 1) & 7;
          int v250 = (unsigned int *)((char *)v250 + (v255 >> 3));
          unsigned int v249 = bswap32(*v250) << (v255 & 7);
          if (v250 > v235) {
            int v250 = *(unsigned int **)(v15 + 24);
          }
          if ((v252 & 0x80000000) != 0) {
            break;
          }
        }
        while (v251++ < 0x1F);
        if (v254 - 1 > 0x17)
        {
          unsigned int v257 = v249 >> (48 - v254);
          unsigned int v258 = ((v253 + 1) & 7) + v254;
          unint64_t v259 = v258 - 16;
          char v243 = v258 & 7;
          __int16 v260 = (unsigned int *)((char *)v250 + (v259 >> 3));
          unsigned int v261 = bswap32(*v260) << v243;
          if (v260 <= v235) {
            __int16 v262 = v260;
          }
          else {
            __int16 v262 = *(unsigned int **)(v15 + 24);
          }
          unsigned int v264 = *(unsigned int *)((char *)v262 + 2);
          __int16 v263 = (unsigned int *)((char *)v262 + 2);
          unsigned int v245 = bswap32(v264) << v243;
          if (v263 <= v235) {
            int v235 = v263;
          }
          int v265 = __PAIR64__(v257, v261) >> 16;
LABEL_350:
          int v241 = v265 + ~(-1 << v254);
          goto LABEL_351;
        }
      }
      int v265 = v249 >> -(char)v254;
      unint64_t v275 = v254 + v247;
      char v243 = (v254 + v247) & 7;
      int v276 = (unsigned int *)((char *)v250 + (v275 >> 3));
      unsigned int v245 = bswap32(*v276) << v243;
      if (v276 <= v235) {
        int v235 = v276;
      }
      goto LABEL_350;
    }
    unsigned int v240 = (v237 << (v239 + 1)) >> -(char)v239;
    if (!v239) {
      unsigned int v240 = 0;
    }
    int v241 = v240 + ~(-1 << v239);
    unint64_t v242 = v238 + 2 * v239 + 1;
    char v243 = v242 & 7;
    int v244 = (unsigned int *)(v236 + (v242 >> 3));
    unsigned int v245 = bswap32(*v244) << (v242 & 7);
    if (v244 <= v235) {
      int v235 = v244;
    }
LABEL_351:
    *(void *)(v15 + 16) = v235;
    *(_DWORD *)(v15 + 32) = v245;
    *(unsigned char *)(v15 + 36) = v243;
    if (v241 + v20 > v411)
    {
LABEL_373:
      uint64_t v14 = 4294958327;
      int v19 = v413;
      goto LABEL_375;
    }
    BOOL v277 = sub_2219F3948(v15);
    BOOL v34 = v277;
    BOOL v401 = !v277;
    if (v413)
    {
      if (v241 >= 1 && v277)
      {
        if (v40 && v241 == 1)
        {
          BOOL v401 = 0;
        }
        else
        {
          BOOL v401 = 0;
          uint64_t v279 = *(void *)(v15 + 16);
          int v280 = *(unsigned int **)(v15 + 24);
          uint64_t v281 = *(unsigned __int8 *)(v15 + 36);
          int v282 = *(_DWORD *)(v15 + 32) >> 31;
          LODWORD(v417) = v282;
          int v283 = (unsigned int *)(v279 + ((unint64_t)++v281 >> 3));
          char v284 = v281 & 7;
          if (v283 <= v280) {
            int v280 = v283;
          }
          unsigned int v285 = bswap32(*v283);
          *(void *)(v15 + 16) = v280;
          *(_DWORD *)(v15 + 32) = v285 << v284;
          *(unsigned char *)(v15 + 36) = v284;
          int v389 = 1;
          if (!v40 && v241 == 1)
          {
            BOOL v401 = 0;
            *(unsigned char *)(v13 + 1007) = v282 + 1;
            int v389 = 1;
          }
        }
      }
    }
    int v46 = v277 + v241;
    int v19 = v413;
    uint64_t v33 = v379;
    if (v46) {
      goto LABEL_42;
    }
LABEL_366:
    ;
  }
  while (v34 && v20 < v411);
  if (a12)
  {
    *(_WORD *)(a1 + 104) = v20;
    if (v28)
    {
      uint64_t v286 = sub_2219FD0D4((uint64_t)v29, (unsigned int *)v424, (unsigned int *)&v423, &v418);
      goto LABEL_383;
    }
    goto LABEL_384;
  }
  if (!v28) {
    goto LABEL_479;
  }
  uint64_t v286 = sub_2219F9708((uint64_t)v29, (unsigned int *)v424, (unsigned int *)&v423, &v418);
LABEL_383:
  uint64_t v14 = v286;
  if (v286) {
    goto LABEL_375;
  }
LABEL_384:
  uint64_t v14 = 0;
  if (!a12 || v20 != v411) {
    goto LABEL_482;
  }
  if (v19)
  {
    uint64_t v14 = sub_221A2F7E8((uint64_t *)v392, v383, v396, v396 + 2, *(double *)v225.i64, *(int8x8_t *)v226.i8);
    if (*(int *)(v392 + 184) <= 0)
    {
      uint64_t v288 = v400;
      if (!*(_DWORD *)(v392 + 220)) {
        goto LABEL_482;
      }
    }
    else
    {
      uint64_t v288 = v400;
      sub_2219E25F0(v392, *(void *)(v400 + 64), *(_DWORD *)(v400 + 168), *(void *)(v400 + 72), *(_DWORD *)(v400 + 184), 0, v395, v396, v396 + 2, *(void *)(v392 + 176), *(_DWORD *)(v392 + 184), (*(_DWORD *)(v400 + 132) + 15) >> 4);
      if (!*(_DWORD *)(v392 + 220)) {
        goto LABEL_482;
      }
    }
    uint64_t v292 = *(void *)(v288 + 64);
    uint64_t v291 = *(void *)(v288 + 72);
    int v293 = *(_DWORD *)(v288 + 168);
    int v294 = *(_DWORD *)(v288 + 184);
    uint64_t v295 = *(int *)(v288 + 132);
    if (*(unsigned char *)(v288 + 32))
    {
      uint64_t v296 = v293;
      uint64_t v297 = v294;
      if (!*(unsigned char *)(v288 + 37)) {
        uint64_t v297 = 0;
      }
      v291 += v297;
      if (!*(unsigned char *)(v288 + 37)) {
        uint64_t v296 = 0;
      }
      v292 += v296;
      v293 *= 2;
      v294 *= 2;
    }
    uint64_t v298 = *(int *)(v288 + 164);
    uint64_t v299 = *(int *)(v288 + 180);
    uint64_t v300 = *(int *)(v288 + 148);
    int v301 = 16 * v396;
    if (v396 >= 1) {
      int v302 = 16 * v396 - 4;
    }
    else {
      int v302 = 0;
    }
    int v303 = v301 + 32;
    int v304 = v301 + 28;
    if (v303 == v295) {
      int v304 = v303;
    }
    int v305 = v302 >> 1;
    int v306 = v304 >> 1;
    int v307 = v304 - v302;
    if (v304 > v302)
    {
      int v308 = (int8x16_t *)(v292 + v293 * (uint64_t)v302);
      do
      {
        int8x16_t v309 = vqtbl1q_s8((int8x16_t)(16843009 * v308->u8[0]), (int8x16_t)xmmword_221A36310);
        v308[-2] = v309;
        v308[-1] = v309;
        int v310 = (int8x16_t *)((char *)v308 + v298);
        int8x16_t v311 = vqtbl1q_s8((int8x16_t)(16843009 * v308->u8[v298 - 1]), (int8x16_t)xmmword_221A36310);
        *int v310 = v311;
        v310[1] = v311;
        int v308 = (int8x16_t *)((char *)v308 + v293);
        --v307;
      }
      while (v307);
    }
    BOOL v312 = __OFSUB__(v306, v305);
    int v313 = v306 - v305;
    if (!((v313 < 0) ^ v312 | (v313 == 0)))
    {
      int v314 = (int8x16_t *)(v291 + v294 * (uint64_t)v305);
      do
      {
        int8x16_t v315 = vqtbl1q_s8((int8x16_t)(65537 * *(unsigned __int16 *)((char *)&v314->u16[-1] + v299)), (int8x16_t)xmmword_221A36310);
        v314[-1] = vqtbl1q_s8((int8x16_t)(65537 * v314->u16[0]), (int8x16_t)xmmword_221A36310);
        *(int8x16_t *)((char *)v314 + v299) = v315;
        int v314 = (int8x16_t *)((char *)v314 + v294);
        --v313;
      }
      while (v313);
    }
    if (v396 <= 0)
    {
      int v316 = 0;
      uint64_t v317 = v292 - 32;
      uint64_t v318 = -2 * v293;
      do
      {
        if ((int)v298 >= -63)
        {
          uint64_t v319 = 0;
          do
          {
            long long v320 = *(_OWORD *)(v317 + v319);
            *(_OWORD *)(v317 - v293 + v319) = v320;
            *(_OWORD *)(v317 + v318 + v319) = v320;
            BOOL v166 = v319 < (int)v298 + 48;
            v319 += 16;
          }
          while (v166);
        }
        v317 += v318;
        ++v316;
      }
      while (v316 != 10);
      int v321 = 0;
      uint64_t v322 = v291 - 16;
      do
      {
        if ((int)v299 >= -31)
        {
          uint64_t v323 = 0;
          do
          {
            *(_OWORD *)(v322 - v294 + v323) = *(_OWORD *)(v322 + v323);
            BOOL v166 = v323 < (int)v299 + 16;
            v323 += 16;
          }
          while (v166);
        }
        v322 -= v294;
        ++v321;
      }
      while (v321 != 8);
    }
    if (v304 == v295)
    {
      int v324 = 0;
      uint64_t v325 = v293 * (v295 - 1);
      uint64_t v326 = v292 + v325 - 32;
      uint64_t v327 = 2 * v293;
      uint64_t v328 = v325 + v327;
      uint64_t v329 = v325 + v293 + v292 - 32;
      uint64_t v330 = v328 + v292 - 32;
      do
      {
        if ((int)v298 >= -63)
        {
          uint64_t v331 = 0;
          do
          {
            long long v332 = *(_OWORD *)(v326 + v331);
            *(_OWORD *)(v329 + v331) = v332;
            *(_OWORD *)(v330 + v331) = v332;
            BOOL v166 = v331 < v298 + 48;
            v331 += 16;
          }
          while (v166);
        }
        v326 += v327;
        ++v324;
        v329 += v327;
        v330 += v327;
      }
      while (v324 != 10);
      int v333 = 0;
      uint64_t v334 = v291 + v294 * (v300 - 1) - 16;
      do
      {
        if ((int)v299 >= -31)
        {
          uint64_t v335 = 0;
          do
          {
            *(_OWORD *)(v334 + v294 + v335) = *(_OWORD *)(v334 + v335);
            BOOL v166 = v335 < v299 + 16;
            v335 += 16;
          }
          while (v166);
        }
        v334 += v294;
        ++v333;
      }
      while (v333 != 8);
      goto LABEL_481;
    }
    goto LABEL_482;
  }
  unsigned int v289 = v396 + 1;
  sub_2219E5A18((uint64_t *)v392, v383, 0, v395, v396, v396 + 1, v225, v226, v227);
  if (*(int *)(v392 + 184) < 1
    || (!*(unsigned char *)(v392 + 224) || !*(unsigned char *)(v392 + 225) && !*(unsigned char *)(v392 + 226)
      ? (uint64_t v290 = sub_2219E21C8(v392, 0, v395, v396, v289))
      : (uint64_t v290 = sub_2219E3624(v392, 0, v395, v396, v289)),
        uint64_t v14 = v290,
        !v290))
  {
    if (*(_DWORD *)(v392 + 220))
    {
      uint64_t v337 = *(void *)(v400 + 64);
      uint64_t v336 = *(void *)(v400 + 72);
      int v338 = *(_DWORD *)(v400 + 168);
      int v339 = *(_DWORD *)(v400 + 184);
      uint64_t v340 = *(int *)(v400 + 132);
      if (*(unsigned char *)(v400 + 32))
      {
        uint64_t v341 = v338;
        uint64_t v342 = v339;
        if (!*(unsigned char *)(v400 + 37)) {
          uint64_t v342 = 0;
        }
        v336 += v342;
        if (!*(unsigned char *)(v400 + 37)) {
          uint64_t v341 = 0;
        }
        v337 += v341;
        v338 *= 2;
        v339 *= 2;
      }
      uint64_t v343 = *(int *)(v400 + 164);
      uint64_t v344 = *(int *)(v400 + 180);
      uint64_t v345 = *(int *)(v400 + 148);
      if (v396 >= 1) {
        int v346 = 16 * v396 - 4;
      }
      else {
        int v346 = 0;
      }
      int v347 = 16 * v396 + 16;
      if (v347 != v340) {
        int v347 = (16 * v396) | 0xC;
      }
      int v348 = v346 >> 1;
      int v349 = v347 >> 1;
      int v350 = v347 - v346;
      if (v347 > v346)
      {
        int v351 = (int8x16_t *)(v337 + v338 * (uint64_t)v346);
        do
        {
          int8x16_t v352 = vqtbl1q_s8((int8x16_t)(16843009 * v351->u8[0]), (int8x16_t)xmmword_221A36310);
          v351[-2] = v352;
          v351[-1] = v352;
          int v353 = (int8x16_t *)((char *)v351 + v343);
          int8x16_t v354 = vqtbl1q_s8((int8x16_t)(16843009 * v351->u8[v343 - 1]), (int8x16_t)xmmword_221A36310);
          int8x16_t *v353 = v354;
          v353[1] = v354;
          int v351 = (int8x16_t *)((char *)v351 + v338);
          --v350;
        }
        while (v350);
      }
      BOOL v312 = __OFSUB__(v349, v348);
      int v355 = v349 - v348;
      if (!((v355 < 0) ^ v312 | (v355 == 0)))
      {
        int v356 = (int8x16_t *)(v336 + v339 * (uint64_t)v348);
        do
        {
          int8x16_t v357 = vqtbl1q_s8((int8x16_t)(65537 * *(unsigned __int16 *)((char *)&v356->u16[-1] + v344)), (int8x16_t)xmmword_221A36310);
          v356[-1] = vqtbl1q_s8((int8x16_t)(65537 * v356->u16[0]), (int8x16_t)xmmword_221A36310);
          *(int8x16_t *)((char *)v356 + v344) = v357;
          int v356 = (int8x16_t *)((char *)v356 + v339);
          --v355;
        }
        while (v355);
      }
      if (v396 <= 0)
      {
        int v358 = 0;
        uint64_t v359 = v337 - 32;
        uint64_t v360 = -2 * v338;
        do
        {
          if ((int)v343 >= -63)
          {
            uint64_t v361 = 0;
            do
            {
              long long v362 = *(_OWORD *)(v359 + v361);
              *(_OWORD *)(v359 - v338 + v361) = v362;
              *(_OWORD *)(v359 + v360 + v361) = v362;
              BOOL v166 = v361 < (int)v343 + 48;
              v361 += 16;
            }
            while (v166);
          }
          v359 += v360;
          ++v358;
        }
        while (v358 != 10);
        int v363 = 0;
        uint64_t v364 = v336 - 16;
        do
        {
          if ((int)v344 >= -31)
          {
            uint64_t v365 = 0;
            do
            {
              *(_OWORD *)(v364 - v339 + v365) = *(_OWORD *)(v364 + v365);
              BOOL v166 = v365 < (int)v344 + 16;
              v365 += 16;
            }
            while (v166);
          }
          v364 -= v339;
          ++v363;
        }
        while (v363 != 8);
      }
      if (v347 != v340)
      {
        uint64_t v14 = 0;
LABEL_481:
        int v19 = v413;
        uint64_t v13 = v397;
        uint64_t v15 = v398;
        goto LABEL_482;
      }
      int v366 = 0;
      uint64_t v367 = v338 * (v340 - 1);
      uint64_t v368 = v337 + v367 - 32;
      uint64_t v369 = 2 * v338;
      uint64_t v370 = v367 + v369;
      uint64_t v371 = v367 + v338 + v337 - 32;
      uint64_t v372 = v370 + v337 - 32;
      do
      {
        if ((int)v343 >= -63)
        {
          uint64_t v373 = 0;
          do
          {
            long long v374 = *(_OWORD *)(v368 + v373);
            *(_OWORD *)(v371 + v373) = v374;
            *(_OWORD *)(v372 + v373) = v374;
            BOOL v166 = v373 < v343 + 48;
            v373 += 16;
          }
          while (v166);
        }
        v368 += v369;
        ++v366;
        v371 += v369;
        v372 += v369;
      }
      while (v366 != 10);
      int v375 = 0;
      uint64_t v376 = v336 + v339 * (v345 - 1) - 16;
      int v19 = v413;
      uint64_t v13 = v397;
      uint64_t v15 = v398;
      do
      {
        if ((int)v344 >= -31)
        {
          uint64_t v377 = 0;
          do
          {
            *(_OWORD *)(v376 + v339 + v377) = *(_OWORD *)(v376 + v377);
            BOOL v166 = v377 < v344 + 16;
            v377 += 16;
          }
          while (v166);
        }
        uint64_t v14 = 0;
        v376 += v339;
        ++v375;
      }
      while (v375 != 8);
LABEL_482:
      if (a8) {
        *a8 = v394 == 0;
      }
      if (a9) {
        *a9 = v382 == 0;
      }
      goto LABEL_375;
    }
LABEL_479:
    uint64_t v14 = 0;
    goto LABEL_482;
  }
LABEL_375:
  if (!v19 && *(unsigned char *)(v13 + 1164)) {
    sub_221901988(v391, v15);
  }
  return v14;
}

uint64_t sub_2219FD0D4(uint64_t a1, unsigned int *a2, unsigned int *a3, unsigned __int8 *a4)
{
  uint64_t v4 = *a4;
  uint64_t v5 = a4[1];
  if (v4 == 32 || v5 == 32)
  {
    if (v5 == 32 && v4 == 32) {
      return 0xFFFFFFFFLL;
    }
    if (*(unsigned char *)(a1 + 29)) {
      return 4294958327;
    }
    unsigned int v34 = a2[1];
    unsigned int v35 = a3[1];
    if (v34 > v35) {
      return 4294958327;
    }
    int v36 = v5 == 32 ? a4 : a4 + 1;
    uint64_t v37 = *(void *)(*(void *)(a1 + 8 * (v5 != 32) + 224) + 8 * *v36);
    uint64_t v38 = *(void *)(a1 + 216);
    if (!v37 || v38 == 0) {
      return 4294958327;
    }
    if (*(_DWORD *)(v37 + 132) != *(_DWORD *)(v38 + 132)) {
      return 4294958327;
    }
    if (*(_DWORD *)(v37 + 148) != *(_DWORD *)(v38 + 148)) {
      return 4294958327;
    }
    int v40 = (char *)*(unsigned int *)(v37 + 168);
    if (v40 != *(_DWORD *)(v38 + 168)) {
      return 4294958327;
    }
    unint64_t v41 = *(unsigned int *)(v37 + 184);
    if (v41 != *(_DWORD *)(v38 + 184)) {
      return 4294958327;
    }
    unsigned int v42 = *a2;
    uint64_t v43 = 16 * *a2;
    uint64_t v44 = 16 * v34 * v40;
    unsigned int v45 = (char *)(*(void *)(v37 + 64) + v43 + v44);
    int v46 = (char *)(*(void *)(v38 + 64) + v43 + v44);
    __dst = &v40[(void)v46];
    unsigned int v47 = *a3;
    int v48 = &v40[(void)v45];
    uint64_t v49 = (2 * v40);
    int v141 = &v46[v49];
    int v140 = &v45[v49];
    uint64_t v50 = (3 * v40);
    uint64_t v145 = &v46[v50];
    uint64_t v144 = &v45[v50];
    uint64_t v51 = (4 * v40);
    uint64_t v147 = &v46[v51];
    uint64_t v146 = &v45[v51];
    uint64_t v52 = (5 * v40);
    int v151 = &v46[v52];
    int v150 = &v45[v52];
    uint64_t v53 = (6 * v40);
    int v153 = &v46[v53];
    int v152 = &v45[v53];
    uint64_t v54 = (8 * v40);
    uint64_t v55 = (7 * v40);
    int v157 = &v46[v55];
    int8x16_t v156 = &v45[v55];
    int8x16_t v160 = &v46[v54];
    uint64_t v56 = (11 * v40);
    uint64_t v57 = (13 * v40);
    uint64_t v58 = (14 * v40);
    uint64_t v59 = (15 * v40);
    __src = &v45[v54];
    uint64_t v60 = (9 * v40);
    uint64_t v142 = &v46[v60];
    uint64_t v143 = &v45[v60];
    uint64_t v61 = (10 * v40);
    int v148 = &v46[v61];
    int v149 = &v45[v61];
    int8x16_t v154 = &v46[v56];
    int v155 = &v45[v56];
    uint64_t v62 = (12 * v40);
    int v158 = &v46[v62];
    uint64_t v162 = &v45[v62];
    uint64_t v164 = &v46[v57];
    BOOL v166 = &v45[v57];
    uint64_t v168 = &v46[v58];
    int v170 = &v45[v58];
    int v186 = &v46[v59];
    uint64_t v63 = &v45[v59];
    if (v34 == v35)
    {
      size_t v64 = 16 * (v47 - v42) + 16;
      memcpy(v46, v45, v64);
      memcpy(__dst, v48, v64);
      memcpy(v141, v140, v64);
      memcpy(v145, v144, v64);
      memcpy(v147, v146, v64);
      memcpy(v151, v150, v64);
      memcpy(v153, v152, v64);
      memcpy(v157, v156, v64);
      memcpy(v160, __src, v64);
      memcpy(v142, v143, v64);
      memcpy(v148, v149, v64);
      memcpy(v154, v155, v64);
      memcpy(v158, v162, v64);
      memcpy(v164, v166, v64);
      memcpy(v168, v170, v64);
      memcpy(v186, v63, v64);
      uint64_t v65 = (char *)(*(void *)(v37 + 72) + v43 + *(_DWORD *)(v37 + 184) * 8 * v34);
      __n128 v66 = (char *)(*(void *)(v38 + 72) + v43 + *(_DWORD *)(v38 + 184) * 8 * v34);
      memcpy(v66, v65, v64);
      memcpy(&v66[v41], &v65[v41], v64);
      memcpy(&v66[(2 * v41)], &v65[(2 * v41)], v64);
      memcpy(&v66[(3 * v41)], &v65[(3 * v41)], v64);
      memcpy(&v66[(4 * v41)], &v65[(4 * v41)], v64);
      memcpy(&v66[(5 * v41)], &v65[(5 * v41)], v64);
      memcpy(&v66[(6 * v41)], &v65[(6 * v41)], v64);
      uint64_t v67 = (7 * v41);
      double v68 = &v66[v67];
      double v69 = &v65[v67];
      size_t v70 = v64;
    }
    else
    {
      uint64_t v172 = (9 * v40);
      uint64_t v173 = (10 * v40);
      unsigned int v137 = v47;
      uint64_t v174 = (12 * v40);
      uint64_t v175 = (2 * v40);
      uint64_t v176 = (3 * v40);
      uint64_t v177 = (4 * v40);
      uint64_t v178 = (5 * v40);
      uint64_t v179 = (6 * v40);
      uint64_t v180 = (7 * v40);
      uint64_t v181 = (11 * v40);
      uint64_t v182 = (8 * v40);
      uint64_t v183 = (13 * v40);
      uint64_t v184 = (14 * v40);
      uint64_t v185 = (15 * v40);
      size_t v115 = (*(_DWORD *)(v37 + 164) - v43);
      memcpy(v46, v45, v115);
      memcpy(__dst, v48, v115);
      memcpy(v141, v140, v115);
      memcpy(v145, v144, v115);
      memcpy(v147, v146, v115);
      memcpy(v151, v150, v115);
      memcpy(v153, v152, v115);
      memcpy(v157, v156, v115);
      memcpy(v160, __src, v115);
      memcpy(v142, v143, v115);
      memcpy(v148, v149, v115);
      memcpy(v154, v155, v115);
      memcpy(v158, v162, v115);
      memcpy(v164, v166, v115);
      memcpy(v168, v170, v115);
      memcpy(v186, v63, v115);
      int v116 = (char *)(*(void *)(v37 + 72) + v43 + *(_DWORD *)(v37 + 184) * 8 * v34);
      int v117 = (char *)(*(void *)(v38 + 72) + v43 + *(_DWORD *)(v38 + 184) * 8 * v34);
      memcpy(v117, v116, v115);
      memcpy(&v117[v41], &v116[v41], v115);
      uint64_t v171 = (2 * v41);
      memcpy(&v117[v171], &v116[v171], v115);
      uint64_t v169 = (3 * v41);
      memcpy(&v117[v169], &v116[v169], v115);
      uint64_t v167 = (4 * v41);
      memcpy(&v117[v167], &v116[v167], v115);
      uint64_t v165 = (5 * v41);
      memcpy(&v117[v165], &v116[v165], v115);
      unint64_t v163 = (6 * v41);
      memcpy(&v117[v163], &v116[v163], v115);
      uint64_t v118 = (7 * v41);
      int v119 = &v117[v118];
      uint64_t v120 = v118;
      memcpy(v119, &v116[v118], v115);
      unsigned int v121 = v35 - (v34 + 1);
      if (v35 != v34 + 1)
      {
        size_t v128 = *(unsigned int *)(v37 + 164);
        if (v128 != *(_DWORD *)(v37 + 180)) {
          return 4294958327;
        }
        __int16 v159 = (char *)v41;
        int v161 = v40;
        int v129 = v121 <= 1 ? 1 : v35 - (v34 + 1);
        int v130 = 16 * v34 + 16;
        int v131 = 8 * v34 + 8;
        uint64_t v187 = v120;
        do
        {
          unsigned int v132 = (const void *)(*(void *)(v37 + 64) + (*(_DWORD *)(v37 + 168) * v130));
          uint64_t v133 = (void *)(*(void *)(v38 + 64) + (*(_DWORD *)(v38 + 168) * v130));
          memcpy(v133, v132, v128);
          memcpy(&v161[(void)v133], &v161[(void)v132], v128);
          memcpy((char *)v133 + v175, (char *)v132 + v175, v128);
          memcpy((char *)v133 + v176, (char *)v132 + v176, v128);
          memcpy((char *)v133 + v177, (char *)v132 + v177, v128);
          memcpy((char *)v133 + v178, (char *)v132 + v178, v128);
          memcpy((char *)v133 + v179, (char *)v132 + v179, v128);
          memcpy((char *)v133 + v180, (char *)v132 + v180, v128);
          memcpy((char *)v133 + v182, (char *)v132 + v182, v128);
          memcpy((char *)v133 + v172, (char *)v132 + v172, v128);
          memcpy((char *)v133 + v173, (char *)v132 + v173, v128);
          memcpy((char *)v133 + v181, (char *)v132 + v181, v128);
          memcpy((char *)v133 + v174, (char *)v132 + v174, v128);
          memcpy((char *)v133 + v183, (char *)v132 + v183, v128);
          memcpy((char *)v133 + v184, (char *)v132 + v184, v128);
          memcpy((char *)v133 + v185, (char *)v132 + v185, v128);
          uint64_t v134 = (const void *)(*(void *)(v37 + 72) + (*(_DWORD *)(v37 + 184) * v131));
          signed int v135 = (void *)(*(void *)(v38 + 72) + (*(_DWORD *)(v38 + 184) * v131));
          memcpy(v135, v134, v128);
          memcpy(&v159[(void)v135], &v159[(void)v134], v128);
          memcpy((char *)v135 + v171, (char *)v134 + v171, v128);
          memcpy((char *)v135 + v169, (char *)v134 + v169, v128);
          memcpy((char *)v135 + v167, (char *)v134 + v167, v128);
          memcpy((char *)v135 + v165, (char *)v134 + v165, v128);
          memcpy((char *)v135 + v163, (char *)v134 + v163, v128);
          unsigned int v136 = (char *)v134 + v187;
          uint64_t v120 = v187;
          memcpy((char *)v135 + v187, v136, v128);
          v130 += 16;
          v131 += 8;
          --v121;
          --v129;
        }
        while (v129);
        unint64_t v41 = (unint64_t)v159;
        int v40 = v161;
        if (v121) {
          return 4294958327;
        }
      }
      uint64_t v122 = v120;
      int32x4_t v123 = (char *)(*(void *)(v37 + 64) + *(_DWORD *)(v37 + 168) * 16 * v35);
      int32x4_t v124 = (char *)(*(void *)(v38 + 64) + *(_DWORD *)(v38 + 168) * 16 * v35);
      size_t v125 = 16 * v137 + 16;
      memcpy(v124, v123, v125);
      memcpy(&v40[(void)v124], &v40[(void)v123], v125);
      memcpy(&v124[v175], &v123[v175], v125);
      memcpy(&v124[v176], &v123[v176], v125);
      memcpy(&v124[v177], &v123[v177], v125);
      memcpy(&v124[v178], &v123[v178], v125);
      memcpy(&v124[v179], &v123[v179], v125);
      memcpy(&v124[v180], &v123[v180], v125);
      memcpy(&v124[v182], &v123[v182], v125);
      memcpy(&v124[v172], &v123[v172], v125);
      memcpy(&v124[v173], &v123[v173], v125);
      memcpy(&v124[v181], &v123[v181], v125);
      memcpy(&v124[v174], &v123[v174], v125);
      memcpy(&v124[v183], &v123[v183], v125);
      memcpy(&v124[v184], &v123[v184], v125);
      memcpy(&v124[v185], &v123[v185], v125);
      unsigned int v126 = (char *)(*(void *)(v37 + 72) + *(_DWORD *)(v37 + 184) * 8 * v35);
      char v127 = (char *)(*(void *)(v38 + 72) + *(_DWORD *)(v38 + 184) * 8 * v35);
      memcpy(v127, v126, v125);
      memcpy(&v127[v41], &v126[v41], v125);
      memcpy(&v127[v171], &v126[v171], v125);
      memcpy(&v127[v169], &v126[v169], v125);
      memcpy(&v127[v167], &v126[v167], v125);
      memcpy(&v127[v165], &v126[v165], v125);
      memcpy(&v127[v163], &v126[v163], v125);
      double v68 = &v127[v122];
      double v69 = &v126[v122];
      size_t v70 = v125;
    }
    memcpy(v68, v69, v70);
    return 0;
  }
  if (*(unsigned char *)(a1 + 29)) {
    return 4294958327;
  }
  unsigned int v7 = a2[1];
  unsigned int v8 = a3[1];
  if (v7 > v8) {
    return 4294958327;
  }
  uint64_t v9 = *(void *)(a1 + 216);
  uint64_t v10 = *(void *)(*(void *)(a1 + 224) + 8 * v4);
  uint64_t v11 = *(unsigned int *)(v10 + 168);
  if (v11 != *(_DWORD *)(v9 + 168)) {
    return 4294958327;
  }
  uint64_t v12 = *(unsigned int *)(v10 + 184);
  if (v12 != *(_DWORD *)(v9 + 184)) {
    return 4294958327;
  }
  unsigned int v13 = *a2;
  unsigned int v14 = *a3;
  uint64_t v15 = *(void *)(*(void *)(a1 + 232) + 8 * v5);
  if (v7 == v8)
  {
    unsigned int v16 = v14 - v13;
    if (v14 >= v13)
    {
      int v17 = 0;
      uint64_t v18 = 16 * v13;
      uint64_t v19 = v11 * 16 * v7;
      uint64_t v20 = *(void *)(v10 + 64) + v18 + v19;
      uint64_t v21 = *(void *)(v15 + 64) + v18 + *(_DWORD *)(v15 + 168) * 16 * v7;
      uint64_t v22 = *(void *)(v9 + 64) + v18 + v19;
      unint64_t v23 = 16 * v16 + 16;
      unint64_t v24 = v23 >> 4;
      if (v23 >> 4 <= 1) {
        LODWORD(v24) = 1;
      }
      do
      {
        if (v23)
        {
          uint64_t v25 = 0;
          do
          {
            *(uint8x16_t *)(v22 + 16 * v25) = vrhaddq_u8(*(uint8x16_t *)(v20 + 16 * v25), *(uint8x16_t *)(v21 + 16 * v25));
            ++v25;
          }
          while (v24 != v25);
        }
        v20 += v11;
        v21 += v11;
        v22 += v11;
        ++v17;
      }
      while (v17 != 16);
      int v26 = 0;
      int v27 = 8 * v7;
      uint64_t v28 = *(void *)(v10 + 72) + v18 + (*(_DWORD *)(v10 + 184) * v27);
      uint64_t v29 = *(void *)(v15 + 72) + v18 + (*(_DWORD *)(v15 + 184) * v27);
      uint64_t v30 = *(void *)(v9 + 72) + v18 + (*(_DWORD *)(v9 + 184) * v27);
      unint64_t v31 = v23 >> 4;
      if (v23 >> 4 <= 1) {
        LODWORD(v31) = 1;
      }
      do
      {
        if (v23)
        {
          uint64_t v32 = 0;
          do
          {
            *(uint8x16_t *)(v30 + 16 * v32) = vrhaddq_u8(*(uint8x16_t *)(v28 + 16 * v32), *(uint8x16_t *)(v29 + 16 * v32));
            ++v32;
          }
          while (v31 != v32);
        }
        uint64_t result = 0;
        v28 += v12;
        v29 += v12;
        v30 += v12;
        ++v26;
      }
      while (v26 != 8);
      return result;
    }
    return 4294958327;
  }
  int v71 = 0;
  uint64_t v72 = 16 * v13;
  uint64_t v73 = v11 * 16 * v7;
  uint64_t v74 = *(void *)(v10 + 64) + v72 + v73;
  uint64_t v75 = *(void *)(v15 + 64) + v72 + *(_DWORD *)(v15 + 168) * 16 * v7;
  uint64_t v76 = *(void *)(v9 + 64) + v72 + v73;
  unint64_t v77 = *(_DWORD *)(v10 + 164) - 16 * v13;
  unint64_t v78 = v77 >> 4;
  if (v77 >> 4 <= 1) {
    LODWORD(v78) = 1;
  }
  do
  {
    if (v77 >= 0x10)
    {
      uint64_t v79 = 0;
      do
      {
        *(uint8x16_t *)(v76 + 16 * v79) = vrhaddq_u8(*(uint8x16_t *)(v74 + 16 * v79), *(uint8x16_t *)(v75 + 16 * v79));
        ++v79;
      }
      while (v78 != v79);
    }
    v74 += v11;
    v75 += v11;
    v76 += v11;
    ++v71;
  }
  while (v71 != 16);
  int v80 = 0;
  uint64_t v81 = *(void *)(v10 + 72) + v72 + *(_DWORD *)(v10 + 184) * 8 * v7;
  uint64_t v82 = *(void *)(v15 + 72) + v72 + *(_DWORD *)(v15 + 184) * 8 * v7;
  uint64_t v83 = *(void *)(v9 + 72) + v72 + *(_DWORD *)(v9 + 184) * 8 * v7;
  unint64_t v84 = v77 >> 4;
  if (v77 >> 4 <= 1) {
    LODWORD(v84) = 1;
  }
  do
  {
    if (v77 >= 0x10)
    {
      uint64_t v85 = 0;
      do
      {
        *(uint8x16_t *)(v83 + 16 * v85) = vrhaddq_u8(*(uint8x16_t *)(v81 + 16 * v85), *(uint8x16_t *)(v82 + 16 * v85));
        ++v85;
      }
      while (v84 != v85);
    }
    v81 += v12;
    v82 += v12;
    v83 += v12;
    ++v80;
  }
  while (v80 != 8);
  unsigned int v86 = v7 + 1;
  unsigned int v87 = v8 - v86;
  if (v8 != v86)
  {
    unint64_t v102 = *(unsigned int *)(v10 + 164);
    if (v102 != *(_DWORD *)(v10 + 180)) {
      return 4294958327;
    }
    int v103 = 0;
    if (v87 <= 1) {
      unsigned int v87 = 1;
    }
    unint64_t v104 = v102 >> 4;
    if (v102 >> 4 <= 1) {
      LODWORD(v104) = 1;
    }
    do
    {
      int v105 = 0;
      uint64_t v106 = *(void *)(v10 + 64) + *(_DWORD *)(v10 + 168) * 16 * v86;
      uint64_t v107 = *(void *)(v15 + 64) + *(_DWORD *)(v15 + 168) * 16 * v86;
      uint64_t v108 = *(void *)(v9 + 64) + *(_DWORD *)(v9 + 168) * 16 * v86;
      do
      {
        if (v102 >= 0x10)
        {
          uint64_t v109 = 0;
          do
          {
            *(uint8x16_t *)(v108 + 16 * v109) = vrhaddq_u8(*(uint8x16_t *)(v106 + 16 * v109), *(uint8x16_t *)(v107 + 16 * v109));
            ++v109;
          }
          while (v104 != v109);
        }
        v106 += v11;
        v107 += v11;
        v108 += v11;
        ++v105;
      }
      while (v105 != 16);
      int v110 = 0;
      uint64_t v111 = *(void *)(v10 + 72) + *(_DWORD *)(v10 + 184) * 8 * v86;
      uint64_t v112 = *(void *)(v15 + 72) + *(_DWORD *)(v15 + 184) * 8 * v86;
      uint64_t v113 = *(void *)(v9 + 72) + *(_DWORD *)(v9 + 184) * 8 * v86;
      do
      {
        if (v102 >= 0x10)
        {
          uint64_t v114 = 0;
          do
          {
            *(uint8x16_t *)(v113 + 16 * v114) = vrhaddq_u8(*(uint8x16_t *)(v111 + 16 * v114), *(uint8x16_t *)(v112 + 16 * v114));
            ++v114;
          }
          while (v104 != v114);
        }
        v111 += v12;
        v112 += v12;
        v113 += v12;
        ++v110;
      }
      while (v110 != 8);
      ++v86;
      ++v103;
    }
    while (v103 != v87);
    if (v86 != v8) {
      return 4294958327;
    }
  }
  int v88 = 0;
  uint64_t v89 = *(void *)(v10 + 64) + *(_DWORD *)(v10 + 168) * 16 * v8;
  uint64_t v90 = *(void *)(v15 + 64) + *(_DWORD *)(v15 + 168) * 16 * v8;
  uint64_t v91 = *(void *)(v9 + 64) + *(_DWORD *)(v9 + 168) * 16 * v8;
  unint64_t v92 = 16 * v14 + 16;
  unint64_t v93 = v92 >> 4;
  if (v92 >> 4 <= 1) {
    LODWORD(v93) = 1;
  }
  do
  {
    if (v92)
    {
      uint64_t v94 = 0;
      do
      {
        *(uint8x16_t *)(v91 + 16 * v94) = vrhaddq_u8(*(uint8x16_t *)(v89 + 16 * v94), *(uint8x16_t *)(v90 + 16 * v94));
        ++v94;
      }
      while (v93 != v94);
    }
    v89 += v11;
    v90 += v11;
    v91 += v11;
    ++v88;
  }
  while (v88 != 16);
  int v95 = 0;
  int v96 = 8 * v8;
  uint64_t v97 = *(void *)(v10 + 72) + (*(_DWORD *)(v10 + 184) * v96);
  uint64_t v98 = *(void *)(v15 + 72) + (*(_DWORD *)(v15 + 184) * v96);
  uint64_t v99 = *(void *)(v9 + 72) + (*(_DWORD *)(v9 + 184) * v96);
  unint64_t v100 = v92 >> 4;
  if (v92 >> 4 <= 1) {
    LODWORD(v100) = 1;
  }
  do
  {
    if (v92)
    {
      uint64_t v101 = 0;
      do
      {
        *(uint8x16_t *)(v99 + 16 * v101) = vrhaddq_u8(*(uint8x16_t *)(v97 + 16 * v101), *(uint8x16_t *)(v98 + 16 * v101));
        ++v101;
      }
      while (v100 != v101);
    }
    uint64_t result = 0;
    v97 += v12;
    v98 += v12;
    v99 += v12;
    ++v95;
  }
  while (v95 != 8);
  return result;
}

uint64_t sub_2219FE03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, int *a7, _DWORD *a8, _DWORD *a9, unsigned __int8 a10, int a11, int a12)
{
  __int16 v244 = a5;
  uint64_t v13 = a4 + 1425504;
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v226 = *(void *)(a1 + 88);
  uint64_t v229 = v226 + 1152;
  unsigned int v239 = *(_DWORD *)(a1 + 4);
  *(void *)(v14 + 80) = v226 + 32;
  int v15 = *(_DWORD *)(v226 + 132) >> 4;
  *(_DWORD *)(v14 + 8) = v15;
  *(_DWORD *)(v14 + 20) = *(_DWORD *)(v14 + 12) * v15;
  unsigned int v16 = (int *)(a4 + 976);
  uint64_t v240 = v14;
  int v241 = *(unsigned char **)(a4 + 1016);
  unsigned int v17 = *(_DWORD *)(a1 + 4);
  unsigned int v228 = *(unsigned char *)(a4 + 1425576) == 0;
  unsigned int v19 = *(_DWORD *)(a4 + 1425560);
  unsigned int v20 = v19 / v17 - 1;
  int v21 = v17 + v17 * (v19 / v17) - 1;
  int v246 = v17;
  int v230 = 2 * v17;
  int v22 = 2 * v17 - 1;
  if (v19) {
    int v23 = *(_DWORD *)(a4 + 1425560);
  }
  else {
    int v23 = 0;
  }
  if (!v19)
  {
    int v21 = v22;
    unsigned int v20 = 0;
  }
  if (a12) {
    int v24 = v23;
  }
  else {
    int v24 = *(_DWORD *)(a4 + 1425560);
  }
  if (a12) {
    int v25 = v21;
  }
  else {
    int v25 = 0;
  }
  int v248 = v25;
  if (a12) {
    uint64_t v26 = v20;
  }
  else {
    uint64_t v26 = 0;
  }
  int v247 = *(_DWORD *)(a4 + 1428264) + *(_DWORD *)(a3 + 72) + 26;
  if (*(unsigned char *)(a4 + 1164)) {
    sub_221901768(*(void *)(a4 + 1176));
  }
  char v243 = *(uint64_t ***)(a4 + 1176);
  int v233 = 0;
  int v227 = 0;
  int v18 = *(_DWORD *)(a1 + 16);
  int v27 = v18 * v246;
  uint64_t v28 = (unsigned int *)(*(void *)(*(void *)(a4 + 1312) + 48) + 12 * a5);
  *uint64_t v28 = (63 * *(_DWORD *)(a1 + 156)) >> 6;
  v28[1] = 1;
  unsigned int v29 = a6;
  BOOL v31 = (a10 & 0xFD) == 1 && a11 != 0;
  BOOL v224 = v31;
  unsigned int v235 = (unsigned __int16)a5;
  uint64_t v225 = a4 + 1458264;
  BOOL v32 = 1;
  int v245 = v18 * v246;
  do
  {
    int v33 = v27 - v24;
    if (v27 <= v24)
    {
LABEL_232:
      uint64_t v221 = 4294958327;
      goto LABEL_233;
    }
    if (*(unsigned char *)(a4 + 1161))
    {
      int v34 = v24 / v230;
      int v35 = v24 % v230;
      if (v24 % v230 >= 0) {
        int v36 = v24 % v230;
      }
      else {
        int v36 = v35 + 1;
      }
      int v37 = v36 >> 1;
      int v38 = v24 & 1 | (2 * v34);
    }
    else
    {
      int v34 = v24 / v246;
      int v35 = v24 % v246;
      int v37 = v24 % v246;
      int v38 = v24 / v246;
    }
    *(_DWORD *)(a4 + 976) = v37;
    *(_DWORD *)(a4 + 988) = v38;
    *(_DWORD *)(a4 + 980) = v38;
    int v232 = v34;
    uint64_t v39 = *(void *)(v225 + 8 * !(v34 & 1));
    *(void *)(v13 + 32752) = v39;
    *(void *)(v13 + 32744) = *(void *)(v225 + 8 * (v34 & 1));
    *(void *)(a4 + 1152) = v39 + 400 * v35;
    unsigned int v234 = v35;
    *(void *)(*(void *)(v13 + 32752) + 400 * v35 + 112) = sub_221A15AE4(*(void *)(*(void *)(*(void *)(a4 + 1192) + 1152)
                                                                                        + 8 * a6));
    **(_DWORD **)(a4 + 1152) = v24;
    *(_DWORD *)(a4 + 992) = v24;
    *(unsigned char *)(*(void *)(a4 + 1152) + 144) = 0;
    *(unsigned char *)(*(void *)(a4 + 1016) + 3) = 0;
    if (*(unsigned char *)(a4 + 1004) - 2) < 8u && ((0xA5u >> (*(unsigned char *)(a4 + 1004) - 2)))
    {
      BOOL v242 = 0;
LABEL_44:
      *(unsigned char *)(a4 + 1007) = 0;
      int v51 = 1;
LABEL_45:
      int v52 = v51;
      int v238 = v51;
      while (1)
      {
        if (v52 < v51)
        {
          if (*(unsigned char *)(a4 + 1161))
          {
            int v53 = v24 / v230;
            int v54 = v24 % v230;
            if (v24 % v230 >= 0) {
              int v55 = v24 % v230;
            }
            else {
              int v55 = v54 + 1;
            }
            int v56 = v55 >> 1;
            int v57 = v24 & 1 | (2 * v53);
          }
          else
          {
            int v53 = v24 / v246;
            int v54 = v24 % v246;
            int v56 = v24 % v246;
            int v57 = v24 / v246;
          }
          *(_DWORD *)(a4 + 976) = v56;
          *(_DWORD *)(a4 + 988) = v57;
          *(_DWORD *)(a4 + 980) = v57;
          int v232 = v53;
          uint64_t v58 = *(void *)(a4 + 1458264 + 8 * !(v53 & 1));
          *(void *)(v13 + 32752) = v58;
          *(void *)(v13 + 32744) = *(void *)(a4 + 1458264 + 8 * (v53 & 1));
          *(void *)(a4 + 1152) = v58 + 400 * v54;
          unsigned int v234 = v54;
          *(void *)(*(void *)(v13 + 32752) + 400 * v54 + 112) = sub_221A15AE4(*(void *)(*(void *)(*(void *)(a4 + 1192) + 1152)
                                                                                              + 8 * a6));
          **(_DWORD **)(a4 + 1152) = v24;
          *(_DWORD *)(a4 + 992) = v24;
          *(unsigned char *)(*(void *)(a4 + 1152) + 144) = 0;
          *(unsigned char *)(*(void *)(a4 + 1016) + 3) = 0;
        }
        if (v24 >= v245) {
          goto LABEL_232;
        }
        if (*(unsigned char *)(a4 + 1164)) {
          BOOL v59 = v32;
        }
        else {
          BOOL v59 = 1;
        }
        if (!v59)
        {
          uint64_t v221 = 4294958327;
          goto LABEL_234;
        }
        if (!*(unsigned char *)(a4 + 1164) || (unsigned int v60 = *(unsigned __int8 *)(a4 + 1004), v60 <= 9) && ((1 << v60) & 0x294) != 0) {
          sub_221A12FA8(*(_DWORD *)(v13 + 56), *(void *)(v13 + 32744), *(void *)(v13 + 32752), v16);
        }
        if (!(--v52 | v242)) {
          break;
        }
        sub_221A141F4((uint64_t)v16);
        if (*(unsigned char *)(a4 + 1007)) {
          uint64_t v66 = sub_22191188C((uint64_t)v16, v61, *(int32x2_t *)v62.i8, v63, v64, v65);
        }
        else {
          uint64_t v66 = sub_221914ED8((uint64_t)v16, (int16x8_t)v61, v62);
        }
        uint64_t v221 = v66;
        if (v66) {
          goto LABEL_233;
        }
        uint64_t v83 = a12
            ? sub_221A144CC((uint64_t)v16, v67, v68, v69, v70, v71, v72, v73, v74)
            : sub_221A13474((uint64_t)v16, v67, v68, v69, v70, v71, v72, v73, v74);
        uint64_t v221 = v83;
        if (v83) {
          goto LABEL_233;
        }
        unsigned int v84 = 0;
        int v233 = 1;
LABEL_101:
        if (*(_DWORD *)(*(void *)(a4 + 1192) + 1164) <= *(_DWORD *)(a4 + 992)) {
          goto LABEL_232;
        }
        sub_221A13094((uint64_t)v16, v29);
        if (v241[1] || v241[2] != 25)
        {
          unsigned int v97 = (char)v247;
          char v98 = sub_221A25064((char)v247, *(char *)(*(void *)(a4 + 1016) + 56));
          char v99 = sub_221A25064((char)v247, *(char *)(*(void *)(a4 + 1016) + 57));
        }
        else
        {
          unsigned int v97 = 0;
          char v98 = 0;
          char v99 = 0;
        }
        uint64_t v100 = *(void *)(a4 + 1312);
        char v101 = *(unsigned char *)(*(void *)(a4 + 1016) + 3);
        char v102 = *(unsigned char *)(a4 + 1007);
        unsigned int v103 = *(_DWORD *)(a4 + 976) + *(_DWORD *)(v100 + 12) * *(_DWORD *)(a4 + 980);
        *(_WORD *)(*(void *)(v100 + 72) + 2 * v103) = v244;
        *(unsigned char *)(*(void *)(v100 + 112) + v103) = v97;
        *(unsigned char *)(*(void *)(v100 + 120) + v103) = v98;
        *(unsigned char *)(*(void *)(v100 + 128) + v103) = v99;
        *(unsigned char *)(*(void *)(v100 + 136) + v103) = v101;
        *(unsigned char *)(*(void *)(v100 + 144) + v103) = v102;
        *(int32x2_t *)(*(void *)(v100 + 48) + 12 * v235) = vadd_s32(*(int32x2_t *)(*(void *)(v100 + 48) + 12 * v235), (int32x2_t)vand_s8((int8x8_t)(v97 | 0x100000000), (int8x8_t)vdup_n_s32(v84)));
        if (*(unsigned char *)(a3 + 8)) {
          BOOL v32 = !sub_221901AE4(v243);
        }
        else {
          BOOL v32 = sub_2219F3948(v13);
        }
        uint64_t v107 = v240;
        *a7 = v24;
        if (a12 && v24 == v248)
        {
          uint64_t v108 = (v26 + 1);
          sub_2219E5A18((uint64_t *)v240, v229, 0, v239, v26, v26 + 1, v104, v105, v106);
          if (*(int *)(v240 + 184) < 1)
          {
            puts("cchung: simplifid to do LF for DVDApiDecoder only");
            exit(1);
          }
          uint64_t v109 = sub_2219E21C8(v240, 0, v239, v26, (int)v26 + 1);
          if (v109)
          {
            uint64_t v221 = v109;
            goto LABEL_233;
          }
          unsigned int v29 = a6;
          if (*(_DWORD *)(v240 + 220))
          {
            uint64_t v111 = *(void *)(v226 + 64);
            uint64_t v110 = *(void *)(v226 + 72);
            int v112 = *(_DWORD *)(v226 + 168);
            int v113 = *(_DWORD *)(v226 + 184);
            if (*(unsigned char *)(v226 + 32))
            {
              uint64_t v114 = v112;
              uint64_t v115 = v113;
              if (!*(unsigned char *)(v226 + 37)) {
                uint64_t v115 = 0;
              }
              v110 += v115;
              if (!*(unsigned char *)(v226 + 37)) {
                uint64_t v114 = 0;
              }
              v111 += v114;
              v112 *= 2;
              v113 *= 2;
            }
            uint64_t v116 = *(int *)(v226 + 164);
            uint64_t v117 = *(int *)(v226 + 180);
            uint64_t v118 = *(int *)(v226 + 132);
            uint64_t v119 = *(int *)(v226 + 148);
            if ((int)v26 >= 1) {
              int v120 = 16 * v26 - 4;
            }
            else {
              int v120 = 0;
            }
            int v121 = 16 * v108;
            if (16 * v108 != v118) {
              int v121 = 16 * v108 - 4;
            }
            int v122 = v121 - v120;
            if (v121 > v120)
            {
              int32x4_t v123 = (int8x16_t *)(v111 + v112 * (uint64_t)v120);
              do
              {
                int8x16_t v124 = vqtbl1q_s8((int8x16_t)(16843009 * v123->u8[0]), (int8x16_t)xmmword_221A36310);
                v123[-2] = v124;
                v123[-1] = v124;
                size_t v125 = (int8x16_t *)((char *)v123 + v116);
                int8x16_t v126 = vqtbl1q_s8((int8x16_t)(16843009 * v123->u8[v116 - 1]), (int8x16_t)xmmword_221A36310);
                *size_t v125 = v126;
                v125[1] = v126;
                int32x4_t v123 = (int8x16_t *)((char *)v123 + v112);
                --v122;
              }
              while (v122);
            }
            int v127 = v120 >> 1;
            int v128 = (v121 >> 1) - (v120 >> 1);
            if (v121 >> 1 > v127)
            {
              int v129 = (int8x16_t *)(v110 + v113 * (uint64_t)v127);
              do
              {
                int8x16_t v130 = vqtbl1q_s8((int8x16_t)(65537 * *(unsigned __int16 *)((char *)&v129->u16[-1] + v117)), (int8x16_t)xmmword_221A36310);
                v129[-1] = vqtbl1q_s8((int8x16_t)(65537 * v129->u16[0]), (int8x16_t)xmmword_221A36310);
                *(int8x16_t *)((char *)v129 + v117) = v130;
                int v129 = (int8x16_t *)((char *)v129 + v113);
                --v128;
              }
              while (v128);
            }
            if ((int)v26 <= 0)
            {
              int v131 = 0;
              uint64_t v132 = v111 - 32;
              uint64_t v133 = -2 * v112;
              do
              {
                if ((int)v116 >= -63)
                {
                  uint64_t v134 = 0;
                  do
                  {
                    long long v135 = *(_OWORD *)(v132 + v134);
                    *(_OWORD *)(v132 - v112 + v134) = v135;
                    *(_OWORD *)(v132 + v133 + v134) = v135;
                    BOOL v136 = v134 < (int)v116 + 48;
                    v134 += 16;
                  }
                  while (v136);
                }
                v132 += v133;
                ++v131;
              }
              while (v131 != 10);
              int v137 = 0;
              uint64_t v138 = v110 - 16;
              do
              {
                if ((int)v117 >= -31)
                {
                  uint64_t v139 = 0;
                  do
                  {
                    *(_OWORD *)(v138 - v113 + v139) = *(_OWORD *)(v138 + v139);
                    BOOL v136 = v139 < (int)v117 + 16;
                    v139 += 16;
                  }
                  while (v136);
                }
                v138 -= v113;
                ++v137;
              }
              while (v137 != 8);
            }
            if (v121 == v118)
            {
              int v140 = 0;
              uint64_t v141 = v112 * (v118 - 1);
              uint64_t v142 = v111 - 32;
              uint64_t v143 = v111 - 32 + v141;
              uint64_t v144 = 2 * v112;
              uint64_t v145 = v142 + v141 + v112;
              uint64_t v146 = v142 + v141 + v144;
              do
              {
                if ((int)v116 >= -63)
                {
                  uint64_t v147 = 0;
                  do
                  {
                    long long v148 = *(_OWORD *)(v143 + v147);
                    *(_OWORD *)(v145 + v147) = v148;
                    *(_OWORD *)(v146 + v147) = v148;
                    BOOL v136 = v147 < v116 + 48;
                    v147 += 16;
                  }
                  while (v136);
                }
                v143 += v144;
                ++v140;
                v145 += v144;
                v146 += v144;
              }
              while (v140 != 10);
              int v149 = 0;
              uint64_t v150 = v110 + v113 * (v119 - 1) - 16;
              do
              {
                if ((int)v117 >= -31)
                {
                  uint64_t v151 = 0;
                  do
                  {
                    *(_OWORD *)(v150 + v113 + v151) = *(_OWORD *)(v150 + v151);
                    BOOL v136 = v151 < v117 + 16;
                    v151 += 16;
                  }
                  while (v136);
                }
                v150 += v113;
                ++v149;
              }
              while (v149 != 8);
            }
          }
          v248 += v246;
        }
        else
        {
          uint64_t v108 = v26;
        }
        int v24 = sub_221A143A4(v24);
        uint64_t v26 = v108;
        int v51 = v238;
        if (!v52) {
          goto LABEL_182;
        }
      }
      if (*(unsigned char *)(a4 + 1164)) {
        uint64_t v75 = sub_221901EA0(v243, (unsigned __int16 *)v16, *(unsigned __int8 *)(a4 + 1007), v228, v13, 0);
      }
      else {
        uint64_t v75 = sub_221A1AD30(v13, v228, a10, a11, (uint64_t)v16);
      }
      uint64_t v221 = v75;
      if (v75) {
        goto LABEL_233;
      }
      if (*(void *)(v13 + 16) - *(void *)v13 > *(int *)(v13 + 12) || (v241[54] - 26) < 0xCCu) {
        goto LABEL_232;
      }
      int v247 = (char)v241[54]
           + (char)v247
           + 52
           - 52
           * (((20165 * ((char)v241[54] + (char)v247 + 52)) >> 20)
            + ((20165 * ((char)v241[54] + (char)v247 + 52)) >> 31));
      v241[55] = v247;
      if (v241[1] - 2 < 4)
      {
        if (*(unsigned char *)(a4 + 1007)) {
          uint64_t v85 = sub_22191188C((uint64_t)v16, v76, *(int32x2_t *)v77.i8, *(int32x2_t *)&v78, *(int32x2_t *)&v79, *(int32x2_t *)&v80);
        }
        else {
          uint64_t v85 = sub_221914ED8((uint64_t)v16, (int16x8_t)v76, (int16x8_t)v77);
        }
        uint64_t v221 = v85;
        if (v85) {
          goto LABEL_233;
        }
        if (a12)
        {
          if (!sub_221A143AC((uint64_t)v16, v86, v87, v88, v89, v90, v91, v92, v93)) {
            goto LABEL_95;
          }
        }
        else if (!sub_221A132E8((uint64_t)v16, v86, v87, v88, v89, v90, v91, v92, v93))
        {
LABEL_95:
          unsigned int v84 = -1;
          int v233 = 1;
LABEL_100:
          int v227 = 1;
          goto LABEL_101;
        }
        uint64_t v94 = *(void *)(a4 + 1312);
        int v95 = (int8x16_t *)(*(void *)(a4 + 1152) + 80);
        if (*(unsigned char *)(a4 + 1007)) {
          sub_2219E4D7C(v94, v234, v232, v95);
        }
        else {
          sub_2219E4EEC(v94, v234, v232, v95);
        }
        goto LABEL_95;
      }
      if (v241[1])
      {
        uint64_t v221 = 4294966630;
        goto LABEL_233;
      }
      if (v241[2] == 25)
      {
        uint64_t v96 = sub_221A134D4((uint64_t)v16);
      }
      else
      {
        if (v224)
        {
LABEL_99:
          unsigned int v84 = -1;
          goto LABEL_100;
        }
        uint64_t v96 = sub_22191007C((unint64_t)v16, (int32x4_t)v76, v77, v78, v79, v80, v81, v82);
      }
      uint64_t v221 = v96;
      if (v96) {
        goto LABEL_233;
      }
      goto LABEL_99;
    }
    if (*(unsigned char *)(a4 + 1164))
    {
      sub_221A12FA8(*(_DWORD *)(v13 + 56), *(void *)(v13 + 32744), *(void *)(v13 + 32752), v16);
      BOOL v242 = sub_221901A5C(v243, v234);
      goto LABEL_44;
    }
    uint64_t v41 = *(void *)(v13 + 16);
    int v40 = *(unsigned int **)(v13 + 24);
    int v42 = *(_DWORD *)(v13 + 32);
    uint64_t v43 = *(unsigned __int8 *)(v13 + 36);
    unsigned int v44 = __clz(v42 | 1);
    if (!v42) {
      ++v44;
    }
    if (v44 > 0xC)
    {
      unint64_t v155 = v43 + 1;
      int v156 = (v43 + 1) & 7;
      int v157 = (unsigned int *)(v41 + (v155 >> 3));
      unsigned int v158 = bswap32(*v157) << v156;
      if (v157 <= v40) {
        __int16 v159 = v157;
      }
      else {
        __int16 v159 = *(unsigned int **)(v13 + 24);
      }
      if (v42 < 0)
      {
        unsigned int v163 = 0;
      }
      else
      {
        unsigned int v160 = 0;
        do
        {
          unsigned int v161 = v158;
          char v162 = v156;
          unsigned int v163 = v160 + 1;
          unint64_t v164 = (v156 + 1);
          int v156 = ((_BYTE)v156 + 1) & 7;
          __int16 v159 = (unsigned int *)((char *)v159 + (v164 >> 3));
          unsigned int v158 = bswap32(*v159) << (v164 & 7);
          if (v159 > v40) {
            __int16 v159 = *(unsigned int **)(v13 + 24);
          }
          if ((v161 & 0x80000000) != 0) {
            break;
          }
        }
        while (v160++ < 0x1F);
        if (v163 - 1 > 0x17)
        {
          unsigned int v166 = v158 >> (48 - v163);
          unsigned int v167 = ((v162 + 1) & 7) + v163;
          unint64_t v168 = v167 - 16;
          char v48 = v167 & 7;
          uint64_t v169 = (unsigned int *)((char *)v159 + (v168 >> 3));
          unsigned int v170 = bswap32(*v169) << v48;
          if (v169 <= v40) {
            uint64_t v171 = v169;
          }
          else {
            uint64_t v171 = *(unsigned int **)(v13 + 24);
          }
          unsigned int v173 = *(unsigned int *)((char *)v171 + 2);
          uint64_t v172 = (unsigned int *)((char *)v171 + 2);
          unsigned int v50 = bswap32(v173) << v48;
          if (v172 <= v40) {
            int v40 = v172;
          }
          int v174 = __PAIR64__(v166, v170) >> 16;
LABEL_177:
          int v46 = v174 + ~(-1 << v163);
          goto LABEL_178;
        }
      }
      int v174 = v158 >> -(char)v163;
      unint64_t v175 = v163 + v156;
      char v48 = (v163 + v156) & 7;
      uint64_t v176 = (unsigned int *)((char *)v159 + (v175 >> 3));
      unsigned int v50 = bswap32(*v176) << v48;
      if (v176 <= v40) {
        int v40 = v176;
      }
      goto LABEL_177;
    }
    unsigned int v45 = (v42 << (v44 + 1)) >> -(char)v44;
    if (!v44) {
      unsigned int v45 = 0;
    }
    int v46 = v45 + ~(-1 << v44);
    unint64_t v47 = v43 + 2 * v44 + 1;
    char v48 = v47 & 7;
    uint64_t v49 = (unsigned int *)(v41 + (v47 >> 3));
    unsigned int v50 = bswap32(*v49) << (v47 & 7);
    if (v49 <= v40) {
      int v40 = v49;
    }
LABEL_178:
    *(void *)(v13 + 16) = v40;
    *(_DWORD *)(v13 + 32) = v50;
    uint64_t v221 = 4294958327;
    *(unsigned char *)(v13 + 36) = v48;
    if (v46 > v33 || v46 < 0) {
      goto LABEL_233;
    }
    BOOL v32 = sub_2219F3948(v13);
    BOOL v242 = !v32;
    *(unsigned char *)(a4 + 1007) = 0;
    int v51 = v32 + v46;
    if (v32 + v46) {
      goto LABEL_45;
    }
    uint64_t v108 = v26;
    uint64_t v107 = v240;
LABEL_182:
    int v27 = v245;
    if (!v32) {
      break;
    }
    uint64_t v26 = v108;
  }
  while (v24 < v245);
  if (!a12 || v24 != v245) {
    goto LABEL_228;
  }
  int v177 = v108 + 1;
  sub_2219E5A18((uint64_t *)v107, v229, 0, v239, v108, v108 + 1, v152, v153, v154);
  if (*(int *)(v107 + 184) < 1 || (uint64_t v221 = sub_2219E21C8(v240, 0, v239, v108, (int)v108 + 1), !v221))
  {
    if (*(_DWORD *)(v240 + 220))
    {
      uint64_t v179 = *(void *)(v226 + 64);
      uint64_t v178 = *(void *)(v226 + 72);
      int v180 = *(_DWORD *)(v226 + 168);
      int v181 = *(_DWORD *)(v226 + 184);
      uint64_t v182 = *(int *)(v226 + 132);
      if (*(unsigned char *)(v226 + 32))
      {
        uint64_t v183 = v180;
        uint64_t v184 = v181;
        if (!*(unsigned char *)(v226 + 37)) {
          uint64_t v184 = 0;
        }
        v178 += v184;
        if (!*(unsigned char *)(v226 + 37)) {
          uint64_t v183 = 0;
        }
        v179 += v183;
        v180 *= 2;
        v181 *= 2;
      }
      uint64_t v185 = *(int *)(v226 + 164);
      uint64_t v186 = *(int *)(v226 + 180);
      uint64_t v187 = *(int *)(v226 + 148);
      if ((int)v108 >= 1) {
        int v188 = 16 * v108 - 4;
      }
      else {
        int v188 = 0;
      }
      int v189 = 16 * v177;
      if (16 * v177 != v182) {
        int v189 = 16 * v177 - 4;
      }
      int v190 = v188 >> 1;
      int v191 = v189 >> 1;
      int v192 = v189 - v188;
      if (v189 > v188)
      {
        uint64_t v193 = (int8x16_t *)(v179 + v180 * (uint64_t)v188);
        do
        {
          int8x16_t v194 = vqtbl1q_s8((int8x16_t)(16843009 * v193->u8[0]), (int8x16_t)xmmword_221A36310);
          v193[-2] = v194;
          v193[-1] = v194;
          int v195 = (int8x16_t *)((char *)v193 + v185);
          int8x16_t v196 = vqtbl1q_s8((int8x16_t)(16843009 * v193->u8[v185 - 1]), (int8x16_t)xmmword_221A36310);
          *int v195 = v196;
          v195[1] = v196;
          uint64_t v193 = (int8x16_t *)((char *)v193 + v180);
          --v192;
        }
        while (v192);
      }
      BOOL v197 = __OFSUB__(v191, v190);
      int v198 = v191 - v190;
      if (!((v198 < 0) ^ v197 | (v198 == 0)))
      {
        int v199 = (int8x16_t *)(v178 + v181 * (uint64_t)v190);
        do
        {
          int8x16_t v200 = vqtbl1q_s8((int8x16_t)(65537 * *(unsigned __int16 *)((char *)&v199->u16[-1] + v186)), (int8x16_t)xmmword_221A36310);
          v199[-1] = vqtbl1q_s8((int8x16_t)(65537 * v199->u16[0]), (int8x16_t)xmmword_221A36310);
          *(int8x16_t *)((char *)v199 + v186) = v200;
          int v199 = (int8x16_t *)((char *)v199 + v181);
          --v198;
        }
        while (v198);
      }
      if ((int)v108 <= 0)
      {
        int v201 = 0;
        uint64_t v202 = v179 - 32;
        uint64_t v203 = -2 * v180;
        do
        {
          if ((int)v185 >= -63)
          {
            uint64_t v204 = 0;
            do
            {
              long long v205 = *(_OWORD *)(v202 + v204);
              *(_OWORD *)(v202 - v180 + v204) = v205;
              *(_OWORD *)(v202 + v203 + v204) = v205;
              BOOL v136 = v204 < (int)v185 + 48;
              v204 += 16;
            }
            while (v136);
          }
          v202 += v203;
          ++v201;
        }
        while (v201 != 10);
        int v206 = 0;
        uint64_t v207 = v178 - 16;
        do
        {
          if ((int)v186 >= -31)
          {
            uint64_t v208 = 0;
            do
            {
              *(_OWORD *)(v207 - v181 + v208) = *(_OWORD *)(v207 + v208);
              BOOL v136 = v208 < (int)v186 + 16;
              v208 += 16;
            }
            while (v136);
          }
          v207 -= v181;
          ++v206;
        }
        while (v206 != 8);
      }
      if (v189 == v182)
      {
        int v209 = 0;
        uint64_t v210 = v180 * (v182 - 1);
        uint64_t v211 = v179 + v210 - 32;
        uint64_t v212 = 2 * v180;
        uint64_t v213 = v210 + v212;
        uint64_t v214 = v210 + v180 + v179 - 32;
        uint64_t v215 = v213 + v179 - 32;
        do
        {
          if ((int)v185 >= -63)
          {
            uint64_t v216 = 0;
            do
            {
              long long v217 = *(_OWORD *)(v211 + v216);
              *(_OWORD *)(v214 + v216) = v217;
              *(_OWORD *)(v215 + v216) = v217;
              BOOL v136 = v216 < v185 + 48;
              v216 += 16;
            }
            while (v136);
          }
          v211 += v212;
          ++v209;
          v214 += v212;
          v215 += v212;
        }
        while (v209 != 10);
        int v218 = 0;
        uint64_t v219 = v178 + v181 * (v187 - 1) - 16;
        do
        {
          if ((int)v186 >= -31)
          {
            uint64_t v220 = 0;
            do
            {
              *(_OWORD *)(v219 + v181 + v220) = *(_OWORD *)(v219 + v220);
              BOOL v136 = v220 < v186 + 16;
              v220 += 16;
            }
            while (v136);
          }
          v219 += v181;
          ++v218;
        }
        while (v218 != 8);
      }
    }
LABEL_228:
    if (a8) {
      *a8 = v233 == 0;
    }
    uint64_t v221 = 0;
    if (a9) {
      *a9 = v227 == 0;
    }
  }
LABEL_233:
  if (*(unsigned char *)(a4 + 1164)) {
LABEL_234:
  }
    sub_221901988(v243, v13);
  return v221;
}

uint64_t sub_2219FF06C(uint64_t *a1, int a2, int a3)
{
  uint64_t v72 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  uint64_t v5 = (char *)a1[4];
  int v6 = *((_DWORD *)a1 + 10);
  unsigned int v64 = *((_DWORD *)a1 + 11);
  int v52 = (_DWORD *)a1[6];
  uint64_t v54 = a1[9];
  uint64_t v55 = *((void *)v5 + 127);
  unsigned int v7 = (uint64_t **)*((void *)v5 + 147);
  unsigned int v8 = (void *)*((void *)v5 + 10);
  uint64_t v9 = *(int *)(*a1 + 4);
  sub_221901754((uint64_t)v7);
  int v10 = 0;
  int v11 = v9 * a2;
  int v68 = a2;
  if (*(_DWORD *)(v4 + 32) == 1) {
    int v12 = v9 * a2;
  }
  else {
    int v12 = (a2 << 31 >> 31) & v9;
  }
  uint64_t v62 = v8[9];
  uint64_t v63 = v9;
  uint64_t v60 = v8[15];
  uint64_t v61 = v8[14];
  uint64_t v58 = v8[17];
  uint64_t v59 = v8[16];
  int8x16_t v70 = v8;
  __int16 v65 = v6;
  int v57 = (int32x2_t *)(v8[6] + 12 * v6);
  int v69 = v11 + a3;
  uint64_t v13 = a3;
  uint64_t v14 = v11;
  uint64_t v15 = v54 + 1168 * (v12 + (uint64_t)a3);
  uint64_t v16 = 4 * (a3 + (uint64_t)v11);
  double v67 = v7;
  uint64_t v56 = v11;
  while (1)
  {
    unsigned int v17 = v14 + v13;
    uint64_t v18 = 4294958327;
    if (v14 + v13 >= *((int *)v70 + 5) || v69 < 0) {
      goto LABEL_36;
    }
    **((_DWORD **)v5 + 144) = v14 + v13;
    *((_DWORD *)v5 + 248) = v14 + v13;
    *((_DWORD *)v5 + 244) = v13;
    *((_DWORD *)v5 + 245) = v68;
    *(_DWORD *)(v15 + 820) = v14 + v13;
    *(_DWORD *)(v15 + 824) = v13;
    *(_DWORD *)(v15 + 828) = v68;
    sub_22190F554(*((unsigned int *)v5 + 356390), *((void **)v5 + 182281), (int *)v5 + 244);
    unsigned int v19 = v5[1004];
    if (v19 > 9 || ((1 << v19) & 0x294) == 0) {
      break;
    }
    *(unsigned char *)(v15 + 832) = 0;
LABEL_10:
    v71[0] = 0uLL;
    uint64_t v20 = sub_221901AF0(v7, (unsigned __int16 *)v5 + 488, (uint64_t)(v5 + 1425504), v15, (uint64_t)v71);
    if (v20)
    {
      uint64_t v18 = v20;
LABEL_36:
      uint64_t v49 = a1;
      if (v10) {
        goto LABEL_38;
      }
LABEL_37:
      v5[36] = 1;
      *((_DWORD *)v5 + 11) = v13 - 1;
      goto LABEL_38;
    }
    if (*((void *)v5 + 178190) - *((void *)v5 + 178188) > *((int *)v5 + 356379)) {
      goto LABEL_36;
    }
    *((_DWORD *)v5 + 2) = 1;
    int v23 = *(char *)(v55 + 54);
    if ((*(unsigned char *)(v55 + 54) - 26) < 0xCCu) {
      goto LABEL_36;
    }
    unsigned int v24 = v23 + *v5 + 52 - 52 * (((20165 * (v23 + *v5 + 52)) >> 20) + ((20165 * (v23 + *v5 + 52)) >> 31));
    char *v5 = v23 + *v5 + 52 - 52 * (((20165 * (v23 + *v5 + 52)) >> 20) + (20165 * (v23 + *v5 + 52) < 0));
    *(unsigned char *)(v15 + 818) = v24;
    int v25 = *(unsigned __int8 *)(*((void *)v5 + 127) + 1);
    *(unsigned char *)(v15 + 833) = v25;
    *(unsigned char *)(v15 + 834) = *(unsigned char *)(*((void *)v5 + 127) + 2);
    *(unsigned char *)(v15 + 835) = *(unsigned char *)(*((void *)v5 + 127) + 3);
    if (v25)
    {
      *((_DWORD *)v5 + 1) = 1;
      if (*(unsigned char *)(v15 + 816))
      {
        int16x8_t v26 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vcgtzq_s8(v71[0]), (int8x16_t)xmmword_221A37AC0), (int8x16_t)xmmword_221A37AD0);
        v27.i64[0] = 0x7000700070007;
        v27.i64[1] = 0x7000700070007;
        int64x2_t v28 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s16(v26, 8uLL), (int8x16_t)vshlq_u16((uint16x8_t)v26, v27));
        int8x16_t v29 = vandq_s8(vcltzq_s8((int8x16_t)v28), (int8x16_t)xmmword_221A37900);
        int8x16_t v30 = vpaddq_s8(v29, v29);
        int8x16_t v31 = vpaddq_s8(v30, v30);
        unsigned __int16 v32 = vpaddq_s8(v31, v31).u16[0];
        int64x2_t v33 = (int64x2_t)vzip1q_s8((int8x16_t)vdupq_laneq_s64(v28, 1), (int8x16_t)v28);
        int16x8_t v22 = (int16x8_t)xmmword_221A368F0;
        int8x16_t v34 = vandq_s8(vcltzq_s8(vqtbl1q_s8(vzip1q_s8((int8x16_t)v33, (int8x16_t)vdupq_laneq_s64(v33, 1)), (int8x16_t)xmmword_221A368F0)), (int8x16_t)xmmword_221A37900);
        int8x16_t v35 = vpaddq_s8(v34, v34);
        int8x16_t v36 = vpaddq_s8(v35, v35);
        int16x8_t v21 = (int16x8_t)vpaddq_s8(v36, v36);
        *(_DWORD *)(v70[4] + (v16 & 0x3FFFFFFFCLL)) = v21.u16[0] | (v32 << 16);
      }
      uint64_t v37 = sub_221916B0C((uint64_t)(v5 + 976), v15, v21, v22);
      if (v37)
      {
        uint64_t v18 = v37;
        unsigned int v7 = v67;
        goto LABEL_36;
      }
    }
    unsigned int v38 = -1;
LABEL_18:
    sub_22190F600((int *)v5 + 244, v64, (int64x2_t)v21);
    if (*(unsigned char *)(v15 + 833) || *(unsigned char *)(v15 + 834) != 25)
    {
      unsigned int v39 = (char)v24;
      unsigned int v42 = v5[13] + (char)v24;
      unsigned int v43 = v5[14] + (char)v24;
      if (v42 >= 0x33) {
        unsigned int v42 = 51;
      }
      if (v43 >= 0x33) {
        unsigned int v43 = 51;
      }
      char v40 = byte_221A39F60[v42];
      char v41 = byte_221A39F60[v43];
    }
    else
    {
      unsigned int v39 = 0;
      char v40 = 0;
      char v41 = 0;
    }
    *(_WORD *)(v62 + 2 * v17) = v65;
    *(unsigned char *)(v61 + v17) = v39;
    *(unsigned char *)(v60 + v17) = v40;
    *(unsigned char *)(v59 + v17) = v41;
    *(unsigned char *)(v58 + v17) = *(unsigned char *)(*((void *)v5 + 127) + 3);
    *int v57 = vadd_s32(*v57, (int32x2_t)vand_s8((int8x8_t)(v39 | 0x100000000), (int8x8_t)vdup_n_s32(v38)));
    ++v13;
    unsigned int v7 = v67;
    BOOL v44 = sub_221901AE4(v67);
    uint64_t v14 = v56;
    if (v13 < v63)
    {
      v15 += 1168;
      v16 += 4;
      int v10 = 1;
      if (!v44) {
        continue;
      }
    }
    uint64_t v18 = 0;
    int v10 = !v44;
    *int v52 = *((_DWORD *)v5 + 248);
    goto LABEL_36;
  }
  BOOL v45 = sub_221901A5C(v7, v13);
  *(unsigned char *)(v15 + 832) = v45;
  if (!v45) {
    goto LABEL_10;
  }
  LOBYTE(v24) = *v5;
  *((_DWORD *)v5 + 1) = 1;
  uint64_t v46 = sub_221A13A20((uint64_t)(v5 + 976));
  if (!v46)
  {
    uint64_t v46 = sub_221916B0C((uint64_t)(v5 + 976), v15, v47, v48);
    if (!v46)
    {
      unsigned int v38 = 0;
      *(_WORD *)(v15 + 816) = 0;
      goto LABEL_18;
    }
  }
  uint64_t v18 = v46;
  uint64_t v49 = a1;
  unsigned int v7 = v67;
  if (!v10) {
    goto LABEL_37;
  }
LABEL_38:
  sub_221901974((uint64_t)v7);
  if (v18)
  {
    v5[36] = 1;
    *((_DWORD *)v5 + 11) = v13 - 1;
    int v50 = *((_DWORD *)v5 + 248);
    if (v50) {
      *int v52 = v50 - 1;
    }
  }
  *((_DWORD *)v49 + 20) = v18;
  return v18;
}

uint64_t sub_2219FF588(uint64_t a1, int a2, int a3)
{
  LODWORD(v3) = a3;
  uint64_t v4 = a1;
  uint64_t v5 = *(char **)(a1 + 32);
  int v118 = *(_DWORD *)(a1 + 40);
  uint64_t v125 = *(unsigned int *)(a1 + 44);
  int v6 = *(_DWORD **)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 72);
  uint64_t v115 = *((void *)v5 + 127);
  uint64_t v8 = *((void *)v5 + 10);
  uint64_t v9 = *(int *)(*(void *)a1 + 4);
  int v10 = *((_DWORD *)v5 + 7);
  int v11 = v10 - v9;
  if (v10 <= (int)v9) {
    int v11 = 0;
  }
  *((_DWORD *)v5 + 7) = v11;
  unsigned int v116 = v5[1425576] == 0;
  uint64_t v119 = v9;
  uint64_t result = 4294958327;
  uint64_t v13 = (v9 * a2 + a3);
  if ((int)v9 * a2 + a3 < 0 || (int)v13 >= *(_DWORD *)(v8 + 20)) {
    goto LABEL_83;
  }
  unsigned int v103 = v6;
  uint64_t v104 = v4;
  BOOL v14 = 0;
  int8x16_t v124 = (int *)(v5 + 976);
  uint64_t v111 = *(void *)(v8 + 72);
  uint64_t v110 = *(void *)(v8 + 112);
  uint64_t v109 = *(void *)(v8 + 120);
  uint64_t v108 = *(void *)(v8 + 128);
  uint64_t v107 = *(void *)(v8 + 136);
  int v15 = (a2 << 31 >> 31) & v9;
  uint64_t v117 = v8;
  if (v10 >= (int)v9) {
    int v10 = v9;
  }
  int v121 = v10;
  uint64_t v114 = &v5[8 * !(a2 & 1) + 1458264];
  int v113 = &v5[8 * (a2 & 1) + 1458264];
  int32x4_t v106 = (int32x2_t *)(*(void *)(v8 + 48) + 12 * v118);
  if ((int)v9 <= a3 + 1) {
    int v16 = a3 + 1;
  }
  else {
    int v16 = v9;
  }
  int v102 = v16;
  uint64_t v3 = a3;
  uint64_t v105 = (int)v9 * a2;
  uint64_t v112 = v15;
  uint64_t v17 = 1168 * v15 + 1168 * a3 + v7 + 848;
  while (1)
  {
    uint64_t v18 = v3 + v112;
    uint64_t v19 = v7 + 1168 * (v3 + v112);
    **((_DWORD **)v5 + 144) = v13;
    *((_DWORD *)v5 + 248) = v13;
    *((_DWORD *)v5 + 244) = v3;
    *((_DWORD *)v5 + 245) = a2;
    *(_DWORD *)(v19 + 820) = v13;
    *(_DWORD *)(v19 + 824) = v3;
    *(_DWORD *)(v19 + 828) = a2;
    uint64_t v20 = *(void *)v114;
    *((void *)v5 + 182282) = *(void *)v114;
    *((void *)v5 + 182281) = *(void *)v113;
    *((void *)v5 + 144) = v20 + 400 * v3;
    *(void *)(*((void *)v5 + 182282) + 400 * v3 + 112) = sub_221A15AE4(*(void *)(*(void *)(*((void *)v5 + 149)
                                                                                                 + 1152)
                                                                                     + 8 * v125));
    sub_221A12FA8(*((_DWORD *)v5 + 356390), *((void *)v5 + 182281), *((void *)v5 + 182282), v124);
    unsigned int v21 = v5[1004];
    if (v21 <= 9 && ((1 << v21) & 0x294) != 0) {
      goto LABEL_13;
    }
    int v48 = v121;
    if (v121) {
      goto LABEL_39;
    }
    if (*((_DWORD *)v5 + 8) != 1)
    {
      uint64_t v66 = *((void *)v5 + 178190);
      __int16 v65 = (unsigned int *)*((void *)v5 + 178191);
      int v67 = *((_DWORD *)v5 + 356384);
      uint64_t v68 = v5[1425540];
      unsigned int v69 = __clz(v67 | 1);
      if (!v67) {
        ++v69;
      }
      if (v69 <= 0xC)
      {
        unsigned int v70 = (v67 << (v69 + 1)) >> -(char)v69;
        if (!v69) {
          unsigned int v70 = 0;
        }
        unsigned int v71 = v70 + ~(-1 << v69);
        unint64_t v72 = v68 + 2 * v69 + 1;
        char v73 = v72 & 7;
        int16x8_t v74 = (unsigned int *)(v66 + (v72 >> 3));
        unsigned int v75 = bswap32(*v74) << (v72 & 7);
        if (v74 <= v65) {
          __int16 v65 = v74;
        }
LABEL_72:
        *((void *)v5 + 178190) = v65;
        *((_DWORD *)v5 + 356384) = v75;
        v5[1425540] = v73;
        if ((signed int)(v71 + v13) > *(_DWORD *)(v117 + 20)) {
          goto LABEL_77;
        }
        unsigned int v123 = v71;
        BOOL v98 = sub_2219F3948((uint64_t)(v5 + 1425504));
        int v99 = v123;
        *((_DWORD *)v5 + 8) = v98;
        if ((int)(v123 + v3) > (int)v119)
        {
          *((_DWORD *)v5 + 7) = v123 + v3 - v119;
          int v99 = v119 - v3;
        }
        int v48 = v99;
        if (v99)
        {
LABEL_39:
          int v122 = v48;
          *(unsigned char *)(v7 + 1168 * v18 + 832) = 1;
          LOBYTE(v25) = *v5;
          *((_DWORD *)v5 + 1) = 1;
          uint64_t result = sub_221A141F4((uint64_t)v124);
          if (result) {
            goto LABEL_78;
          }
          uint64_t result = sub_221914ED8((uint64_t)v124, v49, v50);
          if (result) {
            goto LABEL_78;
          }
          unsigned int v41 = 0;
          uint64_t v51 = v7 + 1168 * v18;
          int v52 = (_OWORD *)*((void *)v5 + 128);
          long long v53 = v52[1];
          long long v54 = v52[2];
          long long v55 = v52[4];
          *(_OWORD *)(v51 + 880) = v52[3];
          *(_OWORD *)(v51 + 896) = v55;
          *(_OWORD *)(v51 + 848) = v53;
          *(_OWORD *)(v51 + 864) = v54;
          long long v56 = v52[5];
          long long v57 = v52[6];
          long long v58 = v52[8];
          *(_OWORD *)(v51 + 944) = v52[7];
          *(_OWORD *)(v51 + 960) = v58;
          *(_OWORD *)(v51 + 912) = v56;
          *(_OWORD *)(v51 + 928) = v57;
          long long v59 = v52[9];
          long long v60 = v52[10];
          long long v61 = v52[12];
          *(_OWORD *)(v51 + 1008) = v52[11];
          *(_OWORD *)(v51 + 1024) = v61;
          *(_OWORD *)(v51 + 976) = v59;
          *(_OWORD *)(v51 + 992) = v60;
          long long v62 = v52[13];
          long long v63 = v52[14];
          long long v64 = v52[15];
          *(_OWORD *)(v51 + 1088) = v52[16];
          *(_OWORD *)(v51 + 1072) = v64;
          *(_OWORD *)(v51 + 1056) = v63;
          *(_OWORD *)(v51 + 1040) = v62;
          *(unsigned char *)(v51 + 1104) = *(unsigned char *)(*((void *)v5 + 128) + 272);
          int v121 = v122 - 1;
          *(_WORD *)(v51 + 816) = 0;
          goto LABEL_24;
        }
        goto LABEL_76;
      }
      unint64_t v76 = v68 + 1;
      int v77 = (v68 + 1) & 7;
      double v78 = (unsigned int *)(v66 + (v76 >> 3));
      unsigned int v79 = bswap32(*v78) << v77;
      if (v78 <= v65) {
        double v80 = v78;
      }
      else {
        double v80 = (unsigned int *)*((void *)v5 + 178191);
      }
      if (v67 < 0)
      {
        unsigned int v84 = 0;
      }
      else
      {
        unsigned int v81 = 0;
        do
        {
          unsigned int v82 = v79;
          char v83 = v77;
          unsigned int v84 = v81 + 1;
          unint64_t v85 = (v77 + 1);
          int v77 = ((_BYTE)v77 + 1) & 7;
          double v80 = (unsigned int *)((char *)v80 + (v85 >> 3));
          unsigned int v79 = bswap32(*v80) << (v85 & 7);
          if (v80 > v65) {
            double v80 = (unsigned int *)*((void *)v5 + 178191);
          }
          if ((v82 & 0x80000000) != 0) {
            break;
          }
        }
        while (v81++ < 0x1F);
        if (v84 - 1 > 0x17)
        {
          unsigned int v87 = v79 >> (48 - v84);
          unsigned int v88 = ((v83 + 1) & 7) + v84;
          unint64_t v89 = v88 - 16;
          char v73 = v88 & 7;
          int8x16_t v90 = (unsigned int *)((char *)v80 + (v89 >> 3));
          unsigned int v91 = bswap32(*v90) << v73;
          if (v90 <= v65) {
            int16x8_t v92 = v90;
          }
          else {
            int16x8_t v92 = (unsigned int *)*((void *)v5 + 178191);
          }
          unsigned int v94 = *(unsigned int *)((char *)v92 + 2);
          int16x8_t v93 = (unsigned int *)((char *)v92 + 2);
          unsigned int v75 = bswap32(v94) << v73;
          if (v93 <= v65) {
            __int16 v65 = v93;
          }
          int v95 = __PAIR64__(v87, v91) >> 16;
LABEL_71:
          unsigned int v71 = v95 + ~(-1 << v84);
          goto LABEL_72;
        }
      }
      int v95 = v79 >> -(char)v84;
      unint64_t v96 = v84 + v77;
      char v73 = (v84 + v77) & 7;
      unsigned int v97 = (unsigned int *)((char *)v80 + (v96 >> 3));
      unsigned int v75 = bswap32(*v97) << v73;
      if (v97 <= v65) {
        __int16 v65 = v97;
      }
      goto LABEL_71;
    }
LABEL_76:
    int v121 = 0;
LABEL_13:
    *(unsigned char *)(v7 + 1168 * v18 + 832) = 0;
    *((_DWORD *)v5 + 8) = 0;
    *((_DWORD *)v5 + 2) = 1;
    uint64_t result = sub_221A1C2F0((uint64_t)(v5 + 1425504), v116, 3, 0, (uint64_t)v124, (unsigned char *)v19);
    if (result) {
      goto LABEL_78;
    }
    if (*((void *)v5 + 178190) - *((void *)v5 + 178188) > *((int *)v5 + 356379)
      || (int v24 = *(char *)(v115 + 54), (*(unsigned char *)(v115 + 54) - 26) < 0xCCu))
    {
LABEL_77:
      uint64_t result = 4294958327;
LABEL_78:
      int v6 = v103;
      uint64_t v4 = v104;
      if (v14) {
        goto LABEL_85;
      }
      goto LABEL_83;
    }
    unsigned int v25 = v24 + *v5 + 52 - 52 * (((20165 * (v24 + *v5 + 52)) >> 20) + ((20165 * (v24 + *v5 + 52)) >> 31));
    char *v5 = v24 + *v5 + 52 - 52 * (((20165 * (v24 + *v5 + 52)) >> 20) + (20165 * (v24 + *v5 + 52) < 0));
    int v26 = *(unsigned __int8 *)(*((void *)v5 + 127) + 1);
    uint16x8_t v27 = (unsigned char *)(v7 + 1168 * v18);
    v27[833] = v26;
    v27[834] = *(unsigned char *)(*((void *)v5 + 127) + 2);
    v27[835] = *(unsigned char *)(*((void *)v5 + 127) + 3);
    if (v26)
    {
      *((_DWORD *)v5 + 1) = 1;
      uint64_t result = sub_221914ED8((uint64_t)v124, v22, v23);
      if (result) {
        goto LABEL_78;
      }
      uint64_t v28 = *(unsigned __int8 *)(*((void *)v5 + 128) + 272);
      *(unsigned char *)(v7 + 1168 * v18 + 1104) = v28;
      if (v28)
      {
        uint64_t v29 = 0;
        uint64_t v30 = 16 * v28;
        do
        {
          *(_OWORD *)(v17 + v29) = *(_OWORD *)(*((void *)v5 + 128) + v29 + 16);
          v29 += 16;
        }
        while (v30 != v29);
      }
      if (*(unsigned char *)(v7 + 1168 * v18 + 816))
      {
        int16x8_t v31 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vcgtzq_s8(*(int8x16_t *)(*((void *)v5 + 144) + 80)), (int8x16_t)xmmword_221A37AC0), (int8x16_t)xmmword_221A37AD0);
        v32.i64[0] = 0x7000700070007;
        v32.i64[1] = 0x7000700070007;
        int64x2_t v33 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s16(v31, 8uLL), (int8x16_t)vshlq_u16((uint16x8_t)v31, v32));
        int8x16_t v34 = vandq_s8(vcltzq_s8((int8x16_t)v33), (int8x16_t)xmmword_221A37900);
        int8x16_t v35 = vpaddq_s8(v34, v34);
        int8x16_t v36 = vpaddq_s8(v35, v35);
        int64x2_t v37 = (int64x2_t)vzip1q_s8((int8x16_t)vdupq_laneq_s64(v33, 1), (int8x16_t)v33);
        int8x16_t v38 = vandq_s8(vcltzq_s8(vqtbl1q_s8(vzip1q_s8((int8x16_t)v37, (int8x16_t)vdupq_laneq_s64(v37, 1)), (int8x16_t)xmmword_221A368F0)), (int8x16_t)xmmword_221A37900);
        int8x16_t v39 = vpaddq_s8(v38, v38);
        int8x16_t v40 = vpaddq_s8(v39, v39);
        *(_DWORD *)(*(void *)(v117 + 32) + 4 * v13) = vpaddq_s8(v40, v40).u16[0] | (vpaddq_s8(v36, v36).u16[0] << 16);
      }
    }
    *(unsigned char *)(v7 + 1168 * v18 + 818) = v25;
    unsigned int v41 = -1;
LABEL_24:
    if (*(_DWORD *)(*((void *)v5 + 149) + 1164) <= *((_DWORD *)v5 + 248)) {
      goto LABEL_77;
    }
    sub_221A13094((uint64_t)v124, v125);
    if (*(unsigned char *)(v7 + 1168 * v18 + 833) || *(unsigned char *)(v7 + 1168 * v18 + 834) != 25)
    {
      unsigned int v42 = (char)v25;
      unsigned int v45 = v5[13] + (char)v25;
      unsigned int v46 = v5[14] + (char)v25;
      if (v45 >= 0x33) {
        unsigned int v45 = 51;
      }
      if (v46 >= 0x33) {
        unsigned int v46 = 51;
      }
      char v43 = byte_221A39F60[v45];
      char v44 = byte_221A39F60[v46];
    }
    else
    {
      unsigned int v42 = 0;
      char v43 = 0;
      char v44 = 0;
    }
    *(_WORD *)(v111 + 2 * v13) = v118;
    *(unsigned char *)(v110 + v13) = v42;
    *(unsigned char *)(v109 + v13) = v43;
    *(unsigned char *)(v108 + v13) = v44;
    *(unsigned char *)(v107 + v13) = *(unsigned char *)(*((void *)v5 + 127) + 3);
    *int32x4_t v106 = vadd_s32(*v106, (int32x2_t)vand_s8((int8x8_t)(v42 | 0x100000000), (int8x8_t)vdup_n_s32(v41)));
    ++v3;
    BOOL v47 = sub_2219F3948((uint64_t)(v5 + 1425504));
    BOOL v14 = v47;
    if (v3 >= v119)
    {
      int v6 = v103;
      uint64_t v4 = v104;
      int v100 = v102;
      goto LABEL_82;
    }
    if (!(v47 | v121)) {
      break;
    }
    if (v3 + v105 >= 0)
    {
      ++v13;
      v17 += 1168;
      if (v3 + v105 < *(int *)(v117 + 20)) {
        continue;
      }
    }
    goto LABEL_77;
  }
  BOOL v14 = 0;
  int v100 = v3;
  int v6 = v103;
  uint64_t v4 = v104;
LABEL_82:
  uint64_t result = 0;
  _DWORD *v6 = *((_DWORD *)v5 + 248);
  LODWORD(v3) = v100;
  if (v14) {
    goto LABEL_85;
  }
LABEL_83:
  if (!*((_DWORD *)v5 + 7))
  {
    v5[36] = 1;
    *((_DWORD *)v5 + 11) = v3 - 1;
  }
LABEL_85:
  if (result)
  {
    v5[36] = 1;
    *((_DWORD *)v5 + 11) = v3 - 1;
    int v101 = *((_DWORD *)v5 + 248);
    if (v101) {
      _DWORD *v6 = v101 - 1;
    }
  }
  *(_DWORD *)(v4 + 80) = result;
  return result;
}

uint64_t sub_2219FFDDC(uint64_t *a1, int a2, int a3)
{
  uint64_t v72 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  uint64_t v5 = (char *)a1[4];
  int v6 = *((_DWORD *)a1 + 10);
  unsigned int v64 = *((_DWORD *)a1 + 11);
  int v52 = (_DWORD *)a1[6];
  uint64_t v54 = a1[9];
  uint64_t v55 = *((void *)v5 + 127);
  uint64_t v7 = (uint64_t **)*((void *)v5 + 147);
  uint64_t v8 = (void *)*((void *)v5 + 10);
  uint64_t v9 = *(int *)(*a1 + 4);
  sub_221901754((uint64_t)v7);
  int v10 = 0;
  int v11 = v9 * a2;
  int v68 = a2;
  if (*(_DWORD *)(v4 + 32) == 1) {
    int v12 = v9 * a2;
  }
  else {
    int v12 = (a2 << 31 >> 31) & v9;
  }
  uint64_t v62 = v8[9];
  uint64_t v63 = v9;
  uint64_t v60 = v8[15];
  uint64_t v61 = v8[14];
  uint64_t v58 = v8[17];
  uint64_t v59 = v8[16];
  unsigned int v70 = v8;
  __int16 v65 = v6;
  long long v57 = (int32x2_t *)(v8[6] + 12 * v6);
  int v69 = v11 + a3;
  uint64_t v13 = a3;
  uint64_t v14 = v11;
  uint64_t v15 = v54 + 1168 * (v12 + (uint64_t)a3);
  uint64_t v16 = 4 * (a3 + (uint64_t)v11);
  int v67 = v7;
  uint64_t v56 = v11;
  while (1)
  {
    unsigned int v17 = v14 + v13;
    uint64_t v18 = 4294958327;
    if (v14 + v13 >= *((int *)v70 + 5) || v69 < 0) {
      goto LABEL_36;
    }
    **((_DWORD **)v5 + 144) = v14 + v13;
    *((_DWORD *)v5 + 248) = v14 + v13;
    *((_DWORD *)v5 + 244) = v13;
    *((_DWORD *)v5 + 245) = v68;
    *(_DWORD *)(v15 + 820) = v14 + v13;
    *(_DWORD *)(v15 + 824) = v13;
    *(_DWORD *)(v15 + 828) = v68;
    sub_22190F554(*((unsigned int *)v5 + 356390), *((void **)v5 + 182281), (int *)v5 + 244);
    unsigned int v19 = v5[1004];
    if (v19 > 9 || ((1 << v19) & 0x294) == 0) {
      break;
    }
    *(unsigned char *)(v15 + 832) = 0;
LABEL_10:
    v71[0] = 0uLL;
    uint64_t v20 = sub_221901CC8(v7, (unsigned __int16 *)v5 + 488, (uint64_t)(v5 + 1425504), v15, (uint64_t)v71);
    if (v20)
    {
      uint64_t v18 = v20;
LABEL_36:
      int16x8_t v49 = a1;
      if (v10) {
        goto LABEL_38;
      }
LABEL_37:
      v5[36] = 1;
      *((_DWORD *)v5 + 11) = v13 - 1;
      goto LABEL_38;
    }
    if (*((void *)v5 + 178190) - *((void *)v5 + 178188) > *((int *)v5 + 356379)) {
      goto LABEL_36;
    }
    *((_DWORD *)v5 + 2) = 1;
    int v23 = *(char *)(v55 + 54);
    if ((*(unsigned char *)(v55 + 54) - 26) < 0xCCu) {
      goto LABEL_36;
    }
    unsigned int v24 = v23 + *v5 + 52 - 52 * (((20165 * (v23 + *v5 + 52)) >> 20) + ((20165 * (v23 + *v5 + 52)) >> 31));
    char *v5 = v23 + *v5 + 52 - 52 * (((20165 * (v23 + *v5 + 52)) >> 20) + (20165 * (v23 + *v5 + 52) < 0));
    *(unsigned char *)(v15 + 818) = v24;
    int v25 = *(unsigned __int8 *)(*((void *)v5 + 127) + 1);
    *(unsigned char *)(v15 + 833) = v25;
    *(unsigned char *)(v15 + 834) = *(unsigned char *)(*((void *)v5 + 127) + 2);
    *(unsigned char *)(v15 + 835) = *(unsigned char *)(*((void *)v5 + 127) + 3);
    if (v25)
    {
      *((_DWORD *)v5 + 1) = 1;
      if (*(unsigned char *)(v15 + 816))
      {
        int16x8_t v26 = (int16x8_t)vqtbl1q_s8(vqtbl1q_s8(vcgtzq_s8(v71[0]), (int8x16_t)xmmword_221A37AC0), (int8x16_t)xmmword_221A37AD0);
        v27.i64[0] = 0x7000700070007;
        v27.i64[1] = 0x7000700070007;
        int64x2_t v28 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s16(v26, 8uLL), (int8x16_t)vshlq_u16((uint16x8_t)v26, v27));
        int8x16_t v29 = vandq_s8(vcltzq_s8((int8x16_t)v28), (int8x16_t)xmmword_221A37900);
        int8x16_t v30 = vpaddq_s8(v29, v29);
        int8x16_t v31 = vpaddq_s8(v30, v30);
        unsigned __int16 v32 = vpaddq_s8(v31, v31).u16[0];
        int64x2_t v33 = (int64x2_t)vzip1q_s8((int8x16_t)vdupq_laneq_s64(v28, 1), (int8x16_t)v28);
        int16x8_t v22 = (int16x8_t)xmmword_221A368F0;
        int8x16_t v34 = vandq_s8(vcltzq_s8(vqtbl1q_s8(vzip1q_s8((int8x16_t)v33, (int8x16_t)vdupq_laneq_s64(v33, 1)), (int8x16_t)xmmword_221A368F0)), (int8x16_t)xmmword_221A37900);
        int8x16_t v35 = vpaddq_s8(v34, v34);
        int8x16_t v36 = vpaddq_s8(v35, v35);
        int16x8_t v21 = (int16x8_t)vpaddq_s8(v36, v36);
        *(_DWORD *)(v70[4] + (v16 & 0x3FFFFFFFCLL)) = v21.u16[0] | (v32 << 16);
      }
      uint64_t v37 = sub_221916B0C((uint64_t)(v5 + 976), v15, v21, v22);
      if (v37)
      {
        uint64_t v18 = v37;
        uint64_t v7 = v67;
        goto LABEL_36;
      }
    }
    unsigned int v38 = -1;
LABEL_18:
    sub_22190F600((int *)v5 + 244, v64, (int64x2_t)v21);
    if (*(unsigned char *)(v15 + 833) || *(unsigned char *)(v15 + 834) != 25)
    {
      unsigned int v39 = (char)v24;
      unsigned int v42 = v5[13] + (char)v24;
      unsigned int v43 = v5[14] + (char)v24;
      if (v42 >= 0x33) {
        unsigned int v42 = 51;
      }
      if (v43 >= 0x33) {
        unsigned int v43 = 51;
      }
      char v40 = byte_221A39F60[v42];
      char v41 = byte_221A39F60[v43];
    }
    else
    {
      unsigned int v39 = 0;
      char v40 = 0;
      char v41 = 0;
    }
    *(_WORD *)(v62 + 2 * v17) = v65;
    *(unsigned char *)(v61 + v17) = v39;
    *(unsigned char *)(v60 + v17) = v40;
    *(unsigned char *)(v59 + v17) = v41;
    *(unsigned char *)(v58 + v17) = *(unsigned char *)(*((void *)v5 + 127) + 3);
    *long long v57 = vadd_s32(*v57, (int32x2_t)vand_s8((int8x8_t)(v39 | 0x100000000), (int8x8_t)vdup_n_s32(v38)));
    ++v13;
    uint64_t v7 = v67;
    BOOL v44 = sub_221901AE4(v67);
    uint64_t v14 = v56;
    if (v13 < v63)
    {
      v15 += 1168;
      v16 += 4;
      int v10 = 1;
      if (!v44) {
        continue;
      }
    }
    uint64_t v18 = 0;
    int v10 = !v44;
    *int v52 = *((_DWORD *)v5 + 248);
    goto LABEL_36;
  }
  BOOL v45 = sub_221901A5C(v7, v13);
  *(unsigned char *)(v15 + 832) = v45;
  if (!v45) {
    goto LABEL_10;
  }
  LOBYTE(v24) = *v5;
  *((_DWORD *)v5 + 1) = 1;
  uint64_t v46 = sub_221A13A20((uint64_t)(v5 + 976));
  if (!v46)
  {
    uint64_t v46 = sub_221916B0C((uint64_t)(v5 + 976), v15, v47, v48);
    if (!v46)
    {
      unsigned int v38 = 0;
      *(_WORD *)(v15 + 816) = 0;
      goto LABEL_18;
    }
  }
  uint64_t v18 = v46;
  int16x8_t v49 = a1;
  uint64_t v7 = v67;
  if (!v10) {
    goto LABEL_37;
  }
LABEL_38:
  if (v18)
  {
    v5[36] = 1;
    *((_DWORD *)v5 + 11) = v13 - 1;
    int v50 = *((_DWORD *)v5 + 248);
    if (v50) {
      *int v52 = v50 - 1;
    }
  }
  sub_221901974((uint64_t)v7);
  *((_DWORD *)v49 + 20) = v18;
  return v18;
}

uint64_t sub_221A002F4(uint64_t a1, int a2, int a3, int a4, uint64_t a5, double a6, double a7, int8x16_t a8, double a9, double a10, int8x16_t a11, __n128 a12, __n128 a13)
{
  uint64_t v13 = a1;
  int v14 = a4 - a3;
  if (a4 <= a3)
  {
    uint64_t result = 0;
    goto LABEL_62;
  }
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v17 = *(int *)(a1 + 32);
  uint64_t v18 = *(void *)(v16 + 72);
  uint64_t v102 = v15 - 48;
  uint64_t v19 = *(int *)(v16 + 56);
  if (*(_DWORD *)(*(void *)a1 + 32) == 1) {
    int v20 = v17 * a2;
  }
  else {
    int v20 = (a2 << 31 >> 31) & v17;
  }
  int v111 = 16 * a2;
  int v112 = 32 * a2;
  int v110 = 8 * a2;
  uint64_t v100 = *(int *)(v18 + 136);
  uint64_t v101 = *(int *)(v18 + 152);
  uint64_t v21 = 2 * v100;
  uint64_t v99 = 2 * v101;
  uint64_t v22 = v15 + 48 * (int)v17;
  uint64_t v114 = (_OWORD *)(v16 + 936);
  int v23 = (_OWORD *)(v16 + 880);
  uint64_t v98 = a5 + 1423424;
  uint64_t v95 = a5 + 1422656;
  uint64_t v97 = a5 + 1424192;
  uint64_t v104 = (_OWORD *)(v22 + 16);
  int32x4_t v106 = (_OWORD *)v22;
  unsigned int v103 = (unsigned char *)(v22 + 32);
  uint64_t v105 = v19 - 1;
  unsigned int v24 = (int8x16_t *)(*(void *)(a1 + 8) + 1168 * (v20 + (uint64_t)a3));
  int v25 = 16 * a3;
  int v113 = *(_DWORD *)(a1 + 32);
  uint64_t v108 = *(void *)(a1 + 24);
  uint64_t v109 = -v17;
  uint64_t v26 = a3 + (uint64_t)((int)v17 * a2);
  uint64_t v107 = *(int *)(v16 + 56);
  do
  {
    int v28 = v111;
    int v27 = v112;
    if (!*(unsigned char *)v18)
    {
      int v27 = v111;
      int v28 = v110;
    }
    uint64_t v29 = *(void *)(v18 + 32) + v25 + (v27 * *(_DWORD *)(v18 + 136));
    if ((v29 & 0x3F) == 0)
    {
      uint64_t v30 = v100;
      if (!*(unsigned char *)(v16 + 21)) {
        uint64_t v30 = 0;
      }
      _X12 = v29 + v30;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
    }
    uint64_t v67 = *(void *)(v18 + 40) + v25 + (v28 * *(_DWORD *)(v18 + 152));
    if ((v67 & 0x3F) == 0)
    {
      uint64_t v68 = v101;
      if (!*(unsigned char *)(v16 + 21)) {
        uint64_t v68 = 0;
      }
      _X8 = v67 + v68;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v99;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v99;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v99;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v99;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v99;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v99;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v99;
      __asm { PRFM            #0, [X8] }
    }
    unsigned __int32 v85 = v24[51].u32[2];
    uint64_t v86 = v109 + v26;
    if (v85 + 1 == v113) {
      signed __int32 v87 = 0;
    }
    else {
      signed __int32 v87 = v85 + 1;
    }
    *uint64_t v114 = 0u;
    *(_OWORD *)(v16 + 952) = 0u;
    if (v85)
    {
      if (v26 > v19)
      {
        *(void *)uint64_t v114 = v102 + 48 * (int)v85;
        if (v86 > v19) {
          *(void *)(v16 + 960) = v106;
        }
      }
    }
    unsigned int v88 = (_OWORD *)(v15 + 48 * v85);
    if (v86 >= v19) {
      *(void *)(v16 + 944) = v88;
    }
    if (v87 && v86 >= v105) {
      *(void *)(v16 + 952) = v15 + 48 * v87;
    }
    *(void *)(v16 + 968) = v23;
    *(void *)&long long v89 = 0x2222222222222222;
    *((void *)&v89 + 1) = 0x2222222222222222;
    *int v23 = v89;
    *(_OWORD *)(v16 + 896) = v89;
    if (v24[52].i8[0]) {
      goto LABEL_29;
    }
    int v92 = v24[51].u8[0];
    if (v24[52].i8[1])
    {
      if (v24[51].i8[0])
      {
        if (v24[52].i8[3]) {
          sub_2219ED988(v24, 2.90435521e-144, a7, a8, a9, a10, a11, (uint64_t)v24, v16, v98);
        }
        else {
          sub_2219ED140(v24, (uint64_t)v24, v16);
        }
      }
      if (v24[51].i8[1])
      {
        uint64_t result = sub_2219EF418((int16x8_t *)v24, (uint64_t)v24, v16);
        if (result) {
          goto LABEL_61;
        }
      }
LABEL_29:
      sub_221933E90((uint64_t)v24, v16, *(double *)&v89, a7, *(double *)a8.i64, a9, a10, (__n128)a11, a12, a13);
      goto LABEL_30;
    }
    *(unsigned char *)(v16 + 912) = 0;
    int v93 = v24[52].u8[2];
    if (v93 == 25)
    {
      sub_221A1361C((uint64_t)v24, v16);
      goto LABEL_30;
    }
    if (v24[52].u8[1] | v93)
    {
LABEL_41:
      sub_2219EE974(v24, (uint64_t)v24, v16, v97);
      sub_2219D4AD4((uint64_t)v24, v16);
      goto LABEL_42;
    }
    if (v24[52].i8[3] == 1)
    {
      *(unsigned char *)(v16 + 912) = 1;
      if (v92) {
        sub_2219ED988(v24, 2.90435521e-144, a7, a8, a9, a10, a11, (uint64_t)v24, v16, v95);
      }
      sub_2219D1A9C((uint64_t)v24, v16, *(double *)&v89, a7, *(double *)a8.i64, a9, a10, (int16x8_t)a11, (int16x8_t)a12);
    }
    else
    {
      if (v24[52].i8[3]) {
        goto LABEL_41;
      }
      if (v92) {
        sub_2219ED140(v24, (uint64_t)v24, v16);
      }
      sub_2219CF33C((uint64_t)v24, v16);
    }
LABEL_42:
    if (v24[51].i8[1])
    {
      uint64_t result = sub_2219EF418((int16x8_t *)v24, (uint64_t)v24, v16);
      if (result) {
        goto LABEL_61;
      }
    }
    else
    {
      *(_OWORD *)(v16 + 848) = 0u;
      *(_OWORD *)(v16 + 864) = 0u;
      *(_OWORD *)(v16 + 816) = 0u;
      *(_OWORD *)(v16 + 832) = 0u;
      *(_OWORD *)(v16 + 784) = 0u;
      *(_OWORD *)(v16 + 800) = 0u;
      *(_OWORD *)(v16 + 752) = 0u;
      *(_OWORD *)(v16 + 768) = 0u;
      *(_OWORD *)(v16 + 720) = 0u;
      *(_OWORD *)(v16 + 736) = 0u;
      *(_OWORD *)(v16 + 688) = 0u;
      *(_OWORD *)(v16 + 704) = 0u;
      *(_OWORD *)(v16 + 656) = 0u;
      *(_OWORD *)(v16 + 672) = 0u;
      *(_OWORD *)(v16 + 624) = 0u;
      *(_OWORD *)(v16 + 640) = 0u;
    }
    uint64_t result = sub_2219D4CD8((uint64_t)v24, (int16x8_t *)v16);
    if (result) {
      goto LABEL_61;
    }
LABEL_30:
    uint64_t v15 = v108;
    if (*(void *)(v16 + 944))
    {
      *int32x4_t v106 = *v88;
      uint64_t v90 = v108 + 48 * v85;
      *uint64_t v104 = *(_OWORD *)(v90 + 16);
      *unsigned int v103 = *(unsigned char *)(v90 + 32);
    }
    *unsigned int v88 = *(_OWORD *)(v16 + 880);
    uint64_t v91 = v108 + 48 * v85;
    *(_OWORD *)(v91 + 16) = *(_OWORD *)(v16 + 896);
    *(unsigned char *)(v91 + 32) = *(unsigned char *)(v16 + 912);
    v24 += 73;
    v25 += 16;
    ++v26;
    --v14;
    uint64_t v19 = v107;
  }
  while (v14);
  uint64_t result = 0;
LABEL_61:
  uint64_t v13 = a1;
LABEL_62:
  *(_DWORD *)(v13 + 40) = result;
  return result;
}

uint64_t sub_221A007E4(uint64_t a1, int a2, int a3, int a4, uint64_t a5, double a6, double a7, int8x16_t a8, double a9, double a10, int8x16_t a11, __n128 a12, __n128 a13)
{
  uint64_t v13 = a1;
  int v14 = a4 - a3;
  if (a4 <= a3)
  {
    uint64_t result = 0;
    goto LABEL_59;
  }
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(int *)(a1 + 32);
  uint64_t v18 = *(void *)(v15 + 72);
  uint64_t v19 = *(int *)(v15 + 56);
  int v109 = 32 * a2;
  int v108 = 16 * a2;
  int v107 = 8 * a2;
  uint64_t v98 = *(int *)(v18 + 136);
  uint64_t v99 = *(int *)(v18 + 152);
  uint64_t v20 = 2 * v98;
  uint64_t v97 = 2 * v99;
  uint64_t v21 = v16 + 48 * (int)v17;
  int v111 = (_OWORD *)(v15 + 936);
  int32x4_t v106 = (_OWORD *)(v15 + 880);
  uint64_t v96 = a5 + 1423424;
  uint64_t v93 = a5 + 1422656;
  uint64_t v95 = a5 + 1424192;
  uint64_t v101 = (_OWORD *)(v21 + 16);
  unsigned int v103 = (_OWORD *)v21;
  uint64_t v100 = (unsigned char *)(v21 + 32);
  uint64_t v102 = v19 - 1;
  uint64_t v22 = (int8x16_t *)(*(void *)(a1 + 8) + 1168 * ((int)((a2 << 31 >> 31) & v17) + (uint64_t)a3));
  int v23 = 16 * a3;
  int v110 = *(_DWORD *)(a1 + 32);
  uint64_t v104 = v19;
  uint64_t v105 = -v17;
  uint64_t v24 = a3 + (uint64_t)((int)v17 * a2);
  do
  {
    int v26 = v108;
    int v25 = v109;
    if (!*(unsigned char *)v18)
    {
      int v25 = v108;
      int v26 = v107;
    }
    uint64_t v27 = *(void *)(v18 + 32) + v23 + (v25 * *(_DWORD *)(v18 + 136));
    if ((v27 & 0x3F) == 0)
    {
      uint64_t v28 = v98;
      if (!*(unsigned char *)(v15 + 21)) {
        uint64_t v28 = 0;
      }
      _X12 = v27 + v28;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
    }
    uint64_t v65 = *(void *)(v18 + 40) + v23 + (v26 * *(_DWORD *)(v18 + 152));
    if ((v65 & 0x3F) == 0)
    {
      uint64_t v66 = v99;
      if (!*(unsigned char *)(v15 + 21)) {
        uint64_t v66 = 0;
      }
      _X8 = v65 + v66;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v97;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v97;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v97;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v97;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v97;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v97;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v97;
      __asm { PRFM            #0, [X8] }
    }
    unsigned __int32 v83 = v22[51].u32[2];
    uint64_t v84 = v105 + v24;
    if (v83 + 1 == v110) {
      signed __int32 v85 = 0;
    }
    else {
      signed __int32 v85 = v83 + 1;
    }
    *int v111 = 0u;
    *(_OWORD *)(v15 + 952) = 0u;
    if (v83)
    {
      if (v24 > v19)
      {
        *(void *)int v111 = v16 - 48 + 48 * (int)v83;
        if (v84 > v19) {
          *(void *)(v15 + 960) = v103;
        }
      }
    }
    uint64_t v86 = (_OWORD *)(v16 + 48 * v83);
    if (v84 >= v19) {
      *(void *)(v15 + 944) = v86;
    }
    if (v85 && v84 >= v102) {
      *(void *)(v15 + 952) = v16 + 48 * v85;
    }
    *(void *)(v15 + 968) = v106;
    *(void *)&long long v87 = 0x2222222222222222;
    *((void *)&v87 + 1) = 0x2222222222222222;
    *int32x4_t v106 = v87;
    *(_OWORD *)(v15 + 896) = v87;
    if (v22[52].i8[0]) {
      goto LABEL_26;
    }
    int v90 = v22[51].u8[0];
    if (v22[52].i8[1])
    {
      if (v22[51].i8[0])
      {
        if (v22[52].i8[3]) {
          sub_2219ED988(v22, 2.90435521e-144, a7, a8, a9, a10, a11, (uint64_t)v22, v15, v96);
        }
        else {
          sub_2219ED140(v22, (uint64_t)v22, v15);
        }
      }
      if (v22[51].i8[1])
      {
        uint64_t result = sub_2219EF418((int16x8_t *)v22, (uint64_t)v22, v15);
        if (result) {
          goto LABEL_58;
        }
      }
LABEL_26:
      sub_221933E90((uint64_t)v22, v15, *(double *)&v87, a7, *(double *)a8.i64, a9, a10, (__n128)a11, a12, a13);
      goto LABEL_27;
    }
    *(unsigned char *)(v15 + 912) = 0;
    int v91 = v22[52].u8[2];
    if (v91 == 25)
    {
      sub_221A1361C((uint64_t)v22, v15);
      goto LABEL_27;
    }
    if (v22[52].u8[1] | v91)
    {
LABEL_38:
      sub_2219EE974(v22, (uint64_t)v22, v15, v95);
      sub_2219D4AD4((uint64_t)v22, v15);
      goto LABEL_39;
    }
    if (v22[52].i8[3] == 1)
    {
      *(unsigned char *)(v15 + 912) = 1;
      if (v90) {
        sub_2219ED988(v22, 2.90435521e-144, a7, a8, a9, a10, a11, (uint64_t)v22, v15, v93);
      }
      sub_2219D1A9C((uint64_t)v22, v15, *(double *)&v87, a7, *(double *)a8.i64, a9, a10, (int16x8_t)a11, (int16x8_t)a12);
    }
    else
    {
      if (v22[52].i8[3]) {
        goto LABEL_38;
      }
      if (v90) {
        sub_2219ED140(v22, (uint64_t)v22, v15);
      }
      sub_2219CF33C((uint64_t)v22, v15);
    }
LABEL_39:
    if (v22[51].i8[1])
    {
      uint64_t result = sub_2219EF418((int16x8_t *)v22, (uint64_t)v22, v15);
      if (result) {
        goto LABEL_58;
      }
    }
    else
    {
      *(_OWORD *)(v15 + 848) = 0u;
      *(_OWORD *)(v15 + 864) = 0u;
      *(_OWORD *)(v15 + 816) = 0u;
      *(_OWORD *)(v15 + 832) = 0u;
      *(_OWORD *)(v15 + 784) = 0u;
      *(_OWORD *)(v15 + 800) = 0u;
      *(_OWORD *)(v15 + 752) = 0u;
      *(_OWORD *)(v15 + 768) = 0u;
      *(_OWORD *)(v15 + 720) = 0u;
      *(_OWORD *)(v15 + 736) = 0u;
      *(_OWORD *)(v15 + 688) = 0u;
      *(_OWORD *)(v15 + 704) = 0u;
      *(_OWORD *)(v15 + 656) = 0u;
      *(_OWORD *)(v15 + 672) = 0u;
      *(_OWORD *)(v15 + 624) = 0u;
      *(_OWORD *)(v15 + 640) = 0u;
    }
    uint64_t result = sub_2219D4CD8((uint64_t)v22, (int16x8_t *)v15);
    if (result) {
      goto LABEL_58;
    }
LABEL_27:
    if (*(void *)(v15 + 944))
    {
      *unsigned int v103 = *v86;
      uint64_t v88 = v16 + 48 * v83;
      *uint64_t v101 = *(_OWORD *)(v88 + 16);
      *uint64_t v100 = *(unsigned char *)(v88 + 32);
    }
    *uint64_t v86 = *(_OWORD *)(v15 + 880);
    uint64_t v89 = v16 + 48 * v83;
    *(_OWORD *)(v89 + 16) = *(_OWORD *)(v15 + 896);
    *(unsigned char *)(v89 + 32) = *(unsigned char *)(v15 + 912);
    v22 += 73;
    v23 += 16;
    ++v24;
    --v14;
    uint64_t v19 = v104;
  }
  while (v14);
  uint64_t result = 0;
LABEL_58:
  uint64_t v13 = a1;
LABEL_59:
  *(_DWORD *)(v13 + 40) = result;
  return result;
}

uint64_t sub_221A00CCC(uint64_t a1, int a2, int a3, int a4, uint64_t a5, double a6, int8x16_t a7, double a8, __n128 a9, __n128 a10, int8x16_t a11, __n128 a12, __n128 a13)
{
  uint64_t v13 = a1;
  int v14 = a4 - a3;
  if (a4 <= a3)
  {
    uint64_t result = 0;
    goto LABEL_62;
  }
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v17 = *(int *)(a1 + 32);
  uint64_t v18 = *(void *)(v16 + 72);
  uint64_t v102 = v15 - 48;
  uint64_t v19 = *(int *)(v16 + 56);
  if (*(_DWORD *)(*(void *)a1 + 32) == 1) {
    int v20 = v17 * a2;
  }
  else {
    int v20 = (a2 << 31 >> 31) & v17;
  }
  int v111 = 16 * a2;
  int v112 = 32 * a2;
  int v110 = 8 * a2;
  uint64_t v100 = *(int *)(v18 + 136);
  uint64_t v101 = *(int *)(v18 + 152);
  uint64_t v21 = 2 * v100;
  uint64_t v99 = 2 * v101;
  uint64_t v22 = v15 + 48 * (int)v17;
  uint64_t v114 = (_OWORD *)(v16 + 936);
  int v23 = (_OWORD *)(v16 + 880);
  uint64_t v98 = a5 + 1423424;
  uint64_t v95 = a5 + 1422656;
  uint64_t v97 = a5 + 1424288;
  uint64_t v104 = (_OWORD *)(v22 + 16);
  int32x4_t v106 = (_OWORD *)v22;
  unsigned int v103 = (unsigned char *)(v22 + 32);
  uint64_t v105 = v19 - 1;
  uint64_t v24 = (int16x8_t *)(*(void *)(a1 + 8) + 1168 * (v20 + (uint64_t)a3));
  int v25 = 16 * a3;
  int v113 = *(_DWORD *)(a1 + 32);
  uint64_t v108 = *(void *)(a1 + 24);
  uint64_t v109 = -v17;
  uint64_t v26 = a3 + (uint64_t)((int)v17 * a2);
  uint64_t v107 = *(int *)(v16 + 56);
  do
  {
    int v28 = v111;
    int v27 = v112;
    if (!*(unsigned char *)v18)
    {
      int v27 = v111;
      int v28 = v110;
    }
    uint64_t v29 = *(void *)(v18 + 32) + v25 + (v27 * *(_DWORD *)(v18 + 136));
    if ((v29 & 0x3F) == 0)
    {
      uint64_t v30 = v100;
      if (!*(unsigned char *)(v16 + 21)) {
        uint64_t v30 = 0;
      }
      _X12 = v29 + v30;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v21;
      __asm { PRFM            #0, [X12] }
    }
    uint64_t v67 = *(void *)(v18 + 40) + v25 + (v28 * *(_DWORD *)(v18 + 152));
    if ((v67 & 0x3F) == 0)
    {
      uint64_t v68 = v101;
      if (!*(unsigned char *)(v16 + 21)) {
        uint64_t v68 = 0;
      }
      _X8 = v67 + v68;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v99;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v99;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v99;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v99;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v99;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v99;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v99;
      __asm { PRFM            #0, [X8] }
    }
    unsigned __int32 v85 = v24[51].u32[2];
    uint64_t v86 = v109 + v26;
    if (v85 + 1 == v113) {
      signed __int32 v87 = 0;
    }
    else {
      signed __int32 v87 = v85 + 1;
    }
    *uint64_t v114 = 0u;
    *(_OWORD *)(v16 + 952) = 0u;
    if (v85)
    {
      if (v26 > v19)
      {
        *(void *)uint64_t v114 = v102 + 48 * (int)v85;
        if (v86 > v19) {
          *(void *)(v16 + 960) = v106;
        }
      }
    }
    uint64_t v88 = (_OWORD *)(v15 + 48 * v85);
    if (v86 >= v19) {
      *(void *)(v16 + 944) = v88;
    }
    if (v87 && v86 >= v105) {
      *(void *)(v16 + 952) = v15 + 48 * v87;
    }
    *(void *)(v16 + 968) = v23;
    *(void *)&long long v89 = 0x2222222222222222;
    *((void *)&v89 + 1) = 0x2222222222222222;
    *int v23 = v89;
    *(_OWORD *)(v16 + 896) = v89;
    if (v24[52].i8[0]) {
      goto LABEL_29;
    }
    int v92 = v24[51].u8[0];
    if (v24[52].i8[1])
    {
      if (v24[51].i8[0])
      {
        if (v24[52].i8[3]) {
          sub_2219EE180((uint64_t)v24, 2.90435521e-144, a7, a8, a9.n128_f64[0], a10.n128_f64[0], a11, (uint64_t)v24, v16, v98);
        }
        else {
          sub_2219ED5BC(v24, (uint64_t)v24, v16);
        }
      }
      if (v24[51].i8[1])
      {
        uint64_t result = sub_2219EF990(v24, (uint64_t)v24, v16);
        if (result) {
          goto LABEL_61;
        }
      }
LABEL_29:
      sub_22193FE98((uint64_t)v24, (__n128 *)v16, *(double *)&v89, *(double *)a7.i64, a8, a9, a10, (__n128)a11, a12, a13);
      goto LABEL_30;
    }
    *(unsigned char *)(v16 + 912) = 0;
    int v93 = v24[52].u8[2];
    if (v93 == 25)
    {
      sub_221A1361C((uint64_t)v24, v16);
      goto LABEL_30;
    }
    if (v24[52].u8[1] | v93)
    {
LABEL_41:
      sub_2219EF11C((uint64_t)v24, (uint64_t)v24, v16, v97);
      sub_2219D4BDC((uint64_t)v24, v16);
      goto LABEL_42;
    }
    if (v24[52].i8[3] == 1)
    {
      *(unsigned char *)(v16 + 912) = 1;
      if (v92) {
        sub_2219EE180((uint64_t)v24, 2.90435521e-144, a7, a8, a9.n128_f64[0], a10.n128_f64[0], a11, (uint64_t)v24, v16, v95);
      }
      sub_2219D1A9C((uint64_t)v24, v16, *(double *)&v89, *(double *)a7.i64, a8, a9.n128_f64[0], a10.n128_f64[0], (int16x8_t)a11, (int16x8_t)a12);
    }
    else
    {
      if (v24[52].i8[3]) {
        goto LABEL_41;
      }
      if (v92) {
        sub_2219ED5BC(v24, (uint64_t)v24, v16);
      }
      sub_2219CF33C((uint64_t)v24, v16);
    }
LABEL_42:
    if (v24[51].i8[1])
    {
      uint64_t result = sub_2219EF990(v24, (uint64_t)v24, v16);
      if (result) {
        goto LABEL_61;
      }
    }
    else
    {
      *(_OWORD *)(v16 + 848) = 0u;
      *(_OWORD *)(v16 + 864) = 0u;
      *(_OWORD *)(v16 + 816) = 0u;
      *(_OWORD *)(v16 + 832) = 0u;
      *(_OWORD *)(v16 + 784) = 0u;
      *(_OWORD *)(v16 + 800) = 0u;
      *(_OWORD *)(v16 + 752) = 0u;
      *(_OWORD *)(v16 + 768) = 0u;
      *(_OWORD *)(v16 + 720) = 0u;
      *(_OWORD *)(v16 + 736) = 0u;
      *(_OWORD *)(v16 + 688) = 0u;
      *(_OWORD *)(v16 + 704) = 0u;
      *(_OWORD *)(v16 + 656) = 0u;
      *(_OWORD *)(v16 + 672) = 0u;
      *(_OWORD *)(v16 + 624) = 0u;
      *(_OWORD *)(v16 + 640) = 0u;
    }
    uint64_t result = sub_2219D4CD8((uint64_t)v24, (int16x8_t *)v16);
    if (result) {
      goto LABEL_61;
    }
LABEL_30:
    uint64_t v15 = v108;
    if (*(void *)(v16 + 944))
    {
      *int32x4_t v106 = *v88;
      uint64_t v90 = v108 + 48 * v85;
      *uint64_t v104 = *(_OWORD *)(v90 + 16);
      *unsigned int v103 = *(unsigned char *)(v90 + 32);
    }
    *uint64_t v88 = *(_OWORD *)(v16 + 880);
    uint64_t v91 = v108 + 48 * v85;
    *(_OWORD *)(v91 + 16) = *(_OWORD *)(v16 + 896);
    *(unsigned char *)(v91 + 32) = *(unsigned char *)(v16 + 912);
    v24 += 73;
    v25 += 16;
    ++v26;
    --v14;
    uint64_t v19 = v107;
  }
  while (v14);
  uint64_t result = 0;
LABEL_61:
  uint64_t v13 = a1;
LABEL_62:
  *(_DWORD *)(v13 + 40) = result;
  return result;
}

uint64_t sub_221A011BC(uint64_t a1, int a2, int a3, int a4, uint64_t a5, double a6, int8x16_t a7, double a8, __n128 a9, __n128 a10, int8x16_t a11, __n128 a12, __n128 a13)
{
  uint64_t v13 = a1;
  int v14 = a4 - a3;
  if (a4 <= a3)
  {
    uint64_t result = 0;
    goto LABEL_59;
  }
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(int *)(a1 + 32);
  uint64_t v18 = *(void *)(v15 + 72);
  uint64_t v19 = *(int *)(v15 + 56);
  int v109 = 32 * a2;
  int v108 = 16 * a2;
  int v107 = 8 * a2;
  uint64_t v98 = *(int *)(v18 + 136);
  uint64_t v99 = *(int *)(v18 + 152);
  uint64_t v20 = 2 * v98;
  uint64_t v97 = 2 * v99;
  uint64_t v21 = v16 + 48 * (int)v17;
  int v111 = (_OWORD *)(v15 + 936);
  int32x4_t v106 = (_OWORD *)(v15 + 880);
  uint64_t v96 = a5 + 1423424;
  uint64_t v93 = a5 + 1422656;
  uint64_t v95 = a5 + 1424288;
  uint64_t v101 = (_OWORD *)(v21 + 16);
  unsigned int v103 = (_OWORD *)v21;
  uint64_t v100 = (unsigned char *)(v21 + 32);
  uint64_t v102 = v19 - 1;
  uint64_t v22 = (int16x8_t *)(*(void *)(a1 + 8) + 1168 * ((int)((a2 << 31 >> 31) & v17) + (uint64_t)a3));
  int v23 = 16 * a3;
  int v110 = *(_DWORD *)(a1 + 32);
  uint64_t v104 = v19;
  uint64_t v105 = -v17;
  uint64_t v24 = a3 + (uint64_t)((int)v17 * a2);
  do
  {
    int v26 = v108;
    int v25 = v109;
    if (!*(unsigned char *)v18)
    {
      int v25 = v108;
      int v26 = v107;
    }
    uint64_t v27 = *(void *)(v18 + 32) + v23 + (v25 * *(_DWORD *)(v18 + 136));
    if ((v27 & 0x3F) == 0)
    {
      uint64_t v28 = v98;
      if (!*(unsigned char *)(v15 + 21)) {
        uint64_t v28 = 0;
      }
      _X12 = v27 + v28;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
      _X12 = _X12 + v20;
      __asm { PRFM            #0, [X12] }
    }
    uint64_t v65 = *(void *)(v18 + 40) + v23 + (v26 * *(_DWORD *)(v18 + 152));
    if ((v65 & 0x3F) == 0)
    {
      uint64_t v66 = v99;
      if (!*(unsigned char *)(v15 + 21)) {
        uint64_t v66 = 0;
      }
      _X8 = v65 + v66;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v97;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v97;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v97;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v97;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v97;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v97;
      __asm { PRFM            #0, [X8] }
      _X8 = _X8 + v97;
      __asm { PRFM            #0, [X8] }
    }
    unsigned __int32 v83 = v22[51].u32[2];
    uint64_t v84 = v105 + v24;
    if (v83 + 1 == v110) {
      signed __int32 v85 = 0;
    }
    else {
      signed __int32 v85 = v83 + 1;
    }
    *int v111 = 0u;
    *(_OWORD *)(v15 + 952) = 0u;
    if (v83)
    {
      if (v24 > v19)
      {
        *(void *)int v111 = v16 - 48 + 48 * (int)v83;
        if (v84 > v19) {
          *(void *)(v15 + 960) = v103;
        }
      }
    }
    uint64_t v86 = (_OWORD *)(v16 + 48 * v83);
    if (v84 >= v19) {
      *(void *)(v15 + 944) = v86;
    }
    if (v85 && v84 >= v102) {
      *(void *)(v15 + 952) = v16 + 48 * v85;
    }
    *(void *)(v15 + 968) = v106;
    *(void *)&long long v87 = 0x2222222222222222;
    *((void *)&v87 + 1) = 0x2222222222222222;
    *int32x4_t v106 = v87;
    *(_OWORD *)(v15 + 896) = v87;
    if (v22[52].i8[0]) {
      goto LABEL_26;
    }
    int v90 = v22[51].u8[0];
    if (v22[52].i8[1])
    {
      if (v22[51].i8[0])
      {
        if (v22[52].i8[3]) {
          sub_2219EE180((uint64_t)v22, 2.90435521e-144, a7, a8, a9.n128_f64[0], a10.n128_f64[0], a11, (uint64_t)v22, v15, v96);
        }
        else {
          sub_2219ED5BC(v22, (uint64_t)v22, v15);
        }
      }
      if (v22[51].i8[1])
      {
        uint64_t result = sub_2219EF990(v22, (uint64_t)v22, v15);
        if (result) {
          goto LABEL_58;
        }
      }
LABEL_26:
      sub_22193FE98((uint64_t)v22, (__n128 *)v15, *(double *)&v87, *(double *)a7.i64, a8, a9, a10, (__n128)a11, a12, a13);
      goto LABEL_27;
    }
    *(unsigned char *)(v15 + 912) = 0;
    int v91 = v22[52].u8[2];
    if (v91 == 25)
    {
      sub_221A1361C((uint64_t)v22, v15);
      goto LABEL_27;
    }
    if (v22[52].u8[1] | v91)
    {
LABEL_38:
      sub_2219EF11C((uint64_t)v22, (uint64_t)v22, v15, v95);
      sub_2219D4BDC((uint64_t)v22, v15);
      goto LABEL_39;
    }
    if (v22[52].i8[3] == 1)
    {
      *(unsigned char *)(v15 + 912) = 1;
      if (v90) {
        sub_2219EE180((uint64_t)v22, 2.90435521e-144, a7, a8, a9.n128_f64[0], a10.n128_f64[0], a11, (uint64_t)v22, v15, v93);
      }
      sub_2219D1A9C((uint64_t)v22, v15, *(double *)&v87, *(double *)a7.i64, a8, a9.n128_f64[0], a10.n128_f64[0], (int16x8_t)a11, (int16x8_t)a12);
    }
    else
    {
      if (v22[52].i8[3]) {
        goto LABEL_38;
      }
      if (v90) {
        sub_2219ED5BC(v22, (uint64_t)v22, v15);
      }
      sub_2219CF33C((uint64_t)v22, v15);
    }
LABEL_39:
    if (v22[51].i8[1])
    {
      uint64_t result = sub_2219EF990(v22, (uint64_t)v22, v15);
      if (result) {
        goto LABEL_58;
      }
    }
    else
    {
      *(_OWORD *)(v15 + 848) = 0u;
      *(_OWORD *)(v15 + 864) = 0u;
      *(_OWORD *)(v15 + 816) = 0u;
      *(_OWORD *)(v15 + 832) = 0u;
      *(_OWORD *)(v15 + 784) = 0u;
      *(_OWORD *)(v15 + 800) = 0u;
      *(_OWORD *)(v15 + 752) = 0u;
      *(_OWORD *)(v15 + 768) = 0u;
      *(_OWORD *)(v15 + 720) = 0u;
      *(_OWORD *)(v15 + 736) = 0u;
      *(_OWORD *)(v15 + 688) = 0u;
      *(_OWORD *)(v15 + 704) = 0u;
      *(_OWORD *)(v15 + 656) = 0u;
      *(_OWORD *)(v15 + 672) = 0u;
      *(_OWORD *)(v15 + 624) = 0u;
      *(_OWORD *)(v15 + 640) = 0u;
    }
    uint64_t result = sub_2219D4CD8((uint64_t)v22, (int16x8_t *)v15);
    if (result) {
      goto LABEL_58;
    }
LABEL_27:
    if (*(void *)(v15 + 944))
    {
      *unsigned int v103 = *v86;
      uint64_t v88 = v16 + 48 * v83;
      *uint64_t v101 = *(_OWORD *)(v88 + 16);
      *uint64_t v100 = *(unsigned char *)(v88 + 32);
    }
    *uint64_t v86 = *(_OWORD *)(v15 + 880);
    uint64_t v89 = v16 + 48 * v83;
    *(_OWORD *)(v89 + 16) = *(_OWORD *)(v15 + 896);
    *(unsigned char *)(v89 + 32) = *(unsigned char *)(v15 + 912);
    v22 += 73;
    v23 += 16;
    ++v24;
    --v14;
    uint64_t v19 = v104;
  }
  while (v14);
  uint64_t result = 0;
LABEL_58:
  uint64_t v13 = a1;
LABEL_59:
  *(_DWORD *)(v13 + 40) = result;
  return result;
}

uint64_t sub_221A016A4(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 632);
  uint64_t v3 = (atomic_uint *)(a1 + 768);
  uint64_t v50 = a1 + 720;
  int v51 = 0;
  int v4 = *(_DWORD *)(a1 + 752);
  uint64_t v5 = *(void *)(a1 + 664);
  uint64_t v52 = *(void *)(v5 + 1192) + 1152;
  uint64_t v6 = *(void *)(v5 + 72);
  uint64_t v7 = *(void *)(v5 + 80);
  *(void *)(v7 + 80) = v6;
  LODWORD(v6) = *(_DWORD *)(v6 + 100) >> 4;
  int v8 = *(_DWORD *)(v7 + 12) * v6;
  uint64_t v9 = (atomic_uint *)(a1 + 784);
  int v10 = (atomic_uint *)(a1 + 776);
  uint64_t v54 = (atomic_uint *)(a1 + 792);
  *(_DWORD *)(v7 + 8) = v6;
  *(_DWORD *)(v7 + 20) = v8;
  int v11 = (atomic_uint *)(a1 + 804);
  int v53 = v4 - 1;
  while (*(_DWORD *)(*v2 + 32) == 1)
  {
    if (*(_DWORD *)(a1 + 796) >= *(_DWORD *)(a1 + 756) || *(_DWORD *)(a1 + 808) == 1) {
      goto LABEL_96;
    }
    uint64_t v12 = *(void *)(a1 + 640);
    BOOL v13 = sub_221A34464(0, 1u, v3);
    int v22 = *(_DWORD *)(a1 + 772);
    if (v22 < *(_DWORD *)(a1 + 756))
    {
      if (!v13) {
        goto LABEL_42;
      }
LABEL_13:
      int v23 = 1;
      goto LABEL_23;
    }
    sub_221A34478(v3);
    sub_221A341D0(*(pthread_mutex_t **)(v12 + 5041728));
    sub_221A341DC(*(pthread_mutex_t **)(v12 + 5041728));
LABEL_16:
    if (sub_221A34464(0, 1u, v9))
    {
      int v22 = *(_DWORD *)(a1 + 788);
      if (v22 < *(_DWORD *)(a1 + 780))
      {
        int v23 = 3;
        goto LABEL_23;
      }
      sub_221A34478(v9);
    }
    if (sub_221A34464(0, 1u, v10))
    {
      int v22 = *(_DWORD *)(a1 + 780);
      if (v22 < *(_DWORD *)(a1 + 772))
      {
        int v23 = 2;
        goto LABEL_23;
      }
      sub_221A34478(v10);
    }
    if (sub_221A34464(0, 1u, v54))
    {
      int v22 = *(_DWORD *)(a1 + 796);
      if (v22 >= *(_DWORD *)(a1 + 788)
        || (v27 = *(_DWORD *)(a1 + 780), int v23 = 4, v27 < *(_DWORD *)(a1 + 756)) && v22 + 1 >= v27)
      {
        sub_221A34478(v54);
        goto LABEL_42;
      }
LABEL_23:
      if (*v11 < 0 && (int)sub_221A34488(v11) <= 0) {
        sub_221A34344(*(dispatch_semaphore_t **)(a1 + 824));
      }
      switch(v23)
      {
        case 1:
          if (v22 == *(_DWORD *)(v5 + 48)) {
            int v28 = *(_DWORD *)(v5 + 40);
          }
          else {
            int v28 = 0;
          }
          if (*(unsigned char *)(v5 + 20))
          {
            if (*(unsigned char *)(v5 + 24))
            {
              int v31 = sub_2219FFDDC(v2, v22, v28);
LABEL_85:
              int v46 = v31;
              if (*(unsigned char *)(v5 + 36) == 1)
              {
                *(_DWORD *)(v5 + 52) = v22;
                *(_DWORD *)(a1 + 756) = v22 + 1;
              }
              if (*(_DWORD *)(a1 + 772) < *(_DWORD *)(v7 + 8)) {
                *(_DWORD *)(a1 + 772) = v22 + 1;
              }
              int v26 = v3;
              goto LABEL_94;
            }
          }
          else if (*(unsigned char *)(v5 + 24))
          {
            int v31 = sub_2219FF06C(v2, v22, v28);
            goto LABEL_85;
          }
          int v31 = sub_2219FF588((uint64_t)v2, v22, v28);
          goto LABEL_85;
        case 2:
          if (v22 == *(_DWORD *)(v5 + 48)) {
            int v29 = *(_DWORD *)(v5 + 40);
          }
          else {
            int v29 = 0;
          }
          int v32 = v53;
          if (v22 == *(_DWORD *)(v5 + 52)) {
            int v32 = *(_DWORD *)(v5 + 44);
          }
          uint64_t v33 = *(void *)(a1 + 736);
          int v34 = *(unsigned __int8 *)(v33 + 20);
          int v35 = *(unsigned __int8 *)(v33 + 24);
          int v36 = v32 + 1;
          uint64_t v37 = *(void *)(a1 + 664) + 976;
          if (v34)
          {
            if (v35) {
              int v38 = sub_221A00CCC(v50, v22, v29, v36, v37, *(double *)v14.i64, (int8x16_t)v15, *(double *)v16.i64, v17, v18, v19, v20, v21);
            }
            else {
              int v38 = sub_221A011BC(v50, v22, v29, v36, v37, *(double *)v14.i64, (int8x16_t)v15, *(double *)v16.i64, v17, v18, v19, v20, v21);
            }
          }
          else if (v35)
          {
            int v38 = sub_221A002F4(v50, v22, v29, v36, v37, *(double *)v14.i64, *(double *)v15.i64, (int8x16_t)v16, v17.n128_f64[0], v18.n128_f64[0], v19, v20, v21);
          }
          else
          {
            int v38 = sub_221A007E4(v50, v22, v29, v36, v37, *(double *)v14.i64, *(double *)v15.i64, (int8x16_t)v16, v17.n128_f64[0], v18.n128_f64[0], v19, v20, v21);
          }
          int v46 = v38;
          if (*(_DWORD *)(a1 + 780) < *(_DWORD *)(v7 + 8)) {
            *(_DWORD *)(a1 + 780) = v22 + 1;
          }
          int v26 = v10;
          goto LABEL_94;
        case 3:
          if (v22 == *(_DWORD *)(v5 + 48)) {
            unsigned int v24 = *(_DWORD *)(v5 + 40);
          }
          else {
            unsigned int v24 = 0;
          }
          int v25 = v53;
          if (v22 == *(_DWORD *)(v5 + 52)) {
            int v25 = *(_DWORD *)(v5 + 44);
          }
          sub_2219E5A18((uint64_t *)v7, v52, v24, v25 + 1, v22, v22 + 1, v14, v15, v16);
          if (*(_DWORD *)(a1 + 788) < *(_DWORD *)(v7 + 8)) {
            *(_DWORD *)(a1 + 788) = v22 + 1;
          }
          int v26 = v9;
          goto LABEL_35;
        case 4:
          if (v22 == *(_DWORD *)(v5 + 48)) {
            unsigned int v30 = *(_DWORD *)(v5 + 40);
          }
          else {
            unsigned int v30 = 0;
          }
          int v39 = v53;
          if (v22 == *(_DWORD *)(v5 + 52)) {
            int v39 = *(_DWORD *)(v5 + 44);
          }
          if (*(unsigned char *)(v7 + 224))
          {
            int v40 = *(_DWORD *)(v7 + 184);
            if (*(unsigned char *)(v7 + 225))
            {
              if (v40 > 0)
              {
                int v56 = 0;
                unsigned int v41 = v39 + 1;
                unsigned int v42 = v22 + 1;
                unsigned int v43 = &v56;
LABEL_78:
                int v44 = sub_2219E2D58(v7, v30, v41, v22, v42, 0, v43);
                goto LABEL_81;
              }
              int v55 = 0;
            }
            else
            {
              int v55 = 0;
              if (v40 > 0)
              {
                if (!*(unsigned char *)(v7 + 226))
                {
LABEL_72:
                  int v44 = sub_2219E21C8(v7, v30, v39 + 1, v22, v22 + 1);
                  goto LABEL_81;
                }
                unsigned int v41 = v39 + 1;
                unsigned int v42 = v22 + 1;
                unsigned int v43 = &v55;
                goto LABEL_78;
              }
            }
          }
          else
          {
            int v55 = 0;
            if (*(int *)(v7 + 184) > 0) {
              goto LABEL_72;
            }
          }
          unsigned int v49 = v39 + 1;
          unsigned int v45 = v30;
          sub_2219E025C(v7, v30, v39 + 1, v22, v22 + 1);
          int v44 = sub_2219E1598(v7, v45, v49, v22, v22 + 1);
LABEL_81:
          int v46 = v44;
          if (*(_DWORD *)(a1 + 796) < *(_DWORD *)(v7 + 8)) {
            *(_DWORD *)(a1 + 796) = v22 + 1;
          }
          int v26 = v54;
LABEL_94:
          int v51 = v46;
          if (v46) {
            *(_DWORD *)(a1 + 808) = 1;
          }
LABEL_35:
          sub_221A34478(v26);
          break;
        default:
          continue;
      }
    }
    else
    {
LABEL_42:
      if (sub_221A34478(v11) == -1) {
        sub_221A34338(*(dispatch_semaphore_t **)(a1 + 824));
      }
    }
  }
  if (*(_DWORD *)(a1 + 796) < *(_DWORD *)(a1 + 756) && *(_DWORD *)(a1 + 808) != 1)
  {
    if (sub_221A34464(0, 1u, v3))
    {
      int v22 = *(_DWORD *)(a1 + 772);
      if (v22 < *(_DWORD *)(a1 + 756) && v22 < *(_DWORD *)(a1 + 780) + 2) {
        goto LABEL_13;
      }
      sub_221A34478(v3);
    }
    goto LABEL_16;
  }
LABEL_96:
  int v47 = *(_DWORD *)(v7 + 8);
  *(_DWORD *)(a1 + 796) = v47;
  *(_DWORD *)(a1 + 788) = v47;
  *(_DWORD *)(a1 + 780) = v47;
  *(_DWORD *)(a1 + 772) = v47;
  sub_221A34344(*(dispatch_semaphore_t **)(a1 + 824));
  *(_DWORD *)(a1 + 792) = 0;
  *(_DWORD *)(a1 + 784) = 0;
  *(_DWORD *)(a1 + 776) = 0;
  *(_DWORD *)(a1 + 768) = 0;
  return v51;
}

void sub_221A01C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10 = *(_DWORD *)(a2 + 4);
  int v11 = *(_DWORD *)(a2 + 16);
  uint64_t v12 = *(void *)(a2 + 560);
  uint64_t v13 = *(void *)(a2 + 568);
  *(unsigned char *)(a5 + 12) = *(unsigned char *)(a5 + 1423168);
  uint64_t v14 = *(void *)(a5 + 1016);
  *(unsigned char *)(a5 + 13) = *(unsigned char *)(v14 + 56);
  *(unsigned char *)(a5 + 14) = *(unsigned char *)(v14 + 57);
  *(_DWORD *)(a5 + 16) = *(_DWORD *)(a5 + 996);
  *(_WORD *)(a5 + 20) = *(_WORD *)(a5 + 1005);
  *(unsigned char *)(a5 + 24) = *(unsigned char *)(a5 + 1164);
  uint64_t v15 = *(void *)(a5 + 1192);
  *(unsigned char *)(a5 + 22) = *(unsigned char *)(v15 + 1363);
  *(unsigned char *)(a5 + 23) = 0;
  *(void *)(a5 + 64) = a5 + 1200;
  *(void *)(a5 + 72) = v15 + 32;
  *(void *)(a5 + 80) = *(void *)(a5 + 1312);
  *(void *)(a5 + 88) = v15;
  *(unsigned char *)(a5 + 928) = *(unsigned char *)(*(void *)(a5 + 1024) + 4);
  *(unsigned char *)(a5 + 36) = 0;
  *(void *)(a2 + 632) = a2;
  *(void *)(a2 + 640) = a1;
  *(void *)(a2 + 648) = a3;
  *(void *)(a2 + 656) = a4;
  *(void *)(a2 + 664) = a5;
  *(_DWORD *)(a2 + 672) = a6;
  *(_DWORD *)(a2 + 676) = a7;
  *(void *)(a2 + 680) = a8;
  *(void *)(a2 + 688) = a9;
  *(void *)(a2 + 696) = a10;
  *(void *)(a2 + 704) = v12;
  *(void *)(a2 + 720) = a2;
  *(void *)(a2 + 728) = v12;
  *(void *)(a2 + 736) = a5;
  *(void *)(a2 + 744) = v13;
  *(_DWORD *)(a2 + 752) = v10;
  *(_DWORD *)(a2 + 756) = v11;
  uint64_t v16 = *(void *)(a5 + 1176);
  *(unsigned char *)a5 = *(_DWORD *)(a5 + 1428264) + *(unsigned char *)(a4 + 72) + 26;
  sub_221901768(v16);
}

uint64_t sub_221A01ECC(unsigned int *a1, unsigned int a2, unsigned int *a3, void *a4, int a5, char a6)
{
  uint64_t result = sub_2219F38D8(a1, a2, (uint64_t)v11);
  if (!result)
  {
    if ((a5 & 0xFFFFFFFD) == 1) {
      return sub_221A22304((uint64_t)v11, a3, a4, a5, 0, 1, 0, a6, 0);
    }
    else {
      return sub_221A22304((uint64_t)v11, a3, a4, 0, 0, 0, 0, a6, 0);
    }
  }
  return result;
}

pthread_mutex_t *sub_221A01F68(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(unsigned int **)(a1 + 32);
  unsigned int v4 = *(_DWORD *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v5 + 88);
  uint64_t v7 = *(unsigned int **)(v5 + 24);
  uint64_t v55 = 0;
  int v56 = 0;
  uint64_t v8 = *(void *)(v5 + 40);
  int v9 = *(unsigned __int8 *)(v8 + 225);
  int v54 = 0;
  unsigned __int8 v53 = 0;
  int v10 = *(_DWORD *)(v6 + 132) >> 4;
  int v11 = *(_DWORD *)(v5 + 4) * v10;
  *(_DWORD *)(v5 + 16) = v10;
  *(_DWORD *)(v5 + 20) = v11;
  *(_DWORD *)(v8 + 192) = *(_DWORD *)(v6 + 1280);
  uint64_t result = sub_221A341D0(*(pthread_mutex_t **)(v5 + 72));
  uint64_t v13 = 0;
  uint64_t v14 = *(void *)(v5 + 64);
  while (*(_DWORD *)(v14 + 4 * v13++))
    ;
  if (*(_DWORD *)(v5 + 52) + 1 == v13) {
    return result;
  }
  uint64_t v46 = v2;
  *(_DWORD *)(v14 + 4 * v13 - 4) = 1;
  sub_221A341DC(*(pthread_mutex_t **)(v5 + 72));
  uint64_t v47 = *(void *)(*(void *)(v5 + 56) + 8 * v13 - 8);
  uint64_t v16 = v47 + 1425504;
  int v17 = sub_2219F38D8(v3, v4, v47 + 1425504);
  if (!v17)
  {
    uint64_t v18 = v47;
    if (*(unsigned char *)(v5 + 544))
    {
      int v17 = sub_2219F38D8(v3, v4, (uint64_t)v49);
      if (v17) {
        goto LABEL_5;
      }
      sub_2219F8D18(v47 + 1458280);
      sub_2219F8FB8(v47 + 1458280, 8 * v4);
      uint64_t v18 = v47;
      uint64_t v50 = *(void *)(v47 + 1425520);
      int v51 = *(_DWORD *)(v47 + 1425536);
      unsigned __int8 v52 = *(unsigned char *)(v47 + 1425540);
    }
    uint64_t v19 = v18 + 1425544;
    int v20 = *(unsigned __int8 *)(a1 + 56);
    if ((v20 | 2) == 3)
    {
      int v21 = sub_221A22304(v16, v7, (void *)(v18 + 1425544), v20, &v54, 0, (int *)(v5 + 160), v9 != 0, 0);
      int v17 = v21;
      if (v54) {
        BOOL v22 = 0;
      }
      else {
        BOOL v22 = *(unsigned char *)(a1 + 56) == 1;
      }
      if (v22 || v21) {
        goto LABEL_5;
      }
    }
    else
    {
      int v17 = sub_221A22304(v16, v7, (void *)(v18 + 1425544), 0, 0, 0, 0, v9 != 0, 0);
      if (v17) {
        goto LABEL_5;
      }
    }
    if (*(unsigned char *)(v5 + 544)) {
      sub_2219F8FC0(v47 + 1458280, *(unsigned __int8 *)(v47 + 1425540) + 8 * (*(_DWORD *)(v47 + 1425520) - v50) - v52);
    }
    int v17 = sub_2219F39EC((uint64_t)v7, *(_DWORD *)(v47 + 1425568), &v55);
    if (v17) {
      goto LABEL_5;
    }
    int v17 = sub_2219F39A8(v7, *(_DWORD *)(v55 + 4), &v56);
    if (v17) {
      goto LABEL_5;
    }
    sub_221A341D0(*(pthread_mutex_t **)(v46 + 5041584));
    int v17 = sub_2219F7188(v19, v46 + 5016960, (int8x16_t *)(v47 + 1428296), v6, v23, v24);
    sub_221A341DC(*(pthread_mutex_t **)(v46 + 5041584));
    if (v17) {
      goto LABEL_5;
    }
    *(void *)(v47 + 1455792) = v47 + 1456080;
    sub_221A131D8(v47 + 1429136, v47 + 1429200, v47 + 1455680, v47 + 1456336, (void *)(v47 + 976));
    int v17 = sub_2219FA668(v47 + 976, v5, v47 + 1428296, v6, v56, v55, v19, *(unsigned __int8 *)(a1 + 56), v54);
    if (v17) {
      goto LABEL_5;
    }
    *(void *)(v47 + 1232) = v46 + 5041520;
    int v17 = sub_221A027D4(v47 + 976, v46 + 5041520);
    if (v17) {
      goto LABEL_5;
    }
    *(_DWORD *)(*(void *)(v5 + 40) + 188) = *(unsigned __int8 *)(v47 + 1425576);
    *(_DWORD *)(*(void *)(v5 + 40) + 192) = *(_DWORD *)(v6 + 1280);
    int v25 = v56;
    *(_DWORD *)(*(void *)(v5 + 40) + 196) = *((_DWORD *)v56 + 335) * v56[1339];
    *(_DWORD *)(*(void *)(v5 + 40) + 200) = *((_DWORD *)v25 + 336) * v25[1339];
    *(_DWORD *)(*(void *)(v5 + 40) + 204) = *((_DWORD *)v25 + 337) * v25[1339];
    *(_DWORD *)(*(void *)(v5 + 40) + 208) = *((_DWORD *)v25 + 338) * v25[1339];
    *(_DWORD *)(*(void *)(v5 + 40) + 212) = v25[1336];
    sub_2219E4C48(*(void *)(v5 + 40), *(_DWORD *)(a1 + 44), *(_DWORD *)(v47 + 1425564), *(_DWORD *)(v47 + 1428276), *(_DWORD *)(v47 + 1428280), *(_DWORD *)(v47 + 1428284));
    *(_DWORD *)(a1 + 4) = *(_DWORD *)(v47 + 1425560);
    unsigned int v26 = *(_DWORD *)(v47 + 1425564);
    int v17 = -8969;
    if (v26 > 7 || ((1 << v26) & 0xE7) == 0) {
      goto LABEL_5;
    }
    int v27 = *(_DWORD *)(*(void *)(a1 + 16) + 552);
    if (*(unsigned char *)(v47 + 1425576))
    {
      uint64_t v28 = v47;
      if (v27 != 1
        || (uint64_t v29 = *(void *)(v47 + 1024), *(_DWORD *)(v29 + 356))
        || *(_DWORD *)(v29 + 360)
        || (*(unsigned __int8 *)(a1 + 56) | 2) == 3)
      {
        if (!*(unsigned char *)(v47 + 1164)
          && !*(_DWORD *)(v47 + 1425608)
          && !*(_DWORD *)(v47 + 1425612)
          && ((1 << v26) & 0x21) == 0
          && ((1 << v26) & 0x42) == 0
          && ((1 << v26) & 0x84) == 0)
        {
          goto LABEL_5;
        }
        int v30 = sub_2219FE03C(v5, (uint64_t)v56, v55, v47, *(_DWORD *)(a1 + 44), (int)v13 - 1, (int *)(a1 + 8), (_DWORD *)(a1 + 48), (_DWORD *)(a1 + 52), *(unsigned char *)(a1 + 56), v54, 0);
        goto LABEL_50;
      }
LABEL_66:
      uint64_t v44 = a1 + 8;
      int v45 = *(_DWORD *)(a1 + 44);
      if (*(unsigned char *)(v28 + 1164)) {
        sub_221A01C50(v46, v5, (uint64_t)v56, v55, v47, v45, v13 - 1, v44, a1 + 48, a1 + 52);
      }
      sub_221A02BC4(v46, v5, (uint64_t)v56, v55, v47, v45, v13 - 1, v44, (_DWORD *)(a1 + 48), (_DWORD *)(a1 + 52), &v53);
      goto LABEL_51;
    }
    uint64_t v28 = v47;
    if (v27 == 1 && *(unsigned char *)(v47 + 1161) != 1)
    {
      uint64_t v31 = *(void *)(v47 + 1024);
      if (!*(_DWORD *)(v31 + 356) && !*(_DWORD *)(v31 + 360) && (*(unsigned __int8 *)(a1 + 56) | 2) != 3) {
        goto LABEL_66;
      }
    }
    if (*(unsigned char *)(v47 + 1164) || *(_DWORD *)(v47 + 1425608)) {
      goto LABEL_48;
    }
    if (!*(_DWORD *)(v47 + 1425612) && !v56[1337])
    {
      if (((1 << v26) & 0x21) != 0)
      {
        sub_221A036BC((_DWORD *)v5, (uint64_t)v56, v55, v47, *(_DWORD *)(a1 + 44), v13 - 1, (int *)(a1 + 8), (_DWORD *)(a1 + 48), (_DWORD *)(a1 + 52), *(unsigned char *)(a1 + 56), v54);
      }
      else if (((1 << v26) & 0x42) != 0)
      {
        int v30 = sub_221A02E00(v5, (uint64_t)v56, v55, v47, *(_DWORD *)(a1 + 44), (int)v13 - 1, (int *)(a1 + 8), (_DWORD *)(a1 + 48), (_DWORD *)(a1 + 52), *(unsigned char *)(a1 + 56), v54);
      }
      else
      {
        if (((1 << v26) & 0x84) == 0) {
          goto LABEL_5;
        }
        int v30 = sub_221A03F44((_DWORD *)v5, (uint64_t)v56, v55, v47, *(_DWORD *)(a1 + 44), (int)v13 - 1, (int *)(a1 + 8), (_DWORD *)(a1 + 48), (_DWORD *)(a1 + 52), *(unsigned char *)(a1 + 56), v54);
      }
LABEL_50:
      int v17 = v30;
      if (v30) {
        goto LABEL_5;
      }
LABEL_51:
      unsigned int v33 = *(_DWORD *)(v5 + 156);
      if (v33)
      {
        if (*(int *)(v47 + 1425548) <= 0)
        {
          uint64_t v34 = *(void *)(*(void *)(v47 + 1312) + 48);
          int v35 = *(_DWORD *)(a1 + 44);
          uint64_t v36 = v34 + 12 * v35;
          int v38 = *(unsigned __int8 *)(v36 + 9);
          uint64_t v37 = (BOOL *)(v36 + 9);
          if (v38 != 1) {
            *uint64_t v37 = (*(_DWORD *)(v34 + 12 * v35) / *(_DWORD *)(v34 + 12 * v35 + 4)) < v33;
          }
        }
      }
      int v39 = v53;
      uint64_t v40 = *(void *)(v5 + 40);
      uint64_t v41 = *(unsigned int *)(a1 + 4);
      int v42 = *(_DWORD *)(a1 + 8);
      unsigned int v43 = v42 + 1;
      sub_221A341D0(*(pthread_mutex_t **)(v40 + 160));
      if (v39)
      {
        if (v41 < v43) {
          memset((void *)(*(void *)(v40 + 168) + v41), 30, (v42 - v41) + 1);
        }
        sub_221A341DC(*(pthread_mutex_t **)(v40 + 160));
        int v17 = 0;
      }
      else
      {
        if (v41 < v43) {
          memset((void *)(*(void *)(v40 + 168) + v41), 10, (v42 - v41) + 1);
        }
        sub_221A341DC(*(pthread_mutex_t **)(v40 + 160));
        int v17 = sub_221A2F394(*(void *)(v5 + 40), (_DWORD *)(*(void *)(v5 + 88) + 32), *(void *)(v5 + 88) + 1152, *(unsigned __int8 *)(a1 + 56), v54);
      }
      goto LABEL_5;
    }
    uint64_t v28 = v47;
    if (*(_DWORD *)(v47 + 1425612))
    {
LABEL_48:
      int v32 = v56;
    }
    else
    {
      int v32 = v56;
      if (!v56[1337]) {
        goto LABEL_5;
      }
    }
    int v48 = 0;
    int v30 = sub_2219FB0C8(v5, (uint64_t)v32, v55, v28, *(_DWORD *)(a1 + 44), (int)v13 - 1, (int *)(a1 + 8), (_DWORD *)(a1 + 48), (_DWORD *)(a1 + 52), *(unsigned char *)(a1 + 56), v54, 0, &v48);
    goto LABEL_50;
  }
LABEL_5:
  if (*(unsigned char *)(v5 + 544)) {
    sub_2219F8F38((_DWORD *)(v5 + 164), (_DWORD *)(v47 + 1458280));
  }
  sub_221A341D0(*(pthread_mutex_t **)(v5 + 72));
  *(_DWORD *)(*(void *)(v5 + 64) + 4 * v13 - 4) = 0;
  uint64_t result = sub_221A341DC(*(pthread_mutex_t **)(v5 + 72));
  *(_DWORD *)a1 = v17;
  return result;
}

uint64_t sub_221A027D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 0;
  char v3 = 1;
  *(_DWORD *)(a1 + 296) = 1;
  while (1)
  {
    char v4 = v3;
    uint64_t v5 = *(unsigned int *)(a1 + 4 * v2 + 240);
    if ((v5 & 0x80000000) != 0 || v5 > 0x20) {
      return 4294958327;
    }
    uint64_t v6 = *(void *)(a1 + 8 * v2 + 224);
    uint64_t v7 = 33 * v2;
    uint64_t v8 = *(void *)(a1 + 264) + 33 * v2;
    uint64_t v9 = *(void *)(a1 + 272) + 33 * v2;
    uint64_t v10 = *(void *)(a1 + 280) + v7;
    *(unsigned char *)(v8 + 32) = 0;
    *(unsigned char *)(v9 + 32) = 0;
    *(unsigned char *)(v10 + 32) = 0;
    if (v5)
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        uint64_t v12 = *(void *)(v6 + 8 * i);
        *(unsigned char *)(v9 + i) = 0;
        *(unsigned char *)(v10 + i) = 0;
        if (v12)
        {
          uint64_t v13 = *(unsigned int *)(a2 + 48);
          if (v13)
          {
            uint64_t v14 = 0;
            while (*(void *)(*(void *)(a2 + 40) + 8 * v14) != v12)
            {
              if (v13 == ++v14) {
                goto LABEL_11;
              }
            }
            if (v14 <= 0xFE) {
              LOBYTE(v12) = v14 + 1;
            }
            else {
              LOBYTE(v12) = 0;
            }
          }
          else
          {
LABEL_11:
            LOBYTE(v12) = 0;
          }
        }
        *(unsigned char *)(v8 + i) = v12;
      }
    }
    if ((v4 & 1) == 0) {
      return 0;
    }
    uint64_t v15 = 0;
    uint64_t v16 = *(void *)(a1 + 288);
    do
    {
      *(unsigned char *)(v16 + v15) = 32;
      if (v5)
      {
        uint64_t v17 = 0;
        while (v15 != *(unsigned __int8 *)(v8 + v17))
        {
          if (v5 == ++v17) {
            goto LABEL_24;
          }
        }
        *(unsigned char *)(v16 + v15) = v17;
      }
LABEL_24:
      ++v15;
    }
    while (v15 != 81);
    unint64_t v18 = 0;
    uint64_t v19 = *(void **)(a1 + 304);
    *uint64_t v19 = 0;
    int v20 = v19 + 1;
    do
    {
      if (v18 >= *(unsigned int *)(a2 + 48)) {
        uint64_t v21 = 0;
      }
      else {
        uint64_t v21 = *(void *)(*(void *)(a2 + 40) + 8 * v18);
      }
      v20[v18++] = v21;
    }
    while (v18 != 80);
    uint64_t v23 = *(unsigned char **)(a1 + 312);
    BOOL v22 = *(unsigned char **)(a1 + 320);
    *uint64_t v23 = 32;
    unsigned char *v22 = 32;
    for (uint64_t j = 1; j != 81; ++j)
      v23[j] = *(unsigned char *)(v16 + j);
    int v25 = *(unsigned __int8 *)(a1 + 29);
    if (!*(unsigned char *)(a1 + 29))
    {
      if (!v5) {
        goto LABEL_65;
      }
      unsigned int v32 = 0;
      do
      {
        uint64_t v33 = *(void *)(v6 + 8 * v32);
        if (*(unsigned char *)(v33 + 1362) || *(unsigned char *)(v33 + 34)) {
          return 4294958327;
        }
        uint64_t v34 = *(void *)(v33 + 1352);
        if (v34)
        {
          uint64_t v35 = *(unsigned int *)(a2 + 48);
          if (!v35) {
            goto LABEL_62;
          }
          uint64_t v36 = 0;
          while (*(void *)(*(void *)(a2 + 40) + 8 * v36) != v34)
          {
            if (v35 == ++v36) {
              goto LABEL_62;
            }
          }
          if ((v36 + 1) <= 0x50u) {
            v23[(v36 + 1)] = v32;
          }
          else {
LABEL_62:
          }
            *(_DWORD *)(a1 + 296) = 0;
        }
        ++v32;
      }
      while (v32 != v5);
      int v25 = *(unsigned __int8 *)(a1 + 29);
    }
    if (v25) {
      BOOL v26 = v5 == 0;
    }
    else {
      BOOL v26 = 1;
    }
    if (!v26)
    {
      unsigned int v27 = 0;
      do
      {
        uint64_t v28 = *(void *)(v6 + 8 * v27);
        if (!*(unsigned char *)(v28 + 1362)) {
          return 4294958327;
        }
        uint64_t v29 = *(void *)(v28 + 1352);
        if (v29)
        {
          uint64_t v30 = *(unsigned int *)(a2 + 48);
          if (!v30) {
            goto LABEL_47;
          }
          uint64_t v31 = 0;
          while (*(void *)(*(void *)(a2 + 40) + 8 * v31) != v29)
          {
            if (v30 == ++v31) {
              goto LABEL_47;
            }
          }
          if ((v31 + 1) <= 0x50u) {
            v22[(v31 + 1)] = v27;
          }
          else {
LABEL_47:
          }
            *(_DWORD *)(a1 + 296) = 0;
        }
      }
      while (++v27 != v5);
    }
LABEL_65:
    int v37 = *(unsigned __int8 *)(a1 + 187);
    if (v37 == 2)
    {
      if (*(unsigned char *)(a1 + 29)) {
        return 4294958327;
      }
      if (!v5) {
        goto LABEL_105;
      }
      unsigned int v46 = 0;
      while (1)
      {
        uint64_t v47 = *(void *)(v6 + 8 * v46);
        if (*(unsigned char *)(v47 + 1362)) {
          return 4294958327;
        }
        if (*(unsigned char *)(v47 + 34)) {
          return 4294958327;
        }
        uint64_t v48 = *(void *)(v47 + 1352);
        if (!v48) {
          return 4294958327;
        }
        uint64_t v49 = *(unsigned int *)(a2 + 48);
        if (v49)
        {
          uint64_t v50 = 0;
          while (*(void *)(*(void *)(a2 + 40) + 8 * v50) != v48)
          {
            if (v49 == ++v50) {
              goto LABEL_99;
            }
          }
          char v51 = v50 + 1;
          if ((v50 + 1) <= 0x50u)
          {
            *(unsigned char *)(v16 + (v50 + 1)) = v46;
            goto LABEL_101;
          }
        }
        else
        {
LABEL_99:
          char v51 = -1;
        }
        *(_DWORD *)(a1 + 296) = 0;
LABEL_101:
        *(unsigned char *)(v9 + v46) = v51;
        *(unsigned char *)(v10 + v46++) = v51;
        if (v46 == v5) {
          goto LABEL_105;
        }
      }
    }
    if (v37 == 1)
    {
      if (!*(unsigned char *)(a1 + 29)) {
        return 4294958327;
      }
      if (v5) {
        break;
      }
    }
LABEL_105:
    char v3 = 0;
    uint64_t v2 = 1;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  unsigned int v38 = 0;
  int v39 = *(unsigned __int8 *)(a1 + 30);
  while (1)
  {
    uint64_t v40 = *(void *)(v6 + 8 * v38);
    if (!*(unsigned char *)(v40 + 1362)) {
      return 4294958327;
    }
    uint64_t v41 = *(void *)(v40 + 1352);
    if (!v41) {
      return 4294958327;
    }
    uint64_t v42 = *(unsigned int *)(a2 + 48);
    if (v42)
    {
      uint64_t v43 = 0;
      while (*(void *)(*(void *)(a2 + 40) + 8 * v43) != v41)
      {
        if (v42 == ++v43) {
          goto LABEL_76;
        }
      }
    }
    else
    {
LABEL_76:
      LOBYTE(v43) = -2;
    }
    *(unsigned char *)(v10 + v38) = v43 + 1;
    if (*(unsigned __int8 *)(v40 + 37) != v39)
    {
      unsigned __int8 v44 = 0;
      while (*(void *)(v6 + 8 * v44) != v41)
      {
        if (v5 <= ++v44)
        {
          unsigned __int8 v44 = 32;
          break;
        }
      }
      unint64_t v45 = *(unsigned __int8 *)(v8 + v38);
      if (v45 > 0x50) {
        *(_DWORD *)(a1 + 296) = 0;
      }
      else {
        *(unsigned char *)(v16 + v45) = v44;
      }
      if (v44 <= 0x1Fu) {
        *(unsigned char *)(v9 + v44) = v45;
      }
    }
    if (++v38 == v5) {
      goto LABEL_105;
    }
  }
}

void sub_221A02BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, _DWORD *a9, _DWORD *a10, unsigned char *a11)
{
  int v13 = *(_DWORD *)(a2 + 4);
  int v14 = *(_DWORD *)(a2 + 16);
  uint64_t v15 = *(void *)(a2 + 560);
  uint64_t v16 = *(void *)(a2 + 568);
  *(unsigned char *)(a5 + 12) = *(unsigned char *)(a5 + 1423168);
  uint64_t v17 = *(void *)(a5 + 1016);
  *(unsigned char *)(a5 + 13) = *(unsigned char *)(v17 + 56);
  *(unsigned char *)(a5 + 14) = *(unsigned char *)(v17 + 57);
  *(_DWORD *)(a5 + 16) = *(_DWORD *)(a5 + 996);
  *(_WORD *)(a5 + 20) = *(_WORD *)(a5 + 1005);
  *(unsigned char *)(a5 + 24) = *(unsigned char *)(a5 + 1164);
  uint64_t v18 = *(void *)(a5 + 1192);
  *(unsigned char *)(a5 + 22) = *(unsigned char *)(v18 + 1363);
  *(unsigned char *)(a5 + 23) = 0;
  *(void *)(a5 + 64) = a5 + 1200;
  *(void *)(a5 + 72) = v18 + 32;
  *(void *)(a5 + 80) = *(void *)(a5 + 1312);
  *(unsigned char *)(a5 + 928) = *(unsigned char *)(*(void *)(a5 + 1024) + 4);
  *(unsigned char *)(a5 + 36) = 0;
  *(void *)(a5 + 28) = 0;
  *(void *)(a2 + 632) = a2;
  *(void *)(a2 + 640) = a1;
  *(void *)(a2 + 648) = a3;
  *(void *)(a2 + 656) = a4;
  *(void *)(a2 + 664) = a5;
  *(_DWORD *)(a2 + 672) = a6;
  *(_DWORD *)(a2 + 676) = a7;
  *(void *)(a2 + 680) = a8;
  *(void *)(a2 + 688) = a9;
  *(void *)(a2 + 696) = a10;
  *(void *)(a2 + 704) = v15;
  *(void *)(a2 + 728) = v15;
  *(void *)(a2 + 736) = a5;
  *(void *)(a2 + 744) = v16;
  *(_DWORD *)(a2 + 752) = v13;
  *(_DWORD *)(a2 + 756) = v14;
  *(unsigned char *)a5 = *(_DWORD *)(a5 + 1428264) + *(_DWORD *)(a4 + 72) + 26;
  uint64_t v19 = (unsigned int *)(*(void *)(*(void *)(a5 + 1312) + 48) + 12 * a6);
  *uint64_t v19 = (63 * *(_DWORD *)(a2 + 156)) >> 6;
  v19[1] = 1;
  *(_DWORD *)(a5 + 4) = 0;
  *(_DWORD *)(a5 + 8) = 0;
  int v20 = *(_DWORD *)(a5 + 1425560);
  if (*(unsigned char *)(a5 + 1161))
  {
    int v21 = v20 % (2 * v13) / 2;
    if (*(unsigned __int8 *)(a5 + 1007) + 2 * (v20 / (2 * v13)) == 1) {
      int v22 = *(_DWORD *)(a5 + 1425560) & 1;
    }
    else {
      int v22 = 0;
    }
  }
  else
  {
    int v22 = v20 / v13;
    int v21 = v20 % v13;
  }
  *(_DWORD *)(a5 + 40) = v21;
  *(_DWORD *)(a5 + 44) = v13 - 1;
  *(_DWORD *)(a5 + 48) = v22;
  *(_DWORD *)(a5 + 52) = v14;
  *(_DWORD *)(a5 + 56) = v20;
  *(_OWORD *)(a2 + 796) = 0u;
  *(_OWORD *)(a2 + 768) = 0u;
  *(_OWORD *)(a2 + 784) = 0u;
  if (v22)
  {
    *(_DWORD *)(a2 + 772) = v22;
    *(_DWORD *)(a2 + 780) = v22;
    *(_DWORD *)(a2 + 788) = v22;
    *(_DWORD *)(a2 + 796) = v22;
  }
  *(_DWORD *)(a2 + 800) = *(_DWORD *)(a2 + 16);
  uint64_t v23 = a1 + 5041656;
  *(void *)(*(void *)(a1 + 5041656) + 824) = sub_221A34290(1, 0);
  if (a11) {
    *a11 = 1;
  }
  sub_221A3380C(a2 + 576);
  if (a9) {
    *a9 = *(_DWORD *)(a5 + 4) == 0;
  }
  if (a10) {
    *a10 = *(_DWORD *)(a5 + 8) == 0;
  }
  sub_221A342F0(*(NSObject ***)(*(void *)v23 + 824));
  *(void *)(*(void *)v23 + 824) = 0;
}

uint64_t sub_221A02E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, int *a7, _DWORD *a8, _DWORD *a9, unsigned __int8 a10, int a11)
{
  v132[1] = *MEMORY[0x263EF8340];
  uint64_t v11 = a4 + 1425504;
  unint64_t v131 = -1;
  v132[0] = -1;
  int v12 = *(_DWORD *)(a4 + 1425564);
  BOOL v13 = v12 == 6 || v12 == 1;
  if (!v13 || *(unsigned char *)(a4 + 1164) || *(unsigned char *)(a2 + 1337) || *(unsigned char *)(a4 + 1425576)) {
    return 4294958327;
  }
  int v107 = 0;
  int v108 = 0;
  int v116 = 0;
  int v110 = 0;
  int v17 = 0;
  uint64_t v18 = (int *)(a4 + 976);
  int v19 = *(_DWORD *)(a1 + 4);
  int v20 = *(_DWORD *)(a1 + 16) * v19;
  int v126 = v19;
  int v127 = *(_DWORD *)(a4 + 1428264) + *(_DWORD *)(a3 + 72) + 26;
  int v21 = (unsigned int *)(*(void *)(*(void *)(a4 + 1312) + 48) + 12 * a5);
  int v112 = 2 * v19;
  uint64_t v123 = a6;
  uint64_t v125 = *(unsigned char **)(a4 + 1016);
  int v114 = *(unsigned __int8 *)(a4 + 1425540);
  uint64_t v113 = *(void *)(a4 + 1425520);
  BOOL v23 = (a10 & 0xFD) == 1 && a11 != 0;
  BOOL v109 = v23;
  int v111 = (_DWORD *)(a4 + 1458280);
  __int16 v118 = a5;
  unsigned int v120 = (unsigned __int16)a5;
  int v24 = *(_DWORD *)(a4 + 1425560);
  uint64_t v122 = a4 + 1458264;
  *int v21 = (63 * *(_DWORD *)(a1 + 156)) >> 6;
  v21[1] = 1;
  uint64_t v128 = a4 + 976;
  do
  {
    **(_DWORD **)(a4 + 1152) = v24;
    *(_DWORD *)(a4 + 992) = v24;
    if (v24 >= v20
      || (*(unsigned char *)(a4 + 1004) - 2) < 8u && ((0xA5u >> (*(unsigned char *)(a4 + 1004) - 2)) & 1) != 0)
    {
      return 4294958327;
    }
    uint64_t v26 = *(void *)(v11 + 16);
    int v25 = *(unsigned int **)(v11 + 24);
    int v27 = *(_DWORD *)(v11 + 32);
    uint64_t v28 = *(unsigned __int8 *)(v11 + 36);
    unsigned int v29 = __clz(v27 | 1);
    if (!v27) {
      ++v29;
    }
    if (v29 > 0xC)
    {
      unint64_t v36 = v28 + 1;
      int v37 = (v28 + 1) & 7;
      unsigned int v38 = (unsigned int *)(v26 + (v36 >> 3));
      unsigned int v39 = bswap32(*v38) << v37;
      if (v38 <= v25) {
        uint64_t v40 = v38;
      }
      else {
        uint64_t v40 = *(unsigned int **)(v11 + 24);
      }
      if (v27 < 0)
      {
        unsigned int v44 = 0;
      }
      else
      {
        unsigned int v41 = 0;
        do
        {
          unsigned int v42 = v39;
          char v43 = v37;
          unsigned int v44 = v41 + 1;
          unint64_t v45 = (v37 + 1);
          int v37 = ((_BYTE)v37 + 1) & 7;
          uint64_t v40 = (unsigned int *)((char *)v40 + (v45 >> 3));
          unsigned int v39 = bswap32(*v40) << (v45 & 7);
          if (v40 > v25) {
            uint64_t v40 = *(unsigned int **)(v11 + 24);
          }
          if ((v42 & 0x80000000) != 0) {
            break;
          }
        }
        while (v41++ < 0x1F);
        if (v44 - 1 > 0x17)
        {
          unsigned int v47 = v39 >> (48 - v44);
          unsigned int v48 = ((v43 + 1) & 7) + v44;
          unint64_t v49 = v48 - 16;
          char v33 = v48 & 7;
          uint64_t v50 = (unsigned int *)((char *)v40 + (v49 >> 3));
          unsigned int v51 = bswap32(*v50) << v33;
          if (v50 <= v25) {
            unsigned __int8 v52 = v50;
          }
          else {
            unsigned __int8 v52 = *(unsigned int **)(v11 + 24);
          }
          unsigned int v54 = *(unsigned int *)((char *)v52 + 2);
          unsigned __int8 v53 = (unsigned int *)((char *)v52 + 2);
          unsigned int v35 = bswap32(v54) << v33;
          if (v53 <= v25) {
            int v25 = v53;
          }
          int v55 = __PAIR64__(v47, v51) >> 16;
LABEL_49:
          unsigned int v31 = v55 + ~(-1 << v44);
          goto LABEL_50;
        }
      }
      int v55 = v39 >> -(char)v44;
      unint64_t v56 = v44 + v37;
      char v33 = (v44 + v37) & 7;
      long long v57 = (unsigned int *)((char *)v40 + (v56 >> 3));
      unsigned int v35 = bswap32(*v57) << v33;
      if (v57 <= v25) {
        int v25 = v57;
      }
      goto LABEL_49;
    }
    unsigned int v30 = (v27 << (v29 + 1)) >> -(char)v29;
    if (!v29) {
      unsigned int v30 = 0;
    }
    unsigned int v31 = v30 + ~(-1 << v29);
    unint64_t v32 = v28 + 2 * v29 + 1;
    char v33 = v32 & 7;
    uint64_t v34 = (unsigned int *)(v26 + (v32 >> 3));
    unsigned int v35 = bswap32(*v34) << (v32 & 7);
    if (v34 <= v25) {
      int v25 = v34;
    }
LABEL_50:
    *(void *)(v11 + 16) = v25;
    *(_DWORD *)(v11 + 32) = v35;
    *(unsigned char *)(v11 + 36) = v33;
    if ((int)(v31 + v24) > v20) {
      return 4294958327;
    }
    BOOL v58 = sub_2219F3948(v11);
    BOOL v124 = !v58;
    if (v58 + v31)
    {
      int v59 = v58 + v31 - 1;
      int v115 = v20;
      while (1)
      {
        **(_DWORD **)(a4 + 1152) = v24;
        *(_DWORD *)(a4 + 992) = v24;
        if (v24 >= v20) {
          return 4294958327;
        }
        if (*(unsigned char *)(a4 + 1161))
        {
          int v60 = v24 % v112 / 2;
          if (*(unsigned __int8 *)(a4 + 1007) + 2 * (v24 / v112) == 1) {
            int v61 = v24 & 1;
          }
          else {
            int v61 = 0;
          }
        }
        else
        {
          int v61 = v24 / v126;
          int v60 = v24 % v126;
        }
        *(_DWORD *)(a4 + 976) = v60;
        *(_DWORD *)(a4 + 980) = v61;
        uint64_t v62 = *(void *)(v122 + 8 * !(v61 & 1));
        *(void *)(v11 + 32752) = v62;
        *(void *)(v11 + 32744) = *(void *)(v122 + 8 * (v61 & 1));
        *(void *)(a4 + 1152) = v62 + 400 * v60;
        *(void *)(*(void *)(v11 + 32752) + 400 * v60 + 112) = sub_221A15AE4(*(void *)(*(void *)(*(void *)(a4 + 1192) + 1152)
                                                                                            + 8 * v123));
        sub_221A12FA8(*(_DWORD *)(v11 + 56), *(void *)(v11 + 32744), *(void *)(v11 + 32752), v18);
        if (v59 | v124)
        {
          sub_221A14358(*(void *)(a4 + 1016), *(void *)(a4 + 1024), *(unsigned __int8 *)(a4 + 1007));
          *(unsigned char *)(*(void *)(a4 + 1152) + 126) = *(unsigned char *)(*(void *)(a4 + 1024) + 272);
          uint64_t result = sub_221914ED8((uint64_t)v18, v63, v64);
          if (result) {
            return result;
          }
          if (*(unsigned char *)(a4 + 1007)
            || (uint64_t v73 = *(void *)(a4 + 1024), *(unsigned char *)(v73 + 272) != 1)
            || (int16x8_t v74 = *(_DWORD **)(*(void *)(a4 + 1152) + 112),
                int v75 = *(unsigned __int8 *)(v73 + 24),
                int v76 = *(unsigned __int8 *)(v73 + 25),
                v75 != 32)
            && *v74
            || v76 != 32 && v74[1]
            || *(_DWORD *)(v73 + 356)
            || *(_DWORD *)(v73 + 360))
          {
            if (v17)
            {
              uint64_t result = sub_2219F9708((uint64_t)v18, (unsigned int *)v132, (unsigned int *)&v131, v130);
              if (result) {
                return result;
              }
            }
            uint64_t result = sub_221A133F4((uint64_t)v18, v65, v66, v67, v68, v69, v70, v71, v72);
            if (result) {
              return result;
            }
            int v77 = 0;
            int v17 = 0;
            unsigned int v78 = 0;
            goto LABEL_73;
          }
          if (v17)
          {
            if (v75 == v108 && v76 == v107)
            {
              int v77 = 0;
              uint64_t v104 = v18;
              unsigned int v78 = 0;
              ++v17;
              unint64_t v131 = *(void *)v104;
LABEL_73:
              int v116 = 1;
              goto LABEL_96;
            }
            uint64_t result = sub_2219F9708((uint64_t)v18, (unsigned int *)v132, (unsigned int *)&v131, v130);
            if (result) {
              return result;
            }
          }
          int v77 = 0;
          unsigned int v78 = 0;
          v130[0] = v75;
          v130[1] = v76;
          unsigned int v105 = *(_DWORD *)(a4 + 980);
          LODWORD(v132[0]) = *(_DWORD *)(a4 + 976);
          HIDWORD(v132[0]) = v105;
          unint64_t v131 = __PAIR64__(v105, v132[0]);
          int v116 = 1;
          int v107 = v76;
          int v108 = v75;
          int v17 = 1;
        }
        else
        {
          if (v17)
          {
            uint64_t result = sub_2219F9708((uint64_t)v18, (unsigned int *)v132, (unsigned int *)&v131, v130);
            if (result) {
              return result;
            }
          }
          if ((a10 & 0xFD) == 1)
          {
            int v79 = a10;
            int v80 = a11;
          }
          else
          {
            int v79 = 0;
            int v80 = 0;
          }
          uint64_t result = sub_221A18574(v11, (uint64_t)v18, v79, v80);
          if (result) {
            return result;
          }
          if (*(void *)(v11 + 16) - *(void *)v11 > *(int *)(v11 + 12) || (v125[54] - 26) < 0xCCu) {
            return 4294958327;
          }
          int v127 = (char)v125[54]
               + (char)v127
               + 52
               - 52
               * (((20165 * ((char)v125[54] + (char)v127 + 52)) >> 20)
                + ((20165 * ((char)v125[54] + (char)v127 + 52)) >> 31));
          v125[55] = v127;
          if (v125[1] - 2 >= 4)
          {
            if (v125[1]) {
              return 4294958327;
            }
            if (v125[2] == 25)
            {
              uint64_t result = sub_221A134D4((uint64_t)v18);
            }
            else if (v109)
            {
              uint64_t result = sub_22190FE30((unint64_t)v18, *(double *)v81.i64, v82, v83, v84, v85, v86, v87);
            }
            else
            {
              uint64_t result = sub_22190FB48((unint64_t)v18, (int32x4_t)v81, v82, v83, v84, v85, v86, v87);
            }
            if (result) {
              return result;
            }
          }
          else
          {
            uint64_t result = sub_221914ED8((uint64_t)v18, v81, (int16x8_t)v82);
            if (result) {
              return result;
            }
            int v129 = 0;
            uint64_t result = sub_221A131E8(v18, &v129, v88, v89, v90, v91, v92, v93, v94, v95);
            if (result) {
              return result;
            }
            if (v129) {
              sub_2219E4EEC(*(void *)(a4 + 1312), v60, v61, (int8x16_t *)(*(void *)(a4 + 1152) + 80));
            }
            int v116 = 1;
          }
          int v17 = 0;
          int v77 = *(unsigned __int8 *)(v11 + 36) - v114 + 8 * (*(void *)(v11 + 16) - v113);
          unsigned int v78 = -1;
          int v110 = 1;
          uint64_t v113 = *(void *)(v11 + 16);
          int v114 = *(unsigned __int8 *)(v11 + 36);
        }
LABEL_96:
        if (*(unsigned char *)(a1 + 544)) {
          sub_2219F8D4C(v111, v128, v77);
        }
        if (*(_DWORD *)(*(void *)(a4 + 1192) + 1164) <= *(_DWORD *)(a4 + 992)) {
          return 4294958327;
        }
        sub_221A13094(v128, a6);
        if (v125[1] || v125[2] != 25)
        {
          unsigned int v96 = (char)v127;
          char v97 = sub_221A25064((char)v127, *(char *)(*(void *)(a4 + 1016) + 56));
          char v98 = sub_221A25064((char)v127, *(char *)(*(void *)(a4 + 1016) + 57));
        }
        else
        {
          unsigned int v96 = 0;
          char v97 = 0;
          char v98 = 0;
        }
        uint64_t v99 = *(void *)(a4 + 1312);
        char v100 = *(unsigned char *)(*(void *)(a4 + 1016) + 3);
        char v101 = *(unsigned char *)(a4 + 1007);
        unsigned int v102 = *(_DWORD *)(a4 + 976) + *(_DWORD *)(v99 + 12) * *(_DWORD *)(a4 + 980);
        *(_WORD *)(*(void *)(v99 + 72) + 2 * v102) = v118;
        *(unsigned char *)(*(void *)(v99 + 112) + v102) = v96;
        *(unsigned char *)(*(void *)(v99 + 120) + v102) = v97;
        *(unsigned char *)(*(void *)(v99 + 128) + v102) = v98;
        *(unsigned char *)(*(void *)(v99 + 136) + v102) = v100;
        *(unsigned char *)(*(void *)(v99 + 144) + v102) = v101;
        *(int32x2_t *)(*(void *)(v99 + 48) + 12 * v120) = vadd_s32(*(int32x2_t *)(*(void *)(v99 + 48) + 12 * v120), (int32x2_t)vand_s8((int8x8_t)(v96 | 0x100000000), (int8x8_t)vdup_n_s32(v78)));
        if (*(unsigned char *)(a3 + 8)) {
          return 4294958327;
        }
        BOOL v103 = sub_2219F3948(v11);
        *a7 = v24;
        int v24 = sub_221A143A4(v24);
        --v59;
        uint64_t v18 = (int *)v128;
        int v20 = v115;
        if (v59 == -1) {
          goto LABEL_113;
        }
      }
    }
    BOOL v103 = v58;
LABEL_113:
    ;
  }
  while (v103 && v24 < v20);
  if (!v17
    || (uint64_t result = sub_2219F9708((uint64_t)v18, (unsigned int *)v132, (unsigned int *)&v131, v130), !result))
  {
    if (a8) {
      *a8 = v116 == 0;
    }
    uint64_t result = 0;
    if (a9) {
      *a9 = v110 == 0;
    }
  }
  return result;
}

void sub_221A036BC(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, int *a7, _DWORD *a8, _DWORD *a9, char a10, int a11)
{
  v129[1] = *MEMORY[0x263EF8340];
  uint64_t v11 = a4 + 1425504;
  unint64_t v128 = -1;
  v129[0] = -1;
  int v12 = *(_DWORD *)(a4 + 1425564);
  BOOL v13 = v12 == 5 || v12 == 0;
  if (!v13 || *(unsigned char *)(a4 + 1164) || *(unsigned char *)(a2 + 1337) || *(unsigned char *)(a4 + 1425576)) {
    return;
  }
  __int16 v16 = a5;
  int v108 = 0;
  int v109 = 0;
  int v17 = 0;
  int v112 = 0;
  int v124 = 0;
  uint64_t v125 = (int *)(a4 + 976);
  int v18 = a1[1];
  int v19 = a1[4] * v18;
  int v123 = *(_DWORD *)(a4 + 1428264) + *(_DWORD *)(a3 + 72) + 26;
  int v20 = (unsigned int *)(*(void *)(*(void *)(a4 + 1312) + 48) + 12 * a5);
  int v121 = *(unsigned char **)(a4 + 1016);
  int v122 = v18;
  int v113 = 2 * v18;
  BOOL v22 = (a10 & 0xFD) == 1 && a11 != 0;
  BOOL v110 = v22;
  unsigned int v117 = (unsigned __int16)a5;
  int v23 = *(_DWORD *)(a4 + 1425560);
  uint64_t v118 = a4 + 1458264;
  uint64_t v119 = a6;
  *int v20 = (63 * a1[39]) >> 6;
  v20[1] = 1;
  do
  {
    **(_DWORD **)(a4 + 1152) = v23;
    *(_DWORD *)(a4 + 992) = v23;
    if (v23 >= v19
      || (*(unsigned char *)(a4 + 1004) - 2) < 8u && ((0xA5u >> (*(unsigned char *)(a4 + 1004) - 2)) & 1) != 0
      || *(unsigned char *)(a4 + 1164))
    {
      return;
    }
    uint64_t v25 = *(void *)(v11 + 16);
    int v24 = *(unsigned int **)(v11 + 24);
    int v26 = *(_DWORD *)(v11 + 32);
    uint64_t v27 = *(unsigned __int8 *)(v11 + 36);
    unsigned int v28 = __clz(v26 | 1);
    if (!v26) {
      ++v28;
    }
    if (v28 > 0xC)
    {
      unint64_t v35 = v27 + 1;
      int v36 = (v27 + 1) & 7;
      int v37 = (unsigned int *)(v25 + (v35 >> 3));
      unsigned int v38 = bswap32(*v37) << v36;
      if (v37 <= v24) {
        unsigned int v39 = v37;
      }
      else {
        unsigned int v39 = *(unsigned int **)(v11 + 24);
      }
      if (v26 < 0)
      {
        unsigned int v43 = 0;
      }
      else
      {
        unsigned int v40 = 0;
        do
        {
          unsigned int v41 = v38;
          char v42 = v36;
          unsigned int v43 = v40 + 1;
          unint64_t v44 = (v36 + 1);
          int v36 = ((_BYTE)v36 + 1) & 7;
          unsigned int v39 = (unsigned int *)((char *)v39 + (v44 >> 3));
          unsigned int v38 = bswap32(*v39) << (v44 & 7);
          if (v39 > v24) {
            unsigned int v39 = *(unsigned int **)(v11 + 24);
          }
          if ((v41 & 0x80000000) != 0) {
            break;
          }
        }
        while (v40++ < 0x1F);
        if (v43 - 1 > 0x17)
        {
          unsigned int v46 = v38 >> (48 - v43);
          unsigned int v47 = ((v42 + 1) & 7) + v43;
          unint64_t v48 = v47 - 16;
          char v32 = v47 & 7;
          unint64_t v49 = (unsigned int *)((char *)v39 + (v48 >> 3));
          unsigned int v50 = bswap32(*v49) << v32;
          if (v49 <= v24) {
            unsigned int v51 = v49;
          }
          else {
            unsigned int v51 = *(unsigned int **)(v11 + 24);
          }
          unsigned int v53 = *(unsigned int *)((char *)v51 + 2);
          unsigned __int8 v52 = (unsigned int *)((char *)v51 + 2);
          unsigned int v34 = bswap32(v53) << v32;
          if (v52 <= v24) {
            int v24 = v52;
          }
          int v54 = __PAIR64__(v46, v50) >> 16;
LABEL_49:
          unsigned int v30 = v54 + ~(-1 << v43);
          goto LABEL_50;
        }
      }
      int v54 = v38 >> -(char)v43;
      unint64_t v55 = v43 + v36;
      char v32 = (v43 + v36) & 7;
      unint64_t v56 = (unsigned int *)((char *)v39 + (v55 >> 3));
      unsigned int v34 = bswap32(*v56) << v32;
      if (v56 <= v24) {
        int v24 = v56;
      }
      goto LABEL_49;
    }
    unsigned int v29 = (v26 << (v28 + 1)) >> -(char)v28;
    if (!v28) {
      unsigned int v29 = 0;
    }
    unsigned int v30 = v29 + ~(-1 << v28);
    unint64_t v31 = v27 + 2 * v28 + 1;
    char v32 = v31 & 7;
    char v33 = (unsigned int *)(v25 + (v31 >> 3));
    unsigned int v34 = bswap32(*v33) << (v31 & 7);
    if (v33 <= v24) {
      int v24 = v33;
    }
LABEL_50:
    *(void *)(v11 + 16) = v24;
    *(_DWORD *)(v11 + 32) = v34;
    *(unsigned char *)(v11 + 36) = v32;
    if ((int)(v30 + v23) > v19) {
      return;
    }
    BOOL v57 = sub_2219F3948(v11);
    BOOL v120 = !v57;
    if (v57 + v30)
    {
      int v58 = v57 + v30 - 1;
      int v111 = a7;
      int v114 = v19;
      while (1)
      {
        **(_DWORD **)(a4 + 1152) = v23;
        *(_DWORD *)(a4 + 992) = v23;
        if (v23 >= v19) {
          return;
        }
        if (*(unsigned char *)(a4 + 1161))
        {
          int v59 = v23 % v113 / 2;
          if (*(unsigned __int8 *)(a4 + 1007) + 2 * (v23 / v113) == 1) {
            int v60 = v23 & 1;
          }
          else {
            int v60 = 0;
          }
        }
        else
        {
          int v60 = v23 / v122;
          int v59 = v23 % v122;
        }
        *(_DWORD *)(a4 + 976) = v59;
        *(_DWORD *)(a4 + 980) = v60;
        uint64_t v61 = *(void *)(v118 + 8 * !(v60 & 1));
        *(void *)(v11 + 32752) = v61;
        *(void *)(v11 + 32744) = *(void *)(v118 + 8 * (v60 & 1));
        *(void *)(a4 + 1152) = v61 + 400 * v59;
        *(void *)(*(void *)(v11 + 32752) + 400 * v59 + 112) = sub_221A15AE4(*(void *)(*(void *)(*(void *)(a4 + 1192) + 1152)
                                                                                            + 8 * v119));
        sub_221A12FA8(*(_DWORD *)(v11 + 56), *(void *)(v11 + 32744), *(void *)(v11 + 32752), v125);
        if (v58 | v120)
        {
          if (sub_221A14328(*(void *)(a4 + 1016), *(void *)(a4 + 1024))) {
            return;
          }
          *(unsigned char *)(*(void *)(a4 + 1152) + 126) = *(unsigned char *)(*(void *)(a4 + 1024) + 272);
          *(void *)&double v64 = sub_221918458((uint64_t)v125, v62, v63).u64[0];
          if (v72) {
            return;
          }
          if (*(unsigned char *)(a4 + 1007)
            || (uint64_t v73 = *(void *)(a4 + 1024), *(unsigned char *)(v73 + 272) != 1)
            || (int16x8_t v74 = *(_DWORD **)(*(void *)(a4 + 1152) + 112),
                int v75 = *(unsigned __int8 *)(v73 + 24),
                int v76 = *(unsigned __int8 *)(v73 + 25),
                v75 != 32)
            && *v74
            || v76 != 32 && v74[1]
            || *(_DWORD *)(v73 + 356)
            || *(_DWORD *)(v73 + 360))
          {
            uint64_t v77 = (uint64_t)v125;
            if (v124 && sub_2219F9708((uint64_t)v125, (unsigned int *)v129, (unsigned int *)&v128, v127)
              || sub_221A133F4((uint64_t)v125, v64, v65, v66, v67, v68, v69, v70, v71))
            {
              return;
            }
            int v78 = 0;
            int v79 = 0;
          }
          else
          {
            if (!v124) {
              goto LABEL_107;
            }
            if (v75 != v109 || v76 != v108)
            {
              if (sub_2219F9708((uint64_t)v125, (unsigned int *)v129, (unsigned int *)&v128, v127)) {
                return;
              }
LABEL_107:
              int v79 = 0;
              v127[0] = v75;
              v127[1] = v76;
              unsigned int v106 = *(_DWORD *)(a4 + 980);
              LODWORD(v129[0]) = *(_DWORD *)(a4 + 976);
              HIDWORD(v129[0]) = v106;
              unint64_t v128 = __PAIR64__(v106, v129[0]);
              int v17 = 1;
              int v108 = v76;
              int v109 = v75;
              int v78 = 1;
              uint64_t v77 = (uint64_t)v125;
              goto LABEL_94;
            }
            int v79 = 0;
            int v78 = v124 + 1;
            uint64_t v77 = (uint64_t)v125;
            unint64_t v128 = *(void *)v125;
          }
          int v17 = 1;
        }
        else
        {
          if (v124 && sub_2219F9708((uint64_t)v125, (unsigned int *)v129, (unsigned int *)&v128, v127)
            || sub_221A198CC(v11, (uint64_t)v125, 0, 0)
            || *(void *)(v11 + 16) - *(void *)v11 > *(int *)(v11 + 12)
            || (v121[54] - 26) < 0xCCu)
          {
            return;
          }
          int v123 = (char)v121[54]
               + (char)v123
               + 52
               - 52
               * (((20165 * ((char)v121[54] + (char)v123 + 52)) >> 20)
                + ((20165 * ((char)v121[54] + (char)v123 + 52)) >> 31));
          v121[55] = v123;
          if (v121[1] - 2 >= 4)
          {
            if (v121[1]) {
              return;
            }
            if (v121[2] == 25)
            {
              uint64_t v77 = (uint64_t)v125;
              int v96 = sub_221A134D4((uint64_t)v125);
              a7 = v111;
            }
            else
            {
              uint64_t v77 = (uint64_t)v125;
              a7 = v111;
              int v96 = v110
                  ? sub_22190FE30((unint64_t)v125, *(double *)v80.i64, v81, v82, v83, v84, v85, v86)
                  : sub_22190FB48((unint64_t)v125, (int32x4_t)v80, v81, v82, v83, v84, v85, v86);
            }
            if (v96) {
              return;
            }
            int v78 = 0;
            int v79 = -1;
            int v112 = 1;
          }
          else
          {
            *(void *)&double v87 = sub_221918458((uint64_t)v125, v80, (int16x8_t)v81).u64[0];
            if (v95) {
              return;
            }
            int v126 = 0;
            if (sub_221A131E8(v125, &v126, v87, v88, v89, v90, v91, v92, v93, v94)) {
              return;
            }
            if (v126) {
              sub_2219E4EEC(*(void *)(a4 + 1312), v59, v60, (int8x16_t *)(*(void *)(a4 + 1152) + 80));
            }
            int v78 = 0;
            int v79 = -1;
            int v17 = 1;
            int v112 = 1;
            uint64_t v77 = (uint64_t)v125;
            a7 = v111;
          }
        }
LABEL_94:
        if (*(_DWORD *)(*(void *)(a4 + 1192) + 1164) <= *(_DWORD *)(a4 + 992)) {
          return;
        }
        unsigned int v97 = v79;
        int v124 = v78;
        sub_221A13094(v77, a6);
        if (v121[1] || v121[2] != 25)
        {
          unsigned int v98 = (char)v123;
          char v99 = sub_221A25064((char)v123, *(char *)(*(void *)(a4 + 1016) + 56));
          char v100 = sub_221A25064((char)v123, *(char *)(*(void *)(a4 + 1016) + 57));
        }
        else
        {
          unsigned int v98 = 0;
          char v99 = 0;
          char v100 = 0;
        }
        uint64_t v101 = *(void *)(a4 + 1312);
        char v102 = *(unsigned char *)(*(void *)(a4 + 1016) + 3);
        char v103 = *(unsigned char *)(a4 + 1007);
        unsigned int v104 = *(_DWORD *)(a4 + 976) + *(_DWORD *)(v101 + 12) * *(_DWORD *)(a4 + 980);
        *(_WORD *)(*(void *)(v101 + 72) + 2 * v104) = v16;
        *(unsigned char *)(*(void *)(v101 + 112) + v104) = v98;
        *(unsigned char *)(*(void *)(v101 + 120) + v104) = v99;
        *(unsigned char *)(*(void *)(v101 + 128) + v104) = v100;
        *(unsigned char *)(*(void *)(v101 + 136) + v104) = v102;
        *(unsigned char *)(*(void *)(v101 + 144) + v104) = v103;
        *(int32x2_t *)(*(void *)(v101 + 48) + 12 * v117) = vadd_s32(*(int32x2_t *)(*(void *)(v101 + 48) + 12 * v117), (int32x2_t)vand_s8((int8x8_t)(v98 | 0x100000000), (int8x8_t)vdup_n_s32(v97)));
        if (*(unsigned char *)(a3 + 8)) {
          return;
        }
        BOOL v105 = sub_2219F3948(v11);
        *a7 = v23;
        int v23 = sub_221A143A4(v23);
        --v58;
        int v19 = v114;
        if (v58 == -1) {
          goto LABEL_109;
        }
      }
    }
    BOOL v105 = v57;
LABEL_109:
    ;
  }
  while (v105 && v23 < v19);
  if (!v124 || !sub_2219F9708((uint64_t)v125, (unsigned int *)v129, (unsigned int *)&v128, v127))
  {
    if (a8) {
      *a8 = v17 == 0;
    }
    if (a9) {
      *a9 = v112 == 0;
    }
  }
}

uint64_t sub_221A03F44(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, int *a7, _DWORD *a8, _DWORD *a9, unsigned __int8 a10, int a11)
{
  uint64_t v11 = a4 + 1425504;
  int v12 = *(_DWORD *)(a4 + 1425564);
  BOOL v13 = v12 == 7 || v12 == 2;
  if (v13 && !*(unsigned char *)(a4 + 1164) && !*(unsigned char *)(a2 + 1337) && !*(unsigned char *)(a4 + 1425576))
  {
    __int16 v18 = a5;
    int v19 = (int *)(a4 + 976);
    int v58 = *(unsigned char **)(a4 + 1016);
    int v20 = a1[1];
    int v21 = a1[4] * v20;
    int v56 = v20;
    int v57 = *(_DWORD *)(a4 + 1428264) + *(_DWORD *)(a3 + 72) + 26;
    BOOL v22 = (unsigned int *)(*(void *)(*(void *)(a4 + 1312) + 48) + 12 * a5);
    int v51 = 2 * v20;
    uint64_t v55 = a6;
    int v23 = *(_DWORD *)(a4 + 1425560);
    BOOL v25 = (a10 & 0xFD) == 1 && a11 != 0;
    BOOL v50 = v25;
    unsigned int v52 = (unsigned __int16)a5;
    unsigned int *v22 = (63 * a1[39]) >> 6;
    v22[1] = 1;
    uint64_t v54 = a4 + 1458264;
    int v53 = v21;
    unint64_t v49 = (int *)(a4 + 976);
    while (1)
    {
      **(_DWORD **)(a4 + 1152) = v23;
      *(_DWORD *)(a4 + 992) = v23;
      if (v23 >= v21) {
        break;
      }
      **(_DWORD **)(a4 + 1152) = v23;
      *(_DWORD *)(a4 + 992) = v23;
      if (*(unsigned char *)(a4 + 1161))
      {
        int v26 = v23 % v51 / 2;
        if (*(unsigned __int8 *)(a4 + 1007) + 2 * (v23 / v51) == 1) {
          int v27 = v23 & 1;
        }
        else {
          int v27 = 0;
        }
      }
      else
      {
        int v27 = v23 / v56;
        int v26 = v23 % v56;
      }
      *(_DWORD *)(a4 + 976) = v26;
      *(_DWORD *)(a4 + 980) = v27;
      unsigned int v28 = v27 & 1;
      uint64_t v29 = *(void *)(v54 + 8 * (v28 ^ 1));
      *(void *)(v11 + 32752) = v29;
      *(void *)(v11 + 32744) = *(void *)(v54 + 8 * v28);
      *(void *)(a4 + 1152) = v29 + 400 * v26;
      *(void *)(*(void *)(v11 + 32752) + 400 * v26 + 112) = sub_221A15AE4(*(void *)(*(void *)(*(void *)(a4 + 1192) + 1152)
                                                                                          + 8 * v55));
      sub_221A12FA8(*(_DWORD *)(v11 + 56), *(void *)(v11 + 32744), *(void *)(v11 + 32752), v19);
      uint64_t result = sub_221A1A5C0(v11, (uint64_t)v19, a10, a11);
      if (result) {
        return result;
      }
      if (*(void *)(v11 + 16) - *(void *)v11 > *(int *)(v11 + 12)) {
        return 4294958327;
      }
      if ((v58[54] - 26) < 0xCCu) {
        return 4294958327;
      }
      int v37 = (char)v58[54] + (char)v57 + 52;
      unsigned int v38 = v37 - 52 * (((20165 * v37) >> 20) + ((20165 * v37) >> 31));
      v58[55] = v37 - 52 * (((20165 * v37) >> 20) + (20165 * v37 < 0));
      if (v58[1]) {
        return 4294958327;
      }
      if (v58[2] == 25) {
        uint64_t result = sub_221A134D4((uint64_t)v19);
      }
      else {
        uint64_t result = v50
      }
               ? sub_22190FE30((unint64_t)v19, *(double *)v30.i64, v31, v32, v33, v34, v35, v36)
               : sub_22190FB48((unint64_t)v19, v30, v31, v32, v33, v34, v35, v36);
      if (result) {
        return result;
      }
      if (*(_DWORD *)(*(void *)(a4 + 1192) + 1164) <= *(_DWORD *)(a4 + 992)) {
        return 4294958327;
      }
      sub_221A13094((uint64_t)v19, a6);
      if (v58[1]) {
        return 4294958327;
      }
      unsigned int v39 = (__int16)v38;
      LOBYTE(v57) = v38;
      if (v58[2] == 25)
      {
        unsigned int v39 = 0;
        char v40 = 0;
        char v41 = 0;
      }
      else
      {
        char v40 = sub_221A25064((char)v38, *(char *)(*(void *)(a4 + 1016) + 56));
        int v19 = v49;
        char v41 = sub_221A25064((char)v39, *(char *)(*(void *)(a4 + 1016) + 57));
      }
      uint64_t v42 = *(void *)(a4 + 1312);
      char v43 = *(unsigned char *)(*(void *)(a4 + 1016) + 3);
      char v44 = *(unsigned char *)(a4 + 1007);
      unsigned int v45 = *(_DWORD *)(a4 + 976) + *(_DWORD *)(v42 + 12) * *(_DWORD *)(a4 + 980);
      *(_WORD *)(*(void *)(v42 + 72) + 2 * v45) = v18;
      *(unsigned char *)(*(void *)(v42 + 112) + v45) = v39;
      *(unsigned char *)(*(void *)(v42 + 120) + v45) = v40;
      *(unsigned char *)(*(void *)(v42 + 128) + v45) = v41;
      *(unsigned char *)(*(void *)(v42 + 136) + v45) = v43;
      *(unsigned char *)(*(void *)(v42 + 144) + v45) = v44;
      *(int32x2_t *)(*(void *)(v42 + 48) + 12 * v52) = vadd_s32(*(int32x2_t *)(*(void *)(v42 + 48) + 12 * v52), (int32x2_t)(v39 | 0x100000000));
      BOOL v46 = sub_2219F3948(v11);
      *a7 = v23;
      int v47 = sub_221A143A4(v23);
      int v21 = v53;
      if (v46)
      {
        int v23 = v47;
        if (v47 < v53) {
          continue;
        }
      }
      if (a8) {
        *a8 = 1;
      }
      uint64_t result = 0;
      if (a9) {
        *a9 = 0;
      }
      return result;
    }
  }
  return 4294958327;
}

uint64_t sub_221A0433C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v9 = *(_DWORD *)(a1 + 4);
  uint64_t v10 = (*(_DWORD *)(a1 + 16) * v9);
  uint64_t v11 = (int *)sub_221A12A5C((void *)(4 * (int)v10));
  int v12 = (int *)sub_221A12A5C((void *)(4 * (int)v10));
  BOOL v13 = sub_221A12A5C((void *)(4 * (int)v10));
  *(unsigned char *)(a5 + 3) = 1;
  *uint64_t v11 = 0;
  *int v12 = v10 - 1;
  BOOL v46 = v13;
  bzero(v13, 4 * (int)v10);
  if (a2 < 1)
  {
    int v15 = 1;
  }
  else
  {
    uint64_t v14 = 0;
    int v15 = 1;
    do
    {
      uint64_t v16 = a3 + 80 * v14;
      int v17 = *(_DWORD *)(v16 + 8);
      int v18 = *(_DWORD *)(v16 + 4) & ~(*(int *)(v16 + 4) >> 31);
      if (v18 >= (int)v10) {
        int v18 = v10 - 1;
      }
      if (v17 <= v18) {
        int v19 = v18;
      }
      else {
        int v19 = v17;
      }
      if (v19 >= (int)v10) {
        int v20 = v10 - 1;
      }
      else {
        int v20 = v19;
      }
      if (v15 >= 1)
      {
        uint64_t v21 = v15;
        BOOL v22 = v11;
        int v23 = v12;
        while (1)
        {
          int v24 = *v22;
          int v25 = *v23;
          if (*v22 <= v18 && v25 >= v20) {
            break;
          }
          ++v23;
          ++v22;
          if (!--v21) {
            goto LABEL_36;
          }
        }
        if (v24 == v18 && v25 == v20)
        {
          int *v22 = -1;
          *int v23 = -1;
        }
        else if (v24 != v18 || v25 <= v20)
        {
          if (v24 >= v18 || v25 != v20)
          {
            v11[v15] = v20 + 1;
            v12[v15++] = *v23;
          }
          *int v23 = v18 - 1;
        }
        else
        {
          int *v22 = v20 + 1;
        }
      }
LABEL_36:
      ++v14;
    }
    while (v14 != a2);
  }
  int v51 = v10 - 1;
  uint64_t v30 = *(void *)(a1 + 40);
  unsigned int v31 = *(_DWORD *)(v30 + 56) - 1;
  if (v31 >= a2) {
    unsigned int v31 = a2;
  }
  if (a2 <= 0) {
    signed int v32 = 0;
  }
  else {
    signed int v32 = v31;
  }
  *(unsigned char *)(*(void *)(v30 + 48) + 12 * v32 + 9) = 1;
  if (v15 >= 1)
  {
    uint64_t v33 = 0;
    uint64_t v47 = a5 + 32;
    uint64_t v34 = v15;
    uint64_t v49 = v15;
    BOOL v50 = v11;
    do
    {
      uint64_t v35 = v11[v33];
      int v36 = v12[v33];
      if (v35 != -1 && v36 != -1)
      {
        if (v36 >= (int)v10) {
          int v38 = v51;
        }
        else {
          int v38 = v12[v33];
        }
        if (!**(unsigned char **)(*(void *)(a1 + 40) + 144))
        {
          if (a4) {
            sub_22191A954(v11[v33], v38, v9, a4 + 32, v47);
          }
          else {
            sub_22191AAD4(v35, v38, v9, v47);
          }
        }
        uint64_t v52 = (v38 - v35);
        if (v38 >= (int)v35)
        {
          signed int v39 = v35;
          do
          {
            if (*(_DWORD *)(a5 + 1164) > v39) {
              *(void *)(*(void *)(a5 + 1256) + 8 * v39) = *(void *)(a5 + 1232);
            }
            uint64_t v40 = *(void *)(a1 + 40);
            unsigned int v41 = v39 + (*(_DWORD *)(v40 + 12) - v9) * (v39 / v9);
            *(_WORD *)(*(void *)(v40 + 72) + 2 * v41) = v32;
            *(unsigned char *)(*(void *)(v40 + 112) + v41) = 0;
            *(unsigned char *)(*(void *)(v40 + 120) + v41) = 0;
            *(unsigned char *)(*(void *)(v40 + 128) + v41) = 0;
            *(unsigned char *)(*(void *)(v40 + 136) + v41) = 0;
            *(unsigned char *)(*(void *)(v40 + 144) + v41) = 0;
            ++v39;
          }
          while (v38 + 1 != v39);
        }
        uint64_t v42 = v10;
        unsigned int v43 = v38 + 1;
        uint64_t v44 = *(void *)(a1 + 40);
        sub_221A341D0(*(pthread_mutex_t **)(v44 + 160));
        if (v35 < v43) {
          memset((void *)(*(void *)(v44 + 168) + v35), 10, v52 + 1);
        }
        sub_221A341DC(*(pthread_mutex_t **)(v44 + 160));
        uint64_t v10 = v42;
        uint64_t v34 = v49;
        uint64_t v11 = v50;
      }
      ++v33;
    }
    while (v33 != v34);
  }
  j__free(v11);
  j__free(v12);
  j__free(v46);
  return 0;
}

uint64_t sub_221A04670(uint64_t result, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  int v3 = *(_DWORD *)(*(void *)(v2 + 16) + 20) - 1;
  uint64_t v4 = a2;
  uint64_t v5 = (int *)(v2 + 8);
  do
  {
    int v6 = *v5;
    int v7 = *(v5 - 1) & ~(*(v5 - 1) >> 31);
    if (v7 >= v3) {
      int v7 = v3;
    }
    if (v6 <= v7) {
      int v6 = v7;
    }
    if (v6 >= v3) {
      int v6 = v3;
    }
    if ((v7 | v6) >= 0) {
      int v8 = v6 - v7 + 1;
    }
    else {
      int v8 = 0;
    }
    uint64_t result = (v8 + result);
    v5 += 20;
    --v4;
  }
  while (v4);
  return result;
}

uint64_t sub_221A046DC(unsigned int **a1, unsigned int *a2, unsigned int a3, int a4, int a5, uint64_t a6, uint64_t a7, _DWORD *a8, unsigned __int8 a9, int a10, unsigned __int8 a11, char a12, char a13, int a14)
{
  unsigned int v15 = 0;
  uint64_t v16 = 0;
  int v157 = 0;
  unsigned int v17 = -8969;
  if (!a2 || !a1 || (int)a3 < 1 || !a6)
  {
    uint64_t v21 = 0;
    goto LABEL_20;
  }
  uint64_t v21 = 0;
  if (!a7) {
    goto LABEL_20;
  }
  if (!*(void *)(a6 + 40))
  {
    uint64_t v16 = 0;
    uint64_t v21 = 0;
    goto LABEL_15;
  }
  int v155 = a5;
  size_t v24 = 80 * a3;
  int v25 = sub_221A12A5C((void *)v24);
  uint64_t v16 = v25;
  if (!v25)
  {
    uint64_t v21 = 0;
    goto LABEL_17;
  }
  bzero(v25, v24);
  uint64_t v21 = (char *)sub_221A12A5C((void *)(16 * a3));
  if (!v21)
  {
LABEL_17:
    unsigned int v15 = 0;
    goto LABEL_18;
  }
  uint64_t v26 = **(void **)(a6 + 56);
  *(void *)int32x4_t v152 = *(void *)(a6 + 24);
  uint64_t v156 = 0;
  if (*(unsigned char *)(a6 + 544)) {
    sub_2219F8D18(a6 + 164);
  }
  if (*(_DWORD *)(*(void *)(a6 + 40) + 56) < a3)
  {
    unsigned int v15 = 0;
    unsigned int v17 = -666;
LABEL_19:
    a5 = v155;
    goto LABEL_20;
  }
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v151 = a3;
  uint64_t v39 = 8;
  do
  {
    uint64_t v40 = &v16[v36];
    *uint64_t v40 = 0xFFFFFFFF00000000;
    *((_DWORD *)v40 + 2) = -1;
    v40[2] = a6;
    v40[3] = a7;
    unsigned int v41 = a1[v37];
    v40[4] = v41;
    if (!v41) {
      goto LABEL_17;
    }
    *((_DWORD *)v40 + 10) = a2[v37];
    *((_DWORD *)v40 + 11) = v37;
    v40[6] = 0;
    *((unsigned char *)v40 + 56) = a9;
    uint64_t v42 = &v21[v39];
    *((void *)v42 - 1) = sub_221A01F68;
    *(void *)uint64_t v42 = v40;
    ++v37;
    v36 += 10;
    v39 += 16;
  }
  while (10 * a3 != v36);
  uint64_t v38 = v26 + 1425544;
  uint64_t v147 = a7 + 5016960;
  uint64_t v146 = v26;
  int v149 = (unsigned char *)(*(void *)v152 + 146576);
  uint64_t v150 = v26 + 1425572;
  long long v148 = (uint64_t *)(a7 + 5039776);
  unsigned int v43 = *a2;
  uint64_t v44 = v26 + 1425504;
  unsigned int v45 = sub_2219F38D8(*a1, v43, v26 + 1425504);
  if (v45)
  {
LABEL_38:
    unsigned int v17 = v45;
    unsigned int v15 = 0;
    goto LABEL_19;
  }
  if ((a9 & 0xFD) == 1)
  {
    unsigned int v17 = sub_221A22304(v44, *(unsigned int **)v152, (void *)(v26 + 1425544), a9, &v157, 0, (int *)(a6 + 160), a12 != 0, 0);
    int v46 = v157;
  }
  else
  {
    unsigned int v17 = sub_221A22304(v44, *(unsigned int **)v152, (void *)(v26 + 1425544), a9, &v157, 0, 0, a12 != 0, 0);
    int v46 = 0;
    int v157 = 0;
  }
  *(_DWORD *)(a6 + 836) = v46;
  a5 = v155;
  if (v17)
  {
LABEL_15:
    unsigned int v15 = 0;
    goto LABEL_20;
  }
  if (!*(_DWORD *)(v150 + 28))
  {
    unsigned int v45 = sub_2219F39A8(*(unsigned int **)v152, *(_DWORD *)(*(void *)v152 + 146580), &v156);
    if (v45) {
      goto LABEL_38;
    }
    *(_DWORD *)(v16[2] + 552) = a3;
    *(void *)(v16[2] + 560) = *(void *)(a6 + 560);
    *(void *)(v16[2] + 568) = *(void *)(a6 + 568);
    fflush((FILE *)*MEMORY[0x263EF8348]);
    *(_DWORD *)(a7 + 5039796) = 1;
    uint64_t v47 = (uint64_t *)(a6 + 88);
    unsigned int v45 = sub_2219F6388(v156, v38, a7 + 5041520, v147, (uint64_t *)(a6 + 88), v155, a9, v157, 0, a4);
    if (v45) {
      goto LABEL_38;
    }
    if (!*(unsigned char *)(v156 + 1336) && *(unsigned char *)(v156 + 1337) && !*(unsigned char *)(v150 + 4)) {
      *(_DWORD *)(*(void *)(a6 + 40) + 216) = 0;
    }
    uint64_t v48 = *v47;
    if (!*v47) {
      goto LABEL_60;
    }
    int32x4_t v153 = (uint64_t *)(a6 + 88);
    uint64_t v49 = *(void *)(a6 + 40);
    if (*(_DWORD *)(v49 + 216))
    {
      if (*(unsigned char *)(v48 + 34)) {
        uint64_t v48 = *(void *)(v48 + 1352);
      }
      *(void *)(v49 + 176) = *(void *)(v48 + 192);
      *(_DWORD *)(*(void *)(a6 + 40) + 184) = *(_DWORD *)(v48 + 208);
      if (!*(void *)(a6 + 88))
      {
LABEL_60:
        unsigned int v15 = 0;
        goto LABEL_61;
      }
    }
    *a8 = *(unsigned __int8 *)(v150 + 4);
    if (*(unsigned char *)(v150 + 4) == 1) {
      int v50 = 0;
    }
    else {
      int v50 = a11;
    }
    uint64_t v51 = *(void *)(a6 + 40);
    if (a14 <= 0x10000 && v50 && *(int *)(v51 + 184) >= 1)
    {
      *(unsigned char *)(v51 + 224) = 1;
      char v52 = a12;
      *(unsigned char *)(*(void *)(a6 + 40) + 225) = a12;
      char v53 = a13;
      BOOL v54 = a13 == 1;
    }
    else
    {
      BOOL v54 = 0;
      *(unsigned char *)(v51 + 224) = 0;
      *(unsigned char *)(*(void *)(a6 + 40) + 225) = 0;
      char v53 = a13;
      char v52 = a12;
    }
    *(unsigned char *)(*(void *)(a6 + 40) + 226) = v54;
    *(unsigned char *)(*(void *)(a6 + 88) + 1304) = v50;
    *(unsigned char *)(*(void *)(a6 + 88) + 1305) = v52;
    *(unsigned char *)(*(void *)(a6 + 88) + 1306) = v53;
    *(_DWORD *)(*(void *)(a6 + 88) + 1384) = a14;
    int v55 = *(_DWORD *)(*(void *)(a6 + 88) + 132) >> 4;
    int v56 = *(_DWORD *)(a6 + 4) * v55;
    *(_DWORD *)(a6 + 16) = v55;
    *(_DWORD *)(a6 + 20) = v56;
    uint64_t v57 = *(void *)(a6 + 40);
    size_t v58 = *(unsigned int *)(v57 + 20);
    sub_221A341D0(*(pthread_mutex_t **)(v57 + 160));
    if (v58) {
      bzero(*(void **)(v57 + 168), v58);
    }
    sub_221A341DC(*(pthread_mutex_t **)(v57 + 160));
    *(_DWORD *)(*(void *)(a6 + 88) + 1264) = a4;
    sub_221A33B30(*(void *)(a6 + 80), (uint64_t)v21, a3);
    if (v155 == 1)
    {
LABEL_72:
      unsigned int v15 = 0;
    }
    else
    {
      uint64_t v59 = a3;
      int v60 = (unsigned int *)v16;
      while (1)
      {
        unsigned int v61 = *v60;
        v60 += 20;
        unsigned int v15 = v61;
        if (v61) {
          break;
        }
        if (!--v59) {
          goto LABEL_72;
        }
      }
    }
    int v62 = *(unsigned __int8 *)(a6 + 832);
    int v63 = v157;
    BOOL v64 = v62 == 3 && v157 == 0;
    int v65 = v62 | 2;
    if (!v64 && v65 == 3)
    {
      unsigned int v69 = v15;
      unsigned int v70 = v15;
    }
    else
    {
      *(unsigned char *)(*(void *)(a6 + 88) + 1378) = 0;
      unsigned int v67 = sub_221A04670((uint64_t)v16, a3);
      unsigned int v68 = *(_DWORD *)(a6 + 20);
      if (v15 || (unsigned int v69 = 0, v70 = 0, v67 != v68))
      {
        if (v67 > v68)
        {
LABEL_83:
          unsigned int v17 = -8969;
          goto LABEL_19;
        }
        sub_221A0433C(a6, a3, (uint64_t)v16, v148[108], *(void *)(a6 + 88));
        unsigned int v70 = 0;
        if (a4) {
          unsigned int v69 = 0;
        }
        else {
          unsigned int v69 = v15;
        }
        *(unsigned char *)(*(void *)(a6 + 88) + 1378) = 1;
        int v63 = v157;
      }
    }
    sub_221A31270(*(void *)(a6 + 40), (_DWORD *)(*(void *)(a6 + 88) + 32), *(void *)(a6 + 88) + 1152, *(void *)(a6 + 80), a9, v63);
    sub_221A2F34C(*(void *)(a6 + 40));
    if (!v50) {
      goto LABEL_106;
    }
    uint64_t v71 = *v153;
    int v72 = *(void **)(*v153 + 1392);
    if (!v72)
    {
      int v72 = sub_221A12A34(*(unsigned int *)(a6 + 20));
      if (!v72) {
        goto LABEL_145;
      }
      uint64_t v71 = *v153;
    }
    *(void *)(v71 + 1392) = *(void *)(*(void *)(a6 + 40) + 112);
    *(void *)(*(void *)(a6 + 40) + 112) = v72;
    uint64_t v73 = *(void *)(a6 + 88);
    int16x8_t v74 = *(void **)(v73 + 1400);
    if (!v74)
    {
      int16x8_t v74 = sub_221A12A34(*(unsigned int *)(a6 + 20));
      if (!v74) {
        goto LABEL_145;
      }
      uint64_t v73 = *v153;
    }
    *(void *)(v73 + 1400) = *(void *)(*(void *)(a6 + 40) + 120);
    *(void *)(*(void *)(a6 + 40) + 120) = v74;
    uint64_t v75 = *(void *)(a6 + 88);
    int v76 = *(void **)(v75 + 1408);
    if (!v76)
    {
      int v76 = sub_221A12A34(*(unsigned int *)(a6 + 20));
      if (!v76) {
        goto LABEL_145;
      }
      uint64_t v75 = *v153;
    }
    *(void *)(v75 + 1408) = *(void *)(*(void *)(a6 + 40) + 128);
    *(void *)(*(void *)(a6 + 40) + 128) = v76;
    uint64_t v77 = *(void *)(a6 + 88);
    int v78 = *(void **)(v77 + 1416);
    if (!v78)
    {
      int v78 = sub_221A12A34(*(unsigned int *)(a6 + 20));
      if (!v78) {
        goto LABEL_145;
      }
      uint64_t v77 = *v153;
    }
    *(void *)(v77 + 1416) = *(void *)(*(void *)(a6 + 40) + 136);
    *(void *)(*(void *)(a6 + 40) + 136) = v78;
    uint64_t v79 = *(void *)(a6 + 88);
    int16x8_t v80 = *(void **)(v79 + 1424);
    if (v80)
    {
LABEL_105:
      *(void *)(v79 + 1424) = *(void *)(*(void *)(a6 + 40) + 72);
      *(void *)(*(void *)(a6 + 40) + 72) = v80;
LABEL_106:
      if (v70) {
        BOOL v81 = v155 == 1;
      }
      else {
        BOOL v81 = 1;
      }
      if (v81) {
        unsigned int v15 = v69;
      }
      else {
        unsigned int v15 = v70;
      }
      if (*(_DWORD *)(a6 + 108))
      {
        if (*(_DWORD *)(a6 + 128) < a3)
        {
          double v82 = *(void **)(a6 + 120);
          if (v82) {
            j__free(v82);
          }
          double v83 = sub_221A12A5C((void *)(2 * a3));
          *(void *)(a6 + 120) = v83;
          if (!v83) {
            goto LABEL_18;
          }
          *(_DWORD *)(a6 + 128) = a3;
        }
        unsigned int v84 = 0;
        *(_DWORD *)(a6 + 112) = 0;
        int8x16_t v85 = v16 + 6;
        uint64_t v86 = a3;
        double v87 = v16 + 6;
        do
        {
          int v88 = *v87;
          v87 += 20;
          if (v88)
          {
            *(_WORD *)(*(void *)(a6 + 120) + 2 * v84) = *((_DWORD *)v85 - 11);
            unsigned int v84 = *(_DWORD *)(a6 + 112) + 1;
            *(_DWORD *)(a6 + 112) = v84;
          }
          int8x16_t v85 = v87;
          --v86;
        }
        while (v86);
      }
      if (!*(_DWORD *)(a6 + 132)) {
        goto LABEL_132;
      }
      if (*(_DWORD *)(a6 + 152) >= a3)
      {
LABEL_128:
        unsigned int v91 = 0;
        *(_DWORD *)(a6 + 136) = 0;
        int8x16_t v92 = (char *)v16 + 52;
        int8x16_t v93 = (char *)v16 + 52;
        do
        {
          int v94 = *(_DWORD *)v93;
          v93 += 80;
          if (v94)
          {
            *(_WORD *)(*(void *)(a6 + 144) + 2 * v91) = *((_DWORD *)v92 - 12);
            unsigned int v91 = *(_DWORD *)(a6 + 136) + 1;
            *(_DWORD *)(a6 + 136) = v91;
          }
          int8x16_t v92 = v93;
          --v151;
        }
        while (v151);
LABEL_132:
        if (*(unsigned char *)(*v153 + 1372))
        {
          v148[108] = *v153;
          uint64_t v95 = *v153;
          if (*(unsigned char *)(*v153 + 1372))
          {
            if (!*(unsigned char *)(v95 + 3))
            {
              uint64_t v97 = *(void *)(v95 + 64);
              uint64_t v96 = *(void *)(v95 + 72);
              int v98 = *(_DWORD *)(v95 + 168);
              uint64_t v99 = *(int *)(v95 + 164);
              if (*(unsigned char *)(v95 + 37)) {
                uint64_t v100 = *(unsigned int *)(v95 + 168);
              }
              else {
                uint64_t v100 = 0;
              }
              int v101 = *(_DWORD *)(v95 + 184);
              uint64_t v102 = *(int *)(v95 + 180);
              if (*(unsigned char *)(v95 + 37)) {
                uint64_t v103 = *(unsigned int *)(v95 + 184);
              }
              else {
                uint64_t v103 = 0;
              }
              char v104 = *(unsigned char *)(v95 + 1362) != 0;
              int v105 = v98 << v104;
              int v106 = *(_DWORD *)(v95 + 132);
              int v107 = *(_DWORD *)(v95 + 148);
              uint64_t v108 = v98 << v104;
              if (v106 <= 0)
              {
                int v109 = (int8x16_t *)(v97 + v100);
              }
              else
              {
                int v109 = (int8x16_t *)(v97 + v100);
                do
                {
                  BOOL v110 = (int8x16_t *)((char *)v109 + v99);
                  int8x16_t v111 = vzip1q_s8(*v109, *v109);
                  int8x16_t v112 = vqtbl1q_s8(vzip1q_s8(v111, v111), (int8x16_t)xmmword_221A36310);
                  v109[-2] = v112;
                  v109[-1] = v112;
                  int8x16_t v113 = vzip2q_s8(*(int8x16_t *)((char *)&v109[-1] + v99), *(int8x16_t *)((char *)&v109[-1] + v99));
                  int8x16_t v114 = vqtbl1q_s8(vzip2q_s8(v113, v113), (int8x16_t)xmmword_221A36A40);
                  *BOOL v110 = v114;
                  v110[1] = v114;
                  int v109 = (int8x16_t *)((char *)v109 + v105);
                  --v106;
                }
                while (v106);
              }
              int v115 = 0;
              int v116 = v101 << v104;
              uint64_t v117 = (uint64_t)v109[-2].i64 - v105;
              uint64_t v118 = (int)v99 + 48;
              uint64_t v119 = v109 - 2;
              do
              {
                if ((int)v99 >= -63)
                {
                  unint64_t v120 = 0;
                  do
                  {
                    v119[v120 / 0x10] = *(int8x16_t *)(v117 + v120);
                    BOOL v121 = (uint64_t)v120 < v118;
                    v120 += 16;
                  }
                  while (v121);
                }
                ++v115;
                uint64_t v119 = (int8x16_t *)((char *)v119 + v108);
              }
              while (v115 != 20);
              int v122 = 0;
              uint64_t v123 = v97 + v100 - 32;
              uint64_t v124 = v100 - v108 + v97 - 32;
              do
              {
                if ((int)v99 >= -63)
                {
                  uint64_t v125 = 0;
                  do
                  {
                    *(_OWORD *)(v124 + v125) = *(_OWORD *)(v123 + v125);
                    BOOL v121 = v125 < v118;
                    v125 += 16;
                  }
                  while (v121);
                }
                ++v122;
                v124 -= v108;
              }
              while (v122 != 20);
              uint64_t v126 = v116;
              if (v107 <= 0)
              {
                int v127 = (int16x8_t *)(v96 + v103);
              }
              else
              {
                int v127 = (int16x8_t *)(v96 + v103);
                do
                {
                  v127[-1] = (int16x8_t)vqtbl1q_s8((int8x16_t)vzip1q_s16(*v127, *v127), (int8x16_t)xmmword_221A36310);
                  *(int8x16_t *)((char *)v127 + v102) = vqtbl1q_s8((int8x16_t)vzip2q_s16(*(int16x8_t *)((char *)&v127[-1] + v102), *(int16x8_t *)((char *)&v127[-1] + v102)), (int8x16_t)xmmword_221A36A40);
                  int v127 = (int16x8_t *)((char *)v127 + v116);
                  --v107;
                }
                while (v107);
              }
              int v128 = 0;
              uint64_t v129 = (uint64_t)v127[-1].i64 - v116;
              uint64_t v130 = (int)v102 + 16;
              unint64_t v131 = v127 - 1;
              do
              {
                if ((int)v102 >= -31)
                {
                  unint64_t v132 = 0;
                  do
                  {
                    v131[v132 / 0x10] = *(int16x8_t *)(v129 + v132);
                    BOOL v121 = (uint64_t)v132 < v130;
                    v132 += 16;
                  }
                  while (v121);
                }
                ++v128;
                unint64_t v131 = (int16x8_t *)((char *)v131 + v126);
              }
              while (v128 != 8);
              int v133 = 0;
              uint64_t v134 = v96 + v103 - 16;
              uint64_t v135 = v103 - v126 + v96 - 16;
              do
              {
                if ((int)v102 >= -31)
                {
                  uint64_t v136 = 0;
                  do
                  {
                    *(_OWORD *)(v135 + v136) = *(_OWORD *)(v134 + v136);
                    BOOL v121 = v136 < v130;
                    v136 += 16;
                  }
                  while (v121);
                }
                ++v133;
                v135 -= v126;
              }
              while (v133 != 8);
            }
          }
        }
        if (*(_DWORD *)(*v148 + 44))
        {
          unsigned int v137 = sub_2219F570C(v146 + 1428092, *(_DWORD *)v150, v156, v147, *v153);
          if (v137) {
            goto LABEL_184;
          }
        }
        int v138 = *(unsigned __int8 *)(a6 + 832);
        if ((v138 == 3 || v138 == 1) && v157) {
          *(unsigned char *)(*v153 + 1372) = 0;
        }
        uint64_t v139 = *(void *)(*v153 + 1352);
        *(unsigned char *)(*v153 + 1376) = 1;
        if (v139 && *(unsigned char *)(v139 + 36)) {
          *(unsigned char *)(v139 + 1376) = 1;
        }
        if (*(unsigned char *)(v150 + 2681)) {
          *(_DWORD *)(*v148 + 40) = 0;
        }
        unsigned int v137 = sub_2219F55AC(v147);
        if (v137) {
          goto LABEL_184;
        }
        char v140 = *(unsigned char *)(*v153 + 1371);
        if (*v149)
        {
          int v141 = v149[2];
          if (!*(unsigned char *)(*v153 + 1371))
          {
            if (v149[2])
            {
              if (!*((unsigned char *)v148 + 1898)) {
                goto LABEL_83;
              }
              char v140 = 1;
            }
            else
            {
              char v140 = 0;
            }
LABEL_193:
            uint64_t v143 = (unsigned char *)*v153;
            v143[1307] = *v149;
            v143[1308] = v149[1];
            v143[1309] = v149[2];
            v143[1310] = v149[3];
            uint64_t v144 = (unsigned char *)*v153;
            unsigned int v145 = *((unsigned __int8 *)v148 + 1899);
            v144[1311] = *((unsigned char *)v148 + 1898);
            v144[1312] = v145;
            v144[1313] = v145 & 0xF;
            v144[1314] = v145 >> 4;
            if ((v140 & 1) != 0 || *((unsigned char *)v148 + 1898))
            {
              *(_WORD *)(*v153 + 1316) = *((_WORD *)v148 + 948);
              if (!v148[236])
              {
                unsigned int v137 = sub_221A15DD0(v148 + 236);
                if (v137)
                {
LABEL_184:
                  unsigned int v17 = v137;
                  goto LABEL_19;
                }
              }
            }
LABEL_61:
            unsigned int v17 = 0;
            goto LABEL_19;
          }
          *((_WORD *)v148 + 948) = *(_DWORD *)(v150 + 8);
          if (v141)
          {
            char v140 = 1;
            *((unsigned char *)v148 + 1898) = 1;
            char v142 = v149[1];
LABEL_192:
            *((unsigned char *)v148 + 1899) = v142;
            goto LABEL_193;
          }
        }
        else
        {
          if (!*(unsigned char *)(*v153 + 1371)) {
            goto LABEL_193;
          }
          *((_WORD *)v148 + 948) = *(_DWORD *)(v150 + 8);
        }
        char v142 = 0;
        char v140 = 0;
        *((unsigned char *)v148 + 1898) = 0;
        goto LABEL_192;
      }
      __n128 v89 = *(void **)(a6 + 144);
      if (v89) {
        j__free(v89);
      }
      __n128 v90 = sub_221A12A5C((void *)(2 * a3));
      *(void *)(a6 + 144) = v90;
      if (v90)
      {
        *(_DWORD *)(a6 + 152) = a3;
        goto LABEL_128;
      }
LABEL_18:
      unsigned int v17 = -108;
      goto LABEL_19;
    }
    int16x8_t v80 = sub_221A12A34(2 * *(unsigned int *)(a6 + 20));
    if (v80)
    {
      uint64_t v79 = *v153;
      goto LABEL_105;
    }
LABEL_145:
    unsigned int v17 = -108;
    unsigned int v15 = v69;
    goto LABEL_19;
  }
  unsigned int v15 = 0;
  unsigned int v17 = -8969;
LABEL_20:
  if (*(unsigned char *)(a6 + 544))
  {
    int v27 = a5;
    unsigned int v28 = (float)(1000000.0 / (float)*(unsigned __int8 *)(a6 + 544));
    if ((byte_267F69F54 & 1) == 0)
    {
      nullsub_1(a6 + 164, a6 + 392);
      byte_267F69F54 = 1;
    }
    uint64_t v29 = *(unsigned __int8 **)(a6 + 88);
    if (v29[1372])
    {
      int v30 = sub_2219F8FD0(a6 + 164, v29[1369]);
      uint64_t v29 = *(unsigned __int8 **)(a6 + 88);
    }
    else
    {
      int v30 = 1000;
    }
    unsigned int v31 = v29[1371];
    unsigned int v32 = dword_267F69F58++;
    sub_2219F9688((int *)(a6 + 392), v30, v28, v31, v32);
    nullsub_1(a6 + 164, a6 + 392);
    a5 = v27;
  }
  if (v15) {
    BOOL v33 = a5 == 1;
  }
  else {
    BOOL v33 = 1;
  }
  if (v33) {
    uint64_t v34 = v17;
  }
  else {
    uint64_t v34 = v15;
  }
  j__free(v16);
  j__free(v21);
  return v34;
}

uint64_t sub_221A053EC(unsigned int *a1, unsigned int a2, int *a3)
{
  uint64_t result = 0;
  uint64_t v11 = *MEMORY[0x263EF8340];
  if (a1)
  {
    if (a2)
    {
      uint64_t result = sub_2219F38D8(a1, a2, (uint64_t)v9);
      if (!result)
      {
        uint64_t result = sub_221A1F424((uint64_t)v9, (char *)__src);
        if (!result)
        {
          int v6 = *a3;
          if (*a3 < 1)
          {
LABEL_14:
            memcpy(&a3[470 * v6 + 3], __src, 0x758uLL);
            uint64_t result = 0;
            ++*a3;
          }
          else
          {
            uint64_t v7 = *a3;
            int v8 = a3;
            do
            {
              if (__src[332] != v8[335]
                || __src[333] != v8[336]
                || LOBYTE(__src[334]) != *((unsigned __int8 *)v8 + 1348))
              {
                return 0;
              }
              if (*((unsigned __int8 *)v8 + 27) == HIBYTE(__src[3]))
              {
                memcpy(v8 + 3, __src, 0x758uLL);
                return 0;
              }
              v8 += 470;
              --v7;
            }
            while (v7);
            if (v6 <= 31) {
              goto LABEL_14;
            }
            return 4294967246;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_221A05524(unsigned int *a1, unsigned int a2, unsigned int *a3)
{
  uint64_t result = 0;
  uint64_t v11 = *MEMORY[0x263EF8340];
  if (a1)
  {
    if (a2)
    {
      uint64_t result = sub_2219F38D8(a1, a2, (uint64_t)v9);
      if (!result)
      {
        uint64_t result = sub_221A1F424((uint64_t)v9, __src);
        if (!result)
        {
          int v6 = *a3;
          if ((int)*a3 < 1)
          {
LABEL_11:
            memcpy(&a3[470 * v6 + 3], __src, 0x758uLL);
            ++*a3;
LABEL_13:
            LODWORD(result) = sub_221A219CC();
            if (result == -12346) {
              return 0;
            }
            else {
              return result;
            }
          }
          else
          {
            uint64_t v7 = (unsigned __int8 *)a3 + 27;
            uint64_t v8 = *a3;
            do
            {
              if (*v7 == __src[15])
              {
                memcpy(v7 - 15, __src, 0x758uLL);
                goto LABEL_13;
              }
              v7 += 1880;
              --v8;
            }
            while (v8);
            if (v6 <= 31) {
              goto LABEL_11;
            }
            return 4294967246;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_221A0563C()
{
  return 0;
}

uint64_t sub_221A05644(unsigned int *a1, unsigned int a2, unsigned int *a3)
{
  uint64_t result = 0;
  uint64_t v11 = *MEMORY[0x263EF8340];
  if (a1)
  {
    if (a2)
    {
      uint64_t result = sub_2219F38D8(a1, a2, (uint64_t)v9);
      if (!result)
      {
        uint64_t result = sub_221A219D4((uint64_t)v9, a3, (uint64_t)__src);
        if (!result)
        {
          int v6 = a3[1];
          if (v6 < 1)
          {
LABEL_11:
            memcpy(&a3[84 * v6 + 15044], __src, 0x150uLL);
            uint64_t result = 0;
            ++a3[1];
          }
          else
          {
            uint64_t v7 = a3 + 15044;
            uint64_t v8 = a3[1];
            do
            {
              if (*v7 == __src[0])
              {
                memcpy(v7, __src, 0x150uLL);
                return 0;
              }
              v7 += 84;
              --v8;
            }
            while (v8);
            if (v6 <= 255) {
              goto LABEL_11;
            }
            return 4294967246;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_221A05754(unsigned int *a1, unsigned int a2, unsigned int *a3)
{
  uint64_t result = 0;
  if (a1 && a2)
  {
    uint64_t result = sub_2219F38D8(a1, a2, (uint64_t)v6);
    if (!result) {
      return sub_221A24DCC((uint64_t)v6, a3);
    }
  }
  return result;
}

uint64_t sub_221A057AC(unsigned int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  uint64_t result = sub_2219F38D8(a1, a2, (uint64_t)v5);
  if (!result)
  {
    uint64_t result = sub_221A1F424((uint64_t)v5, v6);
    if (!result) {
      return sub_221A0582C((uint64_t)v6, a3, 1);
    }
  }
  return result;
}

uint64_t sub_221A0582C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 4294958327;
  if (!a1 || !a2) {
    return v3;
  }
  int v4 = 16 * *(_DWORD *)(a1 + 1328) + 16;
  *(_DWORD *)a2 = v4;
  if (!a3)
  {
    int v6 = 16 * *(_DWORD *)(a1 + 1332) + 16;
    *(_DWORD *)(a2 + 4) = v6;
    int v7 = *(unsigned __int8 *)(a1 + 1339);
    if (*(unsigned char *)(a1 + 1339))
    {
      int v7 = 2 * *(_DWORD *)(a1 + 1340);
      *(_DWORD *)(a2 + 8) = v7;
      v4 -= 2 * *(_DWORD *)(a1 + 1344);
      *(_DWORD *)(a2 + 12) = v4;
      int v9 = 2 * *(_DWORD *)(a1 + 1348);
      *(_DWORD *)(a2 + 16) = v9;
      v6 -= 2 * *(_DWORD *)(a1 + 1352);
      goto LABEL_9;
    }
LABEL_8:
    int v9 = 0;
    *(_DWORD *)(a2 + 8) = 0;
    *(_DWORD *)(a2 + 12) = v4;
    *(_DWORD *)(a2 + 16) = 0;
    goto LABEL_9;
  }
  int v5 = 32 - 16 * *(unsigned __int8 *)(a1 + 1336);
  int v6 = v5 + v5 * *(_DWORD *)(a1 + 1332);
  *(_DWORD *)(a2 + 4) = v6;
  int v7 = *(unsigned __int8 *)(a1 + 1339);
  if (!*(unsigned char *)(a1 + 1339)) {
    goto LABEL_8;
  }
  int v8 = 4 - 2 * *(unsigned __int8 *)(a1 + 1336);
  int v7 = 2 * *(_DWORD *)(a1 + 1340);
  *(_DWORD *)(a2 + 8) = v7;
  v4 -= 2 * *(_DWORD *)(a1 + 1344);
  *(_DWORD *)(a2 + 12) = v4;
  int v9 = *(_DWORD *)(a1 + 1348) * v8;
  *(_DWORD *)(a2 + 16) = v9;
  v6 -= *(_DWORD *)(a1 + 1352) * v8;
LABEL_9:
  *(_DWORD *)(a2 + 20) = v6;
  *(_DWORD *)(a2 + 24) = *(unsigned __int8 *)(a1 + 1336);
  *(_DWORD *)(a2 + 28) = *(unsigned __int8 *)(a1 + 1337);
  *(_DWORD *)(a2 + 64) = 0;
  *(_OWORD *)(a2 + 32) = xmmword_221A397E0;
  *(_OWORD *)(a2 + 48) = xmmword_221A397F0;
  if (*(unsigned char *)(a1 + 1356))
  {
    if (*(unsigned char *)(a1 + 1360))
    {
      int v10 = *(_DWORD *)(a1 + 1364);
      *(_DWORD *)(a2 + 56) = v10;
      if (v10 == 255)
      {
        *(_DWORD *)(a2 + 60) = *(_DWORD *)(a1 + 1368);
        *(_DWORD *)(a2 + 64) = *(_DWORD *)(a1 + 1372);
      }
    }
    if (*(unsigned char *)(a1 + 1378))
    {
      *(_DWORD *)(a2 + 32) = *(_DWORD *)(a1 + 1380);
      *(_DWORD *)(a2 + 36) = *(unsigned __int8 *)(a1 + 1384);
      if (*(unsigned char *)(a1 + 1385))
      {
        *(_DWORD *)(a2 + 40) = 1;
        *(_DWORD *)(a2 + 44) = *(_DWORD *)(a1 + 1388);
        *(_DWORD *)(a2 + 48) = *(_DWORD *)(a1 + 1392);
        *(_DWORD *)(a2 + 52) = *(_DWORD *)(a1 + 1396);
      }
    }
  }
  if (v7 < 0 || v4 < 0 || (v6 | v9) < 0 || v6 < v9) {
    return 4294958327;
  }
  else {
    return 0;
  }
}

uint64_t sub_221A059BC()
{
  v0 = (unsigned int *)MEMORY[0x270FA5388]();
  uint64_t v17 = *MEMORY[0x263EF8340];
  int v13 = 0;
  int v14 = 0;
  if (!v3) {
    return 4294958327;
  }
  int v6 = v5;
  int v7 = v4;
  int v8 = v3;
  uint64_t v9 = v2;
  uint64_t result = sub_2219F38D8(v0, v1, (uint64_t)v11);
  if (!result)
  {
    uint64_t result = sub_221A1F424((uint64_t)v11, v16);
    if (!result)
    {
      unsigned char *v7 = v16[1404];
      unsigned char *v6 = v16[1408];
      memcpy(v15, v16, sizeof(v15));
      int v12 = 1;
      uint64_t result = sub_221A219CC();
      if (!result || result == -12346)
      {
        unsigned char *v8 = 0;
        return sub_221A0582C((uint64_t)v16, v9, 1);
      }
    }
  }
  return result;
}

uint64_t sub_221A05AE8(unsigned int **a1, unsigned int *a2, signed int a3, int a4, int a5, uint64_t a6, uint64_t a7, _DWORD *a8, unsigned __int8 a9, int a10, unsigned __int8 a11, char a12, char a13, int a14)
{
  if (a3 < 1) {
    return 0;
  }
  *(unsigned char *)(a6 + 832) = a9;
  return sub_221A046DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_221A05B28(uint64_t result)
{
  *(void *)(result + 44) = 0;
  *(void *)(result + 36) = 0;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

void sub_221A05B38(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = *(void **)(a1 + 40);
    if (v2) {
      j__free(v2);
    }
    *(void *)(a1 + 40) = 0;
    uint64_t v3 = *(void **)(a1 + 48);
    if (v3) {
      j__free(v3);
    }
    *(void *)(a1 + 48) = 0;
  }
}

uint64_t sub_221A05B80(uint64_t a1, int a2)
{
  uint64_t v2 = a1 + 36;
  if (a2 <= 0)
  {
    *(void *)uint64_t v2 = 0;
    *(void *)(a1 + 44) = 0;
    uint64_t result = 4294958327;
    *(_DWORD *)(v2 + 16) = 0;
  }
  else if (*(_DWORD *)v2 >= a2)
  {
    return 0;
  }
  else
  {
    j__free(*(void **)(a1 + 40));
    j__free(*(void **)(a1 + 48));
    *(void *)uint64_t v2 = 0;
    *(void *)(v2 + 8) = 0;
    *(_DWORD *)(v2 + 16) = 0;
    int v5 = sub_221A12A34(4 * a2);
    *(void *)(a1 + 40) = v5;
    if (v5 && (int v6 = sub_221A12A34(8 * a2), (*(void *)(a1 + 48) = v6) != 0))
    {
      uint64_t result = 0;
      *(_DWORD *)uint64_t v2 = a2;
    }
    else
    {
      return 4294967188;
    }
  }
  return result;
}

uint64_t sub_221A05C28(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 52) = a2;
  uint64_t v3 = sub_221A12A5C((void *)(4 * (a2 + 1)));
  *(void *)(a1 + 64) = v3;
  if (!v3) {
    return 4294967188;
  }
  uint64_t v4 = *(int *)(a1 + 52);
  if ((v4 & 0x80000000) == 0)
  {
    uint64_t v5 = 0;
    do
    {
      *(_DWORD *)(*(void *)(a1 + 64) + 4 * v5) = 0;
      uint64_t v4 = *(int *)(a1 + 52);
    }
    while (v5++ < v4);
  }
  int v7 = sub_221A12A5C((void *)(8 * v4));
  *(void *)(a1 + 56) = v7;
  if (!v7) {
    return 4294967188;
  }
  if (*(int *)(a1 + 52) < 1) {
    return 0;
  }
  uint64_t v8 = 0;
  while (1)
  {
    int v9 = *(_DWORD *)(a1 + 4);
    int v10 = sub_221A12A48(0x164150uLL);
    uint64_t v11 = (uint64_t)v10;
    if (!v10) {
      goto LABEL_22;
    }
    int v12 = v10 + 364561;
    int v13 = 2 * v9 + 2;
    v10[364561] = v13;
    *((void *)v10 + 182283) = sub_221A12A48(400 * v13);
    int v14 = sub_221A12A48(400 * *v12);
    *(void *)(v11 + 1458272) = v14;
    uint64_t v15 = *(void *)(v11 + 1458264);
    if (!v15 || v14 == 0)
    {
LABEL_22:
      sub_221A061F0(v11);
      return 4294967188;
    }
    *(void *)(v11 + 1458248) = v15;
    *(void *)(v11 + 1458256) = v14;
    uint64_t v17 = sub_221A12A78(1280);
    if (v17) {
      *(void *)(v11 + 1040) = v17;
    }
    else {
      j__free(*(void **)(v11 + 1040));
    }
    *(void *)(v11 + 1240) = v11 + 1457152;
    *(void *)(v11 + 1248) = v11 + 1457218;
    *(void *)(v11 + 1256) = v11 + 1457284;
    *(void *)(v11 + 1264) = v11 + 1457350;
    *(void *)(v11 + 1280) = v11 + 1457432;
    *(void *)(v11 + 1288) = v11 + 1458080;
    *(void *)(v11 + 1296) = v11 + 1458161;
    if (*(void *)(v11 + 1176) || *(void *)(v11 + 1184)) {
      return 4294958327;
    }
    int v18 = sub_221901614();
    *(void *)(v11 + 1176) = v18;
    if (!v18) {
      return 4294967188;
    }
    int v19 = sub_221A12A48(0x3A8uLL);
    *(void *)(v11 + 1184) = v19;
    if (!v19) {
      return 4294967188;
    }
    *(void *)(*(void *)(a1 + 56) + 8 * v8++) = v11;
    if (v8 >= *(int *)(a1 + 52)) {
      return 0;
    }
  }
}

uint64_t sub_221A05E1C(uint64_t *a1, uint64_t a2, unsigned int a3, unsigned int *a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v15 = *a4;
  uint64_t v16 = sub_221A12A48(0x358uLL);
  uint64_t v17 = (uint64_t)v16;
  if (!v16) {
    goto LABEL_18;
  }
  v16[210] = a4[2];
  v16[211] = a4[7];
  v16[8] = 0;
  *((void *)v16 + 3) = a2;
  int v18 = *(_DWORD *)(a2 + 1340) + 1;
  v16[1] = v18;
  int v19 = 2 - *(unsigned __int8 *)(a2 + 1348) + (2 - *(unsigned __int8 *)(a2 + 1348)) * *(_DWORD *)(a2 + 1344);
  v16[2] = v19;
  int v20 = *(_DWORD *)(a2 + 1344) + 1;
  v16[3] = v19 * v18;
  v16[4] = v20;
  uint64_t v21 = sub_221A12A48(0x110uLL);
  *(void *)(v17 + 40) = v21;
  if (!v21) {
    goto LABEL_18;
  }
  uint64_t v22 = sub_221A2F1CC((uint64_t)v21, *(_DWORD *)(v17 + 4), *(_DWORD *)(v17 + 8));
  if (v22)
  {
LABEL_19:
    sub_221A0603C(v17);
    uint64_t v17 = 0;
    goto LABEL_20;
  }
  *(_DWORD *)(*(void *)(v17 + 40) + 268) = *(_DWORD *)(a6 + 5041852);
  int v23 = sub_221A34144();
  *(void *)(v17 + 72) = v23;
  if (!v23 || *(_DWORD *)(v17 + 840) == -4 && (uint64_t v24 = sub_221A33978(v15, a8), (*(void *)(v17 + 80) = v24) == 0))
  {
LABEL_18:
    uint64_t v22 = 4294967188;
    goto LABEL_19;
  }
  uint64_t v22 = sub_221A05C28(v17, v15);
  if (v22) {
    goto LABEL_19;
  }
  *(_DWORD *)uint64_t v17 = 0;
  if (sub_221A0CEB0(a3)) {
    *(_DWORD *)uint64_t v17 = 0;
  }
  *(_DWORD *)(v17 + 108) = sub_221A0CEB8(a3);
  *(_DWORD *)(v17 + 112) = 0;
  *(_DWORD *)(v17 + 128) = 0;
  *(void *)(v17 + 120) = 0;
  *(_DWORD *)(v17 + 132) = sub_221A0CEC0(a3);
  *(_DWORD *)(v17 + 136) = 0;
  *(void *)(v17 + 144) = 0;
  *(_DWORD *)(v17 + 152) = 0;
  *(_DWORD *)(v17 + 156) = a5;
  if (a4[10] == -2) {
    int v25 = 1;
  }
  else {
    int v25 = sub_221A0CEC8(a3);
  }
  *(_DWORD *)(v17 + 48) = v25;
  uint64_t v26 = sub_221A12A48(1168 * (*(_DWORD *)(v17 + 8) * *(_DWORD *)(v17 + 4)));
  *(void *)(v17 + 560) = v26;
  if (!v26) {
    goto LABEL_18;
  }
  int v27 = sub_221A12A48(48 * (*(_DWORD *)(v17 + 4) + 1));
  *(void *)(v17 + 568) = v27;
  if (!v27) {
    goto LABEL_18;
  }
  if (a4[2] == -4)
  {
    unsigned int v28 = dword_267F69F5C++;
    sub_221A33748((unsigned int *)(v17 + 576), (uint64_t)sub_221A016A4, v17, v28, 2u);
  }
  uint64_t v22 = 0;
LABEL_20:
  *a1 = v17;
  return v22;
}

uint64_t sub_221A0603C(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = *(void *)(a1 + 40);
    if (v2)
    {
      sub_221A312FC(v2);
      j__free(*(void **)(a1 + 40));
      *(void *)(a1 + 40) = 0;
    }
    uint64_t v3 = *(void *)(a1 + 848);
    if (v3)
    {
      sub_221A312FC(v3);
      j__free(*(void **)(a1 + 848));
      *(void *)(a1 + 848) = 0;
    }
    sub_221A06140(a1);
    sub_221A34190(*(pthread_mutex_t **)(a1 + 72));
    *(void *)(a1 + 72) = 0;
    if (*(_DWORD *)(a1 + 840) == -4)
    {
      sub_221A33A94(*(unsigned int **)(a1 + 80));
      *(void *)(a1 + 80) = 0;
    }
    uint64_t v4 = *(void **)(a1 + 120);
    if (v4)
    {
      if (!*(_DWORD *)(a1 + 108)) {
        goto LABEL_18;
      }
      j__free(v4);
      *(void *)(a1 + 120) = 0;
      *(_DWORD *)(a1 + 128) = 0;
    }
    uint64_t v5 = *(void **)(a1 + 144);
    if (!v5)
    {
LABEL_14:
      if (*(_DWORD *)(a1 + 840) == -4) {
        sub_221A3387C(a1 + 576);
      }
      j__free(*(void **)(a1 + 560));
      *(void *)(a1 + 560) = 0;
      j__free(*(void **)(a1 + 568));
      uint64_t v6 = 0;
      *(void *)(a1 + 568) = 0;
      goto LABEL_19;
    }
    if (*(_DWORD *)(a1 + 132))
    {
      j__free(v5);
      *(void *)(a1 + 144) = 0;
      *(_DWORD *)(a1 + 152) = 0;
      goto LABEL_14;
    }
LABEL_18:
    uint64_t v6 = 4294958327;
LABEL_19:
    j__free((void *)a1);
    return v6;
  }
  return 0;
}

uint64_t sub_221A06140(uint64_t a1)
{
  if (a1)
  {
    int v2 = *(_DWORD *)(a1 + 52);
    if (v2 >= 1)
    {
      for (uint64_t i = 0; i < v2; ++i)
      {
        uint64_t v4 = *(void *)(*(void *)(a1 + 56) + 8 * i);
        if (v4)
        {
          uint64_t v5 = *(uint64_t ***)(v4 + 1176);
          if (v5)
          {
            sub_2219016C8(v5);
            j__free(*(void **)(v4 + 1176));
            *(void *)(v4 + 1176) = 0;
          }
          uint64_t v6 = *(void **)(v4 + 1184);
          if (v6)
          {
            j__free(v6);
            *(void *)(v4 + 1184) = 0;
          }
          sub_221A061F0(v4);
          *(void *)(*(void *)(a1 + 56) + 8 * i) = 0;
          int v2 = *(_DWORD *)(a1 + 52);
        }
      }
    }
    j__free(*(void **)(a1 + 56));
    *(void *)(a1 + 56) = 0;
    j__free(*(void **)(a1 + 64));
    *(void *)(a1 + 64) = 0;
  }
  return 0;
}

void sub_221A061F0(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = a1 + 1458248;
    if (*(void *)(a1 + 1458248))
    {
      j__free(*(void **)(a1 + 1458264));
      j__free(*(void **)(v2 + 24));
      *(_OWORD *)uint64_t v2 = 0u;
      *(_OWORD *)(v2 + 16) = 0u;
    }
    j__free(*(void **)(a1 + 1040));
    j__free((void *)a1);
  }
}

void sub_221A0625C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(a5 + 12) = *(unsigned char *)(a5 + 1423168);
  uint64_t v5 = *(void *)(a5 + 1016);
  *(unsigned char *)(a5 + 13) = *(unsigned char *)(v5 + 56);
  *(unsigned char *)(a5 + 14) = *(unsigned char *)(v5 + 57);
  *(_DWORD *)(a5 + 16) = *(_DWORD *)(a5 + 996);
  *(_WORD *)(a5 + 20) = *(_WORD *)(a5 + 1005);
  *(unsigned char *)(a5 + 24) = *(unsigned char *)(a5 + 1164);
  uint64_t v6 = *(void *)(a5 + 1192);
  *(unsigned char *)(a5 + 22) = *(unsigned char *)(v6 + 1363);
  *(unsigned char *)(a5 + 23) = 0;
  *(void *)(a5 + 64) = a5 + 1200;
  *(void *)(a5 + 72) = v6 + 32;
  *(void *)(a5 + 80) = *(void *)(a5 + 1312);
  *(unsigned char *)(a5 + 928) = *(unsigned char *)(*(void *)(a5 + 1024) + 4);
  *(unsigned char *)(a5 + 36) = 0;
  *(void *)(a5 + 88) = v6;
  *(_DWORD *)(a5 + 96) = *(_DWORD *)(a5 + 1060);
  uint64_t v7 = *(void *)(a5 + 1176);
  *(unsigned char *)a5 = *(_DWORD *)(a5 + 1428264) + *(unsigned char *)(a4 + 72) + 26;
  sub_221901768(v7);
}

uint64_t sub_221A07908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, int a6, unsigned int a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, unsigned __int8 a11, int a12, unsigned char *a13, _DWORD *a14)
{
  signed int v15 = *(_DWORD *)(a2 + 4);
  uint64_t v16 = v15;
  signed int v296 = *(_DWORD *)(a2 + 16);
  uint64_t v17 = *(void *)(a2 + 560);
  uint64_t v18 = *(void *)(a2 + 568);
  a5[12] = a5[1423168];
  uint64_t v19 = *((void *)a5 + 127);
  a5[13] = *(unsigned char *)(v19 + 56);
  a5[14] = *(unsigned char *)(v19 + 57);
  *((_DWORD *)a5 + 4) = *((_DWORD *)a5 + 249);
  *((_WORD *)a5 + 10) = *(_WORD *)(a5 + 1005);
  a5[24] = a5[1164];
  uint64_t v20 = *((void *)a5 + 149);
  a5[22] = *(unsigned char *)(v20 + 1363);
  a5[23] = 0;
  *((void *)a5 + 8) = a5 + 1200;
  *((void *)a5 + 9) = v20 + 32;
  uint64_t v21 = *((void *)a5 + 164);
  *((void *)a5 + 10) = v21;
  a5[928] = *(unsigned char *)(*((void *)a5 + 128) + 4);
  *(void *)(a5 + 28) = 0;
  int8x16_t v311 = a5 + 28;
  a5[36] = 0;
  *((void *)a5 + 11) = v20;
  *((_DWORD *)a5 + 24) = *((_DWORD *)a5 + 265);
  *a5 = *((_DWORD *)a5 + 357066) + *(_DWORD *)(a4 + 72) + 26;
  __int16 v330 = a6;
  uint64_t v22 = (unsigned int *)(*(void *)(v21 + 48) + 12 * a6);
  unsigned int *v22 = (63 * *(_DWORD *)(a2 + 156)) >> 6;
  v22[1] = 1;
  int v339 = a5 + 1423168;
  uint64_t v23 = *((int *)a5 + 356390);
  if (a5[1161])
  {
    int v24 = (int)v23 % (2 * v15) / 2;
    int v25 = *((_DWORD *)a5 + 356390) & 1;
    if (a5[1007] + 2 * ((int)v23 / (2 * v15)) != 1) {
      int v25 = 0;
    }
  }
  else
  {
    int v25 = (int)v23 / v15;
    int v24 = (int)v23 % v15;
  }
  long long v332 = (uint64_t *)(a5 + 1458248);
  uint64_t v342 = (uint64_t)(a5 + 1425504);
  BOOL v304 = v25 != 0;
  if (a13) {
    *a13 = 1;
  }
  uint64_t v341 = (int *)(a5 + 976);
  uint64_t v301 = *((void *)a5 + 149) + 1152;
  uint64_t v26 = *((void *)a5 + 9);
  uint64_t v27 = *((void *)a5 + 10);
  *(void *)(v27 + 80) = v26;
  uint64_t v303 = v26;
  LODWORD(v26) = *(_DWORD *)(v26 + 100) >> 4;
  int v28 = *(_DWORD *)(v27 + 12);
  *(_DWORD *)(v27 + 8) = v26;
  *(_DWORD *)(v27 + 20) = v28 * v26;
  unsigned int v328 = a5[1425576] == 0;
  uint64_t v305 = v18 - 48;
  uint64_t v327 = v18;
  uint64_t v29 = (int16x8_t *)(v18 + 48 * v15);
  uint64_t v323 = v29 + 1;
  uint64_t v322 = v29;
  i8 = v29[2].i8;
  uint64_t v306 = (uint64_t)(a5 + 1424400);
  int v314 = a5 + 936;
  int v313 = a5 + 880;
  uint64_t v30 = *((void *)a5 + 127);
  uint64_t v302 = (uint64_t)(a5 + 1425264);
  uint64_t v299 = a5 + 624;
  uint64_t v31 = *((void *)a5 + 9);
  uint64_t v297 = (uint64_t)(a5 + 1423632);
  uint64_t v298 = (_DWORD *)(a1 + 5041852);
  uint64_t v320 = *(int *)(v31 + 136);
  int v32 = v25 * v15;
  uint64_t v33 = v25;
  uint64_t v325 = v31;
  uint64_t v319 = *(int *)(v31 + 152);
  uint64_t v310 = v23;
  uint64_t v308 = v23 - 1;
  uint64_t v318 = (v25 - 1) * v15;
  int v316 = v25;
  uint64_t v317 = v15 * (uint64_t)v25;
  uint64_t v34 = a5 + 1458264;
  uint64_t v329 = 12 * a6;
  uint64_t v343 = v17;
  uint64_t v326 = v30;
  signed int v321 = v15;
  uint64_t v331 = v15;
  int v307 = a5 + 1458264;
  while (2)
  {
    int v35 = *((_DWORD *)a5 + 7);
    int v36 = v35 - v15;
    if (v35 <= v15) {
      int v36 = 0;
    }
    if (v35 >= v15) {
      signed int v37 = v15;
    }
    else {
      signed int v37 = *((_DWORD *)a5 + 7);
    }
    *((_DWORD *)a5 + 7) = v36;
    uint64_t v338 = v33 * v16;
    uint64_t v340 = v33;
    int v333 = (uint64_t *)&v34[8 * (v33 & 1)];
    uint64_t v335 = (uint64_t *)&v34[8 * !(v33 & 1)];
    int v312 = v32;
    int v337 = v24 + v32;
    uint64_t v38 = v24;
    uint64_t v315 = v24;
    while (1)
    {
      unsigned int v39 = v38 + v338;
      uint64_t result = 4294958327;
      if (v38 + v338 >= *(int *)(v27 + 20) || v337 < 0) {
        goto LABEL_234;
      }
      uint64_t v41 = v17 + 1168 * v38;
      **((_DWORD **)a5 + 144) = v39;
      *((_DWORD *)a5 + 248) = v39;
      *((_DWORD *)a5 + 244) = v38;
      *((_DWORD *)a5 + 245) = v340;
      *(_DWORD *)(v41 + 820) = v39;
      *(_DWORD *)(v41 + 824) = v38;
      *(_DWORD *)(v41 + 828) = v340;
      uint64_t v42 = *v335;
      *long long v332 = *v333;
      v332[1] = v42;
      *((void *)a5 + 144) = v42 + 400 * v38;
      *(void *)(v332[1] + 400 * v38 + 112) = sub_221A15AE4(*(void *)(*(void *)(*((void *)a5 + 149) + 1152)
                                                                       + 8 * a7));
      sub_221A12FA8(*((_DWORD *)v339 + 598), *v332, v332[1], v341);
      unsigned int v43 = a5[1004];
      if (v43 <= 9 && ((1 << v43) & 0x294) != 0) {
        goto LABEL_18;
      }
      if (v37) {
        goto LABEL_33;
      }
      if (*((_DWORD *)a5 + 8) == 1)
      {
        signed int v37 = 0;
        goto LABEL_18;
      }
      uint64_t v76 = *((void *)v339 + 294);
      uint64_t v77 = (unsigned int *)*((void *)v339 + 295);
      int v78 = *((_DWORD *)v339 + 592);
      uint64_t v79 = v339[2372];
      unsigned int v80 = __clz(v78 | 1);
      if (!v78) {
        ++v80;
      }
      if (v80 > 0xC)
      {
        unint64_t v102 = v79 + 1;
        int v103 = (v79 + 1) & 7;
        char v104 = (unsigned int *)(v76 + (v102 >> 3));
        unsigned int v105 = bswap32(*v104) << v103;
        if (v104 <= v77) {
          int v106 = v104;
        }
        else {
          int v106 = (unsigned int *)*((void *)v339 + 295);
        }
        if (v78 < 0)
        {
          unsigned int v110 = 0;
        }
        else
        {
          unsigned int v107 = 0;
          do
          {
            unsigned int v108 = v105;
            char v109 = v103;
            unsigned int v110 = v107 + 1;
            unint64_t v111 = (v103 + 1);
            int v103 = ((_BYTE)v103 + 1) & 7;
            int v106 = (unsigned int *)((char *)v106 + (v111 >> 3));
            unsigned int v105 = bswap32(*v106) << (v111 & 7);
            if (v106 > v77) {
              int v106 = (unsigned int *)*((void *)v339 + 295);
            }
            if ((v108 & 0x80000000) != 0) {
              break;
            }
          }
          while (v107++ < 0x1F);
          if (v110 - 1 > 0x17)
          {
            unsigned int v113 = v105 >> (48 - v110);
            unsigned int v114 = ((v109 + 1) & 7) + v110;
            unint64_t v115 = v114 - 16;
            char v83 = v114 & 7;
            int v116 = (unsigned int *)((char *)v106 + (v115 >> 3));
            unsigned int v117 = bswap32(*v116) << v83;
            if (v116 <= v77) {
              uint64_t v118 = v116;
            }
            else {
              uint64_t v118 = (unsigned int *)*((void *)v339 + 295);
            }
            unsigned int v120 = *(unsigned int *)((char *)v118 + 2);
            uint64_t v119 = (unsigned int *)((char *)v118 + 2);
            unsigned int v85 = bswap32(v120) << v83;
            if (v119 <= v77) {
              uint64_t v77 = v119;
            }
            int v121 = __PAIR64__(v113, v117) >> 16;
LABEL_98:
            signed int v37 = v121 + ~(-1 << v110);
            goto LABEL_99;
          }
        }
        int v121 = v105 >> -(char)v110;
        unint64_t v124 = v110 + v103;
        char v83 = (v110 + v103) & 7;
        uint64_t v125 = (unsigned int *)((char *)v106 + (v124 >> 3));
        unsigned int v85 = bswap32(*v125) << v83;
        if (v125 <= v77) {
          uint64_t v77 = v125;
        }
        goto LABEL_98;
      }
      unsigned int v81 = (v78 << (v80 + 1)) >> -(char)v80;
      if (!v80) {
        unsigned int v81 = 0;
      }
      signed int v37 = v81 + ~(-1 << v80);
      unint64_t v82 = v79 + 2 * v80 + 1;
      char v83 = v82 & 7;
      unsigned int v84 = (unsigned int *)(v76 + (v82 >> 3));
      unsigned int v85 = bswap32(*v84) << (v82 & 7);
      if (v84 <= v77) {
        uint64_t v77 = v84;
      }
LABEL_99:
      *((void *)v339 + 294) = v77;
      *((_DWORD *)v339 + 592) = v85;
      v339[2372] = v83;
      if (v37 + (int)v38 + (int)v338 > *(_DWORD *)(v27 + 20)) {
        goto LABEL_233;
      }
      *((_DWORD *)a5 + 8) = sub_2219F3948(v342);
      if (v37 + (int)v38 > v321)
      {
        *int8x16_t v311 = v37 + v38 - v321;
        signed int v37 = v321 - v38;
      }
      if (v37)
      {
LABEL_33:
        *(unsigned char *)(v17 + 1168 * v38 + 832) = 1;
        LOBYTE(v48) = *a5;
        *((_DWORD *)a5 + 2) = 0;
        uint64_t result = sub_221A13A20((uint64_t)v341);
        if (result) {
          goto LABEL_234;
        }
        unsigned int v69 = (unsigned char *)*((void *)a5 + 128);
        if (!v69[5] || !*(unsigned char *)(**((void **)a5 + 151) + 1364))
        {
          int v70 = *(unsigned __int8 *)(*((void *)a5 + 127) + 1);
          if (v70 == 5 || v70 == 3)
          {
            uint64_t v71 = v69[272];
            if (v69[272])
            {
              int v72 = v69 + 31;
              while (1)
              {
                int v73 = *v72;
                v72 += 16;
                if (v73 == 3) {
                  break;
                }
                if (!--v71) {
                  goto LABEL_93;
                }
              }
              uint64_t v122 = *((void *)a5 + 163);
              if (v340 > *(int *)(v122 + 12))
              {
                sub_221A341D0(*(pthread_mutex_t **)(v122 + 16));
                for (uint64_t i = *(int *)(v122 + 12); v340 > i; uint64_t i = *(int *)(v122 + 12))
                  sub_221A34280(*(pthread_cond_t **)(v122 + 24), *(pthread_mutex_t **)(v122 + 16));
                sub_221A341DC(*(pthread_mutex_t **)(v122 + 16));
                uint64_t v30 = v326;
              }
            }
          }
        }
LABEL_93:
        uint64_t result = sub_221916B0C((uint64_t)v341, v41, v67, v68);
        if (result) {
          goto LABEL_234;
        }
        unsigned int v86 = 0;
        --v37;
        goto LABEL_60;
      }
LABEL_18:
      *(unsigned char *)(v17 + 1168 * v38 + 832) = 0;
      *((_DWORD *)a5 + 8) = 0;
      uint64_t v44 = (int8x16_t *)*((void *)a5 + 144);
      v44[5].i64[0] = 0;
      v44[5].i64[1] = 0;
      uint64_t result = sub_221A1C2F0(v342, v328, a11, a12, (uint64_t)v341, (unsigned char *)v41);
      if (result) {
        goto LABEL_234;
      }
      *((_DWORD *)a5 + 2) = 1;
      int v47 = *(char *)(v30 + 54);
      if ((*(unsigned char *)(v30 + 54) - 26) < 0xCCu)
      {
LABEL_233:
        uint64_t result = 4294958327;
        goto LABEL_234;
      }
      unsigned int v48 = v47
          + *a5
          + 52
          - 52 * (((20165 * (v47 + *a5 + 52)) >> 20) + ((20165 * (v47 + *a5 + 52)) >> 31));
      *a5 = v47 + *a5 + 52 - 52 * (((20165 * (v47 + *a5 + 52)) >> 20) + (20165 * (v47 + *a5 + 52) < 0));
      uint64_t v49 = (unsigned char *)(v343 + 1168 * v38);
      v49[818] = v48;
      int v50 = *(unsigned __int8 *)(*((void *)a5 + 127) + 1);
      v49[833] = v50;
      v49[834] = *(unsigned char *)(*((void *)a5 + 127) + 2);
      v49[835] = *(unsigned char *)(*((void *)a5 + 127) + 3);
      if (v50)
      {
        if (*(unsigned char *)(v343 + 1168 * v38 + 816))
        {
          uint16x8_t v51 = (uint16x8_t)vqtbl1q_s8(vqtbl1q_s8(vcgtzq_s8(v44[5]), (int8x16_t)xmmword_221A37AC0), (int8x16_t)xmmword_221A37AD0);
          v52.i64[0] = 0x7000700070007;
          v52.i64[1] = 0x7000700070007;
          int8x16_t v53 = vorrq_s8((int8x16_t)vshlq_n_s16((int16x8_t)v51, 8uLL), (int8x16_t)vshlq_u16(v51, v52));
          int8x16_t v54 = vandq_s8(vcltzq_s8(v53), (int8x16_t)xmmword_221A37900);
          int8x16_t v55 = vpaddq_s8(v54, v54);
          int8x16_t v56 = vpaddq_s8(v55, v55);
          unsigned __int16 v57 = vpaddq_s8(v56, v56).u16[0];
          int8x16_t v58 = vzip1q_s8((int8x16_t)vdupq_laneq_s64((int64x2_t)v53, 1), v53);
          int16x8_t v46 = (int16x8_t)xmmword_221A368F0;
          int8x16_t v59 = vandq_s8(vcltzq_s8(vqtbl1q_s8(vzip1q_s8(v58, (int8x16_t)vdupq_laneq_s64((int64x2_t)v58, 1)), (int8x16_t)xmmword_221A368F0)), (int8x16_t)xmmword_221A37900);
          int8x16_t v60 = vpaddq_s8(v59, v59);
          int8x16_t v61 = vpaddq_s8(v60, v60);
          int16x8_t v45 = (int16x8_t)vpaddq_s8(v61, v61);
          *(_DWORD *)(*(void *)(v27 + 32) + 4 * (v38 + v338)) = v45.u16[0] | (v57 << 16);
        }
        int v62 = (unsigned char *)*((void *)a5 + 128);
        if (!v62[5] || !*(unsigned char *)(**((void **)a5 + 151) + 1364))
        {
          int v63 = *(unsigned __int8 *)(*((void *)a5 + 127) + 1);
          if (v63 == 5 || v63 == 3)
          {
            uint64_t v64 = v62[272];
            if (v62[272])
            {
              int v65 = v62 + 31;
              while (1)
              {
                int v66 = *v65;
                v65 += 16;
                if (v66 == 3) {
                  break;
                }
                if (!--v64) {
                  goto LABEL_58;
                }
              }
              uint64_t v74 = *((void *)a5 + 163);
              if (v340 > *(int *)(v74 + 12))
              {
                sub_221A341D0(*(pthread_mutex_t **)(v74 + 16));
                for (uint64_t j = *(int *)(v74 + 12); v340 > j; uint64_t j = *(int *)(v74 + 12))
                  sub_221A34280(*(pthread_cond_t **)(v74 + 24), *(pthread_mutex_t **)(v74 + 16));
                sub_221A341DC(*(pthread_mutex_t **)(v74 + 16));
                uint64_t v30 = v326;
              }
            }
          }
        }
LABEL_58:
        uint64_t result = sub_221916B0C((uint64_t)v341, v41, v45, v46);
        if (result) {
          goto LABEL_234;
        }
      }
      unsigned int v86 = -1;
LABEL_60:
      sub_221A13094((uint64_t)v341, a7);
      uint64_t v17 = v343;
      if (*(unsigned char *)(v343 + 1168 * v38 + 833) || *(unsigned char *)(v343 + 1168 * v38 + 834) != 25)
      {
        unsigned int v87 = (char)v48;
        unsigned int v90 = a5[13] + (char)v48;
        unsigned int v91 = a5[14] + (char)v48;
        if (v90 >= 0x33) {
          unsigned int v90 = 51;
        }
        if (v91 >= 0x33) {
          unsigned int v91 = 51;
        }
        char v88 = byte_221A39F60[v90];
        char v89 = byte_221A39F60[v91];
      }
      else
      {
        unsigned int v87 = 0;
        char v88 = 0;
        char v89 = 0;
      }
      *(_WORD *)(*(void *)(v27 + 72) + 2 * v39) = v330;
      *(unsigned char *)(*(void *)(v27 + 112) + v39) = v87;
      *(unsigned char *)(*(void *)(v27 + 120) + v39) = v88;
      *(unsigned char *)(*(void *)(v27 + 128) + v39) = v89;
      *(unsigned char *)(*(void *)(v27 + 136) + v39) = *(unsigned char *)(*((void *)a5 + 127) + 3);
      *(int32x2_t *)(*(void *)(v27 + 48) + v329) = vadd_s32(*(int32x2_t *)(*(void *)(v27 + 48) + v329), (int32x2_t)vand_s8((int8x8_t)(v87 | 0x100000000), (int8x8_t)vdup_n_s32(v86)));
      ++v38;
      BOOL v92 = sub_2219F3948(v342);
      BOOL v101 = v92;
      if (v38 >= v331) {
        break;
      }
      if (!(v92 | v37)) {
        goto LABEL_105;
      }
    }
    int v126 = v321;
    if (!v92)
    {
LABEL_105:
      BOOL v101 = 0;
      if (*v311) {
        int v126 = v321;
      }
      else {
        int v126 = v38;
      }
    }
    int v334 = v126;
    if (v126 > (int)v315)
    {
      int v127 = (int16x8_t *)(v343 + 1168 * (int)v315);
      int v128 = v126 - v315;
      uint64_t v129 = v318 + v315;
      int v130 = 16 * v315;
      uint64_t v131 = v317 + v315;
      do
      {
        int v133 = 16 * v340;
        int v132 = 32 * v340;
        if (!*(unsigned char *)v325)
        {
          int v132 = 16 * v340;
          int v133 = 8 * v340;
        }
        uint64_t v134 = *(void *)(v325 + 32) + v130 + (v132 * *(_DWORD *)(v325 + 136));
        int v135 = a5[20];
        if ((v134 & 0x3F) == 0)
        {
          if (a5[21]) {
            uint64_t v136 = v320;
          }
          else {
            uint64_t v136 = 0;
          }
          int v137 = v320 << (v135 != 0);
          if (!a5[20]) {
            uint64_t v136 = 0;
          }
          _X13 = v134 + v136;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v137;
          __asm { PRFM            #0, [X13] }
        }
        uint64_t v173 = *(void *)(v325 + 40) + v130 + (v133 * *(_DWORD *)(v325 + 152));
        if ((v173 & 0x3F) == 0)
        {
          if (a5[21]) {
            uint64_t v174 = v319;
          }
          else {
            uint64_t v174 = 0;
          }
          _ZF = v135 == 0;
          int v175 = v319 << (v135 != 0);
          if (_ZF) {
            uint64_t v174 = 0;
          }
          _X9 = v173 + v174;
          __asm { PRFM            #0, [X9] }
          _X9 = _X9 + v175;
          __asm { PRFM            #0, [X9] }
          _X9 = _X9 + v175;
          __asm { PRFM            #0, [X9] }
          _X9 = _X9 + v175;
          __asm { PRFM            #0, [X9] }
          _X9 = _X9 + v175;
          __asm { PRFM            #0, [X9] }
          _X9 = _X9 + v175;
          __asm { PRFM            #0, [X9] }
          _X9 = _X9 + v175;
          __asm { PRFM            #0, [X9] }
          _X8 = _X9 + v175;
          __asm { PRFM            #0, [X8] }
        }
        uint64_t result = 4294958327;
        if (v131 < 0 || v131 >= *(int *)(v27 + 20)) {
          goto LABEL_234;
        }
        unsigned __int32 v192 = v127[51].u32[2];
        uint64_t v193 = (int16x8_t *)(v327 + 48 * v192);
        if (v127[52].i8[0])
        {
          *uint64_t v322 = *v193;
          int8x16_t v194 = (int16x8_t *)(v327 + 48 * v192);
          *uint64_t v323 = v194[1];
          char *i8 = v194[2].i8[0];
          v195.i64[0] = 0x2222222222222222;
          v195.i64[1] = 0x2222222222222222;
          *uint64_t v193 = v195;
          v194[2].i8[0] = 0;
        }
        else
        {
          if (!v127[52].i8[1])
          {
            *((_DWORD *)a5 + 1) = 0;
            __int32 v200 = v127[51].i32[2];
            if (v200 + 1 == v321) {
              __int32 v201 = 0;
            }
            else {
              __int32 v201 = v200 + 1;
            }
            double v202 = 0.0;
            *int v314 = 0u;
            v314[1] = 0u;
            if (v200)
            {
              if (v131 > v310)
              {
                *(void *)int v314 = v305 + 48 * v200;
                if (v129 > v310) {
                  *((void *)a5 + 120) = v322;
                }
              }
            }
            if (v129 >= v310) {
              *((void *)a5 + 118) = v193;
            }
            if (v201 && v129 >= v308) {
              *((void *)a5 + 119) = v327 + 48 * v201;
            }
            *((void *)a5 + 121) = v313;
            int v203 = v127[51].u8[0];
            a5[912] = 0;
            int v204 = v127[52].u8[2];
            if (v204 == 25)
            {
              sub_221A1361C((uint64_t)v127, (uint64_t)a5);
              *(void *)&long long v205 = 0x2222222222222222;
              *((void *)&v205 + 1) = 0x2222222222222222;
              *int v313 = v205;
              v313[1] = v205;
LABEL_174:
              if (*((void *)a5 + 118))
              {
                *uint64_t v322 = *v193;
                int v206 = (int16x8_t *)(v327 + 48 * v192);
                *uint64_t v323 = v206[1];
                char *i8 = v206[2].i8[0];
              }
              *uint64_t v193 = *((int16x8_t *)a5 + 55);
              uint64_t v207 = (int32x4_t *)(v327 + 48 * v192);
              int32x4_t v93 = *((int32x4_t *)a5 + 56);
              v207[1] = v93;
              v207[2].i8[0] = a5[912];
              goto LABEL_134;
            }
            if (v127[52].u8[1] | v204)
            {
LABEL_163:
              sub_2219EF11C((uint64_t)v127, (uint64_t)v127, (uint64_t)a5, v302);
              sub_2219D4BDC((uint64_t)v127, (uint64_t)a5);
            }
            else if (v127[52].i8[3] == 1)
            {
              a5[912] = 1;
              if (v203) {
                sub_2219EE180((uint64_t)v127, 0.0, (int8x16_t)v94, *(double *)v95.i64, *(double *)v96.i64, *(double *)v97.i64, (int8x16_t)v98, (uint64_t)v127, (uint64_t)a5, v297);
              }
              sub_2219D32C4((uint64_t)v127, (uint64_t)a5, v202, *(double *)v94.i64, *(double *)v95.i64, *(double *)v96.i64, *(double *)v97.i64, (int16x8_t)v98, (int16x8_t)v99);
            }
            else
            {
              if (v127[52].i8[3]) {
                goto LABEL_163;
              }
              if (v203) {
                sub_2219ED5BC(v127, (uint64_t)v127, (uint64_t)a5);
              }
              sub_2219D06F8((uint64_t)v127, (uint64_t)a5);
            }
            if (v127[51].i8[1])
            {
              uint64_t result = sub_2219EF990(v127, (uint64_t)v127, (uint64_t)a5);
              if (result) {
                goto LABEL_234;
              }
            }
            else
            {
              v299[14] = 0u;
              v299[15] = 0u;
              v299[12] = 0u;
              v299[13] = 0u;
              v299[10] = 0u;
              v299[11] = 0u;
              v299[8] = 0u;
              v299[9] = 0u;
              v299[6] = 0u;
              v299[7] = 0u;
              v299[4] = 0u;
              v299[5] = 0u;
              v299[2] = 0u;
              v299[3] = 0u;
              *uint64_t v299 = 0u;
              v299[1] = 0u;
            }
            uint64_t result = sub_2219D4CD8((uint64_t)v127, (int16x8_t *)a5);
            if (result) {
              goto LABEL_234;
            }
            goto LABEL_174;
          }
          char v197 = v127[51].i8[0];
          if (v127[52].i8[3])
          {
            if (v127[51].i8[0]) {
              sub_2219EE180((uint64_t)v127, *(double *)v93.i64, (int8x16_t)v94, *(double *)v95.i64, *(double *)v96.i64, *(double *)v97.i64, (int8x16_t)v98, (uint64_t)v127, (uint64_t)a5, v306);
            }
            uint64_t v198 = v327;
            uint64_t v193 = (int16x8_t *)(v327 + 48 * v192 + 16);
            char v197 = 1;
            int v199 = v323;
          }
          else
          {
            if (v127[51].i8[0])
            {
              sub_2219ED5BC(v127, (uint64_t)v127, (uint64_t)a5);
              char v197 = 0;
            }
            int v199 = v322;
            uint64_t v198 = v327;
          }
          *int v199 = *v193;
          char *i8 = v197;
          v195.i64[0] = 0x2222222222222222;
          v195.i64[1] = 0x2222222222222222;
          *uint64_t v193 = v195;
          *(unsigned char *)(v198 + 48 * v192 + 32) = v197;
          if (v127[51].i8[1])
          {
            uint64_t result = sub_2219EF990(v127, (uint64_t)v127, (uint64_t)a5);
            if (result) {
              goto LABEL_234;
            }
          }
        }
        uint64_t v196 = *((void *)a5 + 128);
        if (*(_DWORD *)(v196 + 356) || *(_DWORD *)(v196 + 360)) {
          int32x4_t v93 = (int32x4_t)sub_22199D3FC((uint64_t)v127, (int16x8_t *)a5, (uint64_t)v341, v195, v94, (int8x16_t)v95, v96, v97, v98, (int8x16_t)v99, (int8x16_t)v100);
        }
        else {
          int32x4_t v93 = (int32x4_t)sub_221985214((uint64_t)v127, (int16x8_t *)a5, (int64x2_t)v195, *(double *)v94.i64, *(double *)v95.i64, *(double *)v96.i64, *(double *)v97.i64, v98, v99, v100);
        }
LABEL_134:
        uint64_t v17 = v343;
        uint64_t v30 = v326;
        v127 += 73;
        v130 += 16;
        ++v129;
        ++v131;
        --v128;
      }
      while (v128);
    }
    uint64_t v208 = v340;
    if (!v340)
    {
      signed int v15 = v321;
      int v209 = v316;
      goto LABEL_230;
    }
    signed int v15 = v321;
    int v209 = v316;
    if (v334 != v321)
    {
LABEL_230:
      if (v101 || *v311)
      {
        int v24 = 0;
        int v316 = v209 + 1;
        int v32 = v312 + v15;
        uint64_t v16 = v331;
        v318 += v331;
        v317 += v331;
        uint64_t v33 = v208 + 1;
        uint64_t v34 = v307;
        continue;
      }
      if (v296 == v208 + 1 && v334 == v15)
      {
        unsigned int v253 = v296 - 1;
        uint64_t result = sub_2219E5A18((uint64_t *)v27, v301, 0, v15, v296 - 1, v296, v93, (int32x4_t)v94, v95);
        if (result) {
          goto LABEL_234;
        }
        if (*(unsigned char *)(v27 + 224))
        {
          uint64_t result = sub_2219E2D58(v27, 0, v321, v340, v296, v304, a14);
        }
        else
        {
          *(_DWORD *)(v27 + 268) = *v298;
          uint64_t result = sub_2219E21C8(v27, 0, v321, v253, v296);
        }
        if (result) {
          goto LABEL_234;
        }
        if (*(_DWORD *)(v27 + 220))
        {
          uint64_t v255 = *(void *)(v303 + 32);
          uint64_t v254 = *(void *)(v303 + 40);
          int v256 = *(_DWORD *)(v303 + 136);
          int v257 = *(_DWORD *)(v303 + 152);
          uint64_t v258 = *(int *)(v303 + 100);
          if (*(unsigned char *)v303)
          {
            uint64_t v259 = v256;
            uint64_t v260 = v257;
            if (!*(unsigned char *)(v303 + 5)) {
              uint64_t v260 = 0;
            }
            v254 += v260;
            if (!*(unsigned char *)(v303 + 5)) {
              uint64_t v259 = 0;
            }
            v255 += v259;
            v256 *= 2;
            v257 *= 2;
          }
          uint64_t v261 = *(int *)(v303 + 132);
          uint64_t v262 = *(int *)(v303 + 148);
          uint64_t v263 = *(int *)(v303 + 116);
          if (v296 >= 2) {
            int v264 = 16 * v253 - 4;
          }
          else {
            int v264 = 0;
          }
          int v265 = 16 * v296;
          if (16 * v296 != v258) {
            int v265 = 16 * v296 - 4;
          }
          int v266 = v264 >> 1;
          int v267 = v265 >> 1;
          int v268 = v265 - v264;
          if (v265 > v264)
          {
            int v269 = (int8x16_t *)(v255 + v256 * (uint64_t)v264);
            do
            {
              int8x16_t v270 = vqtbl1q_s8((int8x16_t)(16843009 * v269->u8[0]), (int8x16_t)xmmword_221A36310);
              v269[-2] = v270;
              v269[-1] = v270;
              __int16 v271 = (int8x16_t *)((char *)v269 + v261);
              int8x16_t v272 = vqtbl1q_s8((int8x16_t)(16843009 * v269->u8[v261 - 1]), (int8x16_t)xmmword_221A36310);
              *__int16 v271 = v272;
              v271[1] = v272;
              int v269 = (int8x16_t *)((char *)v269 + v256);
              --v268;
            }
            while (v268);
          }
          _VF = __OFSUB__(v267, v266);
          int v273 = v267 - v266;
          if (!((v273 < 0) ^ _VF | (v273 == 0)))
          {
            char v274 = (int8x16_t *)(v254 + v257 * (uint64_t)v266);
            do
            {
              int8x16_t v275 = vqtbl1q_s8((int8x16_t)(65537 * *(unsigned __int16 *)((char *)&v274->u16[-1] + v262)), (int8x16_t)xmmword_221A36310);
              v274[-1] = vqtbl1q_s8((int8x16_t)(65537 * v274->u16[0]), (int8x16_t)xmmword_221A36310);
              *(int8x16_t *)((char *)v274 + v262) = v275;
              char v274 = (int8x16_t *)((char *)v274 + v257);
              --v273;
            }
            while (v273);
          }
          if (v296 <= 1)
          {
            int v276 = 0;
            uint64_t v277 = v255 - 32;
            uint64_t v278 = -2 * v256;
            do
            {
              if ((int)v261 >= -63)
              {
                uint64_t v279 = 0;
                do
                {
                  long long v280 = *(_OWORD *)(v277 + v279);
                  *(_OWORD *)(v277 - v256 + v279) = v280;
                  *(_OWORD *)(v277 + v278 + v279) = v280;
                  BOOL v236 = v279 < (int)v261 + 48;
                  v279 += 16;
                }
                while (v236);
              }
              v277 += v278;
              ++v276;
            }
            while (v276 != 10);
            int v281 = 0;
            uint64_t v282 = v254 - 16;
            do
            {
              if ((int)v262 >= -31)
              {
                uint64_t v283 = 0;
                do
                {
                  *(_OWORD *)(v282 - v257 + v283) = *(_OWORD *)(v282 + v283);
                  BOOL v236 = v283 < (int)v262 + 16;
                  v283 += 16;
                }
                while (v236);
              }
              v282 -= v257;
              ++v281;
            }
            while (v281 != 8);
          }
          if (v265 == v258)
          {
            int v284 = 0;
            uint64_t v285 = v256 * (v258 - 1);
            uint64_t v286 = v255 + v285 - 32;
            uint64_t v287 = 2 * v256;
            uint64_t v288 = v285 + v287;
            uint64_t v289 = v285 + v256 + v255 - 32;
            uint64_t v290 = v288 + v255 - 32;
            do
            {
              if ((int)v261 >= -63)
              {
                uint64_t v291 = 0;
                do
                {
                  long long v292 = *(_OWORD *)(v286 + v291);
                  *(_OWORD *)(v289 + v291) = v292;
                  *(_OWORD *)(v290 + v291) = v292;
                  BOOL v236 = v291 < v261 + 48;
                  v291 += 16;
                }
                while (v236);
              }
              v286 += v287;
              ++v284;
              v289 += v287;
              v290 += v287;
            }
            while (v284 != 10);
            int v293 = 0;
            uint64_t v294 = v254 + v257 * (v263 - 1) - 16;
            do
            {
              if ((int)v262 >= -31)
              {
                uint64_t v295 = 0;
                do
                {
                  *(_OWORD *)(v294 + v257 + v295) = *(_OWORD *)(v294 + v295);
                  BOOL v236 = v295 < v262 + 16;
                  v295 += 16;
                }
                while (v236);
              }
              v294 += v257;
              ++v293;
            }
            while (v293 != 8);
          }
        }
        sub_221A341D0(*(pthread_mutex_t **)(*(void *)(a2 + 88) + 16));
        *(_DWORD *)(*(void *)(a2 + 88) + 12) = 0x7FFFFFFF;
        sub_221A34274(*(pthread_cond_t **)(*(void *)(a2 + 88) + 24));
        sub_221A341DC(*(pthread_mutex_t **)(*(void *)(a2 + 88) + 16));
      }
      uint64_t result = 0;
      *a8 = *((_DWORD *)a5 + 248);
      goto LABEL_234;
    }
    break;
  }
  uint64_t result = sub_2219E5A18((uint64_t *)v27, v301, 0, v321, v316 - 1, v340, v93, (int32x4_t)v94, v95);
  if (!result)
  {
    if (*(unsigned char *)(v27 + 224))
    {
      if (!*(void *)(v27 + 232)) {
        *(void *)(v27 + 232) = sub_221A12A5C((void *)(20 * *(_DWORD *)(v303 + 136)
      }
                                                                    + 11 * *(_DWORD *)(v303 + 152)));
      uint64_t result = sub_2219E2D58(v27, 0, v321, v316 - 1, v340, v304, a14);
      BOOL v304 = 1;
    }
    else
    {
      *(_DWORD *)(v27 + 268) = *v298;
      uint64_t result = sub_2219E21C8(v27, 0, v321, v316 - 1, v340);
    }
    if (!result)
    {
      int v209 = v316;
      uint64_t v208 = v340;
      if (*(_DWORD *)(v27 + 220))
      {
        uint64_t v211 = *(void *)(v303 + 32);
        uint64_t v210 = *(void *)(v303 + 40);
        int v212 = *(_DWORD *)(v303 + 136);
        int v213 = *(_DWORD *)(v303 + 152);
        if (*(unsigned char *)v303)
        {
          uint64_t v214 = v212;
          uint64_t v215 = v213;
          if (!*(unsigned char *)(v303 + 5)) {
            uint64_t v215 = 0;
          }
          v210 += v215;
          if (!*(unsigned char *)(v303 + 5)) {
            uint64_t v214 = 0;
          }
          v211 += v214;
          v212 *= 2;
          v213 *= 2;
        }
        uint64_t v216 = *(int *)(v303 + 132);
        uint64_t v217 = *(int *)(v303 + 148);
        uint64_t v218 = *(int *)(v303 + 100);
        uint64_t v219 = *(int *)(v303 + 116);
        int v220 = 16 * v340;
        int v221 = 16 * v340 - 20;
        if (v340 < 2) {
          int v221 = 0;
        }
        if (v220 != v218) {
          v220 -= 4;
        }
        int v222 = v220 - v221;
        if (v220 > v221)
        {
          uint64_t v223 = (int8x16_t *)(v211 + v212 * (uint64_t)v221);
          do
          {
            int8x16_t v224 = vqtbl1q_s8((int8x16_t)(16843009 * v223->u8[0]), (int8x16_t)xmmword_221A36310);
            v223[-2] = v224;
            v223[-1] = v224;
            uint64_t v225 = (int8x16_t *)((char *)v223 + v216);
            int8x16_t v226 = vqtbl1q_s8((int8x16_t)(16843009 * v223->u8[v216 - 1]), (int8x16_t)xmmword_221A36310);
            *uint64_t v225 = v226;
            v225[1] = v226;
            uint64_t v223 = (int8x16_t *)((char *)v223 + v212);
            --v222;
          }
          while (v222);
        }
        int v227 = v221 >> 1;
        int v228 = (v220 >> 1) - (v221 >> 1);
        if (v220 >> 1 > v227)
        {
          uint64_t v229 = (int8x16_t *)(v210 + v213 * (uint64_t)v227);
          do
          {
            int8x16_t v230 = vqtbl1q_s8((int8x16_t)(65537 * *(unsigned __int16 *)((char *)&v229->u16[-1] + v217)), (int8x16_t)xmmword_221A36310);
            v229[-1] = vqtbl1q_s8((int8x16_t)(65537 * v229->u16[0]), (int8x16_t)xmmword_221A36310);
            *(int8x16_t *)((char *)v229 + v217) = v230;
            uint64_t v229 = (int8x16_t *)((char *)v229 + v213);
            --v228;
          }
          while (v228);
        }
        if (v340 <= 1)
        {
          int v231 = 0;
          uint64_t v232 = v211 - 32;
          uint64_t v233 = -2 * v212;
          do
          {
            if ((int)v216 >= -63)
            {
              uint64_t v234 = 0;
              do
              {
                long long v235 = *(_OWORD *)(v232 + v234);
                *(_OWORD *)(v232 - v212 + v234) = v235;
                *(_OWORD *)(v232 + v233 + v234) = v235;
                BOOL v236 = v234 < (int)v216 + 48;
                v234 += 16;
              }
              while (v236);
            }
            v232 += v233;
            ++v231;
          }
          while (v231 != 10);
          int v237 = 0;
          uint64_t v238 = v210 - 16;
          do
          {
            if ((int)v217 >= -31)
            {
              uint64_t v239 = 0;
              do
              {
                *(_OWORD *)(v238 - v213 + v239) = *(_OWORD *)(v238 + v239);
                BOOL v236 = v239 < (int)v217 + 16;
                v239 += 16;
              }
              while (v236);
            }
            v238 -= v213;
            ++v237;
          }
          while (v237 != 8);
        }
        if (v220 == v218)
        {
          int v240 = 0;
          uint64_t v241 = v212 * (v218 - 1);
          uint64_t v242 = v211 - 32;
          uint64_t v243 = v211 - 32 + v241;
          uint64_t v244 = 2 * v212;
          uint64_t v245 = v242 + v241 + v212;
          uint64_t v246 = v242 + v241 + v244;
          do
          {
            if ((int)v216 >= -63)
            {
              uint64_t v247 = 0;
              do
              {
                long long v248 = *(_OWORD *)(v243 + v247);
                *(_OWORD *)(v245 + v247) = v248;
                *(_OWORD *)(v246 + v247) = v248;
                BOOL v236 = v247 < v216 + 48;
                v247 += 16;
              }
              while (v236);
            }
            v243 += v244;
            ++v240;
            v245 += v244;
            v246 += v244;
          }
          while (v240 != 10);
          int v249 = 0;
          uint64_t v250 = v210 + v213 * (v219 - 1) - 16;
          do
          {
            if ((int)v217 >= -31)
            {
              uint64_t v251 = 0;
              do
              {
                *(_OWORD *)(v250 + v213 + v251) = *(_OWORD *)(v250 + v251);
                BOOL v236 = v251 < v217 + 16;
                v251 += 16;
              }
              while (v236);
            }
            v250 += v213;
            ++v249;
          }
          while (v249 != 8);
        }
      }
      sub_221A341D0(*(pthread_mutex_t **)(*(void *)(a2 + 88) + 16));
      *(_DWORD *)(*(void *)(a2 + 88) + 12) = v340 - 2;
      sub_221A34274(*(pthread_cond_t **)(*(void *)(a2 + 88) + 24));
      sub_221A341DC(*(pthread_mutex_t **)(*(void *)(a2 + 88) + 16));
      signed int v15 = v321;
      goto LABEL_230;
    }
  }
LABEL_234:
  if (a9) {
    *a9 = 0;
  }
  if (a10) {
    *a10 = 0;
  }
  if (result)
  {
    int v252 = *((_DWORD *)a5 + 248);
    if (v252) {
      *a8 = v252 - 1;
    }
  }
  return result;
}

void sub_221A09024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(a5 + 12) = *(unsigned char *)(a5 + 1423168);
  uint64_t v5 = *(void *)(a5 + 1016);
  *(unsigned char *)(a5 + 13) = *(unsigned char *)(v5 + 56);
  *(unsigned char *)(a5 + 14) = *(unsigned char *)(v5 + 57);
  *(_DWORD *)(a5 + 16) = *(_DWORD *)(a5 + 996);
  *(_WORD *)(a5 + 20) = *(_WORD *)(a5 + 1005);
  *(unsigned char *)(a5 + 24) = *(unsigned char *)(a5 + 1164);
  uint64_t v6 = *(void *)(a5 + 1192);
  *(unsigned char *)(a5 + 22) = *(unsigned char *)(v6 + 1363);
  *(unsigned char *)(a5 + 23) = 0;
  *(void *)(a5 + 64) = a5 + 1200;
  *(void *)(a5 + 72) = v6 + 32;
  *(void *)(a5 + 80) = *(void *)(a5 + 1312);
  *(unsigned char *)(a5 + 928) = *(unsigned char *)(*(void *)(a5 + 1024) + 4);
  *(unsigned char *)(a5 + 36) = 0;
  *(void *)(a5 + 88) = v6;
  *(_DWORD *)(a5 + 96) = *(_DWORD *)(a5 + 1060);
  uint64_t v7 = *(void *)(a5 + 1176);
  *(unsigned char *)a5 = *(_DWORD *)(a5 + 1428264) + *(unsigned char *)(a4 + 72) + 26;
  sub_221901768(v7);
}

uint64_t sub_221A0A590(uint64_t a1, uint64_t a2, int32x4_t a3, __n128 a4, int8x16_t a5, uint64_t a6, uint64_t a7, char *a8, int a9, unsigned int a10, _DWORD *a11, _DWORD *a12, _DWORD *a13, unsigned __int8 a14, int a15, unsigned char *a16, _DWORD *a17)
{
  signed int v18 = *(_DWORD *)(a2 + 4);
  signed int v19 = *(_DWORD *)(a2 + 16);
  uint64_t v361 = (int *)(a8 + 976);
  uint64_t v362 = *(void *)(a2 + 560);
  uint64_t v20 = *(void *)(a2 + 568);
  a8[12] = a8[1423168];
  uint64_t v21 = *((void *)a8 + 127);
  a8[13] = *(unsigned char *)(v21 + 56);
  a8[14] = *(unsigned char *)(v21 + 57);
  *((_DWORD *)a8 + 4) = *((_DWORD *)a8 + 249);
  *((_WORD *)a8 + 10) = *(_WORD *)(a8 + 1005);
  a8[24] = a8[1164];
  uint64_t v22 = *((void *)a8 + 149);
  a8[22] = *(unsigned char *)(v22 + 1363);
  a8[23] = 0;
  *((void *)a8 + 8) = a8 + 1200;
  *((void *)a8 + 9) = v22 + 32;
  uint64_t v23 = *((void *)a8 + 164);
  *((void *)a8 + 10) = v23;
  a8[928] = *(unsigned char *)(*((void *)a8 + 128) + 4);
  *(void *)(a8 + 28) = 0;
  a8[36] = 0;
  *((void *)a8 + 11) = v22;
  *((_DWORD *)a8 + 24) = *((_DWORD *)a8 + 265);
  *a8 = *((_DWORD *)a8 + 357066) + *(_DWORD *)(a7 + 72) + 26;
  int v24 = (unsigned int *)(*(void *)(v23 + 48) + 12 * a9);
  *int v24 = (63 * *(_DWORD *)(a2 + 156)) >> 6;
  v24[1] = 1;
  uint64_t v359 = a8 + 1423168;
  unsigned int v25 = *((_DWORD *)a8 + 356390);
  if (a8[1161])
  {
    int v26 = (int)v25 % (2 * v18) / 2;
    if (a8[1007] + 2 * ((int)v25 / (2 * v18)) == 1) {
      int v27 = *((_DWORD *)a8 + 356390) & 1;
    }
    else {
      int v27 = 0;
    }
  }
  else
  {
    int v27 = (int)v25 / v18;
    int v26 = (int)v25 % v18;
  }
  int v28 = a17;
  BOOL v29 = v27 != 0;
  if (a16) {
    *a16 = 1;
  }
  uint64_t v30 = *((void *)a8 + 149) + 1152;
  uint64_t v31 = *((void *)a8 + 9);
  uint64_t v32 = *((void *)a8 + 10);
  *(void *)(v32 + 80) = v31;
  int v33 = *(_DWORD *)(v31 + 100) >> 4;
  *(_DWORD *)(v32 + 8) = v33;
  *(_DWORD *)(v32 + 20) = *(_DWORD *)(v32 + 12) * v33;
  unsigned int v351 = a8[1425576] == 0;
  uint64_t v34 = *((void *)a8 + 9);
  uint64_t v340 = *(int *)(v34 + 136);
  uint64_t v347 = v34;
  uint64_t v339 = *(int *)(v34 + 152);
  signed int v35 = *((_DWORD *)a8 + 7);
  int v36 = v35 - v18;
  if (v35 <= v18) {
    int v36 = 0;
  }
  *((_DWORD *)a8 + 7) = v36;
  uint64_t v350 = *((void *)a8 + 127);
  if (v27 >= v19)
  {
    int v129 = 0;
    goto LABEL_249;
  }
  uint64_t v318 = v31;
  uint64_t v319 = v30;
  int v334 = (signed int *)(a8 + 28);
  BOOL v320 = v27 != 0;
  uint64_t v325 = a2;
  signed int v37 = (uint64_t *)(a8 + 1458248);
  uint64_t v360 = (uint64_t)(a8 + 1425504);
  signed int v317 = v19;
  uint64_t v328 = v19;
  if (v35 >= v18) {
    signed int v38 = v18;
  }
  else {
    signed int v38 = v35;
  }
  uint64_t v323 = v20 - 48;
  uint64_t v348 = v20;
  unsigned int v39 = (int16x8_t *)(v20 + 48 * v18);
  uint64_t v343 = v39;
  uint64_t v344 = v39 + 1;
  i8 = v39[2].i8;
  uint64_t v324 = (uint64_t)(a8 + 1424400);
  uint64_t v314 = (uint64_t)(a8 + 1423632);
  long long v332 = a8 + 936;
  int v337 = a8 + 880;
  uint64_t v322 = (uint64_t)(a8 + 1425168);
  signed int v321 = a8 + 624;
  uint64_t v315 = (_DWORD *)(a1 + 5041852);
  uint64_t v316 = a1;
  int v40 = v27 * v18;
  uint64_t v41 = v27;
  uint64_t v330 = (int)v25;
  uint64_t v329 = (int)v25 - 1;
  uint64_t v349 = v18;
  uint64_t v42 = -(uint64_t)v18;
  __int16 v333 = v27 * v18 - 1;
  unsigned int v43 = a8 + 1458264;
  signed int v338 = v18;
  uint64_t v327 = a8 + 1458264;
  do
  {
    int v331 = v27;
    uint64_t v335 = v40;
    int v353 = &v43[8 * !(v41 & 1)];
    uint64_t v358 = v41;
    int v44 = v18 * v41;
    int8x16_t v352 = (uint64_t *)&v43[8 * (v41 & 1)];
    int v354 = v26 + v40;
    uint64_t v45 = v26;
    uint64_t v355 = v44;
    uint64_t v336 = v26;
    while (1)
    {
      unsigned int v25 = v45 + v355;
      uint64_t result = 4294958327;
      if (v45 + v355 >= *(int *)(v32 + 20) || v354 < 0) {
        goto LABEL_305;
      }
      uint64_t v47 = v362 + 1168 * v45;
      **((_DWORD **)a8 + 144) = v25;
      *((_DWORD *)a8 + 248) = v25;
      *((_DWORD *)a8 + 244) = v45;
      *((_DWORD *)a8 + 245) = v358;
      *(_DWORD *)(v47 + 820) = v25;
      *(_DWORD *)(v47 + 824) = v45;
      *(_DWORD *)(v47 + 828) = v358;
      uint64_t v48 = *(void *)v353;
      *signed int v37 = *v352;
      *((void *)a8 + 182282) = v48;
      *((void *)a8 + 144) = v48 + 400 * v45;
      *(void *)(*((void *)a8 + 182282) + 400 * v45 + 112) = sub_221A15AE4(*(void *)(*(void *)(*((void *)a8 + 149) + 1152)
                                                                                        + 8 * a10));
      sub_221A12FA8(*((_DWORD *)v359 + 598), *v37, *((void *)a8 + 182282), v361);
      unsigned int v49 = a8[1004];
      if (v49 <= 9 && ((1 << v49) & 0x294) != 0) {
        goto LABEL_20;
      }
      if (v38) {
        goto LABEL_35;
      }
      if (*((_DWORD *)a8 + 8) == 1)
      {
        signed int v38 = 0;
        goto LABEL_20;
      }
      uint64_t v82 = *((void *)v359 + 294);
      char v83 = (unsigned int *)*((void *)v359 + 295);
      int v84 = *((_DWORD *)v359 + 592);
      uint64_t v85 = v359[2372];
      unsigned int v86 = __clz(v84 | 1);
      if (!v84) {
        ++v86;
      }
      if (v86 > 0xC)
      {
        unint64_t v105 = v85 + 1;
        int v106 = (v85 + 1) & 7;
        unsigned int v107 = (unsigned int *)(v82 + (v105 >> 3));
        unsigned int v108 = bswap32(*v107) << v106;
        if (v107 <= v83) {
          char v109 = v107;
        }
        else {
          char v109 = (unsigned int *)*((void *)v359 + 295);
        }
        if (v84 < 0)
        {
          unsigned int v113 = 0;
        }
        else
        {
          unsigned int v110 = 0;
          do
          {
            unsigned int v111 = v108;
            char v112 = v106;
            unsigned int v113 = v110 + 1;
            unint64_t v114 = (v106 + 1);
            int v106 = ((_BYTE)v106 + 1) & 7;
            char v109 = (unsigned int *)((char *)v109 + (v114 >> 3));
            unsigned int v108 = bswap32(*v109) << (v114 & 7);
            if (v109 > v83) {
              char v109 = (unsigned int *)*((void *)v359 + 295);
            }
            if ((v111 & 0x80000000) != 0) {
              break;
            }
          }
          while (v110++ < 0x1F);
          if (v113 - 1 > 0x17)
          {
            unsigned int v116 = v108 >> (48 - v113);
            unsigned int v117 = ((v112 + 1) & 7) + v113;
            unint64_t v118 = v117 - 16;
            char v89 = v117 & 7;
            uint64_t v119 = (unsigned int *)((char *)v109 + (v118 >> 3));
            unsigned int v120 = bswap32(*v119) << v89;
            if (v119 <= v83) {
              int v121 = v119;
            }
            else {
              int v121 = (unsigned int *)*((void *)v359 + 295);
            }
            unsigned int v123 = *(unsigned int *)((char *)v121 + 2);
            uint64_t v122 = (unsigned int *)((char *)v121 + 2);
            unsigned int v91 = bswap32(v123) << v89;
            if (v122 <= v83) {
              char v83 = v122;
            }
            int v124 = __PAIR64__(v116, v120) >> 16;
LABEL_100:
            signed int v38 = v124 + ~(-1 << v113);
            goto LABEL_101;
          }
        }
        int v124 = v108 >> -(char)v113;
        unint64_t v127 = v113 + v106;
        char v89 = (v113 + v106) & 7;
        int v128 = (unsigned int *)((char *)v109 + (v127 >> 3));
        unsigned int v91 = bswap32(*v128) << v89;
        if (v128 <= v83) {
          char v83 = v128;
        }
        goto LABEL_100;
      }
      unsigned int v87 = (v84 << (v86 + 1)) >> -(char)v86;
      if (!v86) {
        unsigned int v87 = 0;
      }
      signed int v38 = v87 + ~(-1 << v86);
      unint64_t v88 = v85 + 2 * v86 + 1;
      char v89 = v88 & 7;
      unsigned int v90 = (unsigned int *)(v82 + (v88 >> 3));
      unsigned int v91 = bswap32(*v90) << (v88 & 7);
      if (v90 <= v83) {
        char v83 = v90;
      }
LABEL_101:
      *((void *)v359 + 294) = v83;
      *((_DWORD *)v359 + 592) = v91;
      v359[2372] = v89;
      if (v38 + (int)v355 + (int)v45 > *(_DWORD *)(v32 + 20)) {
        goto LABEL_257;
      }
      *((_DWORD *)a8 + 8) = sub_2219F3948(v360);
      if (v38 + (int)v45 > v338)
      {
        *int v334 = v38 + v45 - v338;
        signed int v38 = v338 - v45;
      }
      if (v38)
      {
LABEL_35:
        *(unsigned char *)(v362 + 1168 * v45 + 832) = 1;
        LOBYTE(v54) = *a8;
        *((_DWORD *)a8 + 2) = 0;
        uint64_t result = sub_221A13A20((uint64_t)v361);
        if (result) {
          goto LABEL_305;
        }
        uint64_t v75 = (unsigned char *)*((void *)a8 + 128);
        if (!v75[5] || !*(unsigned char *)(**((void **)a8 + 151) + 1364))
        {
          int v76 = *(unsigned __int8 *)(*((void *)a8 + 127) + 1);
          if (v76 == 5 || v76 == 3)
          {
            uint64_t v77 = v75[272];
            if (v75[272])
            {
              int v78 = v75 + 31;
              while (1)
              {
                int v79 = *v78;
                v78 += 16;
                if (v79 == 3) {
                  break;
                }
                if (!--v77) {
                  goto LABEL_95;
                }
              }
              uint64_t v125 = *((void *)a8 + 163);
              if (v358 > *(int *)(v125 + 12))
              {
                sub_221A341D0(*(pthread_mutex_t **)(v125 + 16));
                for (uint64_t i = *(int *)(v125 + 12); v358 > i; uint64_t i = *(int *)(v125 + 12))
                  sub_221A34280(*(pthread_cond_t **)(v125 + 24), *(pthread_mutex_t **)(v125 + 16));
                sub_221A341DC(*(pthread_mutex_t **)(v125 + 16));
              }
            }
          }
        }
LABEL_95:
        uint64_t result = sub_221916B0C((uint64_t)v361, v47, v73, v74);
        if (result) {
          goto LABEL_305;
        }
        unsigned int v92 = 0;
        --v38;
        goto LABEL_62;
      }
LABEL_20:
      *(unsigned char *)(v362 + 1168 * v45 + 832) = 0;
      *((_DWORD *)a8 + 8) = 0;
      int v50 = (int8x16_t *)*((void *)a8 + 144);
      v50[5].i64[0] = 0;
      v50[5].i64[1] = 0;
      uint64_t result = sub_221A1C2F0(v360, v351, a14, a15, (uint64_t)v361, (unsigned char *)v47);
      if (result) {
        goto LABEL_305;
      }
      *((_DWORD *)a8 + 2) = 1;
      int v53 = *(char *)(v350 + 54);
      if ((*(unsigned char *)(v350 + 54) - 26) < 0xCCu)
      {
LABEL_257:
        uint64_t result = 4294958327;
        goto LABEL_305;
      }
      unsigned int v54 = v53
          + *a8
          + 52
          - 52 * (((20165 * (v53 + *a8 + 52)) >> 20) + ((20165 * (v53 + *a8 + 52)) >> 31));
      *a8 = v53 + *a8 + 52 - 52 * (((20165 * (v53 + *a8 + 52)) >> 20) + (20165 * (v53 + *a8 + 52) < 0));
      int8x16_t v55 = (unsigned char *)(v362 + 1168 * v45);
      v55[818] = v54;
      int v56 = *(unsigned __int8 *)(*((void *)a8 + 127) + 1);
      v55[833] = v56;
      v55[834] = *(unsigned char *)(*((void *)a8 + 127) + 2);
      v55[835] = *(unsigned char *)(*((void *)a8 + 127) + 3);
      if (v56)
      {
        if (*(unsigned char *)(v362 + 1168 * v45 + 816))
        {
          uint16x8_t v57 = (uint16x8_t)vqtbl1q_s8(vqtbl1q_s8(vcgtzq_s8(v50[5]), (int8x16_t)xmmword_221A37AC0), (int8x16_t)xmmword_221A37AD0);
          v58.i64[0] = 0x7000700070007;
          v58.i64[1] = 0x7000700070007;
          int8x16_t v59 = vorrq_s8((int8x16_t)vshlq_n_s16((int16x8_t)v57, 8uLL), (int8x16_t)vshlq_u16(v57, v58));
          int8x16_t v60 = vandq_s8(vcltzq_s8(v59), (int8x16_t)xmmword_221A37900);
          int8x16_t v61 = vpaddq_s8(v60, v60);
          int8x16_t v62 = vpaddq_s8(v61, v61);
          unsigned __int16 v63 = vpaddq_s8(v62, v62).u16[0];
          int8x16_t v64 = vzip1q_s8((int8x16_t)vdupq_laneq_s64((int64x2_t)v59, 1), v59);
          int16x8_t v52 = (int16x8_t)xmmword_221A368F0;
          int8x16_t v65 = vandq_s8(vcltzq_s8(vqtbl1q_s8(vzip1q_s8(v64, (int8x16_t)vdupq_laneq_s64((int64x2_t)v64, 1)), (int8x16_t)xmmword_221A368F0)), (int8x16_t)xmmword_221A37900);
          int8x16_t v66 = vpaddq_s8(v65, v65);
          int8x16_t v67 = vpaddq_s8(v66, v66);
          int16x8_t v51 = (int16x8_t)vpaddq_s8(v67, v67);
          *(_DWORD *)(*(void *)(v32 + 32) + 4 * (v45 + v355)) = v51.u16[0] | (v63 << 16);
        }
        int16x8_t v68 = (unsigned char *)*((void *)a8 + 128);
        if (!v68[5] || !*(unsigned char *)(**((void **)a8 + 151) + 1364))
        {
          int v69 = *(unsigned __int8 *)(*((void *)a8 + 127) + 1);
          if (v69 == 5 || v69 == 3)
          {
            uint64_t v70 = v68[272];
            if (v68[272])
            {
              uint64_t v71 = v68 + 31;
              while (1)
              {
                int v72 = *v71;
                v71 += 16;
                if (v72 == 3) {
                  break;
                }
                if (!--v70) {
                  goto LABEL_60;
                }
              }
              uint64_t v80 = *((void *)a8 + 163);
              if (v358 > *(int *)(v80 + 12))
              {
                sub_221A341D0(*(pthread_mutex_t **)(v80 + 16));
                for (uint64_t j = *(int *)(v80 + 12); v358 > j; uint64_t j = *(int *)(v80 + 12))
                  sub_221A34280(*(pthread_cond_t **)(v80 + 24), *(pthread_mutex_t **)(v80 + 16));
                sub_221A341DC(*(pthread_mutex_t **)(v80 + 16));
              }
            }
          }
        }
LABEL_60:
        uint64_t result = sub_221916B0C((uint64_t)v361, v47, v51, v52);
        if (result) {
          goto LABEL_305;
        }
      }
      unsigned int v92 = -1;
LABEL_62:
      sub_221A13094((uint64_t)v361, a10);
      if (*(unsigned char *)(v362 + 1168 * v45 + 833) || *(unsigned char *)(v362 + 1168 * v45 + 834) != 25)
      {
        unsigned int v93 = (char)v54;
        unsigned int v96 = a8[13] + (char)v54;
        unsigned int v97 = a8[14] + (char)v54;
        if (v96 >= 0x33) {
          unsigned int v96 = 51;
        }
        if (v97 >= 0x33) {
          unsigned int v97 = 51;
        }
        char v94 = byte_221A39F60[v96];
        char v95 = byte_221A39F60[v97];
      }
      else
      {
        unsigned int v93 = 0;
        char v94 = 0;
        char v95 = 0;
      }
      *(_WORD *)(*(void *)(v32 + 72) + 2 * v25) = a9;
      *(unsigned char *)(*(void *)(v32 + 112) + v25) = v93;
      *(unsigned char *)(*(void *)(v32 + 120) + v25) = v94;
      *(unsigned char *)(*(void *)(v32 + 128) + v25) = v95;
      *(unsigned char *)(*(void *)(v32 + 136) + v25) = *(unsigned char *)(*((void *)a8 + 127) + 3);
      *(int32x2_t *)(*(void *)(v32 + 48) + 12 * a9) = vadd_s32(*(int32x2_t *)(*(void *)(v32 + 48) + 12 * a9), (int32x2_t)vand_s8((int8x8_t)(v93 | 0x100000000), (int8x8_t)vdup_n_s32(v92)));
      ++v45;
      BOOL v98 = sub_2219F3948(v360);
      BOOL v104 = v98;
      if (v45 >= v349) {
        break;
      }
      if (!(v98 | v38)) {
        goto LABEL_107;
      }
    }
    int v129 = v338;
    if (!v98)
    {
LABEL_107:
      BOOL v104 = 0;
      if (*v334) {
        int v129 = v338;
      }
      else {
        int v129 = v45;
      }
    }
    int v313 = v129;
    if (v129 > (int)v336)
    {
      uint64_t v130 = 0;
      uint64_t v131 = (int8x16_t *)(v362 + 1168 * (int)v336);
      int v341 = v129 - v336;
      int v132 = 16 * v336;
      uint64_t v342 = v336 + v335;
      while (1)
      {
        int v133 = 32 * v358;
        int v134 = 16 * v358;
        if (!*(unsigned char *)v347)
        {
          int v133 = 16 * v358;
          int v134 = 8 * v358;
        }
        uint64_t v135 = *(void *)(v347 + 32) + v132 + (v133 * *(_DWORD *)(v347 + 136));
        int v136 = a8[20];
        if ((v135 & 0x3F) == 0)
        {
          if (a8[21]) {
            uint64_t v137 = v340;
          }
          else {
            uint64_t v137 = 0;
          }
          int v138 = v340 << (v136 != 0);
          if (!a8[20]) {
            uint64_t v137 = 0;
          }
          _X13 = v135 + v137;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
          _X13 = _X13 + v138;
          __asm { PRFM            #0, [X13] }
        }
        uint64_t v174 = *(void *)(v347 + 40) + v132 + (v134 * *(_DWORD *)(v347 + 152));
        if ((v174 & 0x3F) == 0)
        {
          if (a8[21]) {
            uint64_t v175 = v339;
          }
          else {
            uint64_t v175 = 0;
          }
          _ZF = v136 == 0;
          int v176 = v339 << (v136 != 0);
          if (_ZF) {
            uint64_t v175 = 0;
          }
          _X9 = v174 + v175;
          __asm { PRFM            #0, [X9] }
          _X9 = _X9 + v176;
          __asm { PRFM            #0, [X9] }
          _X9 = _X9 + v176;
          __asm { PRFM            #0, [X9] }
          _X9 = _X9 + v176;
          __asm { PRFM            #0, [X9] }
          _X9 = _X9 + v176;
          __asm { PRFM            #0, [X9] }
          _X9 = _X9 + v176;
          __asm { PRFM            #0, [X9] }
          _X9 = _X9 + v176;
          __asm { PRFM            #0, [X9] }
          _X8 = _X9 + v176;
          __asm { PRFM            #0, [X8] }
        }
        uint64_t result = 4294958327;
        uint64_t v193 = v342 + v130;
        if (v342 + v130 < 0 || v193 >= *(int *)(v32 + 20)) {
          goto LABEL_305;
        }
        unsigned __int32 v194 = v131[51].u32[2];
        int16x8_t v195 = (int16x8_t *)(v348 + 48 * v194);
        if (v131[52].i8[0])
        {
          *uint64_t v343 = *v195;
          uint64_t v196 = (int16x8_t *)(v348 + 48 * v194);
          *uint64_t v344 = v196[1];
          char *i8 = v196[2].i8[0];
          v197.i64[0] = 0x2222222222222222;
          v197.i64[1] = 0x2222222222222222;
          *int16x8_t v195 = v197;
          v196[2].i8[0] = 0;
        }
        else
        {
          if (!v131[52].i8[1])
          {
            *((_DWORD *)a8 + 1) = 0;
            __int32 v202 = v131[51].i32[2];
            uint64_t v203 = v336 + v335 + v42 + v130;
            if (v202 + 1 == v338) {
              __int32 v204 = 0;
            }
            else {
              __int32 v204 = v202 + 1;
            }
            double v205 = 0.0;
            *long long v332 = 0u;
            v332[1] = 0u;
            if (v202)
            {
              if (v193 > v330)
              {
                *(void *)long long v332 = v323 + 48 * v202;
                if (v203 > v330) {
                  *((void *)a8 + 120) = v343;
                }
              }
            }
            if (v203 >= v330) {
              *((void *)a8 + 118) = v195;
            }
            if (v204 && v203 >= v329) {
              *((void *)a8 + 119) = v348 + 48 * v204;
            }
            *((void *)a8 + 121) = v337;
            int v206 = v131[51].u8[0];
            a8[912] = 0;
            int v207 = v131[52].u8[2];
            if (v207 == 25)
            {
              sub_221A1361C((uint64_t)v131, (uint64_t)a8);
              *(void *)&long long v208 = 0x2222222222222222;
              *((void *)&v208 + 1) = 0x2222222222222222;
              *int v337 = v208;
              v337[1] = v208;
LABEL_176:
              if (*((void *)a8 + 118))
              {
                *uint64_t v343 = *v195;
                int v209 = (int16x8_t *)(v348 + 48 * v194);
                *uint64_t v344 = v209[1];
                char *i8 = v209[2].i8[0];
              }
              *int16x8_t v195 = *((int16x8_t *)a8 + 55);
              uint64_t v210 = (__n128 *)(v348 + 48 * v194);
              a3 = *((int32x4_t *)a8 + 56);
              v210[1] = (__n128)a3;
              v210[2].n128_u8[0] = a8[912];
              goto LABEL_136;
            }
            if (v131[52].u8[1] | v207)
            {
LABEL_165:
              sub_2219EE974(v131, (uint64_t)v131, (uint64_t)a8, v322);
              sub_2219D4AD4((uint64_t)v131, (uint64_t)a8);
            }
            else if (v131[52].i8[3] == 1)
            {
              a8[912] = 1;
              if (v206) {
                sub_2219ED988(v131, 0.0, a4.n128_f64[0], a5, v99.n128_f64[0], v100.n128_f64[0], (int8x16_t)v101, (uint64_t)v131, (uint64_t)a8, v314);
              }
              sub_2219D32C4((uint64_t)v131, (uint64_t)a8, v205, a4.n128_f64[0], *(double *)a5.i64, v99.n128_f64[0], v100.n128_f64[0], (int16x8_t)v101, (int16x8_t)v102);
            }
            else
            {
              if (v131[52].i8[3]) {
                goto LABEL_165;
              }
              if (v206) {
                sub_2219ED140(v131, (uint64_t)v131, (uint64_t)a8);
              }
              sub_2219D06F8((uint64_t)v131, (uint64_t)a8);
            }
            if (v131[51].i8[1])
            {
              uint64_t result = sub_2219EF418((int16x8_t *)v131, (uint64_t)v131, (uint64_t)a8);
              if (result) {
                goto LABEL_305;
              }
            }
            else
            {
              v321[14] = 0u;
              v321[15] = 0u;
              v321[12] = 0u;
              v321[13] = 0u;
              v321[10] = 0u;
              v321[11] = 0u;
              v321[8] = 0u;
              v321[9] = 0u;
              v321[6] = 0u;
              v321[7] = 0u;
              v321[4] = 0u;
              v321[5] = 0u;
              v321[2] = 0u;
              v321[3] = 0u;
              *signed int v321 = 0u;
              v321[1] = 0u;
            }
            uint64_t result = sub_2219D4CD8((uint64_t)v131, (int16x8_t *)a8);
            if (result) {
              goto LABEL_305;
            }
            goto LABEL_176;
          }
          char v199 = v131[51].i8[0];
          if (v131[52].i8[3])
          {
            if (v131[51].i8[0]) {
              sub_2219ED988(v131, *(double *)a3.i64, a4.n128_f64[0], a5, v99.n128_f64[0], v100.n128_f64[0], (int8x16_t)v101, (uint64_t)v131, (uint64_t)a8, v324);
            }
            uint64_t v200 = v348;
            int16x8_t v195 = (int16x8_t *)(v348 + 48 * v194 + 16);
            char v199 = 1;
            __int32 v201 = v344;
          }
          else
          {
            if (v131[51].i8[0])
            {
              sub_2219ED140(v131, (uint64_t)v131, (uint64_t)a8);
              char v199 = 0;
            }
            __int32 v201 = v343;
            uint64_t v200 = v348;
          }
          *__int32 v201 = *v195;
          char *i8 = v199;
          v197.i64[0] = 0x2222222222222222;
          v197.i64[1] = 0x2222222222222222;
          *int16x8_t v195 = v197;
          *(unsigned char *)(v200 + 48 * v194 + 32) = v199;
          if (v131[51].i8[1])
          {
            uint64_t result = sub_2219EF418((int16x8_t *)v131, (uint64_t)v131, (uint64_t)a8);
            if (result) {
              goto LABEL_305;
            }
          }
        }
        uint64_t v198 = *((void *)a8 + 128);
        if (*(_DWORD *)(v198 + 356) || *(_DWORD *)(v198 + 360)) {
          a3 = (int32x4_t)sub_2219906C0((uint64_t)v131, (int16x8_t *)a8, (uint64_t)v361, v197, a4, a5, (int16x8_t)v99, (int8x16_t)v100, v101, (int16x8_t)v102, (int16x8_t)v103);
        }
        else {
          a3 = (int32x4_t)sub_22197BBD8((uint64_t)v131, (__n128 *)a8, (int64x2_t)v197, a4.n128_f64[0], *(double *)a5.i64, v99, v100, v101, v102, v103);
        }
LABEL_136:
        v131 += 73;
        ++v130;
        v132 += 16;
        if (v341 == v130)
        {
          LOWORD(v25) = v336 + v333 + v130;
          int v129 = v313;
          break;
        }
      }
    }
    if (v358)
    {
      uint64_t v211 = *(void *)(v32 + 72);
      signed int v18 = v338;
      if (*(unsigned __int16 *)(v211 + 2 * (v358 - 1) * v349) != 60000
        && *(unsigned __int16 *)(v211 + 2 * ((int)v355 - 1)) != 60000
        && v313 == v338)
      {
        unsigned int v212 = v331 - 1;
        uint64_t result = sub_2219E5A18((uint64_t *)v32, v319, 0, v338, v331 - 1, v358, a3, (int32x4_t)a4, (int32x4_t)a5);
        if (result) {
          goto LABEL_305;
        }
        if (*(unsigned char *)(v32 + 224))
        {
          if (!*(void *)(v32 + 232)) {
            *(void *)(v32 + 232) = sub_221A12A5C((void *)(20 * *(_DWORD *)(v318 + 136)
          }
                                                                        + 11 * *(_DWORD *)(v318 + 152)));
          uint64_t result = sub_2219E2D58(v32, 0, v338, v212, v358, v320, a17);
          BOOL v320 = 1;
        }
        else
        {
          *(_DWORD *)(v32 + 268) = *v315;
          uint64_t result = sub_2219E21C8(v32, 0, v338, v212, v358);
        }
        if (result) {
          goto LABEL_305;
        }
        signed int v18 = v338;
        if (*(_DWORD *)(v32 + 220))
        {
          uint64_t v214 = *(void *)(v318 + 32);
          uint64_t v213 = *(void *)(v318 + 40);
          int v215 = *(_DWORD *)(v318 + 136);
          int v216 = *(_DWORD *)(v318 + 152);
          if (*(unsigned char *)v318)
          {
            uint64_t v217 = v215;
            uint64_t v218 = v216;
            if (!*(unsigned char *)(v318 + 5)) {
              uint64_t v218 = 0;
            }
            v213 += v218;
            if (!*(unsigned char *)(v318 + 5)) {
              uint64_t v217 = 0;
            }
            v214 += v217;
            v215 *= 2;
            v216 *= 2;
          }
          uint64_t v219 = *(int *)(v318 + 132);
          uint64_t v220 = *(int *)(v318 + 148);
          uint64_t v221 = *(int *)(v318 + 100);
          uint64_t v222 = *(int *)(v318 + 116);
          if (v358 >= 2) {
            int v223 = 16 * (v358 - 1) - 4;
          }
          else {
            int v223 = 0;
          }
          int v224 = 16 * v358;
          if (16 * v358 != v221) {
            int v224 = 16 * v358 - 4;
          }
          int v225 = v224 - v223;
          if (v224 > v223)
          {
            int8x16_t v226 = (int8x16_t *)(v214 + v215 * (uint64_t)v223);
            do
            {
              int8x16_t v227 = vqtbl1q_s8((int8x16_t)(16843009 * v226->u8[0]), (int8x16_t)xmmword_221A36310);
              v226[-2] = v227;
              v226[-1] = v227;
              int v228 = (int8x16_t *)((char *)v226 + v219);
              int8x16_t v229 = vqtbl1q_s8((int8x16_t)(16843009 * v226->u8[v219 - 1]), (int8x16_t)xmmword_221A36310);
              *int v228 = v229;
              v228[1] = v229;
              int8x16_t v226 = (int8x16_t *)((char *)v226 + v215);
              --v225;
            }
            while (v225);
          }
          int v230 = v223 >> 1;
          int v231 = (v224 >> 1) - (v223 >> 1);
          if (v224 >> 1 > v230)
          {
            uint64_t v232 = (int8x16_t *)(v213 + v216 * (uint64_t)v230);
            do
            {
              int8x16_t v233 = vqtbl1q_s8((int8x16_t)(65537 * *(unsigned __int16 *)((char *)&v232->u16[-1] + v220)), (int8x16_t)xmmword_221A36310);
              v232[-1] = vqtbl1q_s8((int8x16_t)(65537 * v232->u16[0]), (int8x16_t)xmmword_221A36310);
              *(int8x16_t *)((char *)v232 + v220) = v233;
              uint64_t v232 = (int8x16_t *)((char *)v232 + v216);
              --v231;
            }
            while (v231);
          }
          if (v358 <= 1)
          {
            int v234 = 0;
            uint64_t v235 = v214 - 32;
            uint64_t v236 = -2 * v215;
            do
            {
              if ((int)v219 >= -63)
              {
                uint64_t v237 = 0;
                do
                {
                  long long v238 = *(_OWORD *)(v235 + v237);
                  *(_OWORD *)(v235 - v215 + v237) = v238;
                  *(_OWORD *)(v235 + v236 + v237) = v238;
                  BOOL v239 = v237 < (int)v219 + 48;
                  v237 += 16;
                }
                while (v239);
              }
              v235 += v236;
              ++v234;
            }
            while (v234 != 10);
            int v240 = 0;
            uint64_t v241 = v213 - 16;
            do
            {
              if ((int)v220 >= -31)
              {
                uint64_t v242 = 0;
                do
                {
                  *(_OWORD *)(v241 - v216 + v242) = *(_OWORD *)(v241 + v242);
                  BOOL v239 = v242 < (int)v220 + 16;
                  v242 += 16;
                }
                while (v239);
              }
              v241 -= v216;
              ++v240;
            }
            while (v240 != 8);
          }
          if (v224 == v221)
          {
            int v243 = 0;
            uint64_t v244 = v215 * (v221 - 1);
            uint64_t v245 = v214 - 32;
            uint64_t v246 = v214 - 32 + v244;
            uint64_t v247 = 2 * v215;
            uint64_t v248 = v245 + v244 + v215;
            uint64_t v249 = v245 + v244 + v247;
            do
            {
              if ((int)v219 >= -63)
              {
                uint64_t v250 = 0;
                do
                {
                  long long v251 = *(_OWORD *)(v246 + v250);
                  *(_OWORD *)(v248 + v250) = v251;
                  *(_OWORD *)(v249 + v250) = v251;
                  BOOL v239 = v250 < v219 + 48;
                  v250 += 16;
                }
                while (v239);
              }
              v246 += v247;
              ++v243;
              v248 += v247;
              v249 += v247;
            }
            while (v243 != 10);
            int v252 = 0;
            uint64_t v253 = v213 + v216 * (v222 - 1) - 16;
            do
            {
              if ((int)v220 >= -31)
              {
                uint64_t v254 = 0;
                do
                {
                  *(_OWORD *)(v253 + v216 + v254) = *(_OWORD *)(v253 + v254);
                  BOOL v239 = v254 < v220 + 16;
                  v254 += 16;
                }
                while (v239);
              }
              v253 += v216;
              ++v252;
            }
            while (v252 != 8);
          }
        }
        sub_221A341D0(*(pthread_mutex_t **)(*(void *)(v325 + 88) + 16));
        *(_DWORD *)(*(void *)(v325 + 88) + 12) = v358 - 2;
        uint64_t v255 = *(void *)(v325 + 88);
        uint64_t v256 = *(void *)(v255 + 1352);
        if (v256 && *(unsigned char *)(v256 + 36))
        {
          *(_DWORD *)(v256 + 12) = *(_DWORD *)(v255 + 12);
          uint64_t v257 = v325;
          uint64_t v255 = *(void *)(v325 + 88);
        }
        else
        {
          uint64_t v257 = v325;
        }
        sub_221A34274(*(pthread_cond_t **)(v255 + 24));
        sub_221A341DC(*(pthread_mutex_t **)(*(void *)(v257 + 88) + 16));
      }
      int v129 = v313;
    }
    else
    {
      signed int v18 = v338;
    }
    uint64_t v41 = v358 + 1;
    int v258 = *v334;
    if (!(v104 | *v334))
    {
      int v27 = v358 + 1;
      a2 = v325;
      a1 = v316;
      signed int v19 = v317;
      int v28 = a17;
      uint64_t v31 = v318;
      BOOL v29 = v320;
      uint64_t v30 = v319;
      goto LABEL_249;
    }
    int v26 = 0;
    int v27 = v331 + 1;
    int v259 = v258 - v18;
    if (v258 <= v18) {
      int v259 = 0;
    }
    if (v258 >= v18) {
      signed int v38 = v18;
    }
    else {
      signed int v38 = *v334;
    }
    *int v334 = v259;
    int v40 = v335 + v18;
    v333 += v18;
    unsigned int v43 = v327;
  }
  while (v41 != v328);
  a1 = v316;
  signed int v19 = v317;
  int v27 = v317;
  a2 = v325;
  int v28 = a17;
  uint64_t v31 = v318;
  BOOL v29 = v320;
  uint64_t v30 = v319;
  int v129 = v313;
LABEL_249:
  *(_WORD *)(a2 + 104) = v25 + 1;
  if (v27
    && (unsigned int v260 = v27 - 1, v261 = *(void *)(v32 + 72), *(unsigned __int16 *)(v261 + 2 * (v27 - 1) * v18) != 60000)
    && v27 == v19
    && v129 == v18
    && *(unsigned __int16 *)(v261 + 2 * (v27 * v18 - 1)) != 60000)
  {
    uint64_t v262 = v31;
    uint64_t v263 = a1;
    uint64_t v326 = a2;
    unsigned int v264 = v19 - 1;
    unsigned int v265 = v18;
    unsigned int v266 = v18;
    signed int v267 = v19;
    uint64_t result = sub_2219E5A18((uint64_t *)v32, v30, 0, v266, v19 - 1, v19, a3, (int32x4_t)a4, (int32x4_t)a5);
    if (!result)
    {
      if (*(unsigned char *)(v32 + 224))
      {
        uint64_t result = sub_2219E2D58(v32, 0, v265, v260, v267, v29, v28);
      }
      else
      {
        *(_DWORD *)(v32 + 268) = *(_DWORD *)(v263 + 5041852);
        uint64_t result = sub_2219E21C8(v32, 0, v265, v264, v267);
      }
      if (!result)
      {
        if (*(_DWORD *)(v32 + 220))
        {
          uint64_t v269 = *(void *)(v262 + 32);
          uint64_t v268 = *(void *)(v262 + 40);
          int v270 = *(_DWORD *)(v262 + 136);
          int v271 = *(_DWORD *)(v262 + 152);
          uint64_t v272 = *(int *)(v262 + 100);
          if (*(unsigned char *)v262)
          {
            uint64_t v273 = v270;
            uint64_t v274 = v271;
            if (!*(unsigned char *)(v262 + 5)) {
              uint64_t v274 = 0;
            }
            v268 += v274;
            if (!*(unsigned char *)(v262 + 5)) {
              uint64_t v273 = 0;
            }
            v269 += v273;
            v270 *= 2;
            v271 *= 2;
          }
          uint64_t v275 = *(int *)(v262 + 132);
          uint64_t v276 = *(int *)(v262 + 148);
          uint64_t v277 = *(int *)(v262 + 116);
          if (v267 >= 2) {
            int v278 = 16 * v264 - 4;
          }
          else {
            int v278 = 0;
          }
          int v279 = 16 * v267;
          if (16 * v267 != v272) {
            int v279 = 16 * v267 - 4;
          }
          int v280 = v278 >> 1;
          int v281 = v279 >> 1;
          int v282 = v279 - v278;
          if (v279 > v278)
          {
            uint64_t v283 = (int8x16_t *)(v269 + v270 * (uint64_t)v278);
            do
            {
              int8x16_t v284 = vqtbl1q_s8((int8x16_t)(16843009 * v283->u8[0]), (int8x16_t)xmmword_221A36310);
              v283[-2] = v284;
              v283[-1] = v284;
              uint64_t v285 = (int8x16_t *)((char *)v283 + v275);
              int8x16_t v286 = vqtbl1q_s8((int8x16_t)(16843009 * v283->u8[v275 - 1]), (int8x16_t)xmmword_221A36310);
              *uint64_t v285 = v286;
              v285[1] = v286;
              uint64_t v283 = (int8x16_t *)((char *)v283 + v270);
              --v282;
            }
            while (v282);
          }
          _VF = __OFSUB__(v281, v280);
          int v287 = v281 - v280;
          if (!((v287 < 0) ^ _VF | (v287 == 0)))
          {
            uint64_t v288 = (int8x16_t *)(v268 + v271 * (uint64_t)v280);
            do
            {
              int8x16_t v289 = vqtbl1q_s8((int8x16_t)(65537 * *(unsigned __int16 *)((char *)&v288->u16[-1] + v276)), (int8x16_t)xmmword_221A36310);
              v288[-1] = vqtbl1q_s8((int8x16_t)(65537 * v288->u16[0]), (int8x16_t)xmmword_221A36310);
              *(int8x16_t *)((char *)v288 + v276) = v289;
              uint64_t v288 = (int8x16_t *)((char *)v288 + v271);
              --v287;
            }
            while (v287);
          }
          if (v267 <= 1)
          {
            int v290 = 0;
            uint64_t v291 = v269 - 32;
            uint64_t v292 = -2 * v270;
            do
            {
              if ((int)v275 >= -63)
              {
                uint64_t v293 = 0;
                do
                {
                  long long v294 = *(_OWORD *)(v291 + v293);
                  *(_OWORD *)(v291 - v270 + v293) = v294;
                  *(_OWORD *)(v291 + v292 + v293) = v294;
                  BOOL v239 = v293 < (int)v275 + 48;
                  v293 += 16;
                }
                while (v239);
              }
              v291 += v292;
              ++v290;
            }
            while (v290 != 10);
            int v295 = 0;
            uint64_t v296 = v268 - 16;
            do
            {
              if ((int)v276 >= -31)
              {
                uint64_t v297 = 0;
                do
                {
                  *(_OWORD *)(v296 - v271 + v297) = *(_OWORD *)(v296 + v297);
                  BOOL v239 = v297 < (int)v276 + 16;
                  v297 += 16;
                }
                while (v239);
              }
              v296 -= v271;
              ++v295;
            }
            while (v295 != 8);
          }
          if (v279 == v272)
          {
            int v298 = 0;
            uint64_t v299 = v270 * (v272 - 1);
            uint64_t v300 = v269 + v299 - 32;
            uint64_t v301 = 2 * v270;
            uint64_t v302 = v299 + v301;
            uint64_t v303 = v299 + v270 + v269 - 32;
            uint64_t v304 = v302 + v269 - 32;
            do
            {
              if ((int)v275 >= -63)
              {
                uint64_t v305 = 0;
                do
                {
                  long long v306 = *(_OWORD *)(v300 + v305);
                  *(_OWORD *)(v303 + v305) = v306;
                  *(_OWORD *)(v304 + v305) = v306;
                  BOOL v239 = v305 < v275 + 48;
                  v305 += 16;
                }
                while (v239);
              }
              v300 += v301;
              ++v298;
              v303 += v301;
              v304 += v301;
            }
            while (v298 != 10);
            int v307 = 0;
            uint64_t v308 = v268 + v271 * (v277 - 1) - 16;
            do
            {
              if ((int)v276 >= -31)
              {
                uint64_t v309 = 0;
                do
                {
                  *(_OWORD *)(v308 + v271 + v309) = *(_OWORD *)(v308 + v309);
                  BOOL v239 = v309 < v276 + 16;
                  v309 += 16;
                }
                while (v239);
              }
              v308 += v271;
              ++v307;
            }
            while (v307 != 8);
          }
        }
        sub_221A341D0(*(pthread_mutex_t **)(*(void *)(v326 + 88) + 16));
        *(_DWORD *)(*(void *)(v326 + 88) + 12) = 0x7FFFFFFF;
        uint64_t v310 = *(void *)(v326 + 88);
        uint64_t v311 = *(void *)(v310 + 1352);
        if (v311 && *(unsigned char *)(v311 + 36))
        {
          *(_DWORD *)(v311 + 12) = 0x7FFFFFFF;
          uint64_t v310 = *(void *)(v326 + 88);
        }
        sub_221A34274(*(pthread_cond_t **)(v310 + 24));
        sub_221A341DC(*(pthread_mutex_t **)(*(void *)(v326 + 88) + 16));
        goto LABEL_304;
      }
    }
  }
  else
  {
LABEL_304:
    uint64_t result = 0;
    *a11 = *((_DWORD *)a8 + 248);
  }
LABEL_305:
  if (a12) {
    *a12 = 0;
  }
  if (a13) {
    *a13 = 0;
  }
  if (result)
  {
    int v312 = *((_DWORD *)a8 + 248);
    if (v312) {
      *a11 = v312 - 1;
    }
  }
  return result;
}

uint64_t sub_221A0BE00(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, int a5, int a6, int a7, unsigned char *a8, int a9)
{
  if (a5 - a4 >= 2)
  {
    unsigned int v9 = (a5 - a4) >> 1;
    int v10 = (unsigned __int8 *)(a2 + (a4 >> 1) * a7);
    uint64_t v11 = (unsigned __int8 *)(result + a6 * a4);
    int v12 = &v11[a6];
    int v13 = dword_221A3C0F8[(a4 >> 1) & 0x1F];
    uint64_t result = 2 * a6 - a3;
    uint64_t v14 = a7 - a3;
    uint64_t v15 = 2 * (a9 - a3);
    do
    {
      a4 += 2;
      int v16 = dword_221A3C0F8[(a4 >> 1) & 0x1F];
      if (a3 >= 2)
      {
        uint64_t v17 = v14;
        unsigned int v18 = v13 & 0xFFF;
        signed int v19 = a8 + 1;
        unsigned int v20 = a3 >> 1;
        do
        {
          int v21 = v11[1];
          int v22 = v12[1];
          int v24 = *v11;
          v11 += 2;
          int v23 = v24;
          int v25 = *v12;
          v12 += 2;
          int v26 = *v10;
          int v27 = v10[1];
          int v28 = v22 + v21 + v27;
          int v29 = v16 + v23 + v25 + v26;
          unsigned int v30 = byte_221A3A096[v18 + 1];
          char v31 = byte_221A39F94[v23 + (byte_221A3A096[v18] & 1) - (byte_221A3A096[v18] >> 1) + 1];
          LOBYTE(v30) = byte_221A39F94[v21 + (v30 & 1) - (v30 >> 1) + 1];
          unsigned int v32 = byte_221A3A096[v18 + 16];
          unsigned int v33 = byte_221A3A096[v18 + 17];
          LOBYTE(v32) = byte_221A39F94[v25 + (v32 & 1) - (v32 >> 1) + 1];
          LOBYTE(v22) = byte_221A39F94[v22 + (v33 & 1) - (v33 >> 1) + 1];
          unsigned int v34 = byte_221A3A096[v18 + 32];
          unsigned int v35 = byte_221A3A096[v18 + 33];
          LOBYTE(v34) = byte_221A39F94[v26 + (v34 & 1) - (v34 >> 1) + 1];
          LOBYTE(v35) = byte_221A39F94[v27 + (v35 & 1) - (v35 >> 1) + 1];
          int v16 = v29 + (v28 << 8);
          *(v19 - 1) = v34;
          *signed int v19 = v31;
          v19[1] = v35;
          v19[2] = v30;
          v19[a9 - 1] = v34;
          v19[a9 + 1 - 1] = v32;
          v19[a9 + 2 - 1] = v35;
          v19[a9 + 3 - 1] = v22;
          int v36 = ((_WORD)v18 + 34) & 0xFFF;
          v18 += 2;
          if ((v20 & 7) == 1) {
            unsigned int v18 = v36;
          }
          v10 += 2;
          v19 += 4;
          --v20;
        }
        while (v20);
        a8 = v19 - 1;
        uint64_t v14 = v17;
        uint64_t v15 = 2 * (a9 - a3);
      }
      v11 += result;
      v12 += result;
      v10 += v14;
      a8 += v15;
      LOWORD(v13) = v16;
      --v9;
    }
    while (v9);
  }
  return result;
}

uint64_t sub_221A0C034(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, int a5, int a6, int a7, unsigned char *a8, int a9, uint64_t a10)
{
  if (a5 - a4 >= 2)
  {
    unsigned int v10 = (a5 - a4) >> 1;
    uint64_t v11 = (unsigned __int8 *)(a2 + (a4 >> 1) * a7);
    int v12 = (unsigned __int8 *)(result + a6 * a4);
    int v13 = &v12[a6];
    uint64_t v14 = dword_221A3C0F8;
    int v15 = dword_221A3C0F8[(a4 >> 1) & 0x1F];
    uint64_t result = (a9 + 3);
    uint64_t v16 = 2 * a6 - a3;
    uint64_t v17 = a7 - a3;
    uint64_t v18 = 2 * (a9 - a3);
    do
    {
      a4 += 2;
      int v19 = v14[(a4 >> 1) & 0x1F];
      if (a3 >= 2)
      {
        unsigned int v20 = v14;
        int v21 = v15 & 0xFFF;
        int v22 = a8 + 1;
        unsigned int v23 = a3 >> 1;
        do
        {
          int v24 = *(unsigned __int8 *)(a10 + *v12);
          int v25 = *(unsigned __int8 *)(a10 + v12[1]);
          int v26 = *(unsigned __int8 *)(a10 + *v13);
          int v27 = *(unsigned __int8 *)(a10 + v13[1]);
          int v28 = *v11;
          int v29 = v11[1];
          int v30 = v27 + v25 + v29;
          int v31 = v19 + v24 + v26 + v28;
          unsigned int v32 = byte_221A3A096[v21 + 1];
          char v33 = byte_221A39F94[v24 + (byte_221A3A096[v21] & 1) - (byte_221A3A096[v21] >> 1) + 1];
          LOBYTE(v32) = byte_221A39F94[v25 + (v32 & 1) - (v32 >> 1) + 1];
          unsigned int v34 = byte_221A3A096[v21 + 16];
          unsigned int v35 = byte_221A3A096[v21 + 17];
          LOBYTE(v25) = byte_221A39F94[v26 + (v34 & 1) - (v34 >> 1) + 1];
          LOBYTE(v35) = byte_221A39F94[v27 + (v35 & 1) - (v35 >> 1) + 1];
          unsigned int v36 = byte_221A3A096[v21 + 32];
          unsigned int v37 = byte_221A3A096[v21 + 33];
          LOBYTE(v27) = byte_221A39F94[v28 + (v36 & 1) - (v36 >> 1) + 1];
          LOBYTE(v37) = byte_221A39F94[v29 + (v37 & 1) - (v37 >> 1) + 1];
          int v19 = v31 + (v30 << 8);
          *(v22 - 1) = v27;
          unsigned char *v22 = v33;
          v22[1] = v37;
          v22[2] = v32;
          v22[a9 - 1] = v27;
          v22[a9 + 1 - 1] = v25;
          v22[a9 + 2 - 1] = v37;
          v22[result - 1] = v35;
          if ((v23 & 7) == 1) {
            int v21 = ((_WORD)v21 + 34) & 0xFFF;
          }
          else {
            v21 += 2;
          }
          v12 += 2;
          v13 += 2;
          v11 += 2;
          v22 += 4;
          --v23;
        }
        while (v23);
        a8 = v22 - 1;
        uint64_t v14 = v20;
        uint64_t v18 = 2 * (a9 - a3);
        uint64_t v17 = a7 - a3;
      }
      v12 += v16;
      v13 += v16;
      v11 += v17;
      a8 += v18;
      LOWORD(v15) = v19;
      --v10;
    }
    while (v10);
  }
  return result;
}

uint64_t sub_221A0C284()
{
  return 2;
}

uint64_t sub_221A0C28C()
{
  return (unsigned __int16)dword_267F69F60;
}

uint64_t sub_221A0C298(unsigned __int16 a1)
{
  uint64_t result = a1 | (HIWORD(dword_267F69F60) << 16);
  dword_267F69F60 = result;
  return result;
}

uint64_t sub_221A0C2B0(uint64_t a1, int a2, int a3)
{
  *(_WORD *)(a1 + 2) = a2;
  *(_WORD *)a1 = a3;
  int v4 = a3 * a2;
  *(_DWORD *)(a1 + 4) = a3 * a2;
  memset_pattern16((void *)(a1 + 24), &unk_221A3C180, 0x800uLL);
  memset_pattern16((void *)(a1 + 1032), &unk_221A36290, 0x1CuLL);
  *(_DWORD *)(a1 + 1020) = 3;
  *(void *)(a1 + 1024) = 0x300000003;
  *(_DWORD *)(a1 + 1060) = 3;
  *(void *)(a1 + 1064) = 0x300000003;
  *(_DWORD *)(a1 + 1044) = 0;
  memset_pattern16((void *)(a1 + 2072), &unk_221A3C190, 0x50uLL);
  memset_pattern16((void *)(a1 + 2152), &unk_221A36290, 0xB0uLL);
  *(_OWORD *)(a1 + 2472) = 0u;
  *(_OWORD *)(a1 + 2488) = 0u;
  *(_OWORD *)(a1 + 2440) = 0u;
  *(_OWORD *)(a1 + 2456) = 0u;
  *(_OWORD *)(a1 + 2408) = 0u;
  *(_OWORD *)(a1 + 2424) = 0u;
  *(_OWORD *)(a1 + 2376) = 0u;
  *(_OWORD *)(a1 + 2392) = 0u;
  *(_OWORD *)(a1 + 2344) = 0u;
  *(_OWORD *)(a1 + 2360) = 0u;
  *(_OWORD *)(a1 + 2328) = 0u;
  *(void *)(a1 + 2504) = 0;
  memset_pattern16((void *)(a1 + 2512), &unk_221A36290, 0x1E8uLL);
  memset_pattern16((void *)(a1 + 3000), &unk_221A3C190, 0x5CuLL);
  uint64_t v5 = sub_221A12A34(16 * v4);
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = sub_221A12A34(*(unsigned int *)(a1 + 4));
  *(void *)(a1 + 16) = v6;
  if (v5) {
    unsigned int v7 = 1;
  }
  else {
    unsigned int v7 = 2;
  }
  if (v6) {
    uint64_t v8 = v5 == 0;
  }
  else {
    uint64_t v8 = v7;
  }
  if (v8)
  {
    j__free(*(void **)(a1 + 8));
    *(void *)(a1 + 8) = 0;
    j__free(*(void **)(a1 + 16));
    *(void *)(a1 + 16) = 0;
  }
  return v8;
}

void sub_221A0C3F4(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  j__free(*(void **)(a1 + 16));
  *(void *)(a1 + 16) = 0;
}

double sub_221A0C42C(uint64_t a1)
{
  *(_DWORD *)a1 = 0;
  *(_DWORD *)(a1 + 52) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 67) = 0;
  *(_DWORD *)(a1 + 70) = 0;
  return result;
}

uint64_t sub_221A0C450(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 67))
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2) {
      MEMORY[0x223C8C880](v2, 0x1000C8077774924);
    }
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3) {
      MEMORY[0x223C8C880](v3, 0x1000C8077774924);
    }
  }
  return a1;
}

char *sub_221A0C4B8(char *result, uint64_t a2, size_t __n, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, char *__dst, char *a9, int a10, unsigned int a11)
{
  if (a4 < a5)
  {
    unint64_t v13 = a5;
    unint64_t v14 = a4;
    int v15 = (char *)(a2 + (a4 >> 1) * a7);
    uint64_t v16 = &result[a6 * a4];
    size_t v17 = __n;
    uint64_t v18 = a6;
    uint64_t v19 = a7;
    do
    {
      memcpy(__dst, v16, v17);
      unsigned int v20 = &__dst[a10];
      int v21 = &v16[v18];
      memcpy(a9, v15, v17);
      a9 += a11;
      v15 += v19;
      double result = (char *)memcpy(v20, v21, v17);
      __dst = &v20[a10];
      uint64_t v16 = &v21[v18];
      v14 += 2;
    }
    while (v14 < v13);
  }
  return result;
}

uint64_t sub_221A0C59C(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, int a5, int a6, int a7, unsigned char *a8, int a9)
{
  if (a5 - a4 >= 2)
  {
    unsigned int v9 = (a5 - a4) >> 1;
    unsigned int v10 = (char *)(a2 + (a4 >> 1) * a7);
    uint64_t v11 = (char *)(result + a6 * a4);
    int v12 = &v11[a6];
    uint64_t v13 = 2 * a6 - a3;
    double result = a7 - a3;
    do
    {
      if (a3 >= 2)
      {
        unint64_t v14 = a8 + 1;
        unsigned int v15 = a3 >> 1;
        do
        {
          char v16 = *v11;
          char v17 = v11[1];
          char v18 = *v12;
          char v19 = v12[1];
          char v20 = *v10;
          char v21 = v10[1];
          *(v14 - 1) = *v10;
          *unint64_t v14 = v16;
          v14[1] = v21;
          v14[2] = v17;
          v14[a9 - 1] = v20;
          int v22 = &v14[a9 + 3];
          v14[a9 + 1 - 1] = v18;
          v11 += 2;
          v12 += 2;
          v14[a9 + 2 - 1] = v21;
          v10 += 2;
          v14 += 4;
          *(v22 - 1) = v19;
          --v15;
        }
        while (v15);
        a8 = v14 - 1;
      }
      v11 += v13;
      v12 += v13;
      v10 += result;
      a8 += 2 * (a9 - a3);
      --v9;
    }
    while (v9);
  }
  return result;
}

uint64_t sub_221A0C68C(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, int a5, int a6, int a7, unsigned char *a8, int a9)
{
  if (a5 - a4 >= 2)
  {
    unsigned int v9 = (a5 - a4) >> 1;
    unsigned int v10 = (unsigned __int8 *)(a2 + (a4 >> 1) * a7);
    uint64_t v11 = (unsigned __int8 *)(result + a6 * a4);
    int v12 = dword_221A3C0F8[(a4 >> 1) & 0x1F];
    unsigned int v49 = a3 >> 1;
    uint64_t v13 = 2 * a6 - a3;
    uint64_t v14 = a7 - a3;
    double result = 2 * (a9 - a3);
    unsigned int v15 = &v11[a6];
    unsigned int v50 = a3;
    uint64_t v47 = result;
    uint64_t v48 = v14;
    do
    {
      a4 += 2;
      int v16 = dword_221A3C0F8[(a4 >> 1) & 0x1F];
      if (a3 >= 2)
      {
        unsigned int v17 = v12 & 0xFFF;
        char v18 = a8 + 1;
        unsigned int v19 = v49;
        do
        {
          int v20 = *v11;
          int v21 = v11[1];
          int v22 = *v15;
          int v23 = v15[1];
          int v24 = *v10;
          int v25 = v10[1];
          LOWORD(v16) = v16 + v20 + v22 + v24 + (((_WORD)v23 + (_WORD)v21 + (_WORD)v25) << 8);
          unsigned int v26 = 220 * v20 + 2 * byte_221A3B0C6[v17];
          BOOL v27 = v26 >= 0x100;
          unsigned int v28 = v26 - 256;
          if (!v27) {
            unsigned int v28 = 0;
          }
          unsigned int v29 = v28 >> 8;
          if (v29 >= 0xDB) {
            LOBYTE(v29) = -37;
          }
          unsigned int v30 = 220 * v21 + 2 * byte_221A3B0C6[v17 + 1];
          BOOL v27 = v30 >= 0x100;
          unsigned int v31 = v30 - 256;
          if (!v27) {
            unsigned int v31 = 0;
          }
          unsigned int v32 = v31 >> 8;
          if (v32 >= 0xDB) {
            LOBYTE(v32) = -37;
          }
          unsigned int v33 = 220 * v22 + 2 * byte_221A3B0C6[v17 + 16];
          BOOL v27 = v33 >= 0x100;
          unsigned int v34 = v33 - 256;
          if (!v27) {
            unsigned int v34 = 0;
          }
          unsigned int v35 = v34 >> 8;
          if (v35 >= 0xDB) {
            LOBYTE(v35) = -37;
          }
          unsigned int v36 = 220 * v23 + 2 * byte_221A3B0C6[v17 + 17];
          BOOL v27 = v36 >= 0x100;
          unsigned int v37 = v36 - 256;
          if (!v27) {
            unsigned int v37 = 0;
          }
          unsigned int v38 = v37 >> 8;
          if (v38 >= 0xDB) {
            LOBYTE(v38) = -37;
          }
          unsigned int v39 = 225 * v24 + 2 * byte_221A3B0C6[v17 + 32];
          BOOL v27 = v39 >= 0x100;
          unsigned int v40 = v39 - 256;
          if (!v27) {
            unsigned int v40 = 0;
          }
          unsigned int v41 = v40 >> 8;
          if (v41 >= 0xE0) {
            LOBYTE(v41) = -32;
          }
          unsigned int v42 = 225 * v25 + 2 * byte_221A3B0C6[v17 + 33];
          BOOL v27 = v42 >= 0x100;
          unsigned int v43 = v42 - 256;
          if (!v27) {
            unsigned int v43 = 0;
          }
          unsigned int v44 = v43 >> 8;
          if (v44 >= 0xE0) {
            LOBYTE(v44) = -32;
          }
          char v45 = v41 + 16;
          *(v18 - 1) = v45;
          *char v18 = v29 + 16;
          char v46 = v44 + 16;
          v18[1] = v46;
          v18[2] = v32 + 16;
          v18[a9 - 1] = v45;
          v18[a9 + 1 - 1] = v35 + 16;
          v18[a9 + 2 - 1] = v46;
          v18[a9 + 3 - 1] = v38 + 16;
          if ((v19 & 7) == 1) {
            unsigned int v17 = ((_WORD)v17 + 34) & 0xFFF;
          }
          else {
            v17 += 2;
          }
          v11 += 2;
          v15 += 2;
          v10 += 2;
          v18 += 4;
          --v19;
        }
        while (v19);
        a8 = v18 - 1;
        a3 = v50;
        double result = v47;
        uint64_t v14 = v48;
      }
      v11 += v13;
      v15 += v13;
      v10 += v14;
      a8 += result;
      LOWORD(v12) = v16;
      --v9;
    }
    while (v9);
  }
  return result;
}

uint64_t sub_221A0C920(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, int a5, int a6, int a7, unsigned char *a8, int a9, uint64_t a10)
{
  if (a5 - a4 >= 2)
  {
    unsigned int v10 = (a5 - a4) >> 1;
    uint64_t v11 = (char *)(a2 + (a4 >> 1) * a7);
    int v12 = (unsigned __int8 *)(result + a6 * a4);
    uint64_t v13 = &v12[a6];
    double result = 2 * a6 - a3;
    uint64_t v14 = a7 - a3;
    do
    {
      if (a3 >= 2)
      {
        unsigned int v15 = a8 + 1;
        unsigned int v16 = a3 >> 1;
        do
        {
          uint64_t v17 = *v12;
          uint64_t v18 = v12[1];
          uint64_t v19 = *v13;
          uint64_t v20 = v13[1];
          char v21 = *v11;
          char v22 = v11[1];
          *(v15 - 1) = *v11;
          unsigned char *v15 = *(unsigned char *)(a10 + v17);
          v15[1] = v22;
          v15[2] = *(unsigned char *)(a10 + v18);
          v15[a9 - 1] = v21;
          v15[a9 + 1 - 1] = *(unsigned char *)(a10 + v19);
          v15[a9 + 2 - 1] = v22;
          v12 += 2;
          v15[a9 + 3 - 1] = *(unsigned char *)(a10 + v20);
          v13 += 2;
          v11 += 2;
          v15 += 4;
          --v16;
        }
        while (v16);
        a8 = v15 - 1;
      }
      v12 += result;
      v13 += result;
      v11 += v14;
      a8 += 2 * (a9 - a3);
      --v10;
    }
    while (v10);
  }
  return result;
}

int32x4_t sub_221A0CA24(int16x8_t *a1, _DWORD *a2, _DWORD *a3)
{
  int16x8_t v3 = a1[1];
  int16x8_t v4 = a1[2];
  int16x8_t v5 = a1[3];
  int16x8_t v6 = vaddq_s16(v3, *a1);
  int16x8_t v7 = vaddq_s16(v5, v4);
  int16x8_t v8 = vsubq_s16(*a1, v3);
  int16x8_t v9 = vsubq_s16(v4, v5);
  int16x8_t v10 = vaddq_s16(v7, v6);
  int16x8_t v11 = vsubq_s16(v6, v7);
  int16x8_t v12 = vaddq_s16(v9, v8);
  int16x8_t v13 = vsubq_s16(v8, v9);
  int32x4_t v14 = (int32x4_t)vzip1q_s16(v10, v11);
  int32x4_t v15 = (int32x4_t)vzip2q_s16(v10, v11);
  int32x4_t v16 = (int32x4_t)vzip1q_s16(v12, v13);
  int32x4_t v17 = (int32x4_t)vzip2q_s16(v12, v13);
  int64x2_t v18 = (int64x2_t)vzip1q_s32(v14, v16);
  int64x2_t v19 = (int64x2_t)vzip2q_s32(v14, v16);
  int64x2_t v20 = (int64x2_t)vzip1q_s32(v15, v17);
  int64x2_t v21 = (int64x2_t)vzip2q_s32(v15, v17);
  int16x8_t v22 = (int16x8_t)vzip1q_s64(v18, v20);
  int16x8_t v23 = (int16x8_t)vzip2q_s64(v18, v20);
  int16x8_t v24 = (int16x8_t)vzip1q_s64(v19, v21);
  int16x8_t v25 = (int16x8_t)vzip2q_s64(v19, v21);
  int16x8_t v26 = vaddq_s16(v23, v22);
  int16x8_t v27 = vaddq_s16(v25, v24);
  int16x8_t v28 = vsubq_s16(v22, v23);
  int16x8_t v29 = vsubq_s16(v24, v25);
  int16x8_t v30 = vaddq_s16(v27, v26);
  int16x8_t v31 = vsubq_s16(v26, v27);
  int16x8_t v32 = vaddq_s16(v29, v28);
  int16x8_t v33 = vsubq_s16(v28, v29);
  uint16x8_t v34 = (uint16x8_t)vaddq_s16(vaddq_s16(vmaxq_s16(v31, vnegq_s16(v31)), vmaxq_s16(v30, vnegq_s16(v30))), vaddq_s16(vmaxq_s16(v32, vnegq_s16(v32)), vmaxq_s16(v33, vnegq_s16(v33))));
  v31.i64[0] = -1;
  v31.i64[1] = -1;
  uint16x8_t v35 = vshlq_u16(v34, (uint16x8_t)v31);
  int32x4_t v36 = (int32x4_t)vqaddq_u16((uint16x8_t)vshlq_u64((uint64x2_t)v35, (uint64x2_t)vdupq_n_s64(0xFFFFFFF0uLL)), v35);
  v31.i64[0] = 0xFFFF0000FFFFLL;
  v31.i64[1] = 0xFFFF0000FFFFLL;
  int32x4_t result = vaddq_s32(v36, (int32x4_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v36, (int8x16_t)v31), (uint64x2_t)vdupq_n_s64(0xFFFFFFE0uLL)));
  *a2 = result.u16[0];
  *a3 = result.u16[4];
  return result;
}

uint64_t sub_221A0CB0C(uint64_t a1)
{
  uint64_t v1 = 0;
  uint16x8_t v2 = 0uLL;
  do
  {
    int16x8_t v3 = *(int16x8_t *)(a1 + v1);
    int16x8_t v4 = *(int16x8_t *)(a1 + v1 + 16);
    int16x8_t v5 = *(int16x8_t *)(a1 + v1 + 32);
    int16x8_t v6 = *(int16x8_t *)(a1 + v1 + 48);
    int16x8_t v7 = vaddq_s16(v5, v3);
    int16x8_t v8 = vaddq_s16(v6, v4);
    int64x2_t v9 = (int64x2_t)vsubq_s16(v3, v5);
    int64x2_t v10 = (int64x2_t)vsubq_s16(v4, v6);
    int16x8_t v11 = (int16x8_t)vzip2q_s64((int64x2_t)v7, v9);
    int16x8_t v12 = (int16x8_t)vzip2q_s64((int64x2_t)v8, v10);
    v7.i64[1] = v9.i64[0];
    int16x8_t v13 = vaddq_s16(v7, v11);
    v8.i64[1] = v10.i64[0];
    int16x8_t v14 = vaddq_s16(v8, v12);
    int16x8_t v15 = vsubq_s16(v7, v11);
    int16x8_t v16 = vsubq_s16(v8, v12);
    int32x4_t v17 = (int32x4_t)vzip1q_s16(v13, v15);
    int32x4_t v18 = (int32x4_t)vzip1q_s16(v14, v16);
    int32x4_t v19 = (int32x4_t)vzip2q_s16(v13, v15);
    int32x4_t v20 = (int32x4_t)vzip2q_s16(v14, v16);
    int64x2_t v21 = (int64x2_t)vzip1q_s32(v17, v19);
    int64x2_t v22 = (int64x2_t)vzip1q_s32(v18, v20);
    int64x2_t v23 = (int64x2_t)vzip2q_s32(v17, v19);
    int64x2_t v24 = (int64x2_t)vzip2q_s32(v18, v20);
    int16x8_t v25 = (int16x8_t)vzip1q_s64(v21, v23);
    int16x8_t v26 = (int16x8_t)vzip1q_s64(v22, v24);
    int16x8_t v27 = (int16x8_t)vzip2q_s64(v21, v23);
    int16x8_t v28 = (int16x8_t)vzip2q_s64(v22, v24);
    int16x8_t v29 = vaddq_s16(v25, v27);
    int16x8_t v30 = vaddq_s16(v26, v28);
    int64x2_t v31 = (int64x2_t)vsubq_s16(v25, v27);
    int64x2_t v32 = (int64x2_t)vsubq_s16(v26, v28);
    int16x8_t v33 = (int16x8_t)vzip2q_s64((int64x2_t)v29, v31);
    int16x8_t v34 = (int16x8_t)vzip2q_s64((int64x2_t)v30, v32);
    v29.i64[1] = v31.i64[0];
    v30.i64[1] = v32.i64[0];
    int16x8_t v35 = vaddq_s16(v29, v33);
    int16x8_t v36 = vaddq_s16(v30, v34);
    int16x8_t v37 = vsubq_s16(v29, v33);
    int16x8_t v38 = vsubq_s16(v30, v34);
    uint16x8_t v2 = vqaddq_u16(vqaddq_u16(v2, vqaddq_u16((uint16x8_t)vmaxq_s16(v35, vnegq_s16(v35)), (uint16x8_t)vmaxq_s16(v37, vnegq_s16(v37)))), vqaddq_u16((uint16x8_t)vmaxq_s16(v36, vnegq_s16(v36)), (uint16x8_t)vmaxq_s16(v38, vnegq_s16(v38))));
    v1 += 64;
  }
  while (v1 != 512);
  v39.i64[0] = -1;
  v39.i64[1] = -1;
  int8x16_t v40 = (int8x16_t)vshlq_u16(v2, v39);
  v41.i64[0] = 0xFFFF0000FFFFLL;
  v41.i64[1] = 0xFFFF0000FFFFLL;
  int32x4_t v42 = (int32x4_t)vandq_s8((int8x16_t)vqaddq_u16((uint16x8_t)vextq_s8(v40, (int8x16_t)0, 2uLL), (uint16x8_t)v40), v41);
  int32x4_t v43 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v42, (int8x16_t)0, 4uLL), v42);
  return vaddq_s32(v43, vdupq_laneq_s32(v43, 2)).u16[0];
}

uint64_t sub_221A0CC20(int16x8_t *a1, unsigned int a2)
{
  int16x8_t v2 = *(int16x8_t *)((char *)a1 + 8 * a2);
  int16x8_t v3 = *(int16x8_t *)((char *)a1 + 10 * a2);
  int16x8_t v4 = *(int16x8_t *)((char *)a1 + 12 * a2);
  int16x8_t v5 = *(int16x8_t *)((char *)a1 + 14 * a2);
  int16x8_t v6 = vaddq_s16(v2, *a1);
  int16x8_t v7 = vaddq_s16(v3, *(int16x8_t *)((char *)a1 + 2 * a2));
  int16x8_t v8 = vsubq_s16(vaddq_s16(v2, v2), v6);
  int16x8_t v9 = vsubq_s16(vaddq_s16(v3, v3), v7);
  int16x8_t v10 = vaddq_s16(v4, *(int16x8_t *)((char *)a1 + 4 * a2));
  int16x8_t v11 = vaddq_s16(v5, *(int16x8_t *)((char *)a1 + 6 * a2));
  int16x8_t v12 = vsubq_s16(vaddq_s16(v4, v4), v10);
  int16x8_t v13 = vsubq_s16(vaddq_s16(v5, v5), v11);
  int16x8_t v14 = vaddq_s16(v10, v6);
  int16x8_t v15 = vaddq_s16(v11, v7);
  int16x8_t v16 = vsubq_s16(vaddq_s16(v10, v10), v14);
  int16x8_t v17 = vsubq_s16(vaddq_s16(v11, v11), v15);
  int16x8_t v18 = vaddq_s16(v12, v8);
  int16x8_t v19 = vaddq_s16(v13, v9);
  int16x8_t v20 = vsubq_s16(vaddq_s16(v12, v12), v18);
  int16x8_t v21 = vsubq_s16(vaddq_s16(v13, v13), v19);
  int16x8_t v22 = vaddq_s16(v15, v14);
  int16x8_t v23 = vaddq_s16(v17, v16);
  int16x8_t v24 = vsubq_s16(vaddq_s16(v15, v15), v22);
  int16x8_t v25 = vsubq_s16(vaddq_s16(v17, v17), v23);
  int16x8_t v26 = vaddq_s16(v19, v18);
  int16x8_t v27 = vaddq_s16(v21, v20);
  int16x8_t v28 = vsubq_s16(vaddq_s16(v19, v19), v26);
  int16x8_t v29 = vsubq_s16(vaddq_s16(v21, v21), v27);
  int32x4_t v30 = (int32x4_t)vzip1q_s16(v22, v24);
  int32x4_t v31 = (int32x4_t)vzip2q_s16(v22, v24);
  int32x4_t v32 = (int32x4_t)vzip1q_s16(v23, v25);
  int32x4_t v33 = (int32x4_t)vzip2q_s16(v23, v25);
  int32x4_t v34 = (int32x4_t)vzip1q_s16(v26, v28);
  int32x4_t v35 = (int32x4_t)vzip2q_s16(v26, v28);
  int32x4_t v36 = (int32x4_t)vzip1q_s16(v27, v29);
  int32x4_t v37 = (int32x4_t)vzip2q_s16(v27, v29);
  int64x2_t v38 = (int64x2_t)vzip1q_s32(v30, v32);
  int64x2_t v39 = (int64x2_t)vzip2q_s32(v30, v32);
  int64x2_t v40 = (int64x2_t)vzip1q_s32(v31, v33);
  int64x2_t v41 = (int64x2_t)vzip2q_s32(v31, v33);
  int64x2_t v42 = (int64x2_t)vzip1q_s32(v34, v36);
  int64x2_t v43 = (int64x2_t)vzip2q_s32(v34, v36);
  int64x2_t v44 = (int64x2_t)vzip1q_s32(v35, v37);
  int64x2_t v45 = (int64x2_t)vzip2q_s32(v35, v37);
  int16x8_t v46 = (int16x8_t)vzip1q_s64(v38, v42);
  int16x8_t v47 = (int16x8_t)vzip2q_s64(v38, v42);
  int16x8_t v48 = (int16x8_t)vzip1q_s64(v40, v44);
  int16x8_t v49 = (int16x8_t)vzip2q_s64(v40, v44);
  int16x8_t v50 = (int16x8_t)vzip1q_s64(v39, v43);
  int16x8_t v51 = (int16x8_t)vzip2q_s64(v39, v43);
  int16x8_t v52 = (int16x8_t)vzip1q_s64(v41, v45);
  int16x8_t v53 = (int16x8_t)vzip2q_s64(v41, v45);
  int16x8_t v54 = vaddq_s16(v46, v48);
  int16x8_t v55 = vaddq_s16(v47, v49);
  int16x8_t v56 = vsubq_s16(vaddq_s16(v48, v48), v54);
  int16x8_t v57 = vsubq_s16(vaddq_s16(v49, v49), v55);
  int16x8_t v58 = vaddq_s16(v50, v52);
  int16x8_t v59 = vaddq_s16(v51, v53);
  int16x8_t v60 = vsubq_s16(vaddq_s16(v52, v52), v58);
  int16x8_t v61 = vsubq_s16(vaddq_s16(v53, v53), v59);
  int16x8_t v62 = vaddq_s16(v54, v58);
  int16x8_t v63 = vaddq_s16(v55, v59);
  int16x8_t v64 = vsubq_s16(vaddq_s16(v58, v58), v62);
  int16x8_t v65 = vsubq_s16(vaddq_s16(v59, v59), v63);
  int16x8_t v66 = vaddq_s16(v56, v60);
  int16x8_t v67 = vaddq_s16(v57, v61);
  int16x8_t v68 = vsubq_s16(vaddq_s16(v60, v60), v66);
  int16x8_t v69 = vsubq_s16(vaddq_s16(v61, v61), v67);
  int16x8_t v70 = vaddq_s16(v62, v63);
  int16x8_t v71 = vaddq_s16(v64, v65);
  int16x8_t v72 = vsubq_s16(vaddq_s16(v63, v63), v70);
  int16x8_t v73 = vsubq_s16(vaddq_s16(v65, v65), v71);
  int16x8_t v74 = vaddq_s16(v66, v67);
  int16x8_t v75 = vaddq_s16(v68, v69);
  int16x8_t v76 = vsubq_s16(vaddq_s16(v67, v67), v74);
  int16x8_t v77 = vsubq_s16(vaddq_s16(v69, v69), v75);
  uint16x8_t v78 = (uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(vmaxq_s16(v72, vnegq_s16(v72)), vmaxq_s16(v70, vnegq_s16(v70))), vmaxq_s16(v71, vnegq_s16(v71))), vaddq_s16(vmaxq_s16(v73, vnegq_s16(v73)), vmaxq_s16(v74, vnegq_s16(v74)))), vaddq_s16(vaddq_s16(vmaxq_s16(v76, vnegq_s16(v76)), vmaxq_s16(v75, vnegq_s16(v75))), vmaxq_s16(v77, vnegq_s16(v77))));
  v72.i64[0] = -1;
  v72.i64[1] = -1;
  int8x16_t v79 = (int8x16_t)vshlq_u16(v78, (uint16x8_t)v72);
  v73.i64[0] = 0xFFFF0000FFFFLL;
  v73.i64[1] = 0xFFFF0000FFFFLL;
  int32x4_t v80 = (int32x4_t)vandq_s8((int8x16_t)vqaddq_u16((uint16x8_t)vextq_s8(v79, (int8x16_t)0, 2uLL), (uint16x8_t)v79), (int8x16_t)v73);
  int32x4_t v81 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v80, (int8x16_t)0, 4uLL), v80);
  return (vaddq_s32(v81, vdupq_laneq_s32(v81, 2)).u16[0] + 1) >> 1;
}

_DWORD *sub_221A0CE90(_DWORD *result)
{
  *result |= 4u;
  return result;
}

_DWORD *sub_221A0CEA0(_DWORD *result)
{
  *result |= 8u;
  return result;
}

uint64_t sub_221A0CEB0(unsigned int a1)
{
  return (a1 >> 1) & 1;
}

uint64_t sub_221A0CEB8(unsigned int a1)
{
  return (a1 >> 2) & 1;
}

uint64_t sub_221A0CEC0(unsigned int a1)
{
  return (a1 >> 3) & 1;
}

uint64_t sub_221A0CEC8(unsigned int a1)
{
  return (a1 >> 4) & 1;
}

uint64_t sub_221A0CED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int *a9, unsigned int a10)
{
  uint64_t v10 = MEMORY[0x270FA5388]();
  uint64_t v12 = v11;
  int v14 = v13;
  int16x8_t v16 = v15;
  int16x8_t v18 = v17;
  unsigned int v20 = v19;
  int16x8_t v22 = v21;
  int16x8_t v24 = v23;
  uint64_t v25 = v10;
  uint64_t v31 = *MEMORY[0x263EF8340];
  bzero(v30, 0x23CA0uLL);
  if (!v25) {
    return 1;
  }
  if (!sub_221A0D058(0, v30, v24, v22, v20, v18, v16, v14, v12, a9, a10))
  {
    uint64_t v27 = v25 + 4723788;
    int16x8_t v28 = v30;
    uint64_t v29 = 32;
    while (v28[3] == *(_DWORD *)v27
         && v28[4] == *(_DWORD *)(v27 + 4)
         && v28[335] == *(_DWORD *)(v27 + 1328)
         && v28[336] == *(_DWORD *)(v27 + 1332)
         && *((unsigned __int8 *)v28 + 1437) == *(unsigned __int8 *)(v27 + 1425)
         && *((unsigned __int8 *)v28 + 1438) == *(unsigned __int8 *)(v27 + 1426))
    {
      v28 += 470;
      v27 += 1880;
      if (!--v29) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_221A0D058(uint64_t a1, unsigned int *a2, unsigned int *a3, unsigned int *a4, unsigned int a5, unsigned int *a6, unsigned int *a7, int a8, uint64_t a9, unsigned int *a10, unsigned int a11)
{
  LODWORD(i) = a8;
  *(void *)a2 = 0;
  a2[36647] = 0;
  if (a5)
  {
    int16x8_t v18 = (_DWORD *)(a1 + 5041852);
    uint64_t v19 = a5;
    while (1)
    {
      int v20 = *(unsigned char *)a3 & 0x1F;
      if (v20 == 6)
      {
        uint64_t result = sub_221A05754(a3, *a4, a2);
        goto LABEL_11;
      }
      if (v20 == 13) {
        break;
      }
      if (v20 == 7)
      {
        if (*a2 || a2[2])
        {
          uint64_t result = sub_221A053EC(a3, *a4, (int *)a2);
        }
        else
        {
          sub_221A05524(a3, *a4, a2);
          uint64_t result = sub_221A057AC(a3, *a4, (uint64_t)v30);
          if (a1) {
            *int16x8_t v18 = v31;
          }
        }
LABEL_11:
        if (result) {
          return result;
        }
      }
      unsigned int v22 = *a4++;
      a3 = (unsigned int *)((char *)a3 + v22);
      if (!--v19) {
        goto LABEL_16;
      }
    }
    uint64_t result = sub_221A0563C();
    goto LABEL_11;
  }
LABEL_16:
  uint64_t v23 = a11;
  if (a11)
  {
    while (1)
    {
      uint64_t result = sub_221A0563C();
      if (result) {
        break;
      }
      unsigned int v26 = *a10++;
      a9 += v26;
      if (!--v23) {
        goto LABEL_19;
      }
    }
  }
  else
  {
LABEL_19:
    int v27 = a2[2];
    if (!v27 || (uint64_t result = 4294966630, v27 <= 1) && (int)*a2 <= 1)
    {
      if (i)
      {
        for (uint64_t i = i; i; --i)
        {
          int v28 = *(unsigned char *)a6 & 0x1F;
          if (v28 == 6)
          {
            uint64_t result = sub_221A05754(a6, *a7, a2);
            if (result) {
              return result;
            }
          }
          else if (v28 == 8)
          {
            uint64_t result = sub_221A05644(a6, *a7, a2);
            if (result) {
              return result;
            }
          }
          unsigned int v29 = *a7++;
          a6 = (unsigned int *)((char *)a6 + v29);
        }
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_221A0D238(uint64_t *a1, unsigned int *a2, unsigned int *a3, unsigned int a4, unsigned int *a5, unsigned int *a6, unsigned int a7, uint64_t a8, unsigned int *a9, unsigned int a10, unsigned int *a11, unsigned int a12, char a13, int a14, uint64_t a15)
{
  if (qword_267F69F68 != -1) {
    dispatch_once(&qword_267F69F68, &unk_26D3F75F8);
  }
  sub_221A12B10();
  if (!*a11) {
    *a11 = sub_221A34354(8u);
  }
  int v20 = a11[3];
  if (v20)
  {
    if (v20 < 33) {
      goto LABEL_10;
    }
    int v20 = 32;
  }
  else
  {
    int v20 = 2;
  }
  a11[3] = v20;
LABEL_10:
  int v63 = a11[4];
  if (!v63)
  {
    int v63 = 1;
    a11[4] = 1;
  }
  int v21 = a11[5];
  if (!v21)
  {
    int v21 = 8;
    a11[5] = 8;
  }
  unsigned int v55 = a11[2];
  if (a11[6])
  {
    unsigned int v22 = (FILE **)MEMORY[0x263EF8348];
    fprintf((FILE *)*MEMORY[0x263EF8348], "INFO: maxNumberOfInflightPictures=%d\n", v20);
    fprintf(*v22, "INFO: numberOfFramesToInitiallyAllocate=%d\n", v63);
    fprintf(*v22, "INFO: numberOfFramesToWaitUntilDisplay=%d\n", v21);
    fprintf(*v22, "INFO: throttleThreshold=%d\n", a11[7]);
  }
  sub_221A34354(8u);
  uint64_t v23 = (char *)sub_221A12A48(0x4CEEC0uLL);
  int16x8_t v62 = a1;
  *a1 = (uint64_t)v23;
  if (!v23) {
    goto LABEL_53;
  }
  uint64_t v24 = (uint64_t)v23;
  int v51 = v21;
  unsigned int v57 = a7;
  uint64_t v25 = (pthread_mutex_t **)(v23 + 5041584);
  unsigned int v26 = a6;
  int v27 = (unsigned int *)(v23 + 4723760);
  uint64_t v54 = (uint64_t)(v23 + 5041592);
  sub_221A15410((uint64_t)(v23 + 5041592));
  int16x8_t v52 = v25;
  int16x8_t v53 = v27;
  *((_DWORD *)v25 + 66) = a11[2];
  int16x8_t v56 = v27 + 4;
  uint64_t v28 = sub_221A0D058(v24, v27 + 4, a2, a3, a4, a5, v26, v57, a8, a9, a10);
  if (v28) {
    goto LABEL_54;
  }
  *(_DWORD *)(v24 + 5016956) = 0;
  if (a4)
  {
    uint64_t v29 = a4;
    int32x4_t v30 = (char *)(v24 + 4723788);
    int v31 = (char *)(v24 + 4870380);
    do
    {
      memcpy(v31, v30, 0x758uLL);
      v30 += 1880;
      v31 += 1880;
      --v29;
    }
    while (v29);
  }
  *(_DWORD *)(v24 + 4870368) = *v56;
  if (v57)
  {
    uint64_t v32 = v57;
    int32x4_t v33 = (char *)(v24 + 4783952);
    int32x4_t v34 = (char *)(v24 + 4930544);
    do
    {
      memcpy(v34, v33, 0x150uLL);
      v33 += 336;
      v34 += 336;
      --v32;
    }
    while (v32);
  }
  *(_DWORD *)(v24 + 4870372) = v53[5];
  v52[28] = 0;
  *(pthread_mutex_t **)((char *)v52 + 236) = 0;
  *int16x8_t v53 = 1;
  if (v55 == -3)
  {
    if (a13) {
      exit(1);
    }
    *int16x8_t v53 = 0;
    *(void *)(v24 + 16) = sub_221A34144();
    int32x4_t v35 = sub_221A341E8();
    *(void *)(v24 + 24) = v35;
    uint64_t v28 = 4294967188;
    if (!*(void *)(v24 + 16)) {
      goto LABEL_54;
    }
    char v59 = 0;
    if (!v35) {
      goto LABEL_54;
    }
    *(_DWORD *)uint64_t v24 = -1;
    *(_DWORD *)(v24 + 4) = v20;
    *(_DWORD *)(v24 + 8) = 0;
    *((void *)v53 + 1) = 0;
    v53[1] = v51;
    if (v20 >= 1)
    {
      uint64_t v36 = 0;
      uint64_t v37 = 40;
      do
      {
        *(void *)(v24 + v37) = 0;
        ++v36;
        v37 += 147616;
      }
      while (v36 < v20);
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      uint64_t v40 = 147640;
      while (1)
      {
        uint64_t v41 = v24 + v38;
        uint64_t v42 = sub_221A05E1C((uint64_t *)(v24 + v38 + 40), (uint64_t)v56, a12, a11, 0, v24, v54, a14);
        if (v42) {
          break;
        }
        *(_DWORD *)(v41 + 32) = 0;
        *(void *)(v41 + 176) = v24;
        *(_DWORD *)(v41 + 48) = 0;
        *(void *)(v41 + 64) = sub_221A34290(1, 0);
        *(void *)(v41 + 72) = sub_221A34290(1, 0);
        int64x2_t v43 = sub_221A33E8C((void *(__cdecl *)(void *))sub_221A0D800, (void *)(v41 + 32), a14);
        *(void *)(v41 + 56) = v43;
        *(void *)(v41 + 160) = 0;
        *(_DWORD *)(v41 + 168) = 0;
        int64x2_t v44 = (void *)(v24 + v40);
        *(v44 - 3) = a15;
        *int64x2_t v44 = 0;
        if (!*(void *)(v41 + 64)) {
          goto LABEL_53;
        }
        uint64_t v28 = 4294967188;
        if (!*(void *)(v41 + 72) || !v43) {
          goto LABEL_54;
        }
        ++v39;
        v38 += 147616;
        v40 += 147616;
        if (v39 >= *(int *)(v24 + 4)) {
          goto LABEL_37;
        }
      }
      uint64_t v28 = v42;
      goto LABEL_54;
    }
LABEL_37:
    v52[9] = *(pthread_mutex_t **)(v24 + 40);
  }
  else
  {
    char v59 = a13;
    uint64_t v28 = sub_221A05E1C((uint64_t *)(v24 + 5041656), (uint64_t)v56, a12, a11, 0, v24, v54, a14);
    if (v28) {
      goto LABEL_54;
    }
  }
  uint64_t v28 = sub_2219F7AB8(v24 + 4723788, v24 + 5016960);
  if (v28) {
    goto LABEL_54;
  }
  if (*((unsigned char *)v53 + 1364)) {
    int v45 = 1;
  }
  else {
    int v45 = *((unsigned char *)v53 + 1365) ? 4 : 3;
  }
  uint64_t v28 = sub_221A14D48(v24 + 5041520, v63, 16 * HIDWORD(v52[9]->__sig), 16 * *(_DWORD *)&v52[9]->__opaque[8], v45, 0, v50, 1, v54, 0);
  if (v28) {
    goto LABEL_54;
  }
  int16x8_t v46 = v52;
  if (v55 != -3)
  {
    *int16x8_t v52 = sub_221A34144();
    v52[13] = sub_221A34144();
    int16x8_t v47 = sub_221A34144();
    v52[18] = v47;
    if (*v52)
    {
      uint64_t v28 = 4294967188;
      if (v52[13] && v47)
      {
        int16x8_t v46 = v52;
        v52[12] = 0;
        goto LABEL_51;
      }
LABEL_54:
      sub_221A0D9BC(*v62);
      *int16x8_t v62 = 0;
      return v28;
    }
LABEL_53:
    uint64_t v28 = 4294967188;
    goto LABEL_54;
  }
LABEL_51:
  v46[9][8].__opaque[24] = v59;
  int16x8_t v48 = v46[9];
  if (v48[8].__opaque[24])
  {
    sub_2219F8D18((uint64_t)&v48[2].__opaque[28]);
    sub_2219F933C((uint64_t)v46[9][6].__opaque);
  }
  else
  {
    sub_2219F93C0(v48[6].__opaque, 0);
  }
  *(_DWORD *)(v24 + 5041672) = 0;
  *(void *)(v24 + 5041664) = 0;
  sub_221A0C298(0);
  return 0;
}

uint64_t sub_221A0D800(uint64_t a1)
{
  sub_221A33E78(0);
  sub_221A34344(*(dispatch_semaphore_t **)(a1 + 40));
  sub_221A34338(*(dispatch_semaphore_t **)(a1 + 32));
  if (!*(_DWORD *)(a1 + 16))
  {
    int16x8_t v3 = (void (**)(void))(a1 + 147584);
    do
    {
      voucher_adopt();
      *(void *)(a1 + 147608) = 0;
      sub_221A11AE0(*(_DWORD *)(*(void *)(a1 + 8) + 552), *(void *)(a1 + 120));
      int16x8_t v4 = *(void **)(a1 + 120);
      if (v4) {
        j__free(v4);
      }
      sub_221A05B38(a1 + 48);
      sub_221A341D0(*(pthread_mutex_t **)(*(void *)(a1 + 144) + 16));
      sub_221A12978(a1);
      if (*v3 && *(void *)(a1 + 147592))
      {
        if (!*(_DWORD *)(*(void *)(a1 + 144) + 5041808))
        {
          uint64_t v8 = *(void *)(*(void *)(a1 + 8) + 88);
          if (*(unsigned char *)(v8 + 1362))
          {
            uint64_t v9 = *(void *)(v8 + 1352);
            if (v9)
            {
              while (!*(unsigned char *)(v9 + 4))
                sub_221A34280(*(pthread_cond_t **)(*(void *)(a1 + 144) + 24), *(pthread_mutex_t **)(*(void *)(a1 + 144) + 16));
            }
          }
        }
        (*v3)(0);
      }
      uint64_t v5 = *(void *)(a1 + 8);
      if (!*(_DWORD *)(*(void *)(a1 + 144) + 5041808))
      {
        uint64_t v7 = *(void *)(v5 + 88);
        if (*(unsigned char *)(v7 + 1362))
        {
          if (*(unsigned char *)(v7 + 34))
          {
            sub_221A34478((atomic_uint *)(*(void *)(v7 + 1352) + 8));
            uint64_t v5 = *(void *)(a1 + 8);
          }
        }
      }
      sub_221A34478((atomic_uint *)(*(void *)(v5 + 88) + 8));
      *(unsigned char *)(*(void *)(*(void *)(a1 + 8) + 88) + 4) = 1;
      *(_DWORD *)a1 = 0;
      --*(_DWORD *)(*(void *)(a1 + 144) + 8);
      sub_221A34274(*(pthread_cond_t **)(*(void *)(a1 + 144) + 24));
      sub_221A341DC(*(pthread_mutex_t **)(*(void *)(a1 + 144) + 16));
      int16x8_t v6 = (void *)voucher_adopt();
      os_release(v6);
      sub_221A34344(*(dispatch_semaphore_t **)(a1 + 40));
      sub_221A34338(*(dispatch_semaphore_t **)(a1 + 32));
    }
    while (!*(_DWORD *)(a1 + 16));
  }
  return 0;
}

void sub_221A0D9BC(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = a1 + 5041584;
    uint64_t v3 = *(void *)(a1 + 5041656);
    if (v3)
    {
      if (*(unsigned char *)(v3 + 544) && *(_DWORD *)(v3 + 392) >= 2u) {
        sub_221A0DBCC(v3 + 392);
      }
      if (*(_DWORD *)(v2 + 264) == -3)
      {
        sub_221A0DC34((pthread_mutex_t *)a1);
        if (*(int *)(a1 + 4) >= 1)
        {
          uint64_t v4 = 0;
          uint64_t v5 = a1;
          do
          {
            *(_DWORD *)(v5 + 48) = 1;
            sub_221A34344(*(dispatch_semaphore_t **)(v5 + 64));
            sub_221A34110(*(pthread_t **)(v5 + 56));
            sub_221A342F0(*(NSObject ***)(v5 + 64));
            *(void *)(v5 + 64) = 0;
            sub_221A342F0(*(NSObject ***)(v5 + 72));
            *(void *)(v5 + 72) = 0;
            sub_221A34104(*(void **)(v5 + 56));
            *(void *)(v5 + 56) = 0;
            uint64_t v6 = *(void *)(v5 + 40);
            if (v6)
            {
              sub_221A0603C(v6);
              *(void *)(v5 + 40) = 0;
            }
            uint64_t v7 = *(void **)(v5 + 160);
            if (v7)
            {
              j__free(v7);
              *(void *)(v5 + 160) = 0;
            }
            os_release(*(void **)(v5 + 147640));
            *(void *)(v5 + 147640) = 0;
            ++v4;
            v5 += 147616;
          }
          while (v4 < *(int *)(a1 + 4));
        }
        sub_2219F7B14((pthread_mutex_t **)(a1 + 5016960));
        sub_221A14EBC(a1 + 5041520);
        sub_221A34190(*(pthread_mutex_t **)(a1 + 16));
        *(void *)(a1 + 16) = 0;
        sub_221A34234(*(pthread_cond_t **)(a1 + 24));
        *(void *)(a1 + 24) = 0;
      }
      else
      {
        sub_221A34190(*(pthread_mutex_t **)v2);
        *(void *)uint64_t v2 = 0;
        sub_221A34190(*(pthread_mutex_t **)(v2 + 104));
        *(void *)(v2 + 104) = 0;
        sub_221A34190(*(pthread_mutex_t **)(v2 + 144));
        *(void *)(v2 + 144) = 0;
        sub_2219F7B14((pthread_mutex_t **)(a1 + 5016960));
        sub_221A0603C(v3);
        sub_221A14EBC(a1 + 5041520);
      }
    }
    uint64_t v8 = *(void *)(v2 + 96);
    if (v8)
    {
      sub_221A0603C(v8);
      *(_DWORD *)(v2 + 112) = 1;
      sub_221A34344(*(dispatch_semaphore_t **)(v2 + 128));
      sub_221A34110(*(pthread_t **)(v2 + 120));
      sub_221A342F0(*(NSObject ***)(v2 + 128));
      *(void *)(v2 + 128) = 0;
      sub_221A342F0(*(NSObject ***)(v2 + 136));
      *(void *)(v2 + 136) = 0;
      sub_221A34104(*(void **)(v2 + 120));
      *(void *)(v2 + 120) = 0;
    }
    uint64_t v9 = *(void *)(v2 + 80);
    if (v9)
    {
      sub_221A12AFC(v9);
      *(void *)(v2 + 80) = 0;
    }
    sub_221A15460(a1 + 5041592);
    j__free((void *)a1);
  }
}

uint64_t sub_221A0DBCC(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 64);
  if (!*(void *)(a1 + 64)) {
    return 0;
  }
  if (*(_DWORD *)a1 < 2u || !*(unsigned char *)(a1 + 36)) {
    return 4294958324;
  }
  uint64_t v3 = *(void **)(a1 + 56);
  if (v3)
  {
    j__free(v3);
    *(void *)(a1 + 56) = 0;
  }
  uint64_t result = 0;
  *uint64_t v1 = 0;
  v1[1] = 0;
  return result;
}

pthread_mutex_t *sub_221A0DC34(pthread_mutex_t *result)
{
  if (result)
  {
    uint64_t v1 = result;
    sub_221A341D0(*(pthread_mutex_t **)&result->__opaque[8]);
    if (*(int *)v1->__opaque >= 1)
    {
      do
        sub_221A34280(*(pthread_cond_t **)&v1->__opaque[16], *(pthread_mutex_t **)&v1->__opaque[8]);
      while (*(int *)v1->__opaque > 0);
    }
    uint64_t v2 = *(pthread_mutex_t **)&v1->__opaque[8];
    return sub_221A341DC(v2);
  }
  return result;
}

uint64_t sub_221A0DC98(int a1, int a2, int a3, _DWORD *a4, uint64_t a5, uint64_t a6, int a7, _DWORD *a8, unsigned __int8 a9, int a10, uint64_t a11)
{
  if (a10) {
    BOOL v11 = a11 == 0;
  }
  else {
    BOOL v11 = 1;
  }
  int v12 = v11;
  uint64_t v13 = 4294958327;
  if (a3 && a5)
  {
    uint64_t v46 = *(void *)(a6 + 5041656);
    sub_221A05B28((uint64_t)&v47);
    uint64_t v13 = sub_221A05B80((uint64_t)&v47, 400);
    if (!v13)
    {
      if (v50 && v51)
      {
        uint64_t v47 = a5;
        uint64_t v13 = 4294958327;
        int v49 = 0;
        int v48 = a3;
        switch(a2)
        {
          case 0:
            uint64_t v20 = sub_221A33328((uint64_t)&v47, v12);
            goto LABEL_20;
          case 2:
            uint64_t v20 = sub_221A33638((uint64_t)&v47);
            goto LABEL_20;
          case 3:
            unsigned int v21 = 1;
            goto LABEL_19;
          case 4:
            unsigned int v21 = 2;
            goto LABEL_19;
          case 5:
            unsigned int v21 = 4;
LABEL_19:
            uint64_t v20 = sub_221A334B0((uint64_t)&v47, v21, (*(_DWORD *)(v46 + 4) * *(_DWORD *)(v46 + 8)) << 10, v12, a11);
LABEL_20:
            uint64_t v13 = v20;
            int v22 = v49;
            if (v20) {
              BOOL v23 = 1;
            }
            else {
              BOOL v23 = v49 == 0;
            }
            if (!v23)
            {
              char v24 = 0;
              unsigned __int8 v25 = 0;
              char v26 = 0;
              int v27 = (unsigned int *)(a6 + 4723776);
              *(_DWORD *)(a6 + 4870352) = 0;
              if (!*(_DWORD *)(v46 + 48))
              {
                if ((a9 | 2) == 3 || v22 < 1)
                {
                  char v24 = 0;
                  unsigned __int8 v25 = 0;
                  char v26 = 0;
                }
                else
                {
                  uint64_t v28 = 0;
                  char v29 = 0;
                  char v24 = 0;
                  unsigned __int8 v25 = 0;
                  do
                  {
                    int v30 = sub_221A250A4(*(unsigned char **)(v51 + 8 * v28));
                    char v31 = 8 * (v30 - 1);
                    unsigned int v32 = 0x101u >> v31;
                    unsigned int v33 = 0x10001u >> v31;
                    if ((v30 - 1) < 3)
                    {
                      unsigned __int8 v25 = 1;
                      char v24 = v32;
                      char v29 = v33;
                    }
                    ++v28;
                  }
                  while (v28 < v49);
                  if (v29)
                  {
                    if ((unsigned __int16)sub_221A0C28C()) {
                      char v26 = 4;
                    }
                    else {
                      char v26 = 1;
                    }
                  }
                  else
                  {
                    char v26 = 0;
                  }
                  int v27 = (unsigned int *)(a6 + 4723776);
                }
              }
              if ((a9 | 2) == 3)
              {
                int v34 = a9;
                int v35 = a10;
              }
              else
              {
                int v34 = 0;
                int v35 = 0;
              }
              uint64_t v13 = sub_221A0DFF4(v46, (uint64_t)&v47, v27, v34, v35);
              if (!v13)
              {
                signed int v36 = v49;
                uint64_t v37 = (unsigned int **)(v51 + 8 * v52);
                uint64_t v38 = (unsigned int *)(v50 + 4 * v52);
                *(_DWORD *)(v46 + 156) = 0;
                *(_DWORD *)(*(void *)(v46 + 40) + 264) = 25;
                if (a4)
                {
                  int v39 = a4[1];
                  if (v39)
                  {
                    uint64_t v40 = a8;
                    int v41 = a7;
                  }
                  else
                  {
                    uint64_t v40 = a8;
                    int v41 = a7;
                    if (*a4 <= 0x89u)
                    {
                      *(_DWORD *)(v46 + 156) = (138 - *a4) >> 2;
                      int v39 = a4[1];
                    }
                  }
                  if (v39) {
                    *(_DWORD *)(*(void *)(v46 + 40) + 264) = 0;
                  }
                  int v42 = a4[2];
                }
                else
                {
                  int v42 = 0x10000;
                  uint64_t v40 = a8;
                  int v41 = a7;
                }
                uint64_t v13 = sub_221A05AE8(v37, v38, v36, a1, v41, v46, a6, v40, a9, a10, v25, v24, v26, v42);
              }
            }
            break;
          default:
            break;
        }
      }
      else
      {
        uint64_t v13 = 4294967188;
      }
    }
    sub_221A05B38((uint64_t)&v47);
  }
  return v13;
}

uint64_t sub_221A0DFF4(uint64_t a1, uint64_t a2, unsigned int *a3, int a4, int a5)
{
  uint64_t v7 = *(int **)(a2 + 40);
  uint64_t v6 = *(void **)(a2 + 48);
  uint64_t v8 = *(unsigned int *)(a2 + 32);
  *(_DWORD *)(a2 + 64) = 0;
  if ((int)v8 >= 1)
  {
    uint64_t v9 = 0;
    int v33 = 0;
    uint64_t v10 = 0;
    if (a5) {
      BOOL v11 = (a4 & 0xFFFFFFFD) == 1;
    }
    else {
      BOOL v11 = 0;
    }
    BOOL v12 = (a4 & 0xFFFFFFFD) != 1 || a5 != 0;
    int v36 = 0;
    BOOL v37 = v12;
    uint64_t v31 = a1;
    unsigned int v32 = a3 + 36646;
    int v35 = a4 & 0xFD;
    while (1)
    {
      uint64_t v13 = (unsigned int *)v6[v9];
      uint64_t v14 = v7[v9];
      int v15 = *(unsigned char *)v13 & 0x1F;
      fflush((FILE *)*MEMORY[0x263EF8348]);
      if (v15 != 19 && v11) {
        break;
      }
      if (!v37)
      {
        switch(v15)
        {
          case 5:
            goto LABEL_41;
          case 6:
          case 9:
          case 10:
          case 11:
          case 12:
            goto LABEL_35;
          case 7:
            goto LABEL_26;
          case 8:
            goto LABEL_27;
          case 13:
            goto LABEL_31;
          default:
            if (v15 != 1) {
              goto LABEL_34;
            }
            goto LABEL_41;
        }
      }
      if (v35 != 1 && v15 != 5 && v15 != 1) {
        break;
      }
LABEL_41:
      uint64_t v10 = sub_221A01ECC(v13, v14, a3, v39, a4, 0);
      if (!v10 && (v40 == 7 || v40 == 2)) {
        int v33 = 1;
      }
      if (v36)
      {
        if (v41) {
          goto LABEL_51;
        }
        int v36 = 1;
      }
      else
      {
        if (!(*v32 | v33) || v41) {
          goto LABEL_51;
        }
        int v36 = 0;
      }
LABEL_52:
      if (++v9 == v8)
      {
        int v24 = 0;
        unsigned __int8 v25 = v6;
        char v26 = v7;
        do
        {
          int v28 = *v26++;
          int v27 = v28;
          if (*v25) {
            BOOL v29 = v27 == 0;
          }
          else {
            BOOL v29 = 1;
          }
          if (!v29)
          {
            v6[v24] = *v25;
            v7[v24++] = v27;
          }
          ++v25;
          --v8;
        }
        while (v8);
        a1 = v31;
        goto LABEL_62;
      }
    }
    if (v15 > 12)
    {
      if (v15 == 13)
      {
LABEL_31:
        uint64_t v22 = sub_221A0563C();
LABEL_32:
        uint64_t v10 = v22;
        goto LABEL_51;
      }
LABEL_34:
      if (v15 != 19) {
        goto LABEL_35;
      }
    }
    else
    {
      if (v15 != 7)
      {
        if (v15 != 8)
        {
LABEL_35:
          if (v15 == 6 && (int)v14 >= 2)
          {
            uint64_t v10 = sub_221A05754(v13, v14, a3);
            if (v10) {
              return v10;
            }
          }
          goto LABEL_51;
        }
LABEL_27:
        if ((int)v14 >= 1)
        {
          int v18 = *(_DWORD *)(a2 + 64);
          uint64_t v19 = v14;
          uint64_t v20 = v13;
          do
          {
            int v21 = *(unsigned __int8 *)v20;
            uint64_t v20 = (unsigned int *)((char *)v20 + 1);
            v18 += v21;
            *(_DWORD *)(a2 + 64) = v18;
            --v19;
          }
          while (v19);
        }
        uint64_t v22 = sub_221A05644(v13, v14, a3);
        goto LABEL_32;
      }
LABEL_26:
      uint64_t v10 = sub_221A053EC(v13, v14, (int *)a3);
      int v36 = 1;
    }
LABEL_51:
    v6[v9] = 0;
    v7[v9] = 0;
    goto LABEL_52;
  }
  uint64_t v10 = 0;
  int v24 = 0;
LABEL_62:
  *(_DWORD *)(a2 + 32) = v24;
  if (v24 > *(_DWORD *)(a1 + 12)) {
    return 4294958327;
  }
  *(_DWORD *)(a2 + 56) = 0;
  return v10;
}

uint64_t sub_221A0E304(uint64_t a1, int a2, int a3, uint64_t a4, _DWORD *a5, int a6, uint64_t a7, unsigned int a8, int a9, int a10)
{
  uint64_t v17 = a1 + 5040672;
  if (a4) {
    BOOL v18 = a5 == 0;
  }
  else {
    BOOL v18 = 1;
  }
  int v19 = !v18;
  if (a4)
  {
    unsigned int v20 = *(_DWORD *)(a4 + 16);
    *(void *)(a4 + 144) = 0;
  }
  else
  {
    unsigned int v20 = 0;
  }
  int v87 = 0;
  uint64_t v85 = 0;
  unsigned int v86 = 0;
  if (*(_DWORD *)(a1 + 5041808)
    && ((a2 & 1) != 0 && a10 || (a2 & 1) != 0 && !a10 && *(_DWORD *)(a1 + 5041824) - 1 == a2))
  {
    int v21 = 0;
    uint64_t v22 = 4294954949;
    goto LABEL_169;
  }
  __uint64_t n = v20;
  uint64_t v84 = a1 + 5040672;
  if (a4 && (*(_DWORD *)(a4 + 20) | 0x10) == 0x34323076) {
    *(_DWORD *)(a4 + 20) = 875704438;
  }
  int __n_4 = v19;
  uint64_t v83 = a1;
  uint64_t v22 = sub_221A0EABC(a1, a2, a3, a4, 0, a5, a7, a8, 0, 0, &v86, 0, a9, v19);
  int v21 = v86;
  if (v86)
  {
    int v23 = 1;
LABEL_22:
    int v19 = __n_4;
    char v24 = 0;
    goto LABEL_23;
  }
  char v24 = 1;
  if (*(_DWORD *)(v84 + 1136))
  {
    uint64_t v22 = sub_221A0EABC(v83, a2, a3, a4, 0, a5, a7, a8, 0, 0, &v86, 1, a9, __n_4);
    int v23 = 0;
    int v21 = v86;
    if (v86) {
      goto LABEL_22;
    }
    int v19 = __n_4;
    char v24 = 1;
  }
  else
  {
    int v21 = 0;
    int v23 = 1;
    int v19 = __n_4;
  }
LABEL_23:
  if (v22) {
    BOOL v25 = a6 == 1;
  }
  else {
    BOOL v25 = 1;
  }
  if (!v25)
  {
    a1 = v83;
    uint64_t v17 = v84;
    goto LABEL_169;
  }
  a1 = v83;
  if (!v19)
  {
    uint64_t v17 = v84;
    goto LABEL_169;
  }
  char v79 = v24;
  if (*a5)
  {
    char v26 = 0;
    if (a9 && v21 && *(_DWORD *)(a4 + 64))
    {
      int v75 = *(_DWORD *)(a4 + 68);
      int v27 = a2;
      if (!*(_DWORD *)(v84 + 1136))
      {
LABEL_127:
        char v62 = 1;
        int v78 = v27;
        uint64_t v22 = sub_221A0EABC(v83, v27, a3, a4, 0, &v87, a7, a8, 0, 0, &v85, v23, 1, v19);
        char v63 = 0;
        goto LABEL_128;
      }
      if (a2 == 1) {
        goto LABEL_123;
      }
      int v27 = *(_DWORD *)(v84 + 1152);
      if (!v27) {
        goto LABEL_123;
      }
      __int32 v28 = v21[160].i32[0];
      if (v21[171].i8[3])
      {
        if (*(_DWORD *)(v84 + 24) + 1 != a2) {
          goto LABEL_123;
        }
        goto LABEL_38;
      }
      if ((a2 & 1) != 0 && !a10 && *(_DWORD *)(v84 + 1148)) {
        goto LABEL_123;
      }
      __int32 v60 = *(_DWORD *)v84;
      if ((a2 & 1) == 0 || v28 <= v60)
      {
        if ((a2 & 1) == 0 || v28 >= v60)
        {
LABEL_38:
          if (v27 == a2)
          {
            int v27 = a2 - 1;
LABEL_126:
            *(_DWORD *)(v84 + 1152) = a2;
            goto LABEL_127;
          }
          if (a2)
          {
            if (v28 < *(_DWORD *)v84) {
              int v27 = *(_DWORD *)(v84 + 28);
            }
            goto LABEL_126;
          }
          int32x2_t v61 = v21[169];
          if (v61)
          {
            int v27 = *(_DWORD *)(*(void *)&v61 + 1264);
            goto LABEL_126;
          }
LABEL_123:
          int v78 = 0;
          char v62 = 0;
          *(_DWORD *)(v84 + 1152) = a2;
          char v63 = 1;
LABEL_128:
          if (a6 != 1 && v22) {
            goto LABEL_138;
          }
          int v64 = v87;
          if (v87 && *(_DWORD *)(a4 + 64))
          {
            if (*(_DWORD *)(a4 + 68) == v75) {
              char v63 = 1;
            }
            if ((v63 & 1) == 0)
            {
              uint64_t v17 = v84;
              if (*(_DWORD *)(v84 + 1136))
              {
                uint64_t v65 = sub_2219F3E38(v83, a2);
                if (v65)
                {
                  uint64_t v22 = v65;
                  goto LABEL_139;
                }
                char v26 = 0;
                unsigned int v80 = 0;
              }
              else
              {
                unsigned int v80 = v22;
                char v26 = 0;
              }
              goto LABEL_175;
            }
          }
          if (a2)
          {
            int v29 = v78;
            if (!*(_DWORD *)(v84 + 1136)) {
              goto LABEL_145;
            }
            uint64_t v22 = sub_2219F3E38(v83, a2);
            if (v22)
            {
LABEL_138:
              uint64_t v17 = v84;
              goto LABEL_139;
            }
            int v64 = v87;
          }
          int v29 = v78;
LABEL_145:
          unsigned int v80 = v22;
          if (v64)
          {
            if (*(_DWORD *)(a4 + 64))
            {
              if (*(_DWORD *)(a4 + 68) == v75) {
                char v66 = 0;
              }
              else {
                char v66 = v62;
              }
              if ((v66 & 1) == 0) {
                goto LABEL_155;
              }
              goto LABEL_154;
            }
            if (v62)
            {
LABEL_154:
              char v26 = 0;
              goto LABEL_47;
            }
          }
          else
          {
            v21[172].i8[1] = 0;
            *a5 = 1;
          }
LABEL_155:
          if (*(_DWORD *)(*(void *)(*(void *)(v84 + 984) + 40) + 216))
          {
            char v26 = 1;
            goto LABEL_47;
          }
          if (*(int *)(a4 + 32) >= 1)
          {
            uint64_t v67 = 0;
            int v68 = 0;
            int v69 = *(_DWORD *)(a4 + 68);
            if (v69) {
              int16x8_t v70 = *(char **)a4;
            }
            else {
              int16x8_t v70 = (char *)(*(void *)a4 + __n);
            }
            if (v69) {
              int16x8_t v71 = (char *)(*(void *)a4 + __n);
            }
            else {
              int16x8_t v71 = *(char **)a4;
            }
            do
            {
              memcpy(&v70[v67], &v71[v67], __n);
              v68 += 2;
              v67 += 2 * __n;
            }
            while (v68 < *(_DWORD *)(a4 + 32));
          }
          int v19 = __n_4;
          if (!__n_4) {
            goto LABEL_167;
          }
          char v26 = 1;
LABEL_175:
          int v29 = v78;
          goto LABEL_47;
        }
        __int32 v60 = *(_DWORD *)(v84 + 4);
      }
      if (v28 != v60 + 1 && v28 != v60 + 2) {
        goto LABEL_123;
      }
      goto LABEL_38;
    }
    unsigned int v80 = v22;
  }
  else
  {
    unsigned int v80 = v22;
    char v26 = 0;
  }
  int v29 = a2;
LABEL_47:
  if (!v21 || !*a5) {
    goto LABEL_73;
  }
  if (v21[4].i8[1])
  {
    int32x2_t v30 = v21[169];
    uint64_t v17 = v84;
    if (v30)
    {
      if (*(unsigned char *)(*(void *)&v30 + 37))
      {
        *(_DWORD *)(a4 + 144) = *(_DWORD *)(*(void *)&v30 + 1280) != v21[160].i32[0];
        BOOL v31 = *(_DWORD *)(*(void *)&v30 + 1280) < v21[160].i32[0];
      }
      else
      {
        *(_DWORD *)(a4 + 144) = v21[160].i32[0] != *(_DWORD *)(*(void *)&v30 + 1280);
        BOOL v31 = v21[160].i32[0] < *(_DWORD *)(*(void *)&v30 + 1280);
      }
      int v32 = v31;
      *(_DWORD *)(a4 + 148) = v32;
    }
  }
  else
  {
    *(_DWORD *)(a4 + 144) = v21[161].i32[0] != v21[160].i32[1];
    *(_DWORD *)(a4 + 148) = v21[161].i32[0] < v21[160].i32[1];
    uint64_t v17 = v84;
  }
  if (*(_DWORD *)(*(void *)(*(void *)(v17 + 984) + 40) + 216) && !v21[172].i8[2])
  {
    int v40 = v21;
    if (v21[4].i8[2])
    {
      int v40 = (int32x2_t *)v21[169];
      if (!v40) {
        goto LABEL_119;
      }
    }
    char v76 = v26;
    int v77 = v29;
    int v41 = *(_DWORD *)(a4 + 52);
    int v42 = *(_DWORD *)(a4 + 28) & ~(*(int *)(a4 + 28) >> 31);
    uint64_t v43 = v40[26].i32[0];
    uint64_t v44 = *(int *)(a4 + 16);
    uint64_t v73 = 2 * *(int *)(a4 + 44);
    uint64_t v74 = (int)v43 * (uint64_t)v41;
    if (*(_DWORD *)(a4 + 32) >= ((*(_DWORD *)(a4 + 56) - v41) & ~((*(_DWORD *)(a4 + 56) - v41) >> 31))) {
      unsigned int v45 = (*(_DWORD *)(a4 + 56) - v41) & ~((*(_DWORD *)(a4 + 56) - v41) >> 31);
    }
    else {
      unsigned int v45 = *(_DWORD *)(a4 + 32);
    }
    if ((int)v44 >= 2 * v42) {
      size_t v46 = (2 * v42);
    }
    else {
      size_t v46 = v44;
    }
    if (v45)
    {
      uint64_t v47 = *(char **)a4;
      int v48 = (char *)(*(void *)&v40[24] + v73 + v74);
      unsigned int v49 = v45;
      do
      {
        memcpy(v47, v48, v46);
        v48 += v43;
        v47 += v44;
        --v49;
      }
      while (v49);
    }
    uint64_t v17 = v84;
    if (*(_DWORD *)(v84 + 1136)) {
      BOOL v50 = v85 == 0;
    }
    else {
      BOOL v50 = 1;
    }
    char v26 = v76;
    if (v50 || (a2 & 1) == 0 && v77 == a2 - 1) {
      goto LABEL_62;
    }
    uint64_t v51 = v85;
    if (v85[4].i8[2])
    {
      uint64_t v51 = (int32x2_t *)v85[169];
      if (!v51)
      {
LABEL_119:
        uint64_t v22 = 4294958327;
LABEL_139:
        int v19 = __n_4;
        a1 = v83;
        goto LABEL_169;
      }
    }
    if (v45 >= 2)
    {
      unsigned int v52 = v45 >> 1;
      uint64_t v53 = 2 * *(int *)(a4 + 16);
      uint64_t v54 = 2 * v51[26].i32[0];
      if (v85[4].i8[5]) {
        uint64_t v55 = *(int *)(a4 + 16);
      }
      else {
        uint64_t v55 = 0;
      }
      int16x8_t v56 = (char *)(*(void *)a4 + v55);
      uint64_t v57 = *(void *)&v51[24] + v73 + v74;
      if (v85[4].i8[5]) {
        uint64_t v58 = v51[26].i32[0];
      }
      else {
        uint64_t v58 = 0;
      }
      char v59 = (char *)(v57 + v58);
      do
      {
        memcpy(v56, v59, v46);
        char v26 = v76;
        v59 += v54;
        v56 += v53;
        --v52;
      }
      while (v52);
    }
  }
LABEL_62:
  char v33 = v26 ^ 1;
  if (!*(_DWORD *)(v17 + 1136)) {
    char v33 = 1;
  }
  if ((v33 & 1) == 0 && *(int *)(a4 + 32) >= 1)
  {
    uint64_t v34 = 0;
    int v35 = 0;
    int v36 = *(_DWORD *)(a4 + 68);
    if (v36) {
      BOOL v37 = *(char **)a4;
    }
    else {
      BOOL v37 = (char *)(*(void *)a4 + __n);
    }
    if (v36) {
      uint64_t v38 = (char *)(*(void *)a4 + __n);
    }
    else {
      uint64_t v38 = *(char **)a4;
    }
    do
    {
      memcpy(&v37[v34], &v38[v34], __n);
      v35 += 2;
      v34 += 2 * __n;
    }
    while (v35 < *(_DWORD *)(a4 + 32));
  }
LABEL_73:
  int v19 = __n_4;
  if (!__n_4)
  {
LABEL_167:
    uint64_t v17 = v84;
    goto LABEL_168;
  }
  uint64_t v17 = v84;
  if (!*(_DWORD *)(v84 + 1136))
  {
LABEL_168:
    a1 = v83;
    uint64_t v22 = v80;
LABEL_169:
    int v39 = v85;
    if (!v85) {
      goto LABEL_170;
    }
LABEL_171:
    *(_DWORD *)(a1 + 4723744) = v39[40].i32[0];
    *(int32x2_t *)(a1 + 4723752) = v39[39];
    goto LABEL_172;
  }
  if ((v79 & 1) == 0) {
    v21[172].i8[1] = 0;
  }
  int v39 = v85;
  a1 = v83;
  uint64_t v22 = v80;
  if (v85)
  {
    v85[172].i8[1] = 1;
    goto LABEL_171;
  }
LABEL_170:
  int v39 = v21;
  if (v21) {
    goto LABEL_171;
  }
LABEL_172:
  *(_DWORD *)(v17 + 1148) = v19 ^ 1;
  return v22;
}

uint64_t sub_221A0EABC(uint64_t a1, int a2, int a3, uint64_t a4, unsigned int a5, _DWORD *a6, uint64_t a7, unsigned int a8, unsigned __int8 a9, int a10, int32x2_t **a11, int a12, int a13, int a14)
{
  uint64_t v14 = a6;
  int v19 = a11;
  int v20 = a10;
  uint64_t v227 = *MEMORY[0x263EF8340];
  int v21 = (uint64_t *)(a1 + 5041656);
  int v226 = 0;
  int8x16_t v22 = 0uLL;
  long long v224 = 0u;
  long long v225 = 0u;
  long long v222 = 0u;
  long long v223 = 0u;
  long long v220 = 0u;
  long long v221 = 0u;
  long long v218 = 0u;
  long long v219 = 0u;
  long long v217 = 0u;
  if (a14)
  {
    unsigned int v23 = 0;
    uint64_t v24 = 0;
    int8x16_t v25 = 0uLL;
    uint64_t v26 = 4294954948;
    if (!a4 || !a6)
    {
      uint64_t v203 = 0;
      uint64_t v202 = 0;
      int v30 = 0;
      unint64_t v201 = 0;
      unint64_t v200 = 0;
      uint64_t v205 = 0;
      int v204 = 0;
      int v29 = 0;
      goto LABEL_28;
    }
    unsigned int v191 = a5;
    int v197 = a13;
    unsigned int v189 = a8;
    uint64_t v193 = (uint64_t *)(a1 + 5041656);
    uint64_t v190 = a7;
    int v27 = a11;
    *(_DWORD *)(a4 + 76) = 0;
    __int32 v28 = (long long *)(a4 + 76);
    uint64_t v209 = 0;
    uint64_t v26 = sub_2219F39A8((unsigned int *)(a1 + 4723776), *(_DWORD *)(a1 + 4870356), &v209);
    if (v26 || (uint64_t v26 = sub_221A0582C(v209, (uint64_t)&v210, a13), v26))
    {
      uint64_t v24 = 0;
      uint64_t v202 = 0;
      uint64_t v203 = 0;
      unsigned int v23 = 0;
      unint64_t v200 = 0;
      unint64_t v201 = 0;
      uint64_t v205 = 0;
      int v204 = 0;
      int v29 = 0;
      int8x16_t v25 = 0uLL;
      int v19 = a11;
      int v30 = 0;
LABEL_28:
      *int v19 = 0;
      goto LABEL_29;
    }
    unsigned __int32 v192 = v14;
    int v199 = 0;
    *(_DWORD *)(a4 + 136) = v216;
    int8x16_t v22 = *(int8x16_t *)a4;
    unsigned int v23 = *(_DWORD *)(a4 + 16);
    uint64_t v47 = *(void *)(a4 + 20);
    int v31 = *(_DWORD *)(a4 + 32);
    uint64_t v48 = *(void *)(a4 + 36);
    HIDWORD(v202) = *(_DWORD *)(a4 + 60);
    int v49 = *(_DWORD *)(a4 + 64);
    int v226 = *(_DWORD *)(a4 + 220);
    LODWORD(v205) = *(_DWORD *)(a4 + 68);
    HIDWORD(v205) = v49;
    int v204 = *(_DWORD *)(a4 + 72);
    long long v50 = *(_OWORD *)(a4 + 92);
    long long v217 = *v28;
    long long v218 = v50;
    long long v51 = *(_OWORD *)(a4 + 188);
    long long v223 = *(_OWORD *)(a4 + 172);
    long long v224 = v51;
    long long v225 = *(_OWORD *)(a4 + 204);
    long long v52 = *(_OWORD *)(a4 + 124);
    long long v219 = *(_OWORD *)(a4 + 108);
    long long v220 = v52;
    long long v53 = *(_OWORD *)(a4 + 156);
    long long v221 = *(_OWORD *)(a4 + 140);
    long long v222 = v53;
    int v21 = v193;
    int v20 = a10;
    if (*(_DWORD *)(*(void *)(*v193 + 40) + 216))
    {
      uint64_t v24 = v48;
    }
    else
    {
      uint64_t v24 = v48;
      if (v47 != 875704438)
      {
        if (v31 && v31 < v211 || v23 && v23 < v210 << (a10 == 0))
        {
          int8x16_t v208 = v22;
          if (a10)
          {
            *(void *)a4 = sub_221A12A5C((void *)(v210 * v211));
            int v54 = v210;
          }
          else
          {
            *(void *)a4 = sub_221A12A5C((void *)(2 * v211 * v210));
            int v54 = 2 * v210;
          }
          *(_DWORD *)(a4 + 16) = v54;
          int v199 = 1;
          int8x16_t v22 = v208;
          int v21 = v193;
          int v20 = a10;
        }
        else
        {
          int v199 = 0;
        }
      }
    }
    uint64_t v203 = v47;
    int v112 = v210;
    *(_DWORD *)(a4 + 32) = v211;
    int v113 = v212;
    unsigned int v114 = v213;
    *(_DWORD *)(a4 + 44) = v212;
    *(_DWORD *)(a4 + 48) = v114;
    unsigned int v115 = v215;
    unint64_t v200 = __PAIR64__(v214, v215);
    *(_DWORD *)(a4 + 52) = v214;
    *(_DWORD *)(a4 + 56) = v115;
    LODWORD(v202) = v113;
    unsigned int v116 = v114 - v113;
    *(_DWORD *)(a4 + 24) = v112;
    *(_DWORD *)(a4 + 28) = v116;
    unint64_t v201 = __PAIR64__(v116, v114);
  }
  else
  {
    unsigned int v191 = a5;
    int v197 = a13;
    unsigned int v189 = a8;
    uint64_t v190 = a7;
    unsigned __int32 v192 = a6;
    int v27 = a11;
    uint64_t v24 = 0;
    uint64_t v202 = 0;
    uint64_t v203 = 0;
    unsigned int v23 = 0;
    unint64_t v200 = 0;
    unint64_t v201 = 0;
    int v31 = 0;
    uint64_t v205 = 0;
    int v204 = 0;
    int v199 = 0;
  }
  unsigned __int32 v194 = v21;
  int8x16_t v206 = v22;
  uint64_t v32 = a1 + 5016960;
  if ((a9 & 0xFD) == 1)
  {
    int v33 = a2;
    int v34 = a9;
    int v35 = v20;
    int v36 = v20;
  }
  else
  {
    int v35 = v20;
    int v33 = a2;
    int v34 = 0;
    int v36 = 0;
  }
  uint64_t v37 = sub_2219F7880(v32, v33, a3 != 0, v34, v36, a12);
  uint64_t v38 = (int32x2_t *)v37;
  int v19 = v27;
  if (!a14)
  {
    int8x16_t v25 = v206;
    int v30 = v31;
    if (v37)
    {
      uint64_t v39 = *(void *)(v37 + 1352);
      uint64_t v14 = v192;
      int v29 = v199;
      uint64_t v26 = 0;
      if (v39) {
        *(unsigned char *)(v39 + 1377) = 1;
      }
      goto LABEL_21;
    }
    uint64_t v26 = 0;
    uint64_t v14 = v192;
LABEL_27:
    int v29 = v199;
    goto LABEL_28;
  }
  int8x16_t v25 = v206;
  int v30 = v31;
  uint64_t v14 = v192;
  if (!v192)
  {
    uint64_t v26 = 4294954948;
    int v29 = v199;
    goto LABEL_148;
  }
  if (!v37)
  {
    if (*(_DWORD *)(a4 + 140) == -12356) {
      *(_DWORD *)(a4 + 140) = -12349;
    }
    uint64_t v26 = 0;
    *unsigned __int32 v192 = 0;
    goto LABEL_27;
  }
  if (!*(unsigned char *)(v37 + 1379))
  {
    uint64_t v55 = *(int8x16_t **)a4;
    unsigned int v56 = *(_DWORD *)(a4 + 16);
    uint64_t v57 = *(unsigned int *)(a4 + 24);
    uint64_t v58 = *(unsigned int *)(a4 + 32);
    char v59 = (int32x2_t *)(v37 + 32);
    if (v197) {
      BOOL v60 = v38[4].i8[1] == 0;
    }
    else {
      BOOL v60 = 1;
    }
    int v61 = !v60;
    *(_DWORD *)(a4 + 64) = v61;
    LODWORD(v205) = v38[4].u8[6];
    HIDWORD(v205) = v61;
    *(_DWORD *)(a4 + 68) = v205;
    int v204 = v38[4].u8[2];
    *(_DWORD *)(a4 + 72) = v204;
    int v62 = (*(_DWORD *)(a4 + 56) - *(_DWORD *)(a4 + 52)) >> v61;
    *(_DWORD *)(a4 + 36) = (int)v58 >> v61;
    *(_DWORD *)(a4 + 40) = v62;
    char v63 = v194;
    uint64_t v64 = *(void *)(*v194 + 40);
    if ((*(_DWORD *)(v64 + 184) || *(_DWORD *)(v64 + 216)) && !v38[172].i8[2])
    {
      int v29 = v199;
      if ((a9 & 0xFD) == 1 && v35)
      {
        unsigned int v111 = v19;
        sub_22191AC44(v59, (void **)a4, v191);
        int v19 = v111;
        int8x16_t v25 = v206;
      }
      goto LABEL_147;
    }
    int v65 = v38[4].u8[1];
    int v188 = v19;
    if (v38[170].u8[2] != v65)
    {
      v38[170].i8[2] = v65;
      v38[4].i8[0] = v65;
      v38[4].i8[5] = v38[4].i8[6];
      int32x2_t v66 = v38[17];
      v38[16] = v66;
      v38[18] = v38[19];
      v38[75] = vadd_s32(vdup_lane_s32(v66, 1), (int32x2_t)0xFFFFFFFF00000002);
      int32x2_t v67 = v38[52];
      if (v67)
      {
        *(_DWORD *)(*(void *)&v67 + 72) = 1;
        *(void *)(*(void *)&v67 + 64) = 0x100000001;
        *(_OWORD *)(*(void *)&v67 + 128) = xmmword_221A366C0;
      }
      int32x2_t v68 = v38[53];
      if (v68)
      {
        *(_DWORD *)(*(void *)&v68 + 72) = 1;
        *(void *)(*(void *)&v68 + 64) = 0x100000001;
        *(_OWORD *)(*(void *)&v68 + 128) = xmmword_221A366C0;
      }
      unsigned int v178 = v57;
      uint64_t v69 = v58;
      int v180 = v55;
      unsigned int v183 = v56;
      int32x2_t v70 = v38[54];
      if (v70)
      {
        *(_DWORD *)(*(void *)&v70 + 72) = 1;
        *(void *)(*(void *)&v70 + 64) = 0x100000001;
        *(_OWORD *)(*(void *)&v70 + 128) = xmmword_221A366C0;
      }
      sub_221926888((uint64_t)v59, v38[23].i32[0]);
      if (v38[4].i8[1])
      {
        char v59 = v38 + 4;
        int v19 = v188;
        char v63 = v194;
        unsigned int v56 = v183;
        uint64_t v55 = v180;
        uint64_t v58 = v69;
        uint64_t v57 = v178;
        if (!v38->i8[3])
        {
          uint64_t v71 = v38[21].i32[0];
          if (v71)
          {
            __int32 v72 = v38[23].i32[0];
            if (v72)
            {
              int v73 = 0;
              int32x2_t v75 = v38[8];
              int32x2_t v74 = v38[9];
              uint64_t v76 = v38[22].i32[1];
              int v77 = 2 * v38[16].i32[1];
              int v78 = 2 * v38[18].i32[1];
              uint64_t v79 = 2 * v71;
              uint64_t v80 = v38[20].i32[1];
              uint64_t v81 = *(void *)&v75 - 32;
              uint64_t v82 = v80 + 48;
              uint64_t v83 = *(void *)&v75 - 2 * v71;
              uint64_t v84 = *(void *)&v75 + v71;
              uint64_t v85 = *(void *)&v75 - v71;
              do
              {
                if ((int)v80 >= -63)
                {
                  uint64_t v86 = -16;
                  do
                  {
                    *(_OWORD *)(v83 + v86 - 16) = *(_OWORD *)(v81 + v86 + 16);
                    int8x16_t v25 = *(int8x16_t *)(v84 + v86 - 16);
                    *(int8x16_t *)(v85 + v86 - 16) = v25;
                    v86 += 16;
                  }
                  while (v86 < v82);
                }
                v81 -= 2 * v71;
                ++v73;
                v83 -= 2 * v71;
                v84 -= 2 * v71;
                v85 -= 2 * v71;
              }
              while (v73 != 20);
              int v87 = 0;
              int v88 = (v77 - 2) * v71;
              uint64_t v89 = *(void *)&v75 + v88 - 32;
              uint64_t v90 = v71 + v88;
              uint64_t v91 = 3 * v71 + v88;
              uint64_t v92 = v79 + v88 + *(void *)&v75 - 32;
              uint64_t v93 = v90 + *(void *)&v75 - 32;
              uint64_t v94 = v91 + *(void *)&v75 - 32;
              uint64_t v58 = v69;
              uint64_t v57 = v178;
              do
              {
                if ((int)v80 >= -63)
                {
                  uint64_t v95 = -16;
                  do
                  {
                    *(_OWORD *)(v92 + v95 + 16) = *(_OWORD *)(v89 + v95 + 16);
                    int8x16_t v25 = *(int8x16_t *)(v93 + v95 + 16);
                    *(int8x16_t *)(v94 + v95 + 16) = v25;
                    v95 += 16;
                  }
                  while (v95 < v82);
                }
                v89 += v79;
                ++v87;
                v92 += v79;
                v93 += v79;
                v94 += v79;
              }
              while (v87 != 20);
              int v96 = 0;
              uint64_t v97 = *(void *)&v74 - 16;
              uint64_t v98 = 2 * v72;
              uint64_t v99 = v76 + 16;
              do
              {
                if ((int)v76 >= -31)
                {
                  uint64_t v100 = 0;
                  do
                  {
                    *(_OWORD *)(v97 - 2 * v72 + v100) = *(_OWORD *)(v97 + v100);
                    int8x16_t v25 = *(int8x16_t *)(v97 + v72 + v100);
                    *(int8x16_t *)(v97 - v72 + v100) = v25;
                    BOOL v101 = v100 < v99;
                    v100 += 16;
                  }
                  while (v101);
                }
                v97 -= 2 * v72;
                ++v96;
              }
              while (v96 != 8);
              int v102 = 0;
              int v103 = (v78 - 2) * v72;
              uint64_t v104 = *(void *)&v74 + v103 - 16;
              uint64_t v105 = v72 + (uint64_t)v103;
              uint64_t v106 = 3 * v72 + v103;
              uint64_t v107 = v98 + v103 + *(void *)&v74 - 16;
              uint64_t v108 = v105 + *(void *)&v74 - 16;
              uint64_t v109 = v106 + *(void *)&v74 - 16;
              char v59 = v38 + 4;
              int v19 = v188;
              unsigned int v56 = v183;
              uint64_t v55 = v180;
              do
              {
                if ((int)v76 >= -31)
                {
                  uint64_t v110 = -16;
                  do
                  {
                    *(_OWORD *)(v107 + v110 + 16) = *(_OWORD *)(v104 + v110 + 16);
                    int8x16_t v25 = *(int8x16_t *)(v108 + v110 + 16);
                    *(int8x16_t *)(v109 + v110 + 16) = v25;
                    v110 += 16;
                  }
                  while (v110 < v99);
                }
                v104 += v98;
                ++v102;
                v107 += v98;
                v108 += v98;
                v109 += v98;
              }
              while (v102 != 8);
            }
          }
        }
      }
      else
      {
        char v59 = v38 + 4;
        int v19 = v188;
        char v63 = v194;
        unsigned int v56 = v183;
        uint64_t v55 = v180;
        uint64_t v58 = v69;
        uint64_t v57 = v178;
        if (!v38->i8[3])
        {
          uint64_t v117 = v38[21].i32[0];
          if (v117)
          {
            __int32 v118 = v38[23].i32[0];
            if (v118)
            {
              int v119 = 0;
              int32x2_t v121 = v38[8];
              int32x2_t v120 = v38[9];
              uint64_t v122 = v38[22].i32[1];
              uint64_t v123 = v38[16].i32[1];
              uint64_t v124 = v38[18].i32[1];
              uint64_t v125 = v38[20].i32[1];
              uint64_t v126 = *(void *)&v121 - 32;
              uint64_t v127 = 2 * v117;
              uint64_t v128 = v125 + 48;
              do
              {
                if ((int)v125 >= -63)
                {
                  uint64_t v129 = 0;
                  do
                  {
                    int8x16_t v25 = *(int8x16_t *)(v126 + v129);
                    *(int8x16_t *)(v126 - v117 + v129) = v25;
                    *(int8x16_t *)(v126 - 2 * v117 + v129) = v25;
                    BOOL v101 = v129 < v128;
                    v129 += 16;
                  }
                  while (v101);
                }
                v126 -= 2 * v117;
                ++v119;
              }
              while (v119 != 10);
              int v130 = 0;
              uint64_t v131 = (v123 - 1) * v117;
              uint64_t v132 = *(void *)&v121 + v131 - 32;
              uint64_t v133 = v117 + v131 + *(void *)&v121 - 32;
              uint64_t v134 = v131 + v127 + *(void *)&v121 - 32;
              unsigned int v56 = v183;
              uint64_t v58 = v69;
              uint64_t v57 = v178;
              do
              {
                if ((int)v125 >= -63)
                {
                  uint64_t v135 = 0;
                  do
                  {
                    int8x16_t v25 = *(int8x16_t *)(v132 + v135);
                    *(int8x16_t *)(v133 + v135) = v25;
                    *(int8x16_t *)(v134 + v135) = v25;
                    BOOL v101 = v135 < v128;
                    v135 += 16;
                  }
                  while (v101);
                }
                v132 += v127;
                ++v130;
                v133 += v127;
                v134 += v127;
              }
              while (v130 != 10);
              int v136 = 0;
              uint64_t v137 = *(void *)&v120 - 16;
              uint64_t v138 = v122 + 16;
              char v59 = v38 + 4;
              uint64_t v55 = v180;
              do
              {
                if ((int)v122 >= -31)
                {
                  uint64_t v139 = 0;
                  do
                  {
                    int8x16_t v25 = *(int8x16_t *)(v137 + v139);
                    *(int8x16_t *)(v137 - v118 + v139) = v25;
                    BOOL v101 = v139 < v138;
                    v139 += 16;
                  }
                  while (v101);
                }
                v137 -= v118;
                ++v136;
              }
              while (v136 != 8);
              int v140 = 0;
              uint64_t v141 = *(void *)&v120 + (v124 - 1) * v118 - 16;
              int v19 = v188;
              do
              {
                if ((int)v122 >= -31)
                {
                  uint64_t v142 = 0;
                  do
                  {
                    int8x16_t v25 = *(int8x16_t *)(v141 + v142);
                    *(int8x16_t *)(v141 + v118 + v142) = v25;
                    BOOL v101 = v142 < v138;
                    v142 += 16;
                  }
                  while (v101);
                }
                v141 += v118;
                ++v140;
              }
              while (v140 != 8);
            }
          }
        }
      }
    }
    if ((a9 & 0xFD) == 1 && v35)
    {
      uint64_t v143 = v19;
      sub_22191AC44(v59, (void **)a4, v191);
      int v19 = v143;
      int8x16_t v25 = v206;
LABEL_146:
      int v29 = v199;
LABEL_147:
      uint64_t v26 = 0;
      *unsigned __int32 v192 = 1;
LABEL_148:
      *int v19 = v38;
      if (!v38) {
        goto LABEL_29;
      }
      goto LABEL_149;
    }
    int v144 = v38[173].i32[0];
    int v145 = v38[163].u8[0];
    int v146 = v38[163].u8[2];
    int v147 = v38[163].u8[1];
    *(unsigned char *)(a4 + 133) = v146 == 4;
    uint64_t v148 = *v63;
    LOBYTE(v210) = v38[163].i8[3];
    int v149 = v210;
    BYTE1(v210) = v38[163].i8[4];
    int v150 = v38[163].u8[5];
    HIWORD(v210) = *(__int16 *)((char *)&v38[163].i16[2] + 1);
    if (!(_BYTE)v210)
    {
      int v149 = v38[163].u8[7];
      __int8 v151 = v38[164].i8[0];
      int v150 = v38[164].u8[1];
      __int8 v152 = v38[164].i8[2];
      LOBYTE(v210) = v38[163].i8[7];
      BYTE1(v210) = v151;
      BYTE2(v210) = v150;
      HIBYTE(v210) = v152;
    }
    if (v149 && v150 && !v38[4].i8[1])
    {
      unsigned int v160 = v38[160].u32[0];
      __int16 v161 = v38[164].i16[2];
      uint64_t v164 = v63[1];
      unsigned int v163 = v63 + 1;
      uint64_t v162 = v164;
      if (!v164)
      {
        unsigned int v179 = v57;
        unsigned int v196 = v58;
        uint64_t v182 = v55;
        unsigned int v185 = v56;
        uint64_t v187 = v59;
        uint64_t v26 = sub_221A15DD0(v163);
        if (v26) {
          goto LABEL_155;
        }
        uint64_t v162 = *v163;
        char v59 = v187;
        unsigned int v56 = v185;
        uint64_t v55 = v182;
        uint64_t v58 = v196;
        uint64_t v57 = v179;
      }
      uint64_t v165 = sub_221A15F34((uint64_t)v59, a4, v55, v56, v57, v58, v190, v189, v197, v160, v161, &v210, v162);
      if (v165)
      {
        uint64_t v26 = v165;
        goto LABEL_155;
      }
    }
    else
    {
      if (v145 && v147 == 1 && v144 <= 0x10000)
      {
        uint64_t v186 = v59;
        int32x4_t v153 = *(unsigned int **)(v148 + 848);
        if (v153)
        {
LABEL_128:
          v153[66] = *(_DWORD *)(*(void *)(v148 + 40) + 264);
          *((_WORD *)v153 + 112) = 257;
          *((unsigned char *)v153 + 226) = v146 == 1;
          *((void *)v153 + 22) = v55;
          v153[46] = v56;
          v153[22] = *(_DWORD *)(a4 + 20);
          *((void *)v153 + 12) = *(void *)(a4 + 176);
          v153[26] = *(_DWORD *)(a4 + 184);
          *((void *)v153 + 30) = v190;
          int32x2_t v154 = *(int32x2_t *)(v153 + 28);
          *((int32x2_t *)v153 + 14) = v38[174];
          v38[174] = v154;
          int32x2_t v155 = *(int32x2_t *)(v153 + 30);
          *((int32x2_t *)v153 + 15) = v38[175];
          v38[175] = v155;
          int32x2_t v156 = *(int32x2_t *)(v153 + 32);
          *((int32x2_t *)v153 + 16) = v38[176];
          v38[176] = v156;
          int32x2_t v157 = *(int32x2_t *)(v153 + 34);
          *((int32x2_t *)v153 + 17) = v38[177];
          v38[177] = v157;
          int32x2_t v158 = *(int32x2_t *)(v153 + 18);
          *((int32x2_t *)v153 + 9) = v38[178];
          v38[178] = v158;
          if (sub_221A33C20(*(void *)(*v63 + 80)) <= 2) {
            unsigned int v159 = sub_221A33C20(*(void *)(*v63 + 80));
          }
          else {
            unsigned int v159 = 2;
          }
          unsigned int v195 = v159;
          uint64_t v198 = sub_221A12A5C((void *)(32 * v159));
          unsigned int v166 = sub_221A12A5C((void *)(16 * v159));
          unsigned int v167 = v166;
          if (v159)
          {
            unint64_t v168 = v166 + 1;
            uint64_t v169 = v159;
            unsigned int v170 = v198;
            do
            {
              *(_DWORD *)unsigned int v170 = 0;
              v170[1] = v153;
              v170[2] = v186;
              v170[3] = v38 + 144;
              *(v168 - 1) = sub_221A2F35C;
              void *v168 = v170;
              v170 += 4;
              v168 += 2;
              --v169;
            }
            while (v169);
          }
          size_t v171 = v153[5];
          sub_221A341D0(*((pthread_mutex_t **)v153 + 20));
          if (v171) {
            memset(*((void **)v153 + 21), 10, v171);
          }
          sub_221A341DC(*((pthread_mutex_t **)v153 + 20));
          sub_221A33B30(*(void *)(v148 + 80), (uint64_t)v167, v195);
          int32x2_t v172 = *(int32x2_t *)(v153 + 28);
          *((int32x2_t *)v153 + 14) = v38[174];
          v38[174] = v172;
          int32x2_t v173 = *(int32x2_t *)(v153 + 30);
          *((int32x2_t *)v153 + 15) = v38[175];
          v38[175] = v173;
          int32x2_t v174 = *(int32x2_t *)(v153 + 32);
          *((int32x2_t *)v153 + 16) = v38[176];
          v38[176] = v174;
          int32x2_t v175 = *(int32x2_t *)(v153 + 34);
          *((int32x2_t *)v153 + 17) = v38[177];
          v38[177] = v175;
          int32x2_t v176 = *(int32x2_t *)(v153 + 18);
          *((int32x2_t *)v153 + 9) = v38[178];
          v38[178] = v176;
          j__free(v198);
          j__free(v167);
          goto LABEL_145;
        }
        int v181 = v55;
        unsigned int v184 = v56;
        int32x4_t v153 = (unsigned int *)sub_221A12A48(0x110uLL);
        *(void *)(v148 + 848) = v153;
        uint64_t v26 = sub_221A2F1CC((uint64_t)v153, *(_DWORD *)(v148 + 4), *(_DWORD *)(v148 + 8));
        if (!v26)
        {
          bzero(*((void **)v153 + 18), v153[5]);
          bzero(*((void **)v153 + 6), 12 * v153[14]);
          char v63 = v194;
          unsigned int v56 = v184;
          uint64_t v55 = v181;
          goto LABEL_128;
        }
LABEL_155:
        int8x16_t v25 = v206;
        int v19 = v188;
        goto LABEL_17;
      }
      if (v145 && v146 == 1 && v144 <= 0x10000) {
        sub_22191A7A4((uint64_t)v59, a4, (uint64_t)v55, v56, v57, v58, v190, v189, v197);
      }
      else {
        sub_22191A57C((uint64_t)v59, a4, v55, v56, v25, v57, v58, v190, v189, v197);
      }
    }
LABEL_145:
    int8x16_t v25 = v206;
    int v19 = v188;
    goto LABEL_146;
  }
  *unsigned __int32 v192 = 0;
  *(_DWORD *)(a4 + 76) = 1;
  uint64_t v26 = 4294954946;
LABEL_17:
  int v29 = v199;
LABEL_21:
  *int v19 = v38;
LABEL_149:
  v38[172].i8[1] = 1;
  if (!v38[4].i8[1])
  {
    int32x2_t v177 = v38[169];
    if (v177) {
      *(unsigned char *)(*(void *)&v177 + 1377) = 1;
    }
  }
LABEL_29:
  if (v29)
  {
    int8x16_t v207 = v25;
    if (*v14 == 1 && v30 >= 1)
    {
      unsigned int v40 = 0;
      uint64_t v41 = 0;
      do
      {
        memcpy((void *)(v207.i64[0] + v40), (const void *)(*(void *)a4 + (*(_DWORD *)(a4 + 16) * v41++)), v23);
        v40 += v23;
      }
      while (v30 != v41);
    }
    j__free(*(void **)a4);
    *(int8x16_t *)a4 = v207;
    long long v42 = v224;
    *(_OWORD *)(a4 + 172) = v223;
    *(_OWORD *)(a4 + 188) = v42;
    *(_OWORD *)(a4 + 204) = v225;
    long long v43 = v220;
    *(_OWORD *)(a4 + 108) = v219;
    *(_OWORD *)(a4 + 124) = v43;
    long long v44 = v222;
    *(_OWORD *)(a4 + 140) = v221;
    *(_OWORD *)(a4 + 156) = v44;
    long long v45 = v218;
    *(_OWORD *)(a4 + 76) = v217;
    *(_DWORD *)(a4 + 16) = v23;
    *(void *)(a4 + 20) = v203;
    *(_DWORD *)(a4 + 28) = HIDWORD(v201);
    *(_DWORD *)(a4 + 32) = v30;
    *(void *)(a4 + 36) = v24;
    *(_DWORD *)(a4 + 44) = v202;
    *(_DWORD *)(a4 + 48) = v201;
    *(_DWORD *)(a4 + 52) = HIDWORD(v200);
    *(_DWORD *)(a4 + 56) = v200;
    *(_DWORD *)(a4 + 60) = HIDWORD(v202);
    *(_DWORD *)(a4 + 64) = HIDWORD(v205);
    *(_DWORD *)(a4 + 68) = v205;
    *(_DWORD *)(a4 + 72) = v204;
    *(_DWORD *)(a4 + 220) = v226;
    *(_OWORD *)(a4 + 92) = v45;
  }
  return v26;
}

uint64_t sub_221A0F96C(uint64_t a1, uint64_t a2, _DWORD *a3, int a4)
{
  int v11 = 0;
  uint64_t v10 = 0;
  if (a2 && (*(_DWORD *)(a2 + 20) | 0x10) == 0x34323076) {
    *(_DWORD *)(a2 + 20) = 875704438;
  }
  uint64_t result = sub_221A0EABC(a1, 0, 0, a2, 0, a3, 0, 0, 0, 0, &v10, 0, 1, 1);
  if ((a4 == 1 || !result) && !*(_DWORD *)(a1 + 5041808) && *a3 && *(_DWORD *)(a2 + 64))
  {
    if (v10) {
      return sub_221A0EABC(a1, 0, 0, a2, 0, &v11, 0, 0, 0, 0, &v9, 1, 1, 1);
    }
  }
  return result;
}

uint64_t sub_221A0FA88(uint64_t a1, int *a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = a2 + 1260414;
  uint64_t v5 = *((void *)a2 + 630207);
  int v6 = *(_DWORD *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 8);
  int v8 = *(_DWORD *)(a1 + 24);
  a2[1260457] = 0;
  a2[1260458] = 0;
  sub_221A05B28((uint64_t)&v64);
  uint64_t v9 = sub_221A05B80((uint64_t)&v64, 400);
  if (!v9)
  {
    uint64_t v64 = v7;
    int v70 = 0;
    int v65 = v8;
    if (!v8)
    {
LABEL_75:
      uint64_t v9 = 4294958327;
      goto LABEL_124;
    }
    if (v6)
    {
      switch(v6)
      {
        case 2:
          uint64_t v10 = sub_221A33638((uint64_t)&v64);
          goto LABEL_11;
        case 3:
          unsigned int v11 = 1;
          break;
        case 4:
          unsigned int v11 = 2;
          break;
        case 5:
          unsigned int v11 = 4;
          break;
        default:
          goto LABEL_75;
      }
      uint64_t v10 = sub_221A334B0((uint64_t)&v64, v11, (*(_DWORD *)(v5 + 4) * *(_DWORD *)(v5 + 8)) << 10, 0, 0);
    }
    else
    {
      uint64_t v10 = sub_221A33328((uint64_t)&v64, 0);
    }
LABEL_11:
    uint64_t v9 = v10;
    if (!v10)
    {
      uint64_t v12 = v70;
      if (v70)
      {
        uint64_t v61 = v71;
        uint64_t v62 = v72;
        unint64_t v73 = 0xFFFFFFFF00000000;
        uint64_t v67 = 1;
        int v74 = 0;
        int v66 = v70;
        if (v70 < 1)
        {
          uint64_t v9 = 0;
          goto LABEL_84;
        }
        uint64_t v52 = v3;
        int v53 = v6;
        uint64_t v13 = 0;
        uint64_t v14 = 0;
        BOOL v59 = 0;
        uint64_t v60 = 0x100000000;
        int v15 = 0;
        uint64_t v16 = 0;
        char v63 = a2 + 1217592;
        int v17 = -1;
        unsigned int v56 = 0;
        int v57 = -1;
        uint64_t v18 = 0xFFFFFFFFLL;
        while (1)
        {
          int v54 = v17;
          int v55 = v15;
          int v58 = 0;
          uint64_t v19 = v14;
          uint64_t v9 = v16;
          while (1)
          {
            uint64_t v20 = v12;
            int v21 = *(unsigned int **)(v62 + 8 * v13);
            uint64_t v22 = *(unsigned int *)(v61 + 4 * v13);
            char v23 = *(unsigned char *)v21;
            int v24 = *(unsigned char *)v21 & 0x1F;
            fflush((FILE *)*MEMORY[0x263EF8348]);
            if (v24 == 7)
            {
              uint64_t v28 = sub_221A053EC(v21, v22, v63);
            }
            else
            {
              if (v24 != 8) {
                goto LABEL_23;
              }
              int8x16_t v25 = v21;
              uint64_t v26 = v22;
              if ((int)v22 >= 1)
              {
                do
                {
                  int v27 = *(unsigned __int8 *)v25;
                  int8x16_t v25 = (unsigned int *)((char *)v25 + 1);
                  uint64_t v19 = (v19 + v27);
                  --v26;
                }
                while (v26);
              }
              uint64_t v28 = sub_221A05644(v21, v22, (unsigned int *)v63);
            }
            uint64_t v9 = v28;
LABEL_23:
            if ((v23 & 0x1B) == 1) {
              break;
            }
            uint64_t v12 = v20;
LABEL_67:
            if (++v13 == v12)
            {
              if (v58)
              {
                int v70 = v54 + 1;
                HIDWORD(v73) = v54 + 1;
              }
              int v15 = v55;
              goto LABEL_79;
            }
          }
          sub_221A01ECC(v21, v22, (unsigned int *)v63, v75, 0, 0);
          if (HIDWORD(v60))
          {
            uint64_t v12 = v20;
            if (v9 || (v18 & 0x80000000) == 0 && v18 != v76)
            {
              uint64_t v13 = 0;
              uint64_t v14 = 0;
              uint64_t v60 = 0;
              int v15 = 0;
              int v66 = v20;
              int v17 = -1;
              unsigned int v56 = 0;
              int v57 = -1;
              uint64_t v16 = v9;
              continue;
            }
            uint64_t v29 = v76;
          }
          else
          {
            BOOL v30 = v59;
            if (!(v59 | v9)) {
              BOOL v30 = v77 == 2 || v77 == 7;
            }
            uint64_t v12 = v20;
            BOOL v59 = v30;
            if (!v30 || (uint64_t v29 = v18, v9))
            {
              HIDWORD(v60) = 0;
              goto LABEL_67;
            }
          }
          if (v85 != 1 || v82 || v83 || v84 || v86 < 2u || v87 || v80 > 1) {
            goto LABEL_58;
          }
          BOOL v32 = v77 == 1 || v77 == 6;
          BOOL v33 = !v32;
          if (v32 && v76) {
            goto LABEL_58;
          }
          if (v81 < 2) {
            BOOL v33 = 1;
          }
          if (!v33) {
LABEL_58:
          }
            int v74 = -1;
          if (!v78)
          {
            uint64_t v18 = v29;
            LODWORD(v67) = 0;
            BOOL v68 = v76 != 0;
            int v69 = v77;
            goto LABEL_67;
          }
          int v34 = v57;
          if (v57 == -1)
          {
            uint64_t v14 = 0;
            HIDWORD(v67) = v79;
            int v34 = v79;
            int v35 = v55;
            goto LABEL_72;
          }
          if (v57 != v79)
          {
            LODWORD(v60) = v60 + 1;
            uint64_t v18 = v29;
            if (v56 == v19)
            {
              int v58 = 1;
              uint64_t v19 = v56;
            }
            else
            {
              int v74 = -1;
              int v58 = 1;
            }
            goto LABEL_67;
          }
          uint64_t v14 = v19;
          int v35 = v55;
          LODWORD(v19) = v56;
LABEL_72:
          if (v58) {
            goto LABEL_75;
          }
          unsigned int v56 = v19;
          int v57 = v34;
          uint64_t v18 = v29;
          uint64_t v16 = 0;
          int v15 = v35 + 1;
          BOOL v68 = v76 != 0;
          int v69 = v77;
          int v17 = v13++;
          if (v13 == v12)
          {
LABEL_79:
            if (v15 != 1)
            {
              int v6 = v53;
              uint64_t v3 = v52;
              goto LABEL_84;
            }
            int v6 = v53;
            uint64_t v3 = v52;
            if (v60 != 1) {
LABEL_84:
            }
              int v74 = -1;
            if (!v9)
            {
              uint64_t v36 = SHIDWORD(v73);
              if (HIDWORD(v73) == -1)
              {
                *(void *)(v3 + 16) = 0;
                *(_DWORD *)(v3 + 28) = 0;
                int v37 = v67;
                int v38 = HIDWORD(v67);
                if (v67)
                {
                  v4[43] = 1;
                  v4[44] = v38;
                  if (v4[39])
                  {
                    if (!v4[38])
                    {
                      uint64_t v9 = 4294966630;
                      break;
                    }
                  }
                  else
                  {
                    v4[40] = v38;
                    *((void *)v4 + 19) = 0x100000001;
                  }
                }
              }
              else
              {
                if (v4[39])
                {
                  if (v4[38] == 1)
                  {
                    uint64_t v9 = 4294954945;
                    break;
                  }
                }
                else
                {
                  v4[40] = HIDWORD(v67);
                  *((void *)v4 + 19) = 0x100000000;
                }
                uint64_t v39 = v72;
                int v40 = *(void *)(v72 + 8 * v36) - *(_DWORD *)(v3 + 8);
                int v41 = *(_DWORD *)(v3 + 24) - v40;
                if (v6)
                {
                  if ((v6 - 3) > 2) {
                    unsigned int v42 = 0;
                  }
                  else {
                    unsigned int v42 = dword_221A3C2BC[v6 - 3];
                  }
                }
                else
                {
                  unsigned int v42 = 3;
                }
                *(_DWORD *)(v3 + 24) = v40 - v42;
                *(_DWORD *)(v3 + 28) = v41 + v42;
                *(void *)(v3 + 16) = *(void *)(v39 + 8 * v36) - v42;
                int v37 = v67;
                int v38 = HIDWORD(v67);
              }
              *(unsigned char *)(v3 + 61) = v37 != 0;
              *(unsigned char *)(v3 + 62) = v38 != 0;
              BOOL v44 = v68;
              int v43 = v69;
              BOOL v46 = v69 == 2 || v69 == 7;
              *(unsigned char *)(v3 + 63) = v46;
              if (v43) {
                BOOL v47 = v43 == 5;
              }
              else {
                BOOL v47 = 1;
              }
              char v48 = v47;
              *(unsigned char *)(v3 + 64) = v48;
              BOOL v50 = v43 == 1 || v43 == 6;
              *(unsigned char *)(v3 + 65) = v50;
              *(unsigned char *)(v3 + 66) = v44;
              *(_DWORD *)(v3 + 68) = v70;
              *(unsigned char *)(v3 + 60) = 1;
              if (!v37 || v74 == -1 || v43 == 7 || v43 == 2)
              {
                uint64_t v9 = 0;
                *(unsigned char *)(v3 + 72) = 0;
              }
              else
              {
                uint64_t v9 = 0;
                *(unsigned char *)(v3 + 72) = 1;
              }
            }
            break;
          }
        }
      }
    }
  }
LABEL_124:
  sub_221A05B38((uint64_t)&v64);
  return v9;
}

uint64_t sub_221A100CC(int a1, uint64_t a2, int *a3, uint64_t a4, int a5, _DWORD *a6, uint64_t a7)
{
  if (*(unsigned char *)(a2 + 60) || (uint64_t result = sub_221A0FA88(a2, a3), !result))
  {
    int v14 = *(unsigned __int8 *)(a2 + 61);
    if (a4)
    {
      *(_DWORD *)(a4 + 68) = 0;
      *(_DWORD *)(a4 + 72) = 0;
      *(_DWORD *)(a4 + 64) = v14;
      int v15 = *(unsigned char **)(a4 + 200);
      if (v15) {
        unsigned char *v15 = v14;
      }
      uint64_t v16 = *(unsigned char **)(a4 + 208);
      if (v16) {
        *uint64_t v16 = a3[1260457];
      }
      int v17 = *(unsigned char **)(a4 + 216);
      if (v17) {
        *int v17 = a3[1260458];
      }
    }
    if (v14)
    {
      int v22 = 0;
      uint64_t result = sub_221A102C0(a1, *(_DWORD *)(a2 + 40), *(const void **)(a2 + 8), *(_DWORD *)(a2 + 24), a3, a4, a5, a6, &v22, &v23, 0, 0, 0, a7);
      if (!result)
      {
        if (a4 && (*(_DWORD *)(a4 + 64) = v14, *(_DWORD *)(a4 + 68))) {
          *(_DWORD *)(a2 + 48) = v22;
        }
        else {
          *(_DWORD *)(a2 + 44) = v22;
        }
        unsigned int v20 = *(_DWORD *)(a2 + 28);
        if (v20)
        {
          uint64_t result = sub_221A102C0(a1, *(_DWORD *)(a2 + 40), *(const void **)(a2 + 16), v20, a3, a4, 0, a6, &v22, &v23, 0, 0, 0, a7);
          if (a4)
          {
            *(_DWORD *)(a4 + 64) = v14;
            if (!result)
            {
              if (*(_DWORD *)(a4 + 68))
              {
                uint64_t result = 0;
                *(_DWORD *)(a2 + 48) = v22;
                return result;
              }
              goto LABEL_28;
            }
          }
          else if (!result)
          {
LABEL_28:
            uint64_t result = 0;
            int v19 = v22;
            goto LABEL_18;
          }
        }
        else
        {
          return 0;
        }
      }
    }
    else
    {
      int v21 = 0;
      uint64_t result = sub_221A102C0(a1, *(_DWORD *)(a2 + 40), *(const void **)(a2 + 8), *(_DWORD *)(a2 + 24), a3, a4, a5, a6, &v21, &v23, 0, 0, 0, a7);
      if (!result)
      {
        int v19 = v21;
        *(_DWORD *)(a2 + 48) = v21;
LABEL_18:
        *(_DWORD *)(a2 + 44) = v19;
      }
    }
  }
  return result;
}

uint64_t sub_221A102C0(int a1, int a2, const void *a3, unsigned int a4, int *a5, uint64_t a6, int a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, unsigned __int8 a11, int a12, uint64_t a13, uint64_t a14)
{
  BOOL v19 = a6 == 0;
  *a10 = 0;
  int v20 = (*a5 + 1) % a5[1];
  *a5 = v20;
  sub_221A341D0(*((pthread_mutex_t **)a5 + 2));
  int v21 = v20;
  int v22 = &a5[36904 * v20];
  int v24 = v22[8];
  int v23 = v22 + 8;
  if (v24)
  {
    do
      sub_221A34280(*((pthread_cond_t **)a5 + 3), *((pthread_mutex_t **)a5 + 2));
    while (*v23);
  }
  *int v23 = 1;
  ++a5[2];
  sub_221A341DC(*((pthread_mutex_t **)a5 + 2));
  int8x16_t v25 = &a5[36904 * v20];
  unsigned int v27 = v25[42];
  uint64_t v26 = (unsigned int *)(v25 + 42);
  v26[36866] = 1;
  unsigned int v28 = a4 + 16;
  if (v27 >= a4 + 16)
  {
    BOOL v33 = *(void **)&a5[36904 * v21 + 40];
  }
  else
  {
    *uint64_t v26 = v28;
    uint64_t v29 = &a5[36904 * v21];
    BOOL v32 = (void *)*((void *)v29 + 20);
    int v31 = v29 + 40;
    BOOL v30 = v32;
    if (v32)
    {
      j__free(v30);
      unsigned int v28 = *v26;
    }
    BOOL v33 = sub_221A12A34(v28);
    *int v31 = v33;
  }
  int v68 = v21;
  int v34 = &a5[36904 * v21];
  int v35 = (uint64_t *)(v34 + 40);
  memcpy(v33, a3, a4);
  uint64_t v36 = (void *)*((void *)v34 + 5);
  if (a6)
  {
    *(_DWORD *)(v36[5] + 88) = *(_DWORD *)(a6 + 20);
    *(void *)(v36[5] + 96) = *(void *)(a6 + 176);
    *(_DWORD *)(v36[5] + 104) = *(_DWORD *)(a6 + 184);
    *(void *)(v36[5] + 176) = *(void *)a6;
    int v37 = *(_DWORD *)(a6 + 16);
  }
  else
  {
    int v37 = 0;
    *(_DWORD *)(v36[5] + 88) = 0;
    *(void *)(v36[5] + 96) = 0;
    *(_DWORD *)(v36[5] + 104) = 0;
    *(void *)(v36[5] + 176) = 0;
  }
  *(_DWORD *)(v36[5] + 184) = v37;
  *(_DWORD *)(v36[5] + 216) = v19;
  int v38 = &a5[36904 * v68];
  uint64_t v39 = (uint64_t)(v38 + 20);
  int v40 = (uint64_t *)(v38 + 38);
  uint64_t v41 = sub_221A11F78((uint64_t)v36, (uint64_t)(v38 + 20), (void *)v38 + 19, (uint64_t)a8, a2, a4, *v35, (uint64_t)a5, a11, a12, a13);
  if (v41) {
    goto LABEL_12;
  }
  memcpy(&a5[36904 * v68 + 46], a5 + 1180944, 0x23CA0uLL);
  v36[3] = &a5[36904 * v68 + 46];
  if (a6)
  {
    uint64_t v70 = 0;
    uint64_t v41 = sub_2219F39A8((unsigned int *)a5 + 1180944, a5[1217589], &v70);
    if (v41)
    {
LABEL_12:
      sub_221A341D0(*((pthread_mutex_t **)a5 + 2));
      a5[36904 * *a5 + 8] = 0;
      --a5[2];
      sub_221A341DC(*((pthread_mutex_t **)a5 + 2));
      return v41;
    }
    unsigned int v43 = *(_DWORD *)(a6 + 16) >> (*(_DWORD *)(a6 + 20) != 875704438);
    if (v43 && v43 < 16 * *(_DWORD *)(v70 + 1328) + 16
      || (unsigned int v44 = *(_DWORD *)(a6 + 32)) != 0 && v44 < 16 * *(_DWORD *)(v70 + 1332) + 16)
    {
      uint64_t v41 = 4294958327;
      goto LABEL_12;
    }
  }
  uint64_t v41 = sub_221A121FC((uint64_t)v36, v39, *v40, a8, a7, (uint64_t)a5, a11, a12, a1);
  if (v41) {
    goto LABEL_12;
  }
  long long v45 = (unsigned int *)&a5[36904 * v68];
  BOOL v46 = (uint64_t *)(v45 + 36694);
  memcpy(v45 + 36694, a5 + 1259950, 0x348uLL);
  sub_221A341D0(*((pthread_mutex_t **)a5 + 2));
  uint64_t v47 = v45[36900];
  uint64_t v48 = v45[36901];
  if ((int)v47 >= 1)
  {
    do
    {
      uint64_t v49 = *v46++;
      sub_221A34488((atomic_uint *)(v49 + 8));
      --v47;
    }
    while (v47);
  }
  if ((int)v48 >= 1)
  {
    BOOL v50 = (uint64_t *)(v45 + 36762);
    do
    {
      uint64_t v51 = *v50++;
      sub_221A34488((atomic_uint *)(v51 + 8));
      --v48;
    }
    while (v48);
  }
  sub_221A341DC(*((pthread_mutex_t **)a5 + 2));
  uint64_t v54 = sub_221A12880((uint64_t)v36, v52, v53, (uint64_t)a5);
  if (v54)
  {
    uint64_t v41 = v54;
    sub_221A341D0(*((pthread_mutex_t **)a5 + 2));
    sub_221A12978((uint64_t)v23);
    sub_221A341DC(*((pthread_mutex_t **)a5 + 2));
    goto LABEL_12;
  }
  uint64_t v55 = v36[11];
  if (a6)
  {
    uint64_t v56 = *(void *)(a6 + 120);
    *(_DWORD *)(v55 + 320) = *(_DWORD *)(a6 + 128);
    *(void *)(v55 + 312) = v56;
    *a9 = *(_DWORD *)(v55 + 1280);
    if (!*(unsigned char *)(v55 + 1362)) {
      goto LABEL_34;
    }
    *(_DWORD *)(a6 + 64) = 1;
    *(_DWORD *)(a6 + 68) = *(unsigned __int8 *)(v55 + 37);
    *(_DWORD *)(a6 + 72) = *(unsigned __int8 *)(v55 + 34);
  }
  else
  {
    *a9 = *(_DWORD *)(v55 + 1280);
    if (!*(unsigned char *)(v55 + 1362)) {
      goto LABEL_34;
    }
  }
  if (!*(void *)(v55 + 1352))
  {
    int v60 = a5[1260452];
    BOOL v58 = v60 == 0;
    *a10 = v60 != 0;
    int v57 = v68;
    if (v60) {
      uint64_t v59 = a14;
    }
    else {
      uint64_t v59 = 0;
    }
    sub_221A34338(*(dispatch_semaphore_t **)&a5[36904 * v68 + 18]);
    goto LABEL_39;
  }
LABEL_34:
  *a10 = 1;
  int v57 = v68;
  sub_221A34338(*(dispatch_semaphore_t **)&a5[36904 * v68 + 18]);
  BOOL v58 = 0;
  uint64_t v59 = a14;
LABEL_39:
  uint64_t v61 = &a5[36904 * v57];
  *((void *)v61 + 18453) = v59;
  *((void *)v61 + 18455) = voucher_copy();
  sub_221A34344(*((dispatch_semaphore_t **)v61 + 8));
  if (!a1)
  {
    a5[1180936] = -1;
    if (!v58)
    {
      ++a5[1180942];
      if ((int)sub_2219F3FB4((uint64_t)a5) > a5[1180941])
      {
        int v69 = 1;
        if (a6)
        {
          *(_DWORD *)(a6 + 140) = 0;
          if (a14) {
            uint64_t v62 = 0;
          }
          else {
            uint64_t v62 = a6;
          }
          if (a14) {
            char v63 = 0;
          }
          else {
            char v63 = &v69;
          }
          if (a8) {
            BOOL v64 = a8[2] > 0;
          }
          else {
            BOOL v64 = 1;
          }
          sub_221A0E304((uint64_t)a5, 0, 0, v62, v63, a7, 0, 0, 1, v64);
          if (a5[1180936] != -1 && v69) {
            ++a5[1180943];
          }
        }
      }
    }
  }
  return 0;
}

uint64_t sub_221A10890(int a1, int a2, int a3, _DWORD *a4, uint64_t a5, int *a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_221A0C42C((uint64_t)v21);
  v21[1] = a5;
  v21[2] = 0;
  int v22 = a3;
  int v23 = 0;
  char v25 = 0;
  int v24 = a2;
  if (a10 && (*(_DWORD *)(a10 + 20) | 0x10) == 0x34323076) {
    *(_DWORD *)(a10 + 20) = 875704438;
  }
  if (a6[1260462] == -3) {
    uint64_t v18 = sub_221A100CC(a1, (uint64_t)v21, a6, a10, a7, a4, a11);
  }
  else {
    uint64_t v18 = sub_221A1099C(a1, (uint64_t)v21, (uint64_t)a6, a10, a7, a4);
  }
  uint64_t v19 = v18;
  sub_221A0C4B4((uint64_t)v21);
  return v19;
}

void sub_221A10988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_221A1099C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, _DWORD *a6)
{
  if (!*(unsigned char *)(a2 + 60))
  {
    uint64_t v21 = sub_221A0FA88(a2, (int *)a3);
    if (v21) {
      return v21;
    }
  }
  __int8 v152 = a6;
  uint64_t v12 = a3 + 5039776;
  int v13 = *(unsigned __int8 *)(a2 + 61);
  if (a4)
  {
    *(_DWORD *)(a4 + 64) = v13;
    int v14 = *(unsigned char **)(a4 + 200);
    if (v14) {
      *int v14 = v13;
    }
    int v15 = *(unsigned char **)(a4 + 208);
    if (v15) {
      unsigned char *v15 = *(_DWORD *)(a3 + 5041828);
    }
    uint64_t v16 = *(unsigned char **)(a4 + 216);
    if (v16) {
      *uint64_t v16 = *(_DWORD *)(a3 + 5041832);
    }
    uint64_t v17 = a3 + 5041656;
    *(void *)(*(void *)(*(void *)(a3 + 5041656) + 40) + 176) = *(void *)a4;
    *(_DWORD *)(*(void *)(*(void *)(a3 + 5041656) + 40) + 184) = *(_DWORD *)(a4 + 16);
    *(_DWORD *)(*(void *)(*(void *)(a3 + 5041656) + 40) + 88) = *(_DWORD *)(a4 + 20);
    *(void *)(*(void *)(*(void *)(a3 + 5041656) + 40) + 96) = *(void *)(a4 + 176);
    *(_DWORD *)(*(void *)(*(void *)(a3 + 5041656) + 40) + 104) = *(_DWORD *)(a4 + 184);
    uint64_t v18 = a3 + 5041680;
    uint64_t v19 = *(void *)(a3 + 5041680);
    if (!v19) {
      goto LABEL_16;
    }
    *(void *)(*(void *)(v19 + 40) + 176) = *(void *)a4;
    *(_DWORD *)(*(void *)(*(void *)v18 + 40) + 184) = *(_DWORD *)(a4 + 16);
    *(_DWORD *)(*(void *)(*(void *)v18 + 40) + 88) = *(_DWORD *)(a4 + 20);
    *(void *)(*(void *)(*(void *)v18 + 40) + 96) = *(void *)(a4 + 176);
    int v20 = *(_DWORD *)(a4 + 184);
  }
  else
  {
    uint64_t v17 = a3 + 5041656;
    *(void *)(*(void *)(*(void *)(a3 + 5041656) + 40) + 176) = 0;
    *(_DWORD *)(*(void *)(*(void *)(a3 + 5041656) + 40) + 184) = 0;
    *(_DWORD *)(*(void *)(*(void *)(a3 + 5041656) + 40) + 88) = 0;
    *(void *)(*(void *)(*(void *)(a3 + 5041656) + 40) + 96) = 0;
    *(_DWORD *)(*(void *)(*(void *)(a3 + 5041656) + 40) + 104) = 0;
    uint64_t v18 = a3 + 5041680;
    uint64_t v22 = *(void *)(a3 + 5041680);
    if (!v22) {
      goto LABEL_16;
    }
    int v20 = 0;
    *(void *)(*(void *)(v22 + 40) + 176) = 0;
    *(_DWORD *)(*(void *)(*(void *)v18 + 40) + 184) = 0;
    *(_DWORD *)(*(void *)(*(void *)v18 + 40) + 88) = 0;
    *(void *)(*(void *)(*(void *)v18 + 40) + 96) = 0;
  }
  *(_DWORD *)(*(void *)(*(void *)v18 + 40) + 104) = v20;
LABEL_16:
  BOOL v23 = a4 == 0;
  *(_DWORD *)(*(void *)(*(void *)v17 + 40) + 216) = v23;
  if (*(void *)v18) {
    *(_DWORD *)(*(void *)(*(void *)v18 + 40) + 216) = v23;
  }
  fflush((FILE *)*MEMORY[0x263EF8348]);
  int v24 = *(_DWORD *)(a3 + 5041736);
  switch(v24)
  {
    case -1:
      int v24 = v13 == 0;
      goto LABEL_24;
    case 0:
      int v24 = 2 * (v13 == 0);
      goto LABEL_24;
    case 1:
      if (v13) {
        int v24 = 2;
      }
      else {
        int v24 = 1;
      }
      goto LABEL_24;
    case 2:
      goto LABEL_25;
    default:
LABEL_24:
      *(_DWORD *)(a3 + 5041736) = v24;
LABEL_25:
      if (!v13)
      {
        LODWORD(v158) = 0;
        sub_221A0C298(0);
        int v34 = v152;
        uint64_t v21 = sub_221A0DC98(a1, *(_DWORD *)(a2 + 40), *(_DWORD *)(a2 + 24), v152, *(void *)(a2 + 8), a3, a5, &v158, 0, 0, 0);
        if (v21) {
          return v21;
        }
        goto LABEL_45;
      }
      if (*(void *)v18 && v24 != 2 && *(unsigned char *)(a2 + 72))
      {
        int v154 = 0;
        *(_DWORD *)(a3 + 5041744) = a1;
        *(_DWORD *)(*(void *)(a3 + 5041656) + 32) = *(unsigned char *)(a2 + 65) == 0;
        *(_DWORD *)(a3 + 5041748) = *(_DWORD *)(a2 + 40);
        *(_DWORD *)(a3 + 5041752) = *(_DWORD *)(a2 + 24);
        *(void *)(a3 + 5041760) = v152;
        *(void *)(a3 + 5041768) = *(void *)(a2 + 8);
        *(void *)(a3 + 5041776) = a3;
        int v151 = a5;
        *(_DWORD *)(a3 + 5041784) = a5;
        *(void *)(a3 + 5041792) = &v154;
        *(unsigned char *)(a3 + 5041800) = 0;
        *(_DWORD *)(a3 + 5041804) = 0;
        sub_221A341D0(*(pthread_mutex_t **)(a3 + 5041688));
        sub_221A341D0(*(pthread_mutex_t **)(a3 + 5041728));
        sub_221A34344(*(dispatch_semaphore_t **)(a3 + 5041712));
        int v25 = *(_DWORD *)(a2 + 28);
        if (!v25) {
          return 4294958327;
        }
        uint64_t v26 = *(void *)(a2 + 16);
        if (!v26) {
          return 4294958327;
        }
        int v150 = a1;
        int v27 = *(_DWORD *)(a2 + 40);
        uint64_t v28 = *(void *)(a3 + 5041656);
        sub_221A05B28((uint64_t)&v158);
        uint64_t v29 = sub_221A05B80((uint64_t)&v158, 400);
        if (v29)
        {
          uint64_t v21 = v29;
          BOOL v30 = 0;
          int v31 = 0;
          a1 = v150;
          a5 = v151;
        }
        else
        {
          uint64_t v149 = v28;
          uint64_t v158 = v26;
          uint64_t v21 = 4294958327;
          unsigned int v160 = 0;
          int v159 = v25;
          unsigned int v40 = (*(_DWORD *)(v28 + 4) * *(_DWORD *)(v28 + 8)) << 10;
          a1 = v150;
          a5 = v151;
          switch(v27)
          {
            case 0:
              uint64_t v41 = sub_221A33328((uint64_t)&v158, 1);
              goto LABEL_74;
            case 2:
              uint64_t v41 = sub_221A33638((uint64_t)&v158);
              goto LABEL_74;
            case 3:
              unsigned int v45 = 1;
              goto LABEL_73;
            case 4:
              unsigned int v45 = 2;
              goto LABEL_73;
            case 5:
              unsigned int v45 = 4;
LABEL_73:
              uint64_t v41 = sub_221A334B0((uint64_t)&v158, v45, v40, 1, 0);
LABEL_74:
              uint64_t v21 = v41;
              if (v41 || !v160) {
                goto LABEL_34;
              }
              uint64_t v21 = sub_221A0DFF4(v149, (uint64_t)&v158, (unsigned int *)(a3 + 4723776), 0, 0);
              if (v21)
              {
LABEL_77:
                sub_221A05B38((uint64_t)&v158);
                return v21;
              }
              uint64_t v46 = v163;
              uint64_t v47 = v161;
              uint64_t v48 = v162;
              uint64_t v49 = v160;
              *(_DWORD *)(v149 + 156) = 0;
              *(_DWORD *)(*(void *)(v149 + 40) + 264) = 25;
              if (v152)
              {
                int v50 = v152[1];
                if (*(void *)v152 <= 0x89uLL)
                {
                  *(_DWORD *)(v149 + 156) = (138 - *v152) >> 2;
                  int v50 = v152[1];
                }
                if (v50) {
                  *(_DWORD *)(*(void *)(v149 + 40) + 264) = 0;
                }
              }
              if (!v49) {
                goto LABEL_35;
              }
              uint64_t v51 = (unsigned int **)(v48 + 8 * v46);
              uint64_t v146 = (int)v49;
              *(unsigned char *)(v149 + 832) = 0;
              uint64_t v52 = (unsigned int *)(v47 + 4 * v46);
              uint64_t v148 = v49;
              sub_221A341D0(*(pthread_mutex_t **)(a3 + 5041688));
              sub_221A341DC(*(pthread_mutex_t **)(a3 + 5041688));
              BOOL v30 = (char *)sub_221A12A5C((void *)(80 * v146));
              uint64_t v53 = (char *)sub_221A12A5C((void *)(16 * (v148 + 1)));
              uint64_t v147 = (uint64_t)v53;
              uint64_t v143 = **(void **)(v149 + 56);
              int v144 = *(unsigned int **)(v149 + 24);
              int v157 = 0;
              if ((int)v148 >= 1)
              {
                uint64_t v54 = 0;
                uint64_t v55 = 0;
                uint64_t v56 = v53 + 8;
                do
                {
                  int v57 = &v30[v54];
                  *(void *)int v57 = 0xFFFFFFFF00000000;
                  *((_DWORD *)v57 + 2) = -1;
                  *((void *)v57 + 2) = v149;
                  *((void *)v57 + 3) = a3;
                  *((void *)v57 + 4) = v51[v55];
                  *((_DWORD *)v57 + 10) = v52[v55];
                  *((_DWORD *)v57 + 11) = v55;
                  *((void *)v57 + 6) = 0;
                  *(v56 - 1) = sub_221A01F68;
                  *uint64_t v56 = &v30[v54];
                  ++v55;
                  v54 += 80;
                  v56 += 2;
                }
                while (80 * v148 != v54);
              }
              if (sub_2219F38D8(*v51, *v52, v143 + 1425504)) {
                goto LABEL_88;
              }
              int v31 = (void *)v147;
              if (sub_221A22304(v143 + 1425504, v144, (void *)(v143 + 1425544), *(unsigned __int8 *)(v149 + 832), &v157, 0, 0, 0, 0))goto LABEL_92; {
              uint64_t v145 = (uint64_t)(v144 + 3);
              }
              uint64_t v139 = a3 + 5041520;
              uint64_t v140 = a3 + 5016960;
              *(_DWORD *)(*((void *)v30 + 2) + 552) = v148;
              *(void *)(*((void *)v30 + 2) + 560) = *(void *)(v149 + 560);
              *(void *)(*((void *)v30 + 2) + 568) = *(void *)(v149 + 568);
              sub_221A341D0(*(pthread_mutex_t **)(a3 + 5041584));
              *(_DWORD *)(a3 + 5039796) = 1;
              uint64_t v58 = v149 + 88;
              if (sub_2219F6388(v145, v143 + 1425544, a3 + 5041520, a3 + 5016960, (uint64_t *)(v149 + 88), 0, *(unsigned __int8 *)(v149 + 832), v157, 0, v150))goto LABEL_91; {
              uint64_t v59 = *(void *)v58;
              }
              if (!*(void *)v58) {
                goto LABEL_98;
              }
              uint64_t v60 = *(void *)(v149 + 40);
              if (!*(_DWORD *)(v60 + 216)) {
                goto LABEL_98;
              }
              if (*(unsigned char *)(v59 + 34))
              {
                uint64_t v59 = *(void *)(v59 + 1352);
                if (!v59) {
                  goto LABEL_189;
                }
              }
              *(void *)(v60 + 176) = *(void *)(v59 + 192);
              *(_DWORD *)(*(void *)(v149 + 40) + 184) = *(_DWORD *)(v59 + 208);
              a1 = v150;
              a5 = v151;
LABEL_98:
              sub_221A341DC(*(pthread_mutex_t **)(a3 + 5041584));
              uint64_t v138 = (uint64_t *)(v149 + 88);
              if (!*(void *)v58)
              {
LABEL_88:
                uint64_t v21 = 0;
                int v31 = (void *)v147;
                goto LABEL_33;
              }
              int v61 = *(_DWORD *)(*(void *)v58 + 132) >> 4;
              int v62 = *(_DWORD *)(v149 + 4) * v61;
              *(_DWORD *)(v149 + 16) = v61;
              *(_DWORD *)(v149 + 20) = v62;
              uint64_t v63 = *(void *)(v149 + 40);
              size_t v64 = *(unsigned int *)(v63 + 20);
              sub_221A341D0(*(pthread_mutex_t **)(v63 + 160));
              if (v64) {
                bzero(*(void **)(v63 + 168), v64);
              }
              sub_221A341DC(*(pthread_mutex_t **)(v63 + 160));
              if (*(unsigned char *)(v143 + 1425576) && *(unsigned char *)(v143 + 1428292) == 1 && v148 == 1)
              {
                int v65 = (unsigned int *)*((void *)v30 + 4);
                unsigned int v141 = *((_DWORD *)v30 + 10);
                uint64_t v66 = *((void *)v30 + 2);
                uint64_t v135 = *(void *)(v66 + 88);
                uint64_t v137 = *(unsigned int **)(v66 + 24);
                int32x2_t v156 = 0;
                uint64_t v155 = 0;
                sub_221A341D0(*(pthread_mutex_t **)(v66 + 72));
                uint64_t v67 = 0;
                uint64_t v68 = *(void *)(v66 + 64);
                while (*(_DWORD *)(v68 + 4 * v67++))
                  ;
                *(_DWORD *)(v68 + 4 * v67 - 4) = 1;
                sub_221A341DC(*(pthread_mutex_t **)(v66 + 72));
                uint64_t v136 = *(void *)(*(void *)(v66 + 56) + 8 * v67 - 8);
                int v70 = sub_2219F38D8(v65, v141, v136 + 1425504);
                if (!v70)
                {
                  uint64_t v142 = v136 + 1425544;
                  int v70 = sub_221A22304(v136 + 1425504, v137, (void *)(v136 + 1425544), 0, 0, 0, 0, 0, 0);
                  if (!v70)
                  {
                    int v70 = sub_2219F39EC((uint64_t)v137, *(_DWORD *)(v136 + 1425568), &v155);
                    if (!v70)
                    {
                      int v70 = sub_2219F39A8(v137, *(_DWORD *)(v155 + 4), &v156);
                      if (!v70)
                      {
                        int v70 = sub_2219F7188(v142, v140, (int8x16_t *)(v136 + 1428296), v135, v71, v72);
                        if (!v70)
                        {
                          *(void *)(v136 + 1455792) = v136 + 1456080;
                          sub_221A131D8(v136 + 1429136, v136 + 1429200, v136 + 1455680, v136 + 1456336, (void *)(v136 + 976));
                          int v70 = sub_2219FA668(v136 + 976, v66, v136 + 1428296, v135, v156, v155, v142, 0, 0);
                          if (!v70)
                          {
                            *(void *)(v136 + 1232) = v139;
                            int v70 = sub_221A027D4(v136 + 976, v139);
                            if (!v70)
                            {
                              *(_DWORD *)(*(void *)(v66 + 40) + 188) = *(unsigned __int8 *)(v136 + 1425576);
                              *(_DWORD *)(*(void *)(v66 + 40) + 192) = *(_DWORD *)(v135 + 1280);
                              unint64_t v73 = v156;
                              *(_DWORD *)(*(void *)(v66 + 40) + 196) = *((_DWORD *)v156 + 335)
                                                                         * v156[1339];
                              *(_DWORD *)(*(void *)(v66 + 40) + 200) = *((_DWORD *)v73 + 336)
                                                                         * v73[1339];
                              *(_DWORD *)(*(void *)(v66 + 40) + 204) = *((_DWORD *)v73 + 337)
                                                                         * v73[1339];
                              *(_DWORD *)(*(void *)(v66 + 40) + 208) = *((_DWORD *)v73 + 338)
                                                                         * v73[1339];
                              *(_DWORD *)(*(void *)(v66 + 40) + 212) = v73[1336];
                              sub_2219E4C48(*(void *)(v66 + 40), *((_DWORD *)v30 + 11), *(_DWORD *)(v136 + 1425564), *(_DWORD *)(v136 + 1428276), *(_DWORD *)(v136 + 1428280), *(_DWORD *)(v136 + 1428284));
                              *((_DWORD *)v30 + 1) = *(_DWORD *)(v136 + 1425560);
                              sub_221A01C50(a3, v66, (uint64_t)v156, v155, v136, *((_DWORD *)v30 + 11), v67 - 1, (uint64_t)(v30 + 8), (uint64_t)(v30 + 48), (uint64_t)(v30 + 52));
                            }
                          }
                        }
                      }
                    }
                  }
                }
                sub_221A341D0(*(pthread_mutex_t **)(v66 + 72));
                *(_DWORD *)(*(void *)(v66 + 64) + 4 * v67 - 4) = 0;
                sub_221A341DC(*(pthread_mutex_t **)(v66 + 72));
                *(_DWORD *)BOOL v30 = v70;
              }
              else
              {
                sub_221A33B30(*(void *)(v149 + 80), v147, v148 + 1);
              }
              uint64_t v74 = v148;
              if ((int)v148 < 1) {
                goto LABEL_120;
              }
              int32x2_t v75 = (int *)v30;
              break;
            default:
              goto LABEL_77;
          }
          while (1)
          {
            int v77 = *v75;
            v75 += 20;
            int v76 = v77;
            if (v77) {
              break;
            }
            if (!--v74)
            {
LABEL_120:
              int v76 = 0;
              break;
            }
          }
          uint64_t v78 = v149;
          *(_DWORD *)(*(void *)(v149 + 88) + 1264) = v150;
          sub_221A2F34C(*(void *)(v149 + 40));
          uint64_t v79 = v148;
          uint64_t v80 = (uint64_t)v30;
          if (*(_DWORD *)(v149 + 108))
          {
            if (v148 > *(_DWORD *)(v149 + 128))
            {
              unsigned int v81 = *(void **)(v149 + 120);
              if (v81) {
                j__free(v81);
              }
              char v82 = sub_221A12A5C((void *)(2 * v146));
              uint64_t v79 = v148;
              uint64_t v78 = v149;
              *(void *)(v149 + 120) = v82;
              *(_DWORD *)(v149 + 128) = v148;
            }
            *(_DWORD *)(v78 + 112) = 0;
            uint64_t v80 = (uint64_t)v30;
            if ((int)v79 >= 1)
            {
              unsigned int v83 = 0;
              char v84 = v30 + 48;
              uint64_t v85 = v79;
              do
              {
                if (*v84)
                {
                  *(_WORD *)(*(void *)(v78 + 120) + 2 * v83) = *(v84 - 11);
                  unsigned int v83 = *(_DWORD *)(v78 + 112) + 1;
                  *(_DWORD *)(v78 + 112) = v83;
                }
                v84 += 20;
                --v85;
              }
              while (v85);
            }
          }
          if (*(_DWORD *)(v78 + 132))
          {
            if (v79 > *(_DWORD *)(v78 + 152))
            {
              unsigned __int8 v86 = *(void **)(v78 + 144);
              if (v86) {
                j__free(v86);
              }
              char v87 = sub_221A12A5C((void *)(2 * v146));
              uint64_t v79 = v148;
              uint64_t v78 = v149;
              *(void *)(v149 + 144) = v87;
              *(_DWORD *)(v149 + 152) = v148;
            }
            *(_DWORD *)(v78 + 136) = 0;
            uint64_t v80 = (uint64_t)v30;
            if ((int)v79 >= 1)
            {
              unsigned int v88 = 0;
              uint64_t v89 = v30 + 52;
              uint64_t v90 = v79;
              do
              {
                if (*v89)
                {
                  *(_WORD *)(*(void *)(v78 + 144) + 2 * v88) = *(v89 - 12);
                  unsigned int v88 = *(_DWORD *)(v78 + 136) + 1;
                  *(_DWORD *)(v78 + 136) = v88;
                }
                v89 += 20;
                --v90;
              }
              while (v90);
            }
          }
          *(unsigned char *)(*(void *)(v78 + 88) + 1378) = 0;
          int v91 = sub_221A04670(v80, v79);
          if ((v76 || v91 != *(_DWORD *)(v78 + 20)) && sub_221A04670(v80, v148) <= *(_DWORD *)(v78 + 20))
          {
            sub_221A0433C(v78, v148, v80, *(void *)(a3 + 5040640), *(void *)(v78 + 88));
            *(unsigned char *)(*(void *)(v78 + 88) + 1378) = 1;
          }
          sub_221A341D0(*(pthread_mutex_t **)(*v138 + 16));
          *(_DWORD *)(*v138 + 12) = 0x7FFFFFFF;
          uint64_t v92 = *v138;
          uint64_t v93 = *(void *)(*v138 + 1352);
          if (v93 && *(unsigned char *)(v93 + 36))
          {
            *(_DWORD *)(v93 + 12) = 0x7FFFFFFF;
            uint64_t v92 = *v138;
          }
          sub_221A34274(*(pthread_cond_t **)(v92 + 24));
          sub_221A341DC(*(pthread_mutex_t **)(*v138 + 16));
          uint64_t v94 = *v138;
          if (*(unsigned char *)(*v138 + 1372))
          {
            *(void *)(a3 + 5040640) = v94;
            uint64_t v94 = *v138;
            if (!*(unsigned char *)(*v138 + 3))
            {
              uint64_t v95 = *(int *)(v94 + 164);
              if (*(unsigned char *)(v94 + 37)) {
                uint64_t v96 = *(unsigned int *)(v94 + 168);
              }
              else {
                uint64_t v96 = 0;
              }
              uint64_t v97 = (int8x16_t *)(*(void *)(v94 + 64) + v96);
              int v98 = *(_DWORD *)(v94 + 184);
              uint64_t v99 = *(int *)(v94 + 180);
              if (*(unsigned char *)(v94 + 37)) {
                uint64_t v100 = *(unsigned int *)(v94 + 184);
              }
              else {
                uint64_t v100 = 0;
              }
              BOOL v101 = (int16x8_t *)(*(void *)(v94 + 72) + v100);
              char v102 = *(unsigned char *)(v94 + 1362) != 0;
              int v103 = *(_DWORD *)(v94 + 168) << v102;
              int v104 = *(_DWORD *)(v94 + 132);
              int v105 = *(_DWORD *)(v94 + 148);
              uint64_t v106 = v103;
              if (v104 <= 0)
              {
                uint64_t v108 = v97;
              }
              else
              {
                uint64_t v107 = v95 - 16;
                uint64_t v108 = v97;
                do
                {
                  uint64_t v109 = (int8x16_t *)((char *)v108 + v107);
                  int8x16_t v110 = vzip1q_s8(*v108, *v108);
                  int8x16_t v111 = vqtbl1q_s8(vzip1q_s8(v110, v110), (int8x16_t)xmmword_221A36310);
                  v108[-2] = v111;
                  v108[-1] = v111;
                  int8x16_t v112 = vzip2q_s8(*(int8x16_t *)((char *)v108 + v107), *(int8x16_t *)((char *)v108 + v107));
                  int8x16_t v113 = vqtbl1q_s8(vzip2q_s8(v112, v112), (int8x16_t)xmmword_221A36A40);
                  v109[1] = v113;
                  v109[2] = v113;
                  uint64_t v108 = (int8x16_t *)((char *)v108 + v103);
                  --v104;
                }
                while (v104);
              }
              uint64_t v114 = 0;
              int v115 = 0;
              int v116 = v98 << v102;
              uint64_t v117 = (int)v95 + 48;
              __int32 v118 = &v108->i8[-v103];
              do
              {
                if ((int)v95 >= -63)
                {
                  uint64_t v119 = -32;
                  do
                  {
                    *(_OWORD *)&v118[v106 + v114 + v119] = *(_OWORD *)&v118[v119];
                    uint64_t v120 = v119 + 32;
                    v119 += 16;
                  }
                  while (v120 < v117);
                }
                ++v115;
                v114 += v106;
              }
              while (v115 != 20);
              uint64_t v121 = 0;
              for (int i = 0; i != 20; ++i)
              {
                if ((int)v95 >= -63)
                {
                  uint64_t v123 = 0xFFFFFFFFFFFFFFELL;
                  do
                  {
                    *(int8x16_t *)((char *)v97 + v121 - v106 + v123 * 16) = v97[v123];
                    uint64_t v124 = v123 * 16 + 32;
                    ++v123;
                  }
                  while (v124 < v117);
                }
                v121 -= v106;
              }
              if (v105 <= 0)
              {
                uint64_t v125 = v101;
              }
              else
              {
                uint64_t v125 = v101;
                do
                {
                  v125[-1] = (int16x8_t)vqtbl1q_s8((int8x16_t)vzip1q_s16(*v125, *v125), (int8x16_t)xmmword_221A36310);
                  *(int8x16_t *)((char *)v125 + v99) = vqtbl1q_s8((int8x16_t)vzip2q_s16(*(int16x8_t *)((char *)v125 + v99 - 16), *(int16x8_t *)((char *)v125 + v99 - 16)), (int8x16_t)xmmword_221A36A40);
                  uint64_t v125 = (int16x8_t *)((char *)v125 + v116);
                  --v105;
                }
                while (v105);
              }
              uint64_t v126 = 0;
              int v127 = 0;
              uint64_t v128 = (int)v99 + 16;
              uint64_t v129 = &v125->i8[-v116];
              do
              {
                if ((int)v99 >= -31)
                {
                  uint64_t v130 = -16;
                  do
                  {
                    *(_OWORD *)&v129[v116 + v126 + v130] = *(_OWORD *)&v129[v130];
                    v130 += 16;
                  }
                  while (v130 < v128);
                }
                ++v127;
                v126 += v116;
              }
              while (v127 != 8);
              uint64_t v131 = 0;
              for (int j = 0; j != 8; ++j)
              {
                if ((int)v99 >= -31)
                {
                  uint64_t v133 = -16;
                  do
                  {
                    *(int16x8_t *)((char *)v101 + v131 - v116 + v133) = v101[(unint64_t)v133 / 0x10];
                    v133 += 16;
                  }
                  while (v133 < v128);
                }
                v131 -= v116;
              }
              uint64_t v94 = *v138;
            }
          }
          if (*(_DWORD *)(*(void *)v12 + 44))
          {
            if (sub_2219F570C(v143 + 1428092, *(_DWORD *)(v143 + 1425572), v145, v140, v94))
            {
LABEL_189:
              uint64_t v21 = 0;
              a1 = v150;
              a5 = v151;
              int v31 = (void *)v147;
              goto LABEL_33;
            }
            uint64_t v94 = *v138;
          }
          uint64_t v134 = *(void *)(v94 + 1352);
          *(unsigned char *)(v94 + 1376) = 1;
          if (v134 && *(unsigned char *)(v134 + 36)) {
            *(unsigned char *)(v134 + 1376) = 1;
          }
          if (*(unsigned char *)(v143 + 1428253)) {
            *(_DWORD *)(*(void *)v12 + 40) = 0;
          }
          sub_221A341D0(*(pthread_mutex_t **)(a3 + 5041584));
          sub_2219F55AC(v140);
          a1 = v150;
          a5 = v151;
          int v31 = (void *)v147;
LABEL_91:
          sub_221A341DC(*(pthread_mutex_t **)(a3 + 5041584));
LABEL_92:
          uint64_t v21 = 0;
        }
LABEL_33:
        j__free(v30);
        j__free(v31);
LABEL_34:
        sub_221A05B38((uint64_t)&v158);
        if (!v21)
        {
LABEL_35:
          uint64_t v32 = *(void *)(*(void *)v17 + 88);
          if (!v32) {
            return 4294954947;
          }
          int v33 = *(_DWORD *)(v32 + 1280);
          if (*(unsigned char *)(v32 + 37)) {
            *(_DWORD *)(a2 + 48) = v33;
          }
          else {
            *(_DWORD *)(a2 + 44) = v33;
          }
          int v34 = v152;
          sub_221A34338(*(dispatch_semaphore_t **)(a3 + 5041720));
          uint64_t v39 = *(void *)(a3 + 5041680);
LABEL_63:
          uint64_t v42 = *(void *)(v39 + 88);
          if (v42)
          {
            int v43 = *(_DWORD *)(v42 + 1280);
            if (*(unsigned char *)(v42 + 37)) {
              *(_DWORD *)(a2 + 48) = v43;
            }
            else {
              *(_DWORD *)(a2 + 44) = v43;
            }
LABEL_45:
            int v153 = 0;
            if (!a4) {
              return 0;
            }
            if (a1)
            {
              if (v34) {
                BOOL v37 = v34[2] > 0;
              }
              else {
                BOOL v37 = 0;
              }
              uint64_t v38 = sub_221A0E304(a3, a1, 1, a4, &v153, a5, 0, 0, 1, v37);
            }
            else
            {
              uint64_t v38 = sub_221A0F96C(a3, a4, &v153, a5);
            }
            uint64_t v21 = v38;
            *(_DWORD *)(a4 + 76) = v153 == 0;
            return v21;
          }
          return 4294954947;
        }
        return v21;
      }
      if (*(unsigned char *)(a2 + 65)) {
        *(_DWORD *)(*(void *)v17 + 32) = 0;
      }
      LODWORD(v158) = 0;
      LODWORD(v156) = 0;
      sub_221A0C298(0);
      int v34 = v152;
      uint64_t v21 = sub_221A0DC98(a1, *(_DWORD *)(a2 + 40), *(_DWORD *)(a2 + 24), v152, *(void *)(a2 + 8), a3, a5, &v158, 0, 0, 0);
      if (!v21)
      {
        uint64_t v35 = *(void *)(*(void *)v17 + 88);
        if (!v35) {
          return 4294954947;
        }
        int v36 = *(_DWORD *)(v35 + 1280);
        if (*(unsigned char *)(v35 + 37)) {
          *(_DWORD *)(a2 + 48) = v36;
        }
        else {
          *(_DWORD *)(a2 + 44) = v36;
        }
        if (*(_DWORD *)(a2 + 28))
        {
          sub_221A0C298(0);
          uint64_t v21 = sub_221A0DC98(a1, *(_DWORD *)(a2 + 40), *(_DWORD *)(a2 + 28), v152, *(void *)(a2 + 16), a3, 0, &v156, 0, 0, 0);
          if (v21) {
            return v21;
          }
        }
        uint64_t v39 = *(void *)v17;
        goto LABEL_63;
      }
      return v21;
  }
}

uint64_t sub_221A11AE0(int a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v42 = *(void *)(v3 + 88);
  int v47 = 0;
  *(_WORD *)(v3 + 104) = 0;
  uint64_t v4 = a1;
  if (a1 >= 1)
  {
    uint64_t v5 = 0;
    while (1)
    {
      int v6 = (int *)(a2 + 80 * v5);
      if (!*v6) {
        break;
      }
LABEL_23:
      if (++v5 == v4) {
        goto LABEL_24;
      }
    }
    uint64_t v7 = a2 + 80 * v5;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    uint64_t v9 = *(void *)(v7 + 64);
    uint64_t v44 = *(void *)(v7 + 24);
    uint64_t v45 = *(void *)(v7 + 72);
    uint64_t v10 = *(void *)(*(void *)(v3 + 56) + 8 * v5);
    int v43 = *(_DWORD *)(v7 + 60);
    char v46 = 0;
    LODWORD(v7) = *(_DWORD *)(v42 + 132) >> 4;
    int v11 = *(_DWORD *)(v3 + 4) * v7;
    *(_DWORD *)(v3 + 16) = v7;
    *(_DWORD *)(v3 + 20) = v11;
    *(void *)(v10 + 1455792) = v10 + 1456080;
    *(_DWORD *)(*(void *)(v3 + 40) + 188) = *(unsigned __int8 *)(v10 + 1425576);
    *(_DWORD *)(*(void *)(v3 + 40) + 192) = *(_DWORD *)(v42 + 1280);
    *(_DWORD *)(*(void *)(v3 + 40) + 196) = *(_DWORD *)(v9 + 1340) * *(unsigned __int8 *)(v9 + 1339);
    *(_DWORD *)(*(void *)(v3 + 40) + 200) = *(_DWORD *)(v9 + 1344) * *(unsigned __int8 *)(v9 + 1339);
    *(_DWORD *)(*(void *)(v3 + 40) + 204) = *(_DWORD *)(v9 + 1348) * *(unsigned __int8 *)(v9 + 1339);
    *(_DWORD *)(*(void *)(v3 + 40) + 208) = *(_DWORD *)(v9 + 1352) * *(unsigned __int8 *)(v9 + 1339);
    *(_DWORD *)(*(void *)(v3 + 40) + 212) = *(unsigned __int8 *)(v9 + 1336);
    if (!v5)
    {
      uint64_t v12 = *(void *)(v3 + 40);
      uint64_t v13 = *(unsigned int *)(v12 + 20);
      if ((int)v13 < 1)
      {
        unsigned int v15 = *(_DWORD *)(v12 + 20);
      }
      else
      {
        uint64_t v14 = 0;
        do
        {
          *(_WORD *)(*(void *)(v12 + 72) + v14) = 0;
          v14 += 2;
        }
        while (2 * v13 != v14);
        unsigned int v15 = *(_DWORD *)(v12 + 20);
      }
      if (v15 > *(_DWORD *)(v12 + 24))
      {
        int v16 = -8969;
LABEL_22:
        int *v6 = v16;
        goto LABEL_23;
      }
      size_t v17 = (int)v13;
      unsigned int v41 = v8;
      bzero(*(void **)(v12 + 112), (int)v13);
      bzero(*(void **)(v12 + 120), v17);
      bzero(*(void **)(v12 + 128), v17);
      unsigned int v8 = v41;
    }
    int v18 = v8;
    sub_2219E4C48(*(void *)(v3 + 40), v8, *(_DWORD *)(v10 + 1425564), *(_DWORD *)(v10 + 1428276), *(_DWORD *)(v10 + 1428280), *(_DWORD *)(v10 + 1428284));
    *(_DWORD *)(a2 + 80 * v5 + 4) = *(_DWORD *)(v10 + 1425560);
    unsigned int v22 = *(_DWORD *)(v10 + 1425564);
    int v16 = -8969;
    if (v22 <= 7 && ((1 << v22) & 0xE7) != 0)
    {
      uint64_t v23 = a2 + 80 * v5;
      int v24 = (_DWORD *)(v23 + 8);
      int v25 = (_DWORD *)(v23 + 48);
      uint64_t v26 = (_DWORD *)(v23 + 52);
      unsigned __int8 v27 = *(unsigned char *)(v23 + 56);
      if (*(unsigned char *)(v10 + 1425576))
      {
        if (*(unsigned char *)(v10 + 1164)) {
          sub_221A0625C(v44, v3, v9, v45, v10);
        }
        int v16 = sub_221A07908(v44, v3, v9, v45, (char *)v10, v18, 0, v24, v25, v26, v27, v43, &v46, &v47);
      }
      else
      {
        if (*(unsigned char *)(v10 + 1164)) {
          sub_221A09024(v44, v3, v9, v45, v10);
        }
        int v16 = sub_221A0A590(v44, v3, v19, v20, v21, v9, v45, (char *)v10, v18, 0, v24, v25, v26, v27, v43, &v46, &v47);
      }
    }
    goto LABEL_22;
  }
LABEL_24:
  if (*(_DWORD *)(v3 + 108))
  {
    if (*(_DWORD *)(v3 + 128) < a1)
    {
      uint64_t v28 = *(void **)(v3 + 120);
      if (v28) {
        j__free(v28);
      }
      *(void *)(v3 + 120) = sub_221A12A5C((void *)(2 * a1));
      *(_DWORD *)(v3 + 128) = a1;
    }
    *(_DWORD *)(v3 + 112) = 0;
    if (a1 >= 1)
    {
      unsigned int v29 = 0;
      BOOL v30 = (_DWORD *)(a2 + 48);
      uint64_t v31 = v4;
      uint64_t v32 = (_DWORD *)(a2 + 48);
      do
      {
        int v33 = *v32;
        v32 += 20;
        if (v33)
        {
          *(_WORD *)(*(void *)(v3 + 120) + 2 * v29) = *(v30 - 11);
          unsigned int v29 = *(_DWORD *)(v3 + 112) + 1;
          *(_DWORD *)(v3 + 112) = v29;
        }
        BOOL v30 = v32;
        --v31;
      }
      while (v31);
    }
  }
  if (*(_DWORD *)(v3 + 132))
  {
    if (*(_DWORD *)(v3 + 152) < a1)
    {
      int v34 = *(void **)(v3 + 144);
      if (v34) {
        j__free(v34);
      }
      *(void *)(v3 + 144) = sub_221A12A5C((void *)(2 * a1));
      *(_DWORD *)(v3 + 152) = a1;
    }
    *(_DWORD *)(v3 + 136) = 0;
    if (a1 >= 1)
    {
      unsigned int v35 = 0;
      int v36 = (_DWORD *)(a2 + 52);
      BOOL v37 = (_DWORD *)(a2 + 52);
      do
      {
        int v38 = *v37;
        v37 += 20;
        if (v38)
        {
          *(_WORD *)(*(void *)(v3 + 144) + 2 * v35) = *(v36 - 12);
          unsigned int v35 = *(_DWORD *)(v3 + 136) + 1;
          *(_DWORD *)(v3 + 136) = v35;
        }
        int v36 = v37;
        --v4;
      }
      while (v4);
    }
  }
  sub_221A341D0(*(pthread_mutex_t **)(*(void *)(v3 + 88) + 16));
  *(_DWORD *)(*(void *)(v3 + 88) + 12) = 0x7FFFFFFF;
  fflush((FILE *)*MEMORY[0x263EF8358]);
  sub_221A34274(*(pthread_cond_t **)(*(void *)(v3 + 88) + 24));
  sub_221A341DC(*(pthread_mutex_t **)(*(void *)(v3 + 88) + 16));
  return 0;
}

uint64_t sub_221A11F78(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, int a10, uint64_t a11)
{
  if (a10) {
    BOOL v12 = a11 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = v12;
  uint64_t result = 4294958327;
  if (a6)
  {
    if (a7)
    {
      sub_221A05B28(a2);
      uint64_t result = sub_221A05B80(a2, 400);
      if (!result)
      {
        *(_DWORD *)(a2 + 32) = 0;
        *(void *)a2 = a7;
        uint64_t result = 4294958327;
        *(_DWORD *)(a2 + 8) = a6;
        switch(a5)
        {
          case 0:
            uint64_t result = sub_221A33328(a2, v13);
            goto LABEL_17;
          case 2:
            uint64_t result = sub_221A33638(a2);
            goto LABEL_17;
          case 3:
            uint64_t v21 = a2;
            unsigned int v22 = 1;
            goto LABEL_16;
          case 4:
            uint64_t v21 = a2;
            unsigned int v22 = 2;
            goto LABEL_16;
          case 5:
            uint64_t v21 = a2;
            unsigned int v22 = 4;
LABEL_16:
            uint64_t result = sub_221A334B0(v21, v22, (*(_DWORD *)(a1 + 4) * *(_DWORD *)(a1 + 8)) << 10, v13, a11);
LABEL_17:
            if (!result)
            {
              int v23 = *(_DWORD *)(a2 + 32);
              if (v23)
              {
                if (a4) {
                  int v24 = *(_DWORD *)(a4 + 8);
                }
                else {
                  int v24 = 0x10000;
                }
                int v25 = a9;
                if (!*(_DWORD *)(a1 + 48))
                {
                  if (v23 < 1) {
                    goto LABEL_33;
                  }
                  int v38 = v24;
                  uint64_t v26 = 0;
                  char v27 = 0;
                  char v28 = 0;
                  char v29 = 0;
                  do
                  {
                    int v30 = sub_221A250A4(*(unsigned char **)(*(void *)(a2 + 48) + 8 * v26));
                    char v31 = 8 * (v30 - 1);
                    unsigned int v32 = 0x101u >> v31;
                    unsigned int v33 = 0x10001u >> v31;
                    if ((v30 - 1) < 3)
                    {
                      char v29 = 1;
                      char v28 = v32;
                      char v27 = v33;
                    }
                    ++v26;
                  }
                  while (v26 < *(int *)(a2 + 32));
                  int v25 = a9;
                  if (v29 && v38 <= 0x10000)
                  {
                    char v34 = 1;
                  }
                  else
                  {
LABEL_33:
                    char v34 = 0;
                    char v28 = 0;
                    char v27 = 0;
                  }
                  *(unsigned char *)(*(void *)(a1 + 40) + 224) = v34;
                  *(unsigned char *)(*(void *)(a1 + 40) + 225) = v28;
                  *(unsigned char *)(*(void *)(a1 + 40) + 226) = v27;
                }
                if ((v25 & 0xFFFFFFFD) == 1)
                {
                  int v35 = a10;
                }
                else
                {
                  int v25 = 0;
                  int v35 = 0;
                }
                uint64_t result = sub_221A0DFF4(a1, a2, (unsigned int *)(a8 + 4723776), v25, v35);
                if (!result)
                {
                  *(_DWORD *)(a2 + 56) = 0;
                  uint64_t v36 = *(int *)(a2 + 32);
                  *(_DWORD *)(a1 + 552) = v36;
                  if (v36)
                  {
                    BOOL v37 = sub_221A12A5C((void *)(80 * v36));
                    uint64_t result = 0;
                    *a3 = v37;
                  }
                  else
                  {
                    uint64_t result = 4294954948;
                  }
                }
              }
              else
              {
                uint64_t result = 4294958327;
              }
            }
            break;
          default:
            return result;
        }
      }
    }
  }
  return result;
}

uint64_t sub_221A121FC(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4, int a5, uint64_t a6, int a7, int a8, int a9)
{
  v61[0] = a8;
  uint64_t v16 = *(unsigned int *)(a1 + 552);
  if ((int)v16 > *(_DWORD *)(a1 + 52))
  {
    sub_221A06140(a1);
    sub_221A05C28(a1, v16);
  }
  *(_DWORD *)(a1 + 156) = 0;
  *(_DWORD *)(*(void *)(a1 + 40) + 264) = 25;
  if (a4 && *(void *)a4 <= 0x89uLL) {
    *(_DWORD *)(a1 + 156) = (138 - *a4) >> 2;
  }
  *(unsigned char *)(a1 + 832) = a7;
  uint64_t v17 = *(int *)(a2 + 56);
  uint64_t v18 = *(void *)(a2 + 40);
  int32x4_t v19 = (unsigned int **)(*(void *)(a2 + 48) + 8 * v17);
  uint64_t v20 = **(void **)(a1 + 56);
  uint64_t v60 = 0;
  if (!*v19) {
    return 4294967188;
  }
  uint64_t v58 = (unsigned int *)(v18 + 4 * v17);
  uint64_t v59 = a3;
  uint64_t result = sub_2219F38D8(*v19, *v58, v20 + 1425504);
  if (!result)
  {
    if ((a7 & 0xFFFFFFFD) == 1)
    {
      uint64_t result = sub_221A22304(v20 + 1425504, (unsigned int *)(a6 + 4723776), (void *)(v20 + 1425544), a7, v61, 0, (int *)(a1 + 160), 0, 0);
      int v22 = v61[0];
    }
    else
    {
      uint64_t result = sub_221A22304(v20 + 1425504, (unsigned int *)(a6 + 4723776), (void *)(v20 + 1425544), a7, v61, 0, 0, 0, 0);
      int v22 = 0;
      v61[0] = 0;
    }
    *(_DWORD *)(a1 + 836) = v22;
    if (!result)
    {
      uint64_t result = sub_2219F39A8((unsigned int *)(a6 + 4723776), *(_DWORD *)(a6 + 4870356), &v60);
      if (!result)
      {
        uint64_t v53 = a6 + 5016960;
        int v23 = a9;
        uint64_t v52 = a6 + 5041520;
        int v24 = *(_DWORD *)(a6 + 5041736);
        if (v24 != -1)
        {
          int v25 = *(unsigned __int8 *)(v20 + 1425576);
          if (v24 != v25)
          {
            *(_DWORD *)(a6 + 5041736) = v25;
            sub_221A127F8((pthread_mutex_t *)a6);
            int v23 = a9;
          }
        }
        *(_DWORD *)(a6 + 5039796) = 1;
        int v49 = v23;
        int v50 = (uint64_t *)(a6 + 5040640);
        uint64_t v51 = a1 + 88;
        uint64_t result = sub_2219F6388(v60, v20 + 1425544, v52, v53, (uint64_t *)(a1 + 88), a5, *(unsigned __int8 *)(a1 + 832), v61[0], 1, v23);
        if (!result)
        {
          sub_221A34488((atomic_uint *)(*(void *)v51 + 8));
          uint64_t v26 = *(void *)v51;
          if (!*(_DWORD *)(a6 + 5041808) && *(unsigned char *)(v26 + 1362) && !*(unsigned char *)(v26 + 34))
          {
            sub_221A34488((atomic_uint *)(v26 + 8));
            uint64_t v26 = *(void *)v51;
          }
          uint64_t v56 = *(unsigned int **)(a1 + 24);
          int v27 = *(unsigned __int8 *)(*(void *)(a1 + 40) + 224);
          *(unsigned char *)(v26 + 1304) = v27;
          char v28 = *(unsigned char *)(*(void *)(a1 + 40) + 225);
          *(unsigned char *)(v26 + 1305) = v28;
          *(unsigned char *)(v26 + 1306) = *(unsigned char *)(*(void *)(a1 + 40) + 226);
          BOOL v29 = v27 != 0;
          if ((int)v16 >= 1)
          {
            uint64_t v48 = v26;
            uint64_t v30 = 0;
            uint64_t v31 = 0;
            uint64_t v32 = 0;
            char v55 = v29 & v28;
            uint64_t v57 = 80 * v16;
            while (1)
            {
              uint64_t v33 = v59 + v30;
              *(void *)uint64_t v33 = 0xFFFFFFFF00000000;
              *(_DWORD *)(v33 + 8) = -1;
              *(void *)(v33 + 16) = a1;
              *(void *)(v33 + 24) = a6;
              *(void *)(v33 + 48) = 0;
              *(_DWORD *)(v33 + 44) = v31;
              *(unsigned char *)(v33 + 56) = a7;
              *(_DWORD *)(v33 + 60) = v61[0];
              char v34 = v19[v31];
              if (!v34) {
                break;
              }
              uint64_t v35 = *(void *)(*(void *)(a1 + 56) + 8 * v31);
              uint64_t result = sub_2219F38D8(v34, v58[v31], v35 + 1425504);
              if (result) {
                return result;
              }
              if ((a7 & 0xFD) == 1)
              {
                uint64_t result = sub_221A22304(v35 + 1425504, v56, (void *)(v35 + 1425544), *(unsigned __int8 *)(v33 + 56), v61, 0, (int *)(a1 + 160), v55, 0);
                if (*(unsigned char *)(v33 + 56) == 1 && !v61[0]) {
                  return result;
                }
              }
              else
              {
                uint64_t result = sub_221A22304(v35 + 1425504, v56, (void *)(v35 + 1425544), 0, 0, 0, 0, v55, 0);
              }
              uint64_t v54 = v35 + 1425544;
              uint64_t v32 = result;
              if (result) {
                goto LABEL_35;
              }
              uint64_t v36 = (uint64_t *)(v59 + v30 + 72);
              uint64_t result = sub_2219F39EC((uint64_t)v56, *(_DWORD *)(v35 + 1425568), v36);
              uint64_t v32 = result;
              if (result) {
                goto LABEL_35;
              }
              BOOL v37 = (void *)(v59 + v30 + 64);
              uint64_t result = sub_2219F39A8(v56, *(_DWORD *)(*v36 + 4), v37);
              uint64_t v32 = result;
              if (result) {
                goto LABEL_35;
              }
              uint64_t result = sub_2219F7188(v54, v53, (int8x16_t *)(v35 + 1428296), v48, v38, v39);
              uint64_t v32 = result;
              if (result) {
                goto LABEL_35;
              }
              sub_221A131D8(v35 + 1429136, v35 + 1429200, v35 + 1455680, v35 + 1456336, (void *)(v35 + 976));
              uint64_t result = sub_2219FA668(v35 + 976, a1, v35 + 1428296, v48, (unsigned char *)*v37, *v36, v54, *(unsigned __int8 *)(v33 + 56), v61[0]);
              uint64_t v32 = result;
              if (result) {
                goto LABEL_35;
              }
              *(void *)(v35 + 1232) = v52;
              uint64_t result = sub_221A027D4(v35 + 976, v52);
              uint64_t v32 = result;
              if (result) {
                goto LABEL_35;
              }
LABEL_36:
              ++v31;
              v30 += 80;
              if (v57 == v30) {
                goto LABEL_42;
              }
            }
            LODWORD(result) = -8969;
LABEL_35:
            *(_DWORD *)uint64_t v33 = result;
            goto LABEL_36;
          }
          uint64_t v32 = 0;
LABEL_42:
          uint64_t v40 = *(void *)(a1 + 40);
          if (*(_DWORD *)(v40 + 216))
          {
            uint64_t v41 = *(void *)v51;
            if (*(unsigned char *)(*(void *)v51 + 34))
            {
              uint64_t v41 = *(void *)(v41 + 1352);
              if (!v41) {
                return 4294958327;
              }
            }
            uint64_t v42 = v32;
            *(void *)(v40 + 176) = *(void *)(v41 + 192);
            *(_DWORD *)(*(void *)(a1 + 40) + 184) = *(_DWORD *)(v41 + 208);
            uint64_t v40 = *(void *)(a1 + 40);
          }
          else
          {
            uint64_t v42 = v32;
          }
          int v43 = *(_DWORD *)(*(void *)(a1 + 88) + 132) >> 4;
          int v44 = *(_DWORD *)(a1 + 4) * v43;
          *(_DWORD *)(a1 + 16) = v43;
          *(_DWORD *)(a1 + 20) = v44;
          *(_DWORD *)(v40 + 20) = v44;
          sub_221A2F34C(*(void *)(a1 + 40));
          *(_DWORD *)(*(void *)(a1 + 40) + 220) = *(unsigned __int8 *)(*(void *)(a1 + 88) + 1372);
          *(_DWORD *)(*(void *)(a1 + 88) + 12) = -1;
          uint64_t v45 = *(void *)(a1 + 40);
          size_t v46 = *(unsigned int *)(v45 + 20);
          sub_221A341D0(*(pthread_mutex_t **)(v45 + 160));
          if (v46) {
            bzero(*(void **)(v45 + 168), v46);
          }
          sub_221A341DC(*(pthread_mutex_t **)(v45 + 160));
          *(_DWORD *)(*(void *)v51 + 1264) = v49;
          uint64_t v47 = *v50;
          if (*v50 && (!*(unsigned char *)(v47 + 1362) || *(unsigned char *)(v47 + 34))) {
            *(void *)(a1 + 96) = v47;
          }
          return v42;
        }
      }
    }
  }
  return result;
}

pthread_mutex_t *sub_221A127F8(pthread_mutex_t *result)
{
  if (SHIDWORD(result->__sig) >= 1)
  {
    uint64_t v1 = result;
    uint64_t v2 = 0;
    do
    {
      sub_221A341D0(*(pthread_mutex_t **)&v1->__opaque[8]);
      uint64_t v3 = (char *)v1 + 147616 * v2;
      int v5 = *((_DWORD *)v3 + 8);
      uint64_t v4 = v3 + 32;
      if (v5)
      {
        do
        {
          if (v2 == LODWORD(v1->__sig)) {
            break;
          }
          sub_221A34280(*(pthread_cond_t **)&v1->__opaque[16], *(pthread_mutex_t **)&v1->__opaque[8]);
        }
        while (*v4);
      }
      uint64_t result = sub_221A341DC(*(pthread_mutex_t **)&v1->__opaque[8]);
      ++v2;
    }
    while (v2 < SHIDWORD(v1->__sig));
  }
  return result;
}

uint64_t sub_221A12880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = **(void **)(a1 + 56);
  uint64_t v12 = 0;
  uint64_t result = sub_2219F39A8((unsigned int *)(a4 + 4723776), *(_DWORD *)(a4 + 4870356), &v12);
  if (!result)
  {
    unsigned int v8 = (void *)(a4 + 5039776);
    uint64_t v9 = a4 + 5016960;
    uint64_t v10 = *(void *)(a1 + 88);
    if (*(unsigned char *)(v10 + 1372))
    {
      v8[108] = v10;
      uint64_t v10 = *(void *)(a1 + 88);
    }
    if (*(_DWORD *)(*v8 + 44))
    {
      uint64_t result = sub_2219F570C(v6 + 1428092, *(_DWORD *)(v6 + 1425572), v12, v9, v10);
      if (result) {
        return result;
      }
      uint64_t v10 = *(void *)(a1 + 88);
    }
    uint64_t v11 = *(void *)(v10 + 1352);
    *(unsigned char *)(v10 + 1376) = 1;
    if (v11 && *(unsigned char *)(v11 + 36)) {
      *(unsigned char *)(v11 + 1376) = 1;
    }
    if (*(unsigned char *)(v6 + 1428253)) {
      *(_DWORD *)(*v8 + 40) = 0;
    }
    return sub_2219F55AC(v9);
  }
  return result;
}

uint64_t sub_221A12978(uint64_t result)
{
  uint64_t v1 = (uint64_t *)(result + 147016);
  uint64_t v2 = *(unsigned int *)(result + 147568);
  uint64_t v3 = *(unsigned int *)(result + 147572);
  if ((int)v2 >= 1)
  {
    uint64_t v4 = (uint64_t *)(result + 146744);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_221A34478((atomic_uint *)(v5 + 8));
      --v2;
    }
    while (v2);
  }
  if ((int)v3 >= 1)
  {
    do
    {
      uint64_t v6 = *v1++;
      uint64_t result = sub_221A34478((atomic_uint *)(v6 + 8));
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_221A129EC()
{
  sub_221910630();
  sub_221911554();
  uint64_t v2 = nullsub_1(v0, v1);
  nullsub_1(v2, v3);
  sub_22191167C();
  sub_221911698();
  sub_2219116E4();
  nullsub_1(v4, v5);
  sub_221911810();
  return nullsub_1(v6, v7);
}

void *sub_221A12A34(size_t size)
{
  return malloc_type_calloc(1uLL, size, 0x374B7B4AuLL);
}

void *sub_221A12A48(size_t a1)
{
  return malloc_type_calloc(a1, 1uLL, 0xC38027E5uLL);
}

void *sub_221A12A5C(void *size)
{
  if (size) {
    return malloc_type_calloc(1uLL, (size_t)size, 0x9AB1E655uLL);
  }
  return size;
}

void *sub_221A12A78(uint64_t a1)
{
  return malloc_type_calloc((unint64_t)(a1 + qword_26AAE6B00 - 1) >> qword_26AAE6B10, qword_26AAE6B00, 0x2E47E086uLL);
}

uint64_t sub_221A12AA0(uint64_t a1)
{
  uint64_t v1 = malloc_type_malloc(qword_26AAE6B00 + a1, 0x138A1FD7uLL);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = ((unint64_t)v1 + qword_26AAE6B00) & -qword_26AAE6B00;
  *(_DWORD *)(v2 - 4) = v2 - v1;
  return v2;
}

void sub_221A12AFC(uint64_t a1)
{
  if (a1) {
    free((void *)(a1 - *(int *)(a1 - 4)));
  }
}

uint64_t sub_221A12B10()
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  strcpy(v6, "hw.cachelinesize");
  size_t v4 = 8;
  uint64_t v5 = 0;
  uint64_t result = sysctlbyname(v6, &v5, &v4, 0, 0);
  qword_26AAE6B00 = v5;
  qword_26AAE6B08 = v5 - 1;
  uint64_t v1 = sub_221A12C44;
  uint64_t v2 = nullsub_2;
  switch(v5)
  {
    case 0x20:
      uint64_t v3 = 5;
      break;
    case 0x80:
      uint64_t v1 = sub_221A12C50;
      uint64_t v2 = nullsub_3;
      uint64_t v3 = 7;
      break;
    case 0x40:
      uint64_t v1 = sub_221A12C44;
      uint64_t v2 = nullsub_2;
      uint64_t v3 = 6;
      break;
    default:
      return result;
  }
  qword_26AAE6B18 = (uint64_t)v2;
  off_26AAE6B20 = v1;
  qword_26AAE6B10 = v3;
  return result;
}

void sub_221A12C44(void *a1, int a2)
{
}

void sub_221A12C50(void *a1, int a2)
{
}

__n128 sub_221A12C58(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5 = *(_DWORD *)(a4 + 16);
  int v6 = 2 * *(_DWORD *)(a4 + 20);
  uint64_t v7 = *(__n128 **)(a4 + 176);
  *(void *)(a4 + 168) = 0;
  if ((v5 & 1) == 0)
  {
    uint64_t v8 = v5 > a1 && a5 > 1;
    uint64_t v9 = v8 << 63 >> 63;
    int v10 = v6 + a1;
    if (v5 < v6 + a1) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = -1;
    }
    uint64_t v13 = v6 - 2 > a5 && v5 >= v10 - 2;
    uint64_t v14 = v13 << 63 >> 63;
    uint64_t v15 = v5 >= v10 + 2 && a5 > 1;
    uint64_t v16 = v15 << 63 >> 63;
    char v17 = *(unsigned char *)(a4 + 31);
    if (v17)
    {
      char v18 = 0;
    }
    else
    {
      if (v9)
      {
        uint64_t v26 = a3 + 400 * (a5 - 2);
      }
      else
      {
        if (v5 < v10)
        {
          char v18 = 1;
          char v17 = 1;
          goto LABEL_58;
        }
        uint64_t v26 = a2 + 400 * a5;
      }
      char v18 = *(unsigned char *)(v26 + 144) + 1;
      char v17 = v18;
    }
LABEL_58:
    uint64_t v35 = a5;
    uint64_t v36 = a5 + 1;
    if (v17 == 2) {
      int v37 = a5;
    }
    else {
      int v37 = a5 + 1;
    }
    uint64_t v38 = a3 + 400 * a5 - 800;
    uint64_t v39 = a2 + 400 * v37;
    uint64_t v40 = v39 - 800;
    if (a5)
    {
      int v6 = a5;
      uint64_t v41 = a3;
    }
    else
    {
      uint64_t v41 = a2;
    }
    *(unsigned char *)(a4 + 32) = v18;
    uint64_t v42 = v41 + 400 * (v6 - 1);
    if (v5 <= a1) {
      uint64_t v43 = 0;
    }
    else {
      uint64_t v43 = v42;
    }
    *(unsigned char *)(a4 + 30) = 0;
    *(void *)(a4 + 128) = v9 & v38;
    *(void *)(a4 + 136) = v39 & v11;
    *(void *)(a4 + 144) = (v39 + 800) & v14;
    *(void *)(a4 + 152) = v40 & v16;
    *(void *)(a4 + 160) = v43;
    if (v17 == 2 && v5 >= v10 && !*(unsigned char *)((v39 & v11) + 0x90)) {
      *(void *)(a4 + 136) = v11 & (a2 + 400 * v36);
    }
    *(void *)(a4 + 168) = v9 & (a3 + 400 * (v35 - 1));
    if (v17 == 2 && (v16 & 1) != 0 && !*(unsigned char *)((v40 & v16) + 0x90)) {
      *(void *)(a4 + 152) = v16 & (a2 + 400 * (v35 - 1));
    }
    if (v17 == 2 && (v14 & 1) != 0 && !*(unsigned char *)(((v39 + 800) & v14) + 0x90)) {
      *(void *)(a4 + 144) = v14 & (a2 + 400 * (int)v35 + 1200);
    }
    goto LABEL_79;
  }
  uint64_t v20 = a5 > 2 && v5 > a1 + 2;
  uint64_t v21 = v20 << 63 >> 63;
  uint64_t v22 = a3 + 400 * a5;
  uint64_t v23 = v21 & (v22 - 800);
  *(void *)(a4 + 128) = v23;
  uint64_t v24 = v22 - 400;
  *(void *)(a4 + 160) = v24;
  int v25 = *(unsigned __int8 *)(a4 + 31);
  if (*(unsigned char *)(a4 + 31)) {
    *(unsigned char *)(a4 + 32) = 0;
  }
  else {
    int v25 = *(unsigned __int8 *)(a4 + 32);
  }
  *(unsigned char *)(a4 + 30) = v25 == 2;
  if (v25 == 2)
  {
    int v27 = v6 + a1;
    int v28 = v6 - 2;
    if (v5 >= v27) {
      uint64_t v29 = a2 + 400 * a5;
    }
    else {
      uint64_t v29 = 0;
    }
    BOOL v30 = v5 < v27 - 2 || v28 <= a5;
    uint64_t v31 = a2 + 400 * a5 + 800;
    if (v30) {
      uint64_t v31 = 0;
    }
    BOOL v32 = v5 < v27 + 2 || a5 <= 1;
    *(void *)(a4 + 136) = v29;
    *(void *)(a4 + 144) = v31;
    uint64_t v33 = a2 + 400 * (a5 - 2);
    if (v32) {
      uint64_t v33 = 0;
    }
    *(void *)(a4 + 152) = v33;
    if ((v21 & 1) != 0 && !*(unsigned char *)(v23 + 144))
    {
      uint64_t v34 = v21 & (a3 + 400 * (a5 - 3));
LABEL_53:
      *(void *)(a4 + 128) = v34;
      *(void *)(a4 + 168) = v23;
    }
  }
  else
  {
    *(void *)(a4 + 136) = v24;
    *(void *)(a4 + 144) = 0;
    uint64_t v34 = v21 & (a3 + 400 * a5 - 1200);
    *(void *)(a4 + 152) = v34;
    if (v21)
    {
      if (*(unsigned char *)((v21 & (a3 + 400 * a5 - 1200)) + 0x90) == 1) {
        *(void *)(a4 + 152) = v23;
      }
      if (*(unsigned char *)(v23 + 144) == 1) {
        goto LABEL_53;
      }
    }
  }
LABEL_79:
  v7[5].n128_u64[0] = 0;
  v7[5].n128_u64[1] = 0;
  v7[6].n128_u64[0] = 0;
  result.n128_u64[0] = 0x2222222222222222;
  result.n128_u64[1] = 0x2222222222222222;
  v7[2] = result;
  v7[3] = result;
  if ((*(unsigned char *)(a4 + 188) & 1) != 0 && !*(unsigned char *)(a4 + 189))
  {
    v7[7].n128_u8[8] = 0;
    uint64_t v45 = &v7[7].n128_i8[8];
    *(_DWORD *)(v45 + 1) = -1;
    v45[5] = -1;
    *((_DWORD *)v45 + 52) = 0;
    v45[23] = 0;
    *((_OWORD *)v45 + 2) = 0u;
    *((_OWORD *)v45 + 3) = 0u;
    *((_OWORD *)v45 + 4) = 0u;
    *((_OWORD *)v45 + 5) = 0u;
    *((_OWORD *)v45 + 6) = 0u;
    *((_OWORD *)v45 + 7) = 0u;
    *((_OWORD *)v45 + 8) = 0u;
    *((_OWORD *)v45 + 9) = 0u;
    *((void *)v45 + 20) = 0;
    result.n128_u64[0] = 0x2020202020202020;
    result.n128_u64[1] = 0x2020202020202020;
    *(__n128 *)(v45 + 168) = result;
    *(__n128 *)(v45 + 184) = result;
    *((void *)v45 + 25) = 0;
  }
  return result;
}

uint64_t sub_221A12F7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  if (*(_DWORD *)(a4 + 16) >= (int)result + 2 * *(_DWORD *)(a4 + 20)) {
    uint64_t v6 = a2 + 400 * a5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6) {
    uint64_t v7 = v6 + 120;
  }
  else {
    uint64_t v7 = 0;
  }
  *(void *)(a6 + 8) = v7;
  return result;
}

__n128 sub_221A12FA8(int a1, uint64_t a2, uint64_t a3, int *a4)
{
  int v5 = a4[4];
  int v4 = a4[5];
  int v6 = *a4;
  BOOL v7 = *a4 > 0;
  int v8 = v4 - 1;
  int v9 = *a4 - 1;
  uint64_t v10 = a3 + 400 * v9;
  uint64_t v11 = a2 + 400 * (v4 - 1);
  if (v5 <= a1) {
    uint64_t v11 = 0;
  }
  if (v5 <= a1 || !v7) {
    uint64_t v10 = 0;
  }
  uint64_t v12 = (__n128 *)*((void *)a4 + 22);
  int v13 = v4 + a1;
  if (v6) {
    uint64_t v11 = v10;
  }
  int v14 = v13 - 1;
  BOOL v17 = v5 < v13;
  BOOL v15 = v5 > v13;
  uint64_t v16 = a2 + 400 * v6;
  if (v17) {
    uint64_t v16 = 0;
  }
  BOOL v17 = v5 >= v14 && v6 < v8;
  *((void *)a4 + 16) = v10;
  *((void *)a4 + 17) = v16;
  uint64_t v18 = a2 + 400 * (v6 + 1);
  if (!v17) {
    uint64_t v18 = 0;
  }
  if (v15 && v7) {
    uint64_t v19 = a2 + 400 * v9;
  }
  else {
    uint64_t v19 = 0;
  }
  *((void *)a4 + 18) = v18;
  *((void *)a4 + 19) = v19;
  *((void *)a4 + 20) = v11;
  *((void *)a4 + 21) = 0;
  v12[5].n128_u64[0] = 0;
  v12[5].n128_u64[1] = 0;
  v12[6].n128_u64[0] = 0;
  result.n128_u64[0] = 0x2222222222222222;
  result.n128_u64[1] = 0x2222222222222222;
  v12[2] = result;
  v12[3] = result;
  if ((a4[47] & 1) != 0 && !*((unsigned char *)a4 + 189))
  {
    v12[7].n128_u8[8] = 0;
    uint64_t v21 = &v12[7].n128_i8[8];
    *(_DWORD *)(v21 + 1) = -1;
    v21[5] = -1;
    *((_DWORD *)v21 + 52) = 0;
    v21[23] = 0;
    *((_OWORD *)v21 + 2) = 0u;
    *((_OWORD *)v21 + 3) = 0u;
    *((_OWORD *)v21 + 4) = 0u;
    *((_OWORD *)v21 + 5) = 0u;
    *((_OWORD *)v21 + 6) = 0u;
    *((_OWORD *)v21 + 7) = 0u;
    *((_OWORD *)v21 + 8) = 0u;
    *((_OWORD *)v21 + 9) = 0u;
    *((void *)v21 + 20) = 0;
    result.n128_u64[0] = 0x2020202020202020;
    result.n128_u64[1] = 0x2020202020202020;
    *(__n128 *)(v21 + 168) = result;
    *(__n128 *)(v21 + 184) = result;
    *((void *)v21 + 25) = 0;
  }
  return result;
}

char *sub_221A13094(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 216);
  uint64_t v6 = *(void *)(a1 + 176);
  uint64_t v7 = *(void *)(a1 + 48);
  if (*(unsigned char *)(v7 + 272))
  {
    __n128 result = sub_22191A2A4(v5 + 1152, v4, *(_DWORD *)a1, *(_DWORD *)(a1 + 4), a2, *(_WORD **)(v6 + 112), *(unsigned __int8 *)(v7 + 272), **(void **)(a1 + 336), *(unsigned char *)(a1 + 31));
  }
  else if (*(_DWORD *)(v5 + 1164) <= (int)v4)
  {
    __n128 result = 0;
  }
  else
  {
    __n128 result = *(char **)(v5 + 8 * *(unsigned __int8 *)(a1 + 31) + 1232);
    *(void *)(*(void *)(v5 + 1256) + 8 * v4) = result;
  }
  *(void *)(v6 + 112) = result;
  if (*(unsigned char *)(a1 + 188)) {
    *(void *)(v6 + 320) = result;
  }
  return result;
}

char *sub_221A13134(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 216);
  uint64_t v6 = *(void *)(a1 + 176);
  uint64_t v7 = *(void *)(a1 + 48);
  if (*(unsigned char *)(v7 + 272))
  {
    __n128 result = sub_22191A2A4(v5 + 1152, v4, *(_DWORD *)a1, *(_DWORD *)(a1 + 12), a2, *(_WORD **)(v6 + 112), *(unsigned __int8 *)(v7 + 272), **(void **)(a1 + 336), *(unsigned char *)(a1 + 31));
  }
  else if (*(_DWORD *)(v5 + 1164) <= (int)v4)
  {
    __n128 result = 0;
  }
  else
  {
    __n128 result = *(char **)(v5 + 8 * *(unsigned __int8 *)(a1 + 31) + 1232);
    *(void *)(*(void *)(v5 + 1256) + 8 * v4) = result;
  }
  *(void *)(v6 + 112) = result;
  if (*(unsigned char *)(a1 + 188)) {
    *(void *)(v6 + 320) = result;
  }
  return result;
}

uint64_t sub_221A131D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[5] = result;
  a5[6] = a2;
  a5[22] = a3;
  a5[7] = a4;
  return result;
}

uint64_t sub_221A131E8(void *a1, _DWORD *a2, double a3, int8x16_t a4, __n128 a5, __n128 a6, int8x16_t a7, int8x16_t a8, int8x16_t a9, int16x8_t a10)
{
  uint64_t v11 = a1[5];
  *a2 = 0;
  if (*(unsigned char *)(v11 + 52))
  {
    int v13 = (int16x8_t *)a1[8];
    if (*(unsigned char *)(a1[5] + 3)) {
      sub_2219F0230((unint64_t)a1, (_OWORD *)a1[8], (uint64_t)(a1 + 177928), a3, a4, a5.n128_f64[0], a6.n128_f64[0], *(double *)a7.i64, a8);
    }
    else {
      sub_2219ECCB8((uint64_t)a1, (_OWORD *)a1[8]);
    }
    *a2 = 1;
  }
  else
  {
    int v13 = 0;
  }
  if (*(unsigned char *)(v11 + 53))
  {
    int v14 = (int16x8_t *)(a1[8] + 512);
    uint64_t v15 = sub_2219F1234((uint64_t)a1, v14);
  }
  else
  {
    int v14 = 0;
    uint64_t v15 = 0;
  }
  uint64_t v16 = a1[6];
  if (*(_DWORD *)(v16 + 356) || *(_DWORD *)(v16 + 360))
  {
    sub_2219657F8((uint64_t)a1, v13, (uint64_t)v14, a3, a4, a5, a6, a7, a8, a9, a10);
    return v15;
  }
  else
  {
    return sub_2219295B4((uint64_t)a1, v13, v14, a3, *(double *)a4.i64, a5.n128_f64[0], a6.n128_f64[0], *(double *)a7.i64, (__n128)a8, (__n128)a9, (__n128)a10);
  }
}

uint64_t sub_221A132E8(uint64_t a1, double a2, int8x16_t a3, int8x16_t a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int16x8_t a8, int16x8_t a9)
{
  uint64_t v10 = *(unsigned char **)(a1 + 40);
  if (v10[52])
  {
    uint64_t v11 = *(int16x8_t **)(a1 + 64);
    if (v10[3])
    {
      uint64_t v12 = a1 + 1423424;
      int v13 = *(_OWORD **)(a1 + 64);
      if (*(unsigned char *)(a1 + 31)) {
        sub_2219EA0A8(a1, v13, v12);
      }
      else {
        sub_2219F0A34(a1, v13, v12, a2, a3, *(double *)a4.i64, *(double *)a5.i64, *(double *)a6.i64, a7);
      }
    }
    else
    {
      uint64_t v15 = *(_OWORD **)(a1 + 64);
      if (*(unsigned char *)(a1 + 31)) {
        sub_2219E70C0(a1, v15);
      }
      else {
        sub_2219EFE58(a1, v15);
      }
    }
    uint64_t v14 = 1;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v14 = 0;
  }
  if (v10[53])
  {
    uint64_t v16 = (_OWORD *)(*(void *)(a1 + 64) + 512);
    sub_2219F12F8(a1, v16);
  }
  else
  {
    uint64_t v16 = 0;
  }
  if (*(unsigned char *)(a1 + 31))
  {
    sub_22191B918();
  }
  else
  {
    uint64_t v17 = *(void *)(a1 + 48);
    if (*(_DWORD *)(v17 + 356) || *(_DWORD *)(v17 + 360)) {
      sub_2219582E0(a1, v11, (uint64_t)v16, a2, (int16x8_t)a3, a4, a5, a6, (__n128)a7, a8, a9);
    }
    else {
      sub_22194BFC8(a1, (uint64_t)v11, (uint64_t)v16, a2, *(double *)a3.i64, *(double *)a4.i64, *(double *)a5.i64, *(double *)a6.i64, (__n128)a7, (__n128)a8, (__n128)a9);
    }
  }
  return v14;
}

uint64_t sub_221A133F4(uint64_t a1, double a2, int8x16_t a3, __n128 a4, __n128 a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, int16x8_t a9)
{
  if (*(unsigned char *)(a1 + 31))
  {
    return sub_22191B0C4();
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 48);
    if (*(_DWORD *)(v10 + 356) || *(_DWORD *)(v10 + 360))
    {
      sub_2219657F8(a1, 0, 0, a2, a3, a4, a5, a6, a7, a8, a9);
      return 0;
    }
    else
    {
      return sub_2219295B4(a1, 0, 0, a2, *(double *)a3.i64, a4.n128_f64[0], a5.n128_f64[0], *(double *)a6.i64, (__n128)a7, (__n128)a8, (__n128)a9);
    }
  }
}

uint64_t sub_221A13474(uint64_t a1, double a2, int16x8_t a3, int8x16_t a4, int8x16_t a5, int8x16_t a6, __n128 a7, int16x8_t a8, int16x8_t a9)
{
  if (*(unsigned char *)(a1 + 31))
  {
    sub_22191B918();
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + 48);
    if (*(_DWORD *)(v9 + 356) || *(_DWORD *)(v9 + 360)) {
      sub_2219582E0(a1, 0, 0, a2, a3, a4, a5, a6, a7, a8, a9);
    }
    else {
      sub_22194BFC8(a1, 0, 0, a2, *(double *)a3.i64, *(double *)a4.i64, *(double *)a5.i64, *(double *)a6.i64, a7, (__n128)a8, (__n128)a9);
    }
  }
  return 0;
}

uint64_t sub_221A134D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 216);
  int v3 = *(_DWORD *)(a1 + 4);
  uint64_t v4 = (16 * *(_DWORD *)a1);
  uint64_t v5 = *(void *)(v2 + 64) + v4;
  int v6 = 16 * v3;
  uint64_t v7 = *(unsigned int *)(v2 + 168);
  int v8 = 8 * v3;
  unsigned int v9 = *(_DWORD *)(v2 + 184);
  if (*(unsigned char *)(a1 + 29) && *(unsigned char *)(v2 + 1363))
  {
    unsigned int v10 = 2 * v7;
    int v11 = 2 * v9;
    int v12 = *(unsigned __int8 *)(a1 + 30);
    int v13 = *(unsigned __int8 *)(v2 + 32);
    uint64_t v14 = (32 * v3 * v7);
    if (!*(unsigned char *)(v2 + 32)) {
      uint64_t v14 = (v7 * v6);
    }
    uint64_t v15 = v5 + v14;
    if (v12)
    {
      v15 += v7;
      uint64_t v16 = *(void *)(v2 + 72) + v4;
      if (v13) {
        int v17 = v6;
      }
      else {
        int v17 = v8;
      }
      uint64_t v18 = v16 + v9 * v17;
      unsigned int v19 = v9;
    }
    else
    {
      uint64_t v18 = *(void *)(v2 + 72) + v4;
      int v20 = v9 * v8;
      int v21 = v9 * v6;
      if (v13) {
        unsigned int v19 = v21;
      }
      else {
        unsigned int v19 = v20;
      }
    }
    unsigned int v9 = v11;
  }
  else
  {
    uint64_t v15 = v5 + (v7 * 16 * v3);
    uint64_t v18 = *(void *)(v2 + 72) + v4;
    unsigned int v19 = v9 * v8;
    unsigned int v10 = v7;
  }
  int v22 = 0;
  uint64_t v23 = v18 + v19;
  uint64_t v24 = v1 + 32;
  do
  {
    for (uint64_t i = 0; i != 16; ++i)
      *(unsigned char *)(v15 + i) = *(_WORD *)(v24 + 2 * i);
    v15 += v10;
    v24 += 32;
    ++v22;
  }
  while (v22 != 16);
  int v26 = 0;
  uint64_t v27 = v1 + 544;
  do
  {
    for (uint64_t j = 0; j != 16; j += 2)
    {
      uint64_t v29 = (unsigned char *)(v23 + j);
      *uint64_t v29 = *(unsigned char *)(v27 + j);
      v29[1] = *(unsigned char *)(v27 + j + 128);
    }
    v23 += v9;
    v27 += 16;
    ++v26;
  }
  while (v26 != 8);
  return 0;
}

uint64_t sub_221A1361C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 **)(a2 + 72);
  int v3 = *(_DWORD *)(a1 + 828);
  uint64_t v4 = (16 * *(_DWORD *)(a1 + 824));
  uint64_t v5 = *((void *)v2 + 4) + v4;
  int v6 = 16 * v3;
  uint64_t v7 = *((unsigned int *)v2 + 34);
  int v8 = 8 * v3;
  unsigned int v9 = *((_DWORD *)v2 + 38);
  if (*(unsigned char *)(a2 + 20) && *(unsigned char *)(a2 + 22))
  {
    unsigned int v10 = 2 * v7;
    int v11 = 2 * v9;
    int v12 = *(unsigned __int8 *)(a2 + 21);
    int v13 = *v2;
    uint64_t v14 = (32 * v3 * v7);
    if (!*v2) {
      uint64_t v14 = (v7 * v6);
    }
    uint64_t v15 = v5 + v14;
    if (v12)
    {
      v15 += v7;
      uint64_t v16 = *((void *)v2 + 5) + v4;
      if (v13) {
        int v17 = v6;
      }
      else {
        int v17 = v8;
      }
      uint64_t v18 = v16 + v9 * v17;
      unsigned int v19 = v9;
    }
    else
    {
      uint64_t v18 = *((void *)v2 + 5) + v4;
      int v20 = v9 * v8;
      int v21 = v9 * v6;
      if (v13) {
        unsigned int v19 = v21;
      }
      else {
        unsigned int v19 = v20;
      }
    }
    unsigned int v9 = v11;
  }
  else
  {
    uint64_t v15 = v5 + (v7 * 16 * v3);
    uint64_t v18 = *((void *)v2 + 5) + v4;
    unsigned int v19 = v9 * v8;
    unsigned int v10 = v7;
  }
  int v22 = 0;
  uint64_t v23 = v18 + v19;
  uint64_t v24 = a1 + 32;
  do
  {
    for (uint64_t i = 0; i != 16; ++i)
      *(unsigned char *)(v15 + i) = *(_WORD *)(v24 + 2 * i);
    v15 += v10;
    v24 += 32;
    ++v22;
  }
  while (v22 != 16);
  int v26 = 0;
  uint64_t v27 = a1 + 544;
  do
  {
    for (uint64_t j = 0; j != 16; j += 2)
    {
      uint64_t v29 = (unsigned char *)(v23 + j);
      *uint64_t v29 = *(unsigned char *)(v27 + j);
      v29[1] = *(unsigned char *)(v27 + j + 128);
    }
    v23 += v9;
    v27 += 16;
    ++v26;
  }
  while (v26 != 8);
  return 0;
}

uint64_t sub_221A13764(unsigned int a1, int a2, int a3, uint64_t a4)
{
  if (a1 != 3 || a2)
  {
    unsigned int v6 = 1;
    switch(a1)
    {
      case 0u:
        if (a2 <= 25) {
          goto LABEL_14;
        }
        return 4294958327;
      case 1u:
        if (a2 > 0) {
          return 4294958327;
        }
LABEL_14:
        *(unsigned char *)(a4 + 272) = 0;
LABEL_15:
        if (a2 | a1 || a3)
        {
          if (a2 | a1 || a3 != 1)
          {
            uint64_t result = 0;
            int v8 = 2;
          }
          else
          {
            uint64_t result = 0;
            int v8 = 7;
          }
        }
        else
        {
          uint64_t result = 0;
          int v8 = 1;
        }
        *(unsigned char *)(a4 + 31) = v8;
        goto LABEL_10;
      case 2u:
        if (a2 > 4) {
          return 4294958327;
        }
        unsigned int v9 = (unsigned __int8 *)&unk_221A3C614;
        goto LABEL_22;
      case 3u:
        if (a2 > 22) {
          return 4294958327;
        }
        unsigned int v9 = (unsigned __int8 *)&unk_221A3C652;
LABEL_22:
        unsigned int v6 = v9[a2];
LABEL_24:
        *(unsigned char *)(a4 + 272) = v6;
LABEL_25:
        BOOL v11 = a1 == 4 && a2 == 0;
        if (a1 == 2 || v11)
        {
          int v15 = byte_221A3C60A[a2];
          *(unsigned char *)(a4 + 31) = v15;
          uint64_t v14 = (unsigned char *)(a4 + 31);
          *(unsigned char *)(a4 + 47) = byte_221A3C60F[a2];
          if ((a2 - 3) <= 1)
          {
            *(_DWORD *)(a4 + 8) = v15;
            int v13 = (_DWORD *)(a4 + 8);
            *(unsigned char *)(a4 + 63) = 0;
            *(unsigned char *)(a4 + 79) = 0;
LABEL_40:
            if (v6 > 3) {
              goto LABEL_51;
            }
            if (a1 == 2)
            {
              uint64_t v16 = (char *)&unk_221A3C61A + 2 * a2;
              goto LABEL_48;
            }
            if (a1 != 3)
            {
LABEL_51:
              uint64_t result = 0;
              *uint64_t v14 = 0;
              *int v13 = 0;
              return result;
            }
LABEL_47:
            uint64_t v16 = (char *)&unk_221A3C66A + 2 * a2;
LABEL_48:
            int v17 = *(unsigned __int16 *)v16;
            if (v17 == 2064)
            {
              if (v6 == 2)
              {
                uint64_t result = 0;
                __int16 v18 = 258;
                goto LABEL_56;
              }
            }
            else
            {
              if (v17 == 4112)
              {
                uint64_t result = 0;
                __int16 v18 = 256;
LABEL_56:
                *(_WORD *)(a4 + 26) = v18;
                return result;
              }
              if (v6 == 2)
              {
                uint64_t result = 0;
                __int16 v18 = 257;
                goto LABEL_56;
              }
            }
            return 4294958327;
          }
        }
        else
        {
          if (a1 == 3)
          {
            int v12 = byte_221A3C624[a2];
            *(_DWORD *)(a4 + 8) = v12;
            int v13 = (_DWORD *)(a4 + 8);
            *(unsigned char *)(a4 + 31) = v12;
            uint64_t v14 = (unsigned char *)(a4 + 31);
            *(unsigned char *)(a4 + 47) = byte_221A3C63B[a2];
            if (v6 >= 4) {
              goto LABEL_51;
            }
            goto LABEL_47;
          }
          int v15 = *(unsigned __int8 *)(a4 + 31);
        }
        *(_DWORD *)(a4 + 8) = v15;
        int v13 = (_DWORD *)(a4 + 8);
        uint64_t v14 = (unsigned char *)(a4 + 31);
        goto LABEL_40;
      case 4u:
        goto LABEL_24;
      case 5u:
        unsigned int v6 = 16;
        goto LABEL_24;
      default:
        unsigned int v6 = 0;
        *(unsigned char *)(a4 + 272) = 0;
        if (a1 > 1) {
          goto LABEL_25;
        }
        goto LABEL_15;
    }
  }
  uint64_t v4 = (_OWORD *)(a4 + 48);
  if (*(unsigned char *)a4)
  {
    __int16 v5 = 0;
    *(unsigned char *)(a4 + 272) = 4;
    *(_OWORD *)(a4 + 16) = xmmword_221A3C5E0;
    *(_OWORD *)(a4 + 32) = xmmword_221A3C5E0;
  }
  else
  {
    *(unsigned char *)(a4 + 272) = 16;
    *(_OWORD *)(a4 + 16) = xmmword_221A3C5E0;
    *(_OWORD *)(a4 + 32) = xmmword_221A3C5E0;
    *(_OWORD *)(a4 + 48) = xmmword_221A3C5E0;
    *(_OWORD *)(a4 + 80) = xmmword_221A3C5E0;
    *(_OWORD *)(a4 + 96) = xmmword_221A3C5E0;
    *(_OWORD *)(a4 + 112) = xmmword_221A3C5E0;
    *(_OWORD *)(a4 + 128) = xmmword_221A3C5E0;
    *(_OWORD *)(a4 + 144) = xmmword_221A3C5E0;
    *(_OWORD *)(a4 + 160) = xmmword_221A3C5E0;
    *(_OWORD *)(a4 + 176) = xmmword_221A3C5E0;
    *(_OWORD *)(a4 + 192) = xmmword_221A3C5E0;
    *(_OWORD *)(a4 + 208) = xmmword_221A3C5E0;
    *(_OWORD *)(a4 + 224) = xmmword_221A3C5E0;
    uint64_t v4 = (_OWORD *)(a4 + 256);
    __int16 v5 = 255;
    *(_OWORD *)(a4 + 240) = xmmword_221A3C5E0;
  }
  uint64_t result = 0;
  _OWORD *v4 = xmmword_221A3C5E0;
  *(_OWORD *)(a4 + 64) = xmmword_221A3C5E0;
  *(_WORD *)(a4 + 26) = v5;
  int v8 = 3;
LABEL_10:
  *(_DWORD *)(a4 + 8) = v8;
  return result;
}

uint64_t sub_221A13A20(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 28);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  if (v1 <= 8)
  {
    int v4 = 1 << v1;
    if ((v4 & 0x129) != 0)
    {
      int v5 = 4;
      *(_WORD *)(v2 + 1) = 4;
      *(unsigned char *)(v3 + 272) = 1;
      *(unsigned char *)(v3 + 31) = 4;
      *(_DWORD *)(v3 + 16) = 0;
      __int16 v6 = 256;
      *(_WORD *)(v3 + 24) = 0x2000;
LABEL_9:
      *(_WORD *)(v3 + 26) = v6;
      *(_DWORD *)(v3 + 8) = v5;
      goto LABEL_10;
    }
    if ((v4 & 0x42) != 0)
    {
      *(_WORD *)(v2 + 1) = 5;
      uint64_t v7 = (_OWORD *)(v3 + 48);
      if (*(unsigned char *)v3)
      {
        __int16 v6 = 0;
        *(unsigned char *)(v3 + 272) = 4;
        *(_OWORD *)(v3 + 16) = xmmword_221A3C5E0;
        *(_OWORD *)(v3 + 32) = xmmword_221A3C5E0;
      }
      else
      {
        *(unsigned char *)(v3 + 272) = 16;
        *(_OWORD *)(v3 + 16) = xmmword_221A3C5E0;
        *(_OWORD *)(v3 + 32) = xmmword_221A3C5E0;
        *(_OWORD *)(v3 + 48) = xmmword_221A3C5E0;
        *(_OWORD *)(v3 + 80) = xmmword_221A3C5E0;
        *(_OWORD *)(v3 + 96) = xmmword_221A3C5E0;
        *(_OWORD *)(v3 + 112) = xmmword_221A3C5E0;
        *(_OWORD *)(v3 + 128) = xmmword_221A3C5E0;
        *(_OWORD *)(v3 + 144) = xmmword_221A3C5E0;
        *(_OWORD *)(v3 + 160) = xmmword_221A3C5E0;
        *(_OWORD *)(v3 + 176) = xmmword_221A3C5E0;
        *(_OWORD *)(v3 + 192) = xmmword_221A3C5E0;
        *(_OWORD *)(v3 + 208) = xmmword_221A3C5E0;
        *(_OWORD *)(v3 + 224) = xmmword_221A3C5E0;
        uint64_t v7 = (_OWORD *)(v3 + 256);
        __int16 v6 = 255;
        *(_OWORD *)(v3 + 240) = xmmword_221A3C5E0;
      }
      _OWORD *v7 = xmmword_221A3C5E0;
      *(_OWORD *)(v3 + 64) = xmmword_221A3C5E0;
      int v5 = 3;
      goto LABEL_9;
    }
  }
LABEL_10:
  *(unsigned char *)(v2 + 3) = 0;
  *(_DWORD *)(*(void *)(a1 + 48) + 8) = *(unsigned __int8 *)(v3 + 31);
  return 0;
}

uint64_t sub_221A13B08(int a1, unsigned int a2, char *a3, unsigned char *a4)
{
  char v4 = 0;
  switch(a1)
  {
    case 0:
    case 3:
    case 5:
    case 8:
      char v5 = a2 - 5;
      char v4 = 2 * (a2 < 5);
      BOOL v6 = a2 > 4;
      goto LABEL_6;
    case 1:
    case 6:
      char v5 = a2 - 23;
      BOOL v6 = a2 > 0x16;
      if (a2 <= 0x16) {
        char v4 = 3;
      }
      else {
        char v4 = 0;
      }
LABEL_6:
      if (v6) {
        LOBYTE(a2) = v5;
      }
      goto LABEL_12;
    case 2:
    case 7:
      goto LABEL_12;
    case 4:
    case 9:
      char v4 = a2 == 0;
      if (a2) {
        LOBYTE(a2) = a2 - 1;
      }
      else {
        LOBYTE(a2) = 0;
      }
LABEL_12:
      uint64_t result = 0;
      *a3 = v4;
      *a4 = a2;
      break;
    default:
      uint64_t result = 4294958327;
      break;
  }
  return result;
}

uint64_t sub_221A13BB4(unsigned int a1, int a2, int a3, uint64_t a4, int a5)
{
  if (a1 == 3 && !a2)
  {
    if (a5)
    {
      return sub_2219103FC(a4);
    }
    else
    {
      return sub_221910554(a4);
    }
  }
  switch((char)a1)
  {
    case 0:
      if (a2 <= 0x19u) {
        goto LABEL_14;
      }
      return 4294958327;
    case 1:
      if (!(_BYTE)a2) {
        goto LABEL_14;
      }
      return 4294958327;
    case 2:
      uint64_t v10 = a2;
      if (a2 > 4u) {
        return 4294958327;
      }
      BOOL v11 = (unsigned __int8 *)&unk_221A3C614;
      goto LABEL_22;
    case 3:
      uint64_t v10 = a2;
      if (a2 > 0x16u) {
        return 4294958327;
      }
      BOOL v11 = (unsigned __int8 *)&unk_221A3C652;
LABEL_22:
      unsigned int v9 = v11[v10];
      break;
    case 4:
      unsigned int v9 = 1;
      break;
    case 5:
      unsigned int v9 = 16;
      break;
    default:
LABEL_14:
      unsigned int v9 = 0;
      break;
  }
  *(unsigned char *)(a4 + 272) = v9;
  uint64_t result = sub_221A13DA4(a1, a2, a3, (unsigned char *)(a4 + 16));
  if (!result)
  {
    *(_DWORD *)(a4 + 8) = *(unsigned __int8 *)(a4 + 31);
    if (a1 < 2) {
      return 0;
    }
    if (v9 <= 3)
    {
      if (a1 == 2)
      {
        int v12 = (unsigned __int16 *)&unk_221A3C61A;
        goto LABEL_31;
      }
      if (a1 == 3)
      {
        int v12 = (unsigned __int16 *)&unk_221A3C66A;
LABEL_31:
        int v13 = v12[a2];
        if (v13 == 2064)
        {
          if (v9 == 2)
          {
            uint64_t result = 0;
            __int16 v14 = 258;
            goto LABEL_39;
          }
        }
        else
        {
          if (v13 == 4112)
          {
            uint64_t result = 0;
            __int16 v14 = 256;
LABEL_39:
            *(_WORD *)(a4 + 26) = v14;
            return result;
          }
          if (v9 == 2)
          {
            uint64_t result = 0;
            __int16 v14 = 257;
            goto LABEL_39;
          }
        }
        return 4294958327;
      }
    }
    uint64_t result = 0;
    *(unsigned char *)(a4 + 31) = 0;
    *(_DWORD *)(a4 + 8) = 0;
  }
  return result;
}

uint64_t sub_221A13DA4(unsigned int a1, unsigned int a2, int a3, unsigned char *a4)
{
  if (!a4) {
    return 4294958327;
  }
  if (a1 <= 1)
  {
    if (a2 <= 0x19)
    {
      if (a2 | a1 | a3)
      {
        if (a2 | a1 || a3 != 1)
        {
          uint64_t result = 0;
          char v6 = 2;
        }
        else
        {
          uint64_t result = 0;
          char v6 = 7;
        }
      }
      else
      {
        uint64_t result = 0;
        char v6 = 1;
      }
      a4[15] = v6;
      return result;
    }
    return 4294958327;
  }
  if (a1 == 2)
  {
    if (a2 > 4) {
      return 4294958327;
    }
LABEL_13:
    a4[15] = byte_221A3C60A[a2];
    a4[31] = byte_221A3C60F[a2];
    if (a2 - 3 > 1) {
      return 0;
    }
    uint64_t result = 0;
    a4[47] = 0;
    a4[63] = 0;
    return result;
  }
  if (a1 == 4 && !a2) {
    goto LABEL_13;
  }
  uint64_t result = 4294958327;
  if (a1 == 3 && a2 <= 0x16)
  {
    uint64_t result = 0;
    a4[15] = byte_221A3C624[a2];
    a4[31] = byte_221A3C63B[a2];
  }
  return result;
}

uint64_t sub_221A13EA0(int a1, unsigned int a2, unsigned int a3, unsigned char *a4, char *a5, int a6, int a7)
{
  *a4 = 0;
  *a5 = 0;
  if (a1 || !a2 || a2 == 25)
  {
    char v7 = a3 & 0xF;
    unsigned int v8 = a3 >> 4;
  }
  else
  {
    unsigned int v8 = ((a2 + 1011) >> 2);
    if (a2 > 0xC)
    {
      char v7 = 15;
    }
    else
    {
      unsigned int v8 = ((a2 - 1) >> 2);
      char v7 = 0;
    }
  }
  if (a6 != 3)
  {
    if (a6 == 1 || v8 <= 2) {
      goto LABEL_10;
    }
    return 4294958327;
  }
  if (!a7 && v8 >= 3) {
    return 4294958327;
  }
LABEL_10:
  BOOL v10 = a6 == 1 || a6 == 3;
  *a5 = v7;
  if (v10 && !a7 || (a6 | 2) != 3) {
    *a4 = v8;
  }
  uint64_t result = 0;
  if (a6)
  {
    if (a7)
    {
      uint64_t result = 0;
      *a4 = 0;
    }
  }
  return result;
}

uint64_t sub_221A13F50(int a1, int a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, int a7, int a8)
{
  if (a7 < 1)
  {
    int v8 = 0;
  }
  else
  {
    int v8 = 0;
    uint64_t v9 = a7;
    BOOL v10 = a5;
    do
    {
      int v11 = *v10++;
      v8 += v11;
      --v9;
    }
    while (v9);
  }
  if (a7 <= a8)
  {
    uint64_t v14 = a7;
    int v15 = a8 + 1;
    int v12 = v8;
    while (1)
    {
      uint64_t v16 = *(unsigned __int8 *)(a3 + 4 * v14);
      if (a2 != 2) {
        break;
      }
      if ((v16 & 0xFC) != 0) {
        return 4294958327;
      }
      *(_DWORD *)(a4 + 4 * v14) = 4;
      int v17 = byte_221A3C6CB[v16];
      a5[v14] = v17;
      __int16 v18 = (unsigned __int8 *)&unk_221A3C6CF + v16;
      unsigned int v19 = (char *)&unk_221A3C6D3 + v16;
      if (v17) {
        goto LABEL_21;
      }
LABEL_47:
      v12 += v17;
      if (v15 == ++v14) {
        goto LABEL_8;
      }
    }
    if (v16 > 0xC) {
      return 4294958327;
    }
    *(_DWORD *)(a4 + 4 * v14) = byte_221A3C6D7[v16];
    if (!a1 || v16)
    {
      int v17 = byte_221A3C6E4[v16];
      a5[v14] = v17;
      __int16 v18 = (unsigned __int8 *)&unk_221A3C6F1 + v16;
      int v20 = (char *)&unk_221A3C6FE;
    }
    else
    {
      int v17 = byte_221A3C70C[v16];
      a5[v14] = v17;
      __int16 v18 = (unsigned __int8 *)&unk_221A3C719 + v16;
      int v20 = (char *)&unk_221A3C726;
    }
    unsigned int v19 = &v20[v16];
    if (!v17) {
      goto LABEL_47;
    }
LABEL_21:
    int v21 = 0;
    unsigned int v22 = 4 * v14;
    int v23 = *v18;
    int v24 = *v19;
    BOOL v25 = v23 == 8;
    BOOL v26 = v24 == 8 && v23 == 8;
    BOOL v27 = v23 == 4;
    BOOL v28 = v24 == 4;
    BOOL v29 = v24 == 4 && v27;
    BOOL v30 = v28 && v25;
    uint64_t v31 = a6 + 16 * v8;
    int v32 = v17;
    while (1)
    {
      if (v32 > 4) {
        return 4294958327;
      }
      *(unsigned char *)(v31 + 15) = *(_DWORD *)(a4 + 4 * v14);
      int v33 = a5[v14];
      if (v26)
      {
        if (v33 != 1) {
          return 4294958327;
        }
        *(_WORD *)(a6 + 10) &= word_267F63960[v22 >> 2];
        v22 += 4;
        if (*(_DWORD *)(a4 + 4 * v14) == 3) {
          *(void *)uint64_t v31 = 0;
        }
      }
      else
      {
        if (v29)
        {
          if (v33 != 4) {
            return 4294958327;
          }
          __int16 v34 = *(_WORD *)(a6 + 10) & word_267F63960[v22 >> 2];
          int v35 = 3 << (2 * (v22 >> 2));
        }
        else
        {
          if (v30)
          {
            if (v33 != 2) {
              return 4294958327;
            }
            *(_WORD *)(a6 + 10) = (*(_WORD *)(a6 + 10) & word_267F63960[v22 >> 2]) + (2 << (2 * (v22 >> 2)));
            v22 += 2;
            goto LABEL_45;
          }
          if (v33 != 2) {
            return 4294958327;
          }
          __int16 v34 = *(_WORD *)(a6 + 10) & word_267F63960[v22 >> 2];
          int v35 = 1 << (2 * (v22 >> 2));
        }
        *(_WORD *)(a6 + 10) = v34 + v35;
        ++v22;
      }
LABEL_45:
      ++v21;
      int v32 = a5[v14];
      v31 += 16;
      if (v21 >= v32)
      {
        v8 += v21;
        goto LABEL_47;
      }
    }
  }
  int v12 = v8;
LABEL_8:
  if (v12 > 16) {
    return 4294958327;
  }
  uint64_t result = 0;
  *(unsigned char *)(a6 + 256) = v12;
  return result;
}

uint64_t sub_221A141F4(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 188);
  unsigned int v3 = *(unsigned __int8 *)(a1 + 28);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  if (v3 <= 8)
  {
    int v6 = 1 << v3;
    if ((v6 & 0x129) != 0)
    {
      *(_WORD *)(v5 + 1) = 4;
      *(unsigned char *)(v4 + 272) = 1;
      *(unsigned char *)(v4 + 31) = 4;
      *(_DWORD *)(v4 + 16) = 0;
      *(_DWORD *)(v4 + 24) = 16785408;
      *(_DWORD *)(v4 + 8) = 4;
    }
    else if ((v6 & 0x42) != 0)
    {
      *(_WORD *)(v5 + 1) = 5;
      if (*(unsigned char *)(a1 + 31))
      {
        uint64_t result = sub_2219103FC(v4);
        if (result) {
          return result;
        }
      }
      else
      {
        uint64_t result = sub_221910554(v4);
        if (result) {
          return result;
        }
      }
    }
  }
  *(unsigned char *)(*(void *)(a1 + 176) + 126) = *(unsigned char *)(*(void *)(a1 + 48) + 272);
  if (v2)
  {
    uint64_t v7 = 0;
    int v8 = *(unsigned char **)(a1 + 176);
    v8[120] = 1;
    v8[121] = *(unsigned char *)(v5 + 1);
    v8[122] = *(unsigned char *)(v5 + 2);
    v8[143] = 0;
    uint64_t v9 = v8 + 226;
    BOOL v10 = v8 + 304;
    int v11 = (char *)(v4 + 25);
    do
    {
      int v12 = &v10[v7];
      *(v12 - 16) = *(v11 - 1);
      char v13 = *v11;
      v11 += 16;
      *int v12 = v13;
      *(_DWORD *)(v9 - 66) = 0;
      *(_DWORD *)(v9 - 2) = 0;
      ++v7;
      v9 += 4;
    }
    while (v7 != 16);
  }
  uint64_t result = 0;
  *(unsigned char *)(v5 + 3) = 0;
  *(_DWORD *)(*(void *)(a1 + 48) + 8) = *(unsigned __int8 *)(v4 + 31);
  return result;
}

uint64_t sub_221A14328(uint64_t a1, uint64_t a2)
{
  *(_WORD *)(a1 + 1) = 4;
  *(unsigned char *)(a2 + 272) = 1;
  *(unsigned char *)(a2 + 31) = 4;
  *(_DWORD *)(a2 + 16) = 0;
  *(_DWORD *)(a2 + 24) = 16785408;
  *(_DWORD *)(a2 + 8) = 4;
  return 0;
}

uint64_t sub_221A14358(uint64_t a1, uint64_t a2, int a3)
{
  *(_WORD *)(a1 + 1) = 5;
  if (a3)
  {
    uint64_t result = sub_2219103FC(a2);
    if (result) {
      return result;
    }
    goto LABEL_3;
  }
  uint64_t result = sub_221910554(a2);
  if (!result) {
LABEL_3:
  }
    *(_DWORD *)(a2 + 8) = *(unsigned __int8 *)(a2 + 31);
  return result;
}

uint64_t sub_221A143A4(int a1)
{
  return (a1 + 1);
}

uint64_t sub_221A143AC(uint64_t a1, double a2, int8x16_t a3, int8x16_t a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int16x8_t a8, int16x8_t a9)
{
  BOOL v10 = *(unsigned char **)(a1 + 40);
  if (v10[52])
  {
    int v11 = *(int16x8_t **)(a1 + 64);
    if (v10[3])
    {
      uint64_t v12 = a1 + 1423424;
      char v13 = *(_OWORD **)(a1 + 64);
      if (*(unsigned char *)(a1 + 31)) {
        sub_2219EA0A8(a1, v13, v12);
      }
      else {
        sub_2219F0A34(a1, v13, v12, a2, a3, *(double *)a4.i64, *(double *)a5.i64, *(double *)a6.i64, a7);
      }
    }
    else
    {
      int v15 = *(_OWORD **)(a1 + 64);
      if (*(unsigned char *)(a1 + 31)) {
        sub_2219E70C0(a1, v15);
      }
      else {
        sub_2219EFE58(a1, v15);
      }
    }
    uint64_t v14 = 1;
  }
  else
  {
    int v11 = 0;
    uint64_t v14 = 0;
  }
  if (v10[53])
  {
    uint64_t v16 = (_OWORD *)(*(void *)(a1 + 64) + 512);
    sub_2219F12F8(a1, v16);
  }
  else
  {
    uint64_t v16 = 0;
  }
  if (*(unsigned char *)(a1 + 31))
  {
    sub_22191B918();
  }
  else
  {
    uint64_t v17 = *(void *)(a1 + 48);
    if (*(_DWORD *)(v17 + 356) || *(_DWORD *)(v17 + 360)) {
      sub_2219A7460(a1, v11, (uint64_t)v16, a2, (int16x8_t)a3, a4, a5, a6, (__n128)a7, a8, a9);
    }
    else {
      sub_22196F8C0(a1, (uint64_t)v11, (uint64_t)v16, a2, *(double *)a3.i64, *(double *)a4.i64, *(double *)a5.i64, *(double *)a6.i64, (__n128)a7, (__n128)a8, (__n128)a9);
    }
  }
  return v14;
}

uint64_t sub_221A144CC(uint64_t a1, double a2, int16x8_t a3, int8x16_t a4, int8x16_t a5, int8x16_t a6, __n128 a7, int16x8_t a8, int16x8_t a9)
{
  if (*(unsigned char *)(a1 + 31))
  {
    sub_22191B918();
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + 48);
    if (*(_DWORD *)(v9 + 356) || *(_DWORD *)(v9 + 360)) {
      sub_2219A7460(a1, 0, 0, a2, a3, a4, a5, a6, a7, a8, a9);
    }
    else {
      sub_22196F8C0(a1, 0, 0, a2, *(double *)a3.i64, *(double *)a4.i64, *(double *)a5.i64, *(double *)a6.i64, a7, (__n128)a8, (__n128)a9);
    }
  }
  return 0;
}

uint64_t sub_221A14534(void *a1, double a2, int8x16_t a3, __n128 a4, int16x8_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, int16x8_t a9)
{
  BOOL v10 = (unsigned char *)a1[5];
  if (v10[52])
  {
    int v11 = (int16x8_t *)a1[8];
    if (v10[3]) {
      sub_2219F0230((unint64_t)a1, (_OWORD *)a1[8], (uint64_t)(a1 + 177928), a2, a3, a4.n128_f64[0], *(double *)a5.i64, *(double *)a6.i64, a7);
    }
    else {
      sub_2219ECCB8((uint64_t)a1, (_OWORD *)a1[8]);
    }
    uint64_t v12 = 1;
  }
  else
  {
    int v11 = 0;
    uint64_t v12 = 0;
  }
  if (v10[53])
  {
    char v13 = (int16x8_t *)(a1[8] + 512);
    sub_2219F1234((uint64_t)a1, v13);
  }
  else
  {
    char v13 = 0;
  }
  uint64_t v14 = a1[6];
  if (*(_DWORD *)(v14 + 356) || *(_DWORD *)(v14 + 360)) {
    sub_2219B1AB4((uint64_t)a1, v11, v13, a2, a3, a4, a5, a6, (__n128)a7, a8, a9);
  }
  else {
    sub_2219BBC1C((uint64_t)a1, (uint64_t)v11, (uint64_t)v13, a2, *(double *)a3.i64, a4.n128_f64[0], *(double *)a5.i64, *(double *)a6.i64, (__n128)a7, (__n128)a8, (__n128)a9);
  }
  return v12;
}

uint64_t sub_221A1461C(uint64_t a1, double a2, int8x16_t a3, __n128 a4, int16x8_t a5, int8x16_t a6, __n128 a7, int8x16_t a8, int16x8_t a9)
{
  uint64_t v9 = *(void *)(a1 + 48);
  if (*(_DWORD *)(v9 + 356) || *(_DWORD *)(v9 + 360)) {
    sub_2219B1AB4(a1, 0, 0, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  else {
    sub_2219BBC1C(a1, 0, 0, a2, *(double *)a3.i64, a4.n128_f64[0], *(double *)a5.i64, *(double *)a6.i64, a7, (__n128)a8, (__n128)a9);
  }
  return 0;
}

uint64_t sub_221A14668(uint64_t a1, int a2, int a3)
{
  int v4 = (a2 + 15) >> 4;
  int v5 = (a3 + 15) >> 4;
  uint64_t v6 = (v5 * v4);
  *(_DWORD *)a1 = v4;
  *(_DWORD *)(a1 + 4) = v5;
  *(_DWORD *)(a1 + 8) = v6;
  uint64_t v7 = sub_221A12A34(40 * v6);
  *(void *)(a1 + 16) = v7;
  if (!v7) {
    goto LABEL_7;
  }
  if (v6)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = *(void *)(a1 + 16) + v8;
      *(unsigned char *)(v9 + 12) = 0;
      *(_WORD *)uint64_t v9 = 8224;
      *(void *)(v9 + 4) = 0x8000800080008000;
      *(void *)(v9 + 16) = -1;
      *(void *)(v9 + 24) = -1;
      *(void *)(v9 + 32) = -1;
      v8 += 40;
    }
    while (40 * v6 != v8);
  }
  BOOL v10 = sub_221A12A34(v6 << 6);
  *(void *)(a1 + 24) = v10;
  if (v10)
  {
    uint64_t result = 0;
    *(void *)(a1 + 36) = -1;
    *(_DWORD *)(a1 + 44) = -1;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(unsigned char *)(a1 + 112) = 0;
  }
  else
  {
LABEL_7:
    sub_221A1473C(a1);
    return 4294967188;
  }
  return result;
}

void sub_221A1473C(uint64_t a1)
{
  int v2 = *(void **)(a1 + 16);
  if (v2)
  {
    j__free(v2);
    *(void *)(a1 + 16) = 0;
  }
  unsigned int v3 = *(void **)(a1 + 24);
  if (v3)
  {
    j__free(v3);
    *(void *)(a1 + 24) = 0;
  }
}

uint64_t sub_221A1477C(uint64_t a1, int a2, int a3)
{
  int v4 = a2 + 15;
  int v5 = a3 + 15;
  uint64_t v6 = sub_221A12A34(464 * ((a3 + 15) >> 4) * ((a2 + 15) >> 4));
  *(void *)(a1 + 8) = v6;
  if (!v6) {
    return 4294967188;
  }
  *(_DWORD *)a1 = v4 >> 4;
  *(_DWORD *)(a1 + 4) = v5 >> 4;
  *(void *)(a1 + 28) = -1;
  sub_221A147F4(a1);
  return 0;
}

uint64_t sub_221A147F4(uint64_t result)
{
  *(void *)(result + 24) = 0xFFFFFFFF00000000;
  uint64_t v1 = (*(_DWORD *)(result + 4) * *(_DWORD *)result);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = 0;
    for (uint64_t i = 0; i != v1; ++i)
    {
      uint64_t v4 = 0;
      uint64_t v5 = *(void *)(result + 8);
      uint64_t v6 = (_DWORD *)(v5 + 464 * i);
      _DWORD *v6 = 0x7FFFFFFF;
      v6[3] = 0;
      uint64_t v7 = v5 + v2;
      do
      {
        uint64_t v8 = v7 + v4;
        *(_DWORD *)(v8 + 16) = 0x7FFFFFFF;
        *(_WORD *)(v8 + 40) = 8224;
        v4 += 28;
      }
      while (v4 != 448);
      v2 += 464;
    }
  }
  return result;
}

void sub_221A14864(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    j__free(v2);
    *(void *)(a1 + 8) = 0;
  }
}

uint64_t sub_221A14894(unsigned __int16 *a1, int a2, int a3, int a4)
{
  a1[1] = a2;
  *a1 = a3;
  int v6 = a3 * a2;
  *((_DWORD *)a1 + 1) = a3 * a2;
  memset_pattern16(a1 + 16, &unk_221A3C180, 0x800uLL);
  memset_pattern16(a1 + 502, &unk_221A3C740, 0x64uLL);
  memset_pattern16(a1 + 506, &unk_221A3C750, 0x54uLL);
  memset_pattern16(a1 + 518, &unk_221A36290, 0x24uLL);
  *((_DWORD *)a1 + 266) = 0;
  *((void *)a1 + 132) = 0;
  *((_OWORD *)a1 + 65) = 0u;
  uint64_t v7 = sub_221A12A34(16 * v6);
  *((void *)a1 + 1) = v7;
  *((void *)a1 + 2) = 0;
  bzero(v7, 16 * v6);
  uint64_t v8 = sub_221A12A34(16 * a4 * *a1);
  *((void *)a1 + 3) = v8;
  if (v7) {
    unsigned int v9 = 1;
  }
  else {
    unsigned int v9 = 2;
  }
  if (v8) {
    uint64_t v10 = v7 == 0;
  }
  else {
    uint64_t v10 = v9;
  }
  if (v10)
  {
    j__free(*((void **)a1 + 1));
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    j__free(*((void **)a1 + 3));
    *((void *)a1 + 3) = 0;
  }
  return v10;
}

void sub_221A149B0(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  j__free(*(void **)(a1 + 24));
  *(void *)(a1 + 24) = 0;
}

uint64_t sub_221A149E8(uint64_t *a1, int a2, unsigned int a3, int a4, int a5, uint64_t a6)
{
  uint64_t v12 = sub_221A12A5C((void *)0x1C70);
  uint64_t v13 = (uint64_t)v12;
  if (!v12
    || ((bzero(v12, 0x1C70uLL),
         *(void *)(v13 + 16) = sub_221A34144(),
         uint64_t v14 = sub_221A341E8(),
         *(void *)(v13 + 24) = v14,
         *(void *)(v13 + 16))
      ? (BOOL v15 = v14 == 0)
      : (BOOL v15 = 1),
        v15))
  {
    uint64_t v16 = 4294967188;
  }
  else
  {
    *(_DWORD *)uint64_t v13 = 0;
    *(unsigned char *)(v13 + 4) = 1;
    *(void *)(v13 + 8) = 0xFFFFFFFF00000000;
    if (a4 == 2)
    {
      uint64_t v16 = 0;
      *(unsigned char *)uint64_t v13 = 1;
      goto LABEL_9;
    }
    uint64_t v16 = sub_22191ACA8(a2, a3, v13 + 32, a4, a5);
    if (!v16) {
      sub_221A15B70(v13 + 1152, (-a2 & 0xF) + a2, (-a3 & 0xF) + a3, a6, a4);
    }
  }
  sub_221A14C20(v13);
  uint64_t v13 = 0;
LABEL_9:
  *a1 = v13;
  return v16;
}

void sub_221A14C20(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = *(pthread_mutex_t **)(a1 + 16);
    if (v2) {
      sub_221A34190(v2);
    }
    unsigned int v3 = *(pthread_cond_t **)(a1 + 24);
    if (v3) {
      sub_221A34234(v3);
    }
    sub_22191B000(a1 + 32);
    sub_221A15CBC(a1 + 1152);
    sub_221A25218((void **)(a1 + 6624));
    sub_221A14864(a1 + 6808);
    sub_221A1473C(a1 + 6848);
    *(void *)(a1 + 1376) = 0;
    *(_OWORD *)(a1 + 1360) = 0u;
    *(_OWORD *)(a1 + 1344) = 0u;
    *(_OWORD *)(a1 + 1328) = 0u;
    *(_OWORD *)(a1 + 1312) = 0u;
    *(_OWORD *)(a1 + 1296) = 0u;
    *(_OWORD *)(a1 + 1280) = 0u;
    *(_OWORD *)(a1 + 1264) = 0u;
    sub_221A0C3F4(a1 + 1432);
    sub_22190E9E4(a1 + 6608);
    sub_221A149B0(a1 + 4528);
    uint64_t v4 = *(void **)(a1 + 7264);
    if (v4) {
      j__free(v4);
    }
    uint64_t v5 = *(void **)(a1 + 1392);
    if (v5)
    {
      j__free(v5);
      *(void *)(a1 + 1392) = 0;
    }
    int v6 = *(void **)(a1 + 1400);
    if (v6)
    {
      j__free(v6);
      *(void *)(a1 + 1400) = 0;
    }
    uint64_t v7 = *(void **)(a1 + 1408);
    if (v7)
    {
      j__free(v7);
      *(void *)(a1 + 1408) = 0;
    }
    uint64_t v8 = *(void **)(a1 + 1416);
    if (v8)
    {
      j__free(v8);
      *(void *)(a1 + 1416) = 0;
    }
    unsigned int v9 = *(void **)(a1 + 1424);
    if (v9)
    {
      j__free(v9);
      *(void *)(a1 + 1424) = 0;
    }
    j__free((void *)a1);
  }
}

uint64_t sub_221A14D48(uint64_t a1, int a2, int a3, unsigned int a4, int a5, int a6, unsigned int a7, char a8, uint64_t a9, char a10)
{
  *(unsigned char *)(a1 + 60) = a10;
  *(void *)a1 = a9;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 28) = a2;
  *(_DWORD *)(a1 + 48) = a2;
  *(_DWORD *)(a1 + 52) = a2;
  *(_DWORD *)(a1 + 56) = 0;
  uint64_t v16 = sub_221A12A48(0x7F8uLL);
  *(void *)(a1 + 32) = v16;
  if (!v16 || (uint64_t v17 = sub_221A12A48(0x7F8uLL), (*(void *)(a1 + 40) = v17) == 0))
  {
    uint64_t v25 = 4294967188;
LABEL_12:
    sub_221A14EBC(a1);
    return v25;
  }
  if (*(_DWORD *)(a1 + 28))
  {
    uint64_t v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = sub_221A149E8((uint64_t *)(*(void *)(a1 + 32) + v18), a3, a4, a5, a6, a7);
      if (v20) {
        break;
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 32) + v18);
      *(unsigned char *)(v21 + 1363) = a8;
      *(unsigned char *)(v21 + 35) = a8;
      *(void *)(*(void *)(a1 + 40) + v18) = *(void *)(*(void *)(a1 + 32) + v18);
      ++v19;
      v18 += 8;
      if (v19 >= *(unsigned int *)(a1 + 28)) {
        goto LABEL_7;
      }
    }
    uint64_t v25 = v20;
    goto LABEL_12;
  }
LABEL_7:
  LODWORD(v22) = *(_DWORD *)(a1 + 48);
  if (v22)
  {
    unint64_t v23 = 0;
    do
    {
      uint64_t v24 = *(void *)(*(void *)(a1 + 40) + 8 * v23);
      sub_221A14FE4(v24);
      *(void *)(*(void *)(a1 + 32) + 8 * v23++) = v24;
      unint64_t v22 = *(unsigned int *)(a1 + 48);
    }
    while (v23 < v22);
  }
  uint64_t v25 = 0;
  *(_DWORD *)(a1 + 8) = a3;
  *(_DWORD *)(a1 + 12) = a4;
  *(_DWORD *)(a1 + 16) = a5;
  *(_DWORD *)(a1 + 20) = a6;
  *(_DWORD *)(a1 + 28) = v22;
  *(_DWORD *)(a1 + 24) = a7;
  return v25;
}

void sub_221A14EBC(uint64_t a1)
{
  if (*(void *)(a1 + 40) && *(_DWORD *)(a1 + 48))
  {
    unint64_t v2 = 0;
    do
    {
      sub_221A14C20(*(void *)(*(void *)(a1 + 40) + 8 * v2));
      *(void *)(*(void *)(a1 + 40) + 8 * v2++) = 0;
    }
    while (v2 < *(unsigned int *)(a1 + 48));
  }
  j__free(*(void **)(a1 + 32));
  *(void *)(a1 + 32) = 0;
  j__free(*(void **)(a1 + 40));
  *(void *)(a1 + 40) = 0;
}

uint64_t sub_221A14F2C(uint64_t a1, char a2)
{
  uint64_t v6 = 0;
  if ((*(_DWORD *)(a1 + 48) - 255) < 0xFFFFFF00) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = sub_221A149E8(&v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), *(_DWORD *)(a1 + 16), *(_DWORD *)(a1 + 20), *(unsigned int *)(a1 + 24));
  if (!result)
  {
    uint64_t v5 = v6;
    *(unsigned char *)(v6 + 1363) = a2;
    *(unsigned char *)(v5 + 35) = a2;
    sub_221A14FE4(v5);
    uint64_t result = 0;
    *(void *)(*(void *)(a1 + 40) + 8 * *(unsigned int *)(a1 + 48)) = v5;
    *(void *)(*(void *)(a1 + 32) + 8 * *(unsigned int *)(a1 + 28)) = v5;
    ++*(_DWORD *)(a1 + 48);
    ++*(_DWORD *)(a1 + 28);
  }
  return result;
}

uint64_t sub_221A14FE4(uint64_t a1)
{
  *(unsigned char *)(a1 + 4) = 1;
  uint64_t v9 = 0;
  unint64_t v2 = (_WORD *)(a1 + 6980);
  __int16 v10 = 1;
  char v14 = 0;
  sub_221A15280((uint64_t)&v9, 3, 0, 2u);
  char v3 = 0;
  *(unsigned char *)(a1 + 1369) = v9;
  *(unsigned char *)(a1 + 1371) = BYTE4(v9);
  *(unsigned char *)(a1 + 1370) = BYTE5(v9);
  *(unsigned char *)(a1 + 1374) = v11;
  *(unsigned char *)(a1 + 1364) = 0;
  *(_WORD *)(a1 + 1366) = v10;
  if ((v12 - 6) <= 0xF) {
    char v3 = byte_221A3C1A0[v12 - 6];
  }
  *(unsigned char *)(a1 + 1375) = v3;
  *(unsigned char *)(a1 + 1382) = v13;
  *(unsigned char *)(a1 + 1381) = v14;
  *(unsigned char *)(a1 + 1372) = 0;
  *(_WORD *)(a1 + 1376) = 256;
  *(unsigned char *)(a1 + 1380) = 0;
  *(_DWORD *)(a1 + 12) = -1;
  *(_WORD *)(a1 + 1) = 0;
  *unint64_t v2 = 0;
  *(_DWORD *)(a1 + 6984) = 0;
  v2[4] = 0;
  *(_DWORD *)(a1 + 1264) = 0;
  if (!*(unsigned char *)a1)
  {
    uint64_t v4 = *(void *)(a1 + 416);
    if (v4)
    {
      *(_DWORD *)(v4 + 72) = 1;
      *(void *)(v4 + 64) = 0x100000001;
      *(_OWORD *)(v4 + 128) = xmmword_221A366C0;
    }
    uint64_t v5 = *(void *)(a1 + 424);
    if (v5)
    {
      *(_DWORD *)(v5 + 72) = 1;
      *(void *)(v5 + 64) = 0x100000001;
      *(_OWORD *)(v5 + 128) = xmmword_221A366C0;
    }
    uint64_t v6 = *(void *)(a1 + 432);
    if (v6)
    {
      *(_DWORD *)(v6 + 72) = 1;
      *(void *)(v6 + 64) = 0x100000001;
      *(_OWORD *)(v6 + 128) = xmmword_221A366C0;
    }
    sub_221A15D6C(a1 + 1152);
  }
  uint64_t v7 = *(void *)(a1 + 1352);
  if (v7)
  {
    *(void *)(v7 + 1352) = 0;
    *(void *)(a1 + 1352) = 0;
  }
  *(_DWORD *)(a1 + 6892) = -1;
  *(void *)(a1 + 6884) = -1;
  *(_OWORD *)(a1 + 6912) = 0u;
  *(_OWORD *)(a1 + 6928) = 0u;
  *(_OWORD *)(a1 + 6944) = 0u;
  *(unsigned char *)(a1 + 6960) = 0;
  sub_2219F8D18(a1 + 6996);
  return sub_2219F9690(a1 + 7224);
}

uint64_t sub_221A1518C(uint64_t a1, char a2)
{
  int v3 = *(_DWORD *)(a1 + 28);
  if (!v3)
  {
    unint64_t v8 = *(unsigned int *)(a1 + 48);
    if (!v8) {
      goto LABEL_20;
    }
    for (unint64_t i = 0; i < v8; ++i)
    {
      uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8 * i);
      if (v10)
      {
        if (!*(unsigned char *)(v10 + 1) && !*(unsigned char *)(v10 + 2) && !*(_DWORD *)(v10 + 8))
        {
          sub_221A14FE4(v10);
          unint64_t v11 = *(unsigned int *)(a1 + 28);
          unint64_t v8 = *(unsigned int *)(a1 + 48);
          if (v11 < v8)
          {
            uint64_t v12 = *(void *)(a1 + 32);
            *(_DWORD *)(a1 + 28) = v11 + 1;
            *(void *)(v12 + 8 * v11) = v10;
            unint64_t v8 = *(unsigned int *)(a1 + 48);
          }
        }
      }
      else
      {
        ++*(_DWORD *)(a1 + 56);
      }
    }
    int v3 = *(_DWORD *)(a1 + 28);
    if (!v3)
    {
LABEL_20:
      if (sub_221A14F2C(a1, a2)) {
        return 0;
      }
      int v3 = *(_DWORD *)(a1 + 28);
      if (!v3) {
        return 0;
      }
    }
  }
  uint64_t v4 = *(void *)(a1 + 32);
  unsigned int v5 = v3 - 1;
  *(_DWORD *)(a1 + 28) = v5;
  uint64_t result = *(void *)(v4 + 8 * v5);
  *(void *)(v4 + 8 * v5) = 0;
  if (result) {
    *(_OWORD *)(result + 64) = *(_OWORD *)(result + 80);
  }
  return result;
}

uint64_t sub_221A15280(uint64_t result, int a2, unsigned __int8 a3, unsigned __int8 a4)
{
  int v4 = 0;
  if (a2 == 19) {
    int v5 = 0;
  }
  else {
    int v5 = a2;
  }
  *(_DWORD *)(result + 12) = v5;
  char v6 = 0;
  char v7 = 0;
  char v8 = 0;
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 19:
      char v6 = 1;
      int v4 = 2;
      char v7 = 1;
      goto LABEL_15;
    case 3:
    case 17:
    case 22:
    case 23:
      LOBYTE(v4) = 1;
      goto LABEL_7;
    case 4:
    case 18:
LABEL_7:
      char v6 = 0;
      char v7 = v4;
      char v8 = 1;
      int v4 = 2;
      break;
    case 5:
      LOBYTE(v4) = 1;
      goto LABEL_11;
    case 6:
      int v4 = 0;
      char v6 = 0;
      char v8 = 0;
      char v7 = 1;
      break;
    case 7:
LABEL_11:
      char v6 = 0;
      char v7 = v4;
      char v8 = 1;
      int v4 = 0;
      break;
    case 8:
      break;
    case 9:
      LOBYTE(v4) = 1;
      goto LABEL_14;
    case 10:
    case 13:
    case 15:
    case 20:
      LOBYTE(v4) = 1;
      goto LABEL_9;
    case 11:
LABEL_14:
      char v6 = 0;
      char v7 = v4;
      int v4 = 1;
LABEL_15:
      char v8 = 1;
      break;
    case 12:
    case 14:
    case 16:
    case 21:
LABEL_9:
      char v6 = 0;
      char v8 = 0;
      char v7 = v4;
      int v4 = 1;
      break;
    default:
      char v6 = 0;
      char v7 = 0;
      char v8 = 0;
      break;
  }
  *(_DWORD *)uint64_t result = v4;
  *(unsigned char *)(result + 4) = v6;
  *(unsigned char *)(result + 5) = v6;
  *(unsigned char *)(result + 6) = v7;
  *(unsigned char *)(result + 10) = v8;
  *(_WORD *)(result + 7) = -256;
  *(unsigned char *)(result + 9) = 0;
  char v9 = a3;
  if (a3 >= 0xFu) {
    char v9 = 15;
  }
  if (a4 >= 0xFu) {
    char v10 = 15;
  }
  else {
    char v10 = a4;
  }
  *(unsigned char *)(result + 16) = v9 | (16 * v10);
  *(unsigned char *)(result + 17) = (a2 - 17) < 2;
  return result;
}

uint64_t sub_221A15410(uint64_t a1)
{
  unint64_t v2 = sub_221A34144();
  *(void *)a1 = v2;
  if (!v2) {
    return 4294967188;
  }
  int v3 = sub_221A34144();
  *(void *)(a1 + 8) = v3;
  if (!v3) {
    return 4294967188;
  }
  uint64_t result = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double sub_221A15460(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 56))
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = *(void *)(a1 + 48);
      uint64_t v4 = *(void *)(v3 + 8 * v2);
      if (v4)
      {
        MEMORY[0x223C8C880](v4, 0x1000C8077774924);
        uint64_t v3 = *(void *)(a1 + 48);
      }
      *(void *)(v3 + 8 * v2++) = 0;
    }
    while (v2 != *(_DWORD *)(a1 + 56));
  }
  sub_221A34190(*(pthread_mutex_t **)a1);
  sub_221A34190(*(pthread_mutex_t **)(a1 + 8));
  uint64_t v5 = *(void *)(a1 + 48);
  if (v5) {
    MEMORY[0x223C8C880](v5, 0x80C80B8603338);
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6) {
    MEMORY[0x223C8C880](v6, 0x80C80B8603338);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    MEMORY[0x223C8C880](v7, 0x80C80B8603338);
  }
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

pthread_mutex_t *sub_221A15534(uint64_t a1, uint64_t a2, int a3)
{
  sub_221A341D0(*(pthread_mutex_t **)a1);
  uint64_t v6 = a3;
  if (a3 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *(unsigned int *)(a1 + 24);
      uint64_t v9 = *(void *)(a1 + 16);
      uint64_t v10 = 0;
      if (v8)
      {
        while (*(void *)(a2 + 8 * v7) != *(void *)(v9 + 8 * v10))
        {
          if (v8 == ++v10)
          {
            uint64_t v10 = *(unsigned int *)(a1 + 24);
            goto LABEL_8;
          }
        }
        uint64_t v10 = v10;
      }
LABEL_8:
      int v11 = v8 - 1;
      *(_DWORD *)(a1 + 24) = v11;
      *(void *)(v9 + 8 * v10) = *(void *)(v9 + 8 * v11);
      ++v7;
    }
    while (v7 != a3);
  }
  sub_221A341DC(*(pthread_mutex_t **)a1);
  sub_221A341D0(*(pthread_mutex_t **)(a1 + 8));
  if (a3 >= 1)
  {
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = *(void *)(a2 + 8 * v12);
      int v14 = *(_DWORD *)(a1 + 40);
      if (v14 == *(_DWORD *)(a1 + 44))
      {
        *(_DWORD *)(a1 + 44) = 2 * v14 + 2;
        operator new[]();
      }
      uint64_t v15 = *(void *)(a1 + 32);
      *(_DWORD *)(a1 + 40) = v14 + 1;
      *(void *)(v15 + 8 * v14) = v13;
      ++v12;
    }
    while (v12 != v6);
  }
  uint64_t v16 = *(pthread_mutex_t **)(a1 + 8);
  return sub_221A341DC(v16);
}

uint64_t sub_221A156BC(uint64_t a1)
{
  if (!*(_DWORD *)(a1 + 40)) {
    goto LABEL_6;
  }
  sub_221A341D0(*(pthread_mutex_t **)(a1 + 8));
  int v2 = *(_DWORD *)(a1 + 40);
  if (!v2)
  {
    sub_221A341DC(*(pthread_mutex_t **)(a1 + 8));
    goto LABEL_6;
  }
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = v2 - 1;
  *(_DWORD *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(v3 + 8 * v4);
  sub_221A341DC(*(pthread_mutex_t **)(a1 + 8));
  if (!v5) {
LABEL_6:
  }
    operator new[]();
  sub_221A341D0(*(pthread_mutex_t **)a1);
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6 == *(_DWORD *)(a1 + 28))
  {
    *(_DWORD *)(a1 + 28) = 2 * v6 + 2;
    operator new[]();
  }
  uint64_t v7 = *(void *)(a1 + 16);
  *(_DWORD *)(a1 + 24) = v6 + 1;
  *(void *)(v7 + 8 * v6) = v5;
  sub_221A341DC(*(pthread_mutex_t **)a1);
  return v5;
}

uint64_t sub_221A15A04(uint64_t a1)
{
  *(void *)(a1 + 2064) = 0;
  return a1;
}

uint64_t sub_221A15A44(uint64_t a1, unsigned int a2)
{
  int v4 = *(_DWORD *)(a1 + 2068);
  if (v4 >= 16)
  {
    uint64_t result = *(void *)(a1 + 8);
  }
  else
  {
    *(_DWORD *)(a1 + 2068) = (((16 * *(_DWORD *)(a1 + 2072) + 255) >> 8) + 255) & 0x1FFFF00;
    *(void *)(a1 + 16 + 8 * *(int *)(a1 + 2064)) = sub_221A156BC(*(void *)a1);
    uint64_t v5 = *(int *)(a1 + 2064);
    uint64_t result = *(void *)(a1 + 16 + 8 * v5);
    int v8 = v5 + 1;
    BOOL v7 = -v8 < 0;
    int v8 = v8;
    if (!v7) {
      int v8 = --(char)v8;
    }
    *(_DWORD *)(a1 + 2064) = v8;
    int v4 = *(_DWORD *)(a1 + 2068);
  }
  *(void *)(a1 + 8) = result + 16 * a2;
  *(_DWORD *)(a1 + 2068) = v4 - a2;
  return result;
}

uint64_t sub_221A15AE4(uint64_t a1)
{
  if (*(int *)(a1 + 2068) >= 16) {
    return *(void *)(a1 + 8);
  }
  *(_DWORD *)(a1 + 2068) = (((16 * *(_DWORD *)(a1 + 2072) + 255) >> 8) + 255) & 0x1FFFF00;
  *(void *)(a1 + 16 + 8 * *(int *)(a1 + 2064)) = sub_221A156BC(*(void *)a1);
  uint64_t v2 = *(int *)(a1 + 2064);
  uint64_t result = *(void *)(a1 + 16 + 8 * v2);
  *(void *)(a1 + 8) = result;
  int v5 = v2 + 1;
  BOOL v4 = -v5 < 0;
  int v5 = v5;
  if (!v4) {
    int v5 = --(char)v5;
  }
  *(_DWORD *)(a1 + 2064) = v5;
  return result;
}

void sub_221A15B70(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  unsigned int v5 = (a2 + 15) >> 4;
  *(_DWORD *)(a1 + 12) = (((a3 + 15) >> 4) * v5) << ((a5 - 3) < 2);
  *(_DWORD *)(a1 + 16) = v5;
  operator new[]();
}

uint64_t sub_221A15CBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  if (v2)
  {
    MEMORY[0x223C8C880](v2, 0x20C8093837F09);
    *(void *)(a1 + 104) = 0;
  }
  uint64_t result = *(void *)a1;
  if (*(void *)a1)
  {
    if (!*(_DWORD *)(a1 + 8)) {
      goto LABEL_10;
    }
    unint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)a1;
      uint64_t v6 = *(void *)(*(void *)a1 + 8 * v4);
      if (v6)
      {
        uint64_t v7 = sub_221A15A04(v6);
        MEMORY[0x223C8C890](v7, 0x1020C40B61593EFLL);
        uint64_t v5 = *(void *)a1;
      }
      *(void *)(v5 + 8 * v4++) = 0;
    }
    while (v4 < *(unsigned int *)(a1 + 8));
    uint64_t result = *(void *)a1;
    if (*(void *)a1) {
LABEL_10:
    }
      uint64_t result = MEMORY[0x223C8C880]();
    *(void *)a1 = 0;
  }
  return result;
}

double sub_221A15D6C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 8))
  {
    unint64_t v2 = 0;
    do
    {
      uint64_t v3 = *(void *)(*(void *)a1 + 8 * v2);
      sub_221A15534(*(void *)v3, v3 + 16, *(_DWORD *)(v3 + 2064));
      double result = 0.0;
      *(void *)(v3 + 2064) = 0;
      ++v2;
    }
    while (v2 < *(unsigned int *)(a1 + 8));
  }
  return result;
}

uint64_t sub_221A15DD0(uint64_t *a1)
{
  uint64_t v2 = sub_221A12AA0(49152);
  uint64_t v3 = v2;
  if (v2)
  {
    unint64_t v4 = (int8x16_t *)(v2 + 28672);
    memcpy((void *)(v2 + 28672), &unk_221A3C770, 0x1000uLL);
    LOWORD(v6) = 0;
    v7.i64[0] = 0x8000800080008;
    v7.i64[1] = 0x8000800080008;
    v8.i64[0] = -1;
    v8.i64[1] = -1;
    uint64_t v9 = (int16x8_t *)v3;
    do
    {
      int8x16_t v10 = *v4;
      int16x8_t v11 = vshlq_s16((int16x8_t)vzip2q_s8(v10, v10), v7);
      int16x8_t v12 = vshlq_s16((int16x8_t)vzip1q_s8(v10, v10), v7);
      int8x16_t v13 = vqmovn_high_s16(vqmovn_s16(v12), v11);
      int16x8_t v14 = vshlq_s16(v11, v8);
      int16x8_t v15 = vshlq_s16(v12, v8);
      int8x16_t v16 = vqmovn_high_s16(vqmovn_s16(v15), v14);
      int32x4_t v17 = (int32x4_t)vshlq_s16(v14, v8);
      int8x16_t v18 = vqmovn_high_s16(vqmovn_s16(vshlq_s16(v15, v8)), (int16x8_t)v17);
      int v19 = 1;
      uint64_t v20 = v9;
      do
      {
        if (v19 != 8)
        {
          v15.i32[0] = 0;
          v17.i32[0] = v19 & 8;
          v5.i32[0] = v19 & 4;
          int32x4_t v21 = vdupq_lane_s32((int32x2_t)*(_OWORD *)&vceqq_s32(v5, (int32x4_t)v15), 0);
          int8x16_t v22 = vandq_s8(v10, (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmvnq_s8((int8x16_t)vceqq_s32(v17, (int32x4_t)v15)), 0));
          int8x16_t v23 = vbslq_s8((int8x16_t)v21, v22, vaddq_s8(v13, v22));
          v21.i32[0] = v19 & 2;
          int32x4_t v24 = vdupq_lane_s32((int32x2_t)*(_OWORD *)&vceqq_s32(v21, (int32x4_t)v15), 0);
          int32x4_t v17 = (int32x4_t)vbslq_s8((int8x16_t)v24, v23, vaddq_s8(v16, v23));
          v24.i32[0] = v19 & 1;
          int8x16_t v25 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vceqq_s32(v24, (int32x4_t)v15), 0);
          int32x4_t v5 = (int32x4_t)vaddq_s8(v18, (int8x16_t)v17);
          int16x8_t v15 = (int16x8_t)vbslq_s8(v25, (int8x16_t)v17, (int8x16_t)v5);
          *uint64_t v20 = v15;
        }
        ++v19;
        v20 += 256;
      }
      while (v19 != 13);
      ++v9;
      ++v4;
      unsigned int v6 = (unsigned __int16)(v6 + 16);
    }
    while (v6 < 0x1000);
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = 4294967188;
  }
  if (*a1)
  {
    sub_221A12AFC(*a1);
    *a1 = 0;
  }
  if (v3) {
    *a1 = v3;
  }
  return v26;
}

uint64_t sub_221A15F34(uint64_t a1, uint64_t a2, int8x16_t *a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11, unsigned char *a12, uint64_t a13)
{
  if (*(_DWORD *)(a2 + 136))
  {
    unsigned int v15 = *(unsigned __int16 *)(a1 + 132);
    uint64_t v16 = *(unsigned __int16 *)(a1 + 100);
    sub_22190EAC0(*(void *)(a1 + 32), *(void *)(a1 + 40), v15, 0, v16, *(unsigned __int16 *)(a1 + 136), *(unsigned __int16 *)(a1 + 152), a3, a4);
    return sub_221A16030((uint64_t)a3, (uint64_t)a3, a4, v15, v16, a10, a11, a12, a13);
  }
  else
  {
    return sub_221A1634C(a1, a2, (uint64_t)a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  }
}

uint64_t sub_221A16030(uint64_t a1, uint64_t a2, unsigned int a3, __int16 a4, uint64_t a5, unsigned int a6, char a7, unsigned char *a8, uint64_t a9)
{
  if (!*a8) {
    return 0xFFFFFFFFLL;
  }
  unsigned int v9 = a8[2];
  if (!a8[2]) {
    return 0xFFFFFFFFLL;
  }
  unsigned __int16 v16 = (a4 + 15) & 0xFFF0;
  int32x4_t v17 = (unsigned __int16 *)malloc_type_malloc(v16 >> 3, 0x1000040BDFB0063uLL);
  if (!v17)
  {
    fwrite("{PostProcDitherNoiseUpon2VUY} Error on memory allocation: noiseBlkPosPtr!\n", 0x4AuLL, 1uLL, (FILE *)*MEMORY[0x263EF8348]);
    return 4294967188;
  }
  int8x16_t v18 = v17;
  int v19 = malloc_type_malloc(4uLL, 0x100004052888210uLL);
  if (!v19)
  {
    fwrite("{PostProcDitherNoiseUpon2VUY} Error on memory allocation: prngByLFSRPtr!\n", 0x49uLL, 1uLL, (FILE *)*MEMORY[0x263EF8348]);
    free(v18);
    return 4294967188;
  }
  uint64_t v20 = v19;
  if (v9 > 0xC)
  {
    fprintf((FILE *)*MEMORY[0x263EF8348], "{PostProcDitherNoiseUpon2VUY} Dithering noise strength (=%u) not currently supported.\n", v9);
    a5 = 4294966630;
  }
  else
  {
    *int v19 = dword_221A3D770[(16 * (a7 & 0xF)) | (a6 >> 1) & 0xF] & 0x7FFFFFFF;
    if (a5)
    {
      int v21 = 0;
      unsigned __int16 v22 = 0;
      uint64_t v23 = 16 * a3;
      uint64_t v24 = (unsigned __int16)a3;
      uint64_t v25 = a3;
      v26.i64[0] = 0xB000B000B000BLL;
      v26.i64[1] = 0xB000B000B000BLL;
      v27.i64[0] = 0x7000700070007;
      v27.i64[1] = 0x7000700070007;
      do
      {
        if (v16)
        {
          LOWORD(v28) = 0;
          int v29 = 0;
          do
          {
            unsigned int v30 = 2 * *v19;
            int v31 = ((*v19 >> 30) ^ (*v19 >> 27)) & 1 | (2 * (*v19 & 0x3FFFFFFF));
            *int v19 = v31;
            v18[(unsigned __int16)v29++] = (((unsigned __int16)v31 % 0x34u) | (((HIWORD(v30) & 0x7FFF)
                                                                              - 50
                                                                              * ((unsigned __int16)((5243 * (HIWORD(v30) & 0x7FFF)) >> 16) >> 2)) << 6)) & 0xFBC;
            unsigned int v28 = (unsigned __int16)(v28 + 16);
          }
          while (v28 < v16);
        }
        unsigned __int16 v32 = v21 + 16;
        if (v21 + 16 >= a5) {
          uint64_t v33 = (unsigned __int16)(a5 - v22);
        }
        else {
          uint64_t v33 = 16;
        }
        if (v33)
        {
          uint64_t v34 = 0;
          uint64_t v35 = a2;
          uint64_t v36 = a1;
          do
          {
            if (v16)
            {
              uint64_t v37 = 0;
              LOWORD(v38) = 0;
              int v39 = 0;
              do
              {
                uint64_t v40 = (int8x16_t *)(v35 + v37);
                int8x16_t v41 = *(int8x16_t *)(a9
                                   + (((v9 << 12) + 268431360) & 0xFFFF000)
                                   + ((unint64_t)(v34 & 0x3FF) << 6)
                                   + v18[(unsigned __int16)v39]);
                v42.i16[0] = *(_OWORD *)(v36 + v37);
                v42.i16[1] = BYTE2(*(_OWORD *)(v36 + v37));
                v42.i16[2] = BYTE4(*(void *)(v36 + v37));
                v42.i16[3] = BYTE6(*(void *)(v36 + v37));
                v42.i16[4] = *(void *)(v36 + v37 + 8);
                v42.i16[5] = BYTE2(*(void *)(v36 + v37 + 8));
                v42.i16[6] = BYTE12(*(_OWORD *)(v36 + v37));
                v42.i16[7] = BYTE14(*(_OWORD *)(v36 + v37));
                v43.i16[0] = *(_OWORD *)(v36 + v37 + 16);
                v43.i16[1] = BYTE2(*(_OWORD *)(v36 + v37 + 16));
                v43.i16[2] = BYTE4(*(void *)(v36 + v37 + 16));
                v43.i16[3] = BYTE6(*(void *)(v36 + v37 + 16));
                v43.i16[4] = *(void *)(v36 + v37 + 24);
                v43.i16[5] = BYTE2(*(void *)(v36 + v37 + 24));
                v43.i16[6] = BYTE12(*(_OWORD *)(v36 + v37 + 16));
                v43.i16[7] = BYTE14(*(_OWORD *)(v36 + v37 + 16));
                int8x16_t v44 = vqmovun_high_s16(vqmovun_s16(vaddq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v36 + v37), v27), vshlq_s16((int16x8_t)vzip1q_s8(v41, v41), v26))), vaddq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(v36 + v37 + 16), v27), vshlq_s16((int16x8_t)vzip2q_s8(v41, v41), v26)));
                *uint64_t v40 = vorrq_s8(vzip1q_s8((int8x16_t)0, v44), v42);
                v40[1] = vorrq_s8(vzip2q_s8((int8x16_t)0, v44), v43);
                ++v39;
                unsigned int v38 = (unsigned __int16)(v38 + 16);
                v37 += 32;
              }
              while (v38 < v16);
            }
            ++v34;
            v35 += v25;
            v36 += v24;
          }
          while (v34 != v33);
        }
        a2 += v23;
        a1 += (16 * v24);
        int v21 = v32;
        unsigned __int16 v22 = v32;
      }
      while (v32 < a5);
      a5 = 0;
    }
  }
  free(v18);
  free(v20);
  return a5;
}

uint64_t sub_221A1634C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11, unsigned char *a12, uint64_t a13)
{
  int v13 = a12[2];
  if (*a12) {
    BOOL v14 = v13 == 0;
  }
  else {
    BOOL v14 = 1;
  }
  if (v14) {
    return 0xFFFFFFFFLL;
  }
  int v17 = *(_DWORD *)(a1 + 100);
  uint64_t v18 = *(unsigned __int16 *)(a1 + 136);
  uint64_t v19 = *(unsigned __int16 *)(a1 + 152);
  uint64_t v20 = *(void *)(a1 + 32);
  uint64_t v21 = *(void *)(a1 + 40);
  unsigned int v22 = (*(_DWORD *)(a1 + 132) + 15) & 0xFFF0;
  uint64_t v23 = sub_221A12A34(v22 >> 3);
  if (!v23) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v24 = v23;
  uint64_t v67 = v18;
  uint64_t v25 = sub_221A12A34(4uLL);
  if (v25)
  {
    int16x8_t v26 = v25;
    if ((v13 - 1) > 0xB)
    {
      uint64_t v61 = 4294966630;
    }
    else
    {
      *uint64_t v25 = dword_221A3D770[(16 * (a11 & 0xF)) | (a10 >> 1) & 0xF] & 0x7FFFFFFF;
      unsigned int v65 = (v17 + 15) & 0xFFF0;
      if (v65)
      {
        LOWORD(v27) = 0;
        uint64_t v64 = 16 * a4;
        uint64_t v63 = (16 * v67);
        uint64_t v28 = 2 * a4;
        uint64_t v29 = (2 * v67);
        uint64_t v30 = a13 + (((v13 << 12) + 268431360) & 0xFFFF000);
        uint64_t v31 = a4;
        uint64_t v32 = v20 + v67;
        v33.i64[0] = 0xB000B000B000BLL;
        v33.i64[1] = 0xB000B000B000BLL;
        do
        {
          __int16 v66 = v27;
          if (v22)
          {
            LOWORD(v34) = 0;
            int v35 = 0;
            do
            {
              unsigned int v36 = 2 * *v25;
              int v37 = ((*v25 >> 30) ^ (*v25 >> 27)) & 1 | (2 * (*v25 & 0x3FFFFFFF));
              *uint64_t v25 = v37;
              v24[(unsigned __int16)v35++] = (((unsigned __int16)v37 % 0x34u) | (((HIWORD(v36) & 0x7FFF)
                                                                                - 50
                                                                                * ((unsigned __int16)((5243 * (HIWORD(v36) & 0x7FFF)) >> 16) >> 2)) << 6)) & 0xFBC;
              unsigned int v34 = (unsigned __int16)(v34 + 16);
            }
            while (v34 < v22);
          }
          LOWORD(v38) = 0;
          __int16 v39 = 0;
          uint64_t v40 = v32;
          uint64_t v41 = v21;
          uint64_t v42 = v20;
          uint64_t v68 = a3;
          uint64_t v43 = a3;
          do
          {
            if (v22)
            {
              uint64_t v44 = 0;
              uint64_t v45 = 0;
              LOWORD(v46) = 0;
              int v47 = 0;
              do
              {
                uint64_t v48 = (char *)(v43 + v44);
                int v49 = (int8x16_t *)(v30
                                  + (unsigned __int16)v24[(unsigned __int16)v47]
                                  + (unint64_t)((unsigned __int16)(v39 & 0x3FF) << 6));
                int8x16_t v50 = *(int8x16_t *)(v42 + v45);
                int8x16_t v51 = *v49;
                int8x16_t v52 = *(int8x16_t *)(v41 + v45);
                int16x8_t v53 = (int16x8_t)vzip2q_s8(v51, v51);
                int16x8_t v54 = vshlq_s16((int16x8_t)vzip1q_s8(v51, v51), v33);
                int8x8_t v55 = vqmovun_s16(vaddq_s16(v54, (int16x8_t)vzip1q_s8(v50, (int8x16_t)0)));
                vst2_s8(v48, (int8x8x2_t)v52);
                v48 += 16;
                *(int8x16_t *)uint64_t v48 = vzip2q_s8(v52, vqmovun_high_s16(*(int8x8_t *)v54.i8, vaddq_s16(vshlq_s16(v53, v33), (int16x8_t)vzip2q_s8(v50, (int8x16_t)0))));
                int8x16_t v56 = v49[4];
                int8x16_t v57 = *(int8x16_t *)(v40 + v45);
                int8x8_t v58 = vqmovun_s16(vaddq_s16(vshlq_s16((int16x8_t)vzip1q_s8(v56, v56), v33), (int16x8_t)vzip1q_s8(v57, (int8x16_t)0)));
                int16x8_t v59 = vaddq_s16(vshlq_s16((int16x8_t)vzip2q_s8(v56, v56), v33), (int16x8_t)vzip2q_s8(v57, (int8x16_t)0));
                uint64_t v60 = (int8x16_t *)(v43 + v31 + v44);
                vst2_s8(v60->i8, (int8x8x2_t)v52);
                v60[1] = vzip2q_s8(v52, vqmovun_high_s16(*(int8x8_t *)v59.i8, v59));
                ++v47;
                unsigned int v46 = (unsigned __int16)(v46 + 16);
                v45 += 16;
                v44 += 32;
              }
              while (v46 < v22);
            }
            __int16 v39 = v38 + 2;
            v43 += v28;
            v42 += v29;
            v41 += v19;
            unsigned int v38 = (unsigned __int16)(v38 + 2);
            v40 += v29;
          }
          while (v38 < 0x10);
          a3 = v68 + v64;
          v20 += v63;
          v21 += (8 * v19);
          unsigned int v27 = (unsigned __int16)(v66 + 16);
          v32 += v63;
        }
        while (v27 < v65);
      }
      uint64_t v61 = 0;
    }
    j__free(v24);
  }
  else
  {
    uint64_t v61 = 0xFFFFFFFFLL;
    int16x8_t v26 = v24;
  }
  j__free(v26);
  return v61;
}

uint64_t sub_221A16670(uint64_t a1, int a2, int a3, int a4, uint64_t a5)
{
  int v10 = *(unsigned __int8 *)(a5 + 28);
  uint64_t v12 = *(void *)(a5 + 40);
  int16x8_t v11 = *(unsigned __int8 **)(a5 + 48);
  int v13 = *(void **)(a5 + 56);
  __int16 v243 = 0;
  int v14 = *(_DWORD *)(a1 + 32);
  int v15 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v16 = __clz(v14 | 1);
  if (!v14) {
    ++v16;
  }
  unsigned int v17 = (v14 << (v16 + 1)) >> -(char)v16;
  if (!v16) {
    unsigned int v17 = 0;
  }
  unsigned int v18 = v17 + ~(-1 << v16);
  unint64_t v19 = v15 + 2 * v16 + 1;
  char v20 = (v15 + 2 * v16 + 1) & 7;
  uint64_t v21 = (unsigned int *)(*(void *)(a1 + 16) + (v19 >> 3));
  unsigned int v22 = bswap32(*v21);
  if ((unint64_t)v21 > *(void *)(a1 + 24)) {
    uint64_t v21 = *(unsigned int **)(a1 + 24);
  }
  *(void *)(a1 + 16) = v21;
  *(_DWORD *)(a1 + 32) = v22 << v20;
  *(unsigned char *)(a1 + 36) = v20;
  uint64_t result = sub_221A13B08(v10, v18, (char *)&v243 + 1, &v243);
  if (!result)
  {
    *(unsigned char *)uint64_t v12 = v18;
    unsigned int v24 = HIBYTE(v243);
    *(unsigned char *)(v12 + 1) = HIBYTE(v243);
    int v25 = v243;
    *(unsigned char *)(v12 + 2) = v243;
    if (!v24 && v25 == 25)
    {
      sub_221A17658(a1, (uint64_t)v13, a3, a4);
      uint64_t v26 = *(void *)(a5 + 176);
      if (v26) {
        unsigned int v27 = (void *)(v26 + 80);
      }
      else {
        unsigned int v27 = 0;
      }
      *unsigned int v27 = 0x1010101010101010;
      v27[1] = 0x1010101010101010;
      if (!a4 || (a3 & 0xFD) != 1) {
        v27[2] = 0x1010101010101010;
      }
      uint64_t result = 0;
      *(unsigned char *)(*(void *)(a5 + 48) + 272) = 0;
      *(unsigned char *)(v12 + 54) = 0;
      return result;
    }
    *(unsigned char *)(v12 + 3) = 0;
    if (!*(unsigned char *)(a5 + 184) || (uint64_t v28 = *(void *)(a5 + 40), *(unsigned char *)(v28 + 1)) || *(unsigned char *)(v28 + 2))
    {
      int v29 = 0;
    }
    else
    {
      int v29 = *(_DWORD *)(a1 + 32) >> 31;
      unint64_t v78 = *(unsigned __int8 *)(a1 + 36) + 1;
      char v79 = v78 & 7;
      uint64_t v80 = (unsigned int *)(*(void *)(a1 + 16) + (v78 >> 3));
      unsigned int v81 = bswap32(*v80) << (v78 & 7);
      if ((unint64_t)v80 > *(void *)(a1 + 24)) {
        uint64_t v80 = *(unsigned int **)(a1 + 24);
      }
      *(void *)(a1 + 16) = v80;
      *(_DWORD *)(a1 + 32) = v81;
      *(unsigned char *)(a1 + 36) = v79;
      *(unsigned char *)(v12 + 3) = v29;
    }
    uint64_t result = sub_221A13BB4(v24, v25, v29, (uint64_t)v11, *(unsigned __int8 *)(a5 + 31));
    if (!result)
    {
      int v30 = v11[272];
      *(unsigned char *)(*(void *)(a5 + 176) + 126) = *(unsigned char *)(*(void *)(a5 + 48) + 272);
      unsigned int v31 = *((_DWORD *)v11 + 2);
      if (v31 == 3) {
        goto LABEL_259;
      }
      uint64_t v32 = (uint64_t)(v11 + 16);
      uint64_t v33 = *(void *)(a5 + 40);
      if ((*(unsigned char *)(v33 + 1) || *(unsigned char *)(v33 + 2) == 25) && v30 == 4)
      {
        unsigned int v34 = *(unsigned int **)(a1 + 24);
        int v35 = *(_DWORD *)(a1 + 32);
        unsigned int v36 = __clz(v35 | 1);
        if (!v35) {
          ++v36;
        }
        unsigned int v37 = (v35 << (v36 + 1)) >> -(char)v36;
        if (v36) {
          unsigned int v38 = v37;
        }
        else {
          unsigned int v38 = 0;
        }
        unsigned int v39 = v38 + ~(-1 << v36);
        unint64_t v40 = *(unsigned __int8 *)(a1 + 36) + 2 * v36 + 1;
        uint64_t v41 = (unsigned int *)(*(void *)(a1 + 16) + (v40 >> 3));
        unsigned int v42 = *v41;
        *(_DWORD *)(v12 + 4) = v39;
        int v43 = v40 & 7;
        unsigned int v44 = bswap32(v42) << v43;
        if (v41 > v34) {
          uint64_t v41 = v34;
        }
        unsigned int v45 = __clz(v44 | 1);
        if (!v44) {
          ++v45;
        }
        unsigned int v46 = v44 << (v45 + 1) >> -(char)v45;
        if (!v45) {
          unsigned int v46 = 0;
        }
        unsigned int v47 = v46 + ~(-1 << v45);
        unint64_t v48 = v43 + 2 * v45 + 1;
        int v49 = v48 & 7;
        int8x16_t v50 = (unsigned int *)((char *)v41 + (v48 >> 3));
        unsigned int v51 = bswap32(*v50) << (v48 & 7);
        if (v50 > v34) {
          int8x16_t v50 = v34;
        }
        *(_DWORD *)(v12 + 8) = v47;
        unsigned int v52 = __clz(v51 | 1);
        if (!v51) {
          ++v52;
        }
        unsigned int v53 = v51 << (v52 + 1) >> -(char)v52;
        if (!v52) {
          unsigned int v53 = 0;
        }
        unsigned int v54 = v53 + ~(-1 << v52);
        unint64_t v55 = v49 + 2 * v52 + 1;
        int v56 = v55 & 7;
        int8x16_t v57 = (unsigned int *)((char *)v50 + (v55 >> 3));
        unsigned int v58 = bswap32(*v57) << (v55 & 7);
        if (v57 > v34) {
          int8x16_t v57 = v34;
        }
        *(_DWORD *)(v12 + 12) = v54;
        unsigned int v59 = __clz(v58 | 1);
        if (!v58) {
          ++v59;
        }
        unint64_t v60 = v56 + 2 * v59 + 1;
        uint64_t v61 = (unsigned int *)((char *)v57 + (v60 >> 3));
        unsigned int v62 = bswap32(*v61);
        if (v61 <= v34) {
          unsigned int v34 = v61;
        }
        char v63 = v60 & 7;
        unsigned int v64 = v62 << (v60 & 7);
        int v65 = ~(-1 << v59);
        unsigned int v66 = v58 << (v59 + 1) >> -(char)v59;
        if (v59) {
          unsigned int v67 = v66;
        }
        else {
          unsigned int v67 = 0;
        }
        *(_DWORD *)(v12 + 16) = v67 + v65;
        *(void *)(a1 + 16) = v34;
        *(_DWORD *)(a1 + 32) = v64;
        *(unsigned char *)(a1 + 36) = v63;
        unsigned int v239 = v31;
        uint64_t result = sub_221A13F50(*v11, *(unsigned __int8 *)(v12 + 1), v12 + 4, v12 + 20, (int *)(v12 + 36), v32, 0, 3);
        if (result) {
          return result;
        }
        uint64_t result = sub_221A17734(a1, HIBYTE(v243), v243, v12 + 4, v12 + 20, v12 + 36, *(unsigned __int8 *)(a5 + 31), a2, (uint64_t)v11);
        unsigned int v31 = v239;
        if (result) {
          return result;
        }
LABEL_257:
        if (v31 == 2)
        {
          int v198 = 0;
          int v199 = 1;
          char v200 = a3 & 0xFD;
          goto LABEL_288;
        }
LABEL_259:
        char v200 = a3 & 0xFD;
        unsigned int v201 = v11[272];
        unint64_t v202 = *(void *)(a1 + 24);
        int v203 = *(_DWORD *)(a1 + 32);
        unsigned int v204 = __clz(v203 | 1);
        if (v203) {
          unsigned int v205 = v204;
        }
        else {
          unsigned int v205 = v204 + 1;
        }
        unsigned int v206 = (v203 << (v205 + 1)) >> -(char)v205;
        if (!v205) {
          unsigned int v206 = 0;
        }
        unsigned int v207 = v206 + ~(-1 << v205);
        int8x16_t v208 = (unsigned int *)(*(void *)(a1 + 16)
                              + ((unint64_t)(*(unsigned __int8 *)(a1 + 36) + 2 * v205 + 1) >> 3));
        unsigned int v209 = *v208;
        if ((unint64_t)v208 > v202) {
          int8x16_t v208 = *(unsigned int **)(a1 + 24);
        }
        if ((a3 & 0xFD) == 1 && a4 || !v11[1])
        {
          if (v207 <= 0xF)
          {
            int v210 = (char *)&unk_221A3DB70 + 64 * (unint64_t)((HIBYTE(v243) | v243) == 0);
            goto LABEL_274;
          }
        }
        else if (v207 <= 0x2F)
        {
          int v210 = (char *)&unk_221A3DBF0 + 192 * ((HIBYTE(v243) | v243) == 0);
LABEL_274:
          int v211 = (int *)&v210[4 * v207];
          int v212 = (*(unsigned char *)(a1 + 36) + 2 * (_BYTE)v205 + 1) & 7;
          unsigned int v213 = bswap32(v209) << ((*(unsigned char *)(a1 + 36) + 2 * v205 + 1) & 7);
          int v198 = *v211;
          if ((*v211 & 0xF) == 0 || !*(unsigned char *)(a5 + 184)) {
            goto LABEL_287;
          }
          uint64_t v214 = *(void *)(a5 + 40);
          if (*(unsigned char *)(v214 + 1))
          {
            if (v201 > 4 || *(unsigned char *)(v214 + 1) == 3 && !*(unsigned char *)(v214 + 2) && !**(unsigned char **)(a5 + 48))
            {
LABEL_287:
              int v199 = 0;
              *(void *)(a1 + 16) = v208;
              *(_DWORD *)(a1 + 32) = v213;
              *(unsigned char *)(a1 + 36) = v212;
LABEL_288:
              __int16 v242 = 0;
              if (v200 == 1)
              {
                int v217 = a3;
                int v218 = a4;
              }
              else
              {
                int v217 = 0;
                int v218 = 0;
              }
              uint64_t result = sub_221A13EA0(*(unsigned __int8 *)(v12 + 1), *(unsigned __int8 *)(v12 + 2), v198, &v242, (char *)&v242 + 1, v217, v218);
              if (result) {
                return result;
              }
              unsigned __int8 v219 = v242;
              *(unsigned char *)(v12 + 53) = v242;
              unsigned int v220 = HIBYTE(v242);
              *(unsigned char *)(v12 + 52) = HIBYTE(v242);
              if (((v198 < 1) & ~v199) != 0)
              {
                LOBYTE(v238) = 0;
              }
              else
              {
                unsigned int v241 = v220;
                bzero(v13, 0x330uLL);
                int v221 = *(_DWORD *)(a1 + 32);
                int v222 = *(unsigned __int8 *)(a1 + 36);
                unsigned int v223 = __clz(v221 | 1);
                if (v221) {
                  unsigned int v224 = v223;
                }
                else {
                  unsigned int v224 = v223 + 1;
                }
                unsigned int v225 = (v221 << (v224 + 1)) >> -(char)v224;
                if (!v224) {
                  unsigned int v225 = 0;
                }
                unsigned int v240 = v225;
                unint64_t v226 = v222 + 2 * v224 + 1;
                char v227 = (v222 + 2 * v224 + 1) & 7;
                int v228 = (unsigned int *)(*(void *)(a1 + 16) + (v226 >> 3));
                unsigned int v229 = bswap32(*v228) << (v226 & 7);
                if ((unint64_t)v228 > *(void *)(a1 + 24)) {
                  int v228 = *(unsigned int **)(a1 + 24);
                }
                *(void *)(a1 + 16) = v228;
                *(_DWORD *)(a1 + 32) = v229;
                *(unsigned char *)(a1 + 36) = v227;
                uint64_t v230 = *(void *)(a5 + 176);
                if (v230) {
                  uint64_t v231 = v230 + 80;
                }
                else {
                  uint64_t v231 = 0;
                }
                uint64_t v232 = *(void *)(a5 + 128);
                uint64_t v233 = *(void *)(a5 + 136);
                if (v232) {
                  uint64_t v234 = v232 + 80;
                }
                else {
                  uint64_t v234 = 0;
                }
                if (v233) {
                  uint64_t v235 = v233 + 80;
                }
                else {
                  uint64_t v235 = 0;
                }
                if (v200 == 1) {
                  char v236 = a3;
                }
                else {
                  char v236 = 0;
                }
                if (v200 == 1) {
                  int v237 = a4;
                }
                else {
                  int v237 = 0;
                }
                uint64_t result = sub_221A17EF8(a1, v199, *(unsigned __int8 *)(v12 + 3), a5, v231, v234, v235, v241, v219, (uint64_t)v13, v236, v237);
                if (result) {
                  return result;
                }
                unsigned int v238 = ((v240 + (1 << v224)) >> 1) - ((v240 + (1 << v224)) >> 1) * 2 * ((v240 + (1 << v224)) & 1);
              }
              uint64_t result = 0;
              *(unsigned char *)(v12 + 54) = v238;
              return result;
            }
          }
          else if (!*(unsigned char *)(v214 + 2) || v201 >= 5)
          {
            goto LABEL_287;
          }
          unsigned int v215 = v213 >> 31;
          unint64_t v216 = (v212 + 1);
          LOBYTE(v212) = (v212 + 1) & 7;
          int8x16_t v208 = (unsigned int *)((char *)v208 + (v216 >> 3));
          unsigned int v213 = bswap32(*v208) << (v216 & 7);
          if ((unint64_t)v208 > v202) {
            int8x16_t v208 = *(unsigned int **)(a1 + 24);
          }
          *(unsigned char *)(v12 + 3) = v215;
          goto LABEL_287;
        }
        return 4294958327;
      }
      if (v31 <= 7 && ((1 << v31) & 0x86) != 0)
      {
        int v68 = v11[1];
        int v70 = *(unsigned int **)(a1 + 16);
        int v69 = *(unsigned int **)(a1 + 24);
        int v71 = *(_DWORD *)(a1 + 32);
        int v72 = *(unsigned __int8 *)(a1 + 36);
        if ((a3 & 0xFD) == 1)
        {
          if (v31 == 1)
          {
            for (uint64_t i = 0; i != 16; ++i)
            {
              unint64_t v74 = (v72 + 1);
              int v72 = ((_BYTE)v72 + 1) & 7;
              int v70 = (unsigned int *)((char *)v70 + (v74 >> 3));
              signed int v75 = bswap32(*v70) << (v74 & 7);
              if (v70 > v69) {
                int v70 = v69;
              }
              if ((v71 & 0x80000000) == 0)
              {
                unsigned int v76 = v75 >> 29;
                unint64_t v77 = (v72 + 3);
                int v72 = ((_BYTE)v72 + 3) & 7;
                int v70 = (unsigned int *)((char *)v70 + (v77 >> 3));
                signed int v75 = bswap32(*v70) << (v77 & 7);
                if (v70 > v69) {
                  int v70 = v69;
                }
                v11[i + 310] = v76;
              }
              v11[i + 290] = v71 < 0;
              int v71 = v75;
            }
          }
          else
          {
            signed int v75 = *(_DWORD *)(a1 + 32);
          }
          if (v31 == 7)
          {
            for (uint64_t j = 0; j != 4; ++j)
            {
              unint64_t v186 = (v72 + 1);
              int v72 = ((_BYTE)v72 + 1) & 7;
              int v70 = (unsigned int *)((char *)v70 + (v186 >> 3));
              unsigned int v91 = bswap32(*v70) << (v186 & 7);
              if (v70 > v69) {
                int v70 = v69;
              }
              if ((v75 & 0x80000000) == 0)
              {
                unsigned int v187 = v91 >> 29;
                unint64_t v188 = (v72 + 3);
                int v72 = ((_BYTE)v72 + 3) & 7;
                int v70 = (unsigned int *)((char *)v70 + (v188 >> 3));
                unsigned int v91 = bswap32(*v70) << (v188 & 7);
                if (v70 > v69) {
                  int v70 = v69;
                }
                v11[j + 326] = v187;
              }
              v11[j + 306] = v75 < 0;
              signed int v75 = v91;
            }
          }
          else
          {
            unsigned int v91 = v75;
          }
          LOBYTE(v193) = 0;
          if (a4 == 1 || !v68) {
            goto LABEL_255;
          }
        }
        else
        {
          if (v31 == 1)
          {
            for (uint64_t k = 0; k != 16; ++k)
            {
              unint64_t v83 = (v72 + 1);
              int v72 = ((_BYTE)v72 + 1) & 7;
              int v70 = (unsigned int *)((char *)v70 + (v83 >> 3));
              signed int v84 = bswap32(*v70) << (v83 & 7);
              if (v70 > v69) {
                int v70 = v69;
              }
              if ((v71 & 0x80000000) == 0)
              {
                unsigned int v85 = v84 >> 29;
                unint64_t v86 = (v72 + 3);
                int v72 = ((_BYTE)v72 + 3) & 7;
                int v70 = (unsigned int *)((char *)v70 + (v86 >> 3));
                signed int v84 = bswap32(*v70) << (v86 & 7);
                if (v70 > v69) {
                  int v70 = v69;
                }
                v11[k + 310] = v85;
              }
              v11[k + 290] = v71 < 0;
              int v71 = v84;
            }
          }
          else
          {
            signed int v84 = *(_DWORD *)(a1 + 32);
          }
          if (v31 == 7)
          {
            for (uint64_t m = 0; m != 4; ++m)
            {
              unint64_t v190 = (v72 + 1);
              int v72 = ((_BYTE)v72 + 1) & 7;
              int v70 = (unsigned int *)((char *)v70 + (v190 >> 3));
              unsigned int v91 = bswap32(*v70) << (v190 & 7);
              if (v70 > v69) {
                int v70 = v69;
              }
              if ((v84 & 0x80000000) == 0)
              {
                unsigned int v191 = v91 >> 29;
                unint64_t v192 = (v72 + 3);
                int v72 = ((_BYTE)v72 + 3) & 7;
                int v70 = (unsigned int *)((char *)v70 + (v192 >> 3));
                unsigned int v91 = bswap32(*v70) << (v192 & 7);
                if (v70 > v69) {
                  int v70 = v69;
                }
                v11[m + 326] = v191;
              }
              v11[m + 306] = v84 < 0;
              signed int v84 = v91;
            }
          }
          else
          {
            unsigned int v91 = v84;
          }
          if (!v68)
          {
            LOBYTE(v193) = 0;
LABEL_255:
            v11[289] = v193;
LABEL_256:
            *(void *)(a1 + 16) = v70;
            *(_DWORD *)(a1 + 32) = v91;
            *(unsigned char *)(a1 + 36) = v72;
            goto LABEL_257;
          }
        }
        unsigned int v194 = __clz(v91 | 1);
        if (!v91) {
          ++v194;
        }
        unsigned int v195 = v91 << (v194 + 1) >> -(char)v194;
        if (!v194) {
          unsigned int v195 = 0;
        }
        unsigned int v193 = v195 + ~(-1 << v194);
        unint64_t v196 = v72 + 2 * v194 + 1;
        LOBYTE(v72) = v196 & 7;
        int v197 = (unsigned int *)((char *)v70 + (v196 >> 3));
        unsigned int v91 = bswap32(*v197) << v72;
        if (v197 <= v69) {
          int v70 = v197;
        }
        else {
          int v70 = v69;
        }
        goto LABEL_255;
      }
      int v87 = *(unsigned __int8 *)(a5 + 31);
      int v88 = v11[2];
      if (v11[2]) {
        BOOL v89 = 1;
      }
      else {
        BOOL v89 = v87 == 2;
      }
      int v70 = *(unsigned int **)(a1 + 16);
      uint64_t v90 = *(unsigned int **)(a1 + 24);
      unsigned int v91 = *(_DWORD *)(a1 + 32);
      int v72 = *(unsigned __int8 *)(a1 + 36);
      int v92 = v11[3];
      uint64_t v93 = v11[272];
      if (v89 && v11[272])
      {
        if (v87 == 2) {
          int v88 = (2 * v88) | 1;
        }
        if (a2) {
          unsigned int v94 = 16;
        }
        else {
          unsigned int v94 = 32;
        }
        uint64_t v95 = v11 + 24;
        for (uint64_t n = v11[272]; n; --n)
        {
          if (v95[7] == 5)
          {
            LOBYTE(v97) = 32;
          }
          else if (v88 == 1)
          {
            unint64_t v98 = (v72 + 1);
            int v72 = ((_BYTE)v72 + 1) & 7;
            int v70 = (unsigned int *)((char *)v70 + (v98 >> 3));
            unsigned int v99 = ~v91;
            unsigned int v100 = bswap32(*v70) << (v98 & 7);
            if (v70 > v90) {
              int v70 = v90;
            }
            unsigned int v97 = v99 >> 31;
            unsigned int v91 = v100;
          }
          else
          {
            unsigned int v101 = __clz(v91 | 1);
            if (v91) {
              unsigned int v102 = v101;
            }
            else {
              unsigned int v102 = v101 + 1;
            }
            unsigned int v103 = v91 << (v102 + 1) >> -(char)v102;
            if (!v102) {
              unsigned int v103 = 0;
            }
            unsigned int v97 = v103 + ~(-1 << v102);
            unint64_t v104 = v72 + 2 * v102 + 1;
            int v105 = (unsigned int *)((char *)v70 + (v104 >> 3));
            if (v105 <= v90) {
              int v70 = (unsigned int *)((char *)v70 + (v104 >> 3));
            }
            else {
              int v70 = v90;
            }
            if (v94 <= v97) {
              return 4294958327;
            }
            int v72 = v104 & 7;
            unsigned int v91 = bswap32(*v105) << v72;
          }
          *uint64_t v95 = v97;
          v95 += 16;
        }
      }
      if (v92) {
        BOOL v106 = 1;
      }
      else {
        BOOL v106 = v87 == 2;
      }
      if (v106 && v93)
      {
        if (v87 == 2) {
          int v107 = (2 * v92) | 1;
        }
        else {
          int v107 = v92;
        }
        if (a2) {
          unsigned int v108 = 16;
        }
        else {
          unsigned int v108 = 32;
        }
        uint64_t v109 = v11 + 25;
        for (iuint64_t i = v93; ii; --ii)
        {
          if (v109[6] == 4)
          {
            LOBYTE(v111) = 32;
          }
          else if (v107 == 1)
          {
            unint64_t v112 = (v72 + 1);
            int v72 = ((_BYTE)v72 + 1) & 7;
            int v70 = (unsigned int *)((char *)v70 + (v112 >> 3));
            unsigned int v113 = ~v91;
            unsigned int v114 = bswap32(*v70) << (v112 & 7);
            if (v70 > v90) {
              int v70 = v90;
            }
            unsigned int v111 = v113 >> 31;
            unsigned int v91 = v114;
          }
          else
          {
            unsigned int v115 = __clz(v91 | 1);
            if (v91) {
              unsigned int v116 = v115;
            }
            else {
              unsigned int v116 = v115 + 1;
            }
            unsigned int v117 = v91 << (v116 + 1) >> -(char)v116;
            if (!v116) {
              unsigned int v117 = 0;
            }
            unsigned int v111 = v117 + ~(-1 << v116);
            unint64_t v118 = v72 + 2 * v116 + 1;
            uint64_t v119 = (unsigned int *)((char *)v70 + (v118 >> 3));
            if (v119 <= v90) {
              int v70 = (unsigned int *)((char *)v70 + (v118 >> 3));
            }
            else {
              int v70 = v90;
            }
            if (v108 <= v111) {
              return 4294958327;
            }
            int v72 = v118 & 7;
            unsigned int v91 = bswap32(*v119) << v72;
          }
          *uint64_t v109 = v111;
          v109 += 16;
        }
      }
      if (!v93) {
        goto LABEL_256;
      }
      uint64_t v120 = 0;
      while (1)
      {
        uint64_t v121 = v32 + 16 * v120;
        if (*(unsigned char *)(v121 + 15) != 5) {
          break;
        }
LABEL_179:
        if (++v120 == v93)
        {
          uint64_t v153 = 0;
          while (1)
          {
            uint64_t v154 = v32 + 16 * v153;
            if (*(unsigned char *)(v154 + 15) != 4) {
              break;
            }
LABEL_217:
            if (++v153 == v93) {
              goto LABEL_256;
            }
          }
          unsigned int v155 = __clz(v91 | 1);
          if (!v91) {
            ++v155;
          }
          if (v155 <= 0xC)
          {
            unsigned int v156 = v91 << (v155 + 1) >> -(char)v155;
            if (!v155) {
              unsigned int v156 = 0;
            }
            unsigned int v157 = v156 + ~(-1 << v155);
            unint64_t v158 = v72 + 2 * v155 + 1;
            int v159 = v158 & 7;
            unsigned int v160 = (unsigned int *)((char *)v70 + (v158 >> 3));
            unsigned int v161 = bswap32(*v160) << v159;
            if (v160 <= v90) {
              uint64_t v162 = v160;
            }
            else {
              uint64_t v162 = v90;
            }
            goto LABEL_210;
          }
          unint64_t v163 = (v72 + 1);
          int v164 = v163 & 7;
          uint64_t v165 = (unsigned int *)((char *)v70 + (v163 >> 3));
          unsigned int v166 = bswap32(*v165) << v164;
          if (v165 <= v90) {
            unsigned int v167 = v165;
          }
          else {
            unsigned int v167 = v90;
          }
          if ((v91 & 0x80000000) != 0)
          {
            unsigned int v171 = 0;
          }
          else
          {
            unsigned int v168 = 0;
            do
            {
              char v169 = v164;
              unsigned int v170 = v166;
              unsigned int v171 = v168 + 1;
              unint64_t v172 = (v164 + 1);
              int v164 = ((_BYTE)v164 + 1) & 7;
              unsigned int v167 = (unsigned int *)((char *)v167 + (v172 >> 3));
              unsigned int v166 = bswap32(*v167) << (v172 & 7);
              if (v167 > v90) {
                unsigned int v167 = v90;
              }
              if ((v170 & 0x80000000) != 0) {
                break;
              }
              BOOL v140 = v168++ >= 0x1F;
            }
            while (!v140);
            if (v171 - 1 > 0x17)
            {
              unsigned int v173 = v166 >> (48 - v171);
              unsigned int v174 = ((v169 + 1) & 7) + v171;
              unint64_t v175 = v174 - 16;
              int v159 = v174 & 7;
              int32x2_t v176 = (unsigned int *)((char *)v167 + (v175 >> 3));
              unsigned int v177 = bswap32(*v176) << v159;
              if (v176 > v90) {
                int32x2_t v176 = v90;
              }
              unsigned int v178 = *(unsigned int *)((char *)v176 + 2);
              uint64_t v162 = (unsigned int *)((char *)v176 + 2);
              unsigned int v161 = bswap32(v178) << v159;
              if (v162 > v90) {
                uint64_t v162 = v90;
              }
              int v179 = __PAIR64__(v173, v177) >> 16;
LABEL_209:
              unsigned int v157 = v179 + ~(-1 << v171);
LABEL_210:
              *(_WORD *)(v154 + 4) = ((v157 + 1) >> 1) - ((v157 + 1) >> 1) * 2 * (((_BYTE)v157 + 1) & 1);
              unsigned int v181 = __clz(v161 | 1);
              if (!v161) {
                ++v181;
              }
              unsigned int v182 = v161 << (v181 + 1) >> -(char)v181;
              if (!v181) {
                unsigned int v182 = 0;
              }
              int v183 = 1 << v181;
              unint64_t v184 = v159 + 2 * v181 + 1;
              int v72 = v184 & 7;
              int v70 = (unsigned int *)((char *)v162 + (v184 >> 3));
              unsigned int v91 = bswap32(*v70) << (v184 & 7);
              if (v70 > v90) {
                int v70 = v90;
              }
              *(_WORD *)(v154 + 6) = ((v182 + v183) >> 1) - ((v182 + v183) >> 1) * 2 * ((v182 + v183) & 1);
              goto LABEL_217;
            }
          }
          int v179 = v166 >> -(char)v171;
          unint64_t v180 = v171 + v164;
          int v159 = v180 & 7;
          uint64_t v162 = (unsigned int *)((char *)v167 + (v180 >> 3));
          unsigned int v161 = bswap32(*v162) << (v180 & 7);
          if (v162 > v90) {
            uint64_t v162 = v90;
          }
          goto LABEL_209;
        }
      }
      unsigned int v122 = __clz(v91 | 1);
      if (!v91) {
        ++v122;
      }
      if (v122 <= 0xC)
      {
        unsigned int v123 = v91 << (v122 + 1) >> -(char)v122;
        if (!v122) {
          unsigned int v123 = 0;
        }
        unsigned int v124 = v123 + ~(-1 << v122);
        unint64_t v125 = v72 + 2 * v122 + 1;
        int v126 = v125 & 7;
        int v127 = (unsigned int *)((char *)v70 + (v125 >> 3));
        unsigned int v128 = bswap32(*v127) << v126;
        if (v127 <= v90) {
          uint64_t v129 = v127;
        }
        else {
          uint64_t v129 = v90;
        }
        goto LABEL_172;
      }
      unint64_t v130 = (v72 + 1);
      int v131 = v130 & 7;
      uint64_t v132 = (unsigned int *)((char *)v70 + (v130 >> 3));
      unsigned int v133 = bswap32(*v132) << v131;
      if (v132 <= v90) {
        uint64_t v134 = v132;
      }
      else {
        uint64_t v134 = v90;
      }
      if ((v91 & 0x80000000) != 0)
      {
        unsigned int v138 = 0;
      }
      else
      {
        unsigned int v135 = 0;
        do
        {
          char v136 = v131;
          unsigned int v137 = v133;
          unsigned int v138 = v135 + 1;
          unint64_t v139 = (v131 + 1);
          int v131 = ((_BYTE)v131 + 1) & 7;
          uint64_t v134 = (unsigned int *)((char *)v134 + (v139 >> 3));
          unsigned int v133 = bswap32(*v134) << (v139 & 7);
          if (v134 > v90) {
            uint64_t v134 = v90;
          }
          if ((v137 & 0x80000000) != 0) {
            break;
          }
          BOOL v140 = v135++ >= 0x1F;
        }
        while (!v140);
        if (v138 - 1 > 0x17)
        {
          unsigned int v141 = v133 >> (48 - v138);
          unsigned int v142 = ((v136 + 1) & 7) + v138;
          unint64_t v143 = v142 - 16;
          int v126 = v142 & 7;
          int v144 = (unsigned int *)((char *)v134 + (v143 >> 3));
          unsigned int v145 = bswap32(*v144) << v126;
          if (v144 > v90) {
            int v144 = v90;
          }
          unsigned int v146 = *(unsigned int *)((char *)v144 + 2);
          uint64_t v129 = (unsigned int *)((char *)v144 + 2);
          unsigned int v128 = bswap32(v146) << v126;
          if (v129 > v90) {
            uint64_t v129 = v90;
          }
          int v147 = __PAIR64__(v141, v145) >> 16;
LABEL_171:
          unsigned int v124 = v147 + ~(-1 << v138);
LABEL_172:
          *(_WORD *)uint64_t v121 = ((v124 + 1) >> 1) - ((v124 + 1) >> 1) * 2 * (((_BYTE)v124 + 1) & 1);
          unsigned int v149 = __clz(v128 | 1);
          if (!v128) {
            ++v149;
          }
          unsigned int v150 = v128 << (v149 + 1) >> -(char)v149;
          if (!v149) {
            unsigned int v150 = 0;
          }
          int v151 = 1 << v149;
          unint64_t v152 = v126 + 2 * v149 + 1;
          int v72 = v152 & 7;
          int v70 = (unsigned int *)((char *)v129 + (v152 >> 3));
          unsigned int v91 = bswap32(*v70) << (v152 & 7);
          if (v70 > v90) {
            int v70 = v90;
          }
          *(_WORD *)(v121 + 2) = ((v150 + v151) >> 1) - ((v150 + v151) >> 1) * 2 * ((v150 + v151) & 1);
          goto LABEL_179;
        }
      }
      int v147 = v133 >> -(char)v138;
      unint64_t v148 = v138 + v131;
      int v126 = v148 & 7;
      uint64_t v129 = (unsigned int *)((char *)v134 + (v148 >> 3));
      unsigned int v128 = bswap32(*v129) << (v148 & 7);
      if (v129 > v90) {
        uint64_t v129 = v90;
      }
      goto LABEL_171;
    }
  }
  return result;
}

uint64_t sub_221A17658(uint64_t result, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = 0;
  uint64_t v5 = a2 + 672;
  BOOL v6 = (a3 & 0xFFFFFFFD) == 1;
  BOOL v7 = a4 != 0;
  BOOL v8 = v6 && v7;
  if (v6 && v7) {
    uint64_t v5 = 0;
  }
  unsigned int v9 = *(unsigned int **)(result + 16);
  int v10 = *(unsigned int **)(result + 24);
  if (*(unsigned char *)(result + 36)) {
    unsigned int v9 = (unsigned int *)((char *)v9 + 1);
  }
  if (v9 > v10) {
    unsigned int v9 = *(unsigned int **)(result + 24);
  }
  unsigned int v11 = bswap32(*v9);
  do
  {
    unsigned int v12 = HIBYTE(v11);
    unsigned int v13 = *(unsigned int *)((char *)v9 + 1);
    unsigned int v9 = (unsigned int *)((char *)v9 + 1);
    unsigned int v11 = bswap32(v13);
    if (v9 > v10) {
      unsigned int v9 = v10;
    }
    *(_WORD *)(a2 + 32 + v4) = v12;
    v4 += 2;
  }
  while (v4 != 512);
  if (!v8)
  {
    for (uint64_t i = 0; i != 128; i += 2)
    {
      unsigned int v15 = HIBYTE(v11);
      unsigned int v16 = *(unsigned int *)((char *)v9 + 1);
      unsigned int v9 = (unsigned int *)((char *)v9 + 1);
      unsigned int v11 = bswap32(v16);
      if (v9 > v10) {
        unsigned int v9 = v10;
      }
      *(_WORD *)(a2 + 544 + i) = v15;
    }
    for (uint64_t j = 0; j != 128; j += 2)
    {
      unsigned int v18 = HIBYTE(v11);
      unsigned int v19 = *(unsigned int *)((char *)v9 + 1);
      unsigned int v9 = (unsigned int *)((char *)v9 + 1);
      unsigned int v11 = bswap32(v19);
      if (v9 > v10) {
        unsigned int v9 = v10;
      }
      *(_WORD *)(v5 + j) = v18;
    }
  }
  *(void *)(result + 16) = v9;
  *(_DWORD *)(result + 32) = v11;
  *(unsigned char *)(result + 36) = 0;
  return result;
}

uint64_t sub_221A17734(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9)
{
  unsigned int v9 = *(unsigned int **)(a1 + 16);
  unsigned int v10 = *(_DWORD *)(a1 + 32);
  int v11 = *(unsigned __int8 *)(a1 + 36);
  if ((a2 - 4) >= 0xFFFFFFFE)
  {
    int v13 = *(unsigned __int8 *)(a9 + 2);
    int v14 = *(unsigned __int8 *)(a9 + 3);
    unsigned int v15 = *(unsigned int **)(a1 + 24);
    if ((a7 == 2 || *(unsigned char *)(a9 + 2)) && (a2 != 2 || a3 != 4))
    {
      uint64_t v16 = 0;
      int v17 = 0;
      if (a7 == 2) {
        int v13 = (2 * v13) | 1;
      }
      if (a8) {
        unsigned int v18 = 16;
      }
      else {
        unsigned int v18 = 32;
      }
      do
      {
        if (a2 == 3 && !*(_DWORD *)(a4 + 4 * v16) || *(_DWORD *)(a5 + 4 * v16) == 5)
        {
          LOBYTE(v19) = 32;
        }
        else if (v13 == 1)
        {
          unint64_t v20 = (v11 + 1);
          int v11 = ((_BYTE)v11 + 1) & 7;
          unsigned int v9 = (unsigned int *)((char *)v9 + (v20 >> 3));
          unsigned int v21 = ~v10;
          unsigned int v22 = bswap32(*v9) << (v20 & 7);
          if (v9 > v15) {
            unsigned int v9 = v15;
          }
          unsigned int v19 = v21 >> 31;
          unsigned int v10 = v22;
        }
        else
        {
          unsigned int v23 = __clz(v10 | 1);
          if (v10) {
            unsigned int v24 = v23;
          }
          else {
            unsigned int v24 = v23 + 1;
          }
          unsigned int v25 = v10 << (v24 + 1) >> -(char)v24;
          if (!v24) {
            unsigned int v25 = 0;
          }
          unsigned int v19 = v25 + ~(-1 << v24);
          unint64_t v26 = v11 + 2 * v24 + 1;
          int v11 = ((_BYTE)v11 + 2 * (_BYTE)v24 + 1) & 7;
          unsigned int v9 = (unsigned int *)((char *)v9 + (v26 >> 3));
          unsigned int v10 = bswap32(*v9) << (v26 & 7);
          if (v9 > v15) {
            unsigned int v9 = v15;
          }
          if (v18 <= v19) {
            goto LABEL_2;
          }
        }
        if (*(int *)(a6 + 4 * v16) >= 1)
        {
          int v27 = 0;
          uint64_t v28 = (unsigned char *)(a9 + 24 + 16 * v17);
          do
          {
            *uint64_t v28 = v19;
            v28 += 16;
            ++v27;
          }
          while (v27 < *(_DWORD *)(a6 + 4 * v16));
          v17 += v27;
        }
        ++v16;
      }
      while (v16 != 4);
    }
    if ((a7 == 2 || v14) && (a2 != 2 || a3 != 4))
    {
      uint64_t v29 = 0;
      int v30 = 0;
      if (a7 == 2) {
        int v14 = (2 * v14) | 1;
      }
      if (a8) {
        unsigned int v31 = 16;
      }
      else {
        unsigned int v31 = 32;
      }
      do
      {
        if (a2 == 3 && !*(_DWORD *)(a4 + 4 * v29) || *(_DWORD *)(a5 + 4 * v29) == 4)
        {
          LOBYTE(v32) = 32;
        }
        else if (v14 == 1)
        {
          unint64_t v33 = (v11 + 1);
          int v11 = ((_BYTE)v11 + 1) & 7;
          unsigned int v9 = (unsigned int *)((char *)v9 + (v33 >> 3));
          unsigned int v34 = ~v10;
          unsigned int v35 = bswap32(*v9) << (v33 & 7);
          if (v9 > v15) {
            unsigned int v9 = v15;
          }
          unsigned int v32 = v34 >> 31;
          unsigned int v10 = v35;
        }
        else
        {
          unsigned int v36 = __clz(v10 | 1);
          if (v10) {
            unsigned int v37 = v36;
          }
          else {
            unsigned int v37 = v36 + 1;
          }
          unsigned int v38 = v10 << (v37 + 1) >> -(char)v37;
          if (!v37) {
            unsigned int v38 = 0;
          }
          unsigned int v32 = v38 + ~(-1 << v37);
          unint64_t v39 = v11 + 2 * v37 + 1;
          int v11 = ((_BYTE)v11 + 2 * (_BYTE)v37 + 1) & 7;
          unsigned int v9 = (unsigned int *)((char *)v9 + (v39 >> 3));
          unsigned int v10 = bswap32(*v9) << (v39 & 7);
          if (v9 > v15) {
            unsigned int v9 = v15;
          }
          if (v31 <= v32) {
            goto LABEL_2;
          }
        }
        if (*(int *)(a6 + 4 * v29) >= 1)
        {
          int v40 = 0;
          uint64_t v41 = (unsigned char *)(a9 + 25 + 16 * v30);
          do
          {
            *uint64_t v41 = v32;
            v41 += 16;
            ++v40;
          }
          while (v40 < *(_DWORD *)(a6 + 4 * v29));
          v30 += v40;
        }
        ++v29;
      }
      while (v29 != 4);
    }
    uint64_t v42 = 0;
    LODWORD(v43) = 0;
    uint64_t v44 = a9 + 16;
    while (1)
    {
      if (a2 == 3 && !*(_DWORD *)(a4 + 4 * v42) || *(_DWORD *)(a5 + 4 * v42) == 5)
      {
        if (*(int *)(a6 + 4 * v42) >= 1)
        {
          int v45 = 0;
          unsigned int v46 = (_DWORD *)(a9 + 16 + 16 * (int)v43);
          do
          {
            _DWORD *v46 = 0;
            v46 += 4;
            ++v45;
          }
          while (v45 < *(_DWORD *)(a6 + 4 * v42));
          LODWORD(v43) = v43 + v45;
        }
        goto LABEL_108;
      }
      if (*(int *)(a6 + 4 * v42) >= 1) {
        break;
      }
LABEL_108:
      if (++v42 == 4)
      {
        uint64_t v81 = 0;
        LODWORD(v82) = 0;
        while (1)
        {
          if (a2 == 3 && !*(_DWORD *)(a4 + 4 * v81) || *(_DWORD *)(a5 + 4 * v81) == 4)
          {
            if (*(int *)(a6 + 4 * v81) >= 1)
            {
              int v83 = 0;
              signed int v84 = (_DWORD *)(a9 + 20 + 16 * (int)v82);
              do
              {
                *signed int v84 = 0;
                v84 += 4;
                ++v83;
              }
              while (v83 < *(_DWORD *)(a6 + 4 * v81));
              LODWORD(v82) = v82 + v83;
            }
            goto LABEL_154;
          }
          if (*(int *)(a6 + 4 * v81) >= 1) {
            break;
          }
LABEL_154:
          if (++v81 == 4)
          {
            uint64_t v12 = 0;
            goto LABEL_156;
          }
        }
        int v85 = 0;
        uint64_t v82 = (int)v82;
        while (2)
        {
          unsigned int v86 = __clz(v10 | 1);
          if (!v10) {
            ++v86;
          }
          if (v86 <= 0xC)
          {
            unsigned int v87 = v10 << (v86 + 1) >> -(char)v86;
            if (!v86) {
              unsigned int v87 = 0;
            }
            unsigned int v88 = v87 + ~(-1 << v86);
            unint64_t v89 = v11 + 2 * v86 + 1;
            int v90 = v89 & 7;
            unsigned int v91 = (unsigned int *)((char *)v9 + (v89 >> 3));
            unsigned int v92 = bswap32(*v91) << v90;
            if (v91 <= v15) {
              uint64_t v93 = v91;
            }
            else {
              uint64_t v93 = v15;
            }
LABEL_147:
            __int16 v112 = ((v88 + 1) >> 1) - ((v88 + 1) >> 1) * 2 * ((v88 + 1) & 1);
            uint64_t v113 = v44 + 16 * v82;
            *(_WORD *)(v113 + 4) = v112;
            unsigned int v114 = __clz(v92 | 1);
            if (!v92) {
              ++v114;
            }
            unsigned int v115 = v92 << (v114 + 1) >> -(char)v114;
            if (!v114) {
              unsigned int v115 = 0;
            }
            int v116 = 1 << v114;
            unint64_t v117 = v90 + 2 * v114 + 1;
            int v11 = v117 & 7;
            unsigned int v9 = (unsigned int *)((char *)v93 + (v117 >> 3));
            unsigned int v10 = bswap32(*v9) << (v117 & 7);
            if (v9 > v15) {
              unsigned int v9 = v15;
            }
            *(_WORD *)(v113 + 6) = ((v115 + v116) >> 1) - ((v115 + v116) >> 1) * 2 * ((v115 + v116) & 1);
            ++v82;
            if (++v85 >= *(_DWORD *)(a6 + 4 * v81)) {
              goto LABEL_154;
            }
            continue;
          }
          break;
        }
        unint64_t v94 = (v11 + 1);
        int v95 = v94 & 7;
        uint64_t v96 = (unsigned int *)((char *)v9 + (v94 >> 3));
        unsigned int v97 = bswap32(*v96) << v95;
        if (v96 <= v15) {
          unint64_t v98 = v96;
        }
        else {
          unint64_t v98 = v15;
        }
        if ((v10 & 0x80000000) != 0)
        {
          unsigned int v102 = 0;
        }
        else
        {
          unsigned int v99 = 0;
          do
          {
            char v100 = v95;
            unsigned int v101 = v97;
            unsigned int v102 = v99 + 1;
            unint64_t v103 = (v95 + 1);
            int v95 = ((_BYTE)v95 + 1) & 7;
            unint64_t v98 = (unsigned int *)((char *)v98 + (v103 >> 3));
            unsigned int v97 = bswap32(*v98) << (v103 & 7);
            if (v98 > v15) {
              unint64_t v98 = v15;
            }
            if ((v101 & 0x80000000) != 0) {
              break;
            }
            BOOL v66 = v99++ >= 0x1F;
          }
          while (!v66);
          if (v102 - 1 > 0x17)
          {
            unsigned int v104 = v97 >> (48 - v102);
            unsigned int v105 = ((v100 + 1) & 7) + v102;
            unint64_t v106 = v105 - 16;
            int v90 = v105 & 7;
            int v107 = (unsigned int *)((char *)v98 + (v106 >> 3));
            unsigned int v108 = bswap32(*v107) << v90;
            if (v107 > v15) {
              int v107 = v15;
            }
            unsigned int v109 = *(unsigned int *)((char *)v107 + 2);
            uint64_t v93 = (unsigned int *)((char *)v107 + 2);
            unsigned int v92 = bswap32(v109) << v90;
            if (v93 > v15) {
              uint64_t v93 = v15;
            }
            int v110 = __PAIR64__(v104, v108) >> 16;
LABEL_146:
            unsigned int v88 = v110 + ~(-1 << v102);
            goto LABEL_147;
          }
        }
        int v110 = v97 >> -(char)v102;
        unint64_t v111 = v95 + v102;
        int v90 = v111 & 7;
        uint64_t v93 = (unsigned int *)((char *)v98 + (v111 >> 3));
        unsigned int v92 = bswap32(*v93) << (v111 & 7);
        if (v93 > v15) {
          uint64_t v93 = v15;
        }
        goto LABEL_146;
      }
    }
    int v47 = 0;
    uint64_t v43 = (int)v43;
    while (1)
    {
      unsigned int v48 = __clz(v10 | 1);
      if (!v10) {
        ++v48;
      }
      if (v48 <= 0xC)
      {
        unsigned int v49 = v10 << (v48 + 1) >> -(char)v48;
        if (!v48) {
          unsigned int v49 = 0;
        }
        unsigned int v50 = v49 + ~(-1 << v48);
        unint64_t v51 = v11 + 2 * v48 + 1;
        int v52 = v51 & 7;
        unsigned int v53 = (unsigned int *)((char *)v9 + (v51 >> 3));
        unsigned int v54 = bswap32(*v53) << v52;
        if (v53 <= v15) {
          unint64_t v55 = v53;
        }
        else {
          unint64_t v55 = v15;
        }
        goto LABEL_101;
      }
      unint64_t v56 = (v11 + 1);
      int v57 = v56 & 7;
      unsigned int v58 = (unsigned int *)((char *)v9 + (v56 >> 3));
      unsigned int v59 = bswap32(*v58) << v57;
      unint64_t v60 = v58 <= v15 ? v58 : v15;
      if ((v10 & 0x80000000) != 0) {
        break;
      }
      unsigned int v61 = 0;
      do
      {
        char v62 = v57;
        unsigned int v63 = v59;
        unsigned int v64 = v61 + 1;
        unint64_t v65 = (v57 + 1);
        int v57 = ((_BYTE)v57 + 1) & 7;
        unint64_t v60 = (unsigned int *)((char *)v60 + (v65 >> 3));
        unsigned int v59 = bswap32(*v60) << (v65 & 7);
        if (v60 > v15) {
          unint64_t v60 = v15;
        }
        if ((v63 & 0x80000000) != 0) {
          break;
        }
        BOOL v66 = v61++ >= 0x1F;
      }
      while (!v66);
      if (v64 - 1 <= 0x17) {
        goto LABEL_98;
      }
      unsigned int v67 = v59 >> (48 - v64);
      unsigned int v68 = ((v62 + 1) & 7) + v64;
      unint64_t v69 = v68 - 16;
      int v52 = v68 & 7;
      int v70 = (unsigned int *)((char *)v60 + (v69 >> 3));
      unsigned int v71 = bswap32(*v70) << v52;
      if (v70 > v15) {
        int v70 = v15;
      }
      unsigned int v72 = *(unsigned int *)((char *)v70 + 2);
      unint64_t v55 = (unsigned int *)((char *)v70 + 2);
      unsigned int v54 = bswap32(v72) << v52;
      if (v55 > v15) {
        unint64_t v55 = v15;
      }
      int v73 = __PAIR64__(v67, v71) >> 16;
LABEL_100:
      unsigned int v50 = v73 + ~(-1 << v64);
LABEL_101:
      __int16 v75 = ((v50 + 1) >> 1) - ((v50 + 1) >> 1) * 2 * ((v50 + 1) & 1);
      unsigned int v76 = (_WORD *)(v44 + 16 * v43);
      *unsigned int v76 = v75;
      unsigned int v77 = __clz(v54 | 1);
      if (!v54) {
        ++v77;
      }
      unsigned int v78 = v54 << (v77 + 1) >> -(char)v77;
      if (!v77) {
        unsigned int v78 = 0;
      }
      int v79 = 1 << v77;
      unint64_t v80 = v52 + 2 * v77 + 1;
      int v11 = v80 & 7;
      unsigned int v9 = (unsigned int *)((char *)v55 + (v80 >> 3));
      unsigned int v10 = bswap32(*v9) << (v80 & 7);
      if (v9 > v15) {
        unsigned int v9 = v15;
      }
      v76[1] = ((v78 + v79) >> 1) - ((v78 + v79) >> 1) * 2 * ((v78 + v79) & 1);
      ++v43;
      if (++v47 >= *(_DWORD *)(a6 + 4 * v42)) {
        goto LABEL_108;
      }
    }
    unsigned int v64 = 0;
LABEL_98:
    int v73 = v59 >> -(char)v64;
    unint64_t v74 = v57 + v64;
    int v52 = v74 & 7;
    unint64_t v55 = (unsigned int *)((char *)v60 + (v74 >> 3));
    unsigned int v54 = bswap32(*v55) << (v74 & 7);
    if (v55 > v15) {
      unint64_t v55 = v15;
    }
    goto LABEL_100;
  }
LABEL_2:
  uint64_t v12 = 4294958327;
LABEL_156:
  *(void *)(a1 + 16) = v9;
  *(_DWORD *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 36) = v11;
  return v12;
}

uint64_t sub_221A17EF8(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, unsigned __int8 a9, uint64_t a10, char a11, int a12)
{
  uint64_t v93 = *MEMORY[0x263EF8340];
  if (*(unsigned char *)(a4 + 29)) {
    BOOL v18 = 1;
  }
  else {
    BOOL v18 = *(unsigned __int8 *)(a4 + 31) == 2;
  }
  int v19 = *(unsigned __int8 *)(*(void *)(a4 + 40) + 1);
  uint64_t v90 = a7;
  if (!a2)
  {
    unsigned int v29 = 0;
    unsigned int v30 = 16;
    goto LABEL_24;
  }
  int v20 = *(unsigned __int8 *)(*(void *)(a4 + 40) + 1);
  uint64_t v21 = *(void *)(a4 + 128);
  uint64_t v22 = 5;
  if (v21 && (*(unsigned char *)(a4 + 185) & 1) != 0)
  {
    BOOL v23 = *(unsigned char *)(a4 + 31) == 1 && *(unsigned char *)(v21 + 144) == 1;
    BOOL v24 = v23;
    BOOL v23 = (v24 & *(unsigned char *)(a4 + 16)) == 0;
    uint64_t v22 = 5;
    if (!v23) {
      uint64_t v22 = 13;
    }
  }
  if (!a6)
  {
    int v25 = 0;
    int v26 = 0;
    if (a7) {
      goto LABEL_17;
    }
LABEL_20:
    int v28 = 0;
    int v27 = 0;
    goto LABEL_21;
  }
  int v25 = *(unsigned __int8 *)(a6 + v22);
  int v26 = 1;
  if (!a7) {
    goto LABEL_20;
  }
LABEL_17:
  int v27 = *(unsigned __int8 *)(a7 + 10);
  int v28 = 1;
LABEL_21:
  if (sub_221A1C348(a1, byte_221A396E0[(unint64_t)(v27 + v25 + (v28 & v26)) >> (v28 & v26)], a10, 0x10u) == 999)return 4294958327; {
  unsigned int v30 = 15;
  }
  unsigned int v29 = 1;
  a7 = v90;
  int v19 = v20;
LABEL_24:
  uint64_t v87 = v29;
  uint64_t v91 = a1;
  if (a3)
  {
    unsigned int v32 = v92;
    memset(v92, 0, sizeof(v92));
  }
  else
  {
    unsigned int v32 = (_OWORD *)(a10 + 32);
  }
  uint64_t v33 = 0;
  uint64_t v34 = (uint64_t)v32 + 2 * v87;
  int v85 = v19;
  BOOL v86 = v18;
  uint64_t v35 = 48;
  if (!v19) {
    uint64_t v35 = 0;
  }
  uint64_t v36 = 1422194;
  if (v18) {
    uint64_t v36 = 1422418;
  }
  unint64_t v89 = (unsigned char *)(a4 + 1422192);
  uint64_t v37 = a4 + v36 + v87 + v35;
  do
  {
    if ((a8 >> (v33 >> 2)))
    {
      unsigned int v38 = sub_2219F87AC(v33, a5, a6, a7, a4);
      int v39 = sub_221A1C348(v91, v38, v34, v30);
      if (v39 == 999) {
        return 4294958327;
      }
      *(unsigned char *)(a5 + v33) = v39;
      a7 = v90;
      if (!a3 && *v89)
      {
        uint64_t v40 = 0;
        do
        {
          *(_WORD *)(v34 + 2 * v40) *= *(unsigned __int8 *)(v37 + v40);
          ++v40;
        }
        while (16 - v87 != v40);
      }
    }
    v34 += 32;
    ++v33;
  }
  while (v33 != 16);
  if (a3)
  {
    uint64_t v41 = 0;
    uint64_t v42 = a10 + 2 * v87 + 32;
    uint64_t v43 = v92;
    do
    {
      uint64_t v44 = 0;
      int v45 = v43;
      unsigned int v46 = (_WORD *)v42;
      do
      {
        uint64_t v47 = 0;
        unsigned int v48 = v46;
        do
        {
          *unsigned int v48 = *(_WORD *)((char *)v45 + v47);
          v48 += 4;
          v47 += 2;
        }
        while (v47 != 32);
        ++v44;
        ++v46;
        v45 += 2;
      }
      while (v44 != 4);
      v42 += 128;
      ++v41;
      v43 += 8;
    }
    while (v41 != 4);
  }
  int v49 = a11 & 0xFD;
  if (v49 == 1 && a12) {
    return 0;
  }
  if (a12 || v49 != 1)
  {
    int v50 = a9;
    if (!a9 && v49 != 1) {
      return 0;
    }
  }
  else
  {
    int v50 = a9;
    if (!a9) {
      return 0;
    }
  }
  if (sub_221A1C348(v91, 0, a10 + 800, 4u) == 999
    || sub_221A1C348(v91, 0, a10 + 808, 4u) == 999)
  {
    return 4294958327;
  }
  if (*v89)
  {
    uint64_t v51 = 0;
    uint64_t v52 = 64;
    if (!v85) {
      uint64_t v52 = 16;
    }
    uint64_t v53 = 1422194;
    if (v18) {
      uint64_t v53 = 1422418;
    }
    unsigned int v54 = (unsigned __int8 *)(a4 + v53 + v52);
    do
    {
      *(_WORD *)(a10 + 800 + v51) *= *v54;
      v51 += 2;
    }
    while (v51 != 8);
    uint64_t v55 = 0;
    uint64_t v56 = 80;
    if (!v85) {
      uint64_t v56 = 32;
    }
    uint64_t v57 = 1422194;
    if (v18) {
      uint64_t v57 = 1422418;
    }
    unsigned int v58 = (unsigned __int8 *)(a4 + v57 + v56);
    do
    {
      *(_WORD *)(a10 + 808 + v55) *= *v58;
      v55 += 2;
    }
    while (v55 != 8);
  }
  if (v50 != 1)
  {
    uint64_t v59 = 0;
    uint64_t v60 = a6 + 16;
    if (!a6) {
      uint64_t v60 = 0;
    }
    uint64_t v88 = v60;
    if (v90) {
      uint64_t v61 = v90 + 16;
    }
    else {
      uint64_t v61 = 0;
    }
    uint64_t v62 = *(void *)(a4 + 168);
    if (v62) {
      uint64_t v63 = v62 + 96;
    }
    else {
      uint64_t v63 = 0;
    }
    if (a5) {
      uint64_t v64 = a5 + 16;
    }
    else {
      uint64_t v64 = 0;
    }
    uint64_t v65 = 64;
    if (!v85) {
      uint64_t v65 = 16;
    }
    uint64_t v66 = 1422194;
    if (v18) {
      uint64_t v66 = 1422418;
    }
    uint64_t v67 = a10 + 546;
    uint64_t v68 = a4 + v66 + v65 + 1;
    while (1)
    {
      unsigned int v69 = sub_2219F88A0(v59, v64, v88, v61, v63, a4);
      int v70 = sub_221A1C348(v91, v69, v67, 0xFu);
      if (v70 == 999) {
        break;
      }
      *(unsigned char *)(v64 + v59) = v70;
      if (*v89)
      {
        for (uint64_t i = 0; i != 15; ++i)
          *(_WORD *)(v67 + 2 * i) *= *(unsigned __int8 *)(v68 + i);
      }
      v67 += 32;
      if (++v59 == 4)
      {
        uint64_t v72 = 0;
        if (a6) {
          uint64_t v73 = a6 + 20;
        }
        else {
          uint64_t v73 = 0;
        }
        if (v90) {
          uint64_t v74 = v90 + 20;
        }
        else {
          uint64_t v74 = 0;
        }
        uint64_t v75 = *(void *)(a4 + 168);
        if (v75) {
          uint64_t v76 = v75 + 100;
        }
        else {
          uint64_t v76 = 0;
        }
        if (a5) {
          uint64_t v77 = a5 + 20;
        }
        else {
          uint64_t v77 = 0;
        }
        uint64_t v78 = 80;
        if (!v85) {
          uint64_t v78 = 32;
        }
        uint64_t v79 = 1422194;
        if (v86) {
          uint64_t v79 = 1422418;
        }
        uint64_t v80 = a10 + 674;
        uint64_t v81 = a4 + v79 + v78 + 1;
        while (1)
        {
          unsigned int v82 = sub_2219F88A0(v72, v77, v73, v74, v76, a4);
          int v83 = sub_221A1C348(v91, v82, v80, 0xFu);
          if (v83 == 999) {
            break;
          }
          *(unsigned char *)(v77 + v72) = v83;
          if (*v89)
          {
            for (uint64_t j = 0; j != 15; ++j)
              *(_WORD *)(v80 + 2 * j) *= *(unsigned __int8 *)(v81 + j);
          }
          uint64_t result = 0;
          v80 += 32;
          if (++v72 == 4) {
            return result;
          }
        }
        return 4294958327;
      }
    }
    return 4294958327;
  }
  return 0;
}

uint64_t sub_221A18574(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4 = *(unsigned __int8 *)(a2 + 28);
  if (v4 != 6 && v4 != 1) {
    return 4294958327;
  }
  uint64_t v9 = *(void *)(a2 + 40);
  BOOL v8 = *(unsigned __int8 **)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  unint64_t v11 = *(void *)(a1 + 24);
  int v12 = *(_DWORD *)(a1 + 32);
  unsigned int v13 = __clz(v12 | 1);
  if (!v12) {
    ++v13;
  }
  unsigned int v14 = (v12 << (v13 + 1)) >> -(char)v13;
  if (!v13) {
    unsigned int v14 = 0;
  }
  unsigned int v15 = v14 + ~(-1 << v13);
  unint64_t v16 = *(unsigned __int8 *)(a1 + 36) + 2 * v13 + 1;
  int v17 = (unsigned int *)(*(void *)(a1 + 16) + (v16 >> 3));
  if ((unint64_t)v17 <= v11) {
    unint64_t v11 = *(void *)(a1 + 16) + (v16 >> 3);
  }
  unsigned __int8 v18 = v15 - 23;
  if (v15 <= 0x16) {
    unsigned __int8 v18 = v15;
  }
  unsigned int v19 = *v17;
  if (v15 <= 0x16) {
    unsigned int v20 = 3;
  }
  else {
    unsigned int v20 = 0;
  }
  char v21 = (*(unsigned char *)(a1 + 36) + 2 * v13 + 1) & 7;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 32) = bswap32(v19) << v21;
  *(unsigned char *)(a1 + 36) = v21;
  *(unsigned char *)uint64_t v9 = v15;
  *(unsigned char *)(v9 + 1) = v20;
  *(unsigned char *)(v9 + 2) = v18;
  int v22 = v18;
  if (v15 >= 0x17 && v18 == 25)
  {
    sub_221A17658(a1, v10, 0, 0);
    uint64_t result = 0;
    uint64_t v66 = *(void *)(a2 + 176);
    if (v66) {
      uint64_t v67 = (void *)(v66 + 80);
    }
    else {
      uint64_t v67 = 0;
    }
    v67[1] = 0x1010101010101010;
    v67[2] = 0x1010101010101010;
    *uint64_t v67 = 0x1010101010101010;
    *(unsigned char *)(*(void *)(a2 + 48) + 272) = 0;
    *(unsigned char *)(v9 + 54) = 0;
    return result;
  }
  *(unsigned char *)(v9 + 3) = 0;
  int v110 = (void *)v10;
  if (!*(unsigned char *)(a2 + 184) || (uint64_t v26 = *(void *)(a2 + 40), *(unsigned char *)(v26 + 1)) || *(unsigned char *)(v26 + 2))
  {
    int v27 = 0;
  }
  else
  {
    int v27 = *(_DWORD *)(a1 + 32) >> 31;
    unint64_t v70 = *(unsigned __int8 *)(a1 + 36) + 1;
    char v71 = v70 & 7;
    uint64_t v72 = (unsigned int *)(*(void *)(a1 + 16) + (v70 >> 3));
    unsigned int v73 = bswap32(*v72) << (v70 & 7);
    if ((unint64_t)v72 > *(void *)(a1 + 24)) {
      uint64_t v72 = *(unsigned int **)(a1 + 24);
    }
    *(void *)(a1 + 16) = v72;
    *(_DWORD *)(a1 + 32) = v73;
    *(unsigned char *)(a1 + 36) = v71;
    *(unsigned char *)(v9 + 3) = v27;
  }
  uint64_t result = sub_221A13BB4(v20, v22, v27, (uint64_t)v8, *(unsigned __int8 *)(a2 + 31));
  if (!result)
  {
    int v29 = v8[272];
    *(unsigned char *)(*(void *)(a2 + 176) + 126) = *(unsigned char *)(*(void *)(a2 + 48) + 272);
    int v30 = *((_DWORD *)v8 + 2);
    if (v30 != 3)
    {
      if (((uint64_t v31 = *(void *)(a2 + 40), *(unsigned char *)(v31 + 1)) || *(unsigned char *)(v31 + 2) == 25) && v29 == 4)
      {
        unsigned int v32 = *(unsigned int **)(a1 + 24);
        int v33 = *(_DWORD *)(a1 + 32);
        unsigned int v34 = __clz(v33 | 1);
        if (!v33) {
          ++v34;
        }
        unsigned int v35 = (v33 << (v34 + 1)) >> -(char)v34;
        if (v34) {
          unsigned int v36 = v35;
        }
        else {
          unsigned int v36 = 0;
        }
        unsigned int v37 = v36 + ~(-1 << v34);
        unint64_t v38 = *(unsigned __int8 *)(a1 + 36) + 2 * v34 + 1;
        int v39 = (unsigned int *)(*(void *)(a1 + 16) + (v38 >> 3));
        unsigned int v40 = *v39;
        *(_DWORD *)(v9 + 4) = v37;
        int v41 = v38 & 7;
        unsigned int v42 = bswap32(v40) << v41;
        if (v39 > v32) {
          int v39 = v32;
        }
        unsigned int v43 = __clz(v42 | 1);
        if (!v42) {
          ++v43;
        }
        unsigned int v44 = v42 << (v43 + 1) >> -(char)v43;
        if (!v43) {
          unsigned int v44 = 0;
        }
        unsigned int v45 = v44 + ~(-1 << v43);
        unint64_t v46 = v41 + 2 * v43 + 1;
        int v47 = v46 & 7;
        unsigned int v48 = (unsigned int *)((char *)v39 + (v46 >> 3));
        unsigned int v49 = bswap32(*v48) << (v46 & 7);
        if (v48 > v32) {
          unsigned int v48 = v32;
        }
        *(_DWORD *)(v9 + 8) = v45;
        unsigned int v50 = __clz(v49 | 1);
        if (!v49) {
          ++v50;
        }
        unsigned int v51 = v49 << (v50 + 1) >> -(char)v50;
        if (!v50) {
          unsigned int v51 = 0;
        }
        unsigned int v52 = v51 + ~(-1 << v50);
        unint64_t v53 = v47 + 2 * v50 + 1;
        int v54 = v53 & 7;
        uint64_t v55 = (unsigned int *)((char *)v48 + (v53 >> 3));
        unsigned int v56 = bswap32(*v55) << (v53 & 7);
        if (v55 > v32) {
          uint64_t v55 = v32;
        }
        *(_DWORD *)(v9 + 12) = v52;
        unsigned int v57 = __clz(v56 | 1);
        if (!v56) {
          ++v57;
        }
        unint64_t v58 = v54 + 2 * v57 + 1;
        uint64_t v59 = (unsigned int *)((char *)v55 + (v58 >> 3));
        unsigned int v60 = bswap32(*v59);
        if (v59 <= v32) {
          unsigned int v32 = v59;
        }
        char v61 = v58 & 7;
        unsigned int v62 = v60 << (v58 & 7);
        int v63 = ~(-1 << v57);
        unsigned int v64 = v56 << (v57 + 1) >> -(char)v57;
        if (v57) {
          unsigned int v65 = v64;
        }
        else {
          unsigned int v65 = 0;
        }
        *(_DWORD *)(v9 + 16) = v65 + v63;
        *(void *)(a1 + 16) = v32;
        *(_DWORD *)(a1 + 32) = v62;
        *(unsigned char *)(a1 + 36) = v61;
        uint64_t result = sub_221A13F50(*v8, *(unsigned __int8 *)(v9 + 1), v9 + 4, v9 + 20, (int *)(v9 + 36), (uint64_t)(v8 + 16), 0, 3);
        if (result) {
          return result;
        }
        sub_221A18C54(a1, v20, v9 + 4, v9 + 20, v9 + 36, (uint64_t)v8);
      }
      else
      {
        if ((a3 & 0xFFFFFFFD) == 1)
        {
          int v68 = a3;
          int v69 = a4;
        }
        else
        {
          int v68 = 0;
          int v69 = 0;
        }
        sub_221A19170(a1, (uint64_t)v8, v68, v69);
      }
      if (v30 == 2)
      {
        int v74 = 0;
        int v75 = 1;
LABEL_88:
        __int16 v111 = 0;
        uint64_t result = sub_221A13EA0(*(unsigned __int8 *)(v9 + 1), *(unsigned __int8 *)(v9 + 2), v74, &v111, (char *)&v111 + 1, 0, 0);
        if (result) {
          return result;
        }
        unsigned __int8 v86 = v111;
        *(unsigned char *)(v9 + 53) = v111;
        unsigned int v87 = HIBYTE(v111);
        *(unsigned char *)(v9 + 52) = HIBYTE(v111);
        if (((v74 < 1) & ~v75) != 0)
        {
          LOBYTE(v104) = 0;
LABEL_113:
          *(unsigned char *)(v9 + 54) = v104;
          if (*(void *)(a1 + 16) - *(void *)a1 <= *(int *)(a1 + 12)) {
            return 0;
          }
          else {
            return 4294958327;
          }
        }
        bzero(v110, 0x330uLL);
        int v88 = *(_DWORD *)(a1 + 32);
        int v89 = *(unsigned __int8 *)(a1 + 36);
        unsigned int v90 = __clz(v88 | 1);
        if (v88) {
          unsigned int v91 = v90;
        }
        else {
          unsigned int v91 = v90 + 1;
        }
        unsigned int v92 = (v88 << (v91 + 1)) >> -(char)v91;
        if (v91) {
          unsigned int v93 = v92;
        }
        else {
          unsigned int v93 = 0;
        }
        unint64_t v94 = v89 + 2 * v91 + 1;
        char v95 = (v89 + 2 * v91 + 1) & 7;
        uint64_t v96 = (unsigned int *)(*(void *)(a1 + 16) + (v94 >> 3));
        unsigned int v97 = bswap32(*v96) << (v94 & 7);
        if ((unint64_t)v96 > *(void *)(a1 + 24)) {
          uint64_t v96 = *(unsigned int **)(a1 + 24);
        }
        *(void *)(a1 + 16) = v96;
        *(_DWORD *)(a1 + 32) = v97;
        *(unsigned char *)(a1 + 36) = v95;
        uint64_t v98 = *(void *)(a2 + 176);
        if (v98) {
          uint64_t v99 = v98 + 80;
        }
        else {
          uint64_t v99 = 0;
        }
        uint64_t v100 = *(void *)(a2 + 128);
        uint64_t v101 = *(void *)(a2 + 136);
        if (v100) {
          uint64_t v102 = v100 + 80;
        }
        else {
          uint64_t v102 = 0;
        }
        if (v101) {
          uint64_t v103 = v101 + 80;
        }
        else {
          uint64_t v103 = 0;
        }
        uint64_t result = sub_221A17EF8(a1, v75, *(unsigned __int8 *)(v9 + 3), a2, v99, v102, v103, v87, v86, (uint64_t)v110, 0, 0);
        if (!result)
        {
          unsigned int v104 = ((v93 + (1 << v91)) >> 1) - ((v93 + (1 << v91)) >> 1) * 2 * ((v93 + (1 << v91)) & 1);
          goto LABEL_113;
        }
        return result;
      }
    }
    unint64_t v76 = *(void *)(a1 + 24);
    int v77 = *(_DWORD *)(a1 + 32);
    BOOL v79 = v15 > 0x16 && v22 == 0;
    unsigned int v80 = __clz(v77 | 1);
    if (!v77) {
      ++v80;
    }
    unsigned int v81 = (v77 << (v80 + 1)) >> -(char)v80;
    if (v80) {
      unsigned int v82 = v81;
    }
    else {
      unsigned int v82 = 0;
    }
    int v83 = (*(unsigned char *)(a1 + 36) + 2 * (_BYTE)v80 + 1) & 7;
    signed int v84 = (unsigned int *)(*(void *)(a1 + 16) + ((unint64_t)(*(unsigned __int8 *)(a1 + 36) + 2 * v80 + 1) >> 3));
    unsigned int v85 = bswap32(*v84) << v83;
    if ((unint64_t)v84 > v76) {
      signed int v84 = *(unsigned int **)(a1 + 24);
    }
    if ((a3 & 0xFFFFFFFD) == 1 && a4)
    {
      int v74 = 0;
LABEL_87:
      int v75 = 0;
      *(void *)(a1 + 16) = v84;
      *(_DWORD *)(a1 + 32) = v85;
      *(unsigned char *)(a1 + 36) = v83;
      goto LABEL_88;
    }
    unsigned int v105 = v82 + ~(-1 << v80);
    if (v8[1])
    {
      if (v105 <= 0x2F)
      {
        unint64_t v106 = (char *)&unk_221A3DBF0 + 192 * v79;
        goto LABEL_120;
      }
    }
    else if (v105 <= 0xF)
    {
      unint64_t v106 = (char *)&unk_221A3DB70 + 64 * v79;
LABEL_120:
      int v74 = *(_DWORD *)&v106[4 * v105];
      if ((v74 & 0xF) != 0)
      {
        if (!*(unsigned char *)(a2 + 184)) {
          LOBYTE(v79) = 1;
        }
        if (!v79 && v8[272] <= 4u)
        {
          uint64_t v107 = *(void *)(a2 + 40);
          if (*(unsigned char *)(v107 + 1) != 3 || *(unsigned char *)(v107 + 2) || **(unsigned char **)(a2 + 48))
          {
            unsigned int v108 = v85 >> 31;
            unint64_t v109 = (v83 + 1);
            LOBYTE(v83) = (v83 + 1) & 7;
            signed int v84 = (unsigned int *)((char *)v84 + (v109 >> 3));
            unsigned int v85 = bswap32(*v84) << (v109 & 7);
            if ((unint64_t)v84 > v76) {
              signed int v84 = *(unsigned int **)(a1 + 24);
            }
            *(unsigned char *)(v9 + 3) = v108;
          }
        }
      }
      goto LABEL_87;
    }
    return 4294958327;
  }
  return result;
}

uint64_t sub_221A18C54(uint64_t result, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a2 - 4) >= 0xFFFFFFFE)
  {
    uint64_t v6 = 0;
    LODWORD(v7) = 0;
    uint64_t v8 = a6 + 16;
    int v9 = *(unsigned __int8 *)(result + 36);
    unsigned int v10 = *(_DWORD *)(result + 32);
    int v12 = *(unsigned int **)(result + 16);
    unint64_t v11 = *(unsigned int **)(result + 24);
    while (1)
    {
      if (a2 == 3 && !*(_DWORD *)(a3 + 4 * v6) || *(_DWORD *)(a4 + 4 * v6) == 5)
      {
        if (*(int *)(a5 + 4 * v6) >= 1)
        {
          int v13 = 0;
          unsigned int v14 = (_DWORD *)(v8 + 16 * (int)v7);
          do
          {
            *unsigned int v14 = 0;
            v14 += 4;
            ++v13;
          }
          while (v13 < *(_DWORD *)(a5 + 4 * v6));
          LODWORD(v7) = v7 + v13;
        }
        goto LABEL_47;
      }
      if (*(int *)(a5 + 4 * v6) >= 1) {
        break;
      }
LABEL_47:
      if (++v6 == 4)
      {
        uint64_t v49 = 0;
        int v50 = 0;
        uint64_t v51 = a6 + 20;
        while (a2 == 3 && !*(_DWORD *)(a3 + 4 * v49) || *(_DWORD *)(a4 + 4 * v49) == 4)
        {
          if (*(int *)(a5 + 4 * v49) >= 1)
          {
            int v52 = 0;
            unint64_t v53 = (_DWORD *)(v51 + 16 * v50);
            do
            {
              *unint64_t v53 = 0;
              v53 += 4;
              ++v52;
            }
            while (v52 < *(_DWORD *)(a5 + 4 * v49));
            v50 += v52;
          }
LABEL_94:
          if (++v49 == 4)
          {
            *(void *)(result + 16) = v12;
            *(_DWORD *)(result + 32) = v10;
            *(unsigned char *)(result + 36) = v9;
            return result;
          }
        }
        if (*(int *)(a5 + 4 * v49) < 1) {
          goto LABEL_94;
        }
        int v54 = 0;
        uint64_t v55 = v50;
        while (2)
        {
          unsigned int v56 = __clz(v10 | 1);
          if (!v10) {
            ++v56;
          }
          if (v56 <= 0xC)
          {
            unsigned int v57 = v10 << (v56 + 1) >> -(char)v56;
            if (!v56) {
              unsigned int v57 = 0;
            }
            unsigned int v58 = v57 + ~(-1 << v56);
            unint64_t v59 = v9 + 2 * v56 + 1;
            int v60 = v59 & 7;
            char v61 = (unsigned int *)((char *)v12 + (v59 >> 3));
            unsigned int v62 = bswap32(*v61) << v60;
            if (v61 <= v11) {
              int v63 = v61;
            }
            else {
              int v63 = v11;
            }
LABEL_86:
            __int16 v82 = ((v58 + 1) >> 1) - ((v58 + 1) >> 1) * 2 * ((v58 + 1) & 1);
            uint64_t v83 = v8 + 16 * v55;
            *(_WORD *)(v83 + 4) = v82;
            unsigned int v84 = __clz(v62 | 1);
            if (!v62) {
              ++v84;
            }
            unsigned int v85 = v62 << (v84 + 1) >> -(char)v84;
            if (!v84) {
              unsigned int v85 = 0;
            }
            int v86 = 1 << v84;
            unint64_t v87 = v60 + 2 * v84 + 1;
            int v9 = v87 & 7;
            int v12 = (unsigned int *)((char *)v63 + (v87 >> 3));
            unsigned int v10 = bswap32(*v12) << (v87 & 7);
            if (v12 > v11) {
              int v12 = v11;
            }
            *(_WORD *)(v83 + 6) = ((v85 + v86) >> 1) - ((v85 + v86) >> 1) * 2 * ((v85 + v86) & 1);
            ++v55;
            if (++v54 >= *(_DWORD *)(a5 + 4 * v49))
            {
              int v50 = v55;
              goto LABEL_94;
            }
            continue;
          }
          break;
        }
        unint64_t v64 = (v9 + 1);
        int v65 = v64 & 7;
        uint64_t v66 = (unsigned int *)((char *)v12 + (v64 >> 3));
        unsigned int v67 = bswap32(*v66) << v65;
        if (v66 <= v11) {
          int v68 = v66;
        }
        else {
          int v68 = v11;
        }
        if ((v10 & 0x80000000) != 0)
        {
          unsigned int v72 = 0;
        }
        else
        {
          unsigned int v69 = 0;
          do
          {
            char v70 = v65;
            unsigned int v71 = v67;
            unsigned int v72 = v69 + 1;
            unint64_t v73 = (v65 + 1);
            int v65 = ((_BYTE)v65 + 1) & 7;
            int v68 = (unsigned int *)((char *)v68 + (v73 >> 3));
            unsigned int v67 = bswap32(*v68) << (v73 & 7);
            if (v68 > v11) {
              int v68 = v11;
            }
            if ((v71 & 0x80000000) != 0) {
              break;
            }
            BOOL v34 = v69++ >= 0x1F;
          }
          while (!v34);
          if (v72 - 1 > 0x17)
          {
            unsigned int v74 = v67 >> (48 - v72);
            unsigned int v75 = ((v70 + 1) & 7) + v72;
            unint64_t v76 = v75 - 16;
            int v60 = v75 & 7;
            int v77 = (unsigned int *)((char *)v68 + (v76 >> 3));
            unsigned int v78 = bswap32(*v77) << v60;
            if (v77 > v11) {
              int v77 = v11;
            }
            unsigned int v79 = *(unsigned int *)((char *)v77 + 2);
            int v63 = (unsigned int *)((char *)v77 + 2);
            unsigned int v62 = bswap32(v79) << v60;
            if (v63 > v11) {
              int v63 = v11;
            }
            int v80 = __PAIR64__(v74, v78) >> 16;
LABEL_85:
            unsigned int v58 = v80 + ~(-1 << v72);
            goto LABEL_86;
          }
        }
        int v80 = v67 >> -(char)v72;
        unint64_t v81 = v65 + v72;
        int v60 = v81 & 7;
        int v63 = (unsigned int *)((char *)v68 + (v81 >> 3));
        unsigned int v62 = bswap32(*v63) << (v81 & 7);
        if (v63 > v11) {
          int v63 = v11;
        }
        goto LABEL_85;
      }
    }
    int v15 = 0;
    uint64_t v7 = (int)v7;
    while (1)
    {
      unsigned int v16 = __clz(v10 | 1);
      if (!v10) {
        ++v16;
      }
      if (v16 <= 0xC)
      {
        unsigned int v17 = v10 << (v16 + 1) >> -(char)v16;
        if (!v16) {
          unsigned int v17 = 0;
        }
        unsigned int v18 = v17 + ~(-1 << v16);
        unint64_t v19 = v9 + 2 * v16 + 1;
        int v20 = v19 & 7;
        char v21 = (unsigned int *)((char *)v12 + (v19 >> 3));
        unsigned int v22 = bswap32(*v21) << v20;
        if (v21 <= v11) {
          BOOL v23 = v21;
        }
        else {
          BOOL v23 = v11;
        }
        goto LABEL_40;
      }
      unint64_t v24 = (v9 + 1);
      int v25 = v24 & 7;
      uint64_t v26 = (unsigned int *)((char *)v12 + (v24 >> 3));
      unsigned int v27 = bswap32(*v26) << v25;
      int v28 = v26 <= v11 ? v26 : v11;
      if ((v10 & 0x80000000) != 0) {
        break;
      }
      unsigned int v29 = 0;
      do
      {
        char v30 = v25;
        unsigned int v31 = v27;
        unsigned int v32 = v29 + 1;
        unint64_t v33 = (v25 + 1);
        int v25 = ((_BYTE)v25 + 1) & 7;
        int v28 = (unsigned int *)((char *)v28 + (v33 >> 3));
        unsigned int v27 = bswap32(*v28) << (v33 & 7);
        if (v28 > v11) {
          int v28 = v11;
        }
        if ((v31 & 0x80000000) != 0) {
          break;
        }
        BOOL v34 = v29++ >= 0x1F;
      }
      while (!v34);
      if (v32 - 1 <= 0x17) {
        goto LABEL_37;
      }
      unsigned int v35 = v27 >> (48 - v32);
      unsigned int v36 = ((v30 + 1) & 7) + v32;
      unint64_t v37 = v36 - 16;
      int v20 = v36 & 7;
      unint64_t v38 = (unsigned int *)((char *)v28 + (v37 >> 3));
      unsigned int v39 = bswap32(*v38) << v20;
      if (v38 > v11) {
        unint64_t v38 = v11;
      }
      unsigned int v40 = *(unsigned int *)((char *)v38 + 2);
      BOOL v23 = (unsigned int *)((char *)v38 + 2);
      unsigned int v22 = bswap32(v40) << v20;
      if (v23 > v11) {
        BOOL v23 = v11;
      }
      int v41 = __PAIR64__(v35, v39) >> 16;
LABEL_39:
      unsigned int v18 = v41 + ~(-1 << v32);
LABEL_40:
      __int16 v43 = ((v18 + 1) >> 1) - ((v18 + 1) >> 1) * 2 * ((v18 + 1) & 1);
      unsigned int v44 = (_WORD *)(v8 + 16 * v7);
      *unsigned int v44 = v43;
      unsigned int v45 = __clz(v22 | 1);
      if (!v22) {
        ++v45;
      }
      unsigned int v46 = v22 << (v45 + 1) >> -(char)v45;
      if (!v45) {
        unsigned int v46 = 0;
      }
      int v47 = 1 << v45;
      unint64_t v48 = v20 + 2 * v45 + 1;
      int v9 = v48 & 7;
      int v12 = (unsigned int *)((char *)v23 + (v48 >> 3));
      unsigned int v10 = bswap32(*v12) << (v48 & 7);
      if (v12 > v11) {
        int v12 = v11;
      }
      v44[1] = ((v46 + v47) >> 1) - ((v46 + v47) >> 1) * 2 * ((v46 + v47) & 1);
      ++v7;
      if (++v15 >= *(_DWORD *)(a5 + 4 * v6)) {
        goto LABEL_47;
      }
    }
    unsigned int v32 = 0;
LABEL_37:
    int v41 = v27 >> -(char)v32;
    unint64_t v42 = v25 + v32;
    int v20 = v42 & 7;
    BOOL v23 = (unsigned int *)((char *)v28 + (v42 >> 3));
    unsigned int v22 = bswap32(*v23) << (v42 & 7);
    if (v23 > v11) {
      BOOL v23 = v11;
    }
    goto LABEL_39;
  }
  return result;
}

uint64_t sub_221A19170(uint64_t result, uint64_t a2, int a3, int a4)
{
  unsigned int v4 = *(_DWORD *)(a2 + 8);
  if (v4 <= 7 && ((1 << v4) & 0x86) != 0)
  {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 1);
    uint64_t v7 = (unsigned char *)(result + 36);
    int v8 = *(unsigned __int8 *)(result + 36);
    int v9 = *(unsigned int **)(result + 16);
    unsigned int v10 = *(unsigned int **)(result + 24);
    int v11 = *(_DWORD *)(result + 32);
    if ((a3 & 0xFFFFFFFD) == 1)
    {
      if (v4 == 1)
      {
        for (uint64_t i = 0; i != 16; ++i)
        {
          unint64_t v13 = (v8 + 1);
          int v8 = ((_BYTE)v8 + 1) & 7;
          int v9 = (unsigned int *)((char *)v9 + (v13 >> 3));
          signed int v14 = bswap32(*v9) << (v13 & 7);
          if (v9 > v10) {
            int v9 = v10;
          }
          if ((v11 & 0x80000000) == 0)
          {
            unsigned int v15 = v14 >> 29;
            unint64_t v16 = (v8 + 3);
            int v8 = ((_BYTE)v8 + 3) & 7;
            int v9 = (unsigned int *)((char *)v9 + (v16 >> 3));
            signed int v14 = bswap32(*v9) << (v16 & 7);
            if (v9 > v10) {
              int v9 = v10;
            }
            *(unsigned char *)(a2 + i + 310) = v15;
          }
          *(unsigned char *)(a2 + i + 290) = v11 < 0;
          int v11 = v14;
        }
      }
      else
      {
        signed int v14 = *(_DWORD *)(result + 32);
      }
      if (v4 == 7)
      {
        for (uint64_t j = 0; j != 4; ++j)
        {
          unint64_t v97 = (v8 + 1);
          int v8 = ((_BYTE)v8 + 1) & 7;
          int v9 = (unsigned int *)((char *)v9 + (v97 >> 3));
          unsigned int v98 = bswap32(*v9) << (v97 & 7);
          if (v9 > v10) {
            int v9 = v10;
          }
          if ((v14 & 0x80000000) == 0)
          {
            unsigned int v99 = v98 >> 29;
            unint64_t v100 = (v8 + 3);
            int v8 = ((_BYTE)v8 + 3) & 7;
            int v9 = (unsigned int *)((char *)v9 + (v100 >> 3));
            unsigned int v98 = bswap32(*v9) << (v100 & 7);
            if (v9 > v10) {
              int v9 = v10;
            }
            *(unsigned char *)(a2 + j + 326) = v99;
          }
          *(unsigned char *)(a2 + j + 306) = v14 < 0;
          signed int v14 = v98;
        }
      }
      else
      {
        unsigned int v98 = v14;
      }
      LOBYTE(v109) = 0;
      if (a4 != 1 && v6)
      {
        unsigned int v110 = __clz(v98 | 1);
        if (!v98) {
          ++v110;
        }
        unsigned int v111 = v98 << (v110 + 1) >> -(char)v110;
        if (!v110) {
          unsigned int v111 = 0;
        }
        unsigned int v109 = v111 + ~(-1 << v110);
        unint64_t v112 = v8 + 2 * v110 + 1;
        LOBYTE(v8) = v112 & 7;
        int v9 = (unsigned int *)((char *)v9 + (v112 >> 3));
        unsigned int v98 = bswap32(*v9) << (v112 & 7);
        if (v9 > v10) {
          int v9 = v10;
        }
      }
      *(unsigned char *)(a2 + 289) = v109;
      goto LABEL_148;
    }
    if (v4 == 1)
    {
      for (uint64_t k = 0; k != 16; ++k)
      {
        unint64_t v18 = (v8 + 1);
        int v8 = ((_BYTE)v8 + 1) & 7;
        int v9 = (unsigned int *)((char *)v9 + (v18 >> 3));
        signed int v19 = bswap32(*v9) << (v18 & 7);
        if (v9 > v10) {
          int v9 = v10;
        }
        if ((v11 & 0x80000000) == 0)
        {
          unsigned int v20 = v19 >> 29;
          unint64_t v21 = (v8 + 3);
          int v8 = ((_BYTE)v8 + 3) & 7;
          int v9 = (unsigned int *)((char *)v9 + (v21 >> 3));
          signed int v19 = bswap32(*v9) << (v21 & 7);
          if (v9 > v10) {
            int v9 = v10;
          }
          *(unsigned char *)(a2 + k + 310) = v20;
        }
        *(unsigned char *)(a2 + k + 290) = v11 < 0;
        int v11 = v19;
      }
    }
    else
    {
      signed int v19 = *(_DWORD *)(result + 32);
    }
    if (v4 == 7)
    {
      for (uint64_t m = 0; m != 4; ++m)
      {
        unint64_t v102 = (v8 + 1);
        int v8 = ((_BYTE)v8 + 1) & 7;
        int v9 = (unsigned int *)((char *)v9 + (v102 >> 3));
        unsigned int v98 = bswap32(*v9) << (v102 & 7);
        if (v9 > v10) {
          int v9 = v10;
        }
        if ((v19 & 0x80000000) == 0)
        {
          unsigned int v103 = v98 >> 29;
          unint64_t v104 = (v8 + 3);
          int v8 = ((_BYTE)v8 + 3) & 7;
          int v9 = (unsigned int *)((char *)v9 + (v104 >> 3));
          unsigned int v98 = bswap32(*v9) << (v104 & 7);
          if (v9 > v10) {
            int v9 = v10;
          }
          *(unsigned char *)(a2 + m + 326) = v103;
        }
        *(unsigned char *)(a2 + m + 306) = v19 < 0;
        signed int v19 = v98;
      }
      if (!v6) {
        goto LABEL_137;
      }
    }
    else
    {
      unsigned int v98 = v19;
      if (!v6)
      {
LABEL_137:
        *(unsigned char *)(a2 + 289) = v6;
LABEL_148:
        *(void *)(result + 16) = v9;
        *(_DWORD *)(result + 32) = v98;
        goto LABEL_149;
      }
    }
    unsigned int v105 = __clz(v98 | 1);
    if (v98) {
      unsigned int v106 = v105;
    }
    else {
      unsigned int v106 = v105 + 1;
    }
    unsigned int v107 = v98 << (v106 + 1) >> -(char)v106;
    if (!v106) {
      unsigned int v107 = 0;
    }
    unsigned int v6 = v107 + ~(-1 << v106);
    unint64_t v108 = v8 + 2 * v106 + 1;
    LOBYTE(v8) = (v8 + 2 * v106 + 1) & 7;
    int v9 = (unsigned int *)((char *)v9 + (v108 >> 3));
    unsigned int v98 = bswap32(*v9) << (v108 & 7);
    if (v9 > v10) {
      int v9 = v10;
    }
    goto LABEL_137;
  }
  uint64_t v7 = (unsigned char *)(result + 36);
  int v8 = *(unsigned __int8 *)(result + 36);
  unsigned int v22 = *(unsigned int **)(result + 16);
  unsigned int v23 = *(_DWORD *)(result + 32);
  uint64_t v24 = *(unsigned __int8 *)(a2 + 272);
  if (*(unsigned char *)(a2 + 272))
  {
    uint64_t v25 = 0;
    uint64_t v26 = *(unsigned int **)(result + 24);
    uint64_t v27 = a2 + 16;
    while (1)
    {
      uint64_t v28 = v27 + 16 * v25;
      if (*(unsigned char *)(v28 + 15) != 5) {
        break;
      }
LABEL_66:
      if (++v25 == v24)
      {
        uint64_t v62 = 0;
        while (1)
        {
          uint64_t v63 = v27 + 16 * v62;
          if (*(unsigned char *)(v63 + 15) != 4) {
            break;
          }
LABEL_106:
          if (++v62 == v24) {
            goto LABEL_107;
          }
        }
        unsigned int v64 = __clz(v23 | 1);
        if (!v23) {
          ++v64;
        }
        if (v64 <= 0xC)
        {
          unsigned int v65 = v23 << (v64 + 1) >> -(char)v64;
          if (!v64) {
            unsigned int v65 = 0;
          }
          unsigned int v66 = v65 + ~(-1 << v64);
          unint64_t v67 = v8 + 2 * v64 + 1;
          int v68 = v67 & 7;
          unsigned int v69 = (unsigned int *)((char *)v22 + (v67 >> 3));
          unsigned int v70 = bswap32(*v69) << v68;
          if (v69 <= v26) {
            unsigned int v71 = v69;
          }
          else {
            unsigned int v71 = v26;
          }
          goto LABEL_97;
        }
        unint64_t v72 = (v8 + 1);
        int v73 = v72 & 7;
        unsigned int v74 = (unsigned int *)((char *)v22 + (v72 >> 3));
        unsigned int v75 = bswap32(*v74) << v73;
        if (v74 <= v26) {
          unint64_t v76 = v74;
        }
        else {
          unint64_t v76 = v26;
        }
        if ((v23 & 0x80000000) != 0)
        {
          unsigned int v80 = 0;
        }
        else
        {
          unsigned int v77 = 0;
          do
          {
            char v78 = v73;
            unsigned int v79 = v75;
            unsigned int v80 = v77 + 1;
            unint64_t v81 = (v73 + 1);
            int v73 = ((_BYTE)v73 + 1) & 7;
            unint64_t v76 = (unsigned int *)((char *)v76 + (v81 >> 3));
            unsigned int v75 = bswap32(*v76) << (v81 & 7);
            if (v76 > v26) {
              unint64_t v76 = v26;
            }
            if ((v79 & 0x80000000) != 0) {
              break;
            }
            BOOL v47 = v77++ >= 0x1F;
          }
          while (!v47);
          if (v80 - 1 > 0x17)
          {
            unsigned int v82 = v75 >> (48 - v80);
            unsigned int v83 = ((v78 + 1) & 7) + v80;
            unint64_t v84 = v83 - 16;
            int v68 = v83 & 7;
            unsigned int v85 = (unsigned int *)((char *)v76 + (v84 >> 3));
            unsigned int v86 = bswap32(*v85) << v68;
            if (v85 > v26) {
              unsigned int v85 = v26;
            }
            unsigned int v87 = *(unsigned int *)((char *)v85 + 2);
            unsigned int v71 = (unsigned int *)((char *)v85 + 2);
            unsigned int v70 = bswap32(v87) << v68;
            if (v71 > v26) {
              unsigned int v71 = v26;
            }
            int v88 = __PAIR64__(v82, v86) >> 16;
LABEL_96:
            unsigned int v66 = v88 + ~(-1 << v80);
LABEL_97:
            *(_WORD *)(v63 + 4) = ((v66 + 1) >> 1) - ((v66 + 1) >> 1) * 2 * (((_BYTE)v66 + 1) & 1);
            unsigned int v90 = __clz(v70 | 1);
            if (!v70) {
              ++v90;
            }
            unsigned int v91 = v70 << (v90 + 1) >> -(char)v90;
            if (v90) {
              unsigned int v92 = v91;
            }
            else {
              unsigned int v92 = 0;
            }
            int v93 = 1 << v90;
            unint64_t v94 = v68 + 2 * v90 + 1;
            int v8 = v94 & 7;
            char v95 = (unsigned int *)((char *)v71 + (v94 >> 3));
            unsigned int v23 = bswap32(*v95) << v8;
            if (v95 <= v26) {
              unsigned int v22 = v95;
            }
            else {
              unsigned int v22 = v26;
            }
            *(_WORD *)(v63 + 6) = ((v92 + v93) >> 1) - ((v92 + v93) >> 1) * 2 * (((_BYTE)v92 + (_BYTE)v93) & 1);
            goto LABEL_106;
          }
        }
        int v88 = v75 >> -(char)v80;
        unint64_t v89 = v73 + v80;
        int v68 = ((_BYTE)v73 + (_BYTE)v80) & 7;
        unsigned int v71 = (unsigned int *)((char *)v76 + (v89 >> 3));
        unsigned int v70 = bswap32(*v71) << (v89 & 7);
        if (v71 > v26) {
          unsigned int v71 = v26;
        }
        goto LABEL_96;
      }
    }
    unsigned int v29 = __clz(v23 | 1);
    if (!v23) {
      ++v29;
    }
    if (v29 <= 0xC)
    {
      unsigned int v30 = v23 << (v29 + 1) >> -(char)v29;
      if (!v29) {
        unsigned int v30 = 0;
      }
      unsigned int v31 = v30 + ~(-1 << v29);
      unint64_t v32 = v8 + 2 * v29 + 1;
      int v33 = v32 & 7;
      BOOL v34 = (unsigned int *)((char *)v22 + (v32 >> 3));
      unsigned int v35 = bswap32(*v34) << v33;
      if (v34 <= v26) {
        unsigned int v36 = v34;
      }
      else {
        unsigned int v36 = v26;
      }
      goto LABEL_57;
    }
    unint64_t v37 = (v8 + 1);
    int v38 = v37 & 7;
    unsigned int v39 = (unsigned int *)((char *)v22 + (v37 >> 3));
    unsigned int v40 = bswap32(*v39) << v38;
    if (v39 <= v26) {
      int v41 = v39;
    }
    else {
      int v41 = v26;
    }
    if ((v23 & 0x80000000) != 0)
    {
      unsigned int v45 = 0;
    }
    else
    {
      unsigned int v42 = 0;
      do
      {
        char v43 = v38;
        unsigned int v44 = v40;
        unsigned int v45 = v42 + 1;
        unint64_t v46 = (v38 + 1);
        int v38 = ((_BYTE)v38 + 1) & 7;
        int v41 = (unsigned int *)((char *)v41 + (v46 >> 3));
        unsigned int v40 = bswap32(*v41) << (v46 & 7);
        if (v41 > v26) {
          int v41 = v26;
        }
        if ((v44 & 0x80000000) != 0) {
          break;
        }
        BOOL v47 = v42++ >= 0x1F;
      }
      while (!v47);
      if (v45 - 1 > 0x17)
      {
        unsigned int v48 = v40 >> (48 - v45);
        unsigned int v49 = ((v43 + 1) & 7) + v45;
        unint64_t v50 = v49 - 16;
        int v33 = v49 & 7;
        uint64_t v51 = (unsigned int *)((char *)v41 + (v50 >> 3));
        unsigned int v52 = bswap32(*v51) << v33;
        if (v51 > v26) {
          uint64_t v51 = v26;
        }
        unsigned int v53 = *(unsigned int *)((char *)v51 + 2);
        unsigned int v36 = (unsigned int *)((char *)v51 + 2);
        unsigned int v35 = bswap32(v53) << v33;
        if (v36 > v26) {
          unsigned int v36 = v26;
        }
        int v54 = __PAIR64__(v48, v52) >> 16;
LABEL_56:
        unsigned int v31 = v54 + ~(-1 << v45);
LABEL_57:
        *(_WORD *)uint64_t v28 = ((v31 + 1) >> 1) - ((v31 + 1) >> 1) * 2 * (((_BYTE)v31 + 1) & 1);
        unsigned int v56 = __clz(v35 | 1);
        if (!v35) {
          ++v56;
        }
        unsigned int v57 = v35 << (v56 + 1) >> -(char)v56;
        if (v56) {
          unsigned int v58 = v57;
        }
        else {
          unsigned int v58 = 0;
        }
        int v59 = 1 << v56;
        unint64_t v60 = v33 + 2 * v56 + 1;
        int v8 = v60 & 7;
        char v61 = (unsigned int *)((char *)v36 + (v60 >> 3));
        unsigned int v23 = bswap32(*v61) << v8;
        if (v61 <= v26) {
          unsigned int v22 = v61;
        }
        else {
          unsigned int v22 = v26;
        }
        *(_WORD *)(v28 + 2) = ((v58 + v59) >> 1) - ((v58 + v59) >> 1) * 2 * (((_BYTE)v58 + (_BYTE)v59) & 1);
        goto LABEL_66;
      }
    }
    int v54 = v40 >> -(char)v45;
    unint64_t v55 = v38 + v45;
    int v33 = ((_BYTE)v38 + (_BYTE)v45) & 7;
    unsigned int v36 = (unsigned int *)((char *)v41 + (v55 >> 3));
    unsigned int v35 = bswap32(*v36) << (v55 & 7);
    if (v36 > v26) {
      unsigned int v36 = v26;
    }
    goto LABEL_56;
  }
LABEL_107:
  *(void *)(result + 16) = v22;
  *(_DWORD *)(result + 32) = v23;
LABEL_149:
  unsigned char *v7 = v8;
  return result;
}

uint64_t sub_221A198CC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4 = *(unsigned __int8 *)(a2 + 28);
  if (v4 != 5 && v4 != 0) {
    return 4294958327;
  }
  uint64_t v9 = *(void *)(a2 + 40);
  int v8 = *(unsigned __int8 **)(a2 + 48);
  unsigned int v10 = *(void **)(a2 + 56);
  unint64_t v11 = *(void *)(a1 + 24);
  int v12 = *(_DWORD *)(a1 + 32);
  unsigned int v13 = __clz(v12 | 1);
  if (!v12) {
    ++v13;
  }
  unsigned int v14 = (v12 << (v13 + 1)) >> -(char)v13;
  if (!v13) {
    unsigned int v14 = 0;
  }
  unsigned int v15 = v14 + ~(-1 << v13);
  unint64_t v16 = *(unsigned __int8 *)(a1 + 36) + 2 * v13 + 1;
  unsigned int v17 = (unsigned int *)(*(void *)(a1 + 16) + (v16 >> 3));
  if ((unint64_t)v17 <= v11) {
    unint64_t v11 = *(void *)(a1 + 16) + (v16 >> 3);
  }
  unsigned __int8 v18 = v15 - 5;
  if (v15 <= 4) {
    unsigned __int8 v18 = v15;
  }
  unsigned int v19 = *v17;
  BOOL v20 = v15 < 5;
  char v21 = v16 & 7;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 32) = bswap32(v19) << v21;
  *(unsigned char *)(a1 + 36) = v21;
  *(unsigned char *)uint64_t v9 = v15;
  int v22 = 2 * v20;
  *(unsigned char *)(v9 + 1) = 2 * v20;
  *(unsigned char *)(v9 + 2) = v18;
  int v23 = v18;
  if (v15 >= 5 && v18 == 25)
  {
    sub_221A17658(a1, (uint64_t)v10, 0, 0);
    uint64_t result = 0;
    uint64_t v31 = *(void *)(a2 + 176);
    if (v31) {
      unint64_t v32 = (void *)(v31 + 80);
    }
    else {
      unint64_t v32 = 0;
    }
    v32[1] = 0x1010101010101010;
    v32[2] = 0x1010101010101010;
    *unint64_t v32 = 0x1010101010101010;
    *(unsigned char *)(*(void *)(a2 + 48) + 272) = 0;
    *(unsigned char *)(v9 + 54) = 0;
    return result;
  }
  *(unsigned char *)(v9 + 3) = 0;
  if (!*(unsigned char *)(a2 + 184) || (uint64_t v27 = *(void *)(a2 + 40), *(unsigned char *)(v27 + 1)) || *(unsigned char *)(v27 + 2))
  {
    int v28 = 0;
  }
  else
  {
    int v28 = *(_DWORD *)(a1 + 32) >> 31;
    unint64_t v69 = *(unsigned __int8 *)(a1 + 36) + 1;
    char v70 = v69 & 7;
    unsigned int v71 = (unsigned int *)(*(void *)(a1 + 16) + (v69 >> 3));
    unsigned int v72 = bswap32(*v71) << (v69 & 7);
    if ((unint64_t)v71 > *(void *)(a1 + 24)) {
      unsigned int v71 = *(unsigned int **)(a1 + 24);
    }
    *(void *)(a1 + 16) = v71;
    *(_DWORD *)(a1 + 32) = v72;
    *(unsigned char *)(a1 + 36) = v70;
    *(unsigned char *)(v9 + 3) = v28;
  }
  uint64_t result = sub_221A13BB4(2 * v20, v23, v28, (uint64_t)v8, *(unsigned __int8 *)(a2 + 31));
  if (!result)
  {
    int v30 = v8[272];
    *(unsigned char *)(*(void *)(a2 + 176) + 126) = *(unsigned char *)(*(void *)(a2 + 48) + 272);
    if (*((_DWORD *)v8 + 2) == 3) {
      return 0xFFFFFFFFLL;
    }
    uint64_t v33 = *(void *)(a2 + 40);
    int v108 = *((_DWORD *)v8 + 2);
    if ((*(unsigned char *)(v33 + 1) || *(unsigned char *)(v33 + 2) == 25) && v30 == 4)
    {
      BOOL v34 = *(unsigned int **)(a1 + 24);
      int v35 = *(_DWORD *)(a1 + 32);
      unsigned int v36 = __clz(v35 | 1);
      if (!v35) {
        ++v36;
      }
      unsigned int v37 = (v35 << (v36 + 1)) >> -(char)v36;
      if (v36) {
        unsigned int v38 = v37;
      }
      else {
        unsigned int v38 = 0;
      }
      unsigned int v39 = v38 + ~(-1 << v36);
      unint64_t v40 = *(unsigned __int8 *)(a1 + 36) + 2 * v36 + 1;
      int v41 = (unsigned int *)(*(void *)(a1 + 16) + (v40 >> 3));
      unsigned int v42 = *v41;
      *(_DWORD *)(v9 + 4) = v39;
      int v43 = v40 & 7;
      unsigned int v44 = bswap32(v42) << v43;
      if (v41 > v34) {
        int v41 = v34;
      }
      unsigned int v45 = __clz(v44 | 1);
      if (!v44) {
        ++v45;
      }
      unsigned int v46 = v44 << (v45 + 1) >> -(char)v45;
      if (!v45) {
        unsigned int v46 = 0;
      }
      unsigned int v47 = v46 + ~(-1 << v45);
      unint64_t v48 = v43 + 2 * v45 + 1;
      int v49 = v48 & 7;
      unint64_t v50 = (unsigned int *)((char *)v41 + (v48 >> 3));
      unsigned int v51 = bswap32(*v50) << (v48 & 7);
      if (v50 > v34) {
        unint64_t v50 = v34;
      }
      *(_DWORD *)(v9 + 8) = v47;
      unsigned int v52 = __clz(v51 | 1);
      if (!v51) {
        ++v52;
      }
      unsigned int v53 = v51 << (v52 + 1) >> -(char)v52;
      if (!v52) {
        unsigned int v53 = 0;
      }
      unsigned int v54 = v53 + ~(-1 << v52);
      unint64_t v55 = v49 + 2 * v52 + 1;
      int v56 = v55 & 7;
      unsigned int v57 = (unsigned int *)((char *)v50 + (v55 >> 3));
      unsigned int v58 = bswap32(*v57) << (v55 & 7);
      if (v57 > v34) {
        unsigned int v57 = v34;
      }
      *(_DWORD *)(v9 + 12) = v54;
      unsigned int v59 = __clz(v58 | 1);
      if (!v58) {
        ++v59;
      }
      unint64_t v60 = v56 + 2 * v59 + 1;
      char v61 = (unsigned int *)((char *)v57 + (v60 >> 3));
      unsigned int v62 = bswap32(*v61);
      if (v61 <= v34) {
        BOOL v34 = v61;
      }
      char v63 = v60 & 7;
      unsigned int v64 = v62 << (v60 & 7);
      int v65 = ~(-1 << v59);
      unsigned int v66 = v58 << (v59 + 1) >> -(char)v59;
      if (v59) {
        unsigned int v67 = v66;
      }
      else {
        unsigned int v67 = 0;
      }
      *(_DWORD *)(v9 + 16) = v67 + v65;
      *(void *)(a1 + 16) = v34;
      *(_DWORD *)(a1 + 32) = v64;
      *(unsigned char *)(a1 + 36) = v63;
      uint64_t result = sub_221A13F50(*v8, *(unsigned __int8 *)(v9 + 1), v9 + 4, v9 + 20, (int *)(v9 + 36), (uint64_t)(v8 + 16), 0, 3);
      if (result) {
        return result;
      }
      sub_221A19F8C(a1, v22, v9 + 20, v9 + 36, (uint64_t)v8);
    }
    else
    {
      sub_221A1A1E0(a1, (uint64_t)v8);
    }
    if (v108 == 2)
    {
      int v68 = 0;
LABEL_83:
      __int16 v109 = 0;
      uint64_t result = sub_221A13EA0(*(unsigned __int8 *)(v9 + 1), *(unsigned __int8 *)(v9 + 2), v68, &v109, (char *)&v109 + 1, 0, 0);
      if (result) {
        return result;
      }
      unsigned __int8 v84 = v109;
      *(unsigned char *)(v9 + 53) = v109;
      unsigned int v85 = HIBYTE(v109);
      *(unsigned char *)(v9 + 52) = HIBYTE(v109);
      if (v108 != 2 && v68 < 1)
      {
        LOBYTE(v86) = 0;
        goto LABEL_109;
      }
      bzero(v10, 0x330uLL);
      int v89 = *(_DWORD *)(a1 + 32);
      int v90 = *(unsigned __int8 *)(a1 + 36);
      unsigned int v91 = __clz(v89 | 1);
      if (v89) {
        unsigned int v92 = v91;
      }
      else {
        unsigned int v92 = v91 + 1;
      }
      unsigned int v93 = (v89 << (v92 + 1)) >> -(char)v92;
      if (v92) {
        unsigned int v94 = v93;
      }
      else {
        unsigned int v94 = 0;
      }
      unint64_t v95 = v90 + 2 * v92 + 1;
      char v96 = (v90 + 2 * v92 + 1) & 7;
      unint64_t v97 = (unsigned int *)(*(void *)(a1 + 16) + (v95 >> 3));
      unsigned int v98 = bswap32(*v97) << (v95 & 7);
      if ((unint64_t)v97 > *(void *)(a1 + 24)) {
        unint64_t v97 = *(unsigned int **)(a1 + 24);
      }
      *(void *)(a1 + 16) = v97;
      *(_DWORD *)(a1 + 32) = v98;
      *(unsigned char *)(a1 + 36) = v96;
      uint64_t v99 = *(void *)(a2 + 176);
      if (v99) {
        uint64_t v100 = v99 + 80;
      }
      else {
        uint64_t v100 = 0;
      }
      uint64_t v101 = *(void *)(a2 + 128);
      uint64_t v102 = *(void *)(a2 + 136);
      if (v101) {
        uint64_t v103 = v101 + 80;
      }
      else {
        uint64_t v103 = 0;
      }
      if (v102) {
        uint64_t v104 = v102 + 80;
      }
      else {
        uint64_t v104 = 0;
      }
      uint64_t result = sub_221A17EF8(a1, v108 == 2, *(unsigned __int8 *)(v9 + 3), a2, v100, v103, v104, v85, v84, (uint64_t)v10, 0, 0);
      if (!result)
      {
        unsigned int v86 = ((v94 + (1 << v92)) >> 1) - ((v94 + (1 << v92)) >> 1) * 2 * ((v94 + (1 << v92)) & 1);
LABEL_109:
        *(unsigned char *)(v9 + 54) = v86;
        if (*(void *)(a1 + 16) - *(void *)a1 <= *(int *)(a1 + 12)) {
          return 0;
        }
        else {
          return 4294958327;
        }
      }
      return result;
    }
    unsigned int v73 = v8[272];
    unint64_t v74 = *(void *)(a1 + 24);
    int v75 = *(_DWORD *)(a1 + 32);
    BOOL v77 = v15 > 4 && v23 == 0;
    unsigned int v78 = __clz(v75 | 1);
    if (!v75) {
      ++v78;
    }
    unsigned int v79 = (v75 << (v78 + 1)) >> -(char)v78;
    if (v78) {
      unsigned int v80 = v79;
    }
    else {
      unsigned int v80 = 0;
    }
    int v81 = (*(unsigned char *)(a1 + 36) + 2 * (_BYTE)v78 + 1) & 7;
    unsigned int v82 = (unsigned int *)(*(void *)(a1 + 16) + ((unint64_t)(*(unsigned __int8 *)(a1 + 36) + 2 * v78 + 1) >> 3));
    unsigned int v83 = bswap32(*v82) << v81;
    if ((unint64_t)v82 > v74) {
      unsigned int v82 = *(unsigned int **)(a1 + 24);
    }
    if ((a3 & 0xFFFFFFFD) == 1 && a4)
    {
      int v68 = 0;
LABEL_82:
      *(void *)(a1 + 16) = v82;
      *(_DWORD *)(a1 + 32) = v83;
      *(unsigned char *)(a1 + 36) = v81;
      goto LABEL_83;
    }
    unsigned int v87 = v80 + ~(-1 << v78);
    if (v8[1])
    {
      if (v87 <= 0x2F)
      {
        int v88 = (char *)&unk_221A3DBF0 + 192 * v77;
        goto LABEL_116;
      }
    }
    else if (v87 <= 0xF)
    {
      int v88 = (char *)&unk_221A3DB70 + 64 * v77;
LABEL_116:
      int v68 = *(_DWORD *)&v88[4 * v87];
      if ((v68 & 0xF) != 0)
      {
        if (!*(unsigned char *)(a2 + 184)) {
          LOBYTE(v77) = 1;
        }
        if (!v77 && v73 <= 4)
        {
          uint64_t v105 = *(void *)(a2 + 40);
          if (*(unsigned char *)(v105 + 1) != 3 || *(unsigned char *)(v105 + 2) || **(unsigned char **)(a2 + 48))
          {
            unsigned int v106 = v83 >> 31;
            unint64_t v107 = (v81 + 1);
            LOBYTE(v81) = (v81 + 1) & 7;
            unsigned int v82 = (unsigned int *)((char *)v82 + (v107 >> 3));
            unsigned int v83 = bswap32(*v82) << (v107 & 7);
            if ((unint64_t)v82 > v74) {
              unsigned int v82 = *(unsigned int **)(a1 + 24);
            }
            *(unsigned char *)(v9 + 3) = v106;
          }
        }
      }
      goto LABEL_82;
    }
    return 4294958327;
  }
  return result;
}

uint64_t sub_221A19F8C(uint64_t result, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2 == 2)
  {
    uint64_t v5 = 0;
    LODWORD(v6) = 0;
    uint64_t v7 = a5 + 16;
    int v8 = *(unsigned __int8 *)(result + 36);
    unsigned int v9 = *(_DWORD *)(result + 32);
    unsigned int v10 = *(unsigned int **)(result + 16);
    unint64_t v11 = *(unsigned int **)(result + 24);
    while (1)
    {
      if (*(_DWORD *)(a3 + 4 * v5) == 5) {
        return result;
      }
      if (*(int *)(a4 + 4 * v5) >= 1) {
        break;
      }
LABEL_41:
      if (++v5 == 4)
      {
        *(void *)(result + 16) = v10;
        *(_DWORD *)(result + 32) = v9;
        *(unsigned char *)(result + 36) = v8;
        return result;
      }
    }
    int v12 = 0;
    uint64_t v6 = (int)v6;
    while (1)
    {
      unsigned int v13 = __clz(v9 | 1);
      if (!v9) {
        ++v13;
      }
      if (v13 <= 0xC)
      {
        unsigned int v14 = v9 << (v13 + 1) >> -(char)v13;
        if (!v13) {
          unsigned int v14 = 0;
        }
        unsigned int v15 = v14 + ~(-1 << v13);
        unint64_t v16 = v8 + 2 * v13 + 1;
        int v17 = v16 & 7;
        unsigned __int8 v18 = (unsigned int *)((char *)v10 + (v16 >> 3));
        unsigned int v19 = bswap32(*v18) << v17;
        if (v18 <= v11) {
          BOOL v20 = v18;
        }
        else {
          BOOL v20 = v11;
        }
        goto LABEL_34;
      }
      unint64_t v21 = (v8 + 1);
      int v22 = v21 & 7;
      int v23 = (unsigned int *)((char *)v10 + (v21 >> 3));
      unsigned int v24 = bswap32(*v23) << v22;
      uint64_t v25 = v23 <= v11 ? v23 : v11;
      if ((v9 & 0x80000000) != 0) {
        break;
      }
      unsigned int v26 = 0;
      do
      {
        char v27 = v22;
        unsigned int v28 = v24;
        unsigned int v29 = v26 + 1;
        unint64_t v30 = (v22 + 1);
        int v22 = ((_BYTE)v22 + 1) & 7;
        uint64_t v25 = (unsigned int *)((char *)v25 + (v30 >> 3));
        unsigned int v24 = bswap32(*v25) << (v30 & 7);
        if (v25 > v11) {
          uint64_t v25 = v11;
        }
        if ((v28 & 0x80000000) != 0) {
          break;
        }
      }
      while (v26++ < 0x1F);
      if (v29 - 1 <= 0x17) {
        goto LABEL_31;
      }
      unsigned int v32 = v24 >> (48 - v29);
      unsigned int v33 = ((v27 + 1) & 7) + v29;
      unint64_t v34 = v33 - 16;
      int v17 = v33 & 7;
      int v35 = (unsigned int *)((char *)v25 + (v34 >> 3));
      unsigned int v36 = bswap32(*v35) << v17;
      if (v35 > v11) {
        int v35 = v11;
      }
      unsigned int v37 = *(unsigned int *)((char *)v35 + 2);
      BOOL v20 = (unsigned int *)((char *)v35 + 2);
      unsigned int v19 = bswap32(v37) << v17;
      if (v20 > v11) {
        BOOL v20 = v11;
      }
      int v38 = __PAIR64__(v32, v36) >> 16;
LABEL_33:
      unsigned int v15 = v38 + ~(-1 << v29);
LABEL_34:
      __int16 v40 = ((v15 + 1) >> 1) - ((v15 + 1) >> 1) * 2 * ((v15 + 1) & 1);
      int v41 = (_WORD *)(v7 + 16 * v6);
      *int v41 = v40;
      unsigned int v42 = __clz(v19 | 1);
      if (!v19) {
        ++v42;
      }
      unsigned int v43 = v19 << (v42 + 1) >> -(char)v42;
      if (!v42) {
        unsigned int v43 = 0;
      }
      int v44 = 1 << v42;
      unint64_t v45 = v17 + 2 * v42 + 1;
      int v8 = v45 & 7;
      unsigned int v10 = (unsigned int *)((char *)v20 + (v45 >> 3));
      unsigned int v9 = bswap32(*v10) << (v45 & 7);
      if (v10 > v11) {
        unsigned int v10 = v11;
      }
      v41[1] = ((v43 + v44) >> 1) - ((v43 + v44) >> 1) * 2 * ((v43 + v44) & 1);
      ++v6;
      if (++v12 >= *(_DWORD *)(a4 + 4 * v5)) {
        goto LABEL_41;
      }
    }
    unsigned int v29 = 0;
LABEL_31:
    int v38 = v24 >> -(char)v29;
    unint64_t v39 = v22 + v29;
    int v17 = v39 & 7;
    BOOL v20 = (unsigned int *)((char *)v25 + (v39 >> 3));
    unsigned int v19 = bswap32(*v20) << (v39 & 7);
    if (v20 > v11) {
      BOOL v20 = v11;
    }
    goto LABEL_33;
  }
  return result;
}

uint64_t sub_221A1A1E0(uint64_t result, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)(a2 + 8);
  if (v2 <= 7 && ((1 << v2) & 0x86) != 0)
  {
    uint64_t v5 = *(unsigned int **)(result + 16);
    int v4 = *(unsigned int **)(result + 24);
    int v6 = *(_DWORD *)(result + 32);
    int v7 = *(unsigned __int8 *)(result + 36);
    if (v2 == 1)
    {
      for (uint64_t i = 0; i != 16; ++i)
      {
        unint64_t v9 = (v7 + 1);
        int v7 = ((_BYTE)v7 + 1) & 7;
        uint64_t v5 = (unsigned int *)((char *)v5 + (v9 >> 3));
        signed int v10 = bswap32(*v5) << (v9 & 7);
        if (v5 > v4) {
          uint64_t v5 = v4;
        }
        if ((v6 & 0x80000000) == 0)
        {
          unsigned int v11 = v10 >> 29;
          unint64_t v12 = (v7 + 3);
          int v7 = ((_BYTE)v7 + 3) & 7;
          uint64_t v5 = (unsigned int *)((char *)v5 + (v12 >> 3));
          signed int v10 = bswap32(*v5) << (v12 & 7);
          if (v5 > v4) {
            uint64_t v5 = v4;
          }
          *(unsigned char *)(a2 + i + 310) = v11;
        }
        *(unsigned char *)(a2 + i + 290) = v6 < 0;
        int v6 = v10;
      }
    }
    else
    {
      signed int v10 = *(_DWORD *)(result + 32);
    }
    int v13 = *(unsigned __int8 *)(a2 + 1);
    if (v2 == 7)
    {
      for (uint64_t j = 0; j != 4; ++j)
      {
        unint64_t v15 = (v7 + 1);
        int v7 = ((_BYTE)v7 + 1) & 7;
        uint64_t v5 = (unsigned int *)((char *)v5 + (v15 >> 3));
        unsigned int v16 = bswap32(*v5) << (v15 & 7);
        if (v5 > v4) {
          uint64_t v5 = v4;
        }
        if ((v10 & 0x80000000) == 0)
        {
          unsigned int v17 = v16 >> 29;
          unint64_t v18 = (v7 + 3);
          int v7 = ((_BYTE)v7 + 3) & 7;
          uint64_t v5 = (unsigned int *)((char *)v5 + (v18 >> 3));
          unsigned int v16 = bswap32(*v5) << (v18 & 7);
          if (v5 > v4) {
            uint64_t v5 = v4;
          }
          *(unsigned char *)(a2 + j + 326) = v17;
        }
        *(unsigned char *)(a2 + j + 306) = v10 < 0;
        signed int v10 = v16;
      }
      if (v13) {
        goto LABEL_26;
      }
    }
    else
    {
      unsigned int v16 = v10;
      if (*(unsigned char *)(a2 + 1))
      {
LABEL_26:
        unsigned int v19 = __clz(v16 | 1);
        if (v16) {
          unsigned int v20 = v19;
        }
        else {
          unsigned int v20 = v19 + 1;
        }
        unsigned int v21 = v16 << (v20 + 1) >> -(char)v20;
        if (!v20) {
          unsigned int v21 = 0;
        }
        unsigned int v22 = v21 + ~(-1 << v20);
        unint64_t v23 = v7 + 2 * v20 + 1;
        LOBYTE(v7) = (v7 + 2 * v20 + 1) & 7;
        uint64_t v5 = (unsigned int *)((char *)v5 + (v23 >> 3));
        unsigned int v16 = bswap32(*v5) << (v23 & 7);
        if (v5 > v4) {
          uint64_t v5 = v4;
        }
        goto LABEL_36;
      }
    }
    LOBYTE(v22) = 0;
LABEL_36:
    *(unsigned char *)(a2 + 289) = v22;
    *(void *)(result + 16) = v5;
    *(_DWORD *)(result + 32) = v16;
    *(unsigned char *)(result + 36) = v7;
    return result;
  }
  if (v2 != 3)
  {
    int v24 = *(unsigned __int8 *)(result + 36);
    unsigned int v25 = *(_DWORD *)(result + 32);
    unsigned int v26 = *(unsigned int **)(result + 16);
    uint64_t v27 = *(unsigned __int8 *)(a2 + 272);
    if (*(unsigned char *)(a2 + 272))
    {
      uint64_t v28 = 0;
      unsigned int v29 = *(unsigned int **)(result + 24);
      uint64_t v30 = a2 + 16;
      while (1)
      {
        uint64_t v31 = v30 + 16 * v28;
        if (*(unsigned char *)(v31 + 15) == 5) {
          return result;
        }
        unsigned int v32 = __clz(v25 | 1);
        if (!v25) {
          ++v32;
        }
        if (v32 <= 0xC)
        {
          unsigned int v33 = v25 << (v32 + 1) >> -(char)v32;
          if (!v32) {
            unsigned int v33 = 0;
          }
          unsigned int v34 = v33 + ~(-1 << v32);
          unint64_t v35 = v24 + 2 * v32 + 1;
          int v36 = v35 & 7;
          unsigned int v37 = (unsigned int *)((char *)v26 + (v35 >> 3));
          unsigned int v38 = bswap32(*v37) << v36;
          if (v37 <= v29) {
            unint64_t v39 = v37;
          }
          else {
            unint64_t v39 = v29;
          }
          goto LABEL_69;
        }
        unint64_t v40 = (v24 + 1);
        int v41 = v40 & 7;
        unsigned int v42 = (unsigned int *)((char *)v26 + (v40 >> 3));
        unsigned int v43 = bswap32(*v42) << v41;
        int v44 = v42 <= v29 ? v42 : v29;
        if ((v25 & 0x80000000) != 0) {
          break;
        }
        unsigned int v45 = 0;
        do
        {
          char v46 = v41;
          unsigned int v47 = v43;
          unsigned int v48 = v45 + 1;
          unint64_t v49 = (v41 + 1);
          int v41 = ((_BYTE)v41 + 1) & 7;
          int v44 = (unsigned int *)((char *)v44 + (v49 >> 3));
          unsigned int v43 = bswap32(*v44) << (v49 & 7);
          if (v44 > v29) {
            int v44 = v29;
          }
          if ((v47 & 0x80000000) != 0) {
            break;
          }
        }
        while (v45++ < 0x1F);
        if (v48 - 1 <= 0x17) {
          goto LABEL_66;
        }
        unsigned int v51 = v43 >> (48 - v48);
        unsigned int v52 = ((v46 + 1) & 7) + v48;
        unint64_t v53 = v52 - 16;
        int v36 = v52 & 7;
        unsigned int v54 = (unsigned int *)((char *)v44 + (v53 >> 3));
        unsigned int v55 = bswap32(*v54) << v36;
        if (v54 > v29) {
          unsigned int v54 = v29;
        }
        unsigned int v56 = *(unsigned int *)((char *)v54 + 2);
        unint64_t v39 = (unsigned int *)((char *)v54 + 2);
        unsigned int v38 = bswap32(v56) << v36;
        if (v39 > v29) {
          unint64_t v39 = v29;
        }
        int v57 = __PAIR64__(v51, v55) >> 16;
LABEL_68:
        unsigned int v34 = v57 + ~(-1 << v48);
LABEL_69:
        *(_WORD *)uint64_t v31 = ((v34 + 1) >> 1) - ((v34 + 1) >> 1) * 2 * (((_BYTE)v34 + 1) & 1);
        unsigned int v58 = __clz(v38 | 1);
        if (!v38) {
          ++v58;
        }
        unsigned int v59 = v38 << (v58 + 1) >> -(char)v58;
        if (v58) {
          unsigned int v60 = v59;
        }
        else {
          unsigned int v60 = 0;
        }
        int v61 = 1 << v58;
        unint64_t v62 = v36 + 2 * v58 + 1;
        int v24 = v62 & 7;
        char v63 = (unsigned int *)((char *)v39 + (v62 >> 3));
        unsigned int v25 = bswap32(*v63) << (v62 & 7);
        if (v63 <= v29) {
          unsigned int v26 = v63;
        }
        else {
          unsigned int v26 = v29;
        }
        *(_WORD *)(v31 + 2) = ((v60 + v61) >> 1) - ((v60 + v61) >> 1) * 2 * (((_BYTE)v60 + (_BYTE)v61) & 1);
        if (++v28 == v27) {
          goto LABEL_78;
        }
      }
      unsigned int v48 = 0;
LABEL_66:
      int v57 = v43 >> -(char)v48;
      int v36 = ((_BYTE)v41 + (_BYTE)v48) & 7;
      unint64_t v39 = (unsigned int *)((char *)v44 + ((unint64_t)(v41 + v48) >> 3));
      unsigned int v38 = bswap32(*v39) << ((v41 + v48) & 7);
      if (v39 > v29) {
        unint64_t v39 = v29;
      }
      goto LABEL_68;
    }
LABEL_78:
    *(void *)(result + 16) = v26;
    *(_DWORD *)(result + 32) = v25;
    *(unsigned char *)(result + 36) = v24;
  }
  return result;
}

uint64_t sub_221A1A5C0(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unint64_t v9 = *(unsigned char **)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  signed int v10 = *(void **)(a2 + 56);
  int v11 = *(_DWORD *)(a1 + 32);
  unsigned int v12 = __clz(v11 | 1);
  if (!v11) {
    ++v12;
  }
  unsigned int v13 = (v11 << (v12 + 1)) >> -(char)v12;
  if (!v12) {
    LOBYTE(v13) = 0;
  }
  unsigned int v14 = (unsigned int *)(*(void *)(a1 + 16) + ((unint64_t)(*(unsigned __int8 *)(a1 + 36) + 2 * v12 + 1) >> 3));
  int v15 = ~(-1 << v12);
  char v16 = (*(unsigned char *)(a1 + 36) + 2 * v12 + 1) & 7;
  unsigned int v17 = bswap32(*v14) << v16;
  if ((unint64_t)v14 > *(void *)(a1 + 24)) {
    unsigned int v14 = *(unsigned int **)(a1 + 24);
  }
  *(void *)(a1 + 16) = v14;
  *(_DWORD *)(a1 + 32) = v17;
  *(unsigned char *)(a1 + 36) = v16;
  *unint64_t v9 = v13 + v15;
  v9[1] = 0;
  v9[2] = v13 + v15;
  int v18 = (v13 + v15);
  if (v18 == 25)
  {
    sub_221A17658(a1, (uint64_t)v10, a3, a4);
    uint64_t v19 = *(void *)(a2 + 176);
    if (v19) {
      unsigned int v20 = (void *)(v19 + 80);
    }
    else {
      unsigned int v20 = 0;
    }
    *unsigned int v20 = 0x1010101010101010;
    v20[1] = 0x1010101010101010;
    if (!a4 || (a3 & 0xFD) != 1) {
      v20[2] = 0x1010101010101010;
    }
    uint64_t result = 0;
    *(unsigned char *)(*(void *)(a2 + 48) + 272) = 0;
    v9[54] = 0;
    return result;
  }
  v9[3] = 0;
  if (!*(unsigned char *)(a2 + 184) || (uint64_t v22 = *(void *)(a2 + 40), *(unsigned char *)(v22 + 1)) || *(unsigned char *)(v22 + 2))
  {
    int v23 = 0;
  }
  else
  {
    int v23 = *(_DWORD *)(a1 + 32) >> 31;
    unint64_t v40 = *(unsigned __int8 *)(a1 + 36) + 1;
    char v41 = v40 & 7;
    unsigned int v42 = (unsigned int *)(*(void *)(a1 + 16) + (v40 >> 3));
    unsigned int v43 = bswap32(*v42) << (v40 & 7);
    if ((unint64_t)v42 > *(void *)(a1 + 24)) {
      unsigned int v42 = *(unsigned int **)(a1 + 24);
    }
    *(void *)(a1 + 16) = v42;
    *(_DWORD *)(a1 + 32) = v43;
    *(unsigned char *)(a1 + 36) = v41;
    v9[3] = v23;
  }
  uint64_t result = sub_221A13BB4(0, v18, v23, v8, *(unsigned __int8 *)(a2 + 31));
  if (result) {
    return result;
  }
  *(unsigned char *)(*(void *)(a2 + 176) + 126) = *(unsigned char *)(*(void *)(a2 + 48) + 272);
  unsigned int v24 = *(_DWORD *)(v8 + 8);
  uint64_t result = 4294958327;
  if (v24 > 7 || ((1 << v24) & 0x86) == 0) {
    return result;
  }
  int v25 = *(unsigned __int8 *)(v8 + 1);
  unsigned int v26 = *(unsigned int **)(a1 + 16);
  uint64_t v27 = *(unsigned int **)(a1 + 24);
  int v28 = *(_DWORD *)(a1 + 32);
  int v29 = *(unsigned __int8 *)(a1 + 36);
  if ((a3 & 0xFFFFFFFD) != 1)
  {
    if (v24 == 1)
    {
      for (uint64_t i = 0; i != 16; ++i)
      {
        unint64_t v36 = (v29 + 1);
        int v29 = ((_BYTE)v29 + 1) & 7;
        unsigned int v26 = (unsigned int *)((char *)v26 + (v36 >> 3));
        signed int v37 = bswap32(*v26) << (v36 & 7);
        if (v26 > v27) {
          unsigned int v26 = v27;
        }
        if ((v28 & 0x80000000) == 0)
        {
          unsigned int v38 = v37 >> 29;
          unint64_t v39 = (v29 + 3);
          int v29 = ((_BYTE)v29 + 3) & 7;
          unsigned int v26 = (unsigned int *)((char *)v26 + (v39 >> 3));
          signed int v37 = bswap32(*v26) << (v39 & 7);
          if (v26 > v27) {
            unsigned int v26 = v27;
          }
          *(unsigned char *)(v8 + i + 310) = v38;
        }
        *(unsigned char *)(v8 + i + 290) = v28 < 0;
        int v28 = v37;
      }
    }
    else
    {
      signed int v37 = *(_DWORD *)(a1 + 32);
    }
    if (v24 == 7)
    {
      for (uint64_t j = 0; j != 4; ++j)
      {
        unint64_t v50 = (v29 + 1);
        int v29 = ((_BYTE)v29 + 1) & 7;
        unsigned int v26 = (unsigned int *)((char *)v26 + (v50 >> 3));
        unsigned int v46 = bswap32(*v26) << (v50 & 7);
        if (v26 > v27) {
          unsigned int v26 = v27;
        }
        if ((v37 & 0x80000000) == 0)
        {
          unsigned int v51 = v46 >> 29;
          unint64_t v52 = (v29 + 3);
          int v29 = ((_BYTE)v29 + 3) & 7;
          unsigned int v26 = (unsigned int *)((char *)v26 + (v52 >> 3));
          unsigned int v46 = bswap32(*v26) << (v52 & 7);
          if (v26 > v27) {
            unsigned int v26 = v27;
          }
          *(unsigned char *)(v8 + j + 326) = v51;
        }
        *(unsigned char *)(v8 + j + 306) = v37 < 0;
        signed int v37 = v46;
      }
      if (v25) {
        goto LABEL_75;
      }
    }
    else
    {
      unsigned int v46 = v37;
      if (v25)
      {
LABEL_75:
        unsigned int v54 = __clz(v46 | 1);
        if (!v46) {
          ++v54;
        }
        unsigned int v55 = v46 << (v54 + 1) >> -(char)v54;
        if (!v54) {
          unsigned int v55 = 0;
        }
        unsigned int v53 = v55 + ~(-1 << v54);
        unint64_t v56 = v29 + 2 * v54 + 1;
        int v29 = v56 & 7;
        unsigned int v26 = (unsigned int *)((char *)v26 + (v56 >> 3));
        unsigned int v46 = bswap32(*v26) << (v56 & 7);
        if (v26 > v27) {
          unsigned int v26 = v27;
        }
        goto LABEL_83;
      }
    }
    LOBYTE(v53) = 0;
    goto LABEL_83;
  }
  if (v24 == 1)
  {
    for (uint64_t k = 0; k != 16; ++k)
    {
      unint64_t v31 = (v29 + 1);
      int v29 = ((_BYTE)v29 + 1) & 7;
      unsigned int v26 = (unsigned int *)((char *)v26 + (v31 >> 3));
      signed int v32 = bswap32(*v26) << (v31 & 7);
      if (v26 > v27) {
        unsigned int v26 = v27;
      }
      if ((v28 & 0x80000000) == 0)
      {
        unsigned int v33 = v32 >> 29;
        unint64_t v34 = (v29 + 3);
        int v29 = ((_BYTE)v29 + 3) & 7;
        unsigned int v26 = (unsigned int *)((char *)v26 + (v34 >> 3));
        signed int v32 = bswap32(*v26) << (v34 & 7);
        if (v26 > v27) {
          unsigned int v26 = v27;
        }
        *(unsigned char *)(v8 + k + 310) = v33;
      }
      *(unsigned char *)(v8 + k + 290) = v28 < 0;
      int v28 = v32;
    }
  }
  else
  {
    signed int v32 = *(_DWORD *)(a1 + 32);
  }
  if (v24 == 7)
  {
    for (uint64_t m = 0; m != 4; ++m)
    {
      unint64_t v45 = (v29 + 1);
      int v29 = ((_BYTE)v29 + 1) & 7;
      unsigned int v26 = (unsigned int *)((char *)v26 + (v45 >> 3));
      unsigned int v46 = bswap32(*v26) << (v45 & 7);
      if (v26 > v27) {
        unsigned int v26 = v27;
      }
      if ((v32 & 0x80000000) == 0)
      {
        unsigned int v47 = v46 >> 29;
        unint64_t v48 = (v29 + 3);
        int v29 = ((_BYTE)v29 + 3) & 7;
        unsigned int v26 = (unsigned int *)((char *)v26 + (v48 >> 3));
        unsigned int v46 = bswap32(*v26) << (v48 & 7);
        if (v26 > v27) {
          unsigned int v26 = v27;
        }
        *(unsigned char *)(v8 + m + 326) = v47;
      }
      *(unsigned char *)(v8 + m + 306) = v32 < 0;
      signed int v32 = v46;
    }
  }
  else
  {
    unsigned int v46 = v32;
  }
  LOBYTE(v53) = 0;
  if (a4 != 1 && v25) {
    goto LABEL_75;
  }
LABEL_83:
  *(unsigned char *)(v8 + 289) = v53;
  *(void *)(a1 + 16) = v26;
  *(_DWORD *)(a1 + 32) = v46;
  *(unsigned char *)(a1 + 36) = v29;
  if (v24 == 2)
  {
    LOBYTE(v57) = 0;
    goto LABEL_111;
  }
  unint64_t v58 = *(void *)(a1 + 24);
  unsigned int v59 = __clz(v46 | 1);
  if (v46) {
    unsigned int v60 = v59;
  }
  else {
    unsigned int v60 = v59 + 1;
  }
  unsigned int v61 = v46 << (v60 + 1) >> -(char)v60;
  if (!v60) {
    unsigned int v61 = 0;
  }
  unsigned int v62 = v61 + ~(-1 << v60);
  unint64_t v63 = v29 + 2 * v60 + 1;
  unsigned int v64 = (unsigned int *)((char *)v26 + (v63 >> 3));
  unsigned int v65 = *v64;
  if ((unint64_t)v64 > v58) {
    unsigned int v64 = *(unsigned int **)(a1 + 24);
  }
  if (((a3 & 0xFD) != 1 || !a4) && *(unsigned char *)(v8 + 1))
  {
    if (v62 <= 0x2F)
    {
      unsigned int v66 = (char *)&unk_221A3DBF0 + 192 * (v18 == 0);
      goto LABEL_100;
    }
    return 4294958327;
  }
  if (v62 > 0xF) {
    return 4294958327;
  }
  unsigned int v66 = (char *)&unk_221A3DB70 + 64 * (unint64_t)(v18 == 0);
LABEL_100:
  unsigned int v67 = &v66[4 * v62];
  int v68 = v63 & 7;
  unsigned int v69 = bswap32(v65) << v68;
  int v57 = *(_DWORD *)v67;
  if ((*(_DWORD *)v67 & 0xF) != 0)
  {
    if (v18)
    {
      if (*(unsigned char *)(a2 + 184))
      {
        if (*(unsigned __int8 *)(v8 + 272) <= 4u)
        {
          uint64_t v70 = *(void *)(a2 + 40);
          if (*(unsigned char *)(v70 + 1) != 3 || *(unsigned char *)(v70 + 2) || **(unsigned char **)(a2 + 48))
          {
            unsigned int v71 = v69 >> 31;
            unint64_t v72 = (v68 + 1);
            LOBYTE(v68) = (v68 + 1) & 7;
            unsigned int v64 = (unsigned int *)((char *)v64 + (v72 >> 3));
            unsigned int v69 = bswap32(*v64) << (v72 & 7);
            if ((unint64_t)v64 > v58) {
              unsigned int v64 = *(unsigned int **)(a1 + 24);
            }
            v9[3] = v71;
          }
        }
      }
    }
  }
  *(void *)(a1 + 16) = v64;
  *(_DWORD *)(a1 + 32) = v69;
  *(unsigned char *)(a1 + 36) = v68;
LABEL_111:
  __int16 v95 = 0;
  if ((a3 & 0xFD) == 1)
  {
    int v73 = a3;
    int v74 = a4;
  }
  else
  {
    int v73 = 0;
    int v74 = 0;
  }
  uint64_t result = sub_221A13EA0(v9[1], v9[2], v57, &v95, (char *)&v95 + 1, v73, v74);
  if (!result)
  {
    int v75 = v95;
    v9[53] = v95;
    unsigned int v76 = HIBYTE(v95);
    v9[52] = HIBYTE(v95);
    if (v24 != 2 && !v76 && !v75)
    {
      LOBYTE(v77) = 0;
      goto LABEL_137;
    }
    BOOL v78 = v24 == 2;
    bzero(v10, 0x330uLL);
    int v79 = *(_DWORD *)(a1 + 32);
    int v80 = *(unsigned __int8 *)(a1 + 36);
    unsigned int v81 = __clz(v79 | 1);
    if (v79) {
      unsigned int v82 = v81;
    }
    else {
      unsigned int v82 = v81 + 1;
    }
    unsigned int v83 = (v79 << (v82 + 1)) >> -(char)v82;
    if (!v82) {
      unsigned int v83 = 0;
    }
    unsigned int v94 = v83;
    unint64_t v84 = v80 + 2 * v82 + 1;
    char v85 = (v80 + 2 * v82 + 1) & 7;
    unsigned int v86 = (unsigned int *)(*(void *)(a1 + 16) + (v84 >> 3));
    unsigned int v87 = bswap32(*v86) << (v84 & 7);
    if ((unint64_t)v86 > *(void *)(a1 + 24)) {
      unsigned int v86 = *(unsigned int **)(a1 + 24);
    }
    *(void *)(a1 + 16) = v86;
    *(_DWORD *)(a1 + 32) = v87;
    *(unsigned char *)(a1 + 36) = v85;
    uint64_t v88 = *(void *)(a2 + 176);
    if (v88) {
      uint64_t v89 = v88 + 80;
    }
    else {
      uint64_t v89 = 0;
    }
    uint64_t v90 = *(void *)(a2 + 128);
    uint64_t v91 = *(void *)(a2 + 136);
    if (v90) {
      uint64_t v92 = v90 + 80;
    }
    else {
      uint64_t v92 = 0;
    }
    if (v91) {
      uint64_t v93 = v91 + 80;
    }
    else {
      uint64_t v93 = 0;
    }
    uint64_t result = sub_221A17EF8(a1, v78, v9[3], a2, v89, v92, v93, v76, v75, (uint64_t)v10, a3, a4);
    if (!result)
    {
      unsigned int v77 = ((v94 + (1 << v82)) >> 1) - ((v94 + (1 << v82)) >> 1) * 2 * ((v94 + (1 << v82)) & 1);
LABEL_137:
      v9[54] = v77;
      if (*(void *)(a1 + 16) - *(void *)a1 <= *(int *)(a1 + 12)) {
        return 0;
      }
      else {
        return 4294958327;
      }
    }
  }
  return result;
}

uint64_t sub_221A1AD30(uint64_t a1, unsigned int a2, int a3, int a4, uint64_t a5)
{
  if (*(unsigned char *)(a5 + 188)) {
    LODWORD(result) = sub_221A1AD88(a1, a2, a3, a4, a5);
  }
  else {
    LODWORD(result) = sub_221A16670(a1, a2, a3, a4, a5);
  }
  if (*(void *)(a1 + 16) - *(void *)a1 <= *(int *)(a1 + 12)) {
    return result;
  }
  else {
    return 4294958327;
  }
}

uint64_t sub_221A1AD88(uint64_t a1, unsigned int a2, int a3, int a4, uint64_t a5)
{
  uint64_t v59 = *MEMORY[0x263EF8340];
  int v9 = *(unsigned __int8 *)(a5 + 28);
  uint64_t v10 = *(void *)(a5 + 40);
  int v11 = *(unsigned __int8 **)(a5 + 48);
  unsigned int v12 = *(void **)(a5 + 56);
  int v55 = *(char *)(v10 + 54);
  unsigned int v13 = *(unsigned __int8 **)(a5 + 208);
  __int16 v54 = 0;
  unsigned __int8 v53 = 0;
  unsigned int v52 = 0;
  uint64_t v14 = *(void *)(a5 + 128);
  uint64_t v15 = *(void *)(a5 + 136);
  if (v14) {
    char v16 = (unsigned __int8 *)(v14 + 120);
  }
  else {
    char v16 = 0;
  }
  if (v15) {
    unsigned int v17 = (unsigned __int8 *)(v15 + 120);
  }
  else {
    unsigned int v17 = 0;
  }
  v56[0] = v16;
  v56[1] = v17;
  uint64_t v18 = *(void *)(a5 + 168);
  uint64_t v19 = *(void *)(a5 + 160);
  BOOL v20 = v18 == 0;
  uint64_t v21 = v18 + 120;
  if (v20) {
    uint64_t v21 = 0;
  }
  int v57 = (unsigned char *)(*(void *)(a5 + 176) + 120);
  uint64_t v58 = v21;
  uint64_t v22 = v19 + 120;
  if (!v19) {
    uint64_t v22 = 0;
  }
  uint64_t v48 = v22;
  sub_221A1C910(v13, (uint64_t *)v56, v9, (unsigned char *)&v54 + 1);
  uint64_t v23 = sub_221A13B08(v9, HIBYTE(v54), (char *)&v54, &v53);
  if (v23) {
    return v23;
  }
  *(unsigned char *)uint64_t v10 = HIBYTE(v54);
  unsigned int v25 = v54;
  *(unsigned char *)(v10 + 1) = v54;
  int v26 = v53;
  *(unsigned char *)(v10 + 2) = v53;
  v57[1] = v25;
  v57[2] = v26;
  *(unsigned char *)(v10 + 3) = 0;
  if (!v25 && v26 == 25)
  {
    *(unsigned char *)(v10 + 54) = 0;
    sub_221A17658(a1, (uint64_t)v12, a3, a4);
    uint64_t v27 = *(void *)(a5 + 176);
    if (v27) {
      int v28 = (void *)(v27 + 80);
    }
    else {
      int v28 = 0;
    }
    *int v28 = 0x1010101010101010;
    v28[1] = 0x1010101010101010;
    if (!a4 || (a3 & 0xFD) != 1) {
      v28[2] = 0x1010101010101010;
    }
    if (*(void *)(a1 + 16) - *(void *)a1 > *(int *)(a1 + 12)) {
      return 4294958327;
    }
    v57[23] = 0;
    *(unsigned char *)(*(void *)(a5 + 48) + 272) = 0;
    *(unsigned char *)(*(void *)(a5 + 40) + 54) = 0;
    if (*(unsigned char *)(a1 + 36)) {
      return 0xFFFFFFFFLL;
    }
    sub_2219F8548((uint64_t)v13, a1);
    return 0;
  }
  v57[23] = 0;
  if (*(unsigned char *)(a5 + 184))
  {
    uint64_t v29 = *(void *)(a5 + 40);
    if (!*(unsigned char *)(v29 + 1) && !*(unsigned char *)(v29 + 2))
    {
      HIBYTE(v51) = 0;
      sub_221A1CEC4((uint64_t)v13, v56, (unsigned char *)&v51 + 1);
      *(unsigned char *)(v10 + 3) = HIBYTE(v51);
      unsigned int v25 = v54;
      int v26 = v53;
    }
  }
  uint64_t v23 = sub_221A13BB4(v25, v26, *(unsigned __int8 *)(v10 + 3), (uint64_t)v11, *(unsigned __int8 *)(a5 + 31));
  if (v23) {
    return v23;
  }
  int v30 = v11[272];
  *(unsigned char *)(*(void *)(a5 + 176) + 126) = *(unsigned char *)(*(void *)(a5 + 48) + 272);
  int v31 = *((_DWORD *)v11 + 2);
  if (v31 == 3)
  {
    unsigned int v32 = v11[272];
LABEL_30:
    sub_221A1CF8C((uint64_t)v13, v56, &v52, v11[1], a4, *(_DWORD *)(a5 + 16) & *(unsigned __int8 *)(a5 + 185));
    int v33 = 0;
    goto LABEL_31;
  }
  uint64_t v36 = *(void *)(a5 + 40);
  if ((*(unsigned char *)(v36 + 1) || *(unsigned char *)(v36 + 2) == 25) && v30 == 4)
  {
    sub_221A1CD28((uint64_t)v13, v9, v10 + 4);
    uint64_t v23 = sub_221A13F50(*v11, *(unsigned __int8 *)(v10 + 1), v10 + 4, v10 + 20, (int *)(v10 + 36), (uint64_t)(v11 + 16), 0, 3);
    if (v23) {
      return v23;
    }
    v57[6] = v11[272];
    uint64_t v37 = 31;
    for (uint64_t i = 7; i != 23; ++i)
    {
      v57[i] = v11[v37];
      v37 += 16;
    }
    LODWORD(v47) = a2;
    uint64_t v39 = sub_221A1E05C((int *)v13, (uint64_t *)v56, v54, v53, v10 + 4, v10 + 20, v10 + 36, *(unsigned __int8 *)(a5 + 31), v47, (uint64_t)v11, *(_DWORD *)(a5 + 16) & *(unsigned __int8 *)(a5 + 185));
  }
  else
  {
    v57[6] = v11[272];
    uint64_t v44 = 31;
    for (uint64_t j = 7; j != 23; ++j)
    {
      v57[j] = v11[v44];
      v44 += 16;
    }
    uint64_t v39 = sub_221A1D430((uint64_t)v13, (uint64_t *)v56, *(unsigned __int8 *)(a5 + 31), a2, (uint64_t)v11, a4, *(_DWORD *)(a5 + 16) & *(unsigned __int8 *)(a5 + 185));
  }
  uint64_t v23 = v39;
  if (v39) {
    return v23;
  }
  unsigned int v32 = v11[272];
  if (v31 != 2) {
    goto LABEL_30;
  }
  int v33 = 1;
LABEL_31:
  __int16 v51 = 0;
  if ((a3 & 0xFFFFFFFD) == 1)
  {
    int v34 = a3;
    int v35 = a4;
  }
  else
  {
    int v34 = 0;
    int v35 = 0;
  }
  uint64_t v23 = sub_221A13EA0(*(unsigned __int8 *)(v10 + 1), *(unsigned __int8 *)(v10 + 2), v52, &v51, (char *)&v51 + 1, v34, v35);
  if (!v23)
  {
    char v40 = v51;
    *(unsigned char *)(v10 + 53) = v51;
    char v41 = HIBYTE(v51);
    *(unsigned char *)(v10 + 52) = HIBYTE(v51);
    v57[4] = v41;
    v57[5] = v40;
    int v42 = v52;
    if ((v52 & 0xF) != 0 && *(unsigned char *)(a5 + 184))
    {
      uint64_t v43 = *(void *)(a5 + 40);
      if (*(unsigned char *)(v43 + 1))
      {
        if (v32 > 4 || *(unsigned char *)(v43 + 1) == 3 && !*(unsigned char *)(v43 + 2) && !**(unsigned char **)(a5 + 48)) {
          goto LABEL_62;
        }
LABEL_61:
        char v50 = 0;
        sub_221A1CEC4((uint64_t)v13, v56, &v50);
        *(unsigned char *)(v10 + 3) = v50;
        int v42 = v52;
        goto LABEL_62;
      }
      if (*(unsigned char *)(v43 + 2) && v32 < 5) {
        goto LABEL_61;
      }
    }
LABEL_62:
    if (((v42 < 1) & ~v33) != 0)
    {
      char v46 = 0;
    }
    else
    {
      bzero(v12, 0x330uLL);
      sub_221A1D2F8((uint64_t)v13, v48, (uint64_t)v57, &v55);
      sub_221A1E538((uint64_t)v13, (uint64_t *)v56, a2, *(unsigned __int8 *)(a5 + 31) - 1, *(void *)(a5 + 176) + 80, (uint64_t)v12, *(unsigned __int8 *)(v10 + 3), a5);
      char v46 = v55;
    }
    *(unsigned char *)(v10 + 54) = v46;
  }
  return v23;
}

uint64_t sub_221A1B2FC(uint64_t a1, int a2, int a3, int a4, uint64_t a5, unsigned char *a6)
{
  int v12 = *(unsigned __int8 *)(a5 + 28);
  uint64_t v14 = *(void *)(a5 + 40);
  unsigned int v13 = *(unsigned __int8 **)(a5 + 48);
  __int16 v245 = 0;
  int v15 = *(_DWORD *)(a1 + 32);
  int v16 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v17 = __clz(v15 | 1);
  if (!v15) {
    ++v17;
  }
  unsigned int v18 = (v15 << (v17 + 1)) >> -(char)v17;
  if (!v17) {
    unsigned int v18 = 0;
  }
  unsigned int v19 = v18 + ~(-1 << v17);
  unint64_t v20 = v16 + 2 * v17 + 1;
  char v21 = (v16 + 2 * v17 + 1) & 7;
  uint64_t v22 = (unsigned int *)(*(void *)(a1 + 16) + (v20 >> 3));
  unsigned int v23 = bswap32(*v22);
  if ((unint64_t)v22 > *(void *)(a1 + 24)) {
    uint64_t v22 = *(unsigned int **)(a1 + 24);
  }
  *(void *)(a1 + 16) = v22;
  *(_DWORD *)(a1 + 32) = v23 << v21;
  *(unsigned char *)(a1 + 36) = v21;
  uint64_t result = sub_221A13B08(v12, v19, (char *)&v245 + 1, &v245);
  if (!result)
  {
    *(unsigned char *)uint64_t v14 = v19;
    unsigned int v25 = HIBYTE(v245);
    *(unsigned char *)(v14 + 1) = HIBYTE(v245);
    int v26 = v245;
    *(unsigned char *)(v14 + 2) = v245;
    if (!v25 && v26 == 25)
    {
      sub_221A17658(a1, (uint64_t)a6, a3, a4);
      uint64_t v27 = *(void *)(a5 + 176);
      if (v27) {
        int v28 = (void *)(v27 + 80);
      }
      else {
        int v28 = 0;
      }
      *int v28 = 0x1010101010101010;
      v28[1] = 0x1010101010101010;
      if (!a4 || (a3 & 0xFD) != 1) {
        v28[2] = 0x1010101010101010;
      }
      uint64_t result = 0;
      *(unsigned char *)(*(void *)(a5 + 48) + 272) = 0;
      *(unsigned char *)(v14 + 54) = 0;
      return result;
    }
    *(unsigned char *)(v14 + 3) = 0;
    if (!*(unsigned char *)(a5 + 184) || (uint64_t v29 = *(void *)(a5 + 40), *(unsigned char *)(v29 + 1)) || *(unsigned char *)(v29 + 2))
    {
      int v30 = 0;
    }
    else
    {
      int v30 = *(_DWORD *)(a1 + 32) >> 31;
      unint64_t v79 = *(unsigned __int8 *)(a1 + 36) + 1;
      char v80 = v79 & 7;
      unsigned int v81 = (unsigned int *)(*(void *)(a1 + 16) + (v79 >> 3));
      unsigned int v82 = bswap32(*v81) << (v79 & 7);
      if ((unint64_t)v81 > *(void *)(a1 + 24)) {
        unsigned int v81 = *(unsigned int **)(a1 + 24);
      }
      *(void *)(a1 + 16) = v81;
      *(_DWORD *)(a1 + 32) = v82;
      *(unsigned char *)(a1 + 36) = v80;
      *(unsigned char *)(v14 + 3) = v30;
    }
    uint64_t result = sub_221A13BB4(v25, v26, v30, (uint64_t)v13, *(unsigned __int8 *)(a5 + 31));
    if (!result)
    {
      int v31 = v13[272];
      *(unsigned char *)(*(void *)(a5 + 176) + 126) = *(unsigned char *)(*(void *)(a5 + 48) + 272);
      unsigned int v32 = *((_DWORD *)v13 + 2);
      if (v32 == 3) {
        goto LABEL_259;
      }
      uint64_t v33 = (uint64_t)(v13 + 16);
      uint64_t v34 = *(void *)(a5 + 40);
      if ((*(unsigned char *)(v34 + 1) || *(unsigned char *)(v34 + 2) == 25) && v31 == 4)
      {
        int v35 = *(unsigned int **)(a1 + 24);
        int v36 = *(_DWORD *)(a1 + 32);
        unsigned int v37 = __clz(v36 | 1);
        if (!v36) {
          ++v37;
        }
        unsigned int v38 = (v36 << (v37 + 1)) >> -(char)v37;
        if (v37) {
          unsigned int v39 = v38;
        }
        else {
          unsigned int v39 = 0;
        }
        unsigned int v40 = v39 + ~(-1 << v37);
        unint64_t v41 = *(unsigned __int8 *)(a1 + 36) + 2 * v37 + 1;
        int v42 = (unsigned int *)(*(void *)(a1 + 16) + (v41 >> 3));
        unsigned int v43 = *v42;
        *(_DWORD *)(v14 + 4) = v40;
        int v44 = v41 & 7;
        unsigned int v45 = bswap32(v43) << v44;
        if (v42 > v35) {
          int v42 = v35;
        }
        unsigned int v46 = __clz(v45 | 1);
        if (!v45) {
          ++v46;
        }
        unsigned int v47 = v45 << (v46 + 1) >> -(char)v46;
        if (!v46) {
          unsigned int v47 = 0;
        }
        unsigned int v48 = v47 + ~(-1 << v46);
        unint64_t v49 = v44 + 2 * v46 + 1;
        int v50 = v49 & 7;
        __int16 v51 = (unsigned int *)((char *)v42 + (v49 >> 3));
        unsigned int v52 = bswap32(*v51) << (v49 & 7);
        if (v51 > v35) {
          __int16 v51 = v35;
        }
        *(_DWORD *)(v14 + 8) = v48;
        unsigned int v53 = __clz(v52 | 1);
        if (!v52) {
          ++v53;
        }
        unsigned int v54 = v52 << (v53 + 1) >> -(char)v53;
        if (!v53) {
          unsigned int v54 = 0;
        }
        unsigned int v55 = v54 + ~(-1 << v53);
        unint64_t v56 = v50 + 2 * v53 + 1;
        int v57 = v56 & 7;
        uint64_t v58 = (unsigned int *)((char *)v51 + (v56 >> 3));
        unsigned int v59 = bswap32(*v58) << (v56 & 7);
        if (v58 > v35) {
          uint64_t v58 = v35;
        }
        *(_DWORD *)(v14 + 12) = v55;
        unsigned int v60 = __clz(v59 | 1);
        if (!v59) {
          ++v60;
        }
        unint64_t v61 = v57 + 2 * v60 + 1;
        unsigned int v62 = (unsigned int *)((char *)v58 + (v61 >> 3));
        unsigned int v63 = bswap32(*v62);
        if (v62 <= v35) {
          int v35 = v62;
        }
        char v64 = v61 & 7;
        unsigned int v65 = v63 << (v61 & 7);
        int v66 = ~(-1 << v60);
        unsigned int v67 = v59 << (v60 + 1) >> -(char)v60;
        if (v60) {
          unsigned int v68 = v67;
        }
        else {
          unsigned int v68 = 0;
        }
        *(_DWORD *)(v14 + 16) = v68 + v66;
        *(void *)(a1 + 16) = v35;
        *(_DWORD *)(a1 + 32) = v65;
        *(unsigned char *)(a1 + 36) = v64;
        unsigned int v241 = v32;
        uint64_t result = sub_221A13F50(*v13, *(unsigned __int8 *)(v14 + 1), v14 + 4, v14 + 20, (int *)(v14 + 36), v33, 0, 3);
        if (result) {
          return result;
        }
        uint64_t result = sub_221A17734(a1, HIBYTE(v245), v245, v14 + 4, v14 + 20, v14 + 36, *(unsigned __int8 *)(a5 + 31), a2, (uint64_t)v13);
        unsigned int v32 = v241;
        if (result) {
          return result;
        }
LABEL_257:
        if (v32 == 2)
        {
          int v199 = 0;
          int v200 = 1;
          char v201 = a3 & 0xFD;
          goto LABEL_288;
        }
LABEL_259:
        char v201 = a3 & 0xFD;
        unsigned int v202 = v13[272];
        unint64_t v203 = *(void *)(a1 + 24);
        int v204 = *(_DWORD *)(a1 + 32);
        unsigned int v205 = __clz(v204 | 1);
        if (v204) {
          unsigned int v206 = v205;
        }
        else {
          unsigned int v206 = v205 + 1;
        }
        unsigned int v207 = (v204 << (v206 + 1)) >> -(char)v206;
        if (!v206) {
          unsigned int v207 = 0;
        }
        unsigned int v208 = v207 + ~(-1 << v206);
        unsigned int v209 = (unsigned int *)(*(void *)(a1 + 16)
                              + ((unint64_t)(*(unsigned __int8 *)(a1 + 36) + 2 * v206 + 1) >> 3));
        unsigned int v210 = *v209;
        if ((unint64_t)v209 > v203) {
          unsigned int v209 = *(unsigned int **)(a1 + 24);
        }
        if ((a3 & 0xFD) == 1 && a4 || !v13[1])
        {
          if (v208 <= 0xF)
          {
            int v211 = (char *)&unk_221A3DB70 + 64 * (unint64_t)((HIBYTE(v245) | v245) == 0);
            goto LABEL_274;
          }
        }
        else if (v208 <= 0x2F)
        {
          int v211 = (char *)&unk_221A3DBF0 + 192 * ((HIBYTE(v245) | v245) == 0);
LABEL_274:
          int v212 = (int *)&v211[4 * v208];
          int v213 = (*(unsigned char *)(a1 + 36) + 2 * (_BYTE)v206 + 1) & 7;
          unsigned int v214 = bswap32(v210) << ((*(unsigned char *)(a1 + 36) + 2 * v206 + 1) & 7);
          int v199 = *v212;
          if ((*v212 & 0xF) == 0 || !*(unsigned char *)(a5 + 184)) {
            goto LABEL_287;
          }
          uint64_t v215 = *(void *)(a5 + 40);
          if (*(unsigned char *)(v215 + 1))
          {
            if (v202 > 4 || *(unsigned char *)(v215 + 1) == 3 && !*(unsigned char *)(v215 + 2) && !**(unsigned char **)(a5 + 48))
            {
LABEL_287:
              int v200 = 0;
              *(void *)(a1 + 16) = v209;
              *(_DWORD *)(a1 + 32) = v214;
              *(unsigned char *)(a1 + 36) = v213;
LABEL_288:
              __int16 v244 = 0;
              if (v201 == 1)
              {
                int v218 = a3;
                int v219 = a4;
              }
              else
              {
                int v218 = 0;
                int v219 = 0;
              }
              uint64_t result = sub_221A13EA0(*(unsigned __int8 *)(v14 + 1), *(unsigned __int8 *)(v14 + 2), v199, &v244, (char *)&v244 + 1, v218, v219);
              if (result) {
                return result;
              }
              int v220 = v200;
              unsigned __int8 v221 = v244;
              *(unsigned char *)(v14 + 53) = v244;
              unsigned int v222 = HIBYTE(v244);
              *(unsigned char *)(v14 + 52) = HIBYTE(v244);
              a6[817] = v221;
              a6[816] = v222;
              if (((v199 < 1) & ~v220) != 0)
              {
                LOBYTE(v240) = 0;
              }
              else
              {
                int v243 = v220;
                bzero(a6, 0x330uLL);
                int v223 = *(_DWORD *)(a1 + 32);
                int v224 = *(unsigned __int8 *)(a1 + 36);
                unsigned int v225 = __clz(v223 | 1);
                if (v223) {
                  unsigned int v226 = v225;
                }
                else {
                  unsigned int v226 = v225 + 1;
                }
                unsigned int v227 = (v223 << (v226 + 1)) >> -(char)v226;
                if (!v226) {
                  unsigned int v227 = 0;
                }
                unsigned int v242 = v227;
                unint64_t v228 = v224 + 2 * v226 + 1;
                char v229 = (v224 + 2 * v226 + 1) & 7;
                uint64_t v230 = (unsigned int *)(*(void *)(a1 + 16) + (v228 >> 3));
                unsigned int v231 = bswap32(*v230) << (v228 & 7);
                if ((unint64_t)v230 > *(void *)(a1 + 24)) {
                  uint64_t v230 = *(unsigned int **)(a1 + 24);
                }
                *(void *)(a1 + 16) = v230;
                *(_DWORD *)(a1 + 32) = v231;
                *(unsigned char *)(a1 + 36) = v229;
                uint64_t v232 = *(void *)(a5 + 176);
                if (v232) {
                  uint64_t v233 = v232 + 80;
                }
                else {
                  uint64_t v233 = 0;
                }
                uint64_t v234 = *(void *)(a5 + 128);
                uint64_t v235 = *(void *)(a5 + 136);
                if (v234) {
                  uint64_t v236 = v234 + 80;
                }
                else {
                  uint64_t v236 = 0;
                }
                if (v235) {
                  uint64_t v237 = v235 + 80;
                }
                else {
                  uint64_t v237 = 0;
                }
                if (v201 == 1) {
                  char v238 = a3;
                }
                else {
                  char v238 = 0;
                }
                if (v201 == 1) {
                  int v239 = a4;
                }
                else {
                  int v239 = 0;
                }
                uint64_t result = sub_221A17EF8(a1, v243, *(unsigned __int8 *)(v14 + 3), a5, v233, v236, v237, v222, v221, (uint64_t)a6, v238, v239);
                if (result) {
                  return result;
                }
                unsigned int v240 = ((v242 + (1 << v226)) >> 1) - ((v242 + (1 << v226)) >> 1) * 2 * ((v242 + (1 << v226)) & 1);
              }
              uint64_t result = 0;
              *(unsigned char *)(v14 + 54) = v240;
              return result;
            }
          }
          else if (!*(unsigned char *)(v215 + 2) || v202 >= 5)
          {
            goto LABEL_287;
          }
          unsigned int v216 = v214 >> 31;
          unint64_t v217 = (v213 + 1);
          LOBYTE(v213) = (v213 + 1) & 7;
          unsigned int v209 = (unsigned int *)((char *)v209 + (v217 >> 3));
          unsigned int v214 = bswap32(*v209) << (v217 & 7);
          if ((unint64_t)v209 > v203) {
            unsigned int v209 = *(unsigned int **)(a1 + 24);
          }
          *(unsigned char *)(v14 + 3) = v216;
          goto LABEL_287;
        }
        return 4294958327;
      }
      if (v32 <= 7 && ((1 << v32) & 0x86) != 0)
      {
        int v69 = v13[1];
        unsigned int v71 = *(unsigned int **)(a1 + 16);
        uint64_t v70 = *(unsigned int **)(a1 + 24);
        int v72 = *(_DWORD *)(a1 + 32);
        int v73 = *(unsigned __int8 *)(a1 + 36);
        if ((a3 & 0xFD) == 1)
        {
          if (v32 == 1)
          {
            for (uint64_t i = 0; i != 16; ++i)
            {
              unint64_t v75 = (v73 + 1);
              int v73 = ((_BYTE)v73 + 1) & 7;
              unsigned int v71 = (unsigned int *)((char *)v71 + (v75 >> 3));
              signed int v76 = bswap32(*v71) << (v75 & 7);
              if (v71 > v70) {
                unsigned int v71 = v70;
              }
              if ((v72 & 0x80000000) == 0)
              {
                unsigned int v77 = v76 >> 29;
                unint64_t v78 = (v73 + 3);
                int v73 = ((_BYTE)v73 + 3) & 7;
                unsigned int v71 = (unsigned int *)((char *)v71 + (v78 >> 3));
                signed int v76 = bswap32(*v71) << (v78 & 7);
                if (v71 > v70) {
                  unsigned int v71 = v70;
                }
                a6[i + 1142] = v77;
              }
              a6[i + 1122] = v72 < 0;
              int v72 = v76;
            }
          }
          else
          {
            signed int v76 = *(_DWORD *)(a1 + 32);
          }
          if (v32 == 7)
          {
            for (uint64_t j = 0; j != 4; ++j)
            {
              unint64_t v187 = (v73 + 1);
              int v73 = ((_BYTE)v73 + 1) & 7;
              unsigned int v71 = (unsigned int *)((char *)v71 + (v187 >> 3));
              unsigned int v92 = bswap32(*v71) << (v187 & 7);
              if (v71 > v70) {
                unsigned int v71 = v70;
              }
              if ((v76 & 0x80000000) == 0)
              {
                unsigned int v188 = v92 >> 29;
                unint64_t v189 = (v73 + 3);
                int v73 = ((_BYTE)v73 + 3) & 7;
                unsigned int v71 = (unsigned int *)((char *)v71 + (v189 >> 3));
                unsigned int v92 = bswap32(*v71) << (v189 & 7);
                if (v71 > v70) {
                  unsigned int v71 = v70;
                }
                a6[j + 1158] = v188;
              }
              a6[j + 1138] = v76 < 0;
              signed int v76 = v92;
            }
          }
          else
          {
            unsigned int v92 = v76;
          }
          LOBYTE(v194) = 0;
          if (a4 == 1 || !v69) {
            goto LABEL_255;
          }
        }
        else
        {
          if (v32 == 1)
          {
            for (uint64_t k = 0; k != 16; ++k)
            {
              unint64_t v84 = (v73 + 1);
              int v73 = ((_BYTE)v73 + 1) & 7;
              unsigned int v71 = (unsigned int *)((char *)v71 + (v84 >> 3));
              signed int v85 = bswap32(*v71) << (v84 & 7);
              if (v71 > v70) {
                unsigned int v71 = v70;
              }
              if ((v72 & 0x80000000) == 0)
              {
                unsigned int v86 = v85 >> 29;
                unint64_t v87 = (v73 + 3);
                int v73 = ((_BYTE)v73 + 3) & 7;
                unsigned int v71 = (unsigned int *)((char *)v71 + (v87 >> 3));
                signed int v85 = bswap32(*v71) << (v87 & 7);
                if (v71 > v70) {
                  unsigned int v71 = v70;
                }
                a6[k + 1142] = v86;
              }
              a6[k + 1122] = v72 < 0;
              int v72 = v85;
            }
          }
          else
          {
            signed int v85 = *(_DWORD *)(a1 + 32);
          }
          if (v32 == 7)
          {
            for (uint64_t m = 0; m != 4; ++m)
            {
              unint64_t v191 = (v73 + 1);
              int v73 = ((_BYTE)v73 + 1) & 7;
              unsigned int v71 = (unsigned int *)((char *)v71 + (v191 >> 3));
              unsigned int v92 = bswap32(*v71) << (v191 & 7);
              if (v71 > v70) {
                unsigned int v71 = v70;
              }
              if ((v85 & 0x80000000) == 0)
              {
                unsigned int v192 = v92 >> 29;
                unint64_t v193 = (v73 + 3);
                int v73 = ((_BYTE)v73 + 3) & 7;
                unsigned int v71 = (unsigned int *)((char *)v71 + (v193 >> 3));
                unsigned int v92 = bswap32(*v71) << (v193 & 7);
                if (v71 > v70) {
                  unsigned int v71 = v70;
                }
                a6[m + 1158] = v192;
              }
              a6[m + 1138] = v85 < 0;
              signed int v85 = v92;
            }
          }
          else
          {
            unsigned int v92 = v85;
          }
          if (!v69)
          {
            LOBYTE(v194) = 0;
LABEL_255:
            a6[1121] = v194;
LABEL_256:
            *(void *)(a1 + 16) = v71;
            *(_DWORD *)(a1 + 32) = v92;
            *(unsigned char *)(a1 + 36) = v73;
            goto LABEL_257;
          }
        }
        unsigned int v195 = __clz(v92 | 1);
        if (!v92) {
          ++v195;
        }
        unsigned int v196 = v92 << (v195 + 1) >> -(char)v195;
        if (!v195) {
          unsigned int v196 = 0;
        }
        unsigned int v194 = v196 + ~(-1 << v195);
        unint64_t v197 = v73 + 2 * v195 + 1;
        LOBYTE(v73) = v197 & 7;
        int v198 = (unsigned int *)((char *)v71 + (v197 >> 3));
        unsigned int v92 = bswap32(*v198) << v73;
        if (v198 <= v70) {
          unsigned int v71 = v198;
        }
        else {
          unsigned int v71 = v70;
        }
        goto LABEL_255;
      }
      int v88 = *(unsigned __int8 *)(a5 + 31);
      int v89 = v13[2];
      if (v13[2]) {
        BOOL v90 = 1;
      }
      else {
        BOOL v90 = v88 == 2;
      }
      unsigned int v71 = *(unsigned int **)(a1 + 16);
      uint64_t v91 = *(unsigned int **)(a1 + 24);
      unsigned int v92 = *(_DWORD *)(a1 + 32);
      int v73 = *(unsigned __int8 *)(a1 + 36);
      int v93 = v13[3];
      uint64_t v94 = v13[272];
      if (v90 && v13[272])
      {
        if (v88 == 2) {
          int v89 = (2 * v89) | 1;
        }
        if (a2) {
          unsigned int v95 = 16;
        }
        else {
          unsigned int v95 = 32;
        }
        char v96 = v13 + 24;
        for (uint64_t n = v13[272]; n; --n)
        {
          if (v96[7] == 5)
          {
            LOBYTE(v98) = 32;
          }
          else if (v89 == 1)
          {
            unint64_t v99 = (v73 + 1);
            int v73 = ((_BYTE)v73 + 1) & 7;
            unsigned int v71 = (unsigned int *)((char *)v71 + (v99 >> 3));
            unsigned int v100 = ~v92;
            unsigned int v101 = bswap32(*v71) << (v99 & 7);
            if (v71 > v91) {
              unsigned int v71 = v91;
            }
            unsigned int v98 = v100 >> 31;
            unsigned int v92 = v101;
          }
          else
          {
            unsigned int v102 = __clz(v92 | 1);
            if (v92) {
              unsigned int v103 = v102;
            }
            else {
              unsigned int v103 = v102 + 1;
            }
            unsigned int v104 = v92 << (v103 + 1) >> -(char)v103;
            if (!v103) {
              unsigned int v104 = 0;
            }
            unsigned int v98 = v104 + ~(-1 << v103);
            unint64_t v105 = v73 + 2 * v103 + 1;
            unsigned int v106 = (unsigned int *)((char *)v71 + (v105 >> 3));
            if (v106 <= v91) {
              unsigned int v71 = (unsigned int *)((char *)v71 + (v105 >> 3));
            }
            else {
              unsigned int v71 = v91;
            }
            if (v95 <= v98) {
              return 4294958327;
            }
            int v73 = v105 & 7;
            unsigned int v92 = bswap32(*v106) << v73;
          }
          *char v96 = v98;
          v96 += 16;
        }
      }
      if (v93) {
        BOOL v107 = 1;
      }
      else {
        BOOL v107 = v88 == 2;
      }
      if (v107 && v94)
      {
        if (v88 == 2) {
          int v108 = (2 * v93) | 1;
        }
        else {
          int v108 = v93;
        }
        if (a2) {
          unsigned int v109 = 16;
        }
        else {
          unsigned int v109 = 32;
        }
        unsigned int v110 = v13 + 25;
        for (iuint64_t i = v94; ii; --ii)
        {
          if (v110[6] == 4)
          {
            LOBYTE(v112) = 32;
          }
          else if (v108 == 1)
          {
            unint64_t v113 = (v73 + 1);
            int v73 = ((_BYTE)v73 + 1) & 7;
            unsigned int v71 = (unsigned int *)((char *)v71 + (v113 >> 3));
            unsigned int v114 = ~v92;
            unsigned int v115 = bswap32(*v71) << (v113 & 7);
            if (v71 > v91) {
              unsigned int v71 = v91;
            }
            unsigned int v112 = v114 >> 31;
            unsigned int v92 = v115;
          }
          else
          {
            unsigned int v116 = __clz(v92 | 1);
            if (v92) {
              unsigned int v117 = v116;
            }
            else {
              unsigned int v117 = v116 + 1;
            }
            unsigned int v118 = v92 << (v117 + 1) >> -(char)v117;
            if (!v117) {
              unsigned int v118 = 0;
            }
            unsigned int v112 = v118 + ~(-1 << v117);
            unint64_t v119 = v73 + 2 * v117 + 1;
            uint64_t v120 = (unsigned int *)((char *)v71 + (v119 >> 3));
            if (v120 <= v91) {
              unsigned int v71 = (unsigned int *)((char *)v71 + (v119 >> 3));
            }
            else {
              unsigned int v71 = v91;
            }
            if (v109 <= v112) {
              return 4294958327;
            }
            int v73 = v119 & 7;
            unsigned int v92 = bswap32(*v120) << v73;
          }
          *unsigned int v110 = v112;
          v110 += 16;
        }
      }
      if (!v94) {
        goto LABEL_256;
      }
      uint64_t v121 = 0;
      while (1)
      {
        uint64_t v122 = v33 + 16 * v121;
        if (*(unsigned char *)(v122 + 15) != 5) {
          break;
        }
LABEL_179:
        if (++v121 == v94)
        {
          uint64_t v154 = 0;
          while (1)
          {
            uint64_t v155 = v33 + 16 * v154;
            if (*(unsigned char *)(v155 + 15) != 4) {
              break;
            }
LABEL_217:
            if (++v154 == v94) {
              goto LABEL_256;
            }
          }
          unsigned int v156 = __clz(v92 | 1);
          if (!v92) {
            ++v156;
          }
          if (v156 <= 0xC)
          {
            unsigned int v157 = v92 << (v156 + 1) >> -(char)v156;
            if (!v156) {
              unsigned int v157 = 0;
            }
            unsigned int v158 = v157 + ~(-1 << v156);
            unint64_t v159 = v73 + 2 * v156 + 1;
            int v160 = v159 & 7;
            unsigned int v161 = (unsigned int *)((char *)v71 + (v159 >> 3));
            unsigned int v162 = bswap32(*v161) << v160;
            if (v161 <= v91) {
              unint64_t v163 = v161;
            }
            else {
              unint64_t v163 = v91;
            }
            goto LABEL_210;
          }
          unint64_t v164 = (v73 + 1);
          int v165 = v164 & 7;
          unsigned int v166 = (unsigned int *)((char *)v71 + (v164 >> 3));
          unsigned int v167 = bswap32(*v166) << v165;
          if (v166 <= v91) {
            unsigned int v168 = v166;
          }
          else {
            unsigned int v168 = v91;
          }
          if ((v92 & 0x80000000) != 0)
          {
            unsigned int v172 = 0;
          }
          else
          {
            unsigned int v169 = 0;
            do
            {
              char v170 = v165;
              unsigned int v171 = v167;
              unsigned int v172 = v169 + 1;
              unint64_t v173 = (v165 + 1);
              int v165 = ((_BYTE)v165 + 1) & 7;
              unsigned int v168 = (unsigned int *)((char *)v168 + (v173 >> 3));
              unsigned int v167 = bswap32(*v168) << (v173 & 7);
              if (v168 > v91) {
                unsigned int v168 = v91;
              }
              if ((v171 & 0x80000000) != 0) {
                break;
              }
              BOOL v141 = v169++ >= 0x1F;
            }
            while (!v141);
            if (v172 - 1 > 0x17)
            {
              unsigned int v174 = v167 >> (48 - v172);
              unsigned int v175 = ((v170 + 1) & 7) + v172;
              unint64_t v176 = v175 - 16;
              int v160 = v175 & 7;
              unsigned int v177 = (unsigned int *)((char *)v168 + (v176 >> 3));
              unsigned int v178 = bswap32(*v177) << v160;
              if (v177 > v91) {
                unsigned int v177 = v91;
              }
              unsigned int v179 = *(unsigned int *)((char *)v177 + 2);
              unint64_t v163 = (unsigned int *)((char *)v177 + 2);
              unsigned int v162 = bswap32(v179) << v160;
              if (v163 > v91) {
                unint64_t v163 = v91;
              }
              int v180 = __PAIR64__(v174, v178) >> 16;
LABEL_209:
              unsigned int v158 = v180 + ~(-1 << v172);
LABEL_210:
              *(_WORD *)(v155 + 4) = ((v158 + 1) >> 1) - ((v158 + 1) >> 1) * 2 * (((_BYTE)v158 + 1) & 1);
              unsigned int v182 = __clz(v162 | 1);
              if (!v162) {
                ++v182;
              }
              unsigned int v183 = v162 << (v182 + 1) >> -(char)v182;
              if (!v182) {
                unsigned int v183 = 0;
              }
              int v184 = 1 << v182;
              unint64_t v185 = v160 + 2 * v182 + 1;
              int v73 = v185 & 7;
              unsigned int v71 = (unsigned int *)((char *)v163 + (v185 >> 3));
              unsigned int v92 = bswap32(*v71) << (v185 & 7);
              if (v71 > v91) {
                unsigned int v71 = v91;
              }
              *(_WORD *)(v155 + 6) = ((v183 + v184) >> 1) - ((v183 + v184) >> 1) * 2 * ((v183 + v184) & 1);
              goto LABEL_217;
            }
          }
          int v180 = v167 >> -(char)v172;
          unint64_t v181 = v172 + v165;
          int v160 = v181 & 7;
          unint64_t v163 = (unsigned int *)((char *)v168 + (v181 >> 3));
          unsigned int v162 = bswap32(*v163) << (v181 & 7);
          if (v163 > v91) {
            unint64_t v163 = v91;
          }
          goto LABEL_209;
        }
      }
      unsigned int v123 = __clz(v92 | 1);
      if (!v92) {
        ++v123;
      }
      if (v123 <= 0xC)
      {
        unsigned int v124 = v92 << (v123 + 1) >> -(char)v123;
        if (!v123) {
          unsigned int v124 = 0;
        }
        unsigned int v125 = v124 + ~(-1 << v123);
        unint64_t v126 = v73 + 2 * v123 + 1;
        int v127 = v126 & 7;
        unsigned int v128 = (unsigned int *)((char *)v71 + (v126 >> 3));
        unsigned int v129 = bswap32(*v128) << v127;
        if (v128 <= v91) {
          unint64_t v130 = v128;
        }
        else {
          unint64_t v130 = v91;
        }
        goto LABEL_172;
      }
      unint64_t v131 = (v73 + 1);
      int v132 = v131 & 7;
      unsigned int v133 = (unsigned int *)((char *)v71 + (v131 >> 3));
      unsigned int v134 = bswap32(*v133) << v132;
      if (v133 <= v91) {
        unsigned int v135 = v133;
      }
      else {
        unsigned int v135 = v91;
      }
      if ((v92 & 0x80000000) != 0)
      {
        unsigned int v139 = 0;
      }
      else
      {
        unsigned int v136 = 0;
        do
        {
          char v137 = v132;
          unsigned int v138 = v134;
          unsigned int v139 = v136 + 1;
          unint64_t v140 = (v132 + 1);
          int v132 = ((_BYTE)v132 + 1) & 7;
          unsigned int v135 = (unsigned int *)((char *)v135 + (v140 >> 3));
          unsigned int v134 = bswap32(*v135) << (v140 & 7);
          if (v135 > v91) {
            unsigned int v135 = v91;
          }
          if ((v138 & 0x80000000) != 0) {
            break;
          }
          BOOL v141 = v136++ >= 0x1F;
        }
        while (!v141);
        if (v139 - 1 > 0x17)
        {
          unsigned int v142 = v134 >> (48 - v139);
          unsigned int v143 = ((v137 + 1) & 7) + v139;
          unint64_t v144 = v143 - 16;
          int v127 = v143 & 7;
          unsigned int v145 = (unsigned int *)((char *)v135 + (v144 >> 3));
          unsigned int v146 = bswap32(*v145) << v127;
          if (v145 > v91) {
            unsigned int v145 = v91;
          }
          unsigned int v147 = *(unsigned int *)((char *)v145 + 2);
          unint64_t v130 = (unsigned int *)((char *)v145 + 2);
          unsigned int v129 = bswap32(v147) << v127;
          if (v130 > v91) {
            unint64_t v130 = v91;
          }
          int v148 = __PAIR64__(v142, v146) >> 16;
LABEL_171:
          unsigned int v125 = v148 + ~(-1 << v139);
LABEL_172:
          *(_WORD *)uint64_t v122 = ((v125 + 1) >> 1) - ((v125 + 1) >> 1) * 2 * (((_BYTE)v125 + 1) & 1);
          unsigned int v150 = __clz(v129 | 1);
          if (!v129) {
            ++v150;
          }
          unsigned int v151 = v129 << (v150 + 1) >> -(char)v150;
          if (!v150) {
            unsigned int v151 = 0;
          }
          int v152 = 1 << v150;
          unint64_t v153 = v127 + 2 * v150 + 1;
          int v73 = v153 & 7;
          unsigned int v71 = (unsigned int *)((char *)v130 + (v153 >> 3));
          unsigned int v92 = bswap32(*v71) << (v153 & 7);
          if (v71 > v91) {
            unsigned int v71 = v91;
          }
          *(_WORD *)(v122 + 2) = ((v151 + v152) >> 1) - ((v151 + v152) >> 1) * 2 * ((v151 + v152) & 1);
          goto LABEL_179;
        }
      }
      int v148 = v134 >> -(char)v139;
      unint64_t v149 = v139 + v132;
      int v127 = v149 & 7;
      unint64_t v130 = (unsigned int *)((char *)v135 + (v149 >> 3));
      unsigned int v129 = bswap32(*v130) << (v149 & 7);
      if (v130 > v91) {
        unint64_t v130 = v91;
      }
      goto LABEL_171;
    }
  }
  return result;
}

uint64_t sub_221A1C2F0(uint64_t a1, unsigned int a2, int a3, int a4, uint64_t a5, unsigned char *a6)
{
  if (*(unsigned char *)(a5 + 188)) {
    LODWORD(result) = sub_221A1AD88(a1, a2, a3, a4, a5);
  }
  else {
    LODWORD(result) = sub_221A1B2FC(a1, a2, a3, a4, a5, a6);
  }
  if (*(void *)(a1 + 16) - *(void *)a1 <= *(int *)(a1 + 12)) {
    return result;
  }
  else {
    return 4294958327;
  }
}

uint64_t sub_221A1C348(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4)
{
  uint64_t v94 = *MEMORY[0x263EF8340];
  int v4 = *(unsigned int **)(a1 + 16);
  uint64_t v5 = *(unsigned int **)(a1 + 24);
  unsigned int v6 = *(_DWORD *)(a1 + 32);
  int v7 = *(unsigned __int8 *)(a1 + 36);
  if (a4 == 4)
  {
    if (a2) {
      return 999;
    }
    int v12 = off_2645D6AC8;
    int v13 = 0x800000;
    int v11 = &off_2645D7088;
  }
  else
  {
    if (a2 == 3)
    {
      unsigned int v9 = v6 >> 28;
      if (v6 >> 26 == 3)
      {
        int v10 = 6;
LABEL_18:
        unint64_t v18 = (v10 + v7);
        LOBYTE(v7) = (v10 + v7) & 7;
        unsigned int v19 = (unsigned int *)((char *)v4 + (v18 >> 3));
        unsigned int v20 = bswap32(*v19);
        if (v19 <= v5) {
          int v4 = v19;
        }
        else {
          int v4 = *(unsigned int **)(a1 + 24);
        }
        unsigned int v21 = v20 << v7;
        goto LABEL_100;
      }
      unsigned int v24 = (v6 >> 26) & 3;
      int v25 = v24 != 3;
      if ((v25 & (v6 >> 29 > 4)) != 0) {
        int v26 = 256;
      }
      else {
        int v26 = 0;
      }
      unsigned int v22 = v26 | (v25 << 7);
      ++v9;
      int v23 = 6;
      int v12 = &off_2645D6AF8;
      goto LABEL_28;
    }
    int v11 = off_2645D6AB8[a2 + 1];
    int v12 = &off_2645D6AF8;
    int v13 = 0x8000;
  }
  int v14 = v13 | v6;
  uint64_t v15 = __clz(v13 | v6);
  if (!LOBYTE(v11[2 * v15 + 1]))
  {
    unsigned int v9 = 999;
    unsigned int v21 = *(_DWORD *)(a1 + 32);
    goto LABEL_100;
  }
  if (a4 == 4) {
    char v16 = 31;
  }
  else {
    char v16 = 32;
  }
  int v17 = 1 << a2;
  if (a4 == 4) {
    int v10 = v17 + 1;
  }
  else {
    int v10 = 1 << a2;
  }
  if (v6 >> (v16 - v17) == *((unsigned __int8 *)&off_2645D6AB8[55] + a2 + 4))
  {
    unsigned int v9 = 0;
    goto LABEL_18;
  }
  unsigned int v22 = *(unsigned __int16 *)((char *)v11[2 * v15]
                            + ((((2 * v14) << v15) >> (LOBYTE(v11[2 * v15 + 1]) - 1)) & 0xFFFFFFFE));
  int v23 = v22 >> 9;
  unsigned int v9 = (v22 >> 2) & 0x1F;
  unsigned int v24 = v22 & 3;
LABEL_28:
  unint64_t v27 = v24 + v7 + v23;
  int v7 = ((_BYTE)v24 + (_BYTE)v7 + (_BYTE)v23) & 7;
  int v4 = (unsigned int *)((char *)v4 + (v27 >> 3));
  unsigned int v28 = bswap32(*v4);
  if (v4 > v5) {
    int v4 = *(unsigned int **)(a1 + 24);
  }
  unsigned int v21 = v28 << v7;
  if (v24)
  {
    int v29 = v6 << v23;
    int v30 = v93;
    unsigned int v31 = v24;
    do
    {
      *v30++ = (v29 >> 30) | 1;
      v29 *= 2;
      --v31;
    }
    while (v31);
  }
  unsigned int v32 = v9 - v24;
  if (v9 != v24)
  {
    if ((v32 & 0x80000000) != 0) {
      return 999;
    }
    uint64_t v55 = v24;
    int v56 = ((v22 >> 6) & 2) + 2;
    int v57 = (v22 >> 8) & 1;
    BOOL v58 = !(v22 & 0x100);
    unsigned int v59 = &v93[v55];
    while (v21 < 0x20000)
    {
      unsigned int v72 = __clz(v21 | 1);
      if (v21) {
        unsigned int v73 = v72;
      }
      else {
        unsigned int v73 = v72 + 1;
      }
      unsigned int v74 = v73 - 15;
      if (v73 == 15)
      {
        unsigned int v75 = bswap32(*(unsigned int *)((char *)v4 + 1)) << v7;
        unsigned int v69 = ((15 << (v57 + v58)) + v56 + ((v75 >> 12) & 0xFFF)) >> 1;
        int v70 = (-((v75 >> 12) & 1) ^ v69) + ((v75 >> 12) & 1);
        unint64_t v71 = (v7 + 28);
LABEL_74:
        int v7 = v71 & 7;
        int v4 = (unsigned int *)((char *)v4 + (v71 >> 3));
        unsigned int v76 = bswap32(*v4);
        if (v4 > v5) {
          int v4 = v5;
        }
        unsigned int v21 = v76 << v7;
        goto LABEL_88;
      }
      if (v74 > 9) {
        return 999;
      }
      unint64_t v77 = v7 + v73 + 1;
      int v78 = v77 & 7;
      unint64_t v79 = (unsigned int *)((char *)v4 + (v77 >> 3));
      unsigned int v80 = bswap32(*v79);
      if (v79 <= v5) {
        unsigned int v81 = v79;
      }
      else {
        unsigned int v81 = v5;
      }
      unsigned int v82 = v80 << v78;
      int v83 = v73 + v78;
      unsigned int v84 = v82 >> (35 - v73);
      unint64_t v85 = (v83 - 3);
      int v7 = v85 & 7;
      int v4 = (unsigned int *)((char *)v81 + (v85 >> 3));
      unsigned int v21 = bswap32(*v4) << v7;
      if (v4 > v5) {
        int v4 = v5;
      }
      int v86 = 15 << v57;
      if (!v57) {
        int v86 = 30;
      }
      unsigned int v69 = (v84 + v56 + v86 + (4096 << v74) - 4096) >> 1;
      if (v84) {
        int v70 = -v69;
      }
      else {
        int v70 = v69;
      }
LABEL_88:
      int v87 = v57 + v58;
      if (v87 > 6) {
        return 999;
      }
      if (v69 <= *((unsigned __int16 *)&off_2645D6AB8[53] + v87 + 3)) {
        int v57 = v87;
      }
      else {
        int v57 = v87 + 1;
      }
      uint64_t v8 = 999;
      if (HIWORD(v69) || v57 > 6) {
        return v8;
      }
      BOOL v58 = 0;
      *v59++ = v70;
      int v56 = 2;
      if (!--v32) {
        goto LABEL_34;
      }
    }
    unsigned int v60 = __clz(v21);
    unsigned int v61 = (2 * v21) << v60;
    unsigned int v62 = v57 + v60;
    unsigned int v63 = v61 >> ~(_BYTE)v57 >> 1;
    int v64 = (v60 << v57) + v56;
    unsigned int v65 = v61 >> 28;
    if (v60 == 14) {
      v56 += 14;
    }
    else {
      unsigned int v65 = v60;
    }
    if (v60 == 14) {
      int v66 = v57 + v60 + 5;
    }
    else {
      int v66 = v62 + 1;
    }
    if (v57)
    {
      int v56 = v64;
      unsigned int v65 = v63;
      int v67 = v62 + 1;
    }
    else
    {
      int v67 = v66;
    }
    unsigned int v68 = v65 + v56;
    unsigned int v69 = (v65 + v56) >> 1;
    int v70 = (-(v65 & 1) ^ (v68 >> 1)) + (v65 & 1);
    unint64_t v71 = (v67 + v7);
    goto LABEL_74;
  }
LABEL_34:
  uint64_t v33 = a3 + 2 * a4;
  uint64_t v34 = &v92;
  if (v9 >= a4) {
    goto LABEL_96;
  }
  int v35 = (int)v12[2 * v9 + 1];
  unsigned int v36 = v35 | v21;
  if (v36 < 0x800000) {
    return 999;
  }
  unsigned int v37 = __clz(v36);
  unsigned int v38 = *((unsigned __int8 *)v12[2 * v9][v37] + ((unint64_t)((2 * v36) << v37 >> (v35 - 1)) >> 1));
  unint64_t v39 = v7 + (v38 >> 4);
  int v7 = ((_BYTE)v7 + (v38 >> 4)) & 7;
  int v4 = (unsigned int *)((char *)v4 + (v39 >> 3));
  unsigned int v40 = bswap32(*v4);
  if (v4 > v5) {
    int v4 = v5;
  }
  unsigned int v21 = v40 << v7;
  int v41 = v38 & 0xF;
  unsigned int v42 = a4 - (v41 + v9);
  if (a4 < v41 + v9) {
    unsigned int v42 = 0;
  }
  v33 -= 2 * v42;
  if (!v41)
  {
LABEL_96:
    int v54 = v9;
    goto LABEL_97;
  }
  if (v9 == 1)
  {
LABEL_55:
    int v54 = 1;
    goto LABEL_98;
  }
  int v43 = 1;
  uint64_t v34 = v93;
  while (1)
  {
    uint64_t v44 = *((unsigned __int8 *)&off_2645D6AB8[55] + v41 + 6);
    *(_WORD *)(v33 - 2) = *v34;
    uint64_t v45 = v33 - 2;
    unsigned int v46 = &off_2645D6AB8[2 * v44];
    unsigned int v47 = *((_DWORD *)v46 + 78) | v21;
    unsigned int v48 = __clz(v47);
    unsigned int v49 = *((unsigned __int8 *)v46[38][v48] + ((unint64_t)((2 * v47) << v48 >> (*((_DWORD *)v46 + 78) - 1)) >> 1));
    uint64_t v50 = v49 & 0xF;
    unint64_t v51 = v7 + (v49 >> 4);
    int v7 = v51 & 7;
    int v4 = (unsigned int *)((char *)v4 + (v51 >> 3));
    unsigned int v52 = bswap32(*v4);
    if (v4 > v5) {
      int v4 = v5;
    }
    unsigned int v21 = v52 << v7;
    uint64_t v33 = v45 - 2 * v50;
    v41 -= v50;
    if (v41) {
      int v53 = 0;
    }
    else {
      int v53 = 10;
    }
    if (v41 < 0) {
      int v53 = 3;
    }
    if (v53) {
      break;
    }
    if (v41 < 0) {
      int v41 = 999;
    }
    ++v43;
    ++v34;
    if (v9 == v43)
    {
      --v34;
      goto LABEL_55;
    }
  }
  if (v53 == 3) {
    goto LABEL_100;
  }
  int v54 = v9 - v43;
  if ((int)(v9 - v43) >= 0)
  {
LABEL_97:
    if (!v54) {
      goto LABEL_100;
    }
LABEL_98:
    int v88 = (_WORD *)(v33 - 2);
    int v89 = v34 + 1;
    do
    {
      int v90 = *v89++;
      *v88-- = v90;
      --v54;
    }
    while (v54);
    goto LABEL_100;
  }
  unsigned int v9 = 999;
LABEL_100:
  *(void *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = v21;
  *(unsigned char *)(a1 + 36) = v7;
  if ((uint64_t)v4 - *(void *)a1 <= *(int *)(a1 + 12)) {
    return v9;
  }
  else {
    return 999;
  }
}

uint64_t sub_221A1C910(unsigned __int8 *a1, uint64_t *a2, int a3, unsigned char *a4)
{
  uint64_t v6 = *a2;
  if (*a2)
  {
    int v7 = *(unsigned __int8 *)(v6 + 1);
    int v8 = *(unsigned __int8 *)(v6 + 2);
  }
  else
  {
    int v7 = 255;
    int v8 = 255;
  }
  uint64_t v9 = a2[1];
  if (v9)
  {
    int v10 = *(unsigned __int8 *)(v9 + 1);
    int v11 = *(unsigned __int8 *)(v9 + 2);
  }
  else
  {
    int v10 = 255;
    int v11 = 255;
  }
  uint64_t result = 4294966630;
  switch(a3)
  {
    case 2:
    case 7:
      if (v7 | v8) {
        BOOL v13 = v6 == 0;
      }
      else {
        BOOL v13 = 1;
      }
      uint64_t v14 = 3;
      if (!v13) {
        uint64_t v14 = 4;
      }
      if (v9) {
        BOOL v15 = (v10 | v11) == 0;
      }
      else {
        BOOL v15 = 1;
      }
      if (!v15) {
        ++v14;
      }
      if (!sub_2219F85F4((uint64_t)a1, &a1[2 * v14 + 16])) {
        goto LABEL_62;
      }
      if (sub_2219F8728((uint64_t)a1) == 1)
      {
        LOBYTE(v16) = 25;
      }
      else
      {
        int v33 = 3 * sub_2219F85F4((uint64_t)a1, a1 + 28);
        if (sub_2219F85F4((uint64_t)a1, a1 + 30))
        {
          if (sub_2219F85F4((uint64_t)a1, a1 + 32)) {
            int v34 = 9;
          }
          else {
            int v34 = 5;
          }
          int v35 = v34 + 4 * v33;
        }
        else
        {
          int v35 = (4 * v33) | 1;
        }
        unsigned int v16 = v35 + 2 * sub_2219F85F4((uint64_t)a1, a1 + 34);
        LOBYTE(v16) = v16 + sub_2219F85F4((uint64_t)a1, a1 + 36);
      }
      goto LABEL_72;
    case 4:
    case 9:
      return result;
    default:
      BOOL v17 = a3 == 6 || a3 == 1;
      if (a3 != 6 && a3 != 1)
      {
        if (!sub_2219F85F4((uint64_t)a1, a1 + 44))
        {
          if (sub_2219F85F4((uint64_t)a1, a1 + 46))
          {
            if (sub_2219F85F4((uint64_t)a1, a1 + 50)) {
              LOBYTE(v16) = 1;
            }
            else {
              LOBYTE(v16) = 2;
            }
          }
          else if (sub_2219F85F4((uint64_t)a1, a1 + 48))
          {
            LOBYTE(v16) = 3;
          }
          else
          {
            LOBYTE(v16) = 0;
          }
          goto LABEL_72;
        }
        BOOL v36 = sub_2219F85F4((uint64_t)a1, a1 + 50) == 0;
        int v37 = 5;
        goto LABEL_86;
      }
      if (v11) {
        BOOL v18 = 0;
      }
      else {
        BOOL v18 = v10 == 3;
      }
      int v19 = v10 & 0xFE;
      BOOL v20 = v18 || v19 == 4;
      uint64_t v21 = 27;
      if (!v20) {
        uint64_t v21 = 28;
      }
      if (v9) {
        uint64_t v22 = v21;
      }
      else {
        uint64_t v22 = 27;
      }
      BOOL v23 = v7 == 3 && v8 == 0;
      int v24 = v7 & 0xFE;
      uint64_t v26 = !v23 && v24 != 4;
      if (v6) {
        uint64_t v27 = v26;
      }
      else {
        uint64_t v27 = 0;
      }
      if (!sub_2219F85F4((uint64_t)a1, &a1[2 * v22 + 16 + 2 * v27]))
      {
LABEL_62:
        LOBYTE(v16) = 0;
        goto LABEL_72;
      }
      if (!sub_2219F85F4((uint64_t)a1, a1 + 76))
      {
        if (sub_2219F85F4((uint64_t)a1, a1 + 80)) {
          LOBYTE(v16) = 2;
        }
        else {
          LOBYTE(v16) = 1;
        }
        goto LABEL_72;
      }
      int v28 = sub_2219F85F4((uint64_t)a1, a1 + 78);
      int v29 = sub_2219F85F4((uint64_t)a1, a1 + 80);
      int v30 = sub_2219F85F4((uint64_t)a1, a1 + 80);
      int v31 = sub_2219F85F4((uint64_t)a1, a1 + 80);
      if (!v28)
      {
        if (v29) {
          int v37 = 7;
        }
        else {
          int v37 = 3;
        }
        if (v30) {
          v37 += 2;
        }
        BOOL v36 = v31 == 0;
LABEL_86:
        if (v36) {
          unsigned int v16 = v37;
        }
        else {
          unsigned int v16 = v37 + 1;
        }
        goto LABEL_89;
      }
      if (v29) {
        int v32 = 20;
      }
      else {
        int v32 = 12;
      }
      if (v30) {
        v32 += 4;
      }
      if (v31) {
        v32 |= 2u;
      }
      if (v32 == 24)
      {
        unsigned int v16 = 11;
      }
      else if (v32 == 26)
      {
        unsigned int v16 = 22;
      }
      else
      {
        if (v32 == 22) {
          int v42 = 23;
        }
        else {
          int v42 = v32;
        }
        if (sub_2219F85F4((uint64_t)a1, a1 + 80)) {
          unsigned int v16 = v42 + 1;
        }
        else {
          unsigned int v16 = v42;
        }
      }
LABEL_89:
      BOOL v38 = v16 < 0x18 && v17;
      if (v16 >= 6 && !v38)
      {
        if (sub_2219F8728((uint64_t)a1))
        {
          if (v17) {
            LOBYTE(v16) = 48;
          }
          else {
            LOBYTE(v16) = 30;
          }
        }
        else
        {
          int v39 = v16 + 12 * sub_2219F85F4((uint64_t)a1, a1 + 52);
          if (sub_2219F85F4((uint64_t)a1, a1 + 54))
          {
            if (sub_2219F85F4((uint64_t)a1, a1 + 54)) {
              int v40 = 8;
            }
            else {
              int v40 = 4;
            }
            v39 += v40;
          }
          int v41 = v39 + 2 * sub_2219F85F4((uint64_t)a1, a1 + 56);
          LOBYTE(v16) = v41 + sub_2219F85F4((uint64_t)a1, a1 + 56);
        }
      }
LABEL_72:
      uint64_t result = 0;
      *a4 = v16;
      return result;
  }
}

uint64_t sub_221A1CD28(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6 = 0;
  int v7 = (unsigned __int8 *)(a1 + 88);
  int v8 = (unsigned __int8 *)(a1 + 90);
  uint64_t v9 = (unsigned __int8 *)(a1 + 94);
  int v10 = (unsigned __int8 *)(a1 + 58);
  uint64_t v22 = (unsigned __int8 *)(a1 + 60);
  BOOL v23 = (unsigned __int8 *)(a1 + 92);
  uint64_t v21 = (unsigned __int8 *)(a1 + 62);
  do
  {
    if (a2 == 1 || a2 == 6)
    {
      uint64_t result = sub_2219F85F4(a1, v7);
      if (!result) {
        goto LABEL_12;
      }
      if (sub_2219F85F4(a1, v8))
      {
        int v12 = sub_2219F85F4(a1, v23);
        int v13 = sub_2219F85F4(a1, v9);
        int v14 = v13;
        if (v12)
        {
          uint64_t result = sub_2219F85F4(a1, v9);
          BOOL v15 = result == 0;
          if (v14)
          {
            if (result) {
              int v16 = 11;
            }
            else {
              int v16 = 10;
            }
            goto LABEL_24;
          }
          int v18 = 8;
          int v19 = 6;
        }
        else
        {
          BOOL v15 = v13 == 0;
          int v18 = 4;
          int v19 = 2;
        }
        if (v15) {
          int v20 = v19;
        }
        else {
          int v20 = v18;
        }
        uint64_t result = sub_2219F85F4(a1, v9);
        int v16 = v20 | (result != 0);
        goto LABEL_24;
      }
      uint64_t result = sub_2219F85F4(a1, v9);
      int v16 = result != 0;
LABEL_24:
      int v17 = v16 + 1;
      goto LABEL_25;
    }
    uint64_t result = sub_2219F85F4(a1, v10);
    if (result)
    {
LABEL_12:
      int v17 = 0;
      goto LABEL_25;
    }
    uint64_t result = sub_2219F85F4(a1, v22);
    if (result)
    {
      uint64_t result = sub_2219F85F4(a1, v21);
      if (result) {
        int v17 = 2;
      }
      else {
        int v17 = 3;
      }
    }
    else
    {
      int v17 = 1;
    }
LABEL_25:
    *(_DWORD *)(a3 + v6) = v17;
    v6 += 4;
  }
  while (v6 != 16);
  return result;
}

uint64_t sub_221A1CEC4(uint64_t a1, void *a2, unsigned char *a3)
{
  if (*a2) {
    uint64_t v5 = *(unsigned __int8 *)(*a2 + 23) + 399;
  }
  else {
    uint64_t v5 = 399;
  }
  uint64_t v6 = a2[1];
  if (v6) {
    uint64_t v6 = *(unsigned __int8 *)(v6 + 23);
  }
  uint64_t result = sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 2 * (v5 + v6) + 16));
  *a3 = result;
  *(unsigned char *)(a2[2] + 23) = result;
  return result;
}

uint64_t sub_221A1CF28(uint64_t a1, void *a2, _DWORD *a3)
{
  if (*a2) {
    uint64_t v5 = *(unsigned __int8 *)(*a2 + 24) + 70;
  }
  else {
    uint64_t v5 = 70;
  }
  uint64_t v6 = a2[1];
  if (v6) {
    uint64_t v6 = *(unsigned __int8 *)(v6 + 24);
  }
  uint64_t result = sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 2 * (v5 + v6) + 16));
  *a3 = result;
  *(unsigned char *)(a2[2] + 24) = result;
  return result;
}

uint64_t sub_221A1CF8C(uint64_t a1, unsigned __int8 **a2, unsigned int *a3, int a4, int a5, int a6)
{
  int v8 = *a2;
  if (*a2)
  {
    int v9 = v8[1];
    int v10 = v8[2];
  }
  else
  {
    int v9 = 255;
    int v10 = 255;
  }
  int v11 = a2[1];
  if (v11)
  {
    int v12 = v11[1];
    LODWORD(v11) = v11[2] == 25;
  }
  else
  {
    int v12 = 255;
  }
  char v13 = 0;
  unsigned int v14 = 0;
  if (v12) {
    LODWORD(v11) = 0;
  }
  int v40 = (int)v11;
  char v38 = 2 * (a6 != 0);
  int v39 = v12 & 0xFE;
  char v15 = 1;
  do
  {
    char v16 = v15;
    char v17 = 1;
    do
    {
      char v18 = v17;
      if (v17)
      {
        if (!v8) {
          goto LABEL_25;
        }
        if (a2[2][24])
        {
          if (a2[2][24] == 1 && !(*a2)[24])
          {
            char v19 = 0;
            if ((v16 & 1) == 0)
            {
              int v8 = a2[3];
              int v9 = v8[1];
              int v10 = v8[2];
            }
          }
          else
          {
            char v19 = v13;
          }
        }
        else
        {
          char v19 = v38;
          if ((*a2)[24] != 1) {
            char v19 = v13;
          }
        }
        if ((v9 || v10 != 25) && ((v9 & 0xFE) == 4 || ((v8[4] >> (v19 + 1)) & 1) == 0))
        {
          BOOL v20 = 1;
          if ((v16 & 1) == 0)
          {
LABEL_32:
            uint64_t v21 = 2 * (((v14 >> (v13 - 2)) & 1) == 0);
            goto LABEL_33;
          }
        }
        else
        {
LABEL_25:
          BOOL v20 = 0;
          if ((v16 & 1) == 0) {
            goto LABEL_32;
          }
        }
      }
      else
      {
        BOOL v20 = ((v14 >> (v13 - 1)) & 1) == 0;
        if ((v16 & 1) == 0) {
          goto LABEL_32;
        }
      }
      uint64_t v21 = (uint64_t)a2[1];
      if (v21)
      {
        if (v40 & 1) != 0 || v39 != 4 && ((*(unsigned __int8 *)(v21 + 4) >> (v13 + 2))) {
          uint64_t v21 = 0;
        }
        else {
          uint64_t v21 = 2;
        }
      }
LABEL_33:
      uint64_t result = sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 2 * (v20 + v21) + 162));
      char v17 = 0;
      int v23 = 1 << v13;
      if (!result) {
        int v23 = 0;
      }
      v14 += v23;
      ++v13;
    }
    while ((v18 & 1) != 0);
    char v15 = 0;
  }
  while ((v16 & 1) != 0);
  int v24 = *a2;
  if (*a2)
  {
    if (a4 && !a5)
    {
      int v9 = v24[1];
      int v10 = v24[2];
      if (!v24[1] && v10 == 25)
      {
        int v9 = 0;
        uint64_t v25 = 78;
        goto LABEL_54;
      }
      if ((v9 & 0xFE) == 4)
      {
LABEL_51:
        uint64_t v25 = 77;
      }
      else
      {
        uint64_t v25 = 77;
        if (v24[5]) {
          uint64_t v25 = 78;
        }
      }
LABEL_54:
      uint64_t v26 = a2[1];
      char v27 = v40;
      if (v40) {
        uint64_t v28 = 2;
      }
      else {
        uint64_t v28 = 0;
      }
      if (v26)
      {
        uint64_t v29 = v28;
      }
      else
      {
        char v27 = 1;
        uint64_t v29 = 0;
      }
      if ((v27 & 1) == 0 && v39 != 4) {
        uint64_t v29 = 2 * (v26[5] != 0);
      }
      uint64_t result = sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 2 * (v25 + v29) + 16));
      if (result)
      {
        if (!v24) {
          goto LABEL_69;
        }
        if (!v9 && v10 == 25)
        {
          uint64_t v30 = 82;
          goto LABEL_72;
        }
        if ((v9 & 0xFE) != 4)
        {
          uint64_t v30 = 81;
          if (v24[5] == 2) {
            uint64_t v30 = 82;
          }
        }
        else
        {
LABEL_69:
          uint64_t v30 = 81;
        }
LABEL_72:
        int v31 = a2[1];
        if (v31) {
          char v32 = v40;
        }
        else {
          char v32 = 1;
        }
        if (v31) {
          uint64_t v33 = v28;
        }
        else {
          uint64_t v33 = 0;
        }
        if ((v32 & 1) == 0 && v39 != 4) {
          uint64_t v33 = 2 * (v31[5] == 2);
        }
        uint64_t result = sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 2 * (v30 + v33) + 16));
        if (result == 1) {
          int v34 = 32;
        }
        else {
          int v34 = 16;
        }
        v14 += v34;
      }
    }
  }
  else if (a4 && !a5)
  {
    goto LABEL_51;
  }
  *a3 = v14;
  return result;
}

uint64_t sub_221A1D2F8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if (!a2
    || (*(unsigned char *)(a2 + 1) & 0xFE) == 4
    || ((int v7 = *(unsigned __int8 *)(a2 + 2), !*(unsigned char *)(a2 + 1)) ? (v8 = v7 == 25) : (v8 = 0),
        v8
     || (!*(unsigned char *)(a2 + 1) ? (BOOL v9 = v7 == 25) : (BOOL v9 = 1),
         !v9 ? (BOOL v10 = v7 == 0) : (BOOL v10 = 1),
         v10 && !*(unsigned char *)(a2 + 4) && !*(unsigned char *)(a2 + 5))))
  {
    uint64_t v11 = 60;
  }
  else
  {
    uint64_t v11 = 60;
    if (*(_DWORD *)(a2 + 208)) {
      uint64_t v11 = 61;
    }
  }
  uint64_t result = sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 2 * v11 + 16));
  if (result)
  {
    uint64_t result = sub_221A1D3D0(a1, (unsigned __int8 *)(a1 + 140), 0x33u);
    int v13 = result + 1;
  }
  else
  {
    int v13 = 0;
  }
  if (v13) {
    int v14 = (v13 + 1) >> 1;
  }
  else {
    int v14 = -((v13 + 1) >> 1);
  }
  *a4 = v14;
  *(_DWORD *)(a3 + 208) = v14;
  return result;
}

uint64_t sub_221A1D3D0(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  uint64_t v6 = 0;
  if (sub_2219F85F4(a1, a2))
  {
    int v7 = a2 + 2;
    do
      uint64_t v6 = (v6 + 1);
    while (sub_2219F85F4(a1, v7) && v6 < a3);
  }
  return v6;
}

uint64_t sub_221A1D430(uint64_t a1, uint64_t *a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  unsigned int v10 = *(_DWORD *)(a5 + 8);
  if (v10 > 7 || ((1 << v10) & 0x86) == 0)
  {
    int v58 = *(unsigned __int8 *)(a5 + 3);
    uint64_t v24 = a5 + 16;
    uint64_t v25 = *(unsigned __int8 *)(a5 + 272);
    if (*(unsigned char *)(a5 + 2)) {
      BOOL v26 = 1;
    }
    else {
      BOOL v26 = a3 == 2;
    }
    if (!v26 || v25 == 0)
    {
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v28 = 0;
      uint64_t v22 = 0;
      int v29 = 0;
      do
      {
        uint64_t v30 = v24 + 16 * v28;
        if (*(unsigned char *)(v30 + 15) == 5)
        {
          LOBYTE(v31) = 32;
        }
        else
        {
          unsigned int v32 = *(unsigned __int16 *)(a5 + 26);
          if (v29 <= 15)
          {
            if (v32 >= 0x103) {
              int v33 = 259;
            }
            else {
              int v33 = *(unsigned __int16 *)(a5 + 26);
            }
            int v34 = &word_267F63970[40 * v33];
            do
            {
              if (v28 == *((unsigned __int8 *)v34 + v29)) {
                break;
              }
              ++v29;
            }
            while (v29 != 16);
          }
          unsigned int v31 = sub_221A1D994(a1, a1, a2, v29, v32, 0, a7);
          if (v31 <= ((2 * *(unsigned __int8 *)(a5 + 2)) | 1u)) {
            uint64_t v22 = v22;
          }
          else {
            uint64_t v22 = 4294958327;
          }
        }
        *(unsigned char *)(v30 + 8) = v31;
        *(unsigned char *)(a2[2] + v28++ + 168) = v31;
      }
      while (v28 != v25);
    }
    if (v58) {
      BOOL v35 = 1;
    }
    else {
      BOOL v35 = a3 == 2;
    }
    if (v35 && v25)
    {
      uint64_t v36 = 0;
      int v37 = 0;
      do
      {
        uint64_t v38 = v24 + 16 * v36;
        if (*(unsigned char *)(v38 + 15) == 4)
        {
          LOBYTE(v39) = 32;
        }
        else
        {
          unsigned int v40 = *(unsigned __int16 *)(a5 + 26);
          if (v37 <= 15)
          {
            if (v40 >= 0x103) {
              int v41 = 259;
            }
            else {
              int v41 = *(unsigned __int16 *)(a5 + 26);
            }
            int v42 = &word_267F63970[40 * v41];
            do
            {
              if (v36 == *((unsigned __int8 *)v42 + v37)) {
                break;
              }
              ++v37;
            }
            while (v37 != 16);
          }
          unsigned int v39 = sub_221A1D994(a1, a1, a2, v37, v40, 1, a7);
          if (v39 <= ((2 * *(unsigned __int8 *)(a5 + 3)) | 1u)) {
            uint64_t v22 = v22;
          }
          else {
            uint64_t v22 = 4294958327;
          }
        }
        *(unsigned char *)(v38 + 9) = v39;
        *(unsigned char *)(a2[2] + v36++ + 184) = v39;
      }
      while (v36 != v25);
    }
    if (v25)
    {
      uint64_t v43 = 0;
      int v44 = 0;
      do
      {
        uint64_t v45 = v24 + 16 * v43;
        if (*(unsigned char *)(v45 + 15) != 5)
        {
          unsigned int v46 = *(unsigned __int16 *)(a5 + 26);
          if (v44 <= 15)
          {
            if (v46 >= 0x103) {
              int v47 = 259;
            }
            else {
              int v47 = *(unsigned __int16 *)(a5 + 26);
            }
            unsigned int v48 = &word_267F63970[40 * v47];
            do
            {
              if (v43 == *((unsigned __int8 *)v48 + v44)) {
                break;
              }
              ++v44;
            }
            while (v44 != 16);
          }
          *(_WORD *)uint64_t v45 = sub_221A1DC34((int *)a1, a1, a2, v44, v46, 0, 0, a7);
          *(_WORD *)(v45 + 2) = sub_221A1DC34((int *)a1, a1, a2, v44, *(_WORD *)(a5 + 26), 1u, 0, a7);
        }
        ++v43;
      }
      while (v43 != v25);
      uint64_t v49 = 0;
      int v50 = 0;
      do
      {
        uint64_t v51 = v24 + 16 * v49;
        if (*(unsigned char *)(v51 + 15) != 4)
        {
          unsigned int v52 = *(unsigned __int16 *)(a5 + 26);
          if (v50 <= 15)
          {
            if (v52 >= 0x103) {
              int v53 = 259;
            }
            else {
              int v53 = *(unsigned __int16 *)(a5 + 26);
            }
            int v54 = &word_267F63970[40 * v53];
            do
            {
              if (v49 == *((unsigned __int8 *)v54 + v50)) {
                break;
              }
              ++v50;
            }
            while (v50 != 16);
          }
          *(_WORD *)(v51 + 4) = sub_221A1DC34((int *)a1, a1, a2, v50, v52, 0, 1, a7);
          *(_WORD *)(v51 + 6) = sub_221A1DC34((int *)a1, a1, a2, v50, *(_WORD *)(a5 + 26), 1u, 1, a7);
        }
        ++v49;
      }
      while (v49 != v25);
    }
  }
  else
  {
    if (v10 == 1)
    {
      for (uint64_t i = 0; i != 16; ++i)
      {
        int v14 = sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 152));
        *(unsigned char *)(a5 + i + 290) = v14;
        if (!v14)
        {
          int v15 = sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 154));
          int v16 = v15 | (2 * sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 154)));
          *(unsigned char *)(a5 + i + 310) = v16 | (4 * sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 154)));
        }
      }
    }
    if (v10 == 7)
    {
      for (uint64_t j = 0; j != 4; ++j)
      {
        int v18 = sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 152));
        *(unsigned char *)(a5 + j + 306) = v18;
        if (!v18)
        {
          int v19 = sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 154));
          int v20 = v19 | (2 * sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 154)));
          *(unsigned char *)(a5 + j + 326) = v20 | (4 * sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 154)));
        }
      }
    }
    if (a6 == 1 || !*(unsigned char *)(a5 + 1))
    {
      uint64_t v22 = 0;
      *(unsigned char *)(a2[2] + 3) = 0;
      *(unsigned char *)(a5 + 289) = 0;
    }
    else
    {
      uint64_t v21 = *a2;
      if (*a2) {
        uint64_t v21 = *(unsigned __int8 *)(v21 + 1) - 2 >= 4
      }
           && (*(unsigned char *)(v21 + 1) || *(unsigned char *)(v21 + 2) != 25)
           && *(unsigned __int8 *)(v21 + 3) != 0;
      unint64_t v55 = a2[1];
      if (v55) {
        unint64_t v55 = *(unsigned __int8 *)(v55 + 1) - 2 >= 4
      }
           && (*(unsigned char *)(v55 + 1) || *(unsigned char *)(v55 + 2) != 25)
           && *(unsigned __int8 *)(v55 + 3) != 0;
      if (sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 2 * (v55 + v21) + 144)))
      {
        if (sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 150)))
        {
          if (sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 150))) {
            char v56 = 3;
          }
          else {
            char v56 = 2;
          }
        }
        else
        {
          char v56 = 1;
        }
      }
      else
      {
        char v56 = 0;
      }
      uint64_t v22 = 0;
      *(unsigned char *)(a5 + 289) = v56;
      *(unsigned char *)(a2[2] + 3) = v56;
    }
  }
  return v22;
}

uint64_t sub_221A1D994(uint64_t a1, uint64_t a2, uint64_t *a3, int a4, unsigned __int16 a5, int a6, int a7)
{
  uint64_t v9 = *a3;
  if (!*a3) {
    goto LABEL_5;
  }
  if (*(unsigned char *)(a3[2] + 24))
  {
    if (*(unsigned char *)(a3[2] + 24) != 1 || *(unsigned char *)(v9 + 24))
    {
LABEL_5:
      BOOL v10 = 0;
      uint64_t v11 = byte_267F63880;
      goto LABEL_13;
    }
    BOOL v10 = 0;
    if (a4 >= 8) {
      uint64_t v9 = a3[3];
    }
    uint64_t v11 = (char *)&unk_267F638B8;
  }
  else
  {
    int v12 = *(unsigned __int8 *)(v9 + 24);
    uint64_t v11 = byte_267F63880;
    int v13 = (char *)&unk_267F638E8;
    if (a7) {
      int v13 = (char *)&unk_267F63918;
    }
    BOOL v10 = v12 == 1;
    if (v12 == 1) {
      uint64_t v11 = v13;
    }
  }
LABEL_13:
  uint64_t v14 = a3[1];
  BOOL v15 = v14 && !*(unsigned char *)(a3[2] + 24) && *(unsigned __int8 *)(v14 + 24) == 1;
  int v16 = &v11[a4];
  unint64_t v17 = *v16;
  unint64_t v18 = v16[16];
  unsigned int v19 = (v17 & 1) == 0 && v10;
  unsigned int v20 = (v18 & 1) == 0 && v15;
  if (v17)
  {
    uint64_t v9 = a3[2];
    unsigned int v22 = a5;
    if (a5 >= 0x103u) {
      unsigned int v22 = 259;
    }
LABEL_31:
    uint64_t v23 = *((unsigned __int8 *)&word_267F63970[40 * v22] + ((v17 >> 1) & 0xF));
    unsigned int v24 = *(unsigned __int8 *)(v9 + 16 * (a6 != 0) + v23 + 168);
    if (v24 != 32 && v19 < v24)
    {
      int v27 = *(unsigned __int8 *)(v9 + v23 + 7);
      if (!a6)
      {
        LODWORD(v9) = (v27 & 0xFFFFFFFD) == 4;
        if ((v18 & 1) == 0) {
          goto LABEL_43;
        }
        goto LABEL_37;
      }
      LODWORD(v9) = (v27 - 5) < 2;
LABEL_42:
      if ((v18 & 1) == 0) {
        goto LABEL_43;
      }
LABEL_37:
      uint64_t v14 = a3[2];
      unsigned int v26 = 259;
      if (a5 < 0x103u) {
        unsigned int v26 = a5;
      }
      goto LABEL_48;
    }
    goto LABEL_36;
  }
  if (!v9) {
    goto LABEL_42;
  }
  unsigned int v21 = *(unsigned __int8 *)(v9 + 1);
  if (v21 >= 6 || ((0x33u >> v21) & 1) == 0)
  {
    unsigned int v22 = *(unsigned __int16 *)(*(void *)(v9 + 200) + 10);
    if (v22 >= 0x103) {
      unsigned int v22 = 259;
    }
    goto LABEL_31;
  }
LABEL_36:
  LODWORD(v9) = 0;
  if (v18) {
    goto LABEL_37;
  }
LABEL_43:
  if (!v14) {
    goto LABEL_60;
  }
  unsigned int v28 = *(unsigned __int8 *)(v14 + 1);
  if (v28 < 6 && ((0x33u >> v28) & 1) != 0) {
    goto LABEL_53;
  }
  unsigned int v26 = *(unsigned __int16 *)(*(void *)(v14 + 200) + 10);
  if (v26 >= 0x103) {
    unsigned int v26 = 259;
  }
LABEL_48:
  uint64_t v29 = *((unsigned __int8 *)&word_267F63970[40 * v26] + ((v18 >> 1) & 0xF));
  unsigned int v30 = *(unsigned __int8 *)(v14 + 16 * (a6 != 0) + v29 + 168);
  if (v30 == 32 || v20 >= v30)
  {
LABEL_53:
    uint64_t v14 = 0;
    goto LABEL_60;
  }
  int v32 = *(unsigned __int8 *)(v14 + v29 + 7);
  if (a6) {
    BOOL v33 = (v32 - 7) > 0xFFFFFFFD;
  }
  else {
    BOOL v33 = (v32 & 0xFFFFFFFD) == 4;
  }
  uint64_t v14 = 2 * v33;
LABEL_60:
  BOOL v34 = v9 == 0;
  uint64_t v35 = 54;
  if (!v34) {
    uint64_t v35 = 55;
  }
  uint64_t result = sub_2219F85F4(a1, (unsigned __int8 *)(a2 + 2 * (v35 + v14) + 16));
  if (result) {
    return (sub_221A1D3D0(a1, (unsigned __int8 *)(a2 + 132), 0x1Eu) + 1) & 0x1F;
  }
  return result;
}

uint64_t sub_221A1DC34(int *a1, uint64_t a2, uint64_t *a3, int a4, unsigned __int16 a5, unsigned int a6, int a7, int a8)
{
  uint64_t v15 = *a3;
  if (!*a3) {
    goto LABEL_5;
  }
  if (*(unsigned char *)(a3[2] + 24))
  {
    if (*(unsigned char *)(a3[2] + 24) != 1 || *(unsigned char *)(v15 + 24))
    {
LABEL_5:
      unsigned int v16 = 1;
      unint64_t v17 = byte_267F63880;
      int v18 = 1;
      goto LABEL_22;
    }
    if (a4 >= 8) {
      uint64_t v15 = a3[3];
    }
    int v18 = 1;
    if (a6) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = 1;
    }
    unint64_t v17 = (char *)&unk_267F638B8;
  }
  else
  {
    int v19 = *(unsigned __int8 *)(v15 + 24);
    unint64_t v17 = byte_267F63880;
    unsigned int v20 = (char *)&unk_267F63918;
    if (!a8) {
      unsigned int v20 = (char *)&unk_267F638E8;
    }
    if (a6) {
      int v21 = 2;
    }
    else {
      int v21 = 1;
    }
    BOOL v22 = v19 == 1;
    if (v19 == 1) {
      unint64_t v17 = v20;
    }
    unsigned int v16 = 1;
    if (v22) {
      int v18 = v21;
    }
    else {
      int v18 = 1;
    }
  }
LABEL_22:
  uint64_t v23 = a3[1];
  unsigned int v24 = 1;
  int v25 = 1;
  if (a6 && v23)
  {
    if (*(unsigned char *)(a3[2] + 24))
    {
      if (*(unsigned char *)(a3[2] + 24) == 1)
      {
        if (*(unsigned char *)(v23 + 24)) {
          unsigned int v24 = 1;
        }
        else {
          unsigned int v24 = 2;
        }
      }
    }
    else if (*(unsigned char *)(v23 + 24) == 1)
    {
      int v25 = 2;
    }
    else
    {
      int v25 = 1;
    }
  }
  unsigned int v26 = a5;
  int v27 = &v17[a4];
  unint64_t v28 = *v27;
  char v29 = *v27;
  unint64_t v30 = v27[16];
  uint64_t v31 = (v30 >> 1) & 0xF;
  if (v30)
  {
    int v35 = a5;
    if (a5 >= 0x103u) {
      int v35 = 259;
    }
    unsigned int v34 = *(__int16 *)(a3[2]
                     + ((unint64_t)(a7 != 0) << 6)
                     + 4 * *((unsigned __int8 *)&word_267F63970[40 * v35] + v31)
                     + 2 * a6
                     + 40);
    if ((v34 & 0x80000000) != 0) {
      unsigned int v34 = -v34;
    }
    else {
      unsigned int v34 = (unsigned __int16)v34;
    }
  }
  else if (!v23 {
         || ((unsigned int v32 = *(unsigned __int8 *)(v23 + 1), !*(unsigned char *)(v23 + 2)) ? (v33 = v32 == 3) : (v33 = 0),
  }
             v33 || v32 < 6 && ((0x33u >> v32) & 1) != 0))
  {
    unsigned int v34 = 0;
  }
  else
  {
    unsigned int v36 = *(unsigned __int16 *)(*(void *)(v23 + 200) + 10);
    if (v36 >= 0x103) {
      unsigned int v36 = 259;
    }
    int v37 = *(unsigned __int16 *)(v23
                              + ((unint64_t)(a7 != 0) << 6)
                              + 4 * *((unsigned __int8 *)&word_267F63970[40 * v36] + v31)
                              + 2 * a6
                              + 40);
    if ((v37 & 0x8000u) != 0) {
      int v37 = -(__int16)v37;
    }
    unsigned int v34 = v37 * v25 / v24;
  }
  uint64_t v38 = (v28 >> 1) & 0xF;
  if (v29)
  {
    int v41 = a5;
    if (a5 >= 0x103u) {
      int v41 = 259;
    }
    int v42 = *(__int16 *)(a3[2]
                     + ((unint64_t)(a7 != 0) << 6)
                     + 4 * *((unsigned __int8 *)&word_267F63970[40 * v41] + v38)
                     + 2 * a6
                     + 40);
    if (v42 < 0) {
      LODWORD(v15) = -v42;
    }
    else {
      LODWORD(v15) = *(unsigned __int16 *)(a3[2]
    }
                                         + ((unint64_t)(a7 != 0) << 6)
                                         + 4 * *((unsigned __int8 *)&word_267F63970[40 * v41] + v38)
                                         + 2 * a6
                                         + 40);
  }
  else if (v15)
  {
    unsigned int v39 = *(unsigned __int8 *)(v15 + 1);
    if (*(unsigned char *)(v15 + 2)) {
      BOOL v40 = 0;
    }
    else {
      BOOL v40 = v39 == 3;
    }
    if (v40 || v39 < 6 && ((0x33u >> v39) & 1) != 0)
    {
      LODWORD(v15) = 0;
    }
    else
    {
      unsigned int v43 = *(unsigned __int16 *)(*(void *)(v15 + 200) + 10);
      if (v43 >= 0x103) {
        unsigned int v43 = 259;
      }
      int v44 = *(unsigned __int16 *)(v15
                                + ((unint64_t)(a7 != 0) << 6)
                                + 4 * *((unsigned __int8 *)&word_267F63970[40 * v43] + v38)
                                + 2 * a6
                                + 40);
      if ((v44 & 0x8000u) != 0) {
        int v44 = -(__int16)v44;
      }
      LODWORD(v15) = v44 * v18 / v16;
    }
  }
  unsigned int v45 = v15 + v34;
  int v46 = 8 * a6;
  if (v45 > 2)
  {
    BOOL v48 = v45 >= 0x21;
    unsigned int v47 = 7 * a6 + 41;
    if (v48) {
      unsigned int v47 = 7 * a6 + 42;
    }
  }
  else
  {
    unsigned int v47 = 7 * a6 + 40;
  }
  if (sub_2219F85F4((uint64_t)a1, (unsigned __int8 *)(a2 + 2 * v47 + 16)))
  {
    uint64_t v49 = (unsigned __int8 *)(a2 + 2 * (v46 - a6 + 43) + 16);
    if (sub_2219F85F4((uint64_t)a1, v49))
    {
      int v50 = 0;
      uint64_t v51 = v49 + 2;
      do
      {
        int v52 = sub_2219F85F4((uint64_t)a1, v51);
        int v53 = v50 - 1;
        if (!v52) {
          break;
        }
        v51 += 2 * (v50 == 0) + 2 * (v50 == -1);
        BOOL v22 = v50-- == -6;
      }
      while (!v22);
      if (v52) {
        int v54 = sub_221A1F308(a1, 3) - v53 + 1;
      }
      else {
        int v54 = -v53;
      }
    }
    else
    {
      LOWORD(v54) = 0;
    }
    BOOL v56 = sub_2219F86C8(a1);
    __int16 v55 = ~(_WORD)v54;
    if (!v56) {
      __int16 v55 = v54 + 1;
    }
  }
  else
  {
    __int16 v55 = 0;
  }
  int v57 = a5;
  if (v26 >= 0x103) {
    int v57 = 259;
  }
  *(_WORD *)(a3[2]
           + ((unint64_t)(a7 != 0) << 6)
           + 4 * *((unsigned __int8 *)&word_267F63970[40 * v57] + a4)
           + 2 * a6
           + 40) = v55;
  return v55;
}

uint64_t sub_221A1E05C(int *a1, uint64_t *a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, int a11)
{
  int v49 = *(unsigned __int8 *)(a10 + 3);
  int v51 = a3;
  if ((a8 == 2 || *(unsigned char *)(a10 + 2)) && (a3 != 2 || a4 != 4))
  {
    uint64_t v15 = 0;
    unsigned int v50 = 0;
    int v16 = 0;
    int v17 = 0;
    uint64_t v14 = a6;
    do
    {
      if (a3 == 3 && !*(_DWORD *)(a5 + 4 * v15) || *(_DWORD *)(v14 + 4 * v15) == 5)
      {
        LOBYTE(v18) = 32;
      }
      else
      {
        unsigned int v18 = sub_221A1D994((uint64_t)a1, (uint64_t)a1, a2, v17, *(_WORD *)(a10 + 26), 0, a11);
        a3 = v51;
        uint64_t v14 = a6;
        v50 |= v18 > ((2 * *(unsigned __int8 *)(a10 + 2)) | 1u);
      }
      if (*(int *)(a7 + 4 * v15) >= 1)
      {
        uint64_t v19 = 0;
        unsigned int v20 = (unsigned char *)(a10 + 24 + 16 * v16);
        do
        {
          *unsigned int v20 = v18;
          v20 += 16;
          *(unsigned char *)(a2[2] + v16 + 168 + v19++) = v18;
        }
        while ((int)v19 < *(_DWORD *)(a7 + 4 * v15));
        v16 += v19;
      }
      ++v15;
      v17 += 4;
    }
    while (v15 != 4);
  }
  else
  {
    unsigned int v50 = 0;
    uint64_t v14 = a6;
  }
  if ((a8 == 2 || v49) && (a3 != 2 || a4 != 4))
  {
    uint64_t v21 = 0;
    int v22 = 0;
    int v23 = 0;
    do
    {
      if (a3 == 3 && !*(_DWORD *)(a5 + 4 * v21) || *(_DWORD *)(v14 + 4 * v21) == 4)
      {
        LOBYTE(v24) = 32;
      }
      else
      {
        unsigned int v24 = sub_221A1D994((uint64_t)a1, (uint64_t)a1, a2, v23, *(_WORD *)(a10 + 26), 1, a11);
        a3 = v51;
        uint64_t v14 = a6;
        v50 |= v24 > ((2 * *(unsigned __int8 *)(a10 + 3)) | 1u);
      }
      if (*(int *)(a7 + 4 * v21) >= 1)
      {
        uint64_t v25 = 0;
        unsigned int v26 = (unsigned char *)(a10 + 25 + 16 * v22);
        do
        {
          *unsigned int v26 = v24;
          v26 += 16;
          *(unsigned char *)(a2[2] + v22 + 184 + v25++) = v24;
        }
        while ((int)v25 < *(_DWORD *)(a7 + 4 * v21));
        v22 += v25;
      }
      ++v21;
      v23 += 4;
    }
    while (v21 != 4);
  }
  uint64_t v27 = 0;
  LODWORD(v28) = 0;
  int v29 = 0;
  uint64_t v55 = a10 + 16;
  do
  {
    if (a3 == 3 && !*(_DWORD *)(a5 + 4 * v27) || *(_DWORD *)(v14 + 4 * v27) == 5)
    {
      if (*(int *)(a7 + 4 * v27) >= 1)
      {
        int v30 = 0;
        uint64_t v31 = (_DWORD *)(a10 + 16 + 16 * (int)v28);
        do
        {
          *uint64_t v31 = 0;
          v31 += 4;
          ++v30;
        }
        while (v30 < *(_DWORD *)(a7 + 4 * v27));
        LODWORD(v28) = v28 + v30;
      }
    }
    else if (*(int *)(a7 + 4 * v27) >= 1)
    {
      int v32 = 0;
      uint64_t v28 = (int)v28;
      do
      {
        unsigned int v33 = *(unsigned __int16 *)(a10 + 26);
        if (v29 <= 15)
        {
          if (v33 >= 0x103) {
            int v34 = 259;
          }
          else {
            int v34 = *(unsigned __int16 *)(a10 + 26);
          }
          int v35 = &word_267F63970[40 * v34];
          do
          {
            if (v28 == *((unsigned __int8 *)v35 + v29)) {
              break;
            }
            ++v29;
          }
          while (v29 != 16);
        }
        unsigned int v36 = (_WORD *)(v55 + 16 * v28);
        _WORD *v36 = sub_221A1DC34(a1, (uint64_t)a1, a2, v29, v33, 0, 0, a11);
        v36[1] = sub_221A1DC34(a1, (uint64_t)a1, a2, v29, *(_WORD *)(a10 + 26), 1u, 0, a11);
        ++v28;
        ++v32;
      }
      while (v32 < *(_DWORD *)(a7 + 4 * v27));
      uint64_t v14 = a6;
      a3 = v51;
    }
    ++v27;
  }
  while (v27 != 4);
  uint64_t v37 = 0;
  LODWORD(v38) = 0;
  int v39 = 0;
  do
  {
    if (a3 == 3 && !*(_DWORD *)(a5 + 4 * v37) || *(_DWORD *)(v14 + 4 * v37) == 4)
    {
      if (*(int *)(a7 + 4 * v37) >= 1)
      {
        int v40 = 0;
        int v41 = (_DWORD *)(a10 + 20 + 16 * (int)v38);
        do
        {
          *int v41 = 0;
          v41 += 4;
          ++v40;
        }
        while (v40 < *(_DWORD *)(a7 + 4 * v37));
        LODWORD(v38) = v38 + v40;
      }
    }
    else if (*(int *)(a7 + 4 * v37) >= 1)
    {
      int v42 = 0;
      uint64_t v38 = (int)v38;
      do
      {
        unsigned int v43 = *(unsigned __int16 *)(a10 + 26);
        if (v39 <= 15)
        {
          if (v43 >= 0x103) {
            int v44 = 259;
          }
          else {
            int v44 = *(unsigned __int16 *)(a10 + 26);
          }
          unsigned int v45 = &word_267F63970[40 * v44];
          do
          {
            if (v38 == *((unsigned __int8 *)v45 + v39)) {
              break;
            }
            ++v39;
          }
          while (v39 != 16);
        }
        uint64_t v46 = v55 + 16 * v38;
        *(_WORD *)(v46 + 4) = sub_221A1DC34(a1, (uint64_t)a1, a2, v39, v43, 0, 1, a11);
        *(_WORD *)(v46 + 6) = sub_221A1DC34(a1, (uint64_t)a1, a2, v39, *(_WORD *)(a10 + 26), 1u, 1, a11);
        ++v38;
        ++v42;
      }
      while (v42 < *(_DWORD *)(a7 + 4 * v37));
      uint64_t v14 = a6;
      a3 = v51;
    }
    ++v37;
  }
  while (v37 != 4);
  return v50;
}

uint64_t sub_221A1E538(uint64_t result, uint64_t *a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  uint64_t v11 = (int *)result;
  int v12 = (unsigned __int8 *)a2[2];
  BOOL v102 = v12[1] < 2u;
  if (*(unsigned char *)(a8 + 29)) {
    BOOL v13 = 1;
  }
  else {
    BOOL v13 = *(unsigned __int8 *)(a8 + 31) == 2;
  }
  int v84 = v12[5];
  unsigned int v92 = v12[4];
  int v14 = *(unsigned __int8 *)(*(void *)(a8 + 40) + 1);
  if (v12[1] || ((v15 = v12[2]) != 0 ? (BOOL v16 = v15 == 25) : (BOOL v16 = 1), v16))
  {
    unsigned int v83 = 0;
    unsigned int v82 = 5;
  }
  else
  {
    uint64_t result = sub_221A1ED44((int *)result, a2, 0, 0, v102, 0, 0, a3, a4, a6, *(_DWORD *)(a8 + 16) & *(unsigned __int8 *)(a8 + 185));
    unsigned int v82 = 1;
    unsigned int v83 = 1;
  }
  uint64_t v17 = a6 + 2 * v83 + 32;
  unsigned int v101 = v11;
  uint64_t v87 = a6;
  int v85 = v14;
  BOOL v86 = v13;
  if (a7)
  {
    uint64_t v18 = 0;
    if (a3) {
      BOOL v19 = a4 == 1;
    }
    else {
      BOOL v19 = 1;
    }
    uint64_t v20 = 201;
    if (v19) {
      uint64_t v20 = 218;
    }
    uint64_t v21 = 834;
    if (v19)
    {
      uint64_t v21 = 902;
      int v22 = (int *)&unk_221A3E164;
    }
    else
    {
      int v22 = (int *)&unk_221A3E360;
    }
    unsigned int v98 = &v11[v20 + 4];
    char v96 = (char *)v11 + v21 + 16;
    uint64_t v23 = a6 + 2 * v83;
    int v88 = v22;
    do
    {
      *(unsigned char *)(a5 + 4 * v18) = 0;
      if ((v92 >> v18))
      {
        uint64_t v24 = 0;
        char v25 = 0;
        uint64_t v90 = 4 * v18;
        char v26 = (4 * v18) & 0xF8 | (2 * (v18 & 1));
        *(void *)(a2[2] + 32) |= (1 << (v26 | 1));
        *(void *)(a2[2] + 32) |= (4 << v26);
        *(void *)(a2[2] + 32) |= (1 << (v26 | 5));
        *(void *)(a2[2] + 32) |= (1 << (v26 + 6));
        while (1)
        {
          uint64_t result = sub_2219F85F4((uint64_t)v11, (unsigned __int8 *)v98 + 2 * v22[v24]);
          if (result)
          {
            *(_WORD *)(v17 + 2 * v24) = 1;
            ++v25;
            uint64_t result = sub_2219F85F4((uint64_t)v11, (unsigned __int8 *)&v96[2 * dword_221A3E51C[v24]]);
            if (result) {
              break;
            }
          }
          if (++v24 == 63)
          {
            *(_WORD *)(v17 + 126) = 1;
            ++v25;
            break;
          }
        }
        uint64_t v93 = v18;
        int v27 = 0;
        int v28 = 1;
        for (uint64_t i = 158; i != 30; i -= 2)
        {
          if (*(_WORD *)(v23 + i))
          {
            int v30 = v28 >= 4 ? 4 : v28;
            __int16 v31 = sub_2219F85F4((uint64_t)v11, (unsigned __int8 *)v11 + 2 * v30 + 868);
            int v32 = (unsigned __int16)(*(_WORD *)(v23 + i) + v31);
            *(_WORD *)(v23 + i) += v31;
            if (v32 == 2)
            {
              int v33 = v27 >= 4 ? 4 : v27;
              int v28 = 0;
              *(_WORD *)(v23 + i) += sub_221A1F3AC(v11, (unsigned __int8 *)v11 + 2 * v33 + 878);
              ++v27;
            }
            else if (v28)
            {
              ++v28;
            }
            else
            {
              int v28 = 0;
            }
            uint64_t result = sub_2219F86C8(v11);
            if (result) {
              *(_WORD *)(v23 + i) = -*(_WORD *)(v23 + i);
            }
          }
        }
        int v22 = v88;
        *(unsigned char *)(a5 + v90) = v25;
        uint64_t v18 = v93;
      }
      v17 += 128;
      ++v18;
      v23 += 128;
    }
    while (v18 != 4);
  }
  else
  {
    LODWORD(v34) = 0;
    int v35 = 0;
    uint64_t v36 = 48;
    if (!v14) {
      uint64_t v36 = 0;
    }
    uint64_t v37 = 1422194;
    if (v13) {
      uint64_t v37 = 1422418;
    }
    uint64_t v38 = a8 + v37 + v83 + v36;
    uint64_t v39 = 16 - v83;
    char v40 = 1;
    int v97 = 2;
    do
    {
      int v99 = 0;
      char v89 = v40;
      char v41 = 1;
      int v42 = 2;
      unsigned int v91 = v35;
      do
      {
        char v94 = v41;
        int v95 = v35;
        if ((v92 >> v35))
        {
          int v43 = v34;
          unsigned int v44 = v91;
          do
          {
            uint64_t v34 = v43;
            int v45 = v99;
            do
            {
              uint64_t result = sub_221A1ED44(v101, a2, v82, 0, v102, v45, v44, a3, a4, v17, *(_DWORD *)(a8 + 16) & *(unsigned __int8 *)(a8 + 185));
              *(unsigned char *)(a5 + v34) = result;
              if (*(unsigned char *)(a8 + 1422192))
              {
                uint64_t v46 = 0;
                do
                {
                  *(_WORD *)(v17 + 2 * v46) *= *(unsigned __int8 *)(v38 + v46);
                  ++v46;
                }
                while (v39 != v46);
              }
              v17 += 32;
              ++v45;
              ++v34;
            }
            while (v45 != v42);
            ++v44;
            int v43 = v34;
          }
          while (v44 != v97);
        }
        else
        {
          v17 += 128;
          LODWORD(v34) = v34 + 4;
        }
        char v41 = 0;
        int v35 = v95 + 1;
        v42 += 2;
        int v99 = 2;
      }
      while ((v94 & 1) != 0);
      char v40 = 0;
      v97 += 2;
      int v35 = 2;
    }
    while ((v89 & 1) != 0);
  }
  if (v84)
  {
    sub_221A1ED44(v101, a2, 6u, 0, v102, 0, 0, a3, a4, v87 + 800, *(_DWORD *)(a8 + 16) & *(unsigned __int8 *)(a8 + 185));
    uint64_t result = sub_221A1ED44(v101, a2, 6u, 1, v102, 0, 0, a3, a4, v87 + 808, *(_DWORD *)(a8 + 16) & *(unsigned __int8 *)(a8 + 185));
    unsigned int v47 = (unsigned char *)(a8 + 1422192);
    if (*(unsigned char *)(a8 + 1422192))
    {
      uint64_t v48 = 0;
      uint64_t v49 = 64;
      if (!v85) {
        uint64_t v49 = 16;
      }
      uint64_t v50 = 1422194;
      if (v86) {
        uint64_t v50 = 1422418;
      }
      int v51 = (unsigned __int8 *)(a8 + v50 + v49);
      do
      {
        *(_WORD *)(v87 + 800 + v48) *= *v51;
        v48 += 2;
      }
      while (v48 != 8);
      uint64_t v52 = 0;
      uint64_t v53 = 80;
      if (!v85) {
        uint64_t v53 = 32;
      }
      uint64_t v54 = 1422194;
      if (v86) {
        uint64_t v54 = 1422418;
      }
      uint64_t v55 = (unsigned __int8 *)(a8 + v54 + v53);
      do
      {
        *(_WORD *)(v87 + 808 + v52) *= *v55;
        v52 += 2;
      }
      while (v52 != 8);
    }
    if (v84 != 1)
    {
      LODWORD(v56) = 0;
      unsigned int v57 = 0;
      if (a5) {
        uint64_t v58 = a5 + 16;
      }
      else {
        uint64_t v58 = 0;
      }
      uint64_t v59 = 64;
      if (!v85) {
        uint64_t v59 = 16;
      }
      uint64_t v60 = 1422194;
      if (v86) {
        uint64_t v60 = 1422418;
      }
      uint64_t v61 = v87 + 546;
      uint64_t v62 = a8 + v60 + v59 + 1;
      char v63 = 1;
      do
      {
        int v64 = 0;
        char v65 = v63;
        uint64_t v56 = (int)v56;
        char v66 = 1;
        do
        {
          char v67 = v66;
          *(unsigned char *)(v58 + v56) = sub_221A1ED44(v101, a2, 7u, 0, v102, v64, v57, a3, a4, v61, *(_DWORD *)(a8 + 16) & *(unsigned __int8 *)(a8 + 185));
          if (*v47)
          {
            for (uint64_t j = 0; j != 15; ++j)
              *(_WORD *)(v61 + 2 * j) *= *(unsigned __int8 *)(v62 + j);
          }
          char v66 = 0;
          v61 += 32;
          ++v56;
          int v64 = 1;
        }
        while ((v67 & 1) != 0);
        char v63 = 0;
        unsigned int v57 = 1;
      }
      while ((v65 & 1) != 0);
      LODWORD(v69) = 0;
      unsigned int v70 = 0;
      if (a5) {
        uint64_t v71 = a5 + 20;
      }
      else {
        uint64_t v71 = 0;
      }
      uint64_t v72 = 80;
      if (!v85) {
        uint64_t v72 = 32;
      }
      uint64_t v73 = 1422194;
      if (v86) {
        uint64_t v73 = 1422418;
      }
      uint64_t v74 = v87 + 674;
      uint64_t v75 = a8 + v73 + v72 + 1;
      char v76 = 1;
      do
      {
        int v77 = 0;
        char v78 = v76;
        uint64_t v69 = (int)v69;
        char v79 = 1;
        do
        {
          char v80 = v79;
          uint64_t result = sub_221A1ED44(v101, a2, 7u, 1, v102, v77, v70, a3, a4, v74, *(_DWORD *)(a8 + 16) & *(unsigned __int8 *)(a8 + 185));
          *(unsigned char *)(v71 + v69) = result;
          if (*v47)
          {
            for (uint64_t k = 0; k != 15; ++k)
              *(_WORD *)(v74 + 2 * k) *= *(unsigned __int8 *)(v75 + k);
          }
          char v79 = 0;
          v74 += 32;
          ++v69;
          int v77 = 1;
        }
        while ((v80 & 1) != 0);
        char v76 = 0;
        unsigned int v70 = 1;
      }
      while ((v78 & 1) != 0);
    }
  }
  return result;
}

uint64_t sub_221A1ED44(int *a1, uint64_t *a2, unsigned int a3, int a4, int a5, int a6, unsigned int a7, int a8, int a9, uint64_t a10, int a11)
{
  unsigned int v15 = a3 & 0xFFFFFFFB;
  if (a3 == 7) {
    char v16 = -2;
  }
  else {
    char v16 = 0;
  }
  if (a4) {
    BOOL v17 = 0;
  }
  else {
    BOOL v17 = a3 == 7;
  }
  if (a4) {
    BOOL v18 = 0;
  }
  else {
    BOOL v18 = a3 == 6;
  }
  if (a4) {
    BOOL v19 = a3 == 6;
  }
  else {
    BOOL v19 = 0;
  }
  LODWORD(v20) = a5 != 0;
  if (v15 == 1) {
    char v21 = 12;
  }
  else {
    char v21 = 2 * (a3 == 7);
  }
  if (v15 == 1) {
    char v22 = 3;
  }
  else {
    char v22 = a3 == 7;
  }
  if (v15 == 1)
  {
    char v16 = -4;
    BOOL v23 = 1;
  }
  else
  {
    BOOL v23 = a3 == 7;
  }
  if (v23) {
    int v24 = a7;
  }
  else {
    int v24 = 0;
  }
  if (v23) {
    int v25 = a6;
  }
  else {
    int v25 = 0;
  }
  if (!a3)
  {
    char v26 = 0;
    if (!v24) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
  if (v15 == 1)
  {
    char v26 = a6 + 4 * a7 + 1;
    if (!v24) {
      goto LABEL_33;
    }
LABEL_45:
    unint64_t v28 = (*(void *)(a2[2] + 32) & (unint64_t)(1 << (v26 + v16))) >> (v26 + v16);
LABEL_46:
    if (!v25) {
      goto LABEL_49;
    }
    goto LABEL_47;
  }
  if (v18) {
    char v26 = 17;
  }
  else {
    char v26 = 18;
  }
  if (a3 == 6)
  {
LABEL_44:
    if (!v24) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
  char v29 = v25 + 2 * v24;
  if (v17)
  {
    char v26 = v29 + 19;
    goto LABEL_44;
  }
  char v26 = v29 + 23;
  if (v24) {
    goto LABEL_45;
  }
LABEL_33:
  uint64_t v27 = a2[1];
  LODWORD(v28) = a5 != 0;
  if (!v27) {
    goto LABEL_46;
  }
  if (*(unsigned char *)(v27 + 1) || *(unsigned char *)(v27 + 2) != 25)
  {
    unint64_t v28 = (*(void *)(v27 + 32) & (unint64_t)(1 << (v26 + v21))) >> (v26 + v21);
    if (!v25) {
      goto LABEL_49;
    }
LABEL_47:
    unint64_t v20 = (*(void *)(a2[2] + 32) & (unint64_t)(1 << (v26 - 1))) >> (v26 - 1);
    goto LABEL_77;
  }
  LODWORD(v28) = 1;
  if (v25) {
    goto LABEL_47;
  }
LABEL_49:
  uint64_t v30 = *a2;
  if (!*a2) {
    goto LABEL_77;
  }
  if (*(unsigned char *)(a2[2] + 24) != 1)
  {
    if (!*(unsigned char *)(a2[2] + 24) && *(unsigned char *)(v30 + 24) == 1)
    {
      if (v15 == 1)
      {
        if (a11) {
          char v22 = 11;
        }
        else {
          char v22 = 3;
        }
        int v34 = (4 * (a7 >> 1)) | 1;
        goto LABEL_73;
      }
      if (a3 == 7)
      {
        if (a11) {
          char v22 = 3;
        }
        else {
          char v22 = 1;
        }
      }
      else
      {
        char v22 = 0;
        if (!a3)
        {
          LOBYTE(v34) = 0;
          goto LABEL_73;
        }
      }
      if (v18)
      {
        LOBYTE(v34) = 17;
      }
      else
      {
        if (v17) {
          char v63 = 19;
        }
        else {
          char v63 = 23;
        }
        if (v19) {
          LOBYTE(v34) = 18;
        }
        else {
          LOBYTE(v34) = v63;
        }
      }
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (*(unsigned char *)(v30 + 24))
  {
LABEL_72:
    LOBYTE(v34) = v26;
    goto LABEL_73;
  }
  BOOL v32 = a3 == 7 && v24 > 0;
  BOOL v33 = v24 > 1 && v15 == 1;
  if (v33 || v32)
  {
    uint64_t v30 = a2[3];
LABEL_131:
    if (v15 == 1)
    {
      LOBYTE(v34) = (8 * (a7 & 1)) | 1;
      char v22 = 3;
    }
    else
    {
      if (v18)
      {
        LOBYTE(v34) = 17;
      }
      else
      {
        if (v17) {
          char v64 = 19;
        }
        else {
          char v64 = 23;
        }
        if (v19) {
          LOBYTE(v34) = 18;
        }
        else {
          LOBYTE(v34) = v64;
        }
      }
      char v22 = a3 == 7;
    }
    goto LABEL_73;
  }
  if (a3) {
    goto LABEL_131;
  }
  LOBYTE(v34) = 0;
LABEL_73:
  if (*(unsigned char *)(v30 + 1) || *(unsigned char *)(v30 + 2) != 25) {
    unint64_t v20 = (*(void *)(v30 + 32) & (unint64_t)(1 << (v34 + v22))) >> (v34
  }
                                                                                              + v22);
  else {
    LODWORD(v20) = 1;
  }
LABEL_77:
  if (!sub_2219F85F4((uint64_t)a1, (unsigned __int8 *)&a1[2 * dword_221A3E064[a3] + 46 + (int)v28] + 2 * (int)v20 + 2))return 0; {
  uint64_t v35 = a3;
  }
  *(void *)(a2[2] + 32) |= 1 << v26;
  uint64_t v36 = &off_2645D7808;
  if (!a8) {
    uint64_t v36 = &off_2645D77C8;
  }
  BOOL v37 = a9 == 1 || a8 == 0;
  BOOL v38 = !v37;
  if (v37) {
    uint64_t v39 = (int *)&unk_221A3E0A4;
  }
  else {
    uint64_t v39 = (int *)&unk_221A3E0C4;
  }
  char v40 = (int *)&unk_221A3E104;
  if (!v38) {
    char v40 = (int *)&unk_221A3E0E4;
  }
  uint64_t v42 = a3 == 1 || a3 == 7;
  uint64_t v66 = a3;
  uint64_t v43 = a10 + 2 * (v42 << 63 >> 63);
  int v44 = v42;
  int v65 = dword_221A3E084[a3];
  int v45 = v65 - (v42 ^ 1);
  uint64_t v46 = 0;
  if (v45 > (int)v42)
  {
    uint64_t v47 = (uint64_t)a1 + 2 * v39[v35] + 16;
    uint64_t v48 = (uint64_t)a1 + 2 * v40[v35] + 16;
    uint64_t v49 = (int *)v36[v35];
    uint64_t v50 = (uint64_t)*(&off_2645D7848 + v35);
    do
    {
      if (sub_2219F85F4((uint64_t)a1, (unsigned __int8 *)(v47 + 2 * v49[v44])))
      {
        *(_WORD *)(v43 + 2 * v44) = 1;
        uint64_t v46 = (v46 + 1);
        if (sub_2219F85F4((uint64_t)a1, (unsigned __int8 *)(v48 + 2 * *(int *)(v50 + 4 * v44))))
        {
          if (v44 <= v45) {
            int v51 = v45;
          }
          else {
            int v51 = v44;
          }
          int v44 = v51 + 1;
        }
      }
      ++v44;
    }
    while (v44 < v45);
  }
  if (v44 <= v45)
  {
    *(_WORD *)(v43 + 2 * v44) = 1;
    uint64_t v46 = (v46 + 1);
  }
  int v52 = 0;
  uint64_t v53 = (uint64_t)a1 + 2 * dword_221A3E698[v66] + 16;
  uint64_t v54 = (uint64_t)a1 + 2 * dword_221A3E6B8[v66] + 16;
  int v55 = v65 + 1;
  uint64_t v56 = (_WORD *)(a10 + 2 * (v65 - 1));
  int v57 = 1;
  do
  {
    if (*v56)
    {
      if (v57 >= 4) {
        int v58 = 4;
      }
      else {
        int v58 = v57;
      }
      __int16 v59 = sub_2219F85F4((uint64_t)a1, (unsigned __int8 *)(v53 + 2 * v58));
      int v60 = (unsigned __int16)(*v56 + v59);
      *v56 += v59;
      if (v60 == 2)
      {
        if (v52 >= 4) {
          int v61 = 4;
        }
        else {
          int v61 = v52;
        }
        int v57 = 0;
        *v56 += sub_221A1F3AC(a1, (unsigned __int8 *)(v54 + 2 * v61));
        ++v52;
      }
      else if (v57)
      {
        ++v57;
      }
      else
      {
        int v57 = 0;
      }
      if (sub_2219F86C8(a1)) {
        *uint64_t v56 = -*v56;
      }
    }
    --v55;
    --v56;
  }
  while (v55 > 1);
  return v46;
}

uint64_t sub_221A1F280(uint64_t a1, unsigned __int8 **a2, int a3, _DWORD *a4)
{
  uint64_t v6 = *a2;
  if (*a2) {
    LODWORD(v6) = *v6 != 1;
  }
  int v7 = a2[1];
  if (v7) {
    LODWORD(v7) = *v7 != 1;
  }
  int v8 = v7 + v6;
  if (a3 == 6 || a3 == 1) {
    unsigned int v9 = v8 | 0x18;
  }
  else {
    unsigned int v9 = v8 + 11;
  }
  uint64_t result = sub_2219F85F4(a1, (unsigned __int8 *)(a1 + 2 * v9 + 16));
  *a4 = result;
  uint64_t v11 = a2[2];
  if (v11) {
    *uint64_t v11 = result;
  }
  return result;
}

uint64_t sub_221A1F308(int *a1, int a2)
{
  int v3 = 0;
  do
  {
    int v4 = a2;
    BOOL v5 = sub_2219F86C8(a1);
    int v6 = 1 << v4;
    if (v5) {
      a2 = v4 + 1;
    }
    else {
      a2 = v4;
    }
    if (!v5) {
      int v6 = 0;
    }
    v3 += v6;
  }
  while (v5 && a2 < 15);
  int v7 = 0;
  if (a2)
  {
    if (v5) {
      int v8 = v4 + 1;
    }
    else {
      int v8 = v4;
    }
    int v9 = v8 - 1;
    do
    {
      BOOL v10 = sub_2219F86C8(a1);
      int v11 = 1 << v9;
      if (!v10) {
        int v11 = 0;
      }
      v7 |= v11;
      --v9;
    }
    while (v9 != -1);
  }
  return (v7 + v3);
}

uint64_t sub_221A1F3AC(int *a1, unsigned __int8 *a2)
{
  uint64_t result = sub_2219F85F4((uint64_t)a1, a2);
  if (result)
  {
    int v5 = 0;
    do
    {
      int v6 = sub_2219F85F4((uint64_t)a1, a2);
      int v7 = v5 - 1;
      if (!v6) {
        break;
      }
    }
    while (v5-- != -11);
    if (v6) {
      return sub_221A1F308(a1, 0) - v7 + 1;
    }
    else {
      return -v7;
    }
  }
  return result;
}

uint64_t sub_221A1F424(uint64_t a1, char *a2)
{
  int v4 = *(unsigned int **)(a1 + 24);
  int v5 = *(_DWORD *)(a1 + 32);
  unint64_t v6 = *(unsigned __int8 *)(a1 + 36) + 1;
  int v7 = (unsigned int *)(*(void *)(a1 + 16) + (v6 >> 3));
  bzero(a2, 0x758uLL);
  if (v7 <= v4) {
    int v9 = v7;
  }
  else {
    int v9 = v4;
  }
  uint64_t result = 4294958327;
  if (v5 < 0) {
    return result;
  }
  int v11 = ((v6 & 7) + 2) & 7;
  int v12 = (unsigned int *)((char *)v9 + ((unint64_t)((v6 & 7) + 2) >> 3));
  unsigned int v13 = (bswap32(*v12) << (((v6 & 7) + 2) & 7)) & 0xF8000000;
  if (!(bswap32(*v7) << (v6 & 7) >> 30) || v13 != 939524096) {
    return result;
  }
  unint64_t v15 = (v11 + 5);
  int v16 = ((_BYTE)v11 + 5) & 7;
  if (v12 > v4) {
    int v12 = v4;
  }
  BOOL v17 = (unsigned int *)((char *)v12 + (v15 >> 3));
  unsigned int v18 = bswap32(*v17);
  unsigned int v19 = v18 << v16 >> 24;
  *(_DWORD *)a2 = v19;
  uint64_t v20 = (1 << ((v18 << v16 >> 24) - 66)) & 0x400400801;
  if (v19 - 66 > 0x22 || v20 == 0) {
    return result;
  }
  if (v17 > v4) {
    BOOL v17 = v4;
  }
  unsigned int v24 = *(unsigned int *)((char *)v17 + 1);
  char v22 = (unsigned int *)((char *)v17 + 1);
  unsigned int v23 = v24;
  if (v22 > v4) {
    char v22 = v4;
  }
  a2[8] = ((bswap32(v23) << v16) & 0x80000000) != 0;
  unint64_t v25 = (v16 + 1);
  int v26 = v25 & 7;
  uint64_t v27 = (unsigned int *)((char *)v22 + (v25 >> 3));
  signed int v28 = bswap32(*v27) << v26;
  if (v27 > v4) {
    uint64_t v27 = v4;
  }
  a2[9] = v28 < 0;
  unint64_t v29 = (v26 + 1);
  int v30 = ((_BYTE)v26 + 1) & 7;
  __int16 v31 = (unsigned int *)((char *)v27 + (v29 >> 3));
  signed int v32 = bswap32(*v31) << (v29 & 7);
  if (v31 > v4) {
    __int16 v31 = v4;
  }
  a2[10] = v32 < 0;
  unint64_t v33 = (v30 + 1);
  int v34 = ((_BYTE)v30 + 1) & 7;
  uint64_t v35 = (unsigned int *)((char *)v31 + (v33 >> 3));
  signed int v36 = bswap32(*v35) << (v33 & 7);
  if (v35 > v4) {
    uint64_t v35 = v4;
  }
  a2[11] = v36 < 0;
  BOOL v37 = (unsigned int *)((char *)v35 + ((v34 + 1) >> 3));
  if (v37 > v4) {
    BOOL v37 = v4;
  }
  int v38 = ((((_BYTE)v34 + 1) & 7) + 4) & 7;
  uint64_t v39 = (unsigned int *)((char *)v37 + ((unint64_t)((((_BYTE)v34 + 1) & 7u) + 4) >> 3));
  unsigned int v40 = bswap32(*v39) << ((((v34 + 1) & 7) + 4) & 7);
  if (v39 > v4) {
    uint64_t v39 = v4;
  }
  *((_DWORD *)a2 + 1) = HIBYTE(v40);
  unsigned int v42 = *(unsigned int *)((char *)v39 + 1);
  char v41 = (char *)v39 + 1;
  unsigned int v43 = bswap32(v42) << v38;
  if (v41 <= (char *)v4) {
    int v44 = (unsigned int *)v41;
  }
  else {
    int v44 = v4;
  }
  double v45 = sub_221A204AC((uint64_t)a2, (uint64_t)(a2 + 1360), v8);
  unsigned int v46 = __clz(v43 | 1);
  if (!v43) {
    ++v46;
  }
  unsigned int v47 = v43 << (v46 + 1) >> -(char)v46;
  if (!v46) {
    LOBYTE(v47) = 0;
  }
  unsigned __int8 v48 = v47 + ~(-1 << v46);
  unsigned int v49 = v48;
  a2[15] = v48;
  unint64_t v50 = v38 + 2 * v46 + 1;
  int v51 = (unsigned int *)((char *)v44 + (v50 >> 3));
  if (v51 <= v4) {
    int v52 = (unsigned int *)((char *)v44 + (v50 >> 3));
  }
  else {
    int v52 = v4;
  }
  if (v49 > 0x1F) {
    return 4294958327;
  }
  int v53 = v50 & 7;
  unsigned int v54 = bswap32(*v51) << v53;
  if (v19 == 100)
  {
    unsigned int v55 = __clz(v54 | 1);
    if (!v54) {
      ++v55;
    }
    unsigned int v56 = v54 << (v55 + 1) >> -(char)v55;
    if (v55) {
      unsigned int v57 = v56;
    }
    else {
      unsigned int v57 = 0;
    }
    unsigned int v58 = v57 + ~(-1 << v55);
    a2[16] = v58;
    if (v58 > 1u) {
      return 4294958327;
    }
    unint64_t v59 = v53 + 2 * v55 + 1;
    int v60 = (unsigned int *)((char *)v52 + (v59 >> 3));
    int v61 = v59 & 7;
    unsigned int v62 = bswap32(*v60) << v61;
    unsigned int v63 = __clz(v62 | 1);
    if (!v62) {
      ++v63;
    }
    unsigned int v64 = v62 << (v63 + 1) >> -(char)v63;
    if (!v63) {
      LOBYTE(v64) = 0;
    }
    a2[18] = v64 + ~(-1 << v63);
    if ((_BYTE)v64 + ~(-1 << v63)) {
      return 4294958327;
    }
    if (v60 > v4) {
      int v60 = v4;
    }
    unint64_t v65 = v61 + 2 * v63 + 1;
    uint64_t v66 = (unsigned int *)((char *)v60 + (v65 >> 3));
    int v67 = v65 & 7;
    unsigned int v68 = bswap32(*v66) << v67;
    unsigned int v69 = __clz(v68 | 1);
    if (!v68) {
      ++v69;
    }
    unsigned int v70 = v68 << (v69 + 1) >> -(char)v69;
    if (!v69) {
      unsigned int v70 = 0;
    }
    unsigned int v71 = v70 + ~(-1 << v69);
    a2[19] = v71;
    if ((_BYTE)v71) {
      return 4294958327;
    }
    if (v66 > v4) {
      uint64_t v66 = v4;
    }
    unint64_t v72 = v67 + 2 * v69 + 1;
    uint64_t v73 = (unsigned int *)((char *)v66 + (v72 >> 3));
    int v74 = v72 & 7;
    signed int v75 = bswap32(*v73) << v74;
    a2[20] = v75 < 0;
    if (v75 < 0) {
      return 4294958327;
    }
    if (v73 > v4) {
      uint64_t v73 = v4;
    }
    unint64_t v76 = (v74 + 1);
    int v77 = (unsigned int *)((char *)v73 + (v76 >> 3));
    if (v77 <= v4) {
      char v78 = v77;
    }
    else {
      char v78 = v4;
    }
    int v79 = v76 & 7;
    signed int v80 = bswap32(*v77) << v79;
    a2[21] = v80 < 0;
    unint64_t v81 = (v79 + 1);
    int v53 = ((_BYTE)v79 + 1) & 7;
    int v52 = (unsigned int *)((char *)v78 + (v81 >> 3));
    unsigned int v82 = bswap32(*v52);
    int v83 = v82 << v53;
    if (v52 > v4) {
      int v52 = v4;
    }
    if (v80 < 0)
    {
      unint64_t v166 = 0;
      uint64_t v167 = 38;
      while (1)
      {
        a2[v166 + 22] = v83 < 0;
        unint64_t v168 = (v53 + 1);
        int v53 = ((_BYTE)v53 + 1) & 7;
        int v52 = (unsigned int *)((char *)v52 + (v168 >> 3));
        unsigned int v54 = bswap32(*v52) << (v168 & 7);
        if (v52 > v4) {
          int v52 = v4;
        }
        if (v83 < 0)
        {
          *(void *)(a1 + 16) = v52;
          *(_DWORD *)(a1 + 32) = v54;
          *(unsigned char *)(a1 + 36) = v53;
          int v169 = v52 - *(_DWORD *)a1;
          int v170 = *(_DWORD *)(a1 + 8);
          if (v166 > 5)
          {
            if (v170 < v169) {
              return 4294958327;
            }
            uint64_t v175 = (v166 - 6);
            unsigned int v171 = &a2[64 * v175 + 134];
            unsigned int v172 = (BOOL *)&a2[v175 + 36];
            uint64_t v173 = a1;
            int v174 = 64;
          }
          else
          {
            if (v170 < v169) {
              return 4294958327;
            }
            unsigned int v171 = &a2[v167];
            unsigned int v172 = (BOOL *)&a2[v166 + 30];
            uint64_t v173 = a1;
            int v174 = 16;
          }
          uint64_t result = sub_221A20638(v173, (uint64_t)v171, v174, v172);
          if (result) {
            return result;
          }
          int v52 = *(unsigned int **)(a1 + 16);
          int v4 = *(unsigned int **)(a1 + 24);
          unsigned int v54 = *(_DWORD *)(a1 + 32);
          int v53 = *(unsigned __int8 *)(a1 + 36);
        }
        ++v166;
        v167 += 16;
        int v83 = v54;
        if (v166 == 8) {
          goto LABEL_73;
        }
      }
    }
    unsigned int v54 = v82 << v53;
  }
  else
  {
    a2[16] = 1;
  }
LABEL_73:
  unsigned int v84 = __clz(v54 | 1);
  if (!v54) {
    ++v84;
  }
  unsigned int v85 = v54 << (v84 + 1) >> -(char)v84;
  unsigned int v86 = v84 ? v85 : 0;
  unsigned int v87 = v86 + ~(-1 << v84);
  *((_DWORD *)a2 + 68) = v87;
  if (v87 > 0xC) {
    return 4294958327;
  }
  unint64_t v88 = v53 + 2 * v84 + 1;
  char v89 = (unsigned int *)((char *)v52 + (v88 >> 3));
  if (v89 <= v4) {
    uint64_t v90 = v89;
  }
  else {
    uint64_t v90 = v4;
  }
  int v91 = v88 & 7;
  unsigned int v92 = bswap32(*v89) << v91;
  unsigned int v93 = __clz(v92 | 1);
  if (v92) {
    unsigned int v94 = v93;
  }
  else {
    unsigned int v94 = v93 + 1;
  }
  unsigned int v95 = v92 << (v94 + 1) >> -(char)v94;
  if (!v94) {
    LOBYTE(v95) = 0;
  }
  unsigned __int8 v96 = v95 + ~(-1 << v94);
  unsigned int v97 = v96;
  a2[276] = v96;
  unint64_t v98 = v91 + 2 * v94 + 1;
  int v99 = (unsigned int *)((char *)v90 + (v98 >> 3));
  unsigned int v100 = v99 <= v4 ? (unsigned int *)((char *)v90 + (v98 >> 3)) : v4;
  if (v97 > 2) {
    return 4294958327;
  }
  int v101 = v98 & 7;
  unsigned int v102 = bswap32(*v99) << v101;
  if (v97 == 1)
  {
    a2[284] = (v102 & 0x80000000) != 0;
    unint64_t v145 = (v101 + 1);
    int v146 = ((_BYTE)v101 + 1) & 7;
    unsigned int v147 = (unsigned int *)((char *)v100 + (v145 >> 3));
    unsigned int v148 = bswap32(*v147) << (v145 & 7);
    if (v147 > v4) {
      unsigned int v147 = v4;
    }
    unsigned int v149 = __clz(v148 | 1);
    if (!v148) {
      ++v149;
    }
    if (v149 <= 0xC)
    {
      uint64_t result = 0;
      unsigned int v150 = v148 << (v149 + 1) >> -(char)v149;
      if (!v149) {
        unsigned int v150 = 0;
      }
      int v151 = v150 + ~(-1 << v149);
      unint64_t v152 = v146 + 2 * v149 + 1;
      int v101 = v152 & 7;
      unsigned int v100 = (unsigned int *)((char *)v147 + (v152 >> 3));
      unsigned int v102 = bswap32(*v100) << (v152 & 7);
      if (v100 > v4) {
        unsigned int v100 = v4;
      }
      goto LABEL_176;
    }
    unint64_t v153 = (v146 + 1);
    int v101 = ((_BYTE)v146 + 1) & 7;
    unsigned int v100 = (unsigned int *)((char *)v147 + (v153 >> 3));
    unsigned int v102 = bswap32(*v100) << (v153 & 7);
    if (v100 > v4) {
      unsigned int v100 = v4;
    }
    if ((v148 & 0x80000000) != 0)
    {
      unsigned int v154 = 0;
    }
    else
    {
      unsigned int v154 = 0;
      do
      {
        unsigned int v155 = v154;
        char v156 = v101;
        unsigned int v157 = v102;
        ++v154;
        unint64_t v158 = (v101 + 1);
        int v101 = ((_BYTE)v101 + 1) & 7;
        unsigned int v100 = (unsigned int *)((char *)v100 + (v158 >> 3));
        unsigned int v102 = bswap32(*v100) << (v158 & 7);
        if (v100 > v4) {
          unsigned int v100 = v4;
        }
      }
      while ((v157 & 0x80000000) == 0 && v155 < 0x1F);
      if (v155 > 0x1E)
      {
        int v177 = 0;
        uint64_t result = 4294958327;
        int v151 = -2;
LABEL_177:
        *((_DWORD *)a2 + 72) = ((v151 + 1) >> 1) - ((v151 + 1) >> 1) * 2 * ((v151 + 1) & 1);
        if (!v177) {
          goto LABEL_311;
        }
        unsigned int v178 = __clz(v102 | 1);
        if (!v102) {
          ++v178;
        }
        if (v178 <= 0xC)
        {
          uint64_t result = 0;
          unsigned int v179 = v102 << (v178 + 1) >> -(char)v178;
          if (!v178) {
            unsigned int v179 = 0;
          }
          int v180 = v179 + ~(-1 << v178);
          unint64_t v181 = v101 + 2 * v178 + 1;
          int v101 = v181 & 7;
          unsigned int v100 = (unsigned int *)((char *)v100 + (v181 >> 3));
          unsigned int v182 = bswap32(*v100) << (v181 & 7);
          if (v100 > v4) {
            unsigned int v100 = v4;
          }
          goto LABEL_264;
        }
        unint64_t v183 = (v101 + 1);
        int v101 = ((_BYTE)v101 + 1) & 7;
        unsigned int v100 = (unsigned int *)((char *)v100 + (v183 >> 3));
        unsigned int v182 = bswap32(*v100) << (v183 & 7);
        if (v100 > v4) {
          unsigned int v100 = v4;
        }
        if ((v102 & 0x80000000) != 0)
        {
          unsigned int v184 = 0;
        }
        else
        {
          unsigned int v184 = 0;
          do
          {
            unsigned int v185 = v184;
            char v186 = v101;
            unsigned int v187 = v182;
            ++v184;
            unint64_t v188 = (v101 + 1);
            int v101 = ((_BYTE)v101 + 1) & 7;
            unsigned int v100 = (unsigned int *)((char *)v100 + (v188 >> 3));
            unsigned int v182 = bswap32(*v100) << (v188 & 7);
            if (v100 > v4) {
              unsigned int v100 = v4;
            }
          }
          while ((v187 & 0x80000000) == 0 && v185 < 0x1F);
          if (v185 > 0x1E)
          {
            int v246 = 0;
            uint64_t result = 4294958327;
            int v180 = -2;
            goto LABEL_265;
          }
          if (v184 - 1 > 0x17)
          {
            unsigned int v189 = v182 >> (48 - v184);
            unsigned int v190 = ((v186 + 1) & 7) + v184;
            unint64_t v191 = v190 - 16;
            int v101 = v190 & 7;
            unsigned int v192 = (unsigned int *)((char *)v100 + (v191 >> 3));
            unsigned int v193 = bswap32(*v192) << v101;
            if (v192 > v4) {
              unsigned int v192 = v4;
            }
            unsigned int v194 = *(unsigned int *)((char *)v192 + 2);
            unsigned int v100 = (unsigned int *)((char *)v192 + 2);
            unsigned int v182 = bswap32(v194) << v101;
            if (v100 > v4) {
              unsigned int v100 = v4;
            }
            int v195 = __PAIR64__(v189, v193) >> 16;
LABEL_263:
            uint64_t result = 0;
            int v180 = v195 + ~(-1 << v184);
LABEL_264:
            int v246 = 1;
LABEL_265:
            *((_DWORD *)a2 + 73) = ((v180 + 1) >> 1)
                                 - ((v180 + 1) >> 1) * 2 * ((v180 + 1) & 1);
            if (v246)
            {
              unsigned int v247 = __clz(v182 | 1);
              if (!v182) {
                ++v247;
              }
              unsigned int v248 = v182 << (v247 + 1) >> -(char)v247;
              if (!v247) {
                unsigned int v248 = 0;
              }
              uint64_t v249 = v248 + ~(-1 << v247);
              *((_DWORD *)a2 + 74) = v249;
              if (v249 > 0xFF) {
                return 4294958327;
              }
              unint64_t v250 = v101 + 2 * v247 + 1;
              long long v251 = (unsigned int *)((char *)v100 + (v250 >> 3));
              if (v251 <= v4) {
                unsigned int v100 = (unsigned int *)((char *)v100 + (v250 >> 3));
              }
              else {
                unsigned int v100 = v4;
              }
              int v101 = v250 & 7;
              unsigned int v102 = bswap32(*v251) << v101;
              *((_DWORD *)a2 + 468) = 0;
              if (!v249) {
                goto LABEL_101;
              }
              uint64_t v252 = 0;
              while (1)
              {
                unsigned int v253 = __clz(v102 | 1);
                unsigned int v254 = v102 ? v253 : v253 + 1;
                if (v254 <= 0xC) {
                  break;
                }
                unint64_t v258 = (v101 + 1);
                int v101 = ((_BYTE)v101 + 1) & 7;
                unsigned int v100 = (unsigned int *)((char *)v100 + (v258 >> 3));
                unsigned int v259 = bswap32(*v100) << (v258 & 7);
                if (v100 > v4) {
                  unsigned int v100 = v4;
                }
                unsigned int v260 = 0;
                if ((v102 & 0x80000000) != 0) {
                  goto LABEL_294;
                }
                do
                {
                  unsigned int v261 = v260;
                  char v262 = v101;
                  unsigned int v263 = v259;
                  ++v260;
                  unint64_t v264 = (v101 + 1);
                  int v101 = ((_BYTE)v101 + 1) & 7;
                  unsigned int v100 = (unsigned int *)((char *)v100 + (v264 >> 3));
                  unsigned int v259 = bswap32(*v100) << (v264 & 7);
                  if (v100 > v4) {
                    unsigned int v100 = v4;
                  }
                }
                while ((v263 & 0x80000000) == 0 && v261 < 0x1F);
                if (v261 <= 0x1E)
                {
                  if (v260 - 1 > 0x17)
                  {
                    unsigned int v268 = v259 >> (48 - v260);
                    unsigned int v269 = ((v262 + 1) & 7) + v260;
                    unint64_t v270 = v269 - 16;
                    int v101 = v269 & 7;
                    int v271 = (unsigned int *)((char *)v100 + (v270 >> 3));
                    unsigned int v272 = bswap32(*v271) << v101;
                    if (v271 > v4) {
                      int v271 = v4;
                    }
                    unsigned int v273 = *(unsigned int *)((char *)v271 + 2);
                    unsigned int v100 = (unsigned int *)((char *)v271 + 2);
                    unsigned int v102 = bswap32(v273) << v101;
                    if (v100 > v4) {
                      unsigned int v100 = v4;
                    }
                    int v265 = __PAIR64__(v268, v272) >> 16;
                  }
                  else
                  {
LABEL_294:
                    int v265 = v259 >> -(char)v260;
                    unint64_t v266 = v101 + v260;
                    int v101 = ((_BYTE)v101 + (_BYTE)v260) & 7;
                    unsigned int v100 = (unsigned int *)((char *)v100 + (v266 >> 3));
                    unsigned int v102 = bswap32(*v100) << (v266 & 7);
                    if (v100 > v4) {
                      unsigned int v100 = v4;
                    }
                  }
                  uint64_t result = 0;
                  int v256 = v265 + ~(-1 << v260);
LABEL_304:
                  char v267 = 1;
                  goto LABEL_305;
                }
                char v267 = 0;
                uint64_t result = 4294958327;
                int v256 = -2;
                unsigned int v102 = v259;
LABEL_305:
                *(_DWORD *)&a2[4 * v252 + 300] = ((v256 + 1) >> 1)
                                               - ((v256 + 1) >> 1) * 2 * ((v256 + 1) & 1);
                if ((v267 & 1) == 0) {
                  goto LABEL_311;
                }
                if (++v252 == v249) {
                  goto LABEL_101;
                }
              }
              uint64_t result = 0;
              unsigned int v255 = v102 << (v254 + 1) >> -(char)v254;
              if (!v254) {
                unsigned int v255 = 0;
              }
              int v256 = v255 + ~(-1 << v254);
              unint64_t v257 = v101 + 2 * v254 + 1;
              int v101 = ((_BYTE)v101 + 2 * (_BYTE)v254 + 1) & 7;
              unsigned int v100 = (unsigned int *)((char *)v100 + (v257 >> 3));
              unsigned int v102 = bswap32(*v100) << (v257 & 7);
              if (v100 > v4) {
                unsigned int v100 = v4;
              }
              goto LABEL_304;
            }
            unsigned int v102 = v182;
LABEL_311:
            if (!result)
            {
LABEL_312:
              uint64_t result = 0;
              *(void *)(a1 + 16) = v100;
              *(_DWORD *)(a1 + 32) = v102;
              *(unsigned char *)(a1 + 36) = v101;
              return result;
            }
            return result;
          }
        }
        int v195 = v182 >> -(char)v184;
        unint64_t v245 = v101 + v184;
        int v101 = ((_BYTE)v101 + (_BYTE)v184) & 7;
        unsigned int v100 = (unsigned int *)((char *)v100 + (v245 >> 3));
        unsigned int v182 = bswap32(*v100) << (v245 & 7);
        if (v100 > v4) {
          unsigned int v100 = v4;
        }
        goto LABEL_263;
      }
      if (v154 - 1 > 0x17)
      {
        unsigned int v159 = v102 >> (48 - v154);
        unsigned int v160 = ((v156 + 1) & 7) + v154;
        unint64_t v161 = v160 - 16;
        int v101 = v160 & 7;
        unsigned int v162 = (unsigned int *)((char *)v100 + (v161 >> 3));
        unsigned int v163 = bswap32(*v162) << v101;
        if (v162 > v4) {
          unsigned int v162 = v4;
        }
        unsigned int v164 = *(unsigned int *)((char *)v162 + 2);
        unsigned int v100 = (unsigned int *)((char *)v162 + 2);
        unsigned int v102 = bswap32(v164) << v101;
        if (v100 > v4) {
          unsigned int v100 = v4;
        }
        int v165 = __PAIR64__(v159, v163) >> 16;
LABEL_175:
        uint64_t result = 0;
        int v151 = v165 + ~(-1 << v154);
LABEL_176:
        int v177 = 1;
        goto LABEL_177;
      }
    }
    int v165 = v102 >> -(char)v154;
    unint64_t v176 = v101 + v154;
    int v101 = ((_BYTE)v101 + (_BYTE)v154) & 7;
    unsigned int v100 = (unsigned int *)((char *)v100 + (v176 >> 3));
    unsigned int v102 = bswap32(*v100) << (v176 & 7);
    if (v100 > v4) {
      unsigned int v100 = v4;
    }
    goto LABEL_175;
  }
  if (!v97)
  {
    unsigned int v103 = __clz(v102 | 1);
    if (!v102) {
      ++v103;
    }
    unsigned int v104 = v102 << (v103 + 1) >> -(char)v103;
    if (!v103) {
      unsigned int v104 = 0;
    }
    unsigned int v105 = v104 + ~(-1 << v103);
    *((_DWORD *)a2 + 70) = v105;
    if (v105 > 0xC) {
      return 4294958327;
    }
    unint64_t v106 = v101 + 2 * v103 + 1;
    unsigned int v100 = (unsigned int *)((char *)v100 + (v106 >> 3));
    unsigned int v107 = *v100;
    *((_DWORD *)a2 + 468) = 16 << v105;
    if (v100 > v4) {
      unsigned int v100 = v4;
    }
    a2[284] = 0;
    *((void *)a2 + 36) = 0;
    int v101 = v106 & 7;
    unsigned int v102 = bswap32(v107) << v101;
    *((_DWORD *)a2 + 74) = 0;
  }
LABEL_101:
  unsigned int v108 = __clz(v102 | 1);
  if (v102) {
    unsigned int v109 = v108;
  }
  else {
    unsigned int v109 = v108 + 1;
  }
  unsigned int v110 = v102 << (v109 + 1) >> -(char)v109;
  if (!v109) {
    unsigned int v110 = 0;
  }
  unsigned int v111 = v110 + ~(-1 << v109);
  *((_DWORD *)a2 + 330) = v111;
  unint64_t v112 = v101 + 2 * v109 + 1;
  int v113 = v112 & 7;
  unsigned int v114 = (unsigned int *)((char *)v100 + (v112 >> 3));
  signed int v115 = bswap32(*v114) << v113;
  if (v114 > v4) {
    unsigned int v114 = v4;
  }
  a2[1324] = v115 < 0;
  unint64_t v116 = (v113 + 1);
  int v117 = ((_BYTE)v113 + 1) & 7;
  unsigned int v118 = (unsigned int *)((char *)v114 + (v116 >> 3));
  unsigned int v119 = bswap32(*v118) << (v116 & 7);
  if (v118 <= v4) {
    uint64_t v120 = v118;
  }
  else {
    uint64_t v120 = v4;
  }
  unsigned int v121 = __clz(v119 | 1);
  if (v119) {
    unsigned int v122 = v121;
  }
  else {
    unsigned int v122 = v121 + 1;
  }
  unsigned int v123 = v119 << (v122 + 1) >> -(char)v122;
  if (!v122) {
    unsigned int v123 = 0;
  }
  uint64_t v124 = v123 + ~(-1 << v122);
  *((_DWORD *)a2 + 332) = v124;
  unint64_t v125 = v117 + 2 * v122 + 1;
  int v126 = ((_BYTE)v117 + 2 * (_BYTE)v122 + 1) & 7;
  int v127 = (unsigned int *)((char *)v120 + (v125 >> 3));
  unsigned int v128 = bswap32(*v127) << v126;
  if (v127 <= v4) {
    unsigned int v129 = v127;
  }
  else {
    unsigned int v129 = v4;
  }
  unsigned int v130 = __clz(v128 | 1);
  if (v128) {
    unsigned int v131 = v130;
  }
  else {
    unsigned int v131 = v130 + 1;
  }
  unsigned int v132 = v128 << (v131 + 1) >> -(char)v131;
  if (!v131) {
    unsigned int v132 = 0;
  }
  uint64_t v133 = v132 + ~(-1 << v131);
  *((_DWORD *)a2 + 333) = v133;
  unint64_t v134 = v126 + 2 * v131 + 1;
  int v135 = ((_BYTE)v126 + 2 * (_BYTE)v131 + 1) & 7;
  unsigned int v136 = (unsigned int *)((char *)v129 + (v134 >> 3));
  signed int v137 = bswap32(*v136) << v135;
  if (v136 <= v4) {
    unsigned int v138 = v136;
  }
  else {
    unsigned int v138 = v4;
  }
  a2[1336] = v137 < 0;
  unint64_t v139 = (v135 + 1);
  unint64_t v140 = (unsigned int *)((char *)v138 + (v139 >> 3));
  if (v140 <= v4) {
    BOOL v141 = (unsigned int *)((char *)v138 + (v139 >> 3));
  }
  else {
    BOOL v141 = v4;
  }
  if (v111 > 0x10 || (unint64_t)(v124 + 1 + (v124 + 1) * v133) >> 23) {
    return 4294958327;
  }
  int v142 = v139 & 7;
  signed int v143 = bswap32(*v140) << (v139 & 7);
  sub_221A204AC((uint64_t)a2, (uint64_t)(a2 + 1360), v45);
  if (a2[1336])
  {
    a2[1337] = 0;
  }
  else
  {
    a2[1337] = v143 < 0;
    unint64_t v196 = (v142 + 1);
    int v142 = ((_BYTE)v142 + 1) & 7;
    unint64_t v197 = (unsigned int *)((char *)v141 + (v196 >> 3));
    signed int v143 = bswap32(*v197) << v142;
    if (v197 <= v4) {
      BOOL v141 = v197;
    }
    else {
      BOOL v141 = v4;
    }
  }
  a2[1338] = v143 < 0;
  int v198 = ((_BYTE)v142 + 1) & 7;
  int v199 = (unsigned int *)((char *)v141 + ((unint64_t)(v142 + 1) >> 3));
  signed int v200 = bswap32(*v199) << v198;
  if (v199 > v4) {
    int v199 = v4;
  }
  a2[1339] = v200 < 0;
  unint64_t v201 = (v198 + 1);
  int v202 = ((_BYTE)v198 + 1) & 7;
  unint64_t v203 = (unsigned int *)((char *)v199 + (v201 >> 3));
  signed int v204 = bswap32(*v203) << (v201 & 7);
  if (v203 > v4) {
    unint64_t v203 = v4;
  }
  if ((v200 & 0x80000000) == 0)
  {
    *(_OWORD *)(a2 + 1340) = 0u;
    goto LABEL_211;
  }
  unsigned int v211 = __clz(v204 | 1);
  unsigned int v212 = v204 ? v211 : v211 + 1;
  unsigned int v213 = (v204 << (v212 + 1)) >> -(char)v212;
  unsigned int v214 = v212 ? v213 : 0;
  unsigned int v215 = v214 + ~(-1 << v212);
  *((_DWORD *)a2 + 335) = v215;
  unsigned int v216 = 9 * *((_DWORD *)a2 + 332);
  if (v215 > v216) {
    return 4294958327;
  }
  unint64_t v217 = v202 + 2 * v212 + 1;
  int v218 = (unsigned int *)((char *)v203 + (v217 >> 3));
  int v219 = v217 & 7;
  unsigned int v220 = bswap32(*v218) << v219;
  unsigned int v221 = __clz(v220 | 1);
  if (!v220) {
    ++v221;
  }
  unsigned int v222 = v220 << (v221 + 1) >> -(char)v221;
  if (!v221) {
    unsigned int v222 = 0;
  }
  unsigned int v223 = v222 + ~(-1 << v221);
  *((_DWORD *)a2 + 336) = v223;
  if (v223 > v216) {
    return 4294958327;
  }
  if (v218 > v4) {
    int v218 = v4;
  }
  unint64_t v224 = v219 + 2 * v221 + 1;
  unsigned int v225 = (unsigned int *)((char *)v218 + (v224 >> 3));
  int v226 = v224 & 7;
  unsigned int v227 = bswap32(*v225) << (v224 & 7);
  unsigned int v228 = __clz(v227 | 1);
  unsigned int v229 = v227 ? v228 : v228 + 1;
  unsigned int v230 = v227 << (v229 + 1) >> -(char)v229;
  unsigned int v231 = v229 ? v230 : 0;
  unsigned int v232 = v231 + ~(-1 << v229);
  *((_DWORD *)a2 + 337) = v232;
  unsigned int v233 = 17 * *((_DWORD *)a2 + 333);
  if (v232 > v233) {
    return 4294958327;
  }
  if (v225 > v4) {
    unsigned int v225 = v4;
  }
  unint64_t v234 = v226 + 2 * v229 + 1;
  uint64_t v235 = (unsigned int *)((char *)v225 + (v234 >> 3));
  if (v235 <= v4) {
    uint64_t v236 = v235;
  }
  else {
    uint64_t v236 = v4;
  }
  int v237 = v234 & 7;
  unsigned int v238 = bswap32(*v235) << v237;
  unsigned int v239 = __clz(v238 | 1);
  if (!v238) {
    ++v239;
  }
  unsigned int v240 = v238 << (v239 + 1) >> -(char)v239;
  if (!v239) {
    unsigned int v240 = 0;
  }
  unsigned int v241 = v240 + ~(-1 << v239);
  *((_DWORD *)a2 + 338) = v241;
  unint64_t v242 = v237 + 2 * v239 + 1;
  int v243 = (unsigned int *)((char *)v236 + (v242 >> 3));
  unint64_t v203 = v243 <= v4 ? (unsigned int *)((char *)v236 + (v242 >> 3)) : v4;
  if (v241 > v233) {
    return 4294958327;
  }
  int v202 = v242 & 7;
  signed int v204 = bswap32(*v243) << (v242 & 7);
LABEL_211:
  a2[1356] = v204 < 0;
  unsigned int v205 = v202 + 1;
  int v206 = v205 & 7;
  unsigned int v207 = (unsigned int *)((char *)v203 + (v205 >> 3));
  if (v207 <= v4) {
    unsigned int v208 = v207;
  }
  else {
    unsigned int v208 = v4;
  }
  if ((v204 & 0x80000000) == 0) {
    goto LABEL_215;
  }
  unsigned int v244 = bswap32(*v207);
  *(void *)(a1 + 16) = v208;
  *(_DWORD *)(a1 + 32) = v244 << v206;
  *(unsigned char *)(a1 + 36) = v206;
  if (*(_DWORD *)(a1 + 8) < (int)v208 - *(_DWORD *)a1) {
    return 4294958327;
  }
  uint64_t result = sub_221A20728(a1, v144, (uint64_t)(a2 + 1360));
  if (!result)
  {
    unsigned int v208 = *(unsigned int **)(a1 + 16);
    int v4 = *(unsigned int **)(a1 + 24);
    int v206 = *(unsigned __int8 *)(a1 + 36);
LABEL_215:
    LOBYTE(v101) = 0;
    unsigned int v100 = (unsigned int *)((char *)v208 + ((v206 + 1) >> 3));
    if (v100 > v4) {
      unsigned int v100 = v4;
    }
    if ((((_BYTE)v206 + 1) & 7) != 0) {
      unsigned int v100 = (unsigned int *)((char *)v100 + 1);
    }
    if (v100 > v4) {
      unsigned int v100 = v4;
    }
    unsigned int v102 = bswap32(*v100);
    int v209 = *((_DWORD *)a2 + 332) + 1;
    int v210 = *((_DWORD *)a2 + 333);
    *((_DWORD *)a2 + 467) = 1 << (*((_DWORD *)a2 + 68) + 4);
    *((_DWORD *)a2 + 469) = v209 + v209 * v210 - 1;
    goto LABEL_312;
  }
  return result;
}

double sub_221A204AC(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3 = 0;
  int v4 = *(_DWORD *)(a1 + 4);
  int v5 = -1;
  do
  {
    if (v4 == byte_221A3C2A8[v3]) {
      int v5 = v3;
    }
    ++v3;
  }
  while (v3 != 20);
  if (v5 == -1)
  {
    int v5 = 0;
  }
  else if (v4 == 11 && *(unsigned char *)(a1 + 11))
  {
    int v5 = 1;
  }
  LODWORD(a3) = dword_221A3C258[v5];
  int v6 = (int)fmin((double)*(unint64_t *)&a3* 384.0/ ((double)(((*(_DWORD *)(a1 + 1328) << 8)+ 256+ ((*(_DWORD *)(a1 + 1328) << 8) + 256) * *(_DWORD *)(a1 + 1332))* (2 - *(unsigned __int8 *)(a1 + 1336)))* 1.5), 16.0);
  *(_DWORD *)(a2 + 20) = 5;
  *(void *)(a2 + 28) = 0x200000002;
  *(_DWORD *)(a2 + 36) = 2;
  *(unsigned char *)(a2 + 70) = 1;
  HIDWORD(v7) = 1;
  *(_OWORD *)(a2 + 72) = xmmword_221A3E6E0;
  if (*(_DWORD *)a1 == 100 && *(unsigned char *)(a1 + 11) == 1) {
    int v8 = 0;
  }
  else {
    int v8 = v6;
  }
  *(_DWORD *)(a2 + 88) = v8;
  *(_DWORD *)(a2 + 92) = v6;
  LODWORD(v7) = dword_221A3C1B8[v5];
  *(double *)&unint64_t v9 = (double)v7 * 1000.0 * 0.015625 + -1.0 + 0.5;
  *(_DWORD *)(a2 + 108) = (int)*(double *)&v9;
  LODWORD(v9) = dword_221A3C208[v5];
  *(_DWORD *)(a2 + 236) = (int)((double)v9 * 200.0 * 0.0625 + -1.0 + 0.5);
  *(void *)&double result = 0x1700000017;
  *(_OWORD *)(a2 + 492) = xmmword_221A39700;
  return result;
}

uint64_t sub_221A20638(uint64_t a1, uint64_t a2, int a3, BOOL *a4)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unsigned int v5 = *(_DWORD *)(a1 + 32);
  int v6 = *(unsigned __int8 *)(a1 + 36);
  if (a3)
  {
    uint64_t v7 = 0;
    unint64_t v8 = *(void *)(a1 + 24);
    LODWORD(v9) = 8;
    uint64_t v10 = 8;
    do
    {
      if (!v9) {
        goto LABEL_14;
      }
      unsigned int v11 = __clz(v5 | 1);
      if (v5) {
        unsigned int v12 = v11;
      }
      else {
        unsigned int v12 = v11 + 1;
      }
      unsigned int v13 = v5 << (v12 + 1) >> -(char)v12;
      if (!v12) {
        unsigned int v13 = 0;
      }
      unsigned int v14 = ((v13 + (1 << v12)) >> 1) - ((v13 + (1 << v12)) >> 1) * 2 * ((v13 + (1 << v12)) & 1);
      if (v14 != (char)v14) {
        return 4294958327;
      }
      unint64_t v15 = v6 + 2 * v12 + 1;
      int v16 = (unsigned int *)(v4 + (v15 >> 3));
      if ((unint64_t)v16 <= v8) {
        v4 += v15 >> 3;
      }
      else {
        unint64_t v4 = v8;
      }
      int v6 = v15 & 7;
      unsigned int v5 = bswap32(*v16) << v6;
      uint64_t v9 = (v14 + v10);
      *a4 = (v9 | v7) == 0;
      uint64_t v17 = v9;
      if (!v9)
      {
LABEL_14:
        LODWORD(v9) = 0;
        uint64_t v17 = v10;
      }
      *(unsigned char *)(a2 + v7++) = v17;
      uint64_t v10 = v17;
    }
    while (a3 != v7);
  }
  uint64_t v18 = 0;
  *(void *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 36) = v6;
  return v18;
}

uint64_t sub_221A20728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(unsigned int **)(a1 + 24);
  int v5 = *(_DWORD *)(a1 + 32);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 36);
  *(unsigned char *)a3 = v5 < 0;
  unint64_t v7 = v6 + 1;
  int v8 = (v6 + 1) & 7;
  uint64_t v9 = (unsigned int *)(v4 + (v7 >> 3));
  unsigned int v10 = bswap32(*v9) << v8;
  if (v9 > v3) {
    uint64_t v9 = v3;
  }
  if (v5 < 0)
  {
    unsigned int v11 = HIBYTE(v10);
    *(_DWORD *)(a3 + 4) = HIBYTE(v10);
    unsigned int v12 = *(unsigned int *)((char *)v9 + 1);
    uint64_t v9 = (unsigned int *)((char *)v9 + 1);
    unsigned int v10 = bswap32(v12) << v8;
    if (v9 > v3) {
      uint64_t v9 = v3;
    }
    if (v11 == 255)
    {
      *(_DWORD *)(a3 + 8) = HIWORD(v10);
      unsigned int v14 = *(unsigned int *)((char *)v9 + 2);
      unsigned int v13 = (unsigned int *)((char *)v9 + 2);
      unsigned int v15 = bswap32(v14) << v8;
      if (v13 > v3) {
        unsigned int v13 = v3;
      }
      *(_DWORD *)(a3 + 12) = HIWORD(v15);
      unsigned int v16 = *(unsigned int *)((char *)v13 + 2);
      uint64_t v9 = (unsigned int *)((char *)v13 + 2);
      unsigned int v10 = bswap32(v16) << v8;
      if (v9 > v3) {
        uint64_t v9 = v3;
      }
    }
  }
  *(unsigned char *)(a3 + 16) = (v10 & 0x80000000) != 0;
  unint64_t v17 = (v8 + 1);
  int v18 = ((_BYTE)v8 + 1) & 7;
  unsigned int v19 = (unsigned int *)((char *)v9 + (v17 >> 3));
  signed int v20 = bswap32(*v19) << (v17 & 7);
  if (v19 > v3) {
    unsigned int v19 = v3;
  }
  if ((v10 & 0x80000000) != 0)
  {
    *(unsigned char *)(a3 + 17) = v20 < 0;
    unint64_t v21 = (v18 + 1);
    int v18 = ((_BYTE)v18 + 1) & 7;
    char v22 = (unsigned int *)((char *)v19 + (v21 >> 3));
    signed int v20 = bswap32(*v22) << v18;
    if (v22 <= v3) {
      unsigned int v19 = v22;
    }
    else {
      unsigned int v19 = v3;
    }
  }
  *(unsigned char *)(a3 + 18) = v20 < 0;
  unint64_t v23 = (v18 + 1);
  int v24 = ((_BYTE)v18 + 1) & 7;
  unint64_t v25 = (unsigned int *)((char *)v19 + (v23 >> 3));
  unsigned int v26 = bswap32(*v25) << v24;
  if (v25 <= v3) {
    uint64_t v27 = v25;
  }
  else {
    uint64_t v27 = v3;
  }
  if (v20 < 0)
  {
    *(_DWORD *)(a3 + 20) = v26 >> 29;
    unint64_t v28 = (v24 + 3);
    int v29 = v28 & 7;
    int v30 = (unsigned int *)((char *)v27 + (v28 >> 3));
    signed int v31 = bswap32(*v30) << v29;
    if (v30 > v3) {
      int v30 = v3;
    }
    *(unsigned char *)(a3 + 24) = v31 < 0;
    unint64_t v32 = (v29 + 1);
    int v33 = v32 & 7;
    int v34 = (unsigned int *)((char *)v30 + (v32 >> 3));
    signed int v35 = bswap32(*v34) << (v32 & 7);
    if (v34 <= v3) {
      signed int v36 = v34;
    }
    else {
      signed int v36 = v3;
    }
    *(unsigned char *)(a3 + 25) = v35 < 0;
    unint64_t v37 = (v33 + 1);
    int v24 = v37 & 7;
    uint64_t v27 = (unsigned int *)((char *)v36 + (v37 >> 3));
    unsigned int v26 = bswap32(*v27) << (v37 & 7);
    if (v27 > v3) {
      uint64_t v27 = v3;
    }
    if (v35 < 0)
    {
      *(_DWORD *)(a3 + 28) = HIBYTE(v26);
      unsigned int v39 = *(unsigned int *)((char *)v27 + 1);
      int v38 = (unsigned int *)((char *)v27 + 1);
      unsigned int v40 = bswap32(v39) << v24;
      char v41 = (char *)(v38 <= v3 ? v38 : v3);
      *(_DWORD *)(a3 + 32) = HIBYTE(v40);
      unsigned int v43 = *(_DWORD *)(v41 + 1);
      unsigned int v42 = (unsigned int *)(v41 + 1);
      unsigned int v44 = bswap32(v43) << v24;
      double v45 = v42 <= v3 ? v42 : v3;
      *(_DWORD *)(a3 + 36) = HIBYTE(v44);
      unsigned int v46 = *(unsigned int *)((char *)v45 + 1);
      uint64_t v27 = (unsigned int *)((char *)v45 + 1);
      unsigned int v26 = bswap32(v46) << v24;
      if (v27 > v3) {
        uint64_t v27 = v3;
      }
    }
  }
  *(unsigned char *)(a3 + 40) = (v26 & 0x80000000) != 0;
  unint64_t v47 = (v24 + 1);
  int v48 = v47 & 7;
  unsigned int v49 = (unsigned int *)((char *)v27 + (v47 >> 3));
  signed int v50 = bswap32(*v49) << v48;
  if (v49 > v3) {
    unsigned int v49 = v3;
  }
  if ((v26 & 0x80000000) != 0)
  {
    unsigned int v75 = __clz(v50 | 1);
    if (v50) {
      unsigned int v76 = v75;
    }
    else {
      unsigned int v76 = v75 + 1;
    }
    if (v76) {
      unsigned int v77 = (v50 << (v76 + 1)) >> -(char)v76;
    }
    else {
      unsigned int v77 = 0;
    }
    unsigned int v78 = v77 + ~(-1 << v76);
    *(_DWORD *)(a3 + 44) = v78;
    if (v78 > 5) {
      return 4294958327;
    }
    unint64_t v79 = v48 + 2 * v76 + 1;
    signed int v80 = (unsigned int *)((char *)v49 + (v79 >> 3));
    if (v80 <= v3) {
      unint64_t v81 = v80;
    }
    else {
      unint64_t v81 = v3;
    }
    int v82 = v79 & 7;
    unsigned int v83 = bswap32(*v80) << v82;
    unsigned int v84 = __clz(v83 | 1);
    if (!v83) {
      ++v84;
    }
    unsigned int v85 = v83 << (v84 + 1) >> -(char)v84;
    if (!v84) {
      unsigned int v85 = 0;
    }
    unsigned int v86 = v85 + ~(-1 << v84);
    *(_DWORD *)(a3 + 48) = v86;
    unint64_t v87 = v82 + 2 * v84 + 1;
    unint64_t v88 = (unsigned int *)((char *)v81 + (v87 >> 3));
    unsigned int v49 = v88 <= v3 ? (unsigned int *)((char *)v81 + (v87 >> 3)) : v3;
    if (v86 > 5) {
      return 4294958327;
    }
    int v48 = v87 & 7;
    signed int v50 = bswap32(*v88) << v48;
  }
  *(unsigned char *)(a3 + 52) = v50 < 0;
  unint64_t v51 = (v48 + 1);
  int v52 = ((_BYTE)v48 + 1) & 7;
  int v53 = (unsigned int *)((char *)v49 + (v51 >> 3));
  signed int v54 = bswap32(*v53) << v52;
  if (v53 > v3) {
    int v53 = v3;
  }
  if (v50 < 0)
  {
    unsigned int v90 = *(unsigned int *)((char *)v53 + 2);
    char v89 = (unsigned int *)((char *)v53 + 2);
    unsigned int v91 = bswap32(v90) << v52;
    if (v89 > v3) {
      char v89 = v3;
    }
    unsigned int v94 = *(unsigned int *)((char *)v89 + 2);
    unsigned int v92 = (char *)v89 + 2;
    unsigned int v93 = v94;
    unsigned int v95 = v54 & 0xFFFF0000 | HIWORD(v91);
    *(_DWORD *)(a3 + 56) = v95;
    if (!v95) {
      return 4294958327;
    }
    if (v92 <= (char *)v3) {
      unsigned __int8 v96 = (unsigned int *)v92;
    }
    else {
      unsigned __int8 v96 = v3;
    }
    unsigned int v97 = bswap32(v93) << v52;
    unsigned int v99 = *(unsigned int *)((char *)v96 + 2);
    unint64_t v98 = (unsigned int *)((char *)v96 + 2);
    unsigned int v100 = bswap32(v99) << v52;
    if (v98 > v3) {
      unint64_t v98 = v3;
    }
    unsigned int v103 = *(unsigned int *)((char *)v98 + 2);
    int v101 = (unsigned int *)((char *)v98 + 2);
    unsigned int v102 = v103;
    unsigned int v104 = v97 & 0xFFFF0000 | HIWORD(v100);
    *(_DWORD *)(a3 + 60) = v104;
    if (!v104) {
      return 4294958327;
    }
    if (v101 > v3) {
      int v101 = v3;
    }
    *(unsigned char *)(a3 + 64) = ((bswap32(v102) << v52) & 0x80000000) != 0;
    unint64_t v105 = (v52 + 1);
    int v52 = ((_BYTE)v52 + 1) & 7;
    int v53 = (unsigned int *)((char *)v101 + (v105 >> 3));
    signed int v54 = bswap32(*v53) << v52;
    if (v53 > v3) {
      int v53 = v3;
    }
  }
  *(unsigned char *)(a3 + 65) = v54 < 0;
  unint64_t v55 = (v52 + 1);
  int v56 = v55 & 7;
  unsigned int v57 = (unsigned int *)((char *)v53 + (v55 >> 3));
  signed int v58 = bswap32(*v57) << (v55 & 7);
  if (v57 <= v3) {
    unint64_t v59 = v57;
  }
  else {
    unint64_t v59 = v3;
  }
  if (v54 < 0)
  {
    unsigned int v106 = __clz(v58 | 1);
    if (v58) {
      unsigned int v107 = v106;
    }
    else {
      unsigned int v107 = v106 + 1;
    }
    unsigned int v108 = (v58 << (v107 + 1)) >> -(char)v107;
    if (v107) {
      unsigned int v109 = v108;
    }
    else {
      unsigned int v109 = 0;
    }
    unsigned int v110 = v109 + ~(-1 << v107);
    *(_DWORD *)(a3 + 96) = v110;
    if (v110 > 0x1F) {
      return 4294958327;
    }
    unsigned int v111 = 0;
    unint64_t v112 = v56 + 2 * v107 + 1;
    int v113 = (unsigned int *)((char *)v59 + (v112 >> 3));
    if (v113 <= v3) {
      unsigned int v114 = (unsigned int *)((char *)v59 + (v112 >> 3));
    }
    else {
      unsigned int v114 = v3;
    }
    int v115 = v112 & 7;
    *(_DWORD *)(a3 + 100) = bswap32(*v113) << v115 >> 28;
    unint64_t v116 = (v115 + 4);
    int v117 = v116 & 7;
    unsigned int v118 = (unsigned int *)((char *)v114 + (v116 >> 3));
    unsigned int v119 = bswap32(*v118) << v117;
    if (v118 > v3) {
      unsigned int v118 = v3;
    }
    *(_DWORD *)(a3 + 104) = v119 >> 28;
    unint64_t v120 = (v117 + 4);
    int v121 = v120 & 7;
    unsigned int v122 = (unsigned int *)((char *)v118 + (v120 >> 3));
    unsigned int v123 = bswap32(*v122) << (v120 & 7);
    if (v122 <= v3) {
      uint64_t v124 = v122;
    }
    else {
      uint64_t v124 = v3;
    }
    do
    {
      unsigned int v125 = __clz(v123 | 1);
      if (v123) {
        unsigned int v126 = v125;
      }
      else {
        unsigned int v126 = v125 + 1;
      }
      uint64_t v127 = a3 + 4 * v111;
      if (v126 > 0xC)
      {
        unint64_t v134 = (v121 + 1);
        int v135 = v134 & 7;
        unsigned int v136 = (unsigned int *)((char *)v124 + (v134 >> 3));
        unsigned int v137 = bswap32(*v136) << v135;
        if (v136 <= v3) {
          unsigned int v138 = v136;
        }
        else {
          unsigned int v138 = v3;
        }
        unsigned int v139 = 0;
        if ((v123 & 0x80000000) != 0) {
          goto LABEL_129;
        }
        do
        {
          unsigned int v140 = v139;
          char v141 = v135;
          unsigned int v142 = v137;
          ++v139;
          unint64_t v143 = (v135 + 1);
          int v135 = ((_BYTE)v135 + 1) & 7;
          unsigned int v138 = (unsigned int *)((char *)v138 + (v143 >> 3));
          unsigned int v137 = bswap32(*v138) << (v143 & 7);
          if (v138 > v3) {
            unsigned int v138 = v3;
          }
        }
        while ((v142 & 0x80000000) == 0 && v140 < 0x1F);
        if (v140 > 0x1E)
        {
          *(_DWORD *)(v127 + 108) = -2;
          return 4294958327;
        }
        if (v139 - 1 <= 0x17)
        {
LABEL_129:
          int v144 = v137 >> -(char)v139;
          unint64_t v145 = v135 + v139;
          int v130 = ((_BYTE)v135 + (_BYTE)v139) & 7;
          uint64_t v133 = (unsigned int *)((char *)v138 + (v145 >> 3));
          unsigned int v132 = bswap32(*v133) << (v145 & 7);
          if (v133 > v3) {
            uint64_t v133 = v3;
          }
        }
        else
        {
          unsigned int v146 = v137 >> (48 - v139);
          unsigned int v147 = ((v141 + 1) & 7) + v139;
          unint64_t v148 = v147 - 16;
          int v130 = v147 & 7;
          unsigned int v149 = (unsigned int *)((char *)v138 + (v148 >> 3));
          unsigned int v150 = bswap32(*v149) << v130;
          if (v149 > v3) {
            unsigned int v149 = v3;
          }
          unsigned int v151 = *(unsigned int *)((char *)v149 + 2);
          uint64_t v133 = (unsigned int *)((char *)v149 + 2);
          unsigned int v132 = bswap32(v151) << v130;
          if (v133 > v3) {
            uint64_t v133 = v3;
          }
          int v144 = __PAIR64__(v146, v150) >> 16;
        }
        *(_DWORD *)(v127 + 108) = v144 + ~(-1 << v139);
      }
      else
      {
        unsigned int v128 = v123 << (v126 + 1) >> -(char)v126;
        if (!v126) {
          unsigned int v128 = 0;
        }
        *(_DWORD *)(v127 + 108) = v128 + ~(-1 << v126);
        unint64_t v129 = v121 + 2 * v126 + 1;
        int v130 = v129 & 7;
        unsigned int v131 = (unsigned int *)((char *)v124 + (v129 >> 3));
        unsigned int v132 = bswap32(*v131) << v130;
        if (v131 <= v3) {
          uint64_t v133 = v131;
        }
        else {
          uint64_t v133 = v3;
        }
      }
      unsigned int v152 = __clz(v132 | 1);
      if (v132) {
        unsigned int v153 = v152;
      }
      else {
        unsigned int v153 = v152 + 1;
      }
      if (v153 > 0xC)
      {
        unint64_t v162 = (v130 + 1);
        int v163 = ((_BYTE)v130 + 1) & 7;
        unsigned int v164 = (unsigned int *)((char *)v133 + (v162 >> 3));
        unsigned int v165 = bswap32(*v164) << v163;
        if (v164 <= v3) {
          unint64_t v166 = v164;
        }
        else {
          unint64_t v166 = v3;
        }
        unsigned int v167 = 0;
        if ((v132 & 0x80000000) != 0) {
          goto LABEL_157;
        }
        do
        {
          unsigned int v168 = v167;
          char v169 = v163;
          unsigned int v170 = v165;
          ++v167;
          unint64_t v171 = (v163 + 1);
          int v163 = ((_BYTE)v163 + 1) & 7;
          unint64_t v166 = (unsigned int *)((char *)v166 + (v171 >> 3));
          unsigned int v165 = bswap32(*v166) << (v171 & 7);
          if (v166 > v3) {
            unint64_t v166 = v3;
          }
        }
        while ((v170 & 0x80000000) == 0 && v168 < 0x1F);
        if (v168 > 0x1E)
        {
          *(_DWORD *)(v127 + 236) = -2;
          return 4294958327;
        }
        if (v167 - 1 <= 0x17)
        {
LABEL_157:
          int v172 = v165 >> -(char)v167;
          unint64_t v173 = v163 + v167;
          int v158 = ((_BYTE)v163 + (_BYTE)v167) & 7;
          unint64_t v161 = (unsigned int *)((char *)v166 + (v173 >> 3));
          unsigned int v160 = bswap32(*v161) << v158;
          if (v161 > v3) {
            unint64_t v161 = v3;
          }
        }
        else
        {
          unsigned int v174 = v165 >> (48 - v167);
          unsigned int v175 = ((v169 + 1) & 7) + v167;
          unint64_t v176 = v175 - 16;
          int v158 = v175 & 7;
          int v177 = (unsigned int *)((char *)v166 + (v176 >> 3));
          unsigned int v178 = bswap32(*v177) << v158;
          if (v177 <= v3) {
            unsigned int v179 = v177;
          }
          else {
            unsigned int v179 = v3;
          }
          unsigned int v180 = *(unsigned int *)((char *)v179 + 2);
          unint64_t v161 = (unsigned int *)((char *)v179 + 2);
          unsigned int v160 = bswap32(v180) << v158;
          if (v161 > v3) {
            unint64_t v161 = v3;
          }
          int v172 = __PAIR64__(v174, v178) >> 16;
        }
        int v181 = v172 + ~(-1 << v167);
        uint64_t v156 = v111;
        *(_DWORD *)(v127 + 236) = v181;
      }
      else
      {
        unsigned int v154 = v132 << (v153 + 1) >> -(char)v153;
        if (!v153) {
          unsigned int v154 = 0;
        }
        unsigned int v155 = v154 + ~(-1 << v153);
        uint64_t v156 = v111;
        *(_DWORD *)(v127 + 236) = v155;
        unint64_t v157 = v130 + 2 * v153 + 1;
        int v158 = ((_BYTE)v130 + 2 * (_BYTE)v153 + 1) & 7;
        unsigned int v159 = (unsigned int *)((char *)v133 + (v157 >> 3));
        unsigned int v160 = bswap32(*v159) << v158;
        if (v159 <= v3) {
          unint64_t v161 = v159;
        }
        else {
          unint64_t v161 = v3;
        }
      }
      *(_DWORD *)(a3 + 4 * v156 + 364) = v160 >> 31;
      int v121 = ((_BYTE)v158 + 1) & 7;
      unsigned int v182 = (unsigned int *)((char *)v161 + ((unint64_t)(v158 + 1) >> 3));
      unsigned int v123 = bswap32(*v182) << v121;
      if (v182 <= v3) {
        uint64_t v124 = (unsigned int *)((char *)v161 + ((unint64_t)(v158 + 1) >> 3));
      }
      else {
        uint64_t v124 = v3;
      }
      ++v111;
    }
    while (v111 <= v110);
    *(_DWORD *)(a3 + 492) = v123 >> 27;
    int v183 = ((_BYTE)v121 + 5) & 7;
    unsigned int v184 = (unsigned int *)((char *)v124 + ((unint64_t)(v121 + 5) >> 3));
    unsigned int v185 = bswap32(*v184) << v183;
    if (v184 > v3) {
      unsigned int v184 = v3;
    }
    *(_DWORD *)(a3 + 496) = v185 >> 27;
    unint64_t v186 = (v183 + 5);
    int v187 = v186 & 7;
    unint64_t v188 = (unsigned int *)((char *)v184 + (v186 >> 3));
    unsigned int v189 = bswap32(*v188) << (v186 & 7);
    if (v188 > v3) {
      unint64_t v188 = v3;
    }
    *(_DWORD *)(a3 + 500) = v189 >> 27;
    unint64_t v190 = (v187 + 5);
    int v191 = ((_BYTE)v187 + 5) & 7;
    unsigned int v192 = (unsigned int *)((char *)v188 + (v190 >> 3));
    unsigned int v193 = bswap32(*v192) << (v190 & 7);
    if (v192 > v3) {
      unsigned int v192 = v3;
    }
    *(_DWORD *)(a3 + 504) = v193 >> 27;
    int v56 = ((_BYTE)v191 + 5) & 7;
    unsigned int v194 = (unsigned int *)((char *)v192 + ((unint64_t)(v191 + 5) >> 3));
    signed int v58 = bswap32(*v194) << v56;
    if (v194 <= v3) {
      unint64_t v59 = v194;
    }
    else {
      unint64_t v59 = v3;
    }
  }
  *(unsigned char *)(a3 + 66) = v58 < 0;
  int v60 = ((_BYTE)v56 + 1) & 7;
  int v61 = (unsigned int *)((char *)v59 + ((unint64_t)(v56 + 1) >> 3));
  signed int v62 = bswap32(*v61) << ((v56 + 1) & 7);
  if (v61 <= v3) {
    unsigned int v63 = (unsigned int *)((char *)v59 + ((unint64_t)(v56 + 1) >> 3));
  }
  else {
    unsigned int v63 = v3;
  }
  if ((v58 & 0x80000000) == 0)
  {
    if ((v54 & 0x80000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_52;
  }
  unsigned int v195 = __clz(v62 | 1);
  if (v62) {
    unsigned int v196 = v195;
  }
  else {
    unsigned int v196 = v195 + 1;
  }
  unsigned int v197 = (v62 << (v196 + 1)) >> -(char)v196;
  if (v196) {
    unsigned int v198 = v197;
  }
  else {
    unsigned int v198 = 0;
  }
  unsigned int v199 = v198 + ~(-1 << v196);
  *(_DWORD *)(a3 + 96) = v199;
  if (v199 > 0x1F) {
    return 4294958327;
  }
  unsigned int v200 = 0;
  unint64_t v201 = v60 + 2 * v196 + 1;
  int v202 = (unsigned int *)((char *)v63 + (v201 >> 3));
  if (v202 <= v3) {
    unint64_t v203 = v202;
  }
  else {
    unint64_t v203 = v3;
  }
  int v204 = v201 & 7;
  *(_DWORD *)(a3 + 100) = bswap32(*v202) << v204 >> 28;
  unint64_t v205 = (v204 + 4);
  int v206 = v205 & 7;
  unsigned int v207 = (unsigned int *)((char *)v203 + (v205 >> 3));
  unsigned int v208 = bswap32(*v207) << v206;
  if (v207 > v3) {
    unsigned int v207 = v3;
  }
  *(_DWORD *)(a3 + 104) = v208 >> 28;
  unint64_t v209 = (v206 + 4);
  int v210 = ((_BYTE)v206 + 4) & 7;
  unsigned int v211 = (unsigned int *)((char *)v207 + (v209 >> 3));
  unsigned int v212 = bswap32(*v211) << (v209 & 7);
  if (v211 <= v3) {
    unsigned int v213 = v211;
  }
  else {
    unsigned int v213 = v3;
  }
  do
  {
    unsigned int v214 = __clz(v212 | 1);
    if (!v212) {
      ++v214;
    }
    if (v214 > 0xC)
    {
      unint64_t v221 = (v210 + 1);
      int v222 = v221 & 7;
      unsigned int v223 = (unsigned int *)((char *)v213 + (v221 >> 3));
      unsigned int v224 = bswap32(*v223) << v222;
      if (v223 <= v3) {
        unsigned int v225 = v223;
      }
      else {
        unsigned int v225 = v3;
      }
      unsigned int v226 = 0;
      if ((v212 & 0x80000000) != 0) {
        goto LABEL_213;
      }
      do
      {
        unsigned int v227 = v226;
        char v228 = v222;
        unsigned int v229 = v224;
        ++v226;
        unint64_t v230 = (v222 + 1);
        int v222 = ((_BYTE)v222 + 1) & 7;
        unsigned int v225 = (unsigned int *)((char *)v225 + (v230 >> 3));
        unsigned int v224 = bswap32(*v225) << (v230 & 7);
        if (v225 > v3) {
          unsigned int v225 = v3;
        }
      }
      while ((v229 & 0x80000000) == 0 && v227 < 0x1F);
      if (v227 > 0x1E)
      {
        *(_DWORD *)(a3 + 4 * v200 + 108) = -2;
        return 4294958327;
      }
      if (v226 - 1 <= 0x17)
      {
LABEL_213:
        int v231 = v224 >> -(char)v226;
        unint64_t v232 = v222 + v226;
        int v217 = ((_BYTE)v222 + (_BYTE)v226) & 7;
        unsigned int v220 = (unsigned int *)((char *)v225 + (v232 >> 3));
        unsigned int v219 = bswap32(*v220) << (v232 & 7);
        if (v220 > v3) {
          unsigned int v220 = v3;
        }
      }
      else
      {
        unsigned int v233 = v224 >> (48 - v226);
        unsigned int v234 = ((v228 + 1) & 7) + v226;
        unint64_t v235 = v234 - 16;
        int v217 = v234 & 7;
        uint64_t v236 = (unsigned int *)((char *)v225 + (v235 >> 3));
        unsigned int v237 = bswap32(*v236) << v217;
        if (v236 > v3) {
          uint64_t v236 = v3;
        }
        unsigned int v238 = *(unsigned int *)((char *)v236 + 2);
        unsigned int v220 = (unsigned int *)((char *)v236 + 2);
        unsigned int v219 = bswap32(v238) << v217;
        if (v220 > v3) {
          unsigned int v220 = v3;
        }
        int v231 = __PAIR64__(v233, v237) >> 16;
      }
      *(_DWORD *)(a3 + 4 * v200 + 108) = v231 + ~(-1 << v226);
    }
    else
    {
      unsigned int v215 = v212 << (v214 + 1) >> -(char)v214;
      if (!v214) {
        unsigned int v215 = 0;
      }
      *(_DWORD *)(a3 + 4 * v200 + 108) = v215 + ~(-1 << v214);
      unint64_t v216 = v210 + 2 * v214 + 1;
      int v217 = v216 & 7;
      int v218 = (unsigned int *)((char *)v213 + (v216 >> 3));
      unsigned int v219 = bswap32(*v218) << v217;
      if (v218 <= v3) {
        unsigned int v220 = v218;
      }
      else {
        unsigned int v220 = v3;
      }
    }
    unsigned int v239 = __clz(v219 | 1);
    if (v219) {
      unsigned int v240 = v239;
    }
    else {
      unsigned int v240 = v239 + 1;
    }
    if (v240 > 0xC)
    {
      unint64_t v248 = (v217 + 1);
      int v249 = ((_BYTE)v217 + 1) & 7;
      unint64_t v250 = (unsigned int *)((char *)v220 + (v248 >> 3));
      unsigned int v251 = bswap32(*v250) << v249;
      if (v250 <= v3) {
        uint64_t v252 = v250;
      }
      else {
        uint64_t v252 = v3;
      }
      unsigned int v253 = 0;
      if ((v219 & 0x80000000) != 0) {
        goto LABEL_241;
      }
      do
      {
        unsigned int v254 = v253;
        char v255 = v249;
        unsigned int v256 = v251;
        ++v253;
        unint64_t v257 = (v249 + 1);
        int v249 = ((_BYTE)v249 + 1) & 7;
        uint64_t v252 = (unsigned int *)((char *)v252 + (v257 >> 3));
        unsigned int v251 = bswap32(*v252) << (v257 & 7);
        if (v252 > v3) {
          uint64_t v252 = v3;
        }
      }
      while ((v256 & 0x80000000) == 0 && v254 < 0x1F);
      if (v254 > 0x1E)
      {
        *(_DWORD *)(a3 + 4 * v200 + 236) = -2;
        return 4294958327;
      }
      if (v253 - 1 <= 0x17)
      {
LABEL_241:
        int v258 = v251 >> -(char)v253;
        unint64_t v259 = v249 + v253;
        int v245 = ((_BYTE)v249 + (_BYTE)v253) & 7;
        int v246 = (unsigned int *)((char *)v252 + (v259 >> 3));
        unsigned int v247 = bswap32(*v246) << v245;
        if (v246 > v3) {
          int v246 = v3;
        }
      }
      else
      {
        unsigned int v260 = v251 >> (48 - v253);
        unsigned int v261 = ((v255 + 1) & 7) + v253;
        unint64_t v262 = v261 - 16;
        int v245 = v261 & 7;
        unsigned int v263 = (unsigned int *)((char *)v252 + (v262 >> 3));
        unsigned int v264 = bswap32(*v263) << v245;
        if (v263 <= v3) {
          int v265 = v263;
        }
        else {
          int v265 = v3;
        }
        unsigned int v266 = *(unsigned int *)((char *)v265 + 2);
        int v246 = (unsigned int *)((char *)v265 + 2);
        unsigned int v247 = bswap32(v266) << v245;
        if (v246 > v3) {
          int v246 = v3;
        }
        int v258 = __PAIR64__(v260, v264) >> 16;
      }
      int v267 = v258 + ~(-1 << v253);
      uint64_t v243 = v200;
      *(_DWORD *)(a3 + 4 * v200 + 236) = v267;
    }
    else
    {
      unsigned int v241 = v219 << (v240 + 1) >> -(char)v240;
      if (!v240) {
        unsigned int v241 = 0;
      }
      unsigned int v242 = v241 + ~(-1 << v240);
      uint64_t v243 = v200;
      *(_DWORD *)(a3 + 4 * v200 + 236) = v242;
      unint64_t v244 = v217 + 2 * v240 + 1;
      int v245 = ((_BYTE)v217 + 2 * (_BYTE)v240 + 1) & 7;
      int v246 = (unsigned int *)((char *)v220 + (v244 >> 3));
      unsigned int v247 = bswap32(*v246) << v245;
      if (v246 > v3) {
        int v246 = v3;
      }
    }
    *(_DWORD *)(a3 + 4 * v243 + 364) = v247 >> 31;
    unint64_t v268 = (v245 + 1);
    int v210 = v268 & 7;
    unsigned int v269 = (unsigned int *)((char *)v246 + (v268 >> 3));
    unsigned int v212 = bswap32(*v269) << v210;
    if (v269 <= v3) {
      unsigned int v213 = v269;
    }
    else {
      unsigned int v213 = v3;
    }
    ++v200;
  }
  while (v200 <= v199);
  *(_DWORD *)(a3 + 492) = v212 >> 27;
  int v270 = ((_BYTE)v210 + 5) & 7;
  int v271 = (unsigned int *)((char *)v213 + ((unint64_t)(v210 + 5) >> 3));
  unsigned int v272 = bswap32(*v271) << v270;
  if (v271 > v3) {
    int v271 = v3;
  }
  *(_DWORD *)(a3 + 496) = v272 >> 27;
  unint64_t v273 = (v270 + 5);
  int v274 = v273 & 7;
  uint64_t v275 = (unsigned int *)((char *)v271 + (v273 >> 3));
  unsigned int v276 = bswap32(*v275) << (v273 & 7);
  if (v275 > v3) {
    uint64_t v275 = v3;
  }
  *(_DWORD *)(a3 + 500) = v276 >> 27;
  unint64_t v277 = (v274 + 5);
  int v278 = ((_BYTE)v274 + 5) & 7;
  int v279 = (unsigned int *)((char *)v275 + (v277 >> 3));
  unsigned int v280 = bswap32(*v279) << (v277 & 7);
  if (v279 > v3) {
    int v279 = v3;
  }
  *(_DWORD *)(a3 + 504) = v280 >> 27;
  int v60 = ((_BYTE)v278 + 5) & 7;
  int v281 = (unsigned int *)((char *)v279 + ((unint64_t)(v278 + 5) >> 3));
  signed int v62 = bswap32(*v281) << v60;
  if (v281 <= v3) {
    unsigned int v63 = v281;
  }
  else {
    unsigned int v63 = v3;
  }
  if ((v58 | v54) < 0)
  {
LABEL_52:
    *(unsigned char *)(a3 + 67) = v62 < 0;
    unint64_t v64 = (v60 + 1);
    int v60 = ((_BYTE)v60 + 1) & 7;
    unint64_t v65 = (unsigned int *)((char *)v63 + (v64 >> 3));
    signed int v62 = bswap32(*v65) << v60;
    if (v65 <= v3) {
      unsigned int v63 = v65;
    }
    else {
      unsigned int v63 = v3;
    }
  }
LABEL_55:
  *(unsigned char *)(a3 + 68) = v62 < 0;
  int v66 = ((_BYTE)v60 + 1) & 7;
  int v67 = (unsigned int *)((char *)v63 + ((unint64_t)(v60 + 1) >> 3));
  signed int v68 = bswap32(*v67) << v66;
  if (v67 > v3) {
    int v67 = v3;
  }
  *(unsigned char *)(a3 + 69) = v68 < 0;
  unint64_t v69 = (v66 + 1);
  unsigned int v70 = v69 & 7;
  unsigned int v71 = (unsigned int *)((char *)v67 + (v69 >> 3));
  signed int v72 = bswap32(*v71) << (v69 & 7);
  if (v71 <= v3) {
    uint64_t v73 = v71;
  }
  else {
    uint64_t v73 = v3;
  }
  if ((v68 & 0x80000000) == 0) {
    goto LABEL_61;
  }
  *(unsigned char *)(a3 + 70) = v72 < 0;
  unint64_t v282 = v70 + 1;
  int v283 = ((_BYTE)v70 + 1) & 7;
  int8x16_t v284 = (unsigned int *)((char *)v73 + (v282 >> 3));
  unsigned int v285 = bswap32(*v284) << (v282 & 7);
  unsigned int v286 = __clz(v285 | 1);
  if (!v285) {
    ++v286;
  }
  unsigned int v287 = v285 << (v286 + 1) >> -(char)v286;
  if (v286) {
    unsigned int v288 = v287;
  }
  else {
    unsigned int v288 = 0;
  }
  unsigned int v289 = v288 + ~(-1 << v286);
  *(_DWORD *)(a3 + 72) = v289;
  if (v289 > 0x10) {
    return 4294958327;
  }
  if (v284 > v3) {
    int8x16_t v284 = v3;
  }
  unint64_t v290 = v283 + 2 * v286 + 1;
  uint64_t v291 = (unsigned int *)((char *)v284 + (v290 >> 3));
  int v292 = v290 & 7;
  unsigned int v293 = bswap32(*v291) << (v290 & 7);
  unsigned int v294 = __clz(v293 | 1);
  if (!v293) {
    ++v294;
  }
  unsigned int v295 = v293 << (v294 + 1) >> -(char)v294;
  if (!v294) {
    unsigned int v295 = 0;
  }
  unsigned int v296 = v295 + ~(-1 << v294);
  *(_DWORD *)(a3 + 76) = v296;
  if (v296 > 0x10) {
    return 4294958327;
  }
  if (v291 <= v3) {
    uint64_t v297 = v291;
  }
  else {
    uint64_t v297 = v3;
  }
  unint64_t v298 = v292 + 2 * v294 + 1;
  uint64_t v299 = (unsigned int *)((char *)v297 + (v298 >> 3));
  int v300 = v298 & 7;
  unsigned int v301 = bswap32(*v299) << v300;
  unsigned int v302 = __clz(v301 | 1);
  if (!v301) {
    ++v302;
  }
  unsigned int v303 = v301 << (v302 + 1) >> -(char)v302;
  unsigned int v304 = v302 ? v303 : 0;
  unsigned int v305 = v304 + ~(-1 << v302);
  *(_DWORD *)(a3 + 80) = v305;
  if (v305 > 0x10) {
    return 4294958327;
  }
  if (v299 > v3) {
    uint64_t v299 = v3;
  }
  unint64_t v306 = v300 + 2 * v302 + 1;
  int v307 = (unsigned int *)((char *)v299 + (v306 >> 3));
  if (v307 <= v3) {
    uint64_t v308 = v307;
  }
  else {
    uint64_t v308 = v3;
  }
  int v309 = v306 & 7;
  unsigned int v310 = bswap32(*v307) << v309;
  unsigned int v311 = __clz(v310 | 1);
  if (!v310) {
    ++v311;
  }
  unsigned int v312 = v310 << (v311 + 1) >> -(char)v311;
  if (!v311) {
    unsigned int v312 = 0;
  }
  unsigned int v313 = v312 + ~(-1 << v311);
  *(_DWORD *)(a3 + 84) = v313;
  unint64_t v314 = v309 + 2 * v311 + 1;
  uint64_t v315 = (unsigned int *)((char *)v308 + (v314 >> 3));
  uint64_t v316 = v315 <= v3 ? v315 : v3;
  if (v313 > 0x10) {
    return 4294958327;
  }
  int v317 = v314 & 7;
  unsigned int v318 = bswap32(*v315) << (v314 & 7);
  unsigned int v319 = __clz(v318 | 1);
  if (!v318) {
    ++v319;
  }
  if (v319 > 0xC)
  {
    unint64_t v327 = (v317 + 1);
    int v328 = ((_BYTE)v317 + 1) & 7;
    uint64_t v329 = (unsigned int *)((char *)v316 + (v327 >> 3));
    unsigned int v330 = bswap32(*v329) << (v327 & 7);
    if (v329 > v3) {
      uint64_t v329 = v3;
    }
    if ((v318 & 0x80000000) != 0)
    {
      unsigned int v331 = 0;
    }
    else
    {
      unsigned int v331 = 0;
      do
      {
        unsigned int v332 = v331;
        char v333 = v328;
        unsigned int v334 = v330;
        ++v331;
        unint64_t v335 = (v328 + 1);
        int v328 = ((_BYTE)v328 + 1) & 7;
        uint64_t v329 = (unsigned int *)((char *)v329 + (v335 >> 3));
        unsigned int v330 = bswap32(*v329) << (v335 & 7);
        if (v329 > v3) {
          uint64_t v329 = v3;
        }
      }
      while ((v334 & 0x80000000) == 0 && v332 < 0x1F);
      if (v332 > 0x1E)
      {
        *(_DWORD *)(a3 + 88) = -2;
        return 4294958327;
      }
      if (v331 - 1 > 0x17)
      {
        unsigned int v336 = v330 >> (48 - v331);
        unsigned int v337 = ((v333 + 1) & 7) + v331;
        unint64_t v338 = v337 - 16;
        int v323 = v337 & 7;
        uint64_t v339 = (unsigned int *)((char *)v329 + (v338 >> 3));
        unsigned int v340 = bswap32(*v339) << v323;
        if (v339 <= v3) {
          int v341 = v339;
        }
        else {
          int v341 = v3;
        }
        unsigned int v342 = *(unsigned int *)((char *)v341 + 2);
        uint64_t v324 = (unsigned int *)((char *)v341 + 2);
        unsigned int v325 = bswap32(v342) << v323;
        if (v324 > v3) {
          uint64_t v324 = v3;
        }
        int v343 = __PAIR64__(v336, v340) >> 16;
LABEL_334:
        unsigned int v321 = v343 + ~(-1 << v331);
        *(_DWORD *)(a3 + 88) = v321;
        goto LABEL_335;
      }
    }
    int v343 = v330 >> -(char)v331;
    unint64_t v344 = v328 + v331;
    int v323 = ((_BYTE)v328 + (_BYTE)v331) & 7;
    uint64_t v324 = (unsigned int *)((char *)v329 + (v344 >> 3));
    unsigned int v325 = bswap32(*v324) << v323;
    if (v324 > v3) {
      uint64_t v324 = v3;
    }
    goto LABEL_334;
  }
  unsigned int v320 = v318 << (v319 + 1) >> -(char)v319;
  if (!v319) {
    unsigned int v320 = 0;
  }
  unsigned int v321 = v320 + ~(-1 << v319);
  *(_DWORD *)(a3 + 88) = v321;
  unint64_t v322 = v317 + 2 * v319 + 1;
  int v323 = v322 & 7;
  uint64_t v324 = (unsigned int *)((char *)v316 + (v322 >> 3));
  unsigned int v325 = bswap32(*v324) << v323;
  if (v324 > v3) {
    uint64_t v324 = v3;
  }
LABEL_335:
  unsigned int v345 = __clz(v325 | 1);
  if (!v325) {
    ++v345;
  }
  if (v345 > 0xC)
  {
    unint64_t v349 = (v323 + 1);
    int v350 = v349 & 7;
    unsigned int v351 = (unsigned int *)((char *)v324 + (v349 >> 3));
    unsigned int v352 = bswap32(*v351) << v350;
    if (v351 <= v3) {
      int v353 = v351;
    }
    else {
      int v353 = v3;
    }
    unsigned int v354 = 0;
    if ((v325 & 0x80000000) != 0) {
      goto LABEL_353;
    }
    do
    {
      unsigned int v355 = v354;
      char v356 = v350;
      unsigned int v357 = v352;
      ++v354;
      unint64_t v358 = (v350 + 1);
      int v350 = ((_BYTE)v350 + 1) & 7;
      int v353 = (unsigned int *)((char *)v353 + (v358 >> 3));
      unsigned int v352 = bswap32(*v353) << (v358 & 7);
      if (v353 > v3) {
        int v353 = v3;
      }
    }
    while ((v357 & 0x80000000) == 0 && v355 < 0x1F);
    if (v355 <= 0x1E)
    {
      if (v354 - 1 > 0x17)
      {
        unsigned int v361 = v352 >> (48 - v354);
        unsigned int v70 = ((v356 + 1) & 7) + v354;
        unint64_t v362 = v70 - 16;
        LOBYTE(v70) = v70 & 7;
        int v363 = (unsigned int *)((char *)v353 + (v362 >> 3));
        unsigned int v364 = bswap32(*v363) << v70;
        if (v363 <= v3) {
          uint64_t v365 = v363;
        }
        else {
          uint64_t v365 = v3;
        }
        unsigned int v366 = *(unsigned int *)((char *)v365 + 2);
        uint64_t v73 = (unsigned int *)((char *)v365 + 2);
        signed int v72 = bswap32(v366) << v70;
        if (v73 > v3) {
          uint64_t v73 = v3;
        }
        int v359 = __PAIR64__(v361, v364) >> 16;
        goto LABEL_364;
      }
LABEL_353:
      int v359 = v352 >> -(char)v354;
      unint64_t v360 = v350 + v354;
      LOBYTE(v70) = v360 & 7;
      uint64_t v73 = (unsigned int *)((char *)v353 + (v360 >> 3));
      signed int v72 = bswap32(*v73) << v70;
      if (v73 > v3) {
        uint64_t v73 = v3;
      }
LABEL_364:
      unsigned int v346 = v359 + ~(-1 << v354);
      *(_DWORD *)(a3 + 92) = v346;
      goto LABEL_365;
    }
    *(_DWORD *)(a3 + 92) = -2;
    return 4294958327;
  }
  unsigned int v70 = v325 << (v345 + 1) >> -(char)v345;
  if (!v345) {
    unsigned int v70 = 0;
  }
  unsigned int v346 = v70 + ~(-1 << v345);
  *(_DWORD *)(a3 + 92) = v346;
  unint64_t v347 = v323 + 2 * v345 + 1;
  LOBYTE(v70) = v347 & 7;
  uint64_t v348 = (unsigned int *)((char *)v324 + (v347 >> 3));
  signed int v72 = bswap32(*v348) << v70;
  if (v348 <= v3) {
    uint64_t v73 = v348;
  }
  else {
    uint64_t v73 = v3;
  }
LABEL_365:
  if (v346 > 0x10 || v321 > v346) {
    return 4294958327;
  }
LABEL_61:
  uint64_t v74 = 0;
  *(void *)(a1 + 16) = v73;
  *(_DWORD *)(a1 + 32) = v72;
  *(unsigned char *)(a1 + 36) = v70;
  return v74;
}

uint64_t sub_221A219CC()
{
  return 4294954950;
}

uint64_t sub_221A219D4(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  unsigned int v138 = 0;
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(unsigned int **)(a1 + 24);
  int v6 = *(_DWORD *)(a1 + 32);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 36);
  *(_OWORD *)(a3 + 304) = 0u;
  *(_OWORD *)(a3 + 320) = 0u;
  *(_OWORD *)(a3 + 272) = 0u;
  *(_OWORD *)(a3 + 288) = 0u;
  *(_OWORD *)(a3 + 240) = 0u;
  *(_OWORD *)(a3 + 256) = 0u;
  *(_OWORD *)(a3 + 208) = 0u;
  *(_OWORD *)(a3 + 224) = 0u;
  *(_OWORD *)(a3 + 176) = 0u;
  *(_OWORD *)(a3 + 192) = 0u;
  *(_OWORD *)(a3 + 144) = 0u;
  *(_OWORD *)(a3 + 160) = 0u;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  unint64_t v8 = v7 + 1;
  int v9 = (v7 + 1) & 7;
  unsigned int v10 = (unsigned int *)(v4 + (v8 >> 3));
  if (v10 <= v5) {
    unsigned int v11 = v10;
  }
  else {
    unsigned int v11 = v5;
  }
  int v12 = ((_BYTE)v9 + 2) & 7;
  unsigned int v13 = (unsigned int *)((char *)v11 + ((unint64_t)(v9 + 2) >> 3));
  if (v13 <= v5) {
    unsigned int v14 = v13;
  }
  else {
    unsigned int v14 = v5;
  }
  LODWORD(v15) = ((_BYTE)v12 + 5) & 7;
  unsigned int v16 = (unsigned int *)((char *)v14 + ((unint64_t)(v12 + 5) >> 3));
  signed int v17 = bswap32(*v16) << ((v12 + 5) & 7);
  if (v16 <= v5) {
    int v18 = v16;
  }
  else {
    int v18 = v5;
  }
  uint64_t v19 = 4294958327;
  if ((v6 & 0x80000000) == 0 && bswap32(*v10) << v9 >> 30 && ((bswap32(*v13) << v12) & 0xF8000000) == 0x40000000)
  {
    unsigned int v21 = __clz(v17 | 1);
    unsigned int v22 = v17 ? v21 : v21 + 1;
    unsigned int v23 = v22 ? (v17 << (v22 + 1)) >> -(char)v22 : 0;
    unsigned int v24 = v23 + ~(-1 << v22);
    *(_DWORD *)a3 = v24;
    unint64_t v25 = v15 + 2 * v22 + 1;
    LODWORD(v15) = v25 & 7;
    unsigned int v26 = (unsigned int *)((char *)v18 + (v25 >> 3));
    signed int v17 = bswap32(*v26) << v15;
    int v18 = v26 <= v5 ? v26 : v5;
    if (v24 <= 0xFF)
    {
      unsigned int v27 = __clz(v17 | 1);
      if (!v17) {
        ++v27;
      }
      unsigned int v28 = (v17 << (v27 + 1)) >> -(char)v27;
      if (!v27) {
        unsigned int v28 = 0;
      }
      unsigned int v29 = v28 + ~(-1 << v27);
      *(_DWORD *)(a3 + 4) = v29;
      unint64_t v30 = v15 + 2 * v27 + 1;
      LODWORD(v15) = v30 & 7;
      signed int v31 = (unsigned int *)((char *)v18 + (v30 >> 3));
      signed int v17 = bswap32(*v31) << v15;
      int v18 = v31 <= v5 ? v31 : v5;
      if (v29 <= 0x1F)
      {
        uint64_t v19 = sub_2219F39A8(a2, v29, &v138);
        if (!v19)
        {
          *(unsigned char *)(a3 + 8) = v17 < 0;
          int v32 = ((_BYTE)v15 + 1) & 7;
          int v33 = (unsigned int *)((char *)v18 + ((unint64_t)(v15 + 1) >> 3));
          signed int v34 = bswap32(*v33) << v32;
          if (v33 > v5) {
            int v33 = v5;
          }
          *(unsigned char *)(a3 + 9) = v34 < 0;
          unint64_t v35 = (v32 + 1);
          int v36 = v35 & 7;
          unint64_t v37 = (unsigned int *)((char *)v33 + (v35 >> 3));
          unsigned int v38 = bswap32(*v37) << v36;
          if (v37 > v5) {
            unint64_t v37 = v5;
          }
          unsigned int v39 = __clz(v38 | 1);
          if (!v38) {
            ++v39;
          }
          if (v39 <= 0xC)
          {
            unsigned int v40 = v38 << (v39 + 1) >> -(char)v39;
            if (!v39) {
              unsigned int v40 = 0;
            }
            unsigned int v41 = v40 + ~(-1 << v39);
            *(_DWORD *)(a3 + 12) = v41;
            unint64_t v42 = v36 + 2 * v39 + 1;
            LODWORD(v15) = v42 & 7;
            unsigned int v43 = (unsigned int *)((char *)v37 + (v42 >> 3));
            signed int v17 = bswap32(*v43) << (v42 & 7);
            if (v43 <= v5) {
              int v18 = v43;
            }
            else {
              int v18 = v5;
            }
LABEL_67:
            if (v41)
            {
              uint64_t v19 = 4294966630;
              goto LABEL_137;
            }
            unsigned int v61 = __clz(v17 | 1);
            if (v17) {
              unsigned int v62 = v61;
            }
            else {
              unsigned int v62 = v61 + 1;
            }
            if (v62) {
              unsigned int v63 = (v17 << (v62 + 1)) >> -(char)v62;
            }
            else {
              unsigned int v63 = 0;
            }
            unsigned int v64 = v63 + ~(-1 << v62);
            *(_DWORD *)(a3 + 56) = v64;
            unint64_t v65 = v15 + 2 * v62 + 1;
            LODWORD(v15) = v65 & 7;
            int v66 = (unsigned int *)((char *)v18 + (v65 >> 3));
            signed int v17 = bswap32(*v66) << v15;
            if (v66 <= v5) {
              int v18 = v66;
            }
            else {
              int v18 = v5;
            }
            if (v64 <= 0x1F)
            {
              unsigned int v67 = __clz(v17 | 1);
              if (!v17) {
                ++v67;
              }
              unsigned int v68 = (v17 << (v67 + 1)) >> -(char)v67;
              if (!v67) {
                unsigned int v68 = 0;
              }
              unsigned int v69 = v68 + ~(-1 << v67);
              *(_DWORD *)(a3 + 60) = v69;
              unint64_t v70 = v15 + 2 * v67 + 1;
              LODWORD(v15) = v70 & 7;
              unsigned int v71 = (unsigned int *)((char *)v18 + (v70 >> 3));
              signed int v17 = bswap32(*v71) << v15;
              int v18 = v71 <= v5 ? v71 : v5;
              if (v69 <= 0x1F)
              {
                *(unsigned char *)(a3 + 64) = v17 < 0;
                int v72 = ((_BYTE)v15 + 1) & 7;
                uint64_t v73 = (unsigned int *)((char *)v18 + ((unint64_t)(v15 + 1) >> 3));
                unsigned int v74 = bswap32(*v73) << v72;
                if (v73 > v5) {
                  uint64_t v73 = v5;
                }
                unsigned int v75 = v74 >> 30;
                *(_DWORD *)(a3 + 68) = v75;
                unint64_t v76 = (v72 + 2);
                LODWORD(v15) = v76 & 7;
                unsigned int v77 = (unsigned int *)((char *)v73 + (v76 >> 3));
                signed int v17 = bswap32(*v77) << (v76 & 7);
                int v18 = v77 <= v5 ? v77 : v5;
                if (v75 != 3)
                {
                  unsigned int v78 = __clz(v17 | 1);
                  unsigned int v79 = v17 ? v78 : v78 + 1;
                  unsigned int v80 = v79 ? (v17 << (v79 + 1)) >> -(char)v79 : 0;
                  int v81 = 1 << v79;
                  unint64_t v82 = v15 + 2 * v79 + 1;
                  LODWORD(v15) = v82 & 7;
                  unsigned int v83 = (unsigned int *)((char *)v18 + (v82 >> 3));
                  signed int v17 = bswap32(*v83) << v15;
                  int v18 = v83 <= v5 ? v83 : v5;
                  unsigned int v84 = ((v80 + v81) >> 1) - ((v80 + v81) >> 1) * 2 * (((_BYTE)v80 + (_BYTE)v81) & 1);
                  *(_DWORD *)(a3 + 72) = v84;
                  if (v84 + 26 <= 0x33)
                  {
                    unsigned int v85 = __clz(v17 | 1);
                    if (!v17) {
                      ++v85;
                    }
                    unsigned int v86 = (v17 << (v85 + 1)) >> -(char)v85;
                    if (!v85) {
                      unsigned int v86 = 0;
                    }
                    int v87 = 1 << v85;
                    unint64_t v88 = v15 + 2 * v85 + 1;
                    LODWORD(v15) = v88 & 7;
                    char v89 = (unsigned int *)((char *)v18 + (v88 >> 3));
                    signed int v17 = bswap32(*v89) << v15;
                    int v18 = v89 <= v5 ? v89 : v5;
                    unsigned int v90 = ((v86 + v87) >> 1) - ((v86 + v87) >> 1) * 2 * ((v86 + v87) & 1);
                    *(_DWORD *)(a3 + 76) = v90;
                    if (v90 + 26 <= 0x33)
                    {
                      unsigned int v91 = __clz(v17 | 1);
                      if (!v17) {
                        ++v91;
                      }
                      unsigned int v92 = (v17 << (v91 + 1)) >> -(char)v91;
                      if (!v91) {
                        unsigned int v92 = 0;
                      }
                      int v93 = 1 << v91;
                      unint64_t v94 = v15 + 2 * v91 + 1;
                      LODWORD(v15) = v94 & 7;
                      unsigned int v95 = (unsigned int *)((char *)v18 + (v94 >> 3));
                      signed int v17 = bswap32(*v95) << v15;
                      int v18 = v95 <= v5 ? v95 : v5;
                      unsigned int v96 = ((v92 + v93) >> 1) - ((v92 + v93) >> 1) * 2 * (((_BYTE)v92 + (_BYTE)v93) & 1);
                      *(_DWORD *)(a3 + 80) = v96;
                      if (v96 + 12 <= 0x18)
                      {
                        *(unsigned char *)(a3 + 84) = v17 < 0;
                        int v97 = ((_BYTE)v15 + 1) & 7;
                        unint64_t v98 = (unsigned int *)((char *)v18 + ((unint64_t)(v15 + 1) >> 3));
                        signed int v99 = bswap32(*v98) << v97;
                        if (v98 > v5) {
                          unint64_t v98 = v5;
                        }
                        *(unsigned char *)(a3 + 85) = v99 < 0;
                        unint64_t v100 = (v97 + 1);
                        int v101 = v100 & 7;
                        unsigned int v102 = (unsigned int *)((char *)v98 + (v100 >> 3));
                        signed int v103 = bswap32(*v102) << (v100 & 7);
                        if (v102 > v5) {
                          unsigned int v102 = v5;
                        }
                        *(unsigned char *)(a3 + 86) = v103 < 0;
                        unint64_t v104 = (v101 + 1);
                        char v105 = (v101 + 1) & 7;
                        unsigned int v106 = (unsigned int *)((char *)v102 + (v104 >> 3));
                        unsigned int v107 = bswap32(*v106);
                        if (v106 > v5) {
                          unsigned int v106 = v5;
                        }
                        int v108 = *v138;
                        *(void *)(a1 + 16) = v106;
                        *(_DWORD *)(a1 + 32) = v107 << v105;
                        *(unsigned char *)(a1 + 36) = v105;
                        BOOL v109 = sub_2219F3948(a1);
                        int v18 = *(unsigned int **)(a1 + 16);
                        unsigned int v110 = *(unsigned int **)(a1 + 24);
                        uint64_t v15 = *(unsigned __int8 *)(a1 + 36);
                        if (!v109
                          || v108 - 100 > 0x2C
                          || ((1 << (v108 - 100)) & 0x100000400401) == 0)
                        {
                          *(unsigned char *)(a3 + 97) = *(_DWORD *)(a3 + 80);
LABEL_162:
                          uint64_t v19 = 0;
                          unsigned int v136 = (unsigned int *)((char *)v18 + ((v15 + 1) >> 3));
                          if (v136 > v110) {
                            unsigned int v136 = v110;
                          }
                          if ((((_BYTE)v15 + 1) & 7) != 0) {
                            unsigned int v137 = (unsigned int *)((char *)v136 + 1);
                          }
                          else {
                            unsigned int v137 = v136;
                          }
                          if (v137 <= v110) {
                            int v18 = v137;
                          }
                          else {
                            int v18 = v110;
                          }
                          signed int v17 = bswap32(*v18);
                          LOBYTE(v15) = 0;
                          goto LABEL_137;
                        }
                        *(unsigned char *)(a3 + 87) = *(int *)(a1 + 32) < 0;
                        unsigned int v111 = (unsigned int *)((char *)v18 + ((unint64_t)(v15 + 1) >> 3));
                        signed int v112 = bswap32(*v111) << ((v15 + 1) & 7);
                        if (v111 > v110) {
                          unsigned int v111 = v110;
                        }
                        *(unsigned char *)(a3 + 88) = v112 < 0;
                        unint64_t v113 = ((v15 + 1) & 7u) + 1;
                        LODWORD(v15) = ((((_BYTE)v15 + 1) & 7) + 1) & 7;
                        unsigned int v114 = (unsigned int *)((char *)v111 + (v113 >> 3));
                        signed int v115 = bswap32(*v114) << v15;
                        if (v114 <= v110) {
                          int v18 = v114;
                        }
                        else {
                          int v18 = v110;
                        }
                        if (v112 < 0)
                        {
                          unint64_t v118 = 0;
                          uint64_t v119 = 106;
                          while (1)
                          {
                            *(unsigned char *)(a3 + v118 + 89) = v115 < 0;
                            unint64_t v120 = (v15 + 1);
                            LODWORD(v15) = ((_BYTE)v15 + 1) & 7;
                            int v121 = (unsigned int *)((char *)v18 + (v120 >> 3));
                            signed int v17 = bswap32(*v121) << v15;
                            if (v121 <= v110) {
                              int v18 = v121;
                            }
                            else {
                              int v18 = v110;
                            }
                            if (v115 < 0)
                            {
                              *(void *)(a1 + 16) = v18;
                              *(_DWORD *)(a1 + 32) = v17;
                              *(unsigned char *)(a1 + 36) = v15;
                              int v122 = v18 - *(_DWORD *)a1;
                              int v123 = *(_DWORD *)(a1 + 8);
                              if (v118 > 5)
                              {
                                if (v123 < v122) {
                                  goto LABEL_136;
                                }
                                uint64_t v128 = (v118 - 6);
                                uint64_t v124 = a3 + (v128 << 6) + 202;
                                unsigned int v125 = (BOOL *)(a3 + v128 + 104);
                                uint64_t v126 = a1;
                                int v127 = 64;
                              }
                              else
                              {
                                if (v123 < v122) {
                                  goto LABEL_136;
                                }
                                uint64_t v124 = a3 + v119;
                                unsigned int v125 = (BOOL *)(a3 + v118 + 98);
                                uint64_t v126 = a1;
                                int v127 = 16;
                              }
                              uint64_t v19 = sub_221A20638(v126, v124, v127, v125);
                              if (v19) {
                                goto LABEL_137;
                              }
                              int v18 = *(unsigned int **)(a1 + 16);
                              unsigned int v110 = *(unsigned int **)(a1 + 24);
                              signed int v17 = *(_DWORD *)(a1 + 32);
                              LODWORD(v15) = *(unsigned __int8 *)(a1 + 36);
                            }
                            ++v118;
                            v119 += 16;
                            signed int v115 = v17;
                            if (v118 >= 2 * (unint64_t)*(unsigned __int8 *)(a3 + 87) + 6) {
                              goto LABEL_154;
                            }
                          }
                        }
                        signed int v17 = v115;
LABEL_154:
                        unsigned int v129 = __clz(v17 | 1);
                        if (!v17) {
                          ++v129;
                        }
                        unsigned int v130 = (v17 << (v129 + 1)) >> -(char)v129;
                        if (!v129) {
                          unsigned int v130 = 0;
                        }
                        int v131 = 1 << v129;
                        unint64_t v132 = v15 + 2 * v129 + 1;
                        LODWORD(v15) = v132 & 7;
                        uint64_t v133 = (unsigned int *)((char *)v18 + (v132 >> 3));
                        unsigned int v134 = *v133;
                        if (v133 <= v110) {
                          int v18 = v133;
                        }
                        else {
                          int v18 = v110;
                        }
                        unsigned int v135 = ((v130 + v131) >> 1) - ((v130 + v131) >> 1) * 2 * ((v130 + v131) & 1);
                        *(unsigned char *)(a3 + 97) = v135;
                        if ((v135 << 24) + 218103807 < 0x19FFFFFF) {
                          goto LABEL_162;
                        }
                        signed int v17 = bswap32(v134) << v15;
                      }
                    }
                  }
                }
              }
            }
LABEL_136:
            uint64_t v19 = 4294958327;
            goto LABEL_137;
          }
          unint64_t v44 = (v36 + 1);
          LODWORD(v15) = v44 & 7;
          double v45 = (unsigned int *)((char *)v37 + (v44 >> 3));
          signed int v17 = bswap32(*v45) << (v44 & 7);
          if (v45 <= v5) {
            int v18 = v45;
          }
          else {
            int v18 = v5;
          }
          if ((v38 & 0x80000000) != 0)
          {
            unsigned int v46 = 0;
          }
          else
          {
            unsigned int v46 = 0;
            do
            {
              unsigned int v47 = v46;
              char v48 = v15;
              signed int v49 = v17;
              ++v46;
              unint64_t v50 = (v15 + 1);
              LODWORD(v15) = ((_BYTE)v15 + 1) & 7;
              unint64_t v51 = (unsigned int *)((char *)v18 + (v50 >> 3));
              signed int v17 = bswap32(*v51) << v15;
              if (v51 <= v5) {
                int v18 = v51;
              }
              else {
                int v18 = v5;
              }
            }
            while ((v49 & 0x80000000) == 0 && v47 < 0x1F);
            if (v47 > 0x1E)
            {
              *(_DWORD *)(a3 + 12) = -2;
              goto LABEL_136;
            }
            if (v46 - 1 > 0x17)
            {
              unsigned int v52 = v17 >> (48 - v46);
              unsigned int v53 = ((v48 + 1) & 7) + v46;
              LODWORD(v15) = v53 & 7;
              signed int v54 = (unsigned int *)((char *)v18 + ((unint64_t)(v53 - 16) >> 3));
              unsigned int v55 = bswap32(*v54) << v15;
              if (v54 > v5) {
                signed int v54 = v5;
              }
              unsigned int v57 = *(unsigned int *)((char *)v54 + 2);
              int v56 = (unsigned int *)((char *)v54 + 2);
              signed int v17 = bswap32(v57) << v15;
              if (v56 <= v5) {
                int v18 = v56;
              }
              else {
                int v18 = v5;
              }
              int v58 = __PAIR64__(v52, v55) >> 16;
              goto LABEL_66;
            }
          }
          int v58 = v17 >> -(char)v46;
          unint64_t v59 = v15 + v46;
          LODWORD(v15) = ((_BYTE)v15 + (_BYTE)v46) & 7;
          int v60 = (unsigned int *)((char *)v18 + (v59 >> 3));
          signed int v17 = bswap32(*v60) << v15;
          if (v60 <= v5) {
            int v18 = v60;
          }
          else {
            int v18 = v5;
          }
LABEL_66:
          unsigned int v41 = v58 + ~(-1 << v46);
          *(_DWORD *)(a3 + 12) = v41;
          goto LABEL_67;
        }
      }
    }
  }
  do
  {
LABEL_137:
    uint64_t v116 = v19;
    if (v19) {
      break;
    }
    *(void *)(a1 + 16) = v18;
    *(_DWORD *)(a1 + 32) = v17;
    *(unsigned char *)(a1 + 36) = v15;
    uint64_t v19 = 4294958327;
  }
  while (*(_DWORD *)(a1 + 8) < (int)v18 - *(_DWORD *)a1);
  return v116;
}

uint64_t sub_221A22304(uint64_t a1, unsigned int *a2, void *a3, int a4, int *a5, int a6, int *a7, char a8, BOOL *a9)
{
  uint64_t v318 = 0;
  uint64_t v319 = 0;
  uint64_t v15 = *(void *)(a1 + 16);
  unsigned int v16 = *(unsigned int **)(a1 + 24);
  int v17 = *(_DWORD *)(a1 + 32);
  uint64_t v18 = *(unsigned __int8 *)(a1 + 36);
  bzero(a3, 0xAC0uLL);
  uint64_t v19 = a3;
  signed int v20 = (unsigned int *)(v15 + ((unint64_t)(v18 + 1) >> 3));
  unsigned int v21 = bswap32(*v20) << ((v18 + 1) & 7);
  if (v20 > v16) {
    signed int v20 = v16;
  }
  *((_DWORD *)a3 + 1) = v21 >> 30;
  int v22 = ((((_BYTE)v18 + 1) & 7) + 2) & 7;
  unsigned int v23 = (unsigned int *)((char *)v20 + ((unint64_t)(((v18 + 1) & 7u) + 2) >> 3));
  unsigned int v24 = bswap32(*v23) << ((((v18 + 1) & 7) + 2) & 7);
  if (v23 <= v16) {
    unint64_t v25 = v23;
  }
  else {
    unint64_t v25 = v16;
  }
  unsigned int v26 = v24 >> 27;
  *((_DWORD *)a3 + 2) = v24 >> 27;
  int v27 = ((_BYTE)v22 + 5) & 7;
  unsigned int v28 = (unsigned int *)((char *)v25 + ((unint64_t)(v22 + 5) >> 3));
  signed int v29 = bswap32(*v28) << v27;
  if (v28 <= v16) {
    unint64_t v30 = (unsigned int *)((char *)v25 + ((unint64_t)(v22 + 5) >> 3));
  }
  else {
    unint64_t v30 = v16;
  }
  if (v17 < 0) {
    goto LABEL_69;
  }
  BOOL v31 = v26 > 0x13 || ((1 << v26) & 0x80022) == 0;
  if (v31) {
    goto LABEL_69;
  }
  unsigned int v32 = __clz(v29 | 1);
  if (!v29) {
    ++v32;
  }
  if (v32 <= 0xC)
  {
    unsigned int v33 = (v29 << (v32 + 1)) >> -(char)v32;
    if (!v32) {
      unsigned int v33 = 0;
    }
    v19[3] = v33 + ~(-1 << v32);
    unint64_t v34 = v27 + 2 * v32 + 1;
    int v35 = v34 & 7;
    int v36 = (unsigned int *)((char *)v30 + (v34 >> 3));
    unsigned int v37 = bswap32(*v36) << v35;
    if (v36 <= v16) {
      unsigned int v38 = v36;
    }
    else {
      unsigned int v38 = v16;
    }
    goto LABEL_42;
  }
  int v39 = ((_BYTE)v27 + 1) & 7;
  unsigned int v40 = (unsigned int *)((char *)v30 + ((unint64_t)(v27 + 1) >> 3));
  unsigned int v41 = bswap32(*v40) << v39;
  if (v40 <= v16) {
    unint64_t v42 = (unsigned int *)((char *)v30 + ((unint64_t)(v27 + 1) >> 3));
  }
  else {
    unint64_t v42 = v16;
  }
  if (v29 < 0)
  {
    unsigned int v46 = 0;
LABEL_39:
    int v55 = v41 >> -(char)v46;
    unint64_t v56 = v39 + v46;
    int v35 = ((_BYTE)v39 + (_BYTE)v46) & 7;
    unsigned int v38 = (unsigned int *)((char *)v42 + (v56 >> 3));
    unsigned int v37 = bswap32(*v38) << (v56 & 7);
    if (v38 > v16) {
      unsigned int v38 = v16;
    }
    goto LABEL_41;
  }
  unsigned int v43 = 0;
  do
  {
    char v44 = v39;
    unsigned int v45 = v41;
    unsigned int v46 = v43 + 1;
    unint64_t v47 = (v39 + 1);
    int v39 = ((_BYTE)v39 + 1) & 7;
    unint64_t v42 = (unsigned int *)((char *)v42 + (v47 >> 3));
    unsigned int v41 = bswap32(*v42) << (v47 & 7);
    if (v42 > v16) {
      unint64_t v42 = v16;
    }
    if ((v45 & 0x80000000) != 0) {
      break;
    }
    BOOL v48 = v43++ >= 0x1F;
  }
  while (!v48);
  if (v46 - 1 <= 0x17) {
    goto LABEL_39;
  }
  unsigned int v49 = v41 >> (48 - v46);
  unsigned int v50 = ((v44 + 1) & 7) + v46;
  unint64_t v51 = v50 - 16;
  int v35 = v50 & 7;
  unsigned int v52 = (unsigned int *)((char *)v42 + (v51 >> 3));
  unsigned int v53 = bswap32(*v52) << v35;
  if (v52 > v16) {
    unsigned int v52 = v16;
  }
  unsigned int v54 = *(unsigned int *)((char *)v52 + 2);
  unsigned int v38 = (unsigned int *)((char *)v52 + 2);
  unsigned int v37 = bswap32(v54) << v35;
  if (v38 > v16) {
    unsigned int v38 = v16;
  }
  int v55 = __PAIR64__(v49, v53) >> 16;
LABEL_41:
  v19[3] = v55 + ~(-1 << v46);
LABEL_42:
  unsigned int v57 = __clz(v37 | 1);
  if (v37) {
    unsigned int v58 = v57;
  }
  else {
    unsigned int v58 = v57 + 1;
  }
  unsigned int v59 = v37 << (v58 + 1) >> -(char)v58;
  if (!v58) {
    unsigned int v59 = 0;
  }
  unsigned int v60 = v59 + ~(-1 << v58);
  v19[5] = v60;
  unint64_t v61 = v35 + 2 * v58 + 1;
  int v27 = v61 & 7;
  unsigned int v62 = (unsigned int *)((char *)v38 + (v61 >> 3));
  signed int v29 = bswap32(*v62) << v27;
  if (v62 <= v16) {
    unint64_t v30 = v62;
  }
  else {
    unint64_t v30 = v16;
  }
  if (v60 > 9) {
    goto LABEL_69;
  }
  if (v26 == 5 && v60 != 7 && v60 != 2) {
    goto LABEL_69;
  }
  char v315 = a8;
  unsigned int v64 = __clz(v29 | 1);
  if (!v29) {
    ++v64;
  }
  unsigned int v65 = (v29 << (v64 + 1)) >> -(char)v64;
  if (!v64) {
    unsigned int v65 = 0;
  }
  int v66 = v65 + ~(-1 << v64);
  v19[6] = v66;
  unint64_t v67 = v27 + 2 * v64 + 1;
  int v27 = v67 & 7;
  unsigned int v68 = (unsigned int *)((char *)v30 + (v67 >> 3));
  signed int v29 = bswap32(*v68) << v27;
  if (v68 <= v16) {
    unint64_t v30 = v68;
  }
  else {
    unint64_t v30 = v16;
  }
  uint64_t v69 = (uint64_t)v19;
  uint64_t v70 = sub_2219F39EC((uint64_t)a2, v66, &v318);
  if (v70) {
    goto LABEL_70;
  }
  uint64_t v70 = sub_2219F39A8(a2, *(_DWORD *)(v318 + 4), &v319);
  if (v70) {
    goto LABEL_70;
  }
  uint64_t v71 = v319;
  uint64_t v72 = v69;
  unsigned int v73 = *(_DWORD *)(v319 + 1876);
  if (!*(unsigned char *)(v319 + 1336)) {
    unsigned int v73 = (2 * v73) | 1;
  }
  if (*(_DWORD *)(v69 + 12) > v73) {
    goto LABEL_69;
  }
  uint64_t v76 = v318;
  unsigned int v77 = a2 + 36645;
  a2[36645] = *(_DWORD *)(v318 + 4);
  a2[36646] = 1;
  if ((a4 & 0xFFFFFFFD) != 1) {
    goto LABEL_95;
  }
  if (!a5)
  {
LABEL_78:
    int v78 = *(_DWORD *)(v69 + 8);
    goto LABEL_79;
  }
  int v78 = *(_DWORD *)(v69 + 8);
  if (v78 == 1)
  {
    if (*(_DWORD *)(v69 + 20) != 7)
    {
      int v81 = a7;
      if (!a7)
      {
LABEL_93:
        int v80 = 0;
        goto LABEL_94;
      }
      goto LABEL_90;
    }
    *a5 = 1;
    *(_DWORD *)(v69 + 20) = 7;
    goto LABEL_78;
  }
LABEL_79:
  if (a6 || v78 != 19)
  {
    int v81 = a7;
    if (!a7) {
      goto LABEL_92;
    }
    if (v78 == 5)
    {
      int v82 = 1;
LABEL_91:
      *int v81 = v82;
LABEL_92:
      if (!a5) {
        goto LABEL_95;
      }
      goto LABEL_93;
    }
LABEL_90:
    int v82 = 0;
    goto LABEL_91;
  }
  *(_DWORD *)(v69 + 20) = 7;
  if (*a7) {
    int v79 = 5;
  }
  else {
    int v79 = 1;
  }
  *(_DWORD *)(v69 + 8) = v79;
  if (a5)
  {
    int v80 = 1;
LABEL_94:
    *a5 = v80;
  }
LABEL_95:
  *(_DWORD *)(v69 + 28) = v29 >> (28 - *(_DWORD *)(v71 + 272));
  unint64_t v83 = (v27 + *(_DWORD *)(v71 + 272) + 4);
  int v27 = ((_BYTE)v27 + *(unsigned char *)(v71 + 272) + 4) & 7;
  unsigned int v84 = (unsigned int *)((char *)v30 + (v83 >> 3));
  signed int v85 = bswap32(*v84) << v27;
  if (v84 <= v16) {
    unint64_t v30 = v84;
  }
  else {
    unint64_t v30 = v16;
  }
  *(_WORD *)(v69 + 32) = 0;
  if (*(unsigned char *)(v71 + 1336))
  {
    unsigned int v86 = 0;
  }
  else
  {
    unsigned int v86 = v85 >> 31;
    *(unsigned char *)(v69 + 32) = v85 < 0;
    unint64_t v87 = (v27 + 1);
    int v27 = ((_BYTE)v27 + 1) & 7;
    unint64_t v88 = (unsigned int *)((char *)v30 + (v87 >> 3));
    signed int v29 = bswap32(*v88) << v27;
    if (v88 <= v16) {
      unint64_t v30 = v88;
    }
    else {
      unint64_t v30 = v16;
    }
    if (v85 < 0)
    {
      *(unsigned char *)(v69 + 33) = v29 < 0;
      unint64_t v89 = (v27 + 1);
      int v27 = ((_BYTE)v27 + 1) & 7;
      unsigned int v90 = (unsigned int *)((char *)v30 + (v89 >> 3));
      signed int v29 = bswap32(*v90) << v27;
      if (v90 <= v16) {
        unint64_t v30 = v90;
      }
      else {
        unint64_t v30 = v16;
      }
    }
    if (!*(unsigned char *)(v71 + 1336) && *(unsigned char *)(v71 + 1337) && (v85 & 0x80000000) == 0)
    {
      unsigned int v86 = 0;
      unsigned int v92 = *(_DWORD *)(v69 + 12);
      int v91 = 2 * v92;
      goto LABEL_110;
    }
    signed int v85 = v29;
  }
  int v91 = *(_DWORD *)(v69 + 12);
  unsigned int v92 = v91;
  signed int v29 = v85;
LABEL_110:
  *(_DWORD *)(v69 + 16) = v91;
  unsigned int v93 = (2
       - *(unsigned __int8 *)(v71 + 1336)
       + (2 - *(unsigned __int8 *)(v71 + 1336)) * *(_DWORD *)(v71 + 1332))
      / (v86 + 1);
  unsigned int v94 = v93 + v93 * *(_DWORD *)(v71 + 1328);
  if (!*(unsigned char *)(v71 + 1337) || v86)
  {
    if (v92 >= v94) {
      goto LABEL_69;
    }
  }
  else if (v92 >= v94 >> 1)
  {
    goto LABEL_69;
  }
  if (*(_DWORD *)(v69 + 8) == 5)
  {
    unsigned int v95 = __clz(v29 | 1);
    if (!v29) {
      ++v95;
    }
    if (v95 <= 0xC)
    {
      unsigned int v96 = (v29 << (v95 + 1)) >> -(char)v95;
      if (!v95) {
        unsigned int v96 = 0;
      }
      *(_DWORD *)(v69 + 36) = v96 + ~(-1 << v95);
      unint64_t v97 = v27 + 2 * v95 + 1;
      int v27 = v97 & 7;
      unint64_t v98 = (unsigned int *)((char *)v30 + (v97 >> 3));
      signed int v29 = bswap32(*v98) << v27;
      if (v98 <= v16) {
        unint64_t v30 = v98;
      }
      else {
        unint64_t v30 = v16;
      }
      goto LABEL_149;
    }
    int v99 = ((_BYTE)v27 + 1) & 7;
    unint64_t v100 = (unsigned int *)((char *)v30 + ((unint64_t)(v27 + 1) >> 3));
    unsigned int v101 = bswap32(*v100) << v99;
    if (v100 <= v16) {
      unsigned int v102 = (unsigned int *)((char *)v30 + ((unint64_t)(v27 + 1) >> 3));
    }
    else {
      unsigned int v102 = v16;
    }
    if (v29 < 0)
    {
      unsigned int v106 = 0;
    }
    else
    {
      unsigned int v103 = 0;
      do
      {
        char v104 = v99;
        unsigned int v105 = v101;
        unsigned int v106 = v103 + 1;
        unint64_t v107 = (v99 + 1);
        int v99 = ((_BYTE)v99 + 1) & 7;
        unsigned int v102 = (unsigned int *)((char *)v102 + (v107 >> 3));
        unsigned int v101 = bswap32(*v102) << (v107 & 7);
        if (v102 > v16) {
          unsigned int v102 = v16;
        }
        if ((v105 & 0x80000000) != 0) {
          break;
        }
        BOOL v48 = v103++ >= 0x1F;
      }
      while (!v48);
      if (v106 - 1 > 0x17)
      {
        unsigned int v108 = v101 >> (48 - v106);
        unsigned int v109 = ((v104 + 1) & 7) + v106;
        int v27 = v109 & 7;
        unsigned int v110 = (unsigned int *)((char *)v102 + ((unint64_t)(v109 - 16) >> 3));
        unsigned int v111 = bswap32(*v110) << (v109 & 7);
        if (v110 > v16) {
          unsigned int v110 = v16;
        }
        unsigned int v113 = *(unsigned int *)((char *)v110 + 2);
        signed int v112 = (unsigned int *)((char *)v110 + 2);
        signed int v29 = bswap32(v113) << v27;
        if (v112 <= v16) {
          unint64_t v30 = v112;
        }
        else {
          unint64_t v30 = v16;
        }
        int v114 = __PAIR64__(v108, v111) >> 16;
        goto LABEL_148;
      }
    }
    int v114 = v101 >> -(char)v106;
    unint64_t v115 = v99 + v106;
    int v27 = v115 & 7;
    uint64_t v116 = (unsigned int *)((char *)v102 + (v115 >> 3));
    signed int v29 = bswap32(*v116) << (v115 & 7);
    if (v116 <= v16) {
      unint64_t v30 = v116;
    }
    else {
      unint64_t v30 = v16;
    }
LABEL_148:
    *(_DWORD *)(v69 + 36) = v114 + ~(-1 << v106);
  }
LABEL_149:
  *(_DWORD *)(v69 + 52) = 0;
  *(_DWORD *)(v69 + 44) = 0;
  int v117 = (_DWORD *)(v69 + 44);
  *(_DWORD *)(v69 + 48) = 0;
  if (*(unsigned char *)(v71 + 276) == 1)
  {
    if (*(unsigned char *)(v71 + 284)) {
      goto LABEL_254;
    }
    unsigned int v126 = __clz(v29 | 1);
    if (v29) {
      unsigned int v127 = v126;
    }
    else {
      unsigned int v127 = v126 + 1;
    }
    if (v127 <= 0xC)
    {
      unsigned int v128 = (v29 << (v127 + 1)) >> -(char)v127;
      if (!v127) {
        unsigned int v128 = 0;
      }
      unsigned int v129 = v128 + ~(-1 << v127);
      unint64_t v130 = v27 + 2 * v127 + 1;
      int v27 = v130 & 7;
      int v131 = (unsigned int *)((char *)v30 + (v130 >> 3));
      signed int v29 = bswap32(*v131) << v27;
      if (v131 <= v16) {
        unint64_t v30 = v131;
      }
      else {
        unint64_t v30 = v16;
      }
LABEL_219:
      *(_DWORD *)(v69 + 48) = ((v129 + 1) >> 1) - ((v129 + 1) >> 1) * 2 * ((v129 + 1) & 1);
      if (v86 || *(unsigned char *)(v76 + 9) != 1) {
        goto LABEL_254;
      }
      unsigned int v168 = __clz(v29 | 1);
      if (v29) {
        unsigned int v169 = v168;
      }
      else {
        unsigned int v169 = v168 + 1;
      }
      if (v169 <= 0xC)
      {
        unsigned int v170 = (v29 << (v169 + 1)) >> -(char)v169;
        if (!v169) {
          unsigned int v170 = 0;
        }
        unsigned int v123 = v170 + ~(-1 << v169);
        unint64_t v171 = v27 + 2 * v169 + 1;
        int v27 = v171 & 7;
        int v172 = (unsigned int *)((char *)v30 + (v171 >> 3));
        signed int v29 = bswap32(*v172) << v27;
        if (v172 <= v16) {
          unint64_t v30 = v172;
        }
        else {
          unint64_t v30 = v16;
        }
        goto LABEL_252;
      }
      int v173 = ((_BYTE)v27 + 1) & 7;
      unsigned int v174 = (unsigned int *)((char *)v30 + ((unint64_t)(v27 + 1) >> 3));
      unsigned int v175 = bswap32(*v174) << v173;
      if (v174 <= v16) {
        unint64_t v176 = (unsigned int *)((char *)v30 + ((unint64_t)(v27 + 1) >> 3));
      }
      else {
        unint64_t v176 = v16;
      }
      if (v29 < 0)
      {
        unsigned int v180 = 0;
      }
      else
      {
        unsigned int v177 = 0;
        do
        {
          char v178 = v173;
          unsigned int v179 = v175;
          unsigned int v180 = v177 + 1;
          unint64_t v181 = (v173 + 1);
          int v173 = ((_BYTE)v173 + 1) & 7;
          unint64_t v176 = (unsigned int *)((char *)v176 + (v181 >> 3));
          unsigned int v175 = bswap32(*v176) << (v181 & 7);
          if (v176 > v16) {
            unint64_t v176 = v16;
          }
          if ((v179 & 0x80000000) != 0) {
            break;
          }
          BOOL v48 = v177++ >= 0x1F;
        }
        while (!v48);
        if (v180 - 1 > 0x17)
        {
          unsigned int v182 = v175 >> (48 - v180);
          unsigned int v183 = ((v178 + 1) & 7) + v180;
          int v27 = v183 & 7;
          unsigned int v184 = (unsigned int *)((char *)v176 + ((unint64_t)(v183 - 16) >> 3));
          unsigned int v185 = bswap32(*v184) << (v183 & 7);
          if (v184 > v16) {
            unsigned int v184 = v16;
          }
          unsigned int v187 = *(unsigned int *)((char *)v184 + 2);
          unint64_t v186 = (unsigned int *)((char *)v184 + 2);
          signed int v29 = bswap32(v187) << v27;
          if (v186 <= v16) {
            unint64_t v30 = v186;
          }
          else {
            unint64_t v30 = v16;
          }
          int v188 = __PAIR64__(v182, v185) >> 16;
          goto LABEL_251;
        }
      }
      int v188 = v175 >> -(char)v180;
      unint64_t v189 = v173 + v180;
      int v27 = v189 & 7;
      unint64_t v190 = (unsigned int *)((char *)v176 + (v189 >> 3));
      signed int v29 = bswap32(*v190) << (v189 & 7);
      if (v190 <= v16) {
        unint64_t v30 = v190;
      }
      else {
        unint64_t v30 = v16;
      }
LABEL_251:
      unsigned int v123 = v188 + ~(-1 << v180);
LABEL_252:
      int v117 = (_DWORD *)(v69 + 52);
      goto LABEL_253;
    }
    int v148 = ((_BYTE)v27 + 1) & 7;
    unsigned int v149 = (unsigned int *)((char *)v30 + ((unint64_t)(v27 + 1) >> 3));
    unsigned int v150 = bswap32(*v149) << v148;
    if (v149 <= v16) {
      unsigned int v151 = (unsigned int *)((char *)v30 + ((unint64_t)(v27 + 1) >> 3));
    }
    else {
      unsigned int v151 = v16;
    }
    if (v29 < 0)
    {
      unsigned int v155 = 0;
    }
    else
    {
      unsigned int v152 = 0;
      do
      {
        char v153 = v148;
        unsigned int v154 = v150;
        unsigned int v155 = v152 + 1;
        unint64_t v156 = (v148 + 1);
        int v148 = ((_BYTE)v148 + 1) & 7;
        unsigned int v151 = (unsigned int *)((char *)v151 + (v156 >> 3));
        unsigned int v150 = bswap32(*v151) << (v156 & 7);
        if (v151 > v16) {
          unsigned int v151 = v16;
        }
        if ((v154 & 0x80000000) != 0) {
          break;
        }
        BOOL v48 = v152++ >= 0x1F;
      }
      while (!v48);
      if (v155 - 1 > 0x17)
      {
        unsigned int v157 = v150 >> (48 - v155);
        unsigned int v158 = ((v153 + 1) & 7) + v155;
        int v27 = v158 & 7;
        unsigned int v159 = (unsigned int *)((char *)v151 + ((unint64_t)(v158 - 16) >> 3));
        unsigned int v160 = bswap32(*v159) << (v158 & 7);
        if (v159 > v16) {
          unsigned int v159 = v16;
        }
        unsigned int v162 = *(unsigned int *)((char *)v159 + 2);
        unint64_t v161 = (unsigned int *)((char *)v159 + 2);
        signed int v29 = bswap32(v162) << v27;
        if (v161 <= v16) {
          unint64_t v30 = v161;
        }
        else {
          unint64_t v30 = v16;
        }
        int v163 = __PAIR64__(v157, v160) >> 16;
        goto LABEL_218;
      }
    }
    int v163 = v150 >> -(char)v155;
    unint64_t v166 = v148 + v155;
    int v27 = v166 & 7;
    unsigned int v167 = (unsigned int *)((char *)v151 + (v166 >> 3));
    signed int v29 = bswap32(*v167) << (v166 & 7);
    if (v167 <= v16) {
      unint64_t v30 = v167;
    }
    else {
      unint64_t v30 = v16;
    }
LABEL_218:
    unsigned int v129 = v163 + ~(-1 << v155);
    goto LABEL_219;
  }
  if (!*(unsigned char *)(v71 + 276))
  {
    *(_DWORD *)(v69 + 40) = v29 >> (28 - *(_DWORD *)(v71 + 280));
    unint64_t v118 = (v27 + *(_DWORD *)(v71 + 280) + 4);
    int v27 = ((_BYTE)v27 + *(unsigned char *)(v71 + 280) + 4) & 7;
    uint64_t v119 = (unsigned int *)((char *)v30 + (v118 >> 3));
    signed int v29 = bswap32(*v119) << v27;
    unint64_t v30 = v119 <= v16 ? v119 : v16;
    if (!v86 && *(unsigned char *)(v76 + 9) == 1)
    {
      unsigned int v120 = __clz(v29 | 1);
      if (v29) {
        unsigned int v121 = v120;
      }
      else {
        unsigned int v121 = v120 + 1;
      }
      if (v121 <= 0xC)
      {
        unsigned int v122 = (v29 << (v121 + 1)) >> -(char)v121;
        if (!v121) {
          unsigned int v122 = 0;
        }
        unsigned int v123 = v122 + ~(-1 << v121);
        unint64_t v124 = v27 + 2 * v121 + 1;
        int v27 = v124 & 7;
        unsigned int v125 = (unsigned int *)((char *)v30 + (v124 >> 3));
        signed int v29 = bswap32(*v125) << v27;
        if (v125 <= v16) {
          unint64_t v30 = v125;
        }
        else {
          unint64_t v30 = v16;
        }
        goto LABEL_253;
      }
      int v132 = ((_BYTE)v27 + 1) & 7;
      uint64_t v133 = (unsigned int *)((char *)v30 + ((unint64_t)(v27 + 1) >> 3));
      unsigned int v134 = bswap32(*v133) << v132;
      if (v133 <= v16) {
        unsigned int v135 = (unsigned int *)((char *)v30 + ((unint64_t)(v27 + 1) >> 3));
      }
      else {
        unsigned int v135 = v16;
      }
      if (v29 < 0)
      {
        unsigned int v139 = 0;
      }
      else
      {
        unsigned int v136 = 0;
        do
        {
          char v137 = v132;
          unsigned int v138 = v134;
          unsigned int v139 = v136 + 1;
          unint64_t v140 = (v132 + 1);
          int v132 = ((_BYTE)v132 + 1) & 7;
          unsigned int v135 = (unsigned int *)((char *)v135 + (v140 >> 3));
          unsigned int v134 = bswap32(*v135) << (v140 & 7);
          if (v135 > v16) {
            unsigned int v135 = v16;
          }
          if ((v138 & 0x80000000) != 0) {
            break;
          }
          BOOL v48 = v136++ >= 0x1F;
        }
        while (!v48);
        if (v139 - 1 > 0x17)
        {
          unsigned int v141 = v134 >> (48 - v139);
          unsigned int v142 = ((v137 + 1) & 7) + v139;
          int v27 = v142 & 7;
          unint64_t v143 = (unsigned int *)((char *)v135 + ((unint64_t)(v142 - 16) >> 3));
          unsigned int v144 = bswap32(*v143) << (v142 & 7);
          if (v143 > v16) {
            unint64_t v143 = v16;
          }
          unsigned int v146 = *(unsigned int *)((char *)v143 + 2);
          unint64_t v145 = (unsigned int *)((char *)v143 + 2);
          signed int v29 = bswap32(v146) << v27;
          if (v145 <= v16) {
            unint64_t v30 = v145;
          }
          else {
            unint64_t v30 = v16;
          }
          int v147 = __PAIR64__(v141, v144) >> 16;
          goto LABEL_213;
        }
      }
      int v147 = v134 >> -(char)v139;
      unint64_t v164 = v132 + v139;
      int v27 = v164 & 7;
      unsigned int v165 = (unsigned int *)((char *)v135 + (v164 >> 3));
      signed int v29 = bswap32(*v165) << (v164 & 7);
      if (v165 <= v16) {
        unint64_t v30 = v165;
      }
      else {
        unint64_t v30 = v16;
      }
LABEL_213:
      unsigned int v123 = v147 + ~(-1 << v139);
LABEL_253:
      *int v117 = ((v123 + 1) >> 1) - ((v123 + 1) >> 1) * 2 * ((v123 + 1) & 1);
    }
  }
LABEL_254:
  *(_DWORD *)(v69 + 56) = 0;
  if (*(unsigned char *)(v76 + 86))
  {
    unsigned int v191 = __clz(v29 | 1);
    if (!v29) {
      ++v191;
    }
    unsigned int v192 = (v29 << (v191 + 1)) >> -(char)v191;
    if (!v191) {
      unsigned int v192 = 0;
    }
    *(_DWORD *)(v69 + 56) = v192 + ~(-1 << v191);
    unint64_t v193 = v27 + 2 * v191 + 1;
    int v27 = v193 & 7;
    unsigned int v194 = (unsigned int *)((char *)v30 + (v193 >> 3));
    signed int v29 = bswap32(*v194) << v27;
    if (v194 <= v16) {
      unint64_t v30 = v194;
    }
    else {
      unint64_t v30 = v16;
    }
  }
  unsigned int v195 = *(_DWORD *)(v69 + 20);
  if (v195 == 6 || v195 == 1)
  {
    *(unsigned char *)(v69 + 60) = v29 < 0;
    unint64_t v196 = (v27 + 1);
    int v27 = ((_BYTE)v27 + 1) & 7;
    unsigned int v197 = (unsigned int *)((char *)v30 + (v196 >> 3));
    signed int v29 = bswap32(*v197) << v27;
    if (v197 <= v16) {
      unint64_t v30 = v197;
    }
    else {
      unint64_t v30 = v16;
    }
  }
  if (v195 <= 8 && ((1 << v195) & 0x16B) != 0)
  {
    *(unsigned char *)(v69 + 61) = v29 < 0;
    unint64_t v198 = (v27 + 1);
    int v27 = ((_BYTE)v27 + 1) & 7;
    unsigned int v199 = (unsigned int *)((char *)v30 + (v198 >> 3));
    unsigned int v200 = bswap32(*v199) << (v198 & 7);
    if (v199 <= v16) {
      unint64_t v30 = v199;
    }
    else {
      unint64_t v30 = v16;
    }
    if (v29 < 0)
    {
      unsigned int v211 = __clz(v200 | 1);
      if (!v200) {
        ++v211;
      }
      unsigned int v212 = v200 << (v211 + 1) >> -(char)v211;
      if (!v211) {
        unsigned int v212 = 0;
      }
      unsigned int v213 = v212 + ~(-1 << v211);
      *(_DWORD *)(v69 + 64) = v213;
      unint64_t v214 = v27 + 2 * v211 + 1;
      int v27 = v214 & 7;
      unsigned int v215 = (unsigned int *)((char *)v30 + (v214 >> 3));
      signed int v29 = bswap32(*v215) << v27;
      if (v215 <= v16) {
        unint64_t v30 = v215;
      }
      else {
        unint64_t v30 = v16;
      }
      if (v213 > 0x1F) {
        goto LABEL_69;
      }
      if (v195 == 6 || v195 == 1)
      {
        unsigned int v216 = __clz(v29 | 1);
        if (!v29) {
          ++v216;
        }
        unsigned int v217 = (v29 << (v216 + 1)) >> -(char)v216;
        if (!v216) {
          unsigned int v217 = 0;
        }
        unsigned int v218 = v217 + ~(-1 << v216);
        *(_DWORD *)(v69 + 68) = v218;
        unint64_t v219 = v27 + 2 * v216 + 1;
        int v27 = v219 & 7;
        unsigned int v220 = (unsigned int *)((char *)v30 + (v219 >> 3));
        signed int v29 = bswap32(*v220) << v27;
        unint64_t v30 = v220 <= v16 ? v220 : v16;
        if (v218 > 0x1F) {
          goto LABEL_69;
        }
      }
    }
    else
    {
      *(_DWORD *)(v69 + 64) = *(_DWORD *)(v76 + 56);
      *(_DWORD *)(v69 + 68) = *(_DWORD *)(v76 + 60);
      signed int v29 = v200;
    }
  }
  if (v195 > 9 || ((1 << v195) & 0x294) == 0)
  {
    *(unsigned char *)(v69 + 72) = v29 < 0;
    unint64_t v236 = (v27 + 1);
    int v27 = ((_BYTE)v27 + 1) & 7;
    unsigned int v237 = (unsigned int *)((char *)v30 + (v236 >> 3));
    unsigned int v238 = bswap32(*v237);
    signed int v239 = v238 << v27;
    if (v237 <= v16) {
      unint64_t v30 = v237;
    }
    else {
      unint64_t v30 = v16;
    }
    if (v29 < 0)
    {
      unint64_t v240 = 0;
      signed int v29 = v239;
      uint64_t v70 = 4294958327;
      while (1)
      {
        unsigned int v241 = __clz(v29 | 1);
        if (v29) {
          unsigned int v242 = v241;
        }
        else {
          unsigned int v242 = v241 + 1;
        }
        unsigned int v243 = (v29 << (v242 + 1)) >> -(char)v242;
        if (!v242) {
          unsigned int v243 = 0;
        }
        unsigned int v244 = v243 + ~(-1 << v242);
        unint64_t v245 = v27 + 2 * v242 + 1;
        int v27 = v245 & 7;
        int v246 = (unsigned int *)((char *)v30 + (v245 >> 3));
        signed int v29 = bswap32(*v246) << v27;
        unint64_t v30 = v246 <= v16 ? v246 : v16;
        if (v244 > 3) {
          goto LABEL_69;
        }
        *(_DWORD *)(v69 + 76 + 4 * v240) = v244;
        if (v244 == 3) {
          goto LABEL_276;
        }
        unsigned int v247 = __clz(v29 | 1);
        if (!v29) {
          ++v247;
        }
        unsigned int v248 = (v29 << (v247 + 1)) >> -(char)v247;
        if (!v247) {
          unsigned int v248 = 0;
        }
        unsigned int v249 = v248 + ~(-1 << v247);
        unint64_t v250 = v27 + 2 * v247 + 1;
        int v27 = v250 & 7;
        unsigned int v251 = (unsigned int *)((char *)v30 + (v250 >> 3));
        if (v251 <= v16) {
          unint64_t v30 = v251;
        }
        else {
          unint64_t v30 = v16;
        }
        if (v244 >= 2) {
          uint64_t v252 = v69 + 604;
        }
        else {
          uint64_t v252 = v69 + 340;
        }
        *(_DWORD *)(v252 + 4 * v240) = v249;
        signed int v29 = bswap32(*v251) << v27;
        if (v240 <= *(unsigned int *)(v69 + 64))
        {
          BOOL v31 = v240++ == 32;
          if (!v31) {
            continue;
          }
        }
        goto LABEL_70;
      }
    }
    signed int v29 = v238 << v27;
  }
LABEL_276:
  if (v195 == 6 || v195 == 1)
  {
    *(unsigned char *)(v69 + 73) = v29 < 0;
    unint64_t v201 = (v27 + 1);
    int v27 = ((_BYTE)v27 + 1) & 7;
    int v202 = (unsigned int *)((char *)v30 + (v201 >> 3));
    unsigned int v203 = bswap32(*v202);
    if (v202 <= v16) {
      unint64_t v30 = v202;
    }
    else {
      unint64_t v30 = v16;
    }
    if ((v29 & 0x80000000) == 0)
    {
      signed int v29 = v203 << v27;
      goto LABEL_283;
    }
    uint64_t v221 = -32;
    uint64_t v222 = v69;
    signed int v29 = v203 << v27;
    while (1)
    {
      uint64_t v223 = v221;
      unsigned int v224 = __clz(v29 | 1);
      if (v29) {
        unsigned int v225 = v224;
      }
      else {
        unsigned int v225 = v224 + 1;
      }
      unsigned int v226 = (v29 << (v225 + 1)) >> -(char)v225;
      if (!v225) {
        unsigned int v226 = 0;
      }
      unsigned int v227 = v226 + ~(-1 << v225);
      unint64_t v228 = v27 + 2 * v225 + 1;
      int v27 = v228 & 7;
      unsigned int v229 = (unsigned int *)((char *)v30 + (v228 >> 3));
      signed int v29 = bswap32(*v229) << v27;
      unint64_t v30 = v229 <= v16 ? v229 : v16;
      if (v227 > 3) {
        break;
      }
      *(_DWORD *)(v222 + 208) = v227;
      if (v227 == 3) {
        goto LABEL_283;
      }
      unsigned int v230 = __clz(v29 | 1);
      if (!v29) {
        ++v230;
      }
      unsigned int v231 = (v29 << (v230 + 1)) >> -(char)v230;
      if (!v230) {
        unsigned int v231 = 0;
      }
      unsigned int v232 = v231 + ~(-1 << v230);
      unint64_t v233 = v27 + 2 * v230 + 1;
      int v27 = v233 & 7;
      unsigned int v234 = (unsigned int *)((char *)v30 + (v233 >> 3));
      if (v234 <= v16) {
        unint64_t v30 = v234;
      }
      else {
        unint64_t v30 = v16;
      }
      if (v227 >= 2) {
        uint64_t v235 = 736;
      }
      else {
        uint64_t v235 = 472;
      }
      *(_DWORD *)(v222 + v235) = v232;
      signed int v29 = bswap32(*v234) << v27;
      uint64_t v70 = 4294958327;
      if (v223 + 32 <= (unint64_t)*(unsigned int *)(v69 + 68))
      {
        uint64_t v221 = v223 + 1;
        v222 += 4;
        if (v223) {
          continue;
        }
      }
      goto LABEL_70;
    }
LABEL_69:
    uint64_t v70 = 4294958327;
    goto LABEL_70;
  }
LABEL_283:
  if (*(unsigned char *)(v76 + 64) && (!v195 || v195 == 5) || *(_DWORD *)(v76 + 68) == 1 && (v195 == 6 || v195 == 1))
  {
    *(void *)(a1 + 16) = v30;
    *(_DWORD *)(a1 + 32) = v29;
    *(unsigned char *)(a1 + 36) = v27;
    if (*(_DWORD *)(a1 + 8) < (int)v30 - *(_DWORD *)a1) {
      goto LABEL_69;
    }
    uint64_t v204 = v71;
    uint64_t v70 = sub_221A23A58(a1, (_DWORD *)v69, v76);
    if (v70) {
      goto LABEL_70;
    }
    uint64_t v71 = v204;
    unsigned int v77 = a2 + 36645;
    uint64_t v72 = v69;
    unint64_t v30 = *(unsigned int **)(a1 + 16);
    unsigned int v16 = *(unsigned int **)(a1 + 24);
    signed int v29 = *(_DWORD *)(a1 + 32);
    int v27 = *(unsigned __int8 *)(a1 + 36);
  }
  if (*(unsigned char *)(v72 + 2544)) {
    goto LABEL_69;
  }
  if (!*(_DWORD *)(v72 + 4))
  {
LABEL_301:
    unsigned int v210 = v29;
    goto LABEL_429;
  }
  if (*(_DWORD *)(v72 + 8) == 5)
  {
    *(unsigned char *)(v72 + 2708) = v29 < 0;
    int v205 = ((_BYTE)v27 + 1) & 7;
    int v206 = (unsigned int *)((char *)v30 + ((unint64_t)(v27 + 1) >> 3));
    signed int v207 = bswap32(*v206) << v205;
    if (v206 > v16) {
      int v206 = v16;
    }
    *(unsigned char *)(v72 + 2709) = v207 < 0;
    unint64_t v208 = (v205 + 1);
    int v27 = v208 & 7;
    unint64_t v209 = (unsigned int *)((char *)v206 + (v208 >> 3));
    signed int v29 = bswap32(*v209) << (v208 & 7);
    if (v209 <= v16) {
      unint64_t v30 = v209;
    }
    else {
      unint64_t v30 = v16;
    }
    if (*(_DWORD *)(v72 + 2712)) {
      goto LABEL_69;
    }
    goto LABEL_301;
  }
  *(unsigned char *)(v72 + 2544) = v29 < 0;
  unint64_t v253 = (v27 + 1);
  int v27 = ((_BYTE)v27 + 1) & 7;
  unsigned int v254 = (unsigned int *)((char *)v30 + (v253 >> 3));
  unsigned int v210 = bswap32(*v254) << (v253 & 7);
  if (v254 <= v16) {
    unint64_t v30 = v254;
  }
  else {
    unint64_t v30 = v16;
  }
  if ((v29 & 0x80000000) == 0) {
    goto LABEL_429;
  }
  unint64_t v255 = 0;
  for (uint64_t i = (unsigned int *)(v72 + 2548); ; ++i)
  {
    unsigned int v257 = __clz(v210 | 1);
    if (!v210) {
      ++v257;
    }
    unsigned int v258 = v210 << (v257 + 1) >> -(char)v257;
    unsigned int v259 = v257 ? v258 : 0;
    int v260 = ~(-1 << v257);
    unint64_t v261 = v27 + 2 * v257 + 1;
    int v27 = ((_BYTE)v27 + 2 * (_BYTE)v257 + 1) & 7;
    unint64_t v262 = (unsigned int *)((char *)v30 + (v261 >> 3));
    unsigned int v210 = bswap32(*v262) << (v261 & 7);
    unint64_t v30 = v262 <= v16 ? v262 : v16;
    unsigned int v263 = v259 + v260;
    if (!(v259 + v260)) {
      break;
    }
    if (v263 > 6 || v255 > 7)
    {
      uint64_t v70 = 4294958327;
      signed int v29 = v210;
      goto LABEL_70;
    }
    *uint64_t i = v263;
    if ((v263 | 2) == 3)
    {
      unsigned int v265 = __clz(v210 | 1);
      if (!v210) {
        ++v265;
      }
      unsigned int v266 = v210 << (v265 + 1) >> -(char)v265;
      if (!v265) {
        unsigned int v266 = 0;
      }
      i[8] = v266 + ~(-1 << v265);
      unint64_t v267 = v27 + 2 * v265 + 1;
      int v27 = ((_BYTE)v27 + 2 * (_BYTE)v265 + 1) & 7;
      unint64_t v268 = (unsigned int *)((char *)v30 + (v267 >> 3));
      unsigned int v210 = bswap32(*v268) << (v267 & 7);
      if (v268 <= v16) {
        unint64_t v30 = v268;
      }
      else {
        unint64_t v30 = v16;
      }
    }
    if (v263 == 6 || v263 == 3)
    {
      unsigned int v271 = __clz(v210 | 1);
      if (!v210) {
        ++v271;
      }
      unsigned int v272 = v210 << (v271 + 1) >> -(char)v271;
      if (!v271) {
        unsigned int v272 = 0;
      }
      i[24] = v272 + ~(-1 << v271);
      unint64_t v273 = v27 + 2 * v271 + 1;
      int v27 = ((_BYTE)v27 + 2 * (_BYTE)v271 + 1) & 7;
      int v274 = (unsigned int *)((char *)v30 + (v273 >> 3));
      unsigned int v210 = bswap32(*v274) << (v273 & 7);
      if (v274 <= v16) {
        unint64_t v30 = v274;
      }
      else {
        unint64_t v30 = v16;
      }
    }
    else if (v263 == 2)
    {
      unsigned int v269 = __clz(v210 | 1);
      if (!v210) {
        ++v269;
      }
      unsigned int v270 = v210 << (v269 + 1) >> -(char)v269;
      if (!v269) {
        unsigned int v270 = 0;
      }
      i[16] = v270 + ~(-1 << v269);
      goto LABEL_422;
    }
    if (v263 != 4) {
      goto LABEL_425;
    }
    unsigned int v269 = __clz(v210 | 1);
    if (!v210) {
      ++v269;
    }
    unsigned int v275 = v210 << (v269 + 1) >> -(char)v269;
    if (!v269) {
      unsigned int v275 = 0;
    }
    i[32] = v275 + ~(-1 << v269);
LABEL_422:
    unint64_t v276 = v27 + 2 * v269 + 1;
    int v27 = ((_BYTE)v27 + 2 * (_BYTE)v269 + 1) & 7;
    unint64_t v277 = (unsigned int *)((char *)v30 + (v276 >> 3));
    unsigned int v210 = bswap32(*v277) << (v276 & 7);
    if (v277 <= v16) {
      unint64_t v30 = v277;
    }
    else {
      unint64_t v30 = v16;
    }
LABEL_425:
    ++v255;
  }
  if ((v255 & 0xFFFFFFF8) == 0) {
    *uint64_t i = 0;
  }
  uint64_t v72 = v69;
LABEL_429:
  *(unsigned char *)(v72 + 2748) = *(unsigned char *)(v76 + 8);
  *(unsigned char *)(v72 + 2749) = *(_DWORD *)(v71 + 1320);
  if (!*(unsigned char *)(v76 + 64) || (int v278 = *(_DWORD *)(v72 + 20), LOBYTE(v279) = 1, v278) && v278 != 5)
  {
    int v279 = *(_DWORD *)(v76 + 68);
    if (v279)
    {
      int v280 = *(_DWORD *)(v72 + 20);
      LOBYTE(v279) = v280 == 1 || v280 == 6;
    }
  }
  *(unsigned char *)(v72 + 2750) = v279;
  if (a9) {
    *a9 = *(unsigned char *)(v76 + 8) == 1;
  }
  unsigned int v282 = *(_DWORD *)(v72 + 20);
  if (*(unsigned char *)(v76 + 8) != 1 || v282 <= 9 && ((1 << v282) & 0x294) != 0)
  {
    LOBYTE(v283) = 0;
    goto LABEL_445;
  }
  unsigned int v309 = __clz(v210 | 1);
  if (v210) {
    unsigned int v310 = v309;
  }
  else {
    unsigned int v310 = v309 + 1;
  }
  unsigned int v311 = v210 << (v310 + 1) >> -(char)v310;
  if (!v310) {
    unsigned int v311 = 0;
  }
  unsigned int v283 = v311 + ~(-1 << v310);
  unint64_t v312 = v27 + 2 * v310 + 1;
  int v27 = ((_BYTE)v27 + 2 * (_BYTE)v310 + 1) & 7;
  unsigned int v313 = (unsigned int *)((char *)v30 + (v312 >> 3));
  unsigned int v314 = bswap32(*v313);
  signed int v29 = v314 << v27;
  if (v313 <= v16) {
    unint64_t v30 = v313;
  }
  else {
    unint64_t v30 = v16;
  }
  if (v283 > 2) {
    goto LABEL_69;
  }
  unsigned int v210 = v314 << v27;
  uint64_t v72 = v69;
LABEL_445:
  *(unsigned char *)(v72 + 2716) = v283;
  unsigned int v284 = __clz(v210 | 1);
  if (!v210) {
    ++v284;
  }
  unsigned int v285 = v210 << (v284 + 1) >> -(char)v284;
  if (v284) {
    unsigned int v286 = v285;
  }
  else {
    unsigned int v286 = 0;
  }
  int v287 = 1 << v284;
  unint64_t v288 = v27 + 2 * v284 + 1;
  int v27 = v288 & 7;
  unsigned int v289 = (unsigned int *)((char *)v30 + (v288 >> 3));
  signed int v29 = bswap32(*v289) << v27;
  if (v289 <= v16) {
    unint64_t v30 = v289;
  }
  else {
    unint64_t v30 = v16;
  }
  *(_DWORD *)(v72 + 2720) = ((v286 + v287) >> 1) - ((v286 + v287) >> 1) * 2 * (((_BYTE)v286 + (_BYTE)v287) & 1);
  if (v282 <= 9 && ((1 << v282) & 0x318) != 0)
  {
LABEL_455:
    uint64_t v70 = 4294966630;
    goto LABEL_70;
  }
  int v290 = 0;
  uint64_t v291 = (int *)(v72 + 2732);
  *(void *)(v72 + 2732) = 0;
  *(_DWORD *)(v72 + 2740) = 0;
  if (*(unsigned char *)(v76 + 84) == 1)
  {
    unsigned int v292 = __clz(v29 | 1);
    if (!v29) {
      ++v292;
    }
    unsigned int v293 = (v29 << (v292 + 1)) >> -(char)v292;
    if (!v292) {
      unsigned int v293 = 0;
    }
    int v294 = v293 + ~(-1 << v292);
    *uint64_t v291 = v294;
    unint64_t v295 = v27 + 2 * v292 + 1;
    int v27 = v295 & 7;
    unsigned int v296 = (unsigned int *)((char *)v30 + (v295 >> 3));
    signed int v29 = bswap32(*v296) << v27;
    if (v296 <= v16) {
      unint64_t v30 = v296;
    }
    else {
      unint64_t v30 = v16;
    }
    int v290 = 1;
    if (v294 != 1)
    {
      unsigned int v297 = __clz(v29 | 1);
      if (!v29) {
        ++v297;
      }
      unsigned int v298 = (v29 << (v297 + 1)) >> -(char)v297;
      if (!v297) {
        unsigned int v298 = 0;
      }
      int v299 = 1 << v297;
      unint64_t v300 = v27 + 2 * v297 + 1;
      int v301 = v300 & 7;
      unsigned int v302 = (unsigned int *)((char *)v30 + (v300 >> 3));
      unsigned int v303 = bswap32(*v302) << v301;
      if (v302 > v16) {
        unsigned int v302 = v16;
      }
      *(_DWORD *)(v69 + 2736) = ((v298 + v299) >> 1) - ((v298 + v299) >> 1) * 2 * ((v298 + v299) & 1);
      unsigned int v304 = __clz(v303 | 1);
      if (!v303) {
        ++v304;
      }
      unsigned int v305 = v303 << (v304 + 1) >> -(char)v304;
      if (!v304) {
        unsigned int v305 = 0;
      }
      int v306 = 1 << v304;
      unint64_t v307 = v301 + 2 * v304 + 1;
      LOBYTE(v27) = v307 & 7;
      uint64_t v308 = (unsigned int *)((char *)v302 + (v307 >> 3));
      signed int v29 = bswap32(*v308) << (v307 & 7);
      if (v308 <= v16) {
        unint64_t v30 = v308;
      }
      else {
        unint64_t v30 = v16;
      }
      *(_DWORD *)(v69 + 2740) = ((v305 + v306) >> 1) - ((v305 + v306) >> 1) * 2 * ((v305 + v306) & 1);
      int v290 = v294;
    }
  }
  if (!v77[2])
  {
    if ((v315 & 1) == 0) {
      goto LABEL_496;
    }
    if (v290 == 1) {
      goto LABEL_495;
    }
    goto LABEL_69;
  }
  *uint64_t v291 = 1;
  if ((v315 & 1) == 0) {
    goto LABEL_496;
  }
LABEL_495:
  *uint64_t v291 = 0;
LABEL_496:
  if (*(_DWORD *)(v76 + 12) && (*(_DWORD *)(v76 + 16) - 3) < 3) {
    goto LABEL_455;
  }
  if (sub_221A24028(a2, v69)) {
    uint64_t v70 = 4294958327;
  }
  else {
    uint64_t v70 = 0;
  }
  do
  {
LABEL_70:
    uint64_t v74 = v70;
    if (v70) {
      break;
    }
    *(void *)(a1 + 16) = v30;
    *(_DWORD *)(a1 + 32) = v29;
    *(unsigned char *)(a1 + 36) = v27;
    uint64_t v70 = 4294958327;
  }
  while (*(_DWORD *)(a1 + 8) < (int)v30 - *(_DWORD *)a1);
  return v74;
}

uint64_t sub_221A23A58(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(unsigned int **)(a1 + 24);
  int v5 = *(_DWORD *)(a1 + 32);
  int v6 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v7 = __clz(v5 | 1);
  if (!v5) {
    ++v7;
  }
  unsigned int v8 = (v5 << (v7 + 1)) >> -(char)v7;
  if (!v7) {
    unsigned int v8 = 0;
  }
  unsigned int v9 = v8 + ~(-1 << v7);
  a2[218] = v9;
  unint64_t v10 = v6 + 2 * v7 + 1;
  int v11 = v10 & 7;
  int v12 = (unsigned int *)(v4 + (v10 >> 3));
  unsigned int v13 = bswap32(*v12) << (v10 & 7);
  if (v12 <= v3) {
    unsigned int v14 = v12;
  }
  else {
    unsigned int v14 = v3;
  }
  unsigned int v15 = __clz(v13 | 1);
  if (v13) {
    unsigned int v16 = v15;
  }
  else {
    unsigned int v16 = v15 + 1;
  }
  unsigned int v17 = v13 << (v16 + 1) >> -(char)v16;
  if (!v16) {
    unsigned int v17 = 0;
  }
  unsigned int v18 = v17 + ~(-1 << v16);
  a2[219] = v18;
  unint64_t v19 = v11 + 2 * v16 + 1;
  int v20 = v19 & 7;
  unsigned int v21 = (unsigned int *)((char *)v14 + (v19 >> 3));
  unsigned int v22 = bswap32(*v21) << (v19 & 7);
  if (v21 > v3) {
    unsigned int v21 = v3;
  }
  int v23 = a2[16];
  if ((v23 - 32) < 0xFFFFFFDF) {
    goto LABEL_16;
  }
  uint64_t v25 = 0;
  unsigned int v26 = a2 + 252;
  int v27 = 1 << v18;
  int v28 = 1 << v9;
  if ((v23 + 1) > 1) {
    uint64_t v29 = (v23 + 1);
  }
  else {
    uint64_t v29 = 1;
  }
  unint64_t v30 = a2;
  do
  {
    unint64_t v31 = (v20 + 1);
    int v32 = ((_BYTE)v20 + 1) & 7;
    unsigned int v33 = (unsigned int *)((char *)v21 + (v31 >> 3));
    unsigned int v34 = bswap32(*v33) << (v31 & 7);
    if (v33 > v3) {
      unsigned int v33 = v3;
    }
    if ((v22 & 0x80000000) != 0)
    {
      unsigned int v36 = __clz(v34 | 1);
      if (!v34) {
        ++v36;
      }
      unsigned int v37 = v34 << (v36 + 1) >> -(char)v36;
      if (!v36) {
        unsigned int v37 = 0;
      }
      int v38 = 1 << v36;
      unint64_t v39 = v32 + 2 * v36 + 1;
      int v40 = v39 & 7;
      unsigned int v41 = (unsigned int *)((char *)v33 + (v39 >> 3));
      unsigned int v42 = bswap32(*v41) << v40;
      if (v41 <= v3) {
        unsigned int v43 = v41;
      }
      else {
        unsigned int v43 = v3;
      }
      v26[3 * v25] = ((v37 + v38) >> 1) - ((v37 + v38) >> 1) * 2 * ((v37 + v38) & 1);
      unsigned int v44 = __clz(v42 | 1);
      if (!v42) {
        ++v44;
      }
      unsigned int v45 = v42 << (v44 + 1) >> -(char)v44;
      if (v44) {
        unsigned int v46 = v45;
      }
      else {
        unsigned int v46 = 0;
      }
      int v47 = 1 << v44;
      unint64_t v48 = v40 + 2 * v44 + 1;
      int v32 = v48 & 7;
      unsigned int v49 = (unsigned int *)((char *)v43 + (v48 >> 3));
      unsigned int v34 = bswap32(*v49) << v32;
      if (v49 <= v3) {
        unsigned int v33 = v49;
      }
      else {
        unsigned int v33 = v3;
      }
      unsigned int v35 = ((v46 + v47) >> 1) - ((v46 + v47) >> 1) * 2 * (((_BYTE)v46 + (_BYTE)v47) & 1);
    }
    else
    {
      unsigned int v35 = 0;
      v26[3 * v25] = v28;
    }
    uint64_t v50 = 0;
    a2[3 * v25 + 444] = v35;
    unint64_t v51 = (v32 + 1);
    int v20 = ((_BYTE)v32 + 1) & 7;
    unsigned int v21 = (unsigned int *)((char *)v33 + (v51 >> 3));
    unsigned int v22 = bswap32(*v21) << (v51 & 7);
    if (v21 > v3) {
      unsigned int v21 = v3;
    }
    do
    {
      if ((v34 & 0x80000000) != 0)
      {
        unsigned int v53 = __clz(v22 | 1);
        if (!v22) {
          ++v53;
        }
        unsigned int v54 = v22 << (v53 + 1) >> -(char)v53;
        if (!v53) {
          unsigned int v54 = 0;
        }
        int v55 = 1 << v53;
        unint64_t v56 = v20 + 2 * v53 + 1;
        int v57 = v56 & 7;
        unsigned int v58 = (unsigned int *)((char *)v21 + (v56 >> 3));
        unsigned int v59 = bswap32(*v58) << v57;
        if (v58 <= v3) {
          unsigned int v60 = v58;
        }
        else {
          unsigned int v60 = v3;
        }
        v30[v50 + 253] = ((v54 + v55) >> 1) - ((v54 + v55) >> 1) * 2 * ((v54 + v55) & 1);
        unsigned int v61 = __clz(v59 | 1);
        if (!v59) {
          ++v61;
        }
        if (v61) {
          unsigned int v62 = v59 << (v61 + 1) >> -(char)v61;
        }
        else {
          unsigned int v62 = 0;
        }
        int v63 = 1 << v61;
        unint64_t v64 = v57 + 2 * v61 + 1;
        int v20 = ((_BYTE)v57 + 2 * (_BYTE)v61 + 1) & 7;
        unsigned int v21 = (unsigned int *)((char *)v60 + (v64 >> 3));
        unsigned int v22 = bswap32(*v21) << (v64 & 7);
        if (v21 > v3) {
          unsigned int v21 = v3;
        }
        unsigned int v52 = ((v62 + v63) >> 1) - ((v62 + v63) >> 1) * 2 * (((_BYTE)v62 + (_BYTE)v63) & 1);
      }
      else
      {
        unsigned int v52 = 0;
        v30[v50 + 253] = v27;
      }
      v30[v50 + 445] = v52;
      ++v50;
    }
    while (v50 != 2);
    ++v25;
    v30 += 3;
  }
  while (v25 != v29);
  int v65 = a2[5];
  if (v65 != 6 && v65 != 1 || *(_DWORD *)(a3 + 68) != 1)
  {
LABEL_111:
    uint64_t v24 = 0;
    goto LABEL_112;
  }
  int v66 = a2[17];
  if ((v66 - 32) >= 0xFFFFFFDF)
  {
    uint64_t v67 = 0;
    if ((v66 + 1) > 1) {
      uint64_t v68 = (v66 + 1);
    }
    else {
      uint64_t v68 = 1;
    }
    uint64_t v69 = a2;
    do
    {
      unint64_t v70 = (v20 + 1);
      int v71 = ((_BYTE)v20 + 1) & 7;
      uint64_t v72 = (unsigned int *)((char *)v21 + (v70 >> 3));
      unsigned int v73 = bswap32(*v72) << (v70 & 7);
      if (v72 > v3) {
        uint64_t v72 = v3;
      }
      if ((v22 & 0x80000000) != 0)
      {
        unsigned int v75 = __clz(v73 | 1);
        if (!v73) {
          ++v75;
        }
        unsigned int v76 = v73 << (v75 + 1) >> -(char)v75;
        if (!v75) {
          unsigned int v76 = 0;
        }
        int v77 = 1 << v75;
        unint64_t v78 = v71 + 2 * v75 + 1;
        int v79 = v78 & 7;
        int v80 = (unsigned int *)((char *)v72 + (v78 >> 3));
        unsigned int v81 = bswap32(*v80) << v79;
        if (v80 <= v3) {
          int v82 = v80;
        }
        else {
          int v82 = v3;
        }
        a2[3 * v67 + 348] = ((v76 + v77) >> 1) - ((v76 + v77) >> 1) * 2 * ((v76 + v77) & 1);
        unsigned int v83 = __clz(v81 | 1);
        if (!v81) {
          ++v83;
        }
        unsigned int v84 = v81 << (v83 + 1) >> -(char)v83;
        if (v83) {
          unsigned int v85 = v84;
        }
        else {
          unsigned int v85 = 0;
        }
        int v86 = 1 << v83;
        unint64_t v87 = v79 + 2 * v83 + 1;
        int v71 = v87 & 7;
        unint64_t v88 = (unsigned int *)((char *)v82 + (v87 >> 3));
        unsigned int v73 = bswap32(*v88) << v71;
        if (v88 <= v3) {
          uint64_t v72 = v88;
        }
        else {
          uint64_t v72 = v3;
        }
        unsigned int v74 = ((v85 + v86) >> 1) - ((v85 + v86) >> 1) * 2 * (((_BYTE)v85 + (_BYTE)v86) & 1);
      }
      else
      {
        unsigned int v74 = 0;
        a2[3 * v67 + 348] = v28;
      }
      uint64_t v89 = 0;
      a2[3 * v67 + 540] = v74;
      unint64_t v90 = (v71 + 1);
      int v20 = ((_BYTE)v71 + 1) & 7;
      unsigned int v21 = (unsigned int *)((char *)v72 + (v90 >> 3));
      unsigned int v22 = bswap32(*v21) << (v90 & 7);
      if (v21 > v3) {
        unsigned int v21 = v3;
      }
      do
      {
        if ((v73 & 0x80000000) != 0)
        {
          unsigned int v92 = __clz(v22 | 1);
          if (!v22) {
            ++v92;
          }
          unsigned int v93 = v22 << (v92 + 1) >> -(char)v92;
          if (!v92) {
            unsigned int v93 = 0;
          }
          int v94 = 1 << v92;
          unint64_t v95 = v20 + 2 * v92 + 1;
          int v96 = v95 & 7;
          unint64_t v97 = (unsigned int *)((char *)v21 + (v95 >> 3));
          unsigned int v98 = bswap32(*v97) << v96;
          if (v97 <= v3) {
            int v99 = v97;
          }
          else {
            int v99 = v3;
          }
          v69[v89 + 349] = ((v93 + v94) >> 1) - ((v93 + v94) >> 1) * 2 * ((v93 + v94) & 1);
          unsigned int v100 = __clz(v98 | 1);
          if (!v98) {
            ++v100;
          }
          if (v100) {
            unsigned int v101 = v98 << (v100 + 1) >> -(char)v100;
          }
          else {
            unsigned int v101 = 0;
          }
          int v102 = 1 << v100;
          unint64_t v103 = v96 + 2 * v100 + 1;
          int v20 = ((_BYTE)v96 + 2 * (_BYTE)v100 + 1) & 7;
          unsigned int v21 = (unsigned int *)((char *)v99 + (v103 >> 3));
          unsigned int v22 = bswap32(*v21) << (v103 & 7);
          if (v21 > v3) {
            unsigned int v21 = v3;
          }
          unsigned int v91 = ((v101 + v102) >> 1) - ((v101 + v102) >> 1) * 2 * (((_BYTE)v101 + (_BYTE)v102) & 1);
        }
        else
        {
          unsigned int v91 = 0;
          v69[v89 + 349] = v27;
        }
        v69[v89 + 541] = v91;
        ++v89;
      }
      while (v89 != 2);
      ++v67;
      v69 += 3;
    }
    while (v67 != v68);
    goto LABEL_111;
  }
LABEL_16:
  uint64_t v24 = 4294958327;
LABEL_112:
  *(void *)(a1 + 16) = v21;
  *(_DWORD *)(a1 + 32) = v22;
  *(unsigned char *)(a1 + 36) = v20;
  return v24;
}

uint64_t sub_221A24028(unsigned int *a1, uint64_t a2)
{
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t result = sub_2219F39EC((uint64_t)a1, *(_DWORD *)(a2 + 24), &v7);
  if (!result)
  {
    uint64_t result = sub_2219F39A8(a1, *(_DWORD *)(v7 + 4), &v8);
    if (!result)
    {
      if (*(unsigned char *)(v8 + 1336))
      {
        if (*(unsigned char *)(a2 + 32)) {
          return 4294958327;
        }
        int v5 = *(_DWORD *)(v8 + 1332) + 1;
      }
      else
      {
        int v6 = *(_DWORD *)(v8 + 1332);
        if (*(unsigned char *)(a2 + 32)) {
          int v5 = v6 + 1;
        }
        else {
          int v5 = 2 * v6 + 2;
        }
      }
      if (*(_DWORD *)(a2 + 12) > (v5 + v5 * *(_DWORD *)(v8 + 1328))) {
        return 4294958327;
      }
      uint64_t result = 4294958327;
      if ((*(_DWORD *)(v7 + 72) + *(_DWORD *)(a2 + 2720) + 26) <= 0x33)
      {
        if (*(unsigned __int8 *)(a2 + 2716) <= 2u) {
          return 0;
        }
        else {
          return 4294958327;
        }
      }
    }
  }
  return result;
}

uint64_t sub_221A24100(uint64_t result, int a2)
{
  uint64_t v2 = *(void *)(result + 16);
  int v3 = *(unsigned __int8 *)(result + 36);
  if (a2 < 1)
  {
    unsigned int v7 = *(_DWORD *)(result + 32);
  }
  else
  {
    int v4 = v3 & 7;
    do
    {
      uint64_t v5 = (v3 + 8) >> 3;
      int v6 = (unsigned int *)(v2 + v5);
      if ((unint64_t)(v2 + v5) <= *(void *)(result + 24)) {
        v2 += v5;
      }
      else {
        uint64_t v2 = *(void *)(result + 24);
      }
      int v3 = v4;
      --a2;
    }
    while (a2);
    unsigned int v7 = bswap32(*v6) << v4;
    LOBYTE(v3) = v4;
  }
  *(void *)(result + 16) = v2;
  *(_DWORD *)(result + 32) = v7;
  *(unsigned char *)(result + 36) = v3;
  return result;
}

uint64_t sub_221A24160(uint64_t a1, int a2, _DWORD *a3)
{
  int v3 = a3 + 36548;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(unsigned int **)(a1 + 24);
  int v6 = *(_DWORD *)(a1 + 32);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v8 = __clz(v6 | 1);
  if (!v6) {
    ++v8;
  }
  if (v8 > 0xC)
  {
    unint64_t v15 = v7 + 1;
    int v16 = v15 & 7;
    unsigned int v17 = (unsigned int *)(v4 + (v15 >> 3));
    unsigned int v18 = bswap32(*v17) << v16;
    if (v17 > v5) {
      unsigned int v17 = *(unsigned int **)(a1 + 24);
    }
    if (v6 < 0)
    {
      unsigned int v22 = 0;
    }
    else
    {
      unsigned int v19 = 0;
      do
      {
        char v20 = v16;
        unsigned int v21 = v18;
        unsigned int v22 = v19 + 1;
        unint64_t v23 = (v16 + 1);
        int v16 = ((_BYTE)v16 + 1) & 7;
        unsigned int v17 = (unsigned int *)((char *)v17 + (v23 >> 3));
        unsigned int v18 = bswap32(*v17) << (v23 & 7);
        if (v17 > v5) {
          unsigned int v17 = *(unsigned int **)(a1 + 24);
        }
        if ((v21 & 0x80000000) != 0) {
          break;
        }
      }
      while (v19++ < 0x1F);
      if (v22 - 1 > 0x17)
      {
        unsigned int v25 = v18 >> (48 - v22);
        unsigned int v26 = ((v20 + 1) & 7) + v22;
        unint64_t v27 = v26 - 16;
        int v11 = v26 & 7;
        int v28 = (unsigned int *)((char *)v17 + (v27 >> 3));
        unsigned int v29 = bswap32(*v28) << v11;
        if (v28 <= v5) {
          unint64_t v30 = v28;
        }
        else {
          unint64_t v30 = *(unsigned int **)(a1 + 24);
        }
        unsigned int v31 = *(unsigned int *)((char *)v30 + 2);
        unsigned int v14 = (unsigned int *)((char *)v30 + 2);
        unsigned int v13 = bswap32(v31) << v11;
        if (v14 > v5) {
          unsigned int v14 = *(unsigned int **)(a1 + 24);
        }
        int v32 = __PAIR64__(v25, v29) >> 16;
LABEL_28:
        *int v3 = v32 + ~(-1 << v22);
        goto LABEL_29;
      }
    }
    int v32 = v18 >> -(char)v22;
    unint64_t v33 = v16 + v22;
    int v11 = ((_BYTE)v16 + (_BYTE)v22) & 7;
    unsigned int v14 = (unsigned int *)((char *)v17 + (v33 >> 3));
    unsigned int v13 = bswap32(*v14) << v11;
    if (v14 > v5) {
      unsigned int v14 = *(unsigned int **)(a1 + 24);
    }
    goto LABEL_28;
  }
  unsigned int v9 = (v6 << (v8 + 1)) >> -(char)v8;
  if (!v8) {
    unsigned int v9 = 0;
  }
  *int v3 = v9 + ~(-1 << v8);
  unint64_t v10 = v7 + 2 * v8 + 1;
  int v11 = ((_BYTE)v7 + 2 * (_BYTE)v8 + 1) & 7;
  int v12 = (unsigned int *)(v4 + (v10 >> 3));
  unsigned int v13 = bswap32(*v12) << v11;
  if (v12 <= v5) {
    unsigned int v14 = v12;
  }
  else {
    unsigned int v14 = v5;
  }
LABEL_29:
  a3[36549] = v13 >> 31;
  int v34 = ((_BYTE)v11 + 1) & 7;
  unsigned int v35 = (unsigned int *)((char *)v14 + ((unint64_t)(v11 + 1) >> 3));
  unsigned int v36 = bswap32(*v35) << v34;
  if (v35 > v5) {
    unsigned int v35 = v5;
  }
  a3[36550] = v36 >> 31;
  unint64_t v37 = (v34 + 1);
  int v38 = v37 & 7;
  unint64_t v39 = (unsigned int *)((char *)v35 + (v37 >> 3));
  unsigned int v40 = bswap32(*v39) << (v37 & 7);
  if (v39 > v5) {
    unint64_t v39 = v5;
  }
  a3[36551] = v40 >> 30;
  unsigned int v41 = (unsigned int *)((char *)v39 + ((v38 + 2) >> 3));
  if (v41 > v5) {
    unsigned int v41 = v5;
  }
  if ((((_BYTE)v38 + 2) & 7) != 0) {
    unsigned int v42 = (unsigned int *)((char *)v41 + 1);
  }
  else {
    unsigned int v42 = v41;
  }
  if (v42 <= v5) {
    uint64_t v5 = v42;
  }
  unsigned int v43 = bswap32(*v5);
  unsigned int v44 = (char *)v5 - v4;
  if ((uint64_t)v44 <= a2) {
    unsigned int v45 = 0;
  }
  else {
    unsigned int v45 = -8969;
  }
  *(void *)(a1 + 16) = v5;
  if (((a2 - v44) & 0x1FFFFFFF) != 0) {
    uint64_t v46 = 4294958327;
  }
  else {
    uint64_t v46 = v45;
  }
  *(_DWORD *)(a1 + 32) = v43;
  *(unsigned char *)(a1 + 36) = 0;
  return v46;
}

uint64_t sub_221A24398(uint64_t a1, int a2, unsigned int *a3)
{
  uint64_t v4 = (int *)(a3 + 36554);
  uint64_t v5 = *(void *)(a1 + 16);
  int v6 = *(unsigned int **)(a1 + 24);
  int v7 = *(_DWORD *)(a1 + 32);
  int v8 = *(unsigned __int8 *)(a1 + 36);
  uint64_t v70 = 0;
  unsigned int v9 = __clz(v7 | 1);
  if (!v7) {
    ++v9;
  }
  unsigned int v10 = (v7 << (v9 + 1)) >> -(char)v9;
  if (!v9) {
    unsigned int v10 = 0;
  }
  int v11 = v10 + ~(-1 << v9);
  int *v4 = v11;
  unint64_t v12 = v8 + 2 * v9 + 1;
  unsigned int v13 = (unsigned int *)(v5 + (v12 >> 3));
  if (v13 <= v6) {
    unsigned int v14 = (unsigned int *)(v5 + (v12 >> 3));
  }
  else {
    unsigned int v14 = v6;
  }
  if (v11 > 31) {
    return 4294958327;
  }
  unsigned int v17 = *v13;
  if (sub_2219F39A8(a3, v11, &v70)) {
    return 4294958327;
  }
  int v18 = v12 & 7;
  unsigned int v19 = bswap32(v17) << (v12 & 7);
  v4[91] = *v4;
  v4[92] = 1;
  uint64_t v20 = v70;
  if (*(unsigned char *)(v70 + 1425))
  {
    unsigned int v21 = 0;
    do
    {
      int v22 = *(_DWORD *)(v20 + 1852);
      if ((v22 + 1) > 0x18)
      {
        unsigned int v28 = v19 >> (47 - v22);
        unint64_t v29 = (v18 + v22 - 15);
        int v25 = ((_BYTE)v18 + (_BYTE)v22 - 15) & 7;
        unint64_t v30 = (unsigned int *)((char *)v14 + (v29 >> 3));
        unsigned int v31 = bswap32(*v30) << v25;
        if (v30 > v6) {
          unint64_t v30 = v6;
        }
        unsigned int v32 = *(unsigned int *)((char *)v30 + 2);
        unsigned int v26 = (unsigned int *)((char *)v30 + 2);
        unsigned int v27 = bswap32(v32) << v25;
        if (v26 > v6) {
          unsigned int v26 = v6;
        }
        unsigned int v23 = __PAIR64__(v28, v31) >> 16;
      }
      else
      {
        unsigned int v23 = v19 >> ~(_BYTE)v22;
        unint64_t v24 = (v22 + 1 + v18);
        int v25 = ((_BYTE)v22 + 1 + (_BYTE)v18) & 7;
        unsigned int v26 = (unsigned int *)((char *)v14 + (v24 >> 3));
        unsigned int v27 = bswap32(*v26) << v25;
        if (v26 > v6) {
          unsigned int v26 = v6;
        }
      }
      a3[v21 + 36556] = v23;
      int v33 = *(_DWORD *)(v20 + 1852);
      if ((v33 + 1) > 0x18)
      {
        unsigned int v37 = v27 >> (47 - v33);
        unint64_t v38 = (v25 + v33 - 15);
        int v18 = v38 & 7;
        unint64_t v39 = (unsigned int *)((char *)v26 + (v38 >> 3));
        unsigned int v40 = bswap32(*v39) << (v38 & 7);
        if (v39 <= v6) {
          unsigned int v41 = v39;
        }
        else {
          unsigned int v41 = v6;
        }
        unsigned int v43 = *(unsigned int *)((char *)v41 + 2);
        unsigned int v42 = (unsigned int *)((char *)v41 + 2);
        unsigned int v19 = bswap32(v43) << v18;
        if (v42 <= v6) {
          unsigned int v14 = v42;
        }
        else {
          unsigned int v14 = v6;
        }
        unsigned int v34 = __PAIR64__(v37, v40) >> 16;
      }
      else
      {
        unsigned int v34 = v27 >> ~(_BYTE)v33;
        unint64_t v35 = (v33 + 1 + v25);
        int v18 = v35 & 7;
        unsigned int v36 = (unsigned int *)((char *)v26 + (v35 >> 3));
        unsigned int v19 = bswap32(*v36) << v18;
        if (v36 <= v6) {
          unsigned int v14 = v36;
        }
        else {
          unsigned int v14 = v6;
        }
      }
      a3[v21++ + 36588] = v34;
    }
    while (v21 <= *(_DWORD *)(v20 + 1456));
  }
  if (*(unsigned char *)(v20 + 1426))
  {
    unsigned int v44 = 0;
    do
    {
      int v45 = *(_DWORD *)(v20 + 1852);
      if ((v45 + 1) > 0x18)
      {
        unsigned int v51 = v19 >> (47 - v45);
        unint64_t v52 = (v18 + v45 - 15);
        int v48 = ((_BYTE)v18 + (_BYTE)v45 - 15) & 7;
        unsigned int v53 = (unsigned int *)((char *)v14 + (v52 >> 3));
        unsigned int v54 = bswap32(*v53) << v48;
        if (v53 > v6) {
          unsigned int v53 = v6;
        }
        unsigned int v55 = *(unsigned int *)((char *)v53 + 2);
        unsigned int v49 = (unsigned int *)((char *)v53 + 2);
        unsigned int v50 = bswap32(v55) << v48;
        if (v49 > v6) {
          unsigned int v49 = v6;
        }
        unsigned int v46 = __PAIR64__(v51, v54) >> 16;
      }
      else
      {
        unsigned int v46 = v19 >> ~(_BYTE)v45;
        unint64_t v47 = (v45 + 1 + v18);
        int v48 = ((_BYTE)v45 + 1 + (_BYTE)v18) & 7;
        unsigned int v49 = (unsigned int *)((char *)v14 + (v47 >> 3));
        unsigned int v50 = bswap32(*v49) << v48;
        if (v49 > v6) {
          unsigned int v49 = v6;
        }
      }
      a3[v44 + 36556] = v46;
      int v56 = *(_DWORD *)(v20 + 1852);
      if ((v56 + 1) > 0x18)
      {
        unsigned int v60 = v50 >> (47 - v56);
        unint64_t v61 = (v48 + v56 - 15);
        int v18 = v61 & 7;
        unsigned int v62 = (unsigned int *)((char *)v49 + (v61 >> 3));
        unsigned int v63 = bswap32(*v62) << (v61 & 7);
        if (v62 <= v6) {
          unint64_t v64 = v62;
        }
        else {
          unint64_t v64 = v6;
        }
        unsigned int v66 = *(unsigned int *)((char *)v64 + 2);
        int v65 = (unsigned int *)((char *)v64 + 2);
        unsigned int v19 = bswap32(v66) << v18;
        if (v65 <= v6) {
          unsigned int v14 = v65;
        }
        else {
          unsigned int v14 = v6;
        }
        unsigned int v57 = __PAIR64__(v60, v63) >> 16;
      }
      else
      {
        unsigned int v57 = v50 >> ~(_BYTE)v56;
        unint64_t v58 = (v56 + 1 + v48);
        int v18 = v58 & 7;
        unsigned int v59 = (unsigned int *)((char *)v49 + (v58 >> 3));
        unsigned int v19 = bswap32(*v59) << v18;
        if (v59 <= v6) {
          unsigned int v14 = v59;
        }
        else {
          unsigned int v14 = v6;
        }
      }
      a3[v44++ + 36588] = v57;
    }
    while (v44 <= *(_DWORD *)(v20 + 1456));
  }
  uint64_t v67 = v18 ? (unsigned int *)((char *)v14 + 1) : v14;
  if (v67 > v6) {
    uint64_t v67 = v6;
  }
  if ((uint64_t)v67 - v5 > a2) {
    return 4294958327;
  }
  uint64_t result = 0;
  unsigned int v69 = bswap32(*v67);
  *(void *)(a1 + 16) = v67;
  *(_DWORD *)(a1 + 32) = v69;
  *(unsigned char *)(a1 + 36) = 0;
  return result;
}

uint64_t sub_221A24750(uint64_t a1, int a2, uint64_t a3)
{
  int v3 = (void *)(a3 + 146560);
  uint64_t v4 = *(unsigned int **)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  unsigned int v6 = *(_DWORD *)(a1 + 32);
  int v7 = *(unsigned __int8 *)(a1 + 36);
  int v8 = a2 - 17;
  if (a2 >= 17)
  {
    uint64_t v11 = 0;
    int v9 = v7 & 7;
    do
    {
      *((unsigned char *)v3 + v11) = HIBYTE(v6);
      uint64_t v4 = (unsigned int *)((char *)v4 + ((unint64_t)(v7 + 8) >> 3));
      unsigned int v6 = bswap32(*v4) << v9;
      if ((unint64_t)v4 > v5) {
        uint64_t v4 = (unsigned int *)v5;
      }
      ++v11;
      int v7 = v9;
    }
    while (v11 != 16);
    if (*v3 == 0x674D1BC93BCC5E61 && *(void *)(a3 + 146568) == 0x7AA09944698764BDLL)
    {
      *(unsigned char *)(a3 + 146576) = 1;
      *(unsigned char *)(a3 + 146577) = HIBYTE(v6);
      unsigned int v13 = *(unsigned int *)((char *)v4 + 1);
      uint64_t v4 = (unsigned int *)((char *)v4 + 1);
      int v14 = HIBYTE(v6) & 0xF;
      unsigned int v15 = v6 >> 28;
      unsigned int v16 = bswap32(v13) << v9;
      if ((unint64_t)v4 > v5) {
        uint64_t v4 = (unsigned int *)v5;
      }
      *(unsigned char *)(a3 + 146578) = v14;
      *(unsigned char *)(a3 + 146579) = v15;
      unsigned int v6 = v16;
    }
    else
    {
      int v8 = a2 - 16;
      *(unsigned char *)(a3 + 146576) = 0;
    }
    if (v8 >= 1)
    {
      do
      {
        unsigned int v17 = (unsigned int *)((char *)v4 + 1);
        if ((unint64_t)v4 + 1 <= v5) {
          uint64_t v4 = (unsigned int *)((char *)v4 + 1);
        }
        else {
          uint64_t v4 = (unsigned int *)v5;
        }
        --v8;
      }
      while (v8);
      unsigned int v6 = bswap32(*v17) << v9;
    }
  }
  else
  {
    if (a2 < 1)
    {
      LOBYTE(v9) = *(unsigned char *)(a1 + 36);
    }
    else
    {
      int v9 = v7 & 7;
      do
      {
        unsigned int v10 = (unsigned int *)((char *)v4 + ((v7 + 8) >> 3));
        if ((unint64_t)v10 <= v5) {
          uint64_t v4 = (unsigned int *)((char *)v4 + ((v7 + 8) >> 3));
        }
        else {
          uint64_t v4 = *(unsigned int **)(a1 + 24);
        }
        int v7 = v9;
        --a2;
      }
      while (a2);
      unsigned int v6 = bswap32(*v10) << v9;
    }
    *(unsigned char *)(a3 + 146576) = 0;
  }
  *(void *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 36) = v9;
  return 0;
}

uint64_t sub_221A248A0(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v4 = a3 + 36620;
  unsigned int v6 = *(unsigned int **)(a1 + 16);
  unint64_t v5 = *(unsigned int **)(a1 + 24);
  unsigned int v7 = *(_DWORD *)(a1 + 32);
  int v8 = *(unsigned __int8 *)(a1 + 36);
  uint64_t v99 = 0;
  if (sub_2219F39A8(a3, a3[36645], &v99)) {
    return 4294958327;
  }
  uint64_t v10 = v99;
  if (*(unsigned char *)(v99 + 1425) || *(unsigned char *)(v99 + 1426))
  {
    int v11 = *(_DWORD *)(v99 + 1856);
    if ((v11 + 1) > 0x18)
    {
      unsigned int v17 = v7 >> (47 - v11);
      unint64_t v18 = (v8 + v11 - 15);
      int v14 = ((_BYTE)v8 + (_BYTE)v11 - 15) & 7;
      unsigned int v19 = (unsigned int *)((char *)v6 + (v18 >> 3));
      unsigned int v20 = bswap32(*v19) << v14;
      if (v19 > v5) {
        unsigned int v19 = v5;
      }
      unsigned int v21 = *(unsigned int *)((char *)v19 + 2);
      unsigned int v15 = (unsigned int *)((char *)v19 + 2);
      unsigned int v16 = bswap32(v21) << v14;
      if (v15 > v5) {
        unsigned int v15 = v5;
      }
      int v12 = __PAIR64__(v17, v20) >> 16;
    }
    else
    {
      int v12 = v7 >> ~(_BYTE)v11;
      unint64_t v13 = (v11 + 1 + v8);
      int v14 = ((_BYTE)v11 + 1 + (_BYTE)v8) & 7;
      unsigned int v15 = (unsigned int *)((char *)v6 + (v13 >> 3));
      unsigned int v16 = bswap32(*v15) << v14;
      if (v15 > v5) {
        unsigned int v15 = v5;
      }
    }
    _DWORD *v4 = v12;
    int v22 = *(_DWORD *)(v10 + 1860);
    if ((v22 + 1) > 0x18)
    {
      unsigned int v26 = v16 >> (47 - v22);
      unint64_t v27 = (v14 + v22 - 15);
      int v8 = v27 & 7;
      unsigned int v28 = (unsigned int *)((char *)v15 + (v27 >> 3));
      unsigned int v29 = bswap32(*v28) << v8;
      if (v28 > v5) {
        unsigned int v28 = v5;
      }
      unsigned int v31 = *(unsigned int *)((char *)v28 + 2);
      unint64_t v30 = (unsigned int *)((char *)v28 + 2);
      unsigned int v7 = bswap32(v31) << v8;
      if (v30 <= v5) {
        unsigned int v6 = v30;
      }
      else {
        unsigned int v6 = v5;
      }
      int v23 = __PAIR64__(v26, v29) >> 16;
    }
    else
    {
      int v23 = v16 >> ~(_BYTE)v22;
      unint64_t v24 = (v22 + 1 + v14);
      int v8 = v24 & 7;
      int v25 = (unsigned int *)((char *)v15 + (v24 >> 3));
      unsigned int v7 = bswap32(*v25) << v8;
      if (v25 <= v5) {
        unsigned int v6 = v25;
      }
      else {
        unsigned int v6 = v5;
      }
    }
    v4[1] = v23;
  }
  if (*(unsigned char *)(v10 + 1428))
  {
    unsigned int v32 = v7 >> 28;
    v4[2] = v7 >> 28;
    uint64_t v33 = (v8 + 4) >> 3;
    int v8 = (v8 + 4) & 7;
    unsigned int v34 = (unsigned int *)((char *)v6 + v33);
    if ((unsigned int *)((char *)v6 + v33) <= v5) {
      unsigned int v6 = (unsigned int *)((char *)v6 + v33);
    }
    else {
      unsigned int v6 = v5;
    }
    if (v32 <= 8)
    {
      unsigned int v35 = bswap32(*v34) << v8;
      uint64_t v36 = qword_221A3E6F0[v32];
      unsigned int v37 = v4 + 3;
      while (1)
      {
        *unsigned int v37 = v35 >> 31;
        unint64_t v38 = (v8 + 1);
        int v8 = ((_BYTE)v8 + 1) & 7;
        unint64_t v39 = (unsigned int *)((char *)v6 + (v38 >> 3));
        unsigned int v40 = bswap32(*v39) << (v38 & 7);
        unsigned int v6 = v39 <= v5 ? v39 : v5;
        if ((v35 & 0x80000000) != 0) {
          break;
        }
        unsigned int v35 = v40;
LABEL_92:
        ++v37;
        if (!--v36) {
          goto LABEL_93;
        }
      }
      v4[6] = v40 >> 30;
      int v41 = ((_BYTE)v8 + 2) & 7;
      unsigned int v42 = (unsigned int *)((char *)v6 + ((unint64_t)(v8 + 2) >> 3));
      unsigned int v43 = bswap32(*v42) << v41;
      if (v42 > v5) {
        unsigned int v42 = v5;
      }
      v4[7] = v43 >> 31;
      unint64_t v44 = (v41 + 1);
      int v45 = v44 & 7;
      unsigned int v46 = (unsigned int *)((char *)v42 + (v44 >> 3));
      unsigned int v47 = bswap32(*v46) << (v44 & 7);
      if (v46 > v5) {
        unsigned int v46 = v5;
      }
      v4[8] = v47 >> 27;
      int v48 = (unsigned int *)((char *)v46 + ((unint64_t)(v45 + 5) >> 3));
      unsigned int v49 = bswap32(*v48) << ((v45 + 5) & 7);
      if (v48 > v5) {
        int v48 = v5;
      }
      v4[9] = v49 >> 31;
      unint64_t v50 = (((_BYTE)v45 + 5) & 7u) + 1;
      int v51 = ((((_BYTE)v45 + 5) & 7) + 1) & 7;
      unint64_t v52 = (unsigned int *)((char *)v48 + (v50 >> 3));
      unsigned int v53 = bswap32(*v52) << (v50 & 7);
      if (v52 > v5) {
        unint64_t v52 = v5;
      }
      v4[10] = v53 >> 31;
      unint64_t v54 = (v51 + 1);
      int v55 = ((_BYTE)v51 + 1) & 7;
      int v56 = (unsigned int *)((char *)v52 + (v54 >> 3));
      unsigned int v57 = bswap32(*v56) << (v54 & 7);
      if (v56 <= v5) {
        unint64_t v58 = v56;
      }
      else {
        unint64_t v58 = v5;
      }
      v4[11] = v57 >> 31;
      int v59 = ((_BYTE)v55 + 1) & 7;
      unsigned int v60 = (unsigned int *)((char *)v58 + ((unint64_t)(v55 + 1) >> 3));
      unsigned int v61 = bswap32(*v60) << v59;
      if (v60 <= v5) {
        unsigned int v62 = v60;
      }
      else {
        unsigned int v62 = v5;
      }
      v4[12] = HIBYTE(v61);
      unsigned int v64 = *(unsigned int *)((char *)v62 + 1);
      unsigned int v63 = (unsigned int *)((char *)v62 + 1);
      unsigned int v65 = bswap32(v64) << v59;
      if (v63 <= v5) {
        unsigned int v66 = v63;
      }
      else {
        unsigned int v66 = v5;
      }
      if ((v49 & 0x80000000) != 0)
      {
        v4[13] = v65 >> 26;
        unint64_t v79 = (v59 + 6);
        int v80 = v79 & 7;
        unsigned int v81 = (unsigned int *)((char *)v66 + (v79 >> 3));
        unsigned int v82 = bswap32(*v81) << v80;
        if (v81 > v5) {
          unsigned int v81 = v5;
        }
        v4[14] = v82 >> 26;
        unint64_t v83 = (v80 + 6);
        int v8 = v83 & 7;
        unsigned int v84 = (unsigned int *)((char *)v81 + (v83 >> 3));
        unsigned int v35 = bswap32(*v84) << v8;
        if (v84 <= v5) {
          unsigned int v6 = v84;
        }
        else {
          unsigned int v6 = v5;
        }
      }
      else
      {
        v4[16] = v65 >> 31;
        unint64_t v67 = (v59 + 1);
        int v8 = v67 & 7;
        uint64_t v68 = (unsigned int *)((char *)v66 + (v67 >> 3));
        unsigned int v35 = bswap32(*v68) << (v67 & 7);
        if (v68 <= v5) {
          unsigned int v6 = v68;
        }
        else {
          unsigned int v6 = v5;
        }
        if ((v65 & 0x80000000) == 0) {
          goto LABEL_79;
        }
        v4[13] = v35 >> 26;
        int v69 = ((_BYTE)v8 + 6) & 7;
        uint64_t v70 = (unsigned int *)((char *)v6 + ((unint64_t)(v8 + 6) >> 3));
        unsigned int v71 = bswap32(*v70) << v69;
        if (v70 > v5) {
          uint64_t v70 = v5;
        }
        v4[17] = v71 >> 31;
        unint64_t v72 = (v69 + 1);
        int v8 = v72 & 7;
        unsigned int v73 = (unsigned int *)((char *)v70 + (v72 >> 3));
        unsigned int v35 = bswap32(*v73) << v8;
        unsigned int v6 = v73 <= v5 ? v73 : v5;
        if ((v71 & 0x80000000) == 0) {
          goto LABEL_79;
        }
        v4[14] = v35 >> 26;
        int v74 = ((_BYTE)v8 + 6) & 7;
        unsigned int v75 = (unsigned int *)((char *)v6 + ((unint64_t)(v8 + 6) >> 3));
        unsigned int v76 = bswap32(*v75) << v74;
        if (v75 > v5) {
          unsigned int v75 = v5;
        }
        v4[18] = v76 >> 31;
        unint64_t v77 = (v74 + 1);
        int v8 = v77 & 7;
        unint64_t v78 = (unsigned int *)((char *)v75 + (v77 >> 3));
        unsigned int v35 = bswap32(*v78) << v8;
        unsigned int v6 = v78 <= v5 ? v78 : v5;
        if ((v76 & 0x80000000) == 0) {
          goto LABEL_79;
        }
      }
      v4[15] = v35 >> 27;
      unint64_t v85 = (v8 + 5);
      int v8 = ((_BYTE)v8 + 5) & 7;
      int v86 = (unsigned int *)((char *)v6 + (v85 >> 3));
      unsigned int v35 = bswap32(*v86) << (v85 & 7);
      if (v86 <= v5) {
        unsigned int v6 = v86;
      }
      else {
        unsigned int v6 = v5;
      }
LABEL_79:
      unsigned int v87 = *(_DWORD *)(v10 + 1864);
      if (v87)
      {
        unint64_t v88 = v87 + v8;
        if (v87 > 0x18)
        {
          unsigned int v91 = v35 >> (48 - v87);
          int v8 = v88 & 7;
          unsigned int v92 = (unsigned int *)((char *)v6 + ((unint64_t)(v88 - 16) >> 3));
          unsigned int v93 = bswap32(*v92) << (v88 & 7);
          if (v92 <= v5) {
            int v94 = v92;
          }
          else {
            int v94 = v5;
          }
          unsigned int v96 = *(unsigned int *)((char *)v94 + 2);
          unint64_t v95 = (unsigned int *)((char *)v94 + 2);
          unsigned int v35 = bswap32(v96) << v8;
          if (v95 <= v5) {
            unsigned int v6 = v95;
          }
          else {
            unsigned int v6 = v5;
          }
          int v89 = __PAIR64__(v91, v93) >> 16;
        }
        else
        {
          int v89 = v35 >> -(char)v87;
          int v8 = v88 & 7;
          unint64_t v90 = (unsigned int *)((char *)v6 + (v88 >> 3));
          unsigned int v35 = bswap32(*v90) << v8;
          if (v90 <= v5) {
            unsigned int v6 = v90;
          }
          else {
            unsigned int v6 = v5;
          }
        }
        v4[19] = v89;
      }
      goto LABEL_92;
    }
  }
LABEL_93:
  uint64_t result = 0;
  if (v8) {
    unint64_t v97 = (unsigned int *)((char *)v6 + 1);
  }
  else {
    unint64_t v97 = v6;
  }
  if (v97 > v5) {
    unint64_t v97 = v5;
  }
  unsigned int v98 = *v97;
  *(void *)(a1 + 16) = v97;
  *(_DWORD *)(a1 + 32) = bswap32(v98);
  *(unsigned char *)(a1 + 36) = 0;
  return result;
}

uint64_t sub_221A24DCC(uint64_t a1, unsigned int *a2)
{
  unint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(unsigned __int8 *)(a1 + 36) + 1;
  unint64_t v4 = *(void *)(a1 + 16) + (v3 >> 3);
  if (v4 > v2) {
    unint64_t v4 = *(void *)(a1 + 24);
  }
  uint64_t v5 = 4294958327;
  if ((*(_DWORD *)(a1 + 32) & 0x80000000) != 0) {
    return v5;
  }
  unsigned int v6 = (unsigned int *)(v4 + ((unint64_t)((v3 & 7) + 2) >> 3));
  if (((bswap32(*v6) << (((v3 & 7) + 2) & 7)) & 0xF8000000) != 0x30000000) {
    return v5;
  }
  uint64_t v5 = 0;
  if ((unint64_t)v6 > v2) {
    unsigned int v6 = *(unsigned int **)(a1 + 24);
  }
  unint64_t v9 = (((v3 & 7) + 2) & 7) + 5;
  uint64_t v10 = (unsigned int *)((char *)v6 + (v9 >> 3));
  if ((unint64_t)v10 <= v2) {
    int v11 = (unsigned int *)((char *)v6 + (v9 >> 3));
  }
  else {
    int v11 = *(unsigned int **)(a1 + 24);
  }
  LODWORD(v9) = v9 & 7;
  unsigned int v12 = bswap32(*v10) << v9;
  while (2)
  {
    unint64_t v13 = (v9 + 8);
    char v14 = v9 & 7;
    unsigned int v15 = (unsigned int *)((char *)v11 + (v13 >> 3));
    unsigned int v16 = bswap32(*v15);
    if ((unint64_t)v15 <= v2) {
      unsigned int v17 = v15;
    }
    else {
      unsigned int v17 = (unsigned int *)v2;
    }
    unsigned int v18 = v16 << v14;
    unsigned int v19 = HIBYTE(v12);
    if (v19 == 255)
    {
      int v20 = 0;
      do
      {
        v20 += 255;
        unsigned int v21 = *(unsigned int *)((char *)v17 + 1);
        unsigned int v17 = (unsigned int *)((char *)v17 + 1);
        unsigned int v22 = bswap32(v21);
        if ((unint64_t)v17 > v2) {
          unsigned int v17 = (unsigned int *)v2;
        }
        unsigned int v19 = HIBYTE(v18);
        unsigned int v18 = v22 << v14;
      }
      while (v19 == 255);
    }
    else
    {
      int v20 = 0;
    }
    unsigned int v24 = *(unsigned int *)((char *)v17 + 1);
    int v23 = (char *)v17 + 1;
    unsigned int v25 = bswap32(v24);
    if ((unint64_t)v23 > v2) {
      int v23 = (char *)v2;
    }
    unsigned int v26 = v25 << v14;
    unsigned int v27 = HIBYTE(v18);
    if (HIBYTE(v18) == 255)
    {
      int v28 = 0;
      do
      {
        v28 += 255;
        unsigned int v29 = *(_DWORD *)++v23;
        unsigned int v30 = bswap32(v29);
        if ((unint64_t)v23 > v2) {
          int v23 = (char *)v2;
        }
        unsigned int v27 = HIBYTE(v26);
        unsigned int v26 = v30 << v14;
      }
      while (v27 == 255);
    }
    else
    {
      int v28 = 0;
    }
    uint64_t v31 = v28 + v27;
    if ((unint64_t)&v23[v31] > *(void *)a1 + (unint64_t)*(unsigned int *)(a1 + 8)) {
      return 4294958327;
    }
    *(void *)(a1 + 16) = v23;
    *(_DWORD *)(a1 + 32) = v26;
    *(unsigned char *)(a1 + 36) = v14;
    switch(v20 + v19)
    {
      case 0u:
        uint64_t v32 = sub_221A24398(a1, v31, a2);
        goto LABEL_37;
      case 1u:
        uint64_t v5 = sub_221A248A0(a1, v31, a2);
        goto LABEL_38;
      case 5u:
        sub_221A24750(a1, v31, (uint64_t)a2);
        uint64_t v5 = 0;
        goto LABEL_38;
      case 6u:
        uint64_t v32 = sub_221A24160(a1, v31, a2);
LABEL_37:
        uint64_t v5 = v32;
        if (!v32) {
          goto LABEL_38;
        }
        return v5;
      default:
        sub_221A24100(a1, v31);
LABEL_38:
        int v11 = *(unsigned int **)(a1 + 16);
        unint64_t v2 = *(void *)(a1 + 24);
        unsigned int v12 = *(_DWORD *)(a1 + 32);
        unint64_t v9 = *(unsigned __int8 *)(a1 + 36);
        if (HIBYTE(v12) != 128)
        {
          if (*(_DWORD *)(a1 + 8) <= (int)v11 - *(_DWORD *)a1)
          {
            if (!v5) {
              goto LABEL_50;
            }
            return v5;
          }
          continue;
        }
        unint64_t v33 = v9 + 1;
        LOBYTE(v9) = 0;
        int v11 = (unsigned int *)((char *)v11 + (v33 >> 3));
        if ((unint64_t)v11 > v2) {
          int v11 = *(unsigned int **)(a1 + 24);
        }
        if ((v33 & 7) != 0) {
          int v11 = (unsigned int *)((char *)v11 + 1);
        }
        if ((unint64_t)v11 > v2) {
          int v11 = *(unsigned int **)(a1 + 24);
        }
        unsigned int v12 = bswap32(*v11);
        if (!v5)
        {
LABEL_50:
          *(void *)(a1 + 16) = v11;
          *(_DWORD *)(a1 + 32) = v12;
          *(unsigned char *)(a1 + 36) = v9;
        }
        return v5;
    }
  }
}

uint64_t sub_221A25064(int a1, int a2)
{
  if (a1 + a2 >= 51) {
    int v2 = 51;
  }
  else {
    int v2 = a1 + a2;
  }
  return byte_221A3E738[v2 - ((a1 + a2) & ((a1 + a2) >> 31))];
}

uint64_t sub_221A2508C(int a1, int a2)
{
  return byte_221A3E76C[a2 + 12 + a1];
}

uint64_t sub_221A250A4(unsigned char *a1)
{
  if (*a1 != 6) {
    return 255;
  }
  uint64_t v1 = a1 + 17;
  int v2 = 260;
  do
  {
    int v3 = *(v1 - 16);
    ++v1;
    v2 -= 255;
  }
  while (v3 == 255);
  if (v3 != v2) {
    return 255;
  }
  do
  {
    int v4 = *(v1 - 16);
    ++v1;
  }
  while (v4 == 255);
  if (qword_267F68AB0 == *((void *)v1 - 2) && unk_267F68AB8 == *((void *)v1 - 1)) {
    return *v1;
  }
  else {
    return 255;
  }
}

uint64_t sub_221A25110(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t result = 0;
  *(_DWORD *)(a1 + 148) = 1065353216;
  *(_WORD *)a1 = a2;
  *(_WORD *)(a1 + 2) = a3;
  *(_DWORD *)(a1 + 4) = a3 * a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 140) = 0;
  *(_WORD *)(a1 + 144) = 0;
  *(unsigned char *)(a1 + 176) = 0;
  if (!a4)
  {
    unsigned int v6 = sub_221A12A34(4 * (a3 * a2));
    *(void *)(a1 + 40) = v6;
    if (!v6) {
      goto LABEL_11;
    }
    unsigned int v7 = sub_221A12A34(*(unsigned int *)(a1 + 4));
    *(void *)(a1 + 72) = v7;
    if (!v7) {
      goto LABEL_11;
    }
    int v8 = sub_221A12A34(2 * *(unsigned int *)(a1 + 4));
    *(void *)(a1 + 112) = v8;
    if (!v8) {
      goto LABEL_11;
    }
    unint64_t v9 = sub_221A12A34(2 * *(unsigned int *)(a1 + 4));
    *(void *)(a1 + 120) = v9;
    if (!v9) {
      goto LABEL_11;
    }
    uint64_t v10 = sub_221A12A34(2 * *(unsigned int *)(a1 + 4));
    *(void *)(a1 + 128) = v10;
    if (!v10) {
      goto LABEL_11;
    }
    int v11 = sub_221A12A34(*(unsigned int *)(a1 + 4));
    *(void *)(a1 + 96) = v11;
    if (v11
      && (unsigned int v12 = sub_221A12A34(4 * (4 * *(_DWORD *)(a1 + 4))), (*(void *)(a1 + 160) = v12) != 0)
      && (unint64_t v13 = sub_221A12A34((4 * *(_DWORD *)(a1 + 4))), (*(void *)(a1 + 152) = v13) != 0))
    {
      return 0;
    }
    else
    {
LABEL_11:
      sub_221A25218((void **)a1);
      return 1;
    }
  }
  return result;
}

void sub_221A25218(void **a1)
{
  a1[5] = 0;
  j__free(a1[9]);
  a1[9] = 0;
  j__free(a1[14]);
  a1[14] = 0;
  j__free(a1[15]);
  a1[15] = 0;
  j__free(a1[16]);
  a1[16] = 0;
  j__free(a1[12]);
  a1[12] = 0;
  j__free(a1[20]);
  a1[20] = 0;
  j__free(a1[19]);
  a1[19] = 0;
}

void *sub_221A25298(uint64_t a1, int a2, int a3)
{
  unsigned int v6 = sub_221A12A5C((void *)0x90);
  unsigned int v7 = v6;
  if (v6)
  {
    v6[3] = a1;
    *(unsigned char *)unsigned int v6 = 0;
    *((_DWORD *)v6 + 1) = a2;
    *((_DWORD *)v6 + 2) = a3;
    v6[2] = sub_221A34144();
  }
  return v7;
}

pthread_mutex_t *sub_221A252F0(pthread_mutex_t *result)
{
  if (!LOBYTE(result->__sig))
  {
    uint64_t v1 = (uint64_t)result;
    sub_221A341D0(*(pthread_mutex_t **)&result->__opaque[8]);
    if (!*(unsigned char *)v1)
    {
      sub_221926648(v1, *(void *)(v1 + 24), *(_DWORD *)(v1 + 4), *(_DWORD *)(v1 + 8));
      *(unsigned char *)uint64_t v1 = 1;
    }
    int v2 = *(pthread_mutex_t **)(v1 + 16);
    return sub_221A341DC(v2);
  }
  return result;
}

void sub_221A25360(uint64_t a1)
{
  sub_221A34190(*(pthread_mutex_t **)(a1 + 16));
  *(void *)(a1 + 16) = 0;
  if (*(unsigned char *)a1)
  {
    sub_221926794(a1);
  }
}

pthread_mutex_t *sub_221A253B4(pthread_mutex_t *result)
{
  uint64_t v1 = (uint64_t)result;
  int sig_high = HIDWORD(result[1].__sig);
  if (sig_high)
  {
    sub_221A341D0(*(pthread_mutex_t **)&result->__opaque[40]);
    if (*(_DWORD *)(v1 + 68))
    {
      *(_DWORD *)(v1 + 68) = 0;
      sub_221926A0C(v1);
    }
    uint64_t result = sub_221A341DC(*(pthread_mutex_t **)(v1 + 48));
  }
  int v3 = *(_DWORD *)(v1 + 72);
  if (v3)
  {
    sub_221A341D0(*(pthread_mutex_t **)(v1 + 56));
    if (*(_DWORD *)(v1 + 72))
    {
      *(_DWORD *)(v1 + 72) = 0;
      sub_221926FE0(v1);
    }
    uint64_t result = sub_221A341DC(*(pthread_mutex_t **)(v1 + 56));
  }
  if (!sig_high)
  {
    sub_221A341D0(*(pthread_mutex_t **)(v1 + 48));
    uint64_t result = sub_221A341DC(*(pthread_mutex_t **)(v1 + 48));
    if (v3) {
      goto LABEL_11;
    }
LABEL_13:
    sub_221A341D0(*(pthread_mutex_t **)(v1 + 56));
    uint64_t result = sub_221A341DC(*(pthread_mutex_t **)(v1 + 56));
    goto LABEL_11;
  }
  if (!v3) {
    goto LABEL_13;
  }
LABEL_11:
  *(_DWORD *)(v1 + 64) = 0;
  return result;
}

uint64_t sub_221A25468(int a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4 = HIWORD(a1) & 3 | (4 * (a1 & 3));
  int v5 = *(_DWORD *)a2 + ((__int16)a1 >> 2);
  int v6 = *(_DWORD *)(a2 + 4) + (a1 >> 18);
  int v7 = *(_DWORD *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  int v12 = HIWORD(a1) & 3 | (4 * (a1 & 3));
  uint64_t v13 = v8;
  uint64_t result = v4;
  switch(v4)
  {
    case 1:
      uint64_t result = 1;
      LODWORD(v4) = v6;
      int v12 = v5;
      uint64_t v13 = v8;
      goto LABEL_23;
    case 2:
      LODWORD(v4) = 0;
      int v12 = 0;
      uint64_t result = 0;
      goto LABEL_5;
    case 3:
      LODWORD(v4) = v6 + 1;
      uint64_t result = 1;
      int v12 = v5;
LABEL_5:
      uint64_t v13 = v11;
      break;
    case 4:
      uint64_t result = 1;
      LODWORD(v4) = v6;
      int v12 = v5;
      uint64_t v13 = v8;
      goto LABEL_16;
    case 5:
      uint64_t result = 1;
      LODWORD(v4) = v6;
      goto LABEL_10;
    case 6:
      uint64_t result = 1;
      LODWORD(v4) = v6;
      int v12 = v5;
      uint64_t v13 = v11;
      uint64_t v8 = v10;
      break;
    case 7:
      LODWORD(v4) = v6 + 1;
      uint64_t result = 1;
LABEL_10:
      int v12 = v5;
      uint64_t v13 = v11;
      goto LABEL_16;
    case 8:
      LODWORD(v4) = 0;
      int v12 = 0;
      uint64_t result = 0;
      goto LABEL_18;
    case 9:
      uint64_t result = 1;
      LODWORD(v4) = v6;
      goto LABEL_15;
    case 10:
      LODWORD(v4) = 0;
      int v12 = 0;
      uint64_t result = 0;
      uint64_t v13 = v10;
      break;
    case 11:
      LODWORD(v4) = v6 + 1;
      uint64_t result = 1;
LABEL_15:
      int v12 = v5;
      uint64_t v13 = v10;
LABEL_16:
      uint64_t v8 = v9;
      break;
    case 12:
      int v12 = v5 + 1;
      uint64_t result = 1;
      LODWORD(v4) = v6;
LABEL_18:
      uint64_t v13 = v9;
      break;
    case 13:
      int v12 = v5 + 1;
      uint64_t result = 1;
      LODWORD(v4) = v6;
      goto LABEL_22;
    case 14:
      int v12 = v5 + 1;
      uint64_t result = 1;
      LODWORD(v4) = v6;
      uint64_t v13 = v10;
      goto LABEL_23;
    case 15:
      int v12 = v5 + 1;
      LODWORD(v4) = v6++;
      uint64_t result = 1;
LABEL_22:
      uint64_t v13 = v9;
LABEL_23:
      uint64_t v8 = v11;
      break;
    default:
      break;
  }
  *a3 = v13 + v5 + v6 * v7;
  *a4 = v8 + v12 + (int)v4 * v7;
  return result;
}

uint64_t sub_221A25634(int a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4 = *(unsigned int *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  int v9 = *(_DWORD *)a2 + ((__int16)a1 >> 2) + v4 * (*(_DWORD *)(a2 + 4) + (a1 >> 18));
  switch(HIWORD(a1) & 3 | (4 * (a1 & 3)))
  {
    case 1:
      uint64_t v13 = v7 + v9;
      *a3 = v13 - v4;
      uint64_t v14 = v6 + v9;
      *a4 = v14;
      a3[1] = v13;
      a4[1] = v14 + v4;
      uint64_t v15 = v5 + v9;
      a3[2] = v15 - 1;
      uint64_t v12 = v8 + v9;
      a4[2] = v12 - 1;
      a3[3] = v15;
      goto LABEL_25;
    case 2:
      uint64_t result = 0;
      uint64_t v16 = v6 + v9;
      *a3 = v16;
      a3[1] = v16 + v4;
      uint64_t v12 = v8 + v9;
      goto LABEL_5;
    case 3:
      uint64_t v17 = v6 + v9;
      *a3 = v17;
      uint64_t v18 = v7 + v9;
      *a4 = v18;
      a3[1] = v17 + v4;
      a4[1] = v18 + v4;
      uint64_t v19 = v8 + v9;
      a3[2] = v19 - 1;
      uint64_t v12 = v5 + v9 + v4;
      a4[2] = v12 - 1;
      a3[3] = v19;
      goto LABEL_25;
    case 4:
      uint64_t v20 = v7 + v9;
      *a3 = v20 - v4;
      uint64_t v21 = v8 + v9;
      *a4 = v21 - v4;
      a3[1] = v20;
      a4[1] = v21;
      uint64_t v22 = v5 + v9;
      a3[2] = v22 - 1;
      uint64_t v23 = v6 + v9;
      goto LABEL_10;
    case 5:
      uint64_t v24 = v7 + v9;
      *a3 = v24 - v4;
      uint64_t v25 = v5 + v9;
      *a4 = v25;
      a3[1] = v24;
      a4[1] = v25 + v4;
      goto LABEL_12;
    case 6:
      uint64_t v26 = v6 + v9;
      *a3 = v26;
      uint64_t v27 = v5 + v9;
      *a4 = v27;
      a3[1] = v26 + v4;
      a4[1] = v27 + v4;
      uint64_t v22 = v8 + v9;
      a3[2] = v22 - 1;
      uint64_t v23 = v7 + v9;
LABEL_10:
      a4[2] = v23;
      goto LABEL_22;
    case 7:
      uint64_t v24 = v7 + v9;
      *a3 = v24;
      uint64_t v28 = v5 + v9;
      *a4 = v28;
      a3[1] = v24 + v4;
      uint64_t v25 = v28 + v4;
      a4[1] = v25;
LABEL_12:
      a3[2] = v25 - 1;
      a4[2] = v24;
      a3[3] = v25;
      uint64_t v12 = v24 + 1;
      goto LABEL_25;
    case 8:
      uint64_t result = 0;
      uint64_t v29 = v8 + v9;
      *a3 = v29 - v4;
      a3[1] = v29;
      uint64_t v30 = v6 + v9;
      goto LABEL_16;
    case 9:
      uint64_t v31 = v8 + v9;
      *a3 = v31 - v4;
      uint64_t v32 = v5 + v9;
      *a4 = v32;
      a3[1] = v31;
      a4[1] = v32 + v4;
      uint64_t v33 = v6 + v9;
      a3[2] = v33;
      uint64_t v23 = v7 + v9;
      goto LABEL_21;
    case 0xA:
      uint64_t result = 0;
      uint64_t v34 = v5 + v9;
      *a3 = v34;
      a3[1] = v34 + v4;
      uint64_t v30 = v7 + v9;
LABEL_16:
      a3[2] = v30;
      uint64_t v12 = v30 + 1;
      break;
    case 0xB:
      uint64_t v35 = v5 + v9;
      *a3 = v35;
      uint64_t v36 = v8 + v9;
      *a4 = v36;
      a3[1] = v35 + v4;
      a4[1] = v36 + v4;
      uint64_t v37 = v7 + v9;
      a3[2] = v37;
      uint64_t v23 = v6 + v9 + v4;
      a4[2] = v23;
      uint64_t v22 = v37 + 1;
      goto LABEL_22;
    case 0xC:
      uint64_t v38 = v8 + v9;
      *a3 = v38 - v4;
      uint64_t v39 = v7 + v9;
      *a4 = v39 - v4 + 1;
      a3[1] = v38;
      a4[1] = v39 + 1;
      uint64_t v33 = v6 + v9;
      a3[2] = v33;
      uint64_t v23 = v5 + v9;
      goto LABEL_21;
    case 0xD:
      uint64_t v40 = v5 + v9;
      *a3 = v40;
      uint64_t v41 = v7 + v9;
      *a4 = v41 - v4 + 1;
      a3[1] = v40 + v4;
      a4[1] = v41 + 1;
      a3[2] = v41;
      a4[2] = v40;
      a3[3] = v41 + 1;
      goto LABEL_24;
    case 0xE:
      uint64_t v42 = v5 + v9;
      *a3 = v42;
      uint64_t v43 = v6 + v9;
      *a4 = v43 + 1;
      a3[1] = v42 + v4;
      a4[1] = v43 + v4 + 1;
      uint64_t v33 = v7 + v9;
      a3[2] = v33;
      uint64_t v23 = v8 + v9;
LABEL_21:
      a4[2] = v23;
      uint64_t v22 = v33 + 1;
LABEL_22:
      a3[3] = v22;
      uint64_t v12 = v23 + 1;
      goto LABEL_25;
    case 0xF:
      uint64_t v44 = v5 + v9;
      *a3 = v44;
      uint64_t v45 = v7 + v9;
      *a4 = v45 + 1;
      uint64_t v40 = v44 + v4;
      a3[1] = v40;
      a4[1] = v45 + v4 + 1;
      a3[2] = v45;
      a4[2] = v40;
      a3[3] = v45 + 1;
LABEL_24:
      uint64_t v12 = v40 + 1;
LABEL_25:
      uint64_t result = 1;
      a3 = a4;
      break;
    default:
      uint64_t result = 0;
      uint64_t v11 = v7 + v9;
      *a3 = v11 - v4;
      a3[1] = v11;
      uint64_t v12 = v5 + v9;
LABEL_5:
      a3[2] = v12 - 1;
      break;
  }
  a3[3] = v12;
  return result;
}

uint64_t sub_221A259E4(int a1, uint64_t a2, _WORD *a3)
{
  int v4 = *(_DWORD *)(a2 + 16);
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v5 = *(int8x16_t **)(a2 + 56);
  if (sub_221A25468(a1, a2, &v8, &v7)) {
    uint64_t result = off_26AACF420(v5, 16, (uint64_t)v8, v7, v4);
  }
  else {
    uint64_t result = off_26AACF410(v5, 16, v8, v4);
  }
  *a3 = result;
  return result;
}

uint64_t sub_221A25A7C(int a1, uint64_t a2, _WORD *a3)
{
  int v4 = *(_DWORD *)(a2 + 16);
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v5 = *(int8x16_t **)(a2 + 56);
  if (sub_221A25468(a1, a2, &v8, &v7)) {
    uint64_t result = off_26AACF430(v5, 16, (uint64_t)v8, v7, v4);
  }
  else {
    uint64_t result = off_26AACF428(v5, 16, v8, v4);
  }
  *a3 = result;
  return result;
}

uint64_t sub_221A25B14(int a1, uint64_t a2, _WORD *a3)
{
  int v4 = *(_DWORD *)(a2 + 16);
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v5 = *(unint64_t **)(a2 + 56);
  if (sub_221A25468(a1, a2, &v16, &v15)) {
    uint64_t result = off_26AACF440(v5, 16, (uint64_t)v16, v15, v4, v6, v7, (uint8x16_t)v8, v9, v10, (uint8x16_t)v11, v12, (uint8x16_t)v13);
  }
  else {
    uint64_t result = off_26AACF438((uint64_t *)v5, 16, v16, v4, v6, v7, v8, v9, v10, v11, v12, v13);
  }
  *a3 = result;
  return result;
}

uint64_t sub_221A25BAC(int a1, uint64_t a2, _WORD *a3)
{
  int v4 = *(_DWORD *)(a2 + 16);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v5 = *(unint64_t **)(a2 + 56);
  if (sub_221A25468(a1, a2, &v15, &v14)) {
    uint64_t result = off_26AACF458(v5, 16, v15, v14, v4, (uint8x16_t)v6, v7, (uint8x16_t)v8, v9, (uint8x16_t)v10, (uint8x16_t)v11, (uint8x16_t)v12);
  }
  else {
    uint64_t result = off_26AACF450(v5, 16, v15, v4, v6, v7, v8, v9, v10, v11, v12);
  }
  *a3 = result;
  return result;
}

double sub_221A25C44(int a1, uint64_t a2, _WORD *a3)
{
  unint64_t v88 = 0;
  int v89 = 0;
  int v4 = *(uint8x16_t **)(a2 + 56);
  uint64_t v6 = *(unsigned int *)(a2 + 16);
  uint64_t v5 = *(unsigned int *)(a2 + 20);
  int v7 = sub_221A25468(a1, a2, &v89, &v88);
  int8x16_t v8 = (uint8x16_t *)((char *)v89 + v6);
  if (v7)
  {
    int8x16_t v9 = (uint8x16_t *)((char *)v8 + v5);
    int8x16_t v10 = (uint8x16_t *)((char *)v88 + v6 + v5);
    uint8x16_t v11 = vrhaddq_u8(*v9, *v10);
    int8x16_t v12 = (uint8x16_t *)((char *)v89 + v5 + v5);
    int8x16_t v13 = (uint8x16_t *)((char *)v9 + v5);
    uint64_t v14 = (uint8x16_t *)((char *)v88 + v5 + v5);
    uint64_t v15 = (uint8x16_t *)((char *)v10 + v5);
    int32x4_t v16 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v11, v4[3])))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(*(uint8x16_t *)((char *)v89 + v6), *(uint8x16_t *)((char *)v88 + v6)), v4[1])))));
    uint8x16_t v17 = *v12;
    uint8x16_t v18 = *v13;
    uint8x16_t v19 = *v14;
    uint8x16_t v20 = *v15;
    uint64_t v21 = (uint8x16_t *)((char *)v12 + v5);
    uint64_t v22 = (uint8x16_t *)((char *)v13 + v5);
    uint64_t v23 = (uint8x16_t *)((char *)v14 + v5);
    uint64_t v24 = (uint8x16_t *)((char *)v15 + v5);
    int32x4_t v25 = vaddq_s32(vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(*(uint8x16_t *)((char *)v89 + v5), *(uint8x16_t *)((char *)v88 + v5)), v4[2])))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(*v89, *v88), *v4))))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v17, v19), v4[4])))));
    int32x4_t v26 = vaddq_s32(v16, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v18, v20), v4[5])))));
    uint8x16_t v27 = *v21;
    uint8x16_t v28 = *v22;
    uint8x16_t v29 = *v23;
    uint8x16_t v30 = *v24;
    uint64_t v31 = (uint8x16_t *)((char *)v21 + v5);
    uint64_t v32 = (uint8x16_t *)((char *)v22 + v5);
    uint64_t v33 = (uint8x16_t *)((char *)v23 + v5);
    uint64_t v34 = (uint8x16_t *)((char *)v24 + v5);
    int32x4_t v35 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v27, v29), v4[6]))));
    int32x4_t v36 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v28, v30), v4[7]))));
    uint8x16_t v37 = *v31;
    uint8x16_t v38 = *v32;
    uint8x16_t v39 = *v33;
    uint8x16_t v40 = *v34;
    uint64_t v41 = (uint8x16_t *)((char *)v31 + v5);
    uint64_t v42 = (uint8x16_t *)((char *)v32 + v5);
    uint64_t v43 = (uint8x16_t *)((char *)v33 + v5);
    uint64_t v44 = (uint8x16_t *)((char *)v34 + v5);
    int32x4_t v45 = vaddq_s32(v35, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v37, v39), v4[8])))));
    int32x4_t v46 = vaddq_s32(v36, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v38, v40), v4[9])))));
    uint8x16_t v47 = *v41;
    uint8x16_t v48 = *v42;
    uint8x16_t v49 = *v43;
    uint8x16_t v50 = *v44;
    int v51 = (uint8x16_t *)((char *)v41 + v5);
    unint64_t v52 = (uint8x16_t *)((char *)v42 + v5);
    unsigned int v53 = (uint8x16_t *)((char *)v43 + v5);
    unint64_t v54 = (uint8x16_t *)((char *)v44 + v5);
    int32x4_t v55 = vaddq_s32(vaddq_s32(v25, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v47, v49), v4[10]))))), vaddq_s32(v45, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(*v51, *v53), v4[12]))))));
    int32x4_t v56 = vaddq_s32(vaddq_s32(v26, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v48, v50), v4[11]))))), vaddq_s32(v46, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(*v52, *v54), v4[13]))))));
    uint8x16_t v57 = vrhaddq_u8(*(uint8x16_t *)((char *)v51 + v5), *(uint8x16_t *)((char *)v53 + v5));
    uint8x16_t v58 = vrhaddq_u8(*(uint8x16_t *)((char *)v52 + v5), *(uint8x16_t *)((char *)v54 + v5));
  }
  else
  {
    uint8x16_t v59 = *v8;
    unsigned int v60 = (uint8x16_t *)((char *)v8 + v5);
    uint8x16_t v61 = *v60;
    unsigned int v62 = (uint8x16_t *)((char *)v89 + v5 + v5);
    unsigned int v63 = (uint8x16_t *)((char *)v60 + v5);
    int32x4_t v64 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v61, v4[3])))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v59, v4[1])))));
    uint8x16_t v65 = *v62;
    uint8x16_t v66 = *v63;
    unint64_t v67 = (uint8x16_t *)((char *)v62 + v5);
    uint64_t v68 = (uint8x16_t *)((char *)v63 + v5);
    int32x4_t v69 = vaddq_s32(vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v89 + v5), v4[2])))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v89, *v4))))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v65, v4[4])))));
    int32x4_t v70 = vaddq_s32(v64, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v66, v4[5])))));
    uint8x16_t v71 = *v67;
    uint8x16_t v72 = *v68;
    unsigned int v73 = (uint8x16_t *)((char *)v67 + v5);
    int v74 = (uint8x16_t *)((char *)v68 + v5);
    uint8x16_t v75 = *v73;
    uint8x16_t v76 = *v74;
    unint64_t v77 = (uint8x16_t *)((char *)v73 + v5);
    unint64_t v78 = (uint8x16_t *)((char *)v74 + v5);
    int32x4_t v79 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v71, v4[6])))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v75, v4[8])))));
    int32x4_t v80 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v72, v4[7])))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v76, v4[9])))));
    uint8x16_t v81 = *v77;
    uint8x16_t v82 = *v78;
    unint64_t v83 = (uint8x16_t *)((char *)v77 + v5);
    unsigned int v84 = (uint8x16_t *)((char *)v78 + v5);
    int32x4_t v55 = vaddq_s32(vaddq_s32(v69, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v81, v4[10]))))), vaddq_s32(v79, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v83, v4[12]))))));
    uint8x16_t v57 = *(uint8x16_t *)((char *)v83 + v5);
    uint8x16_t v58 = *(uint8x16_t *)((char *)v84 + v5);
    int32x4_t v56 = vaddq_s32(vaddq_s32(v70, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v82, v4[11]))))), vaddq_s32(v80, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v84, v4[13]))))));
  }
  int32x4_t v85 = vaddq_s32(v55, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v57, v4[14])))));
  int32x4_t v86 = vaddq_s32(v56, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v58, v4[15])))));
  *(void *)&double result = vaddq_s32(vaddq_s32(vaddq_s32(v85, v86), vdupq_laneq_s32(v85, 2)), vdupq_laneq_s32(v86, 2)).u64[0];
  *a3 = LOWORD(result);
  return result;
}

double sub_221A260D4(int a1, uint64_t a2, _WORD *a3)
{
  uint8x16_t v29 = 0;
  uint8x16_t v30 = 0;
  int v4 = *(uint8x16_t **)(a2 + 56);
  uint64_t v6 = *(unsigned int *)(a2 + 16);
  uint64_t v5 = *(unsigned int *)(a2 + 20);
  int v7 = sub_221A25468(a1, a2, &v30, &v29);
  int8x16_t v8 = (uint8x16_t *)((char *)v30 + v6);
  if (v7)
  {
    int8x16_t v9 = (uint8x16_t *)((char *)v8 + v5);
    int8x16_t v10 = (uint8x16_t *)((char *)v29 + v6 + v5);
    uint8x16_t v11 = *v9;
    uint8x16_t v12 = *v10;
    int8x16_t v13 = (uint8x16_t *)((char *)v30 + v5 + v5);
    uint64_t v14 = (uint8x16_t *)((char *)v9 + v5);
    uint64_t v15 = (uint8x16_t *)((char *)v29 + v5 + v5);
    int32x4_t v16 = (uint8x16_t *)((char *)v10 + v5);
    int32x4_t v17 = vaddq_s32(vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(*(uint8x16_t *)((char *)v30 + v5), *(uint8x16_t *)((char *)v29 + v5)), v4[2])))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(*v30, *v29), *v4))))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(*v13, *v15), v4[4])))));
    int32x4_t v18 = vaddq_s32(vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v11, v12), v4[3])))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(*(uint8x16_t *)((char *)v30 + v6), *(uint8x16_t *)((char *)v29 + v6)), v4[1]))))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(*v14, *v16), v4[5])))));
    uint8x16_t v19 = vrhaddq_u8(*(uint8x16_t *)((char *)v13 + v5), *(uint8x16_t *)((char *)v15 + v5));
    uint8x16_t v20 = vrhaddq_u8(*(uint8x16_t *)((char *)v14 + v5), *(uint8x16_t *)((char *)v16 + v5));
  }
  else
  {
    uint8x16_t v21 = *v8;
    uint64_t v22 = (uint8x16_t *)((char *)v8 + v5);
    uint8x16_t v23 = *v22;
    uint64_t v24 = (uint8x16_t *)((char *)v30 + v5 + v5);
    int32x4_t v25 = (uint8x16_t *)((char *)v22 + v5);
    int32x4_t v17 = vaddq_s32(vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v30 + v5), v4[2])))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v30, *v4))))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v24, v4[4])))));
    int32x4_t v18 = vaddq_s32(vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v23, v4[3])))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v21, v4[1]))))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v25, v4[5])))));
    uint8x16_t v19 = *(uint8x16_t *)((char *)v24 + v5);
    uint8x16_t v20 = *(uint8x16_t *)((char *)v25 + v5);
  }
  int32x4_t v26 = vaddq_s32(v17, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v19, v4[6])))));
  int32x4_t v27 = vaddq_s32(v18, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v20, v4[7])))));
  *(void *)&double result = vaddq_s32(vaddq_s32(vaddq_s32(v26, v27), vdupq_laneq_s32(v26, 2)), vdupq_laneq_s32(v27, 2)).u64[0];
  *a3 = LOWORD(result);
  return result;
}

double sub_221A26324(int a1, uint64_t a2, _WORD *a3)
{
  unsigned int v98 = 0;
  uint64_t v99 = 0;
  uint64_t v6 = *(unsigned int *)(a2 + 16);
  uint64_t v5 = *(unsigned int *)(a2 + 20);
  int v7 = sub_221A25468(a1, a2, &v99, &v98);
  uint64_t v15 = (uint64_t *)((char *)v99 + v6);
  uint64_t v16 = *(void *)(a2 + 64);
  v17.i64[0] = *v99;
  if (v7)
  {
    v8.i64[0] = *(uint64_t *)((char *)v99 + v6);
    v9.i64[0] = *v98;
    v10.i64[0] = *(uint64_t *)((char *)v98 + v6);
    uint8x16_t v18 = (uint8x16_t)vzip1q_s64(v17, v8);
    uint8x16_t v19 = (uint8x16_t)vzip1q_s64(v9, v10);
    uint8x16_t v20 = (uint64_t *)((char *)v15 + v5);
    uint8x16_t v21 = (uint64_t *)((char *)v98 + v6 + v5);
    v9.i64[0] = *(uint64_t *)((char *)v99 + v5);
    v10.i64[0] = *v20;
    v11.i64[0] = *(uint64_t *)((char *)v98 + v5);
    v12.i64[0] = *v21;
    uint64_t v22 = (uint64_t *)((char *)v99 + v5 + v5);
    uint8x16_t v23 = (uint64_t *)((char *)v20 + v5);
    uint64_t v24 = (uint64_t *)((char *)v98 + v5 + v5);
    int32x4_t v25 = (uint64_t *)((char *)v21 + v5);
    uint8x16_t v26 = vrhaddq_u8(v18, v19);
    uint8x16_t v27 = vrhaddq_u8((uint8x16_t)vzip1q_s64(v9, v10), (uint8x16_t)vzip1q_s64(v11, v12));
    int64x2_t v28 = *(int64x2_t *)v16;
    int64x2_t v29 = *(int64x2_t *)(v16 + 16);
    int32x4_t v30 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v27, (uint8x16_t)v29))));
    v28.i64[0] = *v22;
    v29.i64[0] = *v23;
    v11.i64[0] = *v24;
    v12.i64[0] = *v25;
    uint8x16_t v31 = (uint8x16_t)vzip1q_s64(v28, v29);
    uint8x16_t v32 = (uint8x16_t)vzip1q_s64(v11, v12);
    uint64_t v33 = (uint64_t *)((char *)v22 + v5);
    uint64_t v34 = (uint64_t *)((char *)v23 + v5);
    int32x4_t v35 = (uint64_t *)((char *)v24 + v5);
    int32x4_t v36 = (uint64_t *)((char *)v25 + v5);
    v11.i64[0] = *v33;
    v12.i64[0] = *v34;
    v13.i64[0] = *v35;
    v14.i64[0] = *v36;
    uint8x16_t v37 = (uint64_t *)((char *)v33 + v5);
    uint8x16_t v38 = (uint64_t *)((char *)v34 + v5);
    uint8x16_t v39 = (uint64_t *)((char *)v35 + v5);
    uint8x16_t v40 = (uint64_t *)((char *)v36 + v5);
    uint8x16_t v41 = vrhaddq_u8(v31, v32);
    uint8x16_t v42 = vrhaddq_u8((uint8x16_t)vzip1q_s64(v11, v12), (uint8x16_t)vzip1q_s64(v13, v14));
    int64x2_t v43 = *(int64x2_t *)(v16 + 32);
    int64x2_t v44 = *(int64x2_t *)(v16 + 48);
    int64x2_t v45 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v41, (uint8x16_t)v43))));
    int64x2_t v46 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v42, (uint8x16_t)v44))));
    int32x4_t v47 = vaddq_s32((int32x4_t)v45, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v26, *(uint8x16_t *)v16)))));
    int32x4_t v48 = vaddq_s32((int32x4_t)v46, v30);
    v45.i64[0] = *v37;
    v46.i64[0] = *v38;
    v43.i64[0] = *v39;
    v44.i64[0] = *v40;
    uint8x16_t v49 = (uint8x16_t)vzip1q_s64(v45, v46);
    uint8x16_t v50 = (uint8x16_t)vzip1q_s64(v43, v44);
    int v51 = (uint64_t *)((char *)v37 + v5);
    unint64_t v52 = (uint64_t *)((char *)v38 + v5);
    unsigned int v53 = (uint64_t *)((char *)v39 + v5);
    unint64_t v54 = (uint64_t *)((char *)v40 + v5);
    v43.i64[0] = *v51;
    v44.i64[0] = *v52;
    v13.i64[0] = *v53;
    v14.i64[0] = *v54;
    int32x4_t v55 = (uint64_t *)((char *)v51 + v5);
    int32x4_t v56 = (uint64_t *)((char *)v52 + v5);
    uint8x16_t v57 = (uint64_t *)((char *)v53 + v5);
    uint8x16_t v58 = (uint64_t *)((char *)v54 + v5);
    uint8x16_t v59 = vrhaddq_u8(v49, v50);
    uint8x16_t v60 = vrhaddq_u8((uint8x16_t)vzip1q_s64(v43, v44), (uint8x16_t)vzip1q_s64(v13, v14));
    int64x2_t v61 = *(int64x2_t *)(v16 + 128);
    int64x2_t v62 = *(int64x2_t *)(v16 + 144);
    int64x2_t v63 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v59, (uint8x16_t)v61))));
    int64x2_t v64 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v60, (uint8x16_t)v62))));
    int32x4_t v65 = vaddq_s32(v47, (int32x4_t)v63);
    int32x4_t v66 = vaddq_s32(v48, (int32x4_t)v64);
    v63.i64[0] = *v55;
    v64.i64[0] = *v56;
    v61.i64[0] = *v57;
    v62.i64[0] = *v58;
    uint8x16_t v67 = (uint8x16_t)vzip1q_s64(v63, v64);
    uint8x16_t v68 = (uint8x16_t)vzip1q_s64(v61, v62);
    v61.i64[0] = *(uint64_t *)((char *)v55 + v5);
    v62.i64[0] = *(uint64_t *)((char *)v56 + v5);
    v13.i64[0] = *(uint64_t *)((char *)v57 + v5);
    v14.i64[0] = *(uint64_t *)((char *)v58 + v5);
    int32x4_t v69 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v67, v68), *(uint8x16_t *)(v16 + 160)))));
    uint8x16_t v70 = vabdq_u8(vrhaddq_u8((uint8x16_t)vzip1q_s64(v61, v62), (uint8x16_t)vzip1q_s64(v13, v14)), *(uint8x16_t *)(v16 + 176));
  }
  else
  {
    v8.i64[0] = *v15;
    uint8x16_t v71 = (uint64_t *)((char *)v15 + v5);
    uint8x16_t v72 = (uint8x16_t)vzip1q_s64(v17, v8);
    v8.i64[0] = *(uint64_t *)((char *)v99 + v5);
    v9.i64[0] = *v71;
    int64x2_t v73 = *(int64x2_t *)v16;
    int64x2_t v74 = *(int64x2_t *)(v16 + 16);
    uint8x16_t v75 = (uint64_t *)((char *)v99 + v5 + v5);
    uint8x16_t v76 = (uint64_t *)((char *)v71 + v5);
    int32x4_t v77 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v8, v9), (uint8x16_t)v74))));
    v9.i64[0] = *v75;
    v73.i64[0] = *v76;
    unint64_t v78 = (uint64_t *)((char *)v75 + v5);
    int32x4_t v79 = (uint64_t *)((char *)v76 + v5);
    uint8x16_t v80 = (uint8x16_t)vzip1q_s64(v9, v73);
    v73.i64[0] = *v78;
    v74.i64[0] = *v79;
    uint8x16_t v81 = (uint64_t *)((char *)v78 + v5);
    uint8x16_t v82 = (uint64_t *)((char *)v79 + v5);
    int64x2_t v83 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v80, *(uint8x16_t *)(v16 + 32)))));
    int64x2_t v84 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v73, v74), *(uint8x16_t *)(v16 + 48)))));
    int32x4_t v85 = vaddq_s32((int32x4_t)v83, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v72, *(uint8x16_t *)v16)))));
    int32x4_t v86 = vaddq_s32((int32x4_t)v84, v77);
    v83.i64[0] = *v81;
    v84.i64[0] = *v82;
    unsigned int v87 = (uint64_t *)((char *)v81 + v5);
    unint64_t v88 = (uint64_t *)((char *)v82 + v5);
    uint8x16_t v89 = (uint8x16_t)vzip1q_s64(v83, v84);
    v84.i64[0] = *v87;
    v74.i64[0] = *v88;
    unint64_t v90 = (uint64_t *)((char *)v87 + v5);
    unsigned int v91 = (uint64_t *)((char *)v88 + v5);
    int64x2_t v92 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v89, *(uint8x16_t *)(v16 + 128)))));
    int64x2_t v93 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v84, v74), *(uint8x16_t *)(v16 + 144)))));
    int32x4_t v65 = vaddq_s32(v85, (int32x4_t)v92);
    int32x4_t v66 = vaddq_s32(v86, (int32x4_t)v93);
    v92.i64[0] = *v90;
    v93.i64[0] = *v91;
    uint8x16_t v94 = (uint8x16_t)vzip1q_s64(v92, v93);
    v93.i64[0] = *(uint64_t *)((char *)v90 + v5);
    v74.i64[0] = *(uint64_t *)((char *)v91 + v5);
    int32x4_t v69 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v94, *(uint8x16_t *)(v16 + 160)))));
    uint8x16_t v70 = vabdq_u8((uint8x16_t)vzip1q_s64(v93, v74), *(uint8x16_t *)(v16 + 176));
  }
  int32x4_t v95 = vaddq_s32(v65, v69);
  int32x4_t v96 = vaddq_s32(v66, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v70))));
  *(void *)&double result = vaddq_s32(vaddq_s32(vaddq_s32(v96, v95), vdupq_laneq_s32(v95, 2)), vdupq_laneq_s32(v96, 2)).u64[0];
  *a3 = LOWORD(result);
  return result;
}

double sub_221A266B0(int a1, uint64_t a2, _WORD *a3)
{
  int64x2_t v46 = 0;
  int32x4_t v47 = 0;
  uint64_t v6 = *(unsigned int *)(a2 + 16);
  uint64_t v5 = *(unsigned int *)(a2 + 20);
  int v7 = sub_221A25468(a1, a2, &v47, &v46);
  uint64_t v15 = (uint64_t *)((char *)v47 + v6);
  uint64_t v16 = *(void *)(a2 + 64);
  v17.i64[0] = *v47;
  if (v7)
  {
    v8.i64[0] = *(uint64_t *)((char *)v47 + v6);
    v9.i64[0] = *v46;
    v10.i64[0] = *(uint64_t *)((char *)v46 + v6);
    uint8x16_t v18 = (uint8x16_t)vzip1q_s64(v17, v8);
    uint8x16_t v19 = (uint8x16_t)vzip1q_s64(v9, v10);
    uint8x16_t v20 = (uint64_t *)((char *)v15 + v5);
    uint8x16_t v21 = (uint64_t *)((char *)v46 + v6 + v5);
    v9.i64[0] = *(uint64_t *)((char *)v47 + v5);
    v10.i64[0] = *v20;
    v11.i64[0] = *(uint64_t *)((char *)v46 + v5);
    v12.i64[0] = *v21;
    uint64_t v22 = (uint64_t *)((char *)v47 + v5 + v5);
    uint8x16_t v23 = (uint64_t *)((char *)v20 + v5);
    uint64_t v24 = (uint64_t *)((char *)v46 + v5 + v5);
    int32x4_t v25 = (uint64_t *)((char *)v21 + v5);
    uint8x16_t v26 = vrhaddq_u8(v18, v19);
    uint8x16_t v27 = vrhaddq_u8((uint8x16_t)vzip1q_s64(v9, v10), (uint8x16_t)vzip1q_s64(v11, v12));
    int64x2_t v28 = *(int64x2_t *)v16;
    int64x2_t v29 = *(int64x2_t *)(v16 + 16);
    int32x4_t v30 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v26, *(uint8x16_t *)v16))));
    int32x4_t v31 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v27, (uint8x16_t)v29))));
    v28.i64[0] = *v22;
    v29.i64[0] = *v23;
    v11.i64[0] = *v24;
    v12.i64[0] = *v25;
    uint8x16_t v32 = (uint8x16_t)vzip1q_s64(v28, v29);
    uint8x16_t v33 = (uint8x16_t)vzip1q_s64(v11, v12);
    v11.i64[0] = *(uint64_t *)((char *)v22 + v5);
    v12.i64[0] = *(uint64_t *)((char *)v23 + v5);
    v13.i64[0] = *(uint64_t *)((char *)v24 + v5);
    v14.i64[0] = *(uint64_t *)((char *)v25 + v5);
    int32x4_t v34 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v32, v33), *(uint8x16_t *)(v16 + 32)))));
    uint8x16_t v35 = vabdq_u8(vrhaddq_u8((uint8x16_t)vzip1q_s64(v11, v12), (uint8x16_t)vzip1q_s64(v13, v14)), *(uint8x16_t *)(v16 + 48));
  }
  else
  {
    v8.i64[0] = *v15;
    int32x4_t v36 = (uint64_t *)((char *)v15 + v5);
    uint8x16_t v37 = (uint8x16_t)vzip1q_s64(v17, v8);
    v8.i64[0] = *(uint64_t *)((char *)v47 + v5);
    v9.i64[0] = *v36;
    int64x2_t v38 = *(int64x2_t *)v16;
    int64x2_t v39 = *(int64x2_t *)(v16 + 16);
    uint8x16_t v40 = (uint64_t *)((char *)v47 + v5 + v5);
    uint8x16_t v41 = (uint64_t *)((char *)v36 + v5);
    int32x4_t v30 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v37, *(uint8x16_t *)v16))));
    int32x4_t v31 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v8, v9), (uint8x16_t)v39))));
    v9.i64[0] = *v40;
    v38.i64[0] = *v41;
    uint8x16_t v42 = (uint8x16_t)vzip1q_s64(v9, v38);
    v38.i64[0] = *(uint64_t *)((char *)v40 + v5);
    v39.i64[0] = *(uint64_t *)((char *)v41 + v5);
    int32x4_t v34 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v42, *(uint8x16_t *)(v16 + 32)))));
    uint8x16_t v35 = vabdq_u8((uint8x16_t)vzip1q_s64(v38, v39), *(uint8x16_t *)(v16 + 48));
  }
  int32x4_t v43 = vaddq_s32(v34, v30);
  int32x4_t v44 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v35))), v31);
  *(void *)&double result = vaddq_s32(vaddq_s32(vaddq_s32(v44, v43), vdupq_laneq_s32(v43, 2)), vdupq_laneq_s32(v44, 2)).u64[0];
  *a3 = LOWORD(result);
  return result;
}

double sub_221A2688C(uint8x16_t **a1, uint64_t a2, _WORD *a3)
{
  int v3 = *(uint8x16_t **)(a2 + 56);
  int v4 = a1[1];
  uint8x16_t v5 = v3[1];
  int32x4_t v6 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v4, *v3))));
  int v7 = a1[2];
  int32x4_t v8 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v7, *v3))));
  uint64_t v9 = *(unsigned int *)(a2 + 16);
  int64x2_t v10 = (uint8x16_t *)((char *)*a1 + v9);
  int64x2_t v11 = (uint8x16_t *)((char *)v4 + v9);
  int64x2_t v12 = (uint8x16_t *)((char *)v7 + v9);
  int32x4_t v13 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v10, v5)))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(**a1, *v3)))));
  int32x4_t v14 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v11, v5)))), v6);
  int32x4_t v15 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v12, v5)))), v8);
  uint64_t v16 = (uint8x16_t *)((char *)v10 + v9);
  int64x2_t v17 = (uint8x16_t *)((char *)v11 + v9);
  uint8x16_t v18 = (uint8x16_t *)((char *)v12 + v9);
  uint8x16_t v19 = v3[2];
  uint8x16_t v20 = v3[3];
  int32x4_t v21 = vaddq_s32(v13, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v16, v19)))));
  int32x4_t v22 = vaddq_s32(v14, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v17, v19)))));
  int32x4_t v23 = vaddq_s32(v15, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v18, v19)))));
  uint64_t v24 = (uint8x16_t *)((char *)v16 + v9);
  int32x4_t v25 = (uint8x16_t *)((char *)v17 + v9);
  uint8x16_t v26 = (uint8x16_t *)((char *)v18 + v9);
  int32x4_t v27 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v24, v20))));
  int32x4_t v28 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v25, v20))));
  int32x4_t v29 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v26, v20))));
  int32x4_t v30 = (uint8x16_t *)((char *)v24 + v9);
  int32x4_t v31 = (uint8x16_t *)((char *)v25 + v9);
  uint8x16_t v32 = (uint8x16_t *)((char *)v26 + v9);
  uint8x16_t v33 = v3[4];
  uint8x16_t v34 = v3[5];
  int32x4_t v35 = vaddq_s32(v27, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v30, v33)))));
  int32x4_t v36 = vaddq_s32(v28, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v31, v33)))));
  int32x4_t v37 = vaddq_s32(v29, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v32, v33)))));
  int64x2_t v38 = (uint8x16_t *)((char *)v30 + v9);
  int64x2_t v39 = (uint8x16_t *)((char *)v31 + v9);
  uint8x16_t v40 = (uint8x16_t *)((char *)v32 + v9);
  int32x4_t v41 = vaddq_s32(v21, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v38, v34)))));
  int32x4_t v42 = vaddq_s32(v22, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v39, v34)))));
  int32x4_t v43 = vaddq_s32(v23, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v40, v34)))));
  int32x4_t v44 = (uint8x16_t *)((char *)v38 + v9);
  int64x2_t v45 = (uint8x16_t *)((char *)v39 + v9);
  int64x2_t v46 = (uint8x16_t *)((char *)v40 + v9);
  uint8x16_t v47 = v3[6];
  uint8x16_t v48 = v3[7];
  int32x4_t v49 = vaddq_s32(v35, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v44, v47)))));
  int32x4_t v50 = vaddq_s32(v36, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v45, v47)))));
  int32x4_t v51 = vaddq_s32(v37, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v46, v47)))));
  unint64_t v52 = (uint8x16_t *)((char *)v44 + v9);
  unsigned int v53 = (uint8x16_t *)((char *)v45 + v9);
  unint64_t v54 = (uint8x16_t *)((char *)v46 + v9);
  int32x4_t v55 = vaddq_s32(v41, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v52, v48)))));
  int32x4_t v56 = vaddq_s32(v42, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v53, v48)))));
  int32x4_t v57 = vaddq_s32(v43, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v54, v48)))));
  uint8x16_t v58 = (uint8x16_t *)((char *)v52 + v9);
  uint8x16_t v59 = (uint8x16_t *)((char *)v53 + v9);
  uint8x16_t v60 = (uint8x16_t *)((char *)v54 + v9);
  uint8x16_t v61 = v3[8];
  uint8x16_t v62 = v3[9];
  int32x4_t v63 = vaddq_s32(v49, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v58, v61)))));
  int32x4_t v64 = vaddq_s32(v50, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v59, v61)))));
  int32x4_t v65 = vaddq_s32(v51, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v60, v61)))));
  int32x4_t v66 = (uint8x16_t *)((char *)v58 + v9);
  uint8x16_t v67 = (uint8x16_t *)((char *)v59 + v9);
  uint8x16_t v68 = (uint8x16_t *)((char *)v60 + v9);
  int32x4_t v69 = vaddq_s32(v55, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v66, v62)))));
  int32x4_t v70 = vaddq_s32(v56, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v67, v62)))));
  int32x4_t v71 = vaddq_s32(v57, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v68, v62)))));
  uint8x16_t v72 = (uint8x16_t *)((char *)v66 + v9);
  int64x2_t v73 = (uint8x16_t *)((char *)v67 + v9);
  int64x2_t v74 = (uint8x16_t *)((char *)v68 + v9);
  uint8x16_t v75 = v3[10];
  uint8x16_t v76 = v3[11];
  int32x4_t v77 = vaddq_s32(v63, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v72, v75)))));
  int32x4_t v78 = vaddq_s32(v64, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v73, v75)))));
  int32x4_t v79 = vaddq_s32(v65, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v74, v75)))));
  uint8x16_t v80 = (uint8x16_t *)((char *)v72 + v9);
  uint8x16_t v81 = (uint8x16_t *)((char *)v73 + v9);
  uint8x16_t v82 = (uint8x16_t *)((char *)v74 + v9);
  int32x4_t v83 = vaddq_s32(v69, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v80, v76)))));
  int32x4_t v84 = vaddq_s32(v70, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v81, v76)))));
  int32x4_t v85 = vaddq_s32(v71, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v82, v76)))));
  int32x4_t v86 = (uint8x16_t *)((char *)v80 + v9);
  unsigned int v87 = (uint8x16_t *)((char *)v81 + v9);
  unint64_t v88 = (uint8x16_t *)((char *)v82 + v9);
  uint8x16_t v89 = v3[12];
  uint8x16_t v90 = v3[13];
  int32x4_t v91 = vaddq_s32(v77, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v86, v89)))));
  int32x4_t v92 = vaddq_s32(v78, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v87, v89)))));
  int32x4_t v93 = vaddq_s32(v79, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v88, v89)))));
  uint8x16_t v94 = (uint8x16_t *)((char *)v86 + v9);
  int32x4_t v95 = (uint8x16_t *)((char *)v87 + v9);
  int32x4_t v96 = (uint8x16_t *)((char *)v88 + v9);
  int32x4_t v97 = vaddq_s32(v83, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v94, v90)))));
  int32x4_t v98 = vaddq_s32(v84, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v95, v90)))));
  int32x4_t v99 = vaddq_s32(v85, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v96, v90)))));
  unsigned int v100 = (uint8x16_t *)((char *)v96 + v9);
  uint8x16_t v101 = v3[14];
  uint8x16_t v102 = v3[15];
  int32x4_t v103 = vaddq_s32(v93, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v100, v101)))));
  int32x4_t v104 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v100 + v9), v102))));
  int32x4_t v105 = vaddq_s32(vaddq_s32(v97, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v94 + v9 + v9), v102))))), vaddq_s32(v91, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v94 + v9), v101))))));
  int32x4_t v106 = vaddq_s32(vaddq_s32(v98, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v95 + v9 + v9), v102))))), vaddq_s32(v92, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v95 + v9), v101))))));
  *a3 = vaddq_s32(v105, vdupq_laneq_s32(v105, 2)).u16[0];
  a3[1] = vaddq_s32(v106, vdupq_laneq_s32(v106, 2)).u16[0];
  int32x4_t v107 = vaddq_s32(vaddq_s32(v99, v104), v103);
  *(void *)&double result = vaddq_s32(v107, vdupq_laneq_s32(v107, 2)).u64[0];
  a3[2] = LOWORD(result);
  return result;
}

double sub_221A26E00(uint8x16_t **a1, uint64_t a2, _WORD *a3)
{
  int v3 = *(uint8x16_t **)(a2 + 56);
  int v4 = a1[1];
  uint8x16_t v5 = v3[1];
  int32x4_t v6 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v4, *v3))));
  int v7 = a1[2];
  int32x4_t v8 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v7, *v3))));
  uint64_t v9 = *(unsigned int *)(a2 + 16);
  int64x2_t v10 = (uint8x16_t *)((char *)*a1 + v9);
  int64x2_t v11 = (uint8x16_t *)((char *)v4 + v9);
  int64x2_t v12 = (uint8x16_t *)((char *)v7 + v9);
  int32x4_t v13 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v10, v5)))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(**a1, *v3)))));
  int32x4_t v14 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v11, v5)))), v6);
  int32x4_t v15 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v12, v5)))), v8);
  uint64_t v16 = (uint8x16_t *)((char *)v10 + v9);
  int64x2_t v17 = (uint8x16_t *)((char *)v11 + v9);
  uint8x16_t v18 = (uint8x16_t *)((char *)v12 + v9);
  uint8x16_t v19 = v3[2];
  uint8x16_t v20 = v3[3];
  int32x4_t v21 = vaddq_s32(v13, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v16, v19)))));
  int32x4_t v22 = vaddq_s32(v14, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v17, v19)))));
  int32x4_t v23 = vaddq_s32(v15, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v18, v19)))));
  uint64_t v24 = (uint8x16_t *)((char *)v16 + v9);
  int32x4_t v25 = (uint8x16_t *)((char *)v17 + v9);
  uint8x16_t v26 = (uint8x16_t *)((char *)v18 + v9);
  int32x4_t v27 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v24, v20))));
  int32x4_t v28 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v25, v20))));
  int32x4_t v29 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v26, v20))));
  int32x4_t v30 = (uint8x16_t *)((char *)v24 + v9);
  int32x4_t v31 = (uint8x16_t *)((char *)v25 + v9);
  uint8x16_t v32 = (uint8x16_t *)((char *)v26 + v9);
  uint8x16_t v33 = v3[4];
  uint8x16_t v34 = v3[5];
  int32x4_t v35 = vaddq_s32(v27, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v30, v33)))));
  int32x4_t v36 = vaddq_s32(v28, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v31, v33)))));
  int32x4_t v37 = vaddq_s32(v29, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v32, v33)))));
  int64x2_t v38 = (uint8x16_t *)((char *)v30 + v9);
  int64x2_t v39 = (uint8x16_t *)((char *)v31 + v9);
  uint8x16_t v40 = (uint8x16_t *)((char *)v32 + v9);
  int32x4_t v41 = vaddq_s32(v21, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v38, v34)))));
  int32x4_t v42 = vaddq_s32(v22, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v39, v34)))));
  int32x4_t v43 = vaddq_s32(v23, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v40, v34)))));
  int32x4_t v44 = (uint8x16_t *)((char *)v40 + v9);
  uint8x16_t v45 = v3[6];
  uint8x16_t v46 = v3[7];
  int32x4_t v47 = vaddq_s32(v37, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v44, v45)))));
  int32x4_t v48 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v44 + v9), v46))));
  int32x4_t v49 = vaddq_s32(vaddq_s32(v41, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v38 + v9 + v9), v46))))), vaddq_s32(v35, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v38 + v9), v45))))));
  int32x4_t v50 = vaddq_s32(vaddq_s32(v42, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v39 + v9 + v9), v46))))), vaddq_s32(v36, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v39 + v9), v45))))));
  *a3 = vaddq_s32(v49, vdupq_laneq_s32(v49, 2)).u16[0];
  a3[1] = vaddq_s32(v50, vdupq_laneq_s32(v50, 2)).u16[0];
  int32x4_t v51 = vaddq_s32(vaddq_s32(v43, v48), v47);
  *(void *)&double result = vaddq_s32(v51, vdupq_laneq_s32(v51, 2)).u64[0];
  a3[2] = LOWORD(result);
  return result;
}

double sub_221A270C4(uint64_t a1, uint64_t a2, _WORD *a3, int64x2_t a4, int64x2_t a5, int64x2_t a6, int64x2_t a7, double a8, int64x2_t a9, int64x2_t a10, int64x2_t a11)
{
  uint64_t v14 = *(unsigned int *)(a2 + 16);
  uint64_t v13 = *(unsigned int *)(a2 + 20);
  int32x4_t v15 = *(unint64_t **)(a1 + 8);
  uint64_t v16 = (unint64_t *)(*(void *)a1 + v14);
  a4.i64[0] = **(void **)a1;
  a5.i64[0] = *v16;
  uint8x16_t v17 = (uint8x16_t)vzip1q_s64(a4, a5);
  uint8x16_t v18 = (char *)v15 + v14;
  a5.i64[0] = *v15;
  a6.i64[0] = *(unint64_t *)((char *)v15 + v14);
  uint8x16_t v19 = (uint8x16_t)vzip1q_s64(a5, a6);
  uint8x16_t v20 = *(unint64_t **)(a1 + 16);
  int32x4_t v21 = (char *)v20 + v14;
  a6.i64[0] = *v20;
  a7.i64[0] = *(unint64_t *)((char *)v20 + v14);
  uint8x16_t v22 = (uint8x16_t)vzip1q_s64(a6, a7);
  uint64_t v23 = *(void *)(a2 + 64);
  int64x2_t v24 = *(int64x2_t *)v23;
  uint8x16_t v25 = *(uint8x16_t *)(v23 + 16);
  uint8x16_t v26 = (uint64_t *)(*(void *)a1 + v13);
  int32x4_t v27 = (unint64_t *)((char *)v16 + v13);
  v24.i64[0] = *v26;
  a9.i64[0] = *v27;
  uint8x16_t v28 = (uint8x16_t)vzip1q_s64(v24, a9);
  int32x4_t v29 = (unint64_t *)((char *)v15 + v13);
  int32x4_t v30 = (unint64_t *)&v18[v13];
  a9.i64[0] = *v29;
  a10.i64[0] = *v30;
  uint8x16_t v31 = (uint8x16_t)vzip1q_s64(a9, a10);
  uint8x16_t v32 = (unint64_t *)((char *)v20 + v13);
  uint8x16_t v33 = (unint64_t *)&v21[v13];
  a10.i64[0] = *v32;
  a11.i64[0] = *v33;
  int64x2_t v34 = vzip1q_s64(a10, a11);
  int32x4_t v35 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v28, v25))));
  int32x4_t v36 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v31, v25))));
  int32x4_t v37 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v34, v25))));
  int32x4_t v38 = vaddq_s32(v35, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v17, *(uint8x16_t *)v23)))));
  int32x4_t v39 = vaddq_s32(v36, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v19, *(uint8x16_t *)v23)))));
  int32x4_t v40 = vaddq_s32(v37, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v22, *(uint8x16_t *)v23)))));
  int32x4_t v41 = (uint64_t *)((char *)v26 + v13);
  int32x4_t v42 = (uint64_t *)((char *)v27 + v13);
  v35.i64[0] = *v41;
  v37.i64[0] = *v42;
  uint8x16_t v43 = (uint8x16_t)vzip1q_s64((int64x2_t)v35, (int64x2_t)v37);
  int32x4_t v44 = (uint64_t *)((char *)v29 + v13);
  uint8x16_t v45 = (uint64_t *)((char *)v30 + v13);
  v37.i64[0] = *v44;
  v36.i64[0] = *v45;
  uint8x16_t v46 = (uint8x16_t)vzip1q_s64((int64x2_t)v37, (int64x2_t)v36);
  int32x4_t v47 = (uint64_t *)((char *)v32 + v13);
  int32x4_t v48 = (uint64_t *)((char *)v33 + v13);
  v36.i64[0] = *v47;
  v34.i64[0] = *v48;
  uint8x16_t v49 = (uint8x16_t)vzip1q_s64((int64x2_t)v36, v34);
  int64x2_t v50 = *(int64x2_t *)(v23 + 32);
  int64x2_t v51 = *(int64x2_t *)(v23 + 48);
  int32x4_t v52 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v43, (uint8x16_t)v50))));
  int32x4_t v53 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v46, (uint8x16_t)v50))));
  unint64_t v54 = (uint64_t *)((char *)v41 + v13);
  int32x4_t v55 = (uint64_t *)((char *)v42 + v13);
  int32x4_t v56 = (uint64_t *)((char *)v44 + v13);
  int32x4_t v57 = (uint64_t *)((char *)v45 + v13);
  uint8x16_t v58 = (uint64_t *)((char *)v47 + v13);
  int32x4_t v59 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v49, (uint8x16_t)v50))));
  uint8x16_t v60 = (uint64_t *)((char *)v48 + v13);
  int32x4_t v61 = vaddq_s32(v38, v52);
  int32x4_t v62 = vaddq_s32(v39, v53);
  int32x4_t v63 = vaddq_s32(v40, v59);
  v52.i64[0] = *v54;
  v53.i64[0] = *v55;
  int32x4_t v64 = (uint64_t *)((char *)v54 + v13);
  int32x4_t v65 = (uint64_t *)((char *)v55 + v13);
  uint8x16_t v66 = (uint8x16_t)vzip1q_s64((int64x2_t)v52, (int64x2_t)v53);
  v53.i64[0] = *v56;
  v59.i64[0] = *v57;
  uint8x16_t v67 = (uint64_t *)((char *)v56 + v13);
  uint8x16_t v68 = (uint64_t *)((char *)v57 + v13);
  uint8x16_t v69 = (uint8x16_t)vzip1q_s64((int64x2_t)v53, (int64x2_t)v59);
  v59.i64[0] = *v58;
  v50.i64[0] = *v60;
  int32x4_t v70 = (uint64_t *)((char *)v58 + v13);
  int32x4_t v71 = (uint64_t *)((char *)v60 + v13);
  int32x4_t v72 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v66, (uint8x16_t)v51))));
  int32x4_t v73 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v69, (uint8x16_t)v51))));
  int32x4_t v74 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64((int64x2_t)v59, v50), (uint8x16_t)v51))));
  v50.i64[0] = *v64;
  v51.i64[0] = *v65;
  uint8x16_t v75 = (uint64_t *)((char *)v64 + v13);
  uint8x16_t v76 = (uint64_t *)((char *)v65 + v13);
  uint8x16_t v77 = (uint8x16_t)vzip1q_s64(v50, v51);
  v51.i64[0] = *v67;
  v11.i64[0] = *v68;
  int32x4_t v78 = (uint64_t *)((char *)v68 + v13);
  uint8x16_t v79 = (uint8x16_t)vzip1q_s64(v51, v11);
  v11.i64[0] = *v70;
  v12.i64[0] = *v71;
  uint8x16_t v80 = (uint64_t *)((char *)v70 + v13);
  uint8x16_t v81 = (uint64_t *)((char *)v71 + v13);
  uint8x16_t v82 = (uint8x16_t)vzip1q_s64(v11, v12);
  int64x2_t v83 = *(int64x2_t *)(v23 + 128);
  uint8x16_t v84 = *(uint8x16_t *)(v23 + 144);
  int32x4_t v85 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v77, (uint8x16_t)v83))));
  int32x4_t v86 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v79, (uint8x16_t)v83))));
  int32x4_t v87 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v82, (uint8x16_t)v83))));
  int32x4_t v88 = vaddq_s32(v72, v85);
  int32x4_t v89 = vaddq_s32(v73, v86);
  int32x4_t v90 = vaddq_s32(v74, v87);
  v85.i64[0] = *v75;
  v86.i64[0] = *v76;
  uint8x16_t v91 = (uint8x16_t)vzip1q_s64((int64x2_t)v85, (int64x2_t)v86);
  v86.i64[0] = *(uint64_t *)((char *)v67 + v13);
  v87.i64[0] = *v78;
  int32x4_t v92 = (uint64_t *)((char *)v78 + v13);
  uint8x16_t v93 = (uint8x16_t)vzip1q_s64((int64x2_t)v86, (int64x2_t)v87);
  v87.i64[0] = *v80;
  v83.i64[0] = *v81;
  uint8x16_t v94 = (uint64_t *)((char *)v80 + v13);
  int32x4_t v95 = (uint64_t *)((char *)v81 + v13);
  int32x4_t v96 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v93, v84))));
  int32x4_t v97 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64((int64x2_t)v87, v83), v84))));
  int32x4_t v98 = vaddq_s32(v61, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v91, v84)))));
  int32x4_t v99 = vaddq_s32(v62, v96);
  int32x4_t v100 = vaddq_s32(v63, v97);
  v63.i64[0] = *(uint64_t *)((char *)v75 + v13);
  v96.i64[0] = *(uint64_t *)((char *)v76 + v13);
  uint8x16_t v101 = (uint8x16_t)vzip1q_s64((int64x2_t)v63, (int64x2_t)v96);
  v96.i64[0] = *(uint64_t *)((char *)v67 + v13 + v13);
  v97.i64[0] = *v92;
  uint8x16_t v102 = (uint8x16_t)vzip1q_s64((int64x2_t)v96, (int64x2_t)v97);
  v97.i64[0] = *v94;
  v83.i64[0] = *v95;
  uint8x16_t v103 = (uint8x16_t)vzip1q_s64((int64x2_t)v97, v83);
  int64x2_t v104 = *(int64x2_t *)(v23 + 160);
  uint8x16_t v105 = *(uint8x16_t *)(v23 + 176);
  int32x4_t v106 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v102, (uint8x16_t)v104))));
  int32x4_t v107 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v103, (uint8x16_t)v104))));
  int32x4_t v108 = vaddq_s32(v88, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v101, (uint8x16_t)v104)))));
  int32x4_t v109 = vaddq_s32(v89, v106);
  v89.i64[0] = *(uint64_t *)((char *)v75 + v13 + v13);
  v106.i64[0] = *(uint64_t *)((char *)v76 + v13 + v13);
  int32x4_t v110 = vaddq_s32(v90, v107);
  uint8x16_t v111 = (uint8x16_t)vzip1q_s64((int64x2_t)v89, (int64x2_t)v106);
  v106.i64[0] = *(uint64_t *)((char *)v67 + v13 + v13 + v13);
  v107.i64[0] = *(uint64_t *)((char *)v92 + v13);
  uint8x16_t v112 = (uint8x16_t)vzip1q_s64((int64x2_t)v106, (int64x2_t)v107);
  v107.i64[0] = *(uint64_t *)((char *)v94 + v13);
  v104.i64[0] = *(uint64_t *)((char *)v95 + v13);
  int32x4_t v113 = vaddq_s32(vaddq_s32(v98, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v111, v105))))), v108);
  int32x4_t v114 = vaddq_s32(vaddq_s32(v99, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v112, v105))))), v109);
  *a3 = vaddq_s32(v113, vdupq_laneq_s32(v113, 2)).u16[0];
  a3[1] = vaddq_s32(v114, vdupq_laneq_s32(v114, 2)).u16[0];
  int32x4_t v115 = vaddq_s32(vaddq_s32(v100, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64((int64x2_t)v107, v104), v105))))), v110);
  *(void *)&double result = vaddq_s32(v115, vdupq_laneq_s32(v115, 2)).u64[0];
  a3[2] = LOWORD(result);
  return result;
}

double sub_221A2749C(uint64_t a1, uint64_t a2, _WORD *a3, int64x2_t a4, int64x2_t a5, int64x2_t a6, int64x2_t a7, double a8, int64x2_t a9, int64x2_t a10, int64x2_t a11)
{
  uint64_t v15 = *(unsigned int *)(a2 + 16);
  uint64_t v14 = *(unsigned int *)(a2 + 20);
  uint64_t v16 = *(unint64_t **)(a1 + 8);
  uint8x16_t v17 = *(unint64_t **)(a1 + 16);
  uint8x16_t v18 = (unint64_t *)(*(void *)a1 + v15);
  uint8x16_t v19 = (unint64_t *)((char *)v16 + v15);
  uint8x16_t v20 = (unint64_t *)((char *)v17 + v15);
  uint64_t v21 = *(void *)(a2 + 64);
  a4.i64[0] = **(void **)a1;
  a5.i64[0] = *v18;
  uint8x16_t v22 = (uint64_t *)(*(void *)a1 + v14);
  uint64_t v23 = (unint64_t *)((char *)v18 + v14);
  uint8x16_t v24 = (uint8x16_t)vzip1q_s64(a4, a5);
  a5.i64[0] = *v16;
  a6.i64[0] = *v19;
  uint8x16_t v25 = (unint64_t *)((char *)v16 + v14);
  uint8x16_t v26 = (unint64_t *)((char *)v19 + v14);
  uint8x16_t v27 = (uint8x16_t)vzip1q_s64(a5, a6);
  a6.i64[0] = *v17;
  a7.i64[0] = *v20;
  uint8x16_t v28 = (unint64_t *)((char *)v17 + v14);
  int32x4_t v29 = (unint64_t *)((char *)v20 + v14);
  uint8x16_t v30 = (uint8x16_t)vzip1q_s64(a6, a7);
  int64x2_t v31 = *(int64x2_t *)v21;
  uint8x16_t v32 = *(uint8x16_t *)(v21 + 16);
  v31.i64[0] = *v22;
  a9.i64[0] = *v23;
  uint8x16_t v33 = (uint64_t *)((char *)v22 + v14);
  int64x2_t v34 = (uint64_t *)((char *)v23 + v14);
  uint8x16_t v35 = (uint8x16_t)vzip1q_s64(v31, a9);
  a9.i64[0] = *v25;
  a10.i64[0] = *v26;
  int32x4_t v36 = (uint64_t *)((char *)v25 + v14);
  int32x4_t v37 = (uint64_t *)((char *)v26 + v14);
  uint8x16_t v38 = (uint8x16_t)vzip1q_s64(a9, a10);
  a10.i64[0] = *v28;
  a11.i64[0] = *v29;
  int32x4_t v39 = (uint64_t *)((char *)v28 + v14);
  int32x4_t v40 = (uint64_t *)((char *)v29 + v14);
  int64x2_t v41 = vzip1q_s64(a10, a11);
  int32x4_t v42 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v35, v32))));
  int32x4_t v43 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v38, v32))));
  int32x4_t v44 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v41, v32))));
  int32x4_t v45 = vaddq_s32(v42, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v24, *(uint8x16_t *)v21)))));
  int32x4_t v46 = vaddq_s32(v43, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v27, *(uint8x16_t *)v21)))));
  int32x4_t v47 = vaddq_s32(v44, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v30, *(uint8x16_t *)v21)))));
  v42.i64[0] = *v33;
  v44.i64[0] = *v34;
  uint8x16_t v48 = (uint8x16_t)vzip1q_s64((int64x2_t)v42, (int64x2_t)v44);
  v44.i64[0] = *v36;
  v43.i64[0] = *v37;
  uint8x16_t v49 = (uint8x16_t)vzip1q_s64((int64x2_t)v44, (int64x2_t)v43);
  v43.i64[0] = *v39;
  v41.i64[0] = *v40;
  uint8x16_t v50 = (uint8x16_t)vzip1q_s64((int64x2_t)v43, v41);
  int64x2_t v51 = *(int64x2_t *)(v21 + 32);
  uint8x16_t v52 = *(uint8x16_t *)(v21 + 48);
  uint8x16_t v53 = vabdq_u8(v48, (uint8x16_t)v51);
  uint8x16_t v54 = vabdq_u8(v49, (uint8x16_t)v51);
  uint8x16_t v55 = vabdq_u8(v50, (uint8x16_t)v51);
  v51.i64[0] = *(uint64_t *)((char *)v33 + v14);
  v11.i64[0] = *(uint64_t *)((char *)v34 + v14);
  v12.i64[0] = *(uint64_t *)((char *)v36 + v14);
  uint8x16_t v56 = (uint8x16_t)vzip1q_s64(v51, v11);
  v11.i64[0] = *(uint64_t *)((char *)v37 + v14);
  uint8x16_t v57 = (uint8x16_t)vzip1q_s64(v12, v11);
  v12.i64[0] = *(uint64_t *)((char *)v39 + v14);
  v13.i64[0] = *(uint64_t *)((char *)v40 + v14);
  int32x4_t v58 = vaddq_s32(v45, vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v53))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v56, v52))))));
  int32x4_t v59 = vaddq_s32(v46, vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v54))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v57, v52))))));
  int32x4_t v60 = vaddq_s32(v47, vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v55))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v12, v13), v52))))));
  *a3 = vaddq_s32(v58, vdupq_laneq_s32(v58, 2)).u16[0];
  *(void *)&double result = vaddq_s32(v60, vdupq_laneq_s32(v60, 2)).u64[0];
  a3[1] = vaddq_s32(v59, vdupq_laneq_s32(v59, 2)).u16[0];
  a3[2] = LOWORD(result);
  return result;
}

int8x8_t sub_221A2768C(uint8x16_t **a1, uint64_t a2, void *a3)
{
  int v3 = *(uint8x16_t **)(a2 + 56);
  int v4 = a1[1];
  uint8x16_t v5 = v3[1];
  int32x4_t v6 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v4, *v3))));
  int v7 = a1[2];
  int32x4_t v8 = a1[3];
  int32x4_t v9 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v7, *v3))));
  int32x4_t v10 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v8, *v3))));
  uint64_t v11 = *(unsigned int *)(a2 + 16);
  int64x2_t v12 = (uint8x16_t *)((char *)*a1 + v11);
  int64x2_t v13 = (uint8x16_t *)((char *)v4 + v11);
  uint64_t v14 = (uint8x16_t *)((char *)v7 + v11);
  uint64_t v15 = (uint8x16_t *)((char *)v8 + v11);
  int32x4_t v16 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v12, v5)))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(**a1, *v3)))));
  int32x4_t v17 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v13, v5)))), v6);
  int32x4_t v18 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v14, v5)))), v9);
  int32x4_t v19 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v15, v5)))), v10);
  uint8x16_t v20 = (uint8x16_t *)((char *)v12 + v11);
  uint64_t v21 = (uint8x16_t *)((char *)v13 + v11);
  uint8x16_t v22 = (uint8x16_t *)((char *)v14 + v11);
  uint64_t v23 = (uint8x16_t *)((char *)v15 + v11);
  uint8x16_t v24 = v3[2];
  uint8x16_t v25 = v3[3];
  int32x4_t v26 = vaddq_s32(v16, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v20, v24)))));
  int32x4_t v27 = vaddq_s32(v17, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v21, v24)))));
  int32x4_t v28 = vaddq_s32(v18, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v22, v24)))));
  int32x4_t v29 = vaddq_s32(v19, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v23, v24)))));
  uint8x16_t v30 = (uint8x16_t *)((char *)v20 + v11);
  int64x2_t v31 = (uint8x16_t *)((char *)v21 + v11);
  uint8x16_t v32 = (uint8x16_t *)((char *)v22 + v11);
  uint8x16_t v33 = (uint8x16_t *)((char *)v23 + v11);
  int32x4_t v34 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v30, v25))));
  int32x4_t v35 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v31, v25))));
  int32x4_t v36 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v32, v25))));
  int32x4_t v37 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v33, v25))));
  uint8x16_t v38 = (uint8x16_t *)((char *)v30 + v11);
  int32x4_t v39 = (uint8x16_t *)((char *)v31 + v11);
  int32x4_t v40 = (uint8x16_t *)((char *)v32 + v11);
  int64x2_t v41 = (uint8x16_t *)((char *)v33 + v11);
  uint8x16_t v42 = v3[4];
  uint8x16_t v43 = v3[5];
  int32x4_t v44 = vaddq_s32(v34, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v38, v42)))));
  int32x4_t v45 = vaddq_s32(v35, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v39, v42)))));
  int32x4_t v46 = vaddq_s32(v36, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v40, v42)))));
  int32x4_t v47 = vaddq_s32(v37, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v41, v42)))));
  uint8x16_t v48 = (uint8x16_t *)((char *)v38 + v11);
  uint8x16_t v49 = (uint8x16_t *)((char *)v39 + v11);
  uint8x16_t v50 = (uint8x16_t *)((char *)v40 + v11);
  int64x2_t v51 = (uint8x16_t *)((char *)v41 + v11);
  int32x4_t v52 = vaddq_s32(v26, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v48, v43)))));
  int32x4_t v53 = vaddq_s32(v27, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v49, v43)))));
  int32x4_t v54 = vaddq_s32(v28, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v50, v43)))));
  int32x4_t v55 = vaddq_s32(v29, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v51, v43)))));
  uint8x16_t v56 = (uint8x16_t *)((char *)v48 + v11);
  uint8x16_t v57 = (uint8x16_t *)((char *)v49 + v11);
  int32x4_t v58 = (uint8x16_t *)((char *)v50 + v11);
  int32x4_t v59 = (uint8x16_t *)((char *)v51 + v11);
  uint8x16_t v60 = v3[6];
  uint8x16_t v61 = v3[7];
  int32x4_t v62 = vaddq_s32(v44, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v56, v60)))));
  int32x4_t v63 = vaddq_s32(v45, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v57, v60)))));
  int32x4_t v64 = vaddq_s32(v46, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v58, v60)))));
  int32x4_t v65 = vaddq_s32(v47, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v59, v60)))));
  uint8x16_t v66 = (uint8x16_t *)((char *)v56 + v11);
  uint8x16_t v67 = (uint8x16_t *)((char *)v57 + v11);
  uint8x16_t v68 = (uint8x16_t *)((char *)v58 + v11);
  uint8x16_t v69 = (uint8x16_t *)((char *)v59 + v11);
  int32x4_t v70 = vaddq_s32(v52, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v66, v61)))));
  int32x4_t v71 = vaddq_s32(v53, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v67, v61)))));
  int32x4_t v72 = vaddq_s32(v54, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v68, v61)))));
  int32x4_t v73 = vaddq_s32(v55, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v69, v61)))));
  int32x4_t v74 = (uint8x16_t *)((char *)v66 + v11);
  uint8x16_t v75 = (uint8x16_t *)((char *)v67 + v11);
  uint8x16_t v76 = (uint8x16_t *)((char *)v68 + v11);
  uint8x16_t v77 = (uint8x16_t *)((char *)v69 + v11);
  uint8x16_t v78 = v3[8];
  uint8x16_t v79 = v3[9];
  int32x4_t v80 = vaddq_s32(v62, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v74, v78)))));
  int32x4_t v81 = vaddq_s32(v63, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v75, v78)))));
  int32x4_t v82 = vaddq_s32(v64, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v76, v78)))));
  int32x4_t v83 = vaddq_s32(v65, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v77, v78)))));
  uint8x16_t v84 = (uint8x16_t *)((char *)v74 + v11);
  int32x4_t v85 = (uint8x16_t *)((char *)v75 + v11);
  int32x4_t v86 = (uint8x16_t *)((char *)v76 + v11);
  int32x4_t v87 = (uint8x16_t *)((char *)v77 + v11);
  int32x4_t v88 = vaddq_s32(v70, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v84, v79)))));
  int32x4_t v89 = vaddq_s32(v71, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v85, v79)))));
  int32x4_t v90 = vaddq_s32(v72, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v86, v79)))));
  int32x4_t v91 = vaddq_s32(v73, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v87, v79)))));
  int32x4_t v92 = (uint8x16_t *)((char *)v84 + v11);
  uint8x16_t v93 = (uint8x16_t *)((char *)v85 + v11);
  uint8x16_t v94 = (uint8x16_t *)((char *)v86 + v11);
  int32x4_t v95 = (uint8x16_t *)((char *)v87 + v11);
  uint8x16_t v96 = v3[10];
  uint8x16_t v97 = v3[11];
  int32x4_t v98 = vaddq_s32(v80, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v92, v96)))));
  int32x4_t v99 = vaddq_s32(v81, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v93, v96)))));
  int32x4_t v100 = vaddq_s32(v82, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v94, v96)))));
  int32x4_t v101 = vaddq_s32(v83, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v95, v96)))));
  uint8x16_t v102 = (uint8x16_t *)((char *)v92 + v11);
  uint8x16_t v103 = (uint8x16_t *)((char *)v93 + v11);
  int64x2_t v104 = (uint8x16_t *)((char *)v94 + v11);
  uint8x16_t v105 = (uint8x16_t *)((char *)v95 + v11);
  int32x4_t v106 = vaddq_s32(v88, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v102, v97)))));
  int32x4_t v107 = vaddq_s32(v89, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v103, v97)))));
  int32x4_t v108 = vaddq_s32(v90, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v104, v97)))));
  int32x4_t v109 = vaddq_s32(v91, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v105, v97)))));
  int32x4_t v110 = (uint8x16_t *)((char *)v102 + v11);
  uint8x16_t v111 = (uint8x16_t *)((char *)v103 + v11);
  uint8x16_t v112 = (uint8x16_t *)((char *)v104 + v11);
  int32x4_t v113 = (uint8x16_t *)((char *)v105 + v11);
  uint8x16_t v114 = v3[12];
  uint8x16_t v115 = v3[13];
  int32x4_t v116 = vaddq_s32(v98, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v110, v114)))));
  int32x4_t v117 = vaddq_s32(v99, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v111, v114)))));
  int32x4_t v118 = vaddq_s32(v100, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v112, v114)))));
  int32x4_t v119 = vaddq_s32(v101, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v113, v114)))));
  unsigned int v120 = (uint8x16_t *)((char *)v110 + v11);
  unsigned int v121 = (uint8x16_t *)((char *)v111 + v11);
  unsigned int v122 = (uint8x16_t *)((char *)v112 + v11);
  unsigned int v123 = (uint8x16_t *)((char *)v113 + v11);
  int32x4_t v124 = vaddq_s32(v106, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v120, v115)))));
  int32x4_t v125 = vaddq_s32(v107, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v121, v115)))));
  int32x4_t v126 = vaddq_s32(v108, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v122, v115)))));
  int32x4_t v127 = vaddq_s32(v109, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v123, v115)))));
  uint8x16_t v128 = v3[14];
  uint8x16_t v129 = v3[15];
  int32x4_t v130 = vaddq_s32(vaddq_s32(v124, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v120 + v11 + v11), v129))))), vaddq_s32(v116, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v120 + v11), v128))))));
  int32x4_t v131 = vaddq_s32(vaddq_s32(v125, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v121 + v11 + v11), v129))))), vaddq_s32(v117, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v121 + v11), v128))))));
  int32x4_t v132 = vaddq_s32(vaddq_s32(v126, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v122 + v11 + v11), v129))))), vaddq_s32(v118, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v122 + v11), v128))))));
  int32x4_t v133 = vaddq_s32(vaddq_s32(v127, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v123 + v11 + v11), v129))))), vaddq_s32(v119, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v123 + v11), v128))))));
  *(int32x2_t *)v132.i8 = vadd_s32(*(int32x2_t *)v132.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v132, 2));
  int8x8_t result = vext_s8(*(int8x8_t *)v132.i8, (int8x8_t)vzip1_s16(*(int16x4_t *)v132.i8, (int16x4_t)vadd_s32(*(int32x2_t *)v133.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v133, 2))), 4uLL);
  v130.i32[0] = vzip1_s16((int16x4_t)vadd_s32(*(int32x2_t *)v130.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v130, 2)), (int16x4_t)vadd_s32(*(int32x2_t *)v131.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v131, 2))).u32[0];
  v130.i32[1] = result.i32[1];
  *a3 = v130.i64[0];
  return result;
}

int8x8_t sub_221A27DC4(uint8x16_t **a1, uint64_t a2, void *a3)
{
  int v3 = *(uint8x16_t **)(a2 + 56);
  int v4 = a1[1];
  uint8x16_t v5 = v3[1];
  int32x4_t v6 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v4, *v3))));
  int v7 = a1[2];
  int32x4_t v8 = a1[3];
  int32x4_t v9 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v7, *v3))));
  int32x4_t v10 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v8, *v3))));
  uint64_t v11 = *(unsigned int *)(a2 + 16);
  int64x2_t v12 = (uint8x16_t *)((char *)*a1 + v11);
  int64x2_t v13 = (uint8x16_t *)((char *)v4 + v11);
  uint64_t v14 = (uint8x16_t *)((char *)v7 + v11);
  uint64_t v15 = (uint8x16_t *)((char *)v8 + v11);
  int32x4_t v16 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v12, v5)))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(**a1, *v3)))));
  int32x4_t v17 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v13, v5)))), v6);
  int32x4_t v18 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v14, v5)))), v9);
  int32x4_t v19 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v15, v5)))), v10);
  uint8x16_t v20 = (uint8x16_t *)((char *)v12 + v11);
  uint64_t v21 = (uint8x16_t *)((char *)v13 + v11);
  uint8x16_t v22 = (uint8x16_t *)((char *)v14 + v11);
  uint64_t v23 = (uint8x16_t *)((char *)v15 + v11);
  uint8x16_t v24 = v3[2];
  uint8x16_t v25 = v3[3];
  int32x4_t v26 = vaddq_s32(v16, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v20, v24)))));
  int32x4_t v27 = vaddq_s32(v17, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v21, v24)))));
  int32x4_t v28 = vaddq_s32(v18, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v22, v24)))));
  int32x4_t v29 = vaddq_s32(v19, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v23, v24)))));
  uint8x16_t v30 = (uint8x16_t *)((char *)v20 + v11);
  int64x2_t v31 = (uint8x16_t *)((char *)v21 + v11);
  uint8x16_t v32 = (uint8x16_t *)((char *)v22 + v11);
  uint8x16_t v33 = (uint8x16_t *)((char *)v23 + v11);
  int32x4_t v34 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v30, v25))));
  int32x4_t v35 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v31, v25))));
  int32x4_t v36 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v32, v25))));
  int32x4_t v37 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v33, v25))));
  uint8x16_t v38 = (uint8x16_t *)((char *)v30 + v11);
  int32x4_t v39 = (uint8x16_t *)((char *)v31 + v11);
  int32x4_t v40 = (uint8x16_t *)((char *)v32 + v11);
  int64x2_t v41 = (uint8x16_t *)((char *)v33 + v11);
  uint8x16_t v42 = v3[4];
  uint8x16_t v43 = v3[5];
  int32x4_t v44 = vaddq_s32(v34, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v38, v42)))));
  int32x4_t v45 = vaddq_s32(v35, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v39, v42)))));
  int32x4_t v46 = vaddq_s32(v36, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v40, v42)))));
  int32x4_t v47 = vaddq_s32(v37, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v41, v42)))));
  uint8x16_t v48 = (uint8x16_t *)((char *)v38 + v11);
  uint8x16_t v49 = (uint8x16_t *)((char *)v39 + v11);
  uint8x16_t v50 = (uint8x16_t *)((char *)v40 + v11);
  int64x2_t v51 = (uint8x16_t *)((char *)v41 + v11);
  int32x4_t v52 = vaddq_s32(v26, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v48, v43)))));
  int32x4_t v53 = vaddq_s32(v27, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v49, v43)))));
  int32x4_t v54 = vaddq_s32(v28, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v50, v43)))));
  int32x4_t v55 = vaddq_s32(v29, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v51, v43)))));
  uint8x16_t v56 = v3[6];
  uint8x16_t v57 = v3[7];
  int32x4_t v58 = vaddq_s32(vaddq_s32(v52, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v48 + v11 + v11), v57))))), vaddq_s32(v44, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v48 + v11), v56))))));
  int32x4_t v59 = vaddq_s32(vaddq_s32(v53, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v49 + v11 + v11), v57))))), vaddq_s32(v45, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v49 + v11), v56))))));
  int32x4_t v60 = vaddq_s32(vaddq_s32(v54, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v50 + v11 + v11), v57))))), vaddq_s32(v46, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v50 + v11), v56))))));
  int32x4_t v61 = vaddq_s32(vaddq_s32(v55, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v51 + v11 + v11), v57))))), vaddq_s32(v47, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)((char *)v51 + v11), v56))))));
  *(int32x2_t *)v60.i8 = vadd_s32(*(int32x2_t *)v60.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v60, 2));
  int8x8_t result = vext_s8(*(int8x8_t *)v60.i8, (int8x8_t)vzip1_s16(*(int16x4_t *)v60.i8, (int16x4_t)vadd_s32(*(int32x2_t *)v61.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v61, 2))), 4uLL);
  v58.i32[0] = vzip1_s16((int16x4_t)vadd_s32(*(int32x2_t *)v58.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v58, 2)), (int16x4_t)vadd_s32(*(int32x2_t *)v59.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v59, 2))).u32[0];
  v58.i32[1] = result.i32[1];
  *a3 = v58.i64[0];
  return result;
}

int8x8_t sub_221A2816C(uint64_t a1, uint64_t a2, void *a3, int64x2_t a4, int64x2_t a5, int64x2_t a6, double a7, double a8, int64x2_t a9, int64x2_t a10, int64x2_t a11)
{
  uint64_t v16 = *(unsigned int *)(a2 + 16);
  uint64_t v15 = *(unsigned int *)(a2 + 20);
  int32x4_t v17 = *(unint64_t **)(a1 + 8);
  int32x4_t v18 = (unint64_t *)(*(void *)a1 + v16);
  a4.i64[0] = **(void **)a1;
  a5.i64[0] = *v18;
  uint8x16_t v19 = (uint8x16_t)vzip1q_s64(a4, a5);
  uint8x16_t v20 = (char *)v17 + v16;
  a5.i64[0] = *v17;
  a6.i64[0] = *(unint64_t *)((char *)v17 + v16);
  uint64_t v21 = *(void *)(a2 + 64);
  uint8x16_t v22 = *(uint8x16_t *)(v21 + 16);
  int64x2_t v23 = (int64x2_t)vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(a5, a6), *(uint8x16_t *)v21)));
  int32x4_t v24 = (int32x4_t)vpaddlq_u32((uint32x4_t)v23);
  uint8x16_t v25 = *(uint64_t **)(a1 + 16);
  int32x4_t v26 = *(unint64_t **)(a1 + 24);
  int32x4_t v27 = (char *)v25 + v16;
  v23.i64[0] = *v25;
  a9.i64[0] = *(uint64_t *)((char *)v25 + v16);
  uint8x16_t v28 = (uint8x16_t)vzip1q_s64(v23, a9);
  int32x4_t v29 = (unint64_t *)((char *)v26 + v16);
  a9.i64[0] = *v26;
  a10.i64[0] = *v29;
  int64x2_t v30 = vzip1q_s64(a9, a10);
  int32x4_t v31 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v28, *(uint8x16_t *)v21))));
  int64x2_t v32 = (int64x2_t)vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v30, *(uint8x16_t *)v21)));
  int32x4_t v33 = (int32x4_t)vpaddlq_u32((uint32x4_t)v32);
  int32x4_t v34 = (uint64_t *)(*(void *)a1 + v15);
  int32x4_t v35 = (char *)v18 + v15;
  v32.i64[0] = *v34;
  v30.i64[0] = *(unint64_t *)((char *)v18 + v15);
  uint8x16_t v36 = (uint8x16_t)vzip1q_s64(v32, v30);
  int32x4_t v37 = (char *)v17 + v15;
  uint8x16_t v38 = &v20[v15];
  v30.i64[0] = *(unint64_t *)((char *)v17 + v15);
  a11.i64[0] = *(void *)&v20[v15];
  int64x2_t v39 = vzip1q_s64(v30, a11);
  int32x4_t v40 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v36, v22)))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v19, *(uint8x16_t *)v21)))));
  int32x4_t v41 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v39, v22)))), v24);
  v24.i64[0] = *(uint64_t *)((char *)v25 + v15);
  v39.i64[0] = *(void *)&v27[v15];
  uint8x16_t v42 = (uint8x16_t)vzip1q_s64((int64x2_t)v24, v39);
  uint8x16_t v43 = (unint64_t *)((char *)v29 + v15);
  v39.i64[0] = *(unint64_t *)((char *)v26 + v15);
  a11.i64[0] = *v43;
  int32x4_t v44 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v42, v22)))), v31);
  int32x4_t v45 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v39, a11), v22))));
  int32x4_t v46 = vaddq_s32(v45, v33);
  v33.i64[0] = *(uint64_t *)((char *)v34 + v15);
  v45.i64[0] = *(unint64_t *)((char *)v18 + v15 + v15);
  uint8x16_t v47 = (uint8x16_t)vzip1q_s64((int64x2_t)v33, (int64x2_t)v45);
  v45.i64[0] = *(unint64_t *)((char *)v17 + v15 + v15);
  v31.i64[0] = *(void *)&v20[v15 + v15];
  uint8x16_t v48 = (uint8x16_t)vzip1q_s64((int64x2_t)v45, (int64x2_t)v31);
  int64x2_t v49 = *(int64x2_t *)(v21 + 32);
  uint8x16_t v50 = *(uint8x16_t *)(v21 + 48);
  int32x4_t v51 = vaddq_s32(v40, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v47, (uint8x16_t)v49)))));
  int32x4_t v52 = (uint64_t *)((char *)v25 + v15 + v15);
  int32x4_t v53 = (uint64_t *)&v27[v15 + v15];
  int32x4_t v54 = (uint64_t *)((char *)v26 + v15 + v15);
  int32x4_t v55 = (uint64_t *)((char *)v43 + v15);
  int32x4_t v56 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v48, (uint8x16_t)v49))));
  int32x4_t v57 = vaddq_s32(v41, v56);
  v41.i64[0] = *v52;
  v56.i64[0] = *v53;
  uint8x16_t v58 = (uint8x16_t)vzip1q_s64((int64x2_t)v41, (int64x2_t)v56);
  v56.i64[0] = *v54;
  v11.i64[0] = *v55;
  int64x2_t v59 = vzip1q_s64((int64x2_t)v56, v11);
  int32x4_t v60 = (uint64_t *)((char *)v34 + v15 + v15);
  int32x4_t v61 = (uint64_t *)&v35[v15 + v15];
  int32x4_t v62 = (uint64_t *)&v37[v15 + v15];
  int32x4_t v63 = (uint64_t *)&v38[v15 + v15];
  int32x4_t v64 = vaddq_s32(v44, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v58, (uint8x16_t)v49)))));
  int32x4_t v65 = (uint64_t *)((char *)v52 + v15);
  uint8x16_t v66 = (uint64_t *)((char *)v54 + v15);
  int32x4_t v67 = vaddq_s32(v46, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v59, (uint8x16_t)v49)))));
  v44.i64[0] = *v60;
  v46.i64[0] = *v61;
  uint8x16_t v68 = (uint64_t *)((char *)v60 + v15);
  uint8x16_t v69 = (uint64_t *)((char *)v61 + v15);
  uint8x16_t v70 = (uint8x16_t)vzip1q_s64((int64x2_t)v44, (int64x2_t)v46);
  v46.i64[0] = *v62;
  v49.i64[0] = *v63;
  int32x4_t v71 = (uint64_t *)((char *)v62 + v15);
  int32x4_t v72 = (uint64_t *)((char *)v63 + v15);
  int32x4_t v73 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v70, v50))));
  int32x4_t v74 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64((int64x2_t)v46, v49), v50))));
  v49.i64[0] = *v65;
  v59.i64[0] = *(uint64_t *)((char *)v53 + v15);
  uint8x16_t v75 = (uint8x16_t)vzip1q_s64(v49, v59);
  v59.i64[0] = *v66;
  v12.i64[0] = *(uint64_t *)((char *)v55 + v15);
  int64x2_t v76 = vzip1q_s64(v59, v12);
  int32x4_t v77 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v75, v50))));
  int32x4_t v78 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v76, v50))));
  v76.i64[0] = *v68;
  v12.i64[0] = *v69;
  uint8x16_t v79 = (uint64_t *)((char *)v68 + v15);
  int32x4_t v80 = (uint64_t *)((char *)v69 + v15);
  uint8x16_t v81 = (uint8x16_t)vzip1q_s64(v76, v12);
  v12.i64[0] = *v71;
  v13.i64[0] = *v72;
  int32x4_t v82 = (uint64_t *)((char *)v71 + v15);
  int32x4_t v83 = (uint64_t *)((char *)v72 + v15);
  int64x2_t v84 = vzip1q_s64(v12, v13);
  int64x2_t v85 = *(int64x2_t *)(v21 + 128);
  uint8x16_t v86 = *(uint8x16_t *)(v21 + 144);
  int32x4_t v87 = vaddq_s32(v73, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v81, (uint8x16_t)v85)))));
  int32x4_t v88 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v84, (uint8x16_t)v85))));
  int32x4_t v89 = vaddq_s32(v74, v88);
  v88.i64[0] = *(uint64_t *)((char *)v65 + v15);
  v84.i64[0] = *(uint64_t *)((char *)v53 + v15 + v15);
  uint8x16_t v90 = (uint8x16_t)vzip1q_s64((int64x2_t)v88, v84);
  v84.i64[0] = *(uint64_t *)((char *)v66 + v15);
  v14.i64[0] = *(uint64_t *)((char *)v55 + v15 + v15);
  int64x2_t v91 = vzip1q_s64(v84, v14);
  int32x4_t v92 = vaddq_s32(v77, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v90, (uint8x16_t)v85)))));
  int32x4_t v93 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v91, (uint8x16_t)v85))));
  int32x4_t v94 = vaddq_s32(v78, v93);
  v93.i64[0] = *v79;
  v91.i64[0] = *v80;
  uint8x16_t v95 = (uint8x16_t)vzip1q_s64((int64x2_t)v93, v91);
  v91.i64[0] = *v82;
  v85.i64[0] = *v83;
  int64x2_t v96 = vzip1q_s64(v91, v85);
  int32x4_t v97 = vaddq_s32(v51, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v95, v86)))));
  int32x4_t v98 = vaddq_s32(v57, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v96, v86)))));
  v57.i64[0] = *(uint64_t *)((char *)v65 + v15 + v15);
  v96.i64[0] = *(uint64_t *)((char *)v53 + v15 + v15 + v15);
  uint8x16_t v99 = (uint8x16_t)vzip1q_s64((int64x2_t)v57, v96);
  v96.i64[0] = *(uint64_t *)((char *)v66 + v15 + v15);
  v85.i64[0] = *(uint64_t *)((char *)v55 + v15 + v15 + v15);
  int64x2_t v100 = vzip1q_s64(v96, v85);
  int32x4_t v101 = vaddq_s32(v64, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v99, v86)))));
  int32x4_t v102 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v100, v86))));
  int32x4_t v103 = vaddq_s32(v67, v102);
  v102.i64[0] = *(uint64_t *)((char *)v79 + v15);
  v100.i64[0] = *(uint64_t *)((char *)v80 + v15);
  uint8x16_t v104 = (uint8x16_t)vzip1q_s64((int64x2_t)v102, v100);
  v100.i64[0] = *(uint64_t *)((char *)v82 + v15);
  v85.i64[0] = *(uint64_t *)((char *)v83 + v15);
  int64x2_t v105 = vzip1q_s64(v100, v85);
  int64x2_t v106 = *(int64x2_t *)(v21 + 160);
  uint8x16_t v107 = *(uint8x16_t *)(v21 + 176);
  int32x4_t v108 = vaddq_s32(v87, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v104, (uint8x16_t)v106)))));
  int32x4_t v109 = vaddq_s32(v89, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v105, (uint8x16_t)v106)))));
  v89.i64[0] = *(uint64_t *)((char *)v65 + v15 + v15 + v15);
  v105.i64[0] = *(uint64_t *)((char *)v53 + v15 + v15 + v15 + v15);
  uint8x16_t v110 = (uint8x16_t)vzip1q_s64((int64x2_t)v89, v105);
  v105.i64[0] = *(uint64_t *)((char *)v66 + v15 + v15 + v15);
  v14.i64[0] = *(uint64_t *)((char *)v55 + v15 + v15 + v15 + v15);
  int64x2_t v111 = vzip1q_s64(v105, v14);
  int32x4_t v112 = vaddq_s32(v92, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v110, (uint8x16_t)v106)))));
  int32x4_t v113 = vaddq_s32(v94, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v111, (uint8x16_t)v106)))));
  v94.i64[0] = *(uint64_t *)((char *)v79 + v15 + v15);
  v111.i64[0] = *(uint64_t *)((char *)v80 + v15 + v15);
  v106.i64[0] = *(uint64_t *)((char *)v82 + v15 + v15);
  v14.i64[0] = *(uint64_t *)((char *)v83 + v15 + v15);
  int32x4_t v114 = vaddq_s32(vaddq_s32(v97, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64((int64x2_t)v94, v111), v107))))), v108);
  int32x4_t v115 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v106, v14), v107))));
  int32x4_t v116 = vaddq_s32(vaddq_s32(v98, v115), v109);
  v109.i64[0] = *(uint64_t *)((char *)v65 + v15 + v15 + v15 + v15);
  v115.i64[0] = *(uint64_t *)((char *)v53 + v15 + v15 + v15 + v15 + v15);
  uint8x16_t v117 = (uint8x16_t)vzip1q_s64((int64x2_t)v109, (int64x2_t)v115);
  v115.i64[0] = *(uint64_t *)((char *)v66 + v15 + v15 + v15 + v15);
  v97.i64[0] = *(uint64_t *)((char *)v55 + v15 + v15 + v15 + v15 + v15);
  int32x4_t v118 = vaddq_s32(vaddq_s32(v101, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v117, v107))))), v112);
  int32x4_t v119 = vaddq_s32(vaddq_s32(v103, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64((int64x2_t)v115, (int64x2_t)v97), v107))))), v113);
  *(int32x2_t *)v118.i8 = vadd_s32(*(int32x2_t *)v118.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v118, 2));
  int8x8_t result = vext_s8(*(int8x8_t *)v118.i8, (int8x8_t)vzip1_s16(*(int16x4_t *)v118.i8, (int16x4_t)vadd_s32(*(int32x2_t *)v119.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v119, 2))), 4uLL);
  v118.i32[0] = vzip1_s16((int16x4_t)vadd_s32(*(int32x2_t *)v114.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v114, 2)), (int16x4_t)vadd_s32(*(int32x2_t *)v116.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v116, 2))).u32[0];
  v118.i32[1] = result.i32[1];
  *a3 = v118.i64[0];
  return result;
}

__n64 sub_221A28684(uint64_t a1, uint64_t a2, __n64 *a3, int64x2_t a4, int64x2_t a5, int64x2_t a6, double a7, double a8, int64x2_t a9, int64x2_t a10, int64x2_t a11)
{
  uint64_t v16 = *(unsigned int *)(a2 + 16);
  uint64_t v15 = *(unsigned int *)(a2 + 20);
  int32x4_t v17 = *(unint64_t **)(a1 + 8);
  int32x4_t v18 = *(uint64_t **)(a1 + 16);
  uint8x16_t v19 = *(unint64_t **)(a1 + 24);
  uint8x16_t v20 = (unint64_t *)(*(void *)a1 + v16);
  uint64_t v21 = (unint64_t *)((char *)v17 + v16);
  uint8x16_t v22 = (unint64_t *)((char *)v18 + v16);
  int64x2_t v23 = (unint64_t *)((char *)v19 + v16);
  int32x4_t v24 = *(uint8x16_t **)(a2 + 64);
  a4.i64[0] = **(void **)a1;
  a5.i64[0] = *v20;
  uint8x16_t v25 = (uint64_t *)(*(void *)a1 + v15);
  int32x4_t v26 = (uint64_t *)((char *)v20 + v15);
  uint8x16_t v27 = (uint8x16_t)vzip1q_s64(a4, a5);
  a5.i64[0] = *v17;
  a6.i64[0] = *v21;
  uint8x16_t v28 = (unint64_t *)((char *)v21 + v15);
  uint8x16_t v29 = v24[1];
  int64x2_t v30 = (int64x2_t)vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(a5, a6), *v24)));
  int32x4_t v31 = (int32x4_t)vpaddlq_u32((uint32x4_t)v30);
  v30.i64[0] = *v18;
  a9.i64[0] = *v22;
  int64x2_t v32 = (uint64_t *)((char *)v22 + v15);
  uint8x16_t v33 = (uint8x16_t)vzip1q_s64(v30, a9);
  a9.i64[0] = *v19;
  a10.i64[0] = *v23;
  int64x2_t v34 = vzip1q_s64(a9, a10);
  int32x4_t v35 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v33, *v24))));
  int64x2_t v36 = (int64x2_t)vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v34, *v24)));
  int32x4_t v37 = (int32x4_t)vpaddlq_u32((uint32x4_t)v36);
  v36.i64[0] = *v25;
  v34.i64[0] = *v26;
  uint8x16_t v38 = (uint8x16_t)vzip1q_s64(v36, v34);
  v34.i64[0] = *(unint64_t *)((char *)v17 + v15);
  a11.i64[0] = *v28;
  int64x2_t v39 = vzip1q_s64(v34, a11);
  int32x4_t v40 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v38, v29)))), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v27, *v24)))));
  int32x4_t v41 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v39, v29)))), v31);
  v31.i64[0] = *(uint64_t *)((char *)v18 + v15);
  v39.i64[0] = *v32;
  uint8x16_t v42 = (uint8x16_t)vzip1q_s64((int64x2_t)v31, v39);
  v39.i64[0] = *(unint64_t *)((char *)v19 + v15);
  a11.i64[0] = *(unint64_t *)((char *)v23 + v15);
  int64x2_t v43 = vzip1q_s64(v39, a11);
  int32x4_t v44 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v42, v29)))), v35);
  int32x4_t v45 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v43, v29))));
  int32x4_t v46 = vaddq_s32(v45, v37);
  v45.i64[0] = *(uint64_t *)((char *)v25 + v15);
  v43.i64[0] = *(uint64_t *)((char *)v26 + v15);
  uint8x16_t v47 = (uint8x16_t)vzip1q_s64((int64x2_t)v45, v43);
  v43.i64[0] = *(unint64_t *)((char *)v17 + v15 + v15);
  v35.i64[0] = *(unint64_t *)((char *)v28 + v15);
  uint8x16_t v48 = (uint8x16_t)vzip1q_s64(v43, (int64x2_t)v35);
  uint8x16_t v49 = v24[2];
  uint8x16_t v50 = v24[3];
  int32x4_t v51 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v47, v49))));
  int32x4_t v52 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v48, v49))));
  v11.i64[0] = *(uint64_t *)((char *)v18 + v15 + v15);
  v12.i64[0] = *(uint64_t *)((char *)v32 + v15);
  uint8x16_t v53 = (uint8x16_t)vzip1q_s64(v11, v12);
  v12.i64[0] = *(unint64_t *)((char *)v19 + v15 + v15);
  v13.i64[0] = *(unint64_t *)((char *)v23 + v15 + v15);
  int64x2_t v54 = vzip1q_s64(v12, v13);
  int32x4_t v55 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v53, v49))));
  uint16x8_t v56 = vpaddlq_u8(vabdq_u8((uint8x16_t)v54, v49));
  v54.i64[0] = *(uint64_t *)((char *)v25 + v15 + v15);
  v13.i64[0] = *(uint64_t *)((char *)v26 + v15 + v15);
  uint8x16_t v57 = (uint8x16_t)vzip1q_s64(v54, v13);
  v13.i64[0] = *(unint64_t *)((char *)v17 + v15 + v15 + v15);
  v14.i64[0] = *(unint64_t *)((char *)v28 + v15 + v15);
  int32x4_t v58 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v57, v50))));
  int32x4_t v59 = vaddq_s32(v40, vaddq_s32(v51, v58));
  int32x4_t v60 = vaddq_s32(v52, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v13, v14), v50)))));
  int32x4_t v61 = vaddq_s32(v41, v60);
  v60.i64[0] = *(uint64_t *)((char *)v18 + v15 + v15 + v15);
  v52.i64[0] = *(uint64_t *)((char *)v32 + v15 + v15);
  uint8x16_t v62 = (uint8x16_t)vzip1q_s64((int64x2_t)v60, (int64x2_t)v52);
  v52.i64[0] = *(unint64_t *)((char *)v19 + v15 + v15 + v15);
  v58.i64[0] = *(unint64_t *)((char *)v23 + v15 + v15 + v15);
  int32x4_t v63 = vaddq_s32(v44, vaddq_s32(v55, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v62, v50))))));
  int32x4_t v64 = vaddq_s32(v46, vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(v56)), (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64((int64x2_t)v52, (int64x2_t)v58), v50))))));
  *(int32x2_t *)v63.i8 = vadd_s32(*(int32x2_t *)v63.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v63, 2));
  result.n64_u32[0] = vzip1_s16((int16x4_t)vadd_s32(*(int32x2_t *)v59.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v59, 2)), (int16x4_t)vadd_s32(*(int32x2_t *)v61.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v61, 2))).u32[0];
  result.n64_u32[1] = vext_s8(*(int8x8_t *)&v63, (int8x8_t)vzip1_s16(*(int16x4_t *)&v63, (int16x4_t)vadd_s32(*(int32x2_t *)&v64, (int32x2_t)vdupq_laneq_s32(v64, 2))), 4uLL).u32[1];
  a3->n64_u64[0] = result.n64_u64[0];
  return result;
}

__n64 sub_221A28914(int a1, uint64_t a2, __n64 *a3)
{
  uint64_t v358 = *MEMORY[0x263EF8340];
  long long v356 = 0u;
  long long v357 = 0u;
  long long v354 = 0u;
  long long v355 = 0u;
  int v4 = *(uint8x16_t **)(a2 + 56);
  uint64_t v5 = *(unsigned int *)(a2 + 16);
  int v6 = sub_221A25634(a1, a2, &v356, &v354);
  uint64_t v7 = v356;
  uint8x16_t v8 = *(uint8x16_t *)v356;
  if (v6)
  {
    uint8x16_t v9 = vrhaddq_u8(v8, *(uint8x16_t *)v354);
    *(void *)&long long v356 = v356 + v5;
    uint8x16_t v10 = vrhaddq_u8(*(uint8x16_t *)v357, *(uint8x16_t *)v355);
    *(void *)&long long v357 = v357 + v5;
    uint8x16_t v11 = vrhaddq_u8(**((uint8x16_t **)&v357 + 1), **((uint8x16_t **)&v355 + 1));
    *((void *)&v357 + 1) += v5;
    int32x4_t v12 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v9, *v4))));
    int32x4_t v13 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v10, *v4))));
    int32x4_t v14 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v11, *v4))));
    uint8x16_t v15 = vrhaddq_u8(*(uint8x16_t *)(v7 + v5), *(uint8x16_t *)(v354 + v5));
    int32x4_t v16 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v4, v15))));
    *(void *)&long long v356 = v7 + v5 + v5;
    uint8x16_t v17 = vrhaddq_u8(*(uint8x16_t *)v357, *(uint8x16_t *)(v355 + v5));
    *(void *)&long long v357 = v357 + v5;
    uint8x16_t v18 = vrhaddq_u8(**((uint8x16_t **)&v357 + 1), *(uint8x16_t *)(*((void *)&v355 + 1) + v5));
    *((void *)&v357 + 1) += v5;
    uint8x16_t v19 = v4[1];
    uint8x16_t v20 = v4[2];
    int32x4_t v21 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v15, v19)))), v12);
    int32x4_t v22 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v17, v19)))), v13);
    int32x4_t v23 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v18, v19)))), v14);
    int32x4_t v24 = (uint8x16_t *)(v354 + v5 + v5);
    uint8x16_t v25 = vrhaddq_u8(*(uint8x16_t *)v356, *v24);
    int32x4_t v26 = (uint8x16_t *)(v355 + v5 + v5);
    *(void *)&long long v356 = v356 + v5;
    int32x4_t v27 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v19, v25)))), v16);
    uint8x16_t v28 = vrhaddq_u8(*(uint8x16_t *)v357, *v26);
    uint8x16_t v29 = (uint8x16_t *)(*((void *)&v355 + 1) + v5 + v5);
    *(void *)&long long v357 = v357 + v5;
    uint8x16_t v30 = vrhaddq_u8(**((uint8x16_t **)&v357 + 1), *v29);
    int32x4_t v31 = (uint8x16_t *)((char *)v24 + v5);
    int64x2_t v32 = (uint8x16_t *)((char *)v26 + v5);
    *((void *)&v357 + 1) += v5;
    uint8x16_t v33 = (uint8x16_t *)((char *)v29 + v5);
    int32x4_t v34 = vaddq_s32(v21, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v25, v20)))));
    int32x4_t v35 = vaddq_s32(v22, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v28, v20)))));
    int32x4_t v36 = vaddq_s32(v23, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v30, v20)))));
    uint8x16_t v37 = *(uint8x16_t *)v356;
    uint8x16_t v38 = *v31;
    *(void *)&long long v356 = v356 + v5;
    int64x2_t v39 = (uint8x16_t *)((char *)v31 + v5);
    uint8x16_t v40 = vrhaddq_u8(v37, v38);
    int32x4_t v41 = vaddq_s32(v27, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v20, v40)))));
    uint8x16_t v42 = *(uint8x16_t *)v357;
    uint8x16_t v43 = *v32;
    *(void *)&long long v357 = v357 + v5;
    int32x4_t v44 = (uint8x16_t *)((char *)v32 + v5);
    uint8x16_t v45 = vrhaddq_u8(v42, v43);
    uint8x16_t v46 = **((uint8x16_t **)&v357 + 1);
    uint8x16_t v47 = *v33;
    *((void *)&v357 + 1) += v5;
    uint8x16_t v48 = vrhaddq_u8(v46, v47);
    uint8x16_t v49 = v4[3];
    uint8x16_t v50 = v4[4];
    int32x4_t v51 = (uint8x16_t *)((char *)v33 + v5);
    int32x4_t v52 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v40, v49))));
    int32x4_t v53 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v45, v49))));
    int32x4_t v54 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v48, v49))));
    uint8x16_t v55 = *(uint8x16_t *)v356;
    uint8x16_t v56 = *v39;
    *(void *)&long long v356 = v356 + v5;
    uint8x16_t v57 = vrhaddq_u8(v55, v56);
    int32x4_t v58 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v49, v57))));
    uint8x16_t v59 = *(uint8x16_t *)v357;
    uint8x16_t v60 = *v44;
    *(void *)&long long v357 = v357 + v5;
    int32x4_t v61 = (uint8x16_t *)((char *)v44 + v5);
    uint8x16_t v62 = vrhaddq_u8(v59, v60);
    uint8x16_t v63 = **((uint8x16_t **)&v357 + 1);
    uint8x16_t v64 = *v51;
    *((void *)&v357 + 1) += v5;
    int32x4_t v65 = vaddq_s32(v52, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v57, v50)))));
    int32x4_t v66 = vaddq_s32(v53, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v62, v50)))));
    int32x4_t v67 = vaddq_s32(v54, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v63, v64), v50)))));
    uint8x16_t v68 = *(uint8x16_t *)v356;
    uint8x16_t v69 = *(uint8x16_t *)((char *)v39 + v5);
    *(void *)&long long v356 = v356 + v5;
    uint8x16_t v70 = (uint8x16_t *)((char *)v39 + v5 + v5);
    uint8x16_t v71 = vrhaddq_u8(v68, v69);
    int32x4_t v72 = vaddq_s32(v58, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v50, v71)))));
    uint8x16_t v73 = *(uint8x16_t *)v357;
    uint8x16_t v74 = *v61;
    *(void *)&long long v357 = v357 + v5;
    uint8x16_t v75 = vrhaddq_u8(v73, v74);
    uint8x16_t v76 = **((uint8x16_t **)&v357 + 1);
    uint8x16_t v77 = *(uint8x16_t *)((char *)v51 + v5);
    *((void *)&v357 + 1) += v5;
    int32x4_t v78 = (uint8x16_t *)((char *)v51 + v5 + v5);
    uint8x16_t v79 = vrhaddq_u8(v76, v77);
    uint8x16_t v80 = v4[5];
    uint8x16_t v81 = v4[6];
    int32x4_t v82 = vaddq_s32(v34, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v71, v80)))));
    int32x4_t v83 = vaddq_s32(v35, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v75, v80)))));
    int32x4_t v84 = vaddq_s32(v36, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v79, v80)))));
    uint8x16_t v85 = *(uint8x16_t *)v356;
    uint8x16_t v86 = *v70;
    *(void *)&long long v356 = v356 + v5;
    int32x4_t v87 = (uint8x16_t *)((char *)v70 + v5);
    uint8x16_t v88 = vrhaddq_u8(v85, v86);
    int32x4_t v89 = vaddq_s32(v41, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v80, v88)))));
    uint8x16_t v90 = *(uint8x16_t *)v357;
    uint8x16_t v91 = *(uint8x16_t *)((char *)v61 + v5);
    *(void *)&long long v357 = v357 + v5;
    int32x4_t v92 = (uint8x16_t *)((char *)v61 + v5 + v5);
    uint8x16_t v93 = vrhaddq_u8(v90, v91);
    uint8x16_t v94 = **((uint8x16_t **)&v357 + 1);
    uint8x16_t v95 = *v78;
    *((void *)&v357 + 1) += v5;
    int64x2_t v96 = (uint8x16_t *)((char *)v78 + v5);
    int32x4_t v97 = vaddq_s32(v65, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v88, v81)))));
    int32x4_t v98 = vaddq_s32(v66, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v93, v81)))));
    int32x4_t v99 = vaddq_s32(v67, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v94, v95), v81)))));
    uint8x16_t v100 = *(uint8x16_t *)v356;
    uint8x16_t v101 = *v87;
    *(void *)&long long v356 = v356 + v5;
    int32x4_t v102 = (uint8x16_t *)((char *)v87 + v5);
    uint8x16_t v103 = vrhaddq_u8(v100, v101);
    int32x4_t v104 = vaddq_s32(v72, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v81, v103)))));
    uint8x16_t v105 = *(uint8x16_t *)v357;
    uint8x16_t v106 = *v92;
    *(void *)&long long v357 = v357 + v5;
    uint8x16_t v107 = (uint8x16_t *)((char *)v92 + v5);
    uint8x16_t v108 = vrhaddq_u8(v105, v106);
    uint8x16_t v109 = **((uint8x16_t **)&v357 + 1);
    uint8x16_t v110 = *v96;
    *((void *)&v357 + 1) += v5;
    int64x2_t v111 = (uint8x16_t *)((char *)v96 + v5);
    uint8x16_t v112 = vrhaddq_u8(v109, v110);
    uint8x16_t v113 = v4[7];
    uint8x16_t v114 = v4[8];
    int32x4_t v115 = vaddq_s32(v82, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v103, v113)))));
    int32x4_t v116 = vaddq_s32(v83, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v108, v113)))));
    int32x4_t v117 = vaddq_s32(v84, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v112, v113)))));
    uint8x16_t v118 = *(uint8x16_t *)v356;
    uint8x16_t v119 = *v102;
    *(void *)&long long v356 = v356 + v5;
    unsigned int v120 = (uint8x16_t *)((char *)v102 + v5);
    uint8x16_t v121 = vrhaddq_u8(v118, v119);
    int32x4_t v122 = vaddq_s32(v89, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v113, v121)))));
    uint8x16_t v123 = *(uint8x16_t *)v357;
    uint8x16_t v124 = *v107;
    *(void *)&long long v357 = v357 + v5;
    int32x4_t v125 = (uint8x16_t *)((char *)v107 + v5);
    uint8x16_t v126 = vrhaddq_u8(v123, v124);
    uint8x16_t v127 = **((uint8x16_t **)&v357 + 1);
    uint8x16_t v128 = *v111;
    *((void *)&v357 + 1) += v5;
    uint8x16_t v129 = (uint8x16_t *)((char *)v111 + v5);
    int32x4_t v130 = vaddq_s32(v97, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v121, v114)))));
    int32x4_t v131 = vaddq_s32(v98, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v126, v114)))));
    int32x4_t v132 = vaddq_s32(v99, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v127, v128), v114)))));
    uint8x16_t v133 = *(uint8x16_t *)v356;
    uint8x16_t v134 = *v120;
    *(void *)&long long v356 = v356 + v5;
    unsigned int v135 = (uint8x16_t *)((char *)v120 + v5);
    uint8x16_t v136 = vrhaddq_u8(v133, v134);
    int32x4_t v137 = vaddq_s32(v104, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v114, v136)))));
    uint8x16_t v138 = *(uint8x16_t *)v357;
    uint8x16_t v139 = *v125;
    *(void *)&long long v357 = v357 + v5;
    unint64_t v140 = (uint8x16_t *)((char *)v125 + v5);
    uint8x16_t v141 = vrhaddq_u8(v138, v139);
    uint8x16_t v142 = **((uint8x16_t **)&v357 + 1);
    uint8x16_t v143 = *v129;
    *((void *)&v357 + 1) += v5;
    unsigned int v144 = (uint8x16_t *)((char *)v129 + v5);
    uint8x16_t v145 = vrhaddq_u8(v142, v143);
    uint8x16_t v146 = v4[9];
    uint8x16_t v147 = v4[10];
    int32x4_t v148 = vaddq_s32(v115, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v136, v146)))));
    int32x4_t v149 = vaddq_s32(v116, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v141, v146)))));
    int32x4_t v150 = vaddq_s32(v117, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v145, v146)))));
    uint8x16_t v151 = *(uint8x16_t *)v356;
    uint8x16_t v152 = *v135;
    *(void *)&long long v356 = v356 + v5;
    char v153 = (uint8x16_t *)((char *)v135 + v5);
    uint8x16_t v154 = vrhaddq_u8(v151, v152);
    int32x4_t v155 = vaddq_s32(v122, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v146, v154)))));
    uint8x16_t v156 = *(uint8x16_t *)v357;
    uint8x16_t v157 = *v140;
    *(void *)&long long v357 = v357 + v5;
    uint8x16_t v158 = vrhaddq_u8(v156, v157);
    uint8x16_t v159 = **((uint8x16_t **)&v357 + 1);
    uint8x16_t v160 = *v144;
    *((void *)&v357 + 1) += v5;
    int32x4_t v161 = vaddq_s32(v130, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v154, v147)))));
    int32x4_t v162 = vaddq_s32(v131, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v158, v147)))));
    int32x4_t v163 = vaddq_s32(v132, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v159, v160), v147)))));
    uint8x16_t v164 = *(uint8x16_t *)v356;
    uint8x16_t v165 = *v153;
    *(void *)&long long v356 = v356 + v5;
    uint8x16_t v166 = vrhaddq_u8(v164, v165);
    int32x4_t v167 = vaddq_s32(v137, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v147, v166)))));
    uint8x16_t v168 = *(uint8x16_t *)v357;
    uint8x16_t v169 = *(uint8x16_t *)((char *)v140 + v5);
    *(void *)&long long v357 = v357 + v5;
    uint8x16_t v170 = vrhaddq_u8(v168, v169);
    uint8x16_t v171 = **((uint8x16_t **)&v357 + 1);
    uint8x16_t v172 = *(uint8x16_t *)((char *)v144 + v5);
    *((void *)&v357 + 1) += v5;
    uint8x16_t v173 = vrhaddq_u8(v171, v172);
    uint8x16_t v174 = v4[11];
    uint8x16_t v175 = v4[12];
    int32x4_t v176 = vaddq_s32(v148, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v166, v174)))));
    int32x4_t v177 = vaddq_s32(v149, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v170, v174)))));
    int32x4_t v178 = vaddq_s32(v150, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v173, v174)))));
    uint8x16_t v179 = *(uint8x16_t *)v356;
    uint8x16_t v180 = *(uint8x16_t *)((char *)v153 + v5);
    *(void *)&long long v356 = v356 + v5;
    uint8x16_t v181 = vrhaddq_u8(v179, v180);
    int32x4_t v182 = vaddq_s32(v155, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v174, v181)))));
    uint8x16_t v183 = *(uint8x16_t *)v357;
    uint8x16_t v184 = *(uint8x16_t *)((char *)v140 + v5 + v5);
    *(void *)&long long v357 = v357 + v5;
    unsigned int v185 = (uint8x16_t *)((char *)v140 + v5 + v5 + v5);
    *(void *)&long long v354 = (char *)v153 + v5 + v5;
    uint8x16_t v186 = vrhaddq_u8(v183, v184);
    uint8x16_t v187 = **((uint8x16_t **)&v357 + 1);
    uint8x16_t v188 = *(uint8x16_t *)((char *)v144 + v5 + v5);
    unint64_t v189 = (uint8x16_t *)(*((void *)&v357 + 1) + v5);
    *((void *)&v357 + 1) = v189;
    unint64_t v190 = (uint8x16_t *)((char *)v144 + v5 + v5 + v5);
    *(void *)&long long v355 = v185;
    *((void *)&v355 + 1) = v190;
    int32x4_t v191 = vaddq_s32(v161, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v181, v175)))));
    int32x4_t v192 = vaddq_s32(v162, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v186, v175)))));
    int32x4_t v193 = vaddq_s32(v163, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v187, v188), v175)))));
    uint8x16_t v194 = *(uint8x16_t *)v356;
    uint8x16_t v195 = *(uint8x16_t *)v354;
    *(void *)&long long v356 = v356 + v5;
    *(void *)&long long v354 = v354 + v5;
    uint8x16_t v196 = vrhaddq_u8(v194, v195);
    int32x4_t v197 = vaddq_s32(v167, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v175, v196)))));
    uint8x16_t v198 = *(uint8x16_t *)v357;
    uint8x16_t v199 = *v185;
    unsigned int v200 = (uint8x16_t *)(v357 + v5);
    *(void *)&long long v357 = v200;
    *(void *)&long long v355 = (char *)v185 + v5;
    uint8x16_t v201 = vrhaddq_u8(v198, v199);
    uint8x16_t v202 = *v189;
    uint8x16_t v203 = *v190;
    *((void *)&v357 + 1) = (char *)v189 + v5;
    *((void *)&v355 + 1) = (char *)v190 + v5;
    uint8x16_t v204 = vrhaddq_u8(v202, v203);
    uint8x16_t v205 = v4[13];
    uint8x16_t v206 = v4[14];
    int32x4_t v207 = vaddq_s32(v176, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v196, v205)))));
    int32x4_t v208 = vaddq_s32(v177, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v201, v205)))));
    int32x4_t v209 = vaddq_s32(v178, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v204, v205)))));
    uint8x16_t v210 = *(uint8x16_t *)v356;
    uint8x16_t v211 = *(uint8x16_t *)v354;
    unsigned int v212 = (uint8x16_t *)(v356 + v5);
    *(void *)&long long v356 = v212;
    unsigned int v213 = (uint8x16_t *)(v354 + v5);
    *(void *)&long long v354 = v213;
    uint8x16_t v214 = vrhaddq_u8(v210, v211);
    int32x4_t v215 = vaddq_s32(v182, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v205, v214)))));
    uint8x16_t v216 = *v200;
    uint8x16_t v217 = *(uint8x16_t *)((char *)v185 + v5);
    *(void *)&long long v357 = (char *)v200 + v5;
    *(void *)&long long v355 = (char *)v185 + v5 + v5;
    uint8x16_t v218 = vrhaddq_u8(v216, v217);
    uint8x16_t v219 = vrhaddq_u8(*(uint8x16_t *)((char *)v189 + v5), *(uint8x16_t *)((char *)v190 + v5));
    *((void *)&v357 + 1) = (char *)v189 + v5 + v5;
    *((void *)&v355 + 1) = (char *)v190 + v5 + v5;
    int32x4_t v220 = vaddq_s32(v191, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v214, v206)))));
    int32x4_t v221 = vaddq_s32(v192, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v218, v206)))));
    int32x4_t v222 = vaddq_s32(v193, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v219, v206)))));
    uint8x16_t v223 = *v212;
    uint8x16_t v224 = *v213;
    *(void *)&long long v356 = (char *)v212 + v5;
    *(void *)&long long v354 = (char *)v213 + v5;
    uint8x16_t v225 = vrhaddq_u8(v223, v224);
    int32x4_t v226 = vaddq_s32(v215, vaddq_s32(v197, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v206, v225))))));
    uint8x16_t v227 = v4[15];
    int32x4_t v228 = vaddq_s32(vaddq_s32(v207, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v225, v227))))), v220);
    int32x4_t v229 = vaddq_s32(vaddq_s32(v208, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(*(uint8x16_t *)((char *)v200 + v5), *(uint8x16_t *)v355), v227))))), v221);
    int32x4_t v230 = vaddq_s32(vaddq_s32(v209, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(**((uint8x16_t **)&v357 + 1), **((uint8x16_t **)&v355 + 1)), v227))))), v222);
    uint8x16_t v231 = vabdq_u8(v227, vrhaddq_u8(*(uint8x16_t *)((char *)v212 + v5), *(uint8x16_t *)((char *)v213 + v5)));
  }
  else
  {
    uint8x16_t v232 = *(uint8x16_t *)v357;
    uint8x16_t v233 = **((uint8x16_t **)&v357 + 1);
    *(void *)&long long v356 = v356 + v5;
    *(void *)&long long v357 = v357 + v5;
    *((void *)&v357 + 1) += v5;
    int32x4_t v234 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v8, *v4))));
    int32x4_t v235 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v232, *v4))));
    int32x4_t v236 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v233, *v4))));
    uint8x16_t v237 = *(uint8x16_t *)(v7 + v5);
    uint8x16_t v238 = *(uint8x16_t *)v357;
    int32x4_t v239 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v4, v237))));
    uint8x16_t v240 = **((uint8x16_t **)&v357 + 1);
    *(void *)&long long v356 = v7 + v5 + v5;
    *(void *)&long long v357 = v357 + v5;
    *((void *)&v357 + 1) += v5;
    uint8x16_t v241 = v4[1];
    uint8x16_t v242 = v4[2];
    int32x4_t v243 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v237, v241)))), v234);
    int32x4_t v244 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v238, v241)))), v235);
    int32x4_t v245 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v240, v241)))), v236);
    uint8x16_t v246 = *(uint8x16_t *)v356;
    uint8x16_t v247 = *(uint8x16_t *)v357;
    uint8x16_t v248 = **((uint8x16_t **)&v357 + 1);
    int32x4_t v249 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v241, *(uint8x16_t *)v356)))), v239);
    *(void *)&long long v356 = v356 + v5;
    *(void *)&long long v357 = v357 + v5;
    *((void *)&v357 + 1) += v5;
    int32x4_t v250 = vaddq_s32(v243, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v246, v242)))));
    int32x4_t v251 = vaddq_s32(v244, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v247, v242)))));
    int32x4_t v252 = vaddq_s32(v245, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v248, v242)))));
    uint8x16_t v253 = *(uint8x16_t *)v356;
    uint8x16_t v254 = *(uint8x16_t *)v357;
    uint8x16_t v255 = **((uint8x16_t **)&v357 + 1);
    int32x4_t v256 = vaddq_s32(v249, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v242, *(uint8x16_t *)v356)))));
    *(void *)&long long v356 = v356 + v5;
    *(void *)&long long v357 = v357 + v5;
    *((void *)&v357 + 1) += v5;
    uint8x16_t v257 = v4[3];
    uint8x16_t v258 = v4[4];
    int32x4_t v259 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v253, v257))));
    int32x4_t v260 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v254, v257))));
    int32x4_t v261 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v255, v257))));
    uint8x16_t v262 = *(uint8x16_t *)v356;
    uint8x16_t v263 = *(uint8x16_t *)v357;
    uint8x16_t v264 = **((uint8x16_t **)&v357 + 1);
    int32x4_t v265 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v257, *(uint8x16_t *)v356))));
    *(void *)&long long v356 = v356 + v5;
    *(void *)&long long v357 = v357 + v5;
    *((void *)&v357 + 1) += v5;
    int32x4_t v266 = vaddq_s32(v259, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v262, v258)))));
    int32x4_t v267 = vaddq_s32(v260, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v263, v258)))));
    int32x4_t v268 = vaddq_s32(v261, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v264, v258)))));
    uint8x16_t v269 = *(uint8x16_t *)v357;
    int32x4_t v270 = vaddq_s32(v265, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v258, *(uint8x16_t *)v356)))));
    uint8x16_t v271 = v4[5];
    uint8x16_t v272 = v4[6];
    int32x4_t v273 = vaddq_s32(v250, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)v356, v271)))));
    uint8x16_t v274 = **((uint8x16_t **)&v357 + 1);
    *(void *)&long long v356 = v356 + v5;
    *(void *)&long long v357 = v357 + v5;
    *((void *)&v357 + 1) += v5;
    int32x4_t v275 = vaddq_s32(v251, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v269, v271)))));
    int32x4_t v276 = vaddq_s32(v252, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v274, v271)))));
    uint8x16_t v277 = *(uint8x16_t *)v356;
    uint8x16_t v278 = *(uint8x16_t *)v357;
    int32x4_t v279 = vaddq_s32(v256, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v271, *(uint8x16_t *)v356)))));
    uint8x16_t v280 = **((uint8x16_t **)&v357 + 1);
    *(void *)&long long v356 = v356 + v5;
    *(void *)&long long v357 = v357 + v5;
    *((void *)&v357 + 1) += v5;
    int32x4_t v281 = vaddq_s32(v266, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v277, v272)))));
    int32x4_t v282 = vaddq_s32(v267, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v278, v272)))));
    int32x4_t v283 = vaddq_s32(v268, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v280, v272)))));
    uint8x16_t v284 = *(uint8x16_t *)v357;
    int32x4_t v285 = vaddq_s32(v270, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v272, *(uint8x16_t *)v356)))));
    uint8x16_t v286 = v4[7];
    uint8x16_t v287 = v4[8];
    int32x4_t v288 = vaddq_s32(v273, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)v356, v286)))));
    uint8x16_t v289 = **((uint8x16_t **)&v357 + 1);
    *(void *)&long long v356 = v356 + v5;
    *(void *)&long long v357 = v357 + v5;
    *((void *)&v357 + 1) += v5;
    int32x4_t v290 = vaddq_s32(v275, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v284, v286)))));
    int32x4_t v291 = vaddq_s32(v276, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v289, v286)))));
    uint8x16_t v292 = *(uint8x16_t *)v356;
    uint8x16_t v293 = *(uint8x16_t *)v357;
    int32x4_t v294 = vaddq_s32(v279, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v286, *(uint8x16_t *)v356)))));
    uint8x16_t v295 = **((uint8x16_t **)&v357 + 1);
    *(void *)&long long v356 = v356 + v5;
    *(void *)&long long v357 = v357 + v5;
    *((void *)&v357 + 1) += v5;
    int32x4_t v296 = vaddq_s32(v281, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v292, v287)))));
    int32x4_t v297 = vaddq_s32(v282, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v293, v287)))));
    int32x4_t v298 = vaddq_s32(v283, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v295, v287)))));
    uint8x16_t v299 = *(uint8x16_t *)v357;
    int32x4_t v300 = vaddq_s32(v285, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v287, *(uint8x16_t *)v356)))));
    uint8x16_t v301 = v4[9];
    uint8x16_t v302 = v4[10];
    int32x4_t v303 = vaddq_s32(v288, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)v356, v301)))));
    uint8x16_t v304 = **((uint8x16_t **)&v357 + 1);
    *(void *)&long long v356 = v356 + v5;
    *(void *)&long long v357 = v357 + v5;
    *((void *)&v357 + 1) += v5;
    int32x4_t v305 = vaddq_s32(v290, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v299, v301)))));
    int32x4_t v306 = vaddq_s32(v291, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v304, v301)))));
    uint8x16_t v307 = *(uint8x16_t *)v356;
    uint8x16_t v308 = *(uint8x16_t *)v357;
    int32x4_t v309 = vaddq_s32(v294, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v301, *(uint8x16_t *)v356)))));
    uint8x16_t v310 = **((uint8x16_t **)&v357 + 1);
    *(void *)&long long v356 = v356 + v5;
    *(void *)&long long v357 = v357 + v5;
    *((void *)&v357 + 1) += v5;
    int32x4_t v311 = vaddq_s32(v296, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v307, v302)))));
    int32x4_t v312 = vaddq_s32(v297, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v308, v302)))));
    int32x4_t v313 = vaddq_s32(v298, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v310, v302)))));
    uint8x16_t v314 = *(uint8x16_t *)v357;
    int32x4_t v315 = vaddq_s32(v300, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v302, *(uint8x16_t *)v356)))));
    uint8x16_t v316 = v4[11];
    uint8x16_t v317 = v4[12];
    int32x4_t v318 = vaddq_s32(v303, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)v356, v316)))));
    uint8x16_t v319 = **((uint8x16_t **)&v357 + 1);
    *(void *)&long long v356 = v356 + v5;
    *(void *)&long long v357 = v357 + v5;
    *((void *)&v357 + 1) += v5;
    int32x4_t v320 = vaddq_s32(v305, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v314, v316)))));
    int32x4_t v321 = vaddq_s32(v306, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v319, v316)))));
    uint8x16_t v322 = *(uint8x16_t *)v356;
    uint8x16_t v323 = *(uint8x16_t *)v357;
    int32x4_t v324 = vaddq_s32(v309, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v316, *(uint8x16_t *)v356)))));
    uint8x16_t v325 = **((uint8x16_t **)&v357 + 1);
    *(void *)&long long v356 = v356 + v5;
    *(void *)&long long v357 = v357 + v5;
    *((void *)&v357 + 1) += v5;
    int32x4_t v326 = vaddq_s32(v311, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v322, v317)))));
    int32x4_t v327 = vaddq_s32(v312, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v323, v317)))));
    int32x4_t v328 = vaddq_s32(v313, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v325, v317)))));
    uint8x16_t v329 = *(uint8x16_t *)v357;
    int32x4_t v330 = vaddq_s32(v315, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v317, *(uint8x16_t *)v356)))));
    uint8x16_t v331 = v4[13];
    uint8x16_t v332 = v4[14];
    int32x4_t v333 = vaddq_s32(v318, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)v356, v331)))));
    uint8x16_t v334 = **((uint8x16_t **)&v357 + 1);
    unint64_t v335 = (uint8x16_t *)(v357 + v5);
    *(void *)&long long v356 = v356 + v5;
    unsigned int v336 = (uint8x16_t *)(*((void *)&v357 + 1) + v5);
    *(void *)&long long v357 = v335;
    *((void *)&v357 + 1) = v336;
    int32x4_t v337 = vaddq_s32(v320, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v329, v331)))));
    int32x4_t v338 = vaddq_s32(v321, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v334, v331)))));
    uint8x16_t v339 = *(uint8x16_t *)v356;
    uint8x16_t v340 = *v335;
    int32x4_t v341 = vaddq_s32(v324, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v331, *(uint8x16_t *)v356)))));
    uint8x16_t v342 = *v336;
    int v343 = (uint8x16_t *)(v356 + v5);
    *(void *)&long long v356 = v343;
    *(void *)&long long v357 = (char *)v335 + v5;
    *((void *)&v357 + 1) = (char *)v336 + v5;
    int32x4_t v344 = vaddq_s32(v326, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v339, v332)))));
    int32x4_t v345 = vaddq_s32(v327, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v340, v332)))));
    int32x4_t v346 = vaddq_s32(v328, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v342, v332)))));
    uint8x16_t v347 = *v343;
    uint8x16_t v348 = *(uint8x16_t *)((char *)v335 + v5);
    uint8x16_t v349 = *(uint8x16_t *)((char *)v336 + v5);
    int32x4_t v226 = vaddq_s32(v341, vaddq_s32(v330, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v332, *v343))))));
    *(void *)&long long v356 = (char *)v343 + v5;
    uint8x16_t v350 = v4[15];
    int32x4_t v228 = vaddq_s32(vaddq_s32(v333, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v347, v350))))), v344);
    int32x4_t v229 = vaddq_s32(vaddq_s32(v337, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v348, v350))))), v345);
    int32x4_t v230 = vaddq_s32(vaddq_s32(v338, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v349, v350))))), v346);
    uint8x16_t v231 = vabdq_u8(v350, *(uint8x16_t *)((char *)v343 + v5));
  }
  int32x4_t v351 = vaddq_s32(v226, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(v231))));
  int16x4_t v352 = (int16x4_t)vadd_s32(*(int32x2_t *)v229.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v229, 2));
  result.n64_u32[0] = vzip1_s16((int16x4_t)vadd_s32(*(int32x2_t *)v228.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v228, 2)), (int16x4_t)vadd_s32(*(int32x2_t *)v351.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v351, 2))).u32[0];
  result.n64_u32[1] = vext_s8(*(int8x8_t *)&v352, (int8x8_t)vzip1_s16(v352, (int16x4_t)vadd_s32(*(int32x2_t *)&v230, (int32x2_t)vdupq_laneq_s32(v230, 2))), 4uLL).u32[1];
  a3->n64_u64[0] = result.n64_u64[0];
  return result;
}

__n64 sub_221A29A8C(int a1, uint64_t a2, __n64 *a3)
{
  uint64_t v175 = *MEMORY[0x263EF8340];
  long long v173 = 0u;
  long long v174 = 0u;
  long long v171 = 0u;
  long long v172 = 0u;
  int v4 = *(uint8x16_t **)(a2 + 56);
  uint64_t v5 = *(unsigned int *)(a2 + 16);
  int v6 = sub_221A25634(a1, a2, &v173, &v171);
  uint64_t v7 = v173;
  uint8x16_t v8 = *(uint8x16_t *)v173;
  if (v6)
  {
    uint8x16_t v9 = vrhaddq_u8(v8, *(uint8x16_t *)v171);
    *(void *)&long long v173 = v173 + v5;
    uint8x16_t v10 = vrhaddq_u8(*(uint8x16_t *)v174, *(uint8x16_t *)v172);
    *(void *)&long long v174 = v174 + v5;
    uint8x16_t v11 = vrhaddq_u8(**((uint8x16_t **)&v174 + 1), **((uint8x16_t **)&v172 + 1));
    *((void *)&v174 + 1) += v5;
    int32x4_t v12 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v9, *v4))));
    int32x4_t v13 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v10, *v4))));
    int32x4_t v14 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v11, *v4))));
    uint8x16_t v15 = vrhaddq_u8(*(uint8x16_t *)(v7 + v5), *(uint8x16_t *)(v171 + v5));
    int32x4_t v16 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v4, v15))));
    *(void *)&long long v173 = v7 + v5 + v5;
    uint8x16_t v17 = vrhaddq_u8(*(uint8x16_t *)v174, *(uint8x16_t *)(v172 + v5));
    *(void *)&long long v174 = v174 + v5;
    uint8x16_t v18 = vrhaddq_u8(**((uint8x16_t **)&v174 + 1), *(uint8x16_t *)(*((void *)&v172 + 1) + v5));
    *((void *)&v174 + 1) += v5;
    uint8x16_t v19 = v4[1];
    uint8x16_t v20 = v4[2];
    int32x4_t v21 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v15, v19)))), v12);
    int32x4_t v22 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v17, v19)))), v13);
    int32x4_t v23 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v18, v19)))), v14);
    int32x4_t v24 = (uint8x16_t *)(v171 + v5 + v5);
    uint8x16_t v25 = vrhaddq_u8(*(uint8x16_t *)v173, *v24);
    int32x4_t v26 = (uint8x16_t *)(v172 + v5 + v5);
    *(void *)&long long v173 = v173 + v5;
    int32x4_t v27 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v19, v25)))), v16);
    uint8x16_t v28 = vrhaddq_u8(*(uint8x16_t *)v174, *v26);
    uint8x16_t v29 = (uint8x16_t *)(*((void *)&v172 + 1) + v5 + v5);
    *(void *)&long long v174 = v174 + v5;
    uint8x16_t v30 = vrhaddq_u8(**((uint8x16_t **)&v174 + 1), *v29);
    int32x4_t v31 = (uint8x16_t *)((char *)v24 + v5);
    int64x2_t v32 = (uint8x16_t *)((char *)v26 + v5);
    *((void *)&v174 + 1) += v5;
    uint8x16_t v33 = (uint8x16_t *)((char *)v29 + v5);
    int32x4_t v34 = vaddq_s32(v21, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v25, v20)))));
    int32x4_t v35 = vaddq_s32(v22, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v28, v20)))));
    int32x4_t v36 = vaddq_s32(v23, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v30, v20)))));
    uint8x16_t v37 = *(uint8x16_t *)v173;
    uint8x16_t v38 = *v31;
    *(void *)&long long v173 = v173 + v5;
    int64x2_t v39 = (uint8x16_t *)((char *)v31 + v5);
    uint8x16_t v40 = vrhaddq_u8(v37, v38);
    int32x4_t v41 = vaddq_s32(v27, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v20, v40)))));
    uint8x16_t v42 = *(uint8x16_t *)v174;
    uint8x16_t v43 = *v32;
    *(void *)&long long v174 = v174 + v5;
    int32x4_t v44 = (uint8x16_t *)((char *)v32 + v5);
    uint8x16_t v45 = vrhaddq_u8(v42, v43);
    uint8x16_t v46 = **((uint8x16_t **)&v174 + 1);
    uint8x16_t v47 = *v33;
    *((void *)&v174 + 1) += v5;
    uint8x16_t v48 = vrhaddq_u8(v46, v47);
    uint8x16_t v49 = v4[3];
    uint8x16_t v50 = v4[4];
    int32x4_t v51 = (uint8x16_t *)((char *)v33 + v5);
    int32x4_t v52 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v40, v49))));
    int32x4_t v53 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v45, v49))));
    int32x4_t v54 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v48, v49))));
    uint8x16_t v55 = *(uint8x16_t *)v173;
    uint8x16_t v56 = *v39;
    *(void *)&long long v173 = v173 + v5;
    uint8x16_t v57 = (uint8x16_t *)((char *)v39 + v5);
    uint8x16_t v58 = vrhaddq_u8(v55, v56);
    int32x4_t v59 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v49, v58))));
    uint8x16_t v60 = *(uint8x16_t *)v174;
    uint8x16_t v61 = *v44;
    *(void *)&long long v174 = v174 + v5;
    uint8x16_t v62 = (uint8x16_t *)((char *)v44 + v5);
    uint8x16_t v63 = vrhaddq_u8(v60, v61);
    uint8x16_t v64 = **((uint8x16_t **)&v174 + 1);
    uint8x16_t v65 = *v51;
    *((void *)&v174 + 1) += v5;
    int32x4_t v66 = (uint8x16_t *)((char *)v51 + v5);
    int32x4_t v67 = vaddq_s32(v52, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v58, v50)))));
    int32x4_t v68 = vaddq_s32(v53, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v63, v50)))));
    int32x4_t v69 = vaddq_s32(v54, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(v64, v65), v50)))));
    uint8x16_t v70 = *(uint8x16_t *)v173;
    uint8x16_t v71 = *v57;
    int32x4_t v72 = (uint8x16_t *)(v173 + v5);
    *(void *)&long long v173 = v72;
    uint8x16_t v73 = (uint8x16_t *)((char *)v57 + v5);
    uint8x16_t v74 = vrhaddq_u8(v70, v71);
    int32x4_t v75 = vaddq_s32(v59, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v50, v74)))));
    uint8x16_t v76 = *(uint8x16_t *)v174;
    uint8x16_t v77 = *v62;
    int32x4_t v78 = (uint8x16_t *)(v174 + v5);
    *(void *)&long long v174 = v78;
    uint8x16_t v79 = (uint8x16_t *)((char *)v62 + v5);
    uint8x16_t v80 = vrhaddq_u8(v76, v77);
    uint8x16_t v81 = **((uint8x16_t **)&v174 + 1);
    uint8x16_t v82 = *v66;
    int32x4_t v83 = (uint8x16_t *)(*((void *)&v174 + 1) + v5);
    *((void *)&v174 + 1) = v83;
    uint8x16_t v84 = vrhaddq_u8(v81, v82);
    uint8x16_t v85 = v4[5];
    uint8x16_t v86 = v4[6];
    int32x4_t v87 = vaddq_s32(v34, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v74, v85)))));
    int32x4_t v88 = vaddq_s32(v35, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v80, v85)))));
    int32x4_t v89 = vaddq_s32(v36, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v84, v85)))));
    uint8x16_t v90 = *v72;
    uint8x16_t v91 = *v73;
    *(void *)&long long v173 = (char *)v72 + v5;
    uint8x16_t v92 = vrhaddq_u8(v90, v91);
    int32x4_t v93 = vaddq_s32(v41, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v85, v92)))));
    uint8x16_t v94 = *v78;
    uint8x16_t v95 = *v79;
    *(void *)&long long v174 = (char *)v78 + v5;
    uint8x16_t v96 = vrhaddq_u8(v94, v95);
    uint8x16_t v97 = vrhaddq_u8(*v83, *(uint8x16_t *)((char *)v66 + v5));
    int32x4_t v98 = (uint8x16_t *)((char *)v73 + v5);
    *((void *)&v174 + 1) = (char *)v83 + v5;
    int32x4_t v99 = vaddq_s32(v67, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v92, v86)))));
    int32x4_t v100 = vaddq_s32(v68, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v96, v86)))));
    uint8x16_t v101 = *(uint8x16_t *)((char *)v72 + v5);
    uint8x16_t v102 = *v98;
    *(void *)&long long v173 = (char *)v72 + v5 + v5;
    uint8x16_t v103 = vrhaddq_u8(v101, v102);
    int32x4_t v104 = vaddq_s32(v93, vaddq_s32(v75, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v86, v103))))));
    uint8x16_t v105 = v4[7];
    int32x4_t v106 = vaddq_s32(vaddq_s32(v87, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v103, v105))))), v99);
    int32x4_t v107 = vaddq_s32(vaddq_s32(v88, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(*(uint8x16_t *)((char *)v78 + v5), *(uint8x16_t *)((char *)v79 + v5)), v105))))), v100);
    int32x4_t v108 = vaddq_s32(vaddq_s32(v89, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(vrhaddq_u8(*(uint8x16_t *)((char *)v83 + v5), *(uint8x16_t *)((char *)v66 + v5 + v5)), v105))))), vaddq_s32(v69, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v97, v86))))));
    uint8x16_t v109 = vrhaddq_u8(*(uint8x16_t *)v173, *(uint8x16_t *)((char *)v98 + v5));
  }
  else
  {
    uint8x16_t v110 = *(uint8x16_t *)v174;
    uint8x16_t v111 = **((uint8x16_t **)&v174 + 1);
    *(void *)&long long v173 = v173 + v5;
    *(void *)&long long v174 = v174 + v5;
    *((void *)&v174 + 1) += v5;
    int32x4_t v112 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v8, *v4))));
    int32x4_t v113 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v110, *v4))));
    int32x4_t v114 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v111, *v4))));
    uint8x16_t v115 = *(uint8x16_t *)(v7 + v5);
    uint8x16_t v116 = *(uint8x16_t *)v174;
    int32x4_t v117 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*v4, v115))));
    uint8x16_t v118 = **((uint8x16_t **)&v174 + 1);
    *(void *)&long long v173 = v7 + v5 + v5;
    *(void *)&long long v174 = v174 + v5;
    *((void *)&v174 + 1) += v5;
    uint8x16_t v119 = v4[1];
    uint8x16_t v120 = v4[2];
    int32x4_t v121 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v115, v119)))), v112);
    int32x4_t v122 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v116, v119)))), v113);
    int32x4_t v123 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v118, v119)))), v114);
    uint8x16_t v124 = *(uint8x16_t *)v173;
    uint8x16_t v125 = *(uint8x16_t *)v174;
    uint8x16_t v126 = **((uint8x16_t **)&v174 + 1);
    int32x4_t v127 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v119, *(uint8x16_t *)v173)))), v117);
    *(void *)&long long v173 = v173 + v5;
    *(void *)&long long v174 = v174 + v5;
    *((void *)&v174 + 1) += v5;
    int32x4_t v128 = vaddq_s32(v121, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v124, v120)))));
    int32x4_t v129 = vaddq_s32(v122, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v125, v120)))));
    int32x4_t v130 = vaddq_s32(v123, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v126, v120)))));
    uint8x16_t v131 = *(uint8x16_t *)v173;
    uint8x16_t v132 = *(uint8x16_t *)v174;
    uint8x16_t v133 = **((uint8x16_t **)&v174 + 1);
    int32x4_t v134 = vaddq_s32(v127, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v120, *(uint8x16_t *)v173)))));
    *(void *)&long long v173 = v173 + v5;
    *(void *)&long long v174 = v174 + v5;
    *((void *)&v174 + 1) += v5;
    uint8x16_t v135 = v4[3];
    uint8x16_t v136 = v4[4];
    int32x4_t v137 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v131, v135))));
    int32x4_t v138 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v132, v135))));
    int32x4_t v139 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v133, v135))));
    uint8x16_t v140 = *(uint8x16_t *)v173;
    uint8x16_t v141 = *(uint8x16_t *)v174;
    uint8x16_t v142 = **((uint8x16_t **)&v174 + 1);
    int32x4_t v143 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v135, *(uint8x16_t *)v173))));
    *(void *)&long long v173 = v173 + v5;
    *(void *)&long long v174 = v174 + v5;
    *((void *)&v174 + 1) += v5;
    int32x4_t v144 = vaddq_s32(v137, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v140, v136)))));
    int32x4_t v145 = vaddq_s32(v138, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v141, v136)))));
    int32x4_t v146 = vaddq_s32(v139, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v142, v136)))));
    uint8x16_t v147 = *(uint8x16_t *)v174;
    int32x4_t v148 = vaddq_s32(v143, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v136, *(uint8x16_t *)v173)))));
    uint8x16_t v149 = v4[5];
    uint8x16_t v150 = v4[6];
    int32x4_t v151 = vaddq_s32(v128, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(*(uint8x16_t *)v173, v149)))));
    uint8x16_t v152 = **((uint8x16_t **)&v174 + 1);
    char v153 = (uint8x16_t *)(v174 + v5);
    *(void *)&long long v173 = v173 + v5;
    uint8x16_t v154 = (uint8x16_t *)(*((void *)&v174 + 1) + v5);
    *(void *)&long long v174 = v153;
    *((void *)&v174 + 1) = v154;
    int32x4_t v155 = vaddq_s32(v129, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v147, v149)))));
    int32x4_t v156 = vaddq_s32(v130, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v152, v149)))));
    uint8x16_t v157 = *(uint8x16_t *)v173;
    uint8x16_t v158 = *v153;
    int32x4_t v159 = vaddq_s32(v134, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v149, *(uint8x16_t *)v173)))));
    uint8x16_t v160 = *v154;
    int32x4_t v161 = (uint8x16_t *)(v173 + v5);
    *(void *)&long long v173 = v161;
    *(void *)&long long v174 = (char *)v153 + v5;
    *((void *)&v174 + 1) = (char *)v154 + v5;
    int32x4_t v162 = vaddq_s32(v144, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v157, v150)))));
    int32x4_t v163 = vaddq_s32(v145, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v158, v150)))));
    int32x4_t v164 = vaddq_s32(v146, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v160, v150)))));
    uint8x16_t v165 = *v161;
    uint8x16_t v166 = *(uint8x16_t *)((char *)v153 + v5);
    uint8x16_t v167 = *(uint8x16_t *)((char *)v154 + v5);
    int32x4_t v104 = vaddq_s32(v159, vaddq_s32(v148, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v150, *v161))))));
    *(void *)&long long v173 = (char *)v161 + v5;
    uint8x16_t v105 = v4[7];
    int32x4_t v106 = vaddq_s32(vaddq_s32(v151, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v165, v105))))), v162);
    int32x4_t v107 = vaddq_s32(vaddq_s32(v155, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v166, v105))))), v163);
    int32x4_t v108 = vaddq_s32(vaddq_s32(v156, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v167, v105))))), v164);
    uint8x16_t v109 = *(uint8x16_t *)((char *)v161 + v5);
  }
  int32x4_t v168 = vaddq_s32(v104, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v105, v109)))));
  int16x4_t v169 = (int16x4_t)vadd_s32(*(int32x2_t *)v107.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v107, 2));
  result.n64_u32[0] = vzip1_s16((int16x4_t)vadd_s32(*(int32x2_t *)v106.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v106, 2)), (int16x4_t)vadd_s32(*(int32x2_t *)v168.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v168, 2))).u32[0];
  result.n64_u32[1] = vext_s8(*(int8x8_t *)&v169, (int8x8_t)vzip1_s16(v169, (int16x4_t)vadd_s32(*(int32x2_t *)&v108, (int32x2_t)vdupq_laneq_s32(v108, 2))), 4uLL).u32[1];
  a3->n64_u64[0] = result.n64_u64[0];
  return result;
}

__n64 sub_221A2A370(int a1, uint64_t a2, __n64 *a3)
{
  uint64_t v272 = *MEMORY[0x263EF8340];
  long long v270 = 0u;
  long long v271 = 0u;
  long long v268 = 0u;
  long long v269 = 0u;
  uint64_t v5 = *(unsigned int *)(a2 + 16);
  uint64_t v4 = *(unsigned int *)(a2 + 20);
  uint64_t v6 = *(void *)(a2 + 64);
  int v7 = sub_221A25634(a1, a2, &v270, &v268);
  uint64_t v20 = v270;
  long long v21 = v271;
  int32x4_t v22 = (uint64_t *)(v270 + v5);
  int32x4_t v23 = (uint64_t *)(v271 + v5);
  int32x4_t v24 = (uint64_t *)(*((void *)&v271 + 1) + v5);
  v25.i64[0] = *(void *)v270;
  if (v7)
  {
    v8.i64[0] = *(void *)(v270 + v5);
    int64x2_t v26 = vzip1q_s64(v25, v8);
    *(void *)&long long v270 = v270 + v4;
    v8.i64[0] = *(void *)v268;
    v9.i64[0] = *(void *)(v268 + v5);
    int64x2_t v27 = vzip1q_s64(v8, v9);
    int64x2_t v28 = (int64x2_t)vrhaddq_u8((uint8x16_t)v26, (uint8x16_t)v27);
    v26.i64[0] = *(void *)v271;
    v27.i64[0] = *(void *)(v271 + v5);
    int64x2_t v29 = vzip1q_s64(v26, v27);
    *(void *)&long long v271 = v271 + v4;
    v27.i64[0] = *(void *)v269;
    v9.i64[0] = *(void *)(v269 + v5);
    uint8x16_t v30 = vrhaddq_u8((uint8x16_t)v29, (uint8x16_t)vzip1q_s64(v27, v9));
    v29.i64[0] = **((void **)&v21 + 1);
    v9.i64[0] = *(void *)(*((void *)&v21 + 1) + v5);
    uint8x16_t v31 = (uint8x16_t)vzip1q_s64(v29, v9);
    *((void *)&v271 + 1) = *((void *)&v21 + 1) + v4;
    v9.i64[0] = **((void **)&v269 + 1);
    v10.i64[0] = *(void *)(*((void *)&v269 + 1) + v5);
    uint8x16_t v32 = vrhaddq_u8(v31, (uint8x16_t)vzip1q_s64(v9, v10));
    int64x2_t v33 = *(int64x2_t *)v6;
    int32x4_t v34 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v28, *(uint8x16_t *)v6))));
    int32x4_t v35 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v30, *(uint8x16_t *)v6))));
    int32x4_t v36 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v32, *(uint8x16_t *)v6))));
    uint8x16_t v37 = (uint64_t *)((char *)v22 + v4);
    v10.i64[0] = *(void *)(v20 + v4);
    v13.i64[0] = *v37;
    uint8x16_t v38 = (uint8x16_t)vzip1q_s64(v10, v13);
    int64x2_t v39 = (uint64_t *)(v268 + v5 + v4);
    *(void *)&long long v270 = v20 + v4 + v4;
    v13.i64[0] = *(void *)(v268 + v4);
    v14.i64[0] = *v39;
    int64x2_t v40 = vzip1q_s64(v13, v14);
    int64x2_t v41 = (int64x2_t)vrhaddq_u8(v38, (uint8x16_t)v40);
    int64x2_t v42 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(vdupq_laneq_s64(v28, 1), v41), (uint8x16_t)v33))));
    uint8x16_t v43 = (uint64_t *)((char *)v23 + v4);
    v33.i64[0] = *(void *)(v21 + v4);
    v40.i64[0] = *v43;
    uint8x16_t v44 = (uint8x16_t)vzip1q_s64(v33, v40);
    uint8x16_t v45 = (uint64_t *)(v269 + v5 + v4);
    *(void *)&long long v271 = v21 + v4 + v4;
    v40.i64[0] = *(void *)(v269 + v4);
    v14.i64[0] = *v45;
    int64x2_t v46 = vzip1q_s64(v40, v14);
    uint8x16_t v47 = vrhaddq_u8(v44, (uint8x16_t)v46);
    uint8x16_t v48 = (uint64_t *)((char *)v24 + v4);
    v46.i64[0] = *(void *)(*((void *)&v21 + 1) + v4);
    v14.i64[0] = *v48;
    uint8x16_t v49 = (uint8x16_t)vzip1q_s64(v46, v14);
    uint8x16_t v50 = (uint64_t *)(*((void *)&v269 + 1) + v5 + v4);
    *((void *)&v271 + 1) = *((void *)&v21 + 1) + v4 + v4;
    v14.i64[0] = *(void *)(*((void *)&v269 + 1) + v4);
    v15.i64[0] = *v50;
    uint8x16_t v51 = vrhaddq_u8(v49, (uint8x16_t)vzip1q_s64(v14, v15));
    int64x2_t v52 = *(int64x2_t *)(v6 + 16);
    uint8x16_t v53 = *(uint8x16_t *)(v6 + 32);
    int64x2_t v54 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v41, (uint8x16_t)v52))));
    int64x2_t v55 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v47, (uint8x16_t)v52))));
    int64x2_t v56 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v51, (uint8x16_t)v52))));
    int32x4_t v57 = vaddq_s32((int32x4_t)v54, v34);
    int32x4_t v58 = vaddq_s32((int32x4_t)v55, v35);
    int32x4_t v59 = vaddq_s32((int32x4_t)v56, v36);
    uint8x16_t v60 = (uint64_t *)((char *)v37 + v4);
    v55.i64[0] = *(void *)v270;
    v56.i64[0] = *v60;
    uint8x16_t v61 = (uint8x16_t)vzip1q_s64(v55, v56);
    uint8x16_t v62 = (uint64_t *)(v268 + v4 + v4);
    uint8x16_t v63 = (uint64_t *)((char *)v39 + v4);
    *(void *)&long long v270 = v270 + v4;
    v56.i64[0] = *v62;
    v54.i64[0] = *v63;
    int64x2_t v64 = vzip1q_s64(v56, v54);
    int64x2_t v65 = (int64x2_t)vrhaddq_u8(v61, (uint8x16_t)v64);
    int32x4_t v66 = vaddq_s32((int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(vdupq_laneq_s64(v41, 1), v65), (uint8x16_t)v52)))), (int32x4_t)v42);
    int32x4_t v67 = (uint64_t *)((char *)v43 + v4);
    v42.i64[0] = *(void *)v271;
    v52.i64[0] = *v67;
    uint8x16_t v68 = (uint8x16_t)vzip1q_s64(v42, v52);
    int32x4_t v69 = (uint64_t *)(v269 + v4 + v4);
    uint8x16_t v70 = (uint64_t *)((char *)v45 + v4);
    *(void *)&long long v271 = v271 + v4;
    v52.i64[0] = *v69;
    v64.i64[0] = *v70;
    int64x2_t v71 = vzip1q_s64(v52, v64);
    uint8x16_t v72 = vrhaddq_u8(v68, (uint8x16_t)v71);
    uint8x16_t v73 = (uint64_t *)((char *)v48 + v4);
    v71.i64[0] = **((void **)&v271 + 1);
    v64.i64[0] = *v73;
    uint8x16_t v74 = (uint8x16_t)vzip1q_s64(v71, v64);
    int32x4_t v75 = (uint64_t *)(*((void *)&v269 + 1) + v4 + v4);
    uint8x16_t v76 = (char *)v50 + v4;
    *((void *)&v271 + 1) += v4;
    v64.i64[0] = *v75;
    v54.i64[0] = *(uint64_t *)((char *)v50 + v4);
    uint8x16_t v77 = vrhaddq_u8(v74, (uint8x16_t)vzip1q_s64(v64, v54));
    int64x2_t v78 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v65, v53))));
    int64x2_t v79 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v72, v53))));
    int64x2_t v80 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v77, v53))));
    int32x4_t v81 = vaddq_s32(v57, (int32x4_t)v78);
    int32x4_t v82 = vaddq_s32(v58, (int32x4_t)v79);
    int64x2_t v83 = (int64x2_t)vaddq_s32(v59, (int32x4_t)v80);
    uint8x16_t v84 = (uint64_t *)((char *)v60 + v4);
    v79.i64[0] = *(void *)v270;
    v80.i64[0] = *v84;
    uint8x16_t v85 = (uint8x16_t)vzip1q_s64(v79, v80);
    uint8x16_t v86 = (uint64_t *)((char *)v62 + v4);
    int32x4_t v87 = (char *)v63 + v4;
    *(void *)&long long v270 = v270 + v4;
    v80.i64[0] = *v86;
    v78.i64[0] = *(uint64_t *)((char *)v63 + v4);
    int64x2_t v88 = vzip1q_s64(v80, v78);
    int64x2_t v89 = (int64x2_t)vrhaddq_u8(v85, (uint8x16_t)v88);
    int64x2_t v90 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(vdupq_laneq_s64(v65, 1), v89), v53))));
    int64x2_t v91 = (int64x2_t)vaddq_s32(v66, (int32x4_t)v90);
    uint8x16_t v92 = (char *)v67 + v4;
    v90.i64[0] = *(void *)v271;
    v65.i64[0] = *(uint64_t *)((char *)v67 + v4);
    int64x2_t v93 = vzip1q_s64(v90, v65);
    uint8x16_t v94 = (uint64_t *)((char *)v69 + v4);
    uint8x16_t v95 = (uint64_t *)(v271 + v4);
    *(void *)&long long v271 = v95;
    v65.i64[0] = *v94;
    v88.i64[0] = *(uint64_t *)((char *)v70 + v4);
    uint8x16_t v96 = vrhaddq_u8((uint8x16_t)v93, (uint8x16_t)vzip1q_s64(v65, v88));
    v93.i64[0] = **((void **)&v271 + 1);
    v88.i64[0] = *(uint64_t *)((char *)v73 + v4);
    uint8x16_t v97 = (uint8x16_t)vzip1q_s64(v93, v88);
    *((void *)&v271 + 1) += v4;
    v88.i64[0] = *(uint64_t *)((char *)v75 + v4);
    v78.i64[0] = *(uint64_t *)((char *)v50 + v4 + v4);
    uint8x16_t v98 = vrhaddq_u8(v97, (uint8x16_t)vzip1q_s64(v88, v78));
    uint8x16_t v99 = *(uint8x16_t *)(v6 + 48);
    int32x4_t v100 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v89, v99))));
    int32x4_t v101 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v96, v99))));
    int32x4_t v102 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v98, v99))));
    v78.i64[0] = *(void *)v270;
    v17.i64[0] = *(uint64_t *)((char *)v84 + v4);
    uint8x16_t v103 = (uint8x16_t)vzip1q_s64(v78, v17);
    *(void *)&long long v270 = v270 + v4;
    v17.i64[0] = *(uint64_t *)((char *)v86 + v4);
    v18.i64[0] = *(uint64_t *)((char *)v63 + v4 + v4);
    int64x2_t v104 = vzip1q_s64(v17, v18);
    int64x2_t v105 = (int64x2_t)vrhaddq_u8(v103, (uint8x16_t)v104);
    int64x2_t v106 = vzip1q_s64(vdupq_laneq_s64(v89, 1), v105);
    int64x2_t v107 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v106, v99))));
    v106.i64[0] = *v95;
    v104.i64[0] = *(uint64_t *)((char *)v67 + v4 + v4);
    uint8x16_t v108 = (uint8x16_t)vzip1q_s64(v106, v104);
    uint8x16_t v109 = (uint64_t *)((char *)v94 + v4);
    *(void *)&long long v271 = (char *)v95 + v4;
    v104.i64[0] = *v109;
    v18.i64[0] = *(uint64_t *)((char *)v70 + v4 + v4);
    int64x2_t v110 = vzip1q_s64(v104, v18);
    uint8x16_t v111 = vrhaddq_u8(v108, (uint8x16_t)v110);
    int32x4_t v112 = (uint64_t *)((char *)v73 + v4 + v4);
    v110.i64[0] = **((void **)&v271 + 1);
    v18.i64[0] = *v112;
    uint8x16_t v113 = (uint8x16_t)vzip1q_s64(v110, v18);
    int32x4_t v114 = (uint64_t *)((char *)v75 + v4 + v4);
    uint8x16_t v115 = (uint64_t *)&v76[v4 + v4];
    *((void *)&v271 + 1) += v4;
    v18.i64[0] = *v114;
    v19.i64[0] = *v115;
    uint8x16_t v116 = vrhaddq_u8(v113, (uint8x16_t)vzip1q_s64(v18, v19));
    int64x2_t v117 = *(int64x2_t *)(v6 + 128);
    int64x2_t v118 = *(int64x2_t *)(v6 + 144);
    uint8x16_t v119 = (uint64_t *)((char *)v84 + v4 + v4);
    uint8x16_t v120 = (uint64_t *)((char *)v86 + v4 + v4);
    int32x4_t v121 = (uint64_t *)&v87[v4 + v4];
    int32x4_t v122 = (uint64_t *)&v92[v4 + v4];
    int32x4_t v123 = (uint64_t *)((char *)v109 + v4);
    uint8x16_t v124 = (uint64_t *)((char *)v70 + v4 + v4 + v4);
    uint8x16_t v125 = (uint64_t *)((char *)v112 + v4);
    uint8x16_t v126 = (uint64_t *)((char *)v114 + v4);
    int32x4_t v127 = (uint64_t *)((char *)v115 + v4);
    int64x2_t v128 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v105, (uint8x16_t)v117))));
    int64x2_t v129 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v111, (uint8x16_t)v117))));
    int64x2_t v130 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v116, (uint8x16_t)v117))));
    int32x4_t v131 = vaddq_s32(v100, (int32x4_t)v128);
    int32x4_t v132 = vaddq_s32(v101, (int32x4_t)v129);
    int32x4_t v133 = vaddq_s32(v102, (int32x4_t)v130);
    v129.i64[0] = *(void *)v270;
    v130.i64[0] = *v119;
    *(void *)&long long v270 = v270 + v4;
    int32x4_t v134 = (uint64_t *)((char *)v119 + v4);
    int64x2_t v135 = vzip1q_s64(v129, v130);
    v130.i64[0] = *v120;
    v128.i64[0] = *v121;
    uint8x16_t v136 = (uint64_t *)((char *)v121 + v4);
    int64x2_t v137 = (int64x2_t)vrhaddq_u8((uint8x16_t)v135, (uint8x16_t)vzip1q_s64(v130, v128));
    int32x4_t v138 = vaddq_s32((int32x4_t)v107, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(vdupq_laneq_s64(v105, 1), v137), (uint8x16_t)v117)))));
    v107.i64[0] = *(uint64_t *)((char *)v95 + v4);
    v135.i64[0] = *v122;
    int32x4_t v139 = (uint64_t *)((char *)v95 + v4 + v4);
    *(void *)&long long v271 = v139;
    uint8x16_t v140 = (uint8x16_t)vzip1q_s64(v107, v135);
    v135.i64[0] = *v123;
    v117.i64[0] = *v124;
    uint8x16_t v141 = (uint64_t *)((char *)v124 + v4);
    int64x2_t v142 = vzip1q_s64(v135, v117);
    uint8x16_t v143 = vrhaddq_u8(v140, (uint8x16_t)v142);
    v142.i64[0] = **((void **)&v271 + 1);
    v117.i64[0] = *v125;
    int32x4_t v144 = (uint64_t *)(*((void *)&v271 + 1) + v4);
    *((void *)&v271 + 1) = v144;
    int32x4_t v145 = (uint64_t *)((char *)v125 + v4);
    uint8x16_t v146 = (uint8x16_t)vzip1q_s64(v142, v117);
    v117.i64[0] = *v126;
    v128.i64[0] = *v127;
    uint8x16_t v147 = (uint64_t *)((char *)v127 + v4);
    uint8x16_t v148 = vrhaddq_u8(v146, (uint8x16_t)vzip1q_s64(v117, v128));
    int64x2_t v149 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v137, (uint8x16_t)v118))));
    int32x4_t v150 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v143, (uint8x16_t)v118))));
    int64x2_t v151 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v148, (uint8x16_t)v118))));
    int32x4_t v152 = vaddq_s32(v81, (int32x4_t)v149);
    int32x4_t v153 = vaddq_s32(v82, v150);
    int32x4_t v154 = vaddq_s32((int32x4_t)v83, (int32x4_t)v151);
    v83.i64[0] = *(void *)v270;
    v151.i64[0] = *v134;
    int32x4_t v155 = (uint64_t *)(v270 + v4);
    *(void *)&long long v270 = v155;
    uint8x16_t v156 = (uint8x16_t)vzip1q_s64(v83, v151);
    v151.i64[0] = *(uint64_t *)((char *)v120 + v4);
    v149.i64[0] = *v136;
    int64x2_t v157 = (int64x2_t)vrhaddq_u8(v156, (uint8x16_t)vzip1q_s64(v151, v149));
    int32x4_t v158 = vaddq_s32((int32x4_t)v91, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(vdupq_laneq_s64(v137, 1), v157), (uint8x16_t)v118)))));
    v91.i64[0] = *v139;
    v149.i64[0] = *(uint64_t *)((char *)v122 + v4);
    *(void *)&long long v271 = (char *)v139 + v4;
    int64x2_t v159 = vzip1q_s64(v91, v149);
    v149.i64[0] = *(uint64_t *)((char *)v123 + v4);
    v137.i64[0] = *v141;
    uint8x16_t v160 = vrhaddq_u8((uint8x16_t)v159, (uint8x16_t)vzip1q_s64(v149, v137));
    v159.i64[0] = *v144;
    v137.i64[0] = *v145;
    *((void *)&v271 + 1) = (char *)v144 + v4;
    uint8x16_t v161 = (uint8x16_t)vzip1q_s64(v159, v137);
    v137.i64[0] = *(uint64_t *)((char *)v126 + v4);
    v118.i64[0] = *v147;
    uint8x16_t v162 = vrhaddq_u8(v161, (uint8x16_t)vzip1q_s64(v137, v118));
    uint8x16_t v163 = *(uint8x16_t *)(v6 + 160);
    uint8x16_t v164 = *(uint8x16_t *)(v6 + 176);
    int64x2_t v165 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v157, v163))));
    int64x2_t v166 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v160, v163))));
    int64x2_t v167 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v162, v163))));
    int32x4_t v168 = vaddq_s32(v131, (int32x4_t)v165);
    int32x4_t v169 = vaddq_s32(v132, (int32x4_t)v166);
    int32x4_t v170 = vaddq_s32(v133, (int32x4_t)v167);
    v166.i64[0] = *v155;
    v167.i64[0] = *(uint64_t *)((char *)v134 + v4);
    *(void *)&long long v270 = (char *)v155 + v4;
    uint8x16_t v171 = (uint8x16_t)vzip1q_s64(v166, v167);
    v167.i64[0] = *(uint64_t *)((char *)v120 + v4 + v4);
    v165.i64[0] = *(uint64_t *)((char *)v136 + v4);
    int64x2_t v172 = vzip1q_s64(v167, v165);
    int64x2_t v173 = (int64x2_t)vrhaddq_u8(v171, (uint8x16_t)v172);
    int64x2_t v174 = vzip1q_s64(vdupq_laneq_s64(v157, 1), v173);
    int64x2_t v175 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v174, v163))));
    int32x4_t v176 = vaddq_s32(v138, (int32x4_t)v175);
    v175.i64[0] = *(uint64_t *)((char *)v139 + v4);
    v174.i64[0] = *(uint64_t *)((char *)v122 + v4 + v4);
    v172.i64[0] = *(uint64_t *)((char *)v123 + v4 + v4);
    uint8x16_t v177 = (uint8x16_t)vzip1q_s64(v175, v174);
    v174.i64[0] = *(uint64_t *)((char *)v141 + v4);
    int64x2_t v178 = vzip1q_s64(v172, v174);
    v172.i64[0] = *(uint64_t *)((char *)v144 + v4);
    uint8x16_t v179 = vrhaddq_u8(v177, (uint8x16_t)v178);
    v178.i64[0] = *(uint64_t *)((char *)v145 + v4);
    uint8x16_t v180 = (uint8x16_t)vzip1q_s64(v172, v178);
    v172.i64[0] = *(uint64_t *)((char *)v126 + v4 + v4);
    v165.i64[0] = *(uint64_t *)((char *)v147 + v4);
    uint8x16_t v181 = vrhaddq_u8(v180, (uint8x16_t)vzip1q_s64(v172, v165));
    int32x4_t v182 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v179, v164))));
    int32x4_t v183 = vaddq_s32(vaddq_s32(v152, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v173, v164))))), v168);
    int32x4_t v184 = vaddq_s32(vaddq_s32(v153, v182), v169);
    int32x4_t v185 = vaddq_s32(v154, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v181, v164)))));
    int32x4_t v186 = vaddq_s32(v185, v170);
    v185.i64[0] = *(uint64_t *)((char *)v155 + v4);
    v169.i64[0] = *(uint64_t *)((char *)v120 + v4 + v4 + v4);
    int32x4_t v187 = vaddq_s32(vaddq_s32(v158, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(vdupq_laneq_s64(v173, 1), (int64x2_t)vrhaddq_u8((uint8x16_t)v185, (uint8x16_t)v169)), v164))))), v176);
  }
  else
  {
    v9.i64[0] = *v22;
    *(void *)&long long v270 = v270 + v4;
    v8.i64[0] = *(void *)v271;
    v10.i64[0] = *v23;
    uint8x16_t v188 = (uint8x16_t)vzip1q_s64(v8, v10);
    *(void *)&long long v271 = v271 + v4;
    uint8x16_t v189 = *(uint8x16_t *)v6;
    int32x4_t v190 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v25, v9), *(uint8x16_t *)v6))));
    int32x4_t v191 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v188, *(uint8x16_t *)v6))));
    v12.i64[0] = *(void *)(v20 + v4);
    uint16x8_t v192 = vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v9, v12), *(uint8x16_t *)v6));
    *(void *)&long long v270 = v20 + v4 + v4;
    v11.i64[0] = **((void **)&v21 + 1);
    v13.i64[0] = *v24;
    int64x2_t v193 = vzip1q_s64(v11, v13);
    *((void *)&v271 + 1) = *((void *)&v21 + 1) + v4;
    int32x4_t v194 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v193, v189))));
    v193.i64[0] = *(uint64_t *)((char *)v22 + v4);
    v13.i64[0] = *(void *)(v21 + v4);
    v14.i64[0] = *(uint64_t *)((char *)v23 + v4);
    uint8x16_t v195 = (uint8x16_t)vzip1q_s64(v13, v14);
    *(void *)&long long v271 = v21 + v4 + v4;
    int64x2_t v196 = *(int64x2_t *)(v6 + 16);
    int64x2_t v197 = *(int64x2_t *)(v6 + 32);
    int64x2_t v198 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v12, v193), (uint8x16_t)v196))));
    uint8x16_t v199 = (uint64_t *)((char *)v24 + v4);
    unsigned int v200 = (uint64_t *)((char *)v22 + v4 + v4);
    uint8x16_t v201 = (uint64_t *)((char *)v23 + v4 + v4);
    int64x2_t v202 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v195, (uint8x16_t)v196))));
    int32x4_t v203 = vaddq_s32((int32x4_t)v198, v190);
    int32x4_t v204 = vaddq_s32((int32x4_t)v202, v191);
    v198.i64[0] = *(void *)v270;
    *(void *)&long long v270 = v270 + v4;
    int64x2_t v205 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v193, v198), (uint8x16_t)v196))));
    int32x4_t v206 = vaddq_s32((int32x4_t)v205, (int32x4_t)vpaddlq_u32(vpaddlq_u16(v192)));
    v205.i64[0] = *(void *)(*((void *)&v21 + 1) + v4);
    v202.i64[0] = *v199;
    *((void *)&v271 + 1) = *((void *)&v21 + 1) + v4 + v4;
    int32x4_t v207 = (uint64_t *)((char *)v199 + v4);
    int64x2_t v208 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v205, v202), (uint8x16_t)v196))));
    int32x4_t v209 = vaddq_s32((int32x4_t)v208, v194);
    v208.i64[0] = *v200;
    uint8x16_t v210 = (uint64_t *)((char *)v200 + v4);
    v202.i64[0] = *(void *)v271;
    v196.i64[0] = *v201;
    *(void *)&long long v271 = v271 + v4;
    uint8x16_t v211 = (uint64_t *)((char *)v201 + v4);
    int64x2_t v212 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v198, v208), (uint8x16_t)v197))));
    int64x2_t v213 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v202, v196), (uint8x16_t)v197))));
    int32x4_t v214 = vaddq_s32(v203, (int32x4_t)v212);
    int32x4_t v215 = vaddq_s32(v204, (int32x4_t)v213);
    v212.i64[0] = *(void *)v270;
    *(void *)&long long v270 = v270 + v4;
    int64x2_t v216 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v208, v212), (uint8x16_t)v197))));
    int64x2_t v217 = (int64x2_t)vaddq_s32(v206, (int32x4_t)v216);
    v216.i64[0] = **((void **)&v271 + 1);
    v213.i64[0] = *v207;
    *((void *)&v271 + 1) += v4;
    int64x2_t v218 = (int64x2_t)vaddq_s32(v209, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v216, v213), (uint8x16_t)v197)))));
    v213.i64[0] = *v210;
    uint8x16_t v219 = (uint64_t *)((char *)v210 + v4);
    uint8x16_t v220 = (uint8x16_t)vzip1q_s64(v212, v213);
    v212.i64[0] = *(void *)v271;
    v196.i64[0] = *v211;
    *(void *)&long long v271 = v271 + v4;
    int32x4_t v221 = (uint64_t *)((char *)v211 + v4);
    uint8x16_t v222 = (uint8x16_t)vzip1q_s64(v212, v196);
    uint8x16_t v223 = *(uint8x16_t *)(v6 + 48);
    int32x4_t v224 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v220, v223))));
    int32x4_t v225 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v222, v223))));
    v16.i64[0] = *(void *)v270;
    *(void *)&long long v270 = v270 + v4;
    int32x4_t v226 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v213, v16), v223))));
    v197.i64[0] = **((void **)&v271 + 1);
    v17.i64[0] = *(uint64_t *)((char *)v207 + v4);
    *((void *)&v271 + 1) += v4;
    uint8x16_t v227 = (uint64_t *)((char *)v207 + v4 + v4);
    int64x2_t v228 = vzip1q_s64(v197, v17);
    int32x4_t v229 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)v228, v223))));
    v228.i64[0] = *v219;
    int32x4_t v230 = (uint64_t *)((char *)v219 + v4);
    v17.i64[0] = *(void *)v271;
    v18.i64[0] = *v221;
    *(void *)&long long v271 = v271 + v4;
    uint8x16_t v231 = (uint64_t *)((char *)v221 + v4);
    uint8x16_t v232 = (uint8x16_t)vzip1q_s64(v17, v18);
    int64x2_t v233 = *(int64x2_t *)(v6 + 128);
    uint8x16_t v234 = *(uint8x16_t *)(v6 + 144);
    int64x2_t v235 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v16, v228), (uint8x16_t)v233))));
    int64x2_t v236 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v232, (uint8x16_t)v233))));
    int32x4_t v237 = vaddq_s32(v224, (int32x4_t)v235);
    int32x4_t v238 = vaddq_s32(v225, (int32x4_t)v236);
    v235.i64[0] = *(void *)v270;
    *(void *)&long long v270 = v270 + v4;
    int64x2_t v239 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v228, v235), (uint8x16_t)v233))));
    int32x4_t v240 = vaddq_s32(v226, (int32x4_t)v239);
    v239.i64[0] = **((void **)&v271 + 1);
    v236.i64[0] = *v227;
    uint8x16_t v241 = (uint64_t *)(*((void *)&v271 + 1) + v4);
    *((void *)&v271 + 1) = v241;
    uint8x16_t v242 = (uint64_t *)((char *)v227 + v4);
    int32x4_t v243 = vaddq_s32(v229, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v239, v236), (uint8x16_t)v233)))));
    v236.i64[0] = *v230;
    uint8x16_t v244 = (uint8x16_t)vzip1q_s64(v235, v236);
    v235.i64[0] = *(void *)v271;
    v233.i64[0] = *v231;
    int32x4_t v245 = (uint64_t *)(v271 + v4);
    *(void *)&long long v271 = v245;
    int64x2_t v246 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v235, v233), v234))));
    int32x4_t v247 = vaddq_s32(v214, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v244, v234)))));
    int32x4_t v248 = vaddq_s32(v215, (int32x4_t)v246);
    v246.i64[0] = *(void *)v270;
    int32x4_t v249 = (uint64_t *)(v270 + v4);
    *(void *)&long long v270 = v249;
    int64x2_t v250 = (int64x2_t)vaddq_s32((int32x4_t)v217, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v236, v246), v234)))));
    v217.i64[0] = *v241;
    v236.i64[0] = *v242;
    *((void *)&v271 + 1) = (char *)v241 + v4;
    int32x4_t v251 = vaddq_s32((int32x4_t)v218, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v217, v236), v234)))));
    v218.i64[0] = *(uint64_t *)((char *)v230 + v4);
    v236.i64[0] = *v245;
    v233.i64[0] = *(uint64_t *)((char *)v231 + v4);
    *(void *)&long long v271 = (char *)v245 + v4;
    uint8x16_t v252 = (uint8x16_t)vzip1q_s64(v236, v233);
    uint8x16_t v253 = *(uint8x16_t *)(v6 + 160);
    uint8x16_t v254 = *(uint8x16_t *)(v6 + 176);
    int64x2_t v255 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v246, v218), v253))));
    int64x2_t v256 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v252, v253))));
    int32x4_t v257 = vaddq_s32(v237, (int32x4_t)v255);
    int64x2_t v258 = (int64x2_t)vaddq_s32(v238, (int32x4_t)v256);
    v255.i64[0] = *v249;
    *(void *)&long long v270 = (char *)v249 + v4;
    int64x2_t v259 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v218, v255), v253))));
    int32x4_t v260 = vaddq_s32(v240, (int32x4_t)v259);
    v259.i64[0] = *(uint64_t *)((char *)v241 + v4);
    v256.i64[0] = *(uint64_t *)((char *)v242 + v4);
    *((void *)&v271 + 1) = (char *)v241 + v4 + v4;
    int64x2_t v261 = (int64x2_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v259, v256), v253))));
    int32x4_t v262 = vaddq_s32(v243, (int32x4_t)v261);
    v261.i64[0] = *(uint64_t *)((char *)v245 + v4);
    v256.i64[0] = *(uint64_t *)((char *)v231 + v4 + v4);
    uint8x16_t v263 = (uint8x16_t)vzip1q_s64(v261, v256);
    v256.i64[0] = *(uint64_t *)((char *)v230 + v4 + v4);
    int32x4_t v264 = (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8(v263, v254))));
    int32x4_t v183 = vaddq_s32(vaddq_s32(v247, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v255, v256), v254))))), v257);
    int64x2_t v265 = (int64x2_t)vaddq_s32(v248, v264);
    int32x4_t v184 = vaddq_s32((int32x4_t)v265, (int32x4_t)v258);
    v265.i64[0] = *(uint64_t *)((char *)v249 + v4);
    int32x4_t v187 = vaddq_s32(vaddq_s32((int32x4_t)v250, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v256, v265), v254))))), v260);
    v250.i64[0] = **((void **)&v271 + 1);
    v258.i64[0] = *(uint64_t *)((char *)v242 + v4 + v4);
    int32x4_t v186 = vaddq_s32(vaddq_s32(v251, (int32x4_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8(vabdq_u8((uint8x16_t)vzip1q_s64(v250, v258), v254))))), v262);
  }
  int16x4_t v266 = (int16x4_t)vadd_s32(*(int32x2_t *)v184.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v184, 2));
  result.n64_u32[0] = vzip1_s16((int16x4_t)vadd_s32(*(int32x2_t *)v183.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v183, 2)), (int16x4_t)vadd_s32(*(int32x2_t *)v187.i8, (int32x2_t)*(_OWORD *)&vdupq_laneq_s32(v187, 2))).u32[0];
  result.n64_u32[1] = vext_s8(*(int8x8_t *)&v266, (int8x8_t)vzip1_s16(v266, (int16x4_t)vadd_s32(*(int32x2_t *)&v186, (int32x2_t)vdupq_laneq_s32(v186, 2))), 4uLL).u32[1];
  a3->n64_u64[0] = result.n64_u64[0];
  return result;
}