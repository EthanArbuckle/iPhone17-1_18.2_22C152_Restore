uint64_t sub_1000C587C()
{
  return sub_1000D39B4(-409350823);
}

uint64_t sub_1000C58A4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 + 2146433698) & 0xCFDDFFFF ^ 0xFFFFFFE5) + ((v2 + 1609431778) & 0xEFDFFFBF))
                                     * (v0 != v1)) ^ v2)))();
}

uint64_t sub_1000C5900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a10 + v11) = v14;
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * (int)((((((v12 + 137750724) & 0xF7CA16EF ^ 0x16) & v10) != 8)
                                     * (((((v12 + 137750724) & 0xF7CA16EF) - 582) | 0x51) - 293)) ^ (v12 + 137750724) & 0xF7CA16EF)))();
}

uint64_t sub_1000C596C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(a5 + v9) = *(unsigned char *)(a8 + (v8 + v12))
                      - ((*(unsigned char *)(a8 + (v8 + v12)) << (v10 - 114)) & v11)
                      + 84;
  return (*(uint64_t (**)(void))(v14 + 8 * (((v9 == 63) * v13) ^ v10)))();
}

uint64_t sub_1000C59B4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40,int a41,int a42,int a43,int a44,uint64_t a45,uint64_t a46)
{
  return sub_1000EC11C(a2 ^ 0xACEF6C82, v46 ^ 0xA61C5B34, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1000C59E8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v7 & (2 * (*(unsigned __int8 *)(a2 + 8) - 1)))
                                 + ((*(unsigned __int8 *)(a2 + 8) - 1) ^ v6) == v6)
                                * (a3 + (v5 ^ (v3 + 90)) + 542)) ^ v5)))();
}

uint64_t sub_1000C5A2C@<X0>(uint64_t result@<X0>, int a2@<W3>, int a3@<W8>)
{
  if ((a3 + v3 - 1) >= 0x7FFFFFFF) {
    int v7 = ((a2 - 506) | 0x404) - v4;
  }
  else {
    int v7 = v6;
  }
  *int v5 = v7;
  *(_DWORD *)(result + 16) = -1126434652;
  return result;
}

uint64_t sub_1000C5A6C@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  unint64_t v8 = v5 - 1;
  STACK[0x5E0] = v8;
  *(unsigned char *)(a2 + v8) = (((v4 ^ 0x18) + v3 - 88) ^ v6) * ((v4 ^ 0x18) + v3 - 71);
  return (*(uint64_t (**)(void))(v7 + 8 * (((STACK[0x5E0] == 0) * a1) ^ v2)))();
}

uint64_t sub_1000C5A7C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 - 682) ^ 0x1D1 ^ (194 * (v1 ^ 0x2B8))) * (v2 == v0)) ^ v1)))();
}

uint64_t sub_1000C5AB8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1860 * (v4 + 1 == v5 + 64)) ^ a3)))();
}

uint64_t sub_1000C5B70()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1739)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((31 * (STACK[0x448] == 0)) ^ (v0 + 1011))))();
}

uint64_t sub_1000C5BA8()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((50 * (v2 + v1 + 1 < 216 * (v3 ^ 0x2E7) + ((v3 + 443) ^ 0x7FFFFE73u))) ^ (v3 + 501))))();
}

uint64_t sub_1000C5C00()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v0 - 1040209460) > 0x37) * (v2 - 42)) ^ (v2 + 389))))();
}

uint64_t sub_1000C5C3C@<X0>(int a1@<W4>, int a2@<W8>)
{
  if ((a2 - 1936793795) <= 0x19 && ((1 << (a2 + 61)) & 0x3014001) != 0) {
    return (*(uint64_t (**)(void))(v3
  }
                                + 8
                                * ((7
                                  * (((((11 * ((v4 + 17) ^ 0xC6A9C0A2) - 1843943119) & 0x6DE856BF) + 0xFFFFFFFFFFFFF53) & (unint64_t)v2)
                                   - 1 > 1)) ^ (a1 - 961953339))))();
  else {
    return sub_1000CDA04();
  }
}

void sub_1000C5CEC(int a1@<W8>)
{
  if (((a1 + 1983211295) & 0x89CA98DF ^ 0xD55A65D0) + *(_DWORD *)(v3 - 0x774B811B42847B23) >= 0x7FFFFFFF) {
    int v4 = v2;
  }
  else {
    int v4 = v2 + 2;
  }
  *(_DWORD *)(v1 + 16) = v4;
}

uint64_t sub_1000C5D70@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*(void *)(v4 - 0x65EF48AAD10F5714) + (v5 + 1824148574 + v2)) = *(unsigned char *)(*(void *)(v4 - 0x65EF48AAD10F5714) + (v2 - 740814135));
  return (*(uint64_t (**)(void))(v3 + 8 * ((2043 * (v2 - 1 == ((a1 + 1373179261) & 0xAE26F5FE) + v1)) ^ a1)))();
}

uint64_t sub_1000C5DEC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((a5 | 0x204) - 27) ^ 0x2DC ^ (24 * ((a5 | 0x204) ^ 0x22E))) * (v5 == a1)) ^ (a5 | 0x204))))();
}

uint64_t sub_1000C5E50@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  uint64_t v7 = (v3 + a1);
  long long v8 = *(_OWORD *)(v2 + v7 - 15);
  long long v9 = *(_OWORD *)(v2 + v7 - 31);
  uint64_t v10 = a2 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  LODWORD(v10) = ((v5 + 1777471190) & 0x960DF71C) - 1772 == (v4 & 0xFFFFFFE0);
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((v10 | (16 * v10)) ^ (v5 + 174))))();
}

uint64_t sub_1000C5EB8()
{
  LODWORD(STACK[0x4E8]) = v2;
  BOOL v3 = (v0 ^ 0x4BAu) - 1755777583 + *(_DWORD *)(STACK[0x2B0] + 360) - 282 < v0 - 1445;
  return (*(uint64_t (**)(void))(v1 + 8 * (((2 * v3) | (4 * v3)) ^ v0)))();
}

uint64_t sub_1000C5F04(int a1)
{
  BOOL v6 = v3 - 118816877 > (int)((v1 + 83) ^ 0x9BAC22C2) && v3 - 118816877 < v2;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v6 * ((v1 + 950) ^ a1)) ^ v1)))();
}

uint64_t sub_1000C5F4C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((*(_DWORD *)(v10 + v9 * (uint64_t)a7 + 36) == ((v7 - 1087) ^ (a2 - 95)) + (v7 ^ 0x41C))
                                * v8) ^ v7)))();
}

uint64_t sub_1000C5F88(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((763
                                * ((v3 & (2 * (**(unsigned __int8 **)(a2 + 8) - 42)))
                                 + ((**(unsigned __int8 **)(a2 + 8) - 42) ^ v2) == v2 + v4 + 450 - 687)) ^ v4)))();
}

uint64_t sub_1000C5FCC(_DWORD *a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_100162850
                             + ((98 * ((*a1 + *(_DWORD *)(a2 + 4) + 810378653) < 0xC9)) ^ 0x433u)))();
}

uint64_t sub_1000C6014()
{
  *(_DWORD *)(v3 - 104) = v1
                        + 1374699841 * ((((v3 - 120) | 0x1A41DE4F) + (~(v3 - 120) | 0xE5BE21B0)) ^ 0x77B5C647)
                        + 732;
  *(void *)(v3 - 120) = v5;
  *(void *)(v3 - 112) = v2;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0x472)))(v3 - 120);
}

uint64_t sub_1000C60EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((467
                                * (a13 + v13 - v15 >= ((((v14 + 1086933427) | 0xF04B092u) - 16) ^ (unint64_t)((v14 - 270534075) & 0x5FEDFFFF)))) ^ (v14 - 116))))();
}

uint64_t sub_1000C615C()
{
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * (v0 | (4
                                                  * (((12 * (v0 ^ 0x61F)) ^ (v1 + 1003)) + v3 > 0x7FFFFFFE)))))((v0 + 459755823) & 0xE498ABF7);
}

void sub_1000C61AC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1000C62FC()
{
  BOOL v7 = *v0 != (v2 + 59) || LODWORD(STACK[0x618]) != -1514477221 || v1 != v4 + 1;
  return (*(uint64_t (**)(void))(v3 + 8 * ((205 * v7) ^ (v2 + 296))))();
}

uint64_t sub_1000C6340@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X6>, int a4@<W8>, int8x16_t a5@<Q0>, int8x16_t a6@<Q4>)
{
  *BOOL v7 = vaddq_s8(vsubq_s8(*(int8x16_t *)(a3 + (v6 + v8)), vandq_s8(vaddq_s8(*(int8x16_t *)(a3 + (v6 + v8)), *(int8x16_t *)(a3 + (v6 + v8))), a6)), a5);
  return (*(uint64_t (**)(void))(v9 + 8 * (a2 ^ (a1 + a4 + 440))))();
}

uint64_t sub_1000C6390(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  unsigned int v10 = a3 ^ ((*v8 & 0x7FFFFFFE | v8[623] & 0x80000000) >> 1);
  v8[623] = v8[396] ^ a5 ^ *(_DWORD *)(v6 + 4 * ((*v8 & 1) == 0)) ^ (v10
                                                                     + (((v5 - 340) | 0x119) ^ (a4 + 263))
                                                                     - ((v10 << (((v5 - 60) | 1) ^ 0x18)) & v7));
  return (*(uint64_t (**)(void))(v9 + 8 * ((62 * (LODWORD(STACK[0x574]) > 0x26F)) ^ v5)))();
}

uint64_t sub_1000C6420()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((4
                                              * (((v1 + 120) ^ ((v0 & 0xFFFFFFFC) == ((4 * v1) ^ 0x52C119D4))) & 1)) & 0xBF | ((((v1 + 120) ^ ((v0 & 0xFFFFFFFC) == ((4 * v1) ^ 0x52C119D4))) & 1) << 6) | v1)))(3620908045);
}

uint64_t sub_1000C647C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  LODWORD(a24) = v40 - 137;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t *, uint64_t, unint64_t, void))(v39 + 8 * ((1720 * (a5 + ((v38 - 475) ^ (v40 - 137)) != 286)) ^ (v38 - 475))))(a1, (v40 - 137), 2783874765, 1511092530, a5, 1024156329, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           &STACK[0x268],
           a24,
           &a38,
           a26,
           a2 | 0xB0B7B96400000000,
           0);
}

uint64_t sub_1000C6528@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26,uint64_t a27,unsigned __int8 a28,unint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * a8);
  int v43 = STACK[0x29C];
  uint64_t v44 = LODWORD(STACK[0x29C]);
  int v45 = STACK[0x2A0];
  int v46 = STACK[0x2A4];
  int v47 = STACK[0x2A0];
  int v48 = STACK[0x2A4];
  int v49 = LOBYTE(STACK[0x2B0]) ^ 0xDB;
  if (v49 == 2)
  {
    BOOL v55 = a3 < a29 && v38 < a3 + 64;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8 * ((((v55 ^ a28) & 1) * a25) ^ ((int)a1 + 401))))(v44, 115228000);
  }
  else if (v49 == 1)
  {
    int v50 = a1 + 863;
    BOOL v52 = a3 >= a29 || v38 >= a3 + 64;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8 * (((a38 - 162) * v52) ^ v50)))(v44, 1264008910);
  }
  else
  {
    LODWORD(STACK[0x298]) = 2 * (LODWORD(STACK[0x298]) ^ v40) + v40 - (v41 & (4 * (LODWORD(STACK[0x298]) ^ v40)));
    LODWORD(STACK[0x29C]) = (v44 ^ v40) + (v43 ^ v40) + v40 - (v41 & (2 * ((v44 ^ v40) + (v43 ^ v40))));
    LODWORD(STACK[0x2A0]) = (v47 ^ v40) + (v45 ^ v40) + v40 - (v41 & (2 * ((v47 ^ v40) + (v45 ^ v40))));
    LODWORD(STACK[0x2A4]) = (v48 ^ v40) + (v46 ^ v40) + v40 - (v41 & (2 * ((v48 ^ v40) + (v46 ^ v40))));
    return v42(v44, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23);
  }
}

void sub_1000C6624(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28)
{
  LODWORD(STACK[0x2A8]) = (a3 ^ v28)
                        + (a28 ^ v28)
                        - (v29 & (2 * ((a3 ^ v28) + (a28 ^ v28))))
                        + (((a6 - 1480) | 0x10) ^ (v28 + 16));
  JUMPOUT(0x1000C6678);
}

uint64_t sub_1000C66FC(double a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int8x16_t a19, int32x4_t a20,int8x16_t a21,int8x16_t a22,int8x16_t a23)
{
  int8x16_t v26 = (int8x16_t)vld1q_dup_f32((const float *)v25);
  v27.i64[0] = 0x8000000080000000;
  v27.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(void *)(v25 + 4);
  a2.i32[2] = *(_DWORD *)(v25 + 12);
  int8x16_t v28 = vextq_s8(v26, a2, 0xCuLL);
  int8x16_t v29 = a2;
  v29.i32[3] = *(_DWORD *)(v25 + 16);
  int32x4_t v30 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v29, a23), vandq_s8(v28, v27)), 1uLL), a22);
  v31.i32[0] = *(_DWORD *)(v24 + 4 * ((*(_DWORD *)(v25 + 4) & 1) == 0));
  v31.i32[1] = *(_DWORD *)(v24 + 4 * ((*(_DWORD *)(v25 + 8) & 1) == 0));
  v31.i32[2] = *(_DWORD *)(v24 + 4 * !(*(unsigned char *)(v25 + 12) & 1));
  v31.i32[3] = *(_DWORD *)(v24 + 4 * (~v29.i32[3] & 1));
  *(int8x16_t *)uint64_t v25 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v25 + 1588), v31), a19), (int8x16_t)vaddq_s32(vsubq_s32(v30, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v30, v30), a21)), a20));
  return (*(uint64_t (**)(void))(v23 + 6632))();
}

uint64_t sub_1000C6708@<X0>(unsigned int a1@<W6>, int a2@<W7>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int8x16_t a9@<Q7>)
{
  a5.i64[0] = *(void *)(v10 + 4);
  a5.i32[2] = *(_DWORD *)(v10 + 12);
  int8x16_t v15 = vextq_s8(a4, a5, 0xCuLL);
  int8x16_t v16 = a5;
  v16.i32[3] = *(_DWORD *)(v10 + 16);
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, a6), vandq_s8(v15, a7)), 1uLL), a8);
  v18.i32[0] = *(_DWORD *)(v11 + 4 * ((*(_DWORD *)(v10 + 4) & 1) == 0));
  v18.i32[1] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v10 + 8) & (((a3 - 834) | a1) - 339) ^ 1));
  v18.i32[2] = *(_DWORD *)(v11 + 4 * (~*(_DWORD *)(v10 + 12) & 1));
  v18.i32[3] = *(_DWORD *)(v11 + 4 * (~v16.i32[3] & 1));
  *(int8x16_t *)uint64_t v10 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v10 - 908), v18), v14), (int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), a9)), v13));
  return (*(uint64_t (**)(void))(v12 + 8 * (((v9 == 4) * a2) ^ a3)))();
}

uint64_t sub_1000C6718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  unint64_t v33 = ((a3 + (v30 + 303) - 750) ^ HIDWORD(a8)) + HIDWORD(v32) + (*(_DWORD *)(a28 + a13) ^ v28);
  *(_DWORD *)(a28 + 4 * a15) = v33 + v28 - (v29 & (2 * v33));
  *(_DWORD *)(a28 + a13) = (v33 >> (v30 + 97)) | v28;
  BOOL v35 = a23 + 1257754544 < 206664427 && a23 + 1257754544 >= a19;
  return (*(uint64_t (**)(void))(v31 + 8 * (v30 ^ (103 * v35))))();
}

uint64_t sub_1000C67B0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*(void *)(v1 + 8) == 0) * ((v0 + 128) ^ 0x2F1)) ^ v0)))();
}

uint64_t sub_1000C6814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a1 + (v3 - 1908186914) + 4) = (**(unsigned char **)(a2 + 8) ^ 0x7B)
                                                       + ((2 * **(unsigned char **)(a2 + 8)) & 0xF7)
                                                       - 67;
  unsigned int v4 = *(_DWORD *)(a2 + 4) + 1495890715;
  BOOL v5 = v4 < 0xB71F765D;
  BOOL v6 = v4 > 0xB71F765E;
  if (v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((1286 * v6) | 0x228)))();
}

uint64_t sub_1000C68D0@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  return sub_1000C694C(a2 - 0x774B811B42847B1FLL, 0xECE208C48F27D17DLL, (((v2 - 623) | 0x268) - 466) ^ (v3 - 134), 0x371FF7FBF9DD7FDFLL, 0x1F3BAFFBELL, 0xDBFDFF3F76FAAEA4, (a1 + 627));
}

uint64_t sub_1000C694C(void *a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v17 = 4 * (v16 + v13);
  int v18 = v7 + a2 + (*(_DWORD *)(*v12 + v17) ^ v10);
  *(_DWORD *)(*a1 + v17) = v18 + v14 - (a3 & (2 * v18));
  int v19 = v16 + 1 + v8;
  BOOL v21 = v19 > a7 || v19 < v9;
  return (*(uint64_t (**)(void))(v15 + 8 * ((31 * v21) ^ v11)))();
}

uint64_t sub_1000C69B8@<X0>(uint64_t a1@<X8>)
{
  if ((*(_DWORD *)(v1 + 1428) | 4) == 0x239097DF) {
    return (*(uint64_t (**)(void))(v3
  }
                                + 8
                                * (((*(_DWORD *)(a1 + 476) == 1111188988) * ((LODWORD(STACK[0x414]) + 108) ^ 0x58D)) ^ (LODWORD(STACK[0x414]) + 108))))();
  STACK[0x5B0] = STACK[0x3B0];
  return v2();
}

uint64_t sub_1000C6AA0()
{
  return sub_1000C6AB4();
}

uint64_t sub_1000C6AB4@<X0>(int a1@<W8>)
{
  STACK[0x468] = *(void *)(v1 + 8 * a1);
  return sub_1000E7358();
}

uint64_t sub_1000C6ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,unsigned int a27)
{
  return (*(uint64_t (**)(uint64_t, void))(v29 + 8 * v27))(a1, ((v28 - 1637981168) & 0x61A19BEF ^ 0x2000026E) & a27);
}

void sub_1000C6B70()
{
}

uint64_t sub_1000C6B78()
{
  BOOL v4 = v1 + v0 + 274858020 < ((((v2 - 953) ^ 0x168) - 104) ^ ((v2 - 953) | 0x108u));
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 | (4 * v4)) ^ v2)))();
}

void sub_1000C6BC8()
{
  *int v2 = -223944149;
  (*(void (**)(uint64_t))(v3 + 8 * (v0 ^ 0x79C)))(v1);
  JUMPOUT(0x1000C6C14);
}

uint64_t sub_1000C6D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12
                                                              + 8
                                                              * ((471 * ((a12 - 1388383509) > 0xFFFFFFFA)) ^ ((int)a2 + 1226))))(a1, a2, a3);
}

uint64_t sub_1000C6D8C()
{
  STACK[0x368] = 0;
  int v3 = *(_DWORD *)(v0 + 56);
  *(_DWORD *)(v0 + 56) = v3 + 1;
  BOOL v4 = *(uint64_t (**)(void))(v2 + 8 * ((608 * (v3 + 3 * (v1 ^ 0x107u) - 1452181842 < 0xFFFFFFFA)) ^ (v1 - 191)));
  LODWORD(STACK[0x2F4]) = 1364664180;
  return v4();
}

uint64_t sub_1000C6DEC@<X0>(int a1@<W8>)
{
  uint64_t v9 = v1 + 1;
  *int v3 = (v2 ^ (v4 + v9) ^ v6) * (v5 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v9 == 91) * v7) ^ a1)))();
}

void sub_1000C6DF4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 1374699841 * ((a1 + 1891232920 - 2 * (a1 & 0x70B9EC98)) ^ 0x1D4DF491);
  __asm { BRAA            X1, X17 }
}

uint64_t sub_1000C6F00(uint64_t a1, char a2, char a3, uint64_t a4)
{
  unsigned int v10 = *(_DWORD *)(v9 - 220 + ((v7 + v5) & 0xFFFFFFFC) + 72);
  unsigned int v11 = (v10 >> (a2 + a3 + v6 + 3 + 70)) ^ 0xFFFFFFB6;
  *(unsigned char *)(a4 + (v7 + v5)) = v11 - ((2 * v11) & 0xA8) + 84;
  *(unsigned char *)(a4 + (v7 + v5 + 1)) = (BYTE2(v10) ^ 0xDE)
                                               + ~(2 * ((BYTE2(v10) ^ 0xDE) & 0x55 ^ BYTE2(v10) & 1))
                                               + 85;
  *(unsigned char *)(a4 + (v7 + v5 + 2)) = (BYTE1(v10) ^ 0x3D) - ((2 * (BYTE1(v10) ^ 0x3D)) & 0xA8) + 84;
  *(unsigned char *)(a4 + (v7 + v5 + 3)) = v10 ^ 0x34;
  unsigned int v12 = *(_DWORD *)(v9 - 128) - 1166375800;
  BOOL v13 = v7 - 1583505191 < v12;
  if (v7 - 1583505191 < v4 != v12 < v4) {
    BOOL v13 = v12 < v4;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (v13 ^ v6)))();
}

uint64_t sub_1000C6FFC(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, int a7)
{
  uint64_t v13 = (a4 + a3 + a7);
  uint64_t v14 = v13 + v7;
  uint64_t v15 = v13 + *(void *)(v12 - 120);
  uint64_t v16 = (a4 + a3) & 0xF;
  unint64_t v17 = v16 + v8 - v15;
  unint64_t v18 = (v16 | v10) - v15;
  unint64_t v19 = (v16 | v9) - v15;
  BOOL v23 = (unint64_t)(v14 - v15) > 0xF && v17 > 0xF && v18 >= ((5 * (a5 ^ 0x92u)) ^ 0x1F5uLL) && v19 > 0xF;
  return (*(uint64_t (**)(void))(v11 + 8 * ((502 * v23) ^ a5)))();
}

uint64_t sub_1000C708C()
{
  int v6 = (v0 - 531132111) & 0x2ED2;
  LODWORD(v12) = (v0 + 1233) ^ (((&v12 & 0x766D8D20 | ~(&v12 | 0x766D8D20)) ^ 0xE4666AD6)
                              * v5);
  uint64_t v13 = &STACK[0x13C73732F42413DE];
  uint64_t v14 = v9;
  (*(void (**)(unint64_t **))(v3 + 8 * (v0 + 1317)))(&v12);
  uint64_t v12 = v9;
  HIDWORD(v13) = v0
               - ((-642854908 - (&v12 | 0xD9AED004) + (&v12 | 0x26512FFB)) ^ 0x7A9FECB6)
               * v2
               - 158;
  (*(void (**)(unint64_t **))(v3 + 8 * (v0 + 1326)))(&v12);
  if (v13 == (v6 ^ (v1 + 706))) {
    int v7 = v10;
  }
  else {
    int v7 = (int)v13;
  }
  uint64_t v13 = v9;
  HIDWORD(v12) = v0
               + (((&v12 | 0xCF7F3D22) - &v12 + (&v12 & 0x3080C2D8)) ^ 0xC58B330D)
               * v4
               + 472;
  (*(void (**)(unint64_t **))(v3 + 8 * (v0 ^ 0x561u)))(&v12);
  HIDWORD(v12) = v6
               + ((-770831984 - (&v12 | 0xD20E0990) + (&v12 | 0x2DF1F66F)) ^ 0x2705F840)
               * v4
               + 468;
  uint64_t v13 = v11;
  (*(void (**)(unint64_t **))(v3 + 8 * (v6 ^ 0x51Du)))(&v12);
  return v7 ^ v1;
}

uint64_t sub_1000C7280()
{
  LODWORD(STACK[0x61C]) = v0;
  return sub_1000F8F9C(v1 - 228);
}

uint64_t sub_1000C729C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned int a31,unsigned int a32)
{
  if (a32 < a31 != v33 + 2019144804 < (((a2 + 265) | 0x242) ^ 0xBF6BDC9A)) {
    BOOL v34 = v33 + 2019144804 < (((a2 + 265) | 0x242) ^ 0xBF6BDC9A);
  }
  else {
    BOOL v34 = v33 + 2019144804 > a32;
  }
  return (*(uint64_t (**)(void))(v32 + 8 * ((v34 * (((a2 + 464) | 8) ^ 0x1F1)) | (a2 + 274))))();
}

uint64_t sub_1000C731C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1146 * (*(_DWORD *)(v2 - 0x65EF48AAD10F56FCLL) == -1008821960)) ^ v0)))();
}

uint64_t sub_1000C735C@<X0>(int a1@<W8>)
{
  uint64_t v4 = 4 * (v1 - 321430214);
  unsigned int v5 = -2064566567
     * ((*(_DWORD *)(*(void *)STACK[0x3F8] + (*(int *)STACK[0x3F0] & 0xFFFFFFFF9D5CA7E0)) ^ (v3 + v4)) & ((a1 + 515) ^ 0x7FFFFB20));
  int v6 = v5 ^ HIWORD(v5);
  uint64_t v7 = 4 * ((-2064566567 * v6) >> 24);
  *(_DWORD *)(v2 + v4) ^= *(_DWORD *)(v3 + v4) ^ *(_DWORD *)((char *)*(&off_100166A10 + (a1 ^ 0x2CB)) + v7) ^ *(_DWORD *)((char *)*(&off_100166A10 + (a1 ^ 0x2E9)) + v7 - 8) ^ *(_DWORD *)((char *)*(&off_100166A10 + (a1 ^ 0x2A9)) + v7 - 12) ^ (920190976 * v6) ^ (-2064566567 * v6) ^ (-2081955537 * ((-2064566567 * v6) >> 24));
  return sub_1000EE584();
}

uint64_t sub_1000C744C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                               + 8
                                                                               * ((54
                                                                                 * (v4 >= ((v5 + 422130340) & 0x66D6CBFC)
                                                                                        - 1000)) ^ v5)))(a1, a2, a3, a4, 0);
}

uint64_t sub_1000C7490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  unint64_t v21 = v15
      + a1
      + (*(_DWORD *)(v11 + 4 * a5) ^ v10)
      + v14 * (unint64_t)(*(_DWORD *)(*v13 + 4 * a4) ^ v10)
      + 1510;
  *(_DWORD *)(v11 + 4 * a5) = v21 + v10 - ((2 * v21) & 0x4C1AB590);
  BOOL v22 = a4 + 607290485 < a6;
  if (a3 > v16 != a4 + 607290485 < v12) {
    BOOL v22 = a3 > v16;
  }
  return (*(uint64_t (**)(unint64_t))(v7 + 8 * ((v8 + 1560) ^ (!v22 * v9))))(((v21 >> (((v8 + 24 + v17) & v18) ^ v19)) ^ v20)+ a7+ (a2 & (2 * (v21 >> (((v8 + 24 + v17) & v18) ^ v19)))));
}

uint64_t sub_1000C749C@<X0>(int a1@<W1>, unsigned int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v30 = v26 + 1;
  *(_DWORD *)(a24 + 4 * v30) = v25;
  int v31 = v30 + v27 + v28;
  BOOL v32 = v31 < a3;
  BOOL v33 = v31 > a1;
  if (v24 > a2 != v32) {
    BOOL v34 = v32;
  }
  else {
    BOOL v34 = v33;
  }
  return (*(uint64_t (**)(void))(v29 + 8 * ((!v34 * a4) ^ a5)))();
}

uint64_t sub_1000C74A4@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1644));
  return v3(v1);
}

void sub_1000C74DC()
{
}

uint64_t sub_1000C74F4@<X0>(uint64_t a1@<X4>, int8x16_t *a2@<X7>, int a3@<W8>)
{
  *(int8x16_t *)(a1 + (a3 - 888742414)) = vaddq_s8(vsubq_s8(*a2, vandq_s8(vaddq_s8(*a2, *a2), v6)), v7);
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * ((1433
                                              * (((v3 - 241) ^ 0x10CLL) == ((v4 + 1) & 0x1FFFFFFF0))) ^ v3)))(268);
}

uint64_t sub_1000C756C@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 ^ (a1 + 334) ^ (a1 + 1302) ^ (135 * (a2 ^ 0x15C))) * (v3 == v2)) ^ a2)))();
}

uint64_t sub_1000C75AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v15 - 128) = v14;
  *(_DWORD *)(v15 - 120) = (v13 - 367) ^ (1734042137 * ((v15 - 128) ^ 0x5CCEC34D));
  *(void *)(v15 - 112) = a11;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v13 + 1004)))(v15 - 128);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * ((((((v13 - 881) ^ (v11 == 1021916691)) & 1) == 0)
                                              * (((v13 - 1009) | 0x180) - 374)) | v13)))(v16);
}

uint64_t sub_1000C7644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v9 = STACK[0x578];
  STACK[0x490] = *(void *)(v8 + 8 * (v7 - 250));
  STACK[0x4E0] = v9;
  STACK[0x5D8] = STACK[0x3D0];
  uint64_t v10 = *(_DWORD *)(v9 - 0x7C014C707EC207E4) & 0x3F;
  *(unsigned char *)(v9 - 0x7C014C707EC20828 + (v10 ^ 0x1E)) = -44;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v8 + 8 * ((((v10 ^ 0x1E) > (((v7 ^ 0x10C) + 1100238562) & 0xBE6BB36C ^ 0x253)) * ((v7 ^ 0x10C) + 1090)) ^ v7 ^ 0x10C)))(a1, a2, a3, 1008845537, a5, 278, a7, 0x83FEB38F813DF820);
}

uint64_t sub_1000C7718()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1282
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v0) == v0
                                                                              + ((v2 - 1952598254) & 0x74624AAF)
                                                                              - 687)) ^ v2)))();
}

void sub_1000C776C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 3804331 * ((((2 * a1) | 0x5B2BA828) - a1 - 764793876) ^ 0xD70B2742);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000C7818@<X0>(unint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, char a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  BOOL v38 = v21 > v36;
  int v39 = v25 + a3;
  int v40 = v25 + 1;
  uint64_t v41 = 4 * (v40 + a3);
  unint64_t v42 = (*(_DWORD *)(a21 + v41) ^ v22) + (a2 ^ HIDWORD(v24));
  unint64_t v43 = (v35 >> (a4 ^ v33))
      + v28 * (unint64_t)(*(_DWORD *)(*v29 + v41) ^ v22)
      + ((v42 + v27 - (v32 & (2 * v42))) ^ a1);
  *(_DWORD *)(a21 + 4 * v39) = v43 + v22 - (v23 & (2 * v43));
  if (v38 == v40 + 524367443 < v30) {
    BOOL v38 = v40 + 524367443 < v34;
  }
  return (*(uint64_t (**)(void))(v31 + 8 * ((!v38 * v37) ^ v26)))();
}

uint64_t sub_1000C78C4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  BOOL v15 = a11 - v13 != a1 + 1388427625 || v11 == ((a1 + 2011159334) & 0xFEBE7DFE) - 1357213510;
  return (*(uint64_t (**)(void))(v12 + 8 * ((126 * v15) ^ a1)))();
}

uint64_t sub_1000C792C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,_DWORD *a27)
{
  unint64_t v32 = (*a27 ^ v27) + a17 * (unint64_t)(*(_DWORD *)(*a18 + 4 * ((v31 ^ 0x4C6) + v28 - 1096395108)) ^ v27);
  char v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * (v31 ^ (421 * (v29 > 1))));
  return v33(a1, a2, a3, v33, a5, a6, a7, v32 + a1 - ((2 * v32) & 0x77E2C6EB37127BCLL), a9, a10, a11, a12, a13, a14);
}

void sub_1000C7948(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 3804331 * ((2 * (a1 & 0x2F66049F) - a1 - 795215008) ^ 0x2A070836);
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = (char *)*(&off_100166A10 + v1 - 1076) - 4;
  (*(void (**)(void, uint64_t (*)()))&v3[8 * v1 + 5968])(*(&off_100166A10 + (v1 ^ 0x480)), sub_1000EB0DC);
  __asm { BRAA            X9, X17 }
}

void sub_1000C7A0C()
{
}

uint64_t sub_1000C7A50(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14)
{
  uint64_t v28 = v22 - 16 + (((a12 - 824) | v20) ^ (v14 + 171));
  uint64_t v29 = ((_BYTE)v22 - 16 + (((a12 - 56) | v20) ^ (v14 - 85))) & 0xF;
  v31.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v31.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v24, a5).u64[0];
  int8x16_t v32 = vrev64q_s8(vmulq_s8(v31, a6));
  *(int8x16_t *)(v18 + v28) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v15 + (v28 & 0xF) - 15), *(int8x16_t *)(a13 + v28)), veorq_s8(*(int8x16_t *)(v17 + (v28 & 0xF) - 15), *(int8x16_t *)((v28 & 0xF) + v16 - 13))), vextq_s8(v32, v32, 8uLL));
  return (*(uint64_t (**)(void))(v23 + 8 * (((v19 == 16) * v21) ^ a12)))();
}

void sub_1000C7A5C()
{
  STACK[0x458] = *(void *)(v1 + 8 * (v0 - 277));
  JUMPOUT(0x1000CAF44);
}

uint64_t sub_1000C7A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x508] = *(void *)(v64 + 8 * v63);
  return sub_1000FDD38(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_1000C7AAC(uint64_t result)
{
  uint64_t v1 = 1224239923 * ((2 * (result & 0x41C6001674A78D56) - result + 0x3E39FFE98B5872A9) ^ 0x16634A8079EB8F7ELL);
  unint64_t v2 = *(void *)(result + 16) ^ v1;
  unint64_t v3 = *(void *)(result + 40) + v1;
  int v4 = *(_DWORD *)(result + 28) - 1224239923 * ((2 * (result & 0x74A78D56) - result - 1957137751) ^ 0x79EB8F7E);
  BOOL v5 = v2 == v3;
  BOOL v6 = v2 > v3;
  int v7 = v5;
  if (((*(_DWORD *)(result + 4) + 1224239923 * ((2 * (result & 0x74A78D56) - result - 1957137751) ^ 0x79EB8F7E)) & 1) == 0) {
    BOOL v6 = v7;
  }
  if (!v6) {
    int v4 = *(_DWORD *)result ^ (1224239923 * ((2 * (result & 0x74A78D56) - result - 1957137751) ^ 0x79EB8F7E));
  }
  *(_DWORD *)(result + 8) = v4 ^ (*(_DWORD *)(result + 32)
                                + 1224239923 * ((2 * (result & 0x74A78D56) - result - 1957137751) ^ 0x79EB8F7E));
  return result;
}

uint64_t sub_1000C7B4C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((124 * (v0 < (((LODWORD(STACK[0x414]) + 457) | 0x14) ^ 0xF1F6C952))) ^ (LODWORD(STACK[0x414]) + 417))))();
}

uint64_t sub_1000C7B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v15 = 1734042137 * ((v14 + 1558876508 - 2 * ((v14 - 144) & 0x5CEA91EC)) ^ 0x2452A1);
  *(_DWORD *)(v14 - 120) = v13 - v15 + 610;
  *(_DWORD *)(v14 - 144) = v10 - v15 + ((177 * (v13 ^ 0x85)) ^ 0xF1C2F891);
  *(void *)(v14 - 136) = a10;
  *(void *)(v14 - 128) = v11;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v13 ^ 0x74D)))(v14 - 144);
  return sub_1000C7C18(v16);
}

void sub_1000C7C18()
{
  *unint64_t v2 = v1;
  *(_DWORD *)(v0 + 40) = -1008821960;
}

uint64_t sub_1000C7C6C(_DWORD *a1)
{
  unsigned int v2 = 628203409 * ((a1 & 0xC4813AD7 | ~(a1 | 0xC4813AD7)) ^ 0xB9F6C91B);
  int v3 = a1[12] ^ v2;
  int v4 = a1[8] - v2;
  unsigned int v9 = v3
     - 235795823 * ((2 * (&v9 & 0x3CBF2484) - &v9 - 1019159688) ^ 0x57ED9221)
     - 1404134225;
  BOOL v5 = (char *)*(&off_100166A10 + (v3 ^ 0x45E092C3)) - 4;
  uint64_t result = (*(uint64_t (**)(unsigned int *))&v5[8 * (v3 ^ 0x45E095B2)])(&v9);
  if (v4 > 721007253)
  {
    if (v4 == 1006219925)
    {
      unsigned int v7 = 3;
    }
    else
    {
      if (v4 != 721007254) {
        goto LABEL_11;
      }
      unsigned int v7 = 1;
    }
LABEL_10:
    uint64_t v8 = *(void *)&v5[8
                      * ((((*(uint64_t (**)(void, uint64_t))&v5[8 * (v3 ^ 0x45E095BA)])((*((_DWORD *)*(&off_100166A10 + v3 - 1172345400) + 6 * v7 + 3) - 1576401730), 2970849626) == 0)* (212 * (v3 ^ 0x45E0925C) - 1361)) ^ (v3 - 1172343599))];
    __asm { BRAA            X8, X17 }
  }
  if (v4 == 721007250)
  {
    unsigned int v7 = 0;
    goto LABEL_10;
  }
  if (v4 == 721007253)
  {
    unsigned int v7 = 2;
    goto LABEL_10;
  }
LABEL_11:
  a1[6] = 1008845444;
  return result;
}

uint64_t sub_1000C7ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * ((((v3 - 1620045302) < 0x38)
                                                                         * (((v5 - 8) | 0x291) - 558)) ^ (v5 + 530))))(a1, a2, a3, 84);
}

uint64_t sub_1000C7F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35
                                                              + 8
                                                              * ((471 * ((a35 - 1388383509) > 0xFFFFFFFA)) ^ ((int)a2 + 1226))))(a1, a2, a3);
}

uint64_t sub_1000C7F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned int a33,unsigned int a34,unsigned int a35,unsigned int a36,int a37,int a38,int a39,unsigned __int8 a40)
{
  int v40 = a40 ^ 0xDB;
  if (v40 == 1)
  {
    char v41 = (a6 + 83) & 0x48;
    BYTE4(a31) = ((8 * a33) ^ 0xF0) - ((((8 * a33) ^ 0xFFFFFFF0) << (v41 - 71)) & 0xA0) + 84;
    BYTE5(a31) = ((a33 >> 5) ^ 0xA6) + (~(2 * ((a33 >> 5) ^ 0xA6)) | 0x57) + 85;
    char v44 = -88;
    BYTE6(a31) = ((a33 >> 13) ^ 0xE0) - ((2 * ((a33 >> 13) ^ 0xE0)) & 0xA8) + 84;
    HIBYTE(a31) = ((a33 >> 21) ^ 0x59) - ((2 * ((a33 >> 21) ^ 0x59)) & 0xA8) + 84;
    HIDWORD(v45) = HIDWORD(a32) ^ 3;
    LODWORD(v45) = ~a33;
    LOBYTE(a32) = (v45 >> 29) - ((2 * (v45 >> 29)) & 0xA8) + 84;
    BYTE1(a32) = ((HIDWORD(a32) >> 5) ^ 0x48)
               + ~(2 * (((HIDWORD(a32) >> 5) ^ 0x48) & 0x56 ^ (HIDWORD(a32) >> 5) & 2))
               + 85;
    BYTE2(a32) = ((HIDWORD(a32) >> 13) ^ 0x41)
               - 2 * (((HIDWORD(a32) >> 13) ^ 0x41) & 0x56 ^ (HIDWORD(a32) >> 13) & 2)
               + 84;
    unsigned int v43 = (HIDWORD(a32) >> 21) ^ 0xFFFFFFD7;
    goto LABEL_5;
  }
  if (v40 == 2)
  {
    char v41 = a4 + a6 + 2;
    BYTE4(a31) = ((HIDWORD(a32) >> (v41 ^ 0x5D)) ^ 0xD7) - ((2 * ((HIDWORD(a32) >> (v41 ^ 0x5D)) ^ 0xD7)) & 0xA8) + 84;
    BYTE5(a31) = ((HIDWORD(a32) >> 13) ^ 0x41)
               - 2 * (((HIDWORD(a32) >> 13) ^ 0x41) & 0x56 ^ (HIDWORD(a32) >> 13) & 2)
               + 84;
    BYTE6(a31) = ((HIDWORD(a32) >> 5) ^ 0x48) - 2 * (((HIDWORD(a32) >> 5) ^ 0x48) & 0x56 ^ (HIDWORD(a32) >> 5) & 2) + 84;
    HIDWORD(v42) = HIDWORD(a32) ^ 3;
    LODWORD(v42) = ~a33;
    HIBYTE(a31) = (v42 >> 29) + (~(2 * (v42 >> 29)) | 0x57) + 85;
    LOBYTE(a32) = ((a33 >> 21) ^ 0x59) - 2 * (((a33 >> 21) ^ 0x59) & 0x56 ^ (a33 >> 21) & 2) + 84;
    BYTE1(a32) = ((a33 >> 13) ^ 0xE0) - 2 * (((a33 >> 13) ^ 0xE0) & 0x56 ^ (a33 >> 13) & 2) + 84;
    BYTE2(a32) = ((a33 >> 5) ^ 0xA6) - 2 * (((a33 >> 5) ^ 0xA6) & 0x55 ^ ((a33 & 0x20) != 0)) + 84;
    LOBYTE(v43) = (8 * a33) ^ 0xF0;
    char v44 = -96;
LABEL_5:
    BYTE3(a32) = v43 + ((v41 + 68) | 0x20) - (v44 & (2 * v43)) - 88;
  }
  return sub_1000C8E78(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000C81F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,_DWORD *a36)
{
  *a36 ^= a35;
  return (*(uint64_t (**)(void))(v37
                              + 8
                              * ((1510
                                * (v38 - 1 == ((v36 + 527) ^ (a5 + 662))
                                            + 1006347092
                                            + ((v36 + 1581219632) & 0xAFEECD7C))) ^ (v36 + 527))))();
}

void sub_1000C8264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_DWORD *)(a4 + v5) = v4;
  sub_1000E9B68();
}

uint64_t sub_1000C826C@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W8>)
{
  *(unsigned char *)(v9 - 220 + (v4 + a3 + v5 - v7 + 59)) = *(unsigned char *)(v3 + v8 - 843402718)
                                                                - ((2 * *(unsigned char *)(v3 + v8 - 843402718)) & 0xA8)
                                                                + 84;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((4 * ((a2 + v4 + 1) < 0x40)) | (((a2 + v4 + 1) < 0x40) << 6)) ^ (a1 + v5 + 70))))();
}

void sub_1000C82E0()
{
}

uint64_t sub_1000C8314()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((((v1 - 571) | 0x216) - 765) ^ v0) < 8) * (((v1 + 509) | 6) - 1345)) ^ (v1 + 48))))();
}

uint64_t sub_1000C8358(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = (2 * (v14 & 0x8000000)) ^ 0x10000000 | v14 & 0x8000000;
  unint64_t v16 = a7 ^ 0xCAAF1812AF19B926;
  uint64_t v17 = v8 ^ v14;
  BOOL v18 = ((a3 ^ 0x7B568D7898000000) & (v15 - 0x8000000)) == 0;
  unint64_t v19 = v10 ^ 0xB27F2273FEF5574 ^ ((a7 ^ 0xCAAF1812AF19B926)
                                   + v13
                                   - ((2 * (a7 ^ 0xCAAF1812AF19B926)) & 0xDEC6D1470A6BFF36));
  uint64_t v20 = v15 + 0x465129D92E25FB26;
  uint64_t v21 = v15 ^ 0x465129D93E25FB26;
  if (v18) {
    uint64_t v21 = v20;
  }
  unint64_t v22 = ((a3 ^ a8) - 0x465129D93625FB26 + v21) ^ v14 & 0xFFFFFFFFF7FFFFFFLL;
  uint64_t v23 = (v16 ^ -(uint64_t)v16 ^ ((v10 ^ 0x1BBB657B45255510) + v19 + 1)) + (v10 ^ 0x1BBB657B45255510);
  *((void *)&v24 + 1) = v17 ^ 0x2D39B7A69F1ELL;
  *(void *)&long long v24 = v17 ^ 0xCE06400000000000;
  uint64_t v25 = __ROR8__((v24 >> 46) ^ __ROR8__((v22 ^ 0xBD0094DC66D3D876) & (v10 ^ 0x1BBB657B45255510), 46) ^ 0xF34487E3A2F185E4, 18);
  int v26 = v12 + 236;
  unint64_t v27 = v22 ^ v23 & (v10 ^ 0xE4449A84BADAAAEFLL);
  unint64_t v28 = ((((v27 ^ 0xDE7D4232DD58C1D2) + (v27 ^ v11) + 1) ^ 0xFFFFFFFFFFFFFFF8) + (v27 ^ v11)) ^ v25;
  LOBYTE(v27) = v10 ^ (v8 ^ 0x2A ^ v26) & ~(_BYTE)v23 ^ 0x3A ^ v27;
  return sub_1000D8140(a1, v23 ^ (v8 ^ v14 ^ 0xCE066D39B7A69F1ELL) & (v8 ^ 0xAFE543CAA052534BLL), v28 ^ (v28 << 36) ^ ((v28 >> 28) | (v28 << 45)) ^ (((v28 >> 10) ^ 0x185E4F34487E3ALL) >> (v27 & v9 ^ v9) >> (v27 & v9)) ^ 0x18B6BA6FA9501AE7, a4, a5, v26);
}

uint64_t sub_1000C86C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v11 = ((a8 + 199) ^ 0xC8B448C5) + v9;
  int v12 = (v8 > ((a8 + 335163342) & 0xEC05CEFF ^ 0x39BC9049)) ^ (v11 < -968659614);
  BOOL v13 = v11 < (int)(v8 + 1178824034);
  if (v12) {
    BOOL v13 = v8 > ((a8 + 335163342) & 0xEC05CEFF ^ 0x39BC9049);
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (a8 | (32 * !v13))))();
}

uint64_t sub_1000C874C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  LODWORD(STACK[0x388]) = (BYTE4(a23) | (unsigned __int16)(~(_BYTE)a26 << 8) | ((a28 ^ 0x92) << 16) | ((BYTE4(a26) ^ 0xC) << ((BYTE4(a29) ^ 0x98) + 98))) ^ 0x93797938;
  LODWORD(STACK[0x238]) = a27 ^ 0x50888F3B;
  LODWORD(STACK[0x3B8]) = ((HIDWORD(a27) << 8) | (HIDWORD(a24) << 24) | ((HIDWORD(a28) ^ 0x77) << 16) | HIDWORD(a25)) ^ 0x36024B35;
  LODWORD(STACK[0x3C8]) = ((((a29 ^ 0xBC) << 16) + ((a24 ^ 0x1A) << 24)) | a25 | ((LODWORD(STACK[0x3F8]) ^ v58) << 8)) ^ 0x69835F79;
  return sub_1000CE5B0(a1, a2, a3, a4, a5, a6, 119, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

void sub_1000C8848(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)(v8 - 140) = *(_DWORD *)(a8 + 40)
                        - a1
                        - ((2 * (*(_DWORD *)(a8 + 40) - a1) - 1277732386) & 0xA0FAA472)
                        - 1435959512;
  JUMPOUT(0x1000C5548);
}

uint64_t sub_1000C8984(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(a2 + (v4 + v3 - 1130)) = *(void *)(a1 + (v4 + v3 - 1130));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 != v4) * a3) ^ v6)))();
}

uint64_t sub_1000C89B4()
{
  return 4294925278;
}

void sub_1000C89BC(uint64_t a1@<X8>, uint64_t a2, int a3, unsigned int a4)
{
  int v9 = v7 - 1138;
  unsigned int v10 = ((&a2 & 0xF83D2A42 | ~(&a2 | 0xF83D2A42)) ^ 0xD9046866) * v5;
  a2 = v6;
  a3 = v10 + v9 + 1184;
  a4 = (v9 ^ 0x560E8F1) - (v4 + v10) - ((1276896554 - v8) & 0xBEA5EE12);
  (*(void (**)(uint64_t *))(a1 + 8 * (v9 ^ 0x691)))(&a2);
  sub_1000E0CE8();
}

void sub_1000C8A4C()
{
}

uint64_t sub_1000C8A54()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1488
                                * ((v3 ^ 0x7FFD5FDE) - 97517716 + (v1 & 0xFFFABFBC) - 2049793867 < ((((v0 ^ 0x43F) - 503) | 0x81) ^ 0x7FFFFD48)
                                                                                                 + (((v0 ^ 0x43F) - 21) | 0x10u))) ^ v0 ^ 0x43F)))();
}

uint64_t sub_1000C8AD8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((197 * (a3 ^ 0x89)) ^ ((a3 ^ 0x2A4) + 853)) * (v4 == v5)) ^ a3)))();
}

uint64_t sub_1000C8B14(uint64_t a1)
{
  int v2 = 3804331 * ((a1 + 2012056994 - 2 * (a1 & 0x77ED8DA2)) ^ 0x8D737EF4);
  int v3 = *(_DWORD *)(a1 + 4) + v2;
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  int v8 = 762464893 * (*(_DWORD *)(a1 + 24) - v2) - 1314702367;
  unsigned int v9 = 235795823 * ((2 * (&v11 & 0x1605F2A8) - &v11 - 369488553) ^ 0x7D57440E);
  int v16 = v9 ^ (v3 - 368398253);
  uint64_t v17 = v5;
  uint64_t v11 = v7;
  unsigned int v12 = v9 + (v8 ^ 0xFBFD4DFB) + ((2 * v8) & 0xF7FA9BF6) + 2011954736;
  uint64_t v13 = v6;
  uint64_t v14 = v4;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_100166A10 + v3 - 368400025) + 8 * (v3 ^ 0x15F550D1) - 4))(&v11);
  *(_DWORD *)(a1 + 48) = v15;
  return result;
}

uint64_t sub_1000C8C8C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v1 ^ (4 * (v0 == (((v1 - 154) | 0x640u) ^ 0x131DF73B70D82CB7 ^ (3 * (v1 ^ 0x1E6u))))))))();
}

void sub_1000C8CD8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1000C8DCC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((49 * (((v2 - 45) ^ (a1 == ((v2 - 989) ^ 0x10D7555FEF747F5CLL))) & 1)) ^ v2)))();
}

uint64_t sub_1000C8E34(uint64_t result)
{
  return sub_1000D9284(result);
}

void sub_1000C8E50()
{
}

uint64_t sub_1000C8E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,unsigned int a34,unsigned int a35,unsigned int a36,int a37,int a38,int a39,unsigned __int8 a40)
{
  HIDWORD(a17) = a13 + 2060744326;
  HIDWORD(a13) = a6 ^ (a6 - 167);
  v41.i64[0] = 0x5454545454545454;
  v41.i64[1] = 0x5454545454545454;
  return sub_1000E682C(v41, a1, a2, 53, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           v40 - 16,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000C8EE8()
{
  return 4294925278;
}

uint64_t sub_1000C8EF0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((27 * ((((v0 - 237914170) ^ (v2 > 0x17F8161F)) & 1) == 0)) ^ (v0 - 237914179))))();
}

uint64_t sub_1000C8F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_OWORD *)(v5 + (v4 + a3)) = *(_OWORD *)(a4 + a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8 * (((v6 == a3) * v8) ^ v7)))(a1, a2, a3 + a2);
}

uint64_t sub_1000C8F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x380]) = 0;
  STACK[0x388] = 0;
  STACK[0x2C0] = v5 + 2304;
  uint64_t v8 = ((v4 & 0x3BF7DFFF) - 2119113280) & 0x7E4F19E7;
  LODWORD(STACK[0x4F4]) = 1600514284;
  unint64_t v9 = STACK[0x3F8];
  unint64_t v10 = (unint64_t)&STACK[0x670] + STACK[0x3F8] - 0x61CB92A9D1FA146FLL;
  STACK[0x3B0] = STACK[0x3F8] + 4144;
  STACK[0x5B0] = v9 + 4144;
  *(void *)unint64_t v10 = 0x6370646600;
  *(unsigned char *)(v10 + 8) = 1;
  STACK[0x238] = v10;
  STACK[0x3B8] = v10 + 1712 + ((v8 ^ 0x140) & (16 * (v10 + 1712) + 16)) + 16;
  LODWORD(STACK[0x3D8]) = 1751781780;
  STACK[0x3C0] = v10 + 9;
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 8 * (int)((11 * ((((v8 ^ 0xD8) - 164) ^ 0x139) == 32)) ^ v8));
  STACK[0x3F8] = *(void *)(v6 + 8 * (int)(v8 ^ 0x12D));
  STACK[0x3F0] = *(void *)(v6 + 8 * (int)(v8 ^ 0x130));
  return v11(a1, a2, a3, a4, 717574018, 3711884215, 3297521262, (__n128)0);
}

uint64_t sub_1000C90E8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * (((v2 > (v3 ^ 0x3C5u) - 249167701) * ((v3 + 451) ^ 0x2DB)) ^ (v3 - 62))))(a1, a2, 1923539499);
}

uint64_t sub_1000C9130()
{
  *(_DWORD *)(v6 - 128) = (v2 - 353) ^ (1734042137
                                      * ((-1253097977 - ((v6 - 136) | 0xB54F3E07) + ((v6 - 136) | 0x4AB0C1F8)) ^ 0x167E02B5));
  *(void *)(v6 - 120) = v0;
  *(void *)(v6 - 136) = v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 + 1018)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((1466 * (v3 == v4 + 1742766921 + ((v2 - 1143776229) & 0x442CA159) - 635)) ^ v2)))(v7);
}

uint64_t sub_1000C91F4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (a1 ^ (29 * ((unint64_t)(v6 - a5 - 4) > 0x1F)))))();
}

uint64_t sub_1000C9234(_DWORD *a1)
{
  *((unsigned char *)a1 + (v2 + v1 - 1908187989) + 4) = 56;
  *a1 = v1;
  return 0;
}

void sub_1000C925C()
{
}

uint64_t sub_1000C9274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  *(unsigned char *)(a5 + (((v36 - 593) ^ (unint64_t)(a3 + 1142)) & (a9 + a1))) = *(unsigned char *)(a36 + a8 - 1388383568);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((238 * ((a1 + a9 + 1) < 0x40)) ^ (v36 - 42))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1000C92D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x540] = 0;
  LODWORD(STACK[0x4B4]) = 1576401730;
  STACK[0x558] = 0;
  LODWORD(STACK[0x5A8]) = 1576401730;
  return (*(uint64_t (**)(void))(v73
                              + 8
                              * ((((*(unsigned char *)(a66 - 0x29FD05868B0DB91FLL)
                                                   - *(unsigned char *)*(&off_100166A10 + a72)) == 193)
                                * (((3 * (a73 & 0x1C4477F6 ^ 0x6CB) - 1304) | 0x500) - 1297)) | a73 & 0x1C4477F6)))();
}

uint64_t sub_1000C9380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, char a8)
{
  int v14 = v12 + 4;
  unsigned int v15 = *(_DWORD *)(v11 + ((v14 - 1687114597) & 0xFFFFFFFC));
  *(unsigned char *)(v10 + (v14 - 1687114597)) = v15 ^ 0x34;
  int v16 = (v15 >> (((v9 - 116) & 0x3B) - 17)) ^ a7;
  *(unsigned char *)(v10 + (v14 - 1687114596)) = v16 - ((2 * v16) & 0xA8) + 84;
  *(unsigned char *)(v10 + (v14 - 1687114595)) = (BYTE2(v15) ^ 0xDE) - ((2 * (BYTE2(v15) ^ 0xDE)) & 0xA8) + 84;
  *(unsigned char *)(v10 + (v14 - 1687114594)) = (a8 ^ HIBYTE(v15)) - ((2 * (a8 ^ HIBYTE(v15))) & 0xA8) + 84;
  unsigned int v17 = *v8 - 643672594;
  BOOL v18 = v17 < 0xEC81DBE;
  BOOL v19 = v14 - 1439118755 < v17;
  if ((v14 - 1439118755) < 0xEC81DBE != v18) {
    BOOL v19 = v18;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((1797 * v19) ^ v9)))();
}

uint64_t sub_1000C9388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((((v8 + 112) ^ 0x539) * (v10 == 0)) ^ (v8 + 122))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1000C93C8()
{
  LODWORD(STACK[0x618]) = v0;
  return sub_1000F8F9C(v1 - 240);
}

uint64_t sub_1000C93E8@<X0>(unsigned int a1@<W0>, int a2@<W4>, int a3@<W8>)
{
  int v6 = 335 * (a2 ^ 0xAA);
  BOOL v7 = a1 < v5;
  unsigned int v8 = v5 + a3 + 1;
  int v9 = v7 ^ (v8 < v5);
  BOOL v10 = v8 < a1;
  if (!v9) {
    BOOL v7 = v10;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (v6 ^ (v7 * v4))))();
}

uint64_t sub_1000C97A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1000C980C(a1, 2396192774, 964205309, 0xF2FF7DFFEFF57C3FLL, a5, 0x1DFEAF87ELL, 0x1DD7D75FFF7EFFECLL, 1560);
}

uint64_t sub_1000C980C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  BOOL v8 = v3 + a1 < a2 && v3 + a1 >= a3;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v8 * (((v4 + 18) ^ v6) - 841)) ^ v4)))();
}

uint64_t sub_1000C9850()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((115 * (v0 + 1 == v3 + 32)) ^ v1)))();
}

uint64_t sub_1000C992C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unint64_t v8 = v2 - 1;
  STACK[0x4A0] = v8;
  *(unsigned char *)(a1 + v8) = ((v3 - 50) ^ v4) * (v3 + 1 + ((a2 + 44) ^ v5));
  return (*(uint64_t (**)(void))(v7 + 8 * (((STACK[0x4A0] == 0) * v6) ^ a2)))();
}

uint64_t sub_1000C9934()
{
  BOOL v4 = v0 + 409985487 < (int)(v3 + 2062726131);
  if (v3 > 0x50D4C0C != v0 + 409985487 < -84757517) {
    BOOL v4 = v3 > 0x50D4C0C;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((!v4 * (((v1 - 779) | 0x448) ^ 0x48F)) ^ v1)))();
}

void sub_1000C99C8()
{
  STACK[0x3F0] = v0;
  *(_DWORD *)(STACK[0x648] + ((v2 - 1417905636 + LODWORD(STACK[0x524]) - 1388) & 0xFFFFFFFC)) = v1;
  JUMPOUT(0x1000FDE8CLL);
}

uint64_t sub_1000C99FC()
{
  int v4 = (((v0 - 379) | 0x54) ^ 0x39E34BD4) + v3;
  int v5 = (v1 > 0x5C276EA) ^ (v4 < (int)(((v0 + 445) | 0x100) ^ 0xFA3D8C2E));
  BOOL v6 = v4 < (int)(v1 + 2050853141);
  if (v5) {
    BOOL v6 = v1 > 0x5C276EA;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((1557 * v6) ^ v0)))();
}

uint64_t sub_1000C9A88()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v1 + 1 + v2) < 0x3C) * v3) ^ v0)))();
}

uint64_t sub_1000C9B48@<X0>(int a1@<W5>, char a2@<W6>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,unsigned int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
  unsigned int v57 = a1 ^ ((*v56 & 0x7FFFFFFE | v56[623] & 0x80000000) >> 1);
  v56[623] = v56[396] ^ v54 ^ *((_DWORD *)&a52 + ((*v56 & 1) == 0)) ^ (v57
                                                                     + v53
                                                                     - ((v57 << (((a3 - 9) | 0x44)
                                                                               + (a3 ^ (a2 + 17) ^ 0xF9))) & v55));
  return (*(uint64_t (**)(void))(v52 + 8 * ((820 * (a34 > 0x26F)) ^ a3)))();
}

uint64_t sub_1000C9BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  unsigned int v10 = v9 + a7 + 1764976319;
  BOOL v11 = v10 < 0x8FE8DB20;
  BOOL v12 = v10 > v7 + 1213728445;
  if ((v7 + 1213728445) < 0x8FE8DB20 != v11) {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((((((a6 - 1061) ^ 0x20E) - 1) ^ ((a6 - 1061) | 0x207)) * !v12) | a6)))();
}

uint64_t sub_1000C9C64@<X0>(int a1@<W8>, __n128 a2@<Q0>)
{
  unint64_t v6 = ((v2 - 1277) ^ 0x9E346D562E05E308) + v3;
  STACK[0x208] = v6;
  int v7 = (char *)&STACK[0x670] + v6;
  *(_DWORD *)int v7 = 2023405429;
  *((void *)v7 + 1) = 0;
  *((_DWORD *)v7 + 4) = 1221601994;
  *((_DWORD *)v7 + 6) = 1576401730;
  *((void *)v7 + 4) = 0;
  uint64_t v8 = (char *)&STACK[0x670] + v6;
  *((_DWORD *)v8 + 10) = 1576401730;
  int v9 = (char *)&STACK[0x670] + v6;
  *((void *)v9 + 6) = 0;
  STACK[0x418] = (unint64_t)(v8 + 40);
  STACK[0x590] = (unint64_t)(v9 + 48);
  *((_DWORD *)v7 + 14) = 1576401730;
  STACK[0x560] = (unint64_t)(v7 + 56);
  *((void *)v7 + 8) = 0;
  *((_DWORD *)v7 + 18) = 1576401730;
  STACK[0x5B8] = (unint64_t)(v7 + 64);
  STACK[0x4F8] = (unint64_t)(v7 + 72);
  *((void *)v7 + 10) = 0;
  STACK[0x4D0] = (unint64_t)(v7 + 80);
  v7[88] = 10;
  *(_DWORD *)uint64_t v4 = 2023405429;
  *(__n128 *)(v4 + 4) = a2;
  *(_DWORD *)(v4 + 20) = 0;
  *(_DWORD *)(v4 + 24) = 1576401730;
  *(_DWORD *)(v4 + 28) = 1908186914;
  STACK[0x2E8] = v4 + 28;
  *(_DWORD *)(v4 + 232) = 1908186914;
  STACK[0x2E0] = v4 + 232;
  *(__n128 *)(v4 + 436) = a2;
  *(__n128 *)(v4 + 452) = a2;
  *(void *)(v4 + 468) = 0;
  strcpy((char *)(v4 + 1128), "TTTTTTTTTTTTTTTTTTTT");
  *(unsigned char *)(v4 + 1149) = 0;
  *(_WORD *)(v4 + 1150) = 0;
  *(void *)(v4 + 1152) = 0;
  *(void *)(v4 + 1160) = 0;
  *(__n128 *)(v4 + 1168) = a2;
  *(__n128 *)(v4 + 1184) = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * ((825 * (((a1 + 43) | 0x200) == 1891)) ^ a1)))();
}

uint64_t sub_1000C9DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  LODWORD(a18) = a12 + 74588824;
  v23.i64[0] = 0x5454545454545454;
  v23.i64[1] = 0x5454545454545454;
  HIDWORD(a17) = v21 - 52293563;
  return sub_1000D5E28(v23, a1, a2, a3, a4, 1279, 168, 47, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           v22 - 16);
}

uint64_t sub_1000C9E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a10 + v12 + ((v10 - 1015) | 1)) = v14;
  return (*(uint64_t (**)(void))(v13 + 8 * ((1010 * ((v11 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ v10)))();
}

uint64_t sub_1000C9E84()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((*(void *)(v1 - 0x65EF48AAD10F5714) != 0)
                                     * ((v2 + 864793555) & 0xCC744EFF ^ 0x595 ^ (179 * (v2 ^ 0x41E)))) | v2)))();
}

uint64_t sub_1000C9F04(uint64_t a1)
{
  BOOL v4 = ((*(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 + 1330136732))
       - ((*(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 + 1330136732)) << ((v3 + 123) ^ 0xAE)) & (v3 - 406))
       + 1936793807) & 0x1F) != 16;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v4 | (2 * v4)) ^ v3)))();
}

uint64_t sub_1000C9F68@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((126 * (v1 == (((a1 + 1149259791) | 0x321E0916) ^ 0x5326B346))) ^ a1)))();
}

uint64_t sub_1000C9FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v31 = v29 & 0x7217B677;
  *(void *)(v30 - 128) = a22;
  *(void *)(v30 - 120) = a24;
  *(void *)(v30 - 112) = a20;
  *(_DWORD *)(v30 - 136) = v31
                         - 418
                         - 1374699841 * ((((v30 - 144) | 0xA15A08C5) - ((v30 - 144) & 0xA15A08C5)) ^ 0xCCAE10CC);
  *(void *)(v30 - 144) = a22;
  (*(void (**)(uint64_t))(v25 + 8 * (v31 + 345)))(v30 - 144);
  *(void *)(v30 - 120) = a24;
  *(void *)(v30 - 112) = a20;
  *(void *)(v30 - 144) = a22;
  *(void *)(v30 - 128) = a22;
  *(_DWORD *)(v30 - 136) = v31 - 418 - 1374699841 * ((v30 - 1291515638 - 2 * ((v30 - 144) & 0xB305099A)) ^ 0xDEF11193);
  (*(void (**)(uint64_t))(a25 + 8 * (v31 ^ 0x1A7u)))(v30 - 144);
  int v32 = 460628867 * ((2 * ((v30 - 144) & 0xE6CCAF0) - (v30 - 144) + 1905472776) ^ 0x3D05B775);
  *(void *)(v30 - 136) = v27;
  *(_DWORD *)(v30 - 144) = v32 + v28 - 1999839576;
  *(_DWORD *)(v30 - 128) = v32 + v31 - 1325;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(a25 + 8 * (v31 ^ 0x192u)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(a25
                                            + 8
                                            * ((14
                                              * (*(_DWORD *)(v30 - 140) != (((v31 - 1269) | 0x30) ^ (v26 - 96))
                                                                         + ((v31 + 1744281988) & 0x980859B6))) ^ v31)))(v33);
}

uint64_t sub_1000CA174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v19 - 136) = v17 + ((v19 - 1057114496 - 2 * ((v19 - 136) & 0xC0FDB708)) ^ 0x5450FE51) * v15 + 1056;
  *(void *)(v19 - 128) = v18;
  *(void *)(v19 - 120) = a14;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 ^ 0x6F8)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((2004 * (*(_DWORD *)(v19 - 132) == v14 + (v17 ^ 0x7B) - 344)) ^ v17)))(v20);
}

uint64_t sub_1000CA208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, int a14)
{
  int v23 = (*(_DWORD *)(a1 + 16) ^ v18) + *(_DWORD *)(v14 - 0x65EF48AAD10F5704) - 949109331;
  unsigned int v20 = 1734042137
      * ((((&a11 | 0x69F868C4) ^ 0xFFFFFFFE) - (~&a11 | 0x9607973B)) ^ 0xCAC95476);
  a13 = 1730004587 - v20;
  a14 = (7 * (v19 ^ 0x321) + v23 + 333754886) ^ v20;
  a12 = v19 - v20 + 872;
  a11 = v14;
  uint64_t v21 = (*(uint64_t (**)(uint64_t *))(v17 + 8 * (v19 + 1511)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((2026 * (*v15 == v16)) ^ v19)))(v21);
}

uint64_t sub_1000CA2FC@<X0>(int a1@<W5>, int a2@<W8>)
{
  *(_DWORD *)(*(void *)(v4 - 0x774B811B42847B1FLL) + 4 * (v3 + a2)) = a1;
  int v6 = v3 + v5 - 156;
  *(_DWORD *)(v4 - 0x774B811B42847B23) = v6;
  int v7 = v6 + a2;
  if (v6 + a2 < 0) {
    int v7 = -v7;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((int)((v7 ^ (((v5 + 957468258) & 0xC6EE33FF) - 1079526152))
                                            + ((2 * v7) & 0x7F4F7FEE)
                                            + 1079525384) >= 0)
                                     * ((((v5 + 957468258) & 0xC6EE33FF) + 259) ^ 0x5F0)) ^ (v5 + 957468258) & 0xC6EE33FF)))();
}

uint64_t sub_1000CA3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((*(unsigned char *)(v3 + a2)
                                                   + ((a3 - 24) ^ 0xBD)
                                                   - *(unsigned char *)(*(void *)(a1 + 8 * (a3 - 118)) - 8)) == 125)
                                * (((a3 - 280) | 0x100) - 237)) | (a3 + 1160))))();
}

uint64_t sub_1000CA444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  (*(void (**)(uint64_t, uint64_t))(v20 + 8 * (a7 ^ (a7 - 671))))(a19, 2965982036);
  int v24 = (*(uint64_t (**)(void))(v20 + 8 * (v19 + 237917181)))();
  unsigned int v25 = v24 + v21 - (((v22 - 755) ^ 0x535) & (2 * v24));
  *int v23 = v25;
  unsigned int v26 = (((v21 + 2) ^ (v25 >> 30)) + ((2 * (v25 >> 30)) ^ 0xFFFFFFFD)) ^ v25;
  v23[1] = 1812433253 * v26 - ((-670100790 * v26 + 2) & v22) + 1923539500;
  return (*(uint64_t (**)(uint64_t))(v20 + 10792))(1812433253);
}

uint64_t sub_1000CA534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((a8 - 952) ^ 0xAB) * (v9 != 0)) ^ a8)))();
}

uint64_t sub_1000CA55C@<X0>(int a1@<W6>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  uint64_t v12 = (v7 + v10);
  *(unsigned char *)(a2 + v12 + 36) = *(unsigned char *)(v8 + v12) ^ *(unsigned char *)(v3 + (v12 & 0xF)) ^ *(unsigned char *)((v12 & 0xF) + v4 + 1) ^ ((v6 + 84) * (v12 & 0xF)) ^ *(unsigned char *)(a3 + (v12 & 0xF)) ^ v9;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v7 - 1 == (v6 ^ v5)) * a1) ^ (v6 + 714))))();
}

uint64_t sub_1000CA5CC()
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x65EF48AAD10F5704) - 524463367;
  unsigned int v4 = *(_DWORD *)(v2 - 0x65EF48AAD10F5708) - 273074203;
  BOOL v5 = v4 < 0xCE5402F;
  BOOL v6 = v3 < v4;
  if (v3 < 0xCE5402F != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((390 * v6) | v0)))();
}

uint64_t sub_1000CA658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  HIDWORD(a21) = HIDWORD(a17) + 917609982;
  v37.i64[0] = 0x5454545454545454;
  v37.i64[1] = 0x5454545454545454;
  return sub_1000F9EBC(1939, v37, a2, a3, a4, a5, 53, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           v36 - 16,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000CA6BC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6)
{
  int v7 = (unsigned char *)STACK[0x4A8];
  a6[12] = 84;
  a6[13] = 84;
  a6[14] = 84;
  a6[15] = 85;
  v7[16] ^= *a6 ^ 0x54;
  v7[17] ^= a6[1] ^ 0x54;
  v7[18] ^= a6[2] ^ 0x54;
  v7[19] ^= a6[3] ^ 0x54;
  v7[20] ^= a6[4] ^ 0x54;
  v7[21] ^= a6[5] ^ 0x54;
  v7[22] ^= a6[6] ^ 0x54;
  v7[23] ^= a6[7] ^ 0x54;
  v7[24] ^= a6[8] ^ 0x54;
  v7[25] ^= a6[9] ^ 0x54;
  v7[26] ^= a6[10] ^ 0x54;
  v7[27] ^= a6[11] ^ 0x54;
  v7[28] ^= a6[12] ^ 0x54;
  v7[29] ^= a6[13] ^ 0x54;
  v7[30] ^= a6[14] ^ 0x54;
  v7[31] ^= a6[15] ^ 0x54;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8 * (a1 + 303)))(16426098, 2718565566, 908, 2601758034, 1693210078, 3497873977, 4294967248, 125);
}

uint64_t sub_1000CA8E4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1238 * ((v4 ^ 0x26 ^ a4) + v5 < 4)) ^ v4)))();
}

uint64_t sub_1000CA914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return (*(uint64_t (**)(void))(v25
                              + 8
                              * (((((14 * (a22 ^ 0x3B2) + 455) | 0x320) - 1775)
                                * ((unint64_t)(a20 - a1 - a25 - 0x225CE4F32BA13C6) < 0x20)) ^ a22 ^ 0x58E)))();
}

uint64_t sub_1000CA984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,_DWORD *a36)
{
  int v42 = (v36 - 1364309295) & 0x5F7FFFCC;
  uint64_t v43 = (*(uint64_t (**)(uint64_t, void))(v37 + 8 * (v36 + 1305)))(a17, 0);
  int v44 = a36[4] + v38 - (v39 & (2 * a36[4]));
  a36[1] = a36[6] + v38 - ((v42 ^ 0xEB63891A) & (2 * a36[6]));
  a36[2] = v44;
  int v45 = (*(uint64_t (**)(uint64_t))(v37 + 8 * (v36 ^ 0x546)))(v43);
  a36[3] = v38 + v45 - (v39 & (2 * v45));
  int v46 = (*(uint64_t (**)(void))(v37 + 8 * (v36 + 1338)))();
  *a36 = v46 + v38 - (v39 & (2 * v46));
  unint64_t v47 = 1734042137
      * ((((2 * (v41 - 144)) | 0x1AD93156A15F786) - (v41 - 144) + 0x7F2936754AF5043DLL) ^ 0x9AA96D11E9C4388ELL);
  unsigned int v48 = (((2 * (*v40 >> 30)) ^ 0xFFFFFFFD) + ((*v40 >> 30) ^ (v38 + 2))) ^ *v40;
  unsigned int v49 = (*a36 ^ v38) + ((v38 + 1664525 * v48 - ((3329050 * v48) & 0xE54DC456)) ^ v40[1]);
  v40[1] = v49 + v38 - ((2 * v49) & 0xE54DC456);
  int v50 = v42 - 1756194195 + v47;
  *(void *)(v41 - 144) = v47 ^ 0x17F813B2;
  *(_DWORD *)(v41 - 136) = v50 + 35;
  *(_DWORD *)(v41 - 132) = v50;
  *(_DWORD *)(v41 - 108) = ((v42 - 1756194195) & 0xE5E6FF82) + v47;
  *(void *)(v41 - 128) = v47 + 402133936;
  *(_DWORD *)(v41 - 120) = 1866716922 - v47 + v42;
  *(_DWORD *)(v41 - 116) = v47 ^ 1;
  uint64_t v51 = (*(uint64_t (**)(uint64_t))(v37 + 8 * (v42 ^ 0xE2E4AB0)))(v41 - 144);
  return (*(uint64_t (**)(uint64_t))(v37 + 8 * *(int *)(v41 - 112)))(v51);
}

uint64_t sub_1000CAC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((v9 - 1282) | 0x408) ^ 0x4F8) * (a8 == 0)) ^ v9)))(0);
}

uint64_t sub_1000CAC34(double a1, double a2, double a3, double a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, int a9)
{
  unsigned int v15 = v13 - 1585970961 + v12 + 949;
  int8x16_t v16 = vrev64q_s8(*(int8x16_t *)(v10 + v15 - 15));
  int8x16_t v17 = vextq_s8(v16, v16, 8uLL);
  int8x16_t v18 = vrev64q_s8(*(int8x16_t *)(v10 + v15 - 31));
  int8x16_t v19 = vextq_s8(v18, v18, 8uLL);
  uint64_t v20 = v9 + v15;
  int8x16_t v21 = vrev64q_s8(vaddq_s8(vsubq_s8(v17, vandq_s8(vaddq_s8(v17, v17), a5)), a6));
  *(int8x16_t *)(v20 - 15) = vextq_s8(v21, v21, 8uLL);
  int8x16_t v22 = vrev64q_s8(vaddq_s8(vsubq_s8(v19, vandq_s8(vaddq_s8(v19, v19), a5)), a6));
  *(int8x16_t *)(v20 - 31) = vextq_s8(v22, v22, 8uLL);
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((240 * (((((a9 ^ 0xF0) - 875) ^ ((((a9 ^ 0xF0) - 917) & v11) == 32)) & 1) == 0)) ^ a9 ^ 0xF0)))();
}

void sub_1000CACE8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) ^ (1755732067 * ((-1951871487 - (a1 | 0x8BA8CE01) + (a1 | 0x745731FE)) ^ 0xAA918C25));
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1000CAE1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((231 * (v1 - a1 >= (unint64_t)((v2 + 761) | 0x100u) - 1360)) ^ v2)))();
}

void sub_1000CAE54()
{
  STACK[0x458] = *(void *)(v1 + 8 * (v0 - 244));
  JUMPOUT(0x1000CAF44);
}

uint64_t sub_1000CAE74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(void *)(&a19 + a2 + a1) = 0x5454545454545454;
  return (*(uint64_t (**)(void))(v21 + 8 * ((((v20 & 0x38) == 8) * ((v19 ^ 0x248) + 1180)) ^ v19)))();
}

uint64_t sub_1000CAEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((((*(unsigned char *)(v9 + a8)
                                                                 - *(unsigned char *)(*(void *)(a1 + 8 * (v8 ^ 0x1AC)) - 8)
                                                                 - 68) == ((v8 ^ 0xFB) - 101))
                                              * ((v8 + 389) ^ 0x29C)) ^ (v8 + 504))))(1019);
}

void sub_1000CAF24()
{
  STACK[0x458] = *(void *)(v1 + 8 * (v0 - 257));
  JUMPOUT(0x1000CAF3CLL);
}

uint64_t sub_1000CAF4C@<X0>(int a1@<W2>, unint64_t a2@<X8>)
{
  STACK[0x628] = v4;
  LODWORD(STACK[0x634]) = v2;
  STACK[0x530] = a2;
  BOOL v6 = v2
     - 1884906570
     + ((*(_DWORD *)(v4 - 0x7C014C707EC207E4) << ((v3 - 117) ^ 0x7E)) & 0x4C ^ 0xC)
     + (*(_DWORD *)(v4 - 0x7C014C707EC207E4) & 0x3F ^ (a1 + 19)) >= (v3 ^ 0x4BCu) - 1672;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v6 | (8 * v6)) ^ v3)))();
}

uint64_t sub_1000CAFDC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v8 = v6 + 1196619366 > ((a4 - 179) ^ 0x31DF1314) || v6 + 1196619366 < v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1983 * v8) ^ a4)))();
}

uint64_t sub_1000CB02C@<X0>(int a1@<W1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((LODWORD(STACK[0x444]) + a1 == 0) ^ ((a2 + 107) | 0x11)) & 1 | (32 * (((LODWORD(STACK[0x444]) + a1 == 0) ^ ((a2 + 107) | 0x11)) & 1))) ^ ((a2 + 363) | 0x11))))();
}

uint64_t sub_1000CB090(uint64_t a1, uint64_t a2)
{
  int v4 = (v2 - 1515627187) & 0x5A56A5DB;
  uint64_t v5 = (*(uint64_t (**)(void, uint64_t, void))(v3 + 8 * (v2 ^ 0x9AE)))(*(unsigned int *)STACK[0x2D8], a2, LODWORD(STACK[0x5C4]));
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * ((((15 * (((v4 - 1227) | 0x1A3) ^ 0x1A5)) ^ 0x49)
                                              * (LODWORD(STACK[0x4E8]) == -1008821960)) ^ v4)))(v5);
}

uint64_t sub_1000CB11C()
{
  return sub_1000D3594();
}

uint64_t sub_1000CB13C@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  LODWORD(STACK[0x3F8]) = 1340001900;
  int v6 = (*(unsigned __int8 *)(a2 + 1128) ^ v3) - *(unsigned __int8 *)(v4 + 1148);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((((v6 ^ 0xC7BEE5DD)
                                                        + 1005944504
                                                        + ((v6 << ((v2 - 32) & 0x7D ^ 0x18)) & 0x8F7DCBBA) != 62153877)
                                                       * a1) ^ v2)))(1645908960, 2649058173);
}

uint64_t sub_1000CB1D8@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  uint64_t v35 = (v33 + a2);
  int v36 = *(_DWORD *)(&a19 + v35 + 72);
  *(unsigned char *)(a1 + v35) = (HIBYTE(v36) ^ 0xB6) - (((v32 + 119) & 0xEE ^ 4) & (2 * (HIBYTE(v36) ^ 0xB6))) + 84;
  *(unsigned char *)(a1 + (v35 + 2)) = (BYTE1(v36) ^ 0x3D) - ((2 * (BYTE1(v36) ^ 0x3D)) & 0xA8) + 84;
  *(unsigned char *)(a1 + (v35 + 1)) = (BYTE2(v36) ^ 0xDE)
                                           + ~(2 * ((BYTE2(v36) ^ 0xDE) & 0x55 ^ BYTE2(v36) & 1))
                                           + 85;
  *(unsigned char *)(a1 + (v35 + 3)) = v36 ^ 0x34;
  BOOL v37 = v33 - 780766422 < (a31 + 159830282);
  if (v33 - 780766422 < v31 != a31 + 159830282 < v31) {
    BOOL v37 = a31 + 159830282 < v31;
  }
  return (*(uint64_t (**)(void))(v34 + 8 * ((21 * v37) ^ v32)))();
}

uint64_t sub_1000CB2D8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((346
                                * (((v1 + 3 * (v2 ^ 8) - 687) & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1000CB31C()
{
  unint64_t v3 = STACK[0x3C0];
  int v4 = STACK[0x304] & 0x2164ABBD;
  if (v1 <= 0x1C86CDC4) {
    int v5 = *(_DWORD *)STACK[0x3D0] + 1;
  }
  else {
    int v5 = 1959788296;
  }
  *(_DWORD *)STACK[0x3D0] = v5;
  int v6 = (((v0 >> 11) ^ 0xE54DC) + 1923539499 - ((2 * ((v0 >> 11) ^ 0xE54DC)) & 0xDC456)) ^ v0;
  unsigned int v7 = (((v6 << (v4 + 74)) & 0x9D2C5680 ^ v6) << 15) & 0xEFC60000 ^ (v6 << (v4 + 74)) & 0x9D2C5680 ^ v6;
  int v8 = STACK[0x3D8];
  uint64_t v9 = (unsigned char *)(v3 + (LODWORD(STACK[0x3D8]) - 1751781662));
  unsigned int v10 = ((*(_DWORD *)(*(void *)STACK[0x3F8] + (*(int *)STACK[0x3F0] & 0xFFFFFFFFEAC990CCLL)) ^ v9) & ((4 * (v4 ^ 0x1AD)) ^ 0x7FFFFFBF))
      * (((v4 ^ 0x1AD) + 341) ^ 0x84F137BC);
  unint64_t v11 = -2064566567 * (v10 ^ HIWORD(v10));
  char v12 = *((unsigned char *)*(&off_100166A10 + v4 - 379) + (v11 >> 24)) ^ v7 ^ 0x6E ^ (v7 >> 18) ^ 0x6E ^ *((unsigned char *)*(&off_100166A10 + (v4 ^ 0x1F0))
                                                                                                 + (v11 >> 24)
                                                                                                 - 1) ^ *((unsigned char *)*(&off_100166A10 + v4 - 365) + (v11 >> 24) - 3) ^ v11 ^ (127 * BYTE3(v11));
  *uint64_t v9 = v12;
  return (*(uint64_t (**)(__n128))(v2 + 8 * ((1868 * (v8 - (v12 != 0) == 1751781661)) ^ v4)))((__n128)0);
}

uint64_t sub_1000CB4EC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((23 * (v3 ^ 0x42D)) ^ ((LODWORD(STACK[0x3D8]) == 596678603) * a3))))();
}

uint64_t sub_1000CB544@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = (v2 + 598) - a1 - 1316;
  int8x16_t v5 = vrev64q_s8(*(int8x16_t *)(v1 + v4 - 15));
  int8x16_t v6 = vextq_s8(v5, v5, 8uLL);
  int8x16_t v7 = vrev64q_s8(*(int8x16_t *)(v1 + v4 - 31));
  int8x16_t v8 = vextq_s8(v7, v7, 8uLL);
  unint64_t v9 = STACK[0x2C0] + v4;
  v10.i64[0] = 0xA8A8A8A8A8A8A8A8;
  v10.i64[1] = 0xA8A8A8A8A8A8A8A8;
  v11.i64[0] = 0x5454545454545454;
  v11.i64[1] = 0x5454545454545454;
  int8x16_t v12 = vrev64q_s8(vaddq_s8(vsubq_s8(v6, vandq_s8(vaddq_s8(v6, v6), v10)), v11));
  *(int8x16_t *)(v9 - 15) = vextq_s8(v12, v12, 8uLL);
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v10)), v11));
  *(int8x16_t *)(v9 - 31) = vextq_s8(v13, v13, 8uLL);
  return (*(uint64_t (**)(void))(v3 + 8 * ((1336 * (a1 == 96)) ^ v2)))();
}

uint64_t sub_1000CB5D8()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v1 + 1739)))();
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((((v1 - 37) ^ 0x641) * (v0 == -1008821960)) ^ (v1 - 37))))(v3);
}

void sub_1000CB628()
{
}

uint64_t sub_1000CB630(uint64_t a1, int a2, int a3)
{
  unsigned int v8 = 199 * (a3 ^ 0x28D) + 1230288533 + a2 + v5 + v6 + v7 + 739002817;
  unsigned int v9 = v3 - 1300521493;
  int v10 = (v9 < 0xFA0C724E) ^ (v8 < 0xFA0C724E);
  BOOL v11 = v8 > v9;
  if (v10) {
    BOOL v11 = v8 < 0xFA0C724E;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * (((2 * v11) | (4 * v11)) ^ (a3 + 194))))();
}

uint64_t sub_1000CB6C4(uint64_t a1, uint64_t a2)
{
  BOOL v4 = ((((v2 - 280) | 0x30) - 46) ^ 0x9B09293) != 162566816;
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t))(v3
                                                                                                  + 8 * ((v4 | (8 * v4)) ^ (v2 + 906))))(a1, a2, STACK[0x2B0], 115, STACK[0x3D0]);
}

uint64_t sub_1000CB714(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v5 - 167) ^ 0x7BC ^ (27 * (v5 ^ 0x28E))) * (a1 == a5)) ^ v5)))();
}

void sub_1000CB754()
{
}

uint64_t sub_1000CB790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((42 * (v9 < ((a8 + v10) ^ (v10 + 2310)) - 1063)) ^ a8)))();
}

uint64_t sub_1000CB7C4@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  *(unsigned char *)(v4 + v3 + a1) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v3 + 1 + a1) < 0x40) * a2) ^ v2)))();
}

uint64_t sub_1000CB7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  (*(void (**)(uint64_t, uint64_t))(v17 + 8 * (v16 + v19 + 1706)))(a16, 2965982036);
  int v22 = (*(uint64_t (**)(void))(v17 + 8 * (v16 + v19 + 1713)))();
  unsigned int v23 = v18 + v22 - (v20 & (2 * v22));
  *uint64_t v21 = v23;
  unsigned int v24 = (((v18 + 2) ^ (v23 >> 30)) + ((2 * (v23 >> 30)) ^ 0xFFFFFFFD)) ^ v23;
  v21[1] = 1812433253 * v24 - ((-670100790 * v24 + 2) & v20) + 1923539500;
  return (*(uint64_t (**)(uint64_t))(v17 + 12984))(1812433253);
}

uint64_t sub_1000CB8CC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((112 * (v2 == ((a2 + (v3 ^ 0x18) - 46) ^ v3 ^ 0x4E))) ^ v3)))();
}

uint64_t sub_1000CB90C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((124 * ((((v0 + 1388) ^ (v1 == 0x7B2D1C0D)) & 1) == 0)) ^ v0)))();
}

uint64_t sub_1000CB960()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((2046 * (v0 < 0x7BE51A9C)) ^ 0x3EA)))();
}

uint64_t sub_1000CB9B4@<X0>(unsigned int a1@<W4>, int a2@<W7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v16 = ((a3 - 1727) ^ (a2 + 94)) + 229;
  int v17 = v15 + a3 - 1727 + 1711;
  unsigned int v18 = v16 + v14 + 1353468340;
  BOOL v19 = a13 - 34959271 < v18;
  if (a13 - 34959271 < a1 != v18 < a1) {
    BOOL v19 = v18 < a1;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((89 * v19) ^ v17)))();
}

uint64_t sub_1000CB9C8()
{
  int v4 = v0;
  char v5 = (_DWORD *)STACK[0x3C8];
  int v6 = LODWORD(STACK[0x574])++;
  *char v5 = v6 + 854218177;
  uint64_t v7 = (*(_DWORD *)STACK[0x3D0] - 1481196867);
  unint64_t v8 = STACK[0x308];
  int v9 = STACK[0x308] + v4 + 1473597508 - 83;
  *(_DWORD *)(v3 - 200) = ((v4 + 1473597508) ^ 0x15) - STACK[0x308];
  *(_DWORD *)(v3 - 192) = v9;
  *(_DWORD *)(v3 - 188) = v8;
  *(void *)(v3 - 184) = v7 ^ v8;
  *(void *)(v3 - 168) = STACK[0x2F8];
  *(_DWORD *)(v3 - 176) = (v4 + 1473597508) ^ v8;
  *(_DWORD *)(v3 - 172) = (v4 + v1) ^ v8;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 + 1696)))(v3 - 200);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 196)))(v10);
}

void sub_1000CBA74()
{
}

uint64_t sub_1000CBAA4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((*v2 != ((35 * (v0 ^ 0x4EE)) ^ 0x118)) * ((v0 - 258) ^ 0x203)) ^ v0)))();
}

uint64_t sub_1000CBAE8()
{
  *(void *)(v3 + v2 - 0x7C014C708E8DC38BLL) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v1 & 0xFFFFFFFFFFFFFFF8) == 8) * ((v0 - 215) ^ 0x1E5)) ^ v0)))();
}

uint64_t sub_1000CBB38()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((4 * v1 - v2 == ((v0 + 208050806) & 0xF399651D ^ 0xA6609982)) * ((v0 - 108) ^ 0x6D9)) ^ v0)))();
}

uint64_t sub_1000CBB94@<X0>(int a1@<W8>)
{
  uint64_t v4 = 1759421093 * ((v3 - 168) ^ 0x2EBEC150B37DB054);
  *(_DWORD *)(v3 - 136) = -1759421093 * ((v3 - 168) ^ 0xB37DB054);
  *(_DWORD *)(v3 - 144) = a1 + 231122384 - v4 + 109;
  *(_DWORD *)(v3 - 160) = v4 + a1 + 2021363714;
  STACK[0x380] = v4 + 703318618;
  int v5 = a1 + 231122384 + v4;
  STACK[0x368] = v1 ^ v4;
  *(_DWORD *)(v3 - 168) = v5 + 1;
  *(_DWORD *)(v3 - 164) = v5;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1944)))(v3 - 168);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 140)))(v6);
}

void sub_1000CBC44()
{
}

uint64_t sub_1000CBC58()
{
  return sub_1000C4428(-1008821960);
}

void sub_1000CBCD0(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000CBD38(uint64_t a1, int a2, int a3)
{
  int v6 = v4 + v3 - 1140694438;
  if ((v6 + 1) > 0x40) {
    int v7 = v6 + 1;
  }
  else {
    int v7 = 64;
  }
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((255
                                * (a3 + v7 > ((((14 * (a2 ^ 0x263) - 957096339) & 0x390C237E) - 885) ^ v6))) ^ a2)))();
}

uint64_t sub_1000CBDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,int a21)
{
  int v29 = &a21 + 6 * v22;
  v29[2] = v28;
  v29[3] = v26;
  *((void *)v29 + 2) = v23;
  v29[6] = a19;
  a21 = v21 + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (int)(((*(_DWORD *)(v24 + 48 * v27 + 32) + 736910439 < a7) * ((a8 + (a9 ^ 0x5F9) - 318) ^ (a8 + 70))) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_1000CBE30()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 948) | 0x284) - 916) * ((v0 & 0x18) == 0)) ^ v1)))();
}

_DWORD *sub_1000CBE64(_DWORD *result)
{
  *uint64_t result = v1;
  return result;
}

uint64_t sub_1000CBE6C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, int a6@<W8>)
{
  uint64_t v12 = (v8 - 688);
  v13.i64[0] = 0xA8A8A8A8A8A8A8A8;
  v13.i64[1] = 0xA8A8A8A8A8A8A8A8;
  v14.i64[0] = 0x5454545454545454;
  v14.i64[1] = 0x5454545454545454;
  *(int8x16_t *)(v9 + (a6 + v6)) = vaddq_s8(vsubq_s8(*v10, vandq_s8(vaddq_s8(*v10, *v10), v13)), v14);
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((1932 * ((v12 ^ 0xC0) == ((v7 + 1) & 0x1FFFFFFF0))) ^ v8));
  return v15(v12, 1932, v15, a1, a2, a3, a4, a5);
}

uint64_t sub_1000CBEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * ((((v5 - 34) ^ (v5 + 1836) ^ 0x1CF ^ 0x679)
                                                                         * (v3 == 63)) ^ (v5 + 1836))))(17, a2, a3, 84);
}

uint64_t sub_1000CBF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((482 * (a8 + ((a6 - 306664751) & 0x1247547Fu) + v8 + 158 < ((a6 - 747) | 0x115u) - 807)) ^ a6)))();
}

void sub_1000CBF80(uint64_t a1)
{
  int v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(void *)(a1 + 24)) {
    BOOL v2 = *(_DWORD *)(a1 + 20) - v1 == 489424970;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  __asm { BRAA            X8, X17 }
}

void sub_1000CC038(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (535753261 * (((a1 ^ 0xB522495B) & 0xFC4AF52D | ~(a1 ^ 0xB522495B | 0xFC4AF52D)) ^ 0xBC634DA6));
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned int v6 = v1 - 1755732067 * ((2 * (&v4 & 0x7340758) - &v4 + 2026633376) ^ 0xA60D457B) + 995;
  uint64_t v5 = v2;
  int v3 = (char *)*(&off_100166A10 + (v1 & 0x21691C99)) - 4;
  (*(void (**)(int *))&v3[8 * v1 + 14144])(&v4);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000CC16C@<X0>(int a1@<W0>, int a2@<W8>, __n128 a3@<Q0>)
{
  uint64_t v7 = (__n128 *)(v4 + v5);
  *uint64_t v7 = a3;
  v7[1] = a3;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 + v3 == 1891) * a1) ^ a2)))();
}

uint64_t sub_1000CC198@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 8 * (a1 + 1789)))(*v4);
  *uint64_t v3 = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)(v1 + 344) = 0;
  *(void *)(v1 + 352) = 0;
  *(_DWORD *)(v1 + 360) = 1755777582;
  *(_DWORD *)(v1 + 56) = 1452181747;
  return result;
}

uint64_t sub_1000CC1E4@<X0>(uint64_t a1@<X8>)
{
  BOOL v8 = v4 > 0x8FDE8148;
  *(unsigned char *)(a1 + (v6 - 2107540078)) = *(unsigned char *)(v1 + (v6 - 2107540078));
  if (v8 == v6 - 226296758 < v3) {
    BOOL v8 = v6 - 226296758 < v5;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v8 * ((v2 - 1880271395) & 0x3012AFBE ^ 0x746)) ^ v2)))();
}

uint64_t sub_1000CC268()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((*(unsigned char *)((v2 | ((unint64_t)(v2 < v1) << 32)) + v4 - 2083989068) == 0)
                                     * ((v0 + 1684933809) & 0x9B91F3CE ^ 0x718)) ^ v0)))();
}

uint64_t sub_1000CC2CC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 1734042137 * (((a1 | 0xF38AD011) - a1 + (a1 & 0xC752FEE)) ^ 0xAF44135C);
  return (*(uint64_t (**)(void))((char *)*(&off_100166A10 + (v1 ^ 0x2B8))
                              + 8
                              * ((8 * (*(void *)a1 != 0x65EF48AAD10F5714)) | (16
                                                                                * (*(void *)a1 != 0x65EF48AAD10F5714)) | v1)
                              - 4))();
}

uint64_t sub_1000CC360(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, unsigned int a18)
{
  if (a18 < 0x7D0CDA0D != (v18 + 1254591599) < 0x7D0CDA0D) {
    BOOL v21 = (v18 + 1254591599) < 0x7D0CDA0D;
  }
  else {
    BOOL v21 = v18 + 1254591599 > a18;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * (int)((v21 * (697 * (a17 & 0xB34FF39B ^ 0x39A) - 1380)) ^ (a2 + v20 - 686))))();
}

void sub_1000CC3EC(uint64_t a1)
{
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1000CC520(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  if (a32 == 2) {
    return (*(uint64_t (**)(void))(v38
  }
                                + 8
                                * ((214 * (LODWORD(STACK[0x2AC]) != ((a2 + 60) | 0x103) + 891668097)) ^ (a2 + 319))))();
  if (a32 == 1) {
    return (*(uint64_t (**)(void))(v38 + 8 * ((526 * (LODWORD(STACK[0x2AC]) != a2 + 891668416)) ^ (a2 + 319))))();
  }
  unint64_t v40 = ((unint64_t)&a38 ^ 0x7DBB7936FBF8EAFELL)
      - 0x3011403292B0BFFELL
      + (((void)&a38 << (59 * (a2 ^ 0x1Bu) + 120)) & 0xFB76F26DF7F1D5F0);
  LOBYTE(STACK[0x2AB]) = (v40 ^ 0xBA) * (v40 + 17);
  return (*(uint64_t (**)(void))(v38 + 8 * ((1728 * (((59 * (a2 ^ 0x1Bu) - 633) ^ 0x10) == 91)) ^ (59 * (a2 ^ 0x1B)))))();
}

uint64_t sub_1000CC684()
{
  BOOL v5 = v2 + 2069507980 > (v0 ^ 0x1F) + 1662512081 || v2 + 2069507980 < (int)((((v0 - 490) | 0x18) ^ 0xE317EEDF) + v3);
  return (*(uint64_t (**)(void))(v1 + 8 * ((1370 * v5) ^ v0)))();
}

uint64_t sub_1000CC6DC()
{
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x6FD)))();
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((STACK[0x470] == 0x70459CB0620F0DF9) * (((v0 - 263) | 0x10C) ^ 0xC9)) ^ (v0 + 1460))))(v2);
}

void sub_1000CC74C()
{
  STACK[0x458] = *(void *)(v1 + 8 * (v0 - 264));
  JUMPOUT(0x1000CAF44);
}

uint64_t sub_1000CC76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v36 = 39 * (a7 ^ 0x5EA);
  BOOL v38 = ((((39 * (a7 ^ 0xEA) + 12) ^ v34) + (BYTE4(a12) & 0xFA) + 3) & 0xF) != 0
     || ((v36 - 12532) ^ v34) + (HIDWORD(a12) & 0xFFFFA9FA) == -11011;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * ((((v38 ^ v36) & 1) * ((v36 - 62) ^ 0x656)) ^ v36)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_1000CC7E0()
{
  int v6 = *(unsigned __int8 *)(*(void *)(v1 + 16) + v0 - 0x7EB783B9908F0A73)
     - *(unsigned __int8 *)(v5 + v0 - 0x7EB783B9908F0A73);
  uint64_t v7 = v0 + (v4 ^ 0x334u) - 62;
  BOOL v9 = (v6 ^ 0xEBEBFF7A) + 1040173792 + ((2 * v6) & 0xD7D7FEF4) != 703318618 || v7 == v2 + 16;
  return (*(uint64_t (**)(void))(v3 + 8 * (v4 ^ (32 * v9))))();
}

uint64_t sub_1000CC864(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (v3 == a3) {
    int v4 = 1008845542;
  }
  else {
    int v4 = v3;
  }
  return v4 ^ a3;
}

void sub_1000CC8B4()
{
}

uint64_t sub_1000CC8C4(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((a6 + 1 == (((a3 ^ (8 * v7)) + 329) ^ a2)) * ((((a3 ^ (8 * v7)) - 323) | a1) ^ 8)) ^ a3 ^ (8 * v7))))();
}

void sub_1000CC924(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 800) = 1144438011;
  *(_DWORD *)(*(void *)(a1 + 96) + 804) = 715496183;
  *(void *)(*(void *)(a1 + 96) + 808) = *(void *)(a1 + 96) + 816;
  uint64_t v10 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v9);
  unsigned int v11 = 3804331
      * (((&a5 | 0x36502483) - &a5 + (&a5 & 0xC9AFDB78)) ^ 0xCCCED7D5);
  a5 = *(void *)(a1 + 96) + 0x774B811B42847E47;
  a9 = v10;
  a6 = v11 ^ 0x60C;
  a7 = (v9 - 207778427) ^ v11;
  (*(void (**)(uint64_t *))(a3 + 16320))(&a5);
  JUMPOUT(0x1000CCA18);
}

void sub_1000CCA40()
{
}

uint64_t sub_1000CCA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v26 - 120) = v22 + ((((v26 - 120) | 0x7B7CE7B1) + (~(v26 - 120) | 0x8483184E)) ^ 0xEFD1AEE9) * v25 + 480;
  *(void *)(v26 - 112) = v21;
  *(void *)(v26 - 104) = a21;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v22 ^ 0x4B8)))(v26 - 120);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((*(_DWORD *)(v26 - 116) == v24 + 1173) * (((v22 - 353) | 0x31) ^ 0x2DC)) ^ v22)))(v27);
}

uint64_t sub_1000CCAE4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((((((v0 - 1613) | 0x12) + 193) | 0x2C4) - 710) ^ 0x7A4)
                                * (LODWORD(STACK[0x520]) == -1008821960)) ^ ((v0 - 1613) | 0x12))))();
}

uint64_t sub_1000CCB30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((980 * (a1 + 1 == v3 + 24)) ^ v1)))();
}

uint64_t sub_1000CCBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29,uint64_t a30,int a31,void *a32,unint64_t a33)
{
  if (v34 <= 0x50B1137) {
    int v37 = *a29 + (a31 ^ 0x6B5C7175);
  }
  else {
    int v37 = 1959788296;
  }
  *a29 = v37;
  int v38 = (((v33 >> 11) ^ 0xE54DC) + v36 - ((2 * ((v33 >> 11) ^ 0xE54DC)) & 0xDC456)) ^ v33;
  *(_DWORD *)(*a32 + a33) ^= (((v38 << 7) & 0x9D2C5680 ^ v38) << 15) & 0xEFC60000 ^ (v38 << 7) & 0x9D2C5680 ^ v38 ^ (((((v38 << 7) & 0x9D2C5680 ^ v38) << 15) & 0xEFC60000 ^ (v38 << 7) & 0x9D2C5680 ^ v38) >> 18);
  return (*(uint64_t (**)(void))(v35 + 8 * ((7 * (a33 < 0x1FC)) ^ 0xEB)))();
}

void sub_1000CCD08()
{
}

uint64_t sub_1000CCD1C()
{
  STACK[0x3B0] = v1;
  unint64_t v3 = STACK[0x4C0];
  unint64_t v4 = STACK[0x448];
  STACK[0x3F0] = (unint64_t)&STACK[0x670] + STACK[0x380] - 0x61CB92A9D1FA1E5FLL;
  int v5 = v0 + 1394;
  int v6 = v0 + 907;
  if (v3) {
    BOOL v7 = v4 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v8 = v7;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1924 * (((v5 ^ v8) & 1) == 0)) ^ v6)))();
}

uint64_t sub_1000CCDB0(int a1, int a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  int v12 = v8 + v7;
  int v13 = v12 + v9;
  if ((v12 + v9) <= 0x40) {
    int v13 = a4;
  }
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((((11 * (a2 ^ 0x67D)) ^ (a5 - 893)) + ((a2 - 540018347) & 0x6FFDFFF7))
                                * (a7 - v12 < (v10 + a7 + a1 + v13))) ^ a2)))();
}

uint64_t sub_1000CCE20(int a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v9 = v7 + a4;
  if (v9 <= 0x40) {
    unsigned int v9 = 64;
  }
  BOOL v10 = -v5 - v6 + ((v4 + 645) ^ (a1 + 406)) + v9 < ((4 * v4) ^ 0x12ECu) - 749;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * (((4 * v10) | (32 * v10)) ^ v4)))(2326987778, 4118805473);
}

uint64_t sub_1000CCEA0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((213 * (v0 - 282813323 >= (v0 - 282813386 + v1 - 1076 - 63))) ^ v1)))();
}

void sub_1000CCEE8(int a1@<W8>)
{
  **(_DWORD **)(v1 - 0x774B811B42847B1FLL) = (v2 + 1654821987) ^ (v3 + 898030411) & 0xCA7927BA ^ 0xC4AFCD13;
  *(_DWORD *)(v1 - 0x774B811B42847B23) = a1 + 1;
}

uint64_t sub_1000CCF58@<X0>(int a1@<W8>)
{
  uint64_t v7 = v2 - 1;
  *(unsigned char *)(v4 + v7) = ((v1 + 48) ^ v3) * (v1 + 65);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 == 0) * v5) ^ a1)))();
}

uint64_t sub_1000CCF60@<X0>(unsigned int a1@<W0>, int a2@<W3>, unsigned int a3@<W8>)
{
  BOOL v11 = a3 < a1;
  unsigned int v12 = v4 + (v7 ^ v5);
  *(unsigned char *)(v10 - 220 + (v3 - 369984849)) = *(unsigned char *)(v8 + (v4 + a2))
                                                         - ((2 * *(unsigned char *)(v8 + (v4 + a2))) & 0xA8)
                                                         + 84;
  int v13 = v11 ^ (v12 < a1);
  BOOL v14 = v12 < a3;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((63 * !v11) ^ v9)))();
}

uint64_t sub_1000CCFDC()
{
  int v4 = (v0 + 1014) | 0x60;
  uint64_t v5 = (*(uint64_t (**)(void))(v1 + 8 * (v0 + 1925)))(*v3);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((*v2 != ((35 * (v4 ^ 0x4EE)) ^ 0x118)) * ((v4 - 258) ^ 0x203)) ^ v4)))(v5);
}

void sub_1000CD03C()
{
  *int v0 = -2143265421;
}

void sub_1000CD048()
{
}

uint64_t sub_1000CD054(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8
                                   * ((224 * ((((v5 + 75620421) | 0x4B4C1A00) ^ 0x82774DD6) + v4 >= v4 + a4)) ^ v5)))();
}

uint64_t sub_1000CD0A8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v11 = *(unsigned __int8 *)(v6 + (a5 + 3)) | ((a2 << ((v10 - 29) ^ 0x51)) + 168082944);
  return (*(uint64_t (**)(uint64_t, void, void))(v7
                                                            + 8
                                                            * ((47 * (a6 + v8 + v9 - 1979562756 != 0)) ^ (v10 - 29))))(a1, (v11 ^ 0x5DFDFFFF) - 525501 + ((2 * v11) & 0xBBFBFFFE), (v10 - 29) ^ 0x6D7u);
}

uint64_t sub_1000CD134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,unsigned int a27)
{
  return sub_1000D33B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_1000CD14C()
{
  *int v0 = *(_DWORD *)(v1 - 0x65EF48AAD10F56FCLL);
}

uint64_t sub_1000CD168@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (v4 + a2)) = *(unsigned char *)(v3 + (v4 + a2));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 - 1 == a1) * v5) ^ (v6 + 511))))();
}

uint64_t sub_1000CD198@<X0>(int a1@<W8>)
{
  int v4 = v2 + 843;
  int v5 = (v2 - 492) | 8;
  unsigned int v6 = ((v2 - 1630756350) & 0x61335F77) + v1 + 1064790781;
  BOOL v7 = a1 + 374963080 < v6;
  if ((a1 + 374963080) < 0x6BD335D8 != v6 < v5 + 1809003711) {
    BOOL v7 = v6 < v5 + 1809003711;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((147 * v7) | v4)))();
}

uint64_t sub_1000CD238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  unint64_t v47 = STACK[0x2A8] + 2048;
  LODWORD(STACK[0x434]) = 2;
  STACK[0x4D8] = 0;
  LODWORD(STACK[0x5C4]) = 0;
  LODWORD(STACK[0x580]) = 0;
  BOOL v48 = (v45 & 2) == ((a8 - 916) | 0x109) - 281;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * ((((a8 + 25) ^ v48) & 1 | (8 * (((a8 + 25) ^ v48) & 1))) ^ a8)))(a1, a2, a3, a4, a5, v47, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_1000CD2A4@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W8>)
{
  int v18 = (a6 ^ v15)
      + a8
      + *(_DWORD *)(a3 + 4 * (a7 + v14))
      + (((v9 ^ v8 | a1 ^ v15) + v15 - (((v9 ^ v8 | a1 ^ v15) << (((a5 - 125) | 0x10) - 15)) & v17)) ^ v10)
      + (*(_DWORD *)(v12 + 4 * (*(unsigned char *)(a2 + a7 + v14) - 79)) ^ v11);
  unsigned int v19 = (v18 + v15 - (v17 & (2 * v18))) ^ v15;
  int v20 = ((v19 << (*(unsigned char *)(a4 + a7 + v14) - 23)) | (v19 >> (23 - *(unsigned char *)(a4 + a7 + v14)))) + (a1 ^ v15);
  return (*(uint64_t (**)(void))(v13 + 8 * ((437 * (a7 + 1 == v16 + 64)) ^ a5)))(v20 + v15 - (v17 & (2 * v20)));
}

uint64_t sub_1000CD374@<X0>(int a1@<W1>, uint64_t a2@<X6>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>)
{
  uint64_t v10 = v6 + 16;
  *(int8x16_t *)(v7 + (a3 + v10)) = vaddq_s8(vsubq_s8(*(int8x16_t *)(a2 + v10), vandq_s8(vaddq_s8(*(int8x16_t *)(a2 + v10), *(int8x16_t *)(a2 + v10)), a4)), a5);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 != v10) * ((v5 + 211) ^ a1)) ^ v5)))();
}

void sub_1000CD37C(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (3804331 * ((-1456938809 - (a1 | 0xA928E0C7) + (a1 | 0x56D71F38)) ^ 0xAC49EC6E));
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = (char *)*(&off_100166A10 + (v1 ^ 0x4F8)) - 4;
  (*(void (**)(void, uint64_t (*)()))&v3[8 * (v1 ^ 0x3D6)])(*(&off_100166A10 + v1 - 1044), sub_1000EB0DC);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000CD43C()
{
  return sub_1000CD46C();
}

uint64_t sub_1000CD46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  BOOL v47 = ((2 * (a45 & 0x3F)) ^ 0x3C) + (a45 & 0x3F ^ 0xF57FFBE1) + 176161733 > 0xFFFFFFBF;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * (v47 | (4 * v47) | ((int)a3 + 1481))))(4118805473, a2, a3, 176161794, a5, a6, a7, *(void *)(v45 + 40), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1000CD574@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 448) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 8368))(0);
}

uint64_t sub_1000CD5CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X6>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v15 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, void, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8 * ((a7 + 393) ^ (14 * (v13 < 2))));
  return v15(v15, a1, a2, a3, a4, a5, a6, *(_DWORD *)(*a6 + 4 * (v12 - 2106532186)) ^ v11, a8, a9, a10, a11);
}

uint64_t sub_1000CD5F8(uint64_t result)
{
  unint64_t v1 = 1225351577 * ((~result & 0x770DEC85B9447D1 | result & 0xF88F2137A46BB82ELL) ^ 0xEAE67690780E9FC7);
  int v2 = *(_DWORD *)(result + 12) - v1;
  unint64_t v3 = *(void *)(result + 32) ^ v1;
  int v4 = *(_DWORD *)result + v1;
  int v5 = *(_DWORD *)(result + 8) - v1;
  int v6 = *(_DWORD *)(result + 24) ^ v1;
  unint64_t v7 = *(void *)(result + 16) ^ v1;
  BOOL v8 = (uint64_t)v7 < (uint64_t)v3;
  BOOL v9 = v7 < v3;
  int v10 = v8;
  if (v2) {
    BOOL v9 = v10;
  }
  if (v9) {
    int v11 = v6;
  }
  else {
    int v11 = v4;
  }
  *(_DWORD *)(result + 4) = v11 ^ v5;
  return result;
}

uint64_t sub_1000CD68C(uint64_t a1)
{
  int v1 = 1225351577 * (((a1 | 0xA3D2D055) - (a1 & 0xA3D2D055)) ^ 0x80480843);
  int v2 = *(_DWORD *)(a1 + 24) - v1;
  int v3 = *(_DWORD *)(a1 + 8) - v1;
  int v4 = *(_DWORD *)(*(void *)a1 - 0x774B811B42847B23);
  unsigned int v6 = v4 - 715496183;
  BOOL v5 = v4 - 715496183 < 0;
  unsigned int v7 = 715496183 - v4;
  if (v5) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_100166A10 + v2 - 1007)
                              + 8
                              * ((((v3 - 2069483688) >= 4 * (unint64_t)v8)
                                * ((115 * (v2 ^ 0x480)) ^ 0x355)) ^ v2)
                              - 4))();
}

void sub_1000CD764()
{
  LODWORD(STACK[0x574]) = 0;
  JUMPOUT(0x1000CB9CCLL);
}

void sub_1000CD76C()
{
  uint64_t v0 = (uint64_t)*(&off_100166A10
                + ((107 * ((qword_100180398 + dword_1001803B0) ^ 0x58)) ^ byte_10011D9F0[byte_100119D30[(107 * ((qword_100180398 + dword_1001803B0) ^ 0x58))] ^ 0x3A])
                - 24);
  uint64_t v1 = *(void *)(v0 - 4);
  int v2 = (unint64_t *)*(&off_100166A10
                           + (byte_100119E30[byte_100123CA0[(107
                                                                                             * ((qword_100180398 + v1) ^ 0x58))] ^ 0xA7] ^ (107 * ((qword_100180398 + v1) ^ 0x58)))
                           - 118);
  unint64_t v3 = v1 - (void)&v9 + *v2;
  uint64_t v4 = 139864171 * (v3 + 0x6BA42CE6601600A8);
  unint64_t v5 = 139864171 * (v3 ^ 0x945BD3199FE9FF58);
  *(void *)(v0 - 4) = v4;
  *int v2 = v5;
  LOBYTE(v5) = 107 * ((v5 + *(_DWORD *)(v0 - 4)) ^ 0x58);
  *(_DWORD *)*(&off_100166A10
             + (byte_100119C34[(byte_100123AAC[v5 - 12] ^ 0x72) - 4] ^ v5)
             - 126) = -1008821960;
  unsigned int v6 = (char *)*(&off_100166A10
               + ((107 * ((qword_100180398 - dword_1001803B0) ^ 0x58)) ^ byte_100119E30[byte_100123CA0[(107 * ((qword_100180398 - dword_1001803B0) ^ 0x58))] ^ 0xF2])
               + 140)
     - 4;
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))&v6[8
                                                      * ((107
                                                                         * ((*(_DWORD *)v2 + *(_DWORD *)(v0 - 4)) ^ 0x58)) ^ byte_100119E30[byte_100123CA0[(107 * ((*(_DWORD *)v2 + *(_DWORD *)(v0 - 4)) ^ 0x58))] ^ 0x62])
                                                      + 15256])(512, 1509315540);
  unsigned __int8 v8 = 107 * (*(_DWORD *)(v0 - 4) ^ 0x58 ^ *(_DWORD *)v2);
  *(void *)*(&off_100166A10 + (byte_100119F30[byte_100123DA8[v8 - 8] ^ 0x39] ^ v8) - 15) = v7;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000CD9D8()
{
  return sub_1000CDA04();
}

uint64_t sub_1000CDA04()
{
  return v0 ^ v1;
}

uint64_t sub_1000CDA44()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((30 * (STACK[0x438] != 0)) ^ (v0 + 115))))();
}

uint64_t sub_1000CDA7C@<X0>(int a1@<W0>, int a2@<W5>, int a3@<W6>, int a4@<W7>, uint64_t a5@<X8>)
{
  unsigned int v7 = a1 - 32;
  uint64_t v8 = v6 + v7;
  long long v9 = *(_OWORD *)(v8 - 31);
  uint64_t v10 = a5 + v7;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v5 + 8 * (((a2 == 32) * ((a3 + 697) ^ a4)) ^ (a3 + 682))))();
}

void sub_1000CDA88()
{
}

uint64_t sub_1000CDAA0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v9 = v6 - 32 + ((v4 - 7) ^ (a4 + 912));
  long long v10 = *(_OWORD *)(v7 + v9 - 15);
  long long v11 = *(_OWORD *)(v7 + v9 - 31);
  uint64_t v12 = a1 + v9;
  *(_OWORD *)(v12 - 15) = v10;
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * ((1753 * (v5 == 32)) ^ (v4 + 169))))();
}

uint64_t sub_1000CDAAC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8
                                                              + 8
                                                              * ((218 * ((a4 + 1 + v7) < 0x50)) ^ v6)))(v4, a3, v5);
}

uint64_t sub_1000CDB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 628203409 * ((((v19 - 136) | 0x35436AF4) - (v19 - 136) + ((v19 - 136) & 0xCABC9508)) ^ 0xB7CB66C7);
  *(_DWORD *)(v19 - 120) = v20 + v14 + 229;
  *(_DWORD *)(v19 - 136) = v14 + 891 - v20 + v16 + 310357359;
  *(void *)(v19 - 128) = v17;
  (*(void (**)(uint64_t))(v15 + 8 * (v14 + 1471)))(v19 - 136);
  *(_DWORD *)(v19 - 136) = v14
                         + 891
                         + 235795823
                         * ((((v19 - 136) | 0xAD50B39A) - (v19 - 136) + ((v19 - 136) & 0x52AF4C60)) ^ 0x39FDFAC3)
                         - 109;
  *(void *)(v19 - 128) = v18;
  *(void *)(v19 - 120) = a14;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 + 1446)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((1014
                                              * (*(_DWORD *)(v19 - 132) - 1430518030 + ((v14 + 891) ^ 0x327u) - 1687 < ((v14 + 243) ^ 0xFF921F45))) ^ (v14 + 891))))(v21);
}

uint64_t sub_1000CDCB4@<X0>(uint64_t a1@<X2>, unsigned int a2@<W3>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((98
                                              * (a3 - a1 - (unint64_t)(a2 - 61) - 464 < (unint64_t)(3 * (a2 ^ 0x512))
                                                                                             - 769)) ^ a2)))(v3);
}

uint64_t sub_1000CDD18()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((((v2 ^ 0xFFFFFF5B) + v2 + 209) * (v0 == v1)) ^ v2)))();
}

void sub_1000CDD44()
{
}

uint64_t sub_1000CDD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return sub_1000CA658(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000CDD68()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 - 101) ^ (*(void *)(v1 + 24) == 0x72E2FEF5BF4EA162)) & 1)
                                * (v0 ^ 0x762)) ^ v0)))();
}

uint64_t sub_1000CDDAC()
{
  LODWORD(STACK[0x2F4]) = STACK[0x548];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 - 1755777583) < 2) ^ ((v0 ^ 0xA6) + 1)) & 1)
                                * ((v0 ^ 0x1A6) - 75)) ^ v0 ^ 0x41B)))();
}

uint64_t sub_1000CDE08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((((v4 - 37) ^ 0x641) * (v3 == -1008821960)) ^ (v4 - 37))))(a1, a2, a3, 1008845537);
}

uint64_t sub_1000CDE44@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 468) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 11448))(0);
}

uint64_t sub_1000CDEAC()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ 0x6FD)))();
  LODWORD(STACK[0x4E8]) = v0;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((110 * (v2 ^ 1)) ^ (v1 + 1036))))(v4);
}

void sub_1000CDF04()
{
}

uint64_t sub_1000CDF60@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((202 * (a2 == ((((v2 + 384157852) & 0xE91A36DA) - 73227959) ^ (v2 - a1 - 46)))) ^ v2)))();
}

uint64_t sub_1000CDFB8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((v8 ^ a4) - 843) ^ a5) * (v7 == v6 + 109)) ^ v8)))();
}

uint64_t sub_1000CDFE4(int a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((39
                                * (((((2 * a1) ^ 0xBCC) - 1892) & (a5 + a3 - (v5 & 3u))) > a5
                                                                                         + (((a1 - 1491) | 0x44) ^ (a3 + 74)))) ^ a1)))();
}

uint64_t sub_1000CE040@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v5 = STACK[0x414];
  if ((a2 - 1936793795) <= 0x19 && (int v5 = STACK[0x414], ((1 << (a2 + 61)) & 0x3014001) != 0)) {
    return sub_1000CE0C0();
  }
  else {
    return (*(uint64_t (**)(void))(v4
  }
                                + 8
                                * (int)((((*(unsigned char *)(v3 + v2 * (uint64_t)a1 + 40) & 8) == 0)
                                       * (((v5 + 35669686) & 0xFDDFBD35) - 1260)) ^ (v5 - 83))))();
}

uint64_t sub_1000CE0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v11 = (*(_DWORD *)(v9 + v8 * (uint64_t)a7 + 40) & 1) == (((v7 - 119) | 0x245) ^ 0x2E7);
  return (*(uint64_t (**)(void))(v10 + 8 * ((v11 | (16 * v11)) ^ (v7 + 435))))();
}

uint64_t sub_1000CE104()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v0 - 240) | (32 * (v1 != 0x6E87F9D1)))))();
}

uint64_t sub_1000CE15C(uint64_t a1, int a2)
{
  *(int8x8_t *)(a1 - 7 + (v6 + v4 + v5 - v7 + 747)) = vadd_s8(*(int8x8_t *)(v2- 7+ (v6+ v4+ v5- v7+ 747)), (int8x8_t)0xFEFEFEFEFEFEFEFELL);
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((v7 - (v3 & 0xFFFFFFF8) == -8) * (((a2 + 741284568) & 0xD3D0E577) - 269)) ^ a2)))();
}

uint64_t sub_1000CE1D0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 - 885) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1000CE1FC(unsigned __int8 *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = (v14 - 877633796) & 0x344F9F6F;
  int v20 = (unsigned __int8 *)&STACK[0x1970] + v15;
  *int v20 = *a1;
  *(void *)(v20 + 1) = *(void *)(a1 + 1);
  *(_DWORD *)(v20 + 9) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v20 + 13) = *(_WORD *)(a1 + 13);
  v20[15] = a1[15];
  uint64_t v21 = *((void *)a1 + 1);
  *((void *)v20 + 2) = *(void *)a1;
  *((void *)v20 + 3) = v21;
  uint64_t v22 = *(void *)(v18 + 8 * (v19 ^ 0x493)) - 4;
  unsigned __int8 v23 = (v20[3] ^ 0xB8) + *(unsigned char *)(v22 + (v20[3] ^ v16)) - 77;
  uint64_t v24 = *(void *)(v18 + 8 * (v19 ^ 0x401)) - 8;
  uint64_t v25 = *(void *)(v18 + 8 * (v19 ^ 0x431));
  char v26 = *(unsigned char *)(v25 + (v20[14] ^ 0x86));
  char v27 = *(unsigned char *)(v25 + (v20[10] ^ 0xCBLL));
  int v28 = (((*(unsigned __int8 *)(v24 + (v20[8] ^ 0x65)) + (v20[8] ^ 0x34) - 73) ^ 0xF5) << 24) | (((v27 ^ (16 * v27)) ^ 0x97) << 8);
  int v29 = ((v20[7] ^ 0x90) + *(unsigned char *)(v22 + (v20[7] ^ 0x7CLL)) - 77) | ((((v20[4] ^ 0x13)
                                                                                         + *(unsigned __int8 *)(v24 + (((_BYTE)v19 - 47) & 0xB6 ^ v20[4] ^ 0xF4u))
                                                                                         - 73) ^ v17) << 24);
  uint64_t v30 = *(void *)(v18 + 8 * (v19 - 961)) - 8;
  unsigned int v31 = *(unsigned __int8 *)(v30 + (v20[1] ^ 0x1ALL));
  int v32 = (v31 >> 1) ^ (((((v31 ^ 0xA7) + (v31 & 0xD5 ^ 0x7A) + 1) ^ v31 & 0xDF) & 0xF0) >> 4) ^ 0x3C;
  int v33 = v23 | (((v31 ^ (v32 - ((2 * v32) & 0x36) + 27)) ^ 0x7F) << 16);
  LOBYTE(v31) = *(unsigned char *)(v25 + (v20[6] ^ a3));
  unsigned int v34 = *(unsigned char *)(v30 + (v20[13] ^ 0x5BLL)) ^ 0x72;
  unsigned int v35 = v29 & 0xFFFF00FF | (((v31 ^ (16 * v31)) ^ 0x8B) << 8);
  int v36 = *(unsigned __int8 *)(v30 + (v20[13] ^ 0x5BLL)) ^ 0x72 ^ (v34 >> 4) ^ (v34 >> 1);
  int v37 = (((v26 ^ (16 * v26)) ^ 0x5B) << 8) | ((v36 - (a3 & (2 * v36)) + 23) << 16);
  int v38 = v33 | (((*(unsigned __int8 *)(v24 + (*v20 ^ 0x81)) + (*v20 ^ 0xD0) - 73) ^ 0x3C) << 24);
  LOBYTE(v33) = *(unsigned char *)(v30 + (v20[5] ^ 0xEDLL));
  int v39 = ((v33 ^ 0x72) >> 4) ^ ((v33 ^ 0x72) >> 1);
  unsigned int v40 = v28 & 0xFF00FF00 | ((v20[11] ^ 0x3E) + *(unsigned char *)(v22 + (v20[11] ^ 0xD2)) - 77) | (((*(unsigned char *)(v30 + (v20[9] ^ 0x38)) ^ ((*(unsigned char *)(v30 + (v20[9] ^ 0x38)) ^ 0x72) >> 4) ^ ((*(unsigned char *)(v30 + (v20[9] ^ 0x38)) ^ 0x72) >> 1)) ^ 0xD9) << 16);
  unsigned int v41 = v38 & 0xFFFF00FF | (((*(unsigned char *)(v25 + (v20[2] ^ 0x22)) ^ (16
                                                                                    * *(unsigned char *)(v25 + (v20[2] ^ 0x22)))) ^ 0xA5) << 8);
  LODWORD(STACK[0x3C8]) = (v37 & 0xFFFFFF00 | ((((v20[12] ^ 0x13) + *(unsigned __int8 *)(v24 + (v20[12] ^ 0x42)) - 73) ^ v17) << 24) | (*(unsigned char *)(v22 + (v20[15] ^ 0x38)) + (v20[15] ^ 0xD4) - 77)) ^ 0x7A12F6D8;
  LODWORD(STACK[0x388]) = v41 ^ 0xBF9AAE3;
  LODWORD(STACK[0x238]) = (v35 & 0xFF00FFFF | ((v33 ^ 0x6C ^ (v39
                                                                                              - ((2 * v39) & 0x62)
                                                                                              + 49)) << 16)) ^ 0x5709FB90;
  LODWORD(STACK[0x3B8]) = v40 ^ 0x1FDC61CC;
  return sub_1000CE5B0(91, v30, a3, 19, v22, v24, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1000CE5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  HIDWORD(a16) = (2 * v58) ^ 0xBD2;
  unint64_t v64 = v60 & (HIDWORD(a16) - 205) ^ 0x66A8B81Eu;
  STACK[0x3C0] = v64;
  LODWORD(v64) = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a18 + v64) ^ 0xD9));
  HIDWORD(v327) = 10 * (v58 ^ 0x5DD);
  unint64_t v65 = v60 & 0xFFFFFFFB ^ (HIDWORD(v327) + 1722332136);
  STACK[0x278] = v65;
  uint64_t v66 = *(unsigned __int8 *)(a18 + v65);
  LODWORD(STACK[0x3F8]) = (16 * v64 - ((32 * v64) & 0x40) + 40) ^ v64;
  LOBYTE(v64) = v66 ^ 0xB7;
  LOBYTE(v66) = *(unsigned char *)(a21 + (v66 ^ v59));
  unint64_t v67 = v60 & 0xFFFFFFF0 ^ 0x66A8B81F;
  STACK[0x3F0] = v67;
  LODWORD(STACK[0x2E8]) = 1722333215;
  int v68 = *(unsigned __int8 *)(a18 + v67);
  unsigned __int8 v69 = (v66 + v64 - 73) ^ 0xE5;
  if ((v68 & 0x20) != 0) {
    int v70 = -32;
  }
  else {
    int v70 = 32;
  }
  uint64_t v71 = (v70 + v68);
  int v72 = *(unsigned __int8 *)(a22 + (v71 ^ 0xDD));
  int v73 = v58;
  unint64_t v74 = v60 & 0xFFFFFFF9 ^ 0x66A8B816;
  STACK[0x3B0] = v74;
  int v75 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a18 + v74) ^ 0x51));
  int v332 = v72 + (v71 ^ 0x31);
  unint64_t v76 = v60 & 0xFFFFFFF3 ^ 0x66A8B81E;
  STACK[0x2E0] = v76;
  unint64_t v77 = v60 ^ 0x66A8B812u;
  STACK[0x208] = v77;
  HIDWORD(v78) = v75 ^ 0x3F;
  LODWORD(v78) = (v75 ^ 0x3F ^ ((~(32 * v75) | 0xBF) + 16 * v75 + 41)) & 0xF8;
  unint64_t v79 = ((v78 >> 3) | ((unint64_t)v69 << 13)) ^ 0x58F620A6;
  int v80 = (v79 >> 21) | (v79 << 11);
  int v331 = *(unsigned __int8 *)(a21
                            + (*(unsigned __int8 *)(a18 + v76) ^ 0xF7)
                            - 2 * ((*(unsigned __int8 *)(a18 + v76) ^ 0xF7) & 0xAEu)
                            + 174)
       - (*(unsigned __int8 *)(a18 + v76) ^ 0xF7);
  uint64_t v81 = *(unsigned __int8 *)(a18 + v77);
  unint64_t v82 = v60 & 0xFFFFFFFC ^ 0x66A8B813;
  STACK[0x378] = v82;
  uint64_t v83 = *(unsigned __int8 *)(a18 + v82);
  int v84 = *(unsigned __int8 *)(a21 + (v81 ^ 0xD8)) + (v81 ^ 0x76) - 2 * (v81 ^ 0x76);
  unint64_t v85 = v60 & 0xFFFFFFF7 ^ 0x66A8B81A;
  STACK[0x380] = v85;
  int v329 = (v83 ^ 0xFFFFFFBB) + *(unsigned __int8 *)(a22 + (v83 ^ 0x57));
  char v86 = (*(unsigned char *)(a18 + v85) ^ 0xA7) + *(unsigned char *)(a21 + (*(unsigned __int8 *)(a18 + v85) ^ 0xF6));
  unint64_t v87 = v60 & 0xFFFFFFF8 ^ 0x66A8B817;
  STACK[0x280] = v87;
  LOBYTE(v72) = (*(unsigned char *)(a18 + v87) ^ 0xE9) + *(unsigned char *)(a22 + (*(unsigned __int8 *)(a18 + v87) ^ 5));
  unint64_t v88 = v60 & 0xFFFFFFF2 ^ 0x66A8B81F;
  STACK[0x200] = v88;
  int v89 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(a18 + v88) ^ 0x12));
  uint64_t v335 = v60 & 0xFFFFFFFA ^ 0x66A8B817;
  unsigned int v90 = v89 ^ ((((v89 ^ 0x72u) >> 3) & 4 ^ v89 & 0xA4 | ((v89 ^ 0x72u) >> 3) & 0xFFFFFFFB ^ (v89 ^ 0x72) & 0x5A) >> 1);
  LOBYTE(v83) = *(unsigned char *)(a19 + (*(unsigned __int8 *)(a18 + v335) ^ 0x9CLL));
  int v91 = ((v83 ^ 0x72) >> 4) ^ ((v83 ^ 0x72) >> 1);
  uint64_t v338 = v60 & 0xFFFFFFF6 ^ 0x66A8B81B;
  int v92 = (v72 - 77) | ((v83 ^ v59 ^ (v91 - ((2 * v91) & 0x62) + 49)) << 16);
  int v93 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(a18 + v338) ^ 0x76));
  unsigned int v94 = (v93 ^ 0x72u) >> 3;
  char v95 = v93 & 8 | a7;
  if ((v94 & v93 & 8) != 0) {
    char v95 = -18 - v95;
  }
  int v96 = v93 ^ ((((v94 + v95 - 119) ^ (v93 ^ 0x72) & 0xF7) & 0xFE) >> 1);
  LODWORD(a52) = v60;
  uint64_t v336 = v60 & 0xFFFFFFF4 ^ 0x66A8B81B;
  uint64_t v337 = v60 & 0xFFFFFFFE ^ 0x66A8B813;
  unsigned int v97 = *(unsigned char *)(a19 + (*(unsigned __int8 *)(a18 + v337) ^ 0xCFLL)) ^ 0x72;
  int v98 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(a18 + v337) ^ 0xCFLL)) ^ 0x72 ^ (v97 >> 4) ^ (v97 >> 1);
  char v99 = *(unsigned char *)(a20 + (*(unsigned __int8 *)(a18 + (v60 & 0xFFFFFFF5 ^ 0x66A8B81A)) ^ 0xFBLL));
  uint64_t v100 = *(void *)(v61 + 8 * (v73 ^ 0x5B9)) - 8;
  HIDWORD(v325) = (v99 ^ (16 * v99)) ^ 0x91;
  int v101 = *(_DWORD *)(v100 + 4 * ((v99 ^ (16 * v99)) ^ 0x1Eu));
  HIDWORD(v102) = v101 ^ 0xCD56;
  LODWORD(v102) = v101 ^ 0xB41C0000;
  uint64_t v103 = v61;
  uint64_t v104 = *(void *)(v61 + 8 * (v73 - 1403)) - 4;
  LODWORD(v327) = v90;
  int v105 = *(_DWORD *)(v104 + 4 * (v90 ^ v63));
  HIDWORD(v333) = v73;
  uint64_t v106 = *(void *)(v103 + 8 * (v73 ^ 0x5A2));
  HIDWORD(v324) = v84 - 74;
  int v107 = (v102 >> 16) ^ *(_DWORD *)(v106 + 4 * ((v84 - 74) ^ 0xF9u)) ^ (16 * (v105 ^ 0xB0BAADC6)
                                                                                         + 1540596941
                                                                                         - ((32 * (v105 ^ 0xB0BAADC6)) & 0xB7A74980));
  LODWORD(v325) = v92 ^ v80;
  unsigned int v108 = v92 ^ v80 ^ 0xDD03A24B;
  uint64_t v109 = *(void *)(v103 + 8 * (v73 - 1430)) - 8;
  unsigned int v110 = *(_DWORD *)(v109 + 4 * (v108 ^ 0x33u)) ^ v105 ^ (v107 - 914379744 - ((2 * v107) & 0x92FF5840));
  int v111 = *(_DWORD *)(v100 + 4 * (LODWORD(STACK[0x3F8]) ^ 0x71u));
  HIDWORD(v102) = v111 ^ 0xCD56;
  LODWORD(v102) = v111 ^ 0xB41C0000;
  unint64_t v326 = __PAIR64__(v96, v98);
  unsigned int v112 = *(_DWORD *)(v104 + 4 * (v98 ^ 0xBFu)) ^ 0xB0BAADC6;
  int v113 = (v102 >> 16) ^ (16 * v112 + 1540596941 - ((32 * v112) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * HIBYTE(v108));
  HIDWORD(v323) = (*(unsigned char *)(a22 + (*(unsigned __int8 *)(a18 + v336) ^ 0x12))
                                  + (*(unsigned char *)(a18 + v336) ^ 0xFE)
                                  - 77);
  int v114 = *(_DWORD *)(v109 + 4 * (HIDWORD(v323) ^ 0xB9u)) ^ v112;
  uint64_t v334 = v60 & 0xFFFFFFFD ^ 0x66A8B812;
  int v115 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a18 + v334) ^ 0x26));
  LODWORD(v324) = v115 ^ (16 * v115);
  int v116 = *(_DWORD *)(v100 + 4 * (v324 ^ 0xEBu));
  HIDWORD(v102) = v116 ^ 0xCD56;
  LODWORD(v102) = v116 ^ 0xB41C0000;
  unsigned int v117 = v114 ^ (v113 - 914379744 - ((2 * v113) & 0x92FF5840));
  HIDWORD(v322) = (v86 - ((2 * v86 + 110) & 0x4E) - 34);
  unsigned int v118 = *(_DWORD *)(v104 + 4 * BYTE2(v108)) ^ 0xB0BAADC6;
  int v119 = (v102 >> 16) ^ *(_DWORD *)(v106 + 4 * (HIDWORD(v322) ^ 0x40u)) ^ (16 * v118
                                                                           + 1540596941
                                                                           - ((32 * v118) & 0xB7A74980));
  LODWORD(v323) = v332 - 77;
  unsigned int v120 = *(_DWORD *)(v109 + 4 * ((v332 - 77) ^ 0xEBu)) ^ v118 ^ (v119
                                                                                  - 914379744
                                                                                  - ((2 * v119) & 0x92FF5840));
  unsigned int v121 = *(_DWORD *)(v104 + 4 * (v96 ^ 0xEu)) ^ 0xB0BAADC6;
  int v122 = *(_DWORD *)(v100 + 4 * (BYTE1(v80) ^ 0x31u));
  HIDWORD(v102) = v122 ^ 0xCD56;
  LODWORD(v102) = v122 ^ 0xB41C0000;
  int v123 = (v102 >> 16) ^ *(_DWORD *)(v106 + 4 * ((v331 - 74) ^ 0xF7u)) ^ (16 * v121
                                                                                          + 1540596941
                                                                                          - ((32 * v121) & 0xB7A74980));
  HIDWORD(a23) = v329 - 77;
  LODWORD(v322) = v331 - 74;
  int v124 = *(_DWORD *)(v100 + 4 * (BYTE1(v120) ^ 0xF4u));
  unsigned int v125 = *(_DWORD *)(v109 + 4 * ((v329 - 77) ^ 0x33u)) ^ v121 ^ (v123
                                                                                  - 914379744
                                                                                  - ((2 * v123) & 0x92FF5840));
  HIDWORD(v102) = v124 ^ 0xCD56;
  LODWORD(v102) = v124 ^ 0xB41C0000;
  unsigned int v126 = *(_DWORD *)(v104 + 4 * (BYTE2(v125) ^ 0xBBu)) ^ 0xB0BAADC6;
  unsigned __int8 v127 = BYTE1(v117) ^ 0xAD;
  unsigned int v128 = v126 ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v110) ^ 0xE7)) ^ *(_DWORD *)(v109
                                                                            + 4 * (v117 ^ 0xDBu)) ^ (16 * v126 + 1540596941 - ((32 * v126) & 0xB7A74980)) ^ (v102 >> 16);
  int v129 = *(_DWORD *)(v104 + 4 * (BYTE2(v110) ^ 0x56u));
  int v130 = *(_DWORD *)(v100 + 4 * ((unsigned __int16)(v125 ^ 0x22E) >> 8));
  HIDWORD(v102) = v130 ^ 0xCD56;
  LODWORD(v102) = v130 ^ 0xB41C0000;
  int v131 = (16 * (v129 ^ 0xB0BAADC6) + 1540596941 - ((32 * (v129 ^ 0xB0BAADC6)) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * ((v117 ^ 0xF15ADDB) >> 24)) ^ (v102 >> 16);
  unsigned int v132 = *(_DWORD *)(v109 + 4 * (v120 ^ 0x80u)) ^ v129 ^ (v131 - 914379744 - ((2 * v131) & 0x92FF5840));
  unsigned int v133 = *(_DWORD *)(v104 + 4 * (BYTE2(v117) ^ 0xD6u)) ^ 0xB0BAADC6;
  unsigned int v134 = (16 * v133 + 1540596941 - ((32 * v133) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v120) ^ 0x19));
  int v135 = *(_DWORD *)(v100 + 4 * (BYTE1(v110) ^ 0x4Bu));
  HIDWORD(v102) = v135 ^ 0xCD56;
  LODWORD(v102) = v135 ^ 0xB41C0000;
  unsigned int v136 = *(_DWORD *)(v109 + 4 * (v125 ^ 0x2Eu)) ^ v133 ^ (v102 >> 16) ^ (v134
                                                                                          - 914379744
                                                                                          - ((2 * v134) & 0x92FF5840));
  int v137 = *(_DWORD *)(v104 + 4 * (BYTE2(v120) ^ 0x32u));
  int v138 = *(_DWORD *)(v100 + 4 * v127);
  HIDWORD(v102) = v138 ^ 0xCD56;
  LODWORD(v102) = v138 ^ 0xB41C0000;
  int v139 = (v102 >> 16) ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v125) ^ 0xBD)) ^ (16 * (v137 ^ 0xB0BAADC6)
                                                                         + 1540596941
                                                                         - ((32 * (v137 ^ 0xB0BAADC6)) & 0xB7A74980));
  unsigned int v140 = v137 ^ *(_DWORD *)(v109 + 4 * (v110 ^ 0x66u)) ^ 0xC1737B02 ^ (v139
                                                                                        - 914379744
                                                                                        - ((2 * v139) & 0x92FF5840));
  unsigned int v141 = v140
       - ((2 * v140) & 0x5F186BF6)
       - 2088024482
       + (~(2 * (v140 - ((2 * v140) & 0x5F186BF6) + 797718011)) | 0x5801DF3B);
  int v142 = *(_DWORD *)(v104 + 4 * (BYTE2(v141) ^ 0x3Cu));
  BYTE2(v139) = BYTE2(v136) ^ 0xEB;
  int v143 = *(_DWORD *)(v100 + 4 * ((unsigned __int16)(v136 ^ 0xDFF9) >> 8));
  unsigned int v144 = (16 * (v142 ^ 0xB0BAADC6) + 1540596941 - ((32 * (v142 ^ 0xB0BAADC6)) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v128) ^ 0x5F)) ^ (((v143 ^ 0xB41CCD56) >> (v128 & 0x10) >> (v128 & 0x10 ^ 0x10)) + ((v143 << 16) ^ 0xCD560000));
  unsigned int v145 = *(_DWORD *)(v109 + 4 * (v132 ^ 0x1Fu)) ^ v142 ^ (v144 - 914379744 - ((2 * v144) & 0x92FF5840));
  unsigned int v146 = *(_DWORD *)(v104 + 4 * ((v128 ^ 0xB6257800) >> 16)) ^ 0xB0BAADC6;
  int v147 = *(_DWORD *)(v100 + 4 * (BYTE1(v141) ^ 0x83u));
  HIDWORD(v102) = v147 ^ 0xCD56;
  LODWORD(v102) = v147 ^ 0xB41C0000;
  int v148 = (16 * v146 + 1540596941 - ((32 * v146) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v132) ^ 0xFB)) ^ (v102 >> 16);
  unsigned int v149 = *(_DWORD *)(v109 + 4 * (v136 ^ 0xF9u)) ^ v146 ^ (v148 - 914379744 - ((2 * v148) & 0x92FF5840));
  int v150 = *(_DWORD *)(v106 + 4 * (HIBYTE(v136) ^ 5));
  HIDWORD(v102) = v150 ^ 0xCD;
  LODWORD(v102) = v150 ^ 0x5BD3A400;
  int v151 = v102 >> 10;
  int v152 = *(_DWORD *)(v100 + 4 * ((unsigned __int16)(v128 ^ 0x7800) >> 8));
  HIDWORD(v102) = v152 ^ 0xCD56;
  LODWORD(v102) = v152 ^ 0xB41C0000;
  unsigned int v153 = *(_DWORD *)(v104 + 4 * (BYTE2(v132) ^ 0x8Fu)) ^ 0xB0BAADC6;
  unint64_t v154 = (unint64_t)(v151 ^ 0x25EB099Cu) << 10;
  int v155 = *(_DWORD *)(v109 + 4 * (v141 ^ 0x51u)) ^ v153 ^ (v102 >> 16);
  int v156 = *(_DWORD *)(v100 + 4 * (BYTE1(v132) ^ 0x60u));
  HIDWORD(v102) = v156 ^ 0xCD56;
  LODWORD(v102) = v156 ^ 0xB41C0000;
  int v157 = v155 ^ ((v154 ^ (16 * v153) ^ HIDWORD(v154))
               - 914379744
               - 2 * ((v154 ^ (16 * v153) ^ HIDWORD(v154)) & 0x497FAC2D ^ BYTE4(v154) & 0xD));
  unsigned int v158 = *(_DWORD *)(v104 + 4 * BYTE2(v139)) ^ 0xB0BAADC6;
  int v159 = (v102 >> 16) ^ (16 * v158 + 1540596941 - ((32 * v158) & 0xB7A74980)) ^ *(_DWORD *)(v106
                                                                                          + 4 * (HIBYTE(v141) ^ 0xBA));
  unsigned int v160 = *(_DWORD *)(v109 + 4 * (v128 ^ 0x33u)) ^ v158 ^ (v159 - 914379744 - ((2 * v159) & 0x92FF5840));
  unsigned int v161 = *(_DWORD *)(v104 + 4 * (BYTE2(v160) ^ 0x62u)) ^ 0xB0BAADC6;
  unsigned int v162 = (16 * v161 + 1540596941 - ((32 * v161) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v145) ^ 0x6D));
  unsigned int v163 = v157 ^ 0xF1F7E4A6;
  int v164 = *(_DWORD *)(v100 + 4 * ((unsigned __int16)(v157 ^ 0xE4A6) >> 8));
  HIDWORD(v102) = v164 ^ 0xCD56;
  LODWORD(v102) = v164 ^ 0xB41C0000;
  unsigned int v165 = *(_DWORD *)(v109 + 4 * (v149 ^ 0x68u)) ^ v161 ^ (v102 >> 16) ^ (v162
                                                                                          - 914379744
                                                                                          - ((2 * v162) & 0x92FF5840));
  unsigned int v166 = *(_DWORD *)(v104 + 4 * (BYTE2(v145) ^ 0xE1u)) ^ 0xB0BAADC6;
  int v167 = *(_DWORD *)(v100 + 4 * ((unsigned __int16)(v160 ^ 0x2957) >> 8));
  HIDWORD(v102) = v167 ^ 0xCD56;
  LODWORD(v102) = v167 ^ 0xB41C0000;
  int v168 = (16 * v166 + 1540596941 - ((32 * v166) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v149) ^ 0xCE)) ^ (v102 >> 16);
  unsigned int v169 = *(_DWORD *)(v109 + 4 * (v157 ^ 0x15u)) ^ v166 ^ (v168 - 914379744 - ((2 * v168) & 0x92FF5840));
  unsigned int v170 = *(_DWORD *)(v104 + 4 * (BYTE2(v149) ^ 0x60u)) ^ 0xB0BAADC6;
  int v171 = *(_DWORD *)(v100 + 4 * (BYTE1(v145) ^ 0x36u));
  HIDWORD(v102) = v171 ^ 0xCD56;
  LODWORD(v102) = v171 ^ 0xB41C0000;
  int v172 = (16 * v170 + 1540596941 - ((32 * v170) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * HIBYTE(v163)) ^ (v102 >> 16);
  unsigned int v173 = *(_DWORD *)(v109 + 4 * (v160 ^ 0x57u)) ^ v170 ^ (v172 - 914379744 - ((2 * v172) & 0x92FF5840));
  int v174 = BYTE1(v149) ^ 0xC;
  if ((v149 & 0x1000) != 0) {
    int v175 = -16;
  }
  else {
    int v175 = 16;
  }
  unsigned int v176 = *(_DWORD *)(v104 + 4 * BYTE2(v163)) ^ 0xB0BAADC6;
  unsigned int v177 = *(_DWORD *)(v100 + 4 * ((v174 + v175) ^ 0x83u));
  unsigned int v178 = *(_DWORD *)(v106 + 4 * (HIBYTE(v160) ^ 0xA1)) ^ HIWORD(v177) ^ (v177 << 16) ^ (16 * v176
                                                                                        + 1540596941
                                                                                        - ((32 * v176) & 0xB7A74980)) ^ 0xCD56B41C;
  unsigned int v179 = *(_DWORD *)(v109 + 4 * (v145 ^ 0xA5u)) ^ v176 ^ (v178 - 914379744 - ((2 * v178) & 0x92FF5840));
  unsigned int v180 = *(_DWORD *)(v104 + 4 * ((v179 ^ 0xEFBC3B44) >> 16)) ^ 0xB0BAADC6;
  int v181 = *(_DWORD *)(v100 + 4 * ((unsigned __int16)(v173 ^ 0x8D48) >> 8));
  HIDWORD(v182) = v181 ^ 0xCD56;
  LODWORD(v182) = v181 ^ 0xB41C0000;
  int v183 = (v182 >> 16) ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v165) ^ 0xCC)) ^ (16 * v180
                                                                         + 1540596941
                                                                         - ((32 * v180) & 0xB7A74980));
  unsigned int v184 = *(_DWORD *)(v109 + 4 * (v169 ^ 0xA9u)) ^ v180 ^ (v183 - 914379744 - ((2 * v183) & 0x92FF5840));
  int v185 = v165 ^ 0x255FD583;
  unsigned int v186 = *(_DWORD *)(v104 + 4 * (BYTE2(v185) ^ 0xC3u)) ^ 0xB0BAADC6;
  int v187 = *(_DWORD *)(v100 + 4 * ((unsigned __int16)(v179 ^ 0x3B44) >> 8));
  HIDWORD(v182) = v187 ^ 0xCD56;
  LODWORD(v182) = v187 ^ 0xB41C0000;
  int v188 = (v182 >> 16) ^ *(_DWORD *)(v106 + 4 * HIBYTE(v169)) ^ (16 * v186 + 1540596941 - ((32 * v186) & 0xB7A74980));
  unsigned int v189 = *(_DWORD *)(v109 + 4 * (v173 ^ 0x48u)) ^ v186 ^ (v188 - 914379744 - ((2 * v188) & 0x92FF5840));
  unsigned int v190 = *(_DWORD *)(v104 + 4 * ((v169 ^ 0xE93411A9) >> 16)) ^ 0xB0BAADC6;
  int v191 = *(_DWORD *)(v100 + 4 * BYTE1(v185));
  HIDWORD(v182) = v191 ^ 0xCD56;
  LODWORD(v182) = v191 ^ 0xB41C0000;
  int v192 = (16 * v190 + 1540596941 - ((32 * v190) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * ((v173 ^ 0x807D8D48) >> 24)) ^ (v182 >> 16);
  int v193 = *(_DWORD *)(v100 + 4 * (BYTE1(v169) ^ 0x82u));
  HIDWORD(v182) = v193 ^ 0xCD56;
  LODWORD(v182) = v193 ^ 0xB41C0000;
  unsigned int v194 = *(_DWORD *)(v104 + 4 * (BYTE2(v173) ^ 0xBEu)) ^ 0xB0BAADC6;
  int v195 = (v182 >> 16) ^ *(_DWORD *)(v106 + 4 * ((v179 ^ 0xEFBC3B44) >> 24)) ^ (16 * v194
                                                                               + 1540596941
                                                                               - ((32 * v194) & 0xB7A74980));
  unsigned int v196 = *(_DWORD *)(v109 + 4 * v185) ^ v194 ^ (v195 - 914379744 - ((2 * v195) & 0x92FF5840));
  unsigned int v197 = *(_DWORD *)(v109 + 4 * (v179 ^ 0x77u)) ^ v190 ^ (v192 - 914379744 - ((2 * v192) & 0x92FF5840));
  unsigned int v198 = *(_DWORD *)(v104 + 4 * ((v196 ^ 0x950DA39D) >> 16)) ^ 0xB0BAADC6;
  unsigned int v199 = (16 * v198 + 1540596941 - ((32 * v198) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * ((v184 ^ 0x11521BCA) >> 24));
  int v200 = *(_DWORD *)(v100 + 4 * (BYTE1(v197) ^ 0x89u));
  HIDWORD(v182) = v200 ^ 0xCD56;
  LODWORD(v182) = v200 ^ 0xB41C0000;
  BYTE1(v200) = BYTE1(v189) ^ 0xD1;
  int v201 = *(_DWORD *)(v104 + 4 * ((v184 ^ 0x11521BCA) >> 16));
  int v202 = v198 ^ *(_DWORD *)(v109 + 4 * (v189 ^ 0x88u)) ^ (v182 >> 16) ^ (v199
                                                                                          - 914379744
                                                                                          - ((2 * v199) & 0x92FF5840));
  int v203 = *(_DWORD *)(v100 + 4 * (BYTE1(v196) ^ 0x30u));
  HIDWORD(v182) = v203 ^ 0xCD56;
  LODWORD(v182) = v203 ^ 0xB41C0000;
  int v204 = (16 * (v201 ^ 0xB0BAADC6) + 1540596941 - ((32 * (v201 ^ 0xB0BAADC6)) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v189) ^ 0xDF)) ^ (v182 >> 16);
  BYTE2(v203) = BYTE2(v197) ^ 0x85;
  unsigned int v205 = *(_DWORD *)(v109 + 4 * (v197 ^ 0x43u)) ^ v201 ^ (v204 - 914379744 - ((2 * v204) & 0x92FF5840));
  unsigned int v206 = *(_DWORD *)(v104 + 4 * (BYTE2(v189) ^ 0xA7u)) ^ 0xB0BAADC6;
  int v207 = *(_DWORD *)(v100 + 4 * (BYTE1(v184) ^ 0x88u));
  HIDWORD(v182) = v207 ^ 0xCD56;
  LODWORD(v182) = v207 ^ 0xB41C0000;
  int v208 = (16 * v206 + 1540596941 - ((32 * v206) & 0xB7A74980)) ^ *(_DWORD *)(v106
                                                                           + 4
                                                                           * ((((v197 ^ 0x7A851A70) >> 24) ^ -((v197 ^ 0x7A851A70) >> 24) ^ ((((v197 ^ 0x7A851A70) >> 24) ^ 0xFFFFFF16) + 234))
                                                                            + 233)) ^ (v182 >> 16);
  unsigned int v209 = *(_DWORD *)(v109 + 4 * (v196 ^ 0x9Du)) ^ v206 ^ (v208 - 914379744 - ((2 * v208) & 0x92FF5840));
  int v210 = *(_DWORD *)(v104 + 4 * BYTE2(v203));
  int v211 = *(_DWORD *)(v100 + 4 * BYTE1(v200));
  HIDWORD(v182) = v211 ^ 0xCD56;
  LODWORD(v182) = v211 ^ 0xB41C0000;
  int v212 = (v182 >> 16) ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v196) ^ 0x7C)) ^ (16 * (v210 ^ 0xB0BAADC6)
                                                                         + 1540596941
                                                                         - ((32 * (v210 ^ 0xB0BAADC6)) & 0xB7A74980));
  unsigned int v213 = *(_DWORD *)(v109 + 4 * (v184 ^ 0xF9u)) ^ v210 ^ (v212 - 914379744 - ((2 * v212) & 0x92FF5840));
  int v214 = *(_DWORD *)(v104 + 4 * (BYTE2(v213) ^ 0x3Du));
  int v215 = *(_DWORD *)(v100 + 4 * ((unsigned __int16)(v209 ^ 0xDE69) >> 8));
  HIDWORD(v182) = v215 ^ 0xCD56;
  LODWORD(v182) = v215 ^ 0xB41C0000;
  unsigned int v216 = (v202 ^ 0x71C9D6C4) - 2 * ((v202 ^ 0x71C9D6C4) & 0x76E50705 ^ v202 & 1) - 152762620;
  int v217 = (v182 >> 16) ^ (16 * (v214 ^ 0xB0BAADC6) + 1540596941 - ((32 * (v214 ^ 0xB0BAADC6)) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v216) ^ 0x9F));
  unsigned int v218 = *(_DWORD *)(v109 + 4 * (v205 ^ 0x15u)) ^ v214 ^ (v217 - 914379744 - ((2 * v217) & 0x92FF5840));
  int v219 = *(_DWORD *)(v100 + 4 * (BYTE1(v213) ^ 0x92u));
  HIDWORD(v182) = v219 ^ 0xCD56;
  LODWORD(v182) = v219 ^ 0xB41C0000;
  unsigned int v220 = *(_DWORD *)(v104 + 4 * (BYTE2(v216) ^ 0x8Fu)) ^ 0xB0BAADC6;
  unsigned int v221 = v220 ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v205) ^ 0x6D)) ^ *(_DWORD *)(v109
                                                                            + 4 * (v209 ^ 0x69u)) ^ ((v182 >> 16) - 914379744 - ((2 * (v182 >> 16)) & 0x92FF5840)) ^ (16 * v220 + 1540596941 - ((32 * v220) & 0xB7A74980));
  unsigned int v222 = *(_DWORD *)(v104 + 4 * (BYTE2(v205) ^ 0x40u)) ^ 0xB0BAADC6;
  int v223 = *(_DWORD *)(v100 + 4 * (BYTE1(v216) ^ 0x6Cu));
  HIDWORD(v182) = v223 ^ 0xCD56;
  LODWORD(v182) = v223 ^ 0xB41C0000;
  int v224 = (16 * v222 + 1540596941 - ((32 * v222) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * ((v209 ^ 0x5FEEDE69) >> 24)) ^ (v182 >> 16);
  unsigned int v225 = *(_DWORD *)(v109
                   + 4
                   * ((((v213 ^ 0x89) + (v213 ^ 0xFFFFFF45) + 1) ^ 0xFFFFFFFE)
                    + (v213 ^ 0x89))) ^ v222 ^ (v224 - 914379744 - ((2 * v224) & 0x92FF5840));
  unsigned int v226 = *(_DWORD *)(v104 + 4 * (BYTE2(v209) ^ 0x2Du)) ^ 0xB0BAADC6;
  int v227 = *(_DWORD *)(v100 + 4 * (BYTE1(v205) ^ 0x72u));
  HIDWORD(v182) = v227 ^ 0xCD56;
  LODWORD(v182) = v227 ^ 0xB41C0000;
  int v228 = (v182 >> 16) ^ (16 * v226 + 1540596941 - ((32 * v226) & 0xB7A74980)) ^ *(_DWORD *)(v106
                                                                                          + 4
                                                                                          * ((HIBYTE(v213) ^ 0xA5) & 0x90 ^ 0x86u ^ (~(2 * (HIBYTE(v213) ^ 0xA5 | 0x90)) + (HIBYTE(v213) ^ 0xA5 | 0x90))));
  unsigned int v229 = *(_DWORD *)(v109 + 4 * (v216 ^ 0x5Fu)) ^ v226 ^ (v228 - 914379744 - ((2 * v228) & 0x92FF5840));
  unsigned int v230 = *(_DWORD *)(v104 + 4 * ((v229 ^ 0x59A5F4B7) >> 16)) ^ 0xB0BAADC6;
  int v231 = *(_DWORD *)(v100 + 4 * ((unsigned __int16)(v225 ^ 0x872B) >> 8));
  HIDWORD(v182) = v231 ^ 0xCD56;
  LODWORD(v182) = v231 ^ 0xB41C0000;
  int v232 = (16 * v230 + 1540596941 - ((32 * v230) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v218) ^ 0x62)) ^ (v182 >> 16);
  unsigned int v233 = *(_DWORD *)(v109 + 4 * (v221 ^ 0xEEu)) ^ v230 ^ (v232 - 914379744 - ((2 * v232) & 0x92FF5840));
  unsigned int v234 = *(_DWORD *)(v104 + 4 * (BYTE2(v218) ^ 0x9Fu)) ^ 0xB0BAADC6;
  int v235 = *(_DWORD *)(v100 + 4 * (BYTE1(v229) ^ 0x67u));
  HIDWORD(v182) = v235 ^ 0xCD56;
  LODWORD(v182) = v235 ^ 0xB41C0000;
  int v236 = v234 ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v221) ^ 0xD6)) ^ *(_DWORD *)(v109
                                                                            + 4 * (v225 ^ 0x18u)) ^ (16 * v234 + 1540596941 - ((32 * v234) & 0xB7A74980)) ^ ((v182 >> 16) - 914379744 - ((2 * (v182 >> 16)) & 0x92FF5840));
  unsigned int v237 = *(_DWORD *)(v104 + 4 * (BYTE2(v221) ^ 0x56u)) ^ 0xB0BAADC6;
  int v238 = *(_DWORD *)(v100 + 4 * (BYTE1(v218) ^ 0x16u));
  HIDWORD(v182) = v238 ^ 0xCD56;
  LODWORD(v182) = v238 ^ 0xB41C0000;
  int v239 = *(_DWORD *)(v106 + 4 * ((v225 ^ 0x911B872B) >> 24)) ^ v237 ^ 0x6D41727E ^ (16 * v237
                                                                                    + 1540596941
                                                                                    - ((32 * v237) & 0xB7A74980)) ^ (v182 >> 16);
  HIDWORD(v182) = *(_DWORD *)(v109 + 4 * (v229 ^ 0xB7u)) ^ 0xD5F7089A;
  LODWORD(v182) = HIDWORD(v182);
  int v240 = (v182 >> 21) ^ __ROR4__(v239, 21);
  unsigned int v241 = *(_DWORD *)(v104 + 4 * (BYTE2(v225) ^ 0xD8u)) ^ 0xB0BAADC6;
  int v242 = *(_DWORD *)(v100 + 4 * (BYTE1(v221) ^ 0xE4u));
  HIDWORD(v182) = v242 ^ 0xCD56;
  LODWORD(v182) = v242 ^ 0xB41C0000;
  int v243 = (v182 >> 16) ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v229) ^ 0xB0)) ^ (16 * v241
                                                                         + 1540596941
                                                                         - ((32 * v241) & 0xB7A74980));
  unsigned int v244 = *(_DWORD *)(v109 + 4 * (v218 ^ 0x60u)) ^ v241 ^ (v243 - 914379744 - ((2 * v243) & 0x92FF5840));
  unsigned int v245 = *(_DWORD *)(v104 + 4 * (BYTE2(v233) ^ 0x74u)) ^ 0xB0BAADC6;
  int v246 = *(_DWORD *)(v100 + 4 * (BYTE1(v244) ^ 0x66u));
  HIDWORD(v182) = v246 ^ 0xCD56;
  LODWORD(v182) = v246 ^ 0xB41C0000;
  int v247 = v236 ^ 0x177CD9D9;
  int v248 = *(_DWORD *)(v106 + 4 * ((v236 ^ 0x177CD9D9u) >> 24)) ^ 0x6D41727E ^ v245 ^ (16 * v245
                                                                                     + 1540596941
                                                                                     - ((32 * v245) & 0xB7A74980)) ^ (v182 >> 16);
  HIDWORD(v182) = v240 ^ 0x549BF9D9;
  LODWORD(v182) = v240 ^ 0x549BF9D9;
  int v249 = v182 >> 11;
  unsigned int v250 = (v248 & 0x200 ^ 0xFBEEF7FE) + 2 * (v248 & 0x200);
  int v251 = *(_DWORD *)(v109 + 4 * ((v182 >> 11) ^ 0xEFu));
  BOOL v252 = ((v250 + 68225026) & (v251 ^ 0xC97FAC20)) == 0;
  unsigned int v253 = *(_DWORD *)(v104 + 4 * (BYTE2(v244) ^ 0x72u)) ^ 0xB0BAADC6;
  int v254 = *(_DWORD *)(v100 + 4 * (BYTE1(v249) ^ 0xA0u));
  HIDWORD(v182) = v254 ^ 0xCD56;
  LODWORD(v182) = v254 ^ 0xB41C0000;
  int v255 = (v182 >> 16) ^ *(_DWORD *)(v106 + 4 * ((v233 ^ 0xD4B73D47) >> 24)) ^ (16 * v253
                                                                               + 1540596941
                                                                               - ((32 * v253) & 0xB7A74980));
  unsigned int v256 = *(_DWORD *)(v109 + 4 * (v236 ^ 0xEAu)) ^ v253 ^ (v255 - 914379744 - ((2 * v255) & 0x92FF5840));
  unsigned int v257 = v250 + 661749760;
  unsigned int v258 = 525299708 - v250;
  if (v252) {
    unsigned int v258 = v257;
  }
  unsigned int v259 = ((v251 ^ 0xD5F7089A) - 593524734 + v258) ^ v248 & 0xFFFFFDFF;
  unsigned int v260 = *(_DWORD *)(v104 + 4 * BYTE2(v247)) ^ 0xB0BAADC6;
  unsigned int v261 = (16 * v260 + 1540596941 - ((32 * v260) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * ((v249 ^ 0x1EA133EFu) >> 24));
  int v262 = *(_DWORD *)(v100 + 4 * (BYTE1(v233) ^ 0xAEu));
  HIDWORD(v263) = v262 ^ 0xCD56;
  LODWORD(v263) = v262 ^ 0xB41C0000;
  unsigned int v264 = *(_DWORD *)(v109 + 4 * (v244 ^ 0xDu)) ^ v260 ^ (v263 >> 16) ^ (v261
                                                                                         - 914379744
                                                                                         - ((2 * v261) & 0x92FF5840));
  unsigned int v265 = *(_DWORD *)(v104 + 4 * (BYTE2(v249) ^ 0x62u)) ^ 0xB0BAADC6;
  int v266 = *(_DWORD *)(v100 + 4 * BYTE1(v247));
  HIDWORD(v263) = v266 ^ 0xCD56;
  LODWORD(v263) = v266 ^ 0xB41C0000;
  int v267 = (16 * v265 + 1540596941 - ((32 * v265) & 0xB7A74980)) ^ *(_DWORD *)(v106 + 4 * (HIBYTE(v244) ^ 0x32)) ^ (v263 >> 16);
  unsigned int v268 = *(_DWORD *)(v109 + 4 * (v233 ^ 0x74u)) ^ v265 ^ (v267 - 914379744 - ((2 * v267) & 0x92FF5840));
  v269 = (char *)*(&off_100166A10 + (int)(v73 & 0xE7064810)) - 8;
  unsigned int v270 = v259 ^ 0xF137909F;
  v271 = (char *)*(&off_100166A10 + v73 - 1337) - 12;
  unsigned int v272 = *(_DWORD *)&v271[4 * (BYTE2(v256) ^ 0x99)] ^ 0x6AAD39BF;
  unsigned int v273 = ((v264 ^ 0x7B)
        - 1584600983
        + ((2 * (((v264 ^ 0x7B) + 112) & 0xFFFFFFFD ^ (v264 ^ 0xBC37B | 0x7FFFFFFA))) ^ 0x4922200B)) ^ v272 ^ (*(_DWORD *)&v269[4 * (((v259 ^ 0xF137909F) >> 24) ^ 0xB4)] + (((v259 ^ 0xF137909F) >> 24) ^ 0x9FD52929) - 27826805);
  unsigned int v274 = v256 ^ 0x6792B6A6;
  int v275 = *(_DWORD *)&v269[4 * (((v256 ^ 0x6792B6A6) >> 24) ^ 0xB4)];
  unsigned int v276 = HIBYTE(v264);
  LODWORD(v330) = *(_DWORD *)&v269[4 * (HIBYTE(v264) ^ 0xB4)];
  int v277 = v268 ^ 0x250E7C9C;
  HIDWORD(v330) = (v268 ^ 0x250E7C9C) >> 24;
  LODWORD(v333) = *(_DWORD *)&v269[4 * (HIDWORD(v330) ^ 0xB4)];
  v278 = (char *)*(&off_100166A10 + v73 - 1313) - 8;
  int v279 = v273 ^ (v272 >> 2) ^ *(_DWORD *)&v278[4 * (v264 ^ 0x79)];
  int v280 = *(_DWORD *)&v271[4 * (BYTE2(v268) ^ 5)];
  int v281 = *(_DWORD *)&v271[4 * ((v259 ^ 0xF137909F) >> 16)];
  HIDWORD(v328) = *(_DWORD *)&v271[4 * ((v264 ^ 0xBC37B) >> 16)];
  int v282 = ((unsigned __int16)(v264 ^ 0xC37B) >> 8);
  v283 = (char *)*(&off_100166A10 + HIDWORD(v333) - 1460) - 4;
  LODWORD(v271) = *(_DWORD *)&v283[4 * v282];
  int v284 = v279 ^ (v272 >> 4);
  int v285 = *(_DWORD *)&v283[4 * ((unsigned __int16)(v268 ^ 0x7C9C) >> 8)] ^ 0x1CE1C9E9;
  int v286 = *(_DWORD *)&v283[4 * ((unsigned __int16)(v256 ^ 0xB6A6) >> 8)];
  int v287 = *(_DWORD *)&v283[4 * (BYTE1(v259) ^ 0x5E)];
  int v288 = *(_DWORD *)&v278[4 * (v259 ^ 0x9D)];
  int v289 = *(_DWORD *)&v278[4 * (v268 ^ 0x9E)];
  LODWORD(v328) = *(_DWORD *)&v278[4 * (v256 ^ 0xA4)];
  unsigned int v290 = ((v284 ^ v285 ^ (1515496080 * v285))
        + 1460272016
        - ((2 * (v284 ^ v285 ^ (1515496080 * v285))) & 0xAE13F770)
        + 40) ^ LODWORD(STACK[0x238]);
  unsigned __int8 v291 = ((unsigned __int16)(((v284 ^ v285 ^ (-23920 * v285))
                            - 1136
                            - ((2 * (v284 ^ v285 ^ (-23920 * v285))) & 0xF770)
                            + 40) ^ LOWORD(STACK[0x238])) >> 8) ^ 0xC6;
  v292 = (char *)*(&off_100166A10 + (HIDWORD(v333) ^ 0x52F)) - 4;
  *(unsigned char *)(a17 + v335) = v292[((v290 ^ 0x5244C6B3) >> 16) ^ 0x5ELL] ^ ((v290 ^ 0x5244C6B3) >> 16) ^ 0x8A ^ ((((v290 ^ 0x5244C6B3) >> 16) ^ 0x8A) - ((2 * (((v290 ^ 0x5244C6B3) >> 16) ^ 0x8A) + 110) & 0x78) - 77) ^ 0xB9;
  unsigned int v293 = v280 ^ 0x6AAD39BF ^ ((HIBYTE(v274) ^ 0x9FD52929) - 27826805 + v275) ^ ((v280 ^ 0x6AAD39BFu) >> 2) ^ ((v280 ^ 0x6AAD39BFu) >> 4) ^ v271 ^ 0x1CE1C9E9 ^ v288 ^ (1515496080 * (v271 ^ 0x1CE1C9E9)) ^ (v270 - 1584600983 + ((2 * ((v270 + 112) & 0xFFFFFFF9 ^ (v270 | 0x7FFFFFFE))) ^ 0x49222003));
  unsigned int v294 = (v293 + 200911448 - ((2 * v293) & 0x17F354B0)) ^ LODWORD(STACK[0x388]);
  unsigned int v295 = v294 ^ 0x22A932A6;
  uint64_t v296 = (BYTE1(v295) | 0x88) ^ (v295 >> 8) & 0x88;
  v297 = (char *)*(&off_100166A10 + (HIDWORD(v333) ^ 0x5B0)) - 12;
  *(unsigned char *)(a17 + v334) = (((unsigned __int16)(v294 ^ 0x32A6) >> 8) | 0x88) ^ ((unsigned __int16)(v294 ^ 0x32A6) >> 8) & 0x88 ^ 0x35 ^ ((v297[v296 ^ 0x14] ^ 0xA0) - ((2 * v297[v296 ^ 0x14]) & 0x20) - 112);
  uint64_t v298 = (uint64_t)*(&off_100166A10 + (HIDWORD(v333) ^ 0x5A7));
  LODWORD(v296) = *(unsigned __int8 *)(v298 + (HIBYTE(v290) ^ 0xEFLL));
  HIDWORD(v263) = v296 ^ 1;
  LODWORD(v263) = v296 << 24;
  *(unsigned char *)(a17 + STACK[0x278]) = (v263 >> 29) ^ 0x83;
  int v299 = v281 ^ 0x6AAD39BF ^ ((v276 ^ 0x9FD52929) - 27826805 + v330) ^ ((v281 ^ 0x6AAD39BFu) >> 2) ^ ((v281 ^ 0x6AAD39BFu) >> 4);
  int v300 = v299 & 0x1000000 | 0x268E952D;
  if ((v299 & 0x1000000 & v289) != 0) {
    int v300 = 1293757018 - v300;
  }
  unsigned int v301 = v299 & 0xFEFFFFFF ^ (1515496080 * (v286 ^ 0x1CE1C9E9)) ^ ((v289 ^ (v277
                                                                          - 1584600983
                                                                          + ((2
                                                                            * ((v277 + 112) ^ (v277 | 0x7FFFFFF8))) ^ 0x4922200F)))
                                                                 - 646878509
                                                                 + v300);
  unsigned int v302 = v286 ^ 0x1CE1C9E9 ^ LODWORD(STACK[0x3B8]) ^ (v301 + 534536586 - ((2 * v301) & 0x3FB8C314));
  v303 = (char *)*(&off_100166A10 + HIDWORD(v333) - 1440) - 4;
  *(unsigned char *)(a17 + v336) = v303[v286 ^ 0xE9u ^ LOBYTE(STACK[0x3B8]) ^ (v301 - 118 - ((2 * v301) & 0x14)) ^ 0x28] ^ 0x85;
  int v304 = *(unsigned __int8 *)(v298 + (HIBYTE(v294) ^ 0xF9));
  HIDWORD(v305) = v304 ^ 1;
  LODWORD(v305) = v304 << 24;
  unint64_t v306 = STACK[0x208];
  *(unsigned char *)(a17 + STACK[0x208]) = (v305 >> 29) ^ 0xFB;
  *(unsigned char *)(a17 + v337) = BYTE2(v295) ^ 0x61 ^ ((BYTE2(v295) ^ 0x61) - ((2 * (BYTE2(v295) ^ 0x61) + 110) & 0x78) - 77) ^ 0xB8 ^ v292[BYTE2(v295) ^ 0xB5];
  int v307 = (HIDWORD(v330) ^ 0x9FD52929) - 27826805 + v333;
  unsigned int v308 = HIDWORD(v328) ^ 0x6AAD39BF ^ ((HIDWORD(v328) ^ 0x6AAD39BFu) >> 4) ^ ((HIDWORD(v328) ^ 0x6AAD39BFu) >> 2);
  int v309 = (v308 & 0x80000 ^ 0x3ED9FB99) + 2 * (v308 & 0x80000);
  BOOL v252 = ((v309 - 1054473113) & v307) == 0;
  int v310 = v309 - 167882753;
  int v311 = 1941063473 - v309;
  if (v252) {
    int v311 = v310;
  }
  unsigned int v312 = v308 & 0xFFF7FFFF ^ (v307 - 886590360 + v311) ^ (1515496080 * (v287 ^ 0x1CE1C9E9));
  int v313 = v328 ^ (v274 + 2096205936) ^ (v312 - ((2 * v312) & 0x4936AFF0) + 614160376);
  unsigned int v314 = v287 ^ LODWORD(STACK[0x3C8]) ^ (v313 + 2048063192 - ((2 * v313) & 0xF425EDD0) + 16);
  uint64_t v315 = (2 * (BYTE2(v314) ^ 0x7A) + 110) & 0x78;
  *(unsigned char *)(a17 + STACK[0x200]) = v292[(BYTE2(v314) ^ 0x7A) + 213 + ((v314 >> 15) & 0x1A8 ^ 0xFFFFFF5F)] ^ BYTE2(v314) ^ ((BYTE2(v314) ^ 0x7A) - v315 - 77) ^ 0xFC;
  int v316 = *(unsigned __int8 *)(v298 + (HIBYTE(v314) ^ 0xE6));
  HIDWORD(v317) = v316 ^ 1;
  LODWORD(v317) = v316 << 24;
  *(unsigned char *)(a17 + STACK[0x2E0]) = (v317 >> 29) ^ 0x50;
  *(unsigned char *)(a17 + v338) = ((v302 ^ 0xCFDDD967) >> 16) ^ 0x94 ^ ((((v302 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                               - ((2 * (((v302 ^ 0xCFDDD967) >> 16) ^ 0x94) + 110) & 0x78)
                                                               - 77) ^ v292[((v302 ^ 0xCFDDD967) >> 16) ^ 0x40] ^ 0xC;
  unsigned int v318 = (((v314 ^ 0x43D45BC6) >> 4) & 0xF0 | ((unsigned __int16)(v314 ^ 0x5BC6) >> 12)) ^ 0xE6;
  *(unsigned char *)(a17 + STACK[0x3C0]) = v297[((v318 >> 4) & 0xFFFFFF0F | (16 * (v318 & 0xF))) ^ 0xAELL] ^ (((v318 >> 4) & 0xF | (16 * (v318 & 0xF))) - ((2 * ((v318 >> 4) & 0xF | (16 * (v318 & 0xF)))) & 0x40) - 96) ^ 0x2B;
  *(unsigned char *)(a17 + (v60 & 0xFFFFFFF5 ^ 0x66A8B81A)) = (((unsigned __int16)(v302 ^ 0xD967) >> 8)
                                                     - ((v302 >> 7) & 0x40)
                                                     - 96) ^ 0xDB ^ v297[((unsigned __int16)(v302 ^ 0xD967) >> 8) ^ 0xA0];
  *(unsigned char *)(a17 + STACK[0x3B0]) = (v291 - ((v290 >> 7) & 0x40) - 96) ^ v297[v291 ^ 0x75] ^ 0x80;
  *(unsigned char *)(a17 + STACK[0x378]) = v303[v294 ^ 0x95] ^ 0x28;
  *(unsigned char *)(a17 + STACK[0x280]) = v303[v290 ^ 0x7FLL] ^ 0xB9;
  *(unsigned char *)(a17 + STACK[0x3F0]) = v303[v314 ^ 0x69] ^ 0x16;
  int v319 = *(unsigned __int8 *)(v298 + (HIBYTE(v302) ^ 0x49));
  HIDWORD(v317) = v319 ^ 1;
  LODWORD(v317) = v319 << 24;
  *(unsigned char *)(a17 + STACK[0x380]) = (v317 >> 29) ^ 0x2E;
  BOOL v320 = ((v306 + 1722333218 - 2 * ((v306 + 16) & STACK[0x2E8] ^ v60 & 0xD)) ^ 0x66A8B810u) > 0x14F;
  return (*(uint64_t (**)(char *, uint64_t, char *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * (((4 * v320) | (8 * v320)) ^ HIDWORD(v333))))(v297, v315, v303, 4267140491, 1941063473, 484559337, v306, 1515496080, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           v322,
           v323,
           v324,
           v325,
           v326,
           v327,
           v328,
           v330,
           v333,
           v334,
           v335,
           v336,
           v337,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1000D04C0(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((330
                                * ((((*(unsigned __int8 *)(a2 + 1) - 146) << (a3 + (v5 ^ (v3 + 90)) + 91)) & v7)
                                 + ((*(unsigned __int8 *)(a2 + 1) - 146) ^ v6) == v6)) ^ v5)))();
}

uint64_t sub_1000D051C@<X0>(int a1@<W6>, int a2@<W8>)
{
  unint64_t v7 = STACK[0x3F0];
  *(_DWORD *)(v7 + 392) = a2;
  *(_DWORD *)(v7 + 396) = STACK[0x5AC];
  *(void *)(v7 + 400) = STACK[0x598];
  *(_DWORD *)(v7 + 408) = 2023405429 - v2 + LODWORD(STACK[0x47C]);
  *(void *)(v7 + 416) = STACK[0x3D8] + (v4 + v2 + 1330135409);
  int v8 = (*(uint64_t (**)(unint64_t, unint64_t))(v5 + v3 * (uint64_t)a1 + 8))(STACK[0x388], STACK[0x280]);
  return (*(uint64_t (**)(__n128))(v6
                                           + 8
                                           * ((821 * (v4 - 1008821535 + v8 - ((2 * v8) & 0x87BD3270) == -1008820212)) ^ v4)))((__n128)0);
}

uint64_t sub_1000D05F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((674
                                * (((((v7 + (_BYTE)a6 + 120) & 0x7F ^ 0x75FDBAFF) + 2 * ((v7 + (_BYTE)a6 + 120) & 0x7F)) & 0x75FDBBFC) == 1979562752)) ^ a6)))();
}

void sub_1000D0650()
{
  *int v0 = 1008845325;
}

uint64_t sub_1000D0660()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*(_DWORD *)(v1 + 1424) != 70636353) * ((v0 - 241) ^ 0x4D0)) ^ (v0 - 241))))();
}

uint64_t sub_1000D0694(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((((a3 - 1288) | 0x468) ^ 0xFFFFF91A) + (a3 ^ 0x226))
                                     * (*(_DWORD *)(v3 - 144) == *(_DWORD *)(v3 - 148))) | a3)))();
}

uint64_t sub_1000D06E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  LODWORD(STACK[0x444]) = 1576401730;
  return sub_1000FC4C0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

void sub_1000D0700()
{
}

void sub_1000D0718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v13 = *(void *)(v11 - 0x774B811B42847B1FLL);
  unsigned int v14 = (*(_DWORD *)(v13 + 4 * (v12 - 1)) ^ v9) >> v8;
  *(_DWORD *)(v13 + 4 * (v7 - 92636162)) = v9 + ((a7 + 8) | 2) + v14 - (v10 & (2 * v14)) - 210;
  JUMPOUT(0x1000D07B0);
}

uint64_t sub_1000D07F0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v2 + 868) | 0x61) ^ 0x4C2) + ((v2 - 276) | 0x42)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1000D0840@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((56
                                * (*(_DWORD *)(a18 + 4 * ((((v19 - 597) | 0x54) ^ (a1 + 726)) + v20)) == ((v19 - 674) ^ (v18 - 461)))) ^ (v19 - 513))))();
}

uint64_t sub_1000D0894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x4F0]) = v64;
  STACK[0x508] = *(void *)(v65 + 8 * v63);
  return sub_1000FDD38(a1, a2, a3, a4, a5, a6, a7, 0x83FEB38F813DF820, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_1000D08B4(uint64_t a1)
{
  *(_DWORD *)(*(void *)(a1 + 24) - 0x3F0B617C4F927BF5) = v3;
  *uint64_t v1 = v2;
  JUMPOUT(0x1000D065CLL);
}

uint64_t sub_1000D08D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((2 * ((a6 ^ 0xF1 ^ (v7 + 8 == (a6 ^ 0x22) - 458)) & 1)) & 0xDF | (32 * ((a6 ^ 0xF1 ^ (v7 + 8 == (a6 ^ 0x22) - 458)) & 1)) | a6)))();
}

uint64_t sub_1000D0918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26,int a27,uint64_t a28,uint64_t a29)
{
  int v32 = *(_DWORD *)(a2 + 4);
  unsigned int v33 = 628203409 * ((2 * (&a22 & 0x75577F98) - &a22 - 1968668570) ^ 0x8208C55);
  a28 = *(void *)(a2 + 8);
  a29 = a13;
  a24 = v30 - v33 + 61;
  a25 = -375727839 - v33 + v32;
  a22 = a14;
  a23 = a12;
  a26 = a15;
  uint64_t v35 = (*(uint64_t (**)(uint64_t *))(v31 + 8 * (v30 ^ 0xA51)))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31
                                                                                         + 8
                                                                                         * ((59
                                                                                           * (a27 != (((v30 ^ 0x3B) - 1008822088) ^ v29))) ^ v30)))(v35, a2, 2393867127, 2415166058, 409351303, 1576401740);
}

uint64_t sub_1000D0A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v11 = *(_DWORD *)(v9 + v8 * (uint64_t)a7 + 36) - 1204916846;
  BOOL v13 = v11 > 1525649882 || v11 < SLODWORD(STACK[0x3B8]);
  return (*(uint64_t (**)(void))(v10 + 8 * ((v13 * ((v7 ^ 0x1DF) + 1401)) ^ v7)))();
}

uint64_t sub_1000D0A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  return (*(uint64_t (**)(void))(v45
                              + 8
                              * (a45 ^ (15
                                      * (((2 * (a11 - (a14 & 0xA7838C7C) + 1608022547)) & 0xFB63EA1E ^ 0xA303881C)
                                       + ((a11 - (a14 & 0xA7838C7C) + 1608022547) ^ 0xAE703331)
                                       - 1006666516 == 1102148091)))))();
}

uint64_t sub_1000D0B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t (*a17)(uint64_t), uint64_t a18)
{
  int v21 = 535753261 * ((v20 - 1591590627 - 2 * ((v20 - 168) & 0xA12241C5)) ^ 0xABD64FEA);
  *(void *)(v20 - 168) = a18;
  *(_DWORD *)(v20 - 160) = 753493626 - v21;
  *(_DWORD *)(v20 - 156) = (v18 + 83) ^ v21;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v18 ^ 0x7E3)))(v20 - 168);
  return a17(v22);
}

uint64_t sub_1000D0BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((318 * (*(_DWORD *)(a8 + 72) == (v9 ^ (v9 - 996) ^ (a6 + 1044)))) ^ (a5 + v9 + 579))))();
}

uint64_t sub_1000D0C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,uint64_t a27,int a28,uint64_t a29,uint64_t a30)
{
  int v32 = (2 * v30) ^ 0x1B4;
  int v33 = *(_DWORD *)(a2 + 4);
  unsigned int v34 = 628203409
      * ((((&a23 | 0x45B2C7B8) ^ 0xFFFFFFFE) - (~&a23 | 0xBA4D3847)) ^ 0x38C53474);
  a29 = *(void *)(a2 + 8);
  a30 = a13;
  a27 = a15;
  a24 = a12;
  a23 = a14;
  a25 = v30 - v34 + 183;
  a26 = -375727839 - v34 + v33;
  (*(void (**)(uint64_t *))(v31 + 8 * (v30 + 1577)))(&a23);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31
                                                                                         + 8
                                                                                         * (((a28 == -1008821960)
                                                                                           * (v32 + 333)) ^ a19)))(-2393868364, a2, 2393867127, 2415166058, 409351303, 1576401740);
}

void sub_1000D0D38()
{
}

void sub_1000D0D48(uint64_t a1)
{
  BOOL v3 = *(_DWORD *)(*(void *)(a1 + 16) - 0x774B811B42847B23) != 715496183
    && *(_DWORD *)(*(void *)a1 - 0x774B811B42847B23) != 715496183;
  int v1 = *(_DWORD *)(a1 + 8) - 235795823 * (((a1 | 0xDA219BBE) - (a1 & 0xDA219BBE)) ^ 0x4E8CD2E7);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1000D0E50(uint64_t a1)
{
  *(void *)(a1 - 7 + (v3 + 274858019 + v2 - v4)) = *(void *)(v6
                                                                             - 7
                                                                             + (v3 + 274858019 + v2 - v4));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 - (v1 & 0xFFFFFFF8) == -8) * (v5 + 960)) ^ v5)))();
}

uint64_t sub_1000D0EA8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((148 * (a3 == ((v3 - 857) | 0x400) - 1033)) ^ v3)))();
}

uint64_t sub_1000D0ED8@<X0>(int a1@<W0>, int a2@<W4>, uint64_t a3@<X7>, int a4@<W8>)
{
  int v15 = v5;
  int v16 = v6;
  int v18 = a1 ^ v12;
  int v19 = (v7 ^ v12)
      + a4
      + ((v15 ^ v12) & (a1 ^ v4) | (v16 ^ v12) & v18)
      + *((_DWORD *)*(&off_100166A10 + a2 + 75) + a3 + v11 - 2)
      + (*(_DWORD *)(v9 + 4 * (*((unsigned char *)*(&off_100166A10 + (a2 ^ 0x78)) + a3 + v11 - 4) - 79)) ^ (v8 + 599 * (a2 ^ 0x12) - 1198));
  uint64_t v20 = (char *)*(&off_100166A10 + (a2 ^ 2)) - 8;
  unsigned int v21 = (v19 + v12 - (v14 & (2 * v19))) ^ v12;
  unsigned int v22 = ((v21 << (v20[a3 + v11] - 23)) | (v21 >> (23 - v20[a3 + v11]))) + v18;
  return (*(uint64_t (**)(void))(v10 + 8 * ((1563 * (a3 + 1 == v13 + 16)) ^ (a2 + 976))))(v22 + v12 - (v14 & (2 * v22)));
}

uint64_t sub_1000D0FE8()
{
  unsigned int v5 = (((v4 + v3) >> 4) & 0x4F4F7FE ^ 0x480739E)
     + (((v4 + v3) >> 5) ^ 0xF9BAC630)
     - 1962858969;
  int v6 = (v5 < 0x857BA226) ^ (v2 > (v0 ^ 0x730u) + 2055493202);
  BOOL v7 = v5 < v2 - 2055495130;
  if (v6) {
    BOOL v7 = v2 > (v0 ^ 0x730u) + 2055493202;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((127 * !v7) ^ v0)))();
}

uint64_t sub_1000D1080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(void, void, void))(v4 + 8 * (v2 ^ 0xC9A)))(**(unsigned int **)(a1 + 8 * (v2 ^ 0x43E)), *v3, v1 + ((v2 - 776190255) & 0x2E43B4F8u) + *(_DWORD *)(v5 - 0x65EF48AAD10F570CLL) + 1078);
  return sub_1000D10E0(v6);
}

uint64_t sub_1000D10E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  unint64_t v13 = ((unint64_t)&a10 ^ 0x3ABCDABEB6717EEBLL)
      - 0x21C481424210470
      + ((2 * (void)&a10) & 0x7579B57D6CE2FDD0);
  *(unsigned char *)(v11 - 0x65EF48AAD10F56F5) = (v13 + ((v12 - 80) | 0x86)) * ((v13 - 123) ^ 0xBA);
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * v12))(v11 - 0x65EF48AAD10F5714);
}

void sub_1000D119C(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int v9 = v7 - 1051;
  a5 = v7
     - 1011
     + 1374699841 * ((((2 * &a3) | 0xB0228A8C) - &a3 - 1477526854) ^ 0x35E55D4F)
     + 1018;
  a3 = v6;
  a4 = v5;
  (*(void (**)(uint64_t *))(a1 + 8 * (v7 + 285)))(&a3);
  *int v8 = (v9 ^ 0x554B376C) - *v8;
  sub_1000DB5E0();
}

uint64_t sub_1000D1218@<X0>(uint64_t a1@<X2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  BOOL v26 = a12 > 0x5C37AAA;
  uint64_t v27 = ((a1 - 1022) ^ HIDWORD(v23) ^ ((a2 + 502) | 6u)) + HIDWORD(v25) + (*(_DWORD *)(a21 + a7) ^ v21);
  *(_DWORD *)(a21 + 4 * a8) = v27 + v21 - (v22 & (2 * v27));
  *(_DWORD *)(a21 + a7) = HIDWORD(v27) | v21;
  if (v26 == a16 - 55745540 < -96697003) {
    BOOL v26 = a16 - 55745540 < a11;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * (a2 ^ (1448 * v26))))();
}

uint64_t sub_1000D12D4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((((v1 + 1994357935) & 0xFFBEDDFE) + v3) * (a1 != 0)) ^ v1)))();
}

uint64_t sub_1000D130C@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  va_start(va, a2);
  BOOL v5 = (*(uint64_t (**)(void, char *, void, uint64_t))(v3 + 8 * (v4 ^ 0x71D)))(**(unsigned int **)(v2 + 8 * (v4 - 43)), va, (((v4 + 815) | 0x19) ^ 0x281F63E)+ ((a1 - 1074566752) & 0xFFFFF000 ^ 0xFD7E0DDB)+ ((2 * (a1 - 1074566752)) & 0xFAFC0000), 1) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((58 * v5) ^ v4)))();
}

void sub_1000D1398()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1000D13A8);
}

uint64_t sub_1000D146C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v17 = (v11 - 309) | 9;
  LODWORD(STACK[0x5A4]) = v9;
  LODWORD(STACK[0x584]) = v12;
  LODWORD(STACK[0x5F4]) = v10;
  LODWORD(STACK[0x54C]) = v13;
  LODWORD(STACK[0x524]) = v16 + 80;
  unint64_t v18 = STACK[0x638];
  int v19 = *(_DWORD *)(STACK[0x638] - 0x7C014C707EC207D0);
  LODWORD(STACK[0x4B0]) = v8;
  *(_DWORD *)(v18 - 0x7C014C707EC207D0) = (v19 ^ v14)
                                          + (v8 ^ v14)
                                          + v14
                                          - ((v15 + v17 - 281) & (2 * ((v19 ^ v14) + (v8 ^ v14))));
  return sub_1000FDEE8(a1, a2, a3, 1008845537, a5, a6, a7, a8);
}

uint64_t sub_1000D14FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8 * ((162 * (a6 + 1 != v9 + 20)) ^ a4)))(v7, a2, v6);
}

uint64_t sub_1000D15AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                + 8
                                                                                * (v4 ^ (112 * LODWORD(STACK[0x3C0])))))(588, 1366, 984, a4, 102);
}

uint64_t sub_1000D15DC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2022
                                * (*(_DWORD *)(*(void *)(a1 - 0x774B811B42847B1FLL)
                                             + 4 * (((101 * (v1 ^ 0x392) + 837) ^ (v2 + 1003)) + v5)) == v3)) ^ (101 * (v1 ^ 0x392)))))();
}

void sub_1000D1638()
{
}

uint64_t sub_1000D1698(int a1)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((15 * (v3 + 1 == v2 + 48)) ^ a1)))();
}

uint64_t sub_1000D1778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,unsigned int a47)
{
  return (*(uint64_t (**)(void))(v49
                              + 8
                              * ((((a47 - 1120314265) & 0x42C6A15F ^ 0x671)
                                * ((5 * v48) + 4 == v47 - 1576401730)) ^ a47)))();
}

uint64_t sub_1000D17CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((1997
                                * (a20 + ((v20 + 1038717984) & 0xC2166BBB) - *(_DWORD *)(a2 + 4) - 1556516042 == v20 - 168087244)) ^ v20)))();
}

uint64_t sub_1000D1830@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1322 * (*(unsigned __int8 *)(a1 + v1) == v2)) ^ v2)))();
}

uint64_t sub_1000D1868(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((122 * ((a4 + 1 + v4) < 0x40)) ^ a1)))();
}

uint64_t sub_1000D1934@<X0>(int a1@<W8>)
{
  unsigned int v4 = v1 & 0xF71A5F7F;
  if (*(void *)(v2 + 32) | *(void *)(v2 + 8)) {
    BOOL v5 = *(_DWORD *)(v2 + 40) - a1 == v4 + 449726943 + 46 * (v4 ^ 0x63D);
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = !v5;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((21 * v6) ^ v4)))();
}

uint64_t sub_1000D19A0(int a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  v54.val[1].i64[0] = ((_BYTE)a3 + 9) & 0xF;
  v54.val[1].i64[1] = ((_BYTE)a3 + 8) & 0xF;
  v54.val[2].i64[0] = ((_BYTE)a3 + 7) & 0xF;
  v54.val[2].i64[1] = ((_BYTE)a3 + 6) & 0xF;
  v54.val[3].i64[0] = ((_BYTE)a3 + 5) & 0xF;
  v54.val[3].i64[1] = ((_BYTE)a3 + 4) & 0xF;
  unsigned int v49 = a1 + v47 + a2;
  v50.i64[0] = 0x7777777777777777;
  v50.i64[1] = 0x7777777777777777;
  v54.val[0].i64[0] = v49 & 0xF;
  v54.val[0].i64[1] = ((_BYTE)a3 + 10) & 0xF;
  v51.i64[0] = vqtbl4q_s8(v54, (int8x16_t)xmmword_100123EA0).u64[0];
  v55.val[0].i64[1] = ((_BYTE)a3 + 2) & 0xF;
  v55.val[1].i64[1] = a3 & 0xF;
  v55.val[2].i64[1] = (a3 + 14) & 0xF;
  v55.val[3].i64[1] = (a3 + 12) & 0xF;
  v55.val[0].i64[0] = ((_BYTE)a3 + 3) & 0xF;
  v55.val[1].i64[0] = ((_BYTE)a3 + 1) & 0xF;
  v55.val[2].i64[0] = ((_BYTE)a3 - 1) & 0xF;
  v55.val[3].i64[0] = ((_BYTE)a3 + 13) & 0xF;
  v51.i64[1] = vqtbl4q_s8(v55, (int8x16_t)xmmword_100123EA0).u64[0];
  int8x16_t v52 = vrev64q_s8(vmulq_s8(v51, v50));
  *(int8x16_t *)(*(void *)(v48 - 120) - 15 + v49) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v45 + v54.val[0].i64[0] - 15), *(int8x16_t *)(*(void *)(v48 - 120) - 15 + v49)), *(int8x16_t *)(v54.val[0].i64[0] + v44 - 11)), *(int8x16_t *)(((a5 - 442) | 0x11Du)+ v54.val[0].i64[0]+ v43- 330)), vextq_s8(v52, v52, 8uLL));
  return (*(uint64_t (**)(void))(a43 + 8 * ((1952 * ((v46 & 0xFFFFFFF0) == 16)) ^ a5)))();
}

void sub_1000D1B00()
{
}

uint64_t sub_1000D1B0C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((47 * (v3 != v4 + ((v0 - v2 + 958538333) & 0x503F7FDD) - 1752)) ^ v0)))();
}

uint64_t sub_1000D1B6C@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((286 * (a1 + 1 == v3 + 44)) ^ a2)))();
}

uint64_t sub_1000D1C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  LODWORD(STACK[0x4E8]) = v3;
  STACK[0x5B0] = STACK[0x3F8];
  LODWORD(STACK[0x520]) = v3;
  return sub_1000F8F4C(a1, a2, a3, 1008845537);
}

uint64_t sub_1000D1C40@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(unsigned __int8 *)(v2 + a1) == (((a2 + 112) | 0x88) + 58))
                                * ((a2 - 393) ^ 0x79A)) ^ a2)))();
}

uint64_t sub_1000D1C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v18 - 128) = v17;
  *(void *)(v18 - 120) = a14;
  *(_DWORD *)(v18 - 136) = v14 + ((((2 * (v18 - 136)) | 0x7D2B64A) - (v18 - 136) - 65624869) ^ 0x9744127C) * v16 + 281;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 + 945)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 132) == 1430518031) * (((v14 - 746) | 9) - 312)) ^ v14)))(v19);
}

uint64_t sub_1000D1D10(_DWORD *a1)
{
  unsigned int v1 = 1224239923
     * ((2 * ((a1 ^ 0x6CFE4100) & 0x6997F88A) - (a1 ^ 0x6CFE4100) - 1771567243) ^ 0x825BBA2);
  unsigned int v2 = a1[4] - v1;
  return (*(uint64_t (**)(void))((char *)*(&off_100166A10 + (int)(v2 - 1354))
                              + 8
                              * (int)(((((*a1 + v1) ^ 0xC3DE9938) - 1 > 0x62)
                                     * ((((v2 + 1948123509) & 0x8BE1FAFE) - 53) ^ ((v2 - 1506) | 0x227))) ^ v2)
                              - 4))();
}

void sub_1000D1DD0()
{
  *(_DWORD *)(v0 + 8) = 1008845548;
}

uint64_t sub_1000D1DEC@<X0>(int a1@<W8>)
{
  STACK[0x5B0] -= 16;
  return (*(uint64_t (**)(void))(v1 + 8 * ((((a1 - 722410137) & 0x2B0F1B3D) + 74) ^ (a1 + 558))))();
}

void sub_1000D1E2C()
{
  uint64_t v0 = *(&off_100166A10
       + (byte_100119E3C[(byte_100123CA0[(107
                                                                                        * ((qword_100180398
                                                                                          + dword_100180308) ^ 0x58))] ^ 0xF2)
                                                      - 12] ^ (107 * ((qword_100180398 + dword_100180308) ^ 0x58)))
       + 121);
  uint64_t v1 = *(&off_100166A10
       + (byte_100123BA0[byte_100120850[(107 * ((qword_100180398 + *v0) ^ 0x58))] ^ 0x34] ^ (107 * ((qword_100180398 + *v0) ^ 0x58)))
       + 89);
  unint64_t v2 = (unint64_t)&v4[*v1 ^ *v0];
  *uint64_t v0 = 139864171 * v2 + 0x6BA42CE6601600A8;
  *uint64_t v1 = 139864171 * (v2 ^ 0x945BD3199FE9FF58);
  v5[1] = -504207030
        - 1734042137 * ((v5 - 1024062060 - 2 * ((unint64_t)v5 & 0xC2F60D94)) ^ 0x9E38CED9);
  LOBYTE(v1) = 107 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0x58);
  uint64_t v3 = (char *)*(&off_100166A10
               + ((107 * ((qword_100180398 + dword_100180308) ^ 0x58)) ^ byte_100119C30[byte_100123AA0[(107 * ((qword_100180398 + dword_100180308) ^ 0x58))] ^ 0x14])
               + 118)
     - 4;
  (*(void (**)(_DWORD *))&v3[8
                                      * (v1 ^ byte_100123BA0[byte_100120850[v1] ^ 0x4B])
                                      + 15200])(v5);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000D2040()
{
  *uint64_t v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_1000D2064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((22 * (((v7 == v5) ^ (v6 - a5 + 19 + v9 + v6 - 10 + 1)) & 1)) ^ v6)))();
}

uint64_t sub_1000D20A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  unsigned int v21 = a18 + 986833439 + ((v19 - 776897921) & 0x2E4E84BE);
  BOOL v22 = v18 + 1234858612 < v21;
  if (v21 < 0x98C7DD80 != (v18 + 1234858612) < 0x98C7DD80) {
    BOOL v22 = v21 < 0x98C7DD80;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((480 * v22) ^ v19)))();
}

uint64_t sub_1000D2124()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((100
                                * (v0 - 1755777583 < ((v1 + 295149298) & 0x2E685FF6)
                                                   + ((v1 + 321998602) & 0x2CCEAFDE)
                                                   - 1574)) ^ v1)))();
}

uint64_t sub_1000D2188(uint64_t result)
{
  unint64_t v1 = 1759421093 * (((result | 0x263174143DF22E67) - result + (result & 0xD9CE8BEBC20DD198)) ^ 0x88FB5448E8F9E33);
  unint64_t v2 = *(void *)(result + 16) ^ v1;
  unint64_t v3 = *(void *)(result + 40) - v1;
  BOOL v4 = v3 >= v2;
  BOOL v5 = v3 != v2;
  int v6 = v4;
  if ((*(_DWORD *)(result + 32) + v1)) {
    BOOL v5 = v6;
  }
  if (v5) {
    uint64_t v7 = (_DWORD *)(result + 4);
  }
  else {
    uint64_t v7 = (_DWORD *)result;
  }
  *(_DWORD *)(result + 28) = (*v7 - v1) ^ (*(_DWORD *)(result + 24) + v1);
  return result;
}

uint64_t sub_1000D222C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((((v0 + 1009) | 0x184) ^ 0xFFFFFE87) + v0 + 1397)
                                     * (*(_DWORD *)(v2 - 136) == *(_DWORD *)(v2 - 144))) ^ v0)))();
}

uint64_t sub_1000D2270(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)(((*(_DWORD *)(v9 + v8 * (uint64_t)a7 + 32) == a2
                                                                                 + ((v7 + 461512979) & 0xE47DD8DE)
                                                                                 - 198)
                                     * ((v7 + 867552794) & 0xCC4A2BD7 ^ 0xCD)) ^ v7)))();
}

void sub_1000D22D4(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1000D2318(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((v3 ^ a2) + 1206) ^ a3) * (v4 == 56)) ^ v3)))();
}

uint64_t sub_1000D2340()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((23 * (((v0 - 250) ^ 0x9B0928F) == 162566816)) ^ (v0 + 464))))();
}

uint64_t sub_1000D238C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  *(_OWORD *)(a2 + (((v3 + 363) + a1) & (a3 + 16))) = *v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((237 * (v4 == 16)) ^ v3)))();
}

uint64_t sub_1000D2398(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(a5 + v7) = *(unsigned char *)(v10 + (v5 + a3))
                      - ((((v6 - 75) | v9) - 117) & (2 * *(unsigned char *)(v10 + (v5 + a3))))
                      + 84;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v7 == 63) * v8) ^ v6)))();
}

void sub_1000D23E4()
{
}

uint64_t sub_1000D23EC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((31 * (STACK[0x448] == 0)) ^ (v0 + 1011))))();
}

uint64_t sub_1000D2414()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((((13 * (*(_DWORD *)(v1 - 124) ^ 0x67) + 1032155243) & 0xC27A8DDD ^ 0xCE)
                                     * (*(_DWORD *)(v1 - 160) == *(_DWORD *)(v1 - 168))) ^ *(_DWORD *)(v1 - 124))))();
}

uint64_t sub_1000D2470@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  *(unsigned char *)(v2 + v4 + a1) = v3;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v4 + 1 + a1) < 0x40) * v5) ^ a2)))();
}

void sub_1000D24A0()
{
}

uint64_t sub_1000D2658@<X0>(double *a1@<X8>, double a2@<D0>)
{
  *a1 = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v2)))();
}

uint64_t sub_1000D267C@<X0>(int a1@<W8>)
{
  v7.i64[0] = 0xA8A8A8A8A8A8A8A8;
  v7.i64[1] = 0xA8A8A8A8A8A8A8A8;
  v8.i64[0] = 0x5454545454545454;
  v8.i64[1] = 0x5454545454545454;
  *(int8x16_t *)(v4 + v1 + ((v3 - 502) ^ (a1 + 321))) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v7)), v8);
  return (*(uint64_t (**)(void))(v5 + 8 * ((57 * (((v2 + 1) & 0x1FFFFFFF0) == 16)) ^ v3)))();
}

uint64_t sub_1000D26E4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((v6 - 662) | 0x511) ^ 0x54B) * (a4 != a5)) ^ v6)))(0);
}

uint64_t sub_1000D2718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, int a15, uint64_t a16)
{
  unint64_t v21 = 1178560073 * (((v20 | 0x584FE73A97701A0ALL) - v20 + (v20 & 0xA7B018C5688FE5F0)) ^ 0x98D6989EBD1837F1);
  a15 = v21 + v19 - 1089;
  a16 = a10;
  a14 = v16 - v21 - ((v16 << (v19 - 48)) & 0x4551FD661122ED68) - 0x5D57014CF76E894CLL;
  uint64_t v22 = (*(uint64_t (**)(int *))(v18 + 8 * (v19 ^ 0x1D6)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((108 * (a13 == v17)) ^ v19)))(v22);
}

void sub_1000D27F8()
{
}

uint64_t sub_1000D2804@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  int v47 = *(_DWORD *)(&a31 + ((v45 + v43) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v45 + v43)) = (HIBYTE(v47) ^ 0xB6)
                                             + ((21 * (v44 ^ 0xB9)) ^ 0x6B)
                                             - ((2 * (HIBYTE(v47) ^ 0xB6)) & 0xA8);
  *(unsigned char *)(a1 + (v45 + v43 + 2)) = (BYTE1(v47) ^ 0x3D) - ((2 * (BYTE1(v47) ^ 0x3D)) & 0xA8) + 84;
  *(unsigned char *)(a1 + (v45 + v43 + 1)) = (BYTE2(v47) ^ 0xDE)
                                                 + ~(2 * ((BYTE2(v47) ^ 0xDE) & 0x55 ^ BYTE2(v47) & 1))
                                                 + 85;
  *(unsigned char *)(a1 + (v45 + v43 + 3)) = v47 ^ 0x34;
  BOOL v48 = v45 + 714243274 < (a43 + 1904699264);
  if (v45 + 714243274 < a2 != a43 + 1904699264 < a2) {
    BOOL v48 = a43 + 1904699264 < a2;
  }
  return (*(uint64_t (**)(void))(v46 + 8 * ((707 * v48) ^ v44)))();
}

uint64_t sub_1000D2904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  int v15 = 535753261
      * ((~((v14 - 120) ^ 0x323A17E6 | 0xF0BA43E2) + (((v14 - 120) ^ 0x323A17E6) & 0xF0BA43E2)) ^ 0x378BA5D4);
  *(void *)(v14 - 120) = a10;
  *(_DWORD *)(v14 - 112) = a12 - v15 - 1269911807;
  *(_DWORD *)(v14 - 108) = (v13 + 71) ^ v15;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v13 ^ 0x7EF)))(v14 - 120);
  uint64_t v17 = *(_DWORD *)(v14 - 152) & 0x3F;
  *(unsigned char *)(v14 - 220 + (v17 ^ 0x1E)) = -44;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12
                                                              + 8
                                                              * ((1797
                                                                * ((v17 ^ 0x1E) > ((v13 + 879) ^ 0x3BCu))) ^ v13)))(v16, 2956067867, 2952790016);
}

uint64_t sub_1000D2A1C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((LODWORD(STACK[0x3E4]) - 858) * (v1 <= v0 + 623)) ^ (LODWORD(STACK[0x414]) + 677))))();
}

void sub_1000D2A54()
{
}

uint64_t sub_1000D2A80(uint64_t result)
{
  uint64_t v1 = 1734042137 * (((result | 0x3273140D7D0F4296) - (result & 0x3273140D7D0F4296)) ^ 0x280CB09621C181DBLL);
  unint64_t v2 = *(void *)result ^ v1;
  unint64_t v3 = *(void *)(result + 16) - v1;
  BOOL v4 = v3 > v2;
  BOOL v5 = v3 == v2;
  int v6 = v4;
  if ((*(_DWORD *)(result + 28) ^ v1)) {
    BOOL v5 = v6;
  }
  BOOL v7 = !v5;
  uint64_t v8 = 36;
  if (!v7) {
    uint64_t v8 = 12;
  }
  *(_DWORD *)(result + 32) = (*(_DWORD *)(result + v8) - v1) ^ (*(_DWORD *)(result + 8) - v1);
  return result;
}

uint64_t sub_1000D2B14(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_100162850 + ((474 * (*(_DWORD *)(a2 + 4) == 1576401731)) ^ 0x6AEu)))();
}

uint64_t sub_1000D2B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W8>)
{
  *(_DWORD *)(*v10 + 4 * (v8 + a7)) = a6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7
                                                              + 8
                                                              * ((((((v12 + 52) ^ a4) - 843) ^ a5) * (v11 == v9 + 109)) ^ (v12 + 52))))(a1, a2, a3);
}

void sub_1000D2BA4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1178560073 * ((2 * (a1 & 0x17733AAC) - a1 - 393427629) ^ 0xC2E4E8A8);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000D2C84()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((452 * (v1 - 1 < (v2 + 2147483017))) ^ (v2 + 1098))))();
}

uint64_t sub_1000D2CBC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v2 == (((v0 - 825) | 0x4AC) ^ 0x671DC094)) * (((v0 - 1156) | 0x484) - 1400)) | (v0 - 545))))();
}

void sub_1000D2D04(uint64_t a1)
{
  uint64_t v2 = (uint64_t)*(&off_100166A10
                + ((107 * (dword_100180F98 ^ 0x58 ^ qword_100180398)) ^ byte_100119C30[byte_100123AA0[(107 * (dword_100180F98 ^ 0x58 ^ qword_100180398))] ^ 0x14])
                + 102);
  uint64_t v3 = *(void *)(v2 - 4);
  BOOL v4 = (unint64_t *)*(&off_100166A10
                           + (byte_100119E3C[(byte_100123CA0[(107 * (v3 ^ qword_100180398 ^ 0x58))] ^ 0xF2)
                                                                          - 12] ^ (107 * (v3 ^ qword_100180398 ^ 0x58)))
                           + 78);
  unint64_t v5 = 139864171 * ((*v4 - v3) ^ (unint64_t)&v7 ^ 0x945BD3199FE9FF58);
  *(void *)(v2 - 4) = v5;
  *BOOL v4 = v5;
  LODWORD(v4) = 139864171 * (*(_DWORD *)(v2 - 4) ^ 0x9FE9FF58 ^ v5);
  int v6 = (char *)*(&off_100166A10
               + ((107 * ((qword_100180398 + dword_100180F98) ^ 0x58)) ^ byte_100119F30[byte_100123DA0[(107 * ((qword_100180398 + dword_100180F98) ^ 0x58))] ^ 0x39])
               + 129)
     - 4;
  (*(void (**)(void, uint64_t (*)()))&v6[8
                                                   * (byte_100120950[byte_10011D8FC[v4 - 12] ^ 0x9D] ^ v4)
                                                   + 15304])(*(&off_100166A10+ (byte_10011D9F0[byte_100119D34[v4 - 4] ^ 0x45] ^ v4)+ 26), sub_1000EB0DC);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000D2EE8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  return sub_1000D2F40(a3 - 0x774B811B42847B1FLL, a1 - 0x774B811B42847B1FLL, 1307, 0x69BDDDDF77D5BA39, 4020991090, 0x9FCE7AF49DFFDFD0, 219);
}

uint64_t sub_1000D2F40(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v20 = v17 > v12;
  uint64_t v21 = 4 * (v19 + v13);
  int v22 = v7 + v15 + (*(_DWORD *)(*a1 + v21) ^ v16);
  *(_DWORD *)(*a2 + v21) = v22 + v16 - (v14 & (2 * v22));
  if (v20 == v19 + v9 < v8) {
    BOOL v20 = v19 + v9 < v11;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * ((v20 * a7) ^ v10)))();
}

uint64_t sub_1000D2FD0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 + 236) ^ 0x1BB) * (v0 == v3)) ^ (v1 - 203))))();
}

void sub_1000D3000(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000D3050@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8
                                   * ((506 * ((((v2 - 1769) ^ (v1 == ((v2 - 489) | 0x40) - 1364)) & 1) == 0)) ^ v2)))();
}

uint64_t sub_1000D3090@<X0>(int a1@<W2>, int a2@<W8>)
{
  uint64_t v8 = 4 * (v3 - 1801343115);
  unsigned int v9 = *(_DWORD *)(v5 + 4 * (v3 - 1801343116));
  unsigned int v10 = (((v9 >> 30) ^ (a1 + 26)) + ((2 * (v9 >> 30)) ^ 0xFFFFFFFD) - 24) ^ v9;
  int v11 = ((a1 + 1566083941 * v10 - ((-1162799414 * v10) & v4)) ^ *(_DWORD *)(v5 + v8)) - v3;
  *(_DWORD *)(v5 + v8) = v11 - ((2 * v11 - 692281066) & v4) - 570084682;
  unint64_t v12 = STACK[0x408];
  int v13 = a2 + 434468405 - STACK[0x408] + 36;
  *(void *)(v7 - 168) = STACK[0x400];
  *(void *)(v7 - 184) = (v3 - 2036827366) ^ v12;
  *(_DWORD *)(v7 - 200) = v13;
  *(_DWORD *)(v7 - 192) = ((a2 + 434468405) ^ 0x7F) + v12;
  *(_DWORD *)(v7 - 188) = v12;
  *(_DWORD *)(v7 - 176) = (a2 + 434468405) ^ v12;
  *(_DWORD *)(v7 - 172) = (a2 + v2) ^ v12;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (a2 ^ 0x6A0)))(v7 - 200);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * *(int *)(v7 - 196)))(v14);
}

uint64_t sub_1000D319C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v7 = (a1 ^ 0x56556E1A) + v5;
  int v8 = (**(_DWORD **)(a2 - 0x774B811B42847B1FLL) ^ 0x59F2A537) + 1;
  **(_DWORD **)(a2 - 0x774B811B42847B1FLL) = v8 + v3 - (v6 & (2 * v8));
  int v9 = ((v2 - 2001140861) & 0x7746FB6F ^ 0x6D1DC312) + 1358261186;
  int v10 = (v7 < 1041443894) ^ (v9 < 1041443894);
  BOOL v11 = v9 < v7;
  if (v10) {
    BOOL v11 = v7 < 1041443894;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((295 * v11) ^ (v2 + 464))))();
}

uint64_t sub_1000D3274(uint64_t a1, int a2, int a3, int a4, int a5, int a6)
{
  uint64_t v14 = (unsigned int *)(v12 + 4 * v8);
  uint64_t v15 = v8 + 1;
  int v16 = *(_DWORD *)(v12 + 4 * v15);
  unsigned int v17 = a3 ^ ((v16 & ((3 * (v6 ^ a2)) ^ (v10 + 412)) | v7 & 0x80000000) >> 1);
  *uint64_t v14 = v14[397] ^ a5 ^ *(_DWORD *)(v9 + 4 * ((v16 & 1) == 0)) ^ (v17 + a4 - (v11 & (2 * v17)));
  return (*(uint64_t (**)(void))(v13 + 8 * (((v15 == 227) * a6) ^ v6)))();
}

uint64_t sub_1000D335C(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 ^ 0x2B8) + ((a1 + 180) | 0x40) - 668) * (v2 == v1)) ^ a1)))();
}

uint64_t sub_1000D3398()
{
  return sub_1000D33B8();
}

uint64_t sub_1000D33B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,unsigned int a27)
{
  return sub_1000C6ACC(((v27 - 711475523) ^ 0xFBBF3FEC) + 1859841216 + ((2 * (v27 - 711475523)) & 0xF77E7FD8), (2 * (v27 - 711475523)) & 0xF77E7FD8, 1859841216, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_1000D3490(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 3804331 * (((a1 | 0x841A70C4) - (a1 & 0x841A70C4)) ^ 0x7E848392);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000D3558@<X0>(int a1@<W6>, unsigned int a2@<W7>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int32x4_t a9@<Q7>)
{
  a5.i64[0] = *(void *)(v10 + 4);
  a5.i32[2] = *(_DWORD *)(v10 + 12);
  int8x16_t v17 = vextq_s8(a4, a5, 0xCuLL);
  int8x16_t v18 = a5;
  v18.i32[3] = *(_DWORD *)(v10 + 16);
  int32x4_t v19 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v18, a6), vandq_s8(v17, v15)), 1uLL), a7);
  v20.i32[0] = *(_DWORD *)(v14 + 4 * ((*(_DWORD *)(v10 + 4) & 1) == 0));
  v20.i32[1] = *(_DWORD *)(v14 + 4 * ((*(_DWORD *)(v10 + 8) & 1) == 0));
  v20.i32[2] = *(_DWORD *)(v14 + 4 * (*(unsigned int *)(v10 + 12) & ((a3 + a1) & a2 ^ v11) ^ 1));
  v20.i32[3] = *(_DWORD *)(v14 + 4 * (~v18.i32[3] & 1));
  *(int8x16_t *)uint64_t v10 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v10 - 908), v20), v16), (int8x16_t)vaddq_s32(vsubq_s32(v19, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v19, v19), a8)), a9));
  return (*(uint64_t (**)(void))(v13 + 8 * (((v9 == 4) * v12) ^ a3)))();
}

uint64_t sub_1000D3564()
{
  STACK[0x3D8] = STACK[0x598];
  LODWORD(STACK[0x47C]) = -1330136732;
  return sub_1000D3594();
}

uint64_t sub_1000D3594()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((488 * (v0 == v3 + (v1 ^ 0x1DF) - 281)) ^ v1)))();
}

uint64_t sub_1000D35C8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1000D35E0(uint64_t a1)
{
  int v1 = 1734042137 * ((-2 - ((a1 | 0xC7BA4821) + (~a1 | 0x3845B7DE))) ^ 0x648B7493);
  int v2 = *(_DWORD *)(a1 + 24) + v1;
  int v3 = *(_DWORD *)a1 + v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 16) - 0x774B811B42847B23);
  unsigned int v6 = v4 - 715496183;
  BOOL v5 = v4 - 715496183 < 0;
  unsigned int v7 = 715496183 - v4;
  if (v5) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_100166A10 + v2 - 592)
                              + 8
                              * ((((v3 - 860795972) < 4 * (unint64_t)v8)
                                * (((v2 - 576) | 0x50) + 247)) ^ v2)
                              - 4))();
}

void sub_1000D36B8()
{
}

uint64_t sub_1000D36C4()
{
  int v5 = 628203409 * ((52206926 - ((v4 - 128) | 0x31C9D4E) + ((v4 - 128) | 0xFCE362B1)) ^ 0x7E6B6E82);
  *(void *)(v4 - 120) = v3;
  *(_DWORD *)(v4 - 112) = v5 + v1 + 410;
  *(_DWORD *)(v4 - 128) = v2 - v5 + ((v1 - 252) | 0x20B) - 136983828;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0x674)))(v4 - 128);
  return sub_1000D3758(v6);
}

uint64_t sub_1000D3758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v16 - 128) = v12 + ((((v16 - 128) | 0x1A95BCE5) + (~(v16 - 128) | 0xE56A431A)) ^ 0x8E38F5BD) * v13 + 692;
  *(void *)(v16 - 120) = a11;
  *(void *)(v16 - 112) = a12;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v12 + 1356)))(v16 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((56 * (*(_DWORD *)(v16 - 124) > ((v12 - 446) | 0x32Au) + v15)) ^ v12)))(v17);
}

uint64_t sub_1000D37E8@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  *(int8x16_t *)(a1 + (v2 + 16)) = vaddq_s8(vsubq_s8(*v4, vandq_s8(vaddq_s8(*v4, *v4), v6)), v7);
  return (*(uint64_t (**)(void))(v5 + 8 * (int)(((v3 == 16) * ((a2 + 1458528020) & 0xA910A267 ^ 0x42A)) ^ a2)))();
}

uint64_t sub_1000D37F4@<X0>(int a1@<W8>)
{
  BOOL v2 = ((a1 - 1576401730) ^ 0x5DEFF24D7AEFD3FALL)
     + ((2 * (a1 - 1576401730)) & 0xF5DFA7F4)
     - 0x5DEFF24D6A22EF0ALL != 281863408;
  return (*(uint64_t (**)(void))(v1 + 8 * ((8 * v2) | (32 * v2) | 0x500u)))();
}

uint64_t sub_1000D3890@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((((a1 ^ 0x11 ^ (*(_DWORD *)(*v3 + 4 * v4) == v2)) & 1) * (a1 - 93)) ^ a1)))();
}

uint64_t sub_1000D38C8@<X0>(int a1@<W8>)
{
  *(_DWORD *)(*(void *)(v5 - 0x774B811B42847B1FLL) + 4 * (a1 + 1710419638 + v2)) = *(_DWORD *)(*(void *)(v5 - 0x774B811B42847B1FLL)
                                                                                                 + 4 * v3);
  return (*(uint64_t (**)(void))(v4 + 8 * ((13 * (v3 - 1 > 0x7FFFFFFE)) ^ v1)))((v1 - 369 + v2 - 228));
}

uint64_t sub_1000D392C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 - 970883750) | 0x884002) ^ ((v2 + 34127068) | 0xC4A10080) ^ 0x699)
                                     * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1000D398C()
{
  return sub_1000D39B4(v0);
}

uint64_t sub_1000D39B4@<X0>(int a1@<W8>)
{
  return sub_1000BF424(a1);
}

uint64_t sub_1000D3A08()
{
  STACK[0x480] = STACK[0x498];
  return sub_1000D3A1C();
}

uint64_t sub_1000D3A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v8 = v6 + ((v5 + 1575) | 6) - ((2 * v6 + 68422012) & 0x25299ECA) - 1264661283;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((2023 * (((2 * v8) & 0xEFBFFEB0 ^ 0x25299E80) + (v8 ^ 0xE54B303D) + 1534981104 == a5)) ^ (v5 + 731))))();
}

uint64_t sub_1000D3AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8 * (((((v4 - 601) ^ 0x7F2) - 1381) * (v3 == 0)) ^ v4)))(a1, a2, a3);
}

uint64_t sub_1000D3AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(a5 + 1) = *(unsigned char *)(a6 + (((v6 + 38) + 4294967232) & (v7 + 2200714079)));
  return (*(uint64_t (**)(void))(v8 + 8 * ((146 * ((v7 & 0xFFFFFFFC) == 2094253216)) ^ v6)))();
}

void sub_1000D3B50(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_1000D3BD8()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 846)))();
  JUMPOUT(0x1000D3BF4);
}

uint64_t sub_1000D3C0C@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((v2 == 24) * a1) ^ v3)))();
}

uint64_t sub_1000D3C60()
{
  *(void *)(v3 + v2 - 0x7C014C707EC20827) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v0 & 0x38) == 8) * (37 * (v1 ^ 0x2CD) - 229)) ^ v1)))();
}

uint64_t sub_1000D3CB8@<X0>(int a1@<W5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  unsigned int v57 = (unsigned int *)(v56 + 4 * v50);
  uint64_t v58 = v50 + 1;
  *unsigned int v57 = v57[397] ^ v54 ^ *((_DWORD *)&a50 + ((*(_DWORD *)(v56 + 4 * v58) & 1) == 0)) ^ ((a1 ^ ((*(_DWORD *)(v56 + 4 * v58) & 0x7FFFFFFE | (3 * (a2 ^ 0x39D) + 2147482811) & v51) >> 1))
                                                                                       + v53
                                                                                       - (v55 & (2
                                                                                               * (a1 ^ ((*(_DWORD *)(v56 + 4 * v58) & 0x7FFFFFFE | (3 * (a2 ^ 0x39D) + 2147482811) & v51) >> 1)))));
  return (*(uint64_t (**)(void))(v52 + 8 * ((1295 * (v58 == 227)) ^ a2)))();
}

uint64_t sub_1000D3D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  *(unsigned char *)(a5 + (a9 - 1967979519)) = *(unsigned char *)(a34 + a6 - 2094253218);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * ((914 * ((a9 + a1) < 0x40)) ^ (v34 + 555))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1000D3D98(uint64_t a1)
{
  unsigned int v5 = *(unsigned __int8 *)(v1 + (v3 + 1));
  return (*(uint64_t (**)(uint64_t, void))(v2
                                                    + 8
                                                    * (int)((((41 * (((v4 - 1648) | 0x202) ^ 0x293)) ^ 0x571) * (v5 >> 7)) ^ v4)))(a1, ((2 * v5) & 0xC6) + (v5 ^ 0xDFF7FB63) + 2113798111);
}

void sub_1000D3E0C()
{
}

uint64_t sub_1000D3E14()
{
  return sub_1000D3E1C();
}

uint64_t sub_1000D3E1C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X7>, int a3@<W8>)
{
  int8x16_t v9 = *(int8x16_t *)(a2 + (v3 + v5 + v4));
  *(int8x16_t *)(a1 + v4) = vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v7)), v8);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 != 48) | (4 * (v4 != 48))) ^ (a3 + 890))))();
}

uint64_t sub_1000D3E60(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((8 * ((a2 ^ 0xE5 ^ (*v2 == 0x5BBAD1DEA41281ADLL)) & 1)) & 0xEF | (16 * ((a2 ^ 0xE5 ^ (*v2 == 0x5BBAD1DEA41281ADLL)) & 1))) ^ a2)))();
}

void sub_1000D3EA4()
{
}

uint64_t sub_1000D3F20()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((25 * (v3 + 1 == v2 + 44)) ^ v0)))();
}

uint64_t sub_1000D3FDC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((51 * (v1 == 1576401730)) ^ 0x54F)))();
}

uint64_t sub_1000D4020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, int a3@<W7>, int a4@<W8>)
{
  int v13 = a4 + 1;
  *(unsigned char *)(a1 + (v13 + v4)) = *(unsigned char *)(v11 + a2 + v9)
                                            - (((v7 | v8) ^ v10) & (2 * *(unsigned char *)(v11 + a2 + v9)))
                                            + 84;
  return (*(uint64_t (**)(void))(v12 + 8 * ((((a3 + v13 + 1) < 0x40) * v6) ^ v5)))();
}

uint64_t sub_1000D4028@<X0>(uint64_t a1@<X8>)
{
  unsigned int v8 = 3804331 * ((v3 - 2008142484 - 2 * (v3 & 0x884E2D6C)) ^ 0x72D0DE3A);
  *(_DWORD *)(v7 - 176) = v8 + 302055125 * LODWORD(STACK[0x548]) + 622046279;
  STACK[0x368] = v1;
  *(void *)(v7 - 192) = a1;
  *(void *)(v7 - 184) = v1;
  *(void *)(v7 - 168) = v5 + 0x18C386E3A064891FLL;
  *(void *)(v7 - 160) = v5 + 0x4CA0F7536780EB33;
  *(_DWORD *)(v7 - 200) = (v2 - ((2 * v2 + 783412132) & 0xE468A81C) + (((v4 + 190) | 1) ^ 0x98D48F9)) ^ v8;
  *(_DWORD *)(v7 - 196) = v4 - v8 + 368400087;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v4 | 0x7A1)))(v7 - 200);
  int v10 = *(_DWORD *)(v7 - 152);
  LODWORD(STACK[0x520]) = v10;
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((1726 * (v10 == -1008821960)) ^ v4)))(v9);
}

void sub_1000D4144()
{
}

uint64_t sub_1000D4158(uint64_t result)
{
  *(_DWORD *)(result + 4) = -1022760981;
  return result;
}

uint64_t sub_1000D4168(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int32x4_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v64 = BYTE4(a49) ^ 0xDB;
  if (v64 == 1)
  {
    BYTE4(a44) = ((8 * a46) ^ 0xF0) - ((((8 * a46) ^ 0xFFFFFFF0) << ((-83 * (a3 ^ 0x3C)) ^ 6)) & 0xA0) + 84;
    BYTE5(a44) = ((a46 >> 5) ^ 0xA6) - (v63 & (2 * ((a46 >> 5) ^ 0xA6))) + 84;
    BYTE6(a44) = ((a46 >> 13) ^ 0xE0)
               - 2 * (((a46 >> 13) ^ 0xE0) & 0x57 ^ (a46 >> 13) & 3)
               + 84;
    HIBYTE(a44) = ((a46 >> 21) ^ 0x59) - (v63 & (2 * ((a46 >> 21) ^ 0x59))) + 84;
    HIDWORD(v67) = HIDWORD(a45) ^ 3;
    LODWORD(v67) = ~a46;
    LOBYTE(a45) = (v67 >> 29) - (v63 & (2 * (v67 >> 29))) + 84;
    BYTE1(a45) = ((HIDWORD(a45) >> 5) ^ 0x48)
               - 2 * (((HIDWORD(a45) >> 5) ^ 0x48) & 0x55 ^ ((a45 & 0x2000000000) != 0))
               + 84;
    BYTE2(a45) = ((HIDWORD(a45) >> 13) ^ 0x41) - (v63 & (2 * ((HIDWORD(a45) >> 13) ^ 0x41))) + 84;
    unsigned int v66 = ((HIDWORD(a45) >> 21) ^ 0xFFFFFFD7) + (~(2 * ((HIDWORD(a45) >> 21) ^ 0xFFFFFFD7)) | 0x57) + 85;
    goto LABEL_5;
  }
  if (v64 == 2)
  {
    HIDWORD(v65) = HIDWORD(a45) ^ 3;
    LODWORD(v65) = ~a46;
    BYTE4(a44) = (BYTE4(a13) & 0x8F ^ (HIDWORD(a45) >> 21) ^ 0xD0)
               - (v63 & (2 * (BYTE4(a13) & 0x8F ^ (HIDWORD(a45) >> 21) ^ 0xD0)))
               + 84;
    BYTE5(a44) = ((HIDWORD(a45) >> 13) ^ 0x41)
               + ~(2 * (((HIDWORD(a45) >> 13) ^ 0x41) & 0x5C ^ (HIDWORD(a45) >> 13) & 8))
               + 85;
    BYTE6(a44) = ((HIDWORD(a45) >> 5) ^ 0x48)
               - 2 * (((HIDWORD(a45) >> 5) ^ 0x48) & 0x55 ^ ((a45 & 0x2000000000) != 0))
               + 84;
    HIBYTE(a44) = (v65 >> 29) - (v63 & (2 * (v65 >> 29))) + 84;
    LOBYTE(a45) = ((a46 >> 21) ^ 0x59) - (v63 & (2 * ((a46 >> 21) ^ 0x59))) + 84;
    BYTE1(a45) = ((a46 >> 13) ^ 0xE0)
               - 2 * (((a46 >> 13) ^ 0xE0) & 0x5C ^ (a46 >> 13) & 8)
               + 84;
    BYTE2(a45) = ((a46 >> 5) ^ 0xA6) - (v63 & (2 * ((a46 >> 5) ^ 0xA6))) + 84;
    LOBYTE(v66) = ((8 * a46) ^ 0xF0) - ((2 * ((8 * a46) ^ 0xF0)) & 0xA0) + 84;
LABEL_5:
    BYTE3(a45) = v66;
  }
  return sub_1000BFC28(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a9);
}

uint64_t sub_1000D43AC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((111 * (v0 != ((v1 - 2121275974) & 0x7E701B7E) - 798)) ^ v1)))();
}

uint64_t sub_1000D43F0@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *uint64_t v2 = a2;
  *(_DWORD *)(result + 8) = 1008845325;
  return result;
}

uint64_t sub_1000D4404@<X0>(uint64_t a1@<X8>)
{
  STACK[0x5C8] = 104 - a1;
  uint64_t v2 = (uint64_t (*)(void))STACK[0x468];
  STACK[0x5B0] = v1 - 112;
  return v2();
}

uint64_t sub_1000D4424(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v11 = (a4 + a3 - 0x7FFFFFFF);
  uint64_t v12 = v11 + v9;
  uint64_t v13 = ((a5 ^ 0x412) - 1782) & v11;
  uint64_t v14 = v6 - v12;
  unint64_t v15 = (v13 | v8) - v12;
  uint64_t v16 = (v13 | v7) - v12;
  unint64_t v17 = v14 + v13;
  BOOL v21 = (unint64_t)(v5 - v9) > 0xF && v17 > 0xF && v15 > 0xF && (unint64_t)(v16 + 2) > 0xF;
  return (*(uint64_t (**)(void))(v10 + 8 * ((150 * v21) ^ a5)))();
}

uint64_t sub_1000D449C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 8) - 11)))
                                 + ((*(unsigned __int8 *)(v3 + 8) - 11) ^ (v0 + ((v2 - 683) | 0xE0) - 250)) == v0)
                                * (((v2 - 637) | 0xB2) + 1120)) ^ v2)))();
}

uint64_t sub_1000D44EC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _DWORD *a7)
{
  int v10 = a1 - 141;
  int v11 = (*(_DWORD *)(*(void *)(a3 + 8) - 0x3303C932EE2955CFLL) - 836639572) * (*a7 ^ (a1 - 1509075637));
  int v12 = 1734042137
      * ((-524960656 - ((v9 - 128) ^ 0x4265622A | 0xE0B5BC70) + ((v9 - 128) ^ 0x4265622A | 0x1F4A438F)) ^ 0x1E1E2E8);
  *(_DWORD *)(v9 - 112) = v12 ^ 0x2AA59AF7;
  *(void *)(v9 - 104) = a4;
  *(void *)(v9 - 128) = a5;
  *(_DWORD *)(v9 - 120) = v10 - v12 - 620;
  *(_DWORD *)(v9 - 116) = v12 + (v11 ^ 0x5FD9157F) + ((2 * v11) & 0xBFB22AFE) - 286261320;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(v7 + 8 * (v10 ^ 0xCEE)))(v9 - 128);
  BOOL v14 = (int)(v8 + 122849136) > 122849137;
  if (v8 > 0x78AD788F) {
    BOOL v14 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((388 * v14) ^ v10)))(v13);
}

uint64_t sub_1000D467C@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((672 * (a2 == ((v4 + a1) ^ (v2 - 96)))) ^ (v4 + a1 - 49))))();
}

void sub_1000D46B4()
{
}

void sub_1000D46C0()
{
}

uint64_t sub_1000D46D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,unsigned int a37)
{
  unsigned int v41 = (unsigned __int8 *)(a4 + a6 + v40);
  int v42 = ((*v41 ^ 0x54) << (((a37 + 105) | 0x10) + 8)) | ((v41[1] ^ 0x54) << 16) | ((v41[2] ^ 0x54) << 8);
  *(_DWORD *)(v38 + ((a6 + v40) & 0xFFFFFFFFFFFFFFFCLL)) = (v42 | v41[3] ^ 0x54)
                                                         + v37
                                                         - 2
                                                         * ((v42 | v41[3] ^ 0x54) & 0x43DE993E ^ (v41[3] ^ 0x54) & 6);
  return (*(uint64_t (**)(void))(v39
                              + 8
                              * (((4 * ((unint64_t)(a6 + 4 + v40) < 0x40)) | (8
                                                                                   * ((unint64_t)(a6 + 4 + v40) < 0x40))) ^ a37)))();
}

uint64_t sub_1000D4778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((245 * (((v20 - 1576401727) & 0xFFFFFFFC) - a18 == ((v18 - 104) | 0x14A) - 1576402062)) ^ v18)))();
}

uint64_t sub_1000D47C4()
{
  *(_DWORD *)(v5 - 128) = (v1 + 77) ^ (1734042137
                                     * ((((v5 - 136) | 0xF01A054A) - ((v5 - 136) & 0xF01A054A)) ^ 0xACD4C607));
  *(void *)(v5 - 120) = v4;
  *(void *)(v5 - 136) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 1448)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (((v2 == v1 + 574574138) * ((v1 + 254) ^ 0x5AE)) ^ (v1 + 254))))(v6);
}

uint64_t sub_1000D4874()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(void *)(*(void *)(v2 + 8 * (v1 ^ 0x4D7)) - 4) == 0) * ((v1 - 515) ^ 0x122)) ^ v1)))();
}

uint64_t sub_1000D48AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *(void *)(*(void *)(a16 + 96) + 504) = v18 + 1;
  *(_DWORD *)(*(void *)(a16 + 96) + 496) = a18 - 1;
  int v21 = 460628867 * ((117828239 - ((v20 - 152) | 0x705EA8F) + ((v20 - 152) | 0xF8FA1570)) ^ 0xB46C970D);
  *(_DWORD *)(v20 - 140) = -1882357464 - v21;
  *(_DWORD *)(v20 - 136) = v21 + 1678855235;
  *(void *)(v20 - 152) = v20 + 0x7C014C707EC2072CLL;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v19 + 16448))(v20 - 152);
  BOOL v23 = a18 - 1501461374 + ((2 * *(_DWORD *)(v20 - 184)) & 0x76 ^ 0x34) + (*(_DWORD *)(v20 - 184) & 0x3F ^ 0xFB887FE5) > 0xFFFFFFBF;
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((v23 | (2 * v23)) ^ 0x2D1u)))(v22);
}

void sub_1000D4AC0()
{
}

uint64_t sub_1000D4B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 628203409 * ((((v19 - 136) | 0x52BC429B) + (~(v19 - 136) | 0xAD43BD64)) ^ 0xD0344EA9);
  *(void *)(v19 - 128) = v18;
  *(_DWORD *)(v19 - 120) = v20 + v16 + 450;
  *(_DWORD *)(v19 - 136) = v17 - v20 - 857833403;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 1692)))(v19 - 136);
  *(_DWORD *)(v19 - 136) = v16
                         + 235795823 * ((~((v19 - 136) | 0xFE46CA8B) + ((v19 - 136) & 0xFE46CA8B)) ^ 0x95147C2D)
                         + 1003;
  *(void *)(v19 - 128) = v14;
  *(void *)(v19 - 120) = a14;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 | 0x683)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((53
                                              * (((v16 - 117) ^ (*(_DWORD *)(v19 - 132) > ((v16 + 102) ^ 0x5543F8B3u))) & 1)) ^ (v16 - 129))))(v21);
}

uint64_t sub_1000D4C3C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((82
                                * (((*(_DWORD *)(v4 + 48 * ((((v3 - 1323) | 0x80) ^ (a3 + 127)) + v5) + 36) == v5) ^ (11 * (v3 ^ 0x3D))) & 1)) | v3)))();
}

uint64_t sub_1000D4C9C(uint64_t a1)
{
  int v2 = 1225351577 * (((a1 | 0xD0007703) - a1 + (a1 & 0x2FFF88FC)) ^ 0xF39AAF15);
  int v3 = *(_DWORD *)(a1 + 36) ^ v2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 48);
  unsigned int v8 = 1224239923 * ((&v10 + 1074847235 - 2 * (&v10 & 0x4010DE03)) ^ 0xB2A323D4);
  int v11 = (*(_DWORD *)(a1 + 8) ^ v2 ^ 0x1EF76F30)
      - v8
      - 270467370
      + ((2 * (*(_DWORD *)(a1 + 8) ^ v2)) & 0x65FE9EFE ^ 0x4010009E);
  uint64_t v10 = v7;
  uint64_t v13 = v4;
  uint64_t v14 = v6;
  unsigned int v16 = v3 + v8 - 1695026366;
  uint64_t v12 = v5;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_100166A10 + (v3 ^ 0x65081064))
                                                + 8 * (v3 ^ 0x650818EB)
                                                - 4))(&v10);
  *(_DWORD *)(a1 + 32) = v15;
  return result;
}

void sub_1000D4E14(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  if (*(void *)(v1 + 8)) {
    BOOL v3 = *(void *)(v1 + 24) == 0x1274B0724696E775;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = v3;
  int v2 = *(_DWORD *)v1 + 3804331 * (((v1 | 0xC6A0E61B) - (v1 | 0x395F19E4) + 962533860) ^ 0x3C3E154D);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000D4F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8)
{
  *(void *)(*(void *)(a8 + 96) + 1544) = *(void *)(a2 + 8);
  *(_DWORD *)(*(void *)(a8 + 96) + 1536) = *(_DWORD *)(a2 + 4);
  return v8 ^ a7;
}

void sub_1000D4FAC()
{
}

void sub_1000D4FB8()
{
}

uint64_t sub_1000D4FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((60
                                * (((v18 - 312) | 0x14Bu)
                                 + ((2 * (a18 - 1576401730)) & 0x179DF5E5ALL)
                                 - 0x7EFF1DDF2E402D1FLL
                                 + ((v18 - 312) ^ 0x14B ^ (a18 - 1576401730) ^ 0x7EFF1DDFBCEFAE72) != v20)) ^ v18)))();
}

uint64_t sub_1000D508C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19)
{
  a19 = ((v20 - 216389556) & 0xCE5D37F) + v19 + ((v20 + 2126436971) & 0xF7DF7DDF ^ (v22 + 343));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * ((101 * (((int)(*(&a19 + 6 * (v19 - 632876697) + 2) + a6) & 0xFFFFFFFFFFFFFFELL) == 2)) ^ v20)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1000D5154()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)((((v0 + 1148) ^ 0x282 ^ (v0 + 1750529187) & 0x97A90DD7) * (v1 > 0)) ^ v0)))();
}

uint64_t sub_1000D51C8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((111 * (((((v0 - 350) | 0x25) - 2121275974) & 0x7E701B7E) != 798)) ^ ((v0 - 350) | 0x25))))();
}

uint64_t sub_1000D521C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(a11 + v13 + (v11 + 315)) = v15;
  return (*(uint64_t (**)(void))(v14 + 8 * ((997 * ((v12 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ v11)))();
}

uint64_t sub_1000D525C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((*(_DWORD *)(v7 + 48 * (v9 + a6)) == 1555439992)
                                * ((v6 - 1417941821) & 0x54840D7F ^ 0x10F)) ^ v6)))();
}

uint64_t sub_1000D52B4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((v1 - 674) | 0x201) + 674) ^ 0x34C) * ((v2 + a1) < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_1000D52F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,unsigned int a34,unsigned int a35,unsigned int a36,int a37,int a38,int a39,unsigned __int8 a40)
{
  return sub_1000C8E78(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000D5300@<X0>(int a1@<W8>)
{
  unsigned int v5 = (v3 - v4 + 1769866729) & 0xF02F73E4;
  int v6 = 1225351577 * ((&v8 - 870604077 - 2 * ((unint64_t)&v8 & 0xCC1BA2D3)) ^ 0xEF817AC5);
  int v10 = v6 + v3 - 95;
  uint64_t v9 = v2;
  unsigned int v8 = -1395212929 - (v6 + a1) - v5;
  return (*(uint64_t (**)(unsigned int *))(v1 + 8 * (v3 + 1748)))(&v8);
}

uint64_t sub_1000D53B8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v25 = 460628867
      * ((((v24 - 144) ^ 0xB25EDFB8 | 0xD1B85227)
        - ((v24 - 144) ^ 0xB25EDFB8)
        + (((v24 - 144) ^ 0xB25EDFB8) & 0x2E47ADD8)) ^ 0x2F700FE2);
  *(_DWORD *)(v24 - 120) = v21 + v25 + ((147 * (v20 ^ 0x19A)) ^ 0x35FD3BFB);
  *(void *)(v24 - 144) = a1;
  *(void *)(v24 - 128) = v23;
  *(_DWORD *)(v24 - 136) = v25 + v20 + 216;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v20 + 1617)))(v24 - 144);
  return sub_1000F6DE0(v26, v27, v28, v29, v30, v31, v32, v33, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20);
}

uint64_t sub_1000D5454@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v10 = (4 * a1) ^ 0x384;
  int v11 = v4 + v3 + v6 - v8;
  *(void *)(v2 - 7 + v11 + (v10 ^ 0x3DAu) - 859) = *(void *)(a2 - 7 + v11 + (v10 ^ 0x3DAu) - 859);
  return (*(uint64_t (**)(void))(v9 + 8 * ((119 * ((((4 * a1) ^ 0x33B) & v3) != v11)) ^ v10)))(v5 + (((4 * a1) ^ 0x33B) & v3) - v7);
}

uint64_t sub_1000D54C4@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v4)) = *(unsigned char *)(v3 + (v7 + v4));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v7 - 1 == v2) * v6) ^ v5)))(0);
}

uint64_t sub_1000D54F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, unsigned int a16)
{
  a14 = v16;
  a15 = a11;
  a16 = v19
      + 3804331 * ((884811571 - (&a13 | 0x34BD2733) + (&a13 | 0xCB42D8CC)) ^ 0x31DC2B9A)
      + 93;
  uint64_t v20 = (*(uint64_t (**)(int *))(v18 + 8 * (v19 ^ 0x544)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((1765
                                              * (a13 == ((v17 + ((v19 + 1136568577) & 0x6E8) + 26) ^ (v19 - 1035230179) & 0xBE6))) ^ v19)))(v20);
}

uint64_t sub_1000D55C0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((a1 ^ 0x21u) < 8) ^ (v3 + v1 - 121 - 18)) & 1) * (v1 - 900)) ^ (v1 - 121))))();
}

uint64_t sub_1000D5600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * (int)((((int)a4 + a33 + 56 < ((a3 - 38) ^ 0xFFFFFFE2)) * (((a3 - 43) | 0x23) ^ 0x28)) ^ (a3 + 1255))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_1000D560C@<X0>(unsigned int a1@<W8>)
{
  *(void *)(v1 - 0x2B2B4D831A99DB82) = *v3 + ((v2 + 11) ^ a1) + *(void *)(v4 - 0x65EF48AAD10F5714) + 8;
  return (*(uint64_t (**)(void))(v7 + 8 * (((*v5 != v6) * (((v2 - 501) | 0x200) - 487)) ^ v2)))();
}

uint64_t sub_1000D5678@<X0>(int a1@<W0>, unint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, void *a5@<X6>, unint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v40 = 4 * (a7 + 1 + a4);
  unint64_t v41 = (*(_DWORD *)(a26 + v40) ^ v27) + (a3 ^ HIDWORD(a6)) + v29 * (unint64_t)(*(_DWORD *)(*a5 + v40) ^ v27);
  unint64_t v42 = HIDWORD(v39)
      + v36 * (unint64_t)(*(_DWORD *)(*v37 + v40) ^ v27)
      + ((a1 + v31 + v41 - (v34 & (2 * v41)) - 1576) ^ a2);
  *(_DWORD *)(a26 + 4 * (a7 + a4)) = v42 + v27 - (v28 & (2 * v42));
  BOOL v44 = a7 + v26 > v30 || a7 + v26 < v38;
  return (*(uint64_t (**)(void))(v33 + 8 * ((v44 * v32) ^ v35)))();
}

uint64_t sub_1000D5714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v34 = a9 + 1;
  *(unsigned char *)(a5 + (v34 - 888742414)) = *(unsigned char *)(a31 + a8 + v32)
                                                   - ((v31 + 55) & (2 * *(unsigned char *)(a31 + a8 + v32)))
                                                   + 84;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * ((1424 * ((v34 - 888742413) < 0x40)) ^ v31)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1000D5720@<X0>(int a1@<W3>, _DWORD *a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *int v26 = 854218177;
  uint64_t v28 = 1225351577 * ((0x1E0DC2F2662D7B99 - ((v27 - 144) | 0x1E0DC2F2662D7B99) + a25) ^ 0xC649555BA485C70);
  *(void *)(v27 - 128) = (*a2 - 1875182032) ^ (unint64_t)v28;
  *(void *)(v27 - 112) = v28 ^ 0x50AFD38;
  *(_DWORD *)(v27 - 120) = (a3 + 1796358059) ^ v28;
  *(_DWORD *)(v27 - 116) = (a3 - 1926966970) ^ v28;
  *(_DWORD *)(v27 - 144) = ((a3 + 1796358059) & 0x795C8CBE) - v28;
  *(_DWORD *)(v27 - 136) = v28 + a3 + 1796358059 - 85;
  *(_DWORD *)(v27 - 132) = v28;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (a3 ^ (a1 - 599))))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * *(int *)(v27 - 140)))(v29);
}

uint64_t sub_1000D5828()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 + v0 + (((v2 ^ 0x6B1) + 1257) ^ 0x106205A8u) > 7) * (7 * (v2 ^ 0x6B1) - 1130)) ^ v2)))();
}

uint64_t sub_1000D5888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14, int a15, uint64_t a16, int a17, unint64_t *a18)
{
  unsigned int v21 = 1374699841 * ((&a13 & 0x3FFC14FF | ~(&a13 | 0x3FFC14FF)) ^ 0xADF7F309);
  a16 = a10;
  a15 = v21 ^ 0x715AA819;
  a13 = v21 - 1312069736;
  a18 = &STACK[0x1274B0724696E775];
  a17 = (v20 - 2024874668) ^ v21;
  uint64_t v22 = (*(uint64_t (**)(unsigned int *))(v19 + 8 * (v20 ^ 0xE28u)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a14 == v18) * (v20 - 1383)) ^ v20)))(v22);
}

uint64_t sub_1000D5954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * (((v3 <= v4 - 674797778) * (v4 + 237915194)) ^ (v4 + 237915798))))(a1, a2, a3, 4057052139);
}

uint64_t sub_1000D59A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return sub_1000CA658(a1, a2, a19, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, v36, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000D59B0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v0 == (((v3 ^ 0x416) + 1179860377) & 0xB9ACC7BD ^ (v1 + 1713)))
                                     * (((v3 ^ 0x416) + 416065179) & 0xE7335EBB ^ 0x68C)) ^ v3 ^ 0x416)))();
}

void sub_1000D5A2C(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD *a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v30 = 4 * (v29 - 1812276502);
  unsigned int v31 = -2064566567 * ((*(_DWORD *)(*a25 + (*a24 & 0x20655518)) ^ (a28 + v30)) & 0x7FFFFFFF);
  int v32 = v31 ^ HIWORD(v31);
  unsigned int v33 = -2064566567 * v32;
  *(_DWORD *)(a29 + v30) ^= *(_DWORD *)(a28 + v30) ^ *((_DWORD *)*(&off_100166A10 + a1) + HIBYTE(v33) - 1) ^ *((_DWORD *)*(&off_100166A10 + a1 + 29) + a1 + HIBYTE(v33) - 156) ^ *((_DWORD *)*(&off_100166A10 + (a1 ^ 0xEF)) + HIBYTE(v33) - 1) ^ (920190976 * v32) ^ v33 ^ (-1109235783 * HIBYTE(v33));
  JUMPOUT(0x1000C820CLL);
}

uint64_t sub_1000D5B0C@<X0>(int a1@<W1>, int a2@<W8>)
{
  *int v4 = v4[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v3 + (((a2 ^ 0x539) - 1005) | 0x4A) == 1352758938)
                                * (a1 + (((a2 ^ 0x539) + 137118714) | 0x6020544) + 494)) ^ a2 ^ 0x539)))();
}

uint64_t sub_1000D5B7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v17 = (unsigned int *)(v16 + 4 * v10);
  uint64_t v18 = v10 + 1;
  int v19 = *(_DWORD *)(v16 + 4 * v18);
  unsigned int v20 = a3 ^ ((v19 & 0x7FFFFFFE | v9 & 0x80000000) >> 1);
  *int v17 = v17[397] ^ a6 ^ *(_DWORD *)(v14 + 4 * ((v19 & 1) == 0)) ^ (v20
                                                                    + v13
                                                                    - ((v15 + (v8 ^ a7) * a8 - 363) & (2 * v20)));
  return (*(uint64_t (**)(void))(v12 + 8 * (((v18 == 227) * v11) ^ v8)))();
}

uint64_t sub_1000D5BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((732 * (a19 - 632876696 < ((v21 + v19 + 1020) | 0xC6u) - 1207)) ^ (v21 + v19 + 346))))();
}

uint64_t sub_1000D5C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void, uint64_t))(v12 + 8 * (v11 ^ (1022 * (a8 == 0)))))(a1, a2, a3, a4, a5, a6, a7, 10 * (v11 ^ 0x193u), a9, *(void *)(a1 + 32), a11);
}

void sub_1000D5C8C()
{
  *int v1 = v0 + 101;
  sub_1000E02FC();
}

uint64_t sub_1000D5C98@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((879 * (a1 + 1 == v3 + 16)) ^ a2)))();
}

uint64_t sub_1000D5D74(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((30 * (v6 + 1 != v5 + 24)) ^ a4)))();
}

uint64_t sub_1000D5E20()
{
  return sub_1000D5E28();
}

uint64_t sub_1000D5E28(int8x16_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v35 = *(uint64_t (**)(void))(v27 + 8 * v24);
  unsigned int v36 = *(_DWORD *)(v34 - 144);
  int v38 = *(_DWORD *)(v34 - 140);
  int v37 = *(_DWORD *)(v34 - 136);
  int v39 = *(unsigned char *)(v34 - 124) ^ 0xDB;
  if (v39 == 2)
  {
    int8x16x4_t v59 = vld4q_s8(v26);
    uint8x16_t v48 = (uint8x16_t)veorq_s8(v59.val[1], a1);
    _Q22 = vmovl_u8(*(uint8x8_t *)v48.i8);
    _Q21 = vmovl_high_u8(v48);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    int v53 = (_DWORD *)(v23 + 4 * (v32 + 2107069459));
    int v54 = *(v53 - 8) ^ *(v53 - 3);
    unsigned int v55 = v54 + v31 - ((2 * v54) & 0x87BD3270);
    int v56 = *(v53 - 16) ^ *(v53 - 14);
    HIDWORD(v57) = v56 ^ 0x43DE9938 ^ v55;
    LODWORD(v57) = v56 ^ ~v55;
    *int v53 = (v57 >> 31) + v31 - ((2 * (v57 >> 31)) & 0x87BD3270);
    return (*(uint64_t (**)(void))(v27 + 8 * ((39 * (v33 != 2107069396)) ^ v25)))(v36);
  }
  else if (v39 == 1)
  {
    int8x16x4_t v58 = vld4q_s8(v26);
    uint8x16_t v40 = (uint8x16_t)veorq_s8(v58.val[2], a1);
    _Q26 = vmovl_high_u8(v40);
    _Q25 = vmovl_u8(*(uint8x8_t *)v40.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    return (*(uint64_t (**)(void, uint64_t))(v27 + 8 * ((49 * (a23 + 1 != v33)) ^ (647 * (v30 ^ a14)))))(v36, 1338900407);
  }
  else
  {
    *(_DWORD *)(v34 - 148) = 2 * (*(_DWORD *)(v34 - 148) ^ v29) + v29 - (v28 & (4 * (*(_DWORD *)(v34 - 148) ^ v29)));
    *(_DWORD *)(v34 - 144) = 2 * (v36 ^ v29) + v29 - (v28 & (4 * (v36 ^ v29)));
    *(_DWORD *)(v34 - 140) = 2 * (v38 ^ v29) + v29 - (v28 & (4 * (v38 ^ v29)));
    *(_DWORD *)(v34 - 136) = 2 * (v37 ^ v29) + v29 - (v28 & (4 * (v37 ^ v29)));
    return v35(v36);
  }
}

void sub_1000D6270(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  *(_DWORD *)(v19 - 132) = (v16 ^ v18)
                         + (a16 ^ v18)
                         + v18
                         - (((v17 - a2 + 454) ^ 0x22718576) & (2 * ((v16 ^ v18) + (a16 ^ v18))));
  JUMPOUT(0x1000D62C4);
}

uint64_t sub_1000D6350@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  BOOL v11 = a7 > 0xB11A5BC;
  if (v11 == a1 + 1717149194 < v7 - 185707493) {
    BOOL v11 = a1 + 1717149194 < v10;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v11 * v9) ^ v7)))();
}

uint64_t sub_1000D63BC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((116
                                                       * (v1 < ((v2 + 237915468) ^ 0x792EC81F ^ (v2 + 237916195)))) ^ (v2 + 237915468))))(a1, 4057052139);
}

void sub_1000D6404(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0x1D2C084A1D2C084ALL;
  *(void *)(a1 + 16) = 0x1FE9BF2F2C27ED36;
  *(_DWORD *)(a1 + 24) = -1008821960;
  *(void *)(v2 - 0xB36971A36B56DBCLL) = a1 + 0x65EF48AAD10F5714;
  JUMPOUT(0x1000D1DD8);
}

uint64_t sub_1000D6468(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, int a17, unsigned int a18)
{
  unsigned int v19 = a16 + 2074739260 + ((a3 + 389) | 0x10) + 671;
  BOOL v20 = v19 < 0x8C856A39;
  BOOL v21 = v19 > a18;
  if (a18 < 0x8C856A39 != v20) {
    BOOL v22 = v20;
  }
  else {
    BOOL v22 = v21;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * ((22 * v22) ^ (a3 + 1200))))();
}

uint64_t sub_1000D64DC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((31 * (((187 * (v0 ^ 0x201)) ^ (v3 + 2820)) + v1 >= v0 + 650 + v2)) ^ v0)))();
}

void sub_1000D6524(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x13C73732F4241482) = v1 + 1;
  sub_1000FD190();
}

uint64_t sub_1000D6548()
{
  int v5 = (v3 + 621) | 0x159;
  int v6 = 1734042137 * ((((2 * (v4 - 144)) | 0xE1910BAE) - (v4 - 144) + 255293993) ^ 0xAC06469A);
  *(_DWORD *)(v4 - 120) = v5 - v6 - 659;
  *(_DWORD *)(v4 - 144) = v10 - v6 + 411065625 + v5 - 410;
  *(void *)(v4 - 136) = v8;
  *(void *)(v4 - 128) = v2;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v5 ^ 0x2B0)))(v4 - 144);
  *(_DWORD *)(v9 - 0x78DB05D78770D305) = v10;
  *(_DWORD *)(v0 + 56) = -1008821960;
  return result;
}

uint64_t sub_1000D6638()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((*(_DWORD *)(v2 - 0x65EF48AAD10F5704) == 740814134)
                                     * (((v0 - 371) ^ 0xFFFFFA4A) + (v0 ^ 0x4EF))) ^ v0)))();
}

uint64_t sub_1000D668C(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((a5 - 359) | 0x404) ^ 0x641) * ((a4 + a3 - 2097150959) < 8)) ^ a5)))();
}

uint64_t sub_1000D66DC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((((v3 - 461) | 0x20) ^ v2) * (v1 == 0)) ^ v3)))();
}

void sub_1000D670C()
{
}

uint64_t sub_1000D6788@<X0>(int a1@<W3>, int a2@<W8>)
{
  uint64_t v7 = 4 * (v4 - 1127925597);
  unsigned int v8 = *(_DWORD *)(v5 + 4 * (v4 - 1127925598));
  unsigned int v9 = (((2 * (v8 >> 30)) ^ 0xFFFFFFFD) + ((v8 >> 30) ^ (v3 + 2))) ^ v8;
  int v10 = ((v3 + 1566083941 * v9 - ((-1162799414 * v9) & 0xE54DC456)) ^ *(_DWORD *)(v5 + v7)) - v4;
  *(_DWORD *)(v5 + v7) = v10 - ((2 * v10 - 2039116102) & 0xE54DC456) - 1243502200;
  uint64_t v11 = 1225351577
      * ((2 * ((v6 - 144) & 0x21E688E47F28BDF8) - (v6 - 144) - 0x21E688E47F28BDFBLL) ^ 0x338FDF43A34D9A13);
  *(void *)(v6 - 112) = v11 ^ 0xC99918AALL;
  *(_DWORD *)(v6 - 120) = (a2 + 1501726538) ^ v11;
  *(_DWORD *)(v6 - 116) = (a2 - 1926966970) ^ v11;
  *(_DWORD *)(v6 - 144) = a2 + 1501726538 - v11 + 41;
  *(_DWORD *)(v6 - 136) = ((a2 + 1501726538) ^ 0x46) + v11;
  *(_DWORD *)(v6 - 132) = v11;
  *(void *)(v6 - 128) = (v4 - 2040639154) ^ (unint64_t)v11;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + a2 + 1666)))(v6 - 144);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v6 - 140)))(v12);
}

uint64_t sub_1000D6904@<X0>(int a1@<W4>, uint64_t a2@<X6>, int a3@<W8>)
{
  *(unsigned char *)(v5 + v4) = *(unsigned char *)(a2 + (v3 + v7))
                      - (v6 & (2 * *(unsigned char *)(a2 + (v3 + v7))))
                      + 84;
  return (*(uint64_t (**)(void))(v8 + 8 * ((a1 + a3 + 475) ^ ((v4 == 63) << 10))))();
}

uint64_t sub_1000D6948@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(void *)(v8 + 32);
  uint64_t v4 = *(void *)(v8 + 40);
  uint64_t v5 = (void *)(v2 - 184);
  memset((void *)(v2 - 184), 84, 16);
  int v6 = 235795823 * ((((v2 - 168) | 0x6C9568F5) + (~(v2 - 168) | 0x936A970A)) ^ 0xF83821AD);
  v5[7] = v2 + 0x18C386E3A0648853;
  v5[2] = v3;
  *(_DWORD *)(v2 - 132) = (a1 + 1908) ^ v6;
  *(_DWORD *)(v2 - 160) = v6 + 1944669243;
  v5[4] = v2 - 204;
  v5[5] = v4;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 ^ 0x7F0)))(v2 - 168);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)(v2 - 136);
  return result;
}

uint64_t sub_1000D6A3C(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  unsigned int v9 = v8 - 32;
  uint64_t v10 = v6 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = v7 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v5 + 8 * (((a4 == 32) * a5) ^ (a3 + 282))))();
}

uint64_t sub_1000D6A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v27 = v23 + v22;
  unsigned int v28 = v27 + ((v24 - 239) ^ 0x420615B3);
  if (v28 <= 0x40) {
    unsigned int v28 = 64;
  }
  BOOL v29 = __CFADD__(v27 + 1107693905, a1 - 1107695155 + v25 + v28 + 1249);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((4 * v29) | (8 * v29) | v24)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1000D6AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v23 = *(unsigned __int8 *)(v22 - 124) ^ 0xDB;
  if (v23 == 1)
  {
    char v24 = (v21 + 70) & 0xCF;
    unsigned int v30 = *(_DWORD *)(v22 - 156);
    unsigned int v29 = *(_DWORD *)(v22 - 152);
    *(unsigned char *)(v22 - 164) = ((8 * v29) ^ 0xF0) - 2 * (((8 * v29) ^ 0xF0) & 0xDF ^ (v24 + 59) & (8 * v29)) + 84;
    *(unsigned char *)(v22 - 163) = ((v29 >> 5) ^ 0xA6) - 2 * (((v29 >> 5) ^ 0xA6) & 0x55 ^ ((v29 & 0x20) != 0)) + 84;
    *(unsigned char *)(v22 - 162) = ((v29 >> 13) ^ 0xE0) - 2 * (((v29 >> 13) ^ 0xE0) & 0x57 ^ (v29 >> 13) & 3) + 84;
    char v28 = -88;
    *(unsigned char *)(v22 - 161) = ((v29 >> 21) ^ 0x59) - ((2 * ((v29 >> 21) ^ 0x59)) & 0xA8) + 84;
    HIDWORD(v31) = v30 ^ 3;
    LODWORD(v31) = ~v29;
    *(unsigned char *)(v22 - 160) = (v31 >> 29) - ((2 * (v31 >> 29)) & 0xA8) + 84;
    *(unsigned char *)(v22 - 159) = ((v30 >> 5) ^ 0x48) - 2 * (((v30 >> 5) ^ 0x48) & 0x56 ^ (v30 >> 5) & 2) + 84;
    *(unsigned char *)(v22 - 158) = ((v30 >> 13) ^ 0x41) + (~(2 * ((v30 >> 13) ^ 0x41)) | 0x57) + 85;
    unsigned int v27 = (v30 >> 21) ^ 0xFFFFFFD7;
    goto LABEL_5;
  }
  if (v23 == 2)
  {
    char v24 = (v21 + 24) & 0xFD;
    unsigned int v27 = *(_DWORD *)(v22 - 156);
    unsigned int v25 = *(_DWORD *)(v22 - 152);
    *(unsigned char *)(v22 - 164) = ((v27 >> 21) ^ 0xD7) - ((v24 ^ 0x65) & (2 * ((v27 >> 21) ^ 0xD7))) + 84;
    *(unsigned char *)(v22 - 163) = ((v27 >> 13) ^ 0x41) - 2 * (((v27 >> 13) ^ 0x41) & 0x5C ^ (v27 >> 13) & 8) + 84;
    *(unsigned char *)(v22 - 162) = ((v27 >> 5) ^ 0x48) - 2 * (((v27 >> 5) ^ 0x48) & 0x57 ^ (v27 >> 5) & 3) + 84;
    HIDWORD(v26) = v27 ^ 3;
    LODWORD(v26) = ~v25;
    *(unsigned char *)(v22 - 161) = (v26 >> 29) - ((2 * (v26 >> 29)) & 0xA8) + 84;
    *(unsigned char *)(v22 - 160) = ((v25 >> 21) ^ 0x59) + ~(2 * (((v25 >> 21) ^ 0x59) & 0x56 ^ (v25 >> 21) & 2)) + 85;
    *(unsigned char *)(v22 - 159) = ((v25 >> 13) ^ 0xE0) - 2 * (((v25 >> 13) ^ 0xE0) & 0x5C ^ (v25 >> 13) & 8) + 84;
    *(unsigned char *)(v22 - 158) = ((v25 >> 5) ^ 0xA6) - 2 * (((v25 >> 5) ^ 0xA6) & 0x55 ^ ((v25 & 0x20) != 0)) + 84;
    LOBYTE(v27) = (8 * v25) ^ 0xF0;
    char v28 = -96;
LABEL_5:
    *(unsigned char *)(v22 - 157) = v27 - (((_BYTE)v27 << (((v24 + 42) & 0xBF) + 74)) & v28) + 84;
  }
  return sub_1000C9DBC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

uint64_t sub_1000D6D60(char a1, char a2, int a3, uint64_t a4, int a5, int8x16_t a6, int8x8_t a7, int8x8_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v72 = a5 - 8;
  uint64_t v73 = (a3 + v72 + 8);
  v75.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)v72 + 8) & 0xF;
  v75.val[0].i64[1] = (v69 + (_BYTE)v72 + 8) & 0xF;
  v75.val[1].i64[0] = (v68 + (_BYTE)v72 + 8) & 0xF;
  v75.val[1].i64[1] = (v65 + (_BYTE)v72 + 3 * v70 + 8) & 0xF;
  v75.val[2].i64[0] = (v67 + (_BYTE)v72 + 8) & 0xF;
  v75.val[2].i64[1] = (v66 + (_BYTE)v72 + 8) & 0xF;
  v75.val[3].i64[0] = (a2 + (_BYTE)v72 + 8) & 0xF;
  v75.val[3].i64[1] = (a1 + (_BYTE)v72 + 8) & 0xF;
  *(int8x8_t *)(a4 + v73) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a4 + v73), *(int8x8_t *)(v62 + (v73 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v64 + (v73 & 0xF) - 7), *(int8x8_t *)(v63 + (v73 & 0xF) - 7)))), a8), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v75, a6), a7)));
  return (*(uint64_t (**)(void))(a62 + 8 * ((83 * (*(_DWORD *)(v71 - 128) == v72)) ^ a11)))();
}

void sub_1000D6D68()
{
  *int v0 = v1;
}

uint64_t sub_1000D6DA8()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((37 * ((v2 + v1 + 136315048) < 8)) ^ 0x587)))();
}

void sub_1000D6E18(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 40) - 0x1274B0724696E775) = a1;
  JUMPOUT(0x1000D653CLL);
}

uint64_t sub_1000D6E34@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>)
{
  int v10 = a2 - 1;
  unsigned int v11 = v6 ^ (v4 + 566) ^ *(_DWORD *)(*(void *)(v9 - 0x774B811B42847B1FLL) + 4 * (a2 + v7));
  *(_DWORD *)(*(void *)(v9 - 0x774B811B42847B1FLL) + 4 * (a3 + v3)) = ((v11 >> (32 - v5)) | a1 ^ v4)
                                                                        + v4
                                                                        - ((2 * ((v11 >> (32 - v5)) | a1 ^ v4)) & 0x4C1AB590);
  return (*(uint64_t (**)(void))(v8 + 8 * ((1037 * (v10 + v7 >= 0)) | (v6 - 900))))();
}

uint64_t sub_1000D6EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 *a9)
{
  int v12 = a9[3] ^ 0x54;
  int v13 = ((*a9 ^ 0x54) << 24) | ((a9[1] ^ 0x54) << 16) | ((a9[2] ^ 0x54) << 8) | v12;
  *(_DWORD *)(*(void *)(v10 + 8) - 0x13C73732F4241482) = v13
                                                           + v11
                                                           - 2 * (v13 & ((v9 + 1417) ^ 0x43DE9EB1) ^ v12 & 6);
  return sub_1000D6F54();
}

void sub_1000D6F54()
{
  *(_DWORD *)(v1 + 4) = v0;
}

uint64_t sub_1000D6F90()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(void *)(*(void *)(v2 + 8 * (v1 ^ 0x47B)) - 4) == 0)
                                * (((v1 - 1048) | 0x203) ^ 0x2C7)) ^ v1)))();
}

uint64_t sub_1000D6FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  *int v37 = -6.6109e30;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (v35 ^ 0x79F)))(a35);
  __n128 v39 = (__n128)vld1q_dup_f32(v37);
  v40.n128_u64[0] = 0x8000000080000000;
  v40.n128_u64[1] = 0x8000000080000000;
  return sub_1000D707C(v38, v39, (__n128)vdupq_n_s32(0x7FFFFFFEu), (__n128)vdupq_n_s32(0x39537115u), (__n128)vdupq_n_s32(0xE54DC456), (__n128)vdupq_n_s32(0x72A6E22Bu), v40, (__n128)vdupq_n_s32(0x4E7C3352u));
}

uint64_t sub_1000D707C@<X0>(int a1@<W8>, int8x16_t a2@<Q0>, int8x16_t a3@<Q1>, int8x16_t a4@<Q2>, int8x16_t a5@<Q3>, int32x4_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int8x16_t a9@<Q7>)
{
  uint64_t v13 = 4 * v9;
  uint64_t v14 = v12 + 4 * v9;
  uint64_t v15 = v9 + 4;
  a9.i32[0] = *(_DWORD *)(v12 + (v13 | 4));
  a9.i32[1] = *(_DWORD *)(v12 + (v13 | 8));
  a9.i32[2] = *(_DWORD *)(v12 + (v13 | 0xC));
  int8x16_t v16 = vextq_s8(a2, a9, 0xCuLL);
  int8x16_t v17 = a9;
  v17.i32[3] = *(_DWORD *)(v12 + 4 * v15);
  int32x4_t v18 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v17, a3), vandq_s8(v16, a7)), 1uLL), a4);
  v19.i32[0] = *(_DWORD *)(v10 + 4 * ((*(_DWORD *)(v12 + (v13 | 4)) & 1) == 0));
  v19.i32[1] = *(_DWORD *)(v10 + 4 * ((*(_DWORD *)(v12 + (v13 | 8)) & 1) == 0));
  v19.i32[2] = *(_DWORD *)(v10 + 4 * (~*(_DWORD *)(v12 + (v13 | 0xC)) & 1));
  v19.i32[3] = *(_DWORD *)(v10 + 4 * ((v17.i8[12] & 1) == 0));
  *(int8x16_t *)uint64_t v14 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v14 + 1588), v19), a8), (int8x16_t)vaddq_s32(vsubq_s32(v18, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v18, v18), a5)), a6));
  return (*(uint64_t (**)(void))(v11 + 8 * (((2 * (v15 != 224)) | (16 * (v15 != 224))) ^ a1)))();
}

uint64_t sub_1000D7154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(_DWORD *)(v28 - 120) = v23 + (((~(v28 - 120) & 0xC5E51D1E) - (~(v28 - 120) | 0xC5E51D1F)) ^ 0x51485446) * v25 + 621;
  *(void *)(v28 - 112) = v27;
  *(void *)(v28 - 104) = a23;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v23 + 1285)))(v28 - 120);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((469
                                              * (*(_DWORD *)(v28 - 116) == ((v23 - 343124503) & 0x1473A7C9 ^ (v26 + 1089)))) ^ v23)))(v29);
}

uint64_t sub_1000D71F4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((186 * (v2 ^ 0xFC) - 292) * (v0 == 860795972)) ^ v2)))();
}

uint64_t sub_1000D7230@<X0>(uint64_t a1@<X8>, int a2)
{
  *(_DWORD *)(a1 - 0x72E2FEF5BF4EA162) = a2;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((*v3 == 0x716C65CCC677F525)
                                     * ((((((v2 ^ 0x177) + 348852114) & 0xEB34EBF5) + 799653634) & 0xD0563FEF) - 140)) ^ ((v2 ^ 0x177) + 348852114) & 0xEB34EBF5)))();
}

uint64_t sub_1000D72BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))(v68 + 7200))(a1, a2, a3, a4, 2929871293, 2884394087, 2147483652, 1990090206, &a68, a10);
}

uint64_t sub_1000D73FC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((11 * ((v1 | 0x108) ^ 0x74A)) ^ 0x2F0) * (v0 == v3)) ^ (v1 | 0x108))))();
}

uint64_t sub_1000D7438()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((11 * ((((v2 - 700) | 0x602) ^ (v3 - 1564)) + v1 >= 0x7FFFFFFD)) | v2)))();
}

uint64_t sub_1000D747C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((1843
                                * (*(_DWORD *)(a16 + 4 * (v18 + v19 + 5 * (v16 ^ 0x679u))) == (v16 ^ 0x49B ^ (v17 - 520)))) ^ (v16 - 1148))))();
}

uint64_t sub_1000D74D0@<X0>(int a1@<W0>, uint64_t a2@<X6>, int a3@<W8>)
{
  BOOL v10 = v4 < v6;
  *(unsigned char *)(v9 - 252 + (a3 - 1929924193)) = *(unsigned char *)(a2 + (v3 + v5))
                                                         - ((15 * (v7 ^ 0xE2) - 118) & (2
                                                                                      * *(unsigned char *)(a2
                                                                                                 + (v3 + v5))))
                                                         + 84;
  unsigned int v11 = v3 + 1 + a1;
  int v12 = v10 ^ (v11 < v6);
  BOOL v13 = v11 < v4;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((480 * v10) ^ v7)))();
}

uint64_t sub_1000D7554(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48)
{
  if (v48 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8 * (((a48 != 891668432) * (a3 + 644)) ^ (a3 + 123))))(a1, a14);
  }
  if (v48 != 1) {
    JUMPOUT(0x1000D7688);
  }
  return (*(uint64_t (**)(uint64_t))(v49
                                            + 8
                                            * (((2 * (((a48 == 891668432) ^ ((a3 ^ 0x85) + 1)) & 1)) & 0xFB | (4 * (((a48 == 891668432) ^ ((a3 ^ 0x85) + 1)) & 1))) ^ (a3 + 123))))(a14);
}

uint64_t sub_1000D76B8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((4 * (v4 + 1 == v6 + 24)) | (8 * (v4 + 1 == v6 + 24))) ^ a4)))();
}

uint64_t sub_1000D7780(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((200 * (a6 + 1 != v7 + 48)) ^ a1)))();
}

uint64_t sub_1000D7868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((*(_DWORD *)(*(void *)(a1 + 16) + v4) != (((v2 ^ 0x41F) - 1617) | 0xB3) + v3)
                                * ((v2 ^ 0x41F) - 1567)) ^ v2 ^ 0x41F)))();
}

uint64_t sub_1000D78AC(uint64_t a1)
{
  if (!(*(unsigned int (**)(uint64_t, void))(v2 + 8 * ((v3 ^ 0x3DD) + 371)))(a1, 0))
  {
    *int v1 = a1;
    JUMPOUT(0x1000D7918);
  }
  return sub_1000D78FC();
}

uint64_t sub_1000D78FC()
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v3 ^ 0x15E)))(v1);
  *(_DWORD *)(v0 + 12) = v2 - 1500681267;
  return result;
}

uint64_t sub_1000D7940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  unsigned int v30 = v26 + 74940422;
  if (v30 <= 0x40) {
    unsigned int v30 = 64;
  }
  return (*(uint64_t (**)(void))(v29 + 8 * (a26 ^ (8 * (a6 - v27 - v28 + v30 < 0xF)))))();
}

uint64_t sub_1000D79BC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22)
{
  if (a22 < 0x94A79941 != a18 + 1165635189 < (a1 ^ 0x94A79ED2)) {
    BOOL v24 = a18 + 1165635189 < (a1 ^ 0x94A79ED2);
  }
  else {
    BOOL v24 = a18 + 1165635189 > a22;
  }
  return (*(uint64_t (**)(void))(v22 + 8 * ((a5 + v23 + 1196) ^ (2 * (((a5 + v23 + 68) ^ v24) & 1)))))();
}

uint64_t sub_1000D79C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,long long a51)
{
  unint64_t v56 = *v51;
  memset(&a51, 84, sizeof(a51));
  int v57 = 235795823 * ((1465197097 - ((v55 - 168) | 0x57552229) + ((v55 - 168) | 0xA8AADDD6)) ^ 0x3C07948F);
  STACK[0x370] = v56;
  STACK[0x380] = (unint64_t)&STACK[0x18C386E3A0648A5B];
  *(_DWORD *)(v55 - 160) = v57 + 1944669243;
  *(_DWORD *)(v55 - 132) = (v52 + 1809) ^ v57;
  STACK[0x358] = (unint64_t)&a49;
  STACK[0x368] = v55 - 188;
  uint64_t v58 = (*(uint64_t (**)(uint64_t))(v53 + 8 * (v52 + 1901)))(v55 - 168);
  return (*(uint64_t (**)(uint64_t))(v53
                                            + 8
                                            * (((*(_DWORD *)(v55 - 136) == ((v52 + 983832716) & 0xC55BE73F ^ (v54 - 49)))
                                              * ((v52 + 664) ^ 0x423)) ^ v52)))(v58);
}

uint64_t sub_1000D7AF4(uint64_t result)
{
  return sub_1000D9284(result);
}

uint64_t sub_1000D7B3C(int a1, int a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + (v6 + v5)) = *(void *)(a3 + (v6 + v5));
  return (*(uint64_t (**)(void))(v4 + 8 * (a1 ^ (16 * (a2 == 0)))))();
}

uint64_t sub_1000D7B68()
{
  unsigned int v3 = v1 - ((2 * v1 + 1142163834) & 0xEA45D9AE) + 388821396;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((945
                                * ((v3 ^ (v2 + 756930121) & 0xD2E22E71 ^ (v2 - 1751758319) & 0x6869B5EE ^ 0x98CFDE33)
                                 + 2002779903
                                 + ((2 * v3) & 0xDBDA6A46 ^ 0xCA404806) == 1699558434)) ^ (v2 - 11))))();
}

uint64_t sub_1000D7C28()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v0) == v0)
                                * (((2 * v2) ^ 0x570) + 959)) ^ v2)))();
}

uint64_t sub_1000D7C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  *(_DWORD *)(v33 - 128) = v31
                         - 235795823
                         * ((2 * (((v33 - 144) ^ 0x73895C5) & 0x46C3A981) - ((v33 - 144) ^ 0x73895C5) + 960255612) ^ 0xAAA98AE0)
                         + 142;
  *(void *)(v33 - 144) = v32;
  *(void *)(v33 - 136) = v30;
  (*(void (**)(uint64_t))(v29 + 8 * (v31 ^ 0x9AA)))(v33 - 144);
  *(_DWORD *)(v33 - 112) = (v31 + 1469) ^ (1755732067
                                         * ((-578105421 - ((v33 - 144) | 0xDD8ACFB3) + ((v33 - 144) | 0x2275304C)) ^ 0xFCB38D97));
  *(void *)(v33 - 128) = a26;
  *(void *)(v33 - 120) = v32;
  *(void *)(v33 - 144) = v32;
  *(void *)(v33 - 136) = v30;
  *(void *)(v33 - 104) = a29;
  (*(void (**)(uint64_t))(v29 + 8 * (v31 ^ 0x604)))(v33 - 144);
  *(void *)(v33 - 128) = a26;
  *(void *)(v33 - 120) = a21;
  *(void *)(v33 - 104) = v32;
  *(_DWORD *)(v33 - 112) = (v31 + 1469) ^ (1755732067
                                         * ((((v33 - 144) ^ 0x88E45E9D | 0x3F0CA017)
                                           - ((v33 - 144) ^ 0x88E45E9D)
                                           + (((v33 - 144) ^ 0x88E45E9D) & 0xC0F35FE8)) ^ 0x692E4351));
  *(void *)(v33 - 144) = v32;
  *(void *)(v33 - 136) = v30;
  (*(void (**)(uint64_t))(v29 + 8 * (v31 ^ 0x604)))(v33 - 144);
  *(_DWORD *)(v33 - 144) = v31
                         - 1178560073 * ((v33 + 764086285 - 2 * ((v33 - 144) & 0x2D8B089D)) ^ 0x7E32566)
                         + 426522580;
  *(void *)(v33 - 136) = v32;
  *(void *)(v33 - 128) = a27;
  (*(void (**)(uint64_t))(v29 + 8 * (v31 ^ 0x994)))(v33 - 144);
  *(_DWORD *)(v33 - 128) = v31
                         - 235795823 * (((v33 - 144) & 0x9278D866 | ~((v33 - 144) | 0x9278D866)) ^ 0xF92A6EC0)
                         + 142;
  *(void *)(v33 - 144) = v32;
  *(void *)(v33 - 136) = a20;
  (*(void (**)(uint64_t))(v29 + 8 * (v31 ^ 0x9AA)))(v33 - 144);
  *(_DWORD *)(v33 - 128) = v31 + 1374699841 * ((v33 + 754788994 - 2 * ((v33 - 144) & 0x2CFD2B12)) ^ 0x4109331B) + 1263;
  *(void *)(v33 - 144) = a20;
  *(void *)(v33 - 136) = v32;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v31 ^ 0x60F)))(v33 - 144);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * (((a25 != 0) * (v31 - 352)) ^ (v31 + 1406))))(v34);
}

uint64_t sub_1000D7CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((1773 * (v36 == 1993658062)) ^ 0x2E3)))(a1, 4057052139, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000D7CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22)
{
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * ((((287 * (a22 ^ 0x399)) ^ 0x210) * ((v23 + v22 - 1585970011) < 8)) ^ a22)))();
}

uint64_t sub_1000D7D64(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((290
                                * ((v2 & (2 * (*(unsigned __int8 *)(v3 + 6) - 1)))
                                 + ((a1 - 907) ^ (v1 - 227) ^ (*(unsigned __int8 *)(v3 + 6) - 1)) == v1)) ^ a1)))();
}

uint64_t sub_1000D7DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v16 = a14 - 715496183;
  if (a14 - 715496183 < 0) {
    int v16 = 715496183 - a14;
  }
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * (int)((((int)((v16 ^ 0xFEB7BBFF)
                                            + ((v16 << ((v15 - 105) & 0x77 ^ 0x57)) & 0xFD6F77FE)
                                            + 21513216) >= 0)
                                     * (((((v15 + 1276390295) & 0xB3EBD777) - 1109) | 0xC) ^ 0x2A8)) ^ (v15 + 1276390295) & 0xB3EBD777)))();
}

uint64_t sub_1000D7E60()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 == 0x98C58D415D59A09) * (v1 ^ 0x6E0 ^ ((v1 - 1246) | 0x380))) ^ v1)))();
}

uint64_t sub_1000D7EA4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((a1 + 495) ^ (118 * (v1 <= a1 - 1228)))))(2199718578);
}

uint64_t sub_1000D7F98(unsigned int a1)
{
  BOOL v4 = v2 + v1 + 63 < v1 - 366422958 + ((a1 - 274073824) & 0xC6A9C1EE);
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((a1 + 86) ^ v4) & 1 | (4 * (((a1 + 86) ^ v4) & 1))) ^ a1)))();
}

uint64_t sub_1000D7FFC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v21 = 460628867 * ((1960984416 - ((v20 - 144) | 0x74E23F60) + ((v20 - 144) | 0x8B1DC09F)) ^ 0xC78B42E2);
  *(void *)(v20 - 136) = a16;
  *(_DWORD *)(v20 - 128) = v21 + v19 - 1248;
  *(_DWORD *)(v20 - 144) = a1 + v21;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v19 + 443)))(v20 - 144);
  return (*(uint64_t (**)(uint64_t))(a18
                                            + 8
                                            * (((*(_DWORD *)(v20 - 140) == -1022760981)
                                              * ((((v19 - 1065) | 0xE0) + 493) ^ 0x462)) ^ v19)))(v22);
}

uint64_t sub_1000D80B0(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((a1 + 1840414623) & 0x924D7FBB) + 375) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1000D80F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20 + 8 * (((a19 == 1936793803) * (269 * (v19 ^ 0x1D5) + 234)) ^ v19)))();
}

uint64_t sub_1000D8140(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6)
{
  BOOL v9 = a5 < v6;
  if (v9 == v8 + a1 < v6) {
    BOOL v9 = a5 > v8 + a1;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((((a6 + 705) ^ 0x700) * !v9) ^ a6)))();
}

uint64_t sub_1000D8188@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, int a5@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 8) + (a4 + a5)) = (a3 ^ v7) >> v8;
  return (*(uint64_t (**)(void))(v5 + 8 * (a2 ^ (38 * (a4 - 1 != v6)))))();
}

uint64_t sub_1000D81C8()
{
  int v3 = 1430992366 - v1;
  if (v1 + 1431987465 <= (int)(v2 ^ 0xFFFFFC5E)) {
    int v3 = v1;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((713 * (v3 + (((v2 ^ 0x738) + 170) ^ 0x1D4) - 715497359 >= 0)) ^ v2 ^ 0x738)))();
}

void sub_1000D8264(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)(v15 - 128) = a13;
  *(void *)(v15 - 120) = a6;
  *(void *)(v15 - 104) = a15;
  *(_DWORD *)(v15 - 112) = (a1 + 1472) ^ (1755732067
                                        * ((((v15 - 144) | 0x4C6AF609) - (v15 - 144) + ((v15 - 144) & 0xB39509F0)) ^ 0x92AC4BD2));
  JUMPOUT(0x1000D82C4);
}

uint64_t sub_1000D82D4(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (int)((((a1 + 369) ^ 0x75B ^ (a1 + 1564498814) & 0xA2BFA6D9) * (v1 != v2)) ^ a1)))();
}

uint64_t sub_1000D8318(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v9 = *(unsigned __int8 *)(v4 + v7 - 0x2AB8BA7DA8A73E8BLL)
     - (*(unsigned __int8 *)(v5 + v7 - 0x2AB8BA7DA8A73E8BLL) ^ ((v6 + 57) | 0x46) ^ 0x8A);
  return (*(uint64_t (**)(void))(v8 + 8 * ((1548 * (((2 * v9) & 0xD1FA3FF4) + (v9 ^ a4) == a4)) ^ v6)))();
}

uint64_t sub_1000D8390@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, uint64_t a7)
{
  a6 = a1;
  a7 = a3;
  a4 = (v9 + 1299) ^ (1374699841
                    * ((((&a4 | 0x43707DD0) ^ 0xFFFFFFFE) - (~&a4 | 0xBC8F822F)) ^ 0xD17B9A26));
  uint64_t v10 = (*(uint64_t (**)(unsigned int *))(v8 + 8 * (v9 ^ 0x59F)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * (int)(((a5 == v7 + ((v9 - 1692210813) & 0x64DD15EB) - 491)
                                                   * (((v9 + 615061871) & 0xDB56E5FF) - 267)) ^ v9)))(v10);
}

uint64_t sub_1000D8458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v12 = *(_DWORD *)(v11 - 220 + ((v8 + v5) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a4 + (v8 + v5)) = v12 ^ 0x34;
  *(unsigned char *)(a4 + (v8 + v5 + 1)) = (BYTE1(v12) ^ 0x3D)
                                               - ((((v12 >> 8) ^ 0x3D) << (v6 ^ (v10 - 82) ^ 0xB6)) & 0xA8)
                                               + 84;
  *(unsigned char *)(a4 + (v8 + v5 + 2)) = (BYTE2(v12) ^ 0xDE) - ((2 * (BYTE2(v12) ^ 0xDE)) & 0xA8) + 84;
  *(unsigned char *)(a4 + (v8 + v5 + 3)) = (HIBYTE(v12) ^ 0xB6) - ((2 * (HIBYTE(v12) ^ 0xB6)) & 0xA8) + 84;
  unsigned int v13 = *(_DWORD *)(v11 - 128) - 1143235740;
  BOOL v14 = v13 < v4;
  BOOL v15 = v8 - 2060133102 < v13;
  if (v8 - 2060133102 < v4 != v14) {
    BOOL v15 = v14;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v15 * v7) ^ v6)))();
}

uint64_t sub_1000D853C(uint64_t a1, int a2)
{
  *uint64_t v3 = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * a2) ^ v2)))();
}

uint64_t sub_1000D8560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v17 - 128) = v15 + ((v17 + 1262313779 - 2 * ((v17 - 128) & 0x4B3D61B3)) ^ 0xDF9028EA) * v12 + 963;
  *(void *)(v17 - 120) = v16;
  *(void *)(v17 - 112) = a12;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v15 | 0x65B)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8 * ((14 * (*(_DWORD *)(v17 - 124) == v14 + v15 + 271 + 366)) | v15)))(v18);
}

void sub_1000D85F0()
{
  *(_DWORD *)(v0 + 4) = 1008845312;
}

uint64_t sub_1000D85FC(int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * ((7
                                             * (((a1 + 6) ^ (a4 < ((a1 - 250 - v5 - 1332) ^ 0x4BCB13BEu))) & 1)) ^ (a1 - 250))))((a1 - 250) ^ 0x49Au);
}

uint64_t sub_1000D8648@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v14 = a1 - 936;
  BOOL v15 = v13 > v6;
  uint64_t v16 = 4 * (v10 + v7);
  int v17 = v2 - 1893215876 + (*(_DWORD *)(*(void *)(v12 - 0x774B811B42847B1FLL) + v16) ^ v8);
  *(_DWORD *)(*(void *)(a2 - 0x774B811B42847B1FLL) + v16) = v17 + v8 - (v11 & (2 * v17));
  LODWORD(v16) = v3 + v10 + 762;
  int v18 = v15 ^ ((int)v16 < v4);
  BOOL v19 = (int)v16 < v5;
  if (!v18) {
    BOOL v15 = v19;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((1777 * v15) ^ v14)))();
}

uint64_t sub_1000D873C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10 = *(_DWORD *)(a8 + 72) == (((v8 - 437) | 0x401) ^ 0x765C29CF) + ((v8 - 4592250) & 0xE7DFDDFB);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (((16 * v10) | (v10 << 10)) ^ (v8 + 67))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1000D87B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(*(void *)(a8 + 96) + 1568) = 1;
  return (*(uint64_t (**)(void))(v9 + 8 * (((*(_DWORD *)(a8 + 72) == a6) * ((v8 - a5) ^ (v10 - 885))) ^ v8)))();
}

uint64_t sub_1000D87E8@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  int v7 = *(_DWORD *)((char *)&STACK[0x250] + ((v5 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v5 + a2)) = ((((8 * v3) ^ 0x68) - 90) ^ HIBYTE(v7))
                                           - ((2 * ((((8 * v3) ^ 0x68) - 90) ^ HIBYTE(v7))) & 0xA8)
                                           + 84;
  *(unsigned char *)(a1 + (v5 + a2 + 2)) = (BYTE1(v7) ^ 0x3D) - ((2 * (BYTE1(v7) ^ 0x3D)) & 0xA8) + 84;
  *(unsigned char *)(a1 + (v5 + a2 + 1)) = (BYTE2(v7) ^ 0xDE)
                                               + ~(2 * ((BYTE2(v7) ^ 0xDE) & 0x55 ^ BYTE2(v7) & 1))
                                               + 85;
  *(unsigned char *)(a1 + (v5 + a2 + 3)) = v7 ^ 0x34;
  unsigned int v8 = LODWORD(STACK[0x2AC]) + 1931422236;
  BOOL v9 = v8 < v2;
  BOOL v10 = v5 - 1882064650 < v8;
  if (v5 - 1882064650 < v2 != v9) {
    BOOL v10 = v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v10 * v4) ^ v3)))();
}

uint64_t sub_1000D88D4()
{
  *(void *)(v5 - 120) = v0;
  *(_DWORD *)(v5 - 128) = (v3 + 374) ^ (1734042137
                                      * ((((v5 - 136) | 0xBCC2232B) - ((v5 - 136) & 0xBCC2232B)) ^ 0xE00CE066));
  *(void *)(v5 - 136) = v4;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * ((v3 - 50) ^ 0x707)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)(((v2 != 1239260143) * (((v3 + 1986595763) & 0x8996F76A) - 596)) ^ (v3 - 50))))(v6);
}

uint64_t sub_1000D89F4(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, int8x16_t a5, int32x4_t a6, int8x16_t a7, int8x16_t a8)
{
  a8.i64[0] = *(void *)(v13 + 4);
  a8.i32[2] = *(_DWORD *)(v13 + 12);
  int8x16_t v15 = vextq_s8(a1, a8, 0xCuLL);
  int8x16_t v16 = a8;
  v16.i32[3] = *(_DWORD *)(v13 + 16);
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, a3), vandq_s8(v15, a2)), 1uLL), a4);
  v18.i32[0] = *(_DWORD *)(v9 + 4 * (*(_DWORD *)(v13 + 4) & v12 ^ 1));
  v18.i32[1] = *(_DWORD *)(v9 + 4 * ((*(_DWORD *)(v13 + 8) & 1) == 0));
  v18.i32[2] = *(_DWORD *)(v9 + 4 * (~*(_DWORD *)(v13 + 12) & 1));
  v18.i32[3] = *(_DWORD *)(v9 + 4 * ((v16.i8[12] & 1) == 0));
  *(int8x16_t *)uint64_t v13 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v13 - 908), v18), a7), (int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), a5)), a6));
  return (*(uint64_t (**)(void))(v14 + 8 * (((v11 != 4) * v8) ^ v10)))();
}

uint64_t sub_1000D8A00()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((52
                                * (v1 & ~((v0 - 890) ^ (v0 + 696) ^ ((*(unsigned char *)(v3 - 0x65EF48AAD10F5700) & 1) == 0)))) ^ v0)))();
}

uint64_t sub_1000D8A48(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((358
                                * ((((*(unsigned __int8 *)(a2 + 6) - 44) << (a3 + (v5 ^ (v3 + 90)) + 91)) & v7)
                                 + ((*(unsigned __int8 *)(a2 + 6) - 44) ^ v6) == v6)) ^ v5)))();
}

uint64_t sub_1000D8A94(int a1, char a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  *(_DWORD *)(v66 - 160) = v59;
  *(void *)(v66 - 136) = v65 - 7;
  *(void *)(v66 - 128) = v60 - 7;
  *(_DWORD *)(v66 - 148) = a1 & 0xFFFFFFF8;
  *(_DWORD *)(v66 - 144) = a1;
  *(_DWORD *)(v66 - 140) = -(a1 & 0xFFFFFFF8);
  int v67 = -8 - a5;
  char v68 = a4 + a3 + a2;
  uint64_t v69 = (a4 + a3 - 0x7FFFFFFF + v67 + 8);
  v71.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)a3 + 1 + (_BYTE)v67 + 8) & 0xF;
  v71.val[0].i64[1] = (v68 + 14 + (_BYTE)v67 + 8) & 0xF;
  v71.val[1].i64[0] = (v68 + 13 + (_BYTE)v67 + 8) & 0xF;
  v71.val[1].i64[1] = (v64 + (_BYTE)v67 + 8) & 0xF;
  v71.val[2].i64[0] = (v68 + 27 + (_BYTE)v67 + 8) & 0xF;
  v71.val[2].i64[1] = (v68 + 26 + (_BYTE)v67 + 8) & 0xF;
  v71.val[3].i64[0] = (v68 + 25 + (_BYTE)v67 + 8) & 0xF;
  v71.val[3].i64[1] = (v68 + (_BYTE)v67 + (((_BYTE)a8 - 18) & 0xD8) + 8) & 0xF;
  *(int8x8_t *)(*(void *)(v66 - 136) + v69) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v61 + (v69 & 0xF) - 7), *(int8x8_t *)(*(void *)(v66 - 128) + v69)), veor_s8(*(int8x8_t *)(v63 + (v69 & 0xF) - 7), *(int8x8_t *)((v69 & 0xF) + v62 - 5))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v71, (int8x16_t)xmmword_100123EC0), (int8x8_t)0xA3A3A3A3A3A3A3A3)));
  return (*(uint64_t (**)(__n128))(a59 + 8 * ((1493 * (*(_DWORD *)(v66 - 140) == v67)) ^ a8)))((__n128)xmmword_100123EC0);
}

uint64_t sub_1000D8C0C(double a1)
{
  *uint64_t v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

uint64_t sub_1000D8C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  int v37 = 535753261 * ((2 * ((v36 - 128) & 0x6FA83390) - (v36 - 128) + 274189419) ^ 0x1AA3C244);
  *(void *)(v36 - 128) = a11;
  *(_DWORD *)(v36 - 120) = a13 - v37 - 1269911807;
  *(_DWORD *)(v36 - 116) = (v34 + 53) ^ v37;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v34 ^ 0x7DD)))(v36 - 128);
  uint64_t v39 = a34 & 0x3F;
  *(&a25 + (v39 ^ 0x1E)) = -44;
  return (*(uint64_t (**)(uint64_t))(v35
                                            + 8
                                            * ((((v39 ^ 0x1E) > 0x37) * (((v34 + 533) | 0x100) ^ 0x617)) ^ v34)))(v38);
}

uint64_t sub_1000D8D38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  unint64_t v9 = v5 + v7;
  *(unsigned char *)(v9 + a5 - 1) = a4;
  return (*(uint64_t (**)(void))(v8 + 8 * (int)(((v9 < 0x40) | (16 * (v9 < 0x40))) ^ (v6 + 147278554) & 0xF738B7AF)))();
}

uint64_t sub_1000D8D84()
{
  unint64_t v5 = ((v3 - 1151) ^ 0xD5A87B6F883D89C6) + v2;
  int v6 = (v1 < v0) ^ (v5 < v0);
  BOOL v7 = v5 < v1;
  if (v6) {
    BOOL v7 = v1 < v0;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((8 * v7) | (32 * v7) | v3)))();
}

uint64_t sub_1000D8DF0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((57 * ((v1 - 3276994) & 0x4FFFFFF7 ^ (v3 - 3)) + 798)
                                              * (a1 == 1576401739)) ^ v1)))(4294925278);
}

uint64_t sub_1000D8E44(uint64_t a1, uint64_t a2, int a3)
{
  v9.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v9.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  uint64_t v10 = v5 + v6 + v7 + ((a3 - 1) ^ 0x128u);
  int8x16_t v11 = *(int8x16_t *)(v3 + v10 - 15);
  int8x16_t v12 = *(int8x16_t *)(v3 + v10 - 31);
  uint64_t v13 = a1 + v10;
  *(int8x16_t *)(v13 - 15) = vaddq_s8(v11, v9);
  *(int8x16_t *)(v13 - 31) = vaddq_s8(v12, v9);
  return (*(uint64_t (**)(void))(v8 + 8 * ((7 * (((a3 - 996) & v4) != 32)) ^ (a3 - 1))))();
}

uint64_t sub_1000D8EB4@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t v6 = a2 + ((v2 - 1947541266) & 0x74151D7F) - 62;
  *(unsigned char *)(a1 + v6 + v4) = v3;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1222 * ((unint64_t)(v6 + v4 + 1) < 0x38)) ^ v2)))();
}

uint64_t sub_1000D8ED8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 + 399) * ((v2 + v1 - 2) < 0x7FFFFFFF)) ^ v0)))();
}

uint64_t sub_1000D8F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  if ((v24 + 1107693906) > 0x40) {
    int v27 = v24 + 1107693906;
  }
  else {
    int v27 = 64;
  }
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * (((-v22 - 1107695155 - v23 + ((v25 - 965) | 0x441u) + v27 < 0xF) * (((v25 - 1379658891) & 0x523BEDF5) - 1255)) ^ v25)))(-v22, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1000D8FA0()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1836
                                * ((v0 ^ 0x5EF7D11 ^ ((v1 + 1384664055) | 0x24161088)) == (((v1 + 614207269) | 0x52024D5A) ^ 0xD4D78356)
                                                                                        + v2)) ^ v1)))();
}

uint64_t sub_1000D9018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((242 * (a11 != v11 + (v13 ^ 0x201) + 511 + 74 * (v13 ^ 0x201) - 1032)) ^ v13 ^ 0x62F)))();
}

void sub_1000D9060()
{
}

uint64_t sub_1000D90C0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a2 ^ (v4 - 266)) - 1338899429 + a2 - 223 + 245) * (v2 == a1)) ^ a2)))();
}

uint64_t sub_1000D9104()
{
  *(_DWORD *)(v5 - 128) = v4 + ((v5 - 128) ^ 0x94AD4959) * v0 + 328;
  *(void *)(v5 - 120) = v2;
  *(void *)(v5 - 112) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 + 992)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((1448
                                              * (*(_DWORD *)(v5 - 124) + (((v4 - 58) | 0x30) ^ 0xAABC0503) < 0xDE168B56)) ^ v4)))(v6);
}

uint64_t sub_1000D918C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((7 * (((v1 + 298) | 0x150) ^ 0x57A) + 1410) * (v2 == v0)) ^ v1)))();
}

uint64_t sub_1000D91D4@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X8>)
{
  int v7 = a2 ^ 0x7CA;
  unsigned int v8 = ((a1 + v4 + (v6 ^ v3) + 8) ^ (317 * (a2 ^ 0x1C9)) ^ 0x2DF7EF8D)
     + ((2 * (a1 + v4 + (v6 ^ v3) + 8)) & 0x5BEFDBEE)
     - 854664834;
  unsigned int v9 = v5 - 572866773;
  int v10 = (v9 < 0xFB06C775) ^ (v8 < 0xFB06C775);
  BOOL v11 = v8 > v9;
  if (v10) {
    BOOL v11 = v8 < 0xFB06C775;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((15 * v11) ^ v7)))();
}

uint64_t sub_1000D9284(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 8) - 0x3DD4ED798559EACCLL) = v1;
  return result;
}

uint64_t sub_1000D92A0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((27 * (v2 >= ((2 * (v0 ^ (v0 + 633))) ^ 0x17F816A2u))) ^ (v0 - 237914179))))();
}

uint64_t sub_1000D92F4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((((v0 - 554) | 2) ^ 0xD2) & *(_DWORD *)(v2 - 0x65EF48AAD10F5700)) == 0)
                                * (((v0 + 24) | 0x6C) ^ 0x2EC)) ^ v0)))();
}

uint64_t sub_1000D9348(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((487
                                * (a13 + v17 - 220 + (unint64_t)(v14 + v13 - 1) < (unint64_t)(((a3 + 1610481338) & 0xEFCFFFFF) - v16 + 784) - 768)) ^ a3)))();
}

uint64_t sub_1000D93A0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  return (*(uint64_t (**)(uint64_t, void, unint64_t))(v35
                                                                      + 8
                                                                      * ((((((a33 ^ 0x7CA) - 833) | 0x22) == v33) * v36) ^ a33 ^ 0x7CA)))(a1, *a4, ((unint64_t)*a4 << (((((a33 ^ 0xCA) + 13) & 0xBF) + 90) & (8 * ((v37 ^ 0x38) & 0x20)))) ^ v34 ^ 0x278E0B58F1B9A111);
}

uint64_t sub_1000D944C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,_DWORD *a36)
{
  int v41 = (v36 - 1103144311) & 0x4FEEEFDF;
  uint64_t v42 = (*(uint64_t (**)(uint64_t, void))(v37 + 8 * (v36 ^ 0x524)))(a15, 0);
  (*(void (**)(uint64_t))(v37 + 8 * (v36 + 1285)))(v42);
  (*(void (**)(void))(v37 + 8 * (v36 ^ 0x50B)))();
  unsigned int v43 = (((2 * (*v39 >> 30)) ^ 0xFFFFFFFD) + ((*v39 >> 30) ^ (v38 + 2))) ^ *v39;
  unsigned int v44 = (*a36 ^ v38) + ((v38 + 1664525 * v43 - ((3329050 * v43) & 0xE54DC456)) ^ v39[1]);
  v39[1] = v44 + v38 - ((2 * v44) & 0xE54DC456);
  uint64_t v45 = 1734042137 * ((v40 + 0x43BFAB35BEFB7A2 - 2 * ((v40 - 144) & 0x43BFAB35BEFB832)) ^ 0x1E445E2807217B7FLL);
  *(void *)(v40 - 144) = v45 ^ 0x586DAC24;
  *(void *)(v40 - 128) = v45 + 1483582498;
  *(_DWORD *)(v40 - 120) = 1866716922 - v45 + v41;
  *(_DWORD *)(v40 - 116) = v45 ^ 1;
  *(_DWORD *)(v40 - 108) = ((v41 - 1517376098) ^ 0x15) + v45;
  *(_DWORD *)(v40 - 136) = ((v41 - 1517376098) ^ 0x71) + v45;
  *(_DWORD *)(v40 - 132) = v41 - 1517376098 + v45;
  uint64_t v46 = (*(uint64_t (**)(uint64_t))(v37 + 8 * (v41 - 237913424)))(v40 - 144);
  return (*(uint64_t (**)(uint64_t))(v37 + 8 * *(int *)(v40 - 112)))(v46);
}

uint64_t sub_1000D9694(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1484 * (v6 + 1 == v5 + 40)) ^ a4)))();
}

uint64_t sub_1000D974C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v30 = 1755732067 * ((((2 * (v29 - 144)) | 0xC03DCF8E) - (v29 - 144) + 534845497) ^ 0x3ED85A1C);
  *(_DWORD *)(v29 - 144) = v27 - v30 - 228;
  *(_DWORD *)(v29 - 128) = v30 ^ 0x4B8F258;
  *(void *)(v29 - 136) = a19;
  (*(void (**)(uint64_t))(v25 + 8 * (v27 ^ 0x340)))(v29 - 144);
  *(_DWORD *)(v29 - 112) = (v27 + 726) ^ (1755732067 * ((v29 - 2021624647 - 2 * ((v29 - 144) & 0x87807549)) ^ 0x5946C892));
  *(void *)(v29 - 104) = v26;
  *(void *)(v29 - 144) = v26;
  *(void *)(v29 - 136) = a24;
  *(void *)(v29 - 128) = v28;
  *(void *)(v29 - 120) = a19;
  (*(void (**)(uint64_t))(a25 + 8 * (v27 + 789)))(v29 - 144);
  return sub_1000FC1D8();
}

uint64_t sub_1000D9834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v38 = *(unsigned __int8 *)(v36 - 156) ^ 0xDB;
  if (v38 == 1)
  {
    unsigned int v44 = *(_DWORD *)(v36 - 188);
    unsigned int v43 = *(_DWORD *)(v36 - 184);
    *(unsigned char *)(v36 - 196) = ((8 * v43) ^ 0xF0)
                          + (~(((8 * v43) ^ 0xFFFFFFF0) << ((v37 + 28) ^ 0xBF)) | 0x5F)
                          + 85;
    *(unsigned char *)(v36 - 195) = ((v43 >> 5) ^ 0xA6) - 2 * (((v43 >> 5) ^ 0xA6) & 0x55 ^ ((v43 & 0x20) != 0)) + 84;
    *(unsigned char *)(v36 - 194) = ((v43 >> 13) ^ 0xE0) - ((2 * ((v43 >> 13) ^ 0xE0)) & 0xA8) + 84;
    HIDWORD(v45) = v44 ^ 3;
    LODWORD(v45) = ~v43;
    *(unsigned char *)(v36 - 193) = ((v43 >> 21) ^ 0x59) - ((2 * ((v43 >> 21) ^ 0x59)) & 0xA8) + 84;
    *(unsigned char *)(v36 - 192) = (v45 >> 29) - ((2 * (v45 >> 29)) & 0xA8) + 84;
    *(unsigned char *)(v36 - 191) = ((v44 >> 5) ^ 0x48) + (~(2 * ((v44 >> 5) ^ 0x48)) | 0x57) + 85;
    *(unsigned char *)(v36 - 190) = ((v44 >> 13) ^ 0x41) - 2 * (((v44 >> 13) ^ 0x41) & 0x5C ^ (v44 >> 13) & 8) + 84;
    unsigned int v46 = (v44 >> 21) ^ 0xFFFFFFD7;
    char v41 = v46 + 84;
    unsigned int v42 = 2 * (v46 & 0x5C ^ (v44 >> 21) & 8);
    goto LABEL_5;
  }
  if (v38 == 2)
  {
    unsigned int v39 = *(_DWORD *)(v36 - 188);
    unsigned int v42 = *(_DWORD *)(v36 - 184);
    HIDWORD(v40) = v39 ^ 3;
    LODWORD(v40) = ~v42;
    *(unsigned char *)(v36 - 196) = ((v39 >> 21) ^ 0xD7) - ((2 * ((v39 >> 21) ^ 0xD7)) & 0xA8) + 84;
    *(unsigned char *)(v36 - 195) = ((v39 >> 13) ^ 0x41) - ((2 * ((v39 >> 13) ^ 0x41)) & 0xA8) + 84;
    *(unsigned char *)(v36 - 194) = ((v39 >> 5) ^ 0x48) - ((2 * ((v39 >> 5) ^ 0x48)) & 0xA8) + 84;
    *(unsigned char *)(v36 - 193) = (v40 >> 29) - ((2 * (v40 >> 29)) & 0xA8) + 84;
    *(unsigned char *)(v36 - 192) = ((v42 >> 21) ^ 0x59) - ((2 * ((v42 >> 21) ^ 0x59)) & 0xA8) + 84;
    *(unsigned char *)(v36 - 191) = ((v42 >> 13) ^ 0xE0) - 2 * (((v42 >> 13) ^ 0xE0) & 0x57 ^ (v42 >> 13) & 3) + 84;
    *(unsigned char *)(v36 - 190) = ((v42 >> 5) ^ 0xA6) - 2 * (((v42 >> 5) ^ 0xA6) & 0x5C ^ (v42 >> 5) & 8) + 84;
    LOBYTE(v42) = (8 * v42) ^ 0xF0;
    char v41 = v42 + 84;
    LOBYTE(v42) = (2 * v42) & 0xA0;
LABEL_5:
    *(unsigned char *)(v36 - 189) = v41 - v42;
  }
  return sub_1000CA658(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1000D9A80(int a1)
{
  return sub_1000D9AE0((a1 - 411), 29 * (a1 ^ 0x3CBu) - 0x46620122000843C1, 0x1FFEF7D7ALL, 0x4FEE59F615DDDB4CLL);
}

uint64_t sub_1000D9AE0(int a1)
{
  uint64_t v13 = 4 * (v12 + v7);
  int v14 = v1 + v9 + (*(_DWORD *)(*v5 + v13) ^ v10);
  *(_DWORD *)(*v6 + v13) = v14 + v10 - (v8 & (2 * v14));
  int v15 = v12 + 1 + v2;
  BOOL v17 = v15 > v3 || v15 < v4;
  return (*(uint64_t (**)(void))(v11 + 8 * (((2 * v17) | (32 * v17)) ^ a1)))();
}

uint64_t sub_1000D9B4C@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((50 * (v3 == ((a1 - 353) ^ (v2 - 1140)) + (a1 ^ 0x1A1))) ^ a1)))();
}

uint64_t sub_1000D9B84@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((a1 + ((v5 + v2 - 77709578) | 0x4A1C022) + 1607)
                                * ((a2 ^ 0x737120CF) == v3 - 1772733382)) ^ v2)))();
}

uint64_t sub_1000D9BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8 * ((121 * (a7 + 1 == v10 + 4)) ^ a5)))(v8, a2, v7);
}

void sub_1000D9CB0(int a1@<W8>)
{
  *(void *)(v4 - 0x34F67AB82E5E9025) = *v1;
  *(_DWORD *)(v5 - 0x3F5860029363B1D6) = a1;
  *int v1 = 0;
  *(void *)(v8 - 0x65EF48AAD10F570CLL) = 0x1D2C084A1D2C084ALL;
  *int v3 = 740814134;
  unsigned int v2 = ((*(_DWORD *)(v8 - 0x65EF48AAD10F5700) & 0xFFFFFFFE ^ 0x8578C88E)
      - ((2 * (*(_DWORD *)(v8 - 0x65EF48AAD10F5700) & 0xFFFFFFFE ^ 0x8578C88E)) & 0xD0981694)
      - 397669557) ^ 0xEA4C6FE9;
  *(_DWORD *)(v8 - 0x65EF48AAD10F5700) = (v2 - ((2 * v2) & 0x5656BF04) - 1423220862) ^ 0x2C53F3AE;
  *(_DWORD *)(v7 + 24) = *v6;
}

uint64_t sub_1000D9DE8@<X0>(int a1@<W8>, uint64_t a2, unint64_t *a3, uint64_t a4, int a5, unsigned int a6, int a7)
{
  int v9 = a1 + 62;
  unsigned int v11 = 1225351577
      * (((&a3 | 0x3AF363AD) - &a3 + (&a3 & 0xC50C9C50)) ^ 0x1969BBBB);
  a6 = -1296517300 - v11;
  a7 = (a1 + 52) ^ v11;
  a5 = v11 ^ 0x38924263;
  a3 = &STACK[0x2B2B4D831A99DB82];
  a4 = v7;
  uint64_t v12 = (*(uint64_t (**)(unint64_t **))(v8 + 8 * (a1 + 1514)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((30 * (*(_DWORD *)(v7 - 0x65EF48AAD10F56FCLL) == (a1 ^ 0xC3DE98C8))) ^ v9)))(v12);
}

uint64_t sub_1000D9EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(_DWORD *)(v25 - 104) = v23
                         + 1374699841 * ((((v25 - 120) | 0xBE92EFB3) + (~(v25 - 120) | 0x416D104C)) ^ 0xD366F7BB)
                         + 1563;
  *(void *)(v25 - 120) = a20;
  *(void *)(v25 - 112) = a23;
  (*(void (**)(uint64_t))(v24 + 8 * (v23 + 1841)))(v25 - 120);
  *(_DWORD *)(v25 - 120) = v23 + 235795823 * ((v25 + 1366603581 - 2 * ((v25 - 120) & 0x5174B7B5)) ^ 0xC5D9FEEC) + 1210;
  *(void *)(v25 - 112) = a21;
  *(void *)(v25 - 104) = a23;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v23 + 1874)))(v25 - 120);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((*(_DWORD *)(v25 - 116) > 0x5543F90Du) * (((v23 + 577) | 1) ^ 0x28C)) ^ v23)))(v26);
}

uint64_t sub_1000D9FD8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(&a25 + v25 + a2) = 84;
  return (*(uint64_t (**)(void))(v27
                              + 8
                              * ((((unint64_t)(v25 + 1 + a2) < 0x40) * (a4 + a6 + (v26 ^ 0x438) - 382 + 97)) ^ v26 ^ 0x438)))();
}

uint64_t sub_1000DA024(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((564
                                * ((((*(unsigned __int8 *)(v3 + 1) - 134) << (((a1 - 121) & 0xED ^ 0xBB) + a1 + 51)) & v2)
                                 + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v1) == v1)) ^ a1)))();
}

void sub_1000DA090(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  a4 = v8 - 1755732067 * ((&a3 - 464283566 - 2 * ((unint64_t)&a3 & 0xE4539852)) ^ 0x3A952589) + 561;
  a3 = a1;
  a5 = v7;
  a6 = v7;
  (*(void (**)(uint64_t *))(v6 + 8 * (v8 ^ 0xA44)))(&a3);
  JUMPOUT(0x1000BEF48);
}

uint64_t sub_1000DA0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,uint64_t a59,uint64_t a60,int a61,int a62,int a63)
{
  *(_DWORD *)(v64 - 136) = a61 ^ 0x5A869044;
  *(_DWORD *)(v64 - 148) = a63 ^ 0x5585BFD1;
  *(_DWORD *)(v64 - 140) = a64 ^ 0xE5841AFA;
  *(_DWORD *)(v64 - 144) = a62 ^ 0xBE50A1FE;
  return sub_1000E4288(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_1000DA148@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W8>)
{
  HIDWORD(v16) = ((a4 + 5) | 0x11) ^ (v15 + 529) ^ a2;
  LODWORD(v16) = a2 ^ v10;
  int v17 = (v16 >> 27)
      + (a3 ^ v9)
      + ((v4 ^ v9) & (a1 ^ v9) | (v7 ^ v9) & (a1 ^ 0x4921C29F))
      + (*(_DWORD *)(v5 + 4 * (v6 + v13)) ^ v12);
  return (*(uint64_t (**)(uint64_t, void))(v11 + 8 * ((925 * (v6 + 1 == v14 + 4)) ^ a4)))(a2, v17 - ((2 * v17 + 889516850) & v8) + 291550969);
}

uint64_t sub_1000DA218@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, signed int a8, uint64_t a9, uint64_t a10)
{
  int v15 = 28 * (v12 ^ 0x3A9);
  *(_DWORD *)(a10 + 4 * v10) = (a1 ^ 0x99FE7382) + v11 - 2 * ((a1 ^ 0x99FE7382) & (v15 + 638408888));
  signed int v16 = v14 - 2080770528 + ((v15 + 637822371) & 0xD9FB9A5F);
  BOOL v18 = v16 > 1733027513 || v16 < a8;
  return (*(uint64_t (**)(void))(v13 + 8 * ((1077 * v18) ^ v15)))();
}

uint64_t sub_1000DA230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(&a25 + v25 + a2) = 84;
  return (*(uint64_t (**)(void))(v27 + 8 * ((73 * ((unint64_t)(v25 + a2 + 1) < 0x38)) ^ (v26 - 71))))();
}

uint64_t sub_1000DA280@<X0>(int a1@<W0>, unint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, unint64_t a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  BOOL v39 = v25 > v29;
  int v40 = a6 + a4;
  int v41 = a6 + 1;
  uint64_t v42 = 4 * (v41 + a4);
  unint64_t v43 = (*(_DWORD *)(a25 + v42) ^ v26) + ((a5 >> (v28 + 97)) ^ a3);
  unint64_t v44 = HIDWORD(v38)
      + v35 * (unint64_t)(*(_DWORD *)(*v36 + v42) ^ v26)
      + ((v43 + a1 - (v31 & (2 * v43))) ^ a2);
  *(_DWORD *)(a25 + 4 * v40) = v44 + v26 - (v27 & (2 * v44));
  if (v39 == v41 + 1717149194 < v34 + 447) {
    BOOL v39 = v41 + 1717149194 < v37;
  }
  return (*(uint64_t (**)(void))(v32 + 8 * ((v39 * v33) ^ v30)))();
}

uint64_t sub_1000DA330@<X0>(uint64_t a1@<X8>)
{
  uint64_t v9 = a1 + 1;
  *uint64_t v3 = (v4 + v9 + v7) * ((v5 + v9) ^ v6);
  return (*(uint64_t (**)(void))(v8 + 8 * ((v9 != 91) ^ v2)))();
}

uint64_t sub_1000DA338()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1184
                                * (((((v3 - 17) | 0x60) ^ (v1 - 230)) & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                 + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ (v0 + (v3 ^ 0x46) - 237)) == v0)) ^ v3)))();
}

uint64_t sub_1000DA398@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v6 + v4)) = *(unsigned char *)(v3 + (v6 + v4));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v6 - 1 == v2) * v5) | v7)))(0);
}

uint64_t sub_1000DA3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((490
                                * (~a3 + v4 - (unint64_t)(v3 + v6) >= (unint64_t)((v5 - 2044184295) | 0x408180A0u)
                                                                                         - 3333013650u)) ^ v5)))();
}

uint64_t sub_1000DA420(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, char a6)
{
  *(unsigned char *)(a5 + (v7 + a4)) = *(unsigned char *)(v8 + v10 + v13)
                                           - ((*(unsigned char *)(v8 + v10 + v13) << ((((v6 - 100) | v12) ^ v14) & v9)) & a6)
                                           + 84;
  return (*(uint64_t (**)(void))(v11 + 8 * ((28 * ((a4 + v7 + 1) > 0x3F)) ^ v6)))();
}

void sub_1000DA484()
{
}

uint64_t sub_1000DA4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(_DWORD *)(v31 - 136) = v28 - ((((v31 - 144) | 0x7D4A57B5) - ((v31 - 144) & 0x7D4A57B5)) ^ 0x10BE4FBC) * v26 - 59;
  *(void *)(v31 - 144) = v27;
  *(void *)(v31 - 128) = v27;
  *(void *)(v31 - 120) = a24;
  *(void *)(v31 - 112) = v30;
  (*(void (**)(uint64_t))(v25 + 8 * (v28 ^ 0x2C0)))(v31 - 144);
  int v32 = 460628867 * ((((v31 - 144) | 0x88AC0835) + (~(v31 - 144) | 0x7753F7CA)) ^ 0xC43A8A49);
  *(_DWORD *)(v31 - 144) = v29 + (v28 ^ 0x88CCDBB9) + v32;
  *(void *)(v31 - 136) = a23;
  *(_DWORD *)(v31 - 128) = v32 + v28 - 966;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(a25 + 8 * (v28 + 725)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(a25
                                            + 8
                                            * (((2
                                               * (((v28 - 47) ^ (*(_DWORD *)(v31 - 140) == -1022760981)) & 1)) & 0xF7 | (8 * (((v28 - 47) ^ (*(_DWORD *)(v31 - 140) == -1022760981)) & 1))) ^ v28)))(v33);
}

void sub_1000DA620()
{
}

uint64_t sub_1000DA704@<X0>(int a1@<W0>, int a2@<W1>, void *a3@<X2>, int a4@<W3>, char a5@<W4>, char a6@<W5>, char a7@<W7>, int a8@<W8>)
{
  int v18 = a4 + 1;
  unsigned int v19 = ((2 * (*(_DWORD *)(*a3 + 4 * (v18 + a8 + a2 + 1)) ^ v9)) << a7) | ((*(_DWORD *)(*a3 + 4 * (v18 + a8 + a2)) ^ v9) >> v8);
  *(_DWORD *)(*a3 + 4 * (v18 + v14)) = v19 + v9 - ((v19 << (a5 & a6 ^ v15)) & v10);
  BOOL v20 = v18 + v16 < a1;
  if (a1 < v12 != v18 + v16 < v12) {
    BOOL v20 = a1 < v12;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((v20 * v17) ^ (v11 + 61))))();
}

uint64_t sub_1000DA70C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, _DWORD *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v22 = v19 ^ 0x7F3;
  unsigned int v26 = ((v19 ^ 0x7F3) + 1146087281) & 0xBBB0166B;
  int v23 = 1734042137 * ((~((v21 - 136) | 0x1210FE9C) + ((v21 - 136) & 0x1210FE9C)) ^ 0xB121C22E);
  *(void *)(v21 - 136) = a19;
  int v27 = v22;
  *(_DWORD *)(v21 - 120) = (((a1 - 1609143458) & 0xFFFFFFF0) + 1074570863) ^ v23;
  *(_DWORD *)(v21 - 128) = v22 - v23 + 798;
  *(_DWORD *)(v21 - 124) = a1 - a14 - v23 + (v26 ^ 0x335C1EB4);
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v22 + 1437)))(v21 - 136);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((1774 * (*a15 == -1008821960)) ^ v27)))(v24);
}

uint64_t sub_1000DA80C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0)
                                * ((v3 + 66) ^ 0x574)) ^ v3)))();
}

uint64_t sub_1000DA854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  return (*(uint64_t (**)(void))(v29 + 8 * (a27 ^ (236 * (v27 - v28 == 717992869)))))();
}

uint64_t sub_1000DA8D4@<X0>(int a1@<W8>)
{
  if ((unint64_t)v1 - 1202683097 > 0x38) {
    uint64_t v4 = v1 - 1202683097;
  }
  else {
    uint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((503
                                * (((a1 + 106) ^ (v4
                                                                 - v1
                                                                 + (unint64_t)(v3 + a1 - 1785)
                                                                 - 136217309 < 8)) & 1)) ^ a1)))();
}

uint64_t sub_1000DA94C@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 - 252 + a2 - 539915761) = 84;
  return (*(uint64_t (**)(void))(v3 + 8 * ((14 * ((unint64_t)(a2 - 539915760) < 0x38)) ^ (a1 + v2 + 839))))();
}

void sub_1000DA994()
{
}

uint64_t sub_1000DA99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v8 = *v7 - 1048441720;
  BOOL v9 = v5 - 1048441720 < 28 * (a5 ^ 0x410) + 1814537467;
  int v10 = v9 ^ (v8 < 1814538111);
  BOOL v11 = v5 - 1048441720 > v8;
  if (!v10) {
    BOOL v9 = v11;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v9 * (92 * (a5 ^ 0x400) + 192)) ^ a5)))();
}

uint64_t sub_1000DAA14()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((21
                                     * (((v3 + 1393675479) & 0xACEE356E ^ 0x7CB ^ (v4 - 610)) + v2 >= v0 + ((v3 + 1393675479) & 0xACEE356E ^ 0x758) + 553)) | (v3 + 1393675479) & 0xACEE356E)))();
}

uint64_t sub_1000DAA70()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 != v2) * (((v3 - 844) | 0x30) - 383)) ^ (v3 - 831))))();
}

uint64_t sub_1000DAA9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v4 - 1571) | 0x49) - 88) * (v5 != a4)) ^ v4)))();
}

uint64_t sub_1000DAADC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((164
                                * ((v20 + v19 - 1)
                                 + v22
                                 - 252
                                 + (a19 ^ 0xFFFFFFFFFFFFFC7DLL ^ (((a3 - 943) | 0x625) - 805)) < 0x10)) ^ a3)))();
}

void sub_1000DAB30(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  *(unsigned char *)(a5 + ((v5 - 708) ^ 0x159 ^ (a4 + 22)) + v7) = v6;
  JUMPOUT(0x1000D3AF8);
}

uint64_t sub_1000DAB64@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned int a30)
{
  *(unsigned char *)(a5 + (v31 + a1)) = *(unsigned char *)(a7 + (v30 + a3))
                                            - (a6 & (2 * *(unsigned char *)(a7 + (v30 + a3))))
                                            + 84;
  unsigned int v35 = a2 + v30 + 1;
  int v36 = (v32 < v33) ^ (v35 < v33);
  BOOL v37 = v35 < a30;
  if (v36) {
    BOOL v37 = v32 < v33;
  }
  return (*(uint64_t (**)(void))(v34 + 8 * ((v37 * a4) ^ a8)))();
}

uint64_t sub_1000DABD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return sub_1000DB3C4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1000DABE0(int a1, int a2, uint64_t a3, int a4)
{
  uint64_t v10 = (a1 + v7 + a2);
  unint64_t v11 = *(void *)(v9 - 120);
  unint64_t v12 = v10 + v11 + 1;
  uint64_t v13 = (a1 + v7) & 0xF;
  uint64_t v14 = v13 - v10;
  unint64_t v15 = v6 + v14;
  unint64_t v16 = v13 + v6 + 1;
  unint64_t v17 = v4 + v14 + ((a4 - 678) ^ 0x3E5);
  unint64_t v18 = v13 + v4 + 3;
  unint64_t v19 = v14 + v5 + 4;
  unint64_t v20 = v13 + (a4 + 247) + v5 - 1919;
  BOOL v22 = v16 > v11 && v15 < v12;
  if (v18 > v11 && v17 < v12) {
    BOOL v22 = 1;
  }
  int v25 = v19 < v12 && v20 > v11 || v22;
  return (*(uint64_t (**)(void))(v8 + 8 * ((23 * (v25 ^ 1)) ^ a4)))();
}

uint64_t sub_1000DAC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  *(unsigned char *)(*v20 + (v17 + a7)) = -44;
  unsigned int v21 = ((2 * (v18 ^ 0x431)) ^ 0xB5D6027C) + a17;
  BOOL v22 = v17 - 29938752 < v21;
  if ((v17 - 29938752) < 0x72D1F86 != v21 < 0x72D1F86) {
    BOOL v22 = v21 < 0x72D1F86;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((98 * v22) ^ v18)))();
}

uint64_t sub_1000DAD00@<X0>(int a1@<W0>, const char *a2@<X3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  int8x16x4_t v41 = vld4q_s8(a2);
  uint8x16_t v33 = (uint8x16_t)veorq_s8(v41.val[2], v32);
  _Q21 = vmovl_high_u8(v33);
  _Q20 = vmovl_u8(*(uint8x8_t *)v33.i8);
  __asm
  {
    SHLL2           V20.4S, V20.8H, #0x10
    SHLL2           V21.4S, V21.8H, #0x10
  }
  return sub_1000D0ED8(a1, a32 - 177, 1264008910, a3);
}

void sub_1000DAE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v25 - 112) = (((v24 - 795714456) & 0x2F6DA3BA) + 1472) ^ (1755732067
                                                                      * ((2 * ((v25 - 144) & 0x2AF28E18)
                                                                        - (v25
                                                                         - 144)
                                                                        + 1426944483) ^ 0x8BCBCC38));
  *(void *)(v25 - 104) = a22;
  *(void *)(v25 - 128) = a20;
  *(void *)(v25 - 120) = a14;
  *(void *)(v25 - 144) = a22;
  *(void *)(v25 - 136) = a24;
  JUMPOUT(0x1000DAED4);
}

uint64_t sub_1000DAF50@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((956
                                * (((((v3 + 2) ^ (2 * a1)) + ((v5 - 102) ^ v4) - (v3 & (2 * ((v3 + 2) ^ (2 * a1))))) ^ (v4 + 312)) > v1)) ^ v5)))();
}

uint64_t sub_1000DAF94()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((60 * ((v0 ^ 0x556 ^ ((v1 + 337) | 0x136u)) > 7)) ^ (v1 + 876))))();
}

uint64_t sub_1000DAFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _DWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,_DWORD **a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  int v61 = v59 ^ 0x6B5C708A;
  uint64_t v62 = *a32;
  if (((unint64_t)*a32 & 3) != 2 * (v59 ^ 0x6B5C734Du) - 1138
    || (uint64_t v63 = *(&off_100166A10 + v59 - 1801220396), *v63))
  {
    *a14 = 1008845447;
    return sub_1000E02FC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29);
  }
  else
  {
    *uint64_t v63 = v62;
    *(_DWORD *)*(&off_100166A10 + v61 - 425) = 255;
    *v62 |= ~v62[*v62 & 0x3ELL] << 16;
    v62[4] |= (v62[v62[4] & 0x3ELL] ^ (v61 - 511)) << 16;
    v62[8] |= ~v62[v62[8] & 0x3ELL] << 16;
    v62[12] |= ~v62[v62[12] & 0x3ELL] << 16;
    v62[16] |= ~v62[v62[16] & 0x3ELL] << 16;
    v62[20] |= ~v62[v62[20] & 0x3ELL] << 16;
    v62[24] |= ~v62[v62[24] & 0x3ELL] << 16;
    v62[28] |= ~v62[v62[28] & 0x3ELL] << 16;
    v62[32] |= ~v62[v62[32] & 0x3ELL] << 16;
    v62[36] |= ~v62[v62[36] & 0x3ELL] << 16;
    v62[40] |= ~v62[v62[40] & 0x3ELL] << 16;
    int v64 = v61 - 138;
    v62[44] |= ~v62[v62[44] & 0x3ELL] << 16;
    v62[48] |= ~v62[v62[48] & 0x3ELL] << 16;
    v62[52] |= ~v62[v62[52] & 0x3ELL] << 16;
    v62[56] |= ~v62[v62[56] & 0x3ELL] << 16;
    v62[60] |= ~v62[v62[60] & 0x3ELL] << 16;
    uint64_t v65 = (*(uint64_t (**)(char *, void, uint64_t))(v60 + 8 * (v59 ^ 0x6B5C76A0u)))(&a59, 0, 1024);
    BOOL v66 = (((v64 - 190) | 0x148) ^ 0xE2E4C92 ^ (v64 - 1887543688) & 0x7EAFED5F) != 32;
    return (*(uint64_t (**)(uint64_t))(v60 + 8 * (((4 * v66) | (8 * v66)) ^ v64)))(v65);
  }
}

uint64_t sub_1000DB320(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((a2 - 1 >= 0) * ((v3 + 259) ^ 0x5F0)) ^ v3)))();
}

uint64_t sub_1000DB354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v53 = v51 & 0x1572F1DF;
  BOOL v55 = (((((v53 + 60) | 0xA4) ^ 0xE) + (BYTE4(a27) & 0xFE) + ~(_BYTE)v50) & 0xF) != 0
     || (HIDWORD(a27) & 0xBEA5FBFE) + (v50 ^ 0xDF52FDFF) == -548209153;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * (((8 * v55) | (32 * v55)) ^ v53)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_1000DB3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  unint64_t v38 = (*(_DWORD *)(v37 + v33) ^ v27) + HIDWORD(v35);
  *(_DWORD *)(v37 + 4 * a4) = v38 + v27 - (v28 & (2 * v38));
  *(_DWORD *)(a27 + v33) = (v38 >> (((v36 - 114) | v31) + 112)) | v27;
  BOOL v40 = v30 - 1222886960 <= 2020990218 && v30 - 1222886960 >= v29;
  return (*(uint64_t (**)(void))(v32 + 8 * ((v36 - 1032) ^ (v40 * v34))))();
}

uint64_t sub_1000DB43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((a12 - 1737260656 < (v13 + 2147483523)) * ((2 * v13) ^ 0x1F)) ^ v13)))();
}

uint64_t sub_1000DB484@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*v1 != ((a1 - 1483) | 0x10) - 144) * (((a1 + 1804700059) & 0x946E74FF) - 1228)) ^ a1)))();
}

uint64_t sub_1000DB4D4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1852 * (*(_DWORD *)(*v1 + 4 * v2) == ((173 * (v0 ^ 0x380)) ^ 0xA60D5E73))) ^ v0)))();
}

uint64_t sub_1000DB51C(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = **(unsigned __int8 **)(a2 + 8) + (v4 ^ 0xFFFFFD79);
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v3 & (2 * v6)) + (v6 ^ v2) != v2) * ((v4 ^ 0x6A) - 603)) ^ v4)))();
}

uint64_t sub_1000DB56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,unsigned int a27)
{
  LODWORD(a24) = v29;
  return sub_1000C6ACC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           __SPAIR64__(v27, v28),
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1000DB584@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  a3 = v6;
  a4 = v8 - 1755732067 * ((((2 * &a3) | 0x25212504) - &a3 + 1836019070) ^ 0x4C562F59) + 458;
  a5 = v7;
  a6 = v7;
  uint64_t v9 = (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v8 + 1373)))(&a3);
  return sub_1000DB5E0(v9);
}

uint64_t sub_1000DB60C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v6 = ((((a4 - 1975745410) & 0x75C37937) - 271) & v4) == 0;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v6 | (8 * v6)) ^ a4)))();
}

uint64_t sub_1000DB64C()
{
  int v13 = &STACK[0x13C73732F42413E6];
  uint64_t v14 = v9;
  LODWORD(v12) = (v6 + 350) ^ ((((&v12 | 0x3FA9C01)
                               - &v12
                               + (&v12 & 0xFC0563F8)) ^ 0x6E0E8408)
                             * v0);
  (*(void (**)(unint64_t **))(v2 + 8 * (v6 + 434)))(&v12);
  HIDWORD(v13) = v6 - (((&v12 | 0xBCBD6A17) - (&v12 & 0xBCBD6A17)) ^ 0xE073A95A) * v3 - 1041;
  uint64_t v12 = v9;
  (*(void (**)(unint64_t **))(v2 + 8 * (v6 ^ 0x1DDu)))(&v12);
  if (v13 == (v5 ^ (v1 + 625))) {
    int v7 = v11;
  }
  else {
    int v7 = (int)v13;
  }
  HIDWORD(v12) = v6
               + ((((2 * &v12) | 0x1FE5BCF4) - &v12 - 267574906) ^ 0x506D055) * v4
               - 411;
  int v13 = v9;
  (*(void (**)(unint64_t **))(v2 + 8 * (v6 + 430)))(&v12);
  int v13 = v10;
  HIDWORD(v12) = v5 + ((2 * (&v12 & 0x5599B070) - &v12 + 711348104) ^ 0x209241A7) * v4 + 517;
  (*(void (**)(unint64_t **))(v2 + 8 * (v5 + 1358)))(&v12);
  return v7 ^ v1;
}

uint64_t sub_1000DB814()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1256
                                * (((v1 + v2 - 237) & (2 * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v0) == v0)) ^ v4)))();
}

void sub_1000DB85C()
{
}

uint64_t sub_1000DB864@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (a3 - 1967979517)) = *(unsigned char *)(a2 + (v6 - 2094253216));
  return (*(uint64_t (**)(void))(v7 + 8 * ((1824 * ((v3 ^ 0x832C3B5E) + v5 < 4)) ^ v4)))();
}

uint64_t sub_1000DB8C0(int a1, int a2, int a3, uint64_t a4, unsigned int a5)
{
  uint64_t v10 = (a2 + a1 + a3);
  unint64_t v11 = v10 + v8 + 1;
  uint64_t v12 = ((a5 + 1109) ^ 0x558) & v10;
  uint64_t v13 = v12 - v10;
  unint64_t v14 = v5 + v13;
  ++v12;
  unint64_t v15 = v5 + v12;
  unint64_t v16 = v7 + v13;
  unint64_t v17 = v7 + v12;
  unint64_t v18 = v6 + v13;
  unint64_t v19 = v6 + v12;
  BOOL v21 = v15 > v8 && v14 < v11;
  if (v17 > v8 && v16 < v11) {
    BOOL v21 = 1;
  }
  int v24 = v19 > v8 && v18 < v11 || v21;
  return (*(uint64_t (**)(void))(v9 + 8 * ((81 * v24) | a5)))();
}

uint64_t sub_1000DB948@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, int a10)
{
  int v13 = 568 * (a1 ^ 0x449);
  unsigned int v14 = (((&a9 | 0x368A0E78) - &a9 + (&a9 & 0xC975F180)) ^ 0xCC14FD2E) * v10;
  a9 = v14 ^ 0x7E;
  a10 = v14 + a1 - 103;
  uint64_t v15 = (*(uint64_t (**)(char *))(v11 + 8 * (a1 ^ 0xC5B)))(&a9);
  return (*(uint64_t (**)(uint64_t))(v11
                                            + 8
                                            * (((**(_DWORD **)(v12 + 8 * (v13 - 1098)) == (v13 ^ 0x470))
                                              * ((v13 ^ 0xF1) - 744)) ^ v13)))(v15);
}

uint64_t sub_1000DBA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                                           + 8
                                           * ((30 * (v5 < ((((a5 + 2006939778) & 0x886083DD) + 414) ^ 0x503))) ^ a5)))(0);
}

uint64_t sub_1000DBA48(uint64_t result)
{
  uint64_t v1 = *(void *)result;
  __int16 v2 = *(_DWORD *)(result + 16) - -23677 * ((result & 0x4A61 | ~(result | 0x4A61)) ^ 0x37E3);
  *(_DWORD *)(v1 - 0x7C014C707EC207C8) = ((v2 & 0x1FF ^ 0x195 | 0x2C6754BD)
                                          - (v2 & 0x1FF ^ 0x195 | 0xD398AB42)
                                          - 744969406) ^ 0x269FE9B2;
  *(void *)(v1 - 0x7C014C707EC207E8) = 0xEB3C14DE5AE82903;
  *(_DWORD *)(v1 - 0x7C014C707EC207CCLL) = 891668432;
  int v3 = v2 ^ 0x41;
  if (v3 == 1)
  {
    int v4 = 891668448;
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    *(_DWORD *)(v1 - 0x7C014C707EC207D0) = 1963777168;
    int v4 = 891668452;
LABEL_5:
    *(void *)(v1 - 0x7C014C707EC207E0) = 0x591396E9D19B1E61;
    *(void *)(v1 - 0x7C014C707EC207D8) = 0xA6EC69162E64E19ELL;
    *(_DWORD *)(v1 - 0x7C014C707EC207CCLL) = v4;
  }
  *(_DWORD *)(result + 8) = 840352579;
  return result;
}

uint64_t sub_1000DBBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * (((STACK[0x470] == v4)
                                                                         * (((v3 - 263) | 0x10C) ^ 0xC9)) ^ (v3 + 1460))))(a1, a2, a3, 1008845537);
}

uint64_t sub_1000DBBF8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v0 - 446) | 0x408) ^ (109
                                                       * ((v1 ^ (4 * (v2 >> 1)) ^ (((v0 - 446) | 0x408) - 1592) ^ 0x6F5 ^ ((((v0 - 446) | 0x408) - 1592) | 0x528))
                                                        + (v2 ^ 0x1178062F)
                                                        - 1135351518 == 1012132128)))))();
}

uint64_t sub_1000DBC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(unsigned char *)(v14 + (a7 + v9)) = *(unsigned char *)(v10 + ((a7 + v9) & 0xFLL)) ^ *(unsigned char *)(v7
                                                                                               + (a7 + v9)) ^ *(unsigned char *)(v12 + (((_BYTE)a7 + (_BYTE)v9) & 0xF)) ^ *(unsigned char *)((((_BYTE)a7 + (_BYTE)v9) & 0xF) + v11 + 2) ^ (-93 * ((a7 + v9) & 0xF));
  return (*(uint64_t (**)(void))(v15 + 8 * ((948 * (a7 - 1 == ((v13 + 50) | 0x108) + v8)) ^ (v13 + 403))))();
}

uint64_t sub_1000DBCE4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v10 = v7 + v6 + v8 + 313 * (a4 ^ 0x589u);
  long long v11 = *(_OWORD *)(a2 + v10 - 15);
  long long v12 = *(_OWORD *)(a2 + v10 - 31);
  uint64_t v13 = v4 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * ((453 * ((v5 & 0xFFFFFFE0) != 32)) ^ (a4 - 1173))))();
}

uint64_t sub_1000DBD44(uint64_t result)
{
  *(_DWORD *)(result + 8) = 1999839574;
  return result;
}

uint64_t sub_1000DBD50@<X0>(int a1@<W5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v16
                              + 8 * (((a16 == a1 + ((a2 - 907354580) & 0x361521F7) - 461) * ((a2 - 344) ^ 0x5C)) ^ a2)))();
}

uint64_t sub_1000DBDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32)
{
  return (*(uint64_t (**)(void))(v32
                              + 8
                              * ((103
                                * (a13
                                 + ((2 * LODWORD(STACK[0x294])) & 0x5A ^ 0x18)
                                 + ((a32 + 2046221491 + a32 + 1696) ^ STACK[0x294] & 0x3F) < 0xFFFFFFC0)) ^ (a32 + 299))))();
}

uint64_t sub_1000DBE50@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((49 * ((((a1 ^ 0x614) + 71) ^ v2 ^ ((a1 ^ 0x614) - 1758518897) & 0x68D0DEB7u) + v1 < 2)) ^ a1 ^ 0x614)))();
}

uint64_t sub_1000DBEA0@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v7 = ((a1 + 1992957752) & 0x8935E73A ^ (v4 + 1555)) + v5;
  *(unsigned char *)(a2 + v7) = *(unsigned char *)(v2 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((1662 * (v5 - 1 == v3 + 1850)) ^ (a1 + 43))))();
}

uint64_t sub_1000DBEF8(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((46 * (a1 + v2 + (((v1 ^ 0x7BC) + 1397) ^ 0x824E0D75) < 8)) ^ v1 ^ 0x470)))();
}

uint64_t sub_1000DBF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(unint64_t, uint64_t))(v12
                                                              + 8
                                                              * ((107
                                                                * (**(_DWORD **)(a11 - 0x774B811B42847B1FLL) == ((a5 - 912) ^ (v11 - 671) ^ (35 * ((a5 - 415) ^ 0x402))))) ^ (a5 - 415))))(0x99FE7382EF74699DLL, 2628653436);
}

void sub_1000DC070(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) + 460628867 * ((2 * (a1 & 0x1FF5D3B4) - a1 - 536204213) ^ 0xAC9CAE36);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  int v4 = *(unint64_t **)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(v3 - 0x3303C932EE2955D7);
  uint64_t v9 = &STACK[0x774B811B42847B47];
  uint64_t v10 = v5;
  unsigned int v13 = (1755732067 * ((&v9 & 0x4304C8D9 | ~(&v9 | 0x4304C8D9)) ^ 0x623D8AFD)) ^ (v1 + 178);
  uint64_t v14 = v6;
  uint64_t v11 = v3;
  uint64_t v12 = v2;
  uint64_t v7 = (char *)*(&off_100166A10 + (v1 ^ 0x658)) - 4;
  (*(void (**)(unint64_t **))&v7[8 * (v1 ^ 0x171)])(&v9);
  uint64_t v8 = *(void *)(v3 - 0x3303C932EE2955DFLL);
  LODWORD(v11) = v1
               + 1374699841 * ((&v9 & 0x3D063B47 | ~(&v9 | 0x3D063B47)) ^ 0xAF0DDCB1)
               - 28;
  uint64_t v9 = &STACK[0x774B811B42847B37];
  uint64_t v10 = v8;
  (*(void (**)(unint64_t **))&v7[8 * (v1 ^ 0x17A)])(&v9);
  HIDWORD(v10) = (1755732067 * ((&v9 - 159091948 - 2 * (&v9 & 0xF6847314)) ^ 0x2842CECF)) ^ (v1 - 664);
  uint64_t v9 = v4;
  (*(void (**)(unint64_t **))&v7[8 * v1 + 2584])(&v9);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000DC2C0@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  unsigned int v4 = ((*(_DWORD *)(*(void *)(v2 - 0x774B811B42847B1FLL) + 4 * v3) ^ 0xA60D5AC8) >> a2) ^ 0x57F0FADB;
  unsigned int v5 = ((2 * (v4 & 0x6248B0D5)) | 0x82C979C8) - (v4 & 0x6248B0D5) + 1050362652;
  *(_DWORD *)(result + 4) = ((v4 & 0x6248B0D4 ^ 0x83240C35 ^ v5)
                           - ((2 * (v4 & 0x6248B0D4 ^ 0x83240C35 ^ v5)) & 0x98810A86)
                           - 868186813) ^ 0x4D09D278;
  return result;
}

uint64_t sub_1000DC364()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((56 * (v2 + v1 - 1927360809 < ((v2 - 590) ^ 0xFFFFFD82))) ^ v2)))();
}

void sub_1000DC3A4(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000DC404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v23 - 104) = v21
                         + 1374699841 * ((((v23 - 120) | 0x6D36271) - ((v23 - 120) & 0x6D36271)) ^ 0x6B277A78)
                         + 1137;
  *(void *)(v23 - 120) = a18;
  *(void *)(v23 - 112) = a21;
  (*(void (**)(uint64_t))(v22 + 8 * (v21 ^ 0x589)))(v23 - 120);
  *(void *)(v23 - 112) = a19;
  *(void *)(v23 - 104) = a21;
  *(_DWORD *)(v23 - 120) = v21
                         + 235795823 * ((((v23 - 120) | 0x8FCB7F57) - ((v23 - 120) & 0x8FCB7F57)) ^ 0x1B66360E)
                         + 784;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v21 ^ 0x5E8)))(v23 - 120);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (((32 * (*(_DWORD *)(v23 - 116) > 0x5543F90Du)) | ((*(_DWORD *)(v23 - 116) > 0x5543F90Du) << 6)) ^ v21)))(v24);
}

uint64_t sub_1000DC538(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  *(void *)(v9 + (v8 + v5 - 859)) = *(void *)(v7 + (v8 + v5 - 859));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a3 != v8) * v6) ^ a5)))();
}

uint64_t sub_1000DC568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 136) = v16 + ((((v18 - 136) | 0x1040BD2D) - ((v18 - 136) & 0x1040BD2D)) ^ 0x84EDF474) * v14 + 782;
  *(void *)(v18 - 128) = v17;
  *(void *)(v18 - 120) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 1446)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 132) == 1430518031) * (((v16 - 421) | 0x520) ^ 0x5F5)) ^ v16)))(v19);
}

uint64_t sub_1000DC600@<X0>(int a1@<W0>, uint64_t a2@<X4>, int a3@<W6>, uint64_t a4@<X7>, int a5@<W8>)
{
  *(unsigned char *)(a2 + (a5 + a1)) = *(unsigned char *)(a4 + (v6 + a3));
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((((v6 + 1) & 0xFFFFFFFC) == v7)
                                     * (((((v5 + 2108051412) & 0x8259AFF7) - 1381) | 0x10) + 236)) ^ (v5 + 2108051412) & 0x8259AFF7)))();
}

void sub_1000DC620(uint64_t a1)
{
  int v1 = 1225351577 * ((a1 & 0xE03BD8A7 | ~(a1 | 0xE03BD8A7)) ^ 0x3C5EFF4E);
  if (*(void *)(a1 + 48) | *(void *)(a1 + 64)) {
    BOOL v2 = *(_DWORD *)(a1 + 72) + v1 == 1099676098;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000DC780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((v6 != ((((v5 + 15) | 9) + 31) & 0xFE)) * (((v5 - 240) | a5) - 272)) ^ v5)))();
}

uint64_t sub_1000DC7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  LODWORD(STACK[0x4F4]) = 1600514004;
  LODWORD(STACK[0x450]) = 128;
  int v62 = 1225351577 * (((v61 - 200) & 0xEA9A5AC5 | ~((v61 - 200) | 0xEA9A5AC5)) ^ 0x36FF7D2C);
  *(void *)(v61 - 136) = v58;
  *(_DWORD *)(v61 - 144) = v59 - v62 + 885;
  *(void *)(v61 - 184) = a58;
  *(void *)(v61 - 176) = v58 + 0x774B811B42847DB7;
  *(void *)(v61 - 152) = 0;
  *(void *)(v61 - 168) = 0;
  *(_DWORD *)(v61 - 128) = 1099676226 - v62;
  *(void *)(v61 - 200) = v58 + 0x774B811B42847EC7;
  *(void *)(v61 - 192) = a52;
  uint64_t v63 = (*(uint64_t (**)(uint64_t))(v60 + 8 * (v59 ^ 0x706)))(v61 - 200);
  return (*(uint64_t (**)(uint64_t))(v60
                                            + 8
                                            * ((953
                                              * (*(_DWORD *)(v61 - 160) == ((v59 + 37) ^ 0xC3DE9B6C ^ (5 * (v59 ^ 0x5D))))) ^ v59)))(v63);
}

uint64_t sub_1000DC8D8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((111
                                * (((((v0 + 877) | 0x60) ^ 0xD1FA3B8C) & (2 * (*v1 - 42))) + ((*v1 - 42) ^ 0xE8FD1FFA) == -386064390)) ^ v0)))();
}

uint64_t sub_1000DC944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = 628203409
      * ((2 * (((v18 - 152) ^ 0xA4F52AB7) & 0x567DB170) - ((v18 - 152) ^ 0xA4F52AB7) - 1451078001) ^ 0x8FFF680B);
  *(void *)(v18 - 128) = a14;
  *(void *)(v18 - 152) = a13;
  *(void *)(v18 - 144) = a11;
  *(void *)(v18 - 112) = v14;
  *(void *)(v18 - 104) = a12;
  *(_DWORD *)(v18 - 136) = v17 - v19 - 569;
  *(_DWORD *)(v18 - 132) = v16 - v19 - 375727839;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v17 + 825)))(v18 - 152);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((473 * (*(_DWORD *)(v18 - 120) == (((v17 - 1199) | 0x704) ^ 0xC3DE9E24))) ^ v17)))(v20);
}

uint64_t sub_1000DCA48@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((31 * (v1 != 1576401730)) ^ 0x228u)))();
}

uint64_t sub_1000DCA78@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v7 = v2 - 1;
  STACK[0x588] = v7;
  *(unsigned char *)(a1 + v7) = ((v3 + 1) ^ v5) * (a2 + 34 + v3 - 7);
  return (*(uint64_t (**)(void))(v6 + 8 * (((STACK[0x588] == 0) * v4) ^ a2)))();
}

uint64_t sub_1000DCABC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  *(unsigned char *)(a2 + (v7 + a4 + v4 + 210 + 393) + 20) = *(unsigned char *)(a3
                                                                            + (v7 + a4 + v4 + 210 + 393));
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((a4 - 1 == a1) ^ (v4 - 70)) & 1) * (((v4 + 210 + v6) & v5) - 18)) ^ (v4 + 1092))))();
}

uint64_t sub_1000DCAE0()
{
  *(void *)(v3 - 7 + (v5 + v2 - v6)) = *(void *)(v1 - 7 + (v5 + v2 - v6));
  return (*(uint64_t (**)(void))(v0 + 8 * ((26 * (((v7 + 322) ^ 0x581) + v6 == (v4 & 0xFFFFFFF8))) ^ v7)))();
}

uint64_t sub_1000DCB30(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1056 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x1A6u)))();
}

void sub_1000DCB7C()
{
}

void sub_1000DCB88()
{
}

uint64_t sub_1000DCB90()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((284 * (v0 == v3 + LODWORD(STACK[0x374]) - 6)) ^ (v1 - 245))))();
}

uint64_t sub_1000DCBC0@<X0>(uint64_t a1@<X0>, unsigned int a2@<W5>, uint64_t a3@<X8>, uint8x8_t a4@<D0>)
{
  a4.i32[0] = *(_DWORD *)(a3 + a2 + 1);
  return sub_1000DCBE8(a1, 0, a3 - 3, 1065, v4 ^ 0x764u, 237, COERCE_DOUBLE(vmovn_s16((int16x8_t)vmovl_u8(a4))));
}

uint64_t sub_1000DCBE8(float a1, uint64_t a2, int a3, uint64_t a4, unsigned int a5, int a6, int a7)
{
  *(float *)(a4 + (v7 + v10 - a3 + 841)) = a1;
  return (*(uint64_t (**)(void))(v11 + 8 * (((a6 + a3 == v9) * a7) ^ v8)))(v8 ^ a5);
}

void sub_1000DCC1C()
{
}

uint64_t sub_1000DCC8C()
{
  (*(void (**)(unint64_t, uint64_t))(v3 + 8 * (v1 + 1736)))(STACK[0x2C8], 2965982036);
  int v4 = (*(uint64_t (**)(void))(v3 + 8 * (v1 + 1743)))();
  unsigned int v5 = v4 + 1923539499 - ((v4 << ((v1 + 84) ^ 0x6C)) & v0);
  *uint64_t v2 = v5;
  unsigned int v6 = (((v1 + 1030) ^ (2 * (v5 >> 30)) ^ 0xFFFFFAE2) + ((v5 >> 30) ^ 0x72A6E22D)) ^ v5;
  v2[1] = 1812433253 * v6 - ((2 - 670100790 * v6) & v0) + 1923539500;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * ((v1 + 1364) ^ 0xF2)))(1812433253, 3624866506);
}

uint64_t sub_1000DCD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29)
{
  *char v31 = 854218177;
  unint64_t v33 = 1225351577
      * ((((v32 - 144) | 0x77B669D50526E259) - (v32 - 144) + ((v32 - 144) & 0x8849962AFAD91DA0)) ^ 0x9A20C18D26BC3A4FLL);
  *(void *)(v32 - 128) = (*a29 - 50733493) ^ v33;
  *(_DWORD *)(v32 - 120) = (v29 - 1368722543) ^ v33;
  *(_DWORD *)(v32 - 116) = (v29 - 1926966970) ^ v33;
  *(_DWORD *)(v32 - 144) = ((v29 - 1368722543) ^ 0x3E) - v33;
  *(_DWORD *)(v32 - 136) = v33 + v29 - 1368722543 - 42;
  *(_DWORD *)(v32 - 132) = v33;
  *(void *)(v32 - 112) = v33 ^ 0x71C9DD53;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v30 + 8 * (v29 - 237913491)))(v32 - 144);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * *(int *)(v32 - 140)))(v34);
}

uint64_t sub_1000DCD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((37 * (((v3 < 0xC99918AA) ^ 0x6D) & 1)) ^ (v4 + 237915798))))(a1, a2, a3, 4057052139);
}

uint64_t sub_1000DCDC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(unsigned char *)(v6 + v7 + a5 - 1) = a4;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((unint64_t)(v6 + v7) < 0x40) | (16 * ((unint64_t)(v6 + v7) < 0x40))) ^ v5)))();
}

void sub_1000DCDF8()
{
}

uint64_t sub_1000DCE2C@<X0>(int a1@<W7>, int a2@<W8>)
{
  if ((v2 - 1936793795) > 0x19 || ((1 << (v2 + 61)) & 0x3014001) == 0) {
    JUMPOUT(0x1000CC874);
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((122
                                * (((166 * ((a1 - 2) ^ 0x769E5DDEu)) ^ 0xFFFFFFFFFFFFFEB3)
                                 + (a2 & 0xFFFFFFFFFFFFFFFLL) < 2)) ^ (v4 + 1990090902))))();
}

uint64_t sub_1000DCEBC@<X0>(int a1@<W0>, int a2@<W5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v3 + ((a2 + 45) ^ 0xACA208BE) + a1) = *(unsigned char *)(a3 + ((a2 + 45) ^ 0xACA208BE) + a1);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1175 * (a1 - 1 == v4)) ^ a2)))();
}

uint64_t sub_1000DCEFC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)(((((37 * (v0 ^ 0x742)) ^ 0xFFFFFD53) + 22 * (v0 ^ 0x75F)) * (v1 == 0)) | v0)))();
}

uint64_t sub_1000DCF48@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((a1 ^ 0x21u) >= 223 * ((v1 - 979) ^ 0x2FFu) - 1330)
                                * (465 * ((v1 - 979) ^ 0x2FA) - 899)) ^ (v1 - 979))))();
}

uint64_t sub_1000DCF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1000DCFE4(a1, a2, 1138661694, a4, 889516850, 278, a7, 0x83FEB38F813DF820);
}

uint64_t sub_1000DCFE4@<X0>(int a1@<W8>)
{
  unint64_t v2 = STACK[0x2A8];
  STACK[0x3C8] = STACK[0x2A8] + 2353;
  STACK[0x3C0] = v1 + 49;
  STACK[0x3B8] = v2 + 2333;
  STACK[0x3B0] = v1 + 29;
  STACK[0x388] = v2 + 2313;
  STACK[0x380] = v1 + 9;
  return sub_1000F8F9C(a1);
}

uint64_t sub_1000DD024(_DWORD *a1)
{
  unsigned int v1 = 1755732067 * ((a1 & 0x1C74C11D | ~(a1 | 0x1C74C11D)) ^ 0x3D4D8339);
  unsigned int v2 = *a1 + v1;
  int v3 = a1[4] ^ v1;
  unsigned int v5 = v3 - 79229527;
  BOOL v4 = v3 - 79229527 < 0;
  LODWORD(v6) = 79229527 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_100166A10 + (int)(v2 - 800))
                              + 8 * (int)(((v6 == ((2 * v6) & 0xC54528C6)) * (((v2 - 824) | 0x32) - 58)) ^ v2)
                              - 4))();
}

uint64_t sub_1000DD0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * (int)((v21 + 873) ^ (52 * ((a20 >> 29) & 1)))))(a1, 52, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1000DD10C@<X0>(int a1@<W8>)
{
  int v7 = STACK[0x47C];
  uint64_t v8 = (_DWORD *)STACK[0x3F0];
  unint64_t v9 = STACK[0x3F0] + 24 * v2;
  *(_DWORD *)(v9 + 8) = v5;
  *(_DWORD *)(v9 + 12) = v4;
  *(void *)(v9 + 16) = STACK[0x3D8];
  *(_DWORD *)(v9 + 24) = v7;
  *uint64_t v8 = (((a1 + 59) | 0x18) ^ 0x118) + v1;
  BOOL v11 = v3 - 1140501694 > ((a1 - 66249552) & 0x3F2E7B9 ^ 0x5EC672BA) || v3 - 1140501694 < SLODWORD(STACK[0x3B0]);
  return (*(uint64_t (**)(void))(v6 + 8 * ((464 * v11) ^ a1)))();
}

uint64_t sub_1000DD19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20 + 8 * (((a19 == 1936793855) * (v19 + 1006)) ^ v19)))();
}

uint64_t sub_1000DD1DC@<X0>(int a1@<W8>, uint64_t a2)
{
  *(void *)(a2 + v2) = v5;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((387 * (a1 ^ 0x489) - 1105) & v3) != 8) * ((387 * (a1 ^ 0x489) + 126) ^ 0x504)) ^ (387 * (a1 ^ 0x489)))))();
}

void sub_1000DD238()
{
}

void sub_1000DD240()
{
}

uint64_t sub_1000DD3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((63 * (v8 != 24)) ^ a7)))();
}

uint64_t sub_1000DD404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46)
{
  return (*(uint64_t (**)(void))(v46
                              + 8
                              * (((a16 + ((a46 << ((a30 + 38) ^ 0x64)) & 0x5E ^ 0x1C) + (a46 & 0x3F ^ 0xBDF9EEB1) < 0xFFFFFFC0)
                                * (a30 + 611)) ^ (a30 + 1210))))();
}

void sub_1000DD4A8(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  int v2 = *(_DWORD *)(v1 + 32) + 1225351577 * ((2 * (v1 & 0x55336398) - v1 - 1429431193) ^ 0x89564471);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1000DD614@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, int a9@<W8>)
{
  BOOL v13 = a4 < a2;
  char v14 = *(unsigned char *)(a8 + (((v10 - 388) | 2) ^ (v11 + 46)) + v9);
  *(unsigned char *)(a5 + (a9 + a1)) = v14 - (a6 & (2 * v14)) + 84;
  unsigned int v15 = a3 + v9 + 79;
  int v16 = v13 ^ (v15 < a2);
  BOOL v17 = v15 < a4;
  if (!v16) {
    BOOL v13 = v17;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((v13 * a7) ^ v10)))();
}

uint64_t sub_1000DD688(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v19 = (v10 ^ v12)
      + v13
      + ((v9 ^ v12) & (v7 ^ 0x4921C29F) | (v7 ^ (v12 + (a7 ^ 0x536) - 911)) & (a1 ^ v12))
      + *(_DWORD *)(a4 + 4 * (v18 + v16))
      + (*(_DWORD *)(v8 + 4 * (*(unsigned char *)(a3 + v18 + v16) - 79)) ^ v15);
  unsigned int v20 = (v12 + v19 - (v11 & (2 * v19))) ^ v12;
  int v21 = ((v20 << (*(unsigned char *)(a5 + v18 + v16) - 23)) | (v20 >> (23 - *(unsigned char *)(a5 + v18 + v16)))) + (a1 ^ v12);
  return (*(uint64_t (**)(void))(v14 + 8 * ((103 * (v18 + 1 == v17 + 16)) ^ a7)))(v21 + v12 - (v11 & (2 * v21)));
}

uint64_t sub_1000DD7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, int a13, unint64_t *a14, int a15)
{
  unsigned int v19 = 1755732067 * ((&a11 & 0x1ED7EE20 | ~(&a11 | 0x1ED7EE20)) ^ 0x3FEEAC04);
  a13 = (v17 + 111) ^ v19;
  a15 = v19 ^ 0x1EF010F8;
  a14 = &STACK[0x3F0B617C4F927C01];
  a11 = &STACK[0x15227257BF786DCC];
  a12 = v18;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 ^ 0x5E0)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v18 - 0x65EF48AAD10F56FCLL) == v15)
                                              * ((45 * (v17 ^ 0x22D)) ^ 0xD1)) ^ v17)))(v20);
}

uint64_t sub_1000DD8A4()
{
  *int v0 = 1008845537;
  return sub_1000DD8B0();
}

uint64_t sub_1000DD8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t))(v20 + 8 * (((((a9 == 0) ^ (v19 - 1)) & 1) * ((v19 + 4) ^ 0x1BE)) ^ v19)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a1, a12, a13, a14, a15, a16, &STACK[0x774B811B42847BF7], v21 + 0x1A824A3673DC0504, a19, v21 + 0x1A824A3673DC03F4);
}

uint64_t sub_1000DD9FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                         + 8
                                                                                         * ((44
                                                                                           * (*(_DWORD *)(a8 + 72) != 261 * ((a4 - 646) ^ (v9 - 127) ^ (v9 + 1)) + 1576400958)) | (a4 - 646))))(a1, a2, 2393867127, 2415166058, 409351303, 1576401740);
}

uint64_t sub_1000DDA6C@<X0>(unint64_t a1@<X2>, int a2@<W8>, uint64_t a3)
{
  *(void *)(v5 + 1516) = v3;
  *(void *)(v5 + 1524) = v3;
  *(_DWORD *)(v5 + 1532) = v4;
  *(void *)(a1 + 96) = v5;
  STACK[0x278] = v5;
  *(_DWORD *)(v5 + 476) = 1111188988;
  STACK[0x3D8] = STACK[0x500];
  unint64_t v6 = STACK[0x5B0];
  int v7 = (char *)&a3 + STACK[0x5B0] - 0x61CB92A9D1FA177FLL;
  STACK[0x380] = STACK[0x5B0];
  STACK[0x378] = 10 * (a2 ^ 0x27u) + v6 + 302;
  STACK[0x3F0] = (unint64_t)v7;
  STACK[0x280] = (unint64_t)(v7 + 392);
  STACK[0x200] = a1;
  STACK[0x388] = a1;
  return sub_1000DDB0C();
}

uint64_t sub_1000DDB0C@<X0>(int a1@<W4>, int a2@<W8>)
{
  STACK[0x3C8] = *(void *)(v5 + 8 * a2);
  STACK[0x5B0] = STACK[0x378];
  LODWORD(STACK[0x430]) = 1936793807;
  LODWORD(STACK[0x5AC]) = 1576401730;
  STACK[0x598] = 0;
  LODWORD(STACK[0x47C]) = -1330136732;
  *(_DWORD *)STACK[0x3F0] = a1 + 955;
  LODWORD(STACK[0x3C0]) = v3 + 1162255537;
  LODWORD(STACK[0x3F8]) = v3 + 100714518;
  LODWORD(STACK[0x3B0]) = v2 + 68 + v3 + 2059891922;
  LODWORD(STACK[0x3B8]) = v3 + 1995476968;
  unint64_t v6 = *(uint64_t (**)(void))(v5 + 8 * ((v2 + 151) ^ 0x4E8 ^ (v2 + 68)));
  LODWORD(STACK[0x3D0]) = v4;
  return v6();
}

uint64_t sub_1000DDBF8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 & 0x1F ^ 0x12) == v1 - 1927) * (((v1 - 1917) | 0xB5) ^ 0xB3)) ^ v1)))();
}

uint64_t sub_1000DDC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v40 = v33 - v34 - 987;
  *unint64_t v38 = v38[623];
  unint64_t v41 = 1734042137 * ((0x826A2B5DD5A32274 - ((v39 - 144) | 0x826A2B5DD5A32274) + a33) ^ 0x67EA703976921EC6);
  *(void *)(v39 - 144) = (v37 + 266335622) ^ v41;
  *(_DWORD *)(v39 - 120) = 1866716922 - v41 + v40;
  *(_DWORD *)(v39 - 116) = v41 ^ 1;
  *(void *)(v39 - 128) = v41 + 2078612124;
  *(_DWORD *)(v39 - 108) = ((v33 - v34 - 1910644740) ^ 0x6E) + v41;
  *(_DWORD *)(v39 - 136) = ((v33 - v34 - 1910644740) ^ 0x79) + v41;
  *(_DWORD *)(v39 - 132) = v33 - v34 - 1910644740 + v41;
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (v40 ^ v35)))(v39 - 144);
  return (*(uint64_t (**)(uint64_t))(v36 + 8 * *(int *)(v39 - 112)))(v42);
}

void sub_1000DDD30()
{
}

uint64_t sub_1000DDDA4(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1000DDDBC(a1, (a3 - 1311));
}

uint64_t sub_1000DDDBC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(a1 + (v7 + v4)) = *(unsigned char *)(v2 + (v7 + v4)) - 2;
  return (*(uint64_t (**)(void))(v8 + 8 * (((((v7 - 1 == a2) ^ v5) & 1) * v6) ^ v3)))();
}

void sub_1000DDDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v15 - 120) = (v14 - 954) ^ (535753261
                                        * ((2 * ((v15 - 120) & 0x16B2EB40) - (v15 - 120) + 1766659257) ^ 0x63B91A96));
  *(void *)(v15 - 112) = a11;
  (*(void (**)(uint64_t))(v13 + 8 * (v14 + 780)))(v15 - 120);
  *(void *)(v15 - 112) = a12;
  *(_DWORD *)(v15 - 120) = (v14 - 954) ^ (535753261
                                        * (((v15 - 120) & 0xD6A3CD8E | ~((v15 - 120) | 0xD6A3CD8E)) ^ 0x23A83C5E));
  (*(void (**)(uint64_t))(v13 + 8 * (v14 | 0x30C)))(v15 - 120);
  *(void *)(v15 - 120) = a12;
  *(void *)(v15 - 112) = v12;
  *(_DWORD *)(v15 - 104) = v14 + 1374699841 * ((v15 - 120) ^ 0x6DF41809) + 530;
  (*(void (**)(uint64_t))(v13 + 8 * (v14 + 808)))(v15 - 120);
  JUMPOUT(0x1000D6D6CLL);
}

uint64_t sub_1000DDF40(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2
                                                              + 8
                                                              * ((171
                                                                * (v3 != ((367 * ((v4 + 881781634) & 0xCB7115DF ^ 0x484)) ^ 0x7B59D4E5))) ^ v4)))(a1, a2, 1567198256);
}

uint64_t sub_1000DDFA0()
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((348
                                * ((v1 & (2 * (*(unsigned __int8 *)(v5 + 4) - 247)))
                                 + (v3 ^ v4 ^ (*(unsigned __int8 *)(v5 + 4) - 247)) == v0)) ^ v2)))();
}

uint64_t sub_1000DDFD8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1217
                                * ((((*(unsigned __int8 *)(v3 + 1) - 134) << (((v2 - 77) | 0x82) + 7)) & v1)
                                 + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1000DE020@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a1 | (2 * (v2 == v1 + 337 * (a1 ^ 0x4B7) - 1011)))))();
}

uint64_t sub_1000DE058@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W5>, int a6@<W6>, int a7@<W8>)
{
  int v18 = a1 ^ v14;
  int v19 = (a6 ^ v14)
      + a7
      + ((v8 ^ v14) & (a1 ^ v14) | (v8 ^ v7) & (v9 ^ v14))
      + *(_DWORD *)(a3 + 4 * (v17 + v13))
      + (*(_DWORD *)(v11 + 4 * (*(unsigned char *)(a2 + v17 + v13) + ((a5 - 47) & 0xDE ^ 0xEF))) ^ v10);
  unsigned int v20 = (v19 + v14 - (v16 & (2 * v19))) ^ v14;
  unsigned int v21 = ((v20 << (*(unsigned char *)(a4 + v17 + v13) - 23)) | (v20 >> (23 - *(unsigned char *)(a4 + v17 + v13)))) + v18;
  return (*(uint64_t (**)(void))(v12 + 8 * ((29 * (v17 + 1 != v15 + 32)) ^ a5)))(v21 + v14 - (v16 & (2 * v21)));
}

uint64_t sub_1000DE144()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 | (16 * (((((v0 + 1005) ^ 0xFFFFFC03) + v0 + 580) & v1) == 0)))))();
}

uint64_t sub_1000DE16C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v3 >= ((a3 - 698745979) & 0x29A6070F ^ 0x286u) - 1388)
                                * (((a3 - 698745979) & 0x29A6070F) - 1782)) | (a3 - 698745979) & 0x29A6070F)))();
}

uint64_t sub_1000DE1B8()
{
  *(_DWORD *)(v2 - 200) = (v0 + 2138962369) ^ (1374699841
                                             * ((((2 * (v2 - 200)) | 0x887F67C8) - (v2 - 200) + 1002458140) ^ 0xA9CBABED));
  (*(void (**)(uint64_t))(v1 + 8 * (v0 + 1054)))(v2 - 200);
  LODWORD(STACK[0x2D0]) = LODWORD(STACK[0x2D0]) + v0 - 901 - 89;
  *(_DWORD *)(v2 - 200) = v0 - 1224239923 * ((v2 - 860400777 - 2 * ((v2 - 200) & 0xCCB7543F)) ^ 0x3E04A9E8) + 98;
  *(unsigned char *)(v2 - 184) = 30 - 51 * ((v2 + 119 - 2 * ((v2 + 56) & 0x3F)) ^ 0xE8);
  *(void *)(v2 - 192) = STACK[0x290];
  *(void *)(v2 - 176) = STACK[0x288];
  (*(void (**)(uint64_t))(v1 + 8 * (v0 + 1067)))(v2 - 200);
  LODWORD(STACK[0x520]) = *(_DWORD *)(v2 - 196);
  LODWORD(STACK[0x2D4]) = 1338815778;
  return sub_1000F8F4C();
}

uint64_t sub_1000DE2C8@<X0>(int a1@<W8>)
{
  *(void *)(v1 + v4) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 != v4) * v3) ^ a1)))();
}

uint64_t sub_1000DE2EC()
{
  uint64_t v4 = (char *)&STACK[0x670] + STACK[0x3F8] - 0x61CB92A9D1FA1DEFLL;
  LODWORD(STACK[0x4E8]) = v3;
  STACK[0x480] = (unint64_t)v4;
  uint64_t v5 = *(uint64_t (**)(void))(v2
                           + 8
                           * ((22
                             * (((v0 - 84) ^ (*(_DWORD *)(*(void *)(v1
                                                                                     + 8
                                                                                     * (int)((v0 + 685) & 0xE7936C94))
                                                                         - 12) == v0 - 281)) & 1)) ^ (v0 + 685)));
  STACK[0x2D8] = *(void *)(v1 + 8 * ((v0 + 685) ^ 0x36E));
  return v5();
}

void sub_1000DE2F8()
{
}

uint64_t sub_1000DE300()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((790
                                * ((((*(unsigned __int8 *)(v2 + 5) - 13) << (((22 * (v3 ^ 0x9F) + 44) | 0x49) + 20)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ v0) == v0)) ^ v3)))();
}

void sub_1000DE374()
{
}

uint64_t sub_1000DE388@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((9 * (a1 ^ 0x751) + 56) ^ ((a1 - 1030) | 0x5E))
                                * ((v1 - 1576401795) < 0xFFFFFFBF)) | a1)))();
}

uint64_t sub_1000DE3E0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((169 * (((v4 ^ 0x34B ^ (v3 + a3 + 63 < (v3 + a3))) & 1) == 0)) ^ v4)))();
}

void sub_1000DE430()
{
}

uint64_t sub_1000DE43C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v7 = (a1 - 162) | 0x7A;
  int v8 = v4 + 136315040 + v3 - v5;
  *(void *)(a2 - 7 + v8 + (v7 ^ 0x18Bu) - 1130) = *(void *)(v2 - 7 + v8 + (v7 ^ 0x18Bu) - 1130);
  return (*(uint64_t (**)(void))(v6 + 8 * ((984 * (((v7 - 1523) & v3) != v8)) ^ v7)))();
}

uint64_t sub_1000DE4A8()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((21
                                * (((v2 - 106) ^ ((v1 - 715496762 + v2 - 872) * (v3 - 715496183) >= 0)) & 1)) ^ v2)))();
}

void sub_1000DE4F4()
{
}

void sub_1000DE500()
{
  *int v1 = v0;
}

uint64_t sub_1000DE524@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((*(_DWORD *)STACK[0x3F0] - 717574973) < 0x10) * ((a1 + 83) ^ 0x28A)) ^ a1)))();
}

uint64_t sub_1000DE568()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1763 * (v0 == (v1 ^ 0x13D ^ (v3 - 28)))) ^ (v1 - 245))))();
}

uint64_t sub_1000DE59C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((((v1 + v3 - 1) < 0x7FFFFFFF) * ((v0 - 227) ^ 0x3FB)) ^ (v0 - 837))))();
}

uint64_t sub_1000DE5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(_DWORD *)(v20 - 128) = v18
                         - 1374699841 * ((2 * ((v20 - 136) & 0x38D66498) - (v20 - 136) + 1193909093) ^ 0x2ADD836C)
                         - 219;
  *(void *)(v20 - 136) = v16;
  *(void *)(v20 - 120) = v16;
  *(void *)(v20 - 112) = a15;
  *(void *)(v20 - 104) = a12;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v18 ^ 0x260)))(v20 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((15
                                              * (((v15
                                                 + (((v19 - 1241740411) >> ((7 * (v18 ^ 0x41)) ^ 0x96)) ^ 0xFF83FDFF)
                                                 + ((v19 - 1241740411) & 0xFF07FBFE)
                                                 + 346) & a11) != 0)) | v18)))(v21);
}

uint64_t sub_1000DE6CC@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, int a6@<W7>, int a7@<W8>)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((*(_DWORD *)(*v8 + 4 * v9) == ((a6 + a1) & a4 ^ (a7 + 2348) ^ (a6 + a2) & a3)) * a5) ^ a6)))();
}

uint64_t sub_1000DE70C()
{
  unsigned int v5 = ((229 * (v2 ^ 0xEE)) ^ 0xFFFFFDD5) + *(unsigned __int8 *)(v3 + 3);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1123 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1000DE758@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((56
                                * (*(_DWORD *)(v1 + 4 * ((((v3 - 597) | 0x54) ^ (a1 + 726)) + v4)) == ((v3 - 674) ^ v2))) ^ (v3 - 513))))();
}

uint64_t sub_1000DE7A4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unsigned int a8)
{
  uint64_t v14 = ((((v9 + a7) & a8) - 762) ^ v12) + v8;
  BOOL v16 = v10 == 56 || v14 == v11 + 200;
  return (*(uint64_t (**)(void))(v13 + 8 * ((v16 * a2) ^ v9)))();
}

void sub_1000DE7DC()
{
}

uint64_t sub_1000DE7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * (int)(((((7 * (v5 ^ 0x267) + 1836488426) & 0x92896BBF)
                                                                                        - 672)
                                                                                       * (v4 != 63)) ^ v5)))(a1, -265010019, a3, a4, 889516850);
}

void sub_1000DE840(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1000DE8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,unsigned int a38)
{
  return (*(uint64_t (**)(void))(v40
                              + 8
                              * ((2044
                                * (v39
                                 - 70636353
                                 + ((v38 + LODWORD(STACK[0x3C8]) - 596678603) ^ a37 & 0x7D7174BE ^ 0xFFFFFBC7) < 3)) ^ a38)))();
}

uint64_t sub_1000DE970(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v11 = a3 - 2129637372;
  if ((a3 - 2129637372) <= 0x40) {
    int v11 = 64;
  }
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((251
                                * (-v8 - v7 + (((a6 - 792) | 0x208) ^ (a7 - 1638)) + v11 >= ((a6 + 2145384517) & 0xCFEDFFF7 ^ (v10 + 1)))) ^ a6)))();
}

uint64_t sub_1000DEA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v21 + 8 * (((a19 == 1936793679) * (v20 ^ 0x5E5)) ^ v19)))();
}

void sub_1000DEA4C()
{
}

uint64_t sub_1000DEB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(void *)(v22 - 112) = v18;
  *(void *)(v22 - 104) = a18;
  *(_DWORD *)(v22 - 120) = v20 + ((~((v22 - 120) | 0x2B70FEE8) + ((v22 - 120) & 0x2B70FEE8)) ^ 0x4022484E) * v21 + 959;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v20 + 1623)))(v22 - 120);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((1741
                                              * (*(_DWORD *)(v22 - 116) - 1430518030 < ((289
                                                                                       * ((v20 - 129566243) & 0x7B905FF ^ 0x162)) ^ 0xBEA74B06))) ^ v20)))(v23);
}

uint64_t sub_1000DEBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(_DWORD *)(v24 - 120) = v20 + ((2 * ((v24 - 120) & 0x76A98BA8) - (v24 - 120) - 1990822830) ^ 0x1DFB3D0B) * v23 + 632;
  *(void *)(v24 - 112) = v22;
  *(void *)(v24 - 104) = a20;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v20 ^ 0x510)))(v24 - 120);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((((*(_DWORD *)(v24 - 116) - 1430518030) > 0xD7D10869)
                                              * (239 * ((v20 - 2073243372) & 0x7B932EF6 ^ 0x2D5) - 711)) ^ v20)))(v25);
}

uint64_t sub_1000DECA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30)
{
  return (*(uint64_t (**)(void))(v31 + 8 * (((a30 & 0x98EEDDF ^ 0x761) * (v30 > 0x7BE51A9F)) ^ 0x3EA)))();
}

uint64_t sub_1000DED00(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, char a6, int a7)
{
  *(unsigned char *)(v9 + v10) = *(unsigned char *)(v12 + (v8 + a4))
                       - (a6 & (2 * *(unsigned char *)(v12 + (v8 + a4))))
                       + 84;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v10 != 63) * a7) ^ (a2 + v7 - 716))))();
}

uint64_t sub_1000DED48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                                + 8
                                                                                * ((((a3 - 265010019) > 0x37)
                                                                                  * (((v3 + 239) | 0x154) ^ 0x2C3)) ^ (v3 + 450))))(a1, -265010019, 1470, a2, 889516850);
}

uint64_t sub_1000DEDA0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((*(_DWORD *)(v3 + 4 * v4) == a2) * (v2 ^ 0x48F)) ^ v2)))();
}

uint64_t sub_1000DEDD0()
{
  unsigned int v5 = 1734042137 * ((~(v2 | 0x3D7724DD) + (v2 & 0x3D7724DD)) ^ 0x9E46186F);
  *(_DWORD *)(v4 - 200) = v0 - v5 + 532;
  *(void *)(v4 - 168) = STACK[0x268];
  *(_DWORD *)(v4 - 160) = v5 + LODWORD(STACK[0x25C]);
  *(_DWORD *)(v4 - 156) = v1 - v5 + ((v0 - 1634355806) & 0x616A4BFF ^ (v0 - 1710268557));
  unint64_t v6 = STACK[0x270];
  *(void *)(v4 - 192) = STACK[0x260];
  *(void *)(v4 - 184) = v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 1882)))(v4 - 200);
  int v8 = *(_DWORD *)(v4 - 176);
  LODWORD(STACK[0x520]) = v8;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((1190 * (v8 == -1008821960)) ^ v0)))(v7);
}

void sub_1000DEEB4(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X8, X17 }
}

void sub_1000DEF3C()
{
}

uint64_t sub_1000DEFD4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  BOOL v18 = v15 != v16 || a13 != 632876696;
  return (*(uint64_t (**)(void))(v13 + 8 * ((v18 * (v14 + ((866 * (a1 ^ 0x15D)) ^ a9) + 726)) ^ a1)))();
}

uint64_t sub_1000DF028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v6 + 8 * ((555 * (v5 + 1 == v7 + 4)) ^ v4)))(v3, a2, a3, (v4 + 174) | 0x150);
}

uint64_t sub_1000DF0F0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ (704 * ((a1 + v2 + 122) < 0x7FFFFFFF)))))();
}

uint64_t sub_1000DF134(uint64_t a1, uint64_t a2, int a3)
{
  *(unsigned char *)(v3 + v6 + a2) = v7;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((unint64_t)(v6 + a2 + v5 - 280) < 0x38) * a3) ^ v4)))();
}

uint64_t sub_1000DF164()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2022 * (*(_DWORD *)(v1 + 4 * (((v0 + 837) ^ (v2 + 1003)) + v5)) == v3)) ^ v0)))();
}

uint64_t sub_1000DF19C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ (242 * ((unint64_t)(v2 - a1) < 0x20)))))();
}

uint64_t sub_1000DF1D0()
{
  *int v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

void sub_1000DF1F4()
{
}

void sub_1000DF208()
{
}

uint64_t sub_1000DF248(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t, void))(v3 + 8 * (v2 + 1607)))(*(unsigned int *)STACK[0x2D8], a2, 0);
  return sub_1000EA2C8(v4);
}

uint64_t sub_1000DF250()
{
  LODWORD(STACK[0x4E8]) = v0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((110 * (v2 ^ 1)) ^ (v1 + 1036))))();
}

uint64_t sub_1000DF290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * ((((6 * (v5 ^ 0x251)) ^ 0x747) * (v3 == v4)) ^ v5)))(a1, a2, a3, 2259238812);
}

void sub_1000DF2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(void *)(v24 - 104) = v20;
  *(void *)(v24 - 144) = v20;
  *(void *)(v24 - 136) = v22;
  *(_DWORD *)(v24 - 112) = (v21 + 1472) ^ (1755732067
                                         * ((((v24 - 144) | 0xC9ECFB7B) + (~(v24 - 144) | 0x36130484)) ^ 0x172A46A1));
  *(void *)(v24 - 128) = v23;
  *(void *)(v24 - 120) = a19;
  (*(void (**)(uint64_t))(v19 + 8 * (v21 + 1535)))(v24 - 144);
  JUMPOUT(0x1000DAEF0);
}

uint64_t sub_1000DF370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((((v27 + 38) ^ 0x166) * ((v28 - 2094253217) < 4)) ^ v27)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1000DF3B0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v30 = v20 ^ 0x601;
  char v31 = (v20 + 42) & v26;
  int v32 = v20 - 175;
  unint64_t v33 = (*(_DWORD *)(a18 + v28) ^ (v19 + v30 - 724)) + HIDWORD(v22);
  *(_DWORD *)(a18 + 4 * a1) = v33 + v19 - (v21 & (2 * v33));
  *(_DWORD *)(a18 + v28) = (v33 >> (v31 + 100)) | v19;
  BOOL v34 = v24 - 927708151 < v23;
  if (v18 > v25 != v24 - 927708151 < -968659614) {
    BOOL v34 = v18 > v25;
  }
  return (*(uint64_t (**)(void))(v27 + 8 * (v32 ^ (v34 * v29))))();
}

uint64_t sub_1000DF458()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v2 + 237915324) ^ 0x33B) * (v3 > v1 + 623)) ^ (v2 + 237915324))))();
}

uint64_t sub_1000DF498@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  int v47 = *(_DWORD *)(&a31 + ((v45 + v43) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v45 + v43)) = v47 ^ 0x34;
  *(unsigned char *)(a1 + (v45 + v43 + 1)) = ((v44 - 123) ^ BYTE1(v47) ^ 2)
                                                 - ((2 * ((v44 - 123) ^ BYTE1(v47))) & 0xA8)
                                                 + 84;
  *(unsigned char *)(a1 + (v45 + v43 + 2)) = (BYTE2(v47) ^ 0xDE) - ((2 * (BYTE2(v47) ^ 0xDE)) & 0xA8) + 84;
  *(unsigned char *)(a1 + (v45 + v43 + 3)) = (HIBYTE(v47) ^ 0xB6) - ((2 * (HIBYTE(v47) ^ 0xB6)) & 0xA8) + 84;
  BOOL v48 = v45 + 1724269891 < (a43 - 1464086882);
  if (v45 + 1724269891 < a2 != a43 - 1464086882 < a2) {
    BOOL v48 = a43 - 1464086882 < a2;
  }
  return (*(uint64_t (**)(void))(v46 + 8 * (((2 * v48) | (4 * v48)) ^ v44)))();
}

uint64_t sub_1000DF570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(*(void *)(a8 + 96) + 1568) = 0;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((*(_DWORD *)(a8 + 72) == a6) * ((3 * (v8 ^ 0x3AF) - a5) ^ (v10 - 885))) ^ (3 * (v8 ^ 0x3AF)))))();
}

uint64_t sub_1000DF5B0(uint64_t a1, uint64_t a2)
{
  unsigned int v7 = ((((v5 + 1698765050) & 0x9ABEE7FF) - 296) ^ 0xE1D7F988) & v4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * ((7
                                                                         * (((v2 - v7 + 318112339) ^ 0x9F760249)
                                                                          + 2147482400
                                                                          + (-(v3 + 2 * v7) & 0xDF3BFFB8 ^ 0xC113FB28) == 1872624380)) | v5)))(a1, a2, 283, 2422341081);
}

uint64_t sub_1000DF664@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int8x16_t a39)
{
  uint64_t v42 = (int8x16_t *)((char *)&STACK[0x670] + STACK[0x380] + (a6 ^ 0x9E346D562E05E54BLL));
  *uint64_t v42 = veorq_s8(*v40, a39);
  STACK[0x600] += 32;
  STACK[0x608] = a1;
  STACK[0x610] = a1;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41
                                                                                                  + 8 * (((535 * (v39 ^ 0x5C0) - 108) * (v42 == (int8x16_t *)a1)) ^ v39)))(a1, a2, 46, a3, a4, a5);
}

uint64_t sub_1000DF6F4@<X0>(uint64_t a1@<X0>, char a2@<W4>, unsigned int a3@<W5>, int a4@<W7>, int a5@<W8>)
{
  uint64_t v12 = (a5 ^ a4 ^ a3) + v8;
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(v5 + (v12 & 0xF)) ^ *(unsigned char *)(v6 + (v12 & 0xF)) ^ *(unsigned char *)((v12 & 0xF) + v7 + 2) ^ ((v12 & 0xF) * a2) ^ ((*(unsigned char *)(v10 + v12) ^ 0xE4) + (v9 & (2 * *(unsigned char *)(v10 + v12))) + 26);
  return (*(uint64_t (**)(void))(v11 + 8 * (a5 ^ (4 * (a3 + v8 + 1215 < 0x150)))))();
}

void sub_1000DF768()
{
}

uint64_t sub_1000DF770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v12 + 8 * ((1058 * (a12 - 853605377 < (a6 ^ 0x601u) + a6 - 161 + 2147481847)) ^ a6)))();
}

void sub_1000DF7C0()
{
}

uint64_t sub_1000DF804@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((62 * (a1 + 1 == v3 + 64)) ^ a2)))();
}

void sub_1000DF8C0(_DWORD *a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 8) + v2;
  *uint64_t v5 = (HIBYTE(v4) ^ 0xA2) + ~((((v3 - 49) & 0xF2) - 72) & (2 * HIBYTE(v4))) + 85;
  v5[1] = (BYTE6(v4) ^ 0xA8) - ((2 * BYTE6(v4)) & 0xA8) + 84;
  v5[2] = (BYTE5(v4) ^ 0xFE) - ((2 * (BYTE5(v4) ^ 0xFE)) & 0xA8) + 84;
  v5[3] = (BYTE4(v4) ^ 0xB3) - ((2 * (BYTE4(v4) ^ 0xB3)) & 0xA8) + 84;
  v5[4] = (BYTE3(v4) ^ 8) - ((2 * BYTE3(v4)) & 0xA8) + 84;
  v5[5] = (BYTE2(v4) ^ 0x91) - 2 * ((BYTE2(v4) ^ 0x91) & 0x56 ^ BYTE2(v4) & 2) + 84;
  v5[6] = (BYTE1(v4) ^ 0x76) - ((2 * (BYTE1(v4) ^ 0x76)) & 0xA8) + 84;
  v5[7] = v4 ^ 0xE0;
  *(_DWORD *)uint64_t v1 = *a1;
}

uint64_t sub_1000DF9EC@<X0>(int a1@<W6>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 + 1273) ^ v4) + a2 >= ((v2 - 347) ^ 0x89u)) * a1) ^ (v2 + 1273))))();
}

uint64_t sub_1000DF9FC(int a1, uint64_t a2, int a3)
{
  int v7 = v4 - 1140694438;
  if ((v7 + 1) > 0x40) {
    int v8 = v7 + 1;
  }
  else {
    int v8 = 64;
  }
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((3 * (a1 ^ 0x4AA)) ^ (a1 - 468)) * ((a3 - v3 - v5 + v8) < 0xF)) ^ a1)))();
}

uint64_t sub_1000DFAA8@<X0>(int a1@<W3>, int a2@<W8>)
{
  *uint64_t v6 = v6[623];
  BOOL v7 = ((v2 + ((a2 + 456) ^ 0x417) - 123) ^ (a1 - 312)) + v3 != v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v7 | (2 * v7)) ^ (a2 + 456))))();
}

uint64_t sub_1000DFAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                                           + 8 * (a5 ^ (((v6 & 0x18) == 4 * (((a5 - 607) | 0xC) ^ 0x38) - 988) << 6))))((v5 - v7));
}

uint64_t sub_1000DFB28()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((((v2 - 1170) | 0x1C) + 382) * (v0 == v1)) ^ v2)))(3620908045);
}

uint64_t sub_1000DFB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14, int a15, uint64_t a16, int a17, unint64_t *a18)
{
  unsigned int v21 = 1374699841 * (&a13 ^ 0x6DF41809);
  a16 = a11;
  a15 = v21 ^ 0x715AA818;
  a13 = v21 - 1312069736;
  a18 = &STACK[0x1274B0724696E775];
  a17 = (v20 - 2024873763) ^ v21;
  uint64_t v22 = (*(uint64_t (**)(unsigned int *))(v19 + 8 * (v20 ^ 0xAB1)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8 * ((22 * (a14 != ((v20 + 2084533526) & 0xAFF ^ (v18 + 590)))) | v20)))(v22);
}

uint64_t sub_1000DFC30(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((277 * ((a7 + 1 + v7) < 0x20)) ^ a3)))();
}

void sub_1000DFD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  unsigned int v23 = (v19 + 1942504235) & 0x8C37BF72;
  *(void *)(v22 - 120) = v20;
  *(void *)(v22 - 112) = v21;
  *(_DWORD *)(v22 - 136) = v23 - 1374699841 * ((v22 + 1082474589 - 2 * ((v22 - 144) & 0x408540ED)) ^ 0x2D7158E4) - 59;
  *(void *)(v22 - 144) = v18;
  *(void *)(v22 - 128) = v18;
  uint64_t v24 = v17;
  (*(void (**)(uint64_t))(v17 + 8 * (int)((v19 + 1942504235) & 0x8C37BD32 | 0x2C0)))(v22 - 144);
  *(void *)(v22 - 128) = v21;
  *(void *)(v22 - 120) = a17;
  *(void *)(v22 - 144) = v18;
  *(void *)(v22 - 136) = v20;
  *(void *)(v22 - 104) = v18;
  *(_DWORD *)(v22 - 112) = (v23 + 610) ^ (1755732067
                                        * ((~((v22 - 144) | 0xAD979235) + ((v22 - 144) & 0xAD979235)) ^ 0x8CAED011));
  (*(void (**)(uint64_t))(v24 + 8 * (int)((v19 + 1942504235) & 0x8C37BD52 | 0x2A1)))(v22 - 144);
  JUMPOUT(0x1000DAEF0);
}

uint64_t sub_1000DFE10(double a1)
{
  *(double *)(v3 + v4) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((480 * (v2 != v4)) ^ v1)))();
}

void sub_1000DFE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)(v20 - 128) = v17;
  *(void *)(v20 - 120) = a15;
  *(void *)(v20 - 144) = v15;
  *(void *)(v20 - 136) = v16;
  *(_DWORD *)(v20 - 112) = (v18 + 1472) ^ (1755732067
                                         * (((((v20 - 144) | 0x32696264) ^ 0xFFFFFFFE) - (~(v20 - 144) | 0xCD969D9B)) ^ 0x13502040));
  *(void *)(v20 - 104) = v15;
  (*(void (**)(uint64_t))(v19 + 8 * (v18 ^ 0x603)))(v20 - 144);
  JUMPOUT(0x1000DAEECLL);
}

void sub_1000DFEA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned char *a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned char *a21,uint64_t a22,unsigned char *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  a21[3] = (HIBYTE(a6) ^ 0x6E) - 2 * ((((a28 - 110) | 0x48) - 75) & HIBYTE(a6) ^ (HIBYTE(a6) ^ 0x6E) & 3) - 126;
  a17[9] = BYTE5(v35) ^ 0x86;
  a17[15] = BYTE1(a6) ^ 0x9E;
  a23[8] = a6 ^ 0x58;
  a21[9] = (BYTE2(a6) ^ 0x82) - 2 * ((BYTE2(a6) ^ 0x82) & 3 ^ BYTE2(a6) & 1) - 126;
  a23[26] = BYTE4(v35) ^ 0x20;
  char v37 = (a7 ^ 0x14) - ((2 * (a7 ^ 0x14) + 58) & 0x36) - 104;
  if ((a7 ^ 0x27B33CC383358514uLL) < 0x8134422366A90F03) {
    char v37 = v33;
  }
  char v38 = v37 ^ 0x9B;
  if ((a7 ^ 0x27B33CC383358514uLL) >= 0x8134422366A90F03) {
    char v39 = 3;
  }
  else {
    char v39 = 0;
  }
  char v40 = *(unsigned char *)(a32 + 531 + (BYTE6(v35) ^ 0xDLL));
  a17[7] = HIBYTE(v35) ^ 0x5C;
  a23[27] = BYTE1(a7) ^ 0x85;
  a21[10] = 7 * (v40 ^ 0x9C) - ((6 * v40) & 4) - 126;
  a17[10] = v38 + v39;
  HIDWORD(v41) = *(unsigned __int8 *)(a32 + (((BYTE2(a7) ^ 0x35) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  LODWORD(v41) = (HIDWORD(v41) << 26) ^ (HIDWORD(v41) << 24);
  a23[10] = BYTE4(a7) ^ 0xC3;
  a21[14] = (BYTE3(a7) ^ 0x83) - 2 * ((BYTE3(a7) ^ 0x83) & 0xA ^ BYTE3(a7) & 8) - 126;
  a21[20] = (v41 >> 25) ^ 0x9E;
  a21[4] = (BYTE6(a7) ^ 0xB3) - ((2 * (BYTE6(a7) ^ 0xB3)) & 4) - 126;
  a21[16] = (BYTE5(a7) ^ 0x3C) + (~(2 * BYTE5(a7)) | 0xFB) - 125;
  unsigned int v42 = *(unsigned __int8 *)(a32 + (((HIBYTE(a7) ^ 0x27) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a23[20] = a3 ^ 0x42;
  HIDWORD(v41) = v42;
  LODWORD(v41) = (v42 << 26) ^ (v42 << 24);
  a21[15] = (v41 >> 25) ^ 0x9E;
  unsigned int v43 = *(unsigned __int8 *)(a16 + (((a3 >> 1) & 0x80 | ((unsigned __int16)a3 >> 9)) ^ 0xE1));
  a23[17] = BYTE3(a3) ^ 0x48;
  a17[14] = BYTE4(a3) ^ 0xCC;
  *a21 = BYTE5(a3) + (~(2 * BYTE5(a3)) | 0xFB) + 3;
  a23[21] = HIBYTE(a3) ^ 0x1F;
  a23[13] = BYTE2(a3) ^ 0x50;
  a23[3] = (v43 ^ 0x8A ^ (v43 >> 2) & 0x17) + 32;
  a17[12] = BYTE6(a3) ^ 6;
  char v44 = *(unsigned char *)(a32 + 531 + (v36 ^ 0x35) + 2 * (v36 & 0xD5 ^ 0x15) - 4 * (v36 & 0xD5 ^ 0x15) + 213);
  a23[11] = BYTE2(v36) ^ 0xB6;
  a21[5] = 7 * (v44 ^ 0x9C) - ((6 * v44) & 4) - 126;
  a21[2] = (BYTE3(v36) ^ 0xE4) - ((2 * BYTE3(v36)) & 4) - 126;
  a23[25] = BYTE1(v36) ^ 0x76;
  unsigned int v45 = *(unsigned __int8 *)(a16 + (((v36 >> 25) & 0x80 | (v36 >> 33) & 0x7F) ^ 0xB1));
  a23[22] = BYTE5(v36) ^ 0xD3;
  a23[18] = HIBYTE(v36) ^ 0x50;
  a23[2] = BYTE1(v34) ^ 0x56;
  a21[1] = v34 ^ 0xD2;
  a23[30] = BYTE3(v32) ^ 0x5F;
  a23[9] = BYTE2(v34) ^ 0xBE;
  a23[19] = (v45 ^ 0x8A ^ (v45 >> 2) & 0x17) + 32;
  a21[7] = (BYTE6(v36) ^ 0x2B) - ((2 * (BYTE6(v36) ^ 0x2B)) & 4) - 126;
  unsigned int v46 = *(unsigned __int8 *)(a32 + (((BYTE4(v32) ^ 0xF6) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a23[24] = BYTE6(v32) ^ 0x81;
  a23[12] = BYTE5(v32) ^ 0xFD;
  HIDWORD(v41) = v46;
  LODWORD(v41) = (v46 << 26) ^ (v46 << 24);
  a23[1] = HIBYTE(v32) ^ 0x9D;
  a23[23] = (v41 >> 25) ^ 0x1C;
  JUMPOUT(0x1000E02F8);
}

uint64_t sub_1000E0338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v18 - 136) = v13 + ((2 * ((v18 - 136) & 0x2A988F48) - (v18 - 136) + 1432842423) ^ 0xC1CA39EE) * v16 + 539;
  *(void *)(v18 - 128) = v17;
  *(void *)(v18 - 120) = a13;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v13 ^ 0x4F3)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((((*(_DWORD *)(v18 - 132) + v14) > 0xD08F965E)
                                              * (((v13 - 755) | 0x200) - 538)) ^ v13)))(v19);
}

uint64_t sub_1000E03E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v12 = *(unsigned __int8 *)(v8 + (v11 + v10 + 2));
  uint64_t v13 = ((218 * (a8 ^ 0x284)) ^ v12 ^ 0xFDFDFDE4) + ((2 * v12) & 0xD4) + 1610087384;
  BOOL v14 = a7 + (a8 ^ 0x284) + 1139 != 1979563894;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8 * ((v14 | (32 * v14)) ^ a8)))(a1, v13);
}

uint64_t sub_1000E0458(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v10 = (v7 + a3 + v6 + v5 - v8 + 1405);
  *(void *)(v3 - 7 + v10) = *(void *)(a2 - 7 + v10);
  return (*(uint64_t (**)(void))(v9 + 8 * ((700 * (v8 - (v4 & 0xFFFFFFF8) == -8)) ^ a3)))();
}

uint64_t sub_1000E04B4@<X0>(char a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W8>, int8x16_t a7@<Q0>, int8x8_t a8@<D1>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v53 = a4 - 8;
  uint64_t v54 = (a2 + v53);
  v56.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)v53) & 0xF;
  v56.val[0].i64[1] = (v51 + (_BYTE)v53) & 0xF;
  v56.val[1].i64[0] = (v50 + (_BYTE)v53) & 0xF;
  v56.val[1].i64[1] = (v49 + (_BYTE)v53) & 0xF;
  v56.val[2].i64[0] = (v48 + (_BYTE)v53) & 0xF;
  v56.val[2].i64[1] = (v46 + (_BYTE)v53 + 17 * v52) & 0xF;
  v56.val[3].i64[0] = (a1 + (_BYTE)v53) & 0xF;
  v56.val[3].i64[1] = (v47 + (_BYTE)v53) & 0xF;
  *(int8x8_t *)(a3 + v54) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v45 + (v54 & 0xF) - 7), *(int8x8_t *)(a3 + v54)), veor_s8(*(int8x8_t *)((v54 & 0xF) + v43 - 5), *(int8x8_t *)((v54 & 0xF) + v44 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v56, a7), a8)));
  return (*(uint64_t (**)(void))(a43 + 8 * ((25 * (a5 == v53)) ^ a6)))();
}

uint64_t sub_1000E04BC@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v7 = v4 + a1;
  *(unsigned char *)(v2 + v7) = v3;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v7 + 1) < 0x38) * v5) ^ a2)))();
}

uint64_t sub_1000E04F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unsigned int a47)
{
  unsigned int v51 = ((LODWORD(STACK[0x61C]) ^ v50) + (v47 ^ v50)) % a47;
  *(_DWORD *)(STACK[0x2B0] + 52) = (v51 ^ 0xFFECD4BE) + 299842524 + ((2 * v51) & 0x297C);
  int v52 = STACK[0x624];
  LODWORD(STACK[0x4E8]) = STACK[0x624];
  return (*(uint64_t (**)(void))(v49 + 8 * ((1158 * (v52 == v50)) ^ (v48 - 105))))();
}

uint64_t sub_1000E056C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9, uint64_t a10, uint64_t a11)
{
  int v15 = 1755732067 * ((839139926 - ((v14 - 128) | 0x32044256) + ((v14 - 128) | 0xCDFBBDA9)) ^ 0x133D0072);
  *(_DWORD *)(v14 - 128) = ((v13 << 6) & 0x4DDBFDC0)
                         - v15
                         + ((((v11 - 392) | 0x40) - 1494352466) ^ (32 * v13))
                         + 2132800416;
  *(_DWORD *)(v14 - 112) = (v11 + 850) ^ v15;
  *(void *)(v14 - 120) = a11;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v11 | 0x570)))(v14 - 128);
  return (*(uint64_t (**)(uint64_t))(v12 + 8
                                                  * ((1426 * ((*a9 - 715496184) < 0x7FFFFFFF)) ^ v11)))(v16);
}

uint64_t sub_1000E0654(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int32x4_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  HIDWORD(a16) = v63;
  return sub_1000BFC28(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a9);
}

uint64_t sub_1000E0668(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1179
                                * ((((*(unsigned __int8 *)(a2 + 2) - 38) << (a3 + ((v4 - 39) & 0xAE) + 91)) & v6)
                                 + ((*(unsigned __int8 *)(a2 + 2) - 38) ^ v5) == v5)) ^ v4)))();
}

uint64_t sub_1000E06C4(int8x16_t a1, int8x8_t a2, int8x8_t a3, uint64_t a4, char a5, char a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  uint64_t v58 = a8 + v50 - 8 + (*(_DWORD *)(v57 - 124) ^ (v49 + 147));
  v60.val[0].i64[0] = ((_BYTE)a8 + (_BYTE)v50 - 8 + (*(unsigned char *)(v57 - 124) ^ (v49 - 109))) & 0xF;
  v60.val[0].i64[1] = ((_BYTE)a8 + v56 - 8) & 0xF;
  v60.val[1].i64[0] = ((_BYTE)a8 + v55 - 8) & 0xF;
  v60.val[1].i64[1] = ((_BYTE)a8 + v54 - 8) & 0xF;
  v60.val[2].i64[0] = ((_BYTE)a8 + v53 - 8) & 0xF;
  v60.val[2].i64[1] = ((_BYTE)a8 + v52 - 8) & 0xF;
  v60.val[3].i64[0] = ((_BYTE)a8 + a6 - 8) & 0xF;
  v60.val[3].i64[1] = ((_BYTE)a8 + a5 - 8) & 0xF;
  *(int8x8_t *)(*(void *)(v57 - 152) + v58) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(*(void *)(v57 - 136) + v58), *(int8x8_t *)(v46 + (v58 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v48 + (v58 & 0xF) - 7), *(int8x8_t *)(v47 + (v58 & 0xF) - 7)))), a3), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v60, a1), a2)));
  return (*(uint64_t (**)(void))(a46 + 8 * ((117 * (a8 != v51 + 8)) ^ *(_DWORD *)(v57 - 144))))();
}

uint64_t sub_1000E06EC@<X0>(int a1@<W8>)
{
  int v4 = (a1 - 2037874549) & 0x7977791F;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (a1 + 113)))(v1 - 0x70459CB0620F0DF9);
  STACK[0x5B0] -= 16;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((v2 == -1008821960) * ((v4 - 5) ^ 0x46B)) ^ (v4 - 14))))(v5);
}

uint64_t sub_1000E0770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  LODWORD(STACK[0x5A4]) = v7;
  LODWORD(STACK[0x5F4]) = v8;
  LODWORD(STACK[0x584]) = v9;
  LODWORD(STACK[0x54C]) = v10;
  LODWORD(STACK[0x524]) = v11 + 64;
  return sub_1000FDEE8(a1, a2, a3, 1008845537, a5, 278, a7, 0x83FEB38F813DF820);
}

uint64_t sub_1000E07C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v30 = v25 - 2046223212;
  if ((v25 - 2046223212) <= 0x40) {
    int v30 = 64;
  }
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((113 * (-v28 - v27 + ((69 * (v26 ^ 0x6B2)) ^ 0x79F6E3E6u) + v30 < 0xF)) ^ v26)))(-v28, a2, a3, 2259238812, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1000E084C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = (_DWORD *)(v8 + 4 * (a7 + v10));
  int v13 = *(v12 - 8) ^ *(v12 - 3);
  unsigned int v14 = v13 + v7 - ((2 * v13) & 0x87BD3270);
  int v15 = *(v12 - 16) ^ *(v12 - 14);
  HIDWORD(v16) = v15 ^ (20 * (a5 ^ 3) + 1138661308) ^ v14;
  LODWORD(v16) = v15 ^ ~v14;
  *uint64_t v12 = (v16 >> 31) + v7 - ((2 * (v16 >> 31)) & 0x87BD3270);
  return (*(uint64_t (**)(void))(v9 + 8 * ((70 * (a7 + 1 != v11 + 80)) | (a5 + 784))))();
}

uint64_t sub_1000E08EC@<X0>(int a1@<W8>)
{
  BOOL v4 = v1[2] != 0x7CA4338F32EE9BBDLL && (v1[1] | v1[4]) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (((a1 - 467) | 0x429) ^ (a1 + 565))) ^ a1)))();
}

uint64_t sub_1000E0944()
{
  int v4 = *(_DWORD *)(v1 + 52);
  int v5 = LODWORD(STACK[0x2F4]) - 257179697;
  int v6 = 1224239923 * ((((2 * (v3 - 200)) | 0x6B130126) - (v3 - 200) + 1249279853) ^ 0x473A7D44);
  *(_DWORD *)(v3 - 176) = LODWORD(STACK[0x2B8]) - v6 + LODWORD(STACK[0x2BC]);
  *(void *)(v3 - 192) = STACK[0x368];
  *(_DWORD *)(v3 - 184) = v5 ^ v6;
  *(_DWORD *)(v3 - 180) = v6 + 1099686628 + v4;
  *(void *)(v3 - 168) = &STACK[0x660];
  *(void *)(v3 - 160) = v1 + 0x4CA0F7536780EB53;
  *(_DWORD *)(v3 - 196) = v6 + v0 - 74;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1998)))(v3 - 200);
  int v8 = *(_DWORD *)(v3 - 200);
  LODWORD(STACK[0x520]) = v8;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((806 * (v8 == ((v0 - 90) ^ 0xC3DE981F) + ((v0 - 90) | 0x119))) ^ v0)))(v7);
}

void sub_1000E0A58()
{
}

uint64_t sub_1000E0AA0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((a3 - 361) ^ 0x2F3) - 443) * (v3 == v4)) ^ a3)))();
}

uint64_t sub_1000E0ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  return (*(uint64_t (**)(void))(v21 + 8 * ((1781 * ((v20 ^ 0x70) + a20 - *(_DWORD *)(a2 + 4) == 1388429372)) ^ v20)))();
}

uint64_t sub_1000E0B08@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a1 + a2 + v3) = v4;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((unint64_t)(a2 + 1 + v3) > 0x3F) * (((v2 - 1643339124) & 0x61F35DDD) - 494)) ^ (v2 - 1643339124) & 0x61F35DDD)))();
}

uint64_t sub_1000E0B54@<X0>(int a1@<W0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W8>)
{
  int v17 = (a6 ^ v11)
      + v12
      + *(_DWORD *)(a4 + 4 * (v9 + v15))
      + (((v8 ^ a1) + ((2 * (a2 ^ 0x240)) ^ (v11 + 414)) - (v10 & (2 * (v8 ^ a1)))) ^ a7)
      + (*(_DWORD *)(v7 + 4 * (*(unsigned char *)(a3 + v9 + v15) - 79)) ^ v14);
  unsigned int v18 = (v17 + v11 - (v10 & (2 * v17))) ^ v11;
  int v19 = ((v18 << (*(unsigned char *)(a5 + v9 + v15) - 23)) | (v18 >> (23 - *(unsigned char *)(a5 + v9 + v15)))) + (a1 ^ v11);
  return (*(uint64_t (**)(void))(v13 + 8 * (((v9 + 1 == v16 + 32) | (16 * (v9 + 1 == v16 + 32))) ^ a2)))(v19 + v11 - (v10 & (2 * v19)));
}

uint64_t sub_1000E0C24(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16)
{
  unsigned int v28 = a15 - 16;
  unint64_t v29 = v28 & ((a14 - 180) ^ v22);
  unint64_t v30 = v29;
  uint64_t v31 = v19;
  v32.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v25).u64[0];
  v32.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v25).u64[0];
  int8x16_t v33 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a16 + v28), *(int8x16_t *)(v16 + v29 - 15)), veorq_s8(*(int8x16_t *)(v18 + v29 - 15), *(int8x16_t *)(v17 + v29 - 15))));
  int8x16_t v34 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v33, v33, 8uLL), v27), vmulq_s8(v32, v26)));
  *(int8x16_t *)(v20 + v28) = vextq_s8(v34, v34, 8uLL);
  return (*(uint64_t (**)(void))(v24 + 8 * (((v21 == 16) * v23) ^ a14)))();
}

uint64_t sub_1000E0C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_1000F793C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1000E0C40@<X0>(uint64_t a1@<X8>, unsigned int a2, uint64_t a3, unsigned int a4)
{
  unsigned int v8 = (v6 - 1276896554) & 0xF02F73E4;
  unsigned int v9 = 1225351577 * ((-1812246094 - (&a2 | 0x93FB51B2) + (&a2 | 0x6C04AE4D)) ^ 0x4F9E765B);
  a3 = v5;
  a2 = v4 - v8 - v9 + (v7 & 0xE1D9297F) + 1376372206;
  a4 = v9 + (v7 & 0xE1D9297F) - 157;
  uint64_t v10 = (*(uint64_t (**)(unsigned int *))(a1 + 8 * (int)((v7 & 0xE1D9297F) + 1686)))(&a2);
  return sub_1000E0CE8(v10);
}

uint64_t sub_1000E0D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8
                                                     + 8 * (((v6 != (v7 ^ (a6 - 189) ^ (a6 - 25))) * (v7 - 809)) ^ v7)))(a1, -688154232);
}

uint64_t sub_1000E0D50@<X0>(uint64_t a1@<X8>)
{
  int v3 = v1 + 179;
  int v4 = v1 + 59517699;
  unsigned int v5 = *(_DWORD *)(v2 - 0x65EF48AAD10F5704) - 538900416;
  unsigned int v6 = (((v4 - 59517731) | 0x20) ^ 0xEEDCEF5E) + *(_DWORD *)(v2 - 0x65EF48AAD10F5708);
  int v7 = (v5 < 0xC08F56E) ^ (v6 < 0xC08F56E);
  BOOL v8 = v5 > v6;
  if (v7) {
    BOOL v8 = v5 < 0xC08F56E;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * (int)((v8 * (v4 & 0xFC73D3DF ^ 0x148)) ^ v3)))();
}

uint64_t sub_1000E0E08(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(_DWORD *)(v11 + 1424) = 70636353;
  *(_DWORD *)(v11 + 1428) = 596678603;
  *(void *)(v11 + 1432) = v9;
  *(void *)(v11 + 1440) = v9;
  *(_DWORD *)(v11 + 1448) = v10;
  *(__n128 *)(v11 + 1452) = a2;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * (((((v7 - 1673587908) & 0x63C0E66A) == -6) * v8) ^ v7)))(a1, 583083080, a4, a5, a6, a7, 48, 2175935195);
}

uint64_t sub_1000E0E8C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((v2 + v1 + ((v0 + 157) ^ 0x50004417u) < 0xC) * (((v0 - 1272) | 6) ^ 0xB4)) ^ v0)))();
}

uint64_t sub_1000E0EE0(uint64_t a1, int a2)
{
  BOOL v11 = v8 > 0xE2EDB745;
  *(unsigned char *)(*(void *)(v10 - 120) + (a2 - 1872467169)) = *(unsigned char *)(v2 + (a2 - 1872467169)) ^ *(unsigned char *)(v3 + ((a2 - 1872467169) & 0xFLL)) ^ *(unsigned char *)(v5 + ((a2 - 1872467169) & 0xFLL)) ^ *(unsigned char *)(v4 + ((a2 - 1872467169) & 0xFLL)) ^ (97 * ((a2 + 31) & 0xF)) ^ 0x54;
  int v12 = v7 - 114 + a2;
  unsigned int v13 = a2 - 1384729638;
  uint64_t v14 = (v12 - 1484);
  int v15 = v11 ^ (v13 < v6);
  BOOL v16 = v13 < a1;
  if (!v15) {
    BOOL v11 = v16;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8 * ((84 * v11) ^ v7)))(a1, v14);
}

uint64_t sub_1000E0F84@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, uint64_t a4@<X8>)
{
  int v8 = v6 - 32;
  uint64_t v9 = (a2 + v8);
  long long v10 = *(_OWORD *)(a4 + v9 - 15);
  long long v11 = *(_OWORD *)(a4 + v9 - 31);
  uint64_t v12 = v4 + v9;
  *(_OWORD *)(v12 - 15) = v10;
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 + v8 != 32) * a3) | a1)))();
}

uint64_t sub_1000E0F8C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((11 * (*(_DWORD *)(v1 + 4 * ((v3 ^ 0x70Eu) + a1 + v4)) != ((v3 - 1769) ^ v2))) ^ (v3 - 1787))))();
}

uint64_t sub_1000E0FD0()
{
  int v3 = v1 - ((2 * v1 + 1142163836) & 0x6DA20408) - 656734526;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((970
                                * ((v3 ^ (v2 + 321945135) & 0xECCF7D86 ^ 0xD900FCF9)
                                 + 1040073872
                                 + ((2 * v3) & 0xDFA3FEFE ^ 0x4DA20408) == 768623631)) ^ v2)))();
}

void sub_1000E1070()
{
}

void sub_1000E107C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,uint64_t a35,uint64_t a36)
{
  *(_DWORD *)(a36 + 4 * v36) ^= a34;
  JUMPOUT(0x1000E109CLL);
}

uint64_t sub_1000E10F8()
{
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((42 * (v4 + 1 == v3 + 16)) | v0)))(v2);
}

uint64_t sub_1000E11D0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * (int)(((STACK[0x3EC] & 0xC6D4DBFC ^ 0x2DB)
                                                                     * (v2 < 0xF1260384)) ^ (v3 - 62))))(a1, a2, 1923539499);
}

uint64_t sub_1000E1220()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 989) ^ 0x33A) + 432) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1000E1258(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_100162850 + ((1007 * (*(_DWORD *)(a2 + 4) == 1576401743)) ^ 0x5EAu)))(4294925278);
}

uint64_t sub_1000E12AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((11 * (a1 + 1 != v3 + 64)) ^ v1)))();
}

uint64_t sub_1000E1374(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((a1 == 0) ^ v1) & 1 | (32 * (((a1 == 0) ^ v1) & 1))) ^ v1)))();
}

uint64_t sub_1000E13A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((136 * (v4 ^ v6) - 1904) | 0x119) ^ a4) * (v5 == 56)) ^ v4)))();
}

void sub_1000E13DC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  uint64_t v2 = (char *)*(&off_100166A10 + (v1 ^ 0x13C)) - 4;
  uint64_t v3 = *(void *)&v2[8
                    * ((14
                      * ((*(uint64_t (**)(uint64_t, uint64_t))&v2[8 * (v1 ^ 0x645)])(32, 0x101004023FF3BD5) != 0)) ^ v1)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000E148C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 - 610294565) & 0x24605EBF) - 1549)
                                     * (((v3 ^ 0xBF76CF98) + 2075114880 + (v0 & 0x7EED9F30) - 992382233) >> 31)) ^ v1)))();
}

uint64_t sub_1000E1524()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 < ((v1 + 1447) ^ 0x7ACu) - 108) * (7 * ((v1 + 1447) ^ 0x7AC) - 976)) | (v1 + 1447))))();
}

uint64_t sub_1000E1560@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, unint64_t *a5, uint64_t a6, int a7, char a8, unsigned int a9, unint64_t *a10, int a11)
{
  uint64_t v14 = *(void *)(v11 + 16);
  unsigned int v15 = 628203409 * ((2 * (&a4 & 0x701BC640) - &a4 + 266615228) ^ 0x8D6C358F);
  a8 = 103 - -111 * ((2 * (&a4 & 0x40) - &a4 - 68) ^ 0x8F);
  a9 = (a1 ^ 0xAF0B820D)
     + v15
     + 1006615440
     + ((v13 - 80) ^ (2 * a1) & 0xDBF3EDFE ^ (((v13 - 2049697815) & 0x7A2BE6EF) - 2115967053));
  a5 = &STACK[0xC42E147E80B51F0];
  a6 = v14;
  a4 = &STACK[0x5BBAD1DEA41281B4];
  a10 = &STACK[0x217873FB48369FDD];
  a11 = (v13 + 1172344941) ^ v15;
  uint64_t v16 = (*(uint64_t (**)(unint64_t **))(v12 + 8 * (v13 + 1593)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * ((1356 * (a7 == -1008821960)) ^ v13)))(v16);
}

uint64_t sub_1000E16B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  *(void *)(a7 + (v9 - v10)) = *(void *)(a3 + (v9 - v10));
  return (*(uint64_t (**)(void))(v8 + 8 * (((a8 + v10 == a5) * v12) ^ v11)))();
}

uint64_t sub_1000E16E0()
{
  uint64_t v4 = *(void *)(v6 + 32);
  *(_DWORD *)(v3 - 112) = v0 + 1374699841 * (((v3 - 128) & 0xA7CD2DE6 | ~((v3 - 128) | 0xA7CD2DE6)) ^ 0x35C6CA10) + 1687;
  *(void *)(v3 - 128) = v4;
  *(void *)(v3 - 120) = v2;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x7B7)))(v3 - 128);
}

uint64_t sub_1000E17A0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((-2 - ((a1 | 0x5548FCDC) + (~a1 | 0xAAB70323))) ^ 0xC7431B2A);
  return (*(uint64_t (**)(void))((char *)*(&off_100166A10 + v1 - 1548)
                              + 8 * (((*(void *)(a1 + 8) != *(void *)a1) * ((v1 ^ 0x7F1) - 318)) ^ v1)
                              - 4))();
}

uint64_t sub_1000E1820(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v5 + 8 * (((((a4 - 620) | 0xC0) ^ 0x36C) * (v4 < 0x20)) ^ a4)))(a1, (a4 - 1097));
}

uint64_t sub_1000E1854@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v25 = v22 - 274;
  int v26 = v22 + 623;
  *(_DWORD *)(v24 - 128) = v22 + 623;
  uint64_t v27 = *(void *)(v23 + 8 * ((v22 - 274) & 0xE6E8C33)) - 8;
  int v28 = *(unsigned __int8 *)(v27 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB2DLL) ^ 0xD7));
  *(_DWORD *)(v24 - 216) = a1;
  int v29 = v28 ^ 0x13;
  uint64_t v30 = *(void *)(v23 + 8 * (v25 ^ 0x3B)) - 8;
  int v31 = v26 ^ 0x37 ^ *(unsigned __int8 *)(v30 + (*v20 ^ 0xB1));
  uint64_t v32 = *(void *)(v23 + 8 * (v25 ^ 0x3E)) - 12;
  int v33 = *(unsigned __int8 *)(v32 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB22) ^ 0x49));
  int v34 = (v29 << 8) | (v31 << 24);
  HIDWORD(v35) = ~v33;
  LODWORD(v35) = (v33 ^ 0xF8) << 24;
  LOBYTE(v31) = v35 >> 26;
  uint64_t v36 = *(void *)(v23 + 8 * (v25 ^ 0x14)) - 8;
  int v37 = *(unsigned __int8 *)(v30 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB23) ^ 0xB8));
  int v38 = *(unsigned __int8 *)(v32 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB26) ^ 0x6BLL));
  HIDWORD(v35) = ~v38;
  LODWORD(v35) = (v38 ^ 0xF8) << 24;
  unsigned __int8 v39 = *(unsigned char *)(v27 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB21) ^ 0x2ELL));
  int v40 = ((v35 >> 26) ^ 0x53) << 16;
  int v41 = *(unsigned __int8 *)(v32 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB2ELL) ^ 0x47));
  HIDWORD(v35) = ~v41;
  LODWORD(v35) = (v41 ^ 0xF8) << 24;
  unsigned int v42 = v34 & 0xFF00FF00 | (*(unsigned char *)(v36 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB2CLL) ^ 0xECLL))
                                           + 105) ^ 9 | (((v35 >> 26) ^ 0x1E) << 16);
  int v43 = (*(unsigned char *)(v36 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB20) ^ 0x36)) + 105) ^ 0x2A | ((v39 ^ 0xD6) << 8) | ((v31 ^ 0xFB) << 16) | ((v37 ^ 0xB1) << 24);
  LODWORD(v32) = *(unsigned __int8 *)(v32 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB2ALL) ^ 0xCBLL));
  HIDWORD(v35) = ~v32;
  LODWORD(v35) = (v32 ^ 0xF8) << 24;
  unsigned int v44 = ((*(unsigned char *)(v36 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB28) ^ 0xA9)) + 105) | ((*(unsigned __int8 *)(v27 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB29) ^ 0x30)) ^ 0x26) << 8)) & 0xFF00FFFF | (((v35 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v30 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB2BLL) ^ 0x35)) ^ 0xC6) << 24);
  unsigned int v45 = v40 & 0xFFFFFF00 | ((*(unsigned __int8 *)(v27 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB25) ^ 0x77)) ^ 0xDC) << 8) | (*(unsigned char *)(v36 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB24) ^ 0xB5)) + 105) ^ 0xA8 | ((*(unsigned __int8 *)(v30 + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB27) ^ 0xBFLL)) ^ 0xFFFFFFDF) << 24);
  uint64_t v46 = *(void *)(v23 + 8 * (v25 - 91)) - 8;
  uint64_t v47 = *(void *)(v23 + 8 * (v25 - 11)) - 12;
  LODWORD(v27) = *(_DWORD *)(v46
                           + 4
                           * ((*(unsigned char *)(v36
                                                         + (*(unsigned __int8 *)(v21 - 0x4CA0F7536780EB20) ^ 0x36))
                                              + 105) ^ 0xFDu)) ^ 0x99D445E4 ^ *(_DWORD *)(v47
                                                                                        + 4
                                                                                        * (v31 ^ 0x61u));
  *(_DWORD *)(v24 - 144) = v25;
  uint64_t v48 = *(void *)(v23 + 8 * (v25 - 69));
  LODWORD(v27) = (v27 - ((2 * v27) & 0x9B795810) + 1304210440) ^ *(_DWORD *)(v48 + 4 * (v37 ^ 0x24u));
  uint64_t v49 = *(void *)(v23 + 8 * (v25 ^ 0xEC)) - 8;
  int v50 = *(_DWORD *)(v49 + 4 * (v39 ^ 0xEEu)) ^ v42 ^ (v27 - ((2 * v27) & 0x617FAF70) - 1329604680);
  int v51 = v50 ^ v44;
  int v172 = v50;
  int v52 = v50 ^ v44 ^ 0x4D;
  *(_DWORD *)(v24 - 200) = v50 ^ v44;
  *(_DWORD *)(v24 - 176) = v52 ^ v45;
  LODWORD(v27) = v52 ^ v45 ^ (v43 - ((2 * v43) & 0xC3F1D1BC) + 1643702494);
  int v211 = ((unsigned __int16)(v52 ^ v45 ^ (v43 - ((2 * v43) & 0xD1BC) - 5922)) >> 8);
  int v203 = BYTE2(v27);
  LODWORD(v32) = *(_DWORD *)(v49 + 4 * (v211 ^ 0x12u)) ^ *(_DWORD *)(v47 + 4 * (BYTE2(v27) ^ 0x46u)) ^ 0x9F123162;
  LODWORD(v30) = v27 ^ 0xDB0FC577;
  int v208 = (v52 ^ v45 ^ (v43 - ((2 * v43) & 0xBC) - 34));
  LODWORD(v27) = (v32 - ((2 * v32) & 0x6CF3467C) - 1233542338) ^ *(_DWORD *)(v46 + 4 * (v208 ^ 0xF7u));
  unsigned int v300 = BYTE3(v30);
  LODWORD(v36) = v50 ^ *(_DWORD *)(v48 + 4 * (BYTE3(v30) ^ 0x65)) ^ (v27 - ((2 * v27) & 0x9B795810) + 1304210440);
  unint64_t v290 = __PAIR64__(v44, v45);
  int v292 = v36 ^ 0x852AADFA;
  *(_DWORD *)(v24 - 160) = v36;
  int v53 = v36 ^ 0x852AADFA ^ (v45 - ((2 * v45) & 0xA555BF4) - 2060800518);
  LODWORD(v27) = v53 ^ v30;
  *(_DWORD *)(v24 - 168) = v53;
  int v220 = ((v53 ^ v30) >> 16);
  int v224 = ((unsigned __int16)(v53 ^ v30) >> 8);
  LODWORD(v32) = *(_DWORD *)(v49 + 4 * (v224 ^ 0x9Bu)) ^ *(_DWORD *)(v47 + 4 * (v220 ^ 0x2Eu));
  int v304 = (v53 ^ v30);
  LODWORD(v32) = ((v32 ^ 0x9F123162) - 2 * ((v32 ^ 0x9F123162) & 0x3679A33F ^ v32 & 1) - 1233542338) ^ *(_DWORD *)(v46 + 4 * (v304 ^ 0xD2u));
  *(_DWORD *)(v24 - 224) = (v53 ^ v30) >> 24;
  LODWORD(v30) = (v32 - ((2 * v32) & 0x9B795810) + 1304210440) ^ *(_DWORD *)(v48
                                                                           + 4
                                                                           * (((v53 ^ v30) >> 24) ^ 0x69));
  LOBYTE(v44) = v52;
  unsigned __int8 v163 = v52;
  int v54 = v30 ^ v52 ^ 0x1BA62D49;
  int v252 = v30 ^ v52;
  int v55 = v54 ^ v53;
  *(_DWORD *)(v24 - 148) = v54 ^ v53;
  unsigned int v56 = ((v55 ^ 0x812020A3) - ((2 * (v55 ^ 0x812020A3)) & 0x9CF8FEFC) - 830701698) ^ v27 ^ 0xBADBDE37 ^ 0x9547167F;
  int v279 = ((unsigned __int16)(((v55 ^ 0x20A3) - ((2 * (v55 ^ 0x20A3)) & 0xFEFC) + 32638) ^ v27 ^ 0xDE37 ^ 0x167F) >> 8);
  unsigned int v57 = *(_DWORD *)(v47 + 4 * (BYTE2(v56) ^ 0x89u)) ^ *(_DWORD *)(v49 + 4 * (v279 ^ 0x3Au)) ^ 0x9F123162;
  int v275 = (((v55 ^ 0xA3) - ((2 * (v55 ^ 0xA3)) & 0xFC) + 126) ^ v27 ^ 0x37);
  unsigned int v58 = (v57 - 1233542338 + (~(2 * v57) | 0x930CB983) + 1) ^ *(_DWORD *)(v46 + 4 * (v275 ^ 0xE4u));
  unsigned int v59 = (v58 - ((2 * v58) & 0x9B795810) + 1304210440) ^ *(_DWORD *)(v48 + 4 * (HIBYTE(v56) ^ 0x1D));
  unsigned int v232 = v30 ^ v36;
  int v296 = (v59 - ((2 * v59) & 0x681AE0E2) - 1274187663) ^ v30 ^ v36;
  *(_DWORD *)(v24 - 256) = v296 ^ 0xB40D7071;
  unsigned int v308 = v296 ^ 0xB40D7071 ^ v252;
  LODWORD(v30) = ((v308 ^ 0xFE25CD6D) - ((2 * (v308 ^ 0xFE25CD6D)) & 0x9CF8FEFC) - 830701698) ^ v27 ^ 0xBADBDE37;
  LODWORD(v32) = ((unsigned __int16)(((v308 ^ 0xCD6D) - ((2 * (v308 ^ 0xCD6D)) & 0xFEFC) + 32638) ^ v27 ^ 0xDE37) >> 8);
  *(_DWORD *)(v24 - 232) = v32;
  LODWORD(v32) = *(_DWORD *)(v49 + 4 * (v32 ^ 0x6F));
  *(_DWORD *)(v24 - 240) = BYTE2(v30);
  int v60 = v30;
  LODWORD(v32) = *(_DWORD *)(v47 + 4 * (BYTE2(v30) ^ 0xA8u)) ^ v32;
  unsigned int v287 = BYTE3(v30);
  LODWORD(v32) = ((v32 ^ 0x9F123162) - 2 * ((v32 ^ 0x9F123162) & 0x4DBCAC1D ^ v32 & 0x15) + 1304210440) ^ *(_DWORD *)(v48 + 4 * (BYTE3(v30) ^ 0x85));
  int v286 = (((v308 ^ 0x6D) - ((2 * (v308 ^ 0x6D)) & 0xFC) + 126) ^ v27 ^ 0x37);
  LODWORD(v32) = (v32 - ((2 * v32) & 0x6CF3467C) - 1233542338) ^ *(_DWORD *)(v46 + 4 * (v286 ^ 0x25u));
  LODWORD(v30) = (v32 - ((2 * v32) & 0x42A201C0) - 1588526880) ^ v54;
  unsigned int v306 = v308 ^ v54 ^ v53;
  unsigned int v170 = v30 ^ v306;
  *(_DWORD *)(v24 - 184) = v30;
  LODWORD(v30) = v30 ^ v306 ^ 0x8E7C685A ^ v60;
  unsigned int v310 = ((v308 ^ 0xFE25CD6D) - ((2 * (v308 ^ 0xFE25CD6D)) & 0x9CF8FEFC) - 830701698) ^ v27 ^ 0xBADBDE37;
  unsigned int v194 = (v30 ^ 0x1828FFFA) >> 24;
  int v183 = ((v30 ^ 0x1828FFFA) >> 16);
  int v61 = *(_DWORD *)(v48 + 4 * (v194 ^ 0x1D)) ^ *(_DWORD *)(v47 + 4 * (v183 ^ 0x89u)) ^ 0x62114AD2;
  int v187 = ((unsigned __int16)(v30 ^ 0xFFFA) >> 8);
  int v62 = (v61 - ((2 * v61) & 0x617FAF70) - 1329604680) ^ *(_DWORD *)(v49 + 4 * (v187 ^ 0x3Au));
  int v302 = v170 ^ 0x5A ^ (((v308 ^ 0x6D) - ((2 * (v308 ^ 0x6D)) & 0xFC) + 126) ^ v27 ^ 0x37);
  LODWORD(v30) = *(_DWORD *)(v46 + 4 * (v302 ^ 0x61u));
  *(_DWORD *)(v24 - 192) = v32 ^ v296 ^ 0xB40D7071;
  LODWORD(v30) = v32 ^ v296 ^ 0xB40D7071 ^ v30 ^ (v62 - ((2 * v62) & 0x6CF3467C) - 1233542338);
  int v190 = (v32 - ((2 * v32) & 0x42A201C0) - 1588526880) ^ v54 ^ 0x7C166C11;
  int v63 = v190 ^ v30;
  LODWORD(v36) = v30;
  int v263 = v30;
  LODWORD(v32) = (v190 ^ v30 ^ v60) >> 24;
  *(_DWORD *)(v24 - 248) = v32;
  int v273 = (v190 ^ v30 ^ ((v308 ^ 0x6D) - ((2 * (v308 ^ 0x6D)) & 0xFC) + 126) ^ v27 ^ 0x37);
  unsigned int v64 = (v51 ^ 0xBAF72DE4) - 2 * (v44 & 4 ^ (v51 ^ 0xBAF72DE4) & 0x52AADFE) - 2060800518;
  LODWORD(v27) = *(_DWORD *)(v48 + 4 * (v32 ^ 0x9B)) ^ *(_DWORD *)(v46 + 4 * (v273 ^ 0x31u)) ^ 0xFBC50F36;
  unsigned int v246 = ((v190 ^ v30 ^ v60) >> 8) ^ 0x86839A;
  int v249 = ((unsigned __int16)(v190 ^ v30 ^ v60) >> 8) ^ 0x9A;
  LODWORD(v27) = (v27 - ((2 * v27) & 0x617FAF70) - 1329604680) ^ *(_DWORD *)(v49
                                                                           + 4
                                                                           * (((unsigned __int16)(v190 ^ v30 ^ v60) >> 8) ^ 0xA0u));
  int v65 = v27 - ((2 * v27) & 0x5F5BCDB4);
  LODWORD(v27) = v190 ^ v30 ^ v60 ^ 0xF107FC;
  int v242 = ((v190 ^ v30 ^ v60) >> 16);
  LODWORD(v30) = (v65 + 799925978) ^ *(_DWORD *)(v47 + 4 * (v242 ^ 0xAu));
  int v66 = (v30 - ((2 * v30) & 0x94E780F0) + 1249099896) ^ v36;
  *(_DWORD *)(v24 - 136) = v66;
  v66 ^= 0xB7F05AD2;
  int v67 = v66 ^ v63;
  LODWORD(v36) = v66;
  __int16 v158 = v66;
  unsigned int v255 = v63 ^ v170 ^ 0x8E7C685A;
  int v229 = v63;
  unsigned int v68 = ((v66 ^ v63 ^ 0x5A137D54) - 2 * ((v66 ^ v63 ^ 0x5A137D54) & 0x4435B16F ^ (v66 ^ v63) & 2) - 1003114131) ^ v255 ^ 0xE524B7B1;
  *(_DWORD *)(v24 - 140) = v68;
  unsigned int v69 = v68 ^ 0xFD68FA3C;
  unsigned int v70 = ((v68 ^ 0x7AF7223C) - 2 * ((v68 ^ 0xFD68FA3C) & 9 ^ (v68 ^ 0x7AF7223C) & 0x6729D5F) - 2039308970) ^ v27 ^ 0x479AB031;
  int v285 = (((v68 ^ 0x3C) - 2 * ((v68 ^ 0x3C) & 9 ^ (v68 ^ 0x3C) & 0x5F) + 86) ^ v27);
  int v298 = BYTE1(v70);
  LODWORD(v30) = *(_DWORD *)(v49 + 4 * (BYTE1(v70) ^ 0x3Au)) ^ *(_DWORD *)(v46 + 4 * (v285 ^ 0xAAu)) ^ 0x6C67486;
  int v71 = BYTE2(v70);
  LODWORD(v30) = (v30 - ((2 * v30) & 0x5F5BCDB4) + 799925978) ^ *(_DWORD *)(v47 + 4 * (BYTE2(v70) ^ 0x89u));
  unsigned int v205 = HIBYTE(v70);
  LODWORD(v30) = (v30 - ((2 * v30) & 0x9B795810) + 1304210440) ^ *(_DWORD *)(v48 + 4 * (HIBYTE(v70) ^ 0x1D));
  unsigned int v72 = v30 ^ v63;
  unsigned int v73 = ((v30 ^ v63 ^ 0xA6C48CD5) - ((2 * (v30 ^ v63 ^ 0xA6C48CD5)) & 0xCE53AAC) - 2039308970) ^ v27;
  unsigned int v74 = HIBYTE(v73);
  int v75 = BYTE1(v73);
  LODWORD(v27) = *(_DWORD *)(v49 + 4 * (BYTE1(v73) ^ 0x6Fu)) ^ *(_DWORD *)(v48 + 4 * (HIBYTE(v73) ^ 5));
  int v258 = v73;
  LODWORD(v27) = ((v27 ^ 0xFD037BB0) - 2 * ((v27 ^ 0xFD037BB0) & 0x3679A33F ^ v27 & 1) - 1233542338) ^ *(_DWORD *)(v46 + 4 * (v73 ^ 0x25u));
  int v76 = v36 ^ v30;
  int v77 = v36 ^ v30 ^ *(_DWORD *)(v47 + 4 * (BYTE2(v73) ^ 0xA8u)) ^ (v27 - ((2 * v27) & 0x5F5BCDB4) + 799925978);
  unsigned int v283 = v68 ^ 0xFD68FA3C ^ v77;
  int v294 = ((unsigned __int16)(v283 ^ v73) >> 8);
  int v78 = v292 ^ v64;
  unsigned int v167 = (v283 ^ v73) >> 24;
  LODWORD(v30) = *(_DWORD *)(v49 + 4 * (v294 ^ 0x44u)) ^ *(_DWORD *)(v48 + 4 * (v167 ^ 0x47)) ^ 0xFD037BB0;
  int v171 = (v283 ^ v73);
  LODWORD(v30) = (v30 - ((2 * v30) & 0x6CF3467C) - 1233542338) ^ *(_DWORD *)(v46 + 4 * (v171 ^ 0xD5u));
  int v161 = ((v283 ^ v73) >> 16);
  int v79 = (v30 - ((2 * v30) & 0x5F5BCDB4) + 799925978) ^ *(_DWORD *)(v47 + 4 * (v161 ^ 0xCBu));
  *(_DWORD *)(v24 - 208) = v77;
  HIDWORD(v289) = v77 ^ 0x8F0EF51A ^ (v79 - ((2 * v79) & 0x1FF3B166) + 268032179);
  int v165 = v77 ^ v72;
  LODWORD(v289) = v77 ^ v72 ^ 0xF57EEAC9 ^ (HIDWORD(v289) - ((2 * HIDWORD(v289)) & 0xA3B84BBA) - 774101539);
  int v80 = v289 ^ v283 ^ 0x42632BF0;
  HIDWORD(v288) = v80 ^ 0x4662A266;
  LODWORD(v288) = ((v80 ^ 0x4662A266) - 2 * ((v80 ^ 0x4662A266) & 0xB4BEDD9 ^ v80 & 0x11) + 189525448) ^ v283 ^ v73;
  LODWORD(v46) = *(_DWORD *)(v24 - 144);
  uint64_t v81 = (char *)*(&off_100166A10 + (v46 & 0x3CA061DE)) - 8;
  LODWORD(v32) = (((v76 ^ 0x1B9155BDu) >> 16)
                - ((2 * ((v76 ^ 0x1B9155BDu) >> 16) + 88) & 0x3CC)
                + 1204711442) ^ *(_DWORD *)&v81[4 * (((v76 ^ 0x1B9155BDu) >> 16) ^ 0x2D)];
  LODWORD(v27) = ((BYTE2(v73) ^ 0x89) - ((2 * (BYTE2(v73) ^ 0x89) + 88) & 0x3CC) + 1204711442) ^ *(_DWORD *)&v81[4 * (BYTE2(v73) ^ 0xA4)];
  unint64_t v82 = (char *)*(&off_100166A10 + (int)v46 - 170) - 8;
  LODWORD(v30) = (v32 - ((2 * v32) & 0xAE89890A) - 683359099) ^ *(_DWORD *)&v82[4 * (BYTE1(v76) ^ 0x47)];
  uint64_t v83 = (uint64_t)*(&off_100166A10 + (int)(v46 ^ 0x12));
  int v84 = (v27 - ((2 * v27) & 0x7FBB8F6C) + 1071499190) ^ *(_DWORD *)(v83 + 4 * (v74 ^ 0xCC));
  unsigned __int8 v272 = ((unsigned __int16)(v68 ^ 0xFA3C) >> 8) ^ BYTE1(v72);
  unint64_t v85 = (char *)*(&off_100166A10 + (int)v46 - 10) - 8;
  LODWORD(v46) = *(_DWORD *)&v85[4 * (v68 ^ 0x3C ^ v72 ^ 0x53)];
  LODWORD(v27) = *(_DWORD *)&v81[4 * (((v69 ^ v72) >> 16) ^ 0xAA)] ^ *(_DWORD *)(v83
                                                                                                + 4
                                                                                                * (((v69 ^ v72) >> 24) ^ 0x3E)) ^ ((((v69 ^ v72) >> 16) ^ 0x87) - ((2 * (((v69 ^ v72) >> 16) ^ 0x87) + 88) & 0x3CC) + 1204711442) ^ (181304767 * v46 - ((362609534 * v46 + 1472466014) & 0x7FBB8F6C) - 1413493275);
  LODWORD(v32) = *(_DWORD *)&v85[4 * (v72 ^ 0x74)];
  LODWORD(v32) = (181304767 * v32 - ((362609534 * v32 - 675017634) & 0xAE89890A) + 1126615732) ^ *(_DWORD *)&v82[4 * (BYTE1(v72) ^ 0x5A)];
  int v282 = v32 - ((2 * v32) & 0x7FBB8F6C);
  unsigned int v278 = HIBYTE(v72) ^ 0xB2;
  int v238 = BYTE2(v72);
  int v226 = (BYTE2(v72) ^ 0x4C) - ((2 * (BYTE2(v72) ^ 0x4C) + 88) & 0x3CC);
  int v265 = v84 - ((2 * v84) & 0xAE89890A);
  int v260 = v27 - ((2 * v27) & 0xAE89890A);
  int v293 = (v30 - ((2 * v30) & 0x7FBB8F6C) + 1071499190) ^ *(_DWORD *)(v83 + 4 * ((v76 ^ 0x1B9155BDu) >> 24)) ^ (181304767 * *(_DWORD *)&v85[4 * (v76 ^ 0x7D)] + 1809974831);
  int v86 = *(_DWORD *)&v81[4 * (((v78 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v78 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                   - ((2
                                                                                     * (((v78 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                     + 88) & 0x3CC)
                                                                                   + 1204711442);
  LODWORD(v32) = *(_DWORD *)(v24 - 168) ^ 0x31676F78;
  LODWORD(v30) = *(_DWORD *)&v81[4 * (BYTE2(v32) ^ 0x7B)] ^ ((BYTE2(v32) ^ 0x56)
                                                           - ((2 * (BYTE2(v32) ^ 0x56) + 88) & 0x3CC)
                                                           + 1204711442);
  LODWORD(v32) = (v30 - ((2 * v30) & 0x7FBB8F6C) + 1071499190) ^ *(_DWORD *)(v83 + 4 * BYTE3(v32));
  LODWORD(v30) = *(_DWORD *)&v81[4 * (v220 ^ 0x34)] ^ ((v220 ^ 0x19) - ((2 * (v220 ^ 0x19) + 88) & 0x3CC) + 1204711442);
  LODWORD(v30) = (v30 - ((2 * v30) & 0xAE89890A) - 683359099) ^ *(_DWORD *)&v82[4 * (v224 ^ 5)];
  int v221 = v32 - ((2 * v32) & 0xAE89890A);
  int v225 = v30 - ((2 * v30) & 0x7FBB8F6C);
  LODWORD(v32) = *(_DWORD *)&v85[4 * (*(_DWORD *)(v24 - 160) ^ 0xDF)];
  LODWORD(v30) = *(_DWORD *)(v24 - 160) ^ 0x5A18571F;
  LODWORD(v32) = *(_DWORD *)(v83 + 4 * BYTE3(v30)) ^ ((BYTE2(v30) ^ 0xC1)
                                                      - ((2 * (BYTE2(v30) ^ 0xC1) + 88) & 0x3CC)
                                                      + 1204711442) ^ *(_DWORD *)&v81[4 * (BYTE2(v30) ^ 0xEC)] ^ (181304767 * v32 - ((362609534 * v32 + 1472466014) & 0x7FBB8F6C) - 1413493275);
  int v218 = v32 - ((2 * v32) & 0xAE89890A);
  LODWORD(v27) = *(_DWORD *)(v83 + 4 * ((v78 ^ 0xE9B45E6C) >> 24)) ^ (v86 - ((2 * v86) & 0x7FBB8F6C) + 1071499190);
  int v215 = v27 - ((2 * v27) & 0xAE89890A);
  LOWORD(v86) = v67 ^ 0x8EA4;
  LODWORD(v46) = v67 ^ 0x35C48CD5;
  LODWORD(v27) = *(_DWORD *)&v81[4 * (v71 ^ 0xDE)] ^ ((v71 ^ 0xF3) - ((2 * (v71 ^ 0xF3) + 88) & 0x3CC) + 1204711442);
  LODWORD(v32) = *(_DWORD *)&v81[4 * (((v67 ^ 0x35C48CD5u) >> 16) ^ 0xFE)] ^ ((((v67 ^ 0x35C48CD5u) >> 16) ^ 0xD3)
                                                                                             - 2
                                                                                             * (((((v67 ^ 0x35C48CD5u) >> 16) ^ 0xD3)
                                                                                               + 44) & 0xFFFFFFE7 ^ (((v67 ^ 0x35C48CD5u) >> 16) ^ 0xD3) & 1)
                                                                                             + 1204711442);
  int v87 = *(_DWORD *)&v85[4 * (v68 ^ 0xF9)];
  LODWORD(v27) = (v27 - ((2 * v27) & 0x7FBB8F6C) + 1071499190) ^ *(_DWORD *)(v83 + 4 * (v205 ^ 0x36));
  LODWORD(v30) = BYTE2(*(_DWORD *)(v24 - 136));
  LODWORD(v30) = *(_DWORD *)&v81[4 * (v30 ^ 0xDC)] ^ ((v30 ^ 0xF1)
                                                                  - ((2 * (v30 ^ 0xF1) + 88) & 0x3CC)
                                                                  + 1204711442);
  LODWORD(v30) = (v30 - ((2 * v30) & 0xAE89890A) - 683359099) ^ *(_DWORD *)&v82[4 * (HIBYTE(v158) ^ 0x8B)];
  int v200 = v27 - ((2 * v27) & 0xAE89890A);
  int v206 = v30 - ((2 * v30) & 0x7FBB8F6C);
  LODWORD(v27) = *(_DWORD *)(v24 - 140) ^ 0x9FF7223C;
  LODWORD(v27) = *(_DWORD *)&v82[4 * (BYTE1(v27) ^ 0x20)] ^ ((BYTE2(v27) ^ 0xD7)
                                                           - ((2 * (BYTE2(v27) ^ 0xD7) + 88) & 0x3CC)
                                                           + 1204711442) ^ *(_DWORD *)&v81[4 * (BYTE2(v27) ^ 0xFA)] ^ (181304767 * v87 - ((362609534 * v87 - 675017634) & 0xAE89890A) + 1126615732);
  LODWORD(v30) = (v32 - ((2 * v32) & 0x7FBB8F6C) + 1071499190) ^ *(_DWORD *)(v83 + 4 * BYTE3(v46)) ^ (181304767 * *(_DWORD *)&v85[4 * (v86 ^ 0x99)] + 1809974831);
  unsigned int v176 = BYTE1(v86) ^ 0x14;
  int v181 = v30 - ((2 * v30) & 0xAE89890A);
  int v199 = v27 - ((2 * v27) & 0x7FBB8F6C);
  unsigned int v178 = v172 ^ 0x2BEAE26B;
  LODWORD(v27) = *(_DWORD *)&v81[4 * (((v172 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v172 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                              - ((2
                                                                                                * (((v172 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                                + 88) & 0x3CC)
                                                                                              + 1204711442) ^ (181304767 * *(_DWORD *)&v85[4 * (v172 ^ 0x1E)] + 1809974831);
  LODWORD(v27) = (v27 - ((2 * v27) & 0xAE89890A) - 683359099) ^ *(_DWORD *)&v82[4 * (BYTE1(v172) ^ 8)];
  int v88 = *(_DWORD *)(v24 - 176);
  unsigned int v173 = BYTE1(v88) ^ 0xF5;
  LODWORD(v30) = *(_DWORD *)&v81[4 * (v203 ^ 0xD8)] ^ ((v203 ^ 0xF5) - ((2 * (v203 ^ 0xF5) + 88) & 0x3CC) + 1204711442);
  int v89 = *(_DWORD *)&v85[4 * (v163 ^ 0x55)];
  int v204 = v27 - ((2 * v27) & 0x7FBB8F6C);
  int v164 = BYTE2(v88) ^ 0xF7;
  unsigned int v159 = (BYTE2(v88) ^ 0xA7) - 2 * (((BYTE2(v88) ^ 0xA7) + 44) & 0xFFFFFFE7 ^ (BYTE2(v88) ^ 0xF7) & 1);
  LODWORD(v27) = (v30 - ((2 * v30) & 0xAE89890A) - 683359099) ^ *(_DWORD *)&v82[4 * (v211 ^ 0x78)] ^ (181304767 * *(_DWORD *)&v85[4 * (v208 ^ 0x84)] + 1809974831);
  int v212 = v27 - ((2 * v27) & 0x7FBB8F6C);
  unsigned int v90 = *(_DWORD *)(v24 - 200);
  LODWORD(v30) = (181304767 * v89 - ((362609534 * v89 + 1472466014) & 0x7FBB8F6C) - 1413493275) ^ ((BYTE2(v90) ^ 0xBA)
                                                                                                 - ((2 * (BYTE2(v90) ^ 0xBA) + 88) & 0x3CC)
                                                                                                 + 1204711442) ^ *(_DWORD *)(v83 + 4 * (HIBYTE(v90) ^ 0x2F)) ^ *(_DWORD *)&v81[4 * (BYTE2(v90) ^ 0x97)];
  int v209 = v30 - ((2 * v30) & 0xAE89890A);
  unsigned int v156 = v158 ^ 0xA3;
  LODWORD(v30) = *(_DWORD *)&v81[4 * (BYTE2(v170) ^ 0xA3)] ^ ((BYTE2(v170) ^ 0x8E)
                                                            - ((2 * (BYTE2(v170) ^ 0x8E) + 88) & 0x3CC)
                                                            + 1204711442);
  int v91 = *(_DWORD *)&v81[4 * (BYTE2(*(_DWORD *)(v24 - 192)) ^ 0x56)] ^ ((BYTE2(*(_DWORD *)(v24 - 192)) ^ 0x7B)
                                                                                      - ((2
                                                                                        * (BYTE2(*(_DWORD *)(v24 - 192)) ^ 0x7B)
                                                                                        + 88) & 0x3CC)
                                                                                      + 1204711442);
  LODWORD(v30) = (v30 - ((2 * v30) & 0xAE89890A) - 683359099) ^ *(_DWORD *)&v82[4
                                                                              * (((unsigned __int16)(v170 ^ 0x685A) >> 8) ^ 0xBF)] ^ (181304767 * *(_DWORD *)&v85[4 * (v170 ^ 0xD3)] + 1809974831);
  int v92 = *(_DWORD *)&v85[4 * (*(_DWORD *)(v24 - 184) ^ 0xFB)];
  unsigned int v93 = (181304767 * v92 - ((362609534 * v92 - 675017634) & 0xAE89890A) + 1126615732) ^ *(_DWORD *)&v82[4 * (BYTE1(*(_DWORD *)(v24 - 184)) ^ 0xEF)];
  HIDWORD(v166) = v30 - ((2 * v30) & 0x7FBB8F6C);
  HIDWORD(v157) = v93 - ((2 * v93) & 0x7FBB8F6C);
  int v94 = (v91 - ((2 * v91) & 0x7FBB8F6C) + 1071499190) ^ *(_DWORD *)(v83 + 4 * (HIBYTE(*(_DWORD *)(v24 - 192)) ^ 0xD9u)) ^ (181304767 * *(_DWORD *)&v85[4 * (*(_DWORD *)(v24 - 192) ^ 0x79)] + 1809974831);
  int v95 = *(_DWORD *)&v81[4 * (v183 ^ 0x86)] ^ ((v183 ^ 0xAB) - ((2 * (v183 ^ 0xAB) + 88) & 0x3CC) + 1204711442);
  int v96 = (v95 - ((2 * v95) & 0x7FBB8F6C) + 1071499190) ^ *(_DWORD *)(v83 + 4 * v194);
  unsigned int v184 = v187 ^ 0xEE;
  unsigned int v195 = v96 - ((2 * v96) & 0xAE89890A);
  unsigned int v188 = v94 - ((2 * v94) & 0xAE89890A);
  int v191 = BYTE2(v190);
  int v97 = *(_DWORD *)&v81[4 * (v161 ^ 0x8B)] ^ ((v161 ^ 0xA6) - ((2 * (v161 ^ 0xA6) + 88) & 0x3CC) + 1204711442);
  unsigned int v98 = v167 ^ 0x22;
  LODWORD(v48) = *(_DWORD *)(v24 - 208);
  LODWORD(v32) = *(_DWORD *)&v81[4 * (BYTE2(v48) ^ 0xE8)] ^ ((BYTE2(v48) ^ 0xC5)
                                                           - ((2 * (BYTE2(v48) ^ 0xC5) + 88) & 0x3CC)
                                                           + 1204711442);
  LODWORD(v32) = (181304767 * *(_DWORD *)&v85[4 * (v48 ^ 0xCA)] + 1809974831) ^ *(_DWORD *)(v83 + 4 * (BYTE3(v48) ^ 0x8E)) ^ (v32 - ((2 * v32) & 0x7FBB8F6C) + 1071499190);
  unsigned int v168 = v77 ^ v72 ^ 0x44039AAA;
  int v99 = (181304767 * *(_DWORD *)&v85[4 * (v165 ^ 0xDB)] + 1809974831) ^ (((v165 ^ 0x44039AAAu) >> 16)
                                                                                        - ((2
                                                                                          * ((v165 ^ 0x44039AAAu) >> 16)
                                                                                          + 88) & 0x3CC)
                                                                                        + 1204711442) ^ *(_DWORD *)&v81[4 * (((v165 ^ 0x44039AAAu) >> 16) ^ 0x2D)];
  int v154 = v32 - ((2 * v32) & 0xAE89890A);
  LODWORD(v32) = (v99 - ((2 * v99) & 0xAE89890A) - 683359099) ^ *(_DWORD *)&v82[4
                                                                              * (((unsigned __int16)(v77 ^ v72) >> 8) ^ 0xC0)];
  int v100 = *(_DWORD *)(v83 + 4 * v98) ^ (181304767 * *(_DWORD *)&v85[4 * (v171 ^ 0xFE)] + 1809974831) ^ (v97 - ((2 * v97) & 0x7FBB8F6C) + 1071499190);
  LODWORD(v166) = v32 - ((2 * v32) & 0x7FBB8F6C);
  unsigned int v153 = v100 - ((2 * v100) & 0xAE89890A);
  LODWORD(v32) = *(_DWORD *)&v85[4 * (v232 ^ 0xEC)];
  int v101 = *(_DWORD *)&v81[4 * (BYTE2(v56) ^ 0x32)] ^ ((BYTE2(v56) ^ 0x1F)
                                                   - ((2 * (BYTE2(v56) ^ 0x1F) + 88) & 0x3CC)
                                                   + 1204711442);
  int v102 = *(_DWORD *)&v85[4 * (v252 ^ 0xE6)];
  unsigned int v103 = v279 ^ 0x8C;
  LODWORD(v27) = *(_DWORD *)(v83 + 4 * (HIBYTE(v232) ^ 0xCA)) ^ ((BYTE2(v232) ^ 0x2F)
                                                                 + 1204711442
                                                                 + (~(2 * (BYTE2(v232) ^ 0x2F) + 88) | 0xFFFFFC33)
                                                                 + 1) ^ *(_DWORD *)&v81[4 * (BYTE2(v232) ^ 2)] ^ (181304767 * v32 - ((362609534 * v32 + 1472466014) & 0x7FBB8F6C) - 1413493275);
  unsigned int v280 = HIBYTE(v170) ^ 0xD9;
  LODWORD(v32) = (v101 - ((2 * v101) & 0xAE89890A) - 683359099) ^ *(_DWORD *)&v82[4 * v103] ^ (181304767
                                                                                             * *(_DWORD *)&v85[4 * (v275 ^ 0xD9)]
                                                                                             + 1809974831);
  LODWORD(v30) = *(_DWORD *)(v83 + 4 * ((v252 ^ 0x49A657C7u) >> 24)) ^ ((((v252 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                                        - ((2
                                                                          * (((v252 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                                          + 88) & 0x3CC)
                                                                        + 1204711442) ^ *(_DWORD *)&v81[4 * (((v252 ^ 0x49A657C7u) >> 16) ^ 0x18)] ^ (181304767 * v102 - ((362609534 * v102 + 1472466014) & 0x7FBB8F6C) - 1413493275);
  int v104 = *(_DWORD *)(v24 - 148);
  unsigned int v105 = *(_DWORD *)&v81[4 * (((v104 ^ 0xBFDD36DC) >> 16) ^ 0x2D)] ^ (((v104 ^ 0xBFDD36DC) >> 16)
                                                                                     - 2
                                                                                     * ((((v104 ^ 0xBFDD36DC) >> 16)
                                                                                       + 44) & 0xFFFFFFE7 ^ ((v104 ^ 0xBFDD36DC) >> 16) & 1)
                                                                                     + 1204711442);
  unsigned int v276 = HIBYTE(v56) ^ 0xAA;
  int v291 = (v27 - ((2 * v27) & 0xAE89890A) - 683359099) ^ *(_DWORD *)&v82[4 * (BYTE1(v232) ^ 0x2E)];
  LODWORD(a18) = v32 + 1071499190 + (~(2 * v32) | 0x80447093);
  unsigned int v233 = BYTE1(v252) ^ 0xB9;
  LODWORD(v27) = (v105 - ((2 * v105) & 0x7FBB8F6C) + 1071499190) ^ *(_DWORD *)(v83 + 4 * ((v104 ^ 0xBFDD36DC) >> 24)) ^ (181304767 * *(_DWORD *)&v85[4 * (v104 ^ 0x4C)] + 1809974831);
  int v268 = v30 - ((2 * v30) & 0xAE89890A);
  int v253 = v27 - ((2 * v27) & 0xAE89890A);
  LODWORD(v32) = *(_DWORD *)&v81[4 * (v242 ^ 0xC1)] ^ ((v242 ^ 0xEC) - ((2 * (v242 ^ 0xEC) + 88) & 0x3CC) + 1204711442);
  LODWORD(v27) = (v32 - ((2 * v32) & 0xAE89890A) - 683359099) ^ *(_DWORD *)&v82[4
                                                                              * ((v249 - ((2 * v246) & 0x166) + 179) ^ 0x54)] ^ (181304767 * *(_DWORD *)&v85[4 * (v273 ^ 0xE2)] + 1809974831);
  unsigned int v247 = BYTE1(v263) ^ 0x77;
  LODWORD(v32) = *(_DWORD *)&v85[4 * (v255 ^ 0xB4)];
  unsigned int v274 = v300 ^ 0x4B;
  LODWORD(v32) = (181304767 * v32 - ((362609534 * v32 + 1472466014) & 0x7FBB8F6C) - 1413493275) ^ *(_DWORD *)(v83 + 4 * (HIBYTE(v255) ^ 0x4B));
  unsigned int v236 = ((unsigned __int16)(v255 ^ 0xB7B1) >> 8) ^ 0x9F;
  int v301 = v27 - ((2 * v27) & 0x7FBB8F6C);
  int v243 = v32 - ((2 * v32) & 0xAE89890A);
  unsigned int v250 = v229 ^ 0xEEA2BFA8;
  LODWORD(v32) = *(_DWORD *)&v81[4 * (((v229 ^ 0xEEA2BFA8) >> 16) ^ 0x86)] ^ ((((v229 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                             - ((2
                                                                                               * (((v229 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                               + 88) & 0x3CC)
                                                                                             + 1204711442);
  LODWORD(v32) = (181304767 * *(_DWORD *)&v85[4 * (v229 ^ 0x68)] + 1809974831) ^ *(_DWORD *)&v82[4 * (BYTE1(v229) ^ 0x55)] ^ (v32 - ((2 * v32) & 0xAE89890A) - 683359099);
  unsigned int v230 = v263 ^ 0x231B9DB5;
  int v149 = ((v263 ^ 0x231B9DB5u) >> 16);
  HIDWORD(v169) = v32 - ((2 * v32) & 0x7FBB8F6C);
  int v106 = BYTE2(v255);
  int v147 = (BYTE2(v255) ^ 0x6C) - ((2 * (BYTE2(v255) ^ 0x6C) + 88) & 0x3CC);
  unsigned int v107 = v296 ^ 0x25AFBF65;
  int v108 = *(_DWORD *)&v85[4 * (v286 ^ 0x74)];
  int v109 = *(_DWORD *)&v85[4 * (v304 ^ 0xFB)];
  LODWORD(v48) = *(_DWORD *)&v85[4 * v156];
  unsigned int v110 = *(_DWORD *)(v24 - 176);
  LODWORD(v47) = *(_DWORD *)&v85[4 * (v302 ^ 0xC7)];
  int v111 = *(_DWORD *)&v85[4 * (v263 ^ 0x75)];
  int v305 = 181304767 * *(_DWORD *)&v85[4 * (v258 ^ 0x60)] + 1809974831;
  int v297 = 181304767 * v109 + 1809974831;
  LODWORD(v157) = 181304767 * *(_DWORD *)&v85[4 * (*(_DWORD *)(v24 - 168) ^ 0xB8)] + 1809974831;
  int v197 = 181304767 * *(_DWORD *)&v85[4 * (v78 ^ 0xAC)] + 1809974831;
  int v264 = 181304767 * v48 + 1809974831;
  int v256 = 181304767 * *(_DWORD *)&v85[4 * (v285 ^ 0xF0)] + 1809974831;
  int v303 = 181304767 * *(_DWORD *)&v85[4 * (v110 ^ 0x57)] + 1809974831;
  LODWORD(v152) = 181304767 * v47 + 1809974831;
  LODWORD(v151) = 181304767 * *(_DWORD *)&v85[4 * (v283 ^ 0x78)] + 1809974831;
  int v259 = 181304767 * v111 + 1809974831;
  HIDWORD(v151) = 181304767 * *(_DWORD *)&v85[4 * (v107 ^ 0x39)] + 1809974831;
  int v112 = (181304767 * v108 - ((362609534 * v108 + 1472466014) & 0x7FBB8F6C) - 1413493275) ^ *(_DWORD *)(v83 + 4 * (v287 ^ 0x7B));
  LODWORD(v27) = *(_DWORD *)&v81[4 * (BYTE2(v306) ^ 0xFD)] ^ ((BYTE2(v306) ^ 0xD0)
                                                            - ((2 * (BYTE2(v306) ^ 0xD0) + 88) & 0x3CC)
                                                            + 1204711442) ^ (181304767
                                                                           * *(_DWORD *)&v85[4
                                                                                           * (v306 ^ 0xE1)]
                                                                           + 1809974831);
  LODWORD(v27) = (v27 - ((2 * v27) & 0xAE89890A) - 683359099) ^ *(_DWORD *)&v82[4 * (BYTE1(v306) ^ 0x84)];
  LODWORD(v30) = *(_DWORD *)&v81[4 * (BYTE2(v107) ^ 0x3C)] ^ ((BYTE2(v107) ^ 0x11)
                                                            - ((2 * (BYTE2(v107) ^ 0x11) + 88) & 0x3CC)
                                                            + 1204711442);
  HIDWORD(v150) = v226 + 1204711442;
  LODWORD(v160) = v159 + 1204711442;
  unsigned int v227 = (v191 ^ 0x65) - 2 * (((v191 ^ 0x65) + 44) & 0xFFFFFFE7 ^ (v191 ^ 0x65) & 1) + 1204711442;
  HIDWORD(v148) = (BYTE2(v283) ^ 0x8F) - ((2 * (BYTE2(v283) ^ 0x8F) + 88) & 0x3CC) + 1204711442;
  HIDWORD(v155) = (v149 ^ 0xC1) - ((2 * (v149 ^ 0xC1) + 88) & 0x3CC) + 1204711442;
  HIDWORD(v160) = v147 + 1204711442;
  LODWORD(v32) = (181304767 * *(_DWORD *)&v85[4 * (v308 ^ 0x2A)] + 1809974831) ^ ((BYTE2(v308) ^ 0x37)
                                                                                                 - ((2 * (BYTE2(v308) ^ 0x37) + 88) & 0x3CC)
                                                                                                 + 1204711442) ^ *(_DWORD *)&v81[4 * (BYTE2(v308) ^ 0x1A)];
  unsigned int v113 = v112 - ((2 * v112) & 0xAE89890A);
  LODWORD(v32) = (v32 - ((2 * v32) & 0x7FBB8F6C) + 1071499190) ^ *(_DWORD *)(v83 + 4 * (HIBYTE(v308) ^ 0xF9));
  LODWORD(v148) = *(_DWORD *)&v81[4 * (v238 ^ 0x61)];
  HIDWORD(v162) = *(_DWORD *)&v81[4 * (v164 ^ 0x7D)];
  LODWORD(v36) = v298 ^ 0x1A;
  int v239 = *(_DWORD *)&v81[4 * (v191 ^ 0x48)];
  LODWORD(v146) = *(_DWORD *)&v81[4 * (BYTE2(v283) ^ 0xA2)];
  LODWORD(v150) = *(_DWORD *)&v81[4 * (v149 ^ 0xEC)];
  HIDWORD(v146) = *(_DWORD *)&v81[4 * (v106 ^ 0x41)];
  int v114 = *(_DWORD *)(v24 - 240);
  int v192 = *(_DWORD *)&v81[4 * (v114 ^ 0x1A)];
  int v299 = *(_DWORD *)&v82[4 * (v75 ^ 0xB0)];
  int v270 = *(_DWORD *)&v82[4 * (v272 ^ 0x8E)];
  *(_DWORD *)(v24 - 168) = *(_DWORD *)&v82[4 * (BYTE1(*(_DWORD *)(v24 - 168)) ^ 0x85)];
  LODWORD(v162) = *(_DWORD *)&v82[4 * (BYTE1(*(_DWORD *)(v24 - 160)) ^ 0xBD)];
  *(_DWORD *)(v24 - 160) = *(_DWORD *)&v82[4 * (BYTE1(v78) ^ 0xB4)];
  int v241 = *(_DWORD *)&v82[4 * v36];
  LODWORD(v36) = ((v310 >> 15) & 0x58 ^ 0x48) + (v114 ^ 0x4C64A1B);
  int v177 = *(_DWORD *)&v82[4 * v176];
  *(_DWORD *)(v24 - 240) = *(_DWORD *)&v82[4 * v173];
  *(_DWORD *)(v24 - 200) = *(_DWORD *)&v82[4 * (BYTE1(*(_DWORD *)(v24 - 200)) ^ 0xD6)];
  int v311 = *(_DWORD *)&v82[4 * v184];
  int v185 = *(_DWORD *)&v82[4 * (BYTE1(*(_DWORD *)(v24 - 192)) ^ 0xD7)];
  int v174 = *(_DWORD *)&v82[4 * (BYTE1(v283) ^ 0x76)];
  int v214 = v36 - ((2 * v36) & 0x3CC) + 1124607462;
  int v115 = *(_DWORD *)&v82[4 * (BYTE1(*(_DWORD *)(v24 - 208)) ^ 0x16)];
  HIDWORD(v145) = *(_DWORD *)&v82[4 * (v294 ^ 0xBE)];
  *(_DWORD *)(v24 - 208) = *(_DWORD *)&v82[4 * v233];
  int v295 = *(_DWORD *)&v82[4 * (BYTE1(*(_DWORD *)(v24 - 148)) ^ 0xB6)];
  int v116 = v27 - ((2 * v27) & 0x7FBB8F6C);
  int v234 = *(_DWORD *)&v82[4 * v247];
  int v248 = *(_DWORD *)&v82[4 * v236];
  *(_DWORD *)(v24 - 232) = *(_DWORD *)&v82[4 * (*(_DWORD *)(v24 - 232) ^ 0x84)];
  int v237 = *(_DWORD *)&v82[4 * (BYTE1(v308) ^ 0x2E)];
  LODWORD(v27) = *(_DWORD *)&v82[4 * (BYTE1(*(_DWORD *)(v24 - 256)) ^ 0xC8)];
  *(_DWORD *)(v24 - 192) = v265 - 683359099;
  int v261 = v260 - 683359099;
  *(_DWORD *)(v24 - 256) = v221 - 683359099;
  int v219 = v218 - 683359099;
  int v309 = v215 - 683359099;
  int v266 = v200 - 683359099;
  HIDWORD(v144) = v181 - 683359099;
  int v210 = v209 - 683359099;
  unsigned int v196 = v195 - 683359099;
  LODWORD(v145) = v188 - 683359099;
  LODWORD(v81) = v154 - 683359099;
  HIDWORD(v143) = v153 - 683359099;
  int v222 = v268 - 683359099;
  int v216 = v253 - 683359099;
  int v254 = v243 - 683359099;
  unsigned int v189 = v113 - 683359099;
  LODWORD(v155) = v32 - ((2 * v32) & 0xAE89890A) - 683359099;
  LODWORD(v27) = v27 ^ (v30 - ((2 * v30) & 0xAE89890A) - 683359099);
  int v269 = *(_DWORD *)(v83 + 4 * v278);
  *(_DWORD *)(v24 - 224) = *(_DWORD *)(v83 + 4 * (*(_DWORD *)(v24 - 224) ^ 7u));
  LODWORD(v143) = *(_DWORD *)(v83 + 4 * (HIBYTE(*(_DWORD *)(v24 - 136)) ^ 0x5Bu));
  LODWORD(v144) = *(_DWORD *)(v83 + 4 * (HIBYTE(*(_DWORD *)(v24 - 140)) ^ 0xE8u));
  int v182 = *(_DWORD *)(v83 + 4 * (HIBYTE(v110) ^ 0xB8));
  *(_DWORD *)(v24 - 176) = *(_DWORD *)(v83 + 4 * HIBYTE(v178));
  int v201 = *(_DWORD *)(v83 + 4 * v274);
  int v244 = *(_DWORD *)(v83 + 4 * v280);
  HIDWORD(v152) = *(_DWORD *)(v83 + 4 * (HIBYTE(*(_DWORD *)(v24 - 184)) ^ 0xE8u));
  int v117 = *(_DWORD *)(v83 + 4 * (HIBYTE(v283) ^ 0xA6));
  int v118 = *(_DWORD *)(v83 + 4 * HIBYTE(v168));
  *(_DWORD *)(v24 - 184) = *(_DWORD *)(v83 + 4 * v276);
  int v119 = *(_DWORD *)(v83 + 4 * HIBYTE(v230));
  HIDWORD(a3) = *(_DWORD *)(v83 + 4 * (*(_DWORD *)(v24 - 248) ^ 0x38u));
  int v120 = *(_DWORD *)(v83 + 4 * HIBYTE(v250));
  int v231 = *(_DWORD *)(v83 + 4 * (HIBYTE(v306) ^ 0x2B));
  LODWORD(v169) = *(_DWORD *)(v83 + 4 * HIBYTE(v107));
  uint64_t v121 = (v282 + 1071499190);
  int v179 = v225 + 1071499190;
  uint64_t v122 = (v206 + 1071499190);
  uint64_t v123 = (v199 + 1071499190);
  *(_DWORD *)(v24 - 248) = v204 + 1071499190;
  int v307 = v212 + 1071499190;
  uint64_t v124 = (v301 + 1071499190);
  uint64_t v125 = (HIDWORD(v169) + 1071499190);
  uint64_t v126 = (v116 + 1071499190);
  int v127 = v27 - ((2 * v27) & 0x7FBB8F6C) + 1071499190;
  int v128 = v293 ^ v291 ^ 0x6285F181;
  LODWORD(v81) = v81 ^ v115 ^ v128;
  int v129 = *(_DWORD *)(v24 - 144);
  int v130 = (char *)*(&off_100166A10 + (v129 ^ 0xC1)) - 8;
  uint64_t v131 = (uint64_t)*(&off_100166A10 + v129 - 23);
  uint64_t v132 = (uint64_t)*(&off_100166A10 + (v129 ^ 0xF3));
  unsigned int v133 = (char *)*(&off_100166A10 + (int)(v129 & 0xA2BB7C44)) - 12;
  uint64_t v134 = *(unsigned __int8 *)(v24 - 112);
  unsigned int v135 = (*(unsigned __int8 *)(v131 + (*(unsigned __int8 *)(v24 - 109) ^ 0x41)) ^ 0xB) & 0xFF00FFFF | (((v133[*(unsigned __int8 *)(v24 - 111) ^ 0x40] + 100) ^ 0x5A) << 16) | ((*(unsigned __int8 *)(v132 + (*(unsigned __int8 *)(v24 - 110) ^ 0xBBLL)) ^ 0x2B) << 8) | ((v130[v134 ^ 0x1E] ^ (v134 + (~(2 * v134) | 0x17) - 11) ^ 0x84) << 24);
  int v284 = v133;
  unsigned int v136 = (*(unsigned __int8 *)(v131 + (*(unsigned __int8 *)(v24 - 105) ^ 0xE4)) ^ 0x3D) & 0xFF00FFFF | ((v130[*(unsigned __int8 *)(v24 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v24 - 108) + (~(2 * *(unsigned __int8 *)(v24 - 108)) | 0x17) - 11) ^ 0xFFFFFFE1) << 24) | (((v133[*(unsigned __int8 *)(v24 - 107) ^ 0x27] + 100) ^ 0x96) << 16) | ((*(unsigned __int8 *)(v132 + (*(unsigned __int8 *)(v24 - 106) ^ 9)) ^ 0x2E) << 8);
  unsigned int v137 = (*(unsigned __int8 *)(v131 + (*(unsigned __int8 *)(v24 - 101) ^ 0xF2)) ^ 0x84) & 0xFF00FFFF | ((v130[*(unsigned __int8 *)(v24 - 104) ^ 0xD3] ^ (*(unsigned __int8 *)(v24 - 104) - ((2 * *(unsigned __int8 *)(v24 - 104)) & 0xE8) - 12) ^ 0xE0) << 24) | ((*(unsigned __int8 *)(v132 + (*(unsigned __int8 *)(v24 - 102) ^ 0xBELL)) ^ 0x89) << 8) & 0xFF00FFFF | (((v133[*(unsigned __int8 *)(v24 - 103) ^ 0xE9] + 100) ^ 0x8A) << 16);
  unsigned int v138 = v81 ^ 0x2497E332;
  if ((v81 & 0x80) != 0) {
    int v139 = -128;
  }
  else {
    int v139 = 128;
  }
  uint64_t v140 = v139 + v138;
  *(_DWORD *)(v24 - 136) = (*(unsigned __int8 *)(v131 + (*(unsigned __int8 *)(v24 - 97) ^ 0x74)) ^ 0xAC | (((v133[*(unsigned __int8 *)(v24 - 99) ^ 0xF3] ^ 2) + 100) << 16) | ((*(unsigned __int8 *)(v132 + (*(unsigned __int8 *)(v24 - 98) ^ 0x20)) ^ 0xC1) << 8) | ((v130[*(unsigned __int8 *)(v24 - 100) ^ 0xF3] ^ (*(unsigned __int8 *)(v24 - 100) - ((2 * *(unsigned __int8 *)(v24 - 100)) & 0xE8) - 12) ^ 0x85) << 24)) ^ 0x3364949;
  *(_DWORD *)(v24 - 140) = v135 ^ 0x13105180;
  *(_DWORD *)(v24 - 144) = v136 ^ 0xC58EBC60;
  *(_DWORD *)(v24 - 148) = v137 ^ 0x6C5E5CFC;
  HIDWORD(v281) = HIDWORD(v143) ^ HIDWORD(v145);
  LODWORD(v281) = v117 ^ v174 ^ HIDWORD(v148) ^ v146 ^ v151;
  HIDWORD(v277) = (v166 + 1071499190) ^ v118;
  LODWORD(v277) = v261 ^ v270;
  HIDWORD(v271) = v269 ^ HIDWORD(v150) ^ v148 ^ v121;
  LODWORD(v271) = HIDWORD(v144) ^ v177;
  HIDWORD(v267) = v266 ^ v241 ^ v256;
  LODWORD(v267) = v122 ^ v143 ^ v264;
  HIDWORD(v262) = v123 ^ v144;
  LODWORD(v262) = v234 ^ v119 ^ HIDWORD(v155) ^ v150 ^ v259;
  HIDWORD(v257) = v248 ^ HIDWORD(v160) ^ HIDWORD(v146) ^ v254;
  LODWORD(v257) = v125 ^ v120;
  HIDWORD(v251) = v124 ^ HIDWORD(a3);
  LODWORD(v251) = v145 ^ v185;
  HIDWORD(v245) = HIDWORD(v152) ^ v227 ^ v239 ^ (HIDWORD(v157) + 1071499190);
  LODWORD(v245) = (HIDWORD(v166) + 1071499190) ^ v244;
  HIDWORD(v240) = v152 ^ v311 ^ v196;
  LODWORD(v240) = HIDWORD(v151) ^ v169 ^ v127;
  HIDWORD(v235) = v155 ^ v237;
  LODWORD(v235) = v126 ^ v231;
  HIDWORD(v228) = *(_DWORD *)(v24 - 232) ^ v214 ^ v192 ^ v189;
  LODWORD(v228) = (a18 + 1) ^ *(_DWORD *)(v24 - 184);
  HIDWORD(v223) = *(_DWORD *)(v24 - 208) ^ v222;
  LODWORD(v223) = v216 ^ v295;
  HIDWORD(v217) = v219 ^ v162;
  LODWORD(v217) = *(_DWORD *)(v24 - 256) ^ *(_DWORD *)(v24 - 168) ^ v157;
  HIDWORD(v213) = v197 ^ *(_DWORD *)(v24 - 160) ^ v309;
  LODWORD(v213) = v297 ^ *(_DWORD *)(v24 - 224) ^ v179;
  HIDWORD(v207) = v210 ^ *(_DWORD *)(v24 - 200);
  LODWORD(v207) = *(_DWORD *)(v24 - 240) ^ v182 ^ HIDWORD(v162) ^ v160 ^ v303;
  HIDWORD(v202) = v307 ^ v201;
  LODWORD(v202) = *(_DWORD *)(v24 - 248) ^ *(_DWORD *)(v24 - 176);
  HIDWORD(v198) = *(_DWORD *)(v24 - 216) + 548209153;
  LODWORD(v198) = v140 ^ v128;
  HIDWORD(v193) = *(_DWORD *)(v24 - 192) ^ v299 ^ v305;
  int v141 = *(_DWORD *)(v24 - 128);
  LODWORD(v193) = v141 + 1795680641;
  HIDWORD(v186) = v141 ^ 0x4A5;
  LODWORD(v186) = v141 ^ 0x4B0;
  HIDWORD(v180) = v141 ^ 0x43B;
  LODWORD(v180) = v141 ^ 0x40C;
  HIDWORD(v175) = v141 ^ 0x44A;
  LODWORD(v175) = v141 ^ 0x44D;
  return sub_1000E4288(v121, v140, v123, v122, v126, v125, v124, 243, a2, a3, v143, v144, v145, v146, v148, v150, v151, v152, v155,
           v157,
           v160,
           v162,
           v166,
           v169,
           a18,
           a19,
           a20,
           v175,
           v180,
           v186,
           v193,
           v198,
           v202,
           v207,
           v213,
           v217,
           v223,
           v228,
           v235,
           v240,
           v245,
           v251,
           v257,
           v262,
           v267,
           v271,
           v277,
           v281,
           v284,
           v132,
           v131,
           v130,
           v288,
           v289,
           v290);
}

uint64_t sub_1000E4288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,uint64_t a59,uint64_t a60)
{
  uint64_t v65 = (a31 & 0x94F817EF ^ 0xFFFFFA5D) & v60 ^ 0x4A77078D;
  *(void *)(v64 - 184) = v65;
  char v66 = *(unsigned char *)(a49 + (*(unsigned __int8 *)(v63 + v65) ^ 0xF3));
  uint64_t v67 = v60 & 0xFFFFFFFE ^ 0x4A770785;
  *(void *)(v64 - 160) = v67;
  int v68 = ((v66 ^ 2) + 100) << 16;
  uint64_t v69 = *(unsigned __int8 *)(v63 + v67) ^ 0x57;
  uint64_t v70 = v60 & 0xFFFFFFF5 ^ 0x4A77078E;
  *(void *)(v64 - 168) = v70;
  int v71 = ((*(unsigned char *)(a49 + v69) + 100) ^ 0xF6) << 16;
  int v72 = *(unsigned __int8 *)(a50 + (*(unsigned __int8 *)(v63 + v70) ^ 0xB6));
  uint64_t v73 = v60 & 0xFFFFFFFB ^ 0x4A770784;
  *(void *)(v64 - 192) = v73;
  int v74 = (v72 ^ 0xA4) << 8;
  uint64_t v75 = *(unsigned __int8 *)(v63 + v73);
  int v76 = *(unsigned __int8 *)(a52 + (v75 ^ 0x9A));
  uint64_t v77 = v60 & 0xFFFFFFF8 ^ 0x4A770787;
  *(void *)(v64 - 232) = v77;
  LODWORD(v75) = v76 ^ (v75 - ((2 * v75) & 0xE8) - 12) ^ 0xFFFFFFCF;
  uint64_t v78 = *(unsigned __int8 *)(v63 + v77) ^ 0xD6;
  uint64_t v79 = v60 & 0xFFFFFFFD ^ 0x4A770786;
  *(void *)(v64 - 224) = v79;
  LODWORD(v75) = *(unsigned __int8 *)(a51 + v78) ^ 0x6E | (v75 << 24);
  LODWORD(v78) = *(unsigned __int8 *)(a50 + *(unsigned __int8 *)(v63 + v79)) ^ 0xB6;
  uint64_t v80 = v60 & 0xFFFFFFFC ^ 0x4A770787;
  *(void *)(v64 - 200) = v80;
  LODWORD(v78) = v71 | (v78 << 8);
  int v81 = *(unsigned __int8 *)(a51 + (*(unsigned __int8 *)(v63 + v80) ^ 0x74));
  uint64_t v82 = v60 & 0xFFFFFFF3 ^ 0x4A77078C;
  *(void *)(v64 - 176) = v82;
  int v83 = *(unsigned __int8 *)(a52 + (*(unsigned __int8 *)(v63 + v82) ^ 0x6ELL)) ^ (*(unsigned __int8 *)(v63 + v82)
                                                                                - ((2 * *(unsigned __int8 *)(v63 + v82)) & 0xE8)
                                                                                - 12) ^ 0x51;
  uint64_t v84 = v60 ^ 0x4A770784;
  *(void *)(v64 - 216) = v84;
  uint64_t v242 = v60 & 0xFFFFFFF7 ^ 0x4A77078C;
  unsigned int v85 = v78 | v81 ^ 0xAC | ((*(unsigned __int8 *)(a52 + (*(unsigned __int8 *)(v63 + v84) ^ 0x15)) ^ (*(unsigned __int8 *)(v63 + v84) + (~(2 * *(unsigned __int8 *)(v63 + v84)) | 0x17) - 11) ^ 0xAE) << 24);
  LODWORD(v78) = v74 | ((*(unsigned __int8 *)(a52 + (*(unsigned __int8 *)(v63 + v242) ^ 0x46)) ^ (*(unsigned __int8 *)(v63 + v242)
                                                                                                  - ((2 * *(unsigned __int8 *)(v63 + v242)) & 0xE8)
                                                                                                  - 12) ^ 0xFFFFFFE7) << 24);
  uint64_t v86 = v60 & 0xFFFFFFF1 ^ 0x4A77078E;
  *(void *)(v64 - 208) = v86;
  int v87 = *(unsigned __int8 *)(a50 + (*(unsigned __int8 *)(v63 + v86) ^ 0xD5)) ^ 0x3E;
  uint64_t v88 = v60 & 0xFFFFFFFA ^ 0x4A770785;
  *(void *)(v64 - 240) = v88;
  uint64_t v89 = v60 & 0xFFFFFFF4 ^ 0x4A77078F;
  *(void *)(v64 - 256) = v89;
  LODWORD(v75) = v75 & 0xFF00FFFF | (((*(unsigned char *)(a49 + (*(unsigned __int8 *)(v63 + v88) ^ 0x9DLL))
                                                      + 100) ^ 0xF7) << 16);
  int v90 = *(unsigned __int8 *)(a51 + (*(unsigned __int8 *)(v63 + v89) ^ 0xC2)) ^ 0x89 | v78;
  uint64_t v241 = v60 & 0xFFFFFFF6 ^ 0x4A77078D;
  uint64_t v240 = v60 & 0xFFFFFFF9 ^ 0x4A770786;
  uint64_t v91 = *(unsigned __int8 *)(v63 + v240) ^ 0xA4;
  unsigned int v92 = v90 & 0xFF00FFFF | (((*(unsigned char *)(a49 + (*(unsigned __int8 *)(v63 + v241) ^ 0x3ELL)) + 100) ^ 0xDF) << 16);
  uint64_t v93 = v60 & 0xFFFFFFF0 ^ 0x4A77078F;
  *(void *)(v64 - 248) = v93;
  int v94 = *(unsigned __int8 *)(a51 + (*(unsigned __int8 *)(v63 + v93) ^ 0x47)) ^ 0xAC | v68 | (v83 << 24) | (v87 << 8);
  int v239 = v75 | ((*(unsigned __int8 *)(a50 + v91) ^ 0x6E) << 8);
  uint64_t v95 = *(void *)(v61 + 8 * (*(_DWORD *)(v64 - 128) - 994)) - 12;
  unsigned int v96 = ((((unsigned __int16)(v239 ^ a54) >> 8) ^ 0x4C)
       - 1371058040
       - 2 * ((((v239 ^ a54) >> 8) ^ 0xB71C4C) & 0x8A ^ ((v239 ^ a54) >> 8) & 2)) ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(v239 ^ a54) >> 8) ^ 0x21u));
  uint64_t v97 = *(void *)(v61 + 8 * SHIDWORD(a30)) - 12;
  int v98 = (v96 - 534621661 - (v62 & (2 * v96))) ^ *(_DWORD *)(v97 + 4 * ((v85 ^ BYTE4(a54)) ^ 0xAAu));
  LODWORD(v91) = ((((unsigned __int16)(a53 ^ v94) >> 8) ^ 0x8C)
                - 1371058040
                - 2 * ((((a53 ^ v94) >> 8) ^ 0x5DBB8C) & 0x98 ^ ((a53 ^ v94) >> 8) & 0x10)) ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(a53 ^ v94) >> 8) ^ 0xE1u));
  uint64_t v99 = *(void *)(v61 + 8 * (*(_DWORD *)(v64 - 128) - 960)) - 12;
  int v100 = *(_DWORD *)(v99 + 4 * (((v92 ^ HIDWORD(a53)) >> 16) ^ 0x68u));
  HIDWORD(v102) = v100 ^ 0x5E2;
  LODWORD(v102) = v100 ^ 0x5A9C2000;
  int v101 = v102 >> 12;
  int v103 = *(_DWORD *)(v99 + 4 * ((v85 ^ HIDWORD(a54)) >> 16));
  HIDWORD(v102) = v103 ^ 0x5E2;
  LODWORD(v102) = v103 ^ 0x5A9C2000;
  unsigned int v104 = v98 + 2017542725 - ((2 * v98) & 0xF082848A);
  uint64_t v105 = (uint64_t)*(&off_100166A10 + (int)a30);
  LODWORD(v91) = (v91 + 2017542725 - ((2 * v91) & 0xF082848A)) ^ *(_DWORD *)(v105
                                                                           + 4
                                                                           * (((v239 ^ a54) >> 24) ^ 0xB7)) ^ (v102 >> 12);
  int v106 = *(_DWORD *)(v99 + 4 * (((a53 ^ v94) >> 16) ^ 0xBBu));
  HIDWORD(v102) = v106 ^ 0x5E2;
  LODWORD(v102) = v106 ^ 0x5A9C2000;
  int v107 = (BYTE1(v92) ^ BYTE5(a53)) ^ *(_DWORD *)(v97 + 4 * ((v239 ^ a54) ^ 0xFBu)) ^ *(_DWORD *)(v95 + 4 * ((BYTE1(v92) ^ BYTE5(a53)) ^ 0x23u)) ^ (v102 >> 12);
  int v108 = *(_DWORD *)(v99 + 4 * (((v239 ^ a54) >> 16) ^ 0x1Cu));
  HIDWORD(v102) = v108 ^ 0x5E2;
  LODWORD(v102) = v108 ^ 0x5A9C2000;
  LODWORD(v75) = *(_DWORD *)(v105 + 4 * (((v92 ^ HIDWORD(a53)) >> 24) ^ 0xF6)) ^ (((unsigned __int16)(v85 ^ WORD2(a54) ^ 0x32AA) >> 8)
                                                                                  - 1371058040
                                                                                  - (((v85 ^ HIDWORD(a54)) >> 7) & 0x110)) ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(v85 ^ WORD2(a54) ^ 0x32AA) >> 8) ^ 0x6Du)) ^ ((v102 >> 12) + 2017542725 - ((2 * (v102 >> 12)) & 0xF082848A));
  int v109 = HIDWORD(a48) ^ v101 ^ *(_DWORD *)(v105 + 4 * (((a53 ^ v94) >> 24) ^ 0x5D)) ^ v104;
  unsigned int v110 = a48 ^ *(_DWORD *)(v97 + 4 * ((a53 ^ v94) ^ 0x87u)) ^ (v75 - 534621661 - (v62 & (2 * v75)));
  LODWORD(v75) = HIDWORD(a47) ^ *(_DWORD *)(v97 + 4 * ((v92 ^ BYTE4(a53)) ^ 0x5Fu)) ^ (v91 - 534621661 - (v62 & (2 * v91)));
  unsigned int v111 = a32 ^ *(_DWORD *)(v105 + 4 * ((v85 ^ HIDWORD(a54) ^ 0x730032AA) >> 24)) ^ ((v107 ^ 0x4E6502E5)
                                                                                    + 2017542725
                                                                                    - 2
                                                                                    * ((v107 ^ 0x4E6502E5) & 0x78414255 ^ v107 & 0x10));
  unsigned int v112 = v109 ^ 0xF9388C2F;
  int v113 = *(_DWORD *)(v99 + 4 * ((v109 ^ 0xF9388C2F) >> 16));
  HIDWORD(v102) = v113 ^ 0x5E2;
  LODWORD(v102) = v113 ^ 0x5A9C2000;
  int v114 = v102 >> 12;
  int v115 = *(_DWORD *)(v99 + 4 * (BYTE2(v110) ^ 0xE1u));
  HIDWORD(v102) = v115 ^ 0x5E2;
  LODWORD(v102) = v115 ^ 0x5A9C2000;
  int v116 = v102 >> 12;
  int v117 = *(_DWORD *)(v99 + 4 * (BYTE2(v75) ^ 0x66u));
  HIDWORD(v102) = v117 ^ 0x5E2;
  LODWORD(v102) = v117 ^ 0x5A9C2000;
  int v118 = (v102 >> 12) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v111) ^ 5u)) ^ ((BYTE1(v111) ^ 0x68)
                                                                     - 1371058040
                                                                     - 2
                                                                     * (((v111 >> 8) ^ 0x42BD68) & 0x9E ^ (v111 >> 8) & 0x16));
  int v119 = (v114 - 534621661 - (v62 & (2 * v114))) ^ *(_DWORD *)(v97
                                                             + 4
                                                             * ((BYTE4(a47) ^ *(unsigned char *)(v97 + 4 * ((v92 ^ BYTE4(a53)) ^ 0x5Fu)) ^ (v91 + 35 - (v62 & (2 * v91)))) ^ 0xB6u));
  int v120 = (v118 - 534621661 - (v62 & (2 * v118))) ^ *(_DWORD *)(v97 + 4 * (v109 ^ 0x61u));
  unsigned int v121 = (((unsigned __int16)(v109 ^ 0x8C2F) >> 8) - 1371058040 - (((v109 ^ 0xF9388C2F) >> 7) & 0x110)) ^ 0xD678EAEF ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(v109 ^ 0x8C2F) >> 8) ^ 0x6Du));
  unsigned int v122 = *(_DWORD *)(v105 + 4 * (BYTE3(v75) ^ 0x43)) ^ 0xDA5B19FB;
  int v123 = v121 + v122 - 2 * (v121 & v122);
  int v124 = *(_DWORD *)(v99 + 4 * (BYTE2(v111) ^ 0xBDu));
  HIDWORD(v102) = v124 ^ 0x5E2;
  LODWORD(v102) = v124 ^ 0x5A9C2000;
  unsigned int v125 = *(_DWORD *)(v105 + 4 * HIBYTE(v112)) ^ (v116 + 2017542725 - ((2 * v116) & 0xF082848A));
  int v126 = (v125 - 534621661 - (v62 & (2 * v125))) ^ *(_DWORD *)(v97 + 4 * (v111 ^ 0xABu));
  unsigned int v127 = *(_DWORD *)(v105 + 4 * (HIBYTE(v111) ^ 0x42)) ^ a58 ^ *(_DWORD *)(v95 + 4 * (BYTE1(v110) ^ 0xF5u)) ^ ((BYTE1(v110) ^ 0x98) - 1371058040 - ((2 * ((v110 >> 8) ^ 0x3DE198)) & 0x110)) ^ (v119 + 2017542725 - ((2 * v119) & 0xF082848A));
  unsigned int v128 = HIDWORD(a31) ^ *(_DWORD *)(v95
                                  + 4
                                  * (((unsigned __int16)(WORD2(a47) ^ *(_WORD *)(v97
                                                                                                + 4
                                                                                                * ((v92 ^ BYTE4(a53)) ^ 0x5Fu)) ^ (v91 + 21027 - (v62 & (2 * v91)))) >> 8) ^ 0x39u)) ^ (v126 - 1371058040 - ((2 * v126) & 0x5C8EA110));
  unsigned int v129 = HIDWORD(a46) ^ *(_DWORD *)(v97 + 4 * (v110 ^ 0x5Bu)) ^ ((v123 ^ (v102 >> 12))
                                                                                  - 534621661
                                                                                  - (v62 & (2 * (v123 ^ (v102 >> 12)))));
  int v130 = *(_DWORD *)(v99 + 4 * (BYTE2(v129) ^ 0x79u));
  int v131 = a47 ^ *(_DWORD *)(v105 + 4 * (HIBYTE(v110) ^ 0x3D)) ^ (v120 + 2017542725 - ((2 * v120) & 0xF082848A));
  HIDWORD(v102) = v130 ^ 0x5E2;
  LODWORD(v102) = v130 ^ 0x5A9C2000;
  BYTE1(v130) = BYTE1(v131) ^ 0x68;
  int v132 = ((v102 >> 12) + 2017542725 - ((2 * (v102 >> 12)) & 0xF082848A)) ^ *(_DWORD *)(v105
                                                                                     + 4
                                                                                     * ((v131 ^ 0x2261685Eu) >> 24));
  LODWORD(v91) = ((BYTE1(v129) ^ 0xD0) - 1371058040 - ((2 * ((v129 >> 8) ^ 0x679D0)) & 0x110)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v129) ^ 0xBDu));
  LODWORD(v91) = (v91 - 534621661 - (v62 & (2 * v91))) ^ *(_DWORD *)(v97 + 4 * (v127 ^ 0x76u));
  int v133 = ((BYTE1(v128) ^ 0xEC) - 1371058040 - 2 * (((v128 >> 8) ^ 0xE5FEC) & 0x8A ^ (v128 >> 8) & 2)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v128) ^ 0x81u));
  int v134 = *(_DWORD *)(v99 + 4 * (BYTE2(v128) ^ 0x5Fu));
  HIDWORD(v102) = v134 ^ 0x5E2;
  LODWORD(v102) = v134 ^ 0x5A9C2000;
  int v135 = v102 >> 12;
  HIDWORD(v102) = *(_DWORD *)(v97 + 4 * (v131 ^ 0x5Eu)) ^ 0x93575AB;
  LODWORD(v102) = HIDWORD(v102);
  int v136 = (v102 >> 28) ^ __ROR4__(*(_DWORD *)(v105 + 4 * (HIBYTE(v129) ^ 6)) ^ 0x7462B151 ^ (v133+ 2017542725- ((2 * v133) & 0xF082848A)), 28);
  unsigned int v137 = (v135 + 2017542725 - ((2 * v135) & 0xF082848A)) ^ *(_DWORD *)(v105 + 4 * (HIBYTE(v127) ^ 0xD2));
  int v138 = (v137 - 534621661 - (v62 & (2 * v137))) ^ *(_DWORD *)(v97 + 4 * (v129 ^ 0x4Cu));
  int v139 = *(_DWORD *)(v99 + 4 * (BYTE2(v131) ^ 0x1Bu));
  HIDWORD(v102) = v139 ^ 0x5E2;
  LODWORD(v102) = v139 ^ 0x5A9C2000;
  int v140 = v102 >> 12;
  int v141 = BYTE1(v127) ^ 0xC0;
  int v142 = v141 - 1371058040 - 2 * (((v127 >> 8) ^ 0xD2CCC0) & 0x8E ^ (v127 >> 8) & 6);
  int v143 = *(_DWORD *)(v99 + 4 * (BYTE2(v127) ^ 0xCCu));
  HIDWORD(v102) = v143 ^ 0x5E2;
  LODWORD(v102) = v143 ^ 0x5A9C2000;
  int v144 = a46 ^ (v102 >> 12) ^ __ROR4__(v136 ^ 0x78071371, 4);
  LOBYTE(v143) = v128 ^ BYTE1(v75) ^ 0x54;
  unsigned int v145 = HIDWORD(a45) ^ *(_DWORD *)(v105 + 4 * (HIBYTE(v128) ^ 0xE)) ^ v140 ^ (v91
                                                                               + 2017542725
                                                                               - ((2 * v91) & 0xF082848A));
  LODWORD(v91) = BYTE1(v130);
  LODWORD(v75) = a45 ^ *(_DWORD *)(v95 + 4 * (BYTE1(v130) ^ 0x6Du)) ^ (v138 - 1371058040 - ((2 * v138) & 0x5C8EA110));
  unsigned int v146 = HIDWORD(a44) ^ v142 ^ *(_DWORD *)(v97 + 4 * (v143 ^ 0xCAu)) ^ *(_DWORD *)(v95 + 4 * (v141 ^ 0x6Du)) ^ (v132 - 534621661 - (v62 & (2 * v132)));
  LODWORD(v91) = v91 ^ 0x4552953C ^ v75;
  int v147 = *(_DWORD *)(v99 + 4 * BYTE2(v91));
  HIDWORD(v102) = v147 ^ 0x5E2;
  LODWORD(v102) = v147 ^ 0x5A9C2000;
  int v148 = v102 >> 12;
  BYTE1(v147) = BYTE1(v144) ^ 0xE7;
  int v149 = *(_DWORD *)(v99 + 4 * ((v144 ^ 0x99FEE750) >> 16));
  HIDWORD(v102) = v149 ^ 0x5E2;
  LODWORD(v102) = v149 ^ 0x5A9C2000;
  int v150 = (BYTE1(v91) - 1371058040 - ((v91 >> 7) & 0x110)) ^ *(_DWORD *)(v97
                                                                                    + 4
                                                                                    * (v145 ^ 0x72u)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v91) ^ 0x6Du)) ^ ((v102 >> 12) - 534621661 - (v62 & (2 * (v102 >> 12))));
  int v151 = *(_DWORD *)(v99 + 4 * (BYTE2(v146) ^ 2u));
  HIDWORD(v102) = v151 ^ 0x5E2;
  LODWORD(v102) = v151 ^ 0x5A9C2000;
  LODWORD(v91) = *(_DWORD *)(v97 + 4 * v91) ^ *(_DWORD *)(v105 + 4 * (HIBYTE(v145) ^ 0xA7)) ^ (v102 >> 12);
  int v152 = *(_DWORD *)(v99 + 4 * (BYTE2(v145) ^ 0x3Bu));
  HIDWORD(v102) = v152 ^ 0x5E2;
  LODWORD(v102) = v152 ^ 0x5A9C2000;
  int v153 = a44 ^ ((BYTE1(v146) ^ 0xD9) - 1371058040 - ((2 * ((v146 >> 8) ^ 0x9802D9)) & 0x110)) ^ *(_DWORD *)(v97 + 4 * (v144 ^ 0x1Eu)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v146) ^ 0xB4u)) ^ (v102 >> 12) ^ *(_DWORD *)(v105 + 4 * (BYTE3(v75) ^ 0x61));
  LODWORD(v75) = HIDWORD(a43) ^ *(_DWORD *)(v105 + 4 * (HIBYTE(v146) ^ 0x98)) ^ (v150
                                                                                 + 2017542725
                                                                                 - ((2 * v150) & 0xF082848A));
  unsigned int v154 = a43 ^ ((BYTE1(v145) ^ 0x29) - 1371058040 - ((2 * ((v145 >> 8) ^ 0xA73B29)) & 0x110)) ^ *(_DWORD *)(v97 + 4 * (v146 ^ 0x3Du)) ^ *(_DWORD *)(v105 + 4 * ((v144 ^ 0x99FEE750) >> 24)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v145) ^ 0x44u)) ^ v148;
  unsigned int v155 = HIDWORD(a42) ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(v144 ^ 0xE750) >> 8) ^ 0x6Du)) ^ ((v91 ^ 0x98631066) - 1371058040 - ((2 * (v91 ^ 0x98631066)) & 0x5C8EA110));
  int v156 = *(_DWORD *)(v99 + 4 * (BYTE2(v153) ^ 0x1Cu));
  HIDWORD(v102) = v156 ^ 0x5E2;
  LODWORD(v102) = v156 ^ 0x5A9C2000;
  int v157 = v102 >> 12;
  LODWORD(v91) = *(_DWORD *)(v99 + 4 * (BYTE2(v154) ^ 0x8Bu));
  HIDWORD(v102) = v91 ^ 0x5E2;
  LODWORD(v102) = v91 ^ 0x5A9C2000;
  int v158 = BYTE1(v154) ^ 0xEF;
  int v159 = v158 - 1371058040 - ((2 * ((v154 >> 8) ^ 0x4D8BEF)) & 0x110);
  LOBYTE(v148) = v153 ^ 0xF5;
  LODWORD(v91) = *(_DWORD *)(v97 + 4 * ((v155 ^ BYTE1(v147)) ^ 0x41u)) ^ (((unsigned __int16)(v153 ^ 0x8BF5) >> 8)
                                                                                           - 1371058040
                                                                                           - (((v153 ^ 0xE6668BF5) >> 7) & 0x110)) ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(v153 ^ 0x8BF5) >> 8) ^ 0x6Du)) ^ ((v102 >> 12) - 534621661 - (v62 & (2 * (v102 >> 12))));
  LODWORD(v88) = *(_DWORD *)(v99 + 4 * (BYTE2(v155) ^ 0x81u));
  HIDWORD(v102) = v88 ^ 0x5E2;
  LODWORD(v102) = v88 ^ 0x5A9C2000;
  LODWORD(v88) = ((v102 >> 12) + 2017542725 - ((2 * (v102 >> 12)) & 0xF082848A)) ^ *(_DWORD *)(v105
                                                                                             + 4
                                                                                             * ((v153 ^ 0xE6668BF5) >> 24));
  LODWORD(v88) = (v88 - 534621661 - (v62 & (2 * v88))) ^ *(_DWORD *)(v97 + 4 * (v154 ^ 0x63u));
  int v160 = ((BYTE1(v155) ^ 0xA0) - 1371058040 - ((2 * ((v155 >> 8) ^ 0x6881A0)) & 0x110)) ^ (v157
                                                                                         - 534621661
                                                                                         - (v62 & (2 * v157))) ^ *(_DWORD *)(v97 + 4 * (v75 ^ 0xFCu)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v155) ^ 0xCDu));
  unsigned int v161 = *(_DWORD *)(v99 + 4 * (BYTE2(v75) ^ 0xC6u));
  LODWORD(v102) = __ROR4__((v161 >> 12) ^ 0x26874E0, 17) ^ 0xEE910136;
  HIDWORD(v102) = v102;
  unsigned int v162 = a42 ^ *(_DWORD *)(v95 + 4 * (BYTE1(v75) ^ 0x75u)) ^ (v88 - 1371058040 - ((2 * v88) & 0x5C8EA110));
  unsigned int v163 = HIDWORD(a41) ^ *(_DWORD *)(v105 + 4 * (HIBYTE(v154) ^ 0x4D)) ^ (v160 + 2017542725 - ((2 * v160) & 0xF082848A));
  int v164 = a41 ^ *(_DWORD *)(v105 + 4 * (BYTE3(v75) ^ 0x5A)) ^ (v91 + 2017542725 - ((2 * v91) & 0xF082848A));
  unsigned int v165 = HIDWORD(a40) ^ v159 ^ *(_DWORD *)(v97 + 4 * v148) ^ *(_DWORD *)(v105
                                                                                          + 4 * (HIBYTE(v155) ^ 0x68)) ^ *(_DWORD *)(v95 + 4 * (v158 ^ 0x6Du)) ^ ((v102 >> 15) + (v161 << 20));
  int v166 = ((((unsigned __int16)(a42 ^ *(_WORD *)(v95 + 4 * (BYTE1(v75) ^ 0x75u)) ^ (v88 + 20616 - ((2 * v88) & 0xA110))) >> 8) ^ 0x9D)
        - 1371058040
        - ((2 * ((v162 >> 8) ^ 0xC2489D)) & 0x110)) ^ *(_DWORD *)(v95
                                                                + 4
                                                                * (((unsigned __int16)(a42 ^ *(_WORD *)(v95 + 4 * (BYTE1(v75) ^ 0x75u)) ^ (v88 + 20616 - ((2 * v88) & 0xA110))) >> 8) ^ 0xF0u));
  LODWORD(v88) = *(_DWORD *)(v99 + 4 * (BYTE2(v163) ^ 0x8Fu));
  unsigned int v167 = *(_DWORD *)(v97 + 4 * (v165 ^ 0xECu)) ^ (v88 << 20) ^ (v88 >> 12) ^ 0x5E25A9C2 ^ (v166 - 534621661 - (v62 & (2 * v166)));
  LODWORD(v91) = *(_DWORD *)(v99 + 4 * ((v164 ^ 0xCFB8D782) >> 16));
  HIDWORD(v102) = v91 ^ 0x5E2;
  LODWORD(v102) = v91 ^ 0x5A9C2000;
  LODWORD(v75) = ((v102 >> 12) - 534621661 - (v62 & (2 * (v102 >> 12)))) ^ *(_DWORD *)(v97
                                                                                     + 4
                                                                                     * ((v162 ^ BYTE1(v75)) ^ 0x3Fu));
  LODWORD(v91) = v167 + 2017542725 - ((2 * v167) & 0xF082848A);
  int v168 = v75 + 2017542725 - ((2 * v75) & 0xF082848A);
  LODWORD(v88) = BYTE1(v163) ^ 0xD9;
  LODWORD(v75) = *(_DWORD *)(v99 + 4 * (BYTE2(v162) ^ 0x48u));
  int v169 = v88 - 1371058040 - ((2 * ((v163 >> 8) ^ 0xC78FD9)) & 0x110);
  HIDWORD(v102) = v75 ^ 0x5E2;
  LODWORD(v102) = v75 ^ 0x5A9C2000;
  int v170 = ((BYTE1(v165) ^ 0x70) - 1371058040 - ((v165 >> 7) & 0x110)) ^ *(_DWORD *)(v97
                                                                                 + 4 * (v164 ^ 0xCCu)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v165) ^ 0x1Du)) ^ ((v102 >> 12) - 534621661 - (v62 & (2 * (v102 >> 12))));
  int v171 = *(_DWORD *)(v99 + 4 * (BYTE2(v165) ^ 0xC8u));
  HIDWORD(v102) = v171 ^ 0x5E2;
  LODWORD(v102) = v171 ^ 0x5A9C2000;
  unsigned int v172 = a40 ^ (((unsigned __int16)(v164 ^ 0xD782) >> 8)
              - 1371058039
              + (~((v164 ^ 0xCFB8D782) >> 7) | 0xFFFFFEEF)) ^ *(_DWORD *)(v97 + 4 * (v163 ^ 0x50u)) ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(v164 ^ 0xD782) >> 8) ^ 0x6Du)) ^ (v102 >> 12) ^ *(_DWORD *)(v105 + 4 * (HIBYTE(v162) ^ 0xC2));
  unsigned int v173 = HIDWORD(a39) ^ *(_DWORD *)(v105 + 4 * (HIBYTE(v163) ^ 0xC7)) ^ (v170 + 2017542725 - ((2 * v170) & 0xF082848A));
  unsigned int v174 = a39 ^ *(_DWORD *)(v105 + 4 * ((v164 ^ 0xCFB8D782) >> 24)) ^ v91;
  unsigned int v175 = HIDWORD(a38) ^ v169 ^ *(_DWORD *)(v95 + 4 * (v88 ^ 0x6D)) ^ *(_DWORD *)(v105
                                                                                               + 4
                                                                                               * (HIBYTE(v165) ^ 0xE0)) ^ v168;
  LODWORD(v88) = (((unsigned __int16)(v175 ^ 0xCCA2) >> 8)
                - 1371058040
                - (((v175 ^ 0x33C8CCA2) >> 7) & 0x110)) ^ *(_DWORD *)(v95
                                                                    + 4
                                                                    * (((unsigned __int16)(v175 ^ 0xCCA2) >> 8) ^ 0x6Du));
  int v176 = *(_DWORD *)(v99 + 4 * (BYTE2(v173) ^ 0xE6u));
  HIDWORD(v102) = v176 ^ 0x5E2;
  LODWORD(v102) = v176 ^ 0x5A9C2000;
  int v177 = v102 >> 12;
  int v178 = *(_DWORD *)(v99 + 4 * (BYTE2(v174) ^ 0x1Cu));
  HIDWORD(v102) = v178 ^ 0x5E2;
  LODWORD(v102) = v178 ^ 0x5A9C2000;
  int v179 = (v102 >> 12) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v173) ^ 0xD9u)) ^ ((BYTE1(v173) ^ 0xB4)
                                                                        - 1371058040
                                                                        - 2
                                                                        * (((v173 >> 8) ^ 0x4FE6B4) & 0x8B ^ (v173 >> 8) & 3));
  int v180 = (v179 - 534621661 - (v62 & (2 * v179))) ^ *(_DWORD *)(v97 + 4 * (v172 ^ 0x8Cu));
  LODWORD(v88) = (v88 - 534621661 - (v62 & (2 * v88))) ^ *(_DWORD *)(v97
                                                                   + 4
                                                                   * ((a39 ^ *(unsigned char *)(v105 + 4 * ((v164 ^ 0xCFB8D782) >> 24)) ^ v91) ^ 0x3Au));
  int v181 = *(_DWORD *)(v97 + 4 * (v175 ^ 0xA2u)) ^ (((unsigned __int16)(v172 ^ 0x48C) >> 8)
                                                                   - 1371058040
                                                                   - ((v172 >> 7) & 0x110)) ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(v172 ^ 0x48C) >> 8) ^ 0x6Du)) ^ (v177 - 534621661 - (v62 & (2 * v177)));
  int v182 = *(_DWORD *)(v97 + 4 * (v173 ^ 0x96u));
  HIDWORD(v102) = v182 ^ 0x225223;
  LODWORD(v102) = ~v182;
  HIDWORD(v102) = (v102 >> 29) ^ 0x6615DA09;
  LODWORD(v102) = HIDWORD(v102);
  int v183 = (v102 >> 3) - 1371058040 - ((2 * (v102 >> 3)) & 0x5C8EA110);
  LODWORD(v91) = *(_DWORD *)(v99 + 4 * ((v172 ^ 0x8150048C) >> 16));
  HIDWORD(v102) = v91 ^ 0x5E2;
  LODWORD(v102) = v91 ^ 0x5A9C2000;
  LODWORD(v91) = v102 >> 12;
  int v184 = *(_DWORD *)(v99 + 4 * ((v175 ^ 0x33C8CCA2) >> 16));
  HIDWORD(v102) = v184 ^ 0x5E2;
  LODWORD(v102) = v184 ^ 0x5A9C2000;
  unsigned int v185 = a38 ^ *(_DWORD *)(v105 + 4 * (HIBYTE(v175) ^ 0x17)) ^ (v180 + 2017542725 - ((2 * v180) & 0xF082848A));
  int v186 = v183 ^ *(_DWORD *)(v95 + 4 * (BYTE1(v174) ^ 0xD1u)) ^ (v102 >> 12);
  unsigned int v187 = *(_DWORD *)(v105 + 4 * (HIBYTE(v172) ^ 0xA5)) ^ a57 ^ (v186 + 2017542725 - ((2 * v186) & 0xF082848A));
  unsigned int v188 = HIDWORD(a37) ^ *(_DWORD *)(v105 + 4 * (HIBYTE(v173) ^ 0x4F)) ^ v91 ^ (v88
                                                                               + 2017542725
                                                                               - ((2 * v88) & 0xF082848A));
  unsigned int v189 = a37 ^ *(_DWORD *)(v105 + 4 * (HIBYTE(v174) ^ 0x1B)) ^ (v181 + 2017542725 - ((2 * v181) & 0xF082848A));
  int v190 = *(_DWORD *)(v99 + 4 * (BYTE2(v189) ^ 0x7Eu));
  HIDWORD(v102) = v190 ^ 0x5E2;
  LODWORD(v102) = v190 ^ 0x5A9C2000;
  LODWORD(v91) = v102 >> 12;
  int v191 = *(_DWORD *)(v99 + 4 * (BYTE2(v188) ^ 1u));
  HIDWORD(v102) = v191 ^ 0x5E2;
  LODWORD(v102) = v191 ^ 0x5A9C2000;
  int v192 = ((v102 >> 12) - 534621661 - (v62 & (2 * (v102 >> 12)))) ^ *(_DWORD *)(v97
                                                                             + 4 * (v185 ^ 0xC6u));
  LODWORD(v88) = ((BYTE1(v185) ^ 0x71) - 1371058040 - ((v185 >> 7) & 0x110)) ^ *(_DWORD *)(v95
                                                                                         + 4 * (BYTE1(v185) ^ 0x1Cu));
  LODWORD(v88) = (v88 + 2017542725 - ((2 * v88) & 0xF082848A)) ^ *(_DWORD *)(v105 + 4 * (HIBYTE(v188) ^ 0x1F));
  int v193 = *(_DWORD *)(v99 + 4 * (BYTE2(v185) ^ 0x5Bu));
  HIDWORD(v102) = v193 ^ 0x5E2;
  LODWORD(v102) = v193 ^ 0x5A9C2000;
  int v194 = v102 >> 12;
  unsigned int v195 = BYTE1(v174) ^ 0x73F4E0AF ^ v187;
  int v196 = *(_DWORD *)(v99 + 4 * BYTE2(v195));
  HIDWORD(v102) = v196 ^ 0x5E2;
  LODWORD(v102) = v196 ^ 0x5A9C2000;
  int v197 = v102 >> 12;
  HIDWORD(v102) = v91 ^ ((BYTE1(v188) ^ 0x81) - 1371058040 - ((2 * ((v188 >> 8) ^ 0x1F0181)) & 0x110)) ^ 0xD678EAEF ^ *(_DWORD *)(v95 + 4 * (BYTE1(v188) ^ 0xECu));
  LODWORD(v102) = HIDWORD(v102);
  LODWORD(v102) = (v102 >> 11) ^ __ROR4__(*(_DWORD *)(v105 + 4 * (HIBYTE(v185) ^ 0xF2)) ^ 0xDA5B19FB, 11) ^ 0xD490839A;
  HIDWORD(v102) = v102;
  unsigned int v198 = HIDWORD(a36) ^ *(_DWORD *)(v97 + 4 * (v188 ^ 0xB8u)) ^ ((BYTE1(v189) ^ 0xAA)
                                                                                  - 1371058040
                                                                                  - 2
                                                                                  * (((v189 >> 8) ^ 0x967EAA) & 0x99 ^ (v189 >> 8) & 0x11)) ^ *(_DWORD *)(v105 + 4 * (HIBYTE(v187) ^ 0x57)) ^ v194 ^ *(_DWORD *)(v95 + 4 * (BYTE1(v189) ^ 0xC7u));
  unsigned int v199 = a36 ^ *(_DWORD *)(v105 + 4 * (HIBYTE(v189) ^ 0x96)) ^ (BYTE1(v195) - 1371058040 - ((v195 >> 7) & 0x110)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v195) ^ 0x6Du)) ^ (v192 + 2017542725 - ((2 * v192) & 0xF082848A));
  unsigned int v200 = HIDWORD(a35) ^ *(_DWORD *)(v97 + 4 * (v189 ^ 0x88u)) ^ v197 ^ (v88
                                                                                         - 534621661
                                                                                         - (v62 & (2 * v88)));
  LODWORD(v93) = a35 ^ *(_DWORD *)(v97 + 4 * (BYTE1(v174) ^ 0xAFu ^ v187)) ^ ((v102 >> 21)
                                                                                               - 534621661
                                                                                               - (v62 & (2 * (v102 >> 21))));
  BYTE2(v189) = BYTE2(v200) ^ 0x4A;
  LODWORD(v88) = *(_DWORD *)(v99 + 4 * (BYTE2(v198) ^ 0x88u));
  HIDWORD(v102) = v88 ^ 0x5E2;
  LODWORD(v102) = v88 ^ 0x5A9C2000;
  LODWORD(v88) = v102 >> 12;
  int v201 = *(_DWORD *)(v95 + 4 * (BYTE1(v199) ^ 0x96u)) ^ ((BYTE1(v199) ^ 0xFB)
                                                         - 1371058040
                                                         - ((2 * ((v199 >> 8) ^ 0x3EA2FB)) & 0x110));
  int v202 = (v201 - 534621661 - (v62 & (2 * v201))) ^ *(_DWORD *)(v97 + 4 * (v200 ^ 0x75u));
  int v203 = *(_DWORD *)(v99 + 4 * (BYTE2(v199) ^ 0xA2u));
  HIDWORD(v102) = v203 ^ 0x5E2;
  LODWORD(v102) = v203 ^ 0x5A9C2000;
  LODWORD(v75) = (((unsigned __int16)(v200 ^ 0xF075) >> 8)
                - 1371058039
                + (~((v200 ^ 0xB54AF075) >> 7) | 0xFFFFFEEF)) ^ (v102 >> 12) ^ *(_DWORD *)(v95
                                                                                         + 4
                                                                                         * (((unsigned __int16)(v200 ^ 0xF075) >> 8) ^ 0x6Du));
  LODWORD(v75) = (v75 + 2017542725 - ((2 * v75) & 0xF082848A)) ^ *(_DWORD *)(v105 + 4 * (BYTE3(v93) ^ 0xED));
  int v204 = *(_DWORD *)(v105 + 4 * (HIBYTE(v200) ^ 0x91));
  LODWORD(v91) = *(_DWORD *)(v105 + 4 * (HIBYTE(v199) ^ 0x3E));
  LODWORD(v105) = *(_DWORD *)(v105 + 4 * (HIBYTE(v198) ^ 0x5F));
  LODWORD(v93) = v93 ^ 0xC9AF1D8F;
  int v205 = *(_DWORD *)(v97 + 4 * v93);
  int v206 = *(_DWORD *)(v97 + 4 * (v199 ^ 0x9Au));
  int v207 = *(_DWORD *)(v97 + 4 * (v198 ^ 9u));
  int v208 = v75 - 534621661 - (v62 & (2 * v75));
  LODWORD(v75) = *(_DWORD *)(v99 + 4 * BYTE2(v189));
  HIDWORD(v102) = v75 ^ 0x5E2;
  LODWORD(v102) = v75 ^ 0x5A9C2000;
  LODWORD(v75) = v198 >> 8;
  LODWORD(v97) = *(_DWORD *)(v95 + 4 * (BYTE1(v93) ^ 0x6Du));
  int v209 = (v198 >> 8) ^ 0x5F88D0;
  LODWORD(v95) = *(_DWORD *)(v95 + 4 * (v209 ^ 0x6Du));
  int v210 = v209 - 1371058040 - 2 * (v209 & 0x8E ^ v75 & 6);
  LODWORD(v75) = HIDWORD(a34) ^ v206 ^ v88 ^ v204 ^ (BYTE1(v93) - 1371058040 - ((v93 >> 7) & 0x110)) ^ v97;
  LODWORD(v97) = a34 ^ v210 ^ v91 ^ v95 ^ (v102 >> 12) ^ v205;
  LODWORD(v95) = HIDWORD(a33) ^ v207 ^ v208;
  unsigned int v211 = a33 ^ v105 ^ (*(_DWORD *)(v99 + 4 * BYTE2(v93)) >> 12) ^ (*(_DWORD *)(v99 + 4 * BYTE2(v93)) << 20) ^ (v202 + 2017542725 - ((2 * v202) & 0xF082848A));
  int v212 = (char *)*(&off_100166A10 + SHIDWORD(a29)) - 12;
  uint64_t v213 = *(unsigned int *)(v64 - 128);
  int v214 = (char *)*(&off_100166A10 + (int)v213 - 1041) - 12;
  LODWORD(v105) = *(_DWORD *)&v214[4 * (BYTE1(v211) ^ 0x8A)] ^ *(_DWORD *)&v212[4 * (v95 ^ 7)];
  LODWORD(v88) = (v105 ^ 0x8461D265) + 1928830796 - 2 * ((v105 ^ 0x8461D265) & 0x72F79F5C ^ v105 & 0x10);
  LODWORD(v105) = *(_DWORD *)&v214[4 * (BYTE1(v75) ^ 0x61)];
  int v215 = *(_DWORD *)&v214[4 * ((unsigned __int16)(v95 ^ 0x6F07) >> 8)];
  LODWORD(v99) = *(_DWORD *)&v214[4 * (BYTE1(v97) ^ 0x56)];
  int v216 = (char *)*(&off_100166A10 + SHIDWORD(a28)) - 4;
  uint64_t v217 = *(unsigned int *)&v216[4 * (BYTE3(v95) ^ 0xEF)];
  int v218 = *(_DWORD *)&v216[4 * (BYTE3(v97) ^ 0x8E)];
  int v219 = *(_DWORD *)&v216[4 * (HIBYTE(v211) ^ 0xC3)];
  LODWORD(v91) = *(_DWORD *)&v216[4 * (BYTE3(v75) ^ 0xA9)];
  int v220 = (char *)*(&off_100166A10 + (int)a29) - 12;
  LODWORD(v216) = *(_DWORD *)&v220[4 * (BYTE2(v211) ^ 0x99)];
  int v221 = *(_DWORD *)&v220[4 * (BYTE2(v95) ^ 0x2A)];
  uint64_t v222 = *(unsigned int *)&v220[4 * (BYTE2(v97) ^ 0x70)];
  int v223 = *(_DWORD *)&v212[4 * (v75 ^ 0xBA)];
  int v224 = *(_DWORD *)&v220[4 * (BYTE2(v75) ^ 0xE8)] ^ ((v88 ^ v218) + 676411673 - ((2 * (v88 ^ v218)) & 0x50A27232));
  LODWORD(v88) = *(_DWORD *)&v212[4 * (v97 ^ 0x72)];
  int v225 = *(_DWORD *)&v212[4 * (v211 ^ 0x19)];
  unsigned int v226 = *(_DWORD *)(v64 - 148) ^ a55 ^ (v224 - ((2 * v224) & 0xDDB9BCFC) - 287515010);
  uint64_t v227 = (uint64_t)*(&off_100166A10 + (int)v213 - 915);
  *(unsigned char *)(*(void *)(v64 - 120) + v242) = *(unsigned char *)(v227 + (HIBYTE(v226) ^ 0xD7)) ^ 0x95;
  LODWORD(v216) = ((v215 ^ v216 ^ 0x56BC3A72)
                 + 1928830796
                 - 2 * ((v215 ^ v216 ^ 0x56BC3A72) & 0x72F79F4D ^ (v215 ^ v216) & 1)) ^ v91;
  LODWORD(v216) = (v216 - 91434738 - ((2 * v216) & 0xF519A21C)) ^ v88;
  LODWORD(v216) = *(_DWORD *)(v64 - 144) ^ HIDWORD(a55) ^ (v216 - ((2 * v216) & 0x8E187DC4) + 1191984866);
  uint64_t v228 = (char *)*(&off_100166A10 + (int)v213 - 990) - 8;
  *(unsigned char *)(*(void *)(v64 - 120) + *(void *)(v64 - 232)) = (v228[v216 ^ 0xC7] + 108) ^ 0x5F;
  uint64_t v229 = (uint64_t)*(&off_100166A10 + (int)a28);
  int v230 = *(unsigned __int8 *)(v229 + (BYTE1(v216) ^ 0x13));
  HIDWORD(v102) = v230 ^ 0x1C;
  LODWORD(v102) = (v230 ^ 0x40) << 24;
  *(unsigned char *)(*(void *)(v64 - 120) + v240) = (v102 >> 30) ^ 0x40;
  unsigned int v231 = ((v221 ^ v223 ^ 0xD2DDE817) + 1928830796 - 2 * ((v221 ^ v223 ^ 0xD2DDE817) & 0x72F79F6C ^ (v221 ^ v223) & 0x20)) ^ v219;
  int v232 = (v231 - ((2 * v231) & 0xFDDA06D6) + 2129462123) ^ v99;
  uint64_t v233 = *(_DWORD *)(v64 - 140) ^ HIDWORD(a56) ^ (v232 - ((2 * v232) & 0x2325A604u) - 1852648702);
  int v234 = *(unsigned __int8 *)(v229 + BYTE1(v233));
  HIDWORD(v102) = v234 ^ 0x1C;
  LODWORD(v102) = (v234 ^ 0x40) << 24;
  *(unsigned char *)(*(void *)(v64 - 120) + *(void *)(v64 - 224)) = (v102 >> 30) ^ 0x7E;
  uint64_t v235 = (char *)*(&off_100166A10 + (int)v213 - 999) - 4;
  *(unsigned char *)(*(void *)(v64 - 120) + v241) = v235[BYTE2(v226) ^ 0xFBLL] ^ 0xA1;
  LODWORD(v105) = ((v105 ^ 0xC1A9C27 ^ v217) + 676411673 - ((2 * (v105 ^ 0xC1A9C27 ^ v217)) & 0x50A27232)) ^ v222;
  LODWORD(v105) = v225 ^ (v105 - 91434738 - ((2 * v105) & 0xF519A21C));
  uint64_t v236 = *(void *)(v64 - 120);
  LODWORD(v105) = *(_DWORD *)(v64 - 136) ^ a56 ^ (v105 - ((2 * v105) & 0x36996D0) - 2118857880);
  *(unsigned char *)(v236 + *(void *)(v64 - 184)) = v235[BYTE2(v105) ^ 0xB8] ^ 0x72;
  *(unsigned char *)(v236 + *(void *)(v64 - 256)) = (v228[v226 ^ 0x1BLL] + 108) ^ 0x7D;
  *(unsigned char *)(v236 + *(void *)(v64 - 240)) = v235[BYTE2(v216) ^ 3] ^ 0xC;
  *(unsigned char *)(v236 + *(void *)(v64 - 192)) = *(unsigned char *)(v227 + ((v216 >> 24) ^ 0x6DLL)) ^ 0x6D;
  LODWORD(v216) = *(unsigned __int8 *)(v229 + (BYTE1(v226) ^ 0x92));
  HIDWORD(v102) = v216 ^ 0x1C;
  LODWORD(v102) = (v216 ^ 0x40) << 24;
  *(unsigned char *)(v236 + *(void *)(v64 - 168)) = (v102 >> 30) ^ 0xD2;
  uint64_t v237 = *(void *)(v64 - 216);
  *(unsigned char *)(v236 + v237) = *(unsigned char *)(v227 + (BYTE3(v233) ^ 0x53)) ^ 0x81;
  *(unsigned char *)(v236 + *(void *)(v64 - 200)) = (v228[v233 ^ 0x95] + 108) ^ 0xAF;
  *(unsigned char *)(v236 + *(void *)(v64 - 248)) = (v228[v105 ^ 0x64] + 108) ^ 0x27;
  *(unsigned char *)(v236 + *(void *)(v64 - 176)) = *(unsigned char *)(v227 + (BYTE3(v105) ^ 0x6ELL)) ^ 0x17;
  LODWORD(v216) = *(unsigned __int8 *)(v229 + (BYTE1(v105) ^ 0x1FLL));
  HIDWORD(v102) = v216 ^ 0x1C;
  LODWORD(v102) = (v216 ^ 0x40) << 24;
  *(unsigned char *)(v236 + *(void *)(v64 - 208)) = (v102 >> 30) ^ 0x58;
  *(unsigned char *)(v236 + *(void *)(v64 - 160)) = v235[BYTE2(v233) ^ 0xC8] ^ 0x23;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a60 + 8 * ((207 * (((v237 + 1249314692 - ((2 * v237 + 32) & 0x94EE0F08) + 16) ^ 0x4A770784) < HIDWORD(a32))) ^ ((int)v213 + 314))))(4203532558, v217, v229, v222, 149, v233, v213, 109, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_1000E5F60(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x774B811B42847B23) - 74804653;
  int v3 = *(_DWORD *)(*(void *)(a1 + 16) - 0x774B811B42847B23) - 74804653;
  int v4 = (v2 < -1506792118) ^ (v3 < -1506792118);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v6 = v2 < -1506792118;
  }
  else {
    BOOL v6 = v5;
  }
  int v1 = *(_DWORD *)a1 - 235795823 * ((a1 + 1658036232 - 2 * (a1 & 0x62D3A008)) ^ 0xF67EE951);
  return (*(uint64_t (**)(void))((char *)*(&off_100166A10 + v1 - 1195)
                              + 8 * ((v6 * (((v1 - 1347) | 0x283) ^ 0x2B6)) ^ v1)
                              - 4))();
}

uint64_t sub_1000E6038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v74 = 460628867 * ((((2 * (v73 - 200)) | 0x96B2B80A) - (v73 - 200) - 1264147461) ^ 0x7CFDE78);
  *(_DWORD *)(v73 - 168) = v74 ^ 0x43F274F1;
  *(void *)(v73 - 184) = 0x19D396D9A609BEA0;
  *(void *)(v73 - 176) = a70;
  *(_DWORD *)(v73 - 192) = (v71 - 812) ^ v74;
  *(void *)(v73 - 200) = a71;
  uint64_t v75 = (*(uint64_t (**)(uint64_t))(v72 + 8 * (v71 + 1016)))(v73 - 200);
  return (*(uint64_t (**)(uint64_t))(v72
                                            + 8
                                            * ((2004
                                              * (((v71 + 92) ^ (*(_DWORD *)(v73 - 164) == -1008821960)) & 1)) ^ v71)))(v75);
}

uint64_t sub_1000E6158()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((((v3 - 2121394109) & 0x7E71E63D ^ 0x41E)
                                              * ((v1 + v0 + 136315048) > 7)) ^ v3)))(v2);
}

uint64_t sub_1000E61B8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((75 * (v0 + v1 + 271450241 < ((((v3 + 356) ^ 0x191) - 1322) ^ 0x17Fu))) | (v3 + 356))))();
}

void sub_1000E6214()
{
  uint64_t v3 = *(void *)(v0 + 24);
  *(_DWORD *)(*(void *)(v0 + 8) - 0x7078B7EF70D8B5D3) = *v1;
  *(_DWORD *)(v3 - 0x1B326768DCF9E3AALL) = *v2;
  JUMPOUT(0x1000E6254);
}

uint64_t sub_1000E6290(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((((a8 - 267) | 0x80) - 1168) & a4) == 0) * ((17 * (a8 ^ 0x52A)) ^ 0x1FC)) ^ a8)))();
}

uint64_t sub_1000E6378(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 + 1178560073 * ((((2 * a1) | 0xF60BB838) - a1 - 2063981596) ^ 0x516DF1E7);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v4 = v2;
  unsigned int v5 = v1 + 235795823 * ((2 * (&v4 & 0x7C6E3488) - &v4 + 59886455) ^ 0x973C822E) - 426521334;
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_100166A10 + (v1 ^ 0x196C3911)) + 8 * (v1 ^ 0x196C319F)
                                                                                              - 4))(&v4);
}

void sub_1000E6484()
{
}

uint64_t sub_1000E6498(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * (v1 ^ (4
                                                            * (((v2 == 1723469489) ^ (v1 + 78)) & 1u)))))(a1, 3426637972);
}

uint64_t sub_1000E64E0()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1739)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((967 * (STACK[0x540] != 0)) ^ (v0 + 1254))))();
}

void sub_1000E651C(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_1000E6560()
{
  if (v0 == 567792458) {
    int v1 = -1008821960;
  }
  else {
    int v1 = 1008845536;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_1000E65C4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  return sub_1000C4598(a1, a3 ^ 0x5D3u, *(_DWORD *)(*v5 + 4 * (int)((a3 ^ 0xC26EE3B5) + a2)), v4, a4);
}

void sub_1000E65F4(uint64_t a1)
{
  int v1 = 1755732067 * (((a1 | 0x8AD08517) - (a1 & 0x8AD08517)) ^ 0x541638CC);
  int v2 = *(_DWORD *)(a1 + 16) ^ v1;
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1000E66B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_1000F793C(a1, a2, a3, a4, a5, a6);
}

void sub_1000E66C8(uint64_t a1)
{
  int v1 = (*(_DWORD *)(a1 + 12) ^ (1755732067 * (((a1 | 0x74CAABD) - a1 + (a1 & 0xF8B35542)) ^ 0xD98A1766))) - 913;
  int v2 = v1 + *(_DWORD *)(*(void *)a1 - 0x774B811B42847B23);
  int v4 = v2 - 715496334;
  BOOL v3 = v2 - 715496334 < 0;
  int v5 = 715496334 - v2;
  if (!v3) {
    int v5 = v4;
  }
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000E681C()
{
  return sub_1000E682C();
}

uint64_t sub_1000E682C(int8x16_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,unsigned int a35,unsigned int a36,unsigned int a37,int a38,int a39,int a40,unsigned __int8 a41)
{
  int v52 = a41 ^ 0xDB;
  if (v52 == 2)
  {
    int8x16x4_t v77 = vld4q_s8(v43);
    uint8x16_t v66 = (uint8x16_t)veorq_s8(v77.val[1], a1);
    _Q22 = vmovl_u8(*(uint8x8_t *)v66.i8);
    _Q21 = vmovl_high_u8(v66);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    int v71 = (_DWORD *)(v41 + 4 * (v50 + 2135732901));
    int v72 = *(v71 - 8) ^ *(v71 - 3);
    unsigned int v73 = v72 + v49 - ((2 * v72) & 0x87BD3270);
    int v74 = *(v71 - 16) ^ *(v71 - 14);
    HIDWORD(v75) = v74 ^ 0x43DE9938 ^ v73;
    LODWORD(v75) = v74 ^ ~v73;
    *int v71 = (v75 >> 31) + v49 - ((2 * (v75 >> 31)) & 0x87BD3270);
    return (*(uint64_t (**)(void, void))(v47 + 8 * ((1019 * (v51 != 2135732838)) ^ (3 * HIDWORD(a14)))))(a36, a35);
  }
  else if (v52 == 1)
  {
    int8x16x4_t v76 = vld4q_s8(v43);
    int v53 = a5 + a7 - 180;
    uint8x16_t v54 = (uint8x16_t)veorq_s8(v76.val[2], a1);
    _Q26 = vmovl_high_u8(v54);
    _Q25 = vmovl_u8(*(uint8x8_t *)v54.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    int v61 = (a35 ^ v46)
        + v48
        + ((a37 ^ v46) & (a36 ^ v46) | (a38 ^ v46) & (a36 ^ 0x4921C29F))
        + *((_DWORD *)*(&off_100166A10 + (v53 ^ 0x3C9)) + a22 + v50 - 2)
        + (*(_DWORD *)(v41 + 4 * (*((unsigned char *)*(&off_100166A10 + (v53 ^ v44)) + a22 + v50 - 4) - 79)) ^ (v49 + ((v53 - 1109734355) & 0x422536F9) - 1721));
    int v62 = (char *)*(&off_100166A10 + v53 - 896) - 8;
    unsigned int v63 = (v61 + v46 - (v45 & (2 * v61))) ^ v46;
    int v64 = ((v63 << (v62[a22 + v50] - 23)) | (v63 >> (23 - v62[a22 + v50]))) + (a36 ^ v46);
    return (*(uint64_t (**)(void))(v47 + 8 * ((1235 * (a22 + 1 == v51)) ^ v53)))(v64 + v46 - (v45 & (2 * v64)));
  }
  else
  {
    LODWORD(a18) = a41 ^ 0xFFFFFFDB;
    return (*(uint64_t (**)(void, void, uint64_t, uint64_t, void, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * v42))(a36, a35, a4, a5, *(void *)(v47 + 8 * v42), a7, a37, a35, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27);
  }
}

void sub_1000E6C94()
{
}

uint64_t sub_1000E6D84(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((v5 | v7) == ((v4 + 1879800554 + a4) | 3) - 387)
                                * ((v4 + 1879800554) & (a4 + 1413) ^ 0x7B0)) ^ v4)))();
}

uint64_t sub_1000E6DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,unsigned int a31)
{
  int v34 = 535753261 * ((v33 - 168) ^ 0xAF40E2F);
  *(void *)(v33 - 168) = a18;
  *(_DWORD *)(v33 - 160) = a14 - v34;
  *(_DWORD *)(v33 - 156) = (v32 + 49) ^ v34;
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(v31 + 8 * (v32 ^ 0x7C1)))(v33 - 168);
  uint64_t v36 = STACK[0x294] & (((v32 - 1838829973) & 0x6D9A5172) + 47);
  *((unsigned char *)&STACK[0x250] + (v36 ^ 0x1E)) = -44;
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v31
                                                             + 8
                                                             * ((1232 * ((v36 ^ 0x1E) > 0x37)) ^ v32)))(v35, a31, 3102594147);
}

uint64_t sub_1000E6EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  BOOL v12 = ((364 * (v10 ^ 0x693)) ^ 0xB5FC8E33) + (a10 ^ 0x4BE37EFB) - 31459968 + ((2 * a10) & 0x97C6FDF6) > 0x7FFFFFFD;
  return (*(uint64_t (**)(void))(v11 + 8 * ((v12 | (8 * v12)) ^ v10)))();
}

uint64_t sub_1000E6F30(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 88) = 10;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1000E6F50()
{
  return sub_1000E6F58();
}

uint64_t sub_1000E6F58@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q3>)
{
  int8x16_t v11 = *(int8x16_t *)(v8 + (v5 + v10 + v6));
  *(int8x16_t *)(v7 + v6) = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), a5)), a4);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v6 != 48) * a1) ^ (a2 + a3 - 949))))();
}

void sub_1000E6FA0()
{
}

uint64_t sub_1000E6FB8@<X0>(void *a1@<X5>, int a2@<W6>, unsigned int a3@<W7>, char a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  int v62 = &a55 + (v58 - 266593738);
  unsigned int v63 = ((*(_DWORD *)(*a1 + (*v57 & 0x5F9FF2C4)) ^ v62) & 0x7FFFFFFF)
      * (((v55 ^ 0x8A) + 652) ^ (a2 - 1024));
  unint64_t v64 = (v63 ^ HIWORD(v63)) * a2;
  char v65 = *(unsigned char *)(*(void *)(v60 + 8 * (v55 ^ 0x194)) + (v64 >> 24) - 12) ^ ((v56 ^ a3) >> a4) ^ *(unsigned char *)(*(void *)(v60 + 8 * (v55 ^ 0x148)) + (v64 >> 24) - 12) ^ *(unsigned char *)((v64 >> 24) + *(void *)(v60 + 8 * (v55 ^ 0x15E)) + 4) ^ v64 ^ (-71 * BYTE3(v64));
  *int v62 = v65;
  return (*(uint64_t (**)(void))(v59 + 8 * ((937 * (v58 - (v65 != 0) == v61)) ^ v55)))();
}

uint64_t sub_1000E70A0()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 + 661)))(32, 0x101004023FF3BD5) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((39 * ((v2 ^ (v1 ^ (v1 - 1))) & 1)) ^ v1)))();
}

uint64_t sub_1000E70F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v21 = 535753261 * ((v20 - 152) ^ 0xAF40E2F);
  *(_DWORD *)(v20 - 144) = a18 - v21 - 822908109;
  *(_DWORD *)(v20 - 140) = (v19 + 69) ^ v21;
  *(void *)(v20 - 152) = a15;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v19 + 2005)))(v20 - 152);
  uint64_t v23 = *(_DWORD *)(v20 - 184) & 0x3F;
  *(unsigned char *)(v20 - 252 + (v23 ^ 0x1E)) = -44;
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((747
                                              * ((v23 ^ 0x1E) > ((v19 + 2074436319) & 0x845A9FF2 ^ 0x2C7))) ^ v19)))(v22);
}

void sub_1000E7204()
{
}

uint64_t sub_1000E7210()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 661) ^ 0x6FC ^ ((v2 - 110) | 0x89)) * (v0 == v1)) ^ v2)))();
}

void sub_1000E7248()
{
}

uint64_t sub_1000E7254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  *int v4 = v4[623];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * (((((a3 ^ 0x2C2) + 161) ^ 0xE3) * (v3 != 139135102)) ^ a3 ^ 0x4C)))(a1, a2, 1923539499);
}

#error "1000E7355: call analysis failed (funcsize=31)"

uint64_t sub_1000E7358()
{
  STACK[0x5B0] = ((4 * v0) ^ 0x1828) + v2;
  STACK[0x500] = v1;
  if (v1) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((13 * v6) ^ v0)))();
}

void sub_1000E7398()
{
}

uint64_t sub_1000E73A0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 - 1755777583) < 2) ^ (((v0 + 68) ^ 0xBD) + 1)) & 1)
                                * (((v0 + 1092) ^ 0x5BD) - 75)) ^ (v0 + 1092))))();
}

uint64_t sub_1000E73E8(uint64_t a1)
{
  return sub_1000C0570(194, 641, 5952, 1392946532, 1276818832, 1, **(_DWORD **)(*(void *)(a1 + 8) - 0x774B811B42847B1FLL));
}

uint64_t sub_1000E7554(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0xFAD53BDE)
                       + 1308290796
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0x1BC);
  return 0;
}

uint64_t sub_1000E758C@<X0>(int a1@<W8>)
{
  uint64_t v4 = v1;
  unint64_t v5 = v1 + v2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 + 864) ^ 0x5C7) * (v5 - v4 + 1620045302 < 8)) ^ a1)))();
}

uint64_t sub_1000E75E4()
{
  BOOL v4 = v1[2] == 0x78DB05D78770D305 || (v1[8] | v1[6]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * ((34 * (v0 ^ 0x330) - 48) ^ ((v0 - 428) | 0x25))) ^ v0)))();
}

void sub_1000E7650()
{
}

uint64_t sub_1000E765C()
{
  return sub_1000E7698();
}

void sub_1000E7698(int a1@<W8>, uint64_t a2, int a3, int a4)
{
  uint64_t v8 = *(void *)(v6 - 0x65EF48AAD10F5714);
  int v9 = a1 + *v5;
  *(unsigned char *)(v8 + (v9 + 476)) = (HIBYTE(v4) ^ 0xB2) - ((2 * (HIBYTE(v4) ^ 0xB2)) & 0xA8) + 84;
  *(unsigned char *)(v8 + (v9 + 477)) = (BYTE2(v4) ^ 0x43) + (~(2 * (BYTE2(v4) ^ 0x43)) | 0x57) + 85;
  *(unsigned char *)(v8 + (v9 + 478)) = (BYTE1(v4) ^ 0xAE) - ((2 * (BYTE1(v4) ^ 0xAE)) & 0xA8) + 84;
  *(unsigned char *)(v8 + (v9 + 479)) = v4 ^ 0x40;
  uint64_t v10 = *(void *)(v6 - 0x65EF48AAD10F5714);
  unsigned int v11 = v7 - ((2 * v7 - 1898218678) & 0xA0FAA472) - 1746202658;
  unsigned int v12 = ((2 * (a1 + *v5 + 480)) & 0xA79DBBEE) + ((a1 + *v5 + 480) ^ 0xD3CEDDF7) + 741417481;
  *(unsigned char *)(v10 + v12) = (HIBYTE(v11) ^ 0xD0) - 2 * ((HIBYTE(v11) ^ 0xD0) & 0x57 ^ HIBYTE(v11) & 3) + 84;
  *(unsigned char *)(v10 + v12 + 1) = (BYTE2(v11) ^ 0x7D) + (~(2 * (BYTE2(v11) ^ 0x7D)) | 0x57) + 85;
  *(unsigned char *)(v10 + v12 + 2) = (BYTE1(v11) ^ 0x52) - ((2 * (BYTE1(v11) ^ 0x52)) & 0xA8) + 84;
  *(unsigned char *)(v10 + v12 + 3) = (v7 - ((2 * v7 + 74) & 0x72) - 34) ^ 0x6D;
  *unint64_t v5 = a4;
  sub_1000DD8B0();
}

uint64_t sub_1000E7804(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((937 * (a3 + a7 + 605 + ((a7 - 432179691) & 0x19C2890Bu) + v7 - 1360 > 0xFFFFFFEF)) ^ a7)))();
}

uint64_t sub_1000E7854@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  int v6 = 37 * (v5 ^ 0x550);
  int v7 = v2 + v3;
  int v8 = v3 + 1;
  *(_DWORD *)(*(void *)(v4 - 0x774B811B42847B1FLL) + 4 * (v7 + v6 - 148)) = a1;
  int v9 = v6 + 15;
  *(_DWORD *)(v4 - 0x774B811B42847B23) = v8;
  int v10 = v8 + v2;
  if (v8 + v2 < 0) {
    int v10 = -v10;
  }
  int v11 = (int)((v9 ^ v10 ^ 0x7FBDFB54) + ((2 * v10) & 0xFF7BF7EE) - 2143157240) > (int)(((37 * (v9 ^ 0xA7) - 148) | 0x285) ^ 0xFFFFFD7A);
  return (*(uint64_t (**)(void))(a2 + 8 * (((16 * v11) | (v11 << 9)) ^ v9)))();
}

uint64_t sub_1000E794C()
{
  int v5 = v3 + 66 + *(unsigned __int8 *)(v2 + 4) - 484;
  return (*(uint64_t (**)(void))(v4 + 8 * ((628 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1000E7994(uint64_t a1, uint64_t a2)
{
  if (**(unsigned char **)(a2 + 8)) {
    char v2 = 125;
  }
  else {
    char v2 = 123;
  }
  *(unsigned char *)(a1 + 88) = ((**(unsigned char **)(a2 + 8) != 0) ^ 0x8F) + v2;
  return 0;
}

uint64_t sub_1000E79C8()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1066
                                * ((v1 & (2 * (*(unsigned __int8 *)(v4 + 6) - 1)))
                                 + (((v2 - 483) | 0x18) ^ v3 ^ (*(unsigned __int8 *)(v4 + 6) - 1)) == v0)) | v2)))();
}

uint64_t sub_1000E7A08()
{
  return v0();
}

uint64_t sub_1000E7A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((865 * (v8 + 1 == v9 + 16)) ^ a6)))(a7);
}

uint64_t sub_1000E7AF4()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((319
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v0) == ((v2 + 450) ^ (v0 - 677)))) ^ v2)))();
}

uint64_t sub_1000E7B34()
{
  int v6 = *(unsigned __int8 *)(v3 + v2 - 0x2A578490888F5BAALL) - *(unsigned __int8 *)(v0 + v2 - 0x2A578490888F5BAALL);
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((243
                                              * (((2 * v6) & 0xEFF7E7FE)
                                               + (v6 ^ (((v1 + 1166) ^ (v5 - 1280)) - 1473383352)) != -134482945)) ^ v1)))(4294925278);
}

uint64_t sub_1000E7BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1000C9DBC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

uint64_t sub_1000E7BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, char a13, int a14, uint64_t a15, int a16)
{
  char v23 = *(unsigned char *)(v16 + 24) - v22;
  unsigned int v24 = 1759421093 * ((2 * (&a11 & 0x407A5998) - &a11 + 1065723495) ^ 0x8CF81633);
  a14 = v21 + v24 - 380902958;
  a16 = v19 - v24 + 1222;
  a15 = v20;
  a13 = (((67 * v23 - 87) ^ 0x7E) + (((101 * (v19 ^ 0xE9)) ^ 0x36) & (2 * (67 * v23 - 87))) - 70) ^ (-91 * ((2 * (&a11 & 0x98) - &a11 + 103) ^ 0x33));
  a12 = &STACK[0x5287AD6752155C05];
  uint64_t v25 = (*(uint64_t (**)(int *))(v18 + 8 * (v19 + 1595)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1623 * (a11 == v17)) ^ v19)))(v25);
}

uint64_t sub_1000E7CB0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((251 * (v1 != 1576401730)) ^ 0x15Eu)))();
}

uint64_t sub_1000E7CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6 = STACK[0x278];
  *(void *)(v6 + 1560) = *(void *)STACK[0x4D0];
  *(_DWORD *)(v6 + 1552) = *(_DWORD *)STACK[0x4F8];
  unint64_t v7 = STACK[0x200];
  *(void *)(*(void *)(STACK[0x200] + 96) + 488) = *(void *)(STACK[0x200] + 8);
  *(_DWORD *)(*(void *)(v7 + 96) + 480) = *(_DWORD *)((char *)&STACK[0x670] + STACK[0x208]);
  return sub_1000E7D74(84, 213789419, 4286406272, a4, a5, a6, 72, 4277845676);
}

uint64_t sub_1000E7D74@<X0>(uint64_t a1@<X8>)
{
  *uint64_t v2 = ((v3 + a1 + (((v1 + 17) | v7) ^ v5)) ^ v6) * (v4 + a1);
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 == 103) * v8) ^ v1)))();
}

uint64_t sub_1000E7DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v28 = 460628867 * ((2128270646 - ((v27 - 144) | 0x7EDAD536) + ((v27 - 144) | 0x81252AC9)) ^ 0xCDB3A8B4);
  *(_DWORD *)(v27 - 128) = v28 + v26 - 407;
  *(_DWORD *)(v27 - 144) = v28;
  *(void *)(v27 - 136) = a23;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v26 ^ 0x504)))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(a25
                                            + 8
                                            * (((v26 + 30) ^ (*(_DWORD *)(v27 - 140) == -1022760981)) & 1 | (32 * (((v26 + 30) ^ (*(_DWORD *)(v27 - 140) == -1022760981)) & 1)) | (v26 + 1189))))(v29);
}

uint64_t sub_1000E7EC8@<X0>(uint64_t a1@<X8>)
{
  int v4 = 241 * (((v1 - 645) | 0xC1) ^ 0x2E0);
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(unsigned __int8 *)(a1 + 236 + (v4 - 464) - 741) == *(unsigned __int8 *)(v2 + 32 + (v4 - 464) - 741))
                                * ((v4 - 183) ^ 0x3A2)) ^ v4)))();
}

uint64_t sub_1000E7F64()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 == v2 - 19) * (v2 - 51)) ^ (v2 + 1658))))();
}

uint64_t sub_1000E7F98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = *(void *)(v3 - 0x65EF48AAD10F5714);
  int v6 = *(unsigned __int8 *)(v5 + (v2 - 740814131)) ^ 0x54;
  int v7 = ((*(unsigned __int8 *)(v5 + (v2 - 740814133)) ^ 0x54) << ((v4 + 29) ^ 0x6A)) | ((*(unsigned __int8 *)(v5 + (v2 - 740814134)) ^ 0x54) << 24) | ((*(unsigned __int8 *)(v5 + (v2 - 740814132)) ^ 0x54) << 8) | v6;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (v4 ^ (32
                                     * (((v1 + v7 - 2 * (v7 & 0x43DE993E ^ v6 & 6) + 0x1000000) & 0xFFFFFF) == 2457696)))))();
}

uint64_t sub_1000E8048(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(*(void *)(v8 - 0x774B811B42847B1FLL) + 4 * (v6 + v4)) = a4;
  return (*(uint64_t (**)(void))(v7 + 8 * ((95 * (v6 + v4 - 1 > (int)((v5 - 592) ^ 0xFFFFFC19))) ^ v5)))();
}

uint64_t sub_1000E8098(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_100162850 + ((23 * (*(_DWORD *)(a2 + 4) == 1576401743)) ^ 0x742u)))(4294925278);
}

uint64_t sub_1000E80DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v14 - 112) = v12 + 1374699841 * ((v14 - 1665098550 - 2 * ((v14 - 128) & 0x9CC09D4A)) ^ 0xF1348543) + 1045;
  *(void *)(v14 - 128) = &STACK[0x774B811B42847B57];
  *(void *)(v14 - 120) = a12;
  (*(void (**)(uint64_t))(v13 + 8 * (v12 + 1323)))(v14 - 128);
  *(_DWORD *)(v14 - 128) = v12 + 235795823 * ((v14 - 128) ^ 0x94AD4959) + 692;
  *(void *)(v14 - 120) = a11;
  *(void *)(v14 - 112) = a12;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v12 + 1356)))(v14 - 128);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * (((*(_DWORD *)(v14 - 124) > (v12 ^ 0x5543FB82u)) * (v12 - 599)) ^ v12)))(v15);
}

void sub_1000E81E0()
{
}

uint64_t sub_1000E81EC(uint64_t a1)
{
  int v2 = 1374699841 * ((-2 - ((a1 | 0x52E86AE9) + (~a1 | 0xAD179516))) ^ 0xC0E38D1F);
  int v3 = *(_DWORD *)(a1 + 24) ^ v2;
  int v4 = *(_DWORD *)a1 - v2;
  int v5 = *(_DWORD *)(a1 + 8) ^ v2;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 32);
  unsigned int v8 = 3804331
     * (((&v10 | 0xB301206E) - &v10 + (&v10 & 0x4CFEDF90)) ^ 0x499FD338);
  int v10 = v3 - v8 + 2024873364;
  uint64_t v11 = v6;
  unsigned int v12 = v5 + v8 - 1896766924;
  unsigned int v13 = v4 - ((2 * v4 - 1555437698) & 0x91D45E1C) + v8 - 1701895475;
  uint64_t v14 = v7;
  uint64_t result = (*(uint64_t (**)(int *))((char *)*(&off_100166A10 + (int)(v3 ^ 0x874EE31D))
                                            + 8 * (int)(v3 ^ 0x874EEB98)
                                            - 4))(&v10);
  *(_DWORD *)(a1 + 4) = v15;
  return result;
}

uint64_t sub_1000E8370(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((120
                                * ((v4 ^ a2) + 1598344747 + *(_DWORD *)(v2 + 48 * v3 + 36) < 7 * (v4 ^ 0x8Cu)
                                                                                             + 2147483266)) ^ v4)))();
}

void sub_1000E83DC(uint64_t a1)
{
  int v1 = 3804331 * (((a1 ^ 0x9A32C815 | 0x394EC663) - ((a1 ^ 0x9A32C815) & 0x394EC663)) ^ 0x59E2FD20);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000E8484(int a1, int a2, int a3)
{
  uint64_t v16 = v3;
  HIDWORD(v17) = a2 ^ v15;
  LODWORD(v17) = a2 ^ v10;
  int v18 = (v17 >> 27)
      + (v6 ^ v9)
      + ((v16 ^ v9 | a1 ^ v9) & (v5 ^ v9) | (v16 ^ v9) & (a1 ^ v9))
      + (*(_DWORD *)(v4 + 4 * (v13 + v7 + ((a3 + 665318668) & 0xD8580FF3)) - 7236) ^ v12);
  return (*(uint64_t (**)(uint64_t, void))(v11
                                                    + 8
                                                    * ((((v7 + 1 == v14 + 44) << 8) | ((v7 + 1 == v14 + 44) << 10)) ^ a3)))(v16, v18 - ((2 * v18 + 506952120) & v8) + 1174010428);
}

uint64_t sub_1000E855C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((((15 * (((a2 ^ 0x26F) - 467) ^ 0x11C)) ^ 0xFFFFFE72)
                                                    + 157 * (((a2 ^ 0x26F) - 467) ^ 0x117))
                                                   * ((a2 ^ 0x26F) - 467 + v3 != 301)) ^ ((a2 ^ 0x26F) - 467))))(a1);
}

uint64_t sub_1000E85BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((1684 * ((a8 + 1 + v9) < 0x30)) ^ v8)))();
}

uint64_t sub_1000E8690(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = *(unsigned __int8 *)(a2 + 4) + (v3 ^ 0xFFFFFFCB);
  return (*(uint64_t (**)(void))(v2 + 8 * ((315 * ((v5 & (2 * v6)) + (v6 ^ v4) == v4)) ^ v3)))();
}

uint64_t sub_1000E86D0(uint64_t a1, int a2)
{
  *(void *)(v6 + v3) = *(void *)(v5 + v3);
  return (*(uint64_t (**)(uint64_t, void))(v7 + 8 * (((a2 == 0) * v2) ^ v4)))(a1, (a2 + 8));
}

uint64_t sub_1000E8700@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((216 * (v2 + a1 + ((v1 + 36) ^ 0x75Au) - 590 >= 0x7FFFFF7D)) ^ v1)))();
}

uint64_t sub_1000E8748()
{
  int v5 = 628203409 * ((2 * ((v4 - 120) & 0x2F1715A8) - (v4 - 120) + 1357441622) ^ 0xD260E665);
  *(_DWORD *)(v4 - 104) = v5 + v0 + 68;
  *(_DWORD *)(v4 - 120) = (v0 ^ 0x25F) - v5 + v2 - 529240957;
  *(void *)(v4 - 112) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x522)))(v4 - 120);
  return sub_1000E87D0(v6);
}

uint64_t sub_1000E87D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(_DWORD *)(v27 - 120) = v24 + (((~(v27 - 120) & 0x441D2BEE) - (~(v27 - 120) | 0x441D2BEF)) ^ 0xD0B062B6) * v25 + 1210;
  *(void *)(v27 - 112) = a21;
  *(void *)(v27 - 104) = a23;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 ^ 0x752)))(v27 - 120);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((*(_DWORD *)(v27 - 116) > ((2 * v24) ^ 0x2DAu) + v26)
                                              * ((v24 ^ 0x242) - 644)) ^ v24)))(v28);
}

uint64_t sub_1000E8868(uint64_t a1, uint64_t a2)
{
  int v5 = *(uint64_t (**)(void, uint64_t))(v4 + 8
                                                      * (v3 ^ (432 * ((v2 - 92636163) > 0x7FFFFFFE))));
  return v5(v5, a2);
}

uint64_t sub_1000E88E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v6 ^ 0x157) + v6 - 480 - 1988) * (v5 == a5)) ^ v6)))();
}

void sub_1000E8914()
{
}

uint64_t sub_1000E8A18(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  if (a16 == 2) {
    return (*(uint64_t (**)(void))(v16
  }
                                + 8 * (((((v17 + a2) ^ (*(_DWORD *)(v18 - 128) == 891668432)) & 1) == 0) + v17 + a2)))();
  if (a16 != 1) {
    JUMPOUT(0x1000E8B88);
  }
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((1174 * ((((3 * (v17 ^ (v17 - 198))) ^ (*(_DWORD *)(v18 - 128) == 891668432)) & 1) == 0)) ^ (v17 + a2))))();
}

uint64_t sub_1000E8BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,unsigned int a47)
{
  BOOL v50 = ((v49 + a47 - 569 - 281) ^ v47) < 0x201;
  return (*(uint64_t (**)(void))(v48 + 8 * ((v50 | (4 * v50)) ^ a47)))();
}

uint64_t sub_1000E8BF4(unsigned int a1)
{
  *(_DWORD *)(*v2 + 4 * (v5 + v6)) = v1;
  return (*(uint64_t (**)(void))(v7 + 8 * (v4 | (4 * (v3 + v6 + 1549 < a1)))))();
}

uint64_t sub_1000E8C24@<X0>(int a1@<W1>, unsigned int a2@<W6>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1016
                                * (((((v3 + v4 + a1) | a2) + 202) ^ (v3 + v4) & (a1 + 274)) + a3 != 20)) ^ v3)))();
}

uint64_t sub_1000E8C64(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1000E8C7C()
{
  return sub_1000E8CB0();
}

uint64_t sub_1000E8CB0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((88
                                              * (((2 * LODWORD(STACK[0x294])) & 0x6E ^ 0x2C)
                                               + (STACK[0x294] & 0x3F ^ 0x7BEF73E9u)
                                               - 2079290419 > 0xFFFFFFBF)) ^ (a2 + 158))))(3620908045);
}

uint64_t sub_1000E8DF4(int *a1)
{
  unsigned int v2 = a1[1]
     + 1734042137 * ((-1929048420 - (a1 | 0x8D050E9C) + (a1 | 0x72FAF163)) ^ 0x2E34322E);
  uint64_t result = (*(uint64_t (**)(char *, void (*)()))((char *)*(&off_100166A10 + (int)(v2 + 504207182))
                                                         + 8 * (int)(v2 + 504209004)
                                                         - 4))((char *)*(&off_100166A10 + (int)(v2 ^ 0xE1F26918)) - 4, sub_1000CD76C);
  int v4 = *(_DWORD *)*(&off_100166A10 + (int)(v2 ^ 0xE1F2696B));
  if (result) {
    int v4 = 1008845702;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1000E8ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((953 * ((((v9 + 1082917786) | 0x36125906) ^ 0xB540C4E6) == -1008821960)) ^ (v9 + 33))))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1000E8F3C(uint64_t a1, uint64_t a2)
{
  int v3 = (unint64_t *)*(&off_100166A10
                           + ((107 * ((qword_100180398 - dword_1001803A8) ^ 0x58)) ^ byte_100123BA0[byte_100120850[(107 * ((qword_100180398 - dword_1001803A8) ^ 0x58))] ^ 0x4B])
                           - 25);
  int v4 = *(&off_100166A10
       + (byte_100123BA4[(byte_100120850[(107 * (*v3 ^ qword_100180398 ^ 0x58))] ^ 0x4B)
                                                      - 4] ^ (107 * (*v3 ^ qword_100180398 ^ 0x58)))
       + 7);
  unint64_t v5 = (unint64_t)&v7[*v3 + *v4];
  *int v3 = (139864171 * v5) ^ 0x945BD3199FE9FF58;
  *int v4 = 139864171 * (v5 ^ 0x945BD3199FE9FF58);
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  LODWORD(v5) = 460628867 * ((2 * (&v9 & 0x1D697128) - &v9 + 1654034134) ^ 0x2E000CAB);
  int v10 = -1882357464 - v5;
  int v11 = v5 + 1678855235;
  int v9 = &STACK[0x7C014C707EC208A4];
  LODWORD(v4) = 139864171 * (*(_DWORD *)v3 ^ 0x9FE9FF58 ^ *(_DWORD *)v4);
  int v6 = (char *)*(&off_100166A10
               + ((107 * ((qword_100180398 + dword_1001803A8) ^ 0x58)) ^ byte_100119F30[byte_100123DA0[(107 * ((qword_100180398 + dword_1001803A8) ^ 0x58))] ^ 0x39])
               + 129)
     - 4;
  (*(void (**)(unint64_t **))&v6[8
                                                 * (byte_100119F30[byte_100123DA8[v4
                                                                                                 - 8] ^ 0x39] ^ v4)
                                                 + 16264])(&v9);
  __asm { BRAA            X10, X17 }
}

void sub_1000E9238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,char a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,char a44,char a45,char a46,char a47,char a48,char a49,char a50,char a51,char a52,char a53,char a54,char a55,char a56,char a57,char a58,char a59,char a60)
{
  int v67 = v65 ^ 0x31;
  int v68 = *(unsigned int **)(v64 + 8 * ((v65 ^ 0x31) - 1055));
  uint64_t v69 = *(void **)(v64 + 8 * (v67 - 1037));
  uint64_t v70 = *v68;
  int v71 = (unsigned char *)*v69;
  a11 = *(unsigned char *)*v69 - 13;
  a12 = v71[1] - 13;
  a13 = v71[2] - 13;
  a14 = v71[3] - 13;
  a15 = v71[4] - 13;
  a16 = v71[5] - 13;
  a17 = v71[6] - 13;
  a18 = v71[7] - 13;
  a19 = v71[8] - 13;
  a20 = v71[9] - 13;
  a21 = v71[10] - 13;
  a22 = v71[11] - 13;
  a23 = v71[12] - 13;
  a24 = v71[13] - 13;
  a25 = v71[14] - 13;
  a26 = v71[15] - 13;
  a27 = v71[16] - 13;
  a28 = v71[17] - 13;
  a29 = v71[18] - 13;
  a30 = v71[19] - 13;
  a31 = v71[20] - 13;
  a32 = v71[21] - 13;
  int v72 = (unsigned char *)*v69;
  a33 = v72[22] - 13;
  a34 = v72[23] - 13;
  a35 = v72[24] - 13;
  a36 = v72[25] - 13;
  a37 = v72[26] - 13;
  a38 = v72[27] - 13;
  a39 = v72[28] - 13;
  a40 = v72[29] - 13;
  uint64_t v73 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v62 + 8 * (v67 + 961)))(v70, &a11, v60);
  int v80 = ((2 * v73) & 0xC4F7B5FA) + (v73 ^ 0xE27BDAFD);
  if (v80 == -495199491)
  {
    *(_DWORD *)(v66 + 344) |= (v63 + 1302049690) & 0xB2644CA5 ^ 0x48B;
    *(_DWORD *)(v66 + 44) = 1452181747;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * (v63 + 929)))(*v60, v66 + 332, v66 + 336, v66 + 340, v61);
    sub_1000E6214();
  }
  else
  {
    if (v80 == -495198389)
    {
      uint64_t v81 = *v68;
      uint64_t v82 = *(unsigned char **)(*(void *)(v64 + 8 * (v63 - 1035)) - 4);
      a41 = *v82 - 84;
      a42 = v82[1] - 84;
      a43 = v82[2] - 84;
      a44 = v82[3] - 84;
      a45 = v82[4] - 84;
      a46 = v82[5] - 84;
      a47 = v82[6] - 84;
      a48 = v82[7] - 84;
      a49 = v82[8] - 84;
      a50 = v82[9] - 84;
      a51 = v82[10] - 84;
      a52 = v82[11] - 84;
      a53 = v82[12] - 84;
      a54 = v82[13] - 84;
      a55 = v82[14] - 84;
      a56 = v82[15] - 84;
      a57 = v82[16] - 84;
      a58 = v82[17] - 84;
      a59 = v82[18] - 84;
      a60 = v82[19] - 84;
      uint64_t v73 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v62 + 8 * (v63 ^ 0xC43)))(v81, &a41, v60);
      int v83 = (2 * v73) & 0xCFB7E7F6;
      int v80 = (v73 ^ 0x67DBF3FB) - 92348674;
    }
    else
    {
      int v83 = 2145318908;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62
                                                                                          + 8
                                                                                          * ((241
                                                                                            * (v80 + v83 != (v63 ^ 0xC0) + 1650118264)) ^ (v63 + 47))))(v73, v74, v75, v76, v77, v78, v79);
  }
}

void sub_1000E95F8()
{
}

uint64_t sub_1000E963C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v35 = (_DWORD *)(a25 + 24 * v29);
  *uint64_t v35 = v31;
  v35[1] = v30;
  *(void *)(v34 + 24 * v29 + 16) = a1;
  v35[4] = HIDWORD(a27);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * ((1575 * (*(_DWORD *)(a7 + 48 * v32 + 32) + 636391117 < (((v28 - 124) | 0x8B) ^ 0x800000B8))) ^ ((v28 - 124) | 0x8B))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1000E96D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55)
{
  int v60 = STACK[0x2D4];
  if (LODWORD(STACK[0x2D4]) == 1338815778) {
    return (*(uint64_t (**)(void))(v58
  }
                                + 8
                                * ((99 * (LODWORD(STACK[0x2D0]) - 1017215967 < ((v57 - 191) ^ 0x59u))) ^ (v57 + 1316))))();
  if (v60 == 1070380319)
  {
    (*(void (**)(void, unint64_t, void))(v58 + 8 * (v57 + 1779)))(*(unsigned int *)STACK[0x2D8], STACK[0x368], ((v57 - 318898798) & 0x1302057F ^ 0xAEA8E4A7) + LODWORD(STACK[0x2F4]));
    STACK[0x2B0] = v56;
    int v64 = *(_DWORD *)(v56 + 52);
    int v65 = LODWORD(STACK[0x4BC]) ^ 0x3E7D7FD4;
    int v66 = (2 * LODWORD(STACK[0x4BC])) & 0x7CFAFFA8;
    int v67 = 535753261 * (((v59 - 200) & 0xC02AAE1F | ~((v59 - 200) | 0xC02AAE1F)) ^ 0x35215FCF);
    *(void *)(v59 - 160) = STACK[0x510];
    *(_DWORD *)(v59 - 172) = (v57 - 218) ^ v67;
    *(_DWORD *)(v59 - 168) = v65 - v67 + v66 - 335631104;
    *(_DWORD *)(v59 - 152) = ((a55 & 0x7FFFFFFF ^ 0x2595C051) + 2077777893 + (a54 & 0xDAFFDEBE ^ 0x90D45E1C)) ^ v67;
    *(_DWORD *)(v59 - 176) = v67 + 1468808874 + v64;
    *(void *)(v59 - 184) = &STACK[0x650];
    *(void *)(v59 - 200) = v55;
    uint64_t v68 = (*(uint64_t (**)(uint64_t))(v58 + 8 * (v57 ^ 0x905)))(v59 - 200);
    int v69 = *(_DWORD *)(v59 - 192);
    LODWORD(STACK[0x520]) = v69;
    return (*(uint64_t (**)(uint64_t))(v58 + 8 * ((1666 * (v69 == -1008821960)) ^ (v57 + 172))))(v68);
  }
  else
  {
    int v61 = STACK[0x24C] & 0x3BF1B17F;
    int v62 = 1224239923 * ((v59 + 1014388800 - 2 * ((v59 - 200) & 0x3C765908)) ^ 0xCEC5A4DF);
    LODWORD(STACK[0x2D4]) = v60;
    *(_DWORD *)(v59 - 200) = v60 - v62 - ((v61 ^ 0x87BD322A) & (2 * v60 - 2140760638)) - 2079202279;
    *(_DWORD *)(v59 - 184) = v62 + v57 + 1225;
    *(void *)(v59 - 192) = STACK[0x250];
    (*(void (**)(uint64_t))(v58 + 8 * SLODWORD(STACK[0x248])))(v59 - 200);
    return sub_1000F8F4C();
  }
}

uint64_t sub_1000E99A8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((196 * ((a6 + 1 + v6) < 0x10)) ^ (a1 + 1585))))();
}

uint64_t sub_1000E9AB4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((((v5 + 1072368704) & 0xC014F7FF ^ 0x5F6) * (a1 != a5)) ^ v5)))();
}

uint64_t sub_1000E9B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v15 - 104) = v14
                         + 1374699841
                         * ((-995706280 - ((v15 - 120) | 0xC4A6BA58) + ((v15 - 120) | 0x3B5945A7)) ^ 0x56AD5DAE)
                         + 661;
  *(void *)(v15 - 120) = a12;
  *(void *)(v15 - 112) = v12;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v14 + 939)))(v15 - 120);
  return sub_1000E9B68(v16);
}

uint64_t sub_1000E9BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v75 = ((v74 - 1817406018 - 2 * ((v74 - 200) & 0x93AC9686)) ^ 0xDF3A14FB) * v71;
  *(_DWORD *)(v74 - 168) = v75 ^ 0x43F274F3;
  *(_DWORD *)(v74 - 192) = (v72 - 812) ^ v75;
  *(void *)(v74 - 200) = a71;
  *(void *)(v74 - 184) = 0x19D396D9A609BEA0;
  *(void *)(v74 - 176) = a70;
  uint64_t v76 = (*(uint64_t (**)(uint64_t))(v73 + 8 * (v72 + 1016)))(v74 - 200);
  return (*(uint64_t (**)(uint64_t))(v73
                                            + 8
                                            * ((2004
                                              * (((3 * (v72 ^ 0xE9) + 1) ^ (*(_DWORD *)(v74 - 164) == ((v72 + 1360827147) & 0xAEE3694F ^ 0xC3DE9976))) & 1)) ^ v72)))(v76);
}

uint64_t sub_1000E9CAC()
{
  *(_DWORD *)(v2 + 52) += ((v0 - 395) | 0x42) ^ 0x5B;
  STACK[0x3F8] = v1 - 2432;
  STACK[0x5B0] = v1 - 2432;
  LODWORD(STACK[0x520]) = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((95 * (STACK[0x5F8] != 0)) ^ v0)))();
}

uint64_t sub_1000E9D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28)
{
  BOOL v31 = a28 + 1353659329 < (v30 - 1552879133);
  if ((a28 + 1353659329) < 0x166ED25 != (v30 - 1552879133) < 0x166ED25) {
    BOOL v31 = (v30 - 1552879133) < 0x166ED25;
  }
  return (*(uint64_t (**)(void))(v29
                              + 8
                              * (int)((v31 * (316 * ((v28 + 148293203) & 0xF7293DEF ^ 0x4A9) - 1479)) ^ (v28 + 148293203) & 0xF7293DEF)))();
}

uint64_t sub_1000E9D30()
{
  uint64_t v3 = **(unsigned int **)(v1 + 1160);
  unint64_t v4 = 1224239923
     * ((~((v2 - 144) | 0x9AFB9A7A47D7B686) + ((v2 - 144) & 0x9AFB9A7A47D7B686)) ^ 0x4D5ED0EC4A9BB4AELL);
  *(void *)(v2 - 104) = 1959788296 - v4;
  *(_DWORD *)(v2 - 120) = v4 - 1501685844;
  *(_DWORD *)(v2 - 116) = v4 - 260041626;
  *(_DWORD *)(v2 - 144) = v4 ^ 0xF0801444;
  *(_DWORD *)(v2 - 140) = -1224239923 * ((~((v2 - 144) | 0x47D7B686) + ((v2 - 144) & 0x47D7B686)) ^ 0x4A9BB4AE);
  *(void *)(v2 - 128) = v3 ^ v4;
  *(_DWORD *)(v2 - 112) = -260041681 - v4;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v0 + 15440))(v2 - 144);
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * *(int *)(v2 - 136)))(v5);
}

uint64_t sub_1000E9F70()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((59 * (v1 > (v0 ^ 0x679u) - 137)) ^ (v0 - 541))))();
}

uint64_t sub_1000E9FA4@<X0>(_OWORD *a1@<X8>)
{
  *(_OWORD *)(v2 + (v1 + v5)) = *a1;
  return (*(uint64_t (**)(void))(v6 + 8
                                   * ((356 * (((v4 + 1) & 0x1FFFFFFF0) - (v3 - 604) == -624)) ^ v3)))();
}

uint64_t sub_1000EA000(uint64_t a1)
{
  BOOL v4 = ((v1 - 508) ^ 0xE2D3F320) + *(_DWORD *)(v3 - 0x65EF48AAD10F5708) == 0;
  return (*(uint64_t (**)(uint64_t, void))(v2 + 8 * (v4 | (8 * v4) | v1)))(a1, *(void *)(v3 - 0x65EF48AAD10F5714));
}

uint64_t sub_1000EA05C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*v1 == 0x716C65CCC677F525) * (((v0 + 799653634) & 0xD0563FEF) - 140)) ^ v0)))();
}

void sub_1000EA0B0()
{
}

uint64_t sub_1000EA0E0()
{
  unsigned int v5 = *(unsigned __int8 *)(v3 + 6) + (v2 ^ 0xFFFFFF12);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1320 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1000EA124(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24)
{
  int8x16x4_t v36 = vld4q_s8(a4);
  uint8x16_t v26 = (uint8x16_t)veorq_s8(v36.val[1], v25);
  _Q17 = vmovl_u8(*(uint8x8_t *)v26.i8);
  _Q16 = vmovl_high_u8(v26);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  return sub_1000E084C(a1, a2, a3, (uint64_t)a4, a24, a6, v24 + 16);
}

uint64_t sub_1000EA254(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a2 ^ ((((v2 < 0x20) ^ (a2 + 90)) & 1) << 6))))();
}

void sub_1000EA284()
{
}

void sub_1000EA28C()
{
}

uint64_t sub_1000EA2C8()
{
  uint64_t v4 = LODWORD(STACK[0x520]);
  uint64_t v5 = 1224239923 * (((v1 | 0x318F640A10694AAFLL) - (v1 & 0x318F640A10694AAFLL)) ^ 0x19D5D163E2DAB778);
  *(_DWORD *)(v3 - 168) = ((v0 + 298737596) ^ 0x1B) - v5;
  *(void *)(v3 - 160) = 1008845538 - v5;
  *(void *)(v3 - 184) = v4 ^ v5;
  *(_DWORD *)(v3 - 176) = v5 + v0 - 1501686125;
  *(_DWORD *)(v3 - 172) = v0 + 298737596 + v5;
  *(_DWORD *)(v3 - 200) = (v0 + 298737596) & 0x3FCEF196 ^ v5;
  *(_DWORD *)(v3 - 196) = -1224239923 * (((v1 | 0x10694AAF) - (v1 & 0x10694AAF)) ^ 0xE2DAB778);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1649)))(v3 - 200);
  STACK[0x368] = 0;
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 192));
  LODWORD(STACK[0x2F4]) = 1364664180;
  return v7(v6);
}

void sub_1000EA3A8()
{
}

uint64_t sub_1000EA3B0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned __int8 a32,uint64_t a33)
{
  LODWORD(STACK[0x3D8]) = v33;
  if (v33 == 596678623)
  {
    int v38 = 15;
  }
  else
  {
    if (v33 != 596678619)
    {
      LODWORD(STACK[0x3C0]) = 0;
      LODWORD(STACK[0x3C8]) = 0;
      goto LABEL_7;
    }
    int v38 = 18;
  }
  LODWORD(STACK[0x3C8]) = v38;
  LODWORD(STACK[0x3C0]) = 1;
LABEL_7:
  uint64_t v39 = a1 + 0x774B811B42847D37;
  int v40 = STACK[0x414];
  LODWORD(STACK[0x3D0]) = LODWORD(STACK[0x414]) + 98;
  int v41 = 1225351577 * ((((v37 - 200) | 0x670902E) - (v37 - 200) + ((v37 - 200) & 0xF98F6FD0)) ^ 0x25EA4838);
  *(void *)(v37 - 136) = v34 + 1168;
  *(_DWORD *)(v37 - 128) = v35 - v41 + 1029039745;
  *(void *)(v37 - 200) = a1 + 0x774B811B42847E47;
  *(void *)(v37 - 192) = 0;
  *(void *)(v37 - 152) = 0;
  unint64_t v42 = STACK[0x3F0];
  *(void *)(v37 - 176) = v39;
  *(void *)(v37 - 168) = v42;
  *(void *)(v37 - 184) = a33;
  *(_DWORD *)(v37 - 144) = v40 - v41 + 848;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(v36 + 8 * a31))(v37 - 200);
  return (*(uint64_t (**)(uint64_t))(v36
                                            + 8
                                            * ((254 * ((a32 ^ (*(_DWORD *)(v37 - 160) == -1008821960)) & 1)) ^ LODWORD(STACK[0x3D0]))))(v43);
}

void sub_1000EA530(int a1@<W8>)
{
  (*(void (**)(void, void, void, void, unint64_t *, unint64_t, void, unint64_t *))(v3 + 8 * (v1 | 0x74A)))(*v2, (a1 + 1), LODWORD(STACK[0x258]), v2[13] - 298586266, &STACK[0x660], STACK[0x368], LODWORD(STACK[0x2F4]) - 1364664461 + ((v1 - 994995910) & 0x3B4E6F39u), &STACK[0x650]);
  JUMPOUT(0x1000E96D8);
}

void sub_1000EA5DC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 235795823 * ((a1 - 1923327579 - 2 * (a1 & 0x8D5C59A5)) ^ 0x19F110FC);
  BOOL v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x774B811B42847B23) == 715496183;
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1000EA69C@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  *(unsigned char *)(v6 + (a2 + v5)) = *(unsigned char *)(v4 + (a2 + v5));
  return (*(uint64_t (**)(void))(v3 + 8 * ((738 * (a2 - 1 == ((a1 - 574) ^ (a3 + 486)))) ^ a1)))();
}

void sub_1000EA6D8()
{
}

uint64_t sub_1000EA6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 628203409 * ((((2 * (v19 - 136)) | 0x464B7CB8) - (v19 - 136) - 589676124) ^ 0xA1ADB26F);
  *(_DWORD *)(v19 - 136) = 884933518 - v20;
  *(void *)(v19 - 128) = v18;
  *(_DWORD *)(v19 - 120) = v20 + v16 - 662;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 | 0x244)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = v16
                         + 1374699841 * ((~((v19 - 136) | 0xA68D1187) + ((v19 - 136) & 0xA68D1187)) ^ 0x3486F671)
                         + 244;
  *(void *)(v19 - 136) = a13;
  *(void *)(v19 - 128) = a14;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 522)))(v19 - 136);
  *(void *)(v19 - 128) = v18;
  *(void *)(v19 - 120) = a14;
  *(_DWORD *)(v19 - 136) = v16 + (((~(v19 - 136) & 0xAFAF5BFC) - (~(v19 - 136) | 0xAFAF5BFD)) ^ 0x3B0212A4) * v17 - 109;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0x26B)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((1014
                                              * (v14 + v16 + 231 + (v16 ^ 0x698u) + *(_DWORD *)(v19 - 132) - 2495 < 0xFF921C6D)) ^ v16)))(v21);
}

uint64_t sub_1000EA84C@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  BOOL v28 = a3 == a2 || a23 - v25 != 1388428834;
  return (*(uint64_t (**)(void))(v24 + 8 * ((v28 * ((((v23 + 226) ^ 0x189) - a1 + 91) ^ (v26 - 58))) ^ (v23 + 226))))();
}

void sub_1000EA8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,int a39,int a40,unint64_t *a41,int a42,int a43,long long a44,uint64_t a45,unint64_t a46,int a47,int a48,int a49,int a50,int a51,int a52,unint64_t a53,unint64_t *a54,uint64_t a55,unint64_t *a56,uint64_t a57,uint64_t a58,int a59,int a60,int a61,int a62,int a63)
{
  STACK[0x270] = v82;
  STACK[0x368] = 0;
  a41 = &STACK[0x7CA4338F32EEA17D];
  STACK[0x3A8] = (unint64_t)&STACK[0x17980B1E60F15912];
  STACK[0x3A0] = (unint64_t)&STACK[0x482CA58F81659D40];
  STACK[0x398] = (unint64_t)&STACK[0x333288E344A3EA9E];
  STACK[0x390] = (unint64_t)&STACK[0xE16F3AF1DE37339];
  a77 = &STACK[0x716C65CCC677FA65];
  a76 = &STACK[0x72E2FEF5BF4EA616];
  a75 = &STACK[0x716C65CCC677FA7D];
  a74 = &STACK[0x72E2FEF5BF4EA70A];
  a56 = &STACK[0x78DB05D78770D72D];
  a66 = &STACK[0x7CA4338F32EEA00D];
  STACK[0x2A0] = (unint64_t)&STACK[0x716C65CCC677F95D];
  STACK[0x298] = (unint64_t)&STACK[0x72E2FEF5BF4EA5EE];
  a65 = &STACK[0x3DD4ED798559EFB4];
  STACK[0x250] = (unint64_t)&STACK[0x3DD4ED798559EFEC];
  STACK[0x268] = (unint64_t)&STACK[0x34F67AB82E5E961D];
  STACK[0x260] = (unint64_t)&STACK[0x3F5860029363B71E];
  a54 = &STACK[0x13C73732F424196E];
  int v85 = *(_DWORD *)(v81 + 16);
  int v86 = *(_DWORD *)(v81 + 20);
  STACK[0x230] = v81;
  unint64_t v87 = ((unint64_t)&STACK[0x5C8] ^ 0xEFFEFF993B8C7E30 ^ (v80 + 453))
      + ((2 * (void)&STACK[0x5C8]) & 0xDFFDFF327718FBE0)
      + 0x1CFF79F7EDF7BACCLL;
  a71 = ((unint64_t)&STACK[0x5E0] ^ 0x6BDBFD7BDE1FECF9)
      - 0x28909C0A001300A1
      + ((2 * (void)&STACK[0x5E0]) & 0xD7B7FAF7BC3FD9F0);
  a53 = ((unint64_t)&STACK[0x588] ^ 0xFFFCEB6BFEFEEFFFLL)
      + 0x4FEBB7FEDDDD4000
      + ((2 * (void)&STACK[0x588]) & 0xFFF9D6D7FDFDDFF0);
  a46 = ((unint64_t)&STACK[0x420] ^ 0x5FF7F5F7ADF77BFDLL)
      - 0x12C29030244200FDLL
      + ((2 * (void)&STACK[0x420]) & 0xBFEFEBEF5BEEF7F0);
  a59 = 2 * (v86 - v79);
  LODWORD(STACK[0x2BC]) = (a59 & 0xFEFFEFFE ^ 0x90D44E1C) + 1406663551;
  *(int32x4_t *)&STACK[0x350] = vdupq_n_s32(0x7FFFFFFEu);
  a44 = xmmword_100123EE0;
  LODWORD(STACK[0x364]) = (v83 - 1911861530) & 0x71F4B1DB;
  a67 = vdupq_n_s32(0xC3DE9938);
  a68 = vdupq_n_s32(0x43DE993Bu);
  STACK[0x2C8] = (unint64_t)&STACK[0x574] % 0x25 + 16;
  LODWORD(STACK[0x2B8]) = (v86 - v79) ^ 0x3795D8F1;
  a60 = v86 - v79;
  LODWORD(STACK[0x258]) = (v86 - v79) ^ 0xC8EA2F0E;
  a73 = (char *)&a9 - 0x61CB92A9D1FA173FLL;
  LODWORD(STACK[0x24C]) = v83 - 1005695551;
  LODWORD(STACK[0x248]) = v83 ^ 0x901;
  a49 = v85 - v79;
  LODWORD(STACK[0x25C]) = v85 - v79 + 633866438;
  LODWORD(STACK[0x3EC]) = v83 + 959129030;
  unint64_t v88 = 1225351577
      * (((~(v84 - 200) | 0x5278C1FDFCFD3C00) + ((v84 - 200) | 0xAD873E020302C3FFLL)) ^ 0x4011965A20981BE8);
  STACK[0x408] = v88;
  STACK[0x400] = v88 ^ 0xF1F6CBA4;
  LODWORD(STACK[0x3E8]) = v83 - 1415835163;
  LODWORD(STACK[0x3E4]) = 139 * (v83 ^ 0x11E);
  *(int32x4_t *)&STACK[0x330] = vdupq_n_s32(0xE54DC456);
  *(int32x4_t *)&STACK[0x340] = vdupq_n_s32(0x39537115u);
  *(int32x4_t *)&STACK[0x310] = vdupq_n_s32(0xF502E51C);
  *(int32x4_t *)&STACK[0x320] = vdupq_n_s32(0x72A6E22Bu);
  unint64_t v89 = 1225351577 * ((v84 - 200) ^ 0xED96A858239AD816);
  LODWORD(STACK[0x304]) = v83 - 560245530;
  LODWORD(STACK[0x214]) = v83 + 1860773030;
  unsigned int v90 = (v83 + 1860773030) & 0x9116DF59;
  a79 = v90 - 474248608;
  a78 = v90 ^ 0x58F;
  a50 = (v83 - 341680454) & 0x145DA37E;
  a52 = a50 ^ 0x53;
  a70 = v83 - 829326188;
  LODWORD(v88) = 22 * (v83 ^ 0x10F);
  LODWORD(STACK[0x244]) = v88;
  a63 = v88 ^ 0x1C4;
  a62 = v83 - 2113856196;
  a61 = v83 ^ 0x11A;
  a51 = v83 ^ 0x2609;
  a48 = (v83 ^ 0x1A9) + 105;
  a40 = v83 - 765985050;
  a38 = (v83 - 765985050) & 0x2DA803EB;
  a39 = v83 ^ 0x6EB;
  a37 = a38 + 42896270;
  LODWORD(STACK[0x374]) = (2 * v83) ^ 0x234;
  STACK[0x220] = (unint64_t)&STACK[0x6D7];
  STACK[0x228] = v87;
  STACK[0x218] = v87 + 79;
  LODWORD(STACK[0x2D0]) = 1017215967;
  STACK[0x3F8] = 0x61CB92A9D1FA1E4FLL;
  a64 = 1138661695;
  a43 = 1788488876;
  STACK[0x308] = v89;
  STACK[0x2F8] = v89 ^ 0x1C86B9C5;
  LODWORD(STACK[0x2D4]) = 1070380319;
  LODWORD(STACK[0x2F4]) = 1364664180;
  LODWORD(STACK[0x414]) = v83;
  JUMPOUT(0x1000EAF2CLL);
}

void sub_1000EAFB8()
{
  STACK[0x458] = *(void *)(v1 + 8 * (v0 - 266));
  JUMPOUT(0x1000CAF44);
}

uint64_t sub_1000EAFD4(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(result + 4) = a4;
  return result;
}

uint64_t sub_1000EAFDC()
{
  LODWORD(STACK[0x520]) = v0 - 225;
  return sub_1000FD474();
}

uint64_t sub_1000EAFEC(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((a1 - 1036) | 0xA) + 1645) ^ 0x668) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1000EB024@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v2 - 0x774B811B42847B23);
  int v5 = 715496557 - (v3 + 33 + v4);
  if (v3 + 33 + v4 - 715496557 >= 0) {
    int v5 = v3 + 33 + v4 - 715496557;
  }
  *(_DWORD *)(v1 - 0x774B811B42847B23) = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((((v5 ^ 0x3B5FBFEB) - 16849024 + ((2 * v5) & 0x76BF7FD6) == 979281771)
                                * (((v3 - 305) | 0x680) - 1647)) ^ v3)))();
}

void sub_1000EB0C0()
{
}

uint64_t sub_1000EB0DC()
{
  uint64_t v0 = (uint64_t)*(&off_100166A10
                + (byte_10011D9F0[byte_100119D34[(107
                                                                                                * (dword_100180F38 ^ 0x58 ^ qword_100180398))
                                                                              - 4] ^ 0x45] ^ (107
                                                                                            * (dword_100180F38 ^ 0x58 ^ qword_100180398)))
                + 72);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (unint64_t *)*(&off_100166A10
                           + (byte_100119F30[byte_100123DA8[(107 * ((qword_100180398 - v1) ^ 0x58))
                                                                                         - 8] ^ 0x39] ^ (107 * ((qword_100180398 - v1) ^ 0x58)))
                           + 67);
  unint64_t v3 = 139864171 * (((*v2 ^ v1) - (void)&v5) ^ 0x945BD3199FE9FF58);
  *(void *)(v0 - 4) = v3;
  *uint64_t v2 = v3;
  LOBYTE(v3) = 107 * ((v3 - *(_DWORD *)(v0 - 4)) ^ 0x58);
  uint64_t v6 = (char *)*(&off_100166A10
               + (byte_100119E3C[(byte_100123CA0[v3] ^ 0xA7) - 12] ^ v3)
               - 181)
     - 4;
  unsigned int v7 = 1722 - 3804331 * ((((2 * &v6) | 0x9FFF9BFA) - &v6 - 1342164477) ^ 0xB5613EAB);
  LOBYTE(v0) = 107 * ((*(_DWORD *)v2 + *(_DWORD *)(v0 - 4)) ^ 0x58);
  return (*(uint64_t (**)(char **))((char *)*(&off_100166A10
                                                      + ((107
                                                                         * (dword_100180F38 ^ 0x58 ^ qword_100180398)) ^ byte_100119E30[byte_100123CA0[(107 * (dword_100180F38 ^ 0x58 ^ qword_100180398))] ^ 0xA7])
                                                      - 56)
                                            + 8
                                            * (byte_100119C34[(byte_100123AAC[v0 - 12] ^ 0x14)
                                                                                           - 4] ^ v0)
                                            + 15788))(&v6);
}

uint64_t sub_1000EB308()
{
  int v2 = v0 ^ 0x640;
  uint64_t v3 = (uint64_t)*(&off_100166A10 + v2 - 826);
  uint64_t v4 = (uint64_t)*(&off_100166A10 + v2 - 876);
  int v5 = *(unsigned __int8 *)(v4 + (*(unsigned __int8 *)(v1 - 109) ^ 0xA5));
  HIDWORD(v6) = v5 ^ 0x3A;
  LODWORD(v6) = (v5 ^ 0x80) << 24;
  unsigned int v7 = (char *)*(&off_100166A10 + (v2 ^ 0x305)) - 4;
  int v8 = (char *)*(&off_100166A10 + v2 - 915) - 4;
  unsigned int v9 = (*(unsigned __int8 *)(v4 + (*(unsigned __int8 *)(v1 - 97) ^ 0x7BLL)) ^ 0xC5) & 0xFFFF00FF | ((((*(unsigned char *)(v1 - 98) ^ 0xD0) + *(unsigned char *)(v3 + (*(unsigned __int8 *)(v1 - 98) ^ 0xDFLL)) - 97) ^ 0xE4) << 8) | ((v7[*(unsigned __int8 *)(v1 - 99) ^ 0xAALL] ^ 0x75) << 16) | ((v8[*(unsigned __int8 *)(v1 - 100) ^ 0x45] ^ 0xD5) << 24);
  uint64_t v10 = (((((v6 >> 30) ^ 0xDB) >> 2) | (((v6 >> 30) ^ 0xDB) << 6)) | ((v7[*(unsigned __int8 *)(v1 - 111) ^ 0x7ALL] ^ 0x16) << 16) | ((v8[*(unsigned __int8 *)(v1 - 112) ^ 0x78] ^ 0xFFFFFFEF) << 24) | (((*(unsigned char *)(v3 + (*(unsigned __int8 *)(v1 - 110) ^ 0x5DLL)) + (*(unsigned char *)(v1 - 110) ^ 0x52) - 97) ^ 0x5D) << 8)) ^ 0x85C84FB2;
  *(_DWORD *)(v1 - 136) = v2 + 979;
  return sub_1000EC11C(v10, v9 ^ 0xC3E97CF1);
}

uint64_t sub_1000EC11C(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40,int a41,int a42,int a43,int a44,uint64_t a45,uint64_t a46)
{
  int v50 = *(_DWORD *)(v49 - 136);
  uint64_t v51 = v46 & 0xFFFFFFF8 ^ 0x129A2EF7;
  *(void *)(v49 - 200) = v51;
  uint64_t v52 = *(void *)(v49 - 120);
  uint64_t v53 = *(unsigned __int8 *)(v52 + v51);
  uint64_t v54 = v46 & 0xFFFFFFF3 ^ 0x129A2EFD;
  *(void *)(v49 - 176) = v54;
  *(_DWORD *)(v49 - 188) = 312094461;
  int v55 = *(unsigned __int8 *)(a20 + (v53 ^ 0x41));
  uint64_t v56 = *(unsigned __int8 *)(v52 + v54) ^ 0x60;
  uint64_t v57 = (v50 - 465) ^ 0x129A2B4A ^ v46 & 0xFFFFFFF7;
  *(void *)(v49 - 168) = v57;
  LODWORD(v56) = *(unsigned __int8 *)(a18 + v56);
  uint64_t v58 = *(unsigned __int8 *)(v52 + v57);
  uint64_t v59 = v46 & 0xFFFFFFFE ^ 0x129A2EF1;
  *(void *)(v49 - 144) = v59;
  int v60 = *(unsigned __int8 *)(a18 + (v58 ^ 0xC1)) ^ 0xDA;
  LODWORD(v59) = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(v52 + v59) ^ 0x66)) ^ 0xFA;
  uint64_t v61 = v46 & 0xFFFFFFF0 ^ 0x129A2EFF;
  *(void *)(v49 - 224) = v61;
  LODWORD(v58) = v59 << 16;
  uint64_t v62 = v46 & 0xFFFFFFF4 ^ 0x129A2EFB;
  *(void *)(v49 - 160) = v62;
  int v63 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(v52 + v62) ^ 0xC3));
  uint64_t v64 = v46 ^ 0x129A2EF1u;
  *(void *)(v49 - 184) = v64;
  LODWORD(v58) = v58 | ((*(unsigned __int8 *)(a18 + (*(unsigned __int8 *)(v52 + v64) ^ 0x30)) ^ 0x5E) << 24);
  v63 ^= 0xADu;
  int v65 = v63 | (v60 << 24);
  uint64_t v66 = v46 & 0xFFFFFFFD ^ 0x129A2EF3;
  *(void *)(v49 - 152) = v66;
  LODWORD(v58) = v58 & 0xFFFF00FF | (((*(unsigned char *)(a21 + (*(unsigned __int8 *)(v52 + v66) ^ 0xC0))
                                                      + (*(unsigned char *)(v52 + v66) ^ 0xCF)
                                                      - 97) ^ 0xF9) << 8);
  uint64_t v67 = v46 & 0xFFFFFFFB ^ 0x129A2EF5;
  *(void *)(v49 - 240) = v67;
  LODWORD(v54) = *(unsigned __int8 *)(a18 + (*(unsigned __int8 *)(v52 + v67) ^ 0xFCLL)) ^ 0xE0;
  uint64_t v68 = v46 & 0xFFFFFFFA ^ 0x129A2EF5;
  *(void *)(v49 - 232) = v68;
  int v69 = v55 ^ 0xB7 | (v54 << 24) | ((*(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(v52 + v68) ^ 0xA9)) ^ 0xC7) << 16);
  uint64_t v70 = v46 & 0xFFFFFFF6 ^ 0x129A2EF9;
  *(void *)(v49 - 248) = v70;
  LODWORD(v70) = (*(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(v52 + v70) ^ 0x5DLL)) ^ 0x29) << 16;
  uint64_t v71 = v46 & 0xFFFFFFF5 ^ 0x129A2EFB;
  *(void *)(v49 - 216) = v71;
  LODWORD(v70) = v70 & 0xFFFF00FF | (((*(unsigned char *)(a21 + (*(unsigned __int8 *)(v52 + v71) ^ 0xD5))
                                                      + (*(unsigned char *)(v52 + v71) ^ 0xDA)
                                                      - 97) ^ 0xCF) << 8) | v65;
  uint64_t v72 = v46 & 0xFFFFFFF1 ^ 0x129A2EFF;
  *(void *)(v49 - 208) = v72;
  LODWORD(v54) = (*(unsigned char *)(a21 + (*(unsigned __int8 *)(v52 + v72) ^ 0xE4))
                                 + (*(unsigned char *)(v52 + v72) ^ 0xEB)
                                 + 31) << 8;
  uint64_t v73 = v46 & 0xFFFFFFFC ^ 0x129A2EF3;
  *(void *)(v49 - 256) = v73;
  uint64_t v191 = v46 & 0xFFFFFFF2 ^ 0x129A2EFD;
  int v74 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(v52 + v61) ^ 0xE9)) ^ 0x67;
  LODWORD(v56) = v54 | ((*(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(v52 + v191) ^ 0x92)) ^ 0x14) << 16) | v74 | ((v56 ^ 0x6E) << 24);
  uint64_t v190 = v46 & 0xFFFFFFF9 ^ 0x129A2EF7;
  LODWORD(v54) = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(v52 + v73) ^ 0xDCLL)) ^ 0x73;
  unsigned int v75 = v69 & 0xFFFF00FF | (((*(unsigned char *)(a21 + (*(unsigned __int8 *)(v52 + v190) ^ 0x4FLL))
                                             + (*(unsigned char *)(v52 + v190) ^ 0x40)
                                             - 97) ^ 0xB7) << 8);
  unsigned int v76 = v75 - ((2 * v75) & 0xC337B0EE) - 509880201;
  unsigned int v77 = a1 ^ a43 ^ ((v54 | v58) + 1014101643 - 2 * ((v54 | v58) & 0x3C71F69B ^ v54 & 0x10));
  LODWORD(v58) = v48 ^ a44 ^ v76;
  unsigned int v78 = a2 ^ a41 ^ (v56 + 2052113736 - 2 * (v56 & 0x7A50C558 ^ v74 & 0x10));
  unsigned int v79 = v47 ^ a40 ^ (v70 - 2 * (v70 & 0x6595BF9F ^ v63 & 0x12) - 443170931);
  *(_DWORD *)(v49 - 124) = 2089844469;
  int v80 = (char *)*(&off_100166A10 + (int)a16) - 8;
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v79) ^ 0x3F)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  unint64_t v82 = (char *)*(&off_100166A10 + SHIDWORD(a16)) - 4;
  LODWORD(v70) = (v81 >> 1) ^ *(_DWORD *)&v82[4 * (BYTE2(v78) ^ 0x34)] ^ ((BYTE2(v78) ^ 0x68)
                                                                        - 398498312
                                                                        - 2
                                                                        * ((BYTE2(v78) ^ 0x68) & 0xFC ^ HIWORD(v78) & 4));
  int v83 = (char *)*(&off_100166A10 + v50 - 1770) - 12;
  LODWORD(v54) = *(_DWORD *)&v83[4 * (v79 ^ 0xC6)] ^ ((BYTE2(v77) ^ 0xD5)
                                                                     - 398498312
                                                                     - ((2 * (HIWORD(v77) ^ 0x6CD5)) & 0x1F0)) ^ *(_DWORD *)&v82[4 * (BYTE2(v77) ^ 0x89)] ^ ((v79 ^ 0xAB) + 2089844469 - ((2 * (v79 ^ 0xAB) + 37586174) & 0x22100EC));
  unsigned int v84 = *(_DWORD *)&v82[4 * (BYTE2(v58) ^ 0x8C)] ^ *(_DWORD *)&v83[4 * (v78 ^ 0xB6)] ^ ((BYTE2(v58) ^ 0xD0) - 398498312 - ((2 * (WORD1(v58) ^ 0xC8D0)) & 0x1F0)) ^ ((v78 ^ 0xDB) + 2089844470 + ((2 * (v78 ^ 0xDB) + 254) & 0xEC ^ 0xFDDEFFFF));
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (BYTE3(v58) ^ 0xC8)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v70) = v70 - 1159909980 - ((2 * v70) & 0x75BA5B48);
  int v85 = ((BYTE2(v79) ^ 0xAD) - 398498312 - ((2 * (HIWORD(v79) ^ 0x3FAD)) & 0x1F0)) ^ ((v77 ^ 0x71)
                                                                                    + 2089844469
                                                                                    - ((2
                                                                                      * (v77 ^ 0x71)
                                                                                      + 37586174) & 0x22100EC)) ^ *(_DWORD *)&v83[4 * (v77 ^ 0x1C)] ^ (v81 >> 1) ^ *(_DWORD *)&v82[4 * (BYTE2(v79) ^ 0xF1)];
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v77) ^ 0x6C)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v86 = v81 >> 1;
  int v87 = v85 - 1159909980 - ((2 * v85) & 0x75BA5B48);
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v78) ^ 0xB7)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  unint64_t v88 = (char *)*(&off_100166A10 + v50 - 1823) - 4;
  int v89 = *(_DWORD *)&v88[4 * (BYTE1(v77) ^ 0xDE)] ^ a38 ^ ((v58 ^ 0x10)
                                                        + 2089844470
                                                        + ((2 * (v58 ^ 0x10) + 254) & 0xEC ^ 0xFDDEFFFF)) ^ *(_DWORD *)&v83[4 * (v58 ^ 0x7D)];
  LODWORD(v58) = (v54 - 1159909980 - ((2 * v54) & 0x75BA5B48)) ^ *(_DWORD *)&v88[4 * (BYTE1(v58) ^ 0x2F)] ^ (v81 >> 1);
  int v90 = v58 - ((2 * v58) & 0x697852D0);
  LODWORD(v58) = *(_DWORD *)&v88[4 * (BYTE1(v79) ^ 0x29)] ^ a39 ^ v86 ^ (v84 - 1159909980 - ((2 * v84) & 0x75BA5B48));
  unsigned int v91 = v89 ^ v70;
  unsigned int v92 = *(_DWORD *)&v88[4 * (BYTE1(v78) ^ 0x66)] ^ HIDWORD(a38) ^ v87;
  HIDWORD(v81) = *(_DWORD *)&v80[4 * ((v89 ^ ~v70) >> 24)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v93 = v81 >> 1;
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (BYTE3(v58) ^ 0x91)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v94 = v81 >> 1;
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v92) ^ 0xA3)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v95 = v94 ^ *(_DWORD *)&v82[4 * (BYTE2(v92) ^ 0xF0)] ^ ((BYTE2(v92) ^ 0xAC)
                                                        - 398498312
                                                        - 2 * ((HIWORD(v92) ^ 0xA3AC) & 0xFB ^ HIWORD(v92) & 3));
  LODWORD(v70) = (v81 >> 1) ^ *(_DWORD *)&v82[4 * (BYTE2(v91) ^ 0x15)] ^ *(_DWORD *)&v83[4
                                                                                       * (v58 ^ 0x7B)] ^ ((BYTE2(v91) ^ 0x49) - 398498312 - 2 * ((HIWORD(v91) ^ 0xFF49) & 0xFA ^ HIWORD(v91) & 2)) ^ ((v58 ^ 0x16) + 2089844470 + ((2 * (v58 ^ 0x16) + 254) & 0xEC ^ 0xFDDEFFFF));
  int v96 = v70 - 1159909980 - ((2 * v70) & 0x75BA5B48);
  unsigned int v97 = (v90 - 1262737048) ^ HIDWORD(a37);
  int v98 = (v95 - 1159909980 - ((2 * v95) & 0x75BA5B48)) ^ *(_DWORD *)&v88[4 * (BYTE1(v91) ^ 0x2C)];
  LODWORD(v70) = v93 ^ *(_DWORD *)&v83[4 * (v92 ^ 3)] ^ ((v92 ^ 0x6E)
                                                                        + 2089844470
                                                                        + ((2 * (v92 ^ 0x6E) + 254) & 0xEC ^ 0xFDDEFFFF)) ^ ((BYTE2(v97) ^ 0x85) - 398498312 - ((2 * (HIWORD(v97) ^ 0xDA85)) & 0x1F0)) ^ *(_DWORD *)&v82[4 * (BYTE2(v97) ^ 0xD9)];
  LODWORD(v54) = *(_DWORD *)&v82[4 * (BYTE2(v58) ^ 0x2E)] ^ ((BYTE2(v58) ^ 0x72)
                                                           - 398498312
                                                           - ((2 * (WORD1(v58) ^ 0x9172)) & 0x1F0));
  int v99 = *(_DWORD *)(v49 - 124);
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v97) ^ 0xDA)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v54) = ((v91 ^ 0xFC) + v99 - ((2 * (v91 ^ 0xFC) + 37586174) & 0x22100EC)) ^ *(_DWORD *)&v88[4 * (BYTE1(v92) ^ 0xBD)] ^ *(_DWORD *)&v83[4 * (v91 ^ 0x91)] ^ (v54 - 1159909980 - ((2 * v54) & 0x75BA5B48)) ^ (v81 >> 1);
  int v100 = *(_DWORD *)&v88[4 * (BYTE1(v58) ^ 0x57)];
  LODWORD(v58) = ((v97 ^ 0x25) - 1726037377) ^ a37 ^ *(_DWORD *)&v83[4 * (v97 ^ 0x48)] ^ (v98 - 479085450 - ((2 * v98) & 0xC6E378EC));
  unsigned int v101 = v100 ^ HIDWORD(a34) ^ (v70 - 1159909980 - ((2 * v70) & 0x75BA5B48));
  unsigned int v102 = (v54 - ((2 * v54) & 0x9F311CEA) + 1335398005) ^ a36;
  unsigned int v103 = *(_DWORD *)&v88[4 * (BYTE1(v97) ^ 0xB2)] ^ HIDWORD(a36) ^ v96;
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v102) ^ 0xA2)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v54) = (v88[4 * (BYTE1(v97) ^ 0xB2)] ^ BYTE4(a36) ^ v96);
  LODWORD(v54) = ((v54 ^ 0xA1) + 2089844470 + ((2 * (v54 ^ 0xA1) + 254) & 0xEC ^ 0xFDDEFFFF)) ^ *(_DWORD *)&v83[4 * (v54 ^ 0xCC)];
  LODWORD(v70) = *(_DWORD *)&v82[4 * (BYTE2(v58) ^ 0xDB)] ^ ((BYTE2(v58) ^ 0x87)
                                                           - 398498312
                                                           - ((2 * (WORD1(v58) ^ 0x3A87)) & 0x1F0)) ^ (v81 >> 1);
  LODWORD(v54) = (v54 - 1159909980 - ((2 * v54) & 0x75BA5B48)) ^ *(_DWORD *)&v88[4 * (BYTE1(v58) ^ 0xDE)];
  int v104 = (((v97 ^ 0x25) + 127) ^ a37 ^ v83[4 * (v97 ^ 0x48)] ^ (v98
                                                                                                + 118
                                                                                                - ((2 * v98) & 0xEC)));
  unsigned int v105 = ((v104 ^ 0x9E) + 2089844470 + ((2 * (v104 ^ 0x9E) + 254) & 0xEC ^ 0xFDDEFFFF)) ^ *(_DWORD *)&v83[4 * (v104 ^ 0xF3)];
  LODWORD(v70) = (v70 - 1159909980 - ((2 * v70) & 0x75BA5B48)) ^ *(_DWORD *)&v88[4 * (BYTE1(v103) ^ 0x57)];
  int v106 = ((v101 ^ 0x740CBC3A) >> 16);
  unsigned int v107 = v106 - 398498312 - (((v101 ^ 0x740CBC3A) >> 15) & 0x1F0);
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v101) ^ 0x37)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v108 = v81 >> 1;
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (BYTE3(v58) ^ 0x3A)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v58) = BYTE2(v103) ^ *(_DWORD *)&v82[4 * (BYTE2(v103) ^ 0xF6)] ^ *(_DWORD *)&v88[4
                                                                                         * ((unsigned __int16)(v101 ^ 0xBC3A) >> 8)] ^ 0x52E248F6 ^ (v81 >> 1);
  LODWORD(v58) = ((v102 ^ 0x65) - 1726037377) ^ HIDWORD(a35) ^ *(_DWORD *)&v83[4
                                                                                              * (v102 ^ 8)] ^ (v58 - 479085450 - ((2 * v58) & 0xC6E378EC));
  unsigned int v109 = ((v101 ^ 0x3A) - 1726037377) ^ HIDWORD(a33) ^ *(_DWORD *)&v83[4
                                                                                      * (v101 ^ 0x57)] ^ (v70 - 479085450 - ((2 * v70) & 0xC6E378EC));
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v103) ^ 0x7C)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v54) = *(_DWORD *)&v82[4 * (BYTE2(v102) ^ 0x1E)] ^ a34 ^ BYTE2(v102) ^ v108 ^ (v54
                                                                                       - 398498312
                                                                                       - ((2 * v54) & 0xD07ECBF0));
  unsigned int v110 = *(_DWORD *)&v88[4 * (BYTE1(v102) ^ 0x6E)] ^ a35 ^ v107 ^ *(_DWORD *)&v82[4 * (v106 ^ 0x5C)] ^ (v81 >> 1) ^ (v105 - 1159909980 - ((2 * v105) & 0x75BA5B48));
  LODWORD(v70) = ((v54 ^ 0x81) + v99 - ((2 * (v54 ^ 0x81) + 37586174) & 0x22100EC)) ^ *(_DWORD *)&v83[4 * (v54 ^ 0xEC)];
  int v111 = v70 - 1159909980 - ((2 * v70) & 0x75BA5B48);
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (BYTE3(v58) ^ 0x5B)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v70) = (v81 >> 1) ^ *(_DWORD *)&v83[4 * (v109 ^ 0x1F)] ^ ((v109 ^ 0x72)
                                                                                   + 2089844470
                                                                                   + ((2
                                                                                     * (v109 ^ 0x72)
                                                                                     + 254) & 0xEC ^ 0xFDDEFFFF));
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v109) ^ 0x28)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v112 = v81 >> 1;
  int v113 = v70 - 1159909980 - ((2 * v70) & 0x75BA5B48);
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (BYTE3(v54) ^ 0xB9)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v70) = v81 >> 1;
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v110) ^ 0xB4)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v70) = v70 ^ *(_DWORD *)&v83[4 * (v110 ^ 0x8B)] ^ ((v110 ^ 0xE6)
                                                                            + 2089844470
                                                                            + ((2 * (v110 ^ 0xE6) + 254) & 0xEC ^ 0xFDDEFFFF));
  int v114 = BYTE2(v58) ^ 0x95;
  unsigned int v115 = v114 - 398498312 - ((2 * (WORD1(v58) ^ 0x5B95)) & 0x1F0);
  int v116 = v58;
  unsigned int v117 = (v58 ^ 0xF4) + 2089844470 + ((2 * (v58 ^ 0xF4) + 254) & 0xEC ^ 0xFDDEFFFF);
  unsigned int v118 = ((BYTE2(v109) ^ 0x14) - 398498312 - 2 * ((HIWORD(v109) ^ 0x2814) & 0xFA ^ HIWORD(v109) & 2)) ^ a32 ^ *(_DWORD *)&v88[4 * (BYTE1(v58) ^ 0x1F)] ^ (v70 - 1159909980 - ((2 * v70) & 0x75BA5B48)) ^ *(_DWORD *)&v82[4 * (BYTE2(v109) ^ 0x48)];
  LODWORD(v58) = *(_DWORD *)&v88[4 * ((unsigned __int16)(v54 ^ 0xA581) >> 8)] ^ a33 ^ ((BYTE2(v110) ^ 0x59) - 398498312 - ((2 * (HIWORD(v110) ^ 0xB459)) & 0x1F0)) ^ *(_DWORD *)&v82[4 * (BYTE2(v110) ^ 5)] ^ v113;
  unsigned int v119 = (((v54 ^ 0xFA64A581) >> 16)
        - 398498312
        - (((v54 ^ 0xFA64A581) >> 15) & 0x1F0)) ^ HIDWORD(a32) ^ *(_DWORD *)&v83[4 * (v116 ^ 0x99)] ^ v117 ^ ((v81 >> 1) - 1159909980 - ((2 * (v81 >> 1)) & 0x75BA5B48)) ^ *(_DWORD *)&v82[4 * (((v54 ^ 0xFA64A581) >> 16) ^ 0x5C)] ^ *(_DWORD *)&v88[4 * (BYTE1(v109) ^ 0x12)];
  unsigned int v120 = *(_DWORD *)&v88[4 * (BYTE1(v110) ^ 0x34)] ^ HIDWORD(a31) ^ v115 ^ *(_DWORD *)&v82[4 * (v114 ^ 0x5C)] ^ v111 ^ v112;
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v120) ^ 0xEB)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v121 = (v81 >> 1) - 1159909980 - ((2 * (v81 >> 1)) & 0x75BA5B48);
  LODWORD(v56) = ((BYTE2(v119) ^ 0x81) - 398498312 - ((2 * (HIWORD(v119) ^ 0x1481)) & 0x1F0)) ^ *(_DWORD *)&v82[4 * (BYTE2(v119) ^ 0xDD)];
  LODWORD(v54) = ((v119 ^ 0x51)
                + 2089844470
                + ((2 * (v119 ^ 0x51) + 254) & 0xEC ^ 0xFDDEFFFF)) ^ *(_DWORD *)&v83[4 * (v119 ^ 0x3C)];
  int v122 = *(_DWORD *)&v82[4 * (BYTE2(v118) ^ 0xDB)] ^ ((BYTE2(v118) ^ 0x87)
                                                    - 398498312
                                                    - ((2 * (HIWORD(v118) ^ 0x7787)) & 0x1F0));
  int v123 = v122 - 1159909980 - ((2 * v122) & 0x75BA5B48);
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v119) ^ 0x14)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v124 = v81 >> 1;
  LODWORD(v70) = *(_DWORD *)&v82[4 * (((v120 ^ 0xA87CE98B) >> 16) ^ 0x5C)] ^ ((v120 ^ 0xA87CE98B) >> 16) ^ (v54 - 398498312 - ((2 * v54) & 0xD07ECBF0));
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (BYTE3(v58) ^ 0x9A)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v125 = ((v120 ^ 0x8B) + 2089844470 + ((2 * (v120 ^ 0xA87CE98B) + 254) & 0xEC ^ 0xFDDEFFFF)) ^ *(_DWORD *)&v88[4 * (BYTE1(v118) ^ 0xDE)] ^ *(_DWORD *)&v83[4 * (v120 ^ 0xE6)] ^ (v56 - 1159909980 - ((2 * v56) & 0x75BA5B48)) ^ (v81 >> 1);
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v118) ^ 0x77)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  unsigned int v118 = v118;
  int v126 = *(_DWORD *)&v88[4 * (BYTE1(v119) ^ 0x34)] ^ a30 ^ ((BYTE2(v58) ^ 0xE9)
                                                          - 398498312
                                                          - 2 * ((BYTE2(v58) ^ 0xE9) & 0xFC ^ WORD1(v58) & 4)) ^ *(_DWORD *)&v82[4 * (BYTE2(v58) ^ 0xB5)] ^ ((v118 ^ 0x9E) + 2089844470 + ((2 * (v118 ^ 0x9E) + 254) & 0xEC ^ 0xFDDEFFFF)) ^ v121;
  int v127 = *(_DWORD *)&v88[4 * (BYTE1(v120) ^ 0xB)];
  int v128 = v126 ^ *(_DWORD *)&v83[4 * (v118 ^ 0xF3)];
  LODWORD(v56) = v127 ^ a29 ^ ((v58 ^ 0xA8)
                             + 2089844470
                             + ((2 * (v58 ^ 0xA8) + 254) & 0xEC ^ 0xFDDEFFFF)) ^ *(_DWORD *)&v83[4 * (v58 ^ 0xC5)] ^ v124 ^ v123;
  LODWORD(v58) = *(_DWORD *)&v88[4 * (BYTE1(v58) ^ 0x2D)] ^ HIDWORD(a30) ^ (v81 >> 1) ^ (v70
                                                                                       - 1159909980
                                                                                       - ((2 * v70) & 0x75BA5B48));
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (BYTE3(v56) ^ 0x6D)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v70) = v81 >> 1;
  unsigned int v129 = v125 + 2067538220 - ((2 * v125) & 0xF6784258);
  BYTE1(v125) = BYTE1(v56) ^ 0x65;
  int v130 = ((v56 ^ 0x2E0E654A) >> 16);
  LODWORD(v54) = v130 - 398498312 - (((v56 ^ 0x2E0E654A) >> 15) & 0x1F0);
  unsigned int v131 = v129 ^ a31;
  int v132 = *(_DWORD *)&v82[4 * (v130 ^ 0x5C)];
  unsigned int v133 = *(_DWORD *)&v80[4 * (HIBYTE(v131) ^ 0xFD)];
  int v134 = v132 ^ (v133 << 31) ^ (v133 >> 1) ^ v54 ^ 0x770923CD;
  LODWORD(v56) = (v99 + (v56 ^ 0x4A) - ((2 * (v56 ^ 0x4A) + 37586174) & 0x22100EC)) ^ *(_DWORD *)&v83[4 * (v56 ^ 0x27)];
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (BYTE3(v58) ^ 0xAE)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v56) = (v81 >> 1) ^ *(_DWORD *)&v88[4 * (BYTE1(v131) ^ 0xA4)] ^ (v56 - 1159909980 - ((2 * v56) & 0x75BA5B48));
  int v135 = v56 - 398498312 - ((2 * v56) & 0xD07ECBF0);
  LODWORD(v56) = *(_DWORD *)&v82[4 * (BYTE2(v58) ^ 0x3A)] ^ v70 ^ *(_DWORD *)&v83[4 * (v131 ^ 0x4D)] ^ ((BYTE2(v58) ^ 0x66) - 398498312 - ((2 * (WORD1(v58) ^ 0xAE66)) & 0x1F0)) ^ ((v131 ^ 0x20) + 2089844470 + ((2 * (v131 ^ 0x20) + 254) & 0xEC ^ 0xFDDEFFFF));
  LODWORD(v54) = ((v58 ^ 0xB3)
                + 1409019940
                + ((2 * (v58 ^ 0xB3) + 254) & 0x348 ^ 0xCFC7FFFF)) ^ *(_DWORD *)&v88[4 * BYTE1(v125)];
  LODWORD(v54) = (v54 - 479085450 - ((2 * v54) & 0xC6E378EC)) ^ *(_DWORD *)&v83[4 * (v58 ^ 0xDE)];
  int v136 = *(_DWORD *)&v82[4 * (BYTE2(v131) ^ 0x40)] ^ ((BYTE2(v131) ^ 0x1C)
                                                    - 398498312
                                                    - ((2 * (HIWORD(v131) ^ 0xFD1C)) & 0x1F0));
  HIDWORD(v81) = *(_DWORD *)&v80[4 * ((v128 ^ 0x3F162902u) >> 24)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  unsigned int v137 = ((v128 ^ 0x3F162902u) >> 16) ^ a28 ^ *(_DWORD *)&v82[4
                                                                                           * (((v128 ^ 0x3F162902u) >> 16) ^ 0x5C)] ^ v135;
  unsigned int v138 = (v81 >> 1) ^ HIDWORD(a27) ^ ((v136 ^ 0xD9E215AF ^ -(v136 ^ 0xD9E215AF) ^ ((v136 ^ v54 ^ 0x431D28D3)
                                                                                 + (v54 ^ 0x6500C283)
                                                                                 + 1))
                                    + (v54 ^ 0x6500C283));
  unsigned int v139 = *(_DWORD *)&v88[4 * (BYTE1(v128) ^ 0xCB)] ^ HIDWORD(a28) ^ (v56 - 1159909980 - ((2 * v56) & 0x75BA5B48));
  LODWORD(v58) = *(_DWORD *)&v88[4 * (BYTE1(v58) ^ 0x7C)] ^ HIDWORD(a29) ^ (v99
                                                                          + (v128 ^ 2)
                                                                          - ((2 * (v128 ^ 2) + 37586174) & 0x22100EC)) ^ *(_DWORD *)&v83[4 * (v128 ^ 0x6F)] ^ (v134 - 1159909980 - ((2 * v134) & 0x75BA5B48));
  unsigned int v140 = ((BYTE2(v58) ^ 0xE9) - 398498312 - 2 * ((WORD1(v58) ^ 0xB8E9) & 0xFA ^ WORD1(v58) & 2)) ^ *(_DWORD *)&v82[4 * (BYTE2(v58) ^ 0xB5)];
  int v141 = v140 - 1159909980 - ((2 * v140) & 0x75BA5B48);
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v137) ^ 0x9D)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v142 = v81 >> 1;
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v139) ^ 0x61)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v56) = *(_DWORD *)&v83[4 * (v58 ^ 0xC5)] ^ *(_DWORD *)&v82[4 * (BYTE2(v137) ^ 0x28)] ^ ((v58 ^ 0xA8) + 2089844470 + ((2 * (v58 ^ 0xA8) + 254) & 0xEC ^ 0xFDDEFFFF)) ^ (v81 >> 1) ^ ((BYTE2(v137) ^ 0x74) - 398498312 - 2 * ((HIWORD(v137) ^ 0x9D74) & 0xFA ^ HIWORD(v137) & 2));
  LODWORD(v70) = v142 ^ ((BYTE2(v138) ^ 0xE6) - 398498312 - ((2 * (HIWORD(v138) ^ 0xB0E6)) & 0x1F0)) ^ *(_DWORD *)&v82[4 * (BYTE2(v138) ^ 0xBA)];
  int v143 = v139;
  unsigned int v144 = (v139 ^ 0x85) + 2089844470 + ((2 * (v139 ^ 0x85) + 254) & 0xEC ^ 0xFDDEFFFF);
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (BYTE3(v58) ^ 0xB8)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v145 = ((BYTE2(v139) ^ 8) - 398498312 - 2 * ((HIWORD(v139) ^ 0x6108) & 0xFB ^ HIWORD(v139) & 3)) ^ *(_DWORD *)&v82[4 * (BYTE2(v139) ^ 0x54)] ^ *(_DWORD *)&v83[4 * (v138 ^ 0x29)] ^ ((v138 ^ 0x44) + 2089844470 + ((2 * (v138 ^ 0x44) + 254) & 0xEC ^ 0xFDDEFFFF)) ^ (v81 >> 1);
  int v146 = *(_DWORD *)&v80[4 * (HIBYTE(v138) ^ 0xB0)];
  unsigned int v147 = *(_DWORD *)&v88[4 * (BYTE1(v138) ^ 0xDD)] ^ HIDWORD(a26) ^ (v56 - 1159909980 - ((2 * v56) & 0x75BA5B48));
  HIDWORD(v81) = v146;
  LODWORD(v81) = v146 ^ 0xEE12479A;
  unsigned int v148 = *(_DWORD *)&v88[4 * (BYTE1(v137) ^ 0xBD)] ^ a27 ^ (v145 - 1159909980 - ((2 * v145) & 0x75BA5B48));
  unsigned int v149 = *(_DWORD *)&v88[4 * (BYTE1(v139) ^ 0x8F)] ^ HIDWORD(a25) ^ *(_DWORD *)&v83[4 * (v137 ^ 0xB4)] ^ ((v137 ^ 0xD9) + v99 - ((2 * (v137 ^ 0xD9) + 37586174) & 0x22100EC)) ^ (v81 >> 1) ^ v141;
  unsigned int v150 = v144 ^ a26 ^ *(_DWORD *)&v83[4 * (v143 ^ 0xE8)] ^ *(_DWORD *)&v88[4 * (BYTE1(v58) ^ 0x2D)] ^ (v70 - 1159909980 - ((2 * v70) & 0x75BA5B48));
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v149) ^ 0x18)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v56) = ((BYTE2(v150) ^ 0x66) - 398498312 - 2 * ((HIWORD(v150) ^ 0xAE66) & 0xF9 ^ HIWORD(v150) & 1)) ^ *(_DWORD *)&v82[4 * (BYTE2(v150) ^ 0x3A)];
  int v151 = BYTE2(v148);
  LODWORD(v58) = ((v81 >> 1) - 398498312 - ((2 * (v81 >> 1)) & 0xD07ECBF0)) ^ *(_DWORD *)&v82[4 * (BYTE2(v148) ^ 0x40)];
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v148) ^ 0xEF)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v70) = (v81 >> 1) ^ *(_DWORD *)&v83[4 * (v149 ^ 0x90)] ^ ((v149 ^ 0xFD)
                                                                                   + 2089844470
                                                                                   + ((2
                                                                                     * (v149 ^ 0xFD)
                                                                                     + 254) & 0xEC ^ 0xFDDEFFFF));
  int v152 = v56 - 1159909980 - ((2 * v56) & 0x75BA5B48);
  LODWORD(v56) = v70 - 1159909980 - ((2 * v70) & 0x75BA5B48);
  LODWORD(v70) = *(_DWORD *)&v83[4 * (v147 ^ 0x27)] ^ ((v147 ^ 0x4A)
                                                                      + 2089844470
                                                                      + ((2 * (v147 ^ 0x4A) + 254) & 0xEC ^ 0xFDDEFFFF));
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v150) ^ 0xAE)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v70) = (v81 >> 1) ^ *(_DWORD *)&v82[4 * (BYTE2(v149) ^ 0xF)] ^ (v70 - 398498312 - ((2 * v70) & 0xD07ECBF0));
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v147) ^ 0xDC)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v153 = v58 - 1159909980 - ((2 * v58) & 0x75BA5B48);
  LODWORD(v58) = ((BYTE2(v147) ^ 0xE) - 398498312 - 2 * ((HIWORD(v147) ^ 0xDC0E) & 0xF9 ^ HIWORD(v147) & 1)) ^ a25 ^ *(_DWORD *)&v88[4 * (BYTE1(v150) ^ 0x7C)] ^ *(_DWORD *)&v82[4 * (BYTE2(v147) ^ 0x52)] ^ v56;
  int v154 = v150;
  LODWORD(v54) = (v150 ^ 0xB3)
               + 2089844470
               + ((2 * (v150 ^ 0xB3) + 254) & 0xEC ^ 0xFDDEFFFF);
  unsigned int v155 = *(_DWORD *)&v88[4 * (BYTE1(v149) ^ 0x1B)] ^ HIDWORD(a24) ^ *(_DWORD *)&v83[4 * (v148 ^ 0x4D)] ^ ((v148 ^ 0x20) + 2089844470 + ((2 * (v148 ^ 0x20) + 254) & 0xEC ^ 0xFDDEFFFF)) ^ (v81 >> 1) ^ v152;
  int v156 = v54 ^ HIDWORD(a23) ^ *(_DWORD *)&v88[4 * (BYTE1(v147) ^ 0x65)] ^ *(_DWORD *)&v83[4 * (v154 ^ 0xDE)] ^ v153;
  unsigned int v157 = *(_DWORD *)&v88[4 * (BYTE1(v148) ^ 0xA4)] ^ a24 ^ (v70 - 1159909980 - ((2 * v70) & 0x75BA5B48));
  LODWORD(v70) = (v157 ^ BYTE2(v149));
  LOBYTE(v152) = v156 ^ v151;
  unsigned int v158 = v156 ^ v151 ^ 0x7641388B;
  HIDWORD(v81) = *(_DWORD *)&v80[4 * HIBYTE(v158)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  LODWORD(v54) = v81 >> 1;
  HIDWORD(v81) = *(_DWORD *)&v80[4 * ((v58 ^ 0xF7E9CFA8) >> 24)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v159 = v81 >> 1;
  LODWORD(v56) = (BYTE2(v158) - 398498312 - ((v158 >> 15) & 0x1F0)) ^ *(_DWORD *)&v82[4 * (BYTE2(v158) ^ 0x5C)];
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v157) ^ 0xE7)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v160 = v81 >> 1;
  LODWORD(v70) = v54 ^ *(_DWORD *)&v83[4 * (v70 ^ 0x18)] ^ (((v58 ^ 0xF7E9CFA8) >> 16)
                                                                        - 398498312
                                                                        - (((v58 ^ 0xF7E9CFA8) >> 15) & 0x1F0)) ^ *(_DWORD *)&v82[4 * (((v58 ^ 0xF7E9CFA8) >> 16) ^ 0x5C)] ^ ((v70 ^ 0x75) + 2089844470 + ((2 * (v70 ^ 0x75) + 254) & 0xEC ^ 0xFDDEFFFF));
  LODWORD(v70) = (v70 - 1159909980 - ((2 * v70) & 0x75BA5B48)) ^ *(_DWORD *)&v88[4 * (BYTE1(v155) ^ 0xEC)];
  unsigned int v161 = v159 ^ *(_DWORD *)&v82[4 * (BYTE2(v155) ^ 0xA7)] ^ ((BYTE2(v155) ^ 0xFB)
                                                           - 398498312
                                                           - ((2 * (HIWORD(v155) ^ 0x57FB)) & 0x1F0)) ^ (v158 + 2089844470 + ((2 * v158 + 254) & 0xEC ^ 0xFDDEFFFF)) ^ *(_DWORD *)&v83[4 * (v152 ^ 0xE6)];
  HIDWORD(v81) = *(_DWORD *)&v80[4 * (HIBYTE(v155) ^ 0x57)];
  LODWORD(v81) = HIDWORD(v81) ^ 0xEE12479A;
  int v162 = (v161 - 1159909980 - ((2 * v161) & 0x75BA5B48)) ^ *(_DWORD *)&v88[4 * (BYTE1(v157) ^ 0x6D)];
  int v163 = HIWORD(v157) ^ 0xE731;
  LODWORD(v82) = *(_DWORD *)&v82[4 * (v163 ^ 0x5C)];
  int v164 = (v99 + (v58 ^ 0xA8) - ((2 * (v58 ^ 0xA8) + 37586174) & 0x22100EC)) ^ (v163 - 398498312 - ((2 * v163) & 0x1F0)) ^ *(_DWORD *)&v83[4 * (v58 ^ 0xC5)] ^ (v81 >> 1);
  unsigned int v165 = HIDWORD(a15) ^ *(_DWORD *)&v88[4 * (BYTE1(v156) ^ 0xDA)] ^ ((v164 ^ v82)
                                                                   - 1159909980
                                                                   - ((2 * (v164 ^ v82)) & 0x75BA5B48));
  LODWORD(v80) = (v162 - 1036575182 - ((2 * v162) & 0x846E3C64)) ^ a23;
  LODWORD(v82) = v70 - 692957100 - ((2 * v70) & 0xAD64A0A8);
  LODWORD(v58) = *(_DWORD *)&v88[4 * (BYTE1(v58) ^ 0x2D)] ^ a22 ^ ((v155 ^ 0x2F)
                                                                 + 2089844470
                                                                 + ((2 * (v155 ^ 0x2F) + 254) & 0xEC ^ 0xFDDEFFFF)) ^ v160 ^ *(_DWORD *)&v83[4 * (v155 ^ 0x42)] ^ (v56 - 1159909980 - ((2 * v56) & 0x75BA5B48));
  BYTE2(v56) = BYTE2(v165) ^ 0x8C;
  int v166 = (char *)*(&off_100166A10 + (int)a15) - 8;
  int v167 = *(_DWORD *)(v49 - 136);
  int v168 = (char *)*(&off_100166A10 + v167 - 1851) - 8;
  uint64_t v169 = (uint64_t)*(&off_100166A10 + v167 - 1750);
  LODWORD(v70) = (*(_DWORD *)(v169 + 4 * (BYTE2(v80) ^ 0x9Eu)) - 849154360) ^ (*(_DWORD *)&v166[4
                                                                                                * (v58 ^ 0xC9)]
                                                                               + 1168921314);
  LODWORD(v83) = *(_DWORD *)&v166[4 * (v165 ^ 0xC8)];
  int v170 = v83 - ((2 * v83 + 190358980) & 0x7C091FC2);
  int v171 = (*(_DWORD *)(v169 + 4 * (BYTE2(v58) ^ 0x38u)) - 849154360) ^ (*(_DWORD *)&v168[4
                                                                                        * ((v165 ^ 0x898C5DC8) >> 24)]
                                                                       + 190339680);
  int v172 = *(_DWORD *)&v166[4 * (v80 ^ 0xA2)];
  LODWORD(v82) = v82 ^ HIDWORD(a22);
  unsigned int v173 = v82 ^ 0x351D74B9;
  LODWORD(v83) = *(_DWORD *)&v166[4 * (v82 ^ 0xB9)];
  uint64_t v174 = *(unsigned int *)&v168[4 * ((v80 >> 24) ^ 0xE7)];
  LODWORD(v166) = *(_DWORD *)&v168[4 * (BYTE3(v58) ^ 0xB8)];
  LODWORD(v168) = *(_DWORD *)&v168[4 * ((v82 >> 24) ^ 0x65)];
  uint64_t v175 = (uint64_t)*(&off_100166A10 + v167 - 1797);
  LODWORD(v88) = v171 ^ (v172 + 1168921314);
  uint64_t v176 = *(unsigned int *)(v175 + 4 * (BYTE1(v58) ^ 0xE9u));
  int v177 = (v70 + 1040486369 - ((2 * v70) & 0x7C091FC2)) ^ *(_DWORD *)(v175 + 4 * (BYTE1(v165) ^ 0x61u)) ^ (v168 + 190339680);
  int v178 = *(_DWORD *)(v169 + 4 * BYTE2(v56));
  LODWORD(v56) = *(_DWORD *)(v175 + 4 * BYTE1(v173)) ^ a17 ^ (v88
                                                              + 1040486369
                                                              - ((2 * v88) & 0x7C091FC2));
  unsigned int v179 = a13 ^ HIDWORD(a22) ^ (v177 - 692957100 - ((2 * v177) & 0xAD64A0A8));
  uint64_t v180 = *(void *)(v49 - 120);
  LODWORD(v80) = *(_DWORD *)(v175 + 4 * (BYTE1(v80) ^ 0xA0u)) ^ a13 ^ (v170 - 2085559613) ^ (v166 + 190339680) ^ (*(_DWORD *)(v169 + 4 * BYTE2(v173)) - 849154360);
  uint64_t v181 = ((unsigned __int16)(*(_WORD *)(v175 + 4 * BYTE1(v173)) ^ a17 ^ ((_WORD)v88
                                                                                          - 28703
                                                                                          - ((2 * (_WORD)v88) & 0x1FC2))) >> 8) ^ 0x99;
  int v182 = (char *)*(&off_100166A10 + v167 - 1857) - 8;
  *(unsigned char *)(v180 + v190) = v182[v181] ^ 0x97;
  int v183 = (char *)*(&off_100166A10 + (int)a14) - 4;
  *(unsigned char *)(v180 + v191) = (v183[BYTE2(v179) ^ 0xADLL] + 11) ^ 0xC5;
  int v184 = (char *)*(&off_100166A10 + SHIDWORD(a13)) - 12;
  *(unsigned char *)(v180 + *(void *)(v49 - 200)) = v184[v56 ^ 0xFCLL] ^ 0x32;
  *(unsigned char *)(v180 + *(void *)(v49 - 248)) = (v183[BYTE2(v80) ^ 0x8CLL] + 11) ^ 0x47;
  unsigned int v185 = (char *)*(&off_100166A10 + v167 - 1896) - 4;
  *(unsigned char *)(v180 + *(void *)(v49 - 240)) = (v185[BYTE3(v56) ^ 0xDELL] - 19) ^ 0x1B;
  LODWORD(v166) = v183[BYTE2(v56) ^ 0x15];
  *(unsigned char *)(v180 + *(void *)(v49 - 232)) = (((_BYTE)v166 + (((_BYTE)v166 + 11) ^ 0xDA) + 12) ^ 0xFE)
                                            + (_BYTE)v166
                                            + 11;
  LODWORD(v168) = v178 - 849154360;
  uint64_t v186 = HIDWORD(a14) ^ v176;
  uint64_t v187 = v186 ^ v168 ^ (v83 + 1168921314) ^ (v174
                                                                               - ((2 * v174 + 380679360) & 0x7C091FC2)
                                                                               + 1230826049);
  *(unsigned char *)(v180 + *(void *)(v49 - 256)) = v184[v187 ^ 5] ^ 0xC0;
  uint64_t v188 = *(void *)(v49 - 184);
  *(unsigned char *)(v180 + *(void *)(v49 - 176)) = (v185[HIBYTE(v179) ^ 0x4ELL] - 19) ^ 0xE6;
  *(unsigned char *)(v180 + *(void *)(v49 - 168)) = (v185[(v80 >> 24) ^ 0x9CLL] - 19) ^ 0xB8;
  *(unsigned char *)(v180 + v188) = (v185[BYTE3(v187) ^ 0x67] - 19) ^ 0x91;
  *(unsigned char *)(v180 + *(void *)(v49 - 160)) = v184[v80 ^ 0xF2] ^ 0xCA;
  *(unsigned char *)(v180 + *(void *)(v49 - 216)) = v182[BYTE1(v80) ^ 0x1ELL] ^ 0x34;
  *(unsigned char *)(v180 + *(void *)(v49 - 152)) = v182[BYTE1(v187) ^ 0x33] ^ 0x2D;
  *(unsigned char *)(v180 + *(void *)(v49 - 208)) = v182[BYTE1(v179) ^ 0xBCLL] ^ 0xE3;
  *(unsigned char *)(v180 + *(void *)(v49 - 224)) = v184[v179 ^ 0x9FLL] ^ 0x32;
  *(unsigned char *)(v180 + *(void *)(v49 - 144)) = (v183[BYTE2(v187) ^ 0xDLL] + 11) ^ 0x8E;
  LODWORD(v185) = ((v188 + 312094465 - 2 * ((v188 + 16) & *(_DWORD *)(v49 - 188) ^ v46 & 0xC)) ^ 0x129A2EF1u) < HIDWORD(a17);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a46 + 8 * ((2 * (int)v185) | (16 * (int)v185) | (v167 - 579))))(v182, v187, 190339680, v186, v184, v174, v176, (v166 + 11) ^ 0xDAu, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000EE1EC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((a2 + 210) ^ (117
                                             * (((v2 << (((a2 + 26) | 0x60) + 26)) & 0xF9FFF7DE ^ 0x49CF4608)
                                              + (v2 ^ 0xDA185CEB)
                                              - 2177056 != 2094973903)))))();
}

void sub_1000EE268(uint64_t a1)
{
  int v1 = 460628867 * ((((2 * a1) | 0x80334E9A) - a1 + 1072060595) ^ 0x8C8F2530);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000EE304()
{
  STACK[0x278] = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 == 86 * (v1 ^ 0x20A) + 1224945265) * (((v1 + 335) | 0xA0) - 998)) ^ v1)))();
}

uint64_t sub_1000EE368@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v6 + (v3 + v4)) = *(unsigned char *)(a2 + (v3 + v4));
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v3 - 1 == a1) ^ (v2 - 1)) & 1) * v5) ^ v2)))();
}

uint64_t sub_1000EE3A8()
{
  int v5 = 628203409 * ((v4 - 136) ^ 0x82880C33);
  *(_DWORD *)(v4 - 136) = v1 - v5 + (v2 ^ 0xEAE163B5);
  *(void *)(v4 - 128) = v3;
  *(_DWORD *)(v4 - 120) = v5 + v2 - 272;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 ^ 0x3DE)))(v4 - 136);
  return sub_1000EE410(v6);
}

uint64_t sub_1000EE410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v17 - 128) = v14;
  *(void *)(v17 - 120) = a14;
  *(_DWORD *)(v17 - 136) = v16 + 235795823 * ((v17 - 136) ^ 0x94AD4959) + 1018;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0x692)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((25
                                              * (((v16 + 110) ^ ((*(_DWORD *)(v17 - 132)
                                                                                               - 1430518030) < 0xDD41D1DB)) & 1)) ^ v16)))(v18);
}

uint64_t sub_1000EE4B4@<X0>(int a1@<W5>, int a2@<W6>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (v7 + a1 + 930)) = *(unsigned char *)(v6 + (v7 + a1 + 930));
  return (*(uint64_t (**)(void))(v3 + 8 * ((107 * (((a2 - 603999402) & 0x6FCB5B9F ^ v5) + a1 == v4)) ^ a2)))(0);
}

uint64_t sub_1000EE508(unsigned int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((v1 - 1089063840) ^ 0xBF163A34) + 511) ^ (v1 - 1089063840) & 0x40E9C7FB)
                                     * (a1 < 0x10)) ^ v1)))();
}

void sub_1000EE550()
{
  *v0 ^= v1;
  JUMPOUT(0x1000EE57CLL);
}

uint64_t sub_1000EE584()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 != 608021679) * (((v0 - 975) ^ 9) + 167)) ^ v0)))();
}

uint64_t sub_1000EE5CC@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1303 * (a2 == (((v4 ^ (v4 + 431)) - 55) ^ (v2 - 538)))) ^ (a1 + v4 + 138))))();
}

uint64_t sub_1000EE614(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, char a8)
{
  *(unsigned char *)(v9 + (a2 + a7)) = *(unsigned char *)(v10 + (a2 + a7))
                                           - ((a3 ^ a8) & (2 * *(unsigned char *)(v10 + (a2 + a7))))
                                           + 84;
  return (*(uint64_t (**)(void))(v12 + 8 * (((a2 - 1 == v11) * v8) ^ a3)))();
}

uint64_t sub_1000EE6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(a11 - 0x3303C932EE2955CFLL) = 926007466 - v14;
  int v20 = 1755732067 * (((((v19 - 136) | 0x5ECD320C) ^ 0xFFFFFFFE) - (~(v19 - 136) | 0xA132CDF3)) ^ 0x7FF47028);
  *(_DWORD *)(v19 - 120) = v20 ^ 0x4B8F258;
  *(void *)(v19 - 128) = v15;
  *(_DWORD *)(v19 - 136) = v17 - v20 + 737;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 + 1797)))(v19 - 136);
  int v21 = 628203409 * (((~(v19 - 136) & 0xFB9A7DE) - (~(v19 - 136) | 0xFB9A7DF)) ^ 0x8D31ABEC);
  *(void *)(v19 - 128) = v15;
  *(_DWORD *)(v19 - 136) = ((32 * v18) ^ 0x7CFFE3ED)
                         - v21
                         - 1212211296
                         + (((((2 * v17) ^ 0x10) + 1664459313) & 0x9CCA5FF3 ^ 0xF9FFC400) & (v18 << 6));
  *(_DWORD *)(v19 - 120) = v21 + v17 + 579;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 + 1821)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = v17 + 1374699841 * ((v19 - 136) ^ 0x6DF41809) + 1485;
  *(void *)(v19 - 136) = &STACK[0x774B811B42847B57];
  *(void *)(v19 - 128) = a14;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 + 1763)))(v19 - 136);
  *(_DWORD *)(v19 - 136) = v17
                         + 235795823
                         * ((693255638 - ((v19 - 136) | 0x29523DD6) + ((v19 - 136) | 0xD6ADC229)) ^ 0x42008B70)
                         + 1132;
  *(void *)(v19 - 128) = v15;
  *(void *)(v19 - 120) = a14;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 + 1796)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((53 * (*(_DWORD *)(v19 - 132) <= 0x5543F90Du)) ^ v17)))(v22);
}

uint64_t sub_1000EE920(uint64_t a1, int a2, uint64_t a3, int a4)
{
  signed int v6 = a2 - 1907150851 + ((a4 + 330334997) & 0xEC4F7F39);
  BOOL v8 = v6 > 1273254358 || v6 < v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1859 * v8) ^ a4)))();
}

uint64_t sub_1000EE984()
{
  return sub_1000EE99C();
}

uint64_t sub_1000EE99C@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W6>, int a4@<W7>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v26 = 4 * (v18 + v25);
  unint64_t v27 = (a5 ^ HIDWORD(v17))
      + v16 * (unint64_t)(*(_DWORD *)(*v21 + 4 * v25) ^ v15)
      + (*(_DWORD *)(a13 + v26) ^ v15);
  *(_DWORD *)(a13 + v26) = (v27 + a1 - (((v24 - 817) ^ v13) & (2 * v27))) ^ a4;
  LODWORD(v27) = v25 + 1 + a2;
  LODWORD(v26) = (v14 > v19) ^ ((int)v27 < v22);
  BOOL v28 = (int)v27 < a3;
  if (v26) {
    BOOL v28 = v14 > v19;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((!v28 * v23) ^ v24)))();
}

void sub_1000EEA28(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000EEA9C()
{
  return sub_1000EEAB8();
}

uint64_t sub_1000EEAB8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 1424) = (v3 ^ 0xA63FD658) + v2;
  *(void *)(*(void *)(a1 + 96) + 520) = *(void *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_1000EEAF0()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0x286)))(200, 1616997413) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v2 * (v1 ^ 0x568)) ^ v1)))();
}

void sub_1000EEB3C()
{
  *(_DWORD *)(v1 - 124) = v2;
  *(_DWORD *)(v1 - 136) = v0;
  *(_DWORD *)(v1 - 144) = v0 & 0xFFFFFFF8;
  JUMPOUT(0x1000EEBA4);
}

void sub_1000EEC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, unsigned char *a18, unsigned char *a19, uint64_t a20,unsigned char *a21,uint64_t a22,unsigned char *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned char *a31,unsigned char *a32,unsigned char *a33,uint64_t a34,unsigned char *a35,unsigned char *a36,unsigned char *a37,unsigned char *a38)
{
  uint64_t v44 = ((v42 ^ 0x14928C4E63466B5CLL)
       - 0x1E3E3F97478D87EFLL
       - 2 * ((v42 ^ 0x14928C4E63466B5CLL) & 0x61C1C068B8727831 ^ v42 & 0x20)) ^ v43;
  uint64_t v45 = v39 ^ (((a11 - 526347143) | (unint64_t)(a12 << 32))
             + 0x5C37298372F6318ELL
             - 2
             * (((a11 - 526347143) | (unint64_t)(a12 << 32)) & 0x5C37298372F631AFLL ^ (a11 - 526347143) & 0x21));
  unint64_t v46 = v45 ^ 0xA173397C065C8DEALL;
  uint64_t v47 = v45 ^ 0x5E8CC683F9A37215;
  uint64_t v48 = ((v45 ^ 0x5E8CC683F9A37215)
       + 0x56A2EF58890E6A15
       - 2 * ((v45 ^ 0x5E8CC683F9A37215) & 0x56A2EF58890E6A35 ^ v45 & 0x20)) ^ v40;
  uint64_t v49 = v48 ^ 0x629A61E2FE92CDE4;
  unint64_t v50 = v44 ^ (v41 - 193) ^ 0x8ABB7B075CE8A875;
  uint64_t v51 = v50 ^ (v48 ^ 0x629A61E2FE92CDE4) & v46;
  unint64_t v52 = (v48 ^ 0x9D659E1D016D321BLL) & (v38 ^ 0x77E1FD8F4F47D629) ^ v47 ^ v51;
  *((void *)&v53 + 1) = v52 ^ 0xABEF87C8808CCB5;
  *(void *)&long long v53 = v52 ^ 0x8000000000000000;
  uint64_t v54 = v52 ^ __ROR8__(v52, 39) ^ (v53 >> 61);
  uint64_t v55 = v51 ^ 0xF38BFF733C051F6;
  uint64_t v56 = v42 ^ 0x14928C4E63466B5CLL ^ v38 ^ 0x77E1FD8F4F47D629;
  unint64_t v57 = (v44 ^ 0x754484F8A3175691) & v47 ^ v56;
  uint64_t v58 = (v57 & 0x200000000 ^ 0x3AF5DFCFF377EADELL) + 2 * (v57 & 0x200000000);
  uint64_t v59 = v58 - 0x3AF5DFCFF377EADELL;
  uint64_t v60 = v58 - 0x418A8213408296;
  uint64_t v61 = 0x75AA351DD3AF5326 - v58;
  if ((v55 & v59) == 0) {
    uint64_t v61 = v60;
  }
  unint64_t v62 = ((v55 + v61 - 0x3AB4554DE0376848) ^ (0x3AB4554DE0376848 - (v55 + v61)) ^ ((v57 & 0xFFFFFFFDFFFFFFFFLL)
                                                                                    - ((v55 + v61 - 0x3AB4554DE0376848) ^ v57 & 0xFFFFFFFDFFFFFFFFLL)))
      + (v57 & 0xFFFFFFFDFFFFFFFFLL);
  unint64_t v63 = v62 - ((2 * v62) & 0xF12F46B7BD49CBC8) - 0x7685CA4215B1A1CLL;
  *((void *)&v64 + 1) = v63 ^ 0x4E5E4;
  *(void *)&long long v64 = v63 ^ 0xF897A35BDEA00000;
  uint64_t v65 = ((v64 >> 19) - ((2 * (v64 >> 19)) & 0xF12F46B7BD49CBC8) - 0x7685CA4215B1A1CLL) ^ v63;
  unint64_t v66 = v65 & 0x88A7E47BC54E7E29 ^ ((v63 >> 28) ^ 0xF897A35BDLL) & 0xBC54E7E29 | v65 & 0x77581B843AB181D6 ^ ((v63 >> 28) ^ 0xF897A35BDLL) & 0x43AB181D6;
  uint64_t v67 = (v57 << 23) ^ (v57 >> 7) ^ ((v57 >> 41) | (v57 << 57)) ^ 0x1EC655AF97FB0312;
  unint64_t v68 = v57 ^ 0x59BA08A049767665 ^ (v67 - ((2 * v67) & 0xDD065EAE32736D2ELL) - 0x117CD0A8E6C64969);
  unint64_t v69 = v68 ^ (v63 << 36) ^ v66;
  unint64_t v70 = v50 & ~v56;
  unint64_t v71 = v49 ^ v56 & (v38 ^ 0x881E0270B0B829D6);
  unint64_t v72 = v71 ^ v38 ^ 0x77E1FD8F4F47D629 ^ v70;
  unint64_t v73 = v72 ^ 0xAFDE16495C08C41 ^ ((((v72 >> 10) ^ (v72 >> 17) | (v72 << 54)) ^ 0xF5EC3F377C10F093)
                                   - 2
                                   * ((((v72 >> 10) ^ (v72 >> 17) | (v72 << 54)) ^ 0xF5EC3F377C10F093) & 0x3B620350BE55EB9ELL ^ ((v72 >> 10) ^ (v72 >> 17)) & 8)
                                   - 0x449DFCAF41AA146ALL);
  unint64_t v74 = v73 & 0x4C1D4E44A4B3031DLL ^ ((v72 << 47) ^ 0xB3EB800000000000) & 0x4C1D000000000000 | v73 & 0xB3E2B1BB5B4CFCE2 ^ ((v72 << 47) ^ 0xB3EB800000000000) & 0xB3E2800000000000;
  unint64_t v75 = v74 - ((2 * v74) & 0xC04EE6107448DBF6) + 0x602773083A246DFBLL;
  unint64_t v76 = v75 ^ (v68 - ((2 * v68) & 0xC04EE6107448DBF6) + 0x602773083A246DFBLL);
  unint64_t v77 = (v69 ^ 0x15B1A1BFFFFFFFFFLL) & (v54 ^ 0x73AEE9E5E31DB145) ^ v76;
  unint64_t v78 = ((v77 >> 41) ^ (v77 >> 7) | (v77 << 57)) ^ (v77 << 23) ^ 0xF774B04353CE1CF4;
  uint64_t v79 = v78 - ((2 * v78) & 0x546A841D64BD7AE8) + 0x2A35420EB25EBD74;
  unint64_t v80 = v69 ^ 0xEA4E5E4000000000;
  *((void *)&v64 + 1) = ~v71;
  *(void *)&long long v64 = v71 ^ 0x92CFC162FD513142;
  unint64_t v81 = v71 ^ 0x8AD87ECC974B4A06 ^ (((v71 << 58) ^ 0xC00000000000000)
                                    - ((2 * ((v71 << 58) ^ 0xC00000000000000)) & 0x3000000000000000)
                                    + 0x1817BFAE6A1A7B45);
  uint64_t v82 = ((v71 ^ 0x92CFC162FD513166) >> (v57 & 6 ^ 2) >> (v57 & 6 ^ 4)) ^ (v64 >> 1) ^ v54 ^ 0xE5D2C51CCDC9369FLL ^ (v81 - ((2 * v81) & 0x2CF859F25DA90FB4) - 0x6983D306D12B7826);
  unint64_t v83 = (v75 ^ 0x9FD88CF7C5DB9204) & v68 ^ v82;
  unint64_t v84 = v83 ^ v75 ^ ((v80 & ~v76) - ((2 * (v80 & ~v76)) & 0xC04EE6107448DBF6) + 0x602773083A246DFBLL);
  uint64_t v85 = (v84 >> 10) & 0x2000000000000;
  uint64_t v86 = v85 | 0x4048A5894B964503;
  BOOL v87 = (v85 & ~v84) == 0;
  unint64_t v88 = 0x80914B12972C8A06 - (v85 | 0x4048A5894B964503);
  if (v87) {
    unint64_t v88 = v86;
  }
  unint64_t v89 = (v84 >> 10) & 0xFFFDFFFFFFFFFFFFLL ^ 0xA3E966F75234 ^ ((v84 ^ 0x28FA59BDD48D0B6) - 0x4048A5894B964503 + v88);
  uint64_t v90 = ((v89 >> 38) & 0x2A35FE4) + (v89 >> 39) - 2 * ((v89 >> 38) & 0x2A35FE4) + 0x61376A34D751AFF2;
  *((void *)&v91 + 1) = v84 ^ 0xD0B6;
  *(void *)&long long v91 = v84 ^ 0x28FA59BDD480000;
  uint64_t v92 = (((v90 << 39) ^ (v84 << 54)) & 0xFFFFFF8000000000 | ((v90 ^ (v89 << 25)) >> 25)) ^ (v91 >> 17);
  unint64_t v93 = (((v75 ^ 0x602773083A246DFBLL) & ~v82)
       - ((2 * ((v75 ^ 0x602773083A246DFBLL) & ~v82)) & 0x2CF859F25DA90FB4)
       - 0x6983D306D12B7826) ^ v54 ^ 0xE5D2C51CCDC9369FLL;
  unint64_t v94 = v80 ^ v82 & (v54 ^ 0x8C51161A1CE24EBALL);
  unint64_t v95 = v93 ^ v94;
  unint64_t v96 = (8 * v95) ^ (v95 >> 39) ^ 0xBA3E0AB73A03F932 ^ ((*(unsigned char *)(a17
                                                                                     + (((v95 >> 57) ^ 0x2B) & 0x70 ^ 0xFE)) ^ ((((v95 >> 57) ^ 0x2B) & 0x70 ^ 0xDE) + (((v95 >> 57) ^ 0x2B) & 0x70 ^ 0x4B)) ^ 0xA1)
                                                                         - 122);
  unint64_t v97 = v95 ^ 0x28274A95E114D5A1 ^ (v96 - ((2 * v96) & 0xFEC117860C82F6EELL) + 0x7F608BC306417B77);
  unint64_t v98 = v97 + ((v95 << 25) ^ 0xADCEAB5DAC000000) - 2 * (v97 & ((v95 << 25) ^ 0xADCEAB5DAC000000));
  unint64_t v99 = v98 - 2 * (v98 & 0x334FFF7F53470167 ^ v97 & 0x20);
  unint64_t v100 = v79 ^ v77;
  unint64_t v101 = v77 ^ v94;
  *(void *)&long long v91 = __ROR8__(__ROR8__(v101 ^ 0x787EEEF1A7EE72F1, 16) ^ 0x1712D402E105A6CBLL, 48);
  unint64_t v102 = v101 ^ 0xAC7C0FF4012565E3 ^ ((v101 ^ 0xAC7C0FF4012565E3) >> 19) ^ ((unint64_t)v91 >> 28) ^ ((void)v91 << 36) ^ ((void)v91 << 45) ^ v100;
  *((void *)&v91 + 1) = v102 ^ 0x31;
  *(void *)&long long v91 = v102 ^ 0xB00D7EF633DEC800;
  unint64_t v103 = (((unint64_t)(v91 >> 9) ^ 0x284B28057C49B8D1) >> (v71 & 0x37 ^ 3) >> (v71 & 0x37 ^ 0x34)) ^ (((unint64_t)(v91 >> 9) ^ 0x284B28057C49B8D1) << 9) ^ 0x69AFF5076C8E5DAFLL;
  unint64_t v104 = v99 - 0x4CB00080ACB8FEB9;
  unint64_t v105 = ((v99 - 0x4CB00080ACB8FEB9) ^ 0xB34FFF7F53470147) & v103;
  unint64_t v106 = v92 ^ 0x8557F9309BB51A6BLL;
  unint64_t v107 = v92 ^ 0x8557F9309BB51A6BLL ^ v100;
  unint64_t v108 = v105 ^ v107 ^ 0xB00D7EF633DEC831;
  *((void *)&v91 + 1) = v108 ^ 0x118501E2B14;
  *(void *)&long long v91 = v108 ^ 0x26974A0000000000;
  uint64_t v109 = v108 ^ 0x748B7472069F4C6 ^ (((v91 >> 41) ^ (v108 << 57) ^ 0x2800000000000000)
                                     - 2
                                     * (((v91 >> 41) ^ (v108 << 57) ^ 0x2800000000000000) & 0x21DFFC5F7077DFFALL ^ (v91 >> 41) & 0x28)
                                     + 0x21DFFC5F7077DFD2);
  uint64_t v110 = v109 + ((v108 >> 7) ^ 0x4D2E9630A03C56) - 2 * (v109 & ((v108 >> 7) ^ 0x4D2E9630A03C56));
  unint64_t v111 = (v83 >> 1) ^ (v83 >> 6) ^ (v83 << 58) ^ 0xDE1FAE11AA0A9F1DLL;
  uint64_t v112 = v83 ^ 0x4918A4B752889D7ELL ^ (v111 - ((2 * v111) & 0x4CBBA651F7AEBA88) + 0x265DD328FBD75D44);
  unint64_t v113 = v112 & 0xF47FF077890F9720 ^ (v83 << 63) | v112 & 0xB800F8876F068DFLL;
  unint64_t v114 = (v107 ^ 0xB00D7EF633DEC831) & (v92 ^ 0x7AA806CF644AE594);
  uint64_t v115 = v104 ^ (v113 - ((2 * v113) & 0x669FFEFEA68E028ELL) - 0x4CB00080ACB8FEB9);
  unint64_t v116 = v114 ^ v115;
  unint64_t v117 = v114 ^ v115 ^ v106 ^ (((v107 ^ 0x4FF28109CC2137CELL) & (v102 ^ 0xB00D7EF633DEC831))
                             - ((2 * ((v107 ^ 0x4FF28109CC2137CELL) & (v102 ^ 0xB00D7EF633DEC831))) & 0x5F4B2D68C8ABB40)
                             - 0x7D05A694B9BAA260);
  *((void *)&v91 + 1) = v114 ^ v104 ^ (v113
                                                                   - ((2 * v113) & 0xA68E028E)
                                                                   + 1397162311) ^ v106 ^ (((v107 ^ 0xCC2137CE) & (v102 ^ 0x33DEC831)) - ((2 * ((v107 ^ 0xCC2137CE) & (v102 ^ 0x33DEC831))) & 0x8C8ABB40) + 1178951072) ^ 0x296;
  *(void *)&long long v91 = v117 ^ 0xF18AF50316759400;
  uint64_t v118 = v117 ^ 0x82FA596B46455DA0 ^ ((v117 ^ 0x82FA596B46455DA0) >> 17) ^ (v91 >> 10) ^ ((v117 ^ 0x82FA596B46455DA0) << 47);
  uint64_t v119 = v110 + (v118 ^ 0x16EB95D00604E32ELL) - 2 * (v110 & (v118 ^ 0x16EB95D00604E32ELL));
  unint64_t v120 = v106 & ~v115;
  unint64_t v121 = v102 ^ 0xB972F29635C83D89 ^ (((v104 ^ 0x4CB00080ACB8FEB8) & v113)
                                      - ((2 * ((v104 ^ 0x4CB00080ACB8FEB8) & v113)) & 0x12FF18C00C2DEB70)
                                      + 0x97F8C600616F5B8);
  unint64_t v122 = ((v121 ^ v120) - ((2 * (v121 ^ v120)) & 0x669FFEFEA68E028ELL) - 0x4CB00080ACB8FEB9) ^ v104;
  *((void *)&v91 + 1) = v122 ^ 0x38FE43D2BCLL;
  *(void *)&long long v91 = v122 ^ 0x3278F80000000000;
  unint64_t v123 = __ROR8__(v122, 61) ^ (v122 << 25) ^ __ROR8__((v91 >> 38) ^ (v122 >> 39 << 26) ^ 0xC258A8B62E885BC3, 26);
  *((void *)&v91 + 1) = v116 ^ 0x548B80C;
  *(void *)&long long v91 = v116 ^ 0x7955EAEC48000000;
  unint64_t v124 = ((v116 & 0x3F) << 31) ^ 0xE04699B10F1F629ALL ^ (v91 >> 27);
  unint64_t v125 = (v116 >> 6) ^ (v116 >> 1) ^ (((v124 << 27) ^ (v116 << 63)) & 0xFFFFFFFFF8000000 | (v124 >> 37));
  unint64_t v126 = v123 ^ v125;
  unint64_t v127 = v123 ^ v125 ^ 0xC51AEF5B5CC303B1;
  unint64_t v128 = v127 ^ v119 & (v118 ^ 0xE9146A2FF9FB1CD1);
  unint64_t v129 = (v128 >> 1) ^ (v128 >> 6);
  unint64_t v130 = (v129 | (v128 << 63)) ^ (v128 << 58) ^ 0x82A267617DDD3C0DLL;
  unint64_t v131 = v128 ^ 0xF65018388FDD8E16 ^ (v130 - 2 * (v130 & 0x258A060BEF620A2ELL ^ v129 & 2) + 0x258A060BEF620A2CLL);
  unint64_t v132 = v131 - ((2 * v131) & 0x1E679C0FDCE9DA9ALL);
  unint64_t v133 = (v125 ^ 0x853759C940934A2BLL) + (v127 | v123 ^ 0xBFD2496DE3AFB665) + 1;
  unint64_t v134 = v121 ^ v108;
  uint64_t v135 = (v134 >> 19) ^ (v134 << 36) ^ (v134 << 45) ^ 0x2A792D60982B22B5;
  uint64_t v136 = (v134 >> 28) ^ 0x6E04C1591;
  unint64_t v137 = v134 ^ 0xCCD87EC0E215A6B5 ^ (v135 - ((2 * v135) & 0x45B97F33EF7C417ELL) - 0x5D2340660841DF41);
  unint64_t v138 = (v137 & 0x26452CB7C950B7B6 ^ v136 & 0x7C950B7B6 | v137 & 0xD9BAD34836AF4849 ^ v136 & 0x836AF4849) ^ v110;
  unint64_t v139 = v133 & 1;
  unint64_t v140 = (v133 & 0xFFFFFFFFFFFFFFFELL) - ((2 * v133) & 0x28B7ABFBABBFB2B8) - 0x6BA42A022A2026A3;
  if ((v139 & v138) != 0) {
    unint64_t v141 = v138 - v139 - ((2 * (v138 - v139)) & 0x28B7ABFBABBFB2BALL) - 0x6BA42A022A2026A3;
  }
  else {
    unint64_t v141 = v138 ^ 0x945BD5FDD5DFD95DLL ^ v139;
  }
  unint64_t v142 = v141 ^ v140;
  uint64_t v143 = v123 ^ 0x402DB6921C50499ALL;
  unint64_t v144 = (v126 ^ 0x3AE510A4A33CFC4ELL) & (v118 ^ 0x16EB95D00604E32ELL) ^ v143 ^ v141 ^ v140;
  unint64_t v145 = ((8 * v144) ^ 0x12BB25DAC3BED128) & (v144 ^ 0x425764BB5877DA20) ^ __ROR8__(v144, 39) ^ (v144 ^ 0xB1D300D8606BE128 ^ (((v144 >> 61) ^ 2) + 2 * (((v144 >> 61) ^ 2 | 0x7FFFFFFFFFFFFFDDLL) ^ (v144 >> 61)) - 0xC7B9B9CC7E3C4B1) | (8 * v144) ^ 0x12BB25DAC3BED128);
  unint64_t v146 = (v145 ^ 0xF98321B3A4F04384 ^ (v132 - 0x70CC31F8118B12B3)) & 0xA9AD36174A77719DLL | (v145 ^ 0xF98321B3A4F04384 ^ (v132 + 0xF33CE07EE74ED4DLL)) & 0x5652C9E8B5888E62;
  unint64_t v147 = v146 - ((2 * v146) & 0x95C6C3869FB7EDA0);
  unint64_t v148 = v143 & ~v138 ^ v119;
  unint64_t v149 = ((v148 + (v148 ^ 0x8F38572C0C9BC202) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v148;
  unint64_t v150 = v149 - ((2 * v149) & 0x6F2DD913AC68726ALL);
  unint64_t v151 = v150 + 0x3796EC89D6343935;
  unint64_t v152 = ((v150 + 0x3796EC89D6343935) >> 7) ^ 0x6F2DD913AC6872;
  unint64_t v153 = (0xC869137629CBC6CALL - v150) & 0x10000000000000;
  BOOL v87 = ((v151 >> 7) & v153) == 0;
  uint64_t v154 = v153 | 0xA918B958BA67C1;
  if (!v87) {
    uint64_t v154 = 0x1523172B174CF82 - v154;
  }
  unint64_t v155 = v151 & 0xFFEFFFFFFFFFFFFFLL ^ (v151 >> 41) ^ (v151 << 23) ^ (v151 << 57) ^ (v152 - 0xA918B958BA67C1 + v154) ^ 0x196DF6954CAFF243;
  unint64_t v156 = v128 ^ v118 ^ ((v138 & ~v119) - ((2 * (v138 & ~v119)) & 0x7FC95941D08E6740) - 0x401B535F17B8CC60);
  unint64_t v157 = (v156 & 0x1000000000 | (v156 << 47)) ^ v156 & 0xFFFFFFEFFFFFFFFFLL ^ ((v156 >> 10) ^ (v156 >> 17) | (v156 << 54));
  *((void *)&v158 + 1) = v157 ^ 0x193DD5318CLL;
  *(void *)&long long v158 = v157 ^ 0x33B4EB4000000000;
  unint64_t v159 = v147 - 0x351C9E3CB0240930;
  uint64_t v160 = v157 ^ 0x2B6E32E481565769;
  uint64_t v161 = (v155 - ((2 * v155) & 0x31B5B37B7906CDCALL) + 0x18DAD9BDBC8366E5) ^ v157 ^ 0x2B6E32E481565769;
  uint64_t v162 = v159 ^ v161 & (__ROR8__((v158 >> 38) ^ 0xE2AAF8192B2B27F8, 26) ^ 0x353601C75541F9B5);
  uint64_t v163 = ((v162 ^ 0x58D8653764DBF66BLL) + 0x6DC4FB0BD4FFFF45) ^ ((v162 ^ 0x351C9E3CB024092FLL) + 1);
  unint64_t v164 = v163 - ((2 * v163) & 0xFB1B2B3CA086D3CCLL);
  uint64_t v165 = v162 ^ 0x376EF45D1F989F36;
  uint64_t v166 = (v164 - 0x2726A61AFBC961ALL) ^ v162 ^ 0x376EF45D1F989F36;
  unint64_t v167 = v166 - 2 * ((v166 + 0x2DC4FB0BD4FFFF44) & 0x208A8515CF37DDC6 ^ v166 & 2) + 0xE4F8021A437DD08;
  *((void *)&v158 + 1) = (v166 - 2 * ((v166 - 721420476) & 0xCF37DDC6 ^ v166 & 2) - 1539842808) ^ 4;
  *(void *)&long long v158 = v167 ^ 0xA08A8515CF37DDC0;
  uint64_t v168 = ((v166 << 63) | 0x5045428AE79BEEE2) ^ (v167 >> 1) ^ (v158 >> 6);
  uint64_t v169 = (v168 - 0x5F757AEA30C82240 - ((2 * v168) & 0x41150A2B9E6FBB88) + 4) ^ v167;
  unint64_t v170 = (((2 * v159) ^ 0x6A393C796048125FLL) + (v159 ^ 0xCAE361C34FDBF6D0)) & (v157 ^ 0x33B4EB593DD5318CLL);
  unint64_t v171 = (v142 - ((2 * v142) & 0x952140760E6579B0) + 0x4A90A03B0732BCD8) ^ v148;
  uint64_t v172 = ((v171 ^ 0x4A90A03B0732BCD8) << 45) ^ ((v171 ^ 0x4A90A03B0732BCD8) << 36) ^ v155 ^ __ROR8__((((v171 ^ 0x4A90A03B0732BCD8) >> 30) | ((unint64_t)~(v171 >> 28) << 62)) ^ __ROR8__(v171 ^ 0x34F392E867E90DC8 ^ ((((v171 ^ 0x4A90A03B0732BCD8) >> 19) ^ 0x12FED4FCBEDDLL) - 2 * ((((v171 ^ 0x4A90A03B0732BCD8) >> 19) ^ 0x12FED4FCBEDDLL) & 0x1536963344BALL ^ ((v171 ^ 0x4A90A03B0732BCD8) >> 19) & 0x20) - 0x166A6AC969CCBB66), 2) ^ 0xA6115EFD9A53B36ELL, 62);
  unint64_t v173 = v172 ^ 0xE87B635F1624B3E6;
  unint64_t v174 = (v159 ^ 0xCAE361C34FDBF6D0) & (v145 ^ 0x894F104BB57B5136) ^ v172 ^ 0xE87B635F1624B3E6;
  unint64_t v175 = v174 ^ v145 ^ 0xF98321B3A4F04384 ^ (v170 - ((2 * v170) & 0x1E679C0FDCE9DA9ALL) - 0x70CC31F8118B12B3);
  *((void *)&v158 + 1) = v175 ^ 0x5BE354A5BB0B2;
  *(void *)&long long v158 = v175 ^ 0x6000000000000000;
  uint64_t v176 = v175 ^ __ROR8__(v175, 39) ^ (v158 >> 61);
  unint64_t v177 = ((v172 ^ 0x3D9656FDEA6A2FLL ^ -(v172 ^ 0x3D9656FDEA6A2FLL) ^ ((v172 ^ 0xE87B635F1624B3E6)
                                                                     + 0x17B90AF614312637))
        + 0x17B90AF614312636) & (v145 ^ 0x76B0EFB44A84AEC9) ^ v161;
  unint64_t v178 = v177 ^ 0x2DB5B6AF87F64351 ^ ((v177 ^ 0x2DB5B6AF87F64351) >> 7) ^ ((v177 ^ 0x2DB5B6AF87F64351) << 23) ^ (((v177 ^ 0x2DB5B6AF87F64351) >> 41) | ((v177 ^ 0x2DB5B6AF87F64351) << 57));
  uint64_t v179 = ((v173 & ~v161) - ((2 * (v173 & ~v161)) & 0x31B5B37B7906CDCALL) + 0x18DAD9BDBC8366E5) ^ v160;
  unint64_t v180 = (v179 - ((2 * v179) & 0xFB1B2B3CA086D3CCLL) - 0x2726A61AFBC961ALL) ^ v165;
  unint64_t v181 = v180 ^ (v180 << 54) ^ (v180 << 47) ^ (v180 >> 10) ^ (v180 >> 17);
  unint64_t v182 = v177 ^ __ROR8__(__ROR8__(v174, 61) ^ 0x500CB82D79BEE91BLL, 3);
  uint64_t v183 = v182 ^ (v182 << 36) ^ v178 ^ ((((v182 >> 19) ^ (v182 >> 28) | (v182 << 45)) ^ 0x21278C61855392E3)
                                     - 2
                                     * ((((v182 >> 19) ^ (v182 >> 28) | (v182 << 45)) ^ 0x21278C61855392E3) & 0x2F4FBB7F11464097 ^ ((v182 >> 19) ^ (v182 >> 28)) & 0x10)
                                     + 0x2F4FBB7F11464087);
  uint64_t v184 = v183 ^ 0x8629CF9A50749BBLL;
  unint64_t v185 = v181 ^ 0xE2A73BAA07A74E5ALL ^ (v178 - ((2 * v178) & 0x7F1C7E7308A7F4EELL) + 0x3F8E3F398453FA77);
  unint64_t v186 = (v183 ^ 0xF79D63065AF8B644) & (v176 ^ 0xA9109542E9BBBCELL) ^ v185;
  unint64_t v187 = v169 & (v176 ^ 0xF56EF6ABD1644431) ^ v183 ^ 0x8629CF9A50749BBLL;
  *((void *)&v158 + 1) = v187 ^ v186 ^ 0x62F93;
  *(void *)&long long v158 = v187 ^ v186 ^ 0x69309AC4CA80000;
  uint64_t v188 = v187 ^ v186 ^ 0x5EC4ADB0FE0BC7A7 ^ (((v158 >> 19) ^ ((v187 ^ v186) << 36) ^ 0xCAE2F93000000000)
                                             - 2
                                             * (((v158 >> 19) ^ ((v187 ^ v186) << 36) ^ 0xCAE2F93000000000) & 0x5857A41CB2A5E83CLL ^ (v158 >> 19) & 8)
                                             + 0x5857A41CB2A5E834);
  uint64_t v189 = (v188 ^ -v188 ^ ((((v187 ^ v186) >> 28) ^ 0x69309AC4) - (v188 ^ ((v187 ^ v186) >> 28) ^ 0x69309AC4)))
       + (((v187 ^ v186) >> 28) ^ 0x69309AC4);
  unint64_t v190 = v189 - 0x1E3E3F97478D87EFLL - ((2 * v189) & 0xC38380D170E4F022);
  LOBYTE(v165) = *(unsigned char *)(a30 + ((v189 + 17 - ((2 * v189) & 0x22)) ^ 0x57));
  *a35 = ((unsigned __int16)(v189 + 30737 - ((2 * v189) & 0xF022)) >> 8) ^ 0x78;
  a21[5] = ((v165 ^ 0x94) >> 6) | (4 * (v165 ^ 0x94));
  uint64_t v191 = (v190 >> 12) & 0xF0 | (v190 >> 20) & 0xF;
  LOBYTE(v165) = ((v190 >> 12) & 0xF0 | (v190 >> 20) & 0xF) ^ 0xD9;
  *a36 = (*(unsigned char *)(a17 + (v191 ^ 0xD9)) ^ 0xA1)
       + (v191 ^ 0x6C)
       + (v191 ^ 0xF9)
       - 2 * (((v191 ^ 0x6C) + (v191 ^ 0xF9)) & (*(unsigned char *)(a17 + (v191 ^ 0xD9)) ^ 0xA1))
       - 122;
  LOBYTE(v191) = *(unsigned char *)(a30 + (((v189 - 1200457711 - ((2 * v189) & 0x70E4F022u)) >> 24) ^ 0xFELL)) ^ 0x94;
  *a37 = (v191 >> 6) | (4 * v191);
  v176 ^= 0x79FAFD035AE7BD83uLL;
  unint64_t v192 = (v169 - ((2 * v169) & 0xE6D7E8AEE8F80C9ALL) + 0x736BF457747C064DLL) ^ v176;
  unint64_t v193 = (((v181 ^ 0xDD29049383F4B42DLL) & ~v192 ^ v187)
        - ((2 * ((v181 ^ 0xDD29049383F4B42DLL) & ~v192 ^ v187)) & 0xE6D7E8AEE8F80C9ALL)
        + 0x736BF457747C064DLL) ^ v176;
  *(void *)&long long v158 = __ROR8__((v193 >> 13) & 0x7000000000000 ^ __ROR8__(v193 ^ 0x8A14063338F2ECD6 ^ (((8 * v193) ^ (v193 << 25) ^ 0xBF0681A6CFCC6AD0)- ((2* ((8 * v193) ^ (v193 << 25) ^ 0xBF0681A6CFCC6AD0)) & 0xD02E10C96F16C310)- 0x17E8F79B48749E74), 16) ^ 0x59AF12027FFB7224, 48);
  uint64_t v194 = (v158 ^ -(uint64_t)v158 ^ (((v193 >> 39) ^ 0xC4061C) - (v158 ^ (v193 >> 39) ^ 0xC4061C)))
       + ((v193 >> 39) ^ 0xC4061C);
  LODWORD(v176) = *(unsigned __int8 *)(a16
                                     + ((((v190 >> 31) & 0xB8 ^ 0x90) + (BYTE4(v190) ^ 0xB4)) ^ 0x77));
  DWORD1(v158) = (v176 >> 6) ^ 0x7F ^ -((v176 >> 6) ^ 0x7F) ^ (((v176 >> 6) | (8 * v176))
                                                                                         - 127);
  LODWORD(v158) = (DWORD1(v158) + 4 * v176) << 24;
  a21[1] = v194 ^ 0xAC;
  a23[6] = (BYTE6(v190) ^ 0xC1) - ((2 * BYTE6(v190)) & 4) - 126;
  a21[4] = BYTE2(v194) ^ 0x24;
  *a19 = (unint64_t)v158 >> 26;
  unint64_t v195 = v192 ^ (v181 ^ 0x22D6FB6C7C0B4BD2) & v178;
  unint64_t v196 = ((v195 ^ v184 & ~v185) - ((2 * (v195 ^ v184 & ~v185)) & 0x7F1C7E7308A7F4EELL) + 0x3F8E3F398453FA77) ^ v181 ^ 0xE2A73BAA07A74E5ALL;
  unint64_t v197 = v196
       - ((2 * v196) & 0x9E2B77E5823BC0A6)
       + 0x4F15BBF2C11DE053
       - ((2 * (v196 - ((2 * v196) & 0x9E2B77E5823BC0A6) + 0x4F15BBF2C11DE053)) & 0xF683005588F1948ALL)
       + 0x7B41802AC478CA45;
  unint64_t v198 = v186 ^ (v186 << 23) ^ ((v186 >> 7) ^ (v186 >> 41) | (v186 << 57));
  unint64_t v199 = (v195 >> 1) ^ (v195 >> 6) ^ ((v195 << 58) ^ 0xB800000000000000) & 0xE7FFFFFFFFFFFFFFLL ^ (((v195 << 58) ^ 0xB800000000000000) & 0x1800000000000000 ^ v195 & 0x183B3BDBC4516A26 | v195 & 0xE7C4C4243BAE95D9 ^ (v195 << 63));
  a23[12] = (BYTE3(v194) ^ 0x72) + ~(2 * ((BYTE3(v194) ^ 0x72) & 3 ^ BYTE3(v194) & 1)) - 125;
  *(unsigned char *)(a25 + 29) = HIBYTE(v190) ^ 0xE1;
  a23[13] = (BYTE5(v190) ^ 0xC0) - ((2 * BYTE5(v190)) & 4) - 126;
  a18[6] = (v194 ^ 0x12027FFB722459ACuLL) >> (v165 & 8) >> (~(_BYTE)v165 & 8);
  LODWORD(v195) = *(unsigned __int8 *)(a16 + (((BYTE4(v194) ^ 0xFB) - 36) ^ 0x77));
  a18[4] = BYTE6(v194) ^ 2;
  *a21 = HIBYTE(v194) ^ 0x12;
  a18[2] = BYTE1(v199) ^ 5;
  *a38 = BYTE5(v194) ^ 0x7F;
  LOBYTE(v173) = ((((v195 >> 6) | (4 * v195)) ^ 0x7F) >> 2) | ((((v195 >> 6) | (4 * v195)) ^ 0x7F) << 6);
  a21[2] = v199 ^ 0xDB;
  unint64_t v200 = v197 ^ (v197 << 47) ^ (v197 >> 10) ^ (v197 << 54);
  unint64_t v201 = v200 ^ (v197 >> 17);
  *a18 = v173;
  char v202 = *(unsigned char *)(a13 + (((BYTE2(v199) ^ 0x76) + (BYTE2(v199) ^ 0xFFFFFFAA) + 1) ^ 0xFFFFFFFE) + (BYTE2(v199) ^ 0x76));
  *a31 = BYTE3(v199) ^ 0x87;
  a21[3] = BYTE6(v199) ^ 0x5D;
  unsigned __int8 v203 = (v202 ^ 0xF2 ^ (16 * v202) & 0x40) & 7 ^ 0x35 ^ ((unint64_t)((v202 ^ 0xF2 ^ (16 * v202) & 0x40) >> 3) << ((v194 ^ 0xAC) & (v194 ^ 0x50)) << ((v194 ^ 0xAC) & (v194 ^ 0x50) ^ 3));
  a21[11] = v201 ^ 0x4B;
  *(unsigned char *)(a25 + 28) = BYTE5(v199) ^ 0x22;
  a21[13] = ((v203 >> 3) | (32 * v203)) ^ 0xA6;
  uint64_t v204 = (v201 >> 20) & 0xF0 | (v201 >> 28);
  *a32 = BYTE2(v201) ^ 0xDC;
  a23[8] = (HIBYTE(v199) ^ 0xA1) - ((2 * HIBYTE(v199)) & 4) - 126;
  a23[17] = (BYTE4(v199) ^ 0x3C) - ((2 * BYTE4(v199)) & 4) - 126;
  a23[11] = (BYTE1(v201) ^ 0xB6) - ((2 * (BYTE1(v201) ^ 0xB6)) & 4) - 126;
  LOBYTE(v201) = (v204 ^ 0x3E) + (v204 ^ 0xAB);
  LOBYTE(v204) = *(unsigned char *)(a17 + (v204 ^ 0x1E));
  *(unsigned char *)a25 = BYTE6(v200) ^ 0x3D;
  *a33 = BYTE5(v201) ^ 0xED;
  *(unsigned char *)(a25 + 15) = BYTE3(v198) ^ 0x79;
  a23[19] = v198 ^ 0x10;
  a18[5] = BYTE1(v198) ^ 0x3D;
  a21[8] = BYTE2(v198) ^ 3;
  a23[18] = (v201 ^ v204 ^ 0xA1) + ((2 * (v201 ^ v204)) | 0xFB) + 9;
  a21[6] = BYTE4(v201) ^ 0xEA;
  a18[7] = HIBYTE(v200) ^ 0x8F;
  LOBYTE(v189) = *(unsigned char *)(a30 + (BYTE4(v198) ^ 0x19)) ^ 0x94;
  *(unsigned char *)(a25 + 14) = BYTE5(v198) ^ 0x49;
  a18[3] = HIBYTE(v198) ^ 0xBE;
  a18[1] = BYTE6(v198) ^ 0x75;
  *(unsigned char *)(a25 + 16) = (v189 >> 6) | (4 * v189);
  *(_DWORD *)(a25 + 4) = a15 - 1038820788;
  JUMPOUT(0x1000F0EA0);
}

uint64_t sub_1000F0F18@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((v2 == ((a1 - 1436448663) & 0x559E72FE ^ 0x50CB8B47))
                                     * (((a1 + 1052456656) & 0xC144C7DB) - 864)) ^ a1)))();
}

uint64_t sub_1000F0F90(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  unint64_t v10 = v6 + v7;
  *(unsigned char *)(v10 + a5 - 1) = a4;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v10 < 0x38) * v8) ^ v5)))();
}

uint64_t sub_1000F0FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,int a22,int a23)
{
  BOOL v27 = a20 - v24 == 1388428834 && a23 == ((v23 + 1742163152) & 0x9828B2DF ^ (a6 - 512));
  return (*(uint64_t (**)(void))(v25 + 8 * ((1266 * v27) ^ v23)))();
}

void sub_1000F101C()
{
}

uint64_t sub_1000F1038(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v19 = ((v7 + 805846634) | 0x889000A4) ^ a1 ^ 0xE467FCC;
  int v20 = (a7 ^ v11)
      + v12
      + *(_DWORD *)(a4 + 4 * (v18 + v16))
      + (((v14 ^ 0x4921C29F | v19) + v11 - (v10 & (2 * (v14 ^ 0x4921C29F | v19)))) ^ v9)
      + (*(_DWORD *)(v8 + 4 * (*(unsigned char *)(a3 + v18 + v16) - 79)) ^ v15);
  unsigned int v21 = (v20 + v11 - (v10 & (2 * v20))) ^ v11;
  unsigned int v22 = ((v21 << (*(unsigned char *)(a5 + v18 + v16) - 23)) | (v21 >> (23 - *(unsigned char *)(a5 + v18 + v16)))) + v19;
  return (*(uint64_t (**)(void, uint64_t))(v13 + 8 * ((1356 * (v18 + 1 == v17 + 48)) ^ v7)))(v22 + v11 - (v10 & (2 * v22)), v14);
}

void sub_1000F1128()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xC0D)))(16);
  uint64_t v4 = *(uint64_t **)(v2 + 8 * (v0 - 960));
  *uint64_t v4 = v3;
  (*(void (**)(void))(v1 + 8 * (v0 ^ 0x3D4)))();
  int v5 = (void *)(*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1037)))(8);
  uint64_t v6 = *(void **)(v2 + 8 * (v0 ^ 0x42B));
  *uint64_t v6 = v5;
  *int v5 = 0xBDBDBDBDBDBDBDBDLL;
  uint64_t v7 = *(void *)(v2 + 8 * (v0 - 985));
  *(_DWORD *)uint64_t v7 = 0;
  **(_DWORD **)(v2 + 8 * (v0 ^ 0x424)) = 0;
  uint64_t v8 = (unsigned char *)*v4;
  int v9 = (unsigned char *)*v6;
  v9[6] = 26;
  *uint64_t v8 = -77;
  v9[4] = -34;
  int v10 = *(unsigned char **)(v2 + 8 * (v0 ^ 0x46C));
  *(v10 - 6) = -51;
  v10[1] = -30;
  *(unsigned char *)(v7 + 25) = 68;
  v10[6] = 58;
  v8[4] = 73;
  *(v10 - 4) = -109;
  *(unsigned char *)(v7 + 24) = 83;
  **(unsigned char **)(v2 + 8 * (v0 - 1011)) = -113;
  v8[1] = 80;
  **(unsigned char **)(v2 + 8 * (v0 - 867)) = 88;
  v10[5] = -83;
  **(unsigned char **)(v2 + 8 * (v0 ^ 0x49E)) = 1;
  v8[2] = -44;
  **(unsigned char **)(v2 + 8 * (v0 ^ 0x4B7)) = 51;
  v9[2] = 80;
  v8[6] = -11;
  **(unsigned char **)(v2 + 8 * (v0 ^ 0x4BB)) = 25;
  **(unsigned char **)(v2 + 8 * (int)(v0 & 0xAFA17124)) = 39;
  v8[5] = -22;
  v8[3] = -15;
  *int v10 = -28;
  *(unsigned char *)(v7 + 10) = -52;
  v10[7] = 71;
  **(unsigned char **)(v2 + 8 * (v0 ^ 0x46E)) = -109;
  v8[13] = 99;
  **(unsigned char **)(v2 + 8 * (v0 - 911)) = 119;
  v9[7] = -80;
  *int v9 = -122;
  v8[8] = 34;
  *(v10 - 1) = 5;
  v8[11] = 54;
  *(unsigned char *)(v7 + 11) = 3;
  v9[1] = 73;
  v9[5] = -5;
  *(unsigned char *)(v7 - 4) = 23;
  *(unsigned char *)(v7 + 12) = -36;
  v9[3] = 59;
  int v11 = (unsigned char *)*v4;
  v11[10] = 45;
  v11[15] = -87;
  *(v10 - 8) = -90;
  v10[3] = 14;
  *(unsigned char *)(v7 + 21) = -92;
  *(v10 - 3) = 91;
  v10[2] = -94;
  *(unsigned char *)(v7 + 23) = 52;
  *(v10 - 12) = 115;
  *(_WORD *)(v7 + 6) = -3774;
  *(unsigned char *)(v7 + 18) = -121;
  *(unsigned char *)(v7 + 16) = 77;
  *(unsigned char *)(v7 + 22) = 113;
  v11[9] = 31;
  v10[8] = -115;
  *(v10 - 2) = 114;
  *(unsigned char *)(v7 + 4) = -85;
  *(v10 - 10) = -21;
  *(v10 - 7) = 91;
  *(unsigned char *)(v7 - 2) = 34;
  v10[4] = -113;
  v11[12] = -86;
  *(v10 - 9) = 112;
  v11[7] = -90;
  v11[14] = -33;
  *(unsigned char *)(v7 + 17) = -105;
  *(unsigned char *)(v7 - 1) = -98;
  *(v10 - 5) = -94;
  *(unsigned char *)(v7 + 20) = -119;
  *(unsigned char *)(v7 + 26) = 58;
  *(unsigned char *)(v7 + 8) = 73;
  *(unsigned char *)(v7 - 3) = -15;
  *(v10 - 11) = -54;
  *(unsigned char *)(v7 + 15) = 120;
  *(unsigned char *)(v7 + 9) = 69;
  *(_WORD *)(v7 + 13) = -4168;
  *(unsigned char *)(v7 + 5) = -105;
  *(unsigned char *)(v7 + 19) = 79;
  JUMPOUT(0x1000F1A04);
}

uint64_t sub_1000F1A44@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v28 = v11;
  int v18 = ((-1220792269 - ((v17 - 144) | 0xB73C3033) + ((v17 - 144) | 0x48C3CFCC)) ^ 0xB25D3C9A) * v13;
  *(void *)(v17 - 120) = v16;
  *(void *)(v17 - 144) = v12;
  *(_DWORD *)(v17 - 136) = (a1 + 307) ^ v18;
  *(_DWORD *)(v17 - 132) = (v14 + 268946450 + (a1 ^ 0x62A)) ^ v18;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (a1 ^ 0x321)))(v17 - 144);
  return sub_1000FB0A8(v19, v20, v21, v22, v23, v24, v25, v26, a2, a3, a4, a5, v28, a7, a8, a9, a10, a11);
}

uint64_t sub_1000F1AD4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((215 * (unk_100186550 == 0)) ^ v0)))();
}

uint64_t sub_1000F1B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v7 = v5 < ((a5 - 398) | 0x440u) - 1459;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v7 | (2 * v7)) ^ a5)))();
}

void sub_1000F1B48()
{
  *(_DWORD *)(v1 - 128) = v0 + 2;
  JUMPOUT(0x1000F1C30);
}

uint64_t sub_1000F1CB4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((109 * ((v0 & 0x18) == 284 * ((((v1 ^ 0x117) - 1802) | 0xA0) ^ 0xA5) - 1420)) ^ v1 ^ 0x117)))();
}

void sub_1000F1D04()
{
}

void sub_1000F1D10(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0x716C65CCC677F525) = v2;
  *(_DWORD *)(v1 + 36) = -1008821960;
}

uint64_t sub_1000F1D68(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  HIDWORD(a20) += 1364664196;
  v22.n128_u64[0] = 0xA8A8A8A8A8A8A8A8;
  v22.n128_u64[1] = 0xA8A8A8A8A8A8A8A8;
  v23.n128_u64[0] = 0x5454545454545454;
  v23.n128_u64[1] = 0x5454545454545454;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * ((1656 * (a17 < HIDWORD(a16))) ^ a21)))(3497873977, 3426637972, 150336455, 59268147, 3861695381, 4235699149, 4144630841, 1649409361, a1, a2, a3, a4, v22, v23, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20);
}

uint64_t sub_1000F1F0C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1484 * (a1 - 534753792 < ((v2 + 771) ^ v1 ^ (v2 - 1723820740) & 0x66BF6FEFu))) ^ v2)))();
}

uint64_t sub_1000F1F6C()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((((v2 ^ 0x6DC) + (v2 ^ 0x428) - 509) * (v0 == v1)) ^ v2)))(2326987778);
}

uint64_t sub_1000F1FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56)
{
  unint64_t v58 = STACK[0x4E0];
  int v59 = *(unsigned __int8 *)(STACK[0x4E0] - 0x7C014C707EC207C8) ^ 0xDB;
  if (v59 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * (((*(_DWORD *)(v58 - 0x7C014C707EC207CCLL) != 891668432) * a56) | (v56 + 1127))))(a1, a2, 1138661694, a4, 889516850, a6, 61, 29);
  }
  if (v59 != 1) {
    JUMPOUT(0x1000F20F8);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * (((*(_DWORD *)(v58 - 0x7C014C707EC207CCLL) != 891668432) * (((v56 + 747) | 0x50) - 1059)) ^ (v56 + 568))))(a1, a2, 1138661694, a4, 889516850, a6, 61, 4294967222);
}

void sub_1000F2138()
{
}

void sub_1000F2140()
{
}

uint64_t sub_1000F2154()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((STACK[0x4D8] == 0) * (((3 * (v0 ^ 0x80)) ^ 0x569) - 416)) ^ (v0 + 135))))();
}

uint64_t sub_1000F2190@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 7 + (v2 - 320)) = *(void *)(a1 + (v2 - 320) - 7);
  return (*(uint64_t (**)(void))(v4 + 8 * (v1 + 1375)))();
}

uint64_t sub_1000F21E4@<X0>(int a1@<W6>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  int v9 = v3 + 1;
  *(unsigned char *)(v5 + (v9 + v7)) = *(unsigned char *)(v4 + a3 + a2);
  BOOL v10 = v7 + v9 + 1 < ((14 * (v6 ^ a1)) ^ 0x78u);
  return (*(uint64_t (**)(void))(v8 + 8 * ((v10 | (16 * v10)) ^ v6)))();
}

void sub_1000F21EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(void *)(v20 - 144) = v17;
  *(void *)(v20 - 136) = v18;
  *(void *)(v20 - 104) = v17;
  *(_DWORD *)(v20 - 112) = (v16 + 1472) ^ (1755732067
                                         * (((((v20 - 144) | 0xBA7D3656) ^ 0xFFFFFFFE) - (~(v20 - 144) | 0x4582C9A9)) ^ 0x9B447472));
  *(void *)(v20 - 128) = v19;
  *(void *)(v20 - 120) = a16;
  JUMPOUT(0x1000F224CLL);
}

uint64_t sub_1000F226C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  BOOL v14 = v10 < v12;
  if (v14 == v11 + 1 > a8) {
    BOOL v14 = v9 + v11 + 132 < v10;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((!v14 * a3) ^ v8)))();
}

uint64_t sub_1000F22E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  return (*(uint64_t (**)(void))(v38
                              + 8
                              * ((23 * ((((v39 + v37) ^ ((a37 - 1024156329) < 0x10)) & 1) == 0)) ^ v37)))();
}

uint64_t sub_1000F2334(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((906 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x181u)))();
}

uint64_t sub_1000F2360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,unint64_t a24)
{
  LODWORD(STACK[0x268]) = a3;
  LODWORD(STACK[0x26C]) = a22;
  STACK[0x270] = a24;
  LODWORD(STACK[0x278]) = (((v27 - 1031684123) | 0x4280002) ^ 0xBE3377D7) - v24 + a23;
  STACK[0x280] = a1 + (v24 + 1330136732);
  int v30 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48 * v26 + 8))(a11, a18);
  return (*(uint64_t (**)(void))(v28 + 8 * ((114 * (v30 + v25 - (v29 & (2 * v30)) == v25)) ^ v27)))();
}

uint64_t sub_1000F2434()
{
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8 * ((31 * (((v2 == v1) ^ ((v0 + 9) ^ v0)) & 1)) ^ v0)))(17);
}

uint64_t sub_1000F2478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v17 - 128) = v14;
  *(void *)(v17 - 120) = a13;
  *(_DWORD *)(v17 - 136) = v16 + ((2 * ((v17 - 136) & 0x25061FA0) - (v17 - 136) - 621158306) ^ 0x4E54A907) * v13 + 1079;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 1743)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((1550
                                              * (*(_DWORD *)(v17 - 132) > ((v16 + 926833519) & 0xC8C1A7AE ^ 0x5543FD27))) ^ v16)))(v18);
}

uint64_t sub_1000F2530(uint64_t a1, unsigned int a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1550 * (*(_DWORD *)(*v6 + 4 * a2) == (a3 ^ (v4 + 1026)))) ^ v5)))();
}

uint64_t sub_1000F2564@<X0>(int a1@<W3>, int a2@<W8>)
{
  *(unsigned char *)(v4 + v3) = *(unsigned char *)(v7 + (v2 + v9))
                      - (v5 & (2 * *(unsigned char *)(v7 + (v2 + v9))))
                      + 84;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v3 == 63) * v6) ^ (a1 + a2 - 671))))();
}

uint64_t sub_1000F25AC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  return (*(uint64_t (**)(void))(v27 + 8 * ((((a27 - 342) ^ v28 ^ 0x260) * (a2 != 0)) ^ (v28 - 353))))();
}

uint64_t sub_1000F25E0(uint64_t a1)
{
  unint64_t v3 = STACK[0x510];
  unint64_t v4 = LODWORD(STACK[0x4BC]);
  STACK[0x4A0] = v4;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v2
                                                              + 8
                                                              * (((v4 == ((v1 - 1174) | 0x80) - 390)
                                                                * (v1 - 1390)) ^ v1)))(a1, v3);
}

uint64_t sub_1000F261C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  STACK[0x5B0] -= 1616;
  LODWORD(STACK[0x4E8]) = a4 - 210;
  return (*(uint64_t (**)(void))(v5 + 8 * (((STACK[0x4D8] == 0) * (((3 * (v4 ^ 0x80)) ^ 0x569) - 416)) ^ (v4 + 135))))();
}

uint64_t sub_1000F2674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * (v15 ^ (2
                                      * (((v17 - 1576401730 + ((v15 - 584) | 0x29) - 1206) & 0xFFFFFFFC)
                                                     - a15 == -1576401730)))))();
}

void sub_1000F26B8()
{
}

uint64_t sub_1000F26C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v28 = 460628867
      * ((((v27 - 144) ^ 0x5A576E4) + 1093668338 - 2 * (((v27 - 144) ^ 0x5A576E4) & 0x41300DF2)) ^ 0x803F96B);
  *(void *)(v27 - 136) = a23;
  *(_DWORD *)(v27 - 144) = v28;
  *(_DWORD *)(v27 - 128) = v28 + v26 - 296;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v26 ^ 0x597)))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(a25
                                            + 8
                                            * ((170
                                              * (*(_DWORD *)(v27 - 140) != ((v26 - 1770274431) & 0x69843DBE)
                                                                         - 1022761415)) ^ v26)))(v29);
}

uint64_t sub_1000F26CC@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1225 * (a2 == ((v4 - 1765369691) & 0x819F9BE1 ^ (v2 - 96)))) ^ (v4 + a1))))();
}

uint64_t sub_1000F2714@<X0>(uint64_t a1@<X0>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * (((a13 + a2 + v15 + 58) * (a3 == v13)) ^ (a2 + v15 - 9))))(a1);
}

uint64_t sub_1000F2758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  unint64_t v56 = STACK[0x510];
  unsigned int v57 = ((v53 - 1502858582) & 0x5993CFDD ^ LODWORD(STACK[0x4BC]) ^ 0x3FE87266)
      + ((v53 + 66526443) & 0x7C08E7B7 ^ 0xF3F7A9C9)
      + ((2 * LODWORD(STACK[0x4BC])) & 0x7FD0EFF4);
  int v58 = 1755732067 * ((-2 - ((~(v55 - 200) | 0x111A9AD9) + ((v55 - 200) | 0xEEE56526))) ^ 0xCFDC2702);
  *(void *)(v55 - 168) = a49;
  *(void *)(v55 - 160) = a50;
  *(_DWORD *)(v55 - 152) = v58 + 171581999 + v51;
  *(void *)(v55 - 144) = v52;
  *(_DWORD *)(v55 - 184) = v57 ^ v58;
  *(_DWORD *)(v55 - 180) = v58 + v53 - 297;
  *(unsigned char *)(v55 - 176) = 99 * ((-2 - ((~(v55 + 56) | 0xD9) + ((v55 + 56) | 0x26))) ^ 2) - 56;
  *(void *)(v55 - 200) = v56;
  *(void *)(v55 - 192) = v50;
  uint64_t v59 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (v53 + 1296)))(v55 - 200);
  int v60 = *(_DWORD *)(v55 - 148);
  LODWORD(STACK[0x520]) = v60;
  return (*(uint64_t (**)(uint64_t))(v54 + 8 * ((1991 * (v60 == -1008821960)) ^ v53)))(v59);
}

void sub_1000F2890()
{
}

uint64_t sub_1000F2898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned int a24)
{
  int v30 = v24 ^ 0x52D;
  int v31 = (v24 ^ 0x52D) - a5 - 100;
  int v32 = 628203409 * ((((v29 - 152) | 0x17931FE0) - (v29 - 152) + ((v29 - 152) & 0xE86CE018)) ^ 0x951B13D3);
  *(void *)(v29 - 112) = a7;
  *(void *)(v29 - 104) = a11;
  *(_DWORD *)(v29 - 136) = (v24 ^ 0x52D) - v32 + 269;
  *(_DWORD *)(v29 - 132) = v28 - v32 - 375727839;
  *(void *)(v29 - 128) = a13;
  *(void *)(v29 - 152) = a12;
  *(void *)(v29 - 144) = a10;
  uint64_t v35 = v25;
  (*(void (**)(uint64_t))(v27 + 8 * ((v24 ^ 0x52D) + 1663)))(v29 - 152);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27
                                                                                                 + 8
                                                                                                 * (int)(((*(_DWORD *)(v29 - 120) == v26 + ((v30 - 46721410) & 0x2C8ED56) - 1366) * (v31 ^ 0xC6A9C429)) ^ v30)))(a7, a24, 2783874765, 1511092530, 961953915, 1024156329, v35);
}

void sub_1000F29BC()
{
}

uint64_t sub_1000F2A50@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v69 = 460628867 * ((((2 * v66) | 0x38EDED2) - v66 - 29847401) ^ 0x4D51ED14);
  *(_DWORD *)(v68 - 192) = (v64 + 121) ^ v69;
  *(void *)(v68 - 200) = a62;
  *(_DWORD *)(v68 - 168) = a1 ^ v69;
  *(void *)(v68 - 184) = v65;
  *(void *)(v68 - 176) = a61;
  (*(void (**)(uint64_t))(v67 + 8 * (v64 + 1949)))(v68 - 200);
  int v70 = *(_DWORD *)(v68 - 164);
  STACK[0x4C8] = v62;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v67 + 8 * ((1578 * (v70 == v63 + v64 + 203 - 281)) ^ v64)))(84, 213789419, 4286406272, 1008845537, 717574018, 3711884215, 72, 4277845676, (__n128)0);
}

void sub_1000F2B44()
{
  *(_DWORD *)(v2 - 140) = v0;
  *(_DWORD *)(v2 - 136) = v1;
  *(_DWORD *)(v2 - 144) = v0 & 0xFFFFFFF8;
  *(_DWORD *)(v2 - 128) = -(v0 & 0xFFFFFFF8);
  JUMPOUT(0x1000F2BA8);
}

uint64_t sub_1000F2CAC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v10 = a2 + v6;
  int v11 = *(_DWORD *)(a4 + 4 * (v10 - 8)) ^ *(_DWORD *)(a4 + 4 * (v10 + v4 - 88 - 1303));
  int v12 = v11 + v9 - (v7 & (2 * v11));
  int v13 = *(_DWORD *)(a4 + 4 * (v10 - 16)) ^ *(_DWORD *)(a4 + 4 * (v10 - 14));
  HIDWORD(v14) = v13 ^ (a3 - 6) ^ v12;
  LODWORD(v14) = v13 ^ ~v12;
  *(_DWORD *)(a4 + 4 * (v5 + a2)) = (v14 >> 31) + v9 - (v7 & (2 * (v14 >> 31)));
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v5 + 1 + a2) > 0x4F) * a1) ^ v4)))();
}

uint64_t sub_1000F2D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v15 = (a6 + v11);
  *(unsigned char *)(*(void *)(v14 - 120) + v15) = *(unsigned char *)(v6 + v15) ^ *(unsigned char *)(v7 + (v15 & 0xF)) ^ *(unsigned char *)(v9 + (v15 & 0xF)) ^ *(unsigned char *)(v8 + (v15 & 0xF)) ^ ((v15 & 0xF) * ((v12 ^ 0x49) - 108)) ^ 0x54;
  return (*(uint64_t (**)(void))(v13 + 8 * ((1579 * (a6 - 1 == v10)) ^ (v12 - 1696))))();
}

uint64_t sub_1000F2DAC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1843 * (*(_DWORD *)(a1 + 4 * (v3 + v4 + 5 * (v2 ^ 0x679u))) == (v2 ^ 0x49B ^ v1))) ^ (v2 - 1148))))();
}

uint64_t sub_1000F2DF8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v5 & (2 * (*(unsigned __int8 *)(a2 + 5) - 242)))
                                 + ((*(unsigned __int8 *)(a2 + 5) - 242) ^ v4) == v4)
                                * (v3 ^ 0x191)) ^ v3)))();
}

void sub_1000F2E34()
{
}

uint64_t sub_1000F2E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                         + 8
                                                                                         * ((229
                                                                                           * ((((v6 + v5 + 136315048) < 8) ^ ((v7 ^ 6) - 39)) & 1)) ^ v7)))(a1, a2, a3, a4, a5, 2896301239);
}

uint64_t sub_1000F2E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned int a29,uint64_t a30,unsigned int a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unsigned int a36)
{
  uint64_t v41 = v37 ^ a30;
  uint64_t v42 = v39 ^ 0x15C30B8FB2580355 ^ (v38 - 1604);
  unint64_t v43 = (v42 + a8 - ((2 * v42) & 0xF6AD1AF13E767E92)) ^ a3;
  uint64_t v44 = __ROR8__((((v38 - 781) | 0x20u) - 0x560ACAA2CD855563) ^ __ROR8__(v41, 12), 52);
  uint64_t v45 = v44 ^ 0x322397601515A6F7;
  unint64_t v46 = ((v44 ^ 0x322397601515A6F7)
       + 0x76CD56ED447F0496
       - ((2 * (v44 ^ 0x322397601515A6F7)) & 0xED9AADDA88FE092CLL)) ^ a7;
  uint64_t v47 = v42 ^ v36;
  unint64_t v48 = (v43 ^ 0x97FBFBAE09CFCCD0) & (v44 ^ 0x322397601515A6F7);
  v43 ^= 0x68040451F630332FuLL;
  unint64_t v49 = (v46 ^ 0xE4C1C31231B4037DLL) & (v44 ^ 0xCDDC689FEAEA5908) ^ v43;
  unint64_t v50 = v47 ^ 0x2B3EFD9B1746AAE5 ^ (v48 - ((2 * v48) & 0x420F5BA30A4DD676) + 0x2107ADD18526EB3BLL);
  uint64_t v51 = v46 ^ 0x1B3E3CEDCE4BFC82;
  unint64_t v52 = v46 ^ 0xE4C1C31231B4037DLL ^ (v47 ^ 0xA39504A926041DELL) & (v36 ^ 0xF5C6AFB56D9FBE21);
  *((void *)&v53 + 1) = v36 ^ 0x41DE;
  *(void *)&long long v53 = v36 ^ 0xA39504A92600000;
  unint64_t v54 = v51 & (v36 ^ 0xA39504A926041DELL) ^ v45 ^ v49;
  unint64_t v55 = v47 ^ 0xF5C6AFB56D9FBE21;
  unint64_t v56 = __ROR8__(__ROR8__(v50, 38) ^ __ROR8__(v49, 38) ^ 0xB8AB4977971512F1, 26);
  unint64_t v57 = v43 & v55;
  LOBYTE(v43) = *(unsigned char *)(a32 + ((((v54 >> 61) ^ 4) + 241) ^ 0x78));
  char v58 = 4 * (v43 ^ 0xDD) - ((8 * (v43 ^ 0xDD)) & 0x90) + 73;
  LOBYTE(v55) = (v43 ^ 0xDD) - ((2 * (v43 ^ 0xDD)) & 0x92) + 73;
  char v59 = v43 ^ 0xE5;
  char v60 = v59 + (v55 ^ v58 ^ 0xC7) + 1;
  unint64_t v61 = v57 ^ __ROR8__((v53 >> 16) ^ 0x4D81525DA35B383ALL, 48) ^ v52;
  char v62 = (v58 ^ 0xB6) - 71;
  char v63 = v62 - ((2 * (v58 ^ 0xB6) + 2) & 0x70) + (v60 & 0x40);
  if ((v60 & 0x40 & ((v58 ^ 0xB6) + 1)) != 0) {
    char v63 = v62 - (v60 & 0x40) - ((2 * ((v58 ^ 0xB6) + 1)) & 0x70);
  }
  char v64 = v63 ^ ((v60 & 0xBF) + (~(2 * v60) | 0x8F) - 71);
  unsigned __int8 v65 = ((v64 - ((2 * v64) & 0x92) + 73) ^ v58) + v59;
  *((void *)&v66 + 1) = ~v52;
  *(void *)&long long v66 = v52 ^ 0x92CFC162FD513142;
  unint64_t v67 = __ROR8__(v52, 57) & 0xFFFFFFFFFFFFE07FLL;
  *((void *)&v66 + 1) = v52 ^ 0x8F095B1B23110F0ELL ^ ((v66 >> 1)
                                                      - ((2 * (v66 >> 1)) & 0x3B8D34F3BC807C9ALL)
                                                      + 0x1DC69A79DE403E4DLL);
  *(void *)&long long v66 = *((void *)&v66 + 1) ^ (v52 << 58) ^ 0xC00000000000000;
  uint64_t v68 = v66 >> 51;
  uint64_t v69 = v54 ^ (v54 >> 39) ^ (8 * v54) ^ (((v65 >> 1) | (v65 << 7)) | (v54 << 25));
  unint64_t v70 = v69 ^ 0xE0F028D3ED620ECELL;
  uint64_t v216 = v68 + (v67 ^ 0x8F8AC7F1FBA51795);
  unint64_t v71 = (v50 << 23) ^ 0xFBA827E079000000;
  unint64_t v72 = (((v56 << 45) ^ (v56 << 36)) & 0xFFFFFFF000000000 | (v56 >> 28)) ^ (v56 >> 19) ^ 0xD0A2B87327B31AB3;
  uint64_t v73 = v72 - ((2 * v72) & 0x5B92C215496E18C6) + 0x2DC9610AA4B70C63;
  unint64_t v74 = v50 ^ (v50 >> 41) ^ (v50 >> 7) ^ 0xE8F390DD498DE43CLL ^ (((v50 << 57) ^ 0xE400000000000000)
                                                               - ((2 * ((v50 << 57) ^ 0xE400000000000000)) & 0xBFFFFFFFFFFFFFFFLL)
                                                               + 0x5EA4C565F73927DCLL);
  unint64_t v75 = (v74 & 0x10000000000000 ^ 0xB5F7EACFBFDCFEF6) + 2 * (v74 & 0x10000000000000);
  unint64_t v76 = v75 + 0x6BFBDFFFD177A1ECLL;
  unint64_t v77 = v74 & 0xFFEFFFFFFFFFFFFFLL;
  unint64_t v78 = v75 + 0x4A0815304023010ALL;
  uint64_t v79 = __ROR8__(v216 - 2 * (v68 & (v67 ^ 0x8F8AC7F1FBA51795)), 13);
  unint64_t v80 = v61 ^ (v61 >> 10) ^ (v61 << 47) ^ ((v61 >> 17) | (v61 << 54));
  unint64_t v81 = 0xD7EBB59F51319FD8 - v75;
  if ((v78 & v71) == 0) {
    unint64_t v81 = v76;
  }
  uint64_t v82 = (v71 - 0x21F3CACF9154A0E2 + v81) ^ v77;
  uint64_t v83 = (v82 - ((2 * v82) & 0x5EFB1B5F918F5A50) - 0x50827250373852D8) ^ v80;
  uint64_t v84 = __ROR8__(__ROR8__(v83 ^ 0x9815BF917BADC291, 23) ^ 0x6C4FE5A873E441B7, 41);
  unint64_t v85 = (v79 - 0x3956FD2DB1C625DDLL - ((2 * v79) & 0x8D5205A49C73B446)) ^ v70;
  uint64_t v86 = v73 ^ v56 ^ v82;
  unint64_t v87 = v84 & (v80 ^ 0x1CAE3FE19723B7B4) ^ v85;
  unint64_t v88 = (v86 ^ 0xE7B56293BDA50070 | ~v84)
      + ((v84 + 0x3F0752C6571FAEB4 - ((2 * v84) & 0x7E0EA58CAE3F5D68)) ^ v86 ^ 0xD8B23055EABAAEC4)
      + 1;
  unint64_t v89 = (((v85 ^ 0xBEE74353B47A99EDLL) & (v69 ^ 0xD9A6D5FE5CA42B12))
       + 0x3F0752C6571FAEB4
       - ((2 * ((v85 ^ 0xBEE74353B47A99EDLL) & (v69 ^ 0xD9A6D5FE5CA42B12))) & 0x7E0EA58CAE3F5D68)) ^ v86 ^ 0xD8B23055EABAAEC4;
  unint64_t v90 = v83 ^ (v86 ^ 0x184A9D6C425AFF8FLL) & (v69 ^ 0x26592A01A35BD4EDLL);
  unint64_t v91 = ((v89 ^ (v85 ^ 0x4118BCAC4B856612) & (v80 ^ 0xE351C01E68DC484BLL))
       - 0x3956FD2DB1C625DDLL
       - ((2 * (v89 ^ (v85 ^ 0x4118BCAC4B856612) & (v80 ^ 0xE351C01E68DC484BLL))) & 0x8D5205A49C73B446)) ^ v70;
  *((void *)&v93 + 1) = v90 ^ v89 ^ 0x13E8080;
  *(void *)&long long v93 = v90 ^ v89 ^ 0xE0504245A0000000;
  uint64_t v92 = v93 >> 28;
  unint64_t v94 = v88 ^ __ROR8__(((v87 ^ 0xBEE74353B47A99EDLL) >> 27) ^ __ROR8__(v80 ^ 0xE1DE6585B59498FDLL, 27) ^ (((v87 ^ 0xBEE74353B47A99EDLL) << 37)- (((v87 ^ 0xBEE74353B47A99EDLL) << 38) & 0x1379170000000000)- 0x7643747485F20715), 37);
  *(void *)&long long v93 = __ROR8__(v90 ^ v89, 19);
  unint64_t v95 = (v92 ^ v93 ^ 0xD0101C0A0848B427)
      - ((2 * (v92 ^ v93 ^ 0xD0101C0A0848B427)) & 0xF15134B7E7143C52)
      + 0x78A89A5BF38A1E29;
  unint64_t v96 = (v87 ^ 0xD1A234CC1D2559D7) << 58;
  unint64_t v97 = v96 & (v87 ^ 0xD000000000000000);
  unint64_t v98 = v96 | v87 ^ 0xD1A234CC1D2559D7;
  *((void *)&v93 + 1) = v91 ^ 0x1747C156E755AED6;
  *(void *)&long long v93 = v91 ^ 0x4000000000000000;
  uint64_t v99 = v91 ^ __ROR8__(v91, 39) ^ (v93 >> 61);
  unint64_t v100 = v99 ^ 0xEC82E30C56D2DAC5;
  uint64_t v101 = v99 & 0x7C09B5691D153F3ALL;
  unint64_t v102 = (v97 ^ ((v87 ^ 0xD1A234CC1D2559D7) << 63)) + 0x160B89071D29FB91 - ((2 * v97) & 0x2800000000000000);
  unint64_t v103 = ((v90 >> 7) ^ (v90 >> 41) | (v90 << 57)) ^ (v90 << 23) ^ 0xE93CE52A81283D18;
  unint64_t v104 = v103 - ((2 * v103) & 0xBCAEFB2069ADCA6CLL) - 0x21A8826FCB291ACALL;
  uint64_t v105 = v90 ^ 0x8430CD9154D7510 ^ v104;
  unint64_t v106 = v95 ^ v89 ^ v104;
  unint64_t v107 = v94 ^ (v94 << 47) ^ (v94 >> 10) ^ (v94 >> 17) ^ (v94 << 54);
  unint64_t v108 = (v105 & (unint64_t)&_mh_execute_header & 0xFFFFFFFDFFFFFFFFLL | ((((v105 & (unint64_t)&_mh_execute_header) >> 32) & 1) << 33)) ^ 0x87A7E9FDF7B7DEF3;
  unint64_t v109 = v108 + 0x7FFFB67AFFDFF800;
  unint64_t v110 = v105 & 0xFFFFFFFEFFFFFFFFLL;
  unint64_t v111 = ((v87 ^ 0xD1A234CC1D2559D7) >> 6) ^ (v87 >> 1) ^ v98 ^ v102 ^ v99 ^ 0xEC82E30C56D2DAC5;
  unint64_t v112 = v108 + 0x785816020848210DLL;
  unint64_t v113 = 0x8F4F8A76EF4FB5E6 - v108;
  if (((v107 ^ 0xBEE8B63400000000) & v112) == 0) {
    unint64_t v113 = v109;
  }
  unint64_t v114 = ((v107 ^ 0xBEE8B6349A795903) - 0x7A7A078F797D6F3 + v113) ^ v110;
  *((void *)&v116 + 1) = v106 ^ 0x147F9EBB9;
  *(void *)&long long v116 = v106 ^ 0x90BBD4C600000000;
  uint64_t v115 = v116 >> 33;
  *(void *)&long long v116 = __ROR8__((v111 ^ 0x68D11A660E92ACEBLL) & (v99 ^ 0x57695F4B404DEABLL), 33);
  unint64_t v117 = (v106 ^ 0x90BBD4C747F9EBB9) & ~v114;
  char v118 = v114 & 1;
  unint64_t v119 = (v106 ^ 0x6F442B38B8061446) & (v99 ^ 0xFA896A0B4BFB2154);
  *(void *)&long long v116 = __ROR8__(v115 ^ v116 ^ 0xCF4F457632C10184, 31);
  uint64_t v120 = v114 & (v107 ^ 0x411749CB6586A6FCLL);
  unint64_t v121 = v114 ^ (v119 - ((2 * v119) & 0xAA034A07FC3A27BELL) + 0x5501A503FE1D13DFLL);
  uint64_t v122 = v120 ^ v111 ^ 0x68D11A660E92ACEBLL;
  unint64_t v123 = (v107 ^ 0xBEE8B6349A795903) & (v111 ^ 0x972EE599F16D5314);
  unint64_t v124 = v122 ^ v107 ^ (v117 - ((2 * v117) & 0xE9AB72D9FA5629CELL) + 0x74D5B96CFD2B14E7);
  unint64_t v125 = v116 ^ v100 ^ (v123 + 0x160B89071D29FB91 - ((2 * v123) & 0x2C17120E3A53F722));
  unint64_t v126 = (v122 ^ 0x7955EAEC4D48B80CuLL) >> v118 >> (v118 ^ 1u);
  unint64_t v127 = v125 ^ 0xB2BC76D599691865 ^ (((v125 >> 61) ^ (v125 >> 39) ^ 0xAFF5F4)
                                      - ((2 * ((v125 >> 61) ^ (v125 >> 39) ^ 0xAFF5F4)) & 0x368806A)
                                      - 0x1AB9721B064BBFCBLL);
  uint64_t v128 = (((v125 << 25) ^ 0x62C1BAB0A0000000 ^ -(uint64_t)((v125 << 25) ^ 0x62C1BAB0A0000000) ^ (v127
                                                                                                  - (v127 ^ (v125 << 25) ^ 0x62C1BAB0A0000000)))
        + v127) ^ (8 * v125);
  unint64_t v129 = (v124 >> 10) ^ (v124 << 47) ^ (v124 >> 17);
  uint64_t v130 = ((v121 >> 41) | (v121 << 57)) ^ (v121 >> 7) ^ (((v121 << 23) ^ 0xDD7019C65800000)
                                                      - ((2 * ((v121 << 23) ^ 0xDD7019C65800000)) & 0x3FA628DD94000000)
                                                      - 0x602CEB9135D661D2);
  unint64_t v131 = ((v129 ^ (v124 << 54) ^ 0x925C0FCE1D95C310)
        - 2 * ((v129 ^ (v124 << 54) ^ 0x925C0FCE1D95C310) & 0x1FCFC1D6B965B42DLL ^ v129 & 1)
        - 0x60303E29469A4BD4) ^ v124;
  uint64_t v132 = v131 ^ 0x431962E68E0732FELL;
  unint64_t v133 = ((v121 ^ (unint64_t)v116) << 36) ^ ((v121 ^ (unint64_t)v116) << 45) ^ ((v121 ^ (unint64_t)v116) >> 19) ^ ((v121 ^ (unint64_t)v116) >> 28) ^ 0x5166D845049C1B92;
  unint64_t v134 = v130 ^ v121 ^ v131;
  unint64_t v135 = v130 ^ v116 ^ (v133 - ((2 * v133) & 0xFD4482C37D5E6FC4) - 0x15DBE9E4150C81ELL);
  *(void *)&long long v116 = __ROR8__(v122, 6);
  unint64_t v136 = v122 ^ 0x84A383DFDF20EE75 ^ ((((v122 << 63) | 0x31E557ABB13522E0) ^ v116 ^ v126)
                                      - ((2 * (((v122 << 63) | 0x31E557ABB13522E0) ^ v116 ^ v126)) & 0xFBECD26724D0ACF2)
                                      - 0x20996CC6D97A987);
  unint64_t v137 = v128 ^ 0xBDC1CFCDAC8F3CD8 ^ (v136 + 0x2161646AA65FE58 - ((2 * v136) & 0x42C2C8D54CBFCB0));
  uint64_t v138 = (v128 ^ 0x40282674F9153D7FLL) & v136;
  unint64_t v139 = ((v132 & ~v137) + 0x2161646AA65FE58 - ((2 * (v132 & ~v137)) & 0x42C2C8D54CBFCB0)) ^ v128 ^ 0xBDC1CFCDAC8F3CD8;
  unint64_t v140 = (v128 ^ 0xBFD7D98B06EAC280) & (v135 ^ 0x25780E646737BCC7);
  unint64_t v141 = (v134 ^ 0x39BBB54FDD48591DLL) & (v131 ^ 0xBCE69D1971F8CD01) ^ v137;
  uint64_t v142 = (v138 - ((v138 - 0x4A8E552B88F04546 - ((2 * v138) & 0x6AE355A8EE1F7574)) ^ v135 ^ 0x6FF65B4FEFC7F982)) ^ ((v135 ^ 0x25780E646737BCC7) + 1);
  unint64_t v143 = ((v142 - 0x4A8E552B88F04546 - ((2 * v142) & 0x6AE355A8EE1F7574)) ^ v135 ^ 0x6FF65B4FEFC7F982) + v138;
  unint64_t v144 = v139 ^ v143;
  unint64_t v145 = (((2 * v134) ^ 0x8C889560456F4DC5) + (v134 ^ 0x39BBB54FDD48591DLL)) & (v135 ^ 0xDA87F19B98C84338);
  unint64_t v146 = (v140 - ((2 * v140) & 0xB8FE41B0D5918400) - 0x2380DF2795373E00) ^ v134;
  unint64_t v147 = v143 ^ v146;
  unint64_t v148 = v143 ^ v146 ^ 0xE5C49597B7809B1DLL;
  unint64_t v149 = (v139 ^ v143) >> 61;
  unint64_t v150 = v141 ^ v132 ^ v145;
  *((void *)&v116 + 1) = v144 ^ 0x1877DA25;
  *(void *)&long long v116 = v144 ^ 0x425764BB40000000;
  uint64_t v151 = v116 >> 30;
  *((void *)&v116 + 1) = v147 ^ 0x6E97;
  *(void *)&long long v116 = v147 ^ 0x7232327241680000;
  uint64_t v152 = (v144 << 25) ^ 0x76B0EFB44A000000;
  unint64_t v153 = v141 & 0xFDFEEACE34F5F11BLL ^ 0x3BDA1E3360BF843ALL ^ (v141 & 0x2011531CB0A0EE4 | (v141 << 58));
  unint64_t v154 = v151 ^ (v149 << 34) ^ 0x84F57132E3442245;
  uint64_t v155 = (v146 >> 41) ^ 0x4A819E;
  uint64_t v156 = (v116 >> 19) ^ (v148 << 36) ^ (v148 >> 28);
  uint64_t v157 = v147 ^ 0x2D0144B4596239CCLL ^ ((v156 ^ 0x6E8F58A97F6A7E5FLL)
                                      + 0x5F3376C6180A575BLL
                                      - 2 * ((v156 ^ 0x6E8F58A97F6A7E5FLL) & 0x5F3376C6180A577BLL ^ v156 & 0x20));
  uint64_t v158 = __ROR8__(v154, 34);
  uint64_t v159 = (v141 >> 1) & 0x80000000000;
  unint64_t v160 = v153 ^ (v141 << 63);
  *((void *)&v116 + 1) = v146 ^ 0x60;
  *(void *)&long long v116 = v146 ^ 0x95033D4444E4A680;
  uint64_t v161 = v146 ^ 0x1B3819F4F941566ALL ^ ((v116 >> 7) - ((2 * (v116 >> 7)) & 0x1C7649617B4BE114) - 0x71C4DB4F425A0F76);
  uint64_t v162 = (v158 ^ (v144 >> 39) ^ 0x84AEC9) + v152;
  uint64_t v163 = v158 & v152;
  uint64_t v164 = v161 & v155;
  uint64_t v165 = v161 + v155;
  uint64_t v166 = v162 - 2 * v163;
  unint64_t v167 = (v160 + 0x48AB6239064C0E68 - ((2 * v153) & 0x9156C4720C981CD0)) ^ v159 ^ 0x48AB6A39064C0E68;
  BOOL v168 = v101 == 0x7809200909112110;
  uint64_t v169 = v167 ^ 0x37549DC6F9B3F197;
  if (v168) {
    uint64_t v169 = v159 ^ 0x48AB6A39064C0E68;
  }
  uint64_t v170 = v166 ^ (8 * v144);
  unint64_t v171 = ((((v141 >> 1) | 0xFFFFF7FFFFFFFFFFLL) + v160 + 1) ^ 0xC0BBFFDF3AD563EELL)
       + 0x3FF4FF6BF7EEBDC0
       + ((2 * (((v141 >> 1) | 0xFFFFF7FFFFFFFFFFLL) + v160 + 1)) & 0x8177FFBE75AAC7DCLL);
  uint64_t v172 = v167 + 2 * ((v169 ^ 0x48AB6239064C0E68) & v153) + 0xB0FF4B32C421AELL;
  uint64_t v173 = v165 - 2 * v164;
  if ((v153 & (v159 ^ 0x80000000000)) != 0) {
    unint64_t v174 = v171;
  }
  else {
    unint64_t v174 = v172;
  }
  unint64_t v175 = v173 ^ (v146 << 23);
  unint64_t v176 = v150 ^ (v150 >> 10) ^ (v150 >> 17) ^ (v150 << 47) ^ (v150 << 54);
  unint64_t v177 = v175 ^ v176;
  *((void *)&v178 + 1) = v174 + 0x1F4F00B4CD3BDE52;
  *(void *)&long long v178 = v174 - 0xB0FF4B32C421AELL;
  unint64_t v179 = __ROR8__(__ROR8__(v141, 62) & 0xFFFFBFFFFFFFFFFBLL ^ 0x4F1EC6363424B53DLL ^ (v178 >> 61), 3) ^ (v141 >> 6);
  unint64_t v180 = v170 ^ 0xAA6A2D4BA2838D66;
  *(void *)&long long v178 = __ROR8__(__ROR8__(v175, 57) ^ __ROR8__(v157, 57) ^ 0x6FC05DF167C8675ALL, 7);
  unint64_t v181 = v179 ^ v170 ^ 0xAA6A2D4BA2838D66;
  unint64_t v182 = v181 ^ 0xC341B7A7BB59AAAALL;
  unint64_t v183 = (v181 ^ 0xC341B7A7BB59AAAALL) & (v170 ^ 0x5595D2B45D7C7299);
  uint64_t v184 = (v181 ^ 0x3CBE485844A65555) & (v176 ^ 0x5156C560131506D7) ^ v180;
  *((void *)&v178 + 1) = v178 ^ 0x16FDF2E892CF90CELL;
  uint64_t v185 = v178 ^ 0x16FDF2E892CF90CELL ^ v183;
  unint64_t v186 = v182 ^ (v175 ^ 0xA222725370000000) & (v176 ^ 0xAEA93A9FECEAF928);
  uint64_t v187 = (v178 ^ 0x16FDF2E892CF90CELL) & (v177 ^ 0xC8B48CC9CEAF928);
  unint64_t v188 = (__ROR8__((v178 >> 38) ^ 0x2F851D43D911B5B3, 26) ^ 0xAD6F61F41EB8AF09) & v180 ^ v177;
  unint64_t v189 = v188 ^ v185;
  unint64_t v190 = v188 ^ v185 ^ 0xF374B733631506D7;
  unint64_t v191 = v184 ^ v185;
  unint64_t v192 = v186 ^ 0x6DC4FB0BD4FFFF44;
  unint64_t v193 = ((v187 ^ v186) - ((2 * (v187 ^ v186)) & 0xDC51AEF6C0094762) + 0x6E28D77B6004A3B1) ^ v176;
  *((void *)&v178 + 1) = v189 ^ 0x3D2C8;
  *(void *)&long long v178 = v189 ^ 0xFA48947078600000;
  unint64_t v194 = __ROR8__(__ROR8__(v186 ^ 0x616B258C5FF13C26, 27) ^ 0x61D86C4195FBD0F1, 37);
  uint64_t v195 = v191 ^ (v191 >> 39) ^ (8 * v191) ^ (v191 << 25) ^ (v191 >> 61);
  uint64_t v196 = (((v178 >> 19) ^ (v190 << 36) ^ (v190 >> 28) ^ 0xB76D41F000000000)
        + 0x65B967D9DC9AF1C9
        - 2
        * (((v178 >> 19) ^ (v190 << 36) ^ (v190 >> 28) ^ 0xB76D41F000000000) & 0x65B967D9DC9AF1CBLL ^ ((v178 >> 19) ^ (v190 << 36) ^ (v190 >> 28)) & 2)) ^ v189;
  *((void *)&v178 + 1) = v188 ^ 0x19CE4E34586;
  *(void *)&long long v178 = v188 ^ 0x54B5EC0000000000 ^ (((v188 << 57) ^ 0xC00000000000000)
                                                  - ((2 * ((v188 << 57) ^ 0xC00000000000000)) & 0x1400000000000000)
                                                  - 0x758B13AF489EC2F9);
  uint64_t v197 = ((v195 ^ 0xABCF8FE7C463E5DLL)
        + (v192 ^ (v192 >> 1) ^ (v194 << 58))
        - 2 * ((v195 ^ 0xABCF8FE7C463E5DLL) & (v192 ^ (v192 >> 1) ^ (v194 << 58)))) ^ ((v194 >> 6) | (v194 << 63));
  uint64_t v198 = __ROR8__(__ROR8__(v188, 49) & 0xFFFFFFFFFFC07FFFLL ^ 0x5A0097AF68E2F052 ^ (v178 >> 42), 22);
  unint64_t v199 = v193 ^ (v193 >> 10) ^ (((v193 << 54) ^ (v193 << 47)) & 0xFFFF800000000000 | (v193 >> 17));
  uint64_t v200 = v199 ^ 0x269D211501965A36;
  unint64_t v201 = 0x228B35C087A7C481;
  if (v216) {
    unint64_t v201 = v198 ^ 0xDD74CA3F78583B7ELL;
  }
  unint64_t v202 = v198 & 0xDD74CA3F78583B7ELL ^ __ROR8__(v188, 41) ^ v201 & v198 ^ 0x440EBAC9F8F81BA8;
  unint64_t v203 = v196 ^ v202;
  unint64_t v204 = (v202 + 0x4FF6F7A67EA2369CLL - ((2 * v202) & 0x9FEDEF4CFD446D38)) ^ v200;
  unint64_t v205 = v202 & (v199 ^ 0x9694294C80CB9355);
  unint64_t v206 = v203 ^ 0x9FF1F3A9373B1730 ^ v197 & (v195 ^ 0xF543070183B9C1A2);
  uint64_t v207 = v204 ^ (v203 ^ 0x600E0C56C8C4E8CFLL) & (v195 ^ 0xABCF8FE7C463E5DLL);
  *((void *)&v208 + 1) = v207 ^ v206 ^ 0x862;
  *(void *)&long long v208 = v207 ^ v206 ^ 0x6E829E585CD8000;
  uint64_t v209 = (v199 ^ 0x696BD6B37F346CAALL) & ~v197;
  unint64_t v210 = v205 ^ v197;
  unint64_t v211 = ((v206 ^ v209) - ((2 * (v206 ^ v209)) & 0x37B458A3E4CC59C0) + 0x1BDA2C51F2662CE0) ^ v195;
  *(void *)&long long v208 = __ROR8__((v208 >> 14) ^ __ROR8__(v207 ^ v206, 33) & 0xFFFC00007FFFFFFFLL ^ 0x7A565A2AF4F5B45ELL, 50);
  int v212 = v210 ^ v200 ^ (((v203 ^ 0x373B1730) & ~v204)
                      + 2124560028
                      - ((2 * ((v203 ^ 0x373B1730) & ~v204)) & 0xFD446D38));
  unint64_t v213 = (v208 ^ 0x968ABDE0682B2E2CLL) & 0x6181A3FA608E1D1DLL ^ (((v207 ^ v206) << 45) ^ 0xB10C400000000000) & 0x6181A00000000000 | (v208 ^ 0x968ABDE0682B2E2CLL) & 0x9E7E5C059F71E2E2 ^ (((v207 ^ v206) << 45) ^ 0xB10C400000000000) & 0x9E7E400000000000;
  BOOL v214 = a36 + 1931037403 < a29;
  if (a31 > 0x3889705F != a36 + 1931037403 < 0xC7768FA0) {
    BOOL v214 = a31 > 0x3889705F;
  }
  return (*(uint64_t (**)(uint64_t, void, unint64_t, uint64_t, uint64_t, unint64_t, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * (v38 ^ ((16 * !v214) | (32 * !v214)))))(a1, v212 ^ 0x149E7u, v210 ^ (v210 << 58) ^ ((v210 >> 1) ^ (v210 >> 6) | ((unint64_t)~v210 << 63)), a4, a5, v213 ^ ((v207 ^ v206) >> 28), v211 ^ (8 * v211) ^ (v211 << 25) ^ (v211 >> 39) ^ (v211 >> 61), a36, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1000F4630(int a1, uint64_t a2, void *a3, int a4, uint64_t a5, int a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  BOOL v35 = v25 > v30;
  unint64_t v36 = (*(_DWORD *)(a25 + 4 * (v34 + a1)) ^ v26)
      + HIDWORD(v28)
      + a7 * (unint64_t)(*(_DWORD *)(*a3 + 4 * (v34 + a1)) ^ v26);
  *(_DWORD *)(a25 + 4 * ((a6 ^ v31 ^ (a1 + 946)) + v34)) = v36 + v26 - (v27 & (2 * v36));
  if (v35 == v34 + v32 < v33) {
    BOOL v35 = v34 + v32 < a4;
  }
  return (*(uint64_t (**)(void))(v29 + 8 * ((2 * !v35) | (!v35 << 6) | a6)))();
}

uint64_t sub_1000F46C0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1604 * (v1 - 1755777584 < ((v0 + 116) ^ 0xFFFFFEE7))) ^ v0)))();
}

uint64_t sub_1000F46FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(_DWORD *)(v16 - 112) = (v13 + 1429) ^ (1755732067
                                         * ((((v16 - 144) | 0x4C54933A) - (v16 - 144) + ((v16 - 144) & 0xB3AB6CC0)) ^ 0x92922EE1));
  *(void *)(v16 - 104) = v11;
  *(void *)(v16 - 144) = v11;
  *(void *)(v16 - 136) = v12;
  *(void *)(v16 - 128) = v14;
  *(void *)(v16 - 120) = a10;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v10 + 8 * (v13 ^ 0x66C)))(v16 - 144);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((452 * (v15 - 1 < (v13 + 2147483170))) ^ (v13 + 1251))))(v17);
}

uint64_t sub_1000F47A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26,uint64_t a27,unsigned __int8 a28,unint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  return sub_1000BF51C(a2, 3102594147, a5, a6, a7, a8, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

void sub_1000F47B8()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1000F47DCLL);
}

uint64_t sub_1000F48A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v10 = LODWORD(STACK[0x47C]) - v7 == 1388428834 && v6 != v5 + 782 + a5;
  return (*(uint64_t (**)(void))(v8 + 8 * ((109 * v10) ^ v5)))();
}

uint64_t sub_1000F48E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,uint64_t a58)
{
  *(_DWORD *)(v61 + 360) = 1755777584;
  uint64_t v65 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *, unint64_t, void, uint64_t, unint64_t *, unint64_t *))(v63 + 8 * (v58 ^ 0x6E8)))(v60, 2, &STACK[0x434], STACK[0x480], (v59 - 1576401730), a6, &STACK[0x4D8], &STACK[0x5C4]);
  int v67 = ((2 * v65) & 0xFEFF9FE8) + (v65 ^ 0x7F7FCFF4);
  if (v67 == -1887449097)
  {
    LODWORD(STACK[0x4E8]) = 1008845312;
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v63
                                                                                  + 8
                                                                                  * (((STACK[0x4D8] == 0)
                                                                                    * (((3 * (v62 ^ 0x80)) ^ 0x569) - 416)) ^ (v62 + 135))))(v65, STACK[0x4D8], v66, 1008845537);
  }
  else
  {
    if (v67 == 2139082740)
    {
      STACK[0x388] = STACK[0x4D8];
      LODWORD(STACK[0x380]) = STACK[0x5C4];
      JUMPOUT(0x1000C8F90);
    }
    int v69 = 1224239923 * ((((2 * (v64 - 200)) | 0x81022F18) - (v64 - 200) - 1082201996) ^ 0xB232EA5B);
    *(_DWORD *)(v64 - 184) = v69 + v62 + 1225;
    *(void *)(v64 - 192) = a58;
    *(_DWORD *)(v64 - 200) = v67
                           - v69
                           + 1147062597
                           + ~(2 * ((v67 + 8400908) & a57 ^ ((v65 ^ 0xF4) + 4) & 7));
    uint64_t v70 = (*(uint64_t (**)(uint64_t))(v63 + 8 * (v62 + 1791)))(v64 - 200);
    return (*(uint64_t (**)(uint64_t))(v63
                                              + 8
                                              * (((STACK[0x4D8] == 0) * (((3 * (v62 ^ 0x80)) ^ 0x569) - 416)) ^ (v62 + 135))))(v70);
  }
}

void sub_1000F4AE0()
{
}

void sub_1000F4B04(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1225351577 * ((-2 - ((a1 | 0xFF7726BA) + (~a1 | 0x88D945))) ^ 0x23120153);
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned int v6 = v1 - 1755732067 * ((((2 * &v4) | 0xE2B1507C) - &v4 - 1901635646) ^ 0xAF9E15E5) + 1001;
  uint64_t v5 = v2;
  int v3 = (char *)*(&off_100166A10 + (v1 ^ 0x4A)) - 4;
  (*(void (**)(int *))&v3[8 * (v1 ^ 0x712)])(&v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000F4C60(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((713 * (v4 - 715497359 + ((a3 + 170) ^ 0x1D4) >= 0)) ^ a3)))();
}

void sub_1000F4CA4()
{
}

uint64_t sub_1000F4CB8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  int v10 = *(_DWORD *)(v9 - 252 + ((v7 + v5) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a4 + (v7 + v5)) = (HIBYTE(v10) ^ 0xB6)
                                           - ((((v6 + a3) & 0xB2) + 6) & (2 * (HIBYTE(v10) ^ 0xB6)))
                                           + 84;
  *(unsigned char *)(a4 + (v7 + v5 + 2)) = (BYTE1(v10) ^ 0x3D) - ((2 * (BYTE1(v10) ^ 0x3D)) & 0xA8) + 84;
  *(unsigned char *)(a4 + (v7 + v5 + 1)) = (BYTE2(v10) ^ 0xDE)
                                               + ~(2 * ((BYTE2(v10) ^ 0xDE) & 0x55 ^ BYTE2(v10) & 1))
                                               + 85;
  *(unsigned char *)(a4 + (v7 + v5 + 3)) = v10 ^ 0x34;
  unsigned int v11 = *(_DWORD *)(v9 - 160) + 2054455463;
  BOOL v12 = v11 < v4;
  BOOL v13 = v7 + 1352640557 < v11;
  if (v7 + 1352640557 < v4 != v12) {
    BOOL v13 = v12;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((1540 * v13) ^ v6)))();
}

uint64_t sub_1000F4DB4()
{
  unsigned int v5 = (v0 + 1494780780) & 0xA6E771DF;
  *uint64_t v2 = v2[623];
  uint64_t v6 = 1225351577
     * ((~((v4 - 200) | 0x54B59BECDD5CA8C0) + ((v4 - 200) & 0x54B59BECDD5CA8C0)) ^ 0x46DCCC4B01398F29);
  *(void *)(v4 - 184) = (v1 - 570597186) ^ (unint64_t)v6;
  *(void *)(v4 - 168) = v6 ^ 0xF1260384;
  *(_DWORD *)(v4 - 200) = v5 + 519880957 - v6 + 205;
  *(_DWORD *)(v4 - 192) = v6 + v5 + 519880957 + 80;
  *(_DWORD *)(v4 - 188) = v6;
  *(_DWORD *)(v4 - 176) = (v5 + 519880957) ^ v6;
  *(_DWORD *)(v4 - 172) = (v5 - 1689051783) ^ v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (int)(v5 ^ 0x6A0)))(v4 - 200);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 196)))(v7);
}

uint64_t sub_1000F4EAC@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((a1 + 1095361909) & 0xBEB61DDE ^ 0x4C7)
                                     * ((unint64_t)(v3 - a2 - 0x7C014C707EC20828 + v2) > 0xF)) ^ a1)))();
}

void sub_1000F4F14()
{
}

uint64_t sub_1000F4F1C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((474 * (v3 + 1 == v2 + 32)) ^ v0)))((v0 - 1242988316) & 0x4A167AFF);
}

uint64_t sub_1000F4FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  uint64_t v41 = (unsigned __int8 *)(a4 + a2 + v40);
  int v42 = *v41 ^ 0x54;
  LODWORD(v41) = ((*(unsigned __int8 *)(a4 + ((a37 - 177) ^ (unint64_t)(v40 - 14)) + a2) ^ 0x54) << 16) | ((v41[3] ^ 0x54) << 24) | v42 | ((v41[1] ^ 0x54) << 8);
  *(_DWORD *)(v38 + ((a2 + v40) & 0xFFFFFFFFFFFFFFFCLL)) = v41
                                                         + v37
                                                         - 2 * (v41 & 0x43DE993B ^ v42 & 3);
  return (*(uint64_t (**)(void))(v39 + 8 * ((2001 * ((unint64_t)(a2 + 4 + v40) < 0x40)) ^ a37)))();
}

void sub_1000F50A0(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(a1 - 0x774B811B42847B1FLL) + 4 * (v6 + v4)) = v2
                                                                        - 1875394368
                                                                        + ~((2 * v2 + 1414843374) & v5);
  *(_DWORD *)(a1 - 0x774B811B42847B23) = (((v6 + ((v3 + 1376478882) & 0xADF497FD) - 988 + v4) * (v1 - 731987366)) ^ 0x6AA5DBFF)
                                         - 1073758472
                                         + ((2 * (v6 + ((v3 + 1376478882) & 0xADF497FD) - 988 + v4) * (v1 - 731987366)) & 0xD54BB7FE);
}

void sub_1000F518C(uint64_t a1)
{
  int v2 = (unint64_t *)*(&off_100166A10
                           + ((107 * ((qword_100180398 - dword_100180310) ^ 0x58)) ^ byte_10011D9F0[byte_100119D30[(107 * ((qword_100180398 - dword_100180310) ^ 0x58))] ^ 0x61])
                           - 152);
  int v3 = (unint64_t *)*(&off_100166A10
                           + (byte_100119E3C[(byte_100123CA0[(107
                                                                                              * ((qword_100180398 + *v2) ^ 0x58))] ^ 0x53)
                                                            - 12] ^ (107 * ((qword_100180398 + *v2) ^ 0x58)))
                           - 140);
  unint64_t v4 = *v2 - (void)&v8 + *v3;
  unint64_t v5 = (139864171 * v4) ^ 0x945BD3199FE9FF58;
  unint64_t v6 = 139864171 * (v4 ^ 0x945BD3199FE9FF58);
  *int v2 = v5;
  *int v3 = v6;
  LODWORD(v3) = *(_DWORD *)v2;
  uint64_t v7 = (char *)*(&off_100166A10
               + ((107 * (dword_100180310 ^ 0x58 ^ qword_100180398)) ^ byte_100120950[byte_10011D8F0[(107 * (dword_100180310 ^ 0x58 ^ qword_100180398))] ^ 0x9D])
               + 91)
     - 4;
  (*(void (**)(void, uint64_t (*)()))&v7[8
                                                   * (byte_100119F30[byte_100123DA8[(107 * ((v6 + (_BYTE)v3) ^ 0x58)) - 8] ^ 0xAD] ^ (107 * ((v6 + (_BYTE)v3) ^ 0x58)))
                                                   + 15216])(*(&off_100166A10+ (byte_100120950[byte_10011D8FC[(107 * (v3 ^ 0x58 ^ v6)) - 12] ^ 0x90] ^ (107 * (v3 ^ 0x58 ^ v6)))- 56), sub_1000EB0DC);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000F537C()
{
  uint64_t v6 = *v9;
  int v7 = 1755732067 * ((v5 - 144) ^ 0xDEC6BDDB);
  *(_DWORD *)(v5 - 144) = v4 - v7 - 776;
  *(_DWORD *)(v5 - 128) = v7 ^ 0x4B8F258;
  *(void *)(v5 - 136) = v10;
  (*(void (**)(uint64_t))(v0 + 8 * (v4 + 284)))(v5 - 144);
  *(_DWORD *)(v5 - 112) = (v4 + 178) ^ v7;
  *(void *)(v5 - 104) = v1;
  *(void *)(v5 - 128) = v3;
  *(void *)(v5 - 120) = v10;
  *(void *)(v5 - 144) = v1;
  *(void *)(v5 - 136) = v2;
  (*(void (**)(uint64_t))(v0 + 8 * (v4 ^ 0x171)))(v5 - 144);
  *(_DWORD *)(v5 - 128) = v4 + 1374699841 * ((2 * ((v5 - 144) & 0x575707B0) - (v5 - 144) + 682162248) ^ 0x455CE041) - 28;
  *(void *)(v5 - 144) = v6;
  *(void *)(v5 - 136) = v1;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v4 + 250)))(v5 - 144);
}

uint64_t sub_1000F5498@<X0>(char a1@<W3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  unint64_t v7 = a3 + v4;
  *(unsigned char *)(v7 + a2 - 1) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * (int)(((v7 < 0x38) * v5) ^ (v3 + 520897603) & 0xE0F3BABA)))();
}

uint64_t sub_1000F54E4()
{
  BOOL v5 = v0 < v4;
  if (v5 == v2 - 0x2AB8BA7D19F7BB1DLL < v4) {
    BOOL v5 = v2 - 0x2AB8BA7D19F7BB1DLL < v0;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((v1 - 19) ^ (60 * v5))))();
}

uint64_t sub_1000F5550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(unsigned char *)(v8 - 252 + v5 - 539915761) = 84;
  return (*(uint64_t (**)(void))(v7 + 8 * ((1932 * ((unint64_t)(v5 - 539915760) < 0x40)) ^ (a5 + v6 + 493))))();
}

uint64_t sub_1000F559C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((19 * (v0 + 1 != v3 + 4)) ^ v1)))();
}

uint64_t sub_1000F5670@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*v1 + (v2 + v6)) = *(unsigned char *)(*v1 + (v6 + v4));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 == v3) * v5) ^ a1)))();
}

uint64_t sub_1000F56A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((2 * ((v5 - 438502617) & 0x1A2305EF ^ 0x6FB)) ^ 0x487) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_1000F56EC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1583
                                * ((((*(unsigned __int8 *)(v3 + 8) - 5) << (-27 * (v2 ^ 0xEE) + 82)) & v1)
                                 + ((*(unsigned __int8 *)(v3 + 8) - 5) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1000F5738@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((((a1 + ((v2 - 299948837) & 0x11E0D7FA) - 378) ^ (a1 - 584)) * (a2 == v3)) ^ v2)))();
}

uint64_t sub_1000F5784()
{
  int v3 = (v1 - 1625756520) & 0x60E7169D;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((63
                                * ((((((v3 ^ 0xFFFFF96B) & v0)
                                    - ((2 * ((v3 ^ 0xFFFFF96B) & v0)) & 0x25299ECA)
                                    + 311742309) << (8 * (((v3 + 109) | 0x82) ^ 0x30) + 105)) & 0x6FBFFEB0 ^ 0x25299E80)
                                 + ((((v3 ^ 0xFFFFF96B) & v0) - ((2 * ((v3 ^ 0xFFFFF96B) & v0)) & 0x25299ECA) + 311742309) ^ 0xE54B303D)
                                 + 1534981104 == 1398666056)) ^ v3)))();
}

uint64_t sub_1000F5844(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((1013 * (((((v1 + 1176516070) & 0xB9DFC57D) - 329) & a1) == v1 - 1517)) ^ v1)))();
}

uint64_t sub_1000F5890()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 ^ 0x15B) * (v0 == v2 - 1413654045)) ^ v1)))();
}

uint64_t sub_1000F58C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned char *a20)
{
  __n128 v23 = *(unsigned char **)(a8 + 96);
  v23[1167] = a20[19];
  v23[1166] = a20[18];
  v23[1165] = a20[17];
  v23[1164] = a20[16];
  v23[1163] = a20[15];
  v23[1162] = a20[14];
  v23[1161] = a20[13];
  v23[1160] = a20[12];
  v23[1159] = a20[11];
  v23[1158] = a20[10];
  v23[1157] = a20[9];
  v23[1156] = a20[8];
  v23[1155] = a20[7];
  v23[1154] = a20[6];
  v23[1153] = a20[5];
  v23[1152] = a20[4];
  v23[1151] = a20[3];
  v23[1150] = a20[2];
  v23[1149] = a20[1];
  v23[1148] = *a20;
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (((a5 + ((((v20 - 616) | 0x218) - 502758873) | 0x5914918) - 87)
                                              * (*(_DWORD *)(a8 + 72) == a6)) ^ (((v20 - 616) | 0x218) + 521))))(v22);
}

void sub_1000F59EC()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1000F5A60);
}

void sub_1000F5B18(uint64_t a1)
{
  int v1 = 460628867 * ((((2 * a1) | 0xC002B2F8) - a1 - 1610701180) ^ 0x2C97DB01);
  int v2 = *(_DWORD *)(a1 + 8) ^ v1;
  int v3 = *(_DWORD *)(a1 + 32) ^ v1;
  BOOL v5 = (v3 & 0x30000000) != 0x20000000 && (v3 & 0x3F000000) != 50331648;
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000F5BF8@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t a21,uint64_t (*a22)(uint64_t))
{
  int v26 = v22 ^ 0x26;
  *(unsigned char *)(a1 + (a3 + 2)) = *(unsigned char *)(a2 + (v22 ^ 0x832C3B78) + v23);
  int v27 = 535753261 * ((((2 * (v25 - 168)) | 0xC4187D24) - (v25 - 168) - 1644969618) ^ 0x68F830BD);
  *(_DWORD *)(v25 - 160) = 753493626 - v27;
  *(_DWORD *)(v25 - 156) = (v26 + 36) ^ v27;
  STACK[0x358] = a21;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v26 ^ 0x7CC)))(v25 - 168);
  return a22(v28);
}

uint64_t sub_1000F5CF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F5D90(a1 - 0x774B811B42847B1FLL, (v1 - 1845666039), 1845666171, 0x775FFFBFF0F9EF9FLL, 0x1E1F3DF3ELL, 0x9BBDF77B7FDE3EE4, 1494974883, 1087979611);
}

uint64_t sub_1000F5D90(void *a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v19 = 4 * (v17 + v14);
  int v20 = v8 + v11 + (*(_DWORD *)(*v12 + v19) ^ v15) - (*(_DWORD *)(*v13 + v19) ^ (v15 + (a2 & a3) - 355));
  *(_DWORD *)(*a1 + v19) = v20 + v15 - (v18 & (2 * v20));
  BOOL v22 = v17 + a7 < a8 && v17 + a7 >= v10;
  return (*(uint64_t (**)(void))(v16 + 8 * ((56 * v22) ^ v9)))();
}

uint64_t sub_1000F5E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v66 = *(unsigned __int8 *)(v63 - 0x7C014C707EC207C8) ^ 0xDB;
  if (v66 == 1)
  {
    unsigned int v75 = *(_DWORD *)(v63 - 0x7C014C707EC207E4);
    *(unsigned char *)(v63 - 0x7C014C707EC207F0) = ((8 * v75) ^ 0xF0) - ((2 * ((8 * v75) ^ 0xF0)) & 0xAA) + 84;
    char v74 = -88;
    *(unsigned char *)(v63 - 0x7C014C707EC207EFLL) = ((v64 - 115) ^ (v75 >> 5)) - ((2 * ((v64 - 115) ^ (v75 >> 5))) & 0xA8) + 84;
    *(unsigned char *)(v63 - 0x7C014C707EC207EELL) = ((v75 >> 13) ^ 0xE0)
                                           - 2 * (((v75 >> 13) ^ 0xE0) & 0x56 ^ (v75 >> 13) & 2)
                                           + 84;
    *(unsigned char *)(v63 - 0x7C014C707EC207EDLL) = ((v75 >> 21) ^ 0x59) - ((2 * ((v75 >> 21) ^ 0x59)) & 0xA8) + 84;
    unsigned int v76 = *(_DWORD *)(v63 - 0x7C014C707EC207E8);
    HIDWORD(v77) = v76 ^ 3;
    LODWORD(v77) = ~v75;
    *(unsigned char *)(v63 - 0x7C014C707EC207ECLL) = (v77 >> 29) + (~(2 * (v77 >> 29)) | 0x57) + 85;
    int v72 = v64 + 1668;
    *(unsigned char *)(v63 - 0x7C014C707EC207EBLL) = ((v76 >> 5) ^ 0x48)
                                           + ~(2 * (((v76 >> 5) ^ 0x48) & 0x57 ^ (v76 >> 5) & 3))
                                           + 85;
    *(unsigned char *)(v63 - 0x7C014C707EC207EALL) = ((v76 >> 13) ^ 0x41) - ((2 * ((v76 >> 13) ^ 0x41)) & 0xA8) + 84;
    unsigned int v73 = (v76 >> 21) ^ 0xFFFFFFD7;
    goto LABEL_5;
  }
  int v67 = v64;
  if (v66 == 2)
  {
    unsigned int v68 = *(_DWORD *)(v63 - 0x7C014C707EC207E8);
    char v69 = ((v68 >> 5) ^ 0x48) - 2 * (((v68 >> 5) ^ 0x48) & 0x57 ^ (v68 >> 5) & 3);
    unsigned int v70 = *(_DWORD *)(v63 - 0x7C014C707EC207E4);
    HIDWORD(v71) = v68 ^ 3;
    LODWORD(v71) = ~v70;
    *(unsigned char *)(v63 - 0x7C014C707EC207F0) = ((v68 >> 21) ^ 0xD7) - ((2 * ((v68 >> 21) ^ 0xD7)) & 0xA8) + 84;
    *(unsigned char *)(v63 - 0x7C014C707EC207EFLL) = ((v68 >> 13) ^ 0x41)
                                           - 2 * (((v68 >> 13) ^ 0x41) & (v64 + 61) ^ (v68 >> 13) & 2)
                                           + 84;
    int v72 = v64 + 1668;
    *(unsigned char *)(v63 - 0x7C014C707EC207EELL) = v69 + 84;
    *(unsigned char *)(v63 - 0x7C014C707EC207EDLL) = (v71 >> 29) - ((2 * (v71 >> 29)) & 0xA8) + 84;
    *(unsigned char *)(v63 - 0x7C014C707EC207ECLL) = ((v70 >> 21) ^ 0x59)
                                           - 2 * (((v70 >> 21) ^ 0x59) & 0x56 ^ (v70 >> 21) & 2)
                                           + 84;
    *(unsigned char *)(v63 - 0x7C014C707EC207EBLL) = ((v70 >> 13) ^ 0xE0)
                                           - 2 * (((v70 >> 13) ^ 0xE0) & 0x55 ^ ((v70 & 0x2000) != 0))
                                           + 84;
    LOBYTE(v73) = (8 * v70) ^ 0xF0;
    char v74 = -96;
    *(unsigned char *)(v63 - 0x7C014C707EC207EALL) = ((v70 >> 5) ^ 0xA6)
                                           - 2 * (((v70 >> 5) ^ 0xA6) & 0x55 ^ ((v70 & 0x20) != 0))
                                           + 84;
LABEL_5:
    int v67 = (v72 - 1677) | 9;
    *(unsigned char *)(v63 - 0x7C014C707EC207E9) = v73 - (v74 & (2 * v73)) + (v67 ^ 0x4D);
  }
  STACK[0x508] = *(void *)(v65 + 8 * (v67 - 269));
  return sub_1000FDD38(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_1000F61C0()
{
}

void sub_1000F61DC()
{
  uint64_t v0 = *(&off_100166A10
       + ((107 * ((qword_100180398 + dword_100180F48) ^ 0x58)) ^ byte_100119E30[byte_100123CA0[(107 * ((qword_100180398 + dword_100180F48) ^ 0x58))] ^ 0xA7])
       - 138);
  unsigned __int8 v1 = 107 * (*v0 ^ qword_100180398 ^ 0x58);
  int v2 = *(&off_100166A10 + (byte_10011D9F0[byte_100119D34[v1 - 4] ^ 0x61] ^ v1) - 91);
  unint64_t v3 = (unint64_t)&v5[*v2 - *v0];
  *uint64_t v0 = 139864171 * v3 + 0x12F84548EE4379C8;
  *int v2 = 139864171 * (v3 ^ 0x945BD3199FE9FF58);
  v6[1] = -504207030 - 1734042137 * (((v6 | 0x8FC1DD99) + (~v6 | 0x703E2266)) ^ 0xD30F1ED5);
  LOBYTE(v2) = 107 * ((*(_DWORD *)v2 + *(_DWORD *)v0) ^ 0x58);
  uint64_t v4 = (char *)*(&off_100166A10
               + ((107 * ((qword_100180398 - dword_100180F48) ^ 0x58)) ^ byte_100119E30[byte_100123CA0[(107 * ((qword_100180398 - dword_100180F48) ^ 0x58))] ^ 0xA7])
               - 56)
     - 4;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100119E3C[(byte_100123CA0[v2] ^ 0xF2)
                                                                       - 12] ^ v2)
                                      + 15768])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000F63E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                                        + 8
                                                                                        * ((((v5 & 8) == ((v6 - 364) ^ 0x21D))
                                                                                          * ((v6 - 764406858) & 0x2D8FECFE ^ 0x41E)) | v6)))(a1, a2, a3, a4, a5, (a4 - a5));
}

uint64_t sub_1000F6434@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  *(unsigned char *)(a1 + v3 + v4) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v3 + 1 + v4) > 0x3F) * a2) ^ v2)))();
}

uint64_t sub_1000F6460@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,uint64_t a26,unsigned __int8 a27,unint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  return sub_1000BF51C(a1, a2, a3, a4, a5, a6, a7 + 34, a8, a9, a10, a11, a12, a13, a14, v37 - 204, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1000F6478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, unsigned int a16)
{
  a14 = v16;
  a15 = a10;
  a16 = 3804331 * (((&a13 | 0x3E79ACC6) - (&a13 & 0x3E79ACC6)) ^ 0xC4E75F90) + 795;
  uint64_t v19 = (*(uint64_t (**)(int *))(v18 + 16336))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((500 * (a13 == v17)) ^ 0x631u)))(v19);
}

void sub_1000F6520(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 1734042137 * ((2 * (a1 & 0xD46ACE1E) - a1 + 731197921) ^ 0x775BF2AC);
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1000F6630()
{
  unsigned int v3 = LODWORD(STACK[0x47C]) + 519180286;
  unsigned int v4 = v0 + 487 + v1 + 1907607702;
  int v5 = (v4 < 0xCFA9C962) ^ (v3 < (((v0 - 799) | 0x42) ^ 0xCFA9C9A4));
  BOOL v6 = v3 < v4;
  if (v5) {
    BOOL v6 = v4 < 0xCFA9C962;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((116 * !v6) ^ v0)))();
}

uint64_t sub_1000F66B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v31 = v30 - 144;
  *(void *)(v30 - 144) = a22;
  *(_DWORD *)(v30 - 136) = v27
                         + 7
                         - 1374699841 * ((~((v30 - 144) | 0xE767908B) + ((v30 - 144) & 0xE767908B)) ^ 0x756C777D);
  *(void *)(v30 - 112) = v29;
  *(void *)(v30 - 128) = a22;
  *(void *)(v30 - 120) = a24;
  (*(void (**)(uint64_t))(v25 + 8 * (v27 + 770)))(v30 - 144);
  *(_DWORD *)(v30 - 136) = v27
                         + 7
                         - 1374699841
                         * (((((v30 - 144) | 0xB16E66B2) ^ 0xFFFFFFFE) - (~(v30 - 144) | 0x4E91994D)) ^ 0x23658144);
  *(void *)(v30 - 144) = a22;
  *(void *)(v30 - 120) = a24;
  *(void *)(v30 - 112) = v29;
  *(void *)(v30 - 128) = a22;
  (*(void (**)(uint64_t))(a25 + 8 * (v27 ^ 0x31E)))(v30 - 144);
  *(void *)(v30 - 144) = a22;
  *(void *)(v30 - 120) = a24;
  *(void *)(v30 - 112) = v29;
  *(_DWORD *)(v30 - 136) = v27
                         + 7
                         - 1374699841 * ((((v30 - 144) | 0xD70F159B) - ((v30 - 144) & 0xD70F159B)) ^ 0xBAFB0D92);
  *(void *)(v30 - 128) = a22;
  (*(void (**)(uint64_t))(a25 + 8 * (v27 ^ 0x31E)))(v30 - 144);
  int v32 = 460628867 * (((v31 | 0x26BC37B0) - (v31 & 0x26BC37B0)) ^ 0x6A2AB5CD);
  *(_DWORD *)(v30 - 128) = v27 - 900 + v32;
  *(void *)(v30 - 136) = v26;
  *(_DWORD *)(v30 - 144) = v32 + v28 - 1999839576;
  (*(void (**)(uint64_t))(a25 + 8 * (v27 ^ 0x32B)))(v30 - 144);
  BOOL v33 = *(_DWORD *)(v30 - 140) == -1022760981;
  unsigned int v34 = 460628867 * (((v31 | 0x8A6259B2) - (v31 & 0x8A6259B2)) ^ 0xC6F4DBCF);
  *(_DWORD *)(v30 - 128) = v27 - 900 + v34;
  *(_DWORD *)(v30 - 144) = v28 - 1999839576 + v34 - 1;
  *(void *)(v30 - 136) = v26;
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(a25 + 8 * (v27 + 791)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(a25 + 8 * ((28 * (((v27 + 51) ^ v33) & 1)) ^ v27)))(v35);
}

void sub_1000F68F8()
{
}

uint64_t sub_1000F6968@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  LODWORD(STACK[0x520]) = v2 - 10;
  unint64_t v4 = STACK[0x510];
  unint64_t v5 = LODWORD(STACK[0x4BC]);
  STACK[0x4A0] = v5;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v3
                                                              + 8
                                                              * (((v5 == ((a2 - 526) | 0x80) - 390) * (a2 - 742)) ^ (a2 + 648))))(a1, v4);
}

void sub_1000F69B0(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  a5 = v7
     + 1374699841 * ((1362823709 - (&a3 | 0x513B0A1D) + (&a3 | 0xAEC4F5E2)) ^ 0xC330EDEB)
     + 1121;
  a3 = v6;
  a4 = a1;
  (*(void (**)(uint64_t *))(v5 + 8 * (v7 + 1399)))(&a3);
  JUMPOUT(0x1000BEF48);
}

uint64_t sub_1000F6A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v78 = (((v75 | 0x5A56A733) + (~v75 | 0xA5A958CC)) ^ 0x16C0254F) * v71;
  *(void *)(v77 - 200) = a71;
  *(void *)(v77 - 184) = v74;
  *(void *)(v77 - 176) = a70;
  *(_DWORD *)(v77 - 168) = v78 ^ 0x43F274F1;
  *(_DWORD *)(v77 - 192) = (v73 - 812) ^ v78;
  uint64_t v79 = (*(uint64_t (**)(uint64_t))(v76 + 8 * (v73 + 1016)))(v77 - 200);
  return (*(uint64_t (**)(uint64_t))(v76
                                            + 8 * ((2004 * (*(_DWORD *)(v77 - 164) != v72 + v73 - 933 - 78)) ^ v73)))(v79);
}

uint64_t sub_1000F6AC4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((*(_DWORD *)(a1 + 1424) == ((v1 + 476177279) & 0xE39E17FF) + 70636072) | v1)))();
}

uint64_t sub_1000F6B08(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return sub_1000E6D84(a1, a2, a3, a4);
}

uint64_t sub_1000F6B34()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((967 * (STACK[0x540] != 0)) ^ (v0 + 1254))))();
}

uint64_t sub_1000F6B60@<X0>(int a1@<W8>, uint64_t a2)
{
  BOOL v8 = v3 < v2;
  *(unsigned char *)(a2 + (v5 - 685189316)) = *(unsigned char *)(v7 + (v5 - 685189316))
                                                  - ((*(unsigned char *)(v7 + (v5 - 685189316)) << ((a1 - 36) ^ 0x1A)) & 0xA8)
                                                  + 84;
  if (v8 == v5 - 1220857919 < v2) {
    BOOL v8 = v5 - 1220857919 < v3;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v8 * v4) ^ a1)))();
}

uint64_t sub_1000F6BE0()
{
  *(void *)(v3 + (v1 | 1)) = v6;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 == 0) * v5) ^ v0)))();
}

uint64_t sub_1000F6C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                               + 8
                                                                               * (int)((((a8 + 120361368) & 0xF8D36FEF ^ 0x358 ^ (26 * (a8 ^ 0x1C0)))
                                                                                      * (v8 < 0x10)) ^ a8)))(a1, a2, a3, a4, 0);
}

uint64_t sub_1000F6C5C(uint64_t a1, int a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  BOOL v41 = v38 != a4 + a5 + (v37 ^ a2) + 1318 - 1603 || a37 != a6;
  return (*(uint64_t (**)(void))(v39 + 8 * ((1720 * v41) ^ v37)))();
}

void sub_1000F6CA0(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 - 0x5BBAD1DEA41281ADLL) = 1;
  JUMPOUT(0x1000C7E58);
}

uint64_t sub_1000F6CBC()
{
  return sub_1000F6CD4();
}

uint64_t sub_1000F6CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((*(_DWORD *)(v11 + (v10 + a6) * (uint64_t)a7) != (((v7 ^ 0x47B) * v8) ^ 0x5342A730))
                                * v9) ^ v7)))();
}

uint64_t sub_1000F6D18@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 - 3 + v5 + v3 + (a1 ^ 0x38Eu)) = *(_DWORD *)(v2 - 3 + v5 + v3 + (a1 ^ 0x38Eu));
  return (*(uint64_t (**)(void))(v6 + 8 * ((62 * (v4 == 4)) ^ (a1 + 139))))();
}

uint64_t sub_1000F6D68()
{
  int v7 = ((((2 * (v6 - 144)) | 0x915946F0) - (v6 - 144) + 928210056) ^ 0x3232502E) * v4;
  *(void *)(v6 - 120) = v0;
  *(void *)(v6 - 144) = v5;
  *(_DWORD *)(v6 - 136) = (v1 + 1136) ^ v7;
  *(_DWORD *)(v6 - 132) = ((v1 ^ 0x36C534E1) + v2) ^ v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 ^ 0x664)))(v6 - 144);
  return sub_1000F6DE0(v8);
}

uint64_t sub_1000F6DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(_DWORD *)(v34 - 128) = v33 - 538 - ((((v34 - 144) | 0x9DE8374D) - ((v34 - 144) & 0x9DE8374D)) ^ 0x6776C41B) * v30;
  *(void *)(v34 - 144) = a26;
  *(void *)(v34 - 136) = a27;
  uint64_t v38 = 8 * (v33 + 1144);
  (*(void (**)(uint64_t))(v27 + v38))(v34 - 144);
  *(void *)(v34 - 120) = a27;
  *(void *)(v34 - 112) = v28;
  *(_DWORD *)(v34 - 128) = v33 - 869 - 1374699841 * ((v34 - 920209880 - 2 * ((v34 - 144) & 0xC926B6B8)) ^ 0xA4D2AEB1);
  *(void *)(v34 - 144) = v31;
  *(void *)(v34 - 136) = a26;
  uint64_t v37 = 8 * (v33 ^ 0x4FA);
  (*(void (**)(uint64_t))(v27 + v37))(v34 - 144);
  *(void *)(v34 - 104) = v29;
  *(_DWORD *)(v34 - 112) = (v33 + 1024) ^ (1755732067
                                         * (((((v34 - 144) | 0xFDE837B0) ^ 0xFFFFFFFE) - (~(v34 - 144) | 0x217C84F)) ^ 0xDCD17594));
  *(void *)(v34 - 128) = a26;
  *(void *)(v34 - 120) = v28;
  *(void *)(v34 - 144) = v28;
  *(void *)(v34 - 136) = a27;
  (*(void (**)(uint64_t))(v27 + 8 * (v33 + 1087)))(v34 - 144);
  *(_DWORD *)(v34 - 112) = v33
                         - 145
                         - 1225351577
                         * ((((v34 - 144) | 0x4A122FF4) - (v34 - 144) + ((v34 - 144) & 0xB5EDD008)) ^ 0x6988F7E2);
  *(void *)(v34 - 104) = a27;
  *(void *)(v34 - 144) = a26;
  *(void *)(v34 - 136) = v28;
  *(void *)(v34 - 128) = a17;
  *(void *)(v34 - 120) = v28;
  (*(void (**)(uint64_t))(v27 + 8 * (v33 + 1148)))(v34 - 144);
  *(_DWORD *)(v34 - 128) = v33
                         - 538
                         - 3804331 * ((2 * ((v34 - 144) & 0x335A7EF8) - (v34 - 144) + 1285914884) ^ 0xB63B7252);
  *(void *)(v34 - 144) = a26;
  *(void *)(v34 - 136) = a22;
  (*(void (**)(uint64_t))(v27 + v38))(v34 - 144);
  *(_DWORD *)(v34 - 128) = v33
                         - 869
                         - 1374699841 * ((((v34 - 144) | 0x720384D1) + (~(v34 - 144) | 0x8DFC7B2E)) ^ 0x1FF79CD9);
  *(void *)(v34 - 144) = v31;
  *(void *)(v34 - 136) = a26;
  *(void *)(v34 - 120) = a22;
  *(void *)(v34 - 112) = v32;
  (*(void (**)(uint64_t))(v27 + v37))(v34 - 144);
  *(void *)(v34 - 128) = a26;
  *(void *)(v34 - 120) = v32;
  *(void *)(v34 - 144) = v32;
  *(void *)(v34 - 136) = a22;
  *(void *)(v34 - 104) = v29;
  *(_DWORD *)(v34 - 112) = (v33 + 1024) ^ (1755732067
                                         * ((343500220 - ((v34 - 144) | 0x147965BC) + ((v34 - 144) | 0xEB869A43)) ^ 0x35402798));
  (*(void (**)(uint64_t))(v27 + 8 * (v33 + 1087)))(v34 - 144);
  *(void *)(v34 - 144) = a26;
  *(void *)(v34 - 136) = v32;
  *(_DWORD *)(v34 - 112) = v33 - 145 - 1225351577 * ((v34 - 144) ^ 0x239AD816);
  *(void *)(v34 - 128) = a19;
  *(void *)(v34 - 120) = v32;
  *(void *)(v34 - 104) = a22;
  (*(void (**)(uint64_t))(v27 + 8 * (v33 ^ 0x49C)))(v34 - 144);
  *(void *)(v34 - 144) = v28;
  *(void *)(v34 - 128) = v32;
  *(_DWORD *)(v34 - 136) = (v33 - 240) ^ (1734042137
                                        * (((v34 - 144) & 0x63AE73F | ~((v34 - 144) | 0x63AE73F)) ^ 0xA50BDB8D));
  (*(void (**)(uint64_t))(v27 + 8 * (v33 + 1131)))(v34 - 144);
  *(void *)(v34 - 136) = v32;
  *(_DWORD *)(v34 - 144) = (v33 - 666) ^ (535753261
                                        * ((((v34 - 144) ^ 0xF3500E6A) & 0x788BE91F | ~((v34 - 144) ^ 0xF3500E6A | 0x788BE91F)) ^ 0x7ED016A5));
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v33 ^ 0x4EC)))(v34 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * ((1978
                                              * (*(_DWORD *)(v34 - 128) < (((19 * (v33 ^ 0x365) - 433) | 0x1B1) ^ 0x2BA13C13u))) ^ v33)))(v35);
}

void sub_1000F721C()
{
}

uint64_t sub_1000F7230()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 + v3 + 63 < (v0 + v3)) ^ (v1 + 48)) & 1)
                                * (v1 - 1181)) ^ v1)))();
}

void sub_1000F7288(uint64_t a1)
{
  int v1 = 1224239923 * ((~a1 & 0xC46B4FA3 | a1 & 0x3B94B05C) ^ 0x36D8B274);
  int v2 = *(_DWORD *)a1 + v1;
  int v3 = (*(unsigned char *)(a1 + 16) + v1);
  int v4 = (char *)*(&off_100166A10 + v2 - 937) - 4;
  (*(void (**)(void, uint64_t (*)()))&v4[8 * (v2 ^ 0x3F7)])(*(&off_100166A10 + v2 - 925), sub_1000FD5CC);
  uint64_t v6 = *(void *)((char *)*(&off_100166A10 + (v2 ^ 0x44F)) - 4);
  unsigned int v5 = (3804331
      * (((&v5 | 0x2C75F771) - &v5 + (&v5 & 0xD38A0888)) ^ 0xD6EB0427)) ^ (v2 + 31);
  (*(void (**)(unsigned int *))&v4[8 * (v2 | 0x394)])(&v5);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000F73F8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 + 1951995097) & 0x8BA6EAF7) - 324) * ((v0 - 100) > 0x9B)) ^ v1)))();
}

uint64_t sub_1000F743C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((49 * (((((v1 - 1551) | 0x408) - 1129) ^ v0) > 7)) ^ v1)))();
}

uint64_t sub_1000F7474(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v12 = (((*(unsigned __int8 *)(a2 + 9) - 1) << (((v8 + 94) | 0x2A) ^ (v6 + 1))) & v10)
      + ((*(unsigned __int8 *)(a2 + 9) - 1) ^ (((v8 + 1086362458) | 0x8008292E) + a4)) == v9
     && (v4 + v5 + 4) < 0xC9;
  return (*(uint64_t (**)(void))(v7 + 8 * ((1052 * v12) ^ v8)))();
}

uint64_t sub_1000F74F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  unsigned int v31 = v26 + v25 + a4;
  if (v31 <= 0x40) {
    int v32 = 64;
  }
  else {
    int v32 = v31;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((43 * ((int)a2 + v28 + v29 + v32 + 29 <= ((v31 - 1) ^ v27 ^ 0x475 ^ (v27 - 1137) ^ 0xFFFFFF1B))) ^ v27)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1000F7568@<X0>(unsigned int a1@<W8>)
{
  uint64_t v4 = a1;
  unint64_t v5 = ((v1 - 277) ^ 0xFFFFFFFFDFD18821) + a1;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * (((v5 - v4 + 539915761 > 7) * ((v3 + v1 - 838) ^ (v3 + 28))) ^ v1)))();
}

uint64_t sub_1000F75D0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((v1 - 102) | 0x61) ^ 0x5F7) * (*(_DWORD *)(v2 - 0x65EF48AAD10F56FCLL) == -1008821960)) ^ v1)))();
}

uint64_t sub_1000F7620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  int v49 = 535753261 * ((((2 * (v48 - 168)) | 0x724C342) - (v48 - 168) - 59924897) ^ 0x9666F8E);
  *(_DWORD *)(v48 - 160) = a13 - v49;
  *(_DWORD *)(v48 - 156) = (v47 + 17) ^ v49;
  STACK[0x358] = a26;
  uint64_t v50 = (*(uint64_t (**)(uint64_t))(v46 + 8 * (v47 ^ 0x7A1)))(v48 - 168);
  uint64_t v51 = a46 & 0x3F ^ (v47 - 52);
  *(&a37 + v51) = -44;
  return (*(uint64_t (**)(uint64_t))(v46 + 8 * (((v51 > 0x37) * (v47 + 1664)) ^ v47)))(v50);
}

void sub_1000F7714(uint64_t a1)
{
  int v1 = 1755732067 * (((a1 | 0x92FAE161) - a1 + (a1 & 0x6D051E9E)) ^ 0x4C3C5CBA);
  int v2 = *(_DWORD *)(a1 + 20) - v1;
  int v3 = *(_DWORD *)(a1 + 48) - v1;
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 8);
  int v6 = (*(_DWORD *)(a1 + 16) ^ v1) - ((2 * (*(_DWORD *)(a1 + 16) ^ v1) + 406827792) & 0x5810409E) - 131597865;
  unsigned int v7 = 1225351577 * ((&v9 & 0xE90EA516 | ~(&v9 | 0xE90EA516)) ^ 0x356B82FF);
  uint64_t v16 = *(void *)a1;
  uint64_t v9 = v16;
  int v14 = v7 ^ (v2 + 1695026961);
  int v15 = v7 ^ (696906779 * v3 - 877901658);
  int v10 = v6 ^ v7;
  uint64_t v11 = v5;
  uint64_t v12 = v4;
  int v8 = (char *)*(&off_100166A10 + v2 - 339) - 4;
  (*(void (**)(uint64_t *))&v8[8 * (v2 ^ 0x69D)])(&v9);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000F78B0(uint64_t a1)
{
  return sub_1000F78B8(a1, *v1);
}

uint64_t sub_1000F78B8(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t, void))(v3 + 8 * (v2 + 1311)))(*v6, a2, *(_DWORD *)(v4 - 0x65EF48AAD10F570CLL) + ((v2 + 146) ^ 0xE2D3F4C9));
  *uint64_t v9 = v8;
  *(_DWORD *)(v4 - 0x65EF48AAD10F570CLL) = v7;
  *uint64_t v5 = v7;
  return result;
}

uint64_t sub_1000F7930()
{
  return sub_1000F793C();
}

uint64_t sub_1000F793C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v15 = *(uint64_t (**)(void))(v12 + 8 * v7);
  uint64_t v16 = *v13;
  unsigned int v17 = v8 + a6;
  *(unsigned char *)(*v13 + v17) = (HIBYTE(v6) ^ 0xD0) - 2 * ((HIBYTE(v6) ^ 0xD0) & v9 ^ HIBYTE(v6) & 3) + 84;
  *(unsigned char *)(v16 + v17 + 1) = (BYTE2(v6) ^ 0x7D) + (v9 | ~(2 * (BYTE2(v6) ^ 0x7D))) + 85;
  *(unsigned char *)(v16 + v17 + 2) = (v11 ^ BYTE1(v6)) - (v10 & (2 * (v11 ^ BYTE1(v6)))) + 84;
  *(unsigned char *)(v16 + v17 + 3) = v6 ^ v14;
  return v15();
}

uint64_t sub_1000F79C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int32x4_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return sub_1000BFC28(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, v63 - 188, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a9);
}

void sub_1000F79D8()
{
}

uint64_t sub_1000F7B4C(double a1)
{
  *int v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

uint64_t sub_1000F7B70(uint64_t a1)
{
  *(unsigned char *)(a1 + v1 + 4) = -115;
  return sub_1000FAC4C(a1);
}

uint64_t sub_1000F7B9C@<X0>(void *a1@<X1>, int a2@<W2>, int a3@<W6>, int a4@<W7>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  unint64_t v32 = (*(_DWORD *)(a24 + 4 * (a5 + 1 + v26)) ^ v24)
      + HIDWORD(v29)
      + v31 * (unint64_t)(*(_DWORD *)(*a1 + 4 * (a5 + 1 + v26)) ^ v24);
  *(_DWORD *)(a24 + 4 * (a5 + v26)) = v24 + (a3 ^ (2 * v30)) + v32 - (v25 & (2 * v32)) - 1906;
  BOOL v34 = a5 + a4 < v27 && a5 + a4 >= a2;
  return (*(uint64_t (**)(void))(v28 + 8 * (((4 * v34) | (8 * v34)) ^ v30)))();
}

uint64_t sub_1000F7C10()
{
  *(_DWORD *)(*(void *)(v0 + 96) + 1428) = 596678635;
  return sub_1000BFA5C();
}

uint64_t sub_1000F7C38()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8 * (((v0 == ((v1 ^ 0xD0) - 21)) * (v1 + 1681)) ^ v1)))(4294925278);
}

uint64_t sub_1000F7C68@<X0>(int a1@<W8>)
{
  int v3 = (a1 + 809) | 0x10;
  *(_DWORD *)(v2 - 200) = v3
                        - 235795823 * ((((v2 - 200) | 0x350D6635) + (~(v2 - 200) | 0xCAF299CA)) ^ 0xA1A02F6D)
                        - 231789896;
  (*(void (**)(uint64_t))(v1 + 8 * (v3 ^ 0x3BB)))(v2 - 200);
  int v4 = (((v3 - 88) ^ (v3 - 1)) ^ ((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v3 ^ 0x3B3)))(336, 1777295586) == 0)) & 1;
  return (*(uint64_t (**)(void))(v1 + 8 * (v4 | (4 * v4) | v3)))();
}

void sub_1000F7D48(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x17980B1E60F15496) + 1210911083;
  unsigned int v3 = *(_DWORD *)(a1 + 20) + v1 - 1319899541;
  BOOL v4 = v2 < 0xF8E4C2CE;
  BOOL v5 = v2 > v3;
  if (v3 < 0xF8E4C2CE != v4) {
    BOOL v5 = v4;
  }
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000F7E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  int v26 = (a23 ^ v25) - ((2 * (a23 ^ v25)) & 0xC0EA0376) + 1618279968 + a22;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8 * ((((2 * v26) & 0xBD0FF6B6 ^ 0x800A0236) + (v26 ^ 0x3EF2FAE0) - 67178563 != 1518791448) ^ (v24 + 1274))))(a1, a2, a3, a19 & 0x9DB4BBF7, a5, a6, 2776175847, 150, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_1000F7EEC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void, uint64_t))(v3
                                                    + 8
                                                    * ((((v2 ^ 0xA6E7A704) != (((a2 - 1313) | 0x581) ^ 0x5CD))
                                                      * ((a2 - 1313) ^ 0xAF)) ^ a2)))((v2 ^ 0xA6E7A704) + 487737530, 1872467169);
}

uint64_t sub_1000F7F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((1023
                                * (((((v8 - 198) | 0x119) - 273) & *(_DWORD *)(v10 + (v9 + a6) * (uint64_t)a7 + 40)) == ((v8 + a8) & 0x7E4DDFFE) - 928)) ^ v8)))();
}

uint64_t sub_1000F7FA4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((226 * (v4 + 1 != v6 + 64)) ^ a4)))();
}

uint64_t sub_1000F805C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  int v38 = v34 ^ 0x4F6;
  int v39 = ((v34 ^ 0x4F6) - 1210422904) & 0x482594FB;
  int v40 = (v34 ^ 0x4F6) - 444;
  unsigned int v41 = v36 + v35 - 2046223212;
  if (v41 <= 0x40) {
    int v42 = 64;
  }
  else {
    int v42 = v36 + v35 - 2046223212;
  }
  BOOL v43 = a1 + 2046221019 + a34 + v39 + v42 + 1991 <= ((v41 - 1) ^ v40 ^ 0xFFFFFF75);
  return (*(uint64_t (**)(void))(v37 + 8 * (((2 * v43) | (8 * v43)) ^ v38)))();
}

uint64_t sub_1000F80F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((127 * (a8 + 1 == v9 + 80)) ^ a4)))();
}

void sub_1000F81A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8)
     + 1755732067 * (((a1 ^ 0xB0C02B5A) + 1315759944 - 2 * ((a1 ^ 0xB0C02B5A) & 0x4E6CE748)) ^ 0x206A71C9);
  if (*(_DWORD *)(*(void *)(a1 + 24) - 0x774B811B42847B23) - 715496183 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)(a1 + 24) - 0x774B811B42847B23) - 715496183;
  }
  else {
    unsigned int v3 = 715496183 - *(_DWORD *)(*(void *)(a1 + 24) - 0x774B811B42847B23);
  }
  uint64_t v2 = *(void *)a1;
  if (*(_DWORD *)(*(void *)a1 - 0x774B811B42847B23) - 715496183 >= 0) {
    unsigned int v4 = *(_DWORD *)(v2 - 0x774B811B42847B23) - 715496183;
  }
  else {
    unsigned int v4 = 715496183 - *(_DWORD *)(v2 - 0x774B811B42847B23);
  }
  uint64_t v8 = *(void *)(a1 + 24);
  unsigned int v7 = (535753261 * ((((2 * &v7) | 0xD29455A8) - &v7 + 381015340) ^ 0xE3BE24FB)) ^ (v1 - 924);
  uint64_t v5 = (char *)*(&off_100166A10 + (v1 ^ 0x4EC)) - 4;
  (*(void (**)(unsigned int *))&v5[8 * (v1 ^ 0x3EA)])(&v7);
  if (v3 >= v4) {
    unsigned int v6 = v4;
  }
  else {
    unsigned int v6 = v3;
  }
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1000F8348@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  BOOL v27 = v21 < a1;
  *(&a20 + (a3 - 730294624)) = *(unsigned char *)(v24 + (v20 + v26))
                                           - ((*(unsigned char *)(v24 + (v20 + v26)) << (v23 ^ 0x2F)) & 0xA8)
                                           + 84;
  if (v27 == v20 + a2 < a1) {
    BOOL v27 = v20 + a2 < v21;
  }
  return (*(uint64_t (**)(void))(v25 + 8 * (v27 | (4 * v27) | v22)))();
}

uint64_t sub_1000F83C4()
{
  STACK[0x380] = v1;
  STACK[0x5B0] = v1 - 112;
  return v0();
}

uint64_t sub_1000F83E0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((933 * (v5 + 1 == v4 + 60)) ^ a3)))();
}

uint64_t sub_1000F849C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,int a39)
{
  if (a17 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v39
  }
                                                       + 8
                                                       * (((a39 != 891668432) * ((2 * (a6 ^ (a6 - 541))) ^ 0x453)) ^ (a6 + a4))))(3096986284, a10);
  if (a17 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v39
  }
                                                       + 8
                                                       * (((a39 != 891668432) * ((a6 + a4) ^ 0x479)) ^ (a6 + a4 + 142))))(3096986284, a10);
  uint64_t v41 = (a4 - 1197981081) | 0x9Au;
  unint64_t v42 = ((unint64_t)&a22 ^ 0x4F67FF5FBEF3D96ALL ^ v41)
      + ((2 * (void)&a22) & 0x9ECFFEBF7DE7BBE0)
      - 0xA00EA5000417FF1;
  a38 = (((a4 + 103) | 0x9A) ^ (a6 - 117) ^ v42 ^ 0x16) * (v42 + 17);
  return (*(uint64_t (**)(uint64_t))(v39 + 8 * (int)v41))(3096986284);
}

uint64_t sub_1000F8620@<X0>(void *a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v7 = (a2 - 985) | 0x26Au;
  *(void *)(*a1 - 0x15227257BF786DCCLL) = v6 + v5 + v7 - 626;
  return (*(uint64_t (**)(void))(a3 + 8
                                   * (int)((479 * (*v3 == v4 + ((v7 - 148428803) & 0x8D8D7FD) - 629)) ^ v7)))();
}

void sub_1000F86A0()
{
}

void sub_1000F86A8()
{
  if (v0 == 85169082) {
    int v1 = -1008821960;
  }
  else {
    int v1 = 1008845536;
  }
  *(_DWORD *)(v2 + 32) = v1;
}

uint64_t sub_1000F870C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * (int)((((v5 ^ 0x7D6) + ((v5 + 277858363) & 0xEF7037CF) - 1348) * (v4 == a4)) ^ v5)))();
}

void sub_1000F8750()
{
}

uint64_t sub_1000F879C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6, int a7)
{
  unsigned int v13 = ((2 * (&a3 & 0x28C77998) - &a3 - 684161440) ^ 0xF4A25E76) * v7;
  a3 = v8;
  a4 = v9;
  a5 = (((2 * (v11 - 2083989067)) & 0xFDBFC7BE)
      + ((v11 - 2083989067) ^ 0xFEDFE3DF)
      + ((v12 + 959470811) & 0xC6CFA37B ^ 0x39B25D67)) ^ v13;
  a6 = a1 - v13;
  a7 = (v12 - 160) ^ v13;
  uint64_t v14 = (*(uint64_t (**)(uint64_t *))(v10 + 8 * (v12 ^ 0x51E)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((1651 * (*(_DWORD *)(v9 - 0x65EF48AAD10F56FCLL) == -1008821960)) ^ v12)))(v14);
}

uint64_t sub_1000F8890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000F88D0(588, 1366, 984, a4, 102, 4129713926, 2064856963, 178694817);
}

uint64_t sub_1000F88D0@<X0>(unint64_t a1@<X8>)
{
  BOOL v5 = v2 + (unint64_t)(v1 ^ v3) - 1046 < a1;
  return (*(uint64_t (**)(void))(v4 + 8 * (((2 * v5) | (32 * v5)) ^ v1)))();
}

uint64_t sub_1000F891C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((v10 - 199324015) & 0xBE1733F ^ (a8 - 739) ^ ((v10 + 814761973) | 0x460E148A))
                                * (v8 - v9 == -295310829)) ^ v10)))();
}

uint64_t sub_1000F8994()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((14
                                * ((*(_DWORD *)(*v2 + 4 * v5) ^ (v1 + v4)) > (*(_DWORD *)(*v3 + 4 * v5) ^ (v4 + v1)))) ^ v4)))();
}

uint64_t sub_1000F89E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(*a1 - 0x15227257BF786DCCLL) = 0;
  return (*(uint64_t (**)(void))(a2 + 8 * ((479 * (*v2 == v3 + ((v4 - 148428803) & 0x8D8D7FD) - 629)) ^ v4)))();
}

uint64_t sub_1000F8A44()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (1758 * (v1 == v3)))))();
}

void sub_1000F8A68()
{
  int v4 = (v1 - 807110667) & 0x301B87FF;
  *(_DWORD *)(v3 - 160) = v2;
  *(void *)(v3 - 136) = v0 - 7;
  *(void *)(v3 - 152) = *(void *)(v3 - 120) - 7;
  *(_DWORD *)(v3 - 168) = (v4 ^ 0xFFFFFC4F) & v2;
  *(_DWORD *)(v3 - 144) = v4;
  *(_DWORD *)(v3 - 124) = v4 ^ 0x344;
  JUMPOUT(0x1000F8AFCLL);
}

uint64_t sub_1000F8BEC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8 * ((114 * (((v1 == 2083989067) ^ (v2 + 123)) & 1)) ^ (v2 + 1147))))();
}

uint64_t sub_1000F8C34(void *a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((((v2 & 0xFD) + 78) ^ (*(_DWORD *)(*a1 + v4) == v3)) & 1)
                                     * ((((v2 & 0xE48721FD) + 1040782330) & 0xC1F6EFBB) - 472)) ^ v2 & 0xE48721FD)))();
}

uint64_t sub_1000F8C90@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((91 * (a1 + 1 != v3 + 48)) ^ a2)))();
}

uint64_t sub_1000F8D6C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(void *)(*(void *)(v1 + 8 * (a1 - 366)) - 4) != 0)
                                     * ((a1 ^ 0xBDDC9241) + 1109617742)) | a1)))();
}

uint64_t sub_1000F8DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v11 = v7 - 355;
  int v12 = *(unsigned __int8 *)STACK[0x598]
      - ((((v11 - 34) | 0x10) ^ 0xFB)
                        + *(unsigned char *)(*(void *)(v9 + v8 * (uint64_t)a7 + 24) - 0x4019A21BF4676349));
  return (*(uint64_t (**)(void))(v10 + 8
                                    * ((583 * (((2 * v12) & 0x8FBFAEFC) + (v12 ^ 0x47DFD77E) == 1205852030)) ^ v11)))();
}

void sub_1000F8E68(uint64_t a1)
{
  int v1 = 3804331 * (((a1 | 0xE97B4C4E) - a1 + (a1 & 0x1684B3B1)) ^ 0x13E5BF18);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1000F8F4C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 == v3) * ((v0 ^ 0x143) + 1377)) ^ v0)))();
}

uint64_t sub_1000F8F74()
{
  return sub_1000F8F9C();
}

uint64_t sub_1000F8F9C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * a1))();
}

uint64_t sub_1000F900C@<X0>(int a1@<W8>)
{
  return sub_1000BF424(a1);
}

void sub_1000F9030()
{
}

uint64_t sub_1000F9040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  BOOL v14 = a12 + 8126631 + ((v13 - 164606746) & 0x9CFADDAu) > 0x7FFFFFFD;
  return (*(uint64_t (**)(void))(v12 + 8 * ((v14 | (8 * v14)) ^ v13)))();
}

uint64_t sub_1000F90AC(uint64_t a1, uint64_t a2, int a3, int32x4_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return sub_1000BFC28(a1, a2, a3, 2200714081, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a4);
}

uint64_t sub_1000F90B8()
{
  int v5 = 628203409 * ((((v4 - 120) | 0x75C4A665) - ((v4 - 120) & 0x75C4A665)) ^ 0xF74CAA56);
  *(_DWORD *)(v4 - 104) = v5 + v2 - 73;
  *(_DWORD *)(v4 - 120) = v3 - v5 + ((v2 - 304) ^ 0xEA2A0915);
  *(void *)(v4 - 112) = v0;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0x497)))(v4 - 120);
  return sub_1000F9138(v6);
}

uint64_t sub_1000F9138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v26 - 120) = v22 + ((v24 - ((v26 - 120) | v24) + ((v26 - 120) | 0xD62C86FB)) ^ 0x4281CFA2) * v25 + 784;
  *(void *)(v26 - 112) = a19;
  *(void *)(v26 - 104) = a21;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v22 + 1448)))(v26 - 120);
  int v28 = *(_DWORD *)(v26 - 116) > (((v22 - 563) | 0x184) ^ ((v22 ^ 0x63Cu) + v23));
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * (((32 * v28) | (v28 << 6)) ^ v22)))(v27);
}

void sub_1000F91D4()
{
}

void sub_1000F91E0()
{
}

uint64_t sub_1000F91FC(_DWORD *a1)
{
  signed int v1 = (*a1 ^ (1374699841 * ((a1 - 1542394297 - 2 * (a1 & 0xA410EE47)) ^ 0xC9E4F64E)))
     - 2138963346;
  uint64_t v2 = *(void *)((char *)*(&off_100166A10 + v1) - 4);
  unsigned int v5 = v1
     + 3804331 * (((&v4 | 0xBBF09D3) - &v4 + (&v4 & 0xF440F628)) ^ 0xF121FA85)
     + 1214;
  uint64_t v4 = v2;
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_100166A10 + v1 + 138) + 8 * v1 + 16388))(&v4);
}

uint64_t sub_1000F9304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v55 = *(void *)(v51 + 24);
  *(int8x16_t *)(v53 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(v51 + 16) - 0x7E73F30E3C909666), (int8x16_t)xmmword_100123ED0);
  if (v52) {
    BOOL v56 = v55 == 0x4CA0F7536780EB2FLL;
  }
  else {
    BOOL v56 = 1;
  }
  char v57 = v56;
  HIDWORD(a27) = v50 << (a6 - 119);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8 * (int)((232 * (((a6 + 119) ^ v57) & 1)) ^ a6)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_1000F9394()
{
  return sub_1000F8F9C(v0 - 237);
}

uint64_t sub_1000F93BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, int a15)
{
  a13 = &STACK[0xB36971A36B56DCC];
  a15 = 420 - 460628867 * ((&a13 + 105572375 - 2 * ((unint64_t)&a13 & 0x64AE817)) ^ 0x4ADC6A6A);
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v16 + 16048))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((110 * (a14 != ((v15 + 590) ^ 0x2BE))) ^ 0x2ACu)))(v17);
}

void sub_1000F945C(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 16) != 0x65EF48AAD10F5714
    && *(void *)(a1 + 32) != 0x34F67AB82E5E9025
    && *(void *)(a1 + 8) != 0x3F5860029363B1D6;
  int v1 = *(_DWORD *)a1 + 1734042137 * (((a1 | 0x244186C0) - (a1 | 0xDBBE793F) - 608274113) ^ 0x788F458D);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000F9578()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((203 * (((((v3 + v2) & 0x1F) == 9) ^ (29 * (v0 ^ 0x71))) & 1)) ^ v0)))();
}

uint64_t sub_1000F95EC@<X0>(unsigned int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  if (!a3) {
    return (*(uint64_t (**)(void))(v59
  }
                                + 8
                                * ((732 * ((int)a14 - 632876696 < ((v61 + a2 + 1020) | 0xC6u) - 1207)) ^ (v61 + a2 + 346))))();
  if (a3 != 3) {
    return (*(uint64_t (**)(void))(v59
  }
                                + 8
                                * ((97 * (*(_DWORD *)(v58 + 48 * v60 + 36) + 736910439 >= a1)) ^ (v61 + 1990090519))))();
  int v62 = v61 + a2 + 1218;
  uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 48 * v60 + 8))(a5, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * ((927 * (v63 - 1008821960 - ((2 * v63) & 0x87BD3270) == -1008821960)) ^ v62)))(v63, v64, 3286145336, v65, 2929871293, 2884394087, 2147483652, 1990090206, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1000F978C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((506 * (v0 == ((v1 - 420623169) & 0xDFBBF0F2 ^ (v3 - 5)))) ^ v1)))();
}

uint64_t sub_1000F97D8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * ((11
                                * (*(_DWORD *)(a20 + 4 * ((v20 ^ 0x84u) + a1 + v22)) != (((v20 ^ 0x78A) - 1769) ^ (v21 - 135)))) ^ ((v20 ^ 0x78A) - 1787))))();
}

void sub_1000F982C()
{
}

uint64_t sub_1000F990C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v38 = *(void *)(v35 + 24);
  *(int8x16_t *)(v37 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(v35 + 40) - 0x18C386E3A064890BLL), (int8x16_t)xmmword_100123EB0);
  if (*(void *)(v37 - 120)) {
    BOOL v39 = v38 == 0x4CA0F7536780EB2FLL;
  }
  else {
    BOOL v39 = 1;
  }
  int v40 = v39;
  HIDWORD(a12) = 2 * v34;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (int)((v40 * (((a7 - 1731979282) & 0x673BE7F7) - 1426)) ^ a7)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

void sub_1000F99A0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a1 + a2) = 715496183;
  JUMPOUT(0x1000C6074);
}

uint64_t sub_1000F99B0()
{
  return sub_1000F9A00((v0 + 98661294), 4196306927, 3697484538, 3202741533, 881);
}

uint64_t sub_1000F9A00@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  BOOL v19 = v14 > v17;
  uint64_t v20 = 4 * (v12 + a6 + (a1 & a2));
  *(_DWORD *)(a12 + v20) = *(_DWORD *)(*v16 + v20);
  if (v19 == v12 + a3 < a4) {
    BOOL v19 = v12 + a3 < v15;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * ((v19 * a5) ^ (v13 + 80))))();
}

uint64_t sub_1000F9A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a15 = 420 - 460628867 * (((&a13 | 0x9D7D7D30) - (&a13 & 0x9D7D7D30)) ^ 0xD1EBFF4D);
  a13 = &STACK[0xB36971A36B56DC4];
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v15 + 16048))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((1171 * (a14 == (v16 ^ 0xF7F92E59) - 874156944)) ^ v16)))(v17);
}

uint64_t sub_1000F9B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a21 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21
  }
                                                                         + 8
                                                                         * (a5
                                                                          + v23
                                                                          + (*(_DWORD *)(v22 - 160) != 891668432)
                                                                          * ((v23 ^ (v23 + 103)) - 399)
                                                                          + 1093)))(a1, 1576401730, 3753632324, a14);
  if (a21 != 1) {
    JUMPOUT(0x1000F9CB8);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21
                                                              + 8
                                                              * ((63
                                                                * (*(_DWORD *)(v22 - 160) == ((v23 - 1877203252) & 0xA93A1DF3 ^ 0x3525C2B2))) ^ (a5 + v23 + 119))))(a1, 1576401730, a14);
}

uint64_t sub_1000F9CEC()
{
  *(void *)(v4 - 1202683318 + v1 + v2 - 786) = 0x5454545454545454;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((480 * (((v2 - 730) & v0) != 8)) ^ (v2 - 548))))();
}

uint64_t sub_1000F9D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((13 * (a7 ^ 0x28E) - 1693) & a8) == 2108814608) * (((a7 ^ 0x28E) + 1795) ^ 0xDB)) ^ a7)))();
}

uint64_t sub_1000F9DA0()
{
  *(_DWORD *)(v7 - 136) = v6 - 1374699841 * ((~((v7 - 144) | 0x2708FB5) + ((v7 - 144) & 0x2708FB5)) ^ 0x907B6843) + 607;
  *(void *)(v7 - 120) = v4;
  *(void *)(v7 - 112) = v5;
  *(void *)(v7 - 144) = v2;
  *(void *)(v7 - 128) = v2;
  (*(void (**)(uint64_t))(v1 + 8 * (v6 + 1370)))(v7 - 144);
  int v8 = 460628867 * ((v7 - 798053516 - 2 * ((v7 - 144) & 0xD06EAC04)) ^ 0x9CF82E79);
  *(void *)(v7 - 136) = v0;
  *(_DWORD *)(v7 - 144) = v8 + v3 - 1999839575;
  *(_DWORD *)(v7 - 128) = v8 + v6 - 300;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v6 + 1391)))(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((*(_DWORD *)(v7 - 140) == -1022760981) * ((v6 - 329) ^ v6 ^ 0x3AB)) ^ v6)))(v9);
}

uint64_t sub_1000F9EB0()
{
  return sub_1000F9EBC();
}

uint64_t sub_1000F9EBC(uint64_t a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v48 = *(uint64_t (**)(void, void))(v42 + 8 * v37);
  uint64_t v49 = *(unsigned int *)(v46 - 180);
  unsigned int v50 = *(_DWORD *)(v46 - 176);
  LODWORD(a26) = *(_DWORD *)(v46 - 180);
  unsigned int v52 = *(_DWORD *)(v46 - 172);
  int v51 = *(_DWORD *)(v46 - 168);
  uint64_t v53 = v52;
  int v54 = *(unsigned char *)(v46 - 156) ^ 0xDB;
  LODWORD(a22) = *(unsigned __int8 *)(v46 - 156) ^ 0xFFFFFFDB;
  if (v54 == 2)
  {
    unint64_t v76 = __PAIR64__(v52, v50);
    LODWORD(a24) = *(_DWORD *)(v46 - 168);
    uint64_t v77 = v48;
    int8x16x4_t v79 = vld4q_s8(v38);
    int v62 = v47 ^ (v47 + 770);
    uint64_t v63 = *(unsigned int *)(v46 - 164);
    uint8x16_t v64 = (uint8x16_t)veorq_s8(v79.val[1], a2);
    _Q22 = vmovl_u8(*(uint8x8_t *)v64.i8);
    _Q21 = vmovl_high_u8(v64);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    char v69 = (_DWORD *)(v43 + 4 * (v39 + 101290468));
    int v70 = *(v69 - 8) ^ *(v69 - 3);
    uint64_t v71 = (2 * v62) ^ 0x34E ^ (v41 + 834);
    int v72 = v70 + v71 - ((2 * v70) & 0x87BD3270);
    int v73 = *(v69 - 16) ^ *(v69 - 14);
    HIDWORD(v74) = v73 ^ 0x43DE9938 ^ v72;
    LODWORD(v74) = v73 ^ ~v72;
    *char v69 = (v74 >> 31) + v41 - ((2 * (v74 >> 31)) & 0x87BD3270);
    return (*(uint64_t (**)(void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t (*)(void, void), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * ((1678 * (v45 == 101290405)) ^ v62)))(HIDWORD(v74), v50, 115228000, v53, v71, v63, 2277323376, v49, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             v76,
             a24,
             v77,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37);
  }
  else
  {
    if (v54 == 1)
    {
      int8x16x4_t v78 = vld4q_s8(v38);
      uint8x16_t v55 = (uint8x16_t)veorq_s8(v78.val[2], a2);
      _Q26 = vmovl_high_u8(v55);
      _Q25 = vmovl_u8(*(uint8x8_t *)v55.i8);
      __asm
      {
        SHLL2           V25.4S, V25.8H, #0x10
        SHLL2           V26.4S, V26.8H, #0x10
      }
      JUMPOUT(0x1000FA038);
    }
    *(_DWORD *)(v46 - 180) = (v49 ^ v40) + (a26 ^ v40) + v40 - (v44 & (2 * ((v49 ^ v40) + (a26 ^ v40))));
    *(_DWORD *)(v46 - 176) = 2 * (v50 ^ v40) + v40 - (v44 & (4 * (v50 ^ v40)));
    *(_DWORD *)(v46 - 172) = 2 * (v52 ^ v40) + v40 - (v44 & (4 * (v52 ^ v40)));
    *(_DWORD *)(v46 - 168) = 2 * (v51 ^ v40) + v40 - (v44 & (4 * (v51 ^ v40)));
    return v48(a1, v50);
  }
}

void sub_1000FA318(int a1@<W5>, int a2@<W8>)
{
  *(_DWORD *)(v5 - 164) = (v3 ^ v2) + (a1 ^ v2) - (v4 & (2 * ((v3 ^ v2) + (a1 ^ v2)))) + ((a2 - 961953915) ^ 0x7077FDC2);
  JUMPOUT(0x1000FA36CLL);
}

void sub_1000FA62C()
{
}

void sub_1000FA684()
{
}

void sub_1000FA68C()
{
}

uint64_t sub_1000FA788(uint64_t a1)
{
  int v1 = 460628867 * ((a1 & 0x873FB66C | ~(a1 | 0x873FB66C)) ^ 0x3456CBEE);
  int v2 = *(_DWORD *)(a1 + 16) - v1;
  int v3 = *(_DWORD *)a1 - v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x774B811B42847B23);
  unsigned int v6 = v4 - 715496183;
  BOOL v5 = v4 - 715496183 < 0;
  unsigned int v7 = 715496183 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_100166A10 + (v2 ^ 0x1D2))
                              + 8 * ((989 * (v3 >> 5 < v7)) ^ v2)
                              - 4))();
}

uint64_t sub_1000FA840()
{
  int v4 = ((v0 + 936) ^ 0xEBA40BE9) + v2;
  int v5 = (v3 > 0x2C9E3264) ^ (v4 < -748565093);
  BOOL v6 = v4 < (int)(((v0 + 265) ^ 0x5361CFF7) + v3);
  if (v5) {
    BOOL v6 = v3 > 0x2C9E3264;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ (16 * v6))))();
}

void sub_1000FA8AC()
{
}

uint64_t sub_1000FA8F4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((117 * (((((7 * (v1 ^ 0x27D)) ^ 0x790) - 701) ^ v0) > 7)) ^ v1)))();
}

uint64_t sub_1000FA934()
{
  BOOL v5 = v0 < v1;
  unint64_t v6 = (v2 ^ 0xC6D4DBCEBD702EACLL) + v3;
  int v7 = v5 ^ (v6 < 0xA5373690);
  BOOL v8 = v6 < v0;
  if (!v7) {
    BOOL v5 = v8;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * (int)((1524 * v5) ^ (v2 - 433))))();
}

void sub_1000FA99C()
{
}

uint64_t sub_1000FAB4C()
{
  LODWORD(STACK[0x620]) = 1008845548;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((STACK[0x470] == 0x70459CB0620F0DF9) * (((v0 - 263) | 0x10C) ^ 0xC9)) ^ (v0 + 1460))))();
}

void sub_1000FABB0()
{
  LODWORD(STACK[0x3D8]) = v0;
  JUMPOUT(0x1000C9094);
}

uint64_t sub_1000FABBC@<X0>(int a1@<W8>)
{
  int v4 = v2 + a1;
  if (v4 >= 0) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = -v4;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 ^ 0x626) * (v5 > 0x82)) ^ v1)))();
}

void sub_1000FABE8()
{
}

uint64_t sub_1000FAC4C(uint64_t a1)
{
  *(unsigned char *)(a1 + v1 + 4) = v2;
  return sub_1000FAC60();
}

void sub_1000FAC60(_DWORD *a1)
{
  int v7 = v5 + v2;
  *a1 = v6 + 360031049 + v7;
  BOOL v8 = a1 + 1;
  *((unsigned char *)v8 + v3) = v4;
  *((unsigned char *)v8 + (v1 + v2 - 2)) = 103;
  *((unsigned char *)v8 + (v7 - 1548155700)) = 117;
  *((unsigned char *)v8 + (v7 - 1548155699)) = 56;
  JUMPOUT(0x1000FB938);
}

uint64_t sub_1000FACB8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v55 = (*(uint64_t (**)(void, void, uint64_t))(v53 + 8 * (a1 + 1816)))(LODWORD(STACK[0x580]), (v51 + v50 + 1), a45);
  int v61 = ((2 * v55) & 0xAF7E5DEA) + (v55 ^ 0xD7BF2EF5);
  unint64_t v62 = STACK[0x380];
  if (v61 == -675336459)
  {
    uint8x16_t v64 = (char *)&STACK[0x670] + v62 - 0x61CB92A9D1FA1DEFLL;
    STACK[0x518] = (unint64_t)(v64 - 1824);
    STACK[0x3D0] = (unint64_t)(v64 - 1596);
    LODWORD(STACK[0x428]) = 449729482;
    STACK[0x5B0] = v62 - 192;
    STACK[0x5E8] = 0;
    LODWORD(STACK[0x53C]) = 1576401730;
    STACK[0x3D8] = (unint64_t)(v64 - 1824);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * ((v52 + 888) ^ ((v64 - 1824 != (char *)-248) | (8 * (v64 - 1824 != (char *)-248))))))(v55, v56, v57, 1008845537, v58, v59, v60);
  }
  else if (v61 == -406901000)
  {
    LODWORD(STACK[0x4E8]) = 1008845312;
    return (*(uint64_t (**)(void))(v53
                                + 8 * (((STACK[0x4D8] == 0) * (((3 * (v52 ^ 0x80)) ^ 0x569) - 416)) ^ (v52 + 135))))();
  }
  else
  {
    int v65 = 1224239923 * ((((v54 - 200) | 0xABB2E131) + (~(v54 - 200) | 0x544D1ECE)) ^ 0x59011CE7);
    *(_DWORD *)(v54 - 184) = v65 + v52 + 1225;
    *(void *)(v54 - 192) = a50;
    *(_DWORD *)(v54 - 200) = v61 - v65 - 2 * (((_BYTE)v61 + 3) & 6 ^ (v61 + 675336459) & 0x43DE993E) - 333485501;
    uint64_t v66 = (*(uint64_t (**)(uint64_t))(v53 + 8 * (v52 + 1791)))(v54 - 200);
    return (*(uint64_t (**)(uint64_t))(v53
                                              + 8
                                              * (((STACK[0x4D8] == 0) * (((3 * (v52 ^ 0x80)) ^ 0x569) - 416)) ^ (v52 + 135))))(v66);
  }
}

uint64_t sub_1000FAF0C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 + 127962867 - 2 * (a1 & 0x7A08EF3)) ^ 0xD9663328));
  return (*(uint64_t (**)(void))((char *)*(&off_100166A10 + v1 - 477)
                              + 8
                              * (((*(void *)(a1 + 8) == 0x65EF48AAD10F5714) * ((2 * (v1 ^ 0x348)) ^ 0x275)) ^ v1)
                              - 4))();
}

uint64_t sub_1000FAFA0(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a1 - 708) | 0x42) + 50 * (a1 ^ 0x36C) - 2046) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1000FAFE0()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1739)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((114 * (STACK[0x4C0] == 0)) ^ (v0 + 1168))))();
}

void sub_1000FB01C()
{
}

uint64_t sub_1000FB024@<X0>(int a1@<W8>)
{
  int v7 = ((((2 * (v6 - 144)) | 0x1F1B3018) - (v6 - 144) + 1886545908) ^ 0xC31B1A71) * v1;
  *(void *)(v6 - 128) = v2;
  *(_DWORD *)(v6 - 120) = v7 + v3 + (a1 ^ 0xF3FD6C8);
  *(void *)(v6 - 144) = v5;
  *(_DWORD *)(v6 - 136) = v7 + a1 - 613;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (a1 ^ 0x334)))(v6 - 144);
  return sub_1000FB0A8(v8);
}

uint64_t sub_1000FB0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(_DWORD *)(v23 - 128) = v20 - ((v23 - 144) ^ 0xFA9EF356) * v21 - 411;
  *(void *)(v23 - 144) = a17;
  *(void *)(v23 - 136) = v19;
  (*(void (**)(uint64_t))(v18 + 8 * (v20 ^ 0x519)))(v23 - 144);
  *(_DWORD *)(v23 - 112) = v20
                         - ((-1760783398 - ((v23 - 144) | 0x970C93DA) + ((v23 - 144) | 0x68F36C25)) ^ 0x2465EE58) * a13
                         + 973;
  *(void *)(v23 - 104) = a16;
  *(void *)(v23 - 144) = a18;
  *(void *)(v23 - 136) = v19;
  *(void *)(v23 - 128) = a17;
  *(void *)(v23 - 120) = a12;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v20 + 1302)))(v23 - 144);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (int)((((((67 * (v20 ^ 0x2F1)) ^ (v22 == 0)) & 1) == 0)
                                                   * ((v20 + 492789004) & 0xE2A0A086 ^ 0x177)) ^ v20)))(v24);
}

uint64_t sub_1000FB1C8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((((v4 + v1 - 786) ^ ((v1 + 8685813) | 0x4F4973B0) ^ 0x62E) * (v2 == v0)) ^ v1)))();
}

uint64_t sub_1000FB20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  unsigned int v31 = a8 - 1024156330;
  unint64_t v32 = (_DWORD *)(a25 + 24 * v31);
  HIDWORD(a27) = v32[4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((35 * (((*v32 + (int)a3) & 0xFFFFFFFFFFFFFFDLL) == 0)) ^ v28)))(a1, a2, a3, a4, a5, a6, *(void *)(v30 + 24 * v31 + 16), a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

void sub_1000FB2B0()
{
}

uint64_t sub_1000FB2BC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1019
                                * (((2 * v1) & 0x5FFF7B7E ^ 0x565A381A) + (v1 ^ 0xD4D2A1B2) + 1396506568 == (v0 ^ 0x47F) + 54310862)) ^ v0)))();
}

uint64_t sub_1000FB328()
{
  uint64_t v4 = v0;
  unint64_t v5 = (((v3 + 454) | 0x100u) ^ (unint64_t)(v1 + 252)) + v0;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((496 * ((((v3 + 1224) | 0xA0u) ^ 0x3E005393) - v4 + v5 > 7)) ^ (v3 + 1699))))();
}

void sub_1000FB398(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  unsigned int v11 = ((&a3 & 0xF520D92A | ~(&a3 | 0xF520D92A)) ^ 0x2945FEC3) * v7;
  a7 = (v8 - 160) ^ v11;
  a5 = v11 ^ 0x3892425B;
  a6 = a1 - v11;
  a3 = 0x2B2B4D831A99DB82;
  a4 = v9;
  (*(void (**)(uint64_t *))(v10 + 8 * (v8 + 1302)))(&a3);
  sub_1000CD14C();
}

void sub_1000FB414()
{
}

uint64_t sub_1000FB438()
{
  *(unsigned char *)(v2 - 184) = 29 - 51 * ((2 * ((v2 + 56) & 0xF8) - (v2 + 56) + 5) ^ 0xD2);
  *(_DWORD *)(v2 - 200) = v0 - 1224239923 * ((2 * ((v2 - 200) & 0x95EA2F8) - (v2 - 200) - 157197051) ^ 0x412A0D2) + 238;
  STACK[0x288] = (unint64_t)&STACK[0x1B326768DCF9E7D6];
  *(void *)(v2 - 176) = &STACK[0x1B326768DCF9E7D6];
  STACK[0x290] = (unint64_t)&STACK[0x7078B7EF70D8BBA7];
  *(void *)(v2 - 192) = &STACK[0x7078B7EF70D8BBA7];
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1207)))(v2 - 200);
  int v4 = *(_DWORD *)(v2 - 196);
  LODWORD(STACK[0x520]) = v4;
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((1424 * (v4 == ((3 * (v0 ^ 0x3F8) - 237) | 0x2B) - 1008822279)) ^ v0)))(v3);
}

void sub_1000FB530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  *int v37 = -223944149;
  (*(void (**)(uint64_t))(v36 + 8 * (v35 + 1913)))(a35);
  JUMPOUT(0x1000FB568);
}

void sub_1000FB6A8()
{
  *(_DWORD *)(v0 - 0x65EF48AAD10F56FCLL) = 1008845548;
  JUMPOUT(0x1000F7910);
}

uint64_t sub_1000FB6C8@<X0>(int a1@<W8>)
{
  BOOL v4 = (((v3 + 341 + a1) ^ v2) & 0x80000000) == ((v3 - 1235869324) & 0x49A9D8BF) - 151;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v4 | (4 * v4)) ^ (v3 + 341))))();
}

void sub_1000FB724(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  a4 = v8;
  a5 = v6;
  a6 = v8;
  a3 = v9 + 18 - (((&a3 | 0x439509F7) - (&a3 & 0x439509F7)) ^ 0x1F5BCABA) * v7 + 716;
  (*(void (**)(unsigned int *))(a1 + 8 * ((v9 + 18) ^ 0x6E8)))(&a3);
  sub_1000DB5E0();
}

uint64_t sub_1000FB784(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (unint64_t)&v8[qword_100180398 - qword_100180F50];
  qword_100180F50 = 139864171 * v2 - 0x6BA42CE6601600A8;
  qword_100180398 = 139864171 * (v2 ^ 0x945BD3199FE9FF58);
  int v3 = *(_DWORD *)(a2 + 4);
  unsigned __int8 v4 = 107 * ((qword_100180398 + 107 * v2 + 88) ^ 0x58);
  unint64_t v5 = (char *)*(&off_100166A10 + (v4 ^ byte_10011D9F0[byte_100119D30[v4] ^ 0x3A]) - 18) - 4;
  if (v3 == 1576401733) {
    __asm { BRAA            X1, X17 }
  }
  if (v3 == 1576401740)
  {
    int v6 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BRAA            X3, X17 }
  }
  return 4294925278;
}

uint64_t sub_1000FB944(int a1, uint64_t a2, int a3, int a4)
{
  *(_DWORD *)(a2 + (v6 - a4 + a1)) = *(_DWORD *)(v4 + (v6 - a4 + a1));
  return (*(uint64_t (**)(void))(v7 + 8 * ((62 * (a4 + 4 == v5)) ^ a3)))();
}

uint64_t sub_1000FB978()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((973 * (v0 == ((((v1 + 1560090110) & 0xA302EA3F) + 909) ^ 0x5A4))) ^ v1)))();
}

uint64_t sub_1000FB9BC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((247
                                * (((v0 - 865847690) & 0x339BCEFE ^ (LODWORD(STACK[0x5AC]) - 1576401730) ^ 0x597FE8D99FFE7338)
                                 + ((2 * (LODWORD(STACK[0x5AC]) - 1576401730)) & 0x13FFCEB6CLL)
                                 - 0x597FE8D8FAC73F26 != 2771859088)) ^ (v0 + 609))))();
}

uint64_t sub_1000FBA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v7
                                                    + 8
                                                    * (int)((((a5 ^ 0xFFFFFED0) + (a5 ^ 0x13E)) * ((v5 & 0x18) == 0)) ^ a5)))(a1, (v6 - a1));
}

uint64_t sub_1000FBAB8@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x563));
  return v3(v1);
}

uint64_t sub_1000FBAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v14 = v11 < v9;
  int v15 = v8 + 1;
  *(unsigned char *)(*v13 + (v15 + a7)) = 84;
  if (v14 == v15 + v7 < v9) {
    BOOL v14 = v15 + v7 < v11;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((v14 * (v10 - 1188)) ^ v10)))();
}

uint64_t sub_1000FBB40(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (v3 ^ ((LODWORD(STACK[0x3D8]) == 596678603) * a3))))();
}

uint64_t sub_1000FBB84@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 | 0x584));
  return v3(v1);
}

uint64_t sub_1000FBBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v32 = v28 + v27 - 2079290923;
  unsigned int v33 = v28 + v27 - 2079290358;
  if (v33 <= 0x40) {
    unsigned int v33 = 64;
  }
  BOOL v34 = __CFADD__(v32 + 564, v30 + v33);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * ((116 * ((v34 ^ (((v29 - 35) & 0xFD) - 70)) & 1)) ^ v29)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1000FBC30@<X0>(uint64_t a1@<X1>, char a2@<W5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  int v36 = *(_DWORD *)(&a20 + ((v34 + a3) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v34 + a3)) = v36 ^ 0x34;
  *(unsigned char *)(a1 + (v34 + a3 + 1)) = (BYTE1(v36) ^ 0x3D)
                                                + ((a2 + v33 - 70) ^ 0xF8)
                                                - ((2 * (BYTE1(v36) ^ 0x3D)) & 0xA8);
  *(unsigned char *)(a1 + (v34 + a3 + 2)) = (BYTE2(v36) ^ 0xDE) - ((2 * (BYTE2(v36) ^ 0xDE)) & 0xA8) + 84;
  *(unsigned char *)(a1 + (v34 + a3 + 3)) = (HIBYTE(v36) ^ 0xB6) - ((2 * (HIBYTE(v36) ^ 0xB6)) & 0xA8) + 84;
  BOOL v37 = v34 - 1090920842 < (a32 - 1770865171);
  if (v34 - 1090920842 < v32 != a32 - 1770865171 < v32) {
    BOOL v37 = a32 - 1770865171 < v32;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((527 * v37) ^ v33)))();
}

uint64_t sub_1000FBD10@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23)
{
  BOOL v25 = a23 < 0xAF34DFCC;
  if (v25 == (v23 + 1747104815) < 0xAF34DFCC) {
    BOOL v25 = v23 + 1747104815 < a23;
  }
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((v25 * (((2 * a1) ^ 0x3E2) - 24)) ^ a1)))(2259238812);
}

uint64_t sub_1000FBD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v15 = (v9 + a6 + 873);
  *(unsigned char *)(v13 + v15) ^= *(unsigned char *)(v10 + (v15 & 0xF)) ^ *(unsigned char *)(v12 + (v15 & 0xF)) ^ *(unsigned char *)(v11 + (v15 & 0xF)) ^ (5 * (v15 & 0xF)) ^ 0x54;
  return (*(uint64_t (**)(void))(v14 + 8 * ((1950 * (a6 - 1 == v8)) ^ (a8 - 547))))();
}

uint64_t sub_1000FBDE0()
{
  int v6 = (unint64_t *)((char *)&STACK[0x670] + STACK[0x380] + (v1 ^ 0x9E346D562E05E403 ^ v0));
  STACK[0x470] = v3 + 0x70459CB0620F0DF9;
  *int v6 = 0xABABABABABABABABLL;
  v6[1] = 0x5454545452545446;
  int v7 = 628203409 * ((-625822081 - ((v5 - 200) | 0xDAB2B67F) + ((v5 - 200) | 0x254D4980)) ^ 0xA7C545B3);
  *(_DWORD *)(v5 - 200) = v2 - v7 + 1064656099;
  *(_DWORD *)(v5 - 192) = -1069069088 - v7;
  (*(void (**)(uint64_t))(v4 + 8 * (v2 + 1410)))(v5 - 200);
  LODWORD(STACK[0x444]) = 1576402066;
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * (v2 + 1425)))(336, 1925803308);
  STACK[0x4A8] = v8;
  return (*(uint64_t (**)(void))(v4
                              + 8 * (((v8 == 0) * ((v2 - 561111889) & 0x2171E5FA ^ ((v2 - 328) | 0x11) ^ 0x5E8)) ^ v2)))();
}

uint64_t sub_1000FBF38(uint64_t result)
{
  *(_DWORD *)(result + 28) = 822078247;
  return result;
}

uint64_t sub_1000FBF44(uint64_t a1, uint64_t a2, int a3, char a4, char a5, uint64_t a6, int a7)
{
  uint64_t v14 = (v10 + a3);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(v7 + (v14 & 0xF)) ^ *(unsigned char *)(v8 + (v14 & 0xF)) ^ *(unsigned char *)((v14 & 0xF) + v9 + 2) ^ ((v14 & 0xF) * a5) ^ ((*(unsigned char *)(v12 + v14) ^ 0x83) + (((v11 - 56) ^ a4) & (2 * *(unsigned char *)(v12 + v14))) + 123);
  return (*(uint64_t (**)(void))(v13 + 8 * ((v10 - 1 == a7) | v11)))();
}

uint64_t sub_1000FBFAC(uint64_t a1, int a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((107 * (a2 ^ 0x3AA)) ^ 0x1EF) - 1385) * (v5 < a4)) ^ a2)))();
}

uint64_t sub_1000FBFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((73 * ((a8 & 0xFFFFFFF0) != ((4 * (a5 - 1103)) ^ 0x293) + 2097150717)) ^ (a5 - 1103))))();
}

uint64_t sub_1000FC030(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (int)((212 * (a2 - v5 - a4 >= (a3 ^ 0x455uLL))) ^ a3)))();
}

void sub_1000FC06C()
{
}

void sub_1000FC0BC()
{
}

uint64_t sub_1000FC0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v5 - 840) ^ 0x316) - 846) * (v6 != a5 + 955)) ^ (v5 - 840))))();
}

uint64_t sub_1000FC104()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*v0 != 0x2B2B4D831A99DB82) * (((v1 - 1299) | 9) ^ 0x20D)) ^ v1)))();
}

uint64_t sub_1000FC158(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(result + 28) = a3;
  return result;
}

void sub_1000FC160()
{
}

uint64_t sub_1000FC1C4()
{
  *(_DWORD *)(v2 + v1) = v0;
  return sub_1000FC1D8();
}

uint64_t sub_1000FC1D8()
{
  *(void *)(v5 - 144) = v1;
  *(void *)(v5 - 136) = v3;
  *(_DWORD *)(v5 - 128) = v2
                        + ((((v5 - 144) ^ 0x1F1AE990) - 470279805 - 2 * (((v5 - 144) ^ 0x1F1AE990) & 0xE3F81983)) ^ 0x9116E81A)
                        * v4
                        + 963;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 + 1241)))(v5 - 144);
}

uint64_t sub_1000FC274()
{
  *(void *)(v4 - 252 + v2 - 539915761) = 0x5454545454545454;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 & 0xFFFFFFFFFFFFFFF8) == 8) * (v0 + 1005)) ^ v0)))();
}

uint64_t sub_1000FC2C0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((a2 + v4 - 690) ^ (8 * (((v4 - 529999800) & 0xCFC92EF9) + v2 - 1202684883 < 0x38)))))();
}

uint64_t sub_1000FC308@<X0>(int a1@<W8>)
{
  STACK[0x2A8] = v1;
  int v4 = (a1 - 962) | 0x710;
  STACK[0x438] = 0;
  int v5 = 460628867 * ((v3 - 200) ^ 0x4C96827D);
  *(void *)(v3 - 200) = STACK[0x2A0];
  *(_DWORD *)(v3 - 168) = v5 ^ 0x43F274F4;
  *(_DWORD *)(v3 - 192) = (v4 - 1613) ^ v5;
  unint64_t v6 = STACK[0x298];
  *(void *)(v3 - 184) = 0x19D396D9A609BEA0;
  *(void *)(v3 - 176) = v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 + 215)))(v3 - 200);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((*(_DWORD *)(v3 - 164) == -1008821960)
                                                   * (v4 - 1531 + ((v4 + 1712715610) & 0x99EA07FF) - 1836)) ^ v4)))(v7);
}

uint64_t sub_1000FC3D8@<X0>(int a1@<W1>, unsigned int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((*(unsigned __int8 *)(v3 + (v2 - 1 + a1)) == ((a2 - 49) ^ 0xC1)) ^ a2)))();
}

uint64_t sub_1000FC418()
{
  return ((uint64_t (*)(void))STACK[0x490])();
}

uint64_t sub_1000FC44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  return (*(uint64_t (**)(void))(v28
                              + 8
                              * ((13
                                * ((unint64_t)(&a25 + a14 + (v26 + v25 - 1)) >= ((8 * (v27 ^ 0x341u) - 292) ^ 0x24CuLL))) ^ v27 ^ 0x3E1)))();
}

uint64_t sub_1000FC4A4(unint64_t a1)
{
  STACK[0x5E8] = a1;
  LODWORD(STACK[0x53C]) = v1;
  return sub_1000FC4C0();
}

uint64_t sub_1000FC4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  unint64_t v46 = STACK[0x4A8];
  STACK[0x420] = 335;
  *(unsigned char *)(v46 + 335) = (a44 ^ 0xBA) * (a44 + 17);
  return (*(uint64_t (**)(void))(v45 + 8 * (((STACK[0x420] == 0) * (((v44 - 277) | 0x189) + 243)) | (v44 - 5))))();
}

uint64_t sub_1000FC53C@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v4 ^ (v4 + 2)) + 636) ^ (269 * (v4 ^ (v4 + 2)))) * (a2 == v2)) ^ (a1 + v4 - 45))))();
}

uint64_t sub_1000FC588(unsigned int a1)
{
  LODWORD(STACK[0x444]) = v2;
  return (*(uint64_t (**)(void))(v4 + 8 * (((a1 < ((v1 - 440) ^ 0x2A6u)) * v3) ^ v1)))();
}

uint64_t sub_1000FC5C4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((((v1 - 715496865 + (v2 ^ 0x255u)) * (v3 - 715496183)) >> 31) * (v2 + 253)) ^ v2)))();
}

uint64_t sub_1000FC604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(_DWORD *)(v23 - 112) = (v21 + 289) ^ (1734042137
                                        * ((((2 * ((v23 - 120) ^ 0x50584DC6)) | 0x846CAAD6)
                                          - ((v23 - 120) ^ 0x50584DC6)
                                          + 1036626581) ^ 0xCEA0DBE0));
  *(void *)(v23 - 120) = v19;
  *(void *)(v23 - 104) = a19;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v21 + 1660)))(v23 - 120);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (((((51 * (v21 ^ 0x170) - 1) | 1) ^ 0x386) * (v22 != 1251276904)) ^ v21)))(v24);
}

uint64_t sub_1000FC6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x508] = *(void *)(v64 + 8 * v63);
  return sub_1000FDD38(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_1000FC6D0()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((45
                                * (((v2 ^ 0x367 ^ (v1 - v3 - 1167 < (unint64_t)((v2 + 706083052) & 0xD5EA054D)
                                                                  - 1321)) & 1) == 0)) ^ v2)))();
}

void sub_1000FC750(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1374699841 * ((((2 * a1) | 0x97E9331C) - a1 + 873162354) ^ 0xA6008187));
  __asm { BRAA            X8, X17 }
}

void sub_1000FC838()
{
  *(_DWORD *)(v0 + 8) = -1008821960;
}

uint64_t sub_1000FC884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * ((832
                                                                                  * (*(void *)(v5
                                                                                               + 8
                                                                                               * ((v4 & 0x3482ECF5) - 110))
                                                                                   - a1
                                                                                   - (((v4 & 0x3482ECF5) - 202441170) & 0xC1103F7 ^ 0x259uLL)
                                                                                   + 335 < 0x20)) ^ v4 & 0x3482ECF5u)))(937, 1584, 985697508, a4, 1161787223);
}

void sub_1000FC920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26)
{
  int v30 = 1225351577 * ((((v29 - 144) | 0x5D966E65) - ((v29 - 144) & 0x5D966E65)) ^ 0x7E0CB673);
  *(_DWORD *)(v29 - 120) = v30 + v28 + 966 - 244;
  *(void *)(v29 - 128) = a26;
  *(_DWORD *)(v29 - 136) = v30 + a25 + 1619753341 + v28 + 556;
  *(void *)(v29 - 144) = v27;
  (*(void (**)(uint64_t))(v26 + 8 * ((v28 + 966) ^ 0xD59)))(v29 - 144);
  JUMPOUT(0x1000D65D8);
}

void sub_1000FC9B0(int a1@<W8>, uint64_t a2, int a3, unsigned int a4)
{
  unsigned int v8 = 1755732067 * (((&a2 | 0x4690B055) - (&a2 & 0x4690B055)) ^ 0x98560D8E);
  a3 = v8 + v6 + 1246;
  a4 = a1 - ((v7 - 1769867034) & 0xBEA5EE12) - v8 + (v6 ^ 0xAA93F24D);
  a2 = v5;
  (*(void (**)(uint64_t *))(v4 + 8 * (v6 ^ 0x6CF)))(&a2);
  JUMPOUT(0x1000D5390);
}

void sub_1000FCA8C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 1755732067 * ((a1 + 503769263 - 2 * (a1 & 0x1E06E8AF)) ^ 0xC0C05574);
  int v2 = *(_DWORD *)(*(void *)a1 - 0x774B811B42847B23);
  uint64_t v5 = *(void *)a1;
  unsigned int v4 = (535753261 * ((((&v4 | 0xFE862F58) ^ 0xFFFFFFFE) - (~&v4 | 0x179D0A7)) ^ 0xB8DDE88)) ^ (v1 - 1335);
  uint64_t v3 = (char *)*(&off_100166A10 + v1 - 1399) - 4;
  (*(void (**)(unsigned int *))&v3[8 * v1 + 3192])(&v4);
  __asm { BRAA            X8, X17 }
}

void sub_1000FCBD4(int a1@<W8>)
{
  unint64_t v6 = STACK[0x5F8];
  int v7 = LODWORD(STACK[0x548]) - ((2 * LODWORD(STACK[0x548]) + 1565638936) & ((a1 ^ 0x6CF) + 1477460036)) - 625934117;
  int v8 = 1225351577 * ((323586429 - ((v5 - 200) | 0x1349897D) + ((v5 - 200) | 0xECB67682)) ^ 0xCF2CAE94);
  *(_DWORD *)(v5 - 164) = (a1 + 1695025767) ^ v8;
  *(_DWORD *)(v5 - 160) = (696906779 * v2 + 445231003) ^ v8;
  *(_DWORD *)(v5 - 192) = v7 ^ v8;
  *(void *)(v5 - 200) = STACK[0x368];
  *(void *)(v5 - 184) = v1;
  *(void *)(v5 - 176) = v3;
  *(void *)(v5 - 152) = v6;
  (*(void (**)(uint64_t))(v4 + 8 * (a1 ^ 0x1E3u)))(v5 - 200);
  LODWORD(STACK[0x520]) = *(_DWORD *)(v5 - 168);
  JUMPOUT(0x1000CCAF4);
}

uint64_t sub_1000FCCC0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v2 + 237915324) ^ 0x33B) * (v3 < v1)) ^ (v2 + 237915324))))();
}

uint64_t sub_1000FCCFC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v0 + 241918968) & 0xF19498BF) - 163)
                                     * (((v1 - 1576401727) & 0xFFFFFFFC) - LODWORD(STACK[0x3D0]) == -1576401730)) ^ v0)))();
}

void sub_1000FCD50()
{
}

uint64_t sub_1000FCDA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000D3C0C(115, a1);
}

void sub_1000FCE0C()
{
}

uint64_t sub_1000FCE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((v10 + 1350041754) <= 0x40) {
    int v12 = 64;
  }
  else {
    int v12 = v10 + 1350041754;
  }
  uint64_t v13 = (a3 - v8 - v9);
  uint64_t v14 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((9 * ((v13 + v12) > 0xE)) ^ 0x3C7u));
  return v14(v13, v14, a3, a4, 3564672672, a6, a7, a8);
}

uint64_t sub_1000FCEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v12 = (a6 - 1102148613);
  *(unsigned char *)(*(void *)(v11 - 120) + v12) ^= *(unsigned char *)(v9 + (v12 & 0xF)) ^ *(unsigned char *)((v12 & 0xF) + v7 + 2) ^ *(unsigned char *)((v12 & 0xF) + v8 + 4) ^ (119 * (v12 & 0xF));
  return (*(uint64_t (**)(void))(v10 + 8 * ((248 * (a6 - 1 == v6)) ^ (a5 - 1815))))();
}

void sub_1000FCF20(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 1374699841 * ((a1 + 25318649 - 2 * (a1 & 0x18254F9)) ^ 0x6C764CF0);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1000FD048()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((819
                                * ((((*(unsigned __int8 *)(v3 + 1) - 134) << ((v2 - 46) & 0xEF ^ 0xAE)) & v1)
                                 + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1000FD0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1000C9DBC(a1, 2956067867, 2952790016, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, v21, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1000FD0B4()
{
  STACK[0x4C8] = v0;
  return sub_1000C077C();
}

uint64_t sub_1000FD0D4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((a1 ^ 0x93) - 455) | 0x193) ^ 0x303) * (v2 == v1)) ^ a1 ^ 0x93)))();
}

uint64_t sub_1000FD130@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, char a4, unsigned int a5, uint64_t a6)
{
  a5 = v7
     + 535753261
     * (((&a4 | 0x64DB4A1A) - &a4 + (&a4 & 0x9B24B5E0)) ^ 0x6E2F4435)
     + 683;
  a6 = a1;
  uint64_t v8 = (*(uint64_t (**)(char *))(v6 + 8 * (v7 ^ 0x634u)))(&a4);
  return sub_1000FD190(v8);
}

void sub_1000FD190()
{
  *(_DWORD *)(v0 + 52) = v1;
}

uint64_t sub_1000FD1D0()
{
  int v4 = 628203409 * ((((v3 - 200) | 0x9D8A8964) - (v3 - 200) + ((v3 - 200) & 0x62757698)) ^ 0x1F028557);
  unint64_t v5 = STACK[0x390];
  *(void *)(v3 - 200) = STACK[0x3A0];
  *(void *)(v3 - 192) = v5;
  *(_DWORD *)(v3 - 184) = v0 - v4 + 456;
  *(_DWORD *)(v3 - 180) = v1 - v4 - 375727839;
  *(void *)(v3 - 176) = STACK[0x3A8];
  unint64_t v6 = STACK[0x398];
  *(void *)(v3 - 160) = STACK[0x3D8];
  *(void *)(v3 - 152) = v6;
  (*(void (**)(uint64_t))(v2 + 8 * (v0 + 1850)))(v3 - 200);
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v2
                                                             + 8
                                                             * (((*(_DWORD *)(v3 - 168) == -1008821960)
                                                               * (((v0 - 68) ^ 0x19B) + ((v0 - 68) | 0x411) - 787)) ^ v0)))(41, 583083080, (__n128)0);
}

uint64_t sub_1000FD2E0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((((v2 + 237916195) ^ 0x47A) * (v1 > 0x792ECF95)) ^ (v2 + 237915468))))(a1, 4057052139);
}

uint64_t sub_1000FD32C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W4>, uint64_t a4@<X8>)
{
  int v10 = v8 & 7;
  int v11 = v9 + v8;
  *(void *)(a4 - 7 + v11 + v7 - a3 + ((a1 + 1017) ^ v6)) = *(void *)(v5
                                                                               - 7
                                                                               + v11
                                                                               + v7
                                                                               - a3
                                                                               + ((a1 + 1017) ^ v6));
  return (*(uint64_t (**)(uint64_t, void))(v4 + 8 * (int)(a1 ^ (16 * (v11 + a2 - a3 == v10)))))(a1, (v11 + a2 - a3 - v10 - 8));
}

uint64_t sub_1000FD388()
{
  *(_DWORD *)(v2 - 200) = (v0 + 2138963270) ^ (1374699841
                                             * (((v2 - 200) & 0x38489C1B | ~((v2 - 200) | 0x38489C1B)) ^ 0xAA437BED));
  (*(void (**)(uint64_t))(v1 + 8 * (v0 + 1955)))(v2 - 200);
  *(void *)(v2 - 192) = STACK[0x290];
  *(void *)(v2 - 176) = STACK[0x288];
  *(_DWORD *)(v2 - 200) = v0 - 1224239923 * ((v2 - 200 - 2 * ((v2 - 200) & 0x240E3B28) + 604912424) ^ 0xD6BDC6FF) + 999;
  *(unsigned char *)(v2 - 184) = 30 - 51 * ~(v2 + 56 - 2 * ((v2 + 56) & 0x28) + 40);
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1968)))(v2 - 200);
  STACK[0x368] = 0;
  LODWORD(STACK[0x2F4]) = 1364664180;
  return sub_1000FD474(v3);
}

uint64_t sub_1000FD474()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((STACK[0x368] == 0) ^ (v0 + 58)) & 1) * ((v0 ^ 0x26) - 106)) ^ (v0 + 570))))();
}

uint64_t sub_1000FD4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,int a25,int a26,uint64_t a27,int a28,uint64_t a29,uint64_t a30)
{
  unsigned int v33 = 628203409 * (((&a23 | 0x69391FCD) + (~&a23 | 0x96C6E032)) ^ 0xEBB113FF);
  a29 = a20;
  a30 = a13;
  a27 = a15;
  a25 = v30 - v33 + 36;
  a26 = -375727839 - v33 + a22;
  a23 = a14;
  a24 = a12;
  uint64_t v34 = (*(uint64_t (**)(uint64_t *))(v32 + 8 * (v30 ^ 0xA6A)))(&a23);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                                         + 8
                                                                                         * ((1105
                                                                                           * (a28 == ((v30 - 386839468) & 0x170EB35B ^ 0xC3DE9B22))) ^ v30)))(v34, v31, 2393867127, 2415166058, 409351303, 1576401740);
}

uint64_t sub_1000FD5CC()
{
  int v0 = (unint64_t *)*(&off_100166A10
                           + ((107 * ((qword_100180398 - dword_100180F90) ^ 0x58)) ^ byte_100120950[byte_10011D8F0[(107 * ((qword_100180398 - dword_100180F90) ^ 0x58))] ^ 0xB9])
                           - 42);
  uint64_t v1 = (unint64_t *)*(&off_100166A10
                           + (byte_10011D9F0[byte_100119D30[(107
                                                                                             * (*v0 ^ qword_100180398 ^ 0x58))] ^ 0x61] ^ (107 * (*v0 ^ qword_100180398 ^ 0x58)))
                           - 91);
  unint64_t v2 = (*v1 ^ *v0) - (void)&v8;
  unint64_t v3 = (139864171 * v2) ^ 0x945BD3199FE9FF58;
  unint64_t v4 = 139864171 * (v2 ^ 0x945BD3199FE9FF58);
  *int v0 = v3;
  *uint64_t v1 = v4;
  LOBYTE(v4) = 107 * (*(_DWORD *)v0 ^ 0x58 ^ v4);
  int v9 = (char *)*(&off_100166A10
               + (byte_100123BA4[(byte_100120850[v4] ^ 0x34)
                                                              - 4] ^ v4)
               + 13)
     - 4;
  unsigned int v10 = 1722 - 3804331 * (&v9 ^ 0xFA9EF356);
  LOBYTE(v4) = 107 * (*(_DWORD *)v0 ^ 0x58 ^ *(_DWORD *)v1);
  uint64_t v5 = (char *)*(&off_100166A10
               + ((107 * (dword_100180F90 ^ 0x58 ^ qword_100180398)) ^ byte_10011D9F0[byte_100119D30[(107 * (dword_100180F90 ^ 0x58 ^ qword_100180398))] ^ 0x45])
               + 102)
     - 4;
  (*(void (**)(char **))&v5[8
                                     * (byte_100120950[byte_10011D8FC[v4 - 12] ^ 0x90] ^ v4)
                                     + 15008])(&v9);
  int v9 = (char *)*(&off_100166A10
               + ((107 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0x58)) ^ byte_10011D9F0[byte_100119D30[(107 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0x58))] ^ 0x3A]));
  unsigned int v10 = 1722
      - 3804331
      * (((&v9 | 0x9C15EF6E) - &v9 + (&v9 & 0x63EA1090)) ^ 0x668B1C38);
  (*(void (**)(char **))&v5[8
                                     * ((107 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0x58)) ^ byte_10011D9F0[byte_100119D30[(107 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0x58))] ^ 0x61])
                                     + 14616])(&v9);
  unsigned int v6 = 3804331
     * (((&v9 | 0x535E46B9) - &v9 + (&v9 & 0xACA1B940)) ^ 0xA9C0B5EF);
  HIDWORD(v9) = v6 + 996;
  LOBYTE(v9) = v6 ^ 0x7D;
  return (*(uint64_t (**)(char **))&v5[8
                                               * ((107 * ((*(_DWORD *)v1 - *(_DWORD *)v0) ^ 0x58)) ^ byte_10011D9F0[byte_100119D30[(107 * ((*(_DWORD *)v1 - *(_DWORD *)v0) ^ 0x58))] ^ 0x3A])
                                               + 15152])(&v9);
}

void sub_1000FD958(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x774B811B42847B23) = (((v3 + v2) * (v1 - 731987366)) ^ 0xBFFDDFFF)
                                         + 1789377272
                                         + ((2 * (v3 + v2) * (v1 - 731987366)) & 0x7FFBBFFE);
}

uint64_t sub_1000FD9E4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return sub_1000FDA64(a10 - 0x3303C932EE2955CFLL, a23 - 0x774B811B42847B1FLL, (v23 - 2139720646), v23 + (a1 ^ 0x2DA) - 433, 1730, 1225, 1652, 1364404617);
}

uint64_t sub_1000FDA64@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a2 ^ ((v2 > 1) * a1))))();
}

uint64_t sub_1000FDAC4@<X0>(unsigned int a1@<W0>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  BOOL v16 = v15 > a1;
  *(_DWORD *)(a9 + 4 * (a3 + v9 + 939)) = a2;
  int v17 = (((v10 + 221) | 0x60) ^ (v12 + 873)) + v9;
  int v18 = v16 ^ (v17 < v11);
  BOOL v19 = v17 < v13;
  if (!v18) {
    BOOL v16 = v19;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((103 * !v16) ^ v10)))();
}

uint64_t sub_1000FDB2C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W6>, uint64_t a4@<X8>)
{
  *(_DWORD *)(*v6 + 4 * (v5 + v4)) = a2;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a4
                                                     + 8
                                                     * (((((6 * (v9 ^ a3) - 461) | 0x20) ^ v8) * (v7 == 0)) ^ (6 * (v9 ^ a3)))))(a1, 2785893064);
}

void sub_1000FDB88(uint64_t a1)
{
  int v1 = 1734042137 * (((a1 ^ 0xE6425DAD | 0xA65DFB69) - ((a1 ^ 0xE6425DAD) & 0xA65DFB69)) ^ 0x1CD16589);
  unsigned int v2 = *(_DWORD *)(*(void *)a1 - 0x65EF48AAD10F5708) - 156237695;
  unsigned int v3 = (*(_DWORD *)(a1 + 16) ^ v1) - 741383572;
  int v4 = (v3 < 0x13DC08CB) ^ (v2 < 0x13DC08CB);
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = v3 < 0x13DC08CB;
  }
  __asm { BRAA            X12, X17 }
}

void sub_1000FDCAC(uint64_t a1, uint64_t a2, int a3)
{
  if ((v3 + v4 - 1) >= 0x7FFFFFFF) {
    int v8 = a3 - v5;
  }
  else {
    int v8 = v7;
  }
  *unsigned int v6 = v8;
  JUMPOUT(0x1000FDCD0);
}

uint64_t sub_1000FDCE4(double a1)
{
  *unsigned int v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

uint64_t sub_1000FDD08@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  return (*(uint64_t (**)(void))(v42 + 8 * ((100 * ((a41 & a1) != 0)) ^ (v41 + 1055))))();
}

void sub_1000FDD30()
{
}

uint64_t sub_1000FDD38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x638] = v69;
  STACK[0x640] = v67;
  unint64_t v72 = STACK[0x5B0];
  int v73 = (char *)&a9 + STACK[0x5B0] - 0x61CB92A9D1FA177FLL;
  STACK[0x648] = (unint64_t)v73;
  STACK[0x5B0] = v72 + 320;
  LODWORD(STACK[0x5A4]) = *(_DWORD *)(v69 + a8);
  LODWORD(STACK[0x584]) = *(_DWORD *)(v69 - 0x7C014C707EC207DCLL);
  LODWORD(STACK[0x5F4]) = *(_DWORD *)(v69 - 0x7C014C707EC207D8);
  LODWORD(STACK[0x54C]) = *(_DWORD *)(v69 - 0x7C014C707EC207D4);
  int v74 = *(unsigned __int8 *)(v69 - 0x7C014C707EC207C8) ^ 0xDB;
  if (v74 == 2)
  {
    LODWORD(STACK[0x4B0]) = *(_DWORD *)(v69 - 0x7C014C707EC207D0);
    LODWORD(STACK[0x524]) = 1417906743;
    return (*(uint64_t (**)(uint64_t))(v71 + 8 * ((734 * (v70 != 0x159)) ^ v70 ^ 0x475)))(253);
  }
  else if (v74 == 1)
  {
    STACK[0x3F8] = v72 + 320;
    LODWORD(STACK[0x524]) = v68;
    BOOL v76 = v67 >= a67 + v72 || (unint64_t)v73 >= v67 + 64;
    return (*(uint64_t (**)(void))(v71 + 8 * ((((LODWORD(STACK[0x364]) + 8) ^ (v70 + 194)) * v76) | (v70 + 1195))))();
  }
  else
  {
    return sub_1000FDEE8();
  }
}

uint64_t sub_1000FDEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v16 = (*(_DWORD *)(v15 + a8) ^ v14) + (v8 ^ v14);
  *(_DWORD *)(v15 + a8) = v16 + v14 - (v10 & (2 * v16));
  int v17 = (*(_DWORD *)(v15 - 0x7C014C707EC207DCLL) ^ v14) + (v11 ^ v14);
  *(_DWORD *)(v15 - 0x7C014C707EC207DCLL) = v17 + v14 - ((2 * v17) & 0x6DBC7AC0);
  int v18 = (*(_DWORD *)(v15 - 0x7C014C707EC207D8) ^ v14) + (v9 ^ v14);
  *(_DWORD *)(v15 - 0x7C014C707EC207D8) = v18 + v14 - ((2 * v18) & 0x6DBC7AC0);
  int v19 = (*(_DWORD *)(v15 - 0x7C014C707EC207D4) ^ v14) + (v12 ^ v14);
  *(_DWORD *)(v15 - 0x7C014C707EC207D4) = v19 + v14 - ((2 * v19) & 0x6DBC7AC0);
  STACK[0x5B0] = v13 - 320;
  return ((uint64_t (*)(void))STACK[0x508])();
}

void sub_1000FDFC0()
{
}

uint64_t sub_1000FE0C4()
{
  uint64_t v4 = v1 | 0xALL;
  int v5 = 460628867 * ((v3 + 865504456 - 2 * ((v3 - 200) & 0x33968D90)) ^ 0x7F000FED);
  *(void *)(v3 - 200) = STACK[0x578];
  *(_DWORD *)(v3 - 188) = -1882357475 - v5 + v4;
  *(_DWORD *)(v3 - 184) = v5 + 1678855235;
  (*(void (**)(uint64_t))(v2 + 8 * (int)(v4 ^ 0x803)))(v3 - 200);
  STACK[0x458] = *(void *)(v2 + 8 * v4);
  return sub_1000CAF4C(1140694437, STACK[0x3F0]);
}

uint64_t sub_1000FE170@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((1144 * ((v1 ^ 0x9Cu) - 715496465 + *(_DWORD *)(a1 + 532) < 0x7FFFFFFF)) | v1)))();
}

uint64_t sub_1000FE1B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v8 = v6 + ((((v3 - 1152252990) & 0x44ADFCF6) - 2079290923) ^ v3 ^ 0x174);
  if (v8 <= 0x40) {
    unsigned int v8 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * ((2028 * (2079290358 - v4 - v5 + v8 > 0xE)) ^ v3)))(a1, a2, a3, 1388383568);
}

uint64_t sub_1000FE248(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((451 * (a7 + 1 == v8 + 44)) ^ a4)))();
}

uint64_t sub_1000FE314(int a1, uint64_t a2, int a3)
{
  int v9 = v7 - 150;
  int v10 = v4 + v3;
  int v11 = v10 + v5;
  if ((v10 + v5) <= 0x40) {
    int v11 = v6;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (((302 * (v9 ^ 0x333) - 593) * (a3 - v10 < (a1 + v11))) ^ v9)))();
}

uint64_t sub_1000FE360(uint64_t a1, uint64_t a2, unsigned int a3, int a4, int a5, int a6)
{
  *(unsigned char *)(a1 + v7 + a4 + (v6 ^ a3) * a6) = *(unsigned char *)(v8 + v7 + a4 + (v6 ^ a3) * a6);
  return (*(uint64_t (**)(void))(v9 + 8 * ((v6 + 23) ^ (4 * (v7 - 1 != a5)))))();
}

void sub_1000FE398()
{
}

uint64_t sub_1000FE3A4(uint64_t a1, int a2)
{
  BOOL v8 = v2 == v6 && v4 != a2;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v8 ^ (v3 - 66)) & 1) * (66 * (v3 ^ 0x3C6) + 1583)) ^ v3)))();
}

uint64_t sub_1000FE3FC@<X0>(int a1@<W1>, int a2@<W8>)
{
  uint64_t v8 = 4 * (v4 - 172602597);
  unsigned int v9 = *(_DWORD *)(v6 + 4 * (v4 - 172602598));
  unsigned int v10 = (((2 * (v9 >> 30)) ^ 0xFFFFFFFD) + ((v9 >> 30) ^ (v3 + 2))) ^ v9;
  int v11 = ((v3 + 1566083941 * v10 - ((-1162799414 * v10) & v5)) ^ *(_DWORD *)(v6 + v8)) - v4;
  *(_DWORD *)(v6 + v8) = v11 - ((2 * v11 + 345205194) & v5) + 2096142096;
  uint64_t v12 = 1225351577
      * ((~((v7 - 144) | 0x217B100DE68A7068) + ((v7 - 144) & 0x217B100DE68A7068)) ^ 0x331247AA3AEF5781);
  *(void *)(v7 - 112) = v12 ^ 0x792ECD26;
  *(void *)(v7 - 128) = (v4 + 1860507714) ^ (unint64_t)v12;
  *(_DWORD *)(v7 - 144) = a2 + 750987848 - v12 + 63;
  *(_DWORD *)(v7 - 136) = ((a2 + 750987848) ^ 0x3D) + v12;
  *(_DWORD *)(v7 - 132) = v12;
  *(_DWORD *)(v7 - 120) = (a2 + 750987848) ^ v12;
  *(_DWORD *)(v7 - 116) = (a2 - 1926966970) ^ v12;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + a2 + 1666)))(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v7 - 140)))(v13);
}

void sub_1000FE560()
{
}

uint64_t sub_1000FE568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((a8 == ((v9 - 1518) ^ 0x5193885A)) * (((v9 - 1579) | 0x109) ^ 0x174)) ^ v9)))();
}

uint64_t sub_1000FE5C4()
{
  *(_DWORD *)(*v2 + 4 * (v4 - 1 + v0)) = v1;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v3 ^ 0x5D0 ^ (v0 - 412)) + v4 >= 0) * v5) ^ v3)))();
}

void sub_1000FE604()
{
}

uint64_t sub_1000FE60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)(((a10 + 4 >= a10) * (((v11 ^ 0x5F9) + 196150639) & 0xF44EF7EF ^ 0x11C)) ^ v11 ^ 0x5F9)))();
}

uint64_t sub_1000FE6A8()
{
  return sub_1000FE6B0();
}

uint64_t sub_1000FE6B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  int8x16_t v14 = *(int8x16_t *)(v10 + (v5 + a3 + v7));
  *(int8x16_t *)(a5 + v7) = vaddq_s8(vsubq_s8(v14, vandq_s8(vaddq_s8(v14, v14), v12)), v13);
  return (*(uint64_t (**)(void))(v11 + 8 * ((v6 + 247) ^ (16 * ((((v6 - 7) | v8) ^ v9) + v7 != 64)))))();
}

uint64_t sub_1000FE6FC@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((a2 - 539915761) < 0x38) * (((a1 + v2 + 231) | 0x142) - 378)) ^ (a1 + v2 + 839))))();
}

void sub_1000FE73C()
{
}

uint64_t sub_1000FE7B0@<X0>(uint64_t a1@<X2>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v12 = (v8 + v10);
  *(unsigned char *)(a1 + v12 + 4) = *(unsigned char *)(a3 + v12) ^ *(unsigned char *)(v4 + ((v7 - 34) & v12)) ^ *(unsigned char *)(((v7 - 34) & v12) + v5 + 1) ^ *(unsigned char *)(a4 + ((v7 - 34) & v12)) ^ (((v7 - 34) & v12) * a2) ^ v9;
  LODWORD(v12) = v8 - 1 != ((((v7 - 48) | 0x30) - 46) ^ v6);
  return (*(uint64_t (**)(void))(v11 + 8 * (int)((v12 | (8 * v12)) ^ (v7 + 1138))))();
}

void sub_1000FE828()
{
}

uint64_t sub_1000FE830()
{
  BOOL v7 = v0 > v5;
  if (v7 == v1 + 524367443 < -869386372) {
    LOBYTE(v7) = v1 + 524367443 < v4;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 34) ^ v7) & 1) * v6) ^ v2)))();
}

uint64_t sub_1000FE8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v6
                                                                   + 8
                                                                   * (v4 | (16
                                                                          * (((v5 > 0) ^ (v4 + 54)) & 1))));
  return v7(v7, a2, a3, a4);
}

void sub_1000FE91C()
{
}

uint64_t sub_1000FE924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v18 - 128) = v14;
  *(void *)(v18 - 120) = a13;
  *(_DWORD *)(v18 - 136) = v17 + ((((v18 - 136) | 0x35917215) - ((v18 - 136) & 0x35917215)) ^ 0xA13C3B4C) * v13 + 352;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v17 ^ 0x438)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((11 * (*(_DWORD *)(v18 - 132) > ((v17 - 704) ^ (v16 - 225)))) ^ v17)))(v19);
}

void sub_1000FE9C8()
{
}

uint64_t sub_1000FEA5C()
{
  return (*(uint64_t (**)(void))(*(void *)(v2 + 8 * (v0 ^ 0x31F))
                              - 4
                              + 8 * ((13 * ((v0 + v1 - 1) < 0x7FFFFFFF)) ^ v0)))();
}

uint64_t sub_1000FEA9C@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 | 0x700u));
  return v3(v1);
}

uint64_t sub_1000FEAD0(unsigned int a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v11 = v7 + v6;
  int v12 = v11 + v8;
  if ((v11 + v8) <= 0x40) {
    int v12 = a4;
  }
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((a6 - v11 < a2 + v9 + ((a1 + 258180742) & 0x1C77FD ^ (a6 - 1071)) + v12)
                                * ((131 * (a1 ^ 0x5A0)) ^ 0x6BE)) ^ a1)))();
}

void sub_1000FEB44()
{
}

uint64_t sub_1000FEBD0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v5 + 96) + 1428) = 596678623;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(_DWORD *)(a2 + 4) != v2 + v3 + 450 - 687) * ((149 * (v3 ^ 0xEF)) ^ 0x13D)) ^ v3)))();
}

uint64_t sub_1000FEC30(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((a4 + a3 + ((v4 - 1533) | 0x445u) + 2147482389 < 8) * ((v4 - 1533) ^ 0xA5)) ^ v4)))();
}

unsigned char *sub_1000FECB4(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000FEDA0@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  int v7 = *(_DWORD *)((char *)&STACK[0x250] + ((v5 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v5 + a2)) = v7 ^ 0x34;
  *(unsigned char *)(a1 + (v5 + a2 + 1)) = (BYTE1(v7) ^ 0x3D) + (v3 ^ 0x1B) - ((2 * (BYTE1(v7) ^ 0x3D)) & 0xA8);
  *(unsigned char *)(a1 + (v5 + a2 + 2)) = (BYTE2(v7) ^ 0xDE) - ((2 * (BYTE2(v7) ^ 0xDE)) & 0xA8) + 84;
  *(unsigned char *)(a1 + (v5 + a2 + 3)) = (HIBYTE(v7) ^ 0xB6) - ((2 * (HIBYTE(v7) ^ 0xB6)) & 0xA8) + 84;
  unsigned int v8 = LODWORD(STACK[0x2AC]) + 1866080202;
  BOOL v9 = v8 < v2;
  BOOL v10 = v5 + 2095141348 < v8;
  if (v5 + 2095141348 < v2 != v9) {
    BOOL v10 = v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v10 * v4) ^ v3)))();
}

uint64_t sub_1000FEE80()
{
  LODWORD(STACK[0x520]) = v0 + 133;
  return sub_1000EA2C8();
}

void sub_1000FEE90()
{
}

uint64_t sub_1000FEE98(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(unsigned char *)(*v12 + (v10 + a7)) = *(unsigned char *)(*v12 + (v9 + a2));
  return (*(uint64_t (**)(void))(v11 + 8 * (v7 ^ (4 * ((((v7 + 123) ^ (v8 == 1723469490)) & 1) == 0)))))();
}

void sub_1000FEF4C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  int v5 = (objc_class *)objc_opt_class();
  uint64_t v6 = NSStringFromClass(v5);
  int v7 = 138412546;
  int v8 = v6;
  __int16 v9 = 2112;
  uint64_t v10 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Could not start system app server for %@: %@", (uint8_t *)&v7, 0x16u);
}

void sub_1000FF000(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Attempted to set brightness without an active transaction", v1, 2u);
}

void sub_1000FF044(NSObject *a1)
{
  int v2 = *__error();
  int v3 = __error();
  int v4 = strerror(*v3);
  v5[0] = 67109378;
  v5[1] = v2;
  __int16 v6 = 2080;
  int v7 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, a1, OS_LOG_TYPE_ERROR, "Failed to set temporary directory for ClarityBoard (%d): %s", (uint8_t *)v5, 0x12u);
}

void sub_1000FF0EC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to disable ClarityBoard: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1000FF2F4()
{
  sub_100008E64();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Error acquiring assertion to open application: %@", v1, 0xCu);
}

void sub_1000FF368(uint64_t a1, uint64_t a2, NSObject *a3)
{
  int v5 = [*(id *)(a1 + 32) name];
  sub_100008E64();
  __int16 v7 = 2112;
  uint64_t v8 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Unable to create scene for %@: %@", v6, 0x16u);
}

void sub_1000FF418(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = [*(id *)(a1 + 32) name];
  sub_100008E64();
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Failed to launch %@.", v4, 0xCu);
}

void sub_1000FF4B0(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 name];
  sub_100008E64();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to handle scene request for %@ because it is no longer running.", v4, 0xCu);
}

void sub_1000FF544()
{
}

void sub_1000FF570()
{
}

void sub_1000FF59C()
{
}

void sub_1000FF5C8()
{
}

void sub_1000FF5F4()
{
}

void sub_1000FF620()
{
}

void sub_1000FF64C()
{
  sub_10001334C();
  sub_100013330((void *)&_mh_execute_header, v0, v1, "Should always have a window scene delegate", v2, v3, v4, v5, v6);
}

void sub_1000FF680()
{
  sub_10001334C();
  sub_100013330((void *)&_mh_execute_header, v0, v1, "Unexpectedly tried to get display style with no bundle identifier", v2, v3, v4, v5, v6);
}

void sub_1000FF6B4()
{
  sub_100008E64();
  __int16 v3 = 2114;
  uint64_t v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "Could not load: %{public}@ %{public}@", v2, 0x16u);
}

void sub_1000FF738()
{
  sub_10001334C();
  sub_100013330((void *)&_mh_execute_header, v0, v1, "Missing both reply and error from updating high resolution app icons.", v2, v3, v4, v5, v6);
}

void sub_1000FF76C()
{
  sub_100008E64();
  sub_100013370((void *)&_mh_execute_header, v0, v1, "Error attempting to update high resolution app icons: %@", v2, v3, v4, v5, v6);
}

void sub_1000FF7D4(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v4 = [*(id *)(a1 + 32) name];
  sub_100013358();
  _os_log_fault_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_FAULT, "Unable to open application for %@: %@", v5, 0x16u);
}

void sub_1000FF878()
{
  sub_100008E64();
  sub_100013370((void *)&_mh_execute_header, v0, v1, "Received request to destroy scenes from an unexpected client: %@", v2, v3, v4, v5, v6);
}

void sub_1000FF8E0(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) name];
  sub_100013358();
  sub_10001338C((void *)&_mh_execute_header, v2, v3, "Unable to create scene for %@: %@", v4, v5, v6, v7, v8);
}

void sub_1000FF974()
{
  sub_100008E64();
  sub_100013370((void *)&_mh_execute_header, v0, v1, "Unable to create window for scene with role: %@.", v2, v3, v4, v5, v6);
}

void sub_1000FF9DC(void *a1, NSObject *a2)
{
  [a1 count];
  sub_100008E64();
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Unexpectedly had %lu admin scenes", v3, 0xCu);
}

void sub_1000FFA64()
{
  sub_10001334C();
  sub_100013330((void *)&_mh_execute_header, v0, v1, "Should have already updated locked state before calling _updateLockScreenForegroundness.", v2, v3, v4, v5, v6);
}

void sub_1000FFA98(void *a1, uint64_t a2)
{
  [a1 timeIntervalSinceDate:a2];
  sub_10001338C((void *)&_mh_execute_header, v2, v3, "BUG: Midnight timer was in the past: %@ (%f)", v4, v5, v6, v7, 2u);
}

void sub_1000FFB28()
{
  sub_10001334C();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Ringer switch state changed, but the device had no ringer switch.", v1, 2u);
}

void sub_1000FFB68()
{
  sub_10001334C();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Action button was pressed, but the device had no action button.", v1, 2u);
}

void sub_1000FFBA8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Unable to find application for scene: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1000FFC20(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 soundPath];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to create file URL for sound path: '%@'", (uint8_t *)&v4, 0xCu);
}

void sub_1000FFCB8(os_log_t log)
{
  int v1 = 138412290;
  CFStringRef v2 = @"com.apple.SBUserNotification";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to lookup the bootstrap port for %@", (uint8_t *)&v1, 0xCu);
}

void sub_1000FFD3C(void *a1, uint64_t a2, NSObject *a3)
{
  [a1 pid];
  uint64_t v5 = BSProcessDescriptionForPID();
  int v6 = 138543618;
  uint64_t v7 = v5;
  __int16 v8 = 2114;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Authorization failure: %{public}@: %{public}@", (uint8_t *)&v6, 0x16u);
}

void sub_1000FFDF0(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Invalid message received", v1, 2u);
}

void sub_1000FFE34(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to get current silent mode state: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1000FFEAC(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Attempted to change Silent Mode state when the setting did not allow it.", v1, 2u);
}

void sub_1000FFEF0()
{
  sub_100008E64();
  sub_100013370((void *)&_mh_execute_header, v0, v1, "Unable to find process for client handshake: %@", v2, v3, v4, v5, v6);
}

void sub_1000FFF58()
{
  sub_100008E64();
  sub_100013370((void *)&_mh_execute_header, v0, v1, "Unable to get FBProcess for FBSceneClientProcess: %@", v2, v3, v4, v5, v6);
}

void sub_1000FFFC0()
{
  sub_100008E64();
  sub_100013370((void *)&_mh_execute_header, v0, v1, "Process (%{public}@) requested scene creation but is not allowed to.", v2, v3, v4, v5, v6);
}

void sub_100100028()
{
  sub_100008E64();
  sub_100013370((void *)&_mh_execute_header, v0, v1, "Process (%{public}@) requested scene creation, but was not allowed to.", v2, v3, v4, v5, v6);
}

void sub_100100090(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10001B248((void *)&_mh_execute_header, a2, a3, "notify_register(sun) failed: status=%i", a5, a6, a7, a8, 0);
}

void sub_1001000FC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10001B248((void *)&_mh_execute_header, a2, a3, "notify_register(cold) failed: status=%i", a5, a6, a7, a8, 0);
}

void sub_100100168(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10001B248((void *)&_mh_execute_header, a2, a3, "notify_register(hot) failed: status=%i", a5, a6, a7, a8, 0);
}

void sub_1001001D4(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 localizedDescription];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to get record for app bundle identifier: %@", (uint8_t *)&v4, 0xCu);
}

void sub_10010026C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, ">>> Unable to look up record for application with bundle identifier %@, but no error was provided.", (uint8_t *)&v2, 0xCu);
}

void sub_1001002E4(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error getting application record for app with identifier %@: %@", (uint8_t *)&v3, 0x16u);
}

void sub_10010036C(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v4 = [a1 bundleIdentifier];
  sub_100013358();
  _os_log_fault_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_FAULT, "Invalid badge value was set for %@: %@", v5, 0x16u);
}

void sub_10010040C(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v4 = [a1 bundleIdentifier];
  sub_100013358();
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Invalid badge for %@: %@", v5, 0x16u);
}

void sub_1001004AC(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Found unavailable application that was not covered by checks.", v1, 2u);
}

void sub_1001004F0(unint64_t a1, NSObject *a2)
{
  int v3 = sub_1000254AC(a1);
  int v4 = 138412290;
  __int16 v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "We expect an exclusion rect for %@, but don't have one", (uint8_t *)&v4, 0xCu);
}

void sub_100100588(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "User was not given the chance to opt in/out for use of location. Giving default response.", v1, 2u);
}

void sub_1001005CC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100100638(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001006A4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "IORegisterForSystemPower failed. ClarityBoard will not receive wake and sleep notifications.", v1, 2u);
}

void sub_1001006E8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100100754(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Not handling because another open application request is currently waiting for the lock screen to dismiss.", v1, 2u);
}

void sub_100100798(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Unexpectedly had multiple running application processes for %@", (uint8_t *)&v2, 0xCu);
}

void sub_100100810(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Tried to open application with no bundle identifier", v1, 2u);
}

void sub_100100854(uint64_t a1, NSObject *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to terminate %@.", (uint8_t *)&v3, 0xCu);
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Notification.object.getter()
{
  return Notification.object.getter();
}

uint64_t Notification.userInfo.getter()
{
  return Notification.userInfo.getter();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

uint64_t type metadata accessor for AttributedString.FormattingOptions()
{
  return type metadata accessor for AttributedString.FormattingOptions();
}

uint64_t AttributedString.init(localized:options:table:bundle:locale:comment:)()
{
  return AttributedString.init(localized:options:table:bundle:locale:comment:)();
}

uint64_t type metadata accessor for AttributedString()
{
  return type metadata accessor for AttributedString();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

Swift::String __swiftcall URL.path(percentEncoded:)(Swift::Bool percentEncoded)
{
  uint64_t v1 = URL.path(percentEncoded:)(percentEncoded);
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

uint64_t URL.path.getter()
{
  return URL.path.getter();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Data.init(contentsOf:options:)()
{
  return Data.init(contentsOf:options:)();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return Date.timeIntervalSince(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date.< infix(_:_:)()
{
  return static Date.< infix(_:_:)();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)UUID._bridgeToObjectiveC()();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t MedicalIDMainView.init(healthStore:medicalIDData:displayConfiguration:)()
{
  return MedicalIDMainView.init(healthStore:medicalIDData:displayConfiguration:)();
}

uint64_t type metadata accessor for MedicalIDMainView()
{
  return type metadata accessor for MedicalIDMainView();
}

uint64_t ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t ObservationRegistrar.access<A, B>(_:keyPath:)()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t ObservationRegistrar.didSet<A, B>(_:keyPath:)()
{
  return ObservationRegistrar.didSet<A, B>(_:keyPath:)();
}

uint64_t ObservationRegistrar.willSet<A, B>(_:keyPath:)()
{
  return ObservationRegistrar.willSet<A, B>(_:keyPath:)();
}

uint64_t ObservationRegistrar.init()()
{
  return ObservationRegistrar.init()();
}

uint64_t type metadata accessor for ObservationRegistrar()
{
  return type metadata accessor for ObservationRegistrar();
}

NSNumber __swiftcall CGFloat._bridgeToObjectiveC()()
{
  return (NSNumber)CGFloat._bridgeToObjectiveC()();
}

uint64_t static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t isFeatureEnabled(_:)()
{
  return isFeatureEnabled(_:)();
}

Swift::Void __swiftcall _AccessibilityNotifications.post()()
{
}

uint64_t type metadata accessor for AccessibilityNotification.Announcement()
{
  return type metadata accessor for AccessibilityNotification.Announcement();
}

uint64_t AccessibilityNotification.Announcement.init(_:)()
{
  return AccessibilityNotification.Announcement.init(_:)();
}

uint64_t type metadata accessor for AccessibilityNotification.ScreenChanged()
{
  return type metadata accessor for AccessibilityNotification.ScreenChanged();
}

uint64_t AccessibilityNotification.ScreenChanged.init(_:)()
{
  return AccessibilityNotification.ScreenChanged.init(_:)();
}

uint64_t OpenApplicationVerifier.init(userSelectedApplicationBundleIdentifiers:)()
{
  return OpenApplicationVerifier.init(userSelectedApplicationBundleIdentifiers:)();
}

uint64_t type metadata accessor for OpenApplicationVerifier()
{
  return type metadata accessor for OpenApplicationVerifier();
}

uint64_t type metadata accessor for OpenApplicationVerifierResult()
{
  return type metadata accessor for OpenApplicationVerifierResult();
}

uint64_t static ApplicationSceneClientSettings.settingsForSceneID(_:)()
{
  return static ApplicationSceneClientSettings.settingsForSceneID(_:)();
}

uint64_t static ApplicationSceneClientSettings.removeSettingsForSceneID(_:)()
{
  return static ApplicationSceneClientSettings.removeSettingsForSceneID(_:)();
}

uint64_t type metadata accessor for ApplicationSceneClientSettings()
{
  return type metadata accessor for ApplicationSceneClientSettings();
}

uint64_t OpenApplicationVerifierRequest.verifierDescription.getter()
{
  return OpenApplicationVerifierRequest.verifierDescription.getter();
}

uint64_t LockState.init(mobileKeybagManager:)()
{
  return LockState.init(mobileKeybagManager:)();
}

uint64_t type metadata accessor for LockState()
{
  return type metadata accessor for LockState();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t Logger.common.unsafeMutableAddressor()
{
  return Logger.common.unsafeMutableAddressor();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t static ObservableObject.environmentStore.getter()
{
  return static ObservableObject.environmentStore.getter();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t PassthroughSubject.send(_:)()
{
  return PassthroughSubject.send(_:)();
}

uint64_t PassthroughSubject.init()()
{
  return PassthroughSubject.init()();
}

Swift::Void __swiftcall ObservableObjectPublisher.send()()
{
}

uint64_t type metadata accessor for ObservableObjectPublisher()
{
  return type metadata accessor for ObservableObjectPublisher();
}

uint64_t Subject<>.send()()
{
  return Subject<>.send()();
}

uint64_t Published.init(initialValue:)()
{
  return Published.init(initialValue:)();
}

uint64_t Published.projectedValue.getter()
{
  return Published.projectedValue.getter();
}

uint64_t static Published.subscript.modify()
{
  return static Published.subscript.modify();
}

uint64_t static Published.subscript.getter()
{
  return static Published.subscript.getter();
}

uint64_t static Published.subscript.setter()
{
  return static Published.subscript.setter();
}

uint64_t type metadata accessor for Published()
{
  return type metadata accessor for Published();
}

uint64_t Publisher.eraseToAnyPublisher()()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t Animatable<>.animatableData.modify()
{
  return Animatable<>.animatableData.modify();
}

uint64_t static Animatable<>._makeAnimatable(value:inputs:)()
{
  return static Animatable<>._makeAnimatable(value:inputs:)();
}

uint64_t static ButtonRole.destructive.getter()
{
  return static ButtonRole.destructive.getter();
}

uint64_t type metadata accessor for ButtonRole()
{
  return type metadata accessor for ButtonRole();
}

uint64_t EdgeInsets.init(_all:)()
{
  return EdgeInsets.init(_all:)();
}

uint64_t ScrollView.init(_:showsIndicators:content:)()
{
  return ScrollView.init(_:showsIndicators:content:)();
}

uint64_t static ColorScheme.== infix(_:_:)()
{
  return static ColorScheme.== infix(_:_:)();
}

uint64_t type metadata accessor for ColorScheme()
{
  return type metadata accessor for ColorScheme();
}

uint64_t type metadata accessor for Environment.Content()
{
  return type metadata accessor for Environment.Content();
}

uint64_t static ShadowStyle.inner(color:radius:x:y:)()
{
  return static ShadowStyle.inner(color:radius:x:y:)();
}

uint64_t type metadata accessor for ShadowStyle()
{
  return type metadata accessor for ShadowStyle();
}

uint64_t StateObject.wrappedValue.getter()
{
  return StateObject.wrappedValue.getter();
}

uint64_t StateObject.projectedValue.getter()
{
  return StateObject.projectedValue.getter();
}

uint64_t StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t type metadata accessor for _LayoutRoot()
{
  return type metadata accessor for _LayoutRoot();
}

uint64_t _LayoutRoot.init(_:)()
{
  return _LayoutRoot.init(_:)();
}

uint64_t VerticalEdge.rawValue.getter()
{
  return VerticalEdge.rawValue.getter();
}

uint64_t static ViewModifier._makeView(modifier:inputs:body:)()
{
  return static ViewModifier._makeView(modifier:inputs:body:)();
}

uint64_t static ViewModifier._makeViewList(modifier:inputs:body:)()
{
  return static ViewModifier._makeViewList(modifier:inputs:body:)();
}

uint64_t static ViewModifier._viewListCount(inputs:body:)()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t AnyTransition.init<A>(_:)()
{
  return AnyTransition.init<A>(_:)();
}

uint64_t GeometryProxy.safeAreaInsets.getter()
{
  return GeometryProxy.safeAreaInsets.getter();
}

uint64_t GeometryProxy.size.getter()
{
  return GeometryProxy.size.getter();
}

uint64_t ImageRenderer.uiImage.getter()
{
  return ImageRenderer.uiImage.getter();
}

uint64_t ImageRenderer.init(content:)()
{
  return ImageRenderer.init(content:)();
}

uint64_t LayoutSubview.sizeThatFits(_:)()
{
  return LayoutSubview.sizeThatFits(_:)();
}

uint64_t LayoutSubview.place(at:anchor:proposal:)()
{
  return LayoutSubview.place(at:anchor:proposal:)();
}

uint64_t type metadata accessor for LayoutSubview()
{
  return type metadata accessor for LayoutSubview();
}

uint64_t type metadata accessor for _TaskModifier()
{
  return type metadata accessor for _TaskModifier();
}

uint64_t type metadata accessor for _VariadicView.Tree()
{
  return type metadata accessor for _VariadicView.Tree();
}

uint64_t _VariadicView.Tree.init(_:content:)()
{
  return _VariadicView.Tree.init(_:content:)();
}

uint64_t withAnimation<A>(_:completionCriteria:_:completion:)()
{
  return withAnimation<A>(_:completionCriteria:_:completion:)();
}

uint64_t withAnimation<A>(_:_:)()
{
  return withAnimation<A>(_:_:)();
}

uint64_t GeometryReader.init(content:)()
{
  return GeometryReader.init(content:)();
}

uint64_t type metadata accessor for GeometryReader()
{
  return type metadata accessor for GeometryReader();
}

uint64_t type metadata accessor for LayoutSubviews()
{
  return type metadata accessor for LayoutSubviews();
}

uint64_t MoveTransition.init(edge:)()
{
  return MoveTransition.init(edge:)();
}

uint64_t type metadata accessor for MoveTransition()
{
  return type metadata accessor for MoveTransition();
}

uint64_t ObservedObject.init(wrappedValue:)()
{
  return ObservedObject.init(wrappedValue:)();
}

uint64_t ObservedObject.Wrapper.subscript.getter()
{
  return ObservedObject.Wrapper.subscript.getter();
}

uint64_t TintShapeStyle.init()()
{
  return TintShapeStyle.init()();
}

uint64_t type metadata accessor for TintShapeStyle()
{
  return type metadata accessor for TintShapeStyle();
}

uint64_t _UIHostingView.init(rootView:)()
{
  return _UIHostingView.init(rootView:)();
}

uint64_t dispatch thunk of _UIHostingView.safeAreaRegions.modify()
{
  return dispatch thunk of _UIHostingView.safeAreaRegions.modify();
}

uint64_t type metadata accessor for DynamicTypeSize()
{
  return type metadata accessor for DynamicTypeSize();
}

uint64_t static LayoutDirection.== infix(_:_:)()
{
  return static LayoutDirection.== infix(_:_:)();
}

uint64_t type metadata accessor for LayoutDirection()
{
  return type metadata accessor for LayoutDirection();
}

uint64_t ModifiedContent<>.accessibilityValue(_:)()
{
  return ModifiedContent<>.accessibilityValue(_:)();
}

uint64_t ModifiedContent<>.accessibilityIdentifier(_:)()
{
  return ModifiedContent<>.accessibilityIdentifier(_:)();
}

uint64_t type metadata accessor for ModifiedContent()
{
  return type metadata accessor for ModifiedContent();
}

uint64_t NavigationStack.init<>(root:)()
{
  return NavigationStack.init<>(root:)();
}

uint64_t static SafeAreaRegions.all.getter()
{
  return static SafeAreaRegions.all.getter();
}

uint64_t static SafeAreaRegions.keyboard.getter()
{
  return static SafeAreaRegions.keyboard.getter();
}

uint64_t static SafeAreaRegions.container.getter()
{
  return static SafeAreaRegions.container.getter();
}

uint64_t static ClarityUIMetrics.standardSpacing.getter()
{
  return static ClarityUIMetrics.standardSpacing.getter();
}

uint64_t static ClarityUIMetrics.titleTopPadding.getter()
{
  return static ClarityUIMetrics.titleTopPadding.getter();
}

uint64_t static ClarityUIMetrics.backButtonPadding.getter()
{
  return static ClarityUIMetrics.backButtonPadding.getter();
}

uint64_t static ClarityUIMetrics.titleBottomPadding.getter()
{
  return static ClarityUIMetrics.titleBottomPadding.getter();
}

uint64_t static ClarityUIMetrics.componentCornerRadius.getter()
{
  return static ClarityUIMetrics.componentCornerRadius.getter();
}

uint64_t static ClarityUIMetrics.minimumComponentHeight.getter()
{
  return static ClarityUIMetrics.minimumComponentHeight.getter();
}

uint64_t static ClarityUIMetrics.titleHorizontalPadding.getter()
{
  return static ClarityUIMetrics.titleHorizontalPadding.getter();
}

uint64_t static ClarityUIMetrics.componentHorizontalPadding.getter()
{
  return static ClarityUIMetrics.componentHorizontalPadding.getter();
}

uint64_t static ClarityUIMetrics.minimumDisplayCornerRadius.getter()
{
  return static ClarityUIMetrics.minimumDisplayCornerRadius.getter();
}

uint64_t static ClarityUIMetrics.fallbackDisplayCornerRadius.getter()
{
  return static ClarityUIMetrics.fallbackDisplayCornerRadius.getter();
}

uint64_t static ClarityUIMetrics.stackWidthAsPercentageOfScreenPad.getter()
{
  return static ClarityUIMetrics.stackWidthAsPercentageOfScreenPad.getter();
}

uint64_t type metadata accessor for RoundedRectangle._Inset()
{
  return type metadata accessor for RoundedRectangle._Inset();
}

uint64_t type metadata accessor for RoundedRectangle()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t EnvironmentObject.error()()
{
  return EnvironmentObject.error()();
}

uint64_t EnvironmentObject.init()()
{
  return EnvironmentObject.init()();
}

uint64_t EnvironmentValues.colorScheme.getter()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t EnvironmentValues.colorScheme.setter()
{
  return EnvironmentValues.colorScheme.setter();
}

uint64_t EnvironmentValues.displayScale.getter()
{
  return EnvironmentValues.displayScale.getter();
}

uint64_t EnvironmentValues.displayScale.setter()
{
  return EnvironmentValues.displayScale.setter();
}

uint64_t EnvironmentValues.sceneSession.getter()
{
  return EnvironmentValues.sceneSession.getter();
}

uint64_t EnvironmentValues.sceneSession.setter()
{
  return EnvironmentValues.sceneSession.setter();
}

uint64_t EnvironmentValues.dynamicTypeSize.getter()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t EnvironmentValues.dynamicTypeSize.setter()
{
  return EnvironmentValues.dynamicTypeSize.setter();
}

uint64_t EnvironmentValues.foregroundColor.getter()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t EnvironmentValues.foregroundColor.setter()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t EnvironmentValues.layoutDirection.getter()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t EnvironmentValues.layoutDirection.setter()
{
  return EnvironmentValues.layoutDirection.setter();
}

uint64_t EnvironmentValues.displayCornerRadius.getter()
{
  return EnvironmentValues.displayCornerRadius.getter();
}

uint64_t EnvironmentValues.displayCornerRadius.setter()
{
  return EnvironmentValues.displayCornerRadius.setter();
}

uint64_t EnvironmentValues.multilineTextAlignment.getter()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t EnvironmentValues.multilineTextAlignment.setter()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t EnvironmentValues.font.getter()
{
  return EnvironmentValues.font.getter();
}

uint64_t EnvironmentValues.font.setter()
{
  return EnvironmentValues.font.setter();
}

uint64_t EnvironmentValues.isEnabled.getter()
{
  return EnvironmentValues.isEnabled.getter();
}

uint64_t EnvironmentValues.isEnabled.setter()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t EnvironmentValues.tintColor.getter()
{
  return EnvironmentValues.tintColor.getter();
}

uint64_t EnvironmentValues.tintColor.setter()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t EnvironmentValues.init()()
{
  return EnvironmentValues.init()();
}

uint64_t type metadata accessor for EnvironmentValues()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t type metadata accessor for NavigationBarHost()
{
  return type metadata accessor for NavigationBarHost();
}

uint64_t OpacityTransition.init()()
{
  return OpacityTransition.init()();
}

uint64_t type metadata accessor for OpacityTransition()
{
  return type metadata accessor for OpacityTransition();
}

uint64_t type metadata accessor for PlatterButtonType()
{
  return type metadata accessor for PlatterButtonType();
}

uint64_t static VerticalAlignment.firstTextBaseline.getter()
{
  return static VerticalAlignment.firstTextBaseline.getter();
}

uint64_t static VerticalAlignment.center.getter()
{
  return static VerticalAlignment.center.getter();
}

uint64_t LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)()
{
  return LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

Swift::Void __swiftcall LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall LocalizedStringKey.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t type metadata accessor for LocalizedStringKey.StringInterpolation()
{
  return type metadata accessor for LocalizedStringKey.StringInterpolation();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t LocalizedStringKey.init(stringInterpolation:)()
{
  return LocalizedStringKey.init(stringInterpolation:)();
}

uint64_t LocalizedStringKey.init(_:)()
{
  return LocalizedStringKey.init(_:)();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t type metadata accessor for _InsetViewModifier()
{
  return type metadata accessor for _InsetViewModifier();
}

uint64_t static AccessibilityTraits.isModal.getter()
{
  return static AccessibilityTraits.isModal.getter();
}

uint64_t static AccessibilityTraits.isHeader.getter()
{
  return static AccessibilityTraits.isHeader.getter();
}

uint64_t type metadata accessor for AccessibilityTraits()
{
  return type metadata accessor for AccessibilityTraits();
}

uint64_t static HorizontalAlignment.center.getter()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t static HorizontalAlignment.leading.getter()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t type metadata accessor for MultimodalListStyle.IconStyle()
{
  return type metadata accessor for MultimodalListStyle.IconStyle();
}

uint64_t type metadata accessor for MultimodalListStyle.Layout()
{
  return type metadata accessor for MultimodalListStyle.Layout();
}

uint64_t MultimodalListStyle.init(layout:iconStyle:)()
{
  return MultimodalListStyle.init(layout:iconStyle:)();
}

uint64_t type metadata accessor for MultimodalListStyle()
{
  return type metadata accessor for MultimodalListStyle();
}

uint64_t UIHostingController.init(hostingView:)()
{
  return UIHostingController.init(hostingView:)();
}

uint64_t dispatch thunk of UIHostingController.sizeThatFits(in:)()
{
  return dispatch thunk of UIHostingController.sizeThatFits(in:)();
}

uint64_t UIHostingController.safeAreaRegions.modify()
{
  return UIHostingController.safeAreaRegions.modify();
}

uint64_t UIHostingController.init(coder:rootView:)()
{
  return UIHostingController.init(coder:rootView:)();
}

uint64_t UIHostingController.init(rootView:)()
{
  return UIHostingController.init(rootView:)();
}

uint64_t dispatch thunk of UIHostingController.rootView.setter()
{
  return dispatch thunk of UIHostingController.rootView.setter();
}

uint64_t UIViewRepresentable._resetUIView(_:coordinator:destroy:)()
{
  return UIViewRepresentable._resetUIView(_:coordinator:destroy:)();
}

uint64_t static UIViewRepresentable.dismantleUIView(_:coordinator:)()
{
  return static UIViewRepresentable.dismantleUIView(_:coordinator:)();
}

uint64_t UIViewRepresentable.sizeThatFits(_:uiView:context:)()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t static UIViewRepresentable._layoutOptions(_:)()
{
  return static UIViewRepresentable._layoutOptions(_:)();
}

uint64_t UIViewRepresentable._identifiedViewTree(in:)()
{
  return UIViewRepresentable._identifiedViewTree(in:)();
}

uint64_t UIViewRepresentable._overrideLayoutTraits(_:for:)()
{
  return UIViewRepresentable._overrideLayoutTraits(_:for:)();
}

uint64_t UIViewRepresentable._overrideSizeThatFits(_:in:uiView:)()
{
  return UIViewRepresentable._overrideSizeThatFits(_:in:uiView:)();
}

uint64_t static UIViewRepresentable._modifyBridgedViewInputs(_:)()
{
  return static UIViewRepresentable._modifyBridgedViewInputs(_:)();
}

uint64_t UIViewRepresentable.body.getter()
{
  return UIViewRepresentable.body.getter();
}

uint64_t UIViewRepresentable<>.makeCoordinator()()
{
  return UIViewRepresentable<>.makeCoordinator()();
}

uint64_t type metadata accessor for _ConditionalContent.Storage()
{
  return type metadata accessor for _ConditionalContent.Storage();
}

uint64_t _ConditionalContent<>.init(storage:)()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t type metadata accessor for _ConditionalContent()
{
  return type metadata accessor for _ConditionalContent();
}

uint64_t ScaledClarityUIMetric.init(wrappedValue:)()
{
  return ScaledClarityUIMetric.init(wrappedValue:)();
}

uint64_t type metadata accessor for ScaledClarityUIMetric()
{
  return type metadata accessor for ScaledClarityUIMetric();
}

uint64_t type metadata accessor for _ViewModifier_Content()
{
  return type metadata accessor for _ViewModifier_Content();
}

uint64_t static HierarchicalShapeStyle.primary.getter()
{
  return static HierarchicalShapeStyle.primary.getter();
}

uint64_t PlatterButtonStyleView.init(configuration:background:foregroundColor:type:includesPadding:)()
{
  return PlatterButtonStyleView.init(configuration:background:foregroundColor:type:includesPadding:)();
}

uint64_t PlatterShadowedContent.init(shape:isPressed:content:)()
{
  return PlatterShadowedContent.init(shape:isPressed:content:)();
}

uint64_t type metadata accessor for PlatterShadowedContent()
{
  return type metadata accessor for PlatterShadowedContent();
}

uint64_t static AccessibilityActionKind.escape.getter()
{
  return static AccessibilityActionKind.escape.getter();
}

uint64_t type metadata accessor for AccessibilityActionKind()
{
  return type metadata accessor for AccessibilityActionKind();
}

uint64_t AccessibilityFocusState.wrappedValue.setter()
{
  return AccessibilityFocusState.wrappedValue.setter();
}

uint64_t AccessibilityFocusState.projectedValue.getter()
{
  return AccessibilityFocusState.projectedValue.getter();
}

uint64_t AccessibilityFocusState.init<>()()
{
  return AccessibilityFocusState.init<>()();
}

uint64_t type metadata accessor for AccessibilityFocusState()
{
  return type metadata accessor for AccessibilityFocusState();
}

uint64_t ButtonStyleConfiguration.label.getter()
{
  return ButtonStyleConfiguration.label.getter();
}

uint64_t ButtonStyleConfiguration.isPressed.getter()
{
  return ButtonStyleConfiguration.isPressed.getter();
}

uint64_t type metadata accessor for ButtonStyleConfiguration()
{
  return type metadata accessor for ButtonStyleConfiguration();
}

uint64_t type metadata accessor for _BackgroundStyleModifier()
{
  return type metadata accessor for _BackgroundStyleModifier();
}

uint64_t type metadata accessor for AccessibilityTechnologies()
{
  return type metadata accessor for AccessibilityTechnologies();
}

uint64_t static MatchedGeometryProperties.position.getter()
{
  return static MatchedGeometryProperties.position.getter();
}

uint64_t static MultimodalNavigationTitle.title(from:)()
{
  return static MultimodalNavigationTitle.title(from:)();
}

uint64_t type metadata accessor for MultimodalNavigationTitle()
{
  return type metadata accessor for MultimodalNavigationTitle();
}

uint64_t static AccessibilityChildBehavior.combine.getter()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t type metadata accessor for AccessibilityChildBehavior()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t UIViewRepresentableContext.coordinator.getter()
{
  return UIViewRepresentableContext.coordinator.getter();
}

uint64_t static AnimationCompletionCriteria.logicallyComplete.getter()
{
  return static AnimationCompletionCriteria.logicallyComplete.getter();
}

uint64_t type metadata accessor for AnimationCompletionCriteria()
{
  return type metadata accessor for AnimationCompletionCriteria();
}

uint64_t UIViewControllerRepresentable._resetUIViewController(_:coordinator:destroy:)()
{
  return UIViewControllerRepresentable._resetUIViewController(_:coordinator:destroy:)();
}

uint64_t static UIViewControllerRepresentable.dismantleUIViewController(_:coordinator:)()
{
  return static UIViewControllerRepresentable.dismantleUIViewController(_:coordinator:)();
}

uint64_t UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t static UIViewControllerRepresentable._layoutOptions(_:)()
{
  return static UIViewControllerRepresentable._layoutOptions(_:)();
}

uint64_t UIViewControllerRepresentable._identifiedViewTree(in:)()
{
  return UIViewControllerRepresentable._identifiedViewTree(in:)();
}

uint64_t UIViewControllerRepresentable.body.getter()
{
  return UIViewControllerRepresentable.body.getter();
}

uint64_t UIViewControllerRepresentable<>.makeCoordinator()()
{
  return UIViewControllerRepresentable<>.makeCoordinator()();
}

uint64_t type metadata accessor for AccessibilityAttachmentModifier()
{
  return type metadata accessor for AccessibilityAttachmentModifier();
}

uint64_t type metadata accessor for AccessibilityAdjustmentDirection()
{
  return type metadata accessor for AccessibilityAdjustmentDirection();
}

uint64_t static ClarityUIBackButtonActionWrapper.makeBackButtonAction(isAnimated:)()
{
  return static ClarityUIBackButtonActionWrapper.makeBackButtonAction(isAnimated:)();
}

uint64_t type metadata accessor for ClarityUIBackButtonActionWrapper()
{
  return type metadata accessor for ClarityUIBackButtonActionWrapper();
}

uint64_t MultimodalNavigationTitleLabelStyle.init()()
{
  return MultimodalNavigationTitleLabelStyle.init()();
}

uint64_t type metadata accessor for MultimodalNavigationTitleLabelStyle()
{
  return type metadata accessor for MultimodalNavigationTitleLabelStyle();
}

uint64_t UIViewControllerRepresentableContext.coordinator.getter()
{
  return UIViewControllerRepresentableContext.coordinator.getter();
}

uint64_t ClarityUIApplicationSceneClientSetting.rawValue.getter()
{
  return ClarityUIApplicationSceneClientSetting.rawValue.getter();
}

uint64_t type metadata accessor for ClarityUIApplicationSceneClientSetting()
{
  return type metadata accessor for ClarityUIApplicationSceneClientSetting();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t MultimodalNavigationBackButtonLabelStyle.init()()
{
  return MultimodalNavigationBackButtonLabelStyle.init()();
}

uint64_t type metadata accessor for MultimodalNavigationBackButtonLabelStyle()
{
  return type metadata accessor for MultimodalNavigationBackButtonLabelStyle();
}

uint64_t static ClarityUIApplicationSceneSpecificationWrapper.specificationClass.getter()
{
  return static ClarityUIApplicationSceneSpecificationWrapper.specificationClass.getter();
}

uint64_t type metadata accessor for ClarityUIApplicationSceneSpecificationWrapper()
{
  return type metadata accessor for ClarityUIApplicationSceneSpecificationWrapper();
}

uint64_t dispatch thunk of ClarityUIApplicationSceneClientSettingsProtocol.chromeVisible.getter()
{
  return dispatch thunk of ClarityUIApplicationSceneClientSettingsProtocol.chromeVisible.getter();
}

uint64_t dispatch thunk of ClarityUIApplicationSceneClientSettingsProtocol.navigationTitles.getter()
{
  return dispatch thunk of ClarityUIApplicationSceneClientSettingsProtocol.navigationTitles.getter();
}

uint64_t dispatch thunk of ClarityUIApplicationSceneClientSettingsProtocol.bottomBarTransitionProgress.getter()
{
  return dispatch thunk of ClarityUIApplicationSceneClientSettingsProtocol.bottomBarTransitionProgress.getter();
}

uint64_t dispatch thunk of ClarityUIMutableApplicationSceneSettingsProtocol.listLayout.setter()
{
  return dispatch thunk of ClarityUIMutableApplicationSceneSettingsProtocol.listLayout.setter();
}

uint64_t dispatch thunk of ClarityUIMutableApplicationSceneSettingsProtocol.areBadgesEnabled.setter()
{
  return dispatch thunk of ClarityUIMutableApplicationSceneSettingsProtocol.areBadgesEnabled.setter();
}

uint64_t dispatch thunk of ClarityUIMutableApplicationSceneSettingsProtocol.navigationBarHost.setter()
{
  return dispatch thunk of ClarityUIMutableApplicationSceneSettingsProtocol.navigationBarHost.setter();
}

uint64_t static Axis.Set.horizontal.getter()
{
  return static Axis.Set.horizontal.getter();
}

uint64_t Axis.Set.init(rawValue:)()
{
  return Axis.Set.init(rawValue:)();
}

uint64_t static Axis.Set.vertical.getter()
{
  return static Axis.Set.vertical.getter();
}

uint64_t static Edge.Set.horizontal.getter()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t static Edge.Set.all.getter()
{
  return static Edge.Set.all.getter();
}

uint64_t static Edge.Set.top.getter()
{
  return static Edge.Set.top.getter();
}

uint64_t static Edge.Set.bottom.getter()
{
  return static Edge.Set.bottom.getter();
}

uint64_t static Edge.Set.leading.getter()
{
  return static Edge.Set.leading.getter();
}

uint64_t Edge.Set.init(rawValue:)()
{
  return Edge.Set.init(rawValue:)();
}

uint64_t static Edge.Set.trailing.getter()
{
  return static Edge.Set.trailing.getter();
}

uint64_t static Edge.Set.vertical.getter()
{
  return static Edge.Set.vertical.getter();
}

uint64_t Edge.init(rawValue:)()
{
  return Edge.init(rawValue:)();
}

uint64_t static Font.largeTitle.getter()
{
  return static Font.largeTitle.getter();
}

uint64_t static Font.clarityUINavigationTitle.getter()
{
  return static Font.clarityUINavigationTitle.getter();
}

uint64_t static Font.body.getter()
{
  return static Font.body.getter();
}

uint64_t Font.bold()()
{
  return Font.bold()();
}

uint64_t static Font.title.getter()
{
  return static Font.title.getter();
}

uint64_t type metadata accessor for Font.Design()
{
  return type metadata accessor for Font.Design();
}

uint64_t static Font.Weight.bold.getter()
{
  return static Font.Weight.bold.getter();
}

uint64_t static Font.Weight.semibold.getter()
{
  return static Font.Weight.semibold.getter();
}

uint64_t static Font.system(size:weight:design:)()
{
  return static Font.system(size:weight:design:)();
}

uint64_t static Font.title3.getter()
{
  return static Font.title3.getter();
}

uint64_t static Font.caption2.getter()
{
  return static Font.caption2.getter();
}

uint64_t static Font.headline.getter()
{
  return static Font.headline.getter();
}

uint64_t List<>.init(content:)()
{
  return List<>.init(content:)();
}

uint64_t Path.init(_:)()
{
  return Path.init(_:)();
}

uint64_t Text.foregroundColor(_:)()
{
  return Text.foregroundColor(_:)();
}

uint64_t Text.foregroundStyle<A>(_:)()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t Text.bold()()
{
  return Text.bold()();
}

uint64_t Text.font(_:)()
{
  return Text.font(_:)();
}

uint64_t Text.init(_:tableName:bundle:comment:)()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t Text.init(_:)()
{
  return Text.init(_:)();
}

uint64_t Text.init<A>(_:)()
{
  return Text.init<A>(_:)();
}

uint64_t static View._makeView(view:inputs:)()
{
  return static View._makeView(view:inputs:)();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t View.background<A>(_:ignoresSafeAreaEdges:)()
{
  return View.background<A>(_:ignoresSafeAreaEdges:)();
}

uint64_t View.background<A>(_:alignment:)()
{
  return View.background<A>(_:alignment:)();
}

uint64_t View.fontWeight(_:)()
{
  return View.fontWeight(_:)();
}

uint64_t View.labelStyle<A>(_:)()
{
  return View.labelStyle<A>(_:)();
}

uint64_t View.buttonStyle<A>(_:)()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t View.safeAreaInset<A>(edge:alignment:spacing:content:)()
{
  return View.safeAreaInset<A>(edge:alignment:spacing:content:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t View.clarityUIIdiom()()
{
  return View.clarityUIIdiom()();
}

uint64_t View.dynamicTypeSize(_:)()
{
  return View.dynamicTypeSize(_:)();
}

uint64_t View.foregroundColor(_:)()
{
  return View.foregroundColor(_:)();
}

uint64_t View.fullScreenCover<A>(isPresented:drawsBackground:content:)()
{
  return View.fullScreenCover<A>(isPresented:drawsBackground:content:)();
}

uint64_t View.fullScreenCover<A>(isPresented:onDismiss:content:)()
{
  return View.fullScreenCover<A>(isPresented:onDismiss:content:)();
}

uint64_t View.ignoresSafeArea(_:edges:)()
{
  return View.ignoresSafeArea(_:edges:)();
}

uint64_t View.allowsHitTesting(_:)()
{
  return View.allowsHitTesting(_:)();
}

uint64_t View.accessibilityHint(_:)()
{
  return View.accessibilityHint(_:)();
}

uint64_t View.accessibilityLabel(_:)()
{
  return View.accessibilityLabel(_:)();
}

uint64_t View.accessibilityAction(_:_:)()
{
  return View.accessibilityAction(_:_:)();
}

uint64_t View.accessibilityHidden(_:)()
{
  return View.accessibilityHidden(_:)();
}

uint64_t View.allowsSecureDrawing()()
{
  return View.allowsSecureDrawing()();
}

uint64_t View.accessibilityElement(children:)()
{
  return View.accessibilityElement(children:)();
}

uint64_t View.accessibilityFocused(_:)()
{
  return View.accessibilityFocused(_:)();
}

uint64_t View.accessibilityAddTraits(_:)()
{
  return View.accessibilityAddTraits(_:)();
}

uint64_t View.accessibilityIdentifier(_:)()
{
  return View.accessibilityIdentifier(_:)();
}

uint64_t View.scrollContentBackground(_:)()
{
  return View.scrollContentBackground(_:)();
}

uint64_t View.multimodalNavigationChrome(shouldDisplay:bottomBarTransitionProgress:backButtonAction:)()
{
  return View.multimodalNavigationChrome(shouldDisplay:bottomBarTransitionProgress:backButtonAction:)();
}

uint64_t View.accessibilityRepresentation<A>(representation:)()
{
  return View.accessibilityRepresentation<A>(representation:)();
}

uint64_t View.accessibilityAdjustableAction(_:)()
{
  return View.accessibilityAdjustableAction(_:)();
}

uint64_t View.accessibilityIgnoresInvertColors(_:)()
{
  return View.accessibilityIgnoresInvertColors(_:)();
}

uint64_t View.bold(_:)()
{
  return View.bold(_:)();
}

uint64_t View.alert<A, B>(_:isPresented:actions:message:)()
{
  return View.alert<A, B>(_:isPresented:actions:message:)();
}

uint64_t View.badge(_:)()
{
  return View.badge(_:)();
}

uint64_t View.badge<A>(_:)()
{
  return View.badge<A>(_:)();
}

uint64_t View.frame(width:height:alignment:)()
{
  return View.frame(width:height:alignment:)();
}

uint64_t View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t View.overlay<A>(alignment:content:)()
{
  return View.overlay<A>(alignment:content:)();
}

uint64_t View.padding(_:)()
{
  return View.padding(_:)();
}

uint64_t View.padding(_:_:)()
{
  return View.padding(_:_:)();
}

uint64_t View.modifier<A>(_:)()
{
  return View.modifier<A>(_:)();
}

uint64_t View.onAppear(perform:)()
{
  return View.onAppear(perform:)();
}

uint64_t View.onChange<A>(of:initial:_:)()
{
  return View.onChange<A>(of:initial:_:)();
}

{
  return View.onChange<A>(of:initial:_:)();
}

uint64_t View.position(x:y:)()
{
  return View.position(x:y:)();
}

uint64_t View.clipShape<A>(_:style:)()
{
  return View.clipShape<A>(_:style:)();
}

uint64_t View.listStyle<A>(_:)()
{
  return View.listStyle<A>(_:)();
}

uint64_t Color.init(uiColor:)()
{
  return Color.init(uiColor:)();
}

uint64_t type metadata accessor for Color.RGBColorSpace()
{
  return type metadata accessor for Color.RGBColorSpace();
}

uint64_t static Color.clarityUIButtonBackground.getter()
{
  return static Color.clarityUIButtonBackground.getter();
}

uint64_t static Color.clarityUIContentBackground.getter()
{
  return static Color.clarityUIContentBackground.getter();
}

uint64_t static Color.clarityUIPressedButtonOverlay.getter()
{
  return static Color.clarityUIPressedButtonOverlay.getter();
}

uint64_t static Color.red.getter()
{
  return static Color.red.getter();
}

uint64_t static Color.black.getter()
{
  return static Color.black.getter();
}

uint64_t static Color.clear.getter()
{
  return static Color.clear.getter();
}

uint64_t static Color.green.getter()
{
  return static Color.green.getter();
}

uint64_t static Color.white.getter()
{
  return static Color.white.getter();
}

uint64_t static Color.orange.getter()
{
  return static Color.orange.getter();
}

uint64_t static Color.purple.getter()
{
  return static Color.purple.getter();
}

uint64_t Color.opacity(_:)()
{
  return Color.opacity(_:)();
}

uint64_t static Color.primary.getter()
{
  return static Color.primary.getter();
}

uint64_t Color.init(_:white:opacity:)()
{
  return Color.init(_:white:opacity:)();
}

uint64_t Color.init(_:)()
{
  return Color.init(_:)();
}

uint64_t Image.init(uiImage:)()
{
  return Image.init(uiImage:)();
}

uint64_t Image.init(systemName:)()
{
  return Image.init(systemName:)();
}

uint64_t type metadata accessor for Image.ResizingMode()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t Image.resizable(capInsets:resizingMode:)()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t Label.init(title:icon:)()
{
  return Label.init(title:icon:)();
}

uint64_t Label<>.init(_:systemImage:)()
{
  return Label<>.init(_:systemImage:)();
}

uint64_t Shape.layoutDirectionBehavior.getter()
{
  return Shape.layoutDirectionBehavior.getter();
}

uint64_t State.init(wrappedValue:)()
{
  return State.init(wrappedValue:)();
}

uint64_t State.wrappedValue.getter()
{
  return State.wrappedValue.getter();
}

uint64_t State.wrappedValue.setter()
{
  return State.wrappedValue.setter();
}

uint64_t State.projectedValue.getter()
{
  return State.projectedValue.getter();
}

uint64_t type metadata accessor for State()
{
  return type metadata accessor for State();
}

uint64_t Button.init(role:action:label:)()
{
  return Button.init(role:action:label:)();
}

uint64_t Button.init(action:label:)()
{
  return Button.init(action:label:)();
}

uint64_t Button<>.init(_:action:)()
{
  return Button<>.init(_:action:)();
}

uint64_t HStack.init(alignment:spacing:content:)()
{
  return HStack.init(alignment:spacing:content:)();
}

uint64_t type metadata accessor for HStack()
{
  return type metadata accessor for HStack();
}

uint64_t static Layout._makeLayoutView(root:inputs:body:)()
{
  return static Layout._makeLayoutView(root:inputs:body:)();
}

uint64_t Layout.updateCache(_:subviews:)()
{
  return Layout.updateCache(_:subviews:)();
}

uint64_t static Layout.layoutProperties.getter()
{
  return static Layout.layoutProperties.getter();
}

uint64_t Layout.spacing(subviews:cache:)()
{
  return Layout.spacing(subviews:cache:)();
}

uint64_t Layout<>.makeCache(subviews:)()
{
  return Layout<>.makeCache(subviews:)();
}

uint64_t Slider.init<A>(value:in:onEditingChanged:minimumValueLabel:maximumValueLabel:label:)()
{
  return Slider.init<A>(value:in:onEditingChanged:minimumValueLabel:maximumValueLabel:label:)();
}

uint64_t Slider<>.init<A>(value:in:onEditingChanged:label:)()
{
  return Slider<>.init<A>(value:in:onEditingChanged:label:)();
}

uint64_t Toggle.init(isOn:label:)()
{
  return Toggle.init(isOn:label:)();
}

uint64_t VStack.init(alignment:spacing:content:)()
{
  return VStack.init(alignment:spacing:content:)();
}

uint64_t type metadata accessor for VStack()
{
  return type metadata accessor for VStack();
}

uint64_t AnyView.init<A>(_:)()
{
  return AnyView.init<A>(_:)();
}

uint64_t Binding.wrappedValue.getter()
{
  return Binding.wrappedValue.getter();
}

uint64_t Binding.wrappedValue.setter()
{
  return Binding.wrappedValue.setter();
}

uint64_t Binding.projectedValue.getter()
{
  return Binding.projectedValue.getter();
}

uint64_t Binding.init(get:set:)()
{
  return Binding.init(get:set:)();
}

uint64_t static Binding.constant(_:)()
{
  return static Binding.constant(_:)();
}

uint64_t type metadata accessor for Capsule()
{
  return type metadata accessor for Capsule();
}

uint64_t ForEach<>.init(_:id:content:)()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t ForEach<>.init(_:content:)()
{
  return ForEach<>.init(_:content:)();
}

uint64_t Section<>.init(header:content:)()
{
  return Section<>.init(header:content:)();
}

uint64_t Section<>.init(content:)()
{
  return Section<>.init(content:)();
}

uint64_t static Material.ultraThick.getter()
{
  return static Material.ultraThick.getter();
}

uint64_t static Material.regular.getter()
{
  return static Material.regular.getter();
}

uint64_t static Material.ultraThin.getter()
{
  return static Material.ultraThin.getter();
}

uint64_t type metadata accessor for Material()
{
  return type metadata accessor for Material();
}

uint64_t static Alignment.bottom.getter()
{
  return static Alignment.bottom.getter();
}

uint64_t static Alignment.center.getter()
{
  return static Alignment.center.getter();
}

uint64_t static Animation.clarityUINavigationTransition.getter()
{
  return static Animation.clarityUINavigationTransition.getter();
}

uint64_t static Animation.default.getter()
{
  return static Animation.default.getter();
}

uint64_t Namespace.wrappedValue.getter()
{
  return Namespace.wrappedValue.getter();
}

uint64_t type metadata accessor for ShapeRole()
{
  return type metadata accessor for ShapeRole();
}

uint64_t type metadata accessor for TupleView()
{
  return type metadata accessor for TupleView();
}

uint64_t TupleView.init(_:)()
{
  return TupleView.init(_:)();
}

uint64_t static UnitPoint.topLeading.getter()
{
  return static UnitPoint.topLeading.getter();
}

uint64_t static UnitPoint.top.getter()
{
  return static UnitPoint.top.getter();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.LocalizationValue.init(stringLiteral:)()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String.localizedStringWithFormat(_:_:)()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String.index(before:)()
{
  return String.index(before:)();
}

uint64_t String.append<A>(contentsOf:)()
{
  return String.append<A>(contentsOf:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return String.UTF16View.index(_:offsetBy:)();
}

uint64_t String.init<A>(_:)()
{
  return String.init<A>(_:)();
}

uint64_t String.subscript.getter()
{
  return String.subscript.getter();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t static TaskPriority.userInitiated.getter()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

Swift::Void __swiftcall Task.cancel()()
{
}

uint64_t static Task<>.checkCancellation()()
{
  return static Task<>.checkCancellation()();
}

uint64_t dispatch thunk of AsyncSequence.makeAsyncIterator()()
{
  return dispatch thunk of AsyncSequence.makeAsyncIterator()();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t dispatch thunk of Collection.endIndex.getter()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t CGContextRef.draw(_:in:byTiling:)()
{
  return CGContextRef.draw(_:in:byTiling:)();
}

uint64_t CLFListLayout.description.getter()
{
  return CLFListLayout.description.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t type metadata accessor for NSNotificationCenter.Notifications.Iterator()
{
  return type metadata accessor for NSNotificationCenter.Notifications.Iterator();
}

uint64_t type metadata accessor for NSNotificationCenter.Notifications()
{
  return type metadata accessor for NSNotificationCenter.Notifications();
}

uint64_t NSNotificationCenter.notifications(named:object:)()
{
  return NSNotificationCenter.notifications(named:object:)();
}

uint64_t type metadata accessor for NSNotificationCenter.Publisher()
{
  return type metadata accessor for NSNotificationCenter.Publisher();
}

uint64_t NSNotificationCenter.publisher(for:object:)()
{
  return NSNotificationCenter.publisher(for:object:)();
}

uint64_t UIContentSizeCategory.init(_:)()
{
  return UIContentSizeCategory.init(_:)();
}

uint64_t static UIColor.clarityUIContentBackground.getter()
{
  return static UIColor.clarityUIContentBackground.getter();
}

NSNumber __swiftcall NSNumber.init(integerLiteral:)(Swift::Int integerLiteral)
{
  return (NSNumber)NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.hash.getter()
{
  return StringProtocol.hash.getter();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t static __CocoaSet.Index.== infix(_:_:)()
{
  return static __CocoaSet.Index.== infix(_:_:)();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.element(at:)()
{
  return __CocoaSet.element(at:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.endIndex.getter()
{
  return __CocoaSet.endIndex.getter();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t AsyncMapSequence.base.getter()
{
  return AsyncMapSequence.base.getter();
}

uint64_t AsyncMapSequence.Iterator.baseIterator.modify()
{
  return AsyncMapSequence.Iterator.baseIterator.modify();
}

uint64_t AsyncMapSequence.Iterator.transform.getter()
{
  return AsyncMapSequence.Iterator.transform.getter();
}

uint64_t AsyncMapSequence.Iterator.init(_:transform:)()
{
  return AsyncMapSequence.Iterator.init(_:transform:)();
}

uint64_t AsyncMapSequence.transform.getter()
{
  return AsyncMapSequence.transform.getter();
}

uint64_t AsyncMapSequence.init(_:transform:)()
{
  return AsyncMapSequence.init(_:transform:)();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t _typeName(_:qualified:)()
{
  return _typeName(_:qualified:)();
}

uint64_t AXDeviceHasStaccato()
{
  return _AXDeviceHasStaccato();
}

uint64_t AXDeviceIsPad()
{
  return _AXDeviceIsPad();
}

uint64_t AXDeviceIsRingerSwitchAvailable()
{
  return _AXDeviceIsRingerSwitchAvailable();
}

uint64_t AXDeviceIsSiriAvailableInClarity()
{
  return _AXDeviceIsSiriAvailableInClarity();
}

uint64_t AXFormatFloatWithPercentage()
{
  return _AXFormatFloatWithPercentage();
}

uint64_t AXFormatNumber()
{
  return _AXFormatNumber();
}

uint64_t AXLocStringKeyForModel()
{
  return _AXLocStringKeyForModel();
}

uint64_t AXPerformBlockOnMainThreadAfterDelay()
{
  return _AXPerformBlockOnMainThreadAfterDelay();
}

uint64_t AXTextSizePercentage()
{
  return _AXTextSizePercentage();
}

OSStatus AudioServicesAddSystemSoundCompletion(SystemSoundID inSystemSoundID, CFRunLoopRef inRunLoop, CFStringRef inRunLoopMode, AudioServicesSystemSoundCompletionProc inCompletionRoutine, void *inClientData)
{
  return _AudioServicesAddSystemSoundCompletion(inSystemSoundID, inRunLoop, inRunLoopMode, inCompletionRoutine, inClientData);
}

void AudioServicesRemoveSystemSoundCompletion(SystemSoundID inSystemSoundID)
{
}

uint64_t AudioServicesStopSystemSound()
{
  return _AudioServicesStopSystemSound();
}

uint64_t BBServerRun()
{
  return _BBServerRun();
}

uint64_t BBServerSetAllowsPublication()
{
  return _BBServerSetAllowsPublication();
}

uint64_t BKHIDServicesGetCurrentDeviceOrientation()
{
  return _BKHIDServicesGetCurrentDeviceOrientation();
}

uint64_t BKHIDServicesGetNonFlatDeviceOrientation()
{
  return _BKHIDServicesGetNonFlatDeviceOrientation();
}

uint64_t BKSDisplayBrightnessGetCurrent()
{
  return _BKSDisplayBrightnessGetCurrent();
}

uint64_t BKSDisplayBrightnessSet()
{
  return _BKSDisplayBrightnessSet();
}

uint64_t BKSDisplayBrightnessTransactionCreate()
{
  return _BKSDisplayBrightnessTransactionCreate();
}

uint64_t BKSDisplayServicesSetScreenBlanked()
{
  return _BKSDisplayServicesSetScreenBlanked();
}

uint64_t BKSDisplayServicesUpdateMirroredDisplayOrientationWithInterfaceOrientation()
{
  return _BKSDisplayServicesUpdateMirroredDisplayOrientationWithInterfaceOrientation();
}

uint64_t BKSDisplayServicesWillUnblank()
{
  return _BKSDisplayServicesWillUnblank();
}

uint64_t BKSDisplaySetSecureMode()
{
  return _BKSDisplaySetSecureMode();
}

uint64_t BKSHIDServicesCancelTouchesOnMainDisplay()
{
  return _BKSHIDServicesCancelTouchesOnMainDisplay();
}

uint64_t BKSHIDServicesGetRingerState()
{
  return _BKSHIDServicesGetRingerState();
}

uint64_t BKSHIDServicesSetBacklightFactorWithFadeDuration()
{
  return _BKSHIDServicesSetBacklightFactorWithFadeDuration();
}

uint64_t BKSHIDServicesSetBacklightFactorWithFadeDurationAsync()
{
  return _BKSHIDServicesSetBacklightFactorWithFadeDurationAsync();
}

uint64_t BKSHIDServicesSetDeviceInterfaceOrientation()
{
  return _BKSHIDServicesSetDeviceInterfaceOrientation();
}

uint64_t BKSHIDServicesSetHIDUILockedState()
{
  return _BKSHIDServicesSetHIDUILockedState();
}

uint64_t BSDeviceOrientationDescription()
{
  return _BSDeviceOrientationDescription();
}

uint64_t BSDispatchMain()
{
  return _BSDispatchMain();
}

uint64_t BSDispatchQueueAssertMain()
{
  return _BSDispatchQueueAssertMain();
}

uint64_t BSDispatchQueueCreateSerial()
{
  return _BSDispatchQueueCreateSerial();
}

uint64_t BSFloatEqualToFloat()
{
  return _BSFloatEqualToFloat();
}

uint64_t BSInterfaceOrientationDescription()
{
  return _BSInterfaceOrientationDescription();
}

uint64_t BSInterfaceOrientationIsValid()
{
  return _BSInterfaceOrientationIsValid();
}

uint64_t BSInterfaceOrientationMaskDescription()
{
  return _BSInterfaceOrientationMaskDescription();
}

uint64_t BSProcessDescriptionForPID()
{
  return _BSProcessDescriptionForPID();
}

uint64_t BSRectWithSize()
{
  return _BSRectWithSize();
}

uint64_t BSSizeGreaterThanOrEqualToSize()
{
  return _BSSizeGreaterThanOrEqualToSize();
}

uint64_t BYSetupAssistantPrepareLaunchSentinel()
{
  return _BYSetupAssistantPrepareLaunchSentinel();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryGetValue(theDict, key);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return _CFNumberCreate(allocator, theType, valuePtr);
}

void CFRelease(CFTypeRef cf)
{
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return _CFRunLoopGetCurrent();
}

CGAffineTransform *__cdecl CGAffineTransformConcat(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t1, CGAffineTransform *t2)
{
  return _CGAffineTransformConcat(retstr, t1, t2);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return _CGAffineTransformMakeRotation(retstr, angle);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return _CGBitmapContextCreate(data, width, height, bitsPerComponent, bytesPerRow, space, bitmapInfo);
}

void *__cdecl CGBitmapContextGetData(CGContextRef context)
{
  return _CGBitmapContextGetData(context);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return _CGColorSpaceCreateDeviceRGB();
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return _CGImageCreateWithImageInRect(image, rect);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return _CGRectIsEmpty(rect);
}

uint64_t CLFAppIconURLForBundleIdentifier()
{
  return _CLFAppIconURLForBundleIdentifier();
}

uint64_t CLFLogCommon()
{
  return _CLFLogCommon();
}

uint64_t CLFWallpaperURL()
{
  return _CLFWallpaperURL();
}

uint64_t FBSOpenApplicationErrorCreate()
{
  return _FBSOpenApplicationErrorCreate();
}

uint64_t FBSystemShellInitialize()
{
  return _FBSystemShellInitialize();
}

uint64_t GetThermalState()
{
  return _GetThermalState();
}

IOReturn IOAllowPowerChange(io_connect_t kernelPort, intptr_t notificationID)
{
  return _IOAllowPowerChange(kernelPort, notificationID);
}

IOReturn IODeregisterForSystemPower(io_object_t *notifier)
{
  return _IODeregisterForSystemPower(notifier);
}

uint64_t IOHIDEventGetIntegerValue()
{
  return _IOHIDEventGetIntegerValue();
}

uint64_t IOHIDEventGetType()
{
  return _IOHIDEventGetType();
}

CFRunLoopSourceRef IONotificationPortGetRunLoopSource(IONotificationPortRef notify)
{
  return _IONotificationPortGetRunLoopSource(notify);
}

IOReturn IOPMAssertionCreateWithName(CFStringRef AssertionType, IOPMAssertionLevel AssertionLevel, CFStringRef AssertionName, IOPMAssertionID *AssertionID)
{
  return _IOPMAssertionCreateWithName(AssertionType, AssertionLevel, AssertionName, AssertionID);
}

IOReturn IOPMAssertionRelease(IOPMAssertionID AssertionID)
{
  return _IOPMAssertionRelease(AssertionID);
}

io_connect_t IORegisterForSystemPower(void *refcon, IONotificationPortRef *thePortRef, IOServiceInterestCallback callback, io_object_t *notifier)
{
  return _IORegisterForSystemPower(refcon, thePortRef, callback, notifier);
}

io_registry_entry_t IORegistryEntryFromPath(mach_port_t mainPort, const io_string_t path)
{
  return _IORegistryEntryFromPath(mainPort, path);
}

kern_return_t IORegistryEntrySetCFProperty(io_registry_entry_t entry, CFStringRef propertyName, CFTypeRef property)
{
  return _IORegistryEntrySetCFProperty(entry, propertyName, property);
}

kern_return_t IOServiceClose(io_connect_t connect)
{
  return _IOServiceClose(connect);
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MGGetFloat32Answer()
{
  return _MGGetFloat32Answer();
}

uint64_t MGGetSInt32Answer()
{
  return _MGGetSInt32Answer();
}

uint64_t MGIsDeviceOfType()
{
  return _MGIsDeviceOfType();
}

uint64_t MKBGetDeviceLockStateInfo()
{
  return _MKBGetDeviceLockStateInfo();
}

NSString *__cdecl NSStringFromCGAffineTransform(CGAffineTransform *transform)
{
  return _NSStringFromCGAffineTransform(transform);
}

NSString *__cdecl NSStringFromCGRect(CGRect rect)
{
  return _NSStringFromCGRect(rect);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromUIEdgeInsets(UIEdgeInsets insets)
{
  return _NSStringFromUIEdgeInsets(insets);
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

uint64_t UIEdgeInsetsFromApplicationSupportDisplayEdgeInsetsWrapper()
{
  return _UIEdgeInsetsFromApplicationSupportDisplayEdgeInsetsWrapper();
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

uint64_t UIRectCenteredIntegralRect()
{
  return _UIRectCenteredIntegralRect();
}

uint64_t UNSUserNotificationServerRun()
{
  return _UNSUserNotificationServerRun();
}

uint64_t _AXFeatureSupportsNonSightedUsage()
{
  return __AXFeatureSupportsNonSightedUsage();
}

uint64_t _AXSAccessibilityEnabled()
{
  return __AXSAccessibilityEnabled();
}

uint64_t _AXSAssistiveTouchEnabled()
{
  return __AXSAssistiveTouchEnabled();
}

uint64_t _AXSAssistiveTouchScannerEnabled()
{
  return __AXSAssistiveTouchScannerEnabled();
}

uint64_t _AXSAssistiveTouchScannerSetEnabled()
{
  return __AXSAssistiveTouchScannerSetEnabled();
}

uint64_t _AXSAssistiveTouchSetEnabled()
{
  return __AXSAssistiveTouchSetEnabled();
}

uint64_t _AXSCommandAndControlEnabled()
{
  return __AXSCommandAndControlEnabled();
}

uint64_t _AXSCopyPreferredContentSizeCategoryName()
{
  return __AXSCopyPreferredContentSizeCategoryName();
}

uint64_t _AXSSetPreferredContentSizeCategoryName()
{
  return __AXSSetPreferredContentSizeCategoryName();
}

uint64_t _AXSVoiceOverTouchEnabled()
{
  return __AXSVoiceOverTouchEnabled();
}

uint64_t _AXSVoiceOverTouchSetEnabled()
{
  return __AXSVoiceOverTouchSetEnabled();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t __UIAccessibilityCastAsClass()
{
  return ___UIAccessibilityCastAsClass();
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

int *__error(void)
{
  return ___error();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return __set_user_dir_suffix();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void abort(void)
{
}

uint64_t bootstrap_check_in2()
{
  return _bootstrap_check_in2();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

uint64_t dispatch_mach_connect()
{
  return _dispatch_mach_connect();
}

uint64_t dispatch_mach_create()
{
  return _dispatch_mach_create();
}

uint64_t dispatch_mach_msg_get_msg()
{
  return _dispatch_mach_msg_get_msg();
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void free(void *a1)
{
}

pid_t getpid(void)
{
  return _getpid();
}

uint64_t kdebug_trace()
{
  return _kdebug_trace();
}

uint64_t logEventForAppleCare()
{
  return _logEventForAppleCare();
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return _mach_msg(msg, option, send_size, rcv_size, rcv_name, timeout, notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
}

kern_return_t mach_port_mod_refs(ipc_space_t task, mach_port_name_t name, mach_port_right_t right, mach_port_delta_t delta)
{
  return _mach_port_mod_refs(task, name, right, delta);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
}

mach_port_t mig_get_reply_port(void)
{
  return _mig_get_reply_port();
}

void mig_put_reply_port(mach_port_t reply_port)
{
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return _notify_get_state(token, state64);
}

uint32_t notify_post(const char *name)
{
  return _notify_post(name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return _notify_register_check(name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return _notify_set_state(token, state64);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return _strncpy(__dst, __src, __n);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_resume()
{
  return _swift_continuation_resume();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return _swift_dynamicCastObjCClassUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeMetadata()
{
  return _swift_getTupleTypeMetadata();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return _swift_getTupleTypeMetadata3();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakAssign()
{
  return _swift_weakAssign();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return _voucher_mach_msg_set(msg);
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _[a1 CGImage];
}

id objc_msgSend_UIActionType(void *a1, const char *a2, ...)
{
  return _[a1 UIActionType];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__addAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAssertion:");
}

id objc_msgSend__addHandlerForServer_selector_key_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addHandlerForServer:selector:key:");
}

id objc_msgSend__adjustMidnightTimerAfterSleep(void *a1, const char *a2, ...)
{
  return _[a1 _adjustMidnightTimerAfterSleep];
}

id objc_msgSend__adminSceneDelegate(void *a1, const char *a2, ...)
{
  return _[a1 _adminSceneDelegate];
}

id objc_msgSend__allFrontmostPIDsForAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allFrontmostPIDsForAttribute:");
}

id objc_msgSend__angleForInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_angleForInterfaceOrientation:");
}

id objc_msgSend__animationDurationForRotationFromInterfaceOrientation_toInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animationDurationForRotationFromInterfaceOrientation:toInterfaceOrientation:");
}

id objc_msgSend__applicationForScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationForScene:");
}

id objc_msgSend__attemptToDismissLockScreenWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attemptToDismissLockScreenWithCompletion:");
}

id objc_msgSend__attemptToPrewarmSiri(void *a1, const char *a2, ...)
{
  return _[a1 _attemptToPrewarmSiri];
}

id objc_msgSend__attemptTransitionToAdminMode(void *a1, const char *a2, ...)
{
  return _[a1 _attemptTransitionToAdminMode];
}

id objc_msgSend__badgesAreEnabledForSectionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_badgesAreEnabledForSectionInfo:");
}

id objc_msgSend__beginPendingCallbacksBlock(void *a1, const char *a2, ...)
{
  return _[a1 _beginPendingCallbacksBlock];
}

id objc_msgSend__clb_displayEdgeInfoForScreenType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clb_displayEdgeInfoForScreenType:");
}

id objc_msgSend__cleanupSystemSound_andKill_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupSystemSound:andKill:");
}

id objc_msgSend__cleanupToneAlertForSound_andKill_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupToneAlertForSound:andKill:");
}

id objc_msgSend__configurationWithAttentionLostTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurationWithAttentionLostTimeout:");
}

id objc_msgSend__contextId(void *a1, const char *a2, ...)
{
  return _[a1 _contextId];
}

id objc_msgSend__continueOpenApplicationRequest_withResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_continueOpenApplicationRequest:withResult:");
}

id objc_msgSend__copyWithOverrideSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyWithOverrideSize:");
}

id objc_msgSend__createAccessibilityUIServerScene(void *a1, const char *a2, ...)
{
  return _[a1 _createAccessibilityUIServerScene];
}

id objc_msgSend__createAdminScene(void *a1, const char *a2, ...)
{
  return _[a1 _createAdminScene];
}

id objc_msgSend__createAlertScene(void *a1, const char *a2, ...)
{
  return _[a1 _createAlertScene];
}

id objc_msgSend__createAssistiveTouchScene(void *a1, const char *a2, ...)
{
  return _[a1 _createAssistiveTouchScene];
}

id objc_msgSend__createCoreAuthUIScene(void *a1, const char *a2, ...)
{
  return _[a1 _createCoreAuthUIScene];
}

id objc_msgSend__createDruidScene(void *a1, const char *a2, ...)
{
  return _[a1 _createDruidScene];
}

id objc_msgSend__createHUDScene(void *a1, const char *a2, ...)
{
  return _[a1 _createHUDScene];
}

id objc_msgSend__createInCallServiceScene(void *a1, const char *a2, ...)
{
  return _[a1 _createInCallServiceScene];
}

id objc_msgSend__createInputUIScene(void *a1, const char *a2, ...)
{
  return _[a1 _createInputUIScene];
}

id objc_msgSend__createLockScene(void *a1, const char *a2, ...)
{
  return _[a1 _createLockScene];
}

id objc_msgSend__createMainScene(void *a1, const char *a2, ...)
{
  return _[a1 _createMainScene];
}

id objc_msgSend__createSceneWithIdentifier_specification_foreground_level_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSceneWithIdentifier:specification:foreground:level:");
}

id objc_msgSend__createStatusBarScene(void *a1, const char *a2, ...)
{
  return _[a1 _createStatusBarScene];
}

id objc_msgSend__createVoiceControlScene(void *a1, const char *a2, ...)
{
  return _[a1 _createVoiceControlScene];
}

id objc_msgSend__currentApplication(void *a1, const char *a2, ...)
{
  return _[a1 _currentApplication];
}

id objc_msgSend__daylightSavingsTimeChanged(void *a1, const char *a2, ...)
{
  return _[a1 _daylightSavingsTimeChanged];
}

id objc_msgSend__decreaseVolume(void *a1, const char *a2, ...)
{
  return _[a1 _decreaseVolume];
}

id objc_msgSend__defaultSceneIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _defaultSceneIdentifier];
}

id objc_msgSend__descriptionForTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_descriptionForTimeout:");
}

id objc_msgSend__descriptionWithLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_descriptionWithLength:");
}

id objc_msgSend__disableSecureMode(void *a1, const char *a2, ...)
{
  return _[a1 _disableSecureMode];
}

id objc_msgSend__disableTapToWake(void *a1, const char *a2, ...)
{
  return _[a1 _disableTapToWake];
}

id objc_msgSend__displayStyleForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayStyleForBundleIdentifier:");
}

id objc_msgSend__endPendingCallbacksBlock(void *a1, const char *a2, ...)
{
  return _[a1 _endPendingCallbacksBlock];
}

id objc_msgSend__feedbackSupportLevel(void *a1, const char *a2, ...)
{
  return _[a1 _feedbackSupportLevel];
}

id objc_msgSend__fetchHighResIconWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchHighResIconWithCompletion:");
}

id objc_msgSend__fetchIconServicesIconWithScreenScale_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchIconServicesIconWithScreenScale:completion:");
}

id objc_msgSend__finishHandlingOpenApplicationRequest_verifierResult_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finishHandlingOpenApplicationRequest:verifierResult:completion:");
}

id objc_msgSend__flipDimensionsForSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_flipDimensionsForSize:");
}

id objc_msgSend__forceBioLockout(void *a1, const char *a2, ...)
{
  return _[a1 _forceBioLockout];
}

id objc_msgSend__frontmostPIDIgnoringSiri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frontmostPIDIgnoringSiri:");
}

id objc_msgSend__handleHIDEvent_withUIEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleHIDEvent:withUIEvent:");
}

id objc_msgSend__handleNewDomainData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNewDomainData:");
}

id objc_msgSend__handleUpdatedScreenSizeForApplication_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdatedScreenSizeForApplication:completion:");
}

id objc_msgSend__hidEvent(void *a1, const char *a2, ...)
{
  return _[a1 _hidEvent];
}

id objc_msgSend__iconCache(void *a1, const char *a2, ...)
{
  return _[a1 _iconCache];
}

id objc_msgSend__iconKey(void *a1, const char *a2, ...)
{
  return _[a1 _iconKey];
}

id objc_msgSend__increaseVolume(void *a1, const char *a2, ...)
{
  return _[a1 _increaseVolume];
}

id objc_msgSend__initTapToWake(void *a1, const char *a2, ...)
{
  return _[a1 _initTapToWake];
}

id objc_msgSend__initWithApplication_scene_displayStyle_createIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithApplication:scene:displayStyle:createIfNeeded:");
}

id objc_msgSend__initializationContextWithDefaultSceneToken_displayStyle_canRequestScenes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initializationContextWithDefaultSceneToken:displayStyle:canRequestScenes:");
}

id objc_msgSend__isShowingLockScreen(void *a1, const char *a2, ...)
{
  return _[a1 _isShowingLockScreen];
}

id objc_msgSend__isSupportedSystemInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isSupportedSystemInterfaceOrientation:");
}

id objc_msgSend__isSystemSleeping(void *a1, const char *a2, ...)
{
  return _[a1 _isSystemSleeping];
}

id objc_msgSend__loadAssistantUIBundle(void *a1, const char *a2, ...)
{
  return _[a1 _loadAssistantUIBundle];
}

id objc_msgSend__localizedStringValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedStringValue:");
}

id objc_msgSend__localizedValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedValue:");
}

id objc_msgSend__lockDevice(void *a1, const char *a2, ...)
{
  return _[a1 _lockDevice];
}

id objc_msgSend__logThermalEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logThermalEvent:");
}

id objc_msgSend__nextLockTimeDuration(void *a1, const char *a2, ...)
{
  return _[a1 _nextLockTimeDuration];
}

id objc_msgSend__noteDidWakeFromSleep(void *a1, const char *a2, ...)
{
  return _[a1 _noteDidWakeFromSleep];
}

id objc_msgSend__notifyObserversOfBadgeStringChange(void *a1, const char *a2, ...)
{
  return _[a1 _notifyObserversOfBadgeStringChange];
}

id objc_msgSend__performSceneUpdateForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performSceneUpdateForRequest:");
}

id objc_msgSend__playSystemSound_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playSystemSound:");
}

id objc_msgSend__playToneAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playToneAlert:");
}

id objc_msgSend__postSpringBoardFinishedStartupNotification(void *a1, const char *a2, ...)
{
  return _[a1 _postSpringBoardFinishedStartupNotification];
}

id objc_msgSend__preventIdleSleep(void *a1, const char *a2, ...)
{
  return _[a1 _preventIdleSleep];
}

id objc_msgSend__preventIdleSleepForNumberOfSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preventIdleSleepForNumberOfSeconds:");
}

id objc_msgSend__privateNotificationOccurred_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_privateNotificationOccurred:");
}

id objc_msgSend__process(void *a1, const char *a2, ...)
{
  return _[a1 _process];
}

id objc_msgSend__publishDisplayLayoutChangeWithScene_foreground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_publishDisplayLayoutChangeWithScene:foreground:");
}

id objc_msgSend__referenceBounds(void *a1, const char *a2, ...)
{
  return _[a1 _referenceBounds];
}

id objc_msgSend__removeAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeAssertion:");
}

id objc_msgSend__reportInsecureProcessesForAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reportInsecureProcessesForAction:");
}

id objc_msgSend__requestOptionsDictionary(void *a1, const char *a2, ...)
{
  return _[a1 _requestOptionsDictionary];
}

id objc_msgSend__resetHUDHiding(void *a1, const char *a2, ...)
{
  return _[a1 _resetHUDHiding];
}

id objc_msgSend__respondToCurrentThermalCondition(void *a1, const char *a2, ...)
{
  return _[a1 _respondToCurrentThermalCondition];
}

id objc_msgSend__sceneForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sceneForApplication:");
}

id objc_msgSend__sendLockStateNotification(void *a1, const char *a2, ...)
{
  return _[a1 _sendLockStateNotification];
}

id objc_msgSend__setBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 _setBackgroundColor];
}

id objc_msgSend__setContinuousCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setContinuousCornerRadius:");
}

id objc_msgSend__setDeviceInterfaceOrientation_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDeviceInterfaceOrientation:animated:");
}

id objc_msgSend__setHIDUILockedState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHIDUILockedState:");
}

id objc_msgSend__setMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setMuted:");
}

id objc_msgSend__setSystemInterfaceOrientation_updatedAnimationDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSystemInterfaceOrientation:updatedAnimationDuration:");
}

id objc_msgSend__setUpAutoLockTime(void *a1, const char *a2, ...)
{
  return _[a1 _setUpAutoLockTime];
}

id objc_msgSend__setupAccessibility(void *a1, const char *a2, ...)
{
  return _[a1 _setupAccessibility];
}

id objc_msgSend__setupDaylightSavingsTimer(void *a1, const char *a2, ...)
{
  return _[a1 _setupDaylightSavingsTimer];
}

id objc_msgSend__setupMidnightTimer(void *a1, const char *a2, ...)
{
  return _[a1 _setupMidnightTimer];
}

id objc_msgSend__setupSignificantTimeChangeTimers(void *a1, const char *a2, ...)
{
  return _[a1 _setupSignificantTimeChangeTimers];
}

id objc_msgSend__setupStatusServer(void *a1, const char *a2, ...)
{
  return _[a1 _setupStatusServer];
}

id objc_msgSend__setupSystemGestures(void *a1, const char *a2, ...)
{
  return _[a1 _setupSystemGestures];
}

id objc_msgSend__shakeAndClearTextField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shakeAndClearTextField:");
}

id objc_msgSend__shouldCreateHiddenSceneForRequestFromProcess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldCreateHiddenSceneForRequestFromProcess:");
}

id objc_msgSend__shouldShowLockScreen(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowLockScreen];
}

id objc_msgSend__startBulletinBoardServer(void *a1, const char *a2, ...)
{
  return _[a1 _startBulletinBoardServer];
}

id objc_msgSend__startObservingThermalEvents(void *a1, const char *a2, ...)
{
  return _[a1 _startObservingThermalEvents];
}

id objc_msgSend__startSystemAppServerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _startSystemAppServerIfNeeded];
}

id objc_msgSend__stopAllAlerts(void *a1, const char *a2, ...)
{
  return _[a1 _stopAllAlerts];
}

id objc_msgSend__synchronizedDrawingFence(void *a1, const char *a2, ...)
{
  return _[a1 _synchronizedDrawingFence];
}

id objc_msgSend__systemAnimationFenceCreatingIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemAnimationFenceCreatingIfNecessary:");
}

id objc_msgSend__systemAnimationFenceExemptQueue(void *a1, const char *a2, ...)
{
  return _[a1 _systemAnimationFenceExemptQueue];
}

id objc_msgSend__toggleBacklight(void *a1, const char *a2, ...)
{
  return _[a1 _toggleBacklight];
}

id objc_msgSend__undimDisplay(void *a1, const char *a2, ...)
{
  return _[a1 _undimDisplay];
}

id objc_msgSend__updateAVSystemController(void *a1, const char *a2, ...)
{
  return _[a1 _updateAVSystemController];
}

id objc_msgSend__updateDisplayStyleForSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDisplayStyleForSettings:");
}

id objc_msgSend__updateEnabledBadgesSetWithSections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateEnabledBadgesSetWithSections:");
}

id objc_msgSend__updateForKeyboardScene(void *a1, const char *a2, ...)
{
  return _[a1 _updateForKeyboardScene];
}

id objc_msgSend__updateHostView(void *a1, const char *a2, ...)
{
  return _[a1 _updateHostView];
}

id objc_msgSend__updateIcon(void *a1, const char *a2, ...)
{
  return _[a1 _updateIcon];
}

id objc_msgSend__updateLockScreenForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateLockScreenForState:");
}

id objc_msgSend__updateLockScreenForegroundness(void *a1, const char *a2, ...)
{
  return _[a1 _updateLockScreenForegroundness];
}

id objc_msgSend__updateNeedsBiometricAuthentication(void *a1, const char *a2, ...)
{
  return _[a1 _updateNeedsBiometricAuthentication];
}

id objc_msgSend__updateShouldAddInProcessKeyboardSceneToRootWindow(void *a1, const char *a2, ...)
{
  return _[a1 _updateShouldAddInProcessKeyboardSceneToRootWindow];
}

id objc_msgSend__visibilityOverrideForProxy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_visibilityOverrideForProxy:");
}

id objc_msgSend__weakPointersHashTable(void *a1, const char *a2, ...)
{
  return _[a1 _weakPointersHashTable];
}

id objc_msgSend__windowForSceneWithSessionRole_isSecure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_windowForSceneWithSessionRole:isSecure:");
}

id objc_msgSend__windowWithContextId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_windowWithContextId:");
}

id objc_msgSend_accessibilityBundleWithLastPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityBundleWithLastPathComponent:");
}

id objc_msgSend_acquireWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireWithError:");
}

id objc_msgSend_actionHandlerHelper(void *a1, const char *a2, ...)
{
  return _[a1 actionHandlerHelper];
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return _[a1 activate];
}

id objc_msgSend_activate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activate:");
}

id objc_msgSend_activateSiri(void *a1, const char *a2, ...)
{
  return _[a1 activateSiri];
}

id objc_msgSend_activationState(void *a1, const char *a2, ...)
{
  return _[a1 activationState];
}

id objc_msgSend_activeAttributionData(void *a1, const char *a2, ...)
{
  return _[a1 activeAttributionData];
}

id objc_msgSend_activeInterfaceOrientationForServerInstance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeInterfaceOrientationForServerInstance:");
}

id objc_msgSend_activeKeyboard(void *a1, const char *a2, ...)
{
  return _[a1 activeKeyboard];
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimation:forKey:");
}

id objc_msgSend_addBulletinNotificationItem_dndBehavior_window_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBulletinNotificationItem:dndBehavior:window:");
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addElement:");
}

id objc_msgSend_addExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addExtension:");
}

id objc_msgSend_addGestureRecognizer_recognitionEvent_toDisplayWithIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGestureRecognizer:recognitionEvent:toDisplayWithIdentity:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserverForName:object:queue:usingBlock:");
}

id objc_msgSend_addScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addScene:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_addTimer_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTimer:forMode:");
}

id objc_msgSend_alertConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 alertConfiguration];
}

id objc_msgSend_alertWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertWithConfiguration:");
}

id objc_msgSend_alertWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertWithToken:");
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allProcesses(void *a1, const char *a2, ...)
{
  return _[a1 allProcesses];
}

id objc_msgSend_allScenes(void *a1, const char *a2, ...)
{
  return _[a1 allScenes];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_alternateResponse(void *a1, const char *a2, ...)
{
  return _[a1 alternateResponse];
}

id objc_msgSend_alternateTitleKey(void *a1, const char *a2, ...)
{
  return _[a1 alternateTitleKey];
}

id objc_msgSend_alwaysLaunchesInBackground(void *a1, const char *a2, ...)
{
  return _[a1 alwaysLaunchesInBackground];
}

id objc_msgSend_animatedAppearanceWithFactory_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatedAppearanceWithFactory:completion:");
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationWithKeyPath:");
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_appLibrary(void *a1, const char *a2, ...)
{
  return _[a1 appLibrary];
}

id objc_msgSend_appTags(void *a1, const char *a2, ...)
{
  return _[a1 appTags];
}

id objc_msgSend_application(void *a1, const char *a2, ...)
{
  return _[a1 application];
}

id objc_msgSend_applicationBundleIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 applicationBundleIdentifiers];
}

id objc_msgSend_applicationInfo(void *a1, const char *a2, ...)
{
  return _[a1 applicationInfo];
}

id objc_msgSend_applicationInfoForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationInfoForBundleIdentifier:");
}

id objc_msgSend_applicationProcessesForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationProcessesForBundleIdentifier:");
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _[a1 applicationState];
}

id objc_msgSend_applicationType(void *a1, const char *a2, ...)
{
  return _[a1 applicationType];
}

id objc_msgSend_applyDefaultClarityUISettings(void *a1, const char *a2, ...)
{
  return _[a1 applyDefaultClarityUISettings];
}

id objc_msgSend_arguments(void *a1, const char *a2, ...)
{
  return _[a1 arguments];
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_attentionAwarenessClient(void *a1, const char *a2, ...)
{
  return _[a1 attentionAwarenessClient];
}

id objc_msgSend_attributeWithDomain_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributeWithDomain:name:");
}

id objc_msgSend_authenticateAuditToken_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticateAuditToken:error:");
}

id objc_msgSend_avoidsBackButton(void *a1, const char *a2, ...)
{
  return _[a1 avoidsBackButton];
}

id objc_msgSend_backButtonAvoidingHostingControllerWithContainedViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backButtonAvoidingHostingControllerWithContainedViewController:");
}

id objc_msgSend_badgeStringObservers(void *a1, const char *a2, ...)
{
  return _[a1 badgeStringObservers];
}

id objc_msgSend_badgeValue(void *a1, const char *a2, ...)
{
  return _[a1 badgeValue];
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return _[a1 begin];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bottomBarTransitionProgressForClientSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomBarTransitionProgressForClientSettings:");
}

id objc_msgSend_bottomBarTransitionProgressSetting(void *a1, const char *a2, ...)
{
  return _[a1 bottomBarTransitionProgressSetting];
}

id objc_msgSend_bottomInset(void *a1, const char *a2, ...)
{
  return _[a1 bottomInset];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_bs_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_BOOLForKey:");
}

id objc_msgSend_bs_map_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_map:");
}

id objc_msgSend_bs_performAfterSynchronizedCommit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_performAfterSynchronizedCommit:");
}

id objc_msgSend_bs_safeArrayForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_safeArrayForKey:");
}

id objc_msgSend_bs_safeDictionaryForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_safeDictionaryForKey:");
}

id objc_msgSend_bs_safeNumberForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_safeNumberForKey:");
}

id objc_msgSend_bs_safeStringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_safeStringForKey:");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundleURL(void *a1, const char *a2, ...)
{
  return _[a1 bundleURL];
}

id objc_msgSend_bundleWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithURL:");
}

id objc_msgSend_canHandleOpenApplicationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canHandleOpenApplicationRequest:");
}

id objc_msgSend_canShowBadge(void *a1, const char *a2, ...)
{
  return _[a1 canShowBadge];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelAlert:");
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPreviousPerformRequestsWithTarget:selector:object:");
}

id objc_msgSend_chromeVisibleForScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chromeVisibleForScene:");
}

id objc_msgSend_chromeVisibleSetting(void *a1, const char *a2, ...)
{
  return _[a1 chromeVisibleSetting];
}

id objc_msgSend_clarityDisplayName(void *a1, const char *a2, ...)
{
  return _[a1 clarityDisplayName];
}

id objc_msgSend_clarity_clientEventDetails(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clarity_clientEventDetails");
}

id objc_msgSend_clarity_contactHandle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clarity_contactHandle");
}

id objc_msgSend_clarity_dndEventType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clarity_dndEventType");
}

id objc_msgSend_clb_applyDisplayEdgeInfoToSceneSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clb_applyDisplayEdgeInfoToSceneSettings:");
}

id objc_msgSend_clb_contextForDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clb_contextForDisplayStyle:");
}

id objc_msgSend_clb_contextForDisplayStyle_canRequestScenes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clb_contextForDisplayStyle:canRequestScenes:");
}

id objc_msgSend_clb_displayBasedSafeAreaInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clb_displayBasedSafeAreaInsets");
}

id objc_msgSend_clb_displayConfigurationForNonClarityUIApp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clb_displayConfigurationForNonClarityUIApp");
}

id objc_msgSend_clb_displayEdgeInfoForScreenType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clb_displayEdgeInfoForScreenType:");
}

id objc_msgSend_clb_displayShapeForScreenType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clb_displayShapeForScreenType:");
}

id objc_msgSend_clb_thisDeviceDisplayEdgeInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clb_thisDeviceDisplayEdgeInfo");
}

id objc_msgSend_clb_thisDeviceDisplayShape(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clb_thisDeviceDisplayShape");
}

id objc_msgSend_clearBulletins_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearBulletins:inSection:");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_clientHandle(void *a1, const char *a2, ...)
{
  return _[a1 clientHandle];
}

id objc_msgSend_clientIdentity(void *a1, const char *a2, ...)
{
  return _[a1 clientIdentity];
}

id objc_msgSend_clientProcess(void *a1, const char *a2, ...)
{
  return _[a1 clientProcess];
}

id objc_msgSend_clientSettings(void *a1, const char *a2, ...)
{
  return _[a1 clientSettings];
}

id objc_msgSend_cnContactIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 cnContactIdentifier];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_coldLevel(void *a1, const char *a2, ...)
{
  return _[a1 coldLevel];
}

id objc_msgSend_coldToken(void *a1, const char *a2, ...)
{
  return _[a1 coldToken];
}

id objc_msgSend_commonLog(void *a1, const char *a2, ...)
{
  return _[a1 commonLog];
}

id objc_msgSend_communicationContext(void *a1, const char *a2, ...)
{
  return _[a1 communicationContext];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_components_fromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_configurationWithName_sessionRole_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithName:sessionRole:");
}

id objc_msgSend_configureParameters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureParameters:");
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_connectedScenes(void *a1, const char *a2, ...)
{
  return _[a1 connectedScenes];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_contentBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 contentBackgroundColor];
}

id objc_msgSend_contentState(void *a1, const char *a2, ...)
{
  return _[a1 contentState];
}

id objc_msgSend_contentType(void *a1, const char *a2, ...)
{
  return _[a1 contentType];
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _[a1 context];
}

id objc_msgSend_contextID(void *a1, const char *a2, ...)
{
  return _[a1 contextID];
}

id objc_msgSend_contextIds(void *a1, const char *a2, ...)
{
  return _[a1 contextIds];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyWithOverrideMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithOverrideMode:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_createPresenterWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPresenterWithIdentifier:");
}

id objc_msgSend_createScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createScene:");
}

id objc_msgSend_createSceneWithRequestOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSceneWithRequestOptions:completion:");
}

id objc_msgSend_currentApplication(void *a1, const char *a2, ...)
{
  return _[a1 currentApplication];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 currentCalendar];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentMode(void *a1, const char *a2, ...)
{
  return _[a1 currentMode];
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 currentRunLoop];
}

id objc_msgSend_currentStyle(void *a1, const char *a2, ...)
{
  return _[a1 currentStyle];
}

id objc_msgSend_currentToneSoundIDForAlertType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentToneSoundIDForAlertType:");
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataAccessAttributions(void *a1, const char *a2, ...)
{
  return _[a1 dataAccessAttributions];
}

id objc_msgSend_dataStore(void *a1, const char *a2, ...)
{
  return _[a1 dataStore];
}

id objc_msgSend_dataWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:");
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithPropertyList:format:options:error:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateByAddingComponents_toDate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingComponents:toDate:options:");
}

id objc_msgSend_dateFromComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFromComponents:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_daylightSavingsTimer(void *a1, const char *a2, ...)
{
  return _[a1 daylightSavingsTimer];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultContext(void *a1, const char *a2, ...)
{
  return _[a1 defaultContext];
}

id objc_msgSend_defaultFocusPredicate(void *a1, const char *a2, ...)
{
  return _[a1 defaultFocusPredicate];
}

id objc_msgSend_defaultResponse(void *a1, const char *a2, ...)
{
  return _[a1 defaultResponse];
}

id objc_msgSend_defaultSceneIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 defaultSceneIdentifier];
}

id objc_msgSend_defaultSystemPredicate(void *a1, const char *a2, ...)
{
  return _[a1 defaultSystemPredicate];
}

id objc_msgSend_deferEventsMatchingPredicate_toTarget_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deferEventsMatchingPredicate:toTarget:withReason:");
}

id objc_msgSend_definition(void *a1, const char *a2, ...)
{
  return _[a1 definition];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_descriptionForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionForObject:");
}

id objc_msgSend_descriptorWithEventType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptorWithEventType:");
}

id objc_msgSend_descriptorWithPage_usage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptorWithPage:usage:");
}

id objc_msgSend_descriptors(void *a1, const char *a2, ...)
{
  return _[a1 descriptors];
}

id objc_msgSend_deviceClass(void *a1, const char *a2, ...)
{
  return _[a1 deviceClass];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didMoveToParentViewController:");
}

id objc_msgSend_didRecognizeLongPress(void *a1, const char *a2, ...)
{
  return _[a1 didRecognizeLongPress];
}

id objc_msgSend_didUpdateBadgeStringForApplicationInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didUpdateBadgeStringForApplicationInfo:");
}

id objc_msgSend_didUpdateIconImageForApplicationInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didUpdateIconImageForApplicationInfo:");
}

id objc_msgSend_dimDisplay(void *a1, const char *a2, ...)
{
  return _[a1 dimDisplay];
}

id objc_msgSend_disallowedBundleIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 disallowedBundleIdentifiers];
}

id objc_msgSend_dismissSiri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissSiri:");
}

id objc_msgSend_dismissSiri_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissSiri:completion:");
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_dismissWithAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissWithAnimation:");
}

id objc_msgSend_dismissWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissWithOptions:");
}

id objc_msgSend_dismissalReason(void *a1, const char *a2, ...)
{
  return _[a1 dismissalReason];
}

id objc_msgSend_dispatchDiscreteEventsForReason_withRules_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dispatchDiscreteEventsForReason:withRules:");
}

id objc_msgSend_dispatchUserNotification_flags_replyPort_auditToken_presenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dispatchUserNotification:flags:replyPort:auditToken:presenter:");
}

id objc_msgSend_displayConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 displayConfiguration];
}

id objc_msgSend_displayIdentity(void *a1, const char *a2, ...)
{
  return _[a1 displayIdentity];
}

id objc_msgSend_displayLayoutStyle(void *a1, const char *a2, ...)
{
  return _[a1 displayLayoutStyle];
}

id objc_msgSend_displayStyle(void *a1, const char *a2, ...)
{
  return _[a1 displayStyle];
}

id objc_msgSend_displayWithHardwareIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayWithHardwareIdentifier:");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_effectiveValueForSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveValueForSetting:");
}

id objc_msgSend_elementsBySceneIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 elementsBySceneIdentifier];
}

id objc_msgSend_embeddedApplicationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 embeddedApplicationIdentifier];
}

id objc_msgSend_entitlement(void *a1, const char *a2, ...)
{
  return _[a1 entitlement];
}

id objc_msgSend_entitlementValueForKey_ofClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entitlementValueForKey:ofClass:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _[a1 error];
}

id objc_msgSend_errorDescription(void *a1, const char *a2, ...)
{
  return _[a1 errorDescription];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_evaluateWithInspector_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateWithInspector:context:");
}

id objc_msgSend_eventMask(void *a1, const char *a2, ...)
{
  return _[a1 eventMask];
}

id objc_msgSend_eventWithType_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventWithType:context:");
}

id objc_msgSend_executableURL(void *a1, const char *a2, ...)
{
  return _[a1 executableURL];
}

id objc_msgSend_existingOverlayForDisplay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingOverlayForDisplay:");
}

id objc_msgSend_extensionForProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionForProtocol:");
}

id objc_msgSend_factor(void *a1, const char *a2, ...)
{
  return _[a1 factor];
}

id objc_msgSend_factoryWithDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "factoryWithDuration:");
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 fileSystemRepresentation];
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_filterCriteria(void *a1, const char *a2, ...)
{
  return _[a1 filterCriteria];
}

id objc_msgSend_finishedBoot(void *a1, const char *a2, ...)
{
  return _[a1 finishedBoot];
}

id objc_msgSend_fireDate(void *a1, const char *a2, ...)
{
  return _[a1 fireDate];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_forceBioLockout(void *a1, const char *a2, ...)
{
  return _[a1 forceBioLockout];
}

id objc_msgSend_forceKeyboardAway(void *a1, const char *a2, ...)
{
  return _[a1 forceKeyboardAway];
}

id objc_msgSend_formatDateAsLongYMDHMSZWithDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formatDateAsLongYMDHMSZWithDate:");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "functionWithName:");
}

id objc_msgSend_getActiveCategoryVolume_andName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getActiveCategoryVolume:andName:");
}

id objc_msgSend_getBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBytes:length:");
}

id objc_msgSend_getImageForImageDescriptor_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getImageForImageDescriptor:completion:");
}

id objc_msgSend_getSectionInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSectionInfoWithCompletion:");
}

id objc_msgSend_getSilentMode_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSilentMode:error:");
}

id objc_msgSend_giveResponse_toAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "giveResponse:toAlert:");
}

id objc_msgSend_handle(void *a1, const char *a2, ...)
{
  return _[a1 handle];
}

id objc_msgSend_handleActionHandlerRegistrationMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleActionHandlerRegistrationMessage:");
}

id objc_msgSend_handleEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEvent:");
}

id objc_msgSend_handleFirstUnlockIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 handleFirstUnlockIfNeeded];
}

id objc_msgSend_handleOpenApplicationRequest_withResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleOpenApplicationRequest:withResult:");
}

id objc_msgSend_handleTestURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleTestURL:");
}

id objc_msgSend_handleType(void *a1, const char *a2, ...)
{
  return _[a1 handleType];
}

id objc_msgSend_hardwareIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hardwareIdentifier];
}

id objc_msgSend_hasAlternateResponse(void *a1, const char *a2, ...)
{
  return _[a1 hasAlternateResponse];
}

id objc_msgSend_hasCriticalIcon(void *a1, const char *a2, ...)
{
  return _[a1 hasCriticalIcon];
}

id objc_msgSend_hasEntitlement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasEntitlement:");
}

id objc_msgSend_hasOtherResponse(void *a1, const char *a2, ...)
{
  return _[a1 hasOtherResponse];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_hideHUD(void *a1, const char *a2, ...)
{
  return _[a1 hideHUD];
}

id objc_msgSend_homeAffordanceOverlayAllowance(void *a1, const char *a2, ...)
{
  return _[a1 homeAffordanceOverlayAllowance];
}

id objc_msgSend_homeButtonType(void *a1, const char *a2, ...)
{
  return _[a1 homeButtonType];
}

id objc_msgSend_hotLevel(void *a1, const char *a2, ...)
{
  return _[a1 hotLevel];
}

id objc_msgSend_hotToken(void *a1, const char *a2, ...)
{
  return _[a1 hotToken];
}

id objc_msgSend_iconImageObservers(void *a1, const char *a2, ...)
{
  return _[a1 iconImageObservers];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identity(void *a1, const char *a2, ...)
{
  return _[a1 identity];
}

id objc_msgSend_identityForAngelJobLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identityForAngelJobLabel:");
}

id objc_msgSend_identityForIdentifier_workspaceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identityForIdentifier:workspaceIdentifier:");
}

id objc_msgSend_idleTimerDisabled(void *a1, const char *a2, ...)
{
  return _[a1 idleTimerDisabled];
}

id objc_msgSend_idleTimerDisabledReasons(void *a1, const char *a2, ...)
{
  return _[a1 idleTimerDisabledReasons];
}

id objc_msgSend_ignoresQuietMode(void *a1, const char *a2, ...)
{
  return _[a1 ignoresQuietMode];
}

id objc_msgSend_imageWithCGImage_scale_orientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithCGImage:scale:orientation:");
}

id objc_msgSend_imageWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithData:");
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 infoDictionary];
}

id objc_msgSend_initFromDictionary_replyPort_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFromDictionary:replyPort:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:");
}

id objc_msgSend_initWithCalloutQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCalloutQueue:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:");
}

id objc_msgSend_initWithContextID_displayUUID_identifier_policy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContextID:displayUUID:identifier:policy:");
}

id objc_msgSend_initWithDate_calendar_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDate:calendar:format:");
}

id objc_msgSend_initWithDeactivationOptions_animated_dismissalReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeactivationOptions:animated:dismissalReason:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithEntitlement_additionalCredentials_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEntitlement:additionalCredentials:");
}

id objc_msgSend_initWithExplanation_target_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExplanation:target:attributes:");
}

id objc_msgSend_initWithFireDate_interval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFireDate:interval:target:selector:userInfo:repeats:");
}

id objc_msgSend_initWithFormat_arguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:arguments:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:");
}

id objc_msgSend_initWithIdentifier_serviceBundleName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:serviceBundleName:");
}

id objc_msgSend_initWithIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentity:");
}

id objc_msgSend_initWithKey_payload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:payload:");
}

id objc_msgSend_initWithKeyOptions_valueOptions_capacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeyOptions:valueOptions:capacity:");
}

id objc_msgSend_initWithMainDisplayContext_launchDisplayContext_deviceContext_persistedSceneIdentifiers_supportAppSceneRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMainDisplayContext:launchDisplayContext:deviceContext:persistedSceneIdentifiers:supportAppSceneRequests:");
}

id objc_msgSend_initWithName_bundleIdentifier_supportsClarityUI_sceneRequestOptions_shouldDisableIdleTimer_avoidsBackButton_displayLayoutStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:bundleIdentifier:supportsClarityUI:sceneRequestOptions:shouldDisableIdleTimer:avoidsBackButton:displayLayoutStyle:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithPID_queue_deathHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPID:queue:deathHandler:");
}

id objc_msgSend_initWithPPTActivationContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPPTActivationContext:completion:");
}

id objc_msgSend_initWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:");
}

id objc_msgSend_initWithPriority_displayConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPriority:displayConfiguration:");
}

id objc_msgSend_initWithProcessIdentity_executionContextProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProcessIdentity:executionContextProvider:");
}

id objc_msgSend_initWithQueue_calloutQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:calloutQueue:");
}

id objc_msgSend_initWithRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRect:");
}

id objc_msgSend_initWithRegistrationMessageKey_actionResultMessageKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRegistrationMessageKey:actionResultMessageKey:");
}

id objc_msgSend_initWithRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:completion:");
}

id objc_msgSend_initWithRequest_displayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:displayStyle:");
}

id objc_msgSend_initWithServerHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServerHandle:");
}

id objc_msgSend_initWithServiceName_perPidService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceName:perPidService:");
}

id objc_msgSend_initWithSize_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSize:scale:");
}

id objc_msgSend_initWithSystemSoundID_behavior_vibrationPattern_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSystemSoundID:behavior:vibrationPattern:");
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:action:");
}

id objc_msgSend_initWithTestName_testOptions_applicationInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTestName:testOptions:applicationInfo:");
}

id objc_msgSend_initWithToneAlertConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithToneAlertConfiguration:");
}

id objc_msgSend_initWithTop_left_bottom_right_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTop:left:bottom:right:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:");
}

id objc_msgSend_initWithURL_workspaceOriginatingProcess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:workspaceOriginatingProcess:");
}

id objc_msgSend_initWithWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWindow:");
}

id objc_msgSend_initWithWindowScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWindowScene:");
}

id objc_msgSend_initialClientSettings(void *a1, const char *a2, ...)
{
  return _[a1 initialClientSettings];
}

id objc_msgSend_initialize(void *a1, const char *a2, ...)
{
  return _[a1 initialize];
}

id objc_msgSend_installedApplicationWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installedApplicationWithBundleIdentifier:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interfaceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 interfaceOrientation];
}

id objc_msgSend_interruptionLevel(void *a1, const char *a2, ...)
{
  return _[a1 interruptionLevel];
}

id objc_msgSend_interruptionSuppression(void *a1, const char *a2, ...)
{
  return _[a1 interruptionSuppression];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 invalidateIfNeeded];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isAllowedOnLockScreen(void *a1, const char *a2, ...)
{
  return _[a1 isAllowedOnLockScreen];
}

id objc_msgSend_isAppAvailableForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAppAvailableForBundleIdentifier:");
}

id objc_msgSend_isAppRestricted(void *a1, const char *a2, ...)
{
  return _[a1 isAppRestricted];
}

id objc_msgSend_isArcadeApp(void *a1, const char *a2, ...)
{
  return _[a1 isArcadeApp];
}

id objc_msgSend_isAutoLockDisabled(void *a1, const char *a2, ...)
{
  return _[a1 isAutoLockDisabled];
}

id objc_msgSend_isCarrierInstall(void *a1, const char *a2, ...)
{
  return _[a1 isCarrierInstall];
}

id objc_msgSend_isDeletable(void *a1, const char *a2, ...)
{
  return _[a1 isDeletable];
}

id objc_msgSend_isDisplayDim(void *a1, const char *a2, ...)
{
  return _[a1 isDisplayDim];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDate:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isForeground(void *a1, const char *a2, ...)
{
  return _[a1 isForeground];
}

id objc_msgSend_isHiddenByUser(void *a1, const char *a2, ...)
{
  return _[a1 isHiddenByUser];
}

id objc_msgSend_isHiddenByUserForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHiddenByUserForBundleIdentifier:");
}

id objc_msgSend_isInHardwareKeyboardMode(void *a1, const char *a2, ...)
{
  return _[a1 isInHardwareKeyboardMode];
}

id objc_msgSend_isInternalInstall(void *a1, const char *a2, ...)
{
  return _[a1 isInternalInstall];
}

id objc_msgSend_isLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isLoaded];
}

id objc_msgSend_isLocked(void *a1, const char *a2, ...)
{
  return _[a1 isLocked];
}

id objc_msgSend_isMainDisplay(void *a1, const char *a2, ...)
{
  return _[a1 isMainDisplay];
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return _[a1 isMainThread];
}

id objc_msgSend_isMinimized(void *a1, const char *a2, ...)
{
  return _[a1 isMinimized];
}

id objc_msgSend_isMuted(void *a1, const char *a2, ...)
{
  return _[a1 isMuted];
}

id objc_msgSend_isPasscodeSet(void *a1, const char *a2, ...)
{
  return _[a1 isPasscodeSet];
}

id objc_msgSend_isPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPlaying:");
}

id objc_msgSend_isPresented(void *a1, const char *a2, ...)
{
  return _[a1 isPresented];
}

id objc_msgSend_isRestricted(void *a1, const char *a2, ...)
{
  return _[a1 isRestricted];
}

id objc_msgSend_isRunning(void *a1, const char *a2, ...)
{
  return _[a1 isRunning];
}

id objc_msgSend_isRunningInStoreDemoMode(void *a1, const char *a2, ...)
{
  return _[a1 isRunningInStoreDemoMode];
}

id objc_msgSend_isServerRunning(void *a1, const char *a2, ...)
{
  return _[a1 isServerRunning];
}

id objc_msgSend_isShowingAdminSettings(void *a1, const char *a2, ...)
{
  return _[a1 isShowingAdminSettings];
}

id objc_msgSend_isShowingHUD(void *a1, const char *a2, ...)
{
  return _[a1 isShowingHUD];
}

id objc_msgSend_isShowingLockScreen(void *a1, const char *a2, ...)
{
  return _[a1 isShowingLockScreen];
}

id objc_msgSend_isShowingModalView(void *a1, const char *a2, ...)
{
  return _[a1 isShowingModalView];
}

id objc_msgSend_isSystemScene(void *a1, const char *a2, ...)
{
  return _[a1 isSystemScene];
}

id objc_msgSend_isSystemSleepingForServerInstance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSystemSleepingForServerInstance:");
}

id objc_msgSend_isUISubclass(void *a1, const char *a2, ...)
{
  return _[a1 isUISubclass];
}

id objc_msgSend_isUnavailable(void *a1, const char *a2, ...)
{
  return _[a1 isUnavailable];
}

id objc_msgSend_isUpdatingIcon(void *a1, const char *a2, ...)
{
  return _[a1 isUpdatingIcon];
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return _[a1 isValid];
}

id objc_msgSend_keyboardFocusTarget(void *a1, const char *a2, ...)
{
  return _[a1 keyboardFocusTarget];
}

id objc_msgSend_keyboardScene(void *a1, const char *a2, ...)
{
  return _[a1 keyboardScene];
}

id objc_msgSend_killForReason_andReport_withDescription_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "killForReason:andReport:withDescription:completion:");
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _[a1 labelColor];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_laterDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "laterDate:");
}

id objc_msgSend_launchAdvisorWithOmniscientDelegate_sceneDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchAdvisorWithOmniscientDelegate:sceneDelegate:");
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _[a1 layer];
}

id objc_msgSend_layerManager(void *a1, const char *a2, ...)
{
  return _[a1 layerManager];
}

id objc_msgSend_layerNamesByContext(void *a1, const char *a2, ...)
{
  return _[a1 layerNamesByContext];
}

id objc_msgSend_layers(void *a1, const char *a2, ...)
{
  return _[a1 layers];
}

id objc_msgSend_leftInset(void *a1, const char *a2, ...)
{
  return _[a1 leftInset];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_listener(void *a1, const char *a2, ...)
{
  return _[a1 listener];
}

id objc_msgSend_loadAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadAndReturnError:");
}

id objc_msgSend_localIdentity(void *a1, const char *a2, ...)
{
  return _[a1 localIdentity];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedInfoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 localizedInfoDictionary];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_lock(void *a1, const char *a2, ...)
{
  return _[a1 lock];
}

id objc_msgSend_lockScreenDidCompleteToken(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenDidCompleteToken];
}

id objc_msgSend_lockStateChangedBlockIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 lockStateChangedBlockIdentifier];
}

id objc_msgSend_longPressButtonForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longPressButtonForIdentifier:");
}

id objc_msgSend_mainAccessQueue(void *a1, const char *a2, ...)
{
  return _[a1 mainAccessQueue];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 mainConfiguration];
}

id objc_msgSend_mainDisplay(void *a1, const char *a2, ...)
{
  return _[a1 mainDisplay];
}

id objc_msgSend_mainDisplayLayoutPublisher(void *a1, const char *a2, ...)
{
  return _[a1 mainDisplayLayoutPublisher];
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _[a1 mainQueue];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_makeKeyAndVisible(void *a1, const char *a2, ...)
{
  return _[a1 makeKeyAndVisible];
}

id objc_msgSend_makeKeyWindow(void *a1, const char *a2, ...)
{
  return _[a1 makeKeyWindow];
}

id objc_msgSend_makeSwiftUIViewController(void *a1, const char *a2, ...)
{
  return _[a1 makeSwiftUIViewController];
}

id objc_msgSend_markUserActivationInitiationTime(void *a1, const char *a2, ...)
{
  return _[a1 markUserActivationInitiationTime];
}

id objc_msgSend_midnightFireDate(void *a1, const char *a2, ...)
{
  return _[a1 midnightFireDate];
}

id objc_msgSend_midnightTimer(void *a1, const char *a2, ...)
{
  return _[a1 midnightTimer];
}

id objc_msgSend_migrateFileProtectionsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 migrateFileProtectionsIfNeeded];
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_modifyPresentationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modifyPresentationContext:");
}

id objc_msgSend_monitorUsingMainQueue(void *a1, const char *a2, ...)
{
  return _[a1 monitorUsingMainQueue];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_navigationTitlesForClientSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationTitlesForClientSettings:");
}

id objc_msgSend_navigationTitlesSetting(void *a1, const char *a2, ...)
{
  return _[a1 navigationTitlesSetting];
}

id objc_msgSend_needsIconImageUpdate(void *a1, const char *a2, ...)
{
  return _[a1 needsIconImageUpdate];
}

id objc_msgSend_needsKeyboardForAdminScene(void *a1, const char *a2, ...)
{
  return _[a1 needsKeyboardForAdminScene];
}

id objc_msgSend_newSceneIdentityTokenForIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newSceneIdentityTokenForIdentity:");
}

id objc_msgSend_nextDaylightSavingTimeTransition(void *a1, const char *a2, ...)
{
  return _[a1 nextDaylightSavingTimeTransition];
}

id objc_msgSend_noteActiveInterfaceOrientationDidChangeToOrientation_willAnimateWithSettings_fromOrientation_screen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteActiveInterfaceOrientationDidChangeToOrientation:willAnimateWithSettings:fromOrientation:screen:");
}

id objc_msgSend_noteActiveInterfaceOrientationWillChangeToOrientation_screen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteActiveInterfaceOrientationWillChangeToOrientation:screen:");
}

id objc_msgSend_notificationsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 notificationsEnabled];
}

id objc_msgSend_notifyActionOccurredWithType_payload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyActionOccurredWithType:payload:");
}

id objc_msgSend_notifyRecipientAnyway(void *a1, const char *a2, ...)
{
  return _[a1 notifyRecipientAnyway];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_objectForInfoDictionaryKey_ofClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForInfoDictionaryKey:ofClass:");
}

id objc_msgSend_objectForInfoDictionaryKey_ofClass_valuesOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForInfoDictionaryKey:ofClass:valuesOfClass:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsPassingTest:");
}

id objc_msgSend_observeBottomBarTransitionProgressWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observeBottomBarTransitionProgressWithHandler:");
}

id objc_msgSend_observeChromeVisibleWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observeChromeVisibleWithHandler:");
}

id objc_msgSend_observeDataWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observeDataWithBlock:");
}

id objc_msgSend_observeIdleTimerDisabledWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observeIdleTimerDisabledWithBlock:");
}

id objc_msgSend_observeInterfaceOrientationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observeInterfaceOrientationWithBlock:");
}

id objc_msgSend_observeKeyboardSceneAvailability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observeKeyboardSceneAvailability:");
}

id objc_msgSend_observeNavigationTitlesWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observeNavigationTitlesWithHandler:");
}

id objc_msgSend_observeOtherSetting_withBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observeOtherSetting:withBlock:");
}

id objc_msgSend_observePreferredInterfaceOrientationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observePreferredInterfaceOrientationWithBlock:");
}

id objc_msgSend_observeSupportedInterfaceOrientationsWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observeSupportedInterfaceOrientationsWithBlock:");
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _[a1 options];
}

id objc_msgSend_orientation(void *a1, const char *a2, ...)
{
  return _[a1 orientation];
}

id objc_msgSend_otherResponse(void *a1, const char *a2, ...)
{
  return _[a1 otherResponse];
}

id objc_msgSend_otherTitleKey(void *a1, const char *a2, ...)
{
  return _[a1 otherTitleKey];
}

id objc_msgSend_overrideNonClarityApplicationBundleIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 overrideNonClarityApplicationBundleIdentifiers];
}

id objc_msgSend_payload(void *a1, const char *a2, ...)
{
  return _[a1 payload];
}

id objc_msgSend_performSelector_withObject_afterDelay_inModes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:afterDelay:inModes:");
}

id objc_msgSend_performUpdate(void *a1, const char *a2, ...)
{
  return _[a1 performUpdate];
}

id objc_msgSend_performUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performUpdate:");
}

id objc_msgSend_peripheryInsets(void *a1, const char *a2, ...)
{
  return _[a1 peripheryInsets];
}

id objc_msgSend_pid(void *a1, const char *a2, ...)
{
  return _[a1 pid];
}

id objc_msgSend_placeholder(void *a1, const char *a2, ...)
{
  return _[a1 placeholder];
}

id objc_msgSend_playSound_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playSound:completion:");
}

id objc_msgSend_playWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playWithCompletion:");
}

id objc_msgSend_playWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playWithCompletionHandler:");
}

id objc_msgSend_pointScale(void *a1, const char *a2, ...)
{
  return _[a1 pointScale];
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_pptActivationContext(void *a1, const char *a2, ...)
{
  return _[a1 pptActivationContext];
}

id objc_msgSend_pptTestURL(void *a1, const char *a2, ...)
{
  return _[a1 pptTestURL];
}

id objc_msgSend_preemptsPresentedAlert(void *a1, const char *a2, ...)
{
  return _[a1 preemptsPresentedAlert];
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:");
}

id objc_msgSend_preferredInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 preferredInterfaceOrientation];
}

id objc_msgSend_preferredLevel(void *a1, const char *a2, ...)
{
  return _[a1 preferredLevel];
}

id objc_msgSend_prepareExecutionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareExecutionContext:");
}

id objc_msgSend_prepareForActivation(void *a1, const char *a2, ...)
{
  return _[a1 prepareForActivation];
}

id objc_msgSend_prepareTransitionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareTransitionContext:");
}

id objc_msgSend_presentationConnectionListener(void *a1, const char *a2, ...)
{
  return _[a1 presentationConnectionListener];
}

id objc_msgSend_presentationView(void *a1, const char *a2, ...)
{
  return _[a1 presentationView];
}

id objc_msgSend_presentedPID(void *a1, const char *a2, ...)
{
  return _[a1 presentedPID];
}

id objc_msgSend_prewarmSiri(void *a1, const char *a2, ...)
{
  return _[a1 prewarmSiri];
}

id objc_msgSend_principalClass(void *a1, const char *a2, ...)
{
  return _[a1 principalClass];
}

id objc_msgSend_privateConfigurationForTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "privateConfigurationForTypes:");
}

id objc_msgSend_process(void *a1, const char *a2, ...)
{
  return _[a1 process];
}

id objc_msgSend_processForIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processForIdentity:");
}

id objc_msgSend_processForPID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processForPID:");
}

id objc_msgSend_processHandle(void *a1, const char *a2, ...)
{
  return _[a1 processHandle];
}

id objc_msgSend_processId(void *a1, const char *a2, ...)
{
  return _[a1 processId];
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 processIdentifier];
}

id objc_msgSend_processIdentity(void *a1, const char *a2, ...)
{
  return _[a1 processIdentity];
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_processesForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processesForBundleIdentifier:");
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_proximityDidUnoccludeAfterWake(void *a1, const char *a2, ...)
{
  return _[a1 proximityDidUnoccludeAfterWake];
}

id objc_msgSend_pushSettings(void *a1, const char *a2, ...)
{
  return _[a1 pushSettings];
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_realSafeAreaInsets(void *a1, const char *a2, ...)
{
  return _[a1 realSafeAreaInsets];
}

id objc_msgSend_registerLockStateChangedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerLockStateChangedBlock:");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeBulletinNotificationItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeBulletinNotificationItem:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeScene:");
}

id objc_msgSend_requestsSceneWhenNeeded(void *a1, const char *a2, ...)
{
  return _[a1 requestsSceneWhenNeeded];
}

id objc_msgSend_requiresNewScene(void *a1, const char *a2, ...)
{
  return _[a1 requiresNewScene];
}

id objc_msgSend_requiresPreflight(void *a1, const char *a2, ...)
{
  return _[a1 requiresPreflight];
}

id objc_msgSend_requiresPreflightForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiresPreflightForBundleIdentifier:");
}

id objc_msgSend_resetIdleTimerAndUndim_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetIdleTimerAndUndim:");
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 resignFirstResponder];
}

id objc_msgSend_resolveBehaviorForBulletin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveBehaviorForBulletin:");
}

id objc_msgSend_resolveBehaviorForClientEventDetails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveBehaviorForClientEventDetails:");
}

id objc_msgSend_resolveBehaviorForEventDetails_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveBehaviorForEventDetails:error:");
}

id objc_msgSend_restartReason(void *a1, const char *a2, ...)
{
  return _[a1 restartReason];
}

id objc_msgSend_resumeWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resumeWithError:");
}

id objc_msgSend_rightInset(void *a1, const char *a2, ...)
{
  return _[a1 rightInset];
}

id objc_msgSend_role(void *a1, const char *a2, ...)
{
  return _[a1 role];
}

id objc_msgSend_ruleForDispatchingDiscreteEventsMatchingPredicate_toTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ruleForDispatchingDiscreteEventsMatchingPredicate:toTarget:");
}

id objc_msgSend_runActivationTest_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runActivationTest:options:");
}

id objc_msgSend_safeAreaInsetsPortrait(void *a1, const char *a2, ...)
{
  return _[a1 safeAreaInsetsPortrait];
}

id objc_msgSend_safeDescription(void *a1, const char *a2, ...)
{
  return _[a1 safeDescription];
}

id objc_msgSend_safeObjectForKey_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeObjectForKey:ofType:");
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scene(void *a1, const char *a2, ...)
{
  return _[a1 scene];
}

id objc_msgSend_sceneIdentifierForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneIdentifierForBundleIdentifier:");
}

id objc_msgSend_sceneIdentityTokenForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneIdentityTokenForIdentifier:");
}

id objc_msgSend_sceneInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 sceneInterfaceOrientation];
}

id objc_msgSend_sceneManager(void *a1, const char *a2, ...)
{
  return _[a1 sceneManager];
}

id objc_msgSend_sceneManager_createSceneIfNeededForProcess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneManager:createSceneIfNeededForProcess:");
}

id objc_msgSend_sceneManager_didDeactivateSceneWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneManager:didDeactivateSceneWithID:");
}

id objc_msgSend_sceneManager_didObserveUpdatedBottomBarTransitionProgress_forSceneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneManager:didObserveUpdatedBottomBarTransitionProgress:forSceneID:");
}

id objc_msgSend_sceneManager_didObserveUpdatedChromeVisible_forSceneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneManager:didObserveUpdatedChromeVisible:forSceneID:");
}

id objc_msgSend_sceneManager_didObserveUpdatedInterfaceOrientation_forSceneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneManager:didObserveUpdatedInterfaceOrientation:forSceneID:");
}

id objc_msgSend_sceneManager_didObserveUpdatedNavigationTitles_forSceneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneManager:didObserveUpdatedNavigationTitles:forSceneID:");
}

id objc_msgSend_sceneManager_didObserveUpdatedPreferredInterfaceOrientation_forSceneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneManager:didObserveUpdatedPreferredInterfaceOrientation:forSceneID:");
}

id objc_msgSend_sceneManager_didObserveUpdatedSupportedInterfaceOrientations_forSceneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneManager:didObserveUpdatedSupportedInterfaceOrientations:forSceneID:");
}

id objc_msgSend_sceneManager_handleSceneRequestFromProcess_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneManager:handleSceneRequestFromProcess:options:completion:");
}

id objc_msgSend_scenePresentationManagers(void *a1, const char *a2, ...)
{
  return _[a1 scenePresentationManagers];
}

id objc_msgSend_scenePresentationViewController(void *a1, const char *a2, ...)
{
  return _[a1 scenePresentationViewController];
}

id objc_msgSend_sceneSessionRole(void *a1, const char *a2, ...)
{
  return _[a1 sceneSessionRole];
}

id objc_msgSend_sceneSpecificationClass(void *a1, const char *a2, ...)
{
  return _[a1 sceneSpecificationClass];
}

id objc_msgSend_sceneWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneWithIdentifier:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_sectionID(void *a1, const char *a2, ...)
{
  return _[a1 sectionID];
}

id objc_msgSend_secureModeViolations(void *a1, const char *a2, ...)
{
  return _[a1 secureModeViolations];
}

id objc_msgSend_sendActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendActions:");
}

id objc_msgSend_sendAsynchronousMessage_withIdentifier_targetAccessQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:");
}

id objc_msgSend_sender(void *a1, const char *a2, ...)
{
  return _[a1 sender];
}

id objc_msgSend_serviceForClientIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceForClientIdentifier:");
}

id objc_msgSend_session(void *a1, const char *a2, ...)
{
  return _[a1 session];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAccessibilityElementsHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityElementsHidden:");
}

id objc_msgSend_setActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActions:");
}

id objc_msgSend_setActiveCategoryVolumeTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveCategoryVolumeTo:");
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontSizeToFitWidth:");
}

id objc_msgSend_setAlertConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertConfiguration:");
}

id objc_msgSend_setAllowConcurrentLoading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowConcurrentLoading:");
}

id objc_msgSend_setAllowedPressTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedPressTypes:");
}

id objc_msgSend_setAnimationFence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimationFence:");
}

id objc_msgSend_setAnimationSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimationSettings:");
}

id objc_msgSend_setApplicationInfoClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationInfoClass:");
}

id objc_msgSend_setApplicationPlaceholderClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationPlaceholderClass:");
}

id objc_msgSend_setArguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArguments:");
}

id objc_msgSend_setArtworkSubtype_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkSubtype:");
}

id objc_msgSend_setAssociatedDisplay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssociatedDisplay:");
}

id objc_msgSend_setAttentionLostTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttentionLostTimeout:");
}

id objc_msgSend_setAutoresizesSubviews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizesSubviews:");
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizingMask:");
}

id objc_msgSend_setAutoreverses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoreverses:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBadgeStringObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeStringObservers:");
}

id objc_msgSend_setBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBounds:");
}

id objc_msgSend_setBulletinDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBulletinDelegate:");
}

id objc_msgSend_setBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleIdentifier:");
}

id objc_msgSend_setByValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByValue:");
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenter:");
}

id objc_msgSend_setClarityBoardEnabled_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClarityBoardEnabled:error:");
}

id objc_msgSend_setClearButtonMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClearButtonMode:");
}

id objc_msgSend_setClickCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClickCount:");
}

id objc_msgSend_setClientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientIdentity:");
}

id objc_msgSend_setClientInvalidationCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientInvalidationCallback:");
}

id objc_msgSend_setClientSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientSettings:");
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletion:");
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlock:");
}

id objc_msgSend_setConfiguration_shouldReset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:shouldReset:");
}

id objc_msgSend_setConfiguration_shouldReset_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:shouldReset:error:");
}

id objc_msgSend_setContactIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactIdentifier:");
}

id objc_msgSend_setCountLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCountLimit:");
}

id objc_msgSend_setDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDay:");
}

id objc_msgSend_setDaylightSavingsTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDaylightSavingsTimer:");
}

id objc_msgSend_setDeactivationReasons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeactivationReasons:");
}

id objc_msgSend_setDefaultSceneToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultSceneToken:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDelegateClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegateClass:");
}

id objc_msgSend_setDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDescriptors:");
}

id objc_msgSend_setDeviceInfoValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceInfoValue:forKey:");
}

id objc_msgSend_setDisableASLR_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisableASLR:");
}

id objc_msgSend_setDisableAssistantWhilePasscodeLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisableAssistantWhilePasscodeLocked:");
}

id objc_msgSend_setDisplay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplay:");
}

id objc_msgSend_setDisplayConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayConfiguration:");
}

id objc_msgSend_setDisplayDim_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayDim:");
}

id objc_msgSend_setDisplayEdgeInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayEdgeInfo:");
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDuration:");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setEnablesReturnKeyAutomatically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnablesReturnKeyAutomatically:");
}

id objc_msgSend_setEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnvironment:");
}

id objc_msgSend_setEventHandlerWithQueue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventHandlerWithQueue:block:");
}

id objc_msgSend_setEventMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventMask:");
}

id objc_msgSend_setExclusionArea_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExclusionArea:");
}

id objc_msgSend_setExecutionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExecutionContext:");
}

id objc_msgSend_setExternalToneFileURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExternalToneFileURL:");
}

id objc_msgSend_setExternalVibrationPattern_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExternalVibrationPattern:");
}

id objc_msgSend_setFilterCriteria_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilterCriteria:");
}

id objc_msgSend_setFinishedBoot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFinishedBoot:");
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setForTesting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForTesting:");
}

id objc_msgSend_setForeground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForeground:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setHandlerWithTarget_selector_forKey_possibleRequiredEntitlements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setHighlighted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlighted:");
}

id objc_msgSend_setHomeAffordanceOverlayAllowance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeAffordanceOverlayAllowance:");
}

id objc_msgSend_setHour_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHour:");
}

id objc_msgSend_setIconImageObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconImageObservers:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setIdleTimerDisabled_forReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdleTimerDisabled:forReason:");
}

id objc_msgSend_setInstalledApplicationFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInstalledApplicationFilter:");
}

id objc_msgSend_setInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterfaceOrientation:");
}

id objc_msgSend_setInterfaceOrientationMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterfaceOrientationMode:");
}

id objc_msgSend_setIsMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMuted:");
}

id objc_msgSend_setIsPresented_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPresented:");
}

id objc_msgSend_setIsServerRunning_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsServerRunning:");
}

id objc_msgSend_setIsUpdatingIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUpdatingIcon:");
}

id objc_msgSend_setKeyboardAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardAppearance:");
}

id objc_msgSend_setLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabel:");
}

id objc_msgSend_setLabelOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelOffset:");
}

id objc_msgSend_setLaunchIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLaunchIntent:");
}

id objc_msgSend_setLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLevel:");
}

id objc_msgSend_setLockScreenDidCompleteToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockScreenDidCompleteToken:");
}

id objc_msgSend_setLockStateChangedBlockIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockStateChangedBlockIdentifier:");
}

id objc_msgSend_setMaximumDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumDuration:");
}

id objc_msgSend_setMidnightFireDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMidnightFireDate:");
}

id objc_msgSend_setMidnightTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMidnightTimer:");
}

id objc_msgSend_setMinimized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimized:");
}

id objc_msgSend_setMinimumPressDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumPressDuration:");
}

id objc_msgSend_setMinute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinute:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNeedsAuthentication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsAuthentication:");
}

id objc_msgSend_setNeedsIconImageUpdate(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsIconImageUpdate];
}

id objc_msgSend_setNeedsIconImageUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsIconImageUpdate:");
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsLayout];
}

id objc_msgSend_setNotifyAnyway_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotifyAnyway:");
}

id objc_msgSend_setNumberOfTapsRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfTapsRequired:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setObserverFeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObserverFeed:");
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpaque:");
}

id objc_msgSend_setOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrientation:");
}

id objc_msgSend_setOverrideUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideUserInterfaceStyle:");
}

id objc_msgSend_setPeripheryInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeripheryInsets:");
}

id objc_msgSend_setPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPid:");
}

id objc_msgSend_setPresentationConnectionListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentationConnectionListener:");
}

id objc_msgSend_setPreventIdleSleep_forReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreventIdleSleep:forReason:");
}

id objc_msgSend_setRecognizesOnPressPhaseBegan_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecognizesOnPressPhaseBegan:");
}

id objc_msgSend_setRepeatCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRepeatCount:");
}

id objc_msgSend_setRestartReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRestartReason:");
}

id objc_msgSend_setReturnKeyType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReturnKeyType:");
}

id objc_msgSend_setRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRootViewController:");
}

id objc_msgSend_setSafeAreaInsetsPortrait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSafeAreaInsetsPortrait:");
}

id objc_msgSend_setScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScene:");
}

id objc_msgSend_setSceneClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSceneClass:");
}

id objc_msgSend_setScenePresentationViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScenePresentationViewController:");
}

id objc_msgSend_setSecond_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecond:");
}

id objc_msgSend_setSecureTextEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecureTextEntry:");
}

id objc_msgSend_setSender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSender:");
}

id objc_msgSend_setSenderDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSenderDescriptors:");
}

id objc_msgSend_setServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServer:");
}

id objc_msgSend_setSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSettings:");
}

id objc_msgSend_setShouldForceShowingLockScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldForceShowingLockScreen:");
}

id objc_msgSend_setShouldRepeat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldRepeat:");
}

id objc_msgSend_setShouldSkipCheckingDataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldSkipCheckingDataStore:");
}

id objc_msgSend_setShouldSleepForLock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldSleepForLock:");
}

id objc_msgSend_setSignalConnectionListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignalConnectionListener:");
}

id objc_msgSend_setSilentMode_untilTime_reason_clientType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSilentMode:untilTime:reason:clientType:");
}

id objc_msgSend_setSilentModeFeedbackGenerator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSilentModeFeedbackGenerator:");
}

id objc_msgSend_setSilentModeHUDPresenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSilentModeHUDPresenter:");
}

id objc_msgSend_setSiriButtonSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriButtonSource:");
}

id objc_msgSend_setSiriPresentationControllerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriPresentationControllerDelegate:");
}

id objc_msgSend_setSoundBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSoundBehavior:");
}

id objc_msgSend_setSoundType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSoundType:");
}

id objc_msgSend_setSpecification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpecification:");
}

id objc_msgSend_setStandardErrorURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStandardErrorURL:");
}

id objc_msgSend_setStandardOutputURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStandardOutputURL:");
}

id objc_msgSend_setStatusBarDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusBarDisabled:");
}

id objc_msgSend_setStatusBarStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusBarStyle:");
}

id objc_msgSend_setSystemIdleSleepDisabled_forReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemIdleSleepDisabled:forReason:");
}

id objc_msgSend_setSystemScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemScene:");
}

id objc_msgSend_setSystemSoundID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemSoundID:");
}

id objc_msgSend_setTapToWakeTouchStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTapToWakeTouchStream:");
}

id objc_msgSend_setTerminationWatcher_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTerminationWatcher:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setThreadIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThreadIdentifier:");
}

id objc_msgSend_setTimingFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimingFunction:");
}

id objc_msgSend_setToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToken:");
}

id objc_msgSend_setToneIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToneIdentifier:");
}

id objc_msgSend_setTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTopic:");
}

id objc_msgSend_setTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransform:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setUIApplicationElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUIApplicationElement:");
}

id objc_msgSend_setUnderLock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnderLock:");
}

id objc_msgSend_setUpdateHighResolutionAppIconsRetryInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdateHighResolutionAppIconsRetryInterval:");
}

id objc_msgSend_setUrgency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrgency:");
}

id objc_msgSend_setUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInterfaceStyle:");
}

id objc_msgSend_setUserLaunchEventTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserLaunchEventTime:");
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:");
}

id objc_msgSend_setVibrationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVibrationIdentifier:");
}

id objc_msgSend_setVibrationPattern_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVibrationPattern:");
}

id objc_msgSend_setVolumeTo_forCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeTo:forCategory:");
}

id objc_msgSend_setWaitForDebugger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitForDebugger:");
}

id objc_msgSend_setWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWindow:");
}

id objc_msgSend_setWindowLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWindowLevel:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_settings(void *a1, const char *a2, ...)
{
  return _[a1 settings];
}

id objc_msgSend_settingsWithDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsWithDuration:");
}

id objc_msgSend_settingsWithDuration_timingFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsWithDuration:timingFunction:");
}

id objc_msgSend_setup(void *a1, const char *a2, ...)
{
  return _[a1 setup];
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _[a1 shared];
}

id objc_msgSend_sharedAVSystemController(void *a1, const char *a2, ...)
{
  return _[a1 sharedAVSystemController];
}

id objc_msgSend_sharedApplicationLibrary(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplicationLibrary];
}

id objc_msgSend_sharedArbiterManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedArbiterManager];
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnection];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedInstanceIfExists(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstanceIfExists];
}

id objc_msgSend_sharedPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedPreferences];
}

id objc_msgSend_sharedPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 sharedPresentationController];
}

id objc_msgSend_sharedToneManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedToneManager];
}

id objc_msgSend_shouldAddInProcessKeyboardSceneToRootWindow(void *a1, const char *a2, ...)
{
  return _[a1 shouldAddInProcessKeyboardSceneToRootWindow];
}

id objc_msgSend_shouldDisableIdleTimer(void *a1, const char *a2, ...)
{
  return _[a1 shouldDisableIdleTimer];
}

id objc_msgSend_shouldForceShowingLockScreen(void *a1, const char *a2, ...)
{
  return _[a1 shouldForceShowingLockScreen];
}

id objc_msgSend_shouldOpenAppWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldOpenAppWithBundleIdentifier:");
}

id objc_msgSend_shouldPresentWithinSafeArea(void *a1, const char *a2, ...)
{
  return _[a1 shouldPresentWithinSafeArea];
}

id objc_msgSend_shouldShield(void *a1, const char *a2, ...)
{
  return _[a1 shouldShield];
}

id objc_msgSend_shouldShowKeyboardWithinAppScene(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowKeyboardWithinAppScene];
}

id objc_msgSend_shouldSkipCheckingDataStore(void *a1, const char *a2, ...)
{
  return _[a1 shouldSkipCheckingDataStore];
}

id objc_msgSend_shouldSleepForLock(void *a1, const char *a2, ...)
{
  return _[a1 shouldSleepForLock];
}

id objc_msgSend_showAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAlert:");
}

id objc_msgSend_showHUDInWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHUDInWindow:");
}

id objc_msgSend_showNextAlert(void *a1, const char *a2, ...)
{
  return _[a1 showNextAlert];
}

id objc_msgSend_showSilentModeHUDInPresenter_isMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSilentModeHUDInPresenter:isMuted:");
}

id objc_msgSend_signalConnectionListener(void *a1, const char *a2, ...)
{
  return _[a1 signalConnectionListener];
}

id objc_msgSend_silentModeFeedbackGenerator(void *a1, const char *a2, ...)
{
  return _[a1 silentModeFeedbackGenerator];
}

id objc_msgSend_silentModeHUDPresenter(void *a1, const char *a2, ...)
{
  return _[a1 silentModeHUDPresenter];
}

id objc_msgSend_silentModeToggleEnabled(void *a1, const char *a2, ...)
{
  return _[a1 silentModeToggleEnabled];
}

id objc_msgSend_siriButtonSource(void *a1, const char *a2, ...)
{
  return _[a1 siriButtonSource];
}

id objc_msgSend_siriPresentation_isEnabledDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:isEnabledDidChange:");
}

id objc_msgSend_siriPresentation_requestsDismissalWithOptions_withHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:requestsDismissalWithOptions:withHandler:");
}

id objc_msgSend_siriPresentation_requestsPresentationWithOptions_withHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:requestsPresentationWithOptions:withHandler:");
}

id objc_msgSend_siriPresentation_requestsPunchout_withHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:requestsPunchout:withHandler:");
}

id objc_msgSend_sound(void *a1, const char *a2, ...)
{
  return _[a1 sound];
}

id objc_msgSend_soundAlertTopic(void *a1, const char *a2, ...)
{
  return _[a1 soundAlertTopic];
}

id objc_msgSend_soundAlertType(void *a1, const char *a2, ...)
{
  return _[a1 soundAlertType];
}

id objc_msgSend_soundBehavior(void *a1, const char *a2, ...)
{
  return _[a1 soundBehavior];
}

id objc_msgSend_soundID(void *a1, const char *a2, ...)
{
  return _[a1 soundID];
}

id objc_msgSend_soundIDBehavior(void *a1, const char *a2, ...)
{
  return _[a1 soundIDBehavior];
}

id objc_msgSend_soundPath(void *a1, const char *a2, ...)
{
  return _[a1 soundPath];
}

id objc_msgSend_soundRepeatDuration(void *a1, const char *a2, ...)
{
  return _[a1 soundRepeatDuration];
}

id objc_msgSend_soundType(void *a1, const char *a2, ...)
{
  return _[a1 soundType];
}

id objc_msgSend_specification(void *a1, const char *a2, ...)
{
  return _[a1 specification];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startDecreasingVolume(void *a1, const char *a2, ...)
{
  return _[a1 startDecreasingVolume];
}

id objc_msgSend_startIncreasingVolume(void *a1, const char *a2, ...)
{
  return _[a1 startIncreasingVolume];
}

id objc_msgSend_startServerWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startServerWithError:");
}

id objc_msgSend_startupInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 startupInterfaceOrientation];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stepAmount(void *a1, const char *a2, ...)
{
  return _[a1 stepAmount];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _[a1 stop];
}

id objc_msgSend_stopSound_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSound:");
}

id objc_msgSend_stopVolumeUpdates(void *a1, const char *a2, ...)
{
  return _[a1 stopVolumeUpdates];
}

id objc_msgSend_storeForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeForApplication:");
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByTrimmingCharactersInSet:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_sunLevel(void *a1, const char *a2, ...)
{
  return _[a1 sunLevel];
}

id objc_msgSend_sunToken(void *a1, const char *a2, ...)
{
  return _[a1 sunToken];
}

id objc_msgSend_supportedInterfaceOrientations(void *a1, const char *a2, ...)
{
  return _[a1 supportedInterfaceOrientations];
}

id objc_msgSend_supportsClarityUI(void *a1, const char *a2, ...)
{
  return _[a1 supportsClarityUI];
}

id objc_msgSend_suspendWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suspendWithError:");
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBackgroundColor];
}

id objc_msgSend_systemCompletion(void *a1, const char *a2, ...)
{
  return _[a1 systemCompletion];
}

id objc_msgSend_systemFillColor(void *a1, const char *a2, ...)
{
  return _[a1 systemFillColor];
}

id objc_msgSend_systemInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 systemInterfaceOrientation];
}

id objc_msgSend_systemRequest(void *a1, const char *a2, ...)
{
  return _[a1 systemRequest];
}

id objc_msgSend_systemService_displayStyleForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemService:displayStyleForBundleIdentifier:");
}

id objc_msgSend_systemService_lastUsedDisplayStyleForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemService:lastUsedDisplayStyleForBundleIdentifier:");
}

id objc_msgSend_systemServiceDescription(void *a1, const char *a2, ...)
{
  return _[a1 systemServiceDescription];
}

id objc_msgSend_systemSoundID(void *a1, const char *a2, ...)
{
  return _[a1 systemSoundID];
}

id objc_msgSend_systemTarget(void *a1, const char *a2, ...)
{
  return _[a1 systemTarget];
}

id objc_msgSend_systemTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 systemTimeZone];
}

id objc_msgSend_tapToWakeGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 tapToWakeGestureRecognizer];
}

id objc_msgSend_tapToWakeSupported(void *a1, const char *a2, ...)
{
  return _[a1 tapToWakeSupported];
}

id objc_msgSend_tapToWakeTouchStream(void *a1, const char *a2, ...)
{
  return _[a1 tapToWakeTouchStream];
}

id objc_msgSend_tapToWakeWindow(void *a1, const char *a2, ...)
{
  return _[a1 tapToWakeWindow];
}

id objc_msgSend_targetWithPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetWithPid:");
}

id objc_msgSend_tearDownSceneIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 tearDownSceneIfNeeded];
}

id objc_msgSend_terminationWatcher(void *a1, const char *a2, ...)
{
  return _[a1 terminationWatcher];
}

id objc_msgSend_testName(void *a1, const char *a2, ...)
{
  return _[a1 testName];
}

id objc_msgSend_testOptions(void *a1, const char *a2, ...)
{
  return _[a1 testOptions];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textFieldValues(void *a1, const char *a2, ...)
{
  return _[a1 textFieldValues];
}

id objc_msgSend_textInputView(void *a1, const char *a2, ...)
{
  return _[a1 textInputView];
}

id objc_msgSend_threadID(void *a1, const char *a2, ...)
{
  return _[a1 threadID];
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _[a1 token];
}

id objc_msgSend_tokenForIdentifierOfCAContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tokenForIdentifierOfCAContext:");
}

id objc_msgSend_tokenFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tokenFromDictionary:");
}

id objc_msgSend_tokenFromMachMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tokenFromMachMessage:");
}

id objc_msgSend_topInset(void *a1, const char *a2, ...)
{
  return _[a1 topInset];
}

id objc_msgSend_transactionAssertionWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transactionAssertionWithReason:");
}

id objc_msgSend_transform(void *a1, const char *a2, ...)
{
  return _[a1 transform];
}

id objc_msgSend_transitionContext(void *a1, const char *a2, ...)
{
  return _[a1 transitionContext];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_uiPresentationManager(void *a1, const char *a2, ...)
{
  return _[a1 uiPresentationManager];
}

id objc_msgSend_uiSettings(void *a1, const char *a2, ...)
{
  return _[a1 uiSettings];
}

id objc_msgSend_underLock(void *a1, const char *a2, ...)
{
  return _[a1 underLock];
}

id objc_msgSend_undimDisplay(void *a1, const char *a2, ...)
{
  return _[a1 undimDisplay];
}

id objc_msgSend_unionSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionSet:");
}

id objc_msgSend_unlockDeviceForServerInstance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlockDeviceForServerInstance:");
}

id objc_msgSend_unlockScreenTypeWithOutSimplePasscodeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlockScreenTypeWithOutSimplePasscodeType:");
}

id objc_msgSend_unlockWithPasscode_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlockWithPasscode:error:");
}

id objc_msgSend_unregisterLockStateChangedBlockWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterLockStateChangedBlockWithIdentifier:");
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntValue];
}

id objc_msgSend_updateClientSettingsWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateClientSettingsWithBlock:");
}

id objc_msgSend_updateDeferringRulesForScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDeferringRulesForScene:");
}

id objc_msgSend_updateHighResolutionAppIconsRetryInterval(void *a1, const char *a2, ...)
{
  return _[a1 updateHighResolutionAppIconsRetryInterval];
}

id objc_msgSend_updateSettingsWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSettingsWithBlock:");
}

id objc_msgSend_updateUISettingsWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUISettingsWithBlock:");
}

id objc_msgSend_updateUISettingsWithTransitionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUISettingsWithTransitionBlock:");
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _[a1 url];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceIdiom];
}

id objc_msgSend_userLaunchEventTime(void *a1, const char *a2, ...)
{
  return _[a1 userLaunchEventTime];
}

id objc_msgSend_usesInputSystemUI(void *a1, const char *a2, ...)
{
  return _[a1 usesInputSystemUI];
}

id objc_msgSend_verifyRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyRequest:completionHandler:");
}

id objc_msgSend_vibrationPattern(void *a1, const char *a2, ...)
{
  return _[a1 vibrationPattern];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_viewController(void *a1, const char *a2, ...)
{
  return _[a1 viewController];
}

id objc_msgSend_volume(void *a1, const char *a2, ...)
{
  return _[a1 volume];
}

id objc_msgSend_volumeButtonsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 volumeButtonsEnabled];
}

id objc_msgSend_wakeUpDeviceIfNecessaryForServerInstance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wakeUpDeviceIfNecessaryForServerInstance:");
}

id objc_msgSend_wantsFullScreenInClarityUI(void *a1, const char *a2, ...)
{
  return _[a1 wantsFullScreenInClarityUI];
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceCharacterSet];
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}

id objc_msgSend_windowForScenePresentationManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowForScenePresentationManager:");
}

id objc_msgSend_windowForSystemGesturesForDisplayWithIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowForSystemGesturesForDisplayWithIdentity:");
}

id objc_msgSend_windowRotationDuration(void *a1, const char *a2, ...)
{
  return _[a1 windowRotationDuration];
}

id objc_msgSend_workspace(void *a1, const char *a2, ...)
{
  return _[a1 workspace];
}

id objc_msgSend_workspaceOriginatingProcess(void *a1, const char *a2, ...)
{
  return _[a1 workspaceOriginatingProcess];
}