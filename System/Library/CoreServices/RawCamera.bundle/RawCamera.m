uint64_t sub_1DDA15750(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  __int16 v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int v19;
  unsigned __int16 v20;
  uint64_t v21;
  uint64_t v22;

  if (a2 < 0xA) {
    return 0;
  }
  v21 = v3;
  v22 = v4;
  v20 = 42;
  result = sub_1DDA57F94(a1, a2, &v20);
  if (result)
  {
    v9 = *a1;
    v10 = *((unsigned int *)a1 + 1);
    if (v9 == 77)
    {
      v11 = bswap32(v10);
      if (a2 - 2 > v11)
      {
        v12 = &a1[v11];
        v13 = &a1[v11 + 1];
        v14 = v12;
        goto LABEL_8;
      }
    }
    else if (a2 - 2 > v10)
    {
      v13 = &a1[v10];
      v12 = v13 + 1;
      v14 = v13;
LABEL_8:
      v15 = *v13 | (*v12 << 8);
      v16 = (unint64_t)&a1[a2];
      if (v15) {
        v17 = (unint64_t)(v14 + 4) > v16;
      }
      else {
        v17 = 1;
      }
      if (!v17)
      {
        v18 = (unint64_t)(v14 + 16);
        while (1)
        {
          if (v9 == 77)
          {
            if (*(unsigned __int8 *)(v18 - 14) == 198)
            {
              v19 = *(unsigned __int8 *)(v18 - 13);
              goto LABEL_18;
            }
          }
          else if (*(unsigned __int8 *)(v18 - 13) == 198)
          {
            v19 = *(unsigned __int8 *)(v18 - 14);
LABEL_18:
            if (v19 == 18) {
              return 1;
            }
          }
          if (--v15)
          {
            v17 = v18 > v16;
            v18 += 12;
            if (!v17) {
              continue;
            }
          }
          break;
        }
      }
      if (!v15) {
        return 0;
      }
    }
    if (sub_1DDA844D0(@"com.adobe.raw-image", a3)) {
      return 1;
    }
    else {
      return sub_1DDA844D0(@"com.dxo.raw-image", a3);
    }
  }
  return result;
}

uint64_t sub_1DDA158AC(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  if (sub_1DDA844D0(@"com.leafamerica.raw-image", a3)) {
    return 1;
  }
  if (a2 < 0xA) {
    return 0;
  }
  unsigned __int16 v17 = 42;
  uint64_t result = sub_1DDA57F94(a1, a2, &v17);
  if (result)
  {
    int v6 = *a1;
    signed int v7 = v6 == 77 ? bswap32(*((_DWORD *)a1 + 1)) : *((_DWORD *)a1 + 1);
    uint64_t result = 0;
    if ((v7 & 0x80000000) == 0 && a2 - 1 > v7)
    {
      BOOL v8 = v6 == 77;
      if (v6 == 77) {
        uint64_t v9 = v7;
      }
      else {
        uint64_t v9 = v7 + 1;
      }
      __int16 v10 = a1[v9];
      if (v8) {
        uint64_t v11 = v7 + 1;
      }
      else {
        uint64_t v11 = v7;
      }
      LOWORD(v12) = a1[v11] | (unsigned __int16)(v10 << 8);
      unint64_t v13 = v7 + 2;
      if (v8) {
        v14 = a1 + 1;
      }
      else {
        v14 = a1;
      }
      if (v8) {
        v15 = a1;
      }
      else {
        v15 = a1 + 1;
      }
      do
      {
        unsigned int v12 = (unsigned __int16)v12 + 0xFFFF;
        if (v13 < a2 - 1) {
          uint64_t result = HIWORD(v12);
        }
        else {
          uint64_t result = 0;
        }
        if (result != 1) {
          break;
        }
        int v16 = v14[v13] | (v15[v13] << 8);
        v13 += 12;
      }
      while (v16 != 34310);
    }
  }
  return result;
}

uint64_t sub_1DDA159B0(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  unsigned __int16 v5 = 42;
  uint64_t result = sub_1DDA57F94(a1, a2, &v5);
  if (result) {
    return sub_1DDA844D0(@"com.hasselblad.fff-raw-image", a3);
  }
  return result;
}

BOOL sub_1DDA159FC(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  unint64_t v52 = a2;
  LOWORD(v53) = 42;
  if (!sub_1DDA57F94(a1, a2, (unsigned __int16 *)&v53)) {
    return 0;
  }
  sub_1DDA18488(&v51, &v52);
  if (v51 >= 10)
  {
    int v5 = *((_DWORD *)a1 + 1);
    if (v5 == 0x8000000 || v5 == 8)
    {
      int v6 = *a1;
      unsigned int v7 = *((unsigned __int16 *)a1 + 4);
      unsigned int v8 = bswap32(v7) >> 16;
      if (v6 == 77) {
        LOWORD(v7) = v8;
      }
      int v49 = 10;
      int v50 = (unsigned __int16)v7;
      int v53 = v51;
      int v9 = *sub_1DDA26264(&v53, &v49);
      int v48 = 12;
      int v53 = v9;
      __int16 v10 = sub_1DDAA4F2C(&v53, &v48);
      if (*v10 < v50)
      {
        int v49 = 10;
        int v53 = v51;
        int v11 = *sub_1DDA26264(&v53, &v49);
        int v48 = 12;
        int v53 = v11;
        int v50 = *sub_1DDAA4F2C(&v53, &v48);
      }
      v43 = a3;
      char v12 = 0;
      BOOL v13 = 0;
      int v44 = 0;
      char v14 = 0;
      v15 = (unsigned int *)(a1 + 10);
      while ((int)sub_1DDAA3C80(&v50) > 0)
      {
        unsigned int v16 = *v15;
        unsigned int v17 = bswap32(*v15);
        if (v6 == 77) {
          unsigned int v18 = v17;
        }
        else {
          unsigned int v18 = *v15;
        }
        unsigned int v19 = HIWORD(v17);
        if (v6 != 77) {
          LOWORD(v19) = *v15;
        }
        if (v18 == 116242) {
          char v12 = 1;
        }
        if ((unsigned __int16)v19 == 50721) {
          char v14 = 1;
        }
        if (v18 == 262474)
        {
          unsigned int v20 = v15[2];
          unsigned int v21 = bswap32(v20);
          if (v6 == 77) {
            unsigned int v20 = v21;
          }
          int v53 = v20;
          sub_1DDA18410(&v49, &v53);
          int v48 = 2;
          int v53 = v49;
          v22 = sub_1DDA1A378(&v53, &v48);
          if (v51 >= *v22)
          {
            uint64_t v32 = v49;
            unsigned int v33 = *(unsigned __int16 *)&a1[v49];
            unsigned int v34 = bswap32(v33) >> 16;
            if (v6 == 77) {
              LOWORD(v33) = v34;
            }
            int v47 = 2;
            int v48 = (unsigned __int16)v33;
            int v53 = v49;
            int v35 = *sub_1DDA1A378(&v53, &v47);
            int v45 = 12;
            int v53 = v48;
            int v46 = *sub_1DDAA4FA8(&v53, &v45);
            int v53 = v35;
            v36 = sub_1DDA1A378(&v53, &v46);
            if (v51 >= *v36 && !v13)
            {
              v37 = (unsigned int *)&a1[v32 + 10];
              do
              {
                if ((int)sub_1DDAA3C80(&v48) < 1) {
                  break;
                }
                unsigned int v38 = *(v37 - 2);
                unsigned int v39 = bswap32(v38);
                if (v6 == 77) {
                  unsigned int v38 = v39;
                }
                if (v38 == 196870)
                {
                  unsigned int v40 = *v37;
                  unsigned int v41 = bswap32(*v37);
                  if (v6 == 77) {
                    unsigned int v40 = v41;
                  }
                  BOOL v13 = v40 == 32803;
                }
                v37 += 3;
              }
              while (!v13);
            }
          }
          unsigned int v16 = *v15;
          unsigned int v17 = bswap32(*v15);
        }
        if (v6 == 77) {
          unsigned int v16 = v17;
        }
        if (v16 == 131343)
        {
          unsigned int v23 = v15[1];
          unsigned int v24 = bswap32(v23);
          if (v6 == 77) {
            unsigned int v23 = v24;
          }
          int v53 = v23;
          sub_1DDA18410(&v49, &v53);
          unsigned int v25 = v15[2];
          unsigned int v26 = bswap32(v25);
          if (v6 == 77) {
            unsigned int v25 = v26;
          }
          int v53 = v25;
          sub_1DDA18410(&v48, &v53);
          if (v49 >= 5)
          {
            int v53 = v48;
            v27 = sub_1DDA1A378(&v53, &v49);
            if (v51 >= *v27)
            {
              int v28 = sub_1DDA456E8((unsigned int *)&v48);
              unsigned int v29 = sub_1DDA456E8((unsigned int *)&v49);
              v30 = strnstr((const char *)&a1[v28], "Hasselblad", v29);
              int v31 = v44;
              if (v30) {
                int v31 = 1;
              }
              int v44 = v31;
            }
          }
        }
        v15 += 3;
      }
      a3 = v43;
      if ((v44 & 1) != 0 && (v14 & 1) != 0 && (v12 & 1) == 0 && v13) {
        return 1;
      }
    }
  }
  return (sub_1DDA844D0(@"com.hasselblad.3fr-raw-image", a3) & 1) != 0;
}

uint64_t sub_1DDA15E30(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  unsigned __int16 v5 = 42;
  uint64_t result = sub_1DDA57F94(a1, a2, &v5);
  if (result) {
    return sub_1DDA844D0(@"com.pentax.raw-image", a3);
  }
  return result;
}

uint64_t sub_1DDA15E7C(unsigned char *a1, unint64_t a2, void *a3)
{
  if (a2 >= 4 && *a1 == 73 && a1[1] == 73 && a1[2] == 42 && !a1[3]) {
    return sub_1DDA844D0(@"com.sony.sr2-raw-image", a3);
  }
  else {
    return 0;
  }
}

BOOL sub_1DDA15EC8(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  unsigned __int16 v5 = 42;
  return sub_1DDA57F94(a1, a2, &v5)
      && ((sub_1DDA844D0(@"com.sony.arw-raw-image", a3) & 1) != 0
       || (sub_1DDA844D0(@"com.sony.axr-raw-image", a3) & 1) != 0);
}

uint64_t sub_1DDA15F38(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  unsigned __int16 v5 = 42;
  uint64_t result = sub_1DDA57F94(a1, a2, &v5);
  if (result) {
    return sub_1DDA844D0(@"com.epson.raw-image", a3);
  }
  return result;
}

uint64_t sub_1DDA15F84(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  unsigned __int16 v5 = 42;
  uint64_t result = sub_1DDA57F94(a1, a2, &v5);
  if (result) {
    return sub_1DDA844D0(@"com.kodak.raw-image", a3);
  }
  return result;
}

char *sub_1DDA15FD0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  *(_DWORD *)(a1 + 224) = a2;
  *(_DWORD *)(a1 + 228) = a3;
  unsigned int v7 = (char *)(a1 + 232);
  if (v7 != (char *)a4) {
    sub_1DDA17E28(v7, *(char **)a4, *(void *)(a4 + 8), (uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 2);
  }
  uint64_t result = (char *)(a1 + 256);
  if (a1 + 256 != a5)
  {
    int v9 = *(char **)a5;
    uint64_t v10 = *(void *)(a5 + 8);
    unint64_t v11 = (v10 - *(void *)a5) >> 2;
    return sub_1DDA17E28(result, v9, v10, v11);
  }
  return result;
}

uint64_t sub_1DDA16048(uint64_t result, char a2)
{
  *(unsigned char *)(result + 393520) = a2;
  return result;
}

uint64_t sub_1DDA16058(_DWORD *a1)
{
  int v1 = a1[17];
  if (((a1[70] + 2 * v1) & 0xFLL) != 0) {
    return (2 * (a1[15] + 2 * v1) + 31) & 0x3FFFFFFE0;
  }
  else {
    return 2 * (a1[70] + 2 * v1);
  }
}

uint64_t sub_1DDA16090(uint64_t a1)
{
  v2 = (dispatch_once_t *)(a1 + 393512);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1DDA16124;
  block[3] = &unk_1E6D04A58;
  block[4] = a1;
  if (*v2 != -1) {
    dispatch_once(v2, block);
  }
  return a1 + 288;
}

void sub_1DDA16124(uint64_t a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  int v1 = *(void **)(a1 + 32);
  v2 = v1 + 49188;
  uint64_t v4 = v1[24];
  uint64_t v3 = v1[25];
  uint64_t v5 = v3 - v4;
  if (v3 == v4 || (unint64_t)v5 > 0x20001)
  {
    uint64_t v8 = v1[49191];
    uint64_t v7 = v1[49192];
    if (v7 - v8 == 48)
    {
      for (_WORD *v2 = 3; v8 != v7; v8 += 16)
      {
        int v9 = *(uint64_t **)v8;
        if (*(void *)v8
          && (int v9 = (uint64_t *)__dynamic_cast(v9, (const struct __class_type_info *)&unk_1F395A728, (const struct __class_type_info *)&unk_1F398C238, 0)) != 0)
        {
          uint64_t v10 = *(std::__shared_weak_count **)(v8 + 8);
          if (v10) {
            atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
          }
        }
        else
        {
          uint64_t v10 = 0;
        }
        uint64_t v11 = *((unsigned int *)v9 + 7);
        if (v11 > 2)
        {
          v22 = sub_1DDBBA998();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 67109376;
            *(_DWORD *)&buf[4] = v11;
            LOWORD(v31) = 2048;
            *(void *)((char *)&v31 + 2) = 3;
            _os_log_impl(&dword_1DDA14000, v22, OS_LOG_TYPE_INFO, "Plane %d will be ignored. Only expected up to %zu planes\n", buf, 0x12u);
          }
        }
        else
        {
          char v12 = (const void *)v9[6];
          uint64_t v13 = v9[7];
          unint64_t v14 = (v13 - (uint64_t)v12) >> 3;
          *(void *)buf = 0;
          long long v31 = 0uLL;
          sub_1DDA1808C(buf, v12, v13, v14);
          uint64_t v15 = 0;
          unint64_t v16 = v14 - 1;
          unsigned int v17 = *(double **)buf;
          uint64_t v18 = v11 << 16;
          do
          {
            uint64_t v19 = 0;
            double v20 = 0.0;
            do
            {
              double v21 = v17[v19];
              double v20 = v20 + v21 * pow((float)((float)v15 / 65535.0), (double)v19++);
            }
            while (v16 >= v19);
            *((_WORD *)v1 + v15 + v18 + 144) = (int)(v20 * 65535.0);
            ++v15;
          }
          while (v15 != 0x10000);
          *(void *)&long long v31 = v17;
          operator delete(v17);
        }
        if (v10) {
          sub_1DDA18310(v10);
        }
      }
    }
    else
    {
      uint64_t v27 = 0;
      _WORD *v2 = 1;
      int16x8_t v28 = (int16x8_t)xmmword_1DDBF8D50;
      v29.i64[0] = 0x8000800080008;
      v29.i64[1] = 0x8000800080008;
      do
      {
        *(int16x8_t *)&v1[v27 + 36] = v28;
        int16x8_t v28 = vaddq_s16(v28, v29);
        v27 += 2;
      }
      while (v27 != 0x4000);
    }
  }
  else
  {
    unint64_t v23 = 0;
    unint64_t v24 = v5 >> 1;
    unsigned int v25 = -1;
    do
    {
      *((_WORD *)v1 + v23 + 144) = *(_WORD *)(v4 + 2 * v23);
      unint64_t v23 = v25 + 2;
      ++v25;
    }
    while (v24 > v23);
    if (!((v25 + 1) >> 16))
    {
      __int16 v26 = *((_WORD *)v1 + v25 + 144);
      do
        *((_WORD *)v1 + v23++ + 144) = v26;
      while (v23 != 0x10000);
    }
    _WORD *v2 = 1;
  }
}

void sub_1DDA1641C(_Unwind_Exception *exception_object)
{
}

BOOL sub_1DDA16440(uint64_t a1)
{
  int v1 = sub_1DDA1658C(a1, **(_DWORD **)(a1 + 232), **(_DWORD **)(a1 + 256));
  JxlDecoderCreate();
  JxlDecoderSubscribeEvents();
  if (JxlDecoderSetInput()
    || JxlDecoderProcessInput() != 64
    || JxlDecoderGetBasicInfo()
    || JxlDecoderProcessInput() != 256
    || (int ColorAsEncodedProfile = JxlDecoderGetColorAsEncodedProfile(),
        BOOL v3 = ColorAsEncodedProfile == 0,
        !ColorAsEncodedProfile)
    && JxlDecoderSetPreferredColorProfile())
  {
    BOOL v3 = 0;
  }
  JxlDecoderDestroy();
  free(v1);
  return v3;
}

void *sub_1DDA1658C(uint64_t a1, int a2, unsigned int a3)
{
  int v9 = a2;
  uint64_t v5 = malloc_type_malloc(a3 + 64, 0xA63E760BuLL);
  uint64_t v6 = *(void *)(a1 + 24);
  sub_1DDA18410(&v8, &v9);
  (*(void (**)(uint64_t, int *, void))(*(void *)v6 + 40))(v6, &v8, 0);
  (*(void (**)(void, void *, void))(**(void **)(a1 + 24) + 32))(*(void *)(a1 + 24), v5, a3);
  return v5;
}

void sub_1DDA16654(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    free(v1);
  }
  __cxa_end_catch();
  JUMPOUT(0x1DDA1663CLL);
}

void sub_1DDA16678(void *a1)
{
}

void sub_1DDA1668C(os_signpost_id_t a1, uint64_t a2, int *a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v85 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = sub_1DDA83CFC();
  uint64_t v11 = v10;
  if (a1 + 1 >= 2 && os_signpost_enabled(v10))
  {
    LOWORD(buf[0]) = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v11, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CDNGJPEGXLUnpacker::unpackTile", (const char *)&unk_1DDC3ACB6, (uint8_t *)buf, 2u);
  }

  v73[0] = MEMORY[0x1E4F143A8];
  v73[1] = 3221225472;
  v73[2] = sub_1DDA17080;
  v73[3] = &unk_1E6D04A58;
  v73[4] = a1;
  uint64_t v12 = MEMORY[0x1E01C46E0](v73);
  uint64_t v13 = a3;
  JxlDecoderCreate();
  v71 = (_WORD *)(a1 + 393504);
  if (!JxlThreadParallelRunnerCreate() || JxlDecoderSetParallelRunner())
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  JxlDecoderSubscribeEvents();
  if (JxlDecoderSetInput() || JxlDecoderProcessInput() != 64)
  {
    int v53 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v53, "RawCameraException");
    __cxa_throw(v53, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  memset(v84, 0, sizeof(v84));
  long long v83 = 0u;
  long long v82 = 0u;
  long long v81 = 0u;
  long long v80 = 0u;
  long long v79 = 0u;
  long long v78 = 0u;
  long long v77 = 0u;
  long long v76 = 0u;
  long long v75 = 0u;
  memset(buf, 0, sizeof(buf));
  if (JxlDecoderGetBasicInfo() || JxlDecoderProcessInput() != 256)
  {
    v54 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v54, "RawCameraException");
    __cxa_throw(v54, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if (!DWORD1(v75)
    && (JxlDecoderGetColorAsEncodedProfile() || JxlDecoderSetPreferredColorProfile()))
  {
    v59 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v59, "RawCameraException");
    __cxa_throw(v59, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if (a9) {
    uint64_t v14 = 3;
  }
  else {
    uint64_t v14 = 4;
  }
  if (JxlDecoderImageOutBufferSize())
  {
    v55 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v55, "RawCameraException");
    __cxa_throw(v55, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v18 = a3[2];
  uint64_t v17 = a3[3];
  if (!(2 * v14 * v17 * v18) && (int v19 = *a3, v20 = a3[1], v20 == a5[1]) && v19 == *a5)
  {
    id v21 = 0;
    double x = (double)v19;
    double y = (double)v20;
    double width = (double)(int)v18;
    uint64_t v25 = a2;
    double height = (double)(int)v17;
  }
  else
  {
    objc_msgSend_dataWithLength_(MEMORY[0x1E4F1CA58], v15, 0, 0, v16);
    id v21 = objc_claimAutoreleasedReturnValue();
    uint64_t v13 = a3;
    uint64_t v25 = objc_msgSend_mutableBytes(v21, v27, v28, v29, v30);
    v86.origin.double x = (double)*a3;
    v86.origin.double y = (double)a3[1];
    v86.size.double width = (double)a3[2];
    v86.size.double height = (double)a3[3];
    v88.origin.double x = (double)*a5;
    v88.origin.double y = (double)a5[1];
    v88.size.double width = (double)a5[2];
    v88.size.double height = (double)a5[3];
    CGRect v87 = CGRectIntersection(v86, v88);
    double x = v87.origin.x;
    double y = v87.origin.y;
    double width = v87.size.width;
    double height = v87.size.height;
  }
  if (JxlDecoderSetImageOutBuffer())
  {
    v56 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v56, "RawCameraException");
    __cxa_throw(v56, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if (JxlDecoderSetImageOutBitDepth() || JxlDecoderProcessInput() != 4096)
  {
    v57 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v57, "RawCameraException");
    __cxa_throw(v57, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if (a4)
  {
    v58 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v58, "RawCameraException");
    __cxa_throw(v58, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  v61 = (void (**)(void))v12;
  uint64_t v62 = v25;
  v60 = v21;
  unint64_t v66 = (unint64_t)y;
  unint64_t v65 = (unint64_t)(y + height);
  if ((unint64_t)y < v65)
  {
    unint64_t v68 = (unint64_t)(*v71 != 1) << 16;
    unint64_t v31 = (unint64_t)(x + width);
    unint64_t v67 = (unint64_t)(*v71 != 1) << 17;
    while ((unint64_t)x >= v31)
    {
LABEL_49:
      if (++v66 == v65) {
        goto LABEL_50;
      }
    }
    unint64_t v32 = (unint64_t)x;
    unint64_t v33 = a2 + (((v66 - v13[1]) * a4) & 0xFFFFFFFFFFFFFFFELL);
    unint64_t v34 = v62 + 2 * (v66 - a5[1]) * v14 * a5[2];
    while (1)
    {
      int v35 = a5;
      unint64_t v36 = v32 - *a5;
      unint64_t v37 = v32 - *v13;
      uint64_t v38 = v36 * v14;
      unsigned int v39 = (unsigned __int16 *)(v34 + 2 * v36 * v14);
      uint64_t v40 = *v39;
      if (!*(unsigned char *)(a1 + 393520)) {
        break;
      }
      unsigned int v41 = v39[1];
      unsigned int v42 = v39[2];
      uint64_t v43 = sub_1DDAA72BC(a1);
      __int16 v44 = __rev16(v40);
      __int16 v45 = __rev16(v41);
      __int16 v46 = __rev16(v42);
      if (v43 != 2)
      {
        __int16 v44 = v40;
        __int16 v45 = v41;
      }
      uint64_t v47 = v37 * v14;
      int v48 = (_WORD *)(v33 + 2 * v47);
      *int v48 = v44;
      if (v43 == 2) {
        __int16 v49 = v46;
      }
      else {
        __int16 v49 = v42;
      }
      v48[1] = v45;
      v48[2] = v49;
      uint64_t v13 = a3;
      if (a9) {
        goto LABEL_46;
      }
      if (qword_1EAB6A8E0 != -1) {
        goto LABEL_48;
      }
LABEL_45:
      *(_WORD *)(v33 + 2 * v47 + 6) = HIWORD(xmmword_1EAB6A8E8[0x1FFF]);
LABEL_46:
      ++v32;
      a5 = v35;
      if (v31 == v32) {
        goto LABEL_49;
      }
    }
    if (qword_1EAB6A8E0 != -1) {
      dispatch_once(&qword_1EAB6A8E0, &unk_1F395A708);
    }
    uint64_t v47 = v37 * v14;
    *(_WORD *)(v33 + 2 * v47) = *((_WORD *)xmmword_1EAB6A8E8 + *(unsigned __int16 *)(a8 + 2 * v40));
    uint64_t v50 = *(unsigned __int16 *)(v34 + 2 * v38 + 2);
    if (qword_1EAB6A8E0 != -1) {
      dispatch_once(&qword_1EAB6A8E0, &unk_1F395A708);
    }
    uint64_t v13 = a3;
    *(_WORD *)(v33 + 2 * v47 + 2) = *((_WORD *)xmmword_1EAB6A8E8 + *(unsigned __int16 *)(a8 + 2 * (v68 | v50)));
    uint64_t v51 = *(unsigned __int16 *)(v34 + 2 * v38 + 4);
    if (qword_1EAB6A8E0 != -1) {
      dispatch_once(&qword_1EAB6A8E0, &unk_1F395A708);
    }
    *(_WORD *)(v33 + 2 * v47 + 4) = *((_WORD *)xmmword_1EAB6A8E8 + *(unsigned __int16 *)(a8 + 2 * (v67 | v51)));
    if (a9) {
      goto LABEL_46;
    }
    if (qword_1EAB6A8E0 == -1) {
      goto LABEL_45;
    }
LABEL_48:
    dispatch_once(&qword_1EAB6A8E0, &unk_1F395A708);
    goto LABEL_45;
  }
LABEL_50:
  JxlThreadParallelRunnerDestroy();
  JxlDecoderDestroy();

  v61[2](v61);
}

void sub_1DDA16FBC(_Unwind_Exception *a1)
{
  v1[2](v1);
  _Unwind_Resume(a1);
}

void sub_1DDA17080(uint64_t a1)
{
  v2 = sub_1DDA83CFC();
  BOOL v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CDNGJPEGXLUnpacker::unpackTile", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

void sub_1DDA17108(os_signpost_id_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  uint64_t v6 = sub_1DDA83CFC();
  uint64_t v7 = v6;
  if (a1 + 1 >= 2 && os_signpost_enabled(v6))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v7, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CDNGJPEGXLUnpacker", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v33[0] = MEMORY[0x1E4F143A8];
  v33[1] = 3221225472;
  v33[2] = sub_1DDA17588;
  v33[3] = &unk_1E6D04A58;
  v33[4] = a1;
  uint64_t v8 = MEMORY[0x1E01C46E0](v33);
  int v10 = *(_DWORD *)(a1 + 44);
  int v9 = *(_DWORD *)(a1 + 48);
  unsigned int v11 = *(_DWORD *)(a1 + 224);
  unsigned int v12 = *(_DWORD *)(a1 + 228);
  *(void *)buf = (uint64_t)(*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 2;
  sub_1DDA18488(&v32, (unint64_t *)buf);
  if (*(void *)(a1 + 240) - *(void *)(a1 + 232) != *(void *)(a1 + 264) - *(void *)(a1 + 256)
    || (v10 - 100000) < 0xFFFE7961
    || (v9 - 100000) < 0xFFFE7961
    || v11 - 100000 < 0xFFFE7961
    || v12 - 100000 < 0xFFFE7961
    || (uint64_t v13 = v32, v32 >= 20000))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if ((v9 + v12 - 1) / v12 * ((v10 + v11 - 1) / v11) != v32)
  {
    v22 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v22, "RawCameraException");
    __cxa_throw(v22, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  unint64_t v23 = (void (**)(void))v8;
  group = dispatch_group_create();
  __int16 v26 = dispatch_queue_create("JPEGXL DNG Tile Unpacker Queue", MEMORY[0x1E4F14430]);
  if (v13)
  {
    uint64_t v14 = 0;
    int v15 = 0;
    int v16 = 0;
    uint64_t v17 = 4 * v13;
    do
    {
      *(_DWORD *)buf = v15;
      *(_DWORD *)&buf[4] = v16;
      *(_DWORD *)&uint8_t buf[8] = v11;
      *(_DWORD *)&buf[12] = v12;
      if (sub_1DDB56B98((int *)buf, a3))
      {
        uint64_t v18 = sub_1DDA1658C(a1, *(_DWORD *)(*(void *)(a1 + 232) + v14), *(_DWORD *)(*(void *)(a1 + 256) + v14));
        if (v18)
        {
          int v19 = *(_DWORD *)(*(void *)(a1 + 256) + v14);
          block[0] = MEMORY[0x1E4F143A8];
          block[1] = 3221225472;
          block[2] = sub_1DDA17610;
          block[3] = &unk_1E6D04A78;
          block[4] = a1;
          void block[5] = v18;
          int v29 = v19;
          block[6] = a2;
          block[7] = a3;
          block[8] = a4;
          long long v30 = *(_OWORD *)buf;
          dispatch_group_async(group, v26, block);
        }
      }
      if ((int)(v15 + v11) >= v10) {
        unsigned int v20 = v12;
      }
      else {
        unsigned int v20 = 0;
      }
      v16 += v20;
      if ((int)(v15 + v11) >= v10) {
        int v15 = 0;
      }
      else {
        v15 += v11;
      }
      v14 += 4;
    }
    while (v17 != v14);
  }
  dispatch_group_wait(group, 0xFFFFFFFFFFFFFFFFLL);

  v23[2](v23);
}

void sub_1DDA1750C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA17588(uint64_t a1)
{
  v2 = sub_1DDA83CFC();
  BOOL v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CDNGJPEGXLUnpacker", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

void sub_1DDA17610(uint64_t a1)
{
  os_signpost_id_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = v3 + *(unsigned int *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(int **)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v8 = (int *)(a1 + 76);
  uint64_t v9 = sub_1DDA16090(v2);
  sub_1DDA1668C(v2, v5, v6, v7, v8, v3, v4, v9, 0);
  int v10 = *(void **)(a1 + 40);

  free(v10);
}

void sub_1DDA176AC(os_signpost_id_t a1)
{
  os_signpost_id_t v2 = sub_1DDA83CFC();
  uint64_t v3 = v2;
  if (a1 + 1 >= 2 && os_signpost_enabled(v2))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CDNGJPEGXLUnpacker", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v36[0] = MEMORY[0x1E4F143A8];
  v36[1] = 3221225472;
  v36[2] = sub_1DDA17B44;
  v36[3] = &unk_1E6D04A58;
  v36[4] = a1;
  uint64_t v4 = MEMORY[0x1E01C46E0](v36);
  unsigned int v5 = *(_DWORD *)(a1 + 44);
  int v24 = *(_DWORD *)(a1 + 48);
  unsigned int v6 = *(_DWORD *)(a1 + 224);
  unsigned int v7 = *(_DWORD *)(a1 + 228);
  *(void *)buf = (uint64_t)(*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 2;
  sub_1DDA18500(&v35, (unint64_t *)buf);
  uint64_t v8 = v35;
  int v21 = (*(uint64_t (**)(os_signpost_id_t))(*(void *)a1 + 40))(a1);
  if (*(void *)(a1 + 240) - *(void *)(a1 + 232) != *(void *)(a1 + 264) - *(void *)(a1 + 256)
    || v5 - 100000 < 0xFFFE7961
    || (v24 - 100000) < 0xFFFE7961
    || v6 - 100000 < 0xFFFE7961
    || v7 - 100000 < 0xFFFE7961
    || v8 >> 5 >= 0x271)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if ((v24 + v7 - 1) / v7 * ((v5 + v6 - 1) / v6) != v8)
  {
    int v19 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v19, "RawCameraException");
    __cxa_throw(v19, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  unsigned int v20 = (void (**)(void))v4;
  group = dispatch_group_create();
  v22 = dispatch_queue_create("JPEGXL DNG Tile Unpacker Queue", MEMORY[0x1E4F14430]);
  uint64_t v9 = sub_1DDAA5B9C(a1);
  if (v8)
  {
    uint64_t v10 = v9;
    uint64_t v11 = 0;
    int v12 = 0;
    int v13 = 0;
    uint64_t v14 = 4 * v8;
    do
    {
      int v15 = sub_1DDA1658C(a1, *(_DWORD *)(*(void *)(a1 + 232) + v11), *(_DWORD *)(*(void *)(a1 + 256) + v11));
      if (v15)
      {
        int v16 = *(_DWORD *)(*(void *)(a1 + 256) + v11);
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 3221225472;
        block[2] = sub_1DDA17BCC;
        block[3] = &unk_1E6D04A98;
        block[4] = a1;
        void block[5] = v15;
        block[6] = v10;
        int v26 = v16;
        unsigned int v27 = v5;
        int v28 = v24;
        int v29 = v21;
        int v30 = v12;
        int v31 = v13;
        unsigned int v32 = v6;
        unsigned int v33 = v7;
        dispatch_group_async(group, v22, block);
      }
      v11 += 4;
      if (v12 + v6 >= v5) {
        unsigned int v17 = v7;
      }
      else {
        unsigned int v17 = 0;
      }
      v13 += v17;
      if (v12 + v6 >= v5) {
        int v12 = 0;
      }
      else {
        v12 += v6;
      }
    }
    while (v14 != v11);
  }
  dispatch_group_wait(group, 0xFFFFFFFFFFFFFFFFLL);

  v20[2](v20);
}

void sub_1DDA17AC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA17B44(uint64_t a1)
{
  os_signpost_id_t v2 = sub_1DDA83CFC();
  uint64_t v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)unsigned int v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CDNGJPEGXLUnpacker", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

void sub_1DDA17BCC(uint64_t a1)
{
  os_signpost_id_t v2 = *(void *)(a1 + 32);
  int v3 = *(_DWORD *)(a1 + 60);
  uint64_t v4 = *(void *)(a1 + 40) + *(unsigned int *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 48);
  int v6 = *(_DWORD *)(a1 + 64);
  uint64_t v14 = 0;
  sub_1DDA18218(&v15, v3, v6);
  uint64_t v7 = 2 * (*(_DWORD *)(a1 + 68) * *(_DWORD *)(a1 + 60));
  int v8 = *(_DWORD *)(a1 + 80);
  int v9 = *(_DWORD *)(a1 + 84);
  sub_1DDA18218(&v12, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76));
  sub_1DDA18218(&v13, v8, v9);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = sub_1DDA16090(v2);
  sub_1DDA1668C(v2, v5, (int *)&v14, v7, &v12, v10, v4, v11, 1);
  free(*(void **)(a1 + 40));
}

void *sub_1DDA17CA4(uint64_t a1)
{
  *(void *)a1 = &unk_1F395A5F0;
  int v6 = (void **)(a1 + 393528);
  sub_1DDA18270(&v6);
  os_signpost_id_t v2 = *(void **)(a1 + 256);
  if (v2)
  {
    *(void *)(a1 + 264) = v2;
    operator delete(v2);
  }
  int v3 = *(void **)(a1 + 232);
  if (v3)
  {
    *(void *)(a1 + 240) = v3;
    operator delete(v3);
  }
  *(void *)a1 = &unk_1F3977E98;
  uint64_t v4 = *(void **)(a1 + 192);
  if (v4)
  {
    *(void *)(a1 + 200) = v4;
    operator delete(v4);
  }
  return sub_1DDA18384((void *)a1);
}

uint64_t sub_1DDA17D50(uint64_t a1)
{
  *(void *)a1 = &unk_1F395A5F0;
  uint64_t v7 = (void **)(a1 + 393528);
  sub_1DDA18270(&v7);
  os_signpost_id_t v2 = *(void **)(a1 + 256);
  if (v2)
  {
    *(void *)(a1 + 264) = v2;
    operator delete(v2);
  }
  int v3 = *(void **)(a1 + 232);
  if (v3)
  {
    *(void *)(a1 + 240) = v3;
    operator delete(v3);
  }
  *(void *)a1 = &unk_1F3977E98;
  uint64_t v4 = *(void **)(a1 + 192);
  if (v4)
  {
    *(void *)(a1 + 200) = v4;
    operator delete(v4);
  }
  uint64_t v5 = sub_1DDA18384((void *)a1);
  return MEMORY[0x1E01C3DC0](v5, 0x10B1C40CA2D56E9);
}

uint64_t sub_1DDA17E10(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 222);
}

uint64_t sub_1DDA17E18(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 220);
}

uint64_t sub_1DDA17E20(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 220) = a2;
  return result;
}

char *sub_1DDA17E28(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  int v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 2)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 62) {
      sub_1DDA17F78();
    }
    uint64_t v10 = v8 >> 1;
    if (v8 >> 1 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = sub_1DDA17F34(v7, v11);
    int v13 = (char *)v7[1];
    int v12 = (void **)(v7 + 1);
    int v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      uint64_t v18 = v9;
      int v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  int v12 = (void **)(result + 8);
  uint64_t v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 2;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  int v16 = &__src[4 * v15];
  if (v14 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v14 - v9);
    int v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    uint64_t v18 = v9;
    int v19 = v16;
LABEL_18:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *int v12 = &v9[v17];
  return result;
}

char *sub_1DDA17F34(void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_1DDA17F78();
  }
  uint64_t result = (char *)sub_1DDA17F90((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void sub_1DDA17F78()
{
}

void *sub_1DDA17F90(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_1DDA18058();
  }
  return operator new(4 * a2);
}

void sub_1DDA17FC8(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_1DDA18024(exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E6D04240, MEMORY[0x1E4FBA1C8]);
}

void sub_1DDA18010(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_1DDA18024(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D0] + 16);
  return result;
}

void sub_1DDA18058()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  int v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E4FBA350], MEMORY[0x1E4FBA1F8]);
}

void *sub_1DDA1808C(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    int v6 = result;
    uint64_t result = sub_1DDA18108(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1DDA180EC(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1DDA18108(void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_1DDA17F78();
  }
  uint64_t result = (char *)sub_1DDA1814C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void *sub_1DDA1814C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_1DDA18058();
  }
  return operator new(8 * a2);
}

int64x2_t sub_1DDA18184()
{
  uint64_t v0 = 0;
  int64x2_t result = (int64x2_t)xmmword_1DDBF8D70;
  int64x2_t v2 = (int64x2_t)xmmword_1DDBF8D80;
  int64x2_t v3 = (int64x2_t)xmmword_1DDBF8D90;
  float32x4_t v4 = (float32x4_t)vdupq_n_s32(0x477FFF00u);
  int64x2_t v5 = (int64x2_t)xmmword_1DDBF8D60;
  int64x2_t v6 = vdupq_n_s64(8uLL);
  do
  {
    xmmword_1EAB6A8E8[v0] = (__int128)vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vdivq_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_u64((uint64x2_t)v5)), vcvtq_f64_u64((uint64x2_t)v3)), v4)), vdivq_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_u64((uint64x2_t)v2)), vcvtq_f64_u64((uint64x2_t)result)), v4));
    int64x2_t v2 = vaddq_s64(v2, v6);
    int64x2_t v3 = vaddq_s64(v3, v6);
    int64x2_t v5 = vaddq_s64(v5, v6);
    int64x2_t result = vaddq_s64(result, v6);
    ++v0;
  }
  while (v0 != 0x2000);
  return result;
}

_DWORD *sub_1DDA18218(_DWORD *a1, int a2, int a3)
{
  int v6 = a3;
  int v7 = a2;
  sub_1DDA18410(&v5, &v7);
  *a1 = v5;
  sub_1DDA18410(&v5, &v6);
  a1[1] = v5;
  return a1;
}

void sub_1DDA18270(void ***a1)
{
  int64x2_t v2 = *a1;
  if (*v2)
  {
    sub_1DDA182C4((uint64_t *)v2);
    int64x2_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_1DDA182C4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 16)
  {
    float32x4_t v4 = *(std::__shared_weak_count **)(i - 8);
    if (v4) {
      sub_1DDA18310(v4);
    }
  }
  a1[1] = v2;
}

void sub_1DDA18310(std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

void *sub_1DDA18384(void *a1)
{
  *a1 = &unk_1F3962658;
  uint64_t v2 = (std::__shared_weak_count *)a1[20];
  if (v2) {
    sub_1DDA18310(v2);
  }
  int64x2_t v3 = (std::__shared_weak_count *)a1[18];
  if (v3) {
    sub_1DDA18310(v3);
  }
  float32x4_t v4 = (void *)a1[14];
  if (v4)
  {
    a1[15] = v4;
    operator delete(v4);
  }
  int v5 = (std::__shared_weak_count *)a1[12];
  if (v5) {
    sub_1DDA18310(v5);
  }
  int v6 = (std::__shared_weak_count *)a1[4];
  if (v6) {
    sub_1DDA18310(v6);
  }
  int v7 = (std::__shared_weak_count *)a1[2];
  if (v7) {
    std::__shared_weak_count::__release_weak(v7);
  }
  return a1;
}

int *sub_1DDA18410(int *result, int *a2)
{
  *int64x2_t result = 0;
  int v2 = *a2;
  *int64x2_t result = *a2;
  if (v2 < 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA18474(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_1DDA18488(_DWORD *result, unint64_t *a2)
{
  unint64_t v2 = *a2;
  *int64x2_t result = *a2;
  if (v2 >> 31)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA184EC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_1DDA18500(_DWORD *result, unint64_t *a2)
{
  unint64_t v2 = *a2;
  *int64x2_t result = *a2;
  if (HIDWORD(v2))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA18564(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

id sub_1DDA18578(void *a1)
{
  id v1 = a1;
  uint64_t v2 = objc_opt_class();
  int v6 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v3, v2, v4, v5);
  uint64_t v10 = objc_msgSend_objectForKeyedSubscript_(v1, v7, @"inputVersion", v8, v9);
  int v15 = objc_msgSend_intValue(v10, v11, v12, v13, v14);

  unsigned int v20 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v16, v17, v18, v19);
  uint64_t v25 = v20;
  if (v15 <= 6)
  {
    objc_msgSend_addObject_(v20, v21, @"inputBaselineExposure", v23, v24);
LABEL_4:
    objc_msgSend_addObjectsFromArray_(v25, v21, (uint64_t)&unk_1F39ABBE8, v23, v24);
    goto LABEL_5;
  }
  if (v15 == 7) {
    goto LABEL_4;
  }
LABEL_5:
  int v26 = objc_msgSend_mutableCopy(v1, v21, v22, v23, v24);
  objc_msgSend_removeObjectsForKeys_(v26, v27, (uint64_t)v25, v28, v29);
  if (v15 >= 8)
  {
    unsigned int v33 = objc_msgSend_objectForKeyedSubscript_(v1, v30, @"inputIsGenericDNG", v31, v32);
    int v38 = objc_msgSend_BOOLValue(v33, v34, v35, v36, v37);

    if (v38) {
      objc_msgSend_setObject_forKeyedSubscript_(v26, v30, (uint64_t)&unk_1F39AC158, @"inputVersion", v32);
    }
  }
  uint64_t v39 = objc_msgSend_takeAttributesFromDictionary_(v6, v30, (uint64_t)v26, v31, v32);
  uint64_t v40 = sub_1DDBEE610(v39);
  objc_msgSend_setValue_forKey_(v6, v41, v40, @"inputColorSpace", v42);

  return v6;
}

void sub_1DDA186E0(_Unwind_Exception *a1)
{
  int v6 = v5;

  _Unwind_Resume(a1);
}

id sub_1DDA18730(void *a1)
{
  id v1 = a1;
  uint64_t v2 = objc_opt_class();
  int v6 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v3, v2, v4, v5);
  uint64_t v10 = objc_msgSend_objectForKeyedSubscript_(v1, v7, @"inputVersion", v8, v9);
  int v15 = objc_msgSend_intValue(v10, v11, v12, v13, v14);

  unsigned int v20 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v16, v17, v18, v19);
  uint64_t v25 = v20;
  if (v15 <= 7) {
    objc_msgSend_addObjectsFromArray_(v20, v21, (uint64_t)&unk_1F39ABC00, v23, v24);
  }
  int v26 = objc_msgSend_mutableCopy(v1, v21, v22, v23, v24);
  objc_msgSend_removeObjectsForKeys_(v26, v27, (uint64_t)v25, v28, v29);
  objc_msgSend_takeAttributesFromDictionary_(v6, v30, (uint64_t)v26, v31, v32);

  return v6;
}

void sub_1DDA18814(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA18858(void *a1)
{
  id v1 = a1;
  int v6 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v2, v3, v4, v5);
  uint64_t v10 = objc_msgSend_objectForKeyedSubscript_(v1, v7, @"inputGainMapExecute", v8, v9);
  if (objc_msgSend_BOOLValue(v10, v11, v12, v13, v14))
  {
    uint64_t v18 = objc_opt_class();
    uint64_t v22 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v19, v18, v20, v21);
    objc_msgSend_takeAttributesFromDictionary_(v22, v23, (uint64_t)v1, v24, v25);
    objc_msgSend_addObject_(v6, v26, (uint64_t)v22, v27, v28);
  }
  uint64_t v29 = objc_msgSend_objectForKeyedSubscript_(v1, v15, @"inputVignetteExecute", v16, v17);
  if (objc_msgSend_BOOLValue(v29, v30, v31, v32, v33))
  {
    uint64_t v37 = objc_opt_class();
    unsigned int v41 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v38, v37, v39, v40);
    objc_msgSend_takeAttributesFromDictionary_(v41, v42, (uint64_t)v1, v43, v44);
    objc_msgSend_addObject_(v6, v45, (uint64_t)v41, v46, v47);
  }
  int v48 = objc_msgSend_objectForKeyedSubscript_(v1, v34, @"inputVignetteTableExecute", v35, v36);
  if (objc_msgSend_BOOLValue(v48, v49, v50, v51, v52))
  {
    uint64_t v56 = objc_opt_class();
    v60 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v57, v56, v58, v59);
    uint64_t v64 = objc_msgSend_takeAttributesFromDictionary_(v60, v61, (uint64_t)v1, v62, v63);
    uint64_t v65 = sub_1DDBEE610(v64);
    objc_msgSend_setValue_forKey_(v60, v66, v65, @"inputColorSpace", v67);
    objc_msgSend_addObject_(v6, v68, (uint64_t)v60, v69, v70);
  }
  v71 = objc_msgSend_objectForKeyedSubscript_(v1, v53, @"inputLDCExecuteFlags", v54, v55);
  long long v79 = objc_msgSend_objectForKeyedSubscript_(v1, v72, @"inputScales", v73, v74);
  if (v79 && objc_msgSend_intValue(v71, v75, v76, v77, v78))
  {
    uint64_t v80 = objc_opt_class();
    v84 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v81, v80, v82, v83);
    objc_msgSend_setValue_forKey_(v84, v85, (uint64_t)v71, @"inputLDCExecuteFlags", v86);
    uint64_t v89 = objc_msgSend_setValue_forKey_(v84, v87, (uint64_t)v79, @"inputScales", v88);
    uint64_t v90 = sub_1DDBEE610(v89);
    objc_msgSend_setValue_forKey_(v84, v91, v90, @"inputColorSpace", v92);
    objc_msgSend_addObject_(v6, v93, (uint64_t)v84, v94, v95);
  }
  v96 = objc_msgSend_objectForKeyedSubscript_(v1, v75, @"inputKr", v77, v78);
  if (v96)
  {
    uint64_t v97 = objc_opt_class();
    v101 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v98, v97, v99, v100);
    v105 = objc_msgSend_objectForKeyedSubscript_(v1, v102, @"inputCenter", v103, v104);
    objc_msgSend_setValue_forKey_(v101, v106, (uint64_t)v105, @"inputCenter", v107);

    objc_msgSend_setValue_forKey_(v101, v108, (uint64_t)v96, @"inputKr", v109);
    v113 = objc_msgSend_objectForKeyedSubscript_(v1, v110, @"inputKt", v111, v112);
    objc_msgSend_setValue_forKey_(v101, v114, (uint64_t)v113, @"inputKt", v115);

    uint64_t v117 = sub_1DDBEE610(v116);
    objc_msgSend_setValue_forKey_(v101, v118, v117, @"inputColorSpace", v119);
    objc_msgSend_addObject_(v6, v120, (uint64_t)v101, v121, v122);
  }

  return v6;
}

void sub_1DDA18BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  _Unwind_Resume(a1);
}

id sub_1DDA18C54(int a1, void *a2, int a3, int a4, void **a5, void *a6)
{
  id v11 = a2;
  id v271 = a6;
  v272 = v11;
  sub_1DDA196B0(v274, a5);
  uint64_t v16 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v12, v13, v14, v15);
  context = (void *)MEMORY[0x1E01C4510]();
  uint64_t v21 = objc_msgSend_mutableCopy(v11, v17, v18, v19, v20);
  uint64_t v22 = (void *)MEMORY[0x1E01C46E0](v271);
  objc_msgSend_setObject_forKey_(v21, v23, (uint64_t)v22, @"valueBlock", v24);

  uint64_t v28 = objc_msgSend_objectForKeyedSubscript_(v21, v25, @"inputVersion", v26, v27);
  int v33 = objc_msgSend_intValue(v28, v29, v30, v31, v32);

  uint64_t v37 = objc_msgSend_objectForKeyedSubscript_(v21, v34, @"inputLinearized", v35, v36);
  int v42 = objc_msgSend_intValue(v37, v38, v39, v40, v41);

  uint64_t v46 = objc_msgSend_objectForKeyedSubscript_(v21, v43, @"inputIsNoiseReductionEnabled", v44, v45);
  int v51 = objc_msgSend_BOOLValue(v46, v47, v48, v49, v50);

  uint64_t v58 = objc_msgSend_objectForKeyedSubscript_(v21, v52, @"inputScaleFactor", v53, v54);
  if (v58)
  {
    uint64_t v59 = objc_msgSend_objectForKeyedSubscript_(v21, v55, @"inputScaleFactor", v56, v57);
    objc_msgSend_doubleValue(v59, v60, v61, v62, v63);
    double v65 = v64;
  }
  else
  {
    double v65 = 1.0;
  }

  int v69 = a1 ^ 1;
  if (a4 == 3) {
    int v70 = a1;
  }
  else {
    int v70 = a1 ^ 1;
  }
  if (a3 != 3) {
    int v70 = 0;
  }
  if (a4)
  {
    if (a3 && a4 == 1)
    {
      if (v70) {
        goto LABEL_13;
      }
LABEL_26:
      if (!v69) {
        goto LABEL_17;
      }
      goto LABEL_27;
    }
    if ((a3 & 0xFFFFFFFE) == 2 && (a4 & 0xFFFFFFFE) == 2) {
      int v69 = a1;
    }
    else {
      int v69 = 0;
    }
  }
  a1 = v69;
  if (!v70) {
    goto LABEL_26;
  }
LABEL_13:
  v71 = sub_1DDA18730(v21);
  objc_msgSend_setValue_forKey_(v71, v72, 0, @"inputCropRect", v73);
  if (v65 >= 1.0) {
    objc_msgSend_setValue_forKey_(v71, v74, MEMORY[0x1E4F1CC28], @"inputDraftMode", v75);
  }
  else {
    objc_msgSend_setValue_forKey_(v71, v74, MEMORY[0x1E4F1CC38], @"inputDraftMode", v75);
  }
  objc_msgSend_addObject_(v16, v76, (uint64_t)v71, v77, v78);

  if (!v69)
  {
LABEL_17:
    if (!a1) {
      goto LABEL_65;
    }
    goto LABEL_43;
  }
LABEL_27:
  if (v65 < 1.0)
  {
    uint64_t v80 = objc_msgSend_filterWithName_(MEMORY[0x1E4F1E040], v66, @"CIAffineTransform", v67, v68);
    memset(&v273, 0, sizeof(v273));
    CGAffineTransformMakeScale(&v273, v65, v65);
    uint64_t v83 = objc_msgSend_valueWithBytes_objCType_(MEMORY[0x1E4F29238], v81, (uint64_t)&v273, (uint64_t)"{CGAffineTransform=dddddd}", v82);
    objc_msgSend_setValue_forKey_(v80, v84, (uint64_t)v83, @"inputTransform", v85);

    objc_msgSend_addObject_(v16, v86, (uint64_t)v80, v87, v88);
  }
  uint64_t v92 = objc_msgSend_objectForKeyedSubscript_(v21, v66, @"inputXScale", v67, v68);
  if (v92)
  {
    v93 = objc_msgSend_objectForKeyedSubscript_(v21, v89, @"inputXScale", v90, v91);
    objc_msgSend_doubleValue(v93, v94, v95, v96, v97);
    double v99 = v98;
  }
  else
  {
    double v99 = 1.0;
  }

  v106 = objc_msgSend_objectForKeyedSubscript_(v21, v100, @"inputYScale", v101, v102);
  if (v106)
  {
    uint64_t v107 = objc_msgSend_objectForKeyedSubscript_(v21, v103, @"inputYScale", v104, v105);
    objc_msgSend_doubleValue(v107, v108, v109, v110, v111);
    double v113 = v112;
  }
  else
  {
    double v113 = 1.0;
  }

  if (fabs(v99 + -1.0) > 0.01 || fabs(v113 + -1.0) > 0.01)
  {
    v118 = (void *)MEMORY[0x1E4F1E040];
    uint64_t v119 = objc_msgSend_numberWithDouble_(NSNumber, v114, v115, v116, v117, v113);
    v124 = objc_msgSend_numberWithDouble_(NSNumber, v120, v121, v122, v123, v99 / v113);
    v127 = objc_msgSend_filterWithName_keysAndValues_(v118, v125, @"CILanczosScaleTransform", @"inputScale", v126, v119, @"inputAspectRatio", v124, 0);

    if (v127) {
      objc_msgSend_addObject_(v16, v128, (uint64_t)v127, v129, v130);
    }
  }
  uint64_t v131 = objc_opt_class();
  v135 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v132, v131, v133, v134);
  objc_msgSend_takeAttributesFromDictionary_(v135, v136, (uint64_t)v21, v137, v138);
  objc_msgSend_addObject_(v16, v139, (uint64_t)v135, v140, v141);

  if (v51)
  {
    v142 = sub_1DDA18578(v21);
    objc_msgSend_addObject_(v16, v143, (uint64_t)v142, v144, v145);
  }
  v146 = sub_1DDA18858(v21);
  objc_msgSend_addObjectsFromArray_(v16, v147, (uint64_t)v146, v148, v149);

  if (a1)
  {
LABEL_43:
    if (v33 < 7) {
      CFTypeRef v150 = sub_1DDBEE9BC();
    }
    else {
      CFTypeRef v150 = sub_1DDBEE8B8();
    }
    CFTypeRef v151 = v150;
    uint64_t v152 = objc_opt_class();
    v156 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v153, v152, v154, v155);
    v269 = objc_msgSend_mutableCopy(v21, v157, v158, v159, v160);
    if (!v42) {
      objc_msgSend_removeObjectForKey_(v269, v161, @"inputBlacks", v162, v163);
    }
    objc_msgSend_takeAttributesFromDictionary_(v156, v161, (uint64_t)v269, v162, v163);
    if (!v42)
    {
      objc_msgSend_setValue_forKey_(v156, v164, (uint64_t)&unk_1F39AC170, @"inputRange", v166);
      objc_msgSend_setValue_forKey_(v156, v167, (uint64_t)&unk_1F39AFB48, @"inputFactor", v168);
    }
    objc_msgSend_addObject_(v16, v164, (uint64_t)v156, v165, v166);
    uint64_t v169 = objc_opt_class();
    v173 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v170, v169, v171, v172);

    objc_msgSend_takeAttributesFromDictionary_(v173, v174, (uint64_t)v21, v175, v176);
    objc_msgSend_addObject_(v16, v177, (uint64_t)v173, v178, v179);
    uint64_t v180 = objc_opt_class();
    v184 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v181, v180, v182, v183);
    objc_msgSend_addObject_(v16, v185, (uint64_t)v184, v186, v187);

    uint64_t v188 = objc_opt_class();
    v192 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v189, v188, v190, v191);

    objc_msgSend_takeAttributesFromDictionary_(v192, v193, (uint64_t)v21, v194, v195);
    objc_msgSend_setValue_forKey_(v192, v196, (uint64_t)v151, @"inputColorSpace", v197);
    objc_msgSend_addObject_(v16, v198, (uint64_t)v192, v199, v200);
    if (v33 < 9)
    {
      v212 = v192;
    }
    else
    {
      uint64_t v205 = objc_opt_class();
      v209 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v206, v205, v207, v208);

      objc_msgSend_setValue_forKey_(v209, v210, (uint64_t)v151, @"inputColorSpace", v211);
      v212 = v209;
      objc_msgSend_addObject_(v16, v213, (uint64_t)v209, v214, v215);
    }
    v216 = objc_msgSend_allKeys(v21, v201, v202, v203, v204);
    int v220 = objc_msgSend_containsObject_(v216, v217, @"inputMapPointsV", v218, v219);

    if (v220)
    {
      uint64_t v221 = objc_opt_class();
      v225 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v222, v221, v223, v224);

      CFTypeRef v226 = sub_1DDBEEAC0();
      objc_msgSend_setValue_forKey_(v225, v227, (uint64_t)v226, @"inputColorSpace", v228);
      objc_msgSend_takeAttributesFromDictionary_(v225, v229, (uint64_t)v21, v230, v231);
      v212 = v225;
      objc_msgSend_addObject_(v16, v232, (uint64_t)v225, v233, v234);
    }
    uint64_t v235 = objc_opt_class();
    v239 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v236, v235, v237, v238);

    objc_msgSend_setDefaults(v239, v240, v241, v242, v243);
    objc_msgSend_setValue_forKey_(v239, v244, (uint64_t)v151, @"inputColorSpace", v245);
    if (v33 >= 6)
    {
      objc_msgSend_takeAttributesFromDictionary_forKeys_(v239, v246, (uint64_t)v21, (uint64_t)&unk_1F39ABC18, v248);
      if (v33 >= 7) {
        objc_msgSend_takeAttributesFromDictionary_forKeys_(v239, v246, (uint64_t)v21, (uint64_t)&unk_1F39ABC30, v248);
      }
    }
    objc_msgSend_addObject_(v16, v246, (uint64_t)v239, v247, v248);
    uint64_t v249 = objc_opt_class();
    v253 = objc_msgSend_filterWithDefaultsForClass_(RAWFilter, v250, v249, v251, v252);

    objc_msgSend_takeAttributesFromDictionary_(v253, v254, (uint64_t)v21, v255, v256);
    v257 = getenv("RAWCAMERA_BOOSTSPACE");
    if (v257)
    {
      v260 = v257;
      if ((__tolower(*v257) != 97 || v260[1]) && __tolower(*v260) == 98 && !v260[1]) {
        CFTypeRef v151 = sub_1DDBEE7B4();
      }
    }
    objc_msgSend_setValue_forKey_(v253, v258, (uint64_t)v151, @"inputColorSpace", v259);
    objc_msgSend_addObject_(v16, v261, (uint64_t)v253, v262, v263);
  }
LABEL_65:

  v267 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1C978], v264, (uint64_t)v16, v265, v266);

  *(void *)&v273.a = &v276;
  sub_1DDA18270((void ***)&v273);
  *(void *)&v273.a = &v275;
  sub_1DDA18270((void ***)&v273);
  *(void *)&v273.a = v274;
  sub_1DDA18270((void ***)&v273);

  return v267;
}

void sub_1DDA1953C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);

  sub_1DDA19658((void **)va);
  _Unwind_Resume(a1);
}

void **sub_1DDA19658(void **a1)
{
  uint64_t v3 = a1 + 6;
  sub_1DDA18270(&v3);
  uint64_t v3 = a1 + 3;
  sub_1DDA18270(&v3);
  uint64_t v3 = a1;
  sub_1DDA18270(&v3);
  return a1;
}

void *sub_1DDA196B0(void *a1, void **a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  sub_1DDA1976C(a1, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 4);
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = 0;
  sub_1DDA1976C(a1 + 3, a2[3], a2[4], ((char *)a2[4] - (char *)a2[3]) >> 4);
  a1[6] = 0;
  a1[7] = 0;
  a1[8] = 0;
  sub_1DDA1976C(a1 + 6, a2[6], a2[7], ((char *)a2[7] - (char *)a2[6]) >> 4);
  return a1;
}

void sub_1DDA19740(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1DDA18270((void ***)va);
  sub_1DDA18270((void ***)va);
  _Unwind_Resume(a1);
}

void *sub_1DDA1976C(void *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    int v6 = result;
    sub_1DDA197F4(result, a4);
    int64x2_t result = sub_1DDA19870((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1DDA197D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1DDA18270(&a9);
  _Unwind_Resume(a1);
}

char *sub_1DDA197F4(void *a1, unint64_t a2)
{
  if (a2 >> 60) {
    sub_1DDA17F78();
  }
  int64x2_t result = (char *)sub_1DDA19838((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[16 * v4];
  return result;
}

void *sub_1DDA19838(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    sub_1DDA18058();
  }
  return operator new(16 * a2);
}

void *sub_1DDA19870(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      *uint64_t v4 = *a2;
      uint64_t v5 = a2[1];
      v4[1] = v5;
      if (v5) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
      }
      v4 += 2;
      a2 += 2;
    }
    while (a2 != a3);
    uint64_t v10 = v4;
  }
  char v8 = 1;
  sub_1DDA19900((uint64_t)v7);
  return v4;
}

uint64_t sub_1DDA19900(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1DDA19938(a1);
  }
  return a1;
}

void sub_1DDA19938(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(std::__shared_weak_count **)(v1 - 8);
    if (v3) {
      sub_1DDA18310(v3);
    }
    v1 -= 16;
  }
}

double sub_1DDA1997C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  sub_1DDA1ADB8(&v7, &v6, v5);
  double result = v5[0];
  *a3 = *(_OWORD *)v5;
  return result;
}

double sub_1DDA199C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _OWORD *a4@<X8>)
{
  uint64_t v8 = a1;
  unsigned __int8 v7 = a3;
  sub_1DDA1AFBC(&v8, a2, &v7, v6);
  double result = v6[0];
  *a4 = *(_OWORD *)v6;
  return result;
}

double sub_1DDA19A18@<D0>(const void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = a1;
  sub_1DDA1B148(&v5, &v4);
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_1DDA19A5C(uint64_t a1, const void *a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395A748;
  *(void *)(a1 + 24) = 2;
  sub_1DDA1B2DC((_DWORD *)(a1 + 32), qword_1DDBF8DD0);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 40) = a2;
  if (a2) {
    CFRetain(a2);
  }
  return a1;
}

void sub_1DDA19AD0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA19AE8(void *a1)
{
  *a1 = &unk_1F395A748;
  uint64_t v2 = (const void *)a1[5];
  if (v2) {
    CFRelease(v2);
  }
  uint64_t v3 = (std::__shared_weak_count *)a1[2];
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  return a1;
}

uint64_t sub_1DDA19B4C(uint64_t a1)
{
  if (*(void *)(a1 + 40)) {
    return MEMORY[0x1F40E98F8]();
  }
  else {
    return 1;
  }
}

void *sub_1DDA19B60@<X0>(void *a1@<X8>)
{
  return sub_1DDA1A880(a1, "");
}

uint64_t sub_1DDA19B70(uint64_t a1)
{
  int v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  unsigned int v4 = 0;
  int v5 = v2;
  (*(void (**)(uint64_t, unsigned int *, uint64_t))(*(void *)a1 + 40))(a1, &v4, 2);
  unsigned int v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  sub_1DDA1B354(&v6, &v4);
  (*(void (**)(uint64_t, int *, void))(*(void *)a1 + 40))(a1, &v5, 0);
  return v6;
}

void sub_1DDA19C5C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11)
{
  a10 = 0;
  sub_1DDA1B3CC(&a11, &a10);
  __cxa_end_catch();
  JUMPOUT(0x1DDA19C48);
}

void sub_1DDA19C80(_Unwind_Exception *a1)
{
}

uint64_t sub_1DDA19C94(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

uint64_t sub_1DDA19C9C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_1DDA19CA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1DDA19CAC(uint64_t result, _DWORD *a2)
{
  *(_DWORD *)(result + 32) = *a2;
  return result;
}

uint64_t sub_1DDA19CB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1DDA19CC0(void *a1, uint64_t a2, uint64_t a3, int *a4)
{
  sub_1DDA1B448(&v11, a1 + 1);
  sub_1DDA1B4D8(&v10, a4);
  sub_1DDA1A94C(v13, &v11, (uint64_t)&v10, 0);
  if (v12) {
    sub_1DDA18310(v12);
  }
  uint64_t v8 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*a1 + 32))(a1, a2, a3);
  sub_1DDA1AA18(v13);
  return v8;
}

void sub_1DDA19D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1DDA1AA18((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA19DA0(uint64_t a1)
{
  unsigned __int8 v2 = 0;
  sub_1DDA19DD0(a1, (uint64_t)&v2, 1);
  return v2;
}

uint64_t sub_1DDA19DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 32))(a1);
  if (a3 != result)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA19E54(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA19E68(uint64_t a1)
{
  unsigned __int16 v3 = 0;
  sub_1DDA19DD0(a1, (uint64_t)&v3, 2);
  if (*(void *)(a1 + 24) == 2) {
    return bswap32(v3) >> 16;
  }
  else {
    return v3;
  }
}

uint64_t sub_1DDA19EC8(uint64_t a1)
{
  unsigned int v3 = 0;
  sub_1DDA19DD0(a1, (uint64_t)&v3, 4);
  if (*(void *)(a1 + 24) == 2) {
    return bswap32(v3);
  }
  else {
    return v3;
  }
}

unint64_t sub_1DDA19F24(uint64_t a1)
{
  unint64_t v3 = 0;
  sub_1DDA19DD0(a1, (uint64_t)&v3, 8);
  if (*(void *)(a1 + 24) == 2) {
    return bswap64(v3);
  }
  else {
    return v3;
  }
}

uint64_t sub_1DDA19F80(uint64_t a1)
{
  char v2 = 0;
  sub_1DDA19DD0(a1, (uint64_t)&v2, 1);
  return v2;
}

uint64_t sub_1DDA19FB0(uint64_t a1)
{
  unsigned __int16 v4 = 0;
  sub_1DDA19DD0(a1, (uint64_t)&v4, 2);
  if (*(void *)(a1 + 24) == 2) {
    unsigned int v2 = bswap32(v4) >> 16;
  }
  else {
    LOWORD(v2) = v4;
  }
  return (__int16)v2;
}

float sub_1DDA1A014(uint64_t a1)
{
  LODWORD(result) = sub_1DDA19EC8(a1);
  return result;
}

double sub_1DDA1A030(uint64_t a1)
{
  return COERCE_DOUBLE(sub_1DDA19F24(a1));
}

float sub_1DDA1A04C(uint64_t a1)
{
  float v2 = (float)(int)sub_1DDA19EC8(a1);
  return v2 / (float)(int)sub_1DDA19EC8(a1);
}

float sub_1DDA1A08C(uint64_t a1)
{
  float v2 = (float)sub_1DDA19EC8(a1);
  return v2 / (float)sub_1DDA19EC8(a1);
}

BOOL sub_1DDA1A0CC(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  __p[25] = *(void **)MEMORY[0x1E4F143B8];
  unsigned int v6 = *a2;
  if (*a2 > 0xC7)
  {
    if (v6 >= 0x40000)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    int v19 = 1;
    unsigned int v21 = v6;
    uint64_t v11 = sub_1DDA1B54C(&v21, &v19);
    sub_1DDA1AB9C(__p, *v11);
    unsigned int v12 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 32))(a1);
    unsigned int v8 = v12;
    unsigned int v20 = v12;
    unsigned int v13 = *a2;
    BOOL v10 = v12 == *a2;
    if (v12 == v13)
    {
      *((unsigned char *)__p[0] + v12) = 0;
      sub_1DDA1AB54((std::string *)a3, (char *)__p[0]);
    }
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }
  else
  {
    unsigned int v7 = (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 32))(a1, __p);
    unsigned int v8 = v7;
    unsigned int v20 = v7;
    unsigned int v9 = *a2;
    BOOL v10 = v7 == *a2;
    if (v7 == v9)
    {
      *((unsigned char *)__p + v7) = 0;
      sub_1DDA1AB54((std::string *)a3, (char *)__p);
    }
  }
  uint64_t v14 = (void *)*(unsigned __int8 *)(a3 + 23);
  if ((char)v14 < 0) {
    uint64_t v14 = *(void **)(a3 + 8);
  }
  __p[0] = v14;
  sub_1DDA18500(&v21, (unint64_t *)__p);
  if (v21 < v8)
  {
    uint64_t v15 = (void *)*(unsigned __int8 *)(a3 + 23);
    if ((char)v15 < 0) {
      uint64_t v15 = *(void **)(a3 + 8);
    }
    __p[0] = v15;
    sub_1DDA18488(&v21, (unint64_t *)__p);
    LODWORD(__p[0]) = 1;
    sub_1DDA1A378(&v21, __p);
    sub_1DDA1A3F4((int *)&v21, &v20);
    (*(void (**)(uint64_t, unsigned int *, uint64_t))(*(void *)a1 + 40))(a1, &v21, 1);
  }
  if (!v10) {
    return 0;
  }
  uint64_t v16 = *(unsigned __int8 *)(a3 + 23);
  if ((v16 & 0x80u) != 0) {
    uint64_t v16 = *(void *)(a3 + 8);
  }
  return v16 != 0;
}

void sub_1DDA1A340(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_1DDA1A378(_DWORD *result, _DWORD *a2)
{
  BOOL v2 = __OFADD__(*result, *a2);
  *result += *a2;
  if (v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA1A3E0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

int *sub_1DDA1A3F4(int *result, unsigned int *a2)
{
  unint64_t v2 = *result - (unint64_t)*a2;
  *float result = v2;
  BOOL v5 = v2 == (uint64_t)(v2 << 31) >> 31;
  uint64_t v3 = (int)v2 & 0x1FFFFFFFFLL;
  uint64_t v4 = v2 & 0x1FFFFFFFFLL;
  BOOL v5 = v5 && v4 == v3;
  if (!v5)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA1A474(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA1A488@<X0>(void *a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v11 = 2;
  int v12 = *a2;
  unsigned int v6 = *sub_1DDA1B5D4(&v12, &v11);
  if ((*(unsigned int (**)(void *))(*a1 + 16))(a1) < v6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  sub_1DDA1AC54(a3, *a2);
  uint64_t result = sub_1DDA19DD0((uint64_t)a1, *a3, a3[1] - *a3);
  if (a1[3] != 1)
  {
    unsigned int v8 = (_WORD *)*a3;
    unsigned int v9 = (_WORD *)a3[1];
    while (v8 != v9)
    {
      *unsigned int v8 = bswap32((unsigned __int16)*v8) >> 16;
      ++v8;
    }
  }
  return result;
}

void sub_1DDA1A590(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA1A5BC@<X0>(void *a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v11 = 4;
  int v12 = *a2;
  unsigned int v6 = *sub_1DDA1B5D4(&v12, &v11);
  if ((*(unsigned int (**)(void *))(*a1 + 16))(a1) < v6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  sub_1DDA1AD40(a3, *a2);
  uint64_t result = sub_1DDA19DD0((uint64_t)a1, *a3, a3[1] - *a3);
  if (a1[3] != 1)
  {
    unsigned int v8 = (unsigned int *)*a3;
    unsigned int v9 = (unsigned int *)a3[1];
    while (v8 != v9)
    {
      *unsigned int v8 = bswap32(*v8);
      ++v8;
    }
  }
  return result;
}

void sub_1DDA1A6C0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA1A6EC(_DWORD *a1, _DWORD *a2)
{
  if ((*(unsigned int (**)(_DWORD *))(*(void *)a1 + 16))(a1) >= *a2)
  {
    int v3 = a1[9];
    LODWORD(v6) = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 48))(a1);
    LODWORD(v5) = v3;
    sub_1DDA1A378(&v5, &v6);
    operator new[]();
  }
  exception = __cxa_allocate_exception(0x10uLL);
  MEMORY[0x1E01C3B90](exception, "RawCameraException");
  __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
}

void sub_1DDA1A840(void *a1)
{
  __cxa_begin_catch(a1);
  MEMORY[0x1E01C3DA0](v2, 0x1000C8077774924);
  *uint64_t v1 = 0;
  v1[1] = 0;
  __cxa_end_catch();
  JUMPOUT(0x1DDA1A7F0);
}

void sub_1DDA1A868(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA1A880(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1DDA1A934();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void sub_1DDA1A934()
{
}

uint64_t *sub_1DDA1A94C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  *a1 = *a2;
  a1[1] = v8;
  if (v8)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
    uint64_t v7 = *a1;
  }
  *((_DWORD *)a1 + 4) = 0;
  if (v7)
  {
    *((_DWORD *)a1 + 4) = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 48))(v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)*a1 + 40))(*a1, a3, a4);
  }
  return a1;
}

void sub_1DDA1A9FC(_Unwind_Exception *exception_object)
{
  int v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3) {
    sub_1DDA18310(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1DDA1AA18(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    (*(void (**)(uint64_t, uint64_t *, void))(*(void *)v2 + 40))(v2, a1 + 2, 0);
  }
  int v3 = (std::__shared_weak_count *)a1[1];
  if (v3) {
    sub_1DDA18310(v3);
  }
  return a1;
}

void sub_1DDA1AA7C(_Unwind_Exception *exception_object)
{
  int v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3) {
    sub_1DDA18310(v3);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1DDA1AA94(std::string *__dst, const std::string::value_type *__src, size_t __len)
{
  LODWORD(v6) = SHIBYTE(__dst->__r_.__value_.__r.__words[2]);
  if ((v6 & 0x80000000) != 0)
  {
    unint64_t v10 = __dst->__r_.__value_.__r.__words[2];
    std::string::size_type v9 = (v10 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if (v9 < __len)
    {
      std::string::size_type size = __dst->__r_.__value_.__l.__size_;
      goto LABEL_6;
    }
    unint64_t v6 = HIBYTE(v10);
    uint64_t v7 = (std::string *)__dst->__r_.__value_.__r.__words[0];
  }
  else
  {
    uint64_t v7 = __dst;
    if (__len > 0x16)
    {
      std::string::size_type size = HIBYTE(__dst->__r_.__value_.__r.__words[2]);
      std::string::size_type v9 = 22;
LABEL_6:
      std::string::__grow_by_and_replace(__dst, v9, __len - v9, size, 0, size, __len, __src);
      return __dst;
    }
  }
  if (__len)
  {
    memmove(v7, __src, __len);
    LOBYTE(v6) = *((unsigned char *)&__dst->__r_.__value_.__s + 23);
  }
  if ((v6 & 0x80) != 0) {
    __dst->__r_.__value_.__l.__size_ = __len;
  }
  else {
    *((unsigned char *)&__dst->__r_.__value_.__s + 23) = __len & 0x7F;
  }
  v7->__r_.__value_.__s.__data_[__len] = 0;
  return __dst;
}

std::string *sub_1DDA1AB54(std::string *a1, char *__s)
{
  size_t v4 = strlen(__s);

  return sub_1DDA1AA94(a1, __s, v4);
}

void *sub_1DDA1AB9C(void *a1, size_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1DDA1AC10(a1, a2);
    size_t v4 = (char *)a1[1];
    size_t v5 = &v4[a2];
    bzero(v4, a2);
    a1[1] = v5;
  }
  return a1;
}

void sub_1DDA1ABF4(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1DDA1AC10(void *a1, size_t __sz)
{
  if ((__sz & 0x8000000000000000) != 0) {
    sub_1DDA17F78();
  }
  uint64_t result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

void *sub_1DDA1AC54(void *a1, uint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1DDA1ACCC(a1, a2);
    size_t v4 = (char *)a1[1];
    bzero(v4, 2 * a2);
    a1[1] = &v4[2 * a2];
  }
  return a1;
}

void sub_1DDA1ACB0(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1DDA1ACCC(void *a1, uint64_t a2)
{
  if (a2 < 0) {
    sub_1DDA17F78();
  }
  uint64_t result = (char *)sub_1DDA1AD0C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[2 * v4];
  return result;
}

void *sub_1DDA1AD0C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0) {
    sub_1DDA18058();
  }
  return operator new(2 * a2);
}

void *sub_1DDA1AD40(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1DDA17F34(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 4 * a2);
    a1[1] = &v4[4 * a2];
  }
  return a1;
}

void sub_1DDA1AD9C(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA1ADB8(void *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  unint64_t v6 = operator new(0x70uLL);
  sub_1DDA1AE34(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;

  sub_1DDA1AF34((uint64_t)a3, v6 + 4, (uint64_t)(v6 + 3));
}

void sub_1DDA1AE20(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA1AE34(void *a1, void *a2, void *a3)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395A7E8;
  sub_1DDA25F84(a1 + 3, *a2, *a3);
  return a1;
}

void sub_1DDA1AE84(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA1AE98(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395A7E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA1AEB8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395A7E8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA1AF0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 56))();
}

void sub_1DDA1AF34(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = (std::__shared_weak_count *)a2[1];
    if (!v4 || v4->__shared_owners_ == -1)
    {
      size_t v5 = *(std::__shared_weak_count **)(a1 + 8);
      if (v5)
      {
        atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v5->__shared_weak_owners_, 1uLL, memory_order_relaxed);
        uint64_t v4 = (std::__shared_weak_count *)a2[1];
      }
      *a2 = a3;
      a2[1] = v5;
      if (v4) {
        std::__shared_weak_count::__release_weak(v4);
      }
      if (v5)
      {
        sub_1DDA18310(v5);
      }
    }
  }
}

void sub_1DDA1AFBC(void *a1@<X1>, uint64_t a2@<X2>, unsigned __int8 *a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = operator new(0x68uLL);
  sub_1DDA1B048(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;

  sub_1DDA1AF34((uint64_t)a4, v8 + 4, (uint64_t)(v8 + 3));
}

void sub_1DDA1B034(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA1B048(void *a1, void *a2, uint64_t a3, unsigned __int8 *a4)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395A838;
  sub_1DDA26510(a1 + 3, *a2, a3, *a4);
  return a1;
}

void sub_1DDA1B098(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA1B0AC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395A838;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA1B0CC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395A838;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA1B120(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 56))();
}

void sub_1DDA1B148(const void **a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x1058uLL);
  sub_1DDA1B1BC((uint64_t)v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;

  sub_1DDA1AF34((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_1DDA1B1A8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA1B1BC(uint64_t a1, const void **a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395A888;
  sub_1DDA19A5C(a1 + 24, *a2);
  *(void *)(a1 + 24) = &unk_1F395FA40;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = 0;
  return a1;
}

void sub_1DDA1B22C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA1B240(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395A888;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA1B260(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395A888;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA1B2B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 56))();
}

_DWORD *sub_1DDA1B2DC(_DWORD *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *uint64_t result = *a2;
  if (v2 != (int)v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA1B340(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_1DDA1B354(_DWORD *result, unsigned int *a2)
{
  uint64_t v2 = *a2;
  *uint64_t result = v2;
  if (v2 != (int)v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA1B3B8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_1DDA1B3CC(_DWORD *result, unsigned int *a2)
{
  *uint64_t result = 0;
  uint64_t v2 = *a2;
  *uint64_t result = v2;
  if (v2 != (int)v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA1B434(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA1B448(void *a1, void *a2)
{
  int v3 = (std::__shared_weak_count *)a2[1];
  *a1 = *a2;
  if (!v3)
  {
    a1[1] = 0;
LABEL_5:
    sub_1DDA1B48C();
  }
  uint64_t v4 = std::__shared_weak_count::lock(v3);
  a1[1] = v4;
  if (!v4) {
    goto LABEL_5;
  }
  return a1;
}

void sub_1DDA1B48C()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = MEMORY[0x1E4FBA438] + 16;
  __cxa_throw(exception, MEMORY[0x1E4FBA2E0], MEMORY[0x1E4FBA208]);
}

int *sub_1DDA1B4D8(int *result, int *a2)
{
  int v2 = *a2;
  *uint64_t result = *a2;
  if (v2 < 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA1B538(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_1DDA1B54C(_DWORD *result, int *a2)
{
  uint64_t v2 = *result + (uint64_t)*a2;
  uint64_t v3 = v2 << 31 >> 31;
  *uint64_t result = v2;
  if (v3 != v2 || v3 < 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA1B5C0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_1DDA1B5D4(_DWORD *result, void *a2)
{
  uint64_t v2 = (*result * (unsigned __int128)(unint64_t)*a2) >> 64;
  unint64_t v3 = *result * *a2;
  *uint64_t result = v3;
  if (v2 || HIDWORD(v3))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA1B64C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

id sub_1DDA1B660(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], a2, a3, a4, a5);
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = sub_1DDA1B72C;
  v16[3] = &unk_1E6D04AE0;
  id v17 = v6;
  id v7 = v6;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(a1, v8, (uint64_t)v16, v9, v10);
  uint64_t v14 = objc_msgSend_dictionaryWithDictionary_(MEMORY[0x1E4F1C9E8], v11, (uint64_t)v7, v12, v13);

  return v14;
}

void sub_1DDA1B72C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a2;
  objc_msgSend_makeSerializable(a3, v6, v7, v8, v9);
  id v12 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKey_(v4, v10, (uint64_t)v12, (uint64_t)v5, v11);
}

uint64_t sub_1DDA1B7A0(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend_keypathValueDictionary_(a1, a2, (uint64_t)&stru_1F398F7F8, a4, a5);
}

id sub_1DDA1B7AC(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v9 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v5, v6, v7, v8);
  uint64_t v20 = MEMORY[0x1E4F143A8];
  uint64_t v21 = 3221225472;
  uint64_t v22 = sub_1DDA1B8A0;
  uint64_t v23 = &unk_1E6D04B08;
  id v24 = v9;
  id v25 = v4;
  id v10 = v4;
  id v11 = v9;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(a1, v12, (uint64_t)&v20, v13, v14);
  uint64_t v18 = objc_msgSend_dictionaryWithDictionary_(MEMORY[0x1E4F1C9E8], v15, (uint64_t)v11, v16, v17, v20, v21, v22, v23);

  return v18;
}

void sub_1DDA1B8A0(uint64_t a1, void *a2, void *a3)
{
  id v51 = a2;
  id v5 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    id v11 = *(void **)(a1 + 32);
    id v10 = *(void **)(a1 + 40);
    uint64_t v12 = objc_msgSend_length(v10, v6, v7, v8, v9);
    uint64_t v16 = @".";
    if (!v12) {
      uint64_t v16 = &stru_1F398F7F8;
    }
    uint64_t v17 = objc_msgSend_stringByAppendingFormat_(v10, v13, @"%@%@", v14, v15, v16, v51);
    objc_msgSend_setObject_forKeyedSubscript_(v11, v18, (uint64_t)v5, (uint64_t)v17, v19);
  }
  else
  {
    if (objc_opt_respondsToSelector())
    {
      id v25 = *(void **)(a1 + 32);
      id v24 = *(void **)(a1 + 40);
      uint64_t v26 = objc_msgSend_length(v24, v20, v21, v22, v23);
      uint64_t v30 = @".";
      if (!v26) {
        uint64_t v30 = &stru_1F398F7F8;
      }
      uint64_t v17 = objc_msgSend_stringByAppendingFormat_(v24, v27, @"%@%@", v28, v29, v30, v51);
      unint64_t v34 = objc_msgSend_keypathValueDictionary_(v5, v31, (uint64_t)v17, v32, v33);
      objc_msgSend_addEntriesFromDictionary_(v25, v35, (uint64_t)v34, v36, v37);
    }
    else
    {
      uint64_t v17 = objc_msgSend_description(v5, v20, v21, v22, v23);
      uint64_t v39 = *(void **)(a1 + 32);
      int v38 = *(void **)(a1 + 40);
      uint64_t v44 = objc_msgSend_length(v38, v40, v41, v42, v43);
      uint64_t v48 = @".";
      if (!v44) {
        uint64_t v48 = &stru_1F398F7F8;
      }
      unint64_t v34 = objc_msgSend_stringByAppendingFormat_(v38, v45, @"%@%@", v46, v47, v48, v51);
      objc_msgSend_setObject_forKeyedSubscript_(v39, v49, (uint64_t)v17, (uint64_t)v34, v50);
    }
  }
}

id sub_1DDA1BA90(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], a2, a3, a4, a5);
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = sub_1DDA1BB40;
  v12[3] = &unk_1E6D04AE0;
  id v7 = v6;
  id v13 = v7;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(a1, v8, (uint64_t)v12, v9, v10);

  return v7;
}

void sub_1DDA1BB40(uint64_t a1, void *a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a2;
  objc_msgSend_makeSerializable(a3, v6, v7, v8, v9);
  id v12 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKey_(v4, v10, (uint64_t)v12, (uint64_t)v5, v11);
}

uint64_t sub_1DDA1BBB4(uint64_t a1)
{
  uint64_t v2 = (dispatch_once_t *)(a1 + 131656);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1DDA1BC48;
  block[3] = &unk_1E6D04A58;
  block[4] = a1;
  if (*v2 != -1) {
    dispatch_once(v2, block);
  }
  return a1 + 584;
}

void sub_1DDA1BC48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v1 + 248)) {
    sub_1DDA1D8BC();
  }
  __p = 0;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  sub_1DDA1D908(&__p, *(const void **)(v1 + 224), *(void *)(v1 + 232), (uint64_t)(*(void *)(v1 + 232) - *(void *)(v1 + 224)) >> 1);
  if (!*(unsigned char *)(v1 + 216)) {
    sub_1DDA1D8BC();
  }
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  sub_1DDA1D984(&v26, *(const void **)(v1 + 192), *(void *)(v1 + 200), (uint64_t)(*(void *)(v1 + 200) - *(void *)(v1 + 192)) >> 2);
  uint64_t v2 = (char *)v26;
  uint64_t v3 = v27 - (char *)v26;
  id v4 = (char *)__p;
  if (v27 - (char *)v26 != v30 - (unsigned char *)__p || v27 == (char *)v26) {
    goto LABEL_17;
  }
  char v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = v3 >> 2;
  BOOL v8 = v3 >> 2 != 0;
  unint64_t v9 = (v3 >> 2) - 1;
  if (v9 == 0 || !v8) {
    uint64_t v7 = 1;
  }
  uint64_t v10 = (char *)__p + 2;
  do
  {
    if (v6)
    {
      if (!*(v10 - 1) && *v10 == 0) {
        break;
      }
    }
    v10 += 2;
    if (v9 == v6) {
      char v5 = 1;
    }
    ++v6;
  }
  while (v7 != v6);
  if (v5)
  {
    if (!*(unsigned char *)(v1 + 258)) {
      sub_1DDA1D8BC();
    }
    uint64_t v15 = *(unsigned __int16 *)(v1 + 256);
    if (*(_WORD *)(v1 + 256))
    {
      unint64_t v16 = 0;
      unsigned __int16 v17 = *((_WORD *)__p + 3);
      unint64_t v18 = *((unsigned __int16 *)__p + 2);
      unsigned __int16 v19 = *((_WORD *)__p + 1);
      unint64_t v20 = 1;
      int v21 = *(unsigned __int16 *)__p;
      do
      {
        if (v20 < v9 && v16 >= v18)
        {
          ++v20;
          uint64_t v22 = &v4[4 * v20];
          int v21 = v18;
          unint64_t v18 = *(unsigned __int16 *)v22;
          unsigned __int16 v19 = v17;
          unsigned __int16 v17 = *((_WORD *)v22 + 1);
        }
        unint64_t v23 = *(unsigned int *)&v2[4 * v20 - 4] * (unint64_t)(v16 - v21);
        if (v23 >= 0xFFFFFFFF) {
          LODWORD(v23) = -1;
        }
        *(_WORD *)(v1 + 584 + 2 * v16++) = v19 + ((v23 >> 15) & 1) + WORD1(v23);
      }
      while (v15 != v16);
      uint64_t v24 = v15;
    }
    else
    {
      uint64_t v24 = 0;
    }
    uint64_t v25 = 2 * v24;
    do
    {
      *(_WORD *)(v1 + 584 + v25) = v15;
      v25 += 2;
    }
    while (v25 != 0x20000);
  }
  else
  {
LABEL_17:
    uint64_t v12 = 0;
    int16x8_t v13 = (int16x8_t)xmmword_1DDBF8D50;
    v14.i64[0] = 0x8000800080008;
    v14.i64[1] = 0x8000800080008;
    do
    {
      *(int16x8_t *)(v1 + 584 + v12) = v13;
      int16x8_t v13 = vaddq_s16(v13, v14);
      v12 += 16;
    }
    while (v12 != 0x20000);
  }
  if (v2)
  {
    uint64_t v27 = v2;
    operator delete(v2);
    id v4 = (char *)__p;
  }
  if (v4)
  {
    uint64_t v30 = v4;
    operator delete(v4);
  }
}

void sub_1DDA1BE34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  if (a12) {
    operator delete(a12);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA1BE68(uint64_t a1, int a2, unsigned int a3)
{
  int v9 = a2;
  char v5 = malloc_type_malloc(a3 + 64, 0x5AC26551uLL);
  uint64_t v6 = *(void *)(a1 + 24);
  sub_1DDA18410(&v8, &v9);
  (*(void (**)(uint64_t, int *, void))(*(void *)v6 + 40))(v6, &v8, 0);
  (*(void (**)(void, void *, void))(**(void **)(a1 + 24) + 32))(*(void *)(a1 + 24), v5, a3);
  return v5;
}

void sub_1DDA1BF30(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    free(v1);
  }
  __cxa_end_catch();
  JUMPOUT(0x1DDA1BF18);
}

void sub_1DDA1BF54(os_signpost_id_t a1, uint64_t a2, int *a3, uint64_t a4, int *a5, unsigned __int8 *a6, uint64_t a7, uint64_t a8)
{
  v86[7] = *MEMORY[0x1E4F143B8];
  int16x8_t v14 = sub_1DDA83CFC();
  uint64_t v15 = v14;
  if (a1 + 1 >= 2 && os_signpost_enabled(v14))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v15, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CPanasonicHuffmanUnpacker::unpackTile", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v86[0] = MEMORY[0x1E4F143A8];
  v86[1] = 3221225472;
  v86[2] = sub_1DDA1C664;
  v86[3] = &unk_1E6D04A58;
  v86[4] = a1;
  unint64_t v16 = (void (**)(void))MEMORY[0x1E01C46E0](v86);
  if (qword_1EAB8AFB0 != -1) {
    dispatch_once(&qword_1EAB8AFB0, &unk_1F395A8C8);
  }
  if (!*(unsigned char *)(a1 + 304) || !*(unsigned char *)(a1 + 336))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  *(void *)buf = 0;
  v84 = 0;
  uint64_t v85 = 0;
  sub_1DDA1D908(buf, *(const void **)(a1 + 280), *(void *)(a1 + 288), (uint64_t)(*(void *)(a1 + 288) - *(void *)(a1 + 280)) >> 1);
  if (!*(unsigned char *)(a1 + 336)) {
    sub_1DDA1D8BC();
  }
  __p = 0;
  long long v81 = 0;
  uint64_t v82 = 0;
  sub_1DDA1D908(&__p, *(const void **)(a1 + 312), *(void *)(a1 + 320), (uint64_t)(*(void *)(a1 + 320) - *(void *)(a1 + 312)) >> 1);
  unsigned __int16 v17 = __p;
  unint64_t v18 = v81 - (unsigned char *)__p;
  if (v81 == __p)
  {
    int v21 = 0;
    unint64_t v20 = 0;
  }
  else
  {
    if (v18 >= 0x3FFFFFFFFFFFFFFFLL) {
      sub_1DDA17F78();
    }
    size_t v19 = 2 * v18;
    unint64_t v20 = (unsigned __int16 *)operator new(4 * v18);
    bzero(v20, v19 * 2);
    int v21 = (uint64_t *)&v20[v19];
  }
  uint64_t v22 = *(unsigned __int16 **)buf;
  if (v84 != *(unsigned __int16 **)buf)
  {
    int v23 = 0;
    unint64_t v24 = ((uint64_t)v84 - *(void *)buf) >> 1;
    uint64_t v25 = *(unsigned __int16 **)buf;
    do
    {
      unsigned __int16 v26 = *v25;
      v25 += 2;
      uint64_t v27 = &v20[4 * ((unsigned __int16)v23 >> 1)];
      unsigned __int16 *v27 = v26;
      v27[1] = v22[(unsigned __int16)v23 | 1];
      v27[2] = v17[(unsigned __int16)v23 >> 1];
      v27[3] = (unsigned __int16)v23 >> 1;
      v23 += 2;
    }
    while (v24 > (unsigned __int16)v23);
  }
  unint64_t v28 = ((char *)v21 - (char *)v20) >> 3;
  unint64_t v29 = 126 - 2 * __clz(v28);
  if (v21 == (uint64_t *)v20) {
    uint64_t v30 = 0;
  }
  else {
    uint64_t v30 = v29;
  }
  sub_1DDA1DA00((uint64_t)v20, v21, v30, 1);
  unint64_t v31 = 0;
  uint64_t v32 = 56;
  uint64_t v33 = a6;
  do
  {
    int v34 = *v33++;
    v31 |= (unint64_t)byte_1EAB8AFB8[v34] << v32;
    v32 -= 8;
  }
  while (v32 != -8);
  unint64_t v35 = a7 - (void)a6;
  if ((unint64_t)(a7 - (void)a6) < 3
    || ((v36 = a3[2], v37 = a3[3], unint64_t v38 = (int)v37 * (uint64_t)(int)v36, v39 = a5[1], v40 = v39 + a5[3] - 1, v39 <= v40)
      ? (BOOL v41 = v38 == 0)
      : (BOOL v41 = 1),
        v41 || v21 == (uint64_t *)v20))
  {
    if (!v20) {
      goto LABEL_81;
    }
  }
  else
  {
    unint64_t v42 = 0;
    unint64_t v43 = 0;
    uint64_t v44 = *a5;
    unint64_t v45 = (int)v39;
    unint64_t v46 = v40;
    unint64_t v76 = a5[2];
    unint64_t v48 = *a3;
    unint64_t v47 = a3[1];
    unint64_t v49 = v47 + v37;
    unint64_t v77 = v48 + v36;
    if (v28 <= 1) {
      uint64_t v50 = 1;
    }
    else {
      uint64_t v50 = v28;
    }
    uint64_t v51 = 63;
    unint64_t v52 = 2;
    unint64_t v53 = *a5;
    do
    {
      uint64_t v54 = v50;
      uint64_t v55 = v20 + 2;
      while (1)
      {
        uint64_t v56 = *(v55 - 2);
        int v57 = -1 << v56;
        unint64_t v58 = v51 - v56;
        if (((v31 >> (v58 + 1)) & ~v57) == *(v55 - 1)) {
          break;
        }
        v55 += 4;
        if (!--v54) {
          goto LABEL_80;
        }
      }
      if (v58 <= 0x1E)
      {
        unint64_t v59 = *(unsigned int *)&a6[4 * v52];
        uint64_t v60 = byte_1EAB8AFB8[*(_DWORD *)&a6[4 * v52++]];
        v58 += 32;
        unint64_t v31 = ((unint64_t)byte_1EAB8AFB8[BYTE2(v59)] << 8) | (((v31 << 16) | (v60 << 8) | byte_1EAB8AFB8[BYTE1(v59)]) << 16) | byte_1EAB8AFB8[v59 >> 24];
      }
      uint64_t v61 = v55[1];
      uint64_t v62 = *v55;
      uint64_t v63 = v61 - v62;
      if (v61)
      {
        unsigned int v64 = (((1 << v63) - 1) & (v31 >> (v58 - v63 + 1))) << v62;
        if (((v64 >> (v63 - 1)) & 1) == 0) {
          unsigned int v64 = v64 - (1 << v63) + 1;
        }
      }
      else
      {
        unsigned int v64 = 0;
      }
      if (v62) {
        int v65 = 1 << (v62 - 1);
      }
      else {
        int v65 = 0;
      }
      uint64_t v51 = v58 - v63;
      if (v58 - v63 <= 0x1E && v52 < v35)
      {
        unint64_t v67 = *(unsigned int *)&a6[4 * v52];
        uint64_t v68 = byte_1EAB8AFB8[*(_DWORD *)&a6[4 * v52++]];
        v51 += 32;
        unint64_t v31 = ((unint64_t)byte_1EAB8AFB8[BYTE2(v67)] << 8) | (((v31 << 16) | (v68 << 8) | byte_1EAB8AFB8[BYTE1(v67)]) << 16) | byte_1EAB8AFB8[v67 >> 24];
      }
      uint64_t v69 = v45 & 1 | (2 * (v53 & 1));
      if (v43 > 3)
      {
        int v70 = (char *)&v86[5] + 2 * v69;
        if (v53 - v44 <= 1) {
          int v70 = (char *)&v86[6] + 2 * v69;
        }
      }
      else
      {
        switch(v69)
        {
          case 1:
            int v70 = (char *)(a1 + 264);
            if (!*(unsigned char *)(a1 + 266)) {
              goto LABEL_78;
            }
            break;
          case 2:
            int v70 = (char *)(a1 + 268);
            if (!*(unsigned char *)(a1 + 270)) {
              goto LABEL_78;
            }
            break;
          case 3:
            int v70 = (char *)(a1 + 272);
            if (!*(unsigned char *)(a1 + 274)) {
              goto LABEL_78;
            }
            break;
          default:
            int v70 = (char *)(a1 + 260);
            if (!*(unsigned char *)(a1 + 262)) {
LABEL_78:
            }
              sub_1DDA1D8BC();
            return;
        }
      }
      int v71 = v64 + v65 + *(unsigned __int16 *)v70;
      if (v71 >= 0xFFFF) {
        LOWORD(v71) = -1;
      }
      if (v45 >= v47 && v45 < v49 && v53 >= v48 && v53 < v77)
      {
        *(_WORD *)(a2 + 2 * (v53 + (((v45 - v47) * a4) >> 1) - v48)) = *(_WORD *)(a8 + 2 * (unsigned __int16)v71);
        ++v42;
      }
      *((_WORD *)&v86[5] + v69) = v71;
      if (v53 - v44 <= 1) {
        *((_WORD *)&v86[6] + v69) = v71;
      }
      if (v45)
      {
        unint64_t v73 = v53 + 1 - v44;
        BOOL v74 = v73 >= v76;
        if (v73 < v76) {
          ++v53;
        }
        else {
          unint64_t v53 = v44;
        }
        uint64_t v72 = -1;
        if (v74) {
          uint64_t v72 = 1;
        }
      }
      else
      {
        uint64_t v72 = 1;
      }
      if (v52 >= v35) {
        break;
      }
      v45 += v72;
      if (v45 > v46) {
        break;
      }
      ++v43;
    }
    while (v42 < v38);
  }
LABEL_80:
  operator delete(v20);
LABEL_81:
  if (__p)
  {
    long long v81 = __p;
    operator delete(__p);
  }
  if (*(void *)buf)
  {
    v84 = *(unsigned __int16 **)buf;
    operator delete(*(void **)buf);
  }
  v16[2](v16);
}

void sub_1DDA1C5BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,void *a21,uint64_t a22)
{
  operator delete(v23);
  if (__p) {
    operator delete(__p);
  }
  if (a21) {
    operator delete(a21);
  }
  v22[2](v22);

  _Unwind_Resume(a1);
}

void sub_1DDA1C664(uint64_t a1)
{
  uint64_t v2 = sub_1DDA83CFC();
  uint64_t v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)char v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CPanasonicHuffmanUnpacker::unpackTile", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

void sub_1DDA1C6EC()
{
  for (uint64_t i = 0; i != 256; ++i)
  {
    int8x16_t v1 = (int8x16_t)vdupq_n_s32(i);
    *(uint8x8_t *)v1.i8 = vshl_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vshlq_u32((uint32x4_t)vandq_s8(v1, (int8x16_t)xmmword_1DDBF8EE0), (uint32x4_t)xmmword_1DDBF8F10), (int16x8_t)vshlq_u32((uint32x4_t)vandq_s8(v1, (int8x16_t)xmmword_1DDBF8EF0), (uint32x4_t)xmmword_1DDBF8F00))), (uint8x8_t)0x1020304050607);
    byte_1EAB8AFB8[i] = v1.i8[0] | v1.i8[4] | ((v1.i32[0] | v1.i32[1]) >> 16) | ((unsigned __int16)(v1.i16[0] | v1.i16[2] | ((v1.i32[0] | v1.i32[1]) >> 16)) >> 8);
  }
}

void sub_1DDA1C768(os_signpost_id_t a1)
{
  uint64_t v2 = sub_1DDA83CFC();
  uint64_t v3 = v2;
  if (a1 + 1 >= 2 && os_signpost_enabled(v2))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CPanasonicHuffmanUnpacker", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v38[0] = MEMORY[0x1E4F143A8];
  v38[1] = 3221225472;
  v38[2] = sub_1DDA1CDC0;
  v38[3] = &unk_1E6D04A58;
  v38[4] = a1;
  os_signpost_id_t v4 = (void (**)(void))MEMORY[0x1E01C46E0](v38);
  if (!*(unsigned char *)(a1 + 216)
    || !*(unsigned char *)(a1 + 248)
    || !*(unsigned char *)(a1 + 258)
    || !*(unsigned char *)(a1 + 262)
    || !*(unsigned char *)(a1 + 266)
    || !*(unsigned char *)(a1 + 270)
    || !*(unsigned char *)(a1 + 274)
    || !*(unsigned char *)(a1 + 346)
    || !*(unsigned char *)(a1 + 350)
    || !*(unsigned char *)(a1 + 376)
    || !*(unsigned char *)(a1 + 408)
    || !*(unsigned char *)(a1 + 440)
    || !*(unsigned char *)(a1 + 472)
    || !*(unsigned char *)(a1 + 504))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  unsigned int v5 = *(unsigned __int16 *)(a1 + 344);
  unsigned int v6 = *(unsigned __int16 *)(a1 + 348);
  int v7 = *(_DWORD *)(a1 + 44);
  int v8 = *(_DWORD *)(a1 + 48);
  int v9 = (*(uint64_t (**)(os_signpost_id_t))(*(void *)a1 + 40))(a1);
  if (*(void *)(a1 + 536) - *(void *)(a1 + 528) != *(void *)(a1 + 560) - *(void *)(a1 + 552)
    || (v7 - 100000) < 0xFFFE7961
    || (v8 - 100000) < 0xFFFE7961)
  {
    uint64_t v27 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v27, "RawCameraException");
    __cxa_throw(v27, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  int v10 = v9;
  group = dispatch_group_create();
  unint64_t v28 = dispatch_queue_create("Panasonic Huffman Tile Unpacker Queue", MEMORY[0x1E4F14430]);
  uint64_t v11 = sub_1DDAA5B9C(a1);
  unint64_t v12 = v6 * (unint64_t)v5;
  if (v12)
  {
    uint64_t v13 = v11;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    do
    {
      if (!*(unsigned char *)(a1 + 376)) {
        sub_1DDA1D8BC();
      }
      if (!*(unsigned char *)(a1 + 440)) {
        sub_1DDA1D8BC();
      }
      int v16 = *(_DWORD *)(*(void *)(a1 + 416) + v15);
      int v18 = v16 + 7;
      BOOL v17 = v16 < -7;
      int v19 = v16 + 14;
      if (!v17) {
        int v19 = v18;
      }
      int v20 = v19 >> 3;
      int v21 = (char *)sub_1DDA1BE68(a1, *(_DWORD *)(*(void *)(a1 + 352) + v15), v19 >> 3);
      if (v21)
      {
        if (!*(unsigned char *)(a1 + 408)) {
          sub_1DDA1D8BC();
        }
        if (!*(unsigned char *)(a1 + 472)) {
          sub_1DDA1D8BC();
        }
        if (!*(unsigned char *)(a1 + 504)) {
          sub_1DDA1D8BC();
        }
        uint64_t v22 = (__int16 *)(*(void *)(a1 + 384) + v15);
        __int16 v23 = *v22;
        LOWORD(v22) = v22[1];
        __int16 v24 = *(_WORD *)(*(void *)(a1 + 448) + v14);
        __int16 v25 = *(_WORD *)(*(void *)(a1 + 480) + v14);
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 3221225472;
        block[2] = sub_1DDA1CE48;
        block[3] = &unk_1E6D04B28;
        block[4] = a1;
        void block[5] = v13;
        int v31 = v7;
        int v32 = v8;
        int v33 = v10;
        __int16 v34 = v23;
        __int16 v35 = (__int16)v22;
        __int16 v36 = v24;
        __int16 v37 = v25;
        block[6] = v21;
        void block[7] = &v21[v20];
        dispatch_group_async(group, v28, block);
      }
      v15 += 4;
      v14 += 2;
      --v12;
    }
    while (v12);
  }
  dispatch_group_wait(group, 0xFFFFFFFFFFFFFFFFLL);

  v4[2](v4);
}

void sub_1DDA1CD0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA1CDC0(uint64_t a1)
{
  uint64_t v2 = sub_1DDA83CFC();
  uint64_t v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)unsigned int v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CPanasonicHuffmanUnpacker", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

void sub_1DDA1CE48(uint64_t a1)
{
  os_signpost_id_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  int v4 = *(_DWORD *)(a1 + 64);
  int v5 = *(_DWORD *)(a1 + 68);
  uint64_t v11 = 0;
  sub_1DDA18218(&v12, v4, v5);
  uint64_t v6 = 2 * (*(_DWORD *)(a1 + 72) * *(_DWORD *)(a1 + 64));
  uint32x4_t v10 = vmovl_u16(*(uint16x4_t *)(a1 + 76));
  int v7 = *(unsigned __int8 **)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = sub_1DDA1BBB4(v2);
  sub_1DDA1BF54(v2, v3, (int *)&v11, v6, v10.i32, v7, v8, v9);
  free(*(void **)(a1 + 48));
}

char *sub_1DDA1CEF0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  *(_DWORD *)(a1 + 516) = a2;
  *(_DWORD *)(a1 + 520) = a3;
  int v7 = (char *)(a1 + 528);
  if (v7 != (char *)a4) {
    sub_1DDA17E28(v7, *(char **)a4, *(void *)(a4 + 8), (uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 2);
  }
  uint64_t result = (char *)(a1 + 552);
  if (a1 + 552 != a5)
  {
    uint64_t v9 = *(char **)a5;
    uint64_t v10 = *(void *)(a5 + 8);
    unint64_t v11 = (v10 - *(void *)a5) >> 2;
    return sub_1DDA17E28(result, v9, v10, v11);
  }
  return result;
}

uint64_t sub_1DDA1CF6C(_DWORD *a1)
{
  int v1 = a1[17];
  if (((a1[144] + 2 * v1) & 0xFLL) != 0) {
    return (2 * (a1[15] + 2 * v1) + 31) & 0x3FFFFFFE0;
  }
  else {
    return 2 * (a1[144] + 2 * v1);
  }
}

void sub_1DDA1CFA4(os_signpost_id_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  uint64_t v6 = sub_1DDA83CFC();
  int v7 = v6;
  if (a1 + 1 >= 2 && os_signpost_enabled(v6))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v7, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CPanasonicHuffmanUnpacker", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v40[0] = MEMORY[0x1E4F143A8];
  v40[1] = 3221225472;
  v40[2] = sub_1DDA1D694;
  v40[3] = &unk_1E6D04A58;
  v40[4] = a1;
  uint64_t v8 = MEMORY[0x1E01C46E0](v40);
  if (!*(unsigned char *)(a1 + 216)
    || !*(unsigned char *)(a1 + 248)
    || !*(unsigned char *)(a1 + 258)
    || !*(unsigned char *)(a1 + 262)
    || !*(unsigned char *)(a1 + 266)
    || !*(unsigned char *)(a1 + 270)
    || !*(unsigned char *)(a1 + 274)
    || !*(unsigned char *)(a1 + 346)
    || !*(unsigned char *)(a1 + 350)
    || !*(unsigned char *)(a1 + 376)
    || !*(unsigned char *)(a1 + 408)
    || !*(unsigned char *)(a1 + 440)
    || !*(unsigned char *)(a1 + 472)
    || !*(unsigned char *)(a1 + 504))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  int v9 = *(_DWORD *)(a1 + 44);
  if ((v9 - 100000) < 0xFFFE7961
    || (int v10 = *(_DWORD *)(a1 + 48), (v10 - 100000) < 0xFFFE7961))
  {
    uint64_t v30 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v30, "RawCameraException");
    __cxa_throw(v30, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  unint64_t v11 = *(unsigned __int16 *)(a1 + 348) * (unint64_t)*(unsigned __int16 *)(a1 + 344);
  if (v11 >> 5 >= 0x271)
  {
    int v31 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v31, "RawCameraException");
    __cxa_throw(v31, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  int v32 = (void (**)(void))v8;
  group = dispatch_group_create();
  __int16 v35 = dispatch_queue_create("Panasonic Huffman Tile Unpacker Queue", MEMORY[0x1E4F14430]);
  if (v11)
  {
    uint64_t v12 = 0;
    unsigned int v13 = 1;
    do
    {
      if (!*(unsigned char *)(a1 + 376)) {
        sub_1DDA1D8BC();
      }
      if (!*(unsigned char *)(a1 + 440)) {
        sub_1DDA1D8BC();
      }
      int v14 = *(_DWORD *)(*(void *)(a1 + 416) + 4 * v12);
      int v15 = v14 + 7;
      BOOL v21 = v14 < -7;
      int v16 = v14 + 14;
      if (v21) {
        int v17 = v16;
      }
      else {
        int v17 = v15;
      }
      if (!*(unsigned char *)(a1 + 408)) {
        sub_1DDA1D8BC();
      }
      if (!*(unsigned char *)(a1 + 472)) {
        sub_1DDA1D8BC();
      }
      if (!*(unsigned char *)(a1 + 504)) {
        sub_1DDA1D8BC();
      }
      uint64_t v18 = *(void *)(a1 + 384);
      int v19 = *(unsigned __int16 *)(v18 + 2 * (v13 - 1));
      int v20 = *(unsigned __int16 *)(*(void *)(a1 + 448) + 2 * v12);
      BOOL v21 = v9 <= v19 || v9 < v20;
      if (v21
        || ((int v22 = *(unsigned __int16 *)(v18 + 2 * v13),
             int v23 = *(unsigned __int16 *)(*(void *)(a1 + 480) + 2 * v12),
             v10 > v22)
          ? (BOOL v24 = v10 < v23)
          : (BOOL v24 = 1),
            v24))
      {
        unint64_t v28 = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E01C3B90](v28, "RawCameraException");
        __cxa_throw(v28, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      int v25 = *(_DWORD *)(*(void *)(a1 + 352) + 4 * v12);
      *(_DWORD *)buf = v19;
      *(_DWORD *)&buf[4] = v22;
      *(_DWORD *)&uint8_t buf[8] = v20;
      *(_DWORD *)&buf[12] = v23;
      if (sub_1DDB56B98((int *)buf, a3))
      {
        signed int v26 = v17 >> 3;
        uint64_t v27 = (char *)sub_1DDA1BE68(a1, v25, v26);
        if (v27)
        {
          block[0] = MEMORY[0x1E4F143A8];
          block[1] = 3221225472;
          block[2] = sub_1DDA1D71C;
          block[3] = &unk_1E6D04B48;
          block[4] = a1;
          void block[5] = a2;
          block[6] = a3;
          void block[7] = a4;
          long long v38 = *(_OWORD *)buf;
          void block[8] = v27;
          void block[9] = &v27[v26];
          dispatch_group_async(group, v35, block);
        }
      }
      ++v12;
      v13 += 2;
    }
    while (v11 != v12);
  }
  dispatch_group_wait(group, 0xFFFFFFFFFFFFFFFFLL);

  v32[2](v32);
}

void sub_1DDA1D5C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA1D694(uint64_t a1)
{
  os_signpost_id_t v2 = sub_1DDA83CFC();
  uint64_t v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)int v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CPanasonicHuffmanUnpacker", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

void sub_1DDA1D71C(void *a1)
{
  os_signpost_id_t v2 = a1[4];
  uint64_t v3 = a1[5];
  os_signpost_id_t v4 = (int *)a1[6];
  uint64_t v5 = a1[7];
  uint64_t v6 = (int *)(a1 + 10);
  int v7 = (unsigned __int8 *)a1[8];
  uint64_t v8 = a1[9];
  uint64_t v9 = sub_1DDA1BBB4(v2);
  sub_1DDA1BF54(v2, v3, v4, v5, v6, v7, v8, v9);
  int v10 = (void *)a1[8];

  free(v10);
}

void *sub_1DDA1D7B0(void *a1)
{
  *a1 = &unk_1F395A8F8;
  os_signpost_id_t v2 = (void *)a1[69];
  if (v2)
  {
    a1[70] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[66];
  if (v3)
  {
    a1[67] = v3;
    operator delete(v3);
  }
  sub_1DDA1E3C4((uint64_t)(a1 + 24));

  return sub_1DDA18384(a1);
}

void sub_1DDA1D828(void *a1)
{
  *a1 = &unk_1F395A8F8;
  os_signpost_id_t v2 = (void *)a1[69];
  if (v2)
  {
    a1[70] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[66];
  if (v3)
  {
    a1[67] = v3;
    operator delete(v3);
  }
  sub_1DDA1E3C4((uint64_t)(a1 + 24));
  sub_1DDA18384(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA1D8B4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 512);
}

void sub_1DDA1D8BC()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = MEMORY[0x1E4FBA4F8] + 16;
  __cxa_throw(exception, MEMORY[0x1E4FBA348], MEMORY[0x1E4FBA1F0]);
}

void *sub_1DDA1D908(void *result, const void *a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_1DDA1ACCC(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1DDA1D968(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA1D984(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_1DDA17F34(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1DDA1D9E4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA1DA00(uint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t v9 = (uint64_t *)result;
  while (2)
  {
    int v10 = v9;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v9 = v10;
          uint64_t v11 = (char *)a2 - (char *)v10;
          unint64_t v12 = a2 - v10;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0uLL:
              case 1uLL:
                return result;
              case 2uLL:
                uint64_t v40 = *v10;
                if ((unsigned __int16)*(a2 - 1) < (unsigned __int16)*v10)
                {
                  *int v10 = *(a2 - 1);
                  *(a2 - 1) = v40;
                }
                break;
              case 3uLL:
                uint64_t result = (uint64_t)sub_1DDA1E0C8(v10, v10 + 1, a2 - 1);
                break;
              case 4uLL:
                uint64_t result = (uint64_t)sub_1DDA1E338(v10, v10 + 1, v10 + 2, a2 - 1);
                break;
              case 5uLL:
                BOOL v41 = v10 + 1;
                unint64_t v42 = v10 + 2;
                unint64_t v43 = v10 + 3;
                uint64_t result = (uint64_t)sub_1DDA1E338(v10, v10 + 1, v10 + 2, v10 + 3);
                uint64_t v44 = v10[3];
                if ((unsigned __int16)*(a2 - 1) < (unsigned __int16)v44)
                {
                  uint64_t *v43 = *(a2 - 1);
                  *(a2 - 1) = v44;
                  uint64_t v45 = *v43;
                  uint64_t v46 = *v42;
                  unsigned int v47 = (unsigned __int16)*v43;
                  if (v47 < (unsigned __int16)*v42)
                  {
                    *unint64_t v42 = v45;
                    uint64_t *v43 = v46;
                    uint64_t v48 = *v41;
                    if (v47 < (unsigned __int16)*v41)
                    {
                      v10[1] = v45;
                      v10[2] = v48;
                      uint64_t v49 = *v10;
                      if (v47 < (unsigned __int16)*v10)
                      {
                        *int v10 = v45;
                        v10[1] = v49;
                      }
                    }
                  }
                }
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            uint64_t v50 = v10 + 1;
            BOOL v52 = v10 == a2 || v50 == a2;
            if (a4)
            {
              if (!v52)
              {
                uint64_t v53 = 0;
                uint64_t v54 = v10;
                do
                {
                  uint64_t v56 = *v54;
                  uint64_t v55 = v54[1];
                  uint64_t v54 = v50;
                  if ((unsigned __int16)v55 < (unsigned __int16)v56)
                  {
                    uint64_t v57 = v53;
                    while (1)
                    {
                      *(uint64_t *)((char *)v10 + v57 + 8) = v56;
                      if (!v57) {
                        break;
                      }
                      uint64_t v56 = *(uint64_t *)((char *)v10 + v57 - 8);
                      v57 -= 8;
                      if ((unsigned __int16)v55 >= (unsigned __int16)v56)
                      {
                        unint64_t v58 = (uint64_t *)((char *)v10 + v57 + 8);
                        goto LABEL_85;
                      }
                    }
                    unint64_t v58 = v10;
LABEL_85:
                    uint64_t *v58 = v55;
                  }
                  uint64_t v50 = v54 + 1;
                  v53 += 8;
                }
                while (v54 + 1 != a2);
              }
            }
            else if (!v52)
            {
              do
              {
                uint64_t v89 = *v9;
                uint64_t v88 = v9[1];
                uint64_t v9 = v50;
                if ((unsigned __int16)v88 < (unsigned __int16)v89)
                {
                  uint64_t v90 = v50;
                  do
                  {
                    *uint64_t v90 = v89;
                    uint64_t v89 = *(v90 - 2);
                    --v90;
                  }
                  while ((unsigned __int16)v88 < (unsigned __int16)v89);
                  *uint64_t v90 = v88;
                }
                ++v50;
              }
              while (v9 + 1 != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v10 != a2)
            {
              int64_t v59 = (v12 - 2) >> 1;
              int64_t v60 = v59;
              do
              {
                int64_t v61 = v60;
                if (v59 >= v60)
                {
                  uint64_t v62 = (2 * v60) | 1;
                  uint64_t v63 = &v10[v62];
                  uint64_t v64 = *v63;
                  if (2 * v61 + 2 < (uint64_t)v12)
                  {
                    uint64_t result = (unsigned __int16)*v63;
                    if (result < (unsigned __int16)v63[1])
                    {
                      uint64_t v64 = v63[1];
                      ++v63;
                      uint64_t v62 = 2 * v61 + 2;
                    }
                  }
                  int v65 = &v10[v61];
                  uint64_t v66 = *v65;
                  unsigned int v67 = (unsigned __int16)*v65;
                  if (v67 <= (unsigned __int16)v64)
                  {
                    do
                    {
                      uint64_t v68 = v63;
                      *int v65 = v64;
                      if (v59 < v62) {
                        break;
                      }
                      uint64_t result = (2 * v62) | 1;
                      uint64_t v63 = &v10[result];
                      uint64_t v69 = 2 * v62 + 2;
                      uint64_t v64 = *v63;
                      if (v69 < (uint64_t)v12 && (unsigned __int16)*v63 < (unsigned __int16)v63[1])
                      {
                        uint64_t v64 = v63[1];
                        ++v63;
                        uint64_t result = v69;
                      }
                      int v65 = v68;
                      uint64_t v62 = result;
                    }
                    while (v67 <= (unsigned __int16)v64);
                    *uint64_t v68 = v66;
                  }
                }
                int64_t v60 = v61 - 1;
              }
              while (v61);
              uint64_t v70 = (unint64_t)v11 >> 3;
              do
              {
                uint64_t v71 = 0;
                uint64_t v72 = *v10;
                unint64_t v73 = v10;
                do
                {
                  BOOL v74 = &v73[v71];
                  uint64_t v77 = v74[1];
                  uint64_t v75 = v74 + 1;
                  uint64_t v76 = v77;
                  uint64_t v78 = (2 * v71) | 1;
                  uint64_t v79 = 2 * v71 + 2;
                  if (v79 < v70)
                  {
                    uint64_t result = (unsigned __int16)v76;
                    if ((unsigned __int16)v76 < (unsigned __int16)v75[1])
                    {
                      uint64_t v76 = v75[1];
                      ++v75;
                      uint64_t v78 = v79;
                    }
                  }
                  *unint64_t v73 = v76;
                  unint64_t v73 = v75;
                  uint64_t v71 = v78;
                }
                while (v78 <= (uint64_t)((unint64_t)(v70 - 2) >> 1));
                if (v75 == --a2)
                {
                  *uint64_t v75 = v72;
                }
                else
                {
                  *uint64_t v75 = *a2;
                  *a2 = v72;
                  uint64_t v80 = (char *)v75 - (char *)v10 + 8;
                  if (v80 >= 9)
                  {
                    unint64_t v81 = (((unint64_t)v80 >> 3) - 2) >> 1;
                    uint64_t v82 = &v10[v81];
                    uint64_t v83 = *v82;
                    uint64_t v84 = *v75;
                    unsigned int v85 = (unsigned __int16)*v75;
                    if (v85 > (unsigned __int16)*v82)
                    {
                      do
                      {
                        uint64_t v86 = v82;
                        *uint64_t v75 = v83;
                        if (!v81) {
                          break;
                        }
                        unint64_t v81 = (v81 - 1) >> 1;
                        uint64_t v82 = &v10[v81];
                        uint64_t v83 = *v82;
                        uint64_t v75 = v86;
                      }
                      while (v85 > (unsigned __int16)*v82);
                      *uint64_t v86 = v84;
                    }
                  }
                }
              }
              while (v70-- > 2);
            }
            return result;
          }
          unint64_t v13 = v12 >> 1;
          int v14 = &v10[v12 >> 1];
          if ((unint64_t)v11 >= 0x401)
          {
            sub_1DDA1E0C8(v9, &v9[v12 >> 1], a2 - 1);
            sub_1DDA1E0C8(v9 + 1, v14 - 1, a2 - 2);
            sub_1DDA1E0C8(v9 + 2, &v9[v13 + 1], a2 - 3);
            uint64_t result = (uint64_t)sub_1DDA1E0C8(v14 - 1, v14, &v9[v13 + 1]);
            uint64_t v15 = *v9;
            *uint64_t v9 = *v14;
            uint64_t *v14 = v15;
          }
          else
          {
            uint64_t result = (uint64_t)sub_1DDA1E0C8(&v9[v12 >> 1], v9, a2 - 1);
          }
          --a3;
          uint64_t v16 = *v9;
          if (a4) {
            break;
          }
          unsigned int v17 = (unsigned __int16)*v9;
          if (*((unsigned __int16 *)v9 - 4) < (unsigned __int16)v16) {
            goto LABEL_13;
          }
          if (v17 >= *((unsigned __int16 *)a2 - 4))
          {
            int v32 = v9 + 1;
            do
            {
              int v10 = v32;
              if (v32 >= a2) {
                break;
              }
              ++v32;
            }
            while (v17 >= *(unsigned __int16 *)v10);
          }
          else
          {
            int v10 = v9;
            do
              unsigned int v31 = *((unsigned __int16 *)v10++ + 4);
            while (v17 >= v31);
          }
          int v33 = a2;
          if (v10 < a2)
          {
            int v33 = a2;
            do
              unsigned int v34 = *((unsigned __int16 *)v33-- - 4);
            while (v17 < v34);
          }
          if (v10 < v33)
          {
            uint64_t v35 = *v10;
            uint64_t v36 = *v33;
            do
            {
              *int v10 = v36;
              *int v33 = v35;
              do
              {
                uint64_t v37 = v10[1];
                ++v10;
                uint64_t v35 = v37;
              }
              while (v17 >= (unsigned __int16)v37);
              do
              {
                uint64_t v38 = *--v33;
                uint64_t v36 = v38;
              }
              while (v17 < (unsigned __int16)v38);
            }
            while (v10 < v33);
          }
          unsigned int v39 = v10 - 1;
          BOOL v4 = v10 - 1 >= v9;
          BOOL v5 = v10 - 1 == v9;
          if (v10 - 1 != v9) {
            *uint64_t v9 = *v39;
          }
          a4 = 0;
          *unsigned int v39 = v16;
        }
        unsigned int v17 = (unsigned __int16)*v9;
LABEL_13:
        uint64_t v18 = 0;
        do
          uint64_t v19 = v9[++v18];
        while (v17 > (unsigned __int16)v19);
        int v20 = &v9[v18];
        BOOL v21 = a2;
        if (v18 == 1)
        {
          BOOL v21 = a2;
          do
          {
            if (v20 >= v21) {
              break;
            }
            unsigned int v23 = *((unsigned __int16 *)v21-- - 4);
          }
          while (v23 >= v17);
        }
        else
        {
          do
            unsigned int v22 = *((unsigned __int16 *)v21-- - 4);
          while (v22 >= v17);
        }
        if (v20 >= v21)
        {
          unint64_t v29 = v20 - 1;
        }
        else
        {
          uint64_t v24 = *v21;
          int v25 = &v9[v18];
          signed int v26 = v21;
          do
          {
            *int v25 = v24;
            *signed int v26 = v19;
            do
            {
              uint64_t v27 = v25[1];
              ++v25;
              uint64_t v19 = v27;
            }
            while (v17 > (unsigned __int16)v27);
            do
            {
              uint64_t v28 = *--v26;
              uint64_t v24 = v28;
            }
            while (v17 <= (unsigned __int16)v28);
          }
          while (v25 < v26);
          unint64_t v29 = v25 - 1;
        }
        if (v29 != v9) {
          *uint64_t v9 = *v29;
        }
        *unint64_t v29 = v16;
        if (v20 >= v21) {
          break;
        }
LABEL_34:
        uint64_t result = sub_1DDA1DA00(v9, v29, a3, a4 & 1);
        a4 = 0;
        int v10 = v29 + 1;
      }
      BOOL v30 = sub_1DDA1E148(v9, v29);
      int v10 = v29 + 1;
      uint64_t result = sub_1DDA1E148(v29 + 1, a2);
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_34;
      }
    }
    a2 = v29;
    if (!v30) {
      continue;
    }
    return result;
  }
}

uint64_t *sub_1DDA1E0C8(uint64_t *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *result;
  unsigned int v5 = (unsigned __int16)*a2;
  uint64_t v6 = *a3;
  unsigned int v7 = (unsigned __int16)*a3;
  if (v5 >= (unsigned __int16)*result)
  {
    if (v7 < v5)
    {
      *a2 = v6;
      *a3 = v3;
      uint64_t v8 = *result;
      if ((unsigned __int16)*a2 < (unsigned __int16)*result)
      {
        *uint64_t result = *a2;
        *a2 = v8;
      }
    }
  }
  else
  {
    if (v7 >= v5)
    {
      unsigned int v9 = (unsigned __int16)*result;
      *uint64_t result = v3;
      *a2 = v4;
      if (v9 <= (unsigned __int16)*a3) {
        return result;
      }
      *a2 = *a3;
    }
    else
    {
      *uint64_t result = v6;
    }
    *a3 = v4;
  }
  return result;
}

BOOL sub_1DDA1E148(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = *a1;
      if ((unsigned __int16)*(a2 - 1) < (unsigned __int16)*a1)
      {
        *a1 = *(a2 - 1);
        *(a2 - 1) = v6;
      }
      return result;
    case 3:
      sub_1DDA1E0C8(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      sub_1DDA1E338(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      unsigned int v17 = a1 + 1;
      uint64_t v18 = a1 + 2;
      uint64_t v19 = a1 + 3;
      sub_1DDA1E338(a1, a1 + 1, a1 + 2, a1 + 3);
      uint64_t v20 = a1[3];
      if ((unsigned __int16)*(a2 - 1) < (unsigned __int16)v20)
      {
        *uint64_t v19 = *(a2 - 1);
        *(a2 - 1) = v20;
        uint64_t v21 = *v19;
        uint64_t v22 = *v18;
        unsigned int v23 = (unsigned __int16)*v19;
        if (v23 < (unsigned __int16)*v18)
        {
          *uint64_t v18 = v21;
          *uint64_t v19 = v22;
          uint64_t v24 = *v17;
          if (v23 < (unsigned __int16)*v17)
          {
            a1[1] = v21;
            a1[2] = v24;
            uint64_t v25 = *a1;
            if (v23 < (unsigned __int16)*a1)
            {
              *a1 = v21;
              a1[1] = v25;
            }
          }
        }
      }
      return 1;
    default:
      unsigned int v7 = a1 + 2;
      sub_1DDA1E0C8(a1, a1 + 1, a1 + 2);
      uint64_t v8 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v9 = 0;
      uint64_t v10 = 24;
      break;
  }
  while (1)
  {
    uint64_t v11 = *v8;
    uint64_t v12 = *v7;
    unsigned int v13 = (unsigned __int16)*v8;
    if (v13 < (unsigned __int16)*v7)
    {
      uint64_t v14 = v10;
      while (1)
      {
        *(uint64_t *)((char *)a1 + v14) = v12;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        uint64_t v12 = *(uint64_t *)((char *)a1 + v14 - 16);
        v14 -= 8;
        if (v13 >= (unsigned __int16)v12)
        {
          uint64_t v16 = (uint64_t *)((char *)a1 + v15);
          goto LABEL_13;
        }
      }
      uint64_t v16 = a1;
LABEL_13:
      *uint64_t v16 = v11;
      if (++v9 == 8) {
        return v8 + 1 == a2;
      }
    }
    unsigned int v7 = v8;
    v10 += 8;
    if (++v8 == a2) {
      return 1;
    }
  }
}

uint64_t *sub_1DDA1E338(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  BOOL result = sub_1DDA1E0C8(a1, a2, a3);
  uint64_t v9 = *a3;
  if ((unsigned __int16)*a4 < (unsigned __int16)*a3)
  {
    *a3 = *a4;
    *a4 = v9;
    uint64_t v10 = *a2;
    if ((unsigned __int16)*a3 < (unsigned __int16)*a2)
    {
      *a2 = *a3;
      *a3 = v10;
      uint64_t v11 = *a1;
      if ((unsigned __int16)*a2 < (unsigned __int16)*a1)
      {
        *a1 = *a2;
        *a2 = v11;
      }
    }
  }
  return result;
}

uint64_t sub_1DDA1E3C4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 312))
  {
    os_signpost_id_t v2 = *(void **)(a1 + 288);
    if (v2)
    {
      *(void *)(a1 + 296) = v2;
      operator delete(v2);
    }
  }
  if (*(unsigned char *)(a1 + 280))
  {
    uint64_t v3 = *(void **)(a1 + 256);
    if (v3)
    {
      *(void *)(a1 + 264) = v3;
      operator delete(v3);
    }
  }
  if (*(unsigned char *)(a1 + 248))
  {
    uint64_t v4 = *(void **)(a1 + 224);
    if (v4)
    {
      *(void *)(a1 + 232) = v4;
      operator delete(v4);
    }
  }
  if (*(unsigned char *)(a1 + 216))
  {
    unsigned int v5 = *(void **)(a1 + 192);
    if (v5)
    {
      *(void *)(a1 + 200) = v5;
      operator delete(v5);
    }
  }
  if (*(unsigned char *)(a1 + 184))
  {
    uint64_t v6 = *(void **)(a1 + 160);
    if (v6)
    {
      *(void *)(a1 + 168) = v6;
      operator delete(v6);
    }
  }
  if (*(unsigned char *)(a1 + 144))
  {
    unsigned int v7 = *(void **)(a1 + 120);
    if (v7)
    {
      *(void *)(a1 + 128) = v7;
      operator delete(v7);
    }
  }
  if (*(unsigned char *)(a1 + 112))
  {
    uint64_t v8 = *(void **)(a1 + 88);
    if (v8)
    {
      *(void *)(a1 + 96) = v8;
      operator delete(v8);
    }
  }
  if (*(unsigned char *)(a1 + 56))
  {
    uint64_t v9 = *(void **)(a1 + 32);
    if (v9)
    {
      *(void *)(a1 + 40) = v9;
      operator delete(v9);
    }
  }
  if (*(unsigned char *)(a1 + 24))
  {
    uint64_t v10 = *(void **)a1;
    if (*(void *)a1)
    {
      *(void *)(a1 + 8) = v10;
      operator delete(v10);
    }
  }
  return a1;
}

void sub_1DDA1E4C0(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = a1;
  sub_1DDA25CBC(&v3, a2);
}

void sub_1DDA1E508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

__CFString *sub_1DDA1E51C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a1;
  if (*(char *)(a1 + 23) < 0 && (uint64_t v5 = *(void *)a1) == 0)
  {
    uint64_t v6 = &stru_1F398F7F8;
  }
  else
  {
    objc_msgSend_stringWithUTF8String_(NSString, a2, v5, a4, a5);
    uint64_t v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }

  return v6;
}

void *sub_1DDA1E570(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v8 = v3;
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395A9F0;
  if (v3)
  {
    uint64_t v9 = objc_msgSend_mutableCopy(v3, v4, v5, v6, v7);
  }
  else
  {
    uint64_t v9 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v4, v5, v6, v7);
  }
  uint64_t v10 = (void *)a1[1];
  a1[1] = v9;

  return a1;
}

void sub_1DDA1E5F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA1E614(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = MEMORY[0x1E01C46E0](a2);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1DDA1E654(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v2 = (*(void (**)(uint64_t, __CFString *))(v1 + 16))(v1, @"methodNumber");
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    uint64_t v10 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v10, "RawCameraException");
    __cxa_throw(v10, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v7 = objc_msgSend_shortValue(v2, v3, v4, v5, v6);

  return v7;
}

void sub_1DDA1E740(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA1E774(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _WORD **a6@<X8>)
{
  __int16 v11 = 0;
  uint64_t v8 = (char *)objc_msgSend_UTF8String(off_1EAB8AAB8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v8);
  sub_1DDA1E974(a1, (uint64_t)__p, &v11);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  sub_1DDA24A4C(a6, 4, &v11);
  sub_1DDA1A880(__p, "black0");
  if (a6[1] == *a6) {
    sub_1DDA24AD0();
  }
  sub_1DDA1E974(a1, (uint64_t)__p, *a6);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  sub_1DDA1A880(__p, "black1");
  if ((unint64_t)((char *)a6[1] - (char *)*a6) <= 2) {
    sub_1DDA24AD0();
  }
  sub_1DDA1E974(a1, (uint64_t)__p, *a6 + 1);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  sub_1DDA1A880(__p, "black2");
  if ((unint64_t)((char *)a6[1] - (char *)*a6) <= 4) {
    sub_1DDA24AD0();
  }
  sub_1DDA1E974(a1, (uint64_t)__p, *a6 + 2);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  sub_1DDA1A880(__p, "black3");
  if ((unint64_t)((char *)a6[1] - (char *)*a6) <= 6) {
    sub_1DDA24AD0();
  }
  sub_1DDA1E974(a1, (uint64_t)__p, *a6 + 3);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1DDA1E914(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v16 = *(void **)v14;
  if (*(void *)v14)
  {
    *(void *)(v14 + 8) = v16;
    operator delete(v16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA1E974(uint64_t a1, uint64_t a2, _WORD *a3)
{
  uint64_t v4 = sub_1DDA21E4C(a1, a2);
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  if (isKindOfClass)
  {
    uint64_t v10 = objc_msgSend_longLongValue(v4, v5, v6, v7, v8);
    uint64_t v11 = 0xFFFFLL;
    if (v10 < 0xFFFF) {
      uint64_t v11 = v10;
    }
    *a3 = v11 & ~(unsigned __int16)(v11 >> 63);
  }

  return isKindOfClass & 1;
}

void sub_1DDA1E9F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA1EA04(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int16 v10 = 4095;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AAC0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1E974(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA1EA70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA1EA8C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 1.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AAC8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA1EAF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA1EB14(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_1DDA21E4C(a1, a2);
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  if (isKindOfClass)
  {
    objc_msgSend_doubleValue(v4, v5, v6, v7, v8);
    *a3 = v10;
  }

  return isKindOfClass & 1;
}

void sub_1DDA1EB7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA1EB8C(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  __int16 v33 = 4095;
  uint64_t v8 = (char *)objc_msgSend_UTF8String(off_1EAB8AAD0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v8);
  sub_1DDA1E974(a1, (uint64_t)__p, &v33);
  if (v32 < 0) {
    operator delete(__p[0]);
  }
  sub_1DDA24A4C(a6, 4, &v33);
  unsigned int v13 = (char *)objc_msgSend_UTF8String(off_1EAB8AAD8[0], v9, v10, v11, v12);
  sub_1DDA1A880(__p, v13);
  int v14 = sub_1DDA1E974(a1, (uint64_t)__p, (_WORD *)*a6);
  int v19 = v14;
  if (v32 < 0)
  {
    operator delete(__p[0]);
    if (!v19) {
      return;
    }
  }
  else if (!v14)
  {
    return;
  }
  uint64_t v20 = (char *)objc_msgSend_UTF8String(off_1EAB8AAE0[0], v15, v16, v17, v18);
  sub_1DDA1A880(__p, v20);
  sub_1DDA1E974(a1, (uint64_t)__p, (_WORD *)(*a6 + 2));
  if (v32 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v25 = (char *)objc_msgSend_UTF8String(off_1EAB8AAE8[0], v21, v22, v23, v24);
  sub_1DDA1A880(__p, v25);
  sub_1DDA1E974(a1, (uint64_t)__p, (_WORD *)(*a6 + 4));
  if (v32 < 0) {
    operator delete(__p[0]);
  }
  BOOL v30 = (char *)objc_msgSend_UTF8String(off_1EAB8AAF0[0], v26, v27, v28, v29);
  sub_1DDA1A880(__p, v30);
  sub_1DDA1E974(a1, (uint64_t)__p, (_WORD *)(*a6 + 6));
  if (v32 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1DDA1ED0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  uint64_t v16 = *(void **)v14;
  if (*(void *)v14)
  {
    *(void *)(v14 + 8) = v16;
    operator delete(v16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA1ED6C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v10 = 0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AAF8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EDF0(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA1EDD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA1EDF0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v4 = sub_1DDA21E4C(a1, a2);
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  if (isKindOfClass) {
    *a3 = objc_msgSend_BOOLValue(v4, v5, v6, v7, v8);
  }

  return isKindOfClass & 1;
}

void sub_1DDA1EE58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA1EE68(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v4 = getenv("RAWCAMERA_M1");
  if (v4)
  {
    char v9 = v4;
    sub_1DDA24B78(&v14, 9uLL);
    if (sscanf(v9, "{ { %lg , %lg , %lg } , { %lg , %lg , %lg } , { %lg , %lg , %lg } }", v14, v14 + 8, v14 + 16, v14 + 24, v14 + 32, v14 + 40, v14 + 48, v14 + 56, v14 + 64) == 9)
    {
      sub_1DDAD823C((uint64_t)a2, 3u, 3u);
      sub_1DDAD96F4(a2, (uint64_t)&v14);
      unsigned __int8 v10 = v14;
      if (!v14) {
        return;
      }
      uint64_t v15 = v14;
      goto LABEL_14;
    }
    if (v14)
    {
      uint64_t v15 = v14;
      operator delete(v14);
    }
  }
  uint64_t v11 = (char *)objc_msgSend_UTF8String(off_1EAB8AB00[0], v5, v6, v7, v8);
  sub_1DDA1A880(__p, v11);
  sub_1DDA1F014(a1, (uint64_t)__p, &v14);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  if (sub_1DDAD88D8((unsigned int *)&v14)) {
    sub_1DDAD80E8(a2, (uint64_t)&v14);
  }
  else {
    sub_1DDAD849C(3u, (uint64_t)a2);
  }
  unsigned __int8 v10 = v15;
  if (v15)
  {
    uint64_t v16 = v15;
LABEL_14:
    operator delete(v10);
  }
}

void sub_1DDA1EFB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  signed int v26 = *(void **)(v23 + 8);
  if (v26)
  {
    *(void *)(v23 + 16) = v26;
    operator delete(v26);
  }
  uint64_t v27 = *(void **)(v24 - 64);
  if (v27)
  {
    *(void *)(v24 - 56) = v27;
    operator delete(v27);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA1F014(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  __p = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  if (sub_1DDA220A0(a1, a2, (char *)&__p))
  {
    unint64_t v4 = ((v7 - (unsigned char *)__p) >> 3) / 3uLL;
    sub_1DDA18500(&v5, &v4);
    sub_1DDAD823C((uint64_t)a3, v5, 3u);
    sub_1DDAD96F4(a3, (uint64_t)&__p);
  }
  else
  {
    sub_1DDAD869C(a3);
  }
  if (__p)
  {
    uint64_t v7 = __p;
    operator delete(__p);
  }
}

void sub_1DDA1F0B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  uint64_t v15 = *(void **)(v13 + 8);
  if (v15)
  {
    *(void *)(v13 + 16) = v15;
    operator delete(v15);
  }
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA1F0F0(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  unint64_t v4 = getenv("RAWCAMERA_M2");
  if (v4)
  {
    char v9 = v4;
    sub_1DDA24B78(&v14, 9uLL);
    if (sscanf(v9, "{ { %lg , %lg , %lg } , { %lg , %lg , %lg } , { %lg , %lg , %lg } }", v14, v14 + 8, v14 + 16, v14 + 24, v14 + 32, v14 + 40, v14 + 48, v14 + 56, v14 + 64) == 9)
    {
      sub_1DDAD823C((uint64_t)a2, 3u, 3u);
      sub_1DDAD96F4(a2, (uint64_t)&v14);
      unsigned __int8 v10 = v14;
      if (!v14) {
        return;
      }
      uint64_t v15 = v14;
      goto LABEL_14;
    }
    if (v14)
    {
      uint64_t v15 = v14;
      operator delete(v14);
    }
  }
  uint64_t v11 = (char *)objc_msgSend_UTF8String(off_1EAB8AB08[0], v5, v6, v7, v8);
  sub_1DDA1A880(__p, v11);
  sub_1DDA1F014(a1, (uint64_t)__p, &v14);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  if (sub_1DDAD88D8((unsigned int *)&v14)) {
    sub_1DDAD80E8(a2, (uint64_t)&v14);
  }
  else {
    sub_1DDAD849C(3u, (uint64_t)a2);
  }
  unsigned __int8 v10 = v15;
  if (v15)
  {
    uint64_t v16 = v15;
LABEL_14:
    operator delete(v10);
  }
}

void sub_1DDA1F240(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  signed int v26 = *(void **)(v23 + 8);
  if (v26)
  {
    *(void *)(v23 + 16) = v26;
    operator delete(v26);
  }
  uint64_t v27 = *(void **)(v24 - 64);
  if (v27)
  {
    *(void *)(v24 - 56) = v27;
    operator delete(v27);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA1F29C(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v8 = (char *)objc_msgSend_UTF8String(off_1EAB8AB10[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v8);
  sub_1DDA1F014(a1, (uint64_t)__p, &v11);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  if (sub_1DDAD88D8(&v11)) {
    sub_1DDAD80E8(a6, (uint64_t)&v11);
  }
  else {
    sub_1DDAD869C(a6);
  }
  if (v12)
  {
    char v13 = v12;
    operator delete(v12);
  }
}

void sub_1DDA1F334(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA1F364(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v8 = (char *)objc_msgSend_UTF8String(off_1EAB8AB18[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v8);
  sub_1DDA1F014(a1, (uint64_t)__p, &v11);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  if (sub_1DDAD88D8(&v11)) {
    sub_1DDAD80E8(a6, (uint64_t)&v11);
  }
  else {
    sub_1DDAD869C(a6);
  }
  if (v12)
  {
    char v13 = v12;
    operator delete(v12);
  }
}

void sub_1DDA1F3FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA1F42C(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v8 = (char *)objc_msgSend_UTF8String(off_1EAB8AB20[0], a2, a3, a4, a5);
  sub_1DDA1A880(&__p, v8);
  sub_1DDA1F014(a1, (uint64_t)&__p, &v23);
  if (SHIBYTE(v21) < 0) {
    operator delete(__p);
  }
  if (sub_1DDAD88D8((unsigned int *)&v23) == 3 && sub_1DDAD88E0((uint64_t)&v23) == 3)
  {
    sub_1DDAD80E8(a6, (uint64_t)&v23);
    goto LABEL_15;
  }
  double v22 = 0.0;
  char v13 = (char *)objc_msgSend_UTF8String(off_1EAB8AB20[0], v9, v10, v11, v12);
  sub_1DDA1A880(&__p, v13);
  int v14 = sub_1DDA1EB14(a1, (uint64_t)&__p, &v22);
  int v15 = v14;
  if (SHIBYTE(v21) < 0)
  {
    operator delete(__p);
    if (v15) {
      goto LABEL_8;
    }
LABEL_14:
    sub_1DDAD849C(3u, (uint64_t)a6);
    goto LABEL_15;
  }
  if (!v14) {
    goto LABEL_14;
  }
LABEL_8:
  sub_1DDAD849C(3u, (uint64_t)&v16);
  sub_1DDAD8AE0(&v16, (uint64_t)&__p, v22);
  sub_1DDAD88E8(&v23, (uint64_t)&__p);
  if (v20)
  {
    uint64_t v21 = v20;
    operator delete(v20);
  }
  if (v17)
  {
    uint64_t v18 = v17;
    operator delete(v17);
  }
  sub_1DDAD80E8(a6, (uint64_t)&v23);
LABEL_15:
  if (v24)
  {
    uint64_t v25 = v24;
    operator delete(v24);
  }
}

void sub_1DDA1F580(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  if (a11) {
    operator delete(a11);
  }
  uint64_t v18 = *(void **)(v16 - 56);
  if (v18)
  {
    *(void *)(v16 - 48) = v18;
    operator delete(v18);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA1F600(uint64_t a1)
{
  if ((int)sub_1DDA1E654(a1) > 6) {
    return 0;
  }
  char v10 = 1;
  uint64_t v7 = (char *)objc_msgSend_UTF8String(off_1EAB8AB28[0], v2, v3, v4, v5);
  sub_1DDA1A880(__p, v7);
  sub_1DDA1EDF0(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10 != 0;
}

void sub_1DDA1F688(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA1F6A4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v10 = 0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AB30[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EDF0(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA1F70C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA1F728(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v10 = 0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AB38[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1E974(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10 != 0;
}

void sub_1DDA1F798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA1F7B4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v10 = 0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AB40[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EDF0(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA1F81C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA1F838(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v10 = 1;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AB48[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EDF0(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA1F8A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA1F8C0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v10 = 1;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AB50[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EDF0(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA1F92C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA1F948(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v10 = 1;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AB58[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EDF0(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA1F9B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA1F9D0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v10 = 1;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AB60[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1E974(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10 != 0;
}

void sub_1DDA1FA44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA1FA60(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.08;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AB68[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 0.2);
}

void sub_1DDA1FAEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA1FB08(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.12;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AB70[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 0.3);
}

void sub_1DDA1FB94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA1FBB0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AB78[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA1FC18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA1FC34(uint64_t a1)
{
  if ((int)sub_1DDA1E654(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  double v11 = 0.9;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AB80[0], v2, v3, v4, v5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v11);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  return v11;
}

void sub_1DDA1FCEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA1FD18(uint64_t a1)
{
  if ((int)sub_1DDA1E654(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  double v11 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AB88[0], v2, v3, v4, v5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v11);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  return v11;
}

void sub_1DDA1FDC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA1FDF0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 1.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AB90[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA1FE5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA1FE78(uint64_t a1)
{
  double v13 = 0.0;
  uint64_t v2 = getenv("RAWCAMERA_HUEMAG_MR");
  if (!v2)
  {
    uint64_t v7 = (char *)objc_msgSend_UTF8String(off_1EAB8AB98[0], v3, v4, v5, v6);
    sub_1DDA1A880(__p, v7);
    char v8 = sub_1DDA1EB14(a1, (uint64_t)__p, &v13);
    char v9 = v8;
    if (v12 < 0)
    {
      operator delete(__p[0]);
      if (v9) {
        return v13;
      }
    }
    else if (v8)
    {
      return v13;
    }
    return 0.0;
  }
  sscanf(v2, "%lf", &v13);
  return v13;
}

void sub_1DDA1FF1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA1FF38(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v11 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ABA0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  int v7 = sub_1DDA1EB14(a1, (uint64_t)__p, &v11);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  double result = v11;
  if (!v7) {
    return 0.0;
  }
  return result;
}

void sub_1DDA1FFB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA1FFCC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v11 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ABA8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  int v7 = sub_1DDA1EB14(a1, (uint64_t)__p, &v11);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  double result = v11;
  if (!v7) {
    return 0.0;
  }
  return result;
}

void sub_1DDA20044(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20060(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v11 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ABB0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  int v7 = sub_1DDA1EB14(a1, (uint64_t)__p, &v11);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  double result = v11;
  if (!v7) {
    return 0.0;
  }
  return result;
}

void sub_1DDA200D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA200F4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v11 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ABB8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  int v7 = sub_1DDA1EB14(a1, (uint64_t)__p, &v11);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  double result = v11;
  if (!v7) {
    return 0.0;
  }
  return result;
}

void sub_1DDA2016C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20188(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v11 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ABC0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  int v7 = sub_1DDA1EB14(a1, (uint64_t)__p, &v11);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  double result = v11;
  if (!v7) {
    return 0.0;
  }
  return result;
}

void sub_1DDA20200(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2021C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v10 = 1;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ABC8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EDF0(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA20288(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA202A4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v10 = 1;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ABD0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EDF0(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA20310(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2032C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ABD8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, -1.0), 1.0);
}

void sub_1DDA203A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA203C0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ABE0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, -1.0), 1.0);
}

void sub_1DDA20438(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20454(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ABE8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, -1.0), 1.0);
}

void sub_1DDA204CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA204E8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v10 = 0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ABF0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA2057C(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  if (v10 >= 0x9C41) {
    return 40000;
  }
  else {
    return v10;
  }
}

void sub_1DDA20560(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2057C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v4 = sub_1DDA21E4C(a1, a2);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && (unint64_t v9 = objc_msgSend_longLongValue(v4, v5, v6, v7, v8), !HIDWORD(v9)))
  {
    *a3 = v9;
    uint64_t v10 = 1;
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

void sub_1DDA205EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_1DDA20600(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 1.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ABF8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA2066C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20688(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 1.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC00[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA206F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20710(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 2.67;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC08[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 5.0);
}

void sub_1DDA20798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA207B4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 26.15;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC10[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.3), 200.0);
}

void sub_1DDA20840(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2085C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 2.2;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC18[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 1.2), 2.3);
}

void sub_1DDA208E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20904(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC20[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA2096C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20988(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 400.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC28[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA209F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20A10(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC30[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA20A78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20A94(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC38[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 5.0);
}

void sub_1DDA20B0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20B28(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 1.5;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC40[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 5.0);
}

void sub_1DDA20BA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20BC0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 3.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC48[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 10.0);
}

void sub_1DDA20C3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20C58(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 4.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC50[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA20CC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20CE0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.00145;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC58[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA20D58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20D74(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.004;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC60[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA20DEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20E08(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0031;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC68[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA20E80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20E9C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.027;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC70[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA20F14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20F30(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 4.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC78[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA20F9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA20FB8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 2.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC80[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 1.0), 10.0);
}

void sub_1DDA21034(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA21050(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 24.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC88[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA210BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA210D8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.27;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC90[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 0.75);
}

void sub_1DDA21160(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2117C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.27;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AC98[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 0.75);
}

void sub_1DDA21204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA21220(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0025;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ACA0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 0.02);
}

void sub_1DDA212AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA212C8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0025;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ACA8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 0.02);
}

void sub_1DDA21354(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA21370(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ACB0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA213D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA213F4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.15;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ACB8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA21464(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA21480(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.43;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ACC0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA214F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA21514(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0883;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ACC8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA2158C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA215A8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.000028;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ACD0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA21620(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2163C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0000000431;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ACD8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA216B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA216D0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.8725;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ACE0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA21748(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA21764(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.00017;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ACE8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA217DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA217F8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0000069973;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ACF0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA21870(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2188C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 400.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ACF8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA218F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA21914(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 2.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD00[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA21980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2199C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD08[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA21A04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA21A20(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v10 = 3;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD10[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1E974(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  if ((unint64_t)v10 >= 0xA) {
    return 3;
  }
  else {
    return dword_1DDBF9144[v10];
  }
}

void sub_1DDA21AA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA21AC4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v10 = 0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD18[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1E974(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10 == 1;
}

void sub_1DDA21B34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA21B50(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD20[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA21BB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA21BD4(uint64_t a1@<X0>, double **a2@<X8>, __n128 a3@<Q0>)
{
  sub_1DDA58E88(a2, a3);
  uint64_t v5 = *a2;
  *(_OWORD *)uint64_t v5 = xmmword_1DDBF8FA0;
  *((_OWORD *)v5 + 1) = xmmword_1DDBF8FB0;
  *((_OWORD *)v5 + 2) = xmmword_1DDBF8FC0;
  *((_OWORD *)v5 + 3) = xmmword_1DDBF8FD0;
  double v10 = (char *)objc_msgSend_UTF8String(off_1EAB8AD28[0], v6, v7, v8, v9);
  sub_1DDA1A880(__p, v10);
  double v11 = sub_1DDA21E4C(a1, (uint64_t)__p);
  if (v32 < 0) {
    operator delete(__p[0]);
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0 || objc_msgSend_count(v11, v12, v13, v14, v15) == 8)
    {
      uint64_t v16 = 0;
      while (1)
      {
        uint64_t v17 = objc_msgSend_objectAtIndexedSubscript_(v11, v12, v16, v14, v15);
        objc_opt_class();
        if (objc_opt_isKindOfClass()) {
          break;
        }
LABEL_16:

        if (++v16 == 8) {
          goto LABEL_17;
        }
      }
      objc_msgSend_doubleValue(v17, v18, v19, v20, v21);
      switch(v16)
      {
        case 0:
          float v23 = v22;
          **a2 = v23;
          goto LABEL_16;
        case 1:
          float v24 = v22;
          (*a2)[2] = v24;
          goto LABEL_16;
        case 2:
          float v25 = v22;
          (*a2)[1] = v25;
          goto LABEL_16;
        case 3:
          float v26 = v22;
          (*a2)[4] = v26;
          goto LABEL_16;
        case 4:
          float v27 = v22;
          (*a2)[3] = v27;
          goto LABEL_16;
        case 5:
          float v28 = v22;
          (*a2)[6] = v28;
          goto LABEL_16;
        case 6:
          float v29 = v22;
          (*a2)[5] = v29;
          goto LABEL_16;
        case 7:
          float v30 = v22;
          (*a2)[7] = v30;

          break;
        default:
          goto LABEL_16;
      }
    }
  }
LABEL_17:
}

void sub_1DDA21DDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  uint64_t v17 = *(std::__shared_weak_count **)(v15 + 8);
  if (v17) {
    sub_1DDA18310(v17);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA21E4C(uint64_t a1, uint64_t a2)
{
  int v24 = sub_1DDA1E654(a1);
  uint64_t v4 = sub_1DDA4C4C8(&v24);
  if (*(char *)(a2 + 23) >= 0) {
    objc_msgSend_stringWithFormat_(NSString, v5, @"%s_%d", v6, v7, a2, v4);
  }
  else {
  uint64_t v8 = objc_msgSend_stringWithFormat_(NSString, v5, @"%s_%d", v6, v7, *(void *)a2, v4);
  }
  uint64_t v9 = sub_1DDA24480(a1);
  uint64_t v13 = objc_msgSend_objectForKeyedSubscript_(v9, v10, (uint64_t)v8, v11, v12);

  if (v13)
  {
    uint64_t v17 = sub_1DDA246A8(a1, v13);
  }
  else
  {
    if (*(char *)(a2 + 23) >= 0) {
      objc_msgSend_stringWithUTF8String_(NSString, v14, a2, v15, v16);
    }
    else {
    uint64_t v18 = objc_msgSend_stringWithUTF8String_(NSString, v14, *(void *)a2, v15, v16);
    }

    uint64_t v19 = sub_1DDA24480(a1);
    uint64_t v13 = objc_msgSend_objectForKeyedSubscript_(v19, v20, v18, v21, v22);

    uint64_t v17 = sub_1DDA246A8(a1, v13);
    uint64_t v8 = (void *)v18;
  }

  return v17;
}

void sub_1DDA21F94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA21FC8(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v13[0] = 0;
  v13[1] = 0;
  uint64_t v14 = 0;
  uint64_t v8 = (char *)objc_msgSend_UTF8String(off_1EAB8AD30[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v8);
  BOOL v9 = sub_1DDA220A0(a1, (uint64_t)__p, (char *)v13);
  BOOL v10 = v9;
  if (v12 < 0)
  {
    operator delete(__p[0]);
    if (v10) {
      goto LABEL_3;
    }
  }
  else if (v9)
  {
LABEL_3:
    *(_OWORD *)a6 = *(_OWORD *)v13;
    *(void *)(a6 + 16) = v14;
    return;
  }
  *(void *)a6 = 0;
  *(void *)(a6 + 8) = 0;
  *(void *)(a6 + 16) = 0;
  if (v13[0])
  {
    v13[1] = v13[0];
    operator delete(v13[0]);
  }
}

void sub_1DDA2206C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a16) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA220A0(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4 = sub_1DDA21E4C(a1, a2);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = v4;
    unint64_t v10 = objc_msgSend_count(v5, v6, v7, v8, v9);
    uint64_t v23 = 0;
    sub_1DDA25B2C(&__p, v10, &v23);
    if (v10)
    {
      BOOL v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        uint64_t v16 = objc_msgSend_objectAtIndexedSubscript_(v5, v11, v15, v12, v13);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0) {
          break;
        }
        objc_msgSend_doubleValue(v16, v17, v18, v19, v20);
        if (v15 >= (v25 - (unsigned char *)__p) >> 3) {
          sub_1DDA24AD0();
        }
        *((void *)__p + v15) = v21;

        BOOL v14 = ++v15 >= v10;
        if (v10 == v15) {
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      if (&__p != (void **)a3) {
        sub_1DDA25BB0(a3, (char *)__p, (uint64_t)v25, (v25 - (unsigned char *)__p) >> 3);
      }
      BOOL v14 = 1;
    }
    if (__p)
    {
      float v25 = __p;
      operator delete(__p);
    }
  }
  else
  {
    BOOL v14 = 0;
  }

  return v14;
}

void sub_1DDA221F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1DDA22244(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v8 = (char *)objc_msgSend_UTF8String(off_1EAB8AD38[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v8);
  BOOL v9 = sub_1DDA220A0(a1, (uint64_t)__p, (char *)&v20);
  BOOL v10 = v9;
  if (v19 < 0)
  {
    operator delete(__p[0]);
    if (!v10) {
      goto LABEL_4;
    }
  }
  else if (!v9)
  {
    goto LABEL_4;
  }
  uint64_t v12 = v20;
  uint64_t v11 = v21;
  unint64_t v13 = v21 - (unsigned char *)v20;
  if ((unint64_t)(((v21 - (unsigned char *)v20) >> 3) - 5) <= 0xFFFFFFFFFFFFFFFDLL)
  {
LABEL_4:
    sub_1DDAD80DC(a6);
    goto LABEL_10;
  }
  unint64_t v14 = v13 >> 3;
  sub_1DDAD823C((uint64_t)a6, v13 >> 3, v13 >> 3);
  sub_1DDAD8860(a6);
  if (v11 != v12)
  {
    uint64_t v15 = 0;
    do
    {
      uint64_t v16 = *((void *)v20 + v15);
      __p[0] = (void *)sub_1DDAD8560((uint64_t)a6, v15);
      __p[1] = v17;
      *(void *)sub_1DDAD85FC((uint64_t)__p, v15++) = v16;
    }
    while (v15 < v14);
  }
LABEL_10:
  if (v20)
  {
    uint64_t v21 = v20;
    operator delete(v20);
  }
}

void sub_1DDA22368(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16)
{
  uint64_t v18 = *(void **)(v16 + 8);
  if (v18)
  {
    *(void *)(v16 + 16) = v18;
    operator delete(v18);
  }
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA223BC(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v13[0] = 0;
  v13[1] = 0;
  uint64_t v14 = 0;
  uint64_t v8 = (char *)objc_msgSend_UTF8String(off_1EAB8AD40[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v8);
  BOOL v9 = sub_1DDA220A0(a1, (uint64_t)__p, (char *)v13);
  BOOL v10 = v9;
  if (v12 < 0)
  {
    operator delete(__p[0]);
    if (v10) {
      goto LABEL_3;
    }
  }
  else if (v9)
  {
LABEL_3:
    *(_OWORD *)a6 = *(_OWORD *)v13;
    *(void *)(a6 + 16) = v14;
    return;
  }
  *(void *)a6 = 0;
  *(void *)(a6 + 8) = 0;
  *(void *)(a6 + 16) = 0;
  if (v13[0])
  {
    v13[1] = v13[0];
    operator delete(v13[0]);
  }
}

void sub_1DDA22460(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a16) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA22494(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD48[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA224FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA22518(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 3.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD50[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA22584(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA225A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 3.1623;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD58[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA22618(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA22634(uint64_t a1)
{
  double v11 = 0.0;
  uint64_t v2 = getenv("MS_AMT");
  if (v2)
  {
    sscanf(v2, "%lf", &v11);
  }
  else
  {
    uint64_t v7 = (char *)objc_msgSend_UTF8String(off_1EAB8AD60[0], v3, v4, v5, v6);
    sub_1DDA1A880(__p, v7);
    sub_1DDA1EB14(a1, (uint64_t)__p, &v11);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
  }
  return v11;
}

void sub_1DDA226C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA226E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD68[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 1.3);
}

void sub_1DDA2275C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA22778(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.5;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD70[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 1.0);
}

void sub_1DDA227F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA22810(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v10 = 0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD78[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EDF0(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA22878(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA22894(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.5;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD80[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 1.0);
}

void sub_1DDA22910(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2292C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD88[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, -2.0), 2.0);
}

void sub_1DDA229A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA229C0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD90[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 1.0);
}

void sub_1DDA22A38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA22A54(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AD98[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return fmin(fmax(v10, 0.0), 4.0);
}

void sub_1DDA22ACC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA22AE8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v8[0] = 0;
  v8[1] = 0;
  uint64_t v9 = 0;
  sub_1DDA1A880(__p, "isoab");
  BOOL v4 = sub_1DDA220A0(a1, (uint64_t)__p, (char *)v8);
  BOOL v5 = v4;
  if (v7 < 0)
  {
    operator delete(__p[0]);
    if (v5) {
      goto LABEL_3;
    }
  }
  else if (v4)
  {
LABEL_3:
    *(_OWORD *)a2 = *(_OWORD *)v8;
    *(void *)(a2 + 16) = v9;
    return;
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
}

void sub_1DDA22B84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a16) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA22BB8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int16 v10 = 0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ADA8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1E974(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA22C20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA22C3C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.000734;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ADB0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA22CB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA22CD0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.01351;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ADB8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA22D48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA22D64(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ADC0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA22DCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA22DE8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int16 v10 = 1;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ADC8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1E974(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA22E54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA22E70(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0001128;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ADD0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA22EE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA22F04(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = -0.06729;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ADD8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA22F7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA22F98(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = -5.241;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ADE0[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA23010(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2302C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int16 v10 = 0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8ADE8[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1E974(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA23094(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA230B0(uint64_t a1)
{
  unsigned __int16 v5 = 0;
  sub_1DDA1A880(__p, "hnat");
  sub_1DDA1E974(a1, (uint64_t)__p, &v5);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

void sub_1DDA23110(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2312C(uint64_t a1)
{
  double v5 = 0.0;
  sub_1DDA1A880(__p, "hbf");
  sub_1DDA1EB14(a1, (uint64_t)__p, &v5);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

void sub_1DDA2318C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA231A8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE00[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA23210(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2322C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE08[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA23294(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA232B0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE10[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA23318(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA23334(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int16 v10 = 0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE18[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1E974(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA2339C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA233B8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE20[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA23420(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2343C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE28[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA234A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA234C0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE30[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA23528(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA23544(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int16 v10 = 0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE38[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1E974(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA235AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA235C8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE40[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA23630(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2364C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE48[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA236B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA236D0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE50[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA23738(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA23754(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int16 v10 = 0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE58[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1E974(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA237BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA237D8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE60[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA23840(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2385C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE68[0], a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA238C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA238E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v10 = 0.0;
  uint64_t v6 = (char *)objc_msgSend_UTF8String(off_1EAB8AE70, a2, a3, a4, a5);
  sub_1DDA1A880(__p, v6);
  sub_1DDA1EB14(a1, (uint64_t)__p, &v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_1DDA23948(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA23964(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v171 = 0;
  uint64_t v172 = 0;
  uint64_t v173 = 0;
  sub_1DDA1A880(&v169, "isoab");
  BOOL v4 = sub_1DDA220A0(a1, (uint64_t)&v169, (char *)&v171);
  BOOL v9 = v4;
  if (v170 < 0)
  {
    operator delete((void *)v169);
    if (v9) {
      goto LABEL_3;
    }
  }
  else if (v4)
  {
LABEL_3:
    double v10 = v171;
    if ((unint64_t)((char *)v172 - (char *)v171) < 0x18 || (v172 - v171) % 3uLL)
    {
      *a2 = 0;
      a2[1] = 0;
    }
    else
    {
      double v11 = operator new(0x38uLL);
      v11[1] = 0;
      v11[2] = 0;
      *double v11 = &unk_1F395AA20;
      char v12 = v11 + 3;
      v11[6] = 0;
      v11[5] = 0;
      v11[3] = &unk_1F395AA70;
      v11[4] = v11 + 5;
      unsigned int v13 = 2;
      unsigned int v14 = 1;
      do
      {
        (*(void (**)(void *, void, double, double))(*v12 + 24))(v12, v10[v13 - 2], v10[v13 - 1], v10[v13]);
        unint64_t v15 = v14;
        double v10 = v171;
        v13 += 3;
        ++v14;
      }
      while (v15 < (v172 - v171) / 3uLL);
      *a2 = (uint64_t)v12;
      a2[1] = (uint64_t)v11;
    }
    goto LABEL_64;
  }
  unsigned __int16 v168 = 0;
  uint64_t v16 = (char *)objc_msgSend_UTF8String(off_1EAB8ADA8[0], v5, v6, v7, v8);
  sub_1DDA1A880(&v169, v16);
  sub_1DDA1E974(a1, (uint64_t)&v169, &v168);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  int v21 = v168;
  double v167 = 0.000734;
  uint64_t v22 = (char *)objc_msgSend_UTF8String(off_1EAB8ADB0[0], v17, v18, v19, v20);
  sub_1DDA1A880(&v169, v22);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v167);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  double v166 = 0.01351;
  float v27 = (char *)objc_msgSend_UTF8String(off_1EAB8ADB8[0], v23, v24, v25, v26);
  sub_1DDA1A880(&v169, v27);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v166);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  double v165 = 0.0;
  char v32 = (char *)objc_msgSend_UTF8String(off_1EAB8ADC0[0], v28, v29, v30, v31);
  sub_1DDA1A880(&v169, v32);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v165);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  unsigned __int16 v168 = 1;
  uint64_t v37 = (char *)objc_msgSend_UTF8String(off_1EAB8ADC8[0], v33, v34, v35, v36);
  sub_1DDA1A880(&v169, v37);
  sub_1DDA1E974(a1, (uint64_t)&v169, &v168);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  int v42 = v168;
  double v164 = 0.0001128;
  unint64_t v43 = (char *)objc_msgSend_UTF8String(off_1EAB8ADD0[0], v38, v39, v40, v41);
  sub_1DDA1A880(&v169, v43);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v164);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  double v163 = -0.06729;
  uint64_t v48 = (char *)objc_msgSend_UTF8String(off_1EAB8ADD8[0], v44, v45, v46, v47);
  sub_1DDA1A880(&v169, v48);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v163);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  double v162 = -5.241;
  uint64_t v53 = (char *)objc_msgSend_UTF8String(off_1EAB8ADE0[0], v49, v50, v51, v52);
  sub_1DDA1A880(&v169, v53);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v162);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  unsigned __int16 v161 = 0;
  unint64_t v58 = (char *)objc_msgSend_UTF8String(off_1EAB8ADE8[0], v54, v55, v56, v57);
  sub_1DDA1A880(&v169, v58);
  sub_1DDA1E974(a1, (uint64_t)&v169, &v161);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  sub_1DDA1A880(&v169, "hnat");
  char v59 = sub_1DDA1E974(a1, (uint64_t)&v169, &v168);
  char v60 = v59;
  if (v170 < 0)
  {
    operator delete((void *)v169);
    if (v60) {
      goto LABEL_29;
    }
LABEL_63:
    double v141 = v166;
    double v140 = v167;
    double v142 = v165;
    double v144 = v163;
    double v143 = v164;
    double v145 = v162;
    int v146 = v161;
    v147 = operator new(0x68uLL);
    v147[1] = 0;
    v147[2] = 0;
    void *v147 = &unk_1F395ABB8;
    *a2 = sub_1DDA25304((uint64_t)(v147 + 3), v21, v42, v146, v140, v141, v142, v143, v144, v145);
    a2[1] = (uint64_t)v147;
    goto LABEL_64;
  }
  if ((v59 & 1) == 0) {
    goto LABEL_63;
  }
LABEL_29:
  int v61 = v168;
  double v160 = 0.0;
  sub_1DDA1A880(&v169, "hbf");
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v160);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  double v159 = 0.0;
  uint64_t v66 = (char *)objc_msgSend_UTF8String(off_1EAB8AE00[0], v62, v63, v64, v65);
  sub_1DDA1A880(&v169, v66);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v159);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  uint64_t v158 = 0;
  uint64_t v71 = (char *)objc_msgSend_UTF8String(off_1EAB8AE08[0], v67, v68, v69, v70);
  sub_1DDA1A880(&v169, v71);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v158);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  uint64_t v157 = 0;
  uint64_t v76 = (char *)objc_msgSend_UTF8String(off_1EAB8AE10[0], v72, v73, v74, v75);
  sub_1DDA1A880(&v169, v76);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v157);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  unint64_t v81 = (char *)objc_msgSend_UTF8String(off_1EAB8AE18[0], v77, v78, v79, v80);
  sub_1DDA1A880(&v169, v81);
  sub_1DDA1E974(a1, (uint64_t)&v169, &v168);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  int v86 = v168;
  uint64_t v156 = 0;
  uint64_t v87 = (char *)objc_msgSend_UTF8String(off_1EAB8AE20[0], v82, v83, v84, v85);
  sub_1DDA1A880(&v169, v87);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v156);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  uint64_t v155 = 0;
  uint64_t v92 = (char *)objc_msgSend_UTF8String(off_1EAB8AE28[0], v88, v89, v90, v91);
  sub_1DDA1A880(&v169, v92);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v155);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  uint64_t v154 = 0;
  uint64_t v97 = (char *)objc_msgSend_UTF8String(off_1EAB8AE30[0], v93, v94, v95, v96);
  sub_1DDA1A880(&v169, v97);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v154);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  uint64_t v102 = (char *)objc_msgSend_UTF8String(off_1EAB8AE38[0], v98, v99, v100, v101);
  sub_1DDA1A880(&v169, v102);
  sub_1DDA1E974(a1, (uint64_t)&v169, &v168);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  int v107 = v168;
  uint64_t v153 = 0;
  v108 = (char *)objc_msgSend_UTF8String(off_1EAB8AE40[0], v103, v104, v105, v106);
  sub_1DDA1A880(&v169, v108);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v153);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  uint64_t v152 = 0;
  double v113 = (char *)objc_msgSend_UTF8String(off_1EAB8AE48[0], v109, v110, v111, v112);
  sub_1DDA1A880(&v169, v113);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v152);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  uint64_t v151 = 0;
  v118 = (char *)objc_msgSend_UTF8String(off_1EAB8AE50[0], v114, v115, v116, v117);
  sub_1DDA1A880(&v169, v118);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v151);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  uint64_t v123 = (char *)objc_msgSend_UTF8String(off_1EAB8AE58[0], v119, v120, v121, v122);
  sub_1DDA1A880(&v169, v123);
  sub_1DDA1E974(a1, (uint64_t)&v169, &v168);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  int v128 = v168;
  uint64_t v150 = 0;
  uint64_t v129 = (char *)objc_msgSend_UTF8String(off_1EAB8AE60[0], v124, v125, v126, v127);
  sub_1DDA1A880(&v169, v129);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v150);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  uint64_t v149 = 0;
  uint64_t v134 = (char *)objc_msgSend_UTF8String(off_1EAB8AE68[0], v130, v131, v132, v133);
  sub_1DDA1A880(&v169, v134);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v149);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  uint64_t v148 = 0;
  v139 = (char *)objc_msgSend_UTF8String(off_1EAB8AE70, v135, v136, v137, v138);
  sub_1DDA1A880(&v169, v139);
  sub_1DDA1EB14(a1, (uint64_t)&v169, &v148);
  if (v170 < 0) {
    operator delete((void *)v169);
  }
  sub_1DDA2439C(v21, v42, v161, v61, v86, v107, v128, &v169, v167, v166, v165, v164, v163, v162, v160, v159, v158, v157, v156,
    v155,
    v154,
    v153,
    v152,
    v151,
    v150,
    v149,
    v148);
  *(_OWORD *)a2 = v169;
LABEL_64:
  if (v171)
  {
    uint64_t v172 = v171;
    operator delete(v171);
  }
}

void sub_1DDA2427C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)(v1 - 152);
  if (v3)
  {
    *(void *)(v1 - 144) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA2439C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, void *a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>, double a12@<D3>, double a13@<D4>, double a14@<D5>, double a15@<D6>, double a16@<D7>, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v42 = a1;
  double v40 = a10;
  double v41 = a9;
  double v39 = a11;
  int v38 = a2;
  double v36 = a13;
  double v37 = a12;
  double v35 = a14;
  int v33 = a4;
  int v34 = a3;
  double v31 = a16;
  double v32 = a15;
  int v29 = a6;
  int v30 = a5;
  int v28 = a7;
  return sub_1DDA254A4(&v42, &v41, &v40, &v39, &v38, &v37, &v36, a8, &v35, &v34, &v33, &v32, &v31, (double *)&a17, (double *)&a18, &v30, (double *)&a19, (double *)&a20, (double *)&a21,
           &v29,
           (double *)&a22,
           (double *)&a23,
           (double *)&a24,
           &v28,
           (double *)&a25,
           (double *)&a26,
           (double *)&a27);
}

id sub_1DDA24480(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  if (!v1)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  id v3 = v1;
  uint64_t v7 = objc_msgSend_objectForKeyedSubscript_(v3, v4, @"otrc_2", v5, v6);

  if (!v7) {
    objc_msgSend_setObject_forKeyedSubscript_(v3, v8, (uint64_t)&unk_1F39ABC48, @"otrc_2", v10);
  }
  double v11 = objc_msgSend_objectForKeyedSubscript_(v3, v8, @"otrc_3", v9, v10);

  if (!v11) {
    objc_msgSend_setObject_forKeyedSubscript_(v3, v12, (uint64_t)&unk_1F39ABC48, @"otrc_3", v14);
  }
  unint64_t v15 = objc_msgSend_objectForKeyedSubscript_(v3, v12, @"otrc_4", v13, v14);

  if (!v15) {
    objc_msgSend_setObject_forKeyedSubscript_(v3, v16, (uint64_t)&unk_1F39ABC48, @"otrc_4", v18);
  }
  uint64_t v19 = objc_msgSend_objectForKeyedSubscript_(v3, v16, @"otrc_5", v17, v18);

  if (!v19) {
    objc_msgSend_setObject_forKeyedSubscript_(v3, v20, (uint64_t)&unk_1F39ABC48, @"otrc_5", v22);
  }
  uint64_t v23 = objc_msgSend_objectForKeyedSubscript_(v3, v20, @"otrc_6", v21, v22);

  if (!v23) {
    objc_msgSend_setObject_forKeyedSubscript_(v3, v24, (uint64_t)&unk_1F39ABC48, @"otrc_6", v26);
  }
  float v27 = objc_msgSend_objectForKeyedSubscript_(v3, v24, @"otrc_7", v25, v26);

  if (!v27) {
    objc_msgSend_setObject_forKeyedSubscript_(v3, v28, (uint64_t)&unk_1F39ABC48, @"otrc_7", v30);
  }
  double v31 = objc_msgSend_objectForKeyedSubscript_(v3, v28, @"otrc_8", v29, v30);

  if (!v31) {
    objc_msgSend_setObject_forKeyedSubscript_(v3, v32, (uint64_t)&unk_1F39ABC48, @"otrc_8", v33);
  }
  id v34 = *(id *)(a1 + 8);

  return v34;
}

void sub_1DDA24688(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA246A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  id v4 = v3;
  if (objc_opt_isKindOfClass())
  {
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 3221225472;
    v20[2] = sub_1DDA248D0;
    v20[3] = &unk_1E6D04B68;
    v20[4] = a1;
    uint64_t v5 = (void *)MEMORY[0x1E01C46E0](v20);
    id v6 = v3;
    objc_msgSend_UTF8String(v6, v7, v8, v9, v10);
    double v11 = sub_1DDB69460();

    if (!v11)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    id v4 = v11;
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      objc_msgSend_description(v4, v12, v13, v14, v15);
      uint64_t v18 = (const void *)objc_claimAutoreleasedReturnValue();
      CFShow(v18);
      uint64_t v19 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](v19, "RawCameraException");
      __cxa_throw(v19, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
  }

  return v4;
}

void sub_1DDA24868(_Unwind_Exception *a1)
{
  __cxa_free_exception(v5);

  _Unwind_Resume(a1);
}

id sub_1DDA248D0(uint64_t a1, char *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1DDA1A880(__p, a2);
  uint64_t v7 = sub_1DDA1E51C((uint64_t)__p, v3, v4, v5, v6);
  if (v16 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v8 = sub_1DDB6C4F4();
  char v12 = objc_msgSend_objectForKeyedSubscript_(v8, v9, (uint64_t)v7, v10, v11);

  if (!v12)
  {
    uint64_t v13 = *(void *)(v2 + 16);
    if (v13)
    {
      char v12 = (*(void (**)(uint64_t, void *))(v13 + 16))(v13, v7);
    }
    else
    {
      char v12 = 0;
    }
  }

  return v12;
}

void sub_1DDA2498C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA249AC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x1DDA249A4);
}

uint64_t sub_1DDA249C4(uint64_t a1)
{
  return a1;
}

void sub_1DDA249F8(uint64_t a1)
{
  JUMPOUT(0x1E01C3DC0);
}

void *sub_1DDA24A4C(void *a1, uint64_t a2, _WORD *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1DDA1ACCC(a1, a2);
    uint64_t v6 = (_WORD *)a1[1];
    uint64_t v7 = &v6[a2];
    uint64_t v8 = 2 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 2;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_1DDA24AB4(_Unwind_Exception *exception_object)
{
  id v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA24AD0()
{
}

void sub_1DDA24AE8(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_1DDA24B44(exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E6D04248, MEMORY[0x1E4FBA1D0]);
}

void sub_1DDA24B30(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_1DDA24B44(std::logic_error *a1, const char *a2)
{
  double result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D8] + 16);
  return result;
}

void *sub_1DDA24B78(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1DDA18108(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_1DDA24BD4(_Unwind_Exception *exception_object)
{
  id v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA24BF0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395AA20;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA24C10(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395AA20;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA24C64(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_1DDA24C8C(uint64_t a1)
{
  *(void *)a1 = &unk_1F395AA70;
  sub_1DDA24F4C(a1 + 8, *(void **)(a1 + 16));
  return a1;
}

void sub_1DDA24CD4(uint64_t a1)
{
  *(void *)a1 = &unk_1F395AA70;
  sub_1DDA24F4C(a1 + 8, *(void **)(a1 + 16));

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA24D3C()
{
  return 1;
}

void sub_1DDA24D44(uint64_t a1, unsigned int a2, double a3, double a4)
{
  unsigned int v11 = a2;
  sub_1DDA24B78(&__p, 2uLL);
  uint64_t v7 = (double *)__p;
  *(double *)__p = a3;
  v7[1] = a4;
  char v12 = &v11;
  uint64_t v8 = (char *)(sub_1DDA24FB0((uint64_t **)(a1 + 8), &v11, (uint64_t)&unk_1DDBFB044, &v12) + 5);
  if (v8 != (char *)&__p) {
    sub_1DDA25BB0(v8, (char *)__p, (uint64_t)v10, (v10 - (unsigned char *)__p) >> 3);
  }
  if (__p)
  {
    uint64_t v10 = __p;
    operator delete(__p);
  }
}

void sub_1DDA24DE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA24E04(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v2 = a1 + 16;
  uint64_t v3 = v4;
  double v5 = 0.0;
  if (v4)
  {
    uint64_t v6 = v2;
    do
    {
      unsigned int v7 = *(_DWORD *)(v3 + 32);
      BOOL v8 = v7 >= a2;
      if (v7 >= a2) {
        uint64_t v9 = (uint64_t *)v3;
      }
      else {
        uint64_t v9 = (uint64_t *)(v3 + 8);
      }
      if (v8) {
        uint64_t v6 = v3;
      }
      uint64_t v3 = *v9;
    }
    while (*v9);
    if (v6 != v2 && *(_DWORD *)(v6 + 32) <= a2)
    {
      uint64_t v10 = *(const void **)(v6 + 40);
      uint64_t v11 = *(void *)(v6 + 48);
      if (v11 - (void)v10 == 16)
      {
        __p = 0;
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        sub_1DDA1808C(&__p, v10, v11, 2uLL);
        double v5 = *(double *)__p;
        uint64_t v14 = __p;
        operator delete(__p);
      }
    }
  }
  return v5;
}

double sub_1DDA24EA0(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v2 = a1 + 16;
  uint64_t v3 = v4;
  double v5 = 0.0;
  if (v4)
  {
    uint64_t v6 = v2;
    do
    {
      unsigned int v7 = *(_DWORD *)(v3 + 32);
      BOOL v8 = v7 >= a2;
      if (v7 >= a2) {
        uint64_t v9 = (uint64_t *)v3;
      }
      else {
        uint64_t v9 = (uint64_t *)(v3 + 8);
      }
      if (v8) {
        uint64_t v6 = v3;
      }
      uint64_t v3 = *v9;
    }
    while (*v9);
    if (v6 != v2 && *(_DWORD *)(v6 + 32) <= a2)
    {
      uint64_t v10 = *(const void **)(v6 + 40);
      uint64_t v11 = *(void *)(v6 + 48);
      if (v11 - (void)v10 == 16)
      {
        __p = 0;
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        sub_1DDA1808C(&__p, v10, v11, 2uLL);
        double v5 = *((double *)__p + 1);
        uint64_t v14 = __p;
        operator delete(__p);
      }
    }
  }
  return v5;
}

uint64_t sub_1DDA24F3C()
{
  return 0;
}

double sub_1DDA24F44()
{
  return 0.0;
}

void sub_1DDA24F4C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1DDA24F4C(a1, *a2);
    sub_1DDA24F4C(a1, a2[1]);
    uint64_t v4 = (void *)a2[5];
    if (v4)
    {
      a2[6] = v4;
      operator delete(v4);
    }
    operator delete(a2);
  }
}

uint64_t **sub_1DDA24FB0(uint64_t **a1, unsigned int *a2, uint64_t a3, _DWORD **a4)
{
  unsigned int v7 = a1 + 1;
  uint64_t v6 = a1[1];
  if (v6)
  {
    unsigned int v8 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = (uint64_t **)v6;
        unsigned int v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10) {
          break;
        }
        uint64_t v6 = *v9;
        unsigned int v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      uint64_t v6 = v9[1];
      if (!v6)
      {
        unsigned int v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v9 = a1 + 1;
LABEL_10:
    uint64_t v11 = operator new(0x40uLL);
    v11[8] = **a4;
    *((void *)v11 + 6) = 0;
    *((void *)v11 + 7) = 0;
    *((void *)v11 + 5) = 0;
    sub_1DDA25078(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

uint64_t *sub_1DDA25078(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  double v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  double result = sub_1DDA250D0(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *sub_1DDA250D0(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      uint64_t v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      uint64_t v3 = (uint64_t *)v2[2];
      uint64_t v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (int v8 = *(unsigned __int8 *)(v7 + 24), v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            uint64_t v9 = (uint64_t **)a2[2];
          }
          else
          {
            uint64_t v9 = (uint64_t **)v2[1];
            unsigned int v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              uint64_t v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *uint64_t v9 = v2;
            v2[2] = (uint64_t)v9;
            uint64_t v3 = v9[2];
            uint64_t v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          *uint64_t v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (int v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          uint64_t *v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            uint64_t v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          uint64_t v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        uint64_t v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        uint64_t *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      *double v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void sub_1DDA25268(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395ABB8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA25288(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395ABB8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA252DC(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_1DDA25304(uint64_t result, int a2, int a3, int a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  *(void *)double result = &unk_1F395AC08;
  *(_DWORD *)(result + 8) = a2;
  *(double *)(result + 32) = a7;
  *(_DWORD *)(result + 40) = a3;
  *(double *)(result + 64) = a10;
  *(_DWORD *)(result + 72) = a4;
  if (a2)
  {
    double v10 = fmin(fmax(a5, -0.1), 0.1);
    double v11 = fmin(fmax(a6, -0.01), 0.02);
    *(double *)(result + 32) = fmin(fmax(a7, -0.5), 1.5);
  }
  else
  {
    double v10 = fmin(fmax(a5, -0.01), 0.02);
    double v11 = fmin(fmax(a6, -0.5), 1.5);
  }
  *(double *)(result + 16) = v10;
  *(double *)(result + 24) = v11;
  if (a3)
  {
    double v12 = fmin(fmax(a8, -0.001), 0.2);
    double v13 = fmin(fmax(a9, -5.0), 1.0);
    *(double *)(result + 64) = fmin(fmax(a10, -1000.0), 1000.0);
  }
  else
  {
    double v12 = fmin(fmax(a8, -0.5), 0.5);
    double v13 = fmin(fmax(a9, -1000.0), 1000.0);
  }
  *(double *)(result + 48) = v12;
  *(double *)(result + 56) = v13;
  return result;
}

void sub_1DDA25428()
{
}

uint64_t sub_1DDA2543C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 8);
}

double sub_1DDA25444(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_1DDA2544C(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

double sub_1DDA25454(uint64_t a1)
{
  double result = 0.0;
  if (*(_DWORD *)(a1 + 8) == 1) {
    return *(double *)(a1 + 32);
  }
  return result;
}

uint64_t sub_1DDA2546C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

double sub_1DDA25474(uint64_t a1)
{
  return *(double *)(a1 + 48);
}

double sub_1DDA2547C(uint64_t a1)
{
  return *(double *)(a1 + 56);
}

double sub_1DDA25484(uint64_t a1)
{
  double result = 0.0;
  if (*(_DWORD *)(a1 + 40) == 1) {
    return *(double *)(a1 + 64);
  }
  return result;
}

uint64_t sub_1DDA2549C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

void *sub_1DDA254A4@<X0>(int *a1@<X1>, double *a2@<X2>, double *a3@<X3>, double *a4@<X4>, int *a5@<X5>, double *a6@<X6>, double *a7@<X7>, void *a8@<X8>, double *a9, int *a10, int *a11, double *a12, double *a13, double *a14, double *a15, int *a16, double *a17, double *a18, double *a19, int *a20,double *a21,double *a22,double *a23,int *a24,double *a25,double *a26,double *a27)
{
  double v35 = operator new(0xE8uLL);
  double result = sub_1DDA255D8(v35, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27);
  *a8 = v35 + 3;
  a8[1] = v35;
  return result;
}

void sub_1DDA255C4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA255D8(void *a1, int *a2, double *a3, double *a4, double *a5, int *a6, double *a7, double *a8, double *a9, int *a10, int *a11, double *a12, double *a13, double *a14, double *a15, int *a16, double *a17, double *a18, double *a19, int *a20,double *a21,double *a22,double *a23,int *a24,double *a25,double *a26,double *a27)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395AD40;
  sub_1DDA25714((uint64_t)(a1 + 3), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27);
  return a1;
}

void sub_1DDA25664(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA25678(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395AD40;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA25698(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395AD40;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA256EC(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_1DDA25714(uint64_t a1, int *a2, double *a3, double *a4, double *a5, int *a6, double *a7, double *a8, double *a9, int *a10, int *a11, double *a12, double *a13, double *a14, double *a15, int *a16, double *a17, double *a18, double *a19, int *a20,double *a21,double *a22,double *a23,int *a24,double *a25,double *a26,double *a27)
{
  int v28 = *a2;
  double v29 = *a3;
  double v30 = *a4;
  double v31 = *a5;
  int v32 = *a6;
  double v33 = *a7;
  double v34 = *a8;
  double v35 = *a9;
  int v36 = *a10;
  int v37 = *a11;
  double v38 = *a12;
  double v39 = *a13;
  double v40 = *a14;
  int v41 = *a16;
  int v42 = *a20;
  int v43 = *a24;
  double v45 = *a15;
  double v46 = *a17;
  double v47 = *a18;
  double v48 = *a19;
  double v49 = *a21;
  double v50 = *a22;
  double v53 = *a26;
  double v54 = *a27;
  double v51 = *a23;
  double v52 = *a25;
  return sub_1DDA257F4(a1, v28, v32, v36, v37, v41, v42, v43, v29, v30, v31, v33, v34, v35, v38, v39, v40, v45, v46,
           v47,
           v48,
           v49,
           v50,
           v51,
           v52,
           v53,
           v54);
}

uint64_t sub_1DDA257F4(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, double a18, double a19, double a20,double a21,double a22,double a23,double a24,double a25,double a26,double a27)
{
  uint64_t result = sub_1DDA25304(a1, a2, a3, a4, a9, a10, a11, a12, a13, a14);
  *(void *)uint64_t result = &unk_1F395AD90;
  *(_DWORD *)(result + 76) = a5;
  *(double *)(result + 104) = a18;
  *(_DWORD *)(result + 112) = a6;
  *(double *)(result + 120) = a19;
  *(double *)(result + 128) = a20;
  *(double *)(result + 136) = a21;
  *(_DWORD *)(result + 144) = a7;
  *(double *)(result + 152) = a22;
  *(double *)(result + 160) = a23;
  *(double *)(result + 168) = a24;
  *(_DWORD *)(result + 176) = a8;
  *(double *)(result + 184) = a25;
  *(double *)(result + 192) = a26;
  *(double *)(result + 200) = a27;
  *(double *)(result + 80) = fmin(fmax(a15, 0.0), 1.0);
  if (a5)
  {
    double v32 = fmin(fmax(a16, -0.1), 0.1);
    double v33 = fmin(fmax(a17, -0.01), 0.02);
    *(double *)(result + 104) = fmin(fmax(a18, -0.5), 1.5);
  }
  else
  {
    double v32 = fmin(fmax(a16, -0.01), 0.02);
    double v33 = fmin(fmax(a17, -0.5), 1.5);
  }
  *(double *)(result + 88) = v32;
  *(double *)(result + 96) = v33;
  if (a6)
  {
    double v34 = fmin(fmax(a19, -0.001), 0.2);
    double v35 = fmin(fmax(a20, -5.0), 1.0);
    *(double *)(result + 136) = fmin(fmax(a21, -1000.0), 1000.0);
  }
  else
  {
    double v34 = fmin(fmax(a19, -0.5), 0.5);
    double v35 = fmin(fmax(a20, -1000.0), 1000.0);
  }
  *(double *)(result + 120) = v34;
  *(double *)(result + 128) = v35;
  if (a7)
  {
    double v36 = fmin(fmax(a22, -0.1), 0.1);
    double v37 = fmin(fmax(a23, -0.01), 0.02);
    *(double *)(result + 168) = fmin(fmax(a24, -0.5), 1.5);
  }
  else
  {
    double v36 = fmin(fmax(a22, -0.01), 0.02);
    double v37 = fmin(fmax(a23, -0.5), 1.5);
  }
  *(double *)(result + 152) = v36;
  *(double *)(result + 160) = v37;
  if (a8)
  {
    double v38 = fmin(fmax(a25, -0.001), 0.2);
    double v39 = fmin(fmax(a26, -5.0), 1.0);
    *(double *)(result + 200) = fmin(fmax(a27, -1000.0), 1000.0);
  }
  else
  {
    double v38 = fmin(fmax(a25, -0.5), 0.5);
    double v39 = fmin(fmax(a26, -1000.0), 1000.0);
  }
  *(double *)(result + 184) = v38;
  *(double *)(result + 192) = v39;
  return result;
}

void sub_1DDA25A90()
{
}

uint64_t sub_1DDA25AA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

double sub_1DDA25AAC(uint64_t a1)
{
  return *(double *)(a1 + 80);
}

double sub_1DDA25AB4(uint64_t a1)
{
  return *(double *)(a1 + 88);
}

double sub_1DDA25ABC(uint64_t a1)
{
  return *(double *)(a1 + 96);
}

double sub_1DDA25AC4(uint64_t a1)
{
  return *(double *)(a1 + 104);
}

uint64_t sub_1DDA25ACC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 112);
}

double sub_1DDA25AD4(uint64_t a1)
{
  return *(double *)(a1 + 120);
}

double sub_1DDA25ADC(uint64_t a1)
{
  return *(double *)(a1 + 128);
}

double sub_1DDA25AE4(uint64_t a1)
{
  return *(double *)(a1 + 136);
}

uint64_t sub_1DDA25AEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

double sub_1DDA25AF4(uint64_t a1)
{
  return *(double *)(a1 + 152);
}

double sub_1DDA25AFC(uint64_t a1)
{
  return *(double *)(a1 + 160);
}

double sub_1DDA25B04(uint64_t a1)
{
  return *(double *)(a1 + 168);
}

uint64_t sub_1DDA25B0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 176);
}

double sub_1DDA25B14(uint64_t a1)
{
  return *(double *)(a1 + 184);
}

double sub_1DDA25B1C(uint64_t a1)
{
  return *(double *)(a1 + 192);
}

double sub_1DDA25B24(uint64_t a1)
{
  return *(double *)(a1 + 200);
}

void *sub_1DDA25B2C(void *a1, unint64_t a2, void *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1DDA18108(a1, a2);
    int v6 = (void *)a1[1];
    uint64_t v7 = &v6[a2];
    uint64_t v8 = 8 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 8;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_1DDA25B94(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1DDA25BB0(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  uint64_t v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 3)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 61) {
      sub_1DDA17F78();
    }
    uint64_t v10 = v8 >> 2;
    if (v8 >> 2 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = sub_1DDA18108(v7, v11);
    double v13 = (char *)v7[1];
    double v12 = (void **)(v7 + 1);
    uint64_t v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      uint64_t v18 = v9;
      uint64_t v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  double v12 = (void **)(result + 8);
  uint64_t v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 3;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  char v16 = &__src[8 * v15];
  if (v14 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v14 - v9);
    uint64_t v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    uint64_t v18 = v9;
    uint64_t v19 = v16;
LABEL_18:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *double v12 = &v9[v17];
  return result;
}

void *sub_1DDA25CBC@<X0>(void **a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x30uLL);
  uint64_t result = sub_1DDA25D18(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1DDA25D04(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA25D18(void *a1, void **a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395AEC8;
  sub_1DDA1E570(a1 + 3, *a2);
  return a1;
}

void sub_1DDA25D64(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA25D78(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395AEC8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA25D98(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395AEC8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA25DEC(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_1DDA25E14(uint64_t a1, char *a2, const void *a3)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  *(void *)sub_1DDA19A5C(a1, a3) = &unk_1F395AF18;
  *(void *)(a1 + 48) = fopen(a2, "r");
  sub_1DDA1A880((void *)(a1 + 56), a2);
  *(_DWORD *)(a1 + 80) = 0;
  double v5 = *(FILE **)(a1 + 48);
  if (!v5)
  {
    int v6 = __error();
    snprintf(__str, 0x80uLL, "Failed to open file[%d]: %s\n", *v6, __str);
    double v5 = *(FILE **)(a1 + 48);
    if (!v5)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
  }
  setvbuf(v5, 0, 0, 0x4000uLL);
  return a1;
}

void sub_1DDA25F44(_Unwind_Exception *a1)
{
  sub_1DDA19AE8(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA25F88(uint64_t a1)
{
  *(void *)a1 = &unk_1F395AF18;
  uint64_t v2 = *(FILE **)(a1 + 48);
  if (v2)
  {
    fclose(v2);
    *(void *)(a1 + 48) = 0;
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }

  return sub_1DDA19AE8((void *)a1);
}

void sub_1DDA25FFC(uint64_t a1)
{
  sub_1DDA25F88(a1);

  JUMPOUT(0x1E01C3DC0);
}

char *sub_1DDA26034@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[79] < 0) {
    return (char *)sub_1DDA2639C((unsigned char *)a2, *((void **)result + 7), *((void *)result + 8));
  }
  *(_OWORD *)a2 = *(_OWORD *)(result + 56);
  *(void *)(a2 + 16) = *((void *)result + 9);
  return result;
}

uint64_t sub_1DDA26060(uint64_t a1)
{
  int v2 = fileno(*(FILE **)(a1 + 48));
  if (v2 < 1 || !fstat(v2, &v4)) {
    return sub_1DDA19B70(a1);
  }
  sub_1DDA18500(&v5, (unint64_t *)&v4.st_size);
  return v5;
}

uint64_t sub_1DDA260C4(uint64_t a1, void *__ptr, size_t a3)
{
  size_t v8 = fread(__ptr, 1uLL, a3, *(FILE **)(a1 + 48));
  sub_1DDA18500(&v9, &v8);
  uint64_t v5 = v9;
  if (a3 != v9)
  {
    int v6 = *(FILE **)(a1 + 48);
    if (!ferror(v6))
    {
      feof(v6);
      return v9;
    }
  }
  return v5;
}

uint64_t sub_1DDA26144(uint64_t a1, int *a2, int a3)
{
  int v10 = 0;
  if (!a3) {
    int v10 = sub_1DDA19CA4(a1);
  }
  int v6 = *(FILE **)(a1 + 48);
  int v11 = *a2;
  uint64_t v7 = sub_1DDA1A378(&v11, &v10);
  uint64_t result = fseeko(v6, (int)*v7, a3);
  if (result)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA261F4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA26208(uint64_t a1)
{
  off_t v3 = ftello(*(FILE **)(a1 + 48));
  sub_1DDA1B2DC(&v4, &v3);
  LODWORD(v3) = sub_1DDA19CA4(a1);
  sub_1DDA26264(&v4, &v3);
  return v4;
}

_DWORD *sub_1DDA26264(_DWORD *result, _DWORD *a2)
{
  BOOL v2 = __OFSUB__(*result, *a2);
  *result -= *a2;
  if (v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA262CC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA262E0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 80);
  *(_DWORD *)(a1 + 80) = v1 + 1;
  if (!v1) {
    flockfile(*(FILE **)(a1 + 48));
  }
}

void sub_1DDA262FC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 80);
  if (v1 <= 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  int v2 = v1 - 1;
  *(_DWORD *)(a1 + 80) = v2;
  if (!v2)
  {
    off_t v3 = *(FILE **)(a1 + 48);
    funlockfile(v3);
  }
}

void sub_1DDA26388(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA2639C(unsigned char *__dst, void *__src, unint64_t a3)
{
  uint64_t v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_1DDA1A934();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17) {
      uint64_t v6 = a3 | 7;
    }
    uint64_t v7 = v6 + 1;
    size_t v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    *uint64_t v5 = v8;
    uint64_t v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }

  return memmove(v5, __src, a3 + 1);
}

uint64_t sub_1DDA2643C(uint64_t a1, uint64_t a2, _DWORD *a3, char a4)
{
  uint64_t v8 = sub_1DDA19A5C(a1, 0);
  *(void *)uint64_t v8 = &unk_1F395AF98;
  *(void *)(v8 + 48) = a2;
  *(_DWORD *)(v8 + 56) = *a3;
  *(void *)(v8 + 64) = a2;
  *(unsigned char *)(v8 + 72) = a4;
  if (!a2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return a1;
}

void sub_1DDA264EC(_Unwind_Exception *a1)
{
  sub_1DDA19AE8(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA26514(uint64_t a1)
{
  *(void *)a1 = &unk_1F395AF98;
  if (*(unsigned char *)(a1 + 72))
  {
    uint64_t v2 = *(void *)(a1 + 48);
    if (v2) {
      MEMORY[0x1E01C3DA0](v2, 0x1000C8077774924);
    }
  }

  return sub_1DDA19AE8((void *)a1);
}

void sub_1DDA2658C(uint64_t a1)
{
  sub_1DDA26514(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA265C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_1DDA265CC(uint64_t a1, void *a2, unint64_t a3)
{
  unint64_t v3 = *(void *)(a1 + 64);
  unint64_t v4 = *(void *)(a1 + 48);
  BOOL v5 = v3 >= v4;
  uint64_t v6 = v3 - v4;
  if (v5 && ((unint64_t v10 = *(unsigned int *)(a1 + 56), v6 < 0) || v6 < v10))
  {
    uint64_t v15 = v6;
    v16[0] = v10;
    *(void *)char v16 = *sub_1DDA267E4(v16, &v15);
    unint64_t v14 = a3;
    if (a3 >= *(void *)v16) {
      int v11 = (unint64_t *)v16;
    }
    else {
      int v11 = &v14;
    }
    sub_1DDA18500(&__len, v11);
    uint64_t v12 = __len;
    memmove(a2, *(const void **)(a1 + 64), __len);
    *(void *)(a1 + 64) += v12;
  }
  else
  {
    v16[0] = 0;
    sub_1DDA1B3CC(&__len, v16);
    return __len;
  }
  return v12;
}

uint64_t sub_1DDA26698(uint64_t a1, int *a2, int a3)
{
  if (a3)
  {
    if (a3 == 1)
    {
      unint64_t v4 = *(void *)(a1 + 64) + *a2;
    }
    else
    {
      if (a3 != 2)
      {
        unint64_t v4 = *(void *)(a1 + 64);
        goto LABEL_9;
      }
      unint64_t v4 = *(void *)(a1 + 48) + *(unsigned int *)(a1 + 56) + *a2;
    }
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 48) + *a2;
    unint64_t v4 = v5 + (int)sub_1DDA19CA4(a1);
  }
  *(void *)(a1 + 64) = v4;
LABEL_9:
  unint64_t v6 = *(void *)(a1 + 48);
  BOOL v7 = v4 >= v6;
  uint64_t v8 = v4 - v6;
  if (!v7 || v8 >= 0 && v8 > (unint64_t)*(unsigned int *)(a1 + 56))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return 0;
}

void sub_1DDA26770(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA26784(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 64) - *(void *)(a1 + 48);
  sub_1DDA1B2DC(&v4, &v3);
  LODWORD(v3) = sub_1DDA19CA4(a1);
  sub_1DDA26264(&v4, &v3);
  return v4;
}

_DWORD *sub_1DDA267E4(_DWORD *result, void *a2)
{
  uint64_t v2 = *result;
  BOOL v3 = __OFSUB__(v2, *a2);
  unint64_t v4 = v2 - *a2;
  *uint64_t result = v4;
  if (v3 || HIDWORD(v4))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA26854(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA26868(uint64_t a1, void *a2, char a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395B018;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = -1;
  uint64_t v11 = a2[1];
  *(void *)(a1 + 80) = *a2;
  *(void *)(a1 + 88) = v11;
  if (v11) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
  }
  *(unsigned char *)(a1 + 96) = a3;
  *(unsigned char *)(a1 + 97) = 0;
  *(void *)(a1 + 104) = 0;
  id v12 = v10;
  *(void *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 120) = a1 + 128;
  id v23 = v12;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a1 + 152;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 168) = a1 + 176;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 192) = a1 + 200;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 216) = a1 + 224;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 240) = a1 + 248;
  *(void *)(a1 + 264) = a1 + 272;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 288) = a1 + 296;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = a1 + 320;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 336) = a1 + 344;
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 368) = 0;
  *(void *)(a1 + 360) = a1 + 368;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = a1 + 392;
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = a1 + 416;
  *(void *)(a1 + 432) = a1 + 440;
  *(void *)(a1 + 440) = 0;
  *(void *)(a1 + 464) = 0;
  *(void *)(a1 + 472) = 0;
  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 456) = a1 + 464;
  *(void *)(a1 + 488) = 0;
  *(void *)(a1 + 496) = 0;
  *(void *)(a1 + 480) = a1 + 488;
  uint64_t v18 = *a2;
  uint64_t v17 = a2[1];
  if (v17) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v17 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v19 = *(std::__shared_weak_count **)(a1 + 88);
  *(void *)(a1 + 80) = v18;
  *(void *)(a1 + 88) = v17;
  if (v19) {
    sub_1DDA18310(v19);
  }
  if (v9)
  {
    id v20 = v9;
  }
  else
  {
    objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v13, v14, v15, v16);
    id v20 = (id)objc_claimAutoreleasedReturnValue();
  }
  uint64_t v21 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = v20;

  return a1;
}

void sub_1DDA26ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  sub_1DDA2A4CC(v22, *(char **)(v18 + 488));
  sub_1DDA2A4CC(a10, *(char **)(v18 + 464));
  sub_1DDA2A4CC(a11, *(char **)(v18 + 440));
  sub_1DDA2A4CC(a12, *(char **)(v18 + 416));
  sub_1DDA2A4CC(a13, *(char **)(v18 + 392));
  sub_1DDA2A4CC(v23, *(char **)(v18 + 368));
  sub_1DDA2A4CC(v21, *(char **)(v18 + 344));
  sub_1DDA2A4CC(v20, *(char **)(v18 + 320));
  sub_1DDA2A4CC(v19, *(char **)(v18 + 296));
  sub_1DDA2A418(v26, *(void **)(v18 + 272));
  sub_1DDA2A418(v25, *(void **)(v18 + 248));
  sub_1DDA2A418(v24, *(void **)(v18 + 224));
  sub_1DDA2A418(a14, *(void **)(v18 + 200));
  sub_1DDA2A418(a15, *(void **)(v18 + 176));
  sub_1DDA2A418(a16, *(void **)(v18 + 152));
  sub_1DDA2A418(a17, *(void **)(v18 + 128));

  int v28 = *(std::__shared_weak_count **)(v18 + 88);
  if (v28) {
    sub_1DDA18310(v28);
  }
  sub_1DDBF4684(v18);

  _Unwind_Resume(a1);
}

uint64_t sub_1DDA26BB4(uint64_t a1)
{
  return *(void *)(a1 + 40);
}

uint64_t sub_1DDA26BBC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = a2;
  return result;
}

uint64_t sub_1DDA26BC4(void *a1)
{
  if (a1[6]) {
    return a1[6];
  }
  else {
    return (*(uint64_t (**)(void))(*a1 + 88))();
  }
}

uint64_t sub_1DDA26BF8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 48) = a2;
  return result;
}

uint64_t sub_1DDA26C00(void *a1)
{
  if (a1[7]) {
    return a1[7];
  }
  else {
    return (*(uint64_t (**)(void))(*a1 + 88))();
  }
}

uint64_t sub_1DDA26C34(uint64_t result, uint64_t a2)
{
  *(void *)(result + 56) = a2;
  return result;
}

uint64_t sub_1DDA26C3C(uint64_t a1)
{
  sub_1DDA1B2DC(&v2, (uint64_t *)(a1 + 64));
  return v2;
}

uint64_t sub_1DDA26C68(uint64_t result, int *a2)
{
  *(void *)(result + 64) = *a2;
  return result;
}

uint64_t sub_1DDA26C74(uint64_t a1)
{
  sub_1DDA1B2DC(&v2, (uint64_t *)(a1 + 72));
  return v2;
}

uint64_t sub_1DDA26CA0(uint64_t result, int *a2)
{
  *(void *)(result + 72) = *a2;
  return result;
}

uint64_t sub_1DDA26CAC(void **a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (uint64_t)(a1 + 30);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  unint64_t v6 = sub_1DDA2A530(v5, __p);
  if (a1 + 31 == v6 || (BOOL v7 = v6[7], v6[8] == v7))
  {
    uint64_t v8 = 0;
  }
  else
  {
    *a3 = *v7;
    uint64_t v8 = 1;
  }
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  return v8;
}

void sub_1DDA26D60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA26D7C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (uint64_t)(a1 + 33);
  if (a4)
  {
    uint64_t v9 = 0;
    id v10 = a1 + 34;
    uint64_t v11 = 0;
    do
    {
      (*((void (**)(void **__return_ptr, void **, uint64_t))*a1 + 49))(__p, a1, a2);
      id v12 = sub_1DDA2A530(v7, __p);
      if (v10 == v12 || (double v13 = v12[7], v9 + a4 >= (unint64_t)(((unsigned char *)v12[8] - (unsigned char *)v13) >> 3)))
      {
        int v14 = 0;
      }
      else
      {
        uint64_t v11 = v13[v9 + a4];
        int v14 = 1;
      }
      if (v30 < 0) {
        operator delete(__p[0]);
      }
      if (!v14)
      {
        exception = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E01C3B90](exception, "RawCameraException");
        __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      uint64_t v16 = *(void **)(a3 + 8);
      unint64_t v15 = *(void *)(a3 + 16);
      if ((unint64_t)v16 >= v15)
      {
        uint64_t v18 = *(void **)a3;
        uint64_t v19 = ((uint64_t)v16 - *(void *)a3) >> 3;
        unint64_t v20 = v19 + 1;
        if ((unint64_t)(v19 + 1) >> 61) {
          sub_1DDA17F78();
        }
        uint64_t v21 = v15 - (void)v18;
        if (v21 >> 2 > v20) {
          unint64_t v20 = v21 >> 2;
        }
        if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v22 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v22 = v20;
        }
        if (v22)
        {
          uint64_t v23 = (char *)sub_1DDA1814C(a3 + 16, v22);
          uint64_t v18 = *(void **)a3;
          uint64_t v16 = *(void **)(a3 + 8);
        }
        else
        {
          uint64_t v23 = 0;
        }
        uint64_t v24 = &v23[8 * v19];
        *(void *)uint64_t v24 = v11;
        uint64_t v17 = v24 + 8;
        while (v16 != v18)
        {
          uint64_t v25 = *--v16;
          *((void *)v24 - 1) = v25;
          v24 -= 8;
        }
        *(void *)a3 = v24;
        *(void *)(a3 + 8) = v17;
        *(void *)(a3 + 16) = &v23[8 * v22];
        if (v18) {
          operator delete(v18);
        }
      }
      else
      {
        *uint64_t v16 = v11;
        uint64_t v17 = v16 + 1;
      }
      *(void *)(a3 + 8) = v17;
      ++v9;
    }
    while (v9 != 4);
    return 1;
  }
  else
  {
    (*((void (**)(void **__return_ptr, void **, uint64_t))*a1 + 49))(__p, a1, a2);
    BOOL v26 = sub_1DDA26FFC(v7, __p, (char *)a3);
    if (v30 < 0) {
      operator delete(__p[0]);
    }
  }
  return v26;
}

void sub_1DDA26FCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA26FFC(uint64_t a1, void **a2, char *a3)
{
  uint64_t v5 = sub_1DDA2A530(a1, a2);
  unint64_t v6 = v5;
  uint64_t v7 = (void **)(a1 + 8);
  if (v7 != v5 && v5 + 7 != (void **)a3) {
    sub_1DDA25BB0(a3, (char *)v5[7], (uint64_t)v5[8], ((unsigned char *)v5[8] - (unsigned char *)v5[7]) >> 3);
  }
  return v7 != v6;
}

void sub_1DDA27064(uint64_t a1@<X0>, int a2@<W1>, void **a3@<X8>)
{
  int v42 = 0;
  sub_1DDA25B2C(a3, 4uLL, &v42);
  int v42 = 0;
  int v43 = 0;
  uint64_t v44 = 0;
  double v39 = 0;
  double v40 = 0;
  uint64_t v41 = 0;
  double v36 = 0;
  double v37 = 0;
  uint64_t v38 = 0;
  sub_1DDA1A880(&__p, "IFD0:SUBIFD0");
  char v6 = (*(uint64_t (**)(uint64_t, void **, double **, void))(*(void *)a1 + 248))(a1, &__p, &v42, 0);
  char v7 = v6;
  if (SHIBYTE(v35) < 0)
  {
    operator delete(__p);
    if (v7) {
      goto LABEL_7;
    }
  }
  else if (v6)
  {
    goto LABEL_7;
  }
  sub_1DDA1A880(&__p, "IFD0");
  (*(void (**)(uint64_t, void **, double **, void))(*(void *)a1 + 248))(a1, &__p, &v42, 0);
  if (SHIBYTE(v35) < 0) {
    operator delete(__p);
  }
LABEL_7:
  sub_1DDA1A880(&__p, "IFD0:SUBIFD0:DeltaH");
  char v8 = (*(uint64_t (**)(uint64_t, void **, void **, void))(*(void *)a1 + 248))(a1, &__p, &v39, 0);
  char v9 = v8;
  if (SHIBYTE(v35) < 0)
  {
    operator delete(__p);
    if (v9) {
      goto LABEL_13;
    }
  }
  else if (v8)
  {
    goto LABEL_13;
  }
  sub_1DDA1A880(&__p, "IFD0:DeltaH");
  (*(void (**)(uint64_t, void **, void **, void))(*(void *)a1 + 248))(a1, &__p, &v39, 0);
  if (SHIBYTE(v35) < 0) {
    operator delete(__p);
  }
LABEL_13:
  sub_1DDA1A880(&__p, "IFD0:SUBIFD0:DeltaV");
  char v10 = (*(uint64_t (**)(uint64_t, void **, void **, void))(*(void *)a1 + 248))(a1, &__p, &v36, 0);
  char v11 = v10;
  if (SHIBYTE(v35) < 0)
  {
    operator delete(__p);
    if (v11) {
      goto LABEL_18;
    }
  }
  else if (v10)
  {
    goto LABEL_18;
  }
  sub_1DDA1A880(&__p, "IFD0:DeltaV");
  (*(void (**)(uint64_t, void **, void **, void))(*(void *)a1 + 248))(a1, &__p, &v36, 0);
  if (SHIBYTE(v35) < 0)
  {
    operator delete(__p);
    if (a2) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }
LABEL_18:
  if (a2)
  {
LABEL_19:
    id v12 = v42;
    if (v43 == v42)
    {
      double v15 = 0.0;
    }
    else
    {
      double v13 = 0.0;
      do
      {
        double v14 = *v12++;
        double v13 = v13 + v14;
      }
      while (v12 != v43);
      double v15 = round(v13 / (double)(unint64_t)(v43 - v42));
    }
    uint64_t v16 = (double *)v39;
    if (v40 != v39)
    {
      double v17 = 0.0;
      do
      {
        double v18 = *v16++;
        double v17 = v17 + v18;
      }
      while (v16 != v40);
      double v15 = v15 + round(v17 / (double)(unint64_t)(((char *)v40 - (unsigned char *)v39) >> 3));
    }
    uint64_t v19 = (double *)v36;
    if (v37 != v36)
    {
      double v20 = 0.0;
      uint64_t v21 = (double *)v36;
      do
      {
        double v22 = *v21++;
        double v20 = v20 + v22;
      }
      while (v21 != v37);
      double v15 = v15 + floor(v20 / (double)(unint64_t)(((char *)v37 - (unsigned char *)v36) >> 3));
    }
    uint64_t v23 = (double *)*a3;
    if ((unint64_t)((unsigned char *)a3[1] - (unsigned char *)*a3) <= 0x18) {
      sub_1DDA24AD0();
    }
    v23[2] = v15;
    v23[3] = v15;
    *uint64_t v23 = v15;
    v23[1] = v15;
    goto LABEL_46;
  }
LABEL_35:
  uint64_t v33 = 0;
  sub_1DDA25B2C(&__p, 4uLL, &v33);
  uint64_t v24 = (double *)*a3;
  if (*a3)
  {
    a3[1] = v24;
    operator delete(v24);
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  uint64_t v25 = (double *)__p;
  *a3 = __p;
  BOOL v26 = (double *)v35;
  *(_OWORD *)(a3 + 1) = v35;
  uint64_t v19 = (double *)v36;
  if (v26 != v25)
  {
    unint64_t v27 = 0;
    int v28 = v42;
    unint64_t v29 = v43 - v42;
    char v30 = (double *)v39;
    unint64_t v31 = ((char *)v40 - (unsigned char *)v39) >> 3;
    unint64_t v32 = ((char *)v37 - (unsigned char *)v36) >> 3;
    do
    {
      if (v29 > v27) {
        v25[v27] = v28[v27] + v25[v27];
      }
      if (v31 > v27) {
        v25[v27] = v30[v27] + v25[v27];
      }
      if (v32 > v27) {
        v25[v27] = v19[v27] + v25[v27];
      }
      ++v27;
    }
    while (v26 - v25 > (unint64_t)v27);
  }
LABEL_46:
  if (v19)
  {
    double v37 = v19;
    operator delete(v19);
  }
  if (v39)
  {
    double v40 = (double *)v39;
    operator delete(v39);
  }
  if (v42)
  {
    int v43 = v42;
    operator delete(v42);
  }
}

void sub_1DDA274BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, uint64_t a19, void *a20,uint64_t a21)
{
  if (__p) {
    operator delete(__p);
  }
  if (a20) {
    operator delete(a20);
  }
  uint64_t v24 = *(void **)(v22 - 56);
  if (v24)
  {
    *(void *)(v22 - 48) = v24;
    operator delete(v24);
  }
  uint64_t v25 = *(void **)v21;
  if (*(void *)v21)
  {
    *(void *)(v21 + 8) = v25;
    operator delete(v25);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA27550(void **a1)
{
  uint64_t v2 = (uint64_t)(a1 + 24);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  BOOL v3 = sub_1DDA2A530(v2, __p);
  if (a1 + 25 == v3 || (unint64_t v4 = (unsigned int *)v3[7], v3[8] == v4)) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *v4;
  }
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

void sub_1DDA275F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2760C(void **a1)
{
  uint64_t v2 = (uint64_t)(a1 + 27);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  BOOL v3 = sub_1DDA2A530(v2, __p);
  if (a1 + 28 == v3 || (unint64_t v4 = (unsigned __int16 *)v3[7], v3[8] == v4)) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *v4;
  }
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

void sub_1DDA276AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA276C8(void **a1, uint64_t a2, char a3)
{
  uint64_t v6 = (uint64_t)(a1 + 36);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  char v7 = sub_1DDA2A530(v6, __p);
  char v8 = v7;
  if (a1 + 37 == v7) {
    double v9 = -1.0;
  }
  else {
    double v9 = *((double *)v7 + 7);
  }
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  if (a1 + 37 == v8 && (a3 & 1) != 0)
  {
    (*((void (**)(void **__return_ptr, void **, uint64_t))*a1 + 49))(__p, a1, a2);
    double v10 = (*((double (**)(void **, void **))*a1 + 36))(a1, __p);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    double v9 = -1.0;
    if (v10 > -100.0) {
      return exp2(-v10);
    }
  }
  return v9;
}

void sub_1DDA27838(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA27858(double a1)
{
  return exp2(-a1);
}

double sub_1DDA27860(void **a1)
{
  uint64_t v2 = (uint64_t)(a1 + 39);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  BOOL v3 = sub_1DDA2A530(v2, __p);
  if (a1 + 40 == v3) {
    double v4 = -101.0;
  }
  else {
    double v4 = *((double *)v3 + 7);
  }
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1DDA27900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2791C(void **a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t)(a1 + 42);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  uint64_t v5 = sub_1DDA2A530(v4, __p);
  uint64_t v6 = v5;
  if (a1 + 43 == v5) {
    double v7 = -1.0;
  }
  else {
    double v7 = *((double *)v5 + 7);
  }
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  if (a1 + 43 == v6)
  {
    (*((void (**)(void **__return_ptr, void **, uint64_t))*a1 + 49))(__p, a1, a2);
    char v8 = sub_1DDA2A530((uint64_t)(a1 + 45), __p);
    if (a1 + 46 == v8) {
      double v9 = -0.5;
    }
    else {
      double v9 = *((double *)v8 + 7) * 0.5;
    }
    if (v12 < 0) {
      operator delete(__p[0]);
    }
    return exp2(v9);
  }
  return v7;
}

void sub_1DDA27A54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA27A74(void **a1)
{
  uint64_t v2 = (uint64_t)(a1 + 48);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  BOOL v3 = sub_1DDA2A530(v2, __p);
  if (a1 + 49 == v3) {
    double v4 = -1.0;
  }
  else {
    double v4 = *((double *)v3 + 7);
  }
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1DDA27B10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA27B2C(void **a1)
{
  uint64_t v2 = (uint64_t)(a1 + 57);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  BOOL v3 = sub_1DDA2A530(v2, __p);
  if (a1 + 58 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = *((unsigned int *)v3 + 14);
  }
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1DDA27BC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA27BDC(void **a1)
{
  uint64_t v2 = (uint64_t)(a1 + 60);
  (*((void (**)(void **__return_ptr))*a1 + 49))(__p);
  BOOL v3 = sub_1DDA2A530(v2, __p);
  if (a1 + 61 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = *((unsigned int *)v3 + 14);
  }
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1DDA27C70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA27C8C()
{
  return 0;
}

double *sub_1DDA27C94@<X0>(uint64_t a1@<X8>)
{
  return sub_1DDAD849C(3u, a1);
}

double *sub_1DDA27C9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DDAD849C(3u, a1);
}

double sub_1DDA27CA4()
{
  return 0.0;
}

uint64_t sub_1DDA27CAC()
{
  return 0;
}

void sub_1DDA27CB4(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

double sub_1DDA27CC0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EAB8B0C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1EAB8B0C8))
  {
    qword_1EAB8B0B8 = 0;
    unk_1EAB8B0C0 = 0;
    __cxa_guard_release(&qword_1EAB8B0C8);
  }
  return *(double *)&qword_1EAB8B0B8;
}

uint64_t sub_1DDA27D28@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 80);
  if (!v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v3 = *(void *)(result + 88);
  *a2 = v2;
  a2[1] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1DDA27D9C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA27DB0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (*(char *)(a1 + 23) < 0) {
    return sub_1DDA2639C((unsigned char *)a2, *(void **)a1, *(void *)(a1 + 8));
  }
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = *(void *)(a1 + 16);
  return result;
}

id sub_1DDA27DDC(uint64_t a1)
{
  int v1 = *(void **)(a1 + 104);
  if (!v1)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }

  return v1;
}

void sub_1DDA27E48(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA27E5C()
{
  return 0;
}

uint64_t sub_1DDA27E64()
{
  return 0;
}

uint64_t sub_1DDA27E6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 224))();
}

uint64_t sub_1DDA27E90()
{
  return 0;
}

uint64_t sub_1DDA27E98()
{
  return 0;
}

uint64_t sub_1DDA27EA0()
{
  return 0;
}

uint64_t sub_1DDA27EA8(uint64_t a1)
{
  return 0;
}

uint64_t sub_1DDA27EF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 448))();
}

uint64_t sub_1DDA27F1C(uint64_t a1)
{
  return 0;
}

double sub_1DDA27F64()
{
  return *MEMORY[0x1E4F1DB28];
}

uint64_t sub_1DDA27F78()
{
  return 0x40000000400;
}

void sub_1DDA27F80(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void sub_1DDA27F8C(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t sub_1DDA27F98()
{
  return 0;
}

uint64_t sub_1DDA27FA0()
{
  return 0xFFFFLL;
}

uint64_t sub_1DDA27FA8()
{
  return 16;
}

uint64_t sub_1DDA27FB0()
{
  return 1;
}

uint64_t sub_1DDA27FB8()
{
  return 0;
}

void sub_1DDA27FC0(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_1DDA27FC8()
{
  return 0;
}

void sub_1DDA27FD0(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void sub_1DDA27FDC(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  (*(void (**)(void *__return_ptr))(*(void *)a1 + 584))(v5);
  sub_1DDA28078((uint64_t)v5, a2, a3);
  uint64_t v6 = (void **)v5;
  sub_1DDA18270(&v6);
}

void sub_1DDA28060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1DDA18270((void ***)va);
  _Unwind_Resume(a1);
}

void sub_1DDA28078(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *(uint64_t **)a1;
  if (*(void *)(a1 + 8) == *(void *)a1)
  {
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  uint64_t v8 = *v4;
  char v7 = (std::__shared_weak_count *)v4[1];
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v8) {
    goto LABEL_25;
  }
  int v9 = *(_DWORD *)(v8 + 16);
  double v10 = *(uint64_t **)a1;
  if (*(void *)(a1 + 8) != *(void *)a1)
  {
    uint64_t v11 = 0;
    unint64_t v12 = 0;
    while (1)
    {
      uint64_t v13 = v10[v11];
      if (!v13) {
        break;
      }
      if (a2 > 0xA0)
      {
        uint64_t v14 = sub_1DDAD6FB0(v8);
        uint64_t v15 = sub_1DDAD6FB0(*(void *)(*(void *)a1 + v11 * 8));
      }
      else
      {
        uint64_t v14 = sub_1DDAD6FB0(v13);
        uint64_t v15 = sub_1DDAD6FB0(v8);
      }
      if ((int)v14 <= (int)v15 && SHIDWORD(v14) <= SHIDWORD(v15))
      {
        double v17 = (uint64_t *)(*(void *)a1 + v11 * 8);
        uint64_t v8 = *v17;
        double v18 = (std::__shared_weak_count *)v17[1];
        if (v18) {
          atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        if (v7) {
          sub_1DDA18310(v7);
        }
        char v7 = v18;
        if (!v9)
        {
          int v9 = *(_DWORD *)(v8 + 16);
          char v7 = v18;
        }
      }
      ++v12;
      double v10 = *(uint64_t **)a1;
      v11 += 2;
      if (v12 >= (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 4)
      {
        int v19 = *(_DWORD *)(v8 + 16);
        goto LABEL_30;
      }
    }
LABEL_25:
    *a3 = 0;
    a3[1] = 0;
    if (v7)
    {
      sub_1DDA18310(v7);
    }
    return;
  }
  int v19 = *(_DWORD *)(v8 + 16);
LABEL_30:
  if (v19) {
    BOOL v20 = 1;
  }
  else {
    BOOL v20 = v9 == 0;
  }
  if (!v20) {
    *(_DWORD *)(v8 + 16) = v9;
  }
  *a3 = v8;
  a3[1] = (uint64_t)v7;
}

void sub_1DDA281FC(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1DDA18310(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA28220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v9 = 0;
  uint64_t v4 = a1 + 168;
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 392))(__p);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, void **, unsigned int *))(*(void *)a3 + 16))(a3, v4, __p, &v9);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  if (v5) {
    return v9;
  }
  else {
    return 0;
  }
}

void sub_1DDA282D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA282F0(uint64_t a1@<X0>, void **a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void **a5@<X8>)
{
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 392))(&__p);
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t, void **, uint64_t, void **))(*(void *)a3 + 24))(a3, a1 + 120, &__p, a4, &v23);
  int v11 = v10;
  if (SHIBYTE(v22) < 0)
  {
    operator delete(__p);
    if (v11)
    {
LABEL_3:
      sub_1DDA24B78(a5, (v24 - (unsigned char *)v23) >> 2);
      uint64_t v13 = v23;
      if (v24 == v23)
      {
        uint64_t v13 = v24;
        if (!v24) {
          return;
        }
      }
      else
      {
        uint64_t v14 = 0;
        unint64_t v15 = (v24 - (unsigned char *)v23) >> 2;
        uint64_t v16 = (double *)*a5;
        if (v15 <= 1) {
          unint64_t v15 = 1;
        }
        do
        {
          LODWORD(v12) = v13[v14];
          double v12 = (double)*(unint64_t *)&v12;
          v16[v14++] = v12;
        }
        while (v15 != v14);
      }
      goto LABEL_15;
    }
  }
  else if (v10)
  {
    goto LABEL_3;
  }
  __p = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  BOOL v17 = sub_1DDA26FFC(a1 + 144, a2, (char *)&__p);
  double v18 = __p;
  if (v17 && (int v19 = v21, v21 - (unsigned char *)__p == 24))
  {
    *a5 = __p;
    a5[1] = v19;
    a5[2] = v22;
  }
  else
  {
    *a5 = 0;
    a5[1] = 0;
    a5[2] = 0;
    if (v18)
    {
      uint64_t v21 = v18;
      operator delete(v18);
    }
  }
  uint64_t v13 = v23;
  if (v23)
  {
LABEL_15:
    uint64_t v24 = v13;
    operator delete(v13);
  }
}

void sub_1DDA28488(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA284D4(uint64_t a1@<X0>, int *a2@<X1>, unsigned int *a3@<X2>, int a4@<W3>, void *a5@<X8>)
{
  int v17 = a4;
  sub_1DDA27D28(a1, &v16);
  int v9 = (**(uint64_t (***)(void))v16)(v16);
  if (*((void *)&v16 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v16 + 1));
  }
  if (!v9) {
    goto LABEL_13;
  }
  LODWORD(v16) = *a2;
  int v10 = *sub_1DDA2A648((int *)&v16, a3);
  sub_1DDA27D28(a1, &v16);
  unsigned int v11 = (*(uint64_t (**)(void))(*(void *)v16 + 16))(v16);
  BOOL v12 = v10 < 0 || v11 >= v10;
  BOOL v13 = v12;
  if (*((void *)&v16 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v16 + 1));
  }
  if (!v13)
  {
    *a5 = 0;
    a5[1] = 0;
  }
  else
  {
LABEL_13:
    *a5 = 0;
    a5[1] = 0;
    uint64_t v14 = *a3;
    if (v14)
    {
      unint64_t v15 = sub_1DDA28638(a1, *a2, v14);
      sub_1DDA2A6DC(&v15, &v17, a2, a3, &v16);
      *(_OWORD *)a5 = v16;
    }
  }
}

void sub_1DDA28610(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1DDA18310(a12);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1DDA28638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  if (a3)
  {
    int v3 = a3;
    sub_1DDA27D28(a1, &v22);
    sub_1DDA1B2DC(&v20, &v25);
    sub_1DDA1A94C(v24, &v22, (uint64_t)&v20, 0);
    if (v23) {
      sub_1DDA18310(v23);
    }
    sub_1DDA27D28(a1, &v20);
    sub_1DDA29F88(&v22, &v20, 2);
    if (v21) {
      sub_1DDA18310(v21);
    }
    sub_1DDA27D28(a1, &v20);
    uint64_t v5 = sub_1DDA19E68(v20);
    if (v21) {
      sub_1DDA18310(v21);
    }
    unsigned int v6 = 0;
    uint64_t v7 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)a1 + 616))(a1, v5))
    {
      do
      {
        sub_1DDA27D28(a1, &v20);
        unsigned int v8 = sub_1DDA19E68(v20);
        if (v21) {
          sub_1DDA18310(v21);
        }
        sub_1DDA27D28(a1, &v20);
        __int16 v9 = sub_1DDA19E68(v20);
        if (v21) {
          sub_1DDA18310(v21);
        }
        sub_1DDA27D28(a1, &v20);
        int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v20 + 48))(v20);
        if (v21) {
          sub_1DDA18310(v21);
        }
        if (v8 < 0xFF01) {
          break;
        }
        if (v8 == 65472)
        {
          sub_1DDA27D28(a1, &v20);
          sub_1DDA19DA0(v20);
          if (v21) {
            sub_1DDA18310(v21);
          }
          sub_1DDA27D28(a1, &v20);
          uint64_t v11 = sub_1DDA19E68(v20);
          if (v21) {
            sub_1DDA18310(v21);
          }
          sub_1DDA27D28(a1, &v20);
          unsigned int v12 = sub_1DDA19E68(v20);
          if (v21) {
            sub_1DDA18310(v21);
          }
          unsigned int v6 = v12;
          uint64_t v7 = v11;
        }
        unsigned __int16 v13 = v9 - 2;
        int v3 = v3 - 4 - (unsigned __int16)(v9 - 2);
        if (v3 >= 0)
        {
          sub_1DDA27D28(a1, &v20);
          uint64_t v14 = v20;
          unint64_t v18 = v10 + (unint64_t)v13;
          sub_1DDA1B2DC(&v19, (uint64_t *)&v18);
          (*(void (**)(uint64_t, int *, void))(*(void *)v14 + 40))(v14, &v19, 0);
          if (v21) {
            sub_1DDA18310(v21);
          }
        }
        BOOL v15 = !v6 || v7 == 0;
        BOOL v16 = v15;
      }
      while (v3 >= 5 && v16 && v8 != 65498);
    }
    sub_1DDA2A000(&v22);
    sub_1DDA1AA18(v24);
  }
  else
  {
    unsigned int v6 = 0;
    uint64_t v7 = 0;
  }
  return v6 | (unint64_t)(v7 << 32);
}

void sub_1DDA28920(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17)
{
}

BOOL sub_1DDA28A04(uint64_t a1, int a2)
{
  return a2 == 65496;
}

void sub_1DDA28A14(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 8))(&v21);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  uint64_t v3 = v21;
  if (v22 != v21)
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(unsigned __int8 *)(a2 + 23);
      if ((v6 & 0x80u) != 0) {
        uint64_t v6 = *(void *)(a2 + 8);
      }
      if (v6)
      {
        sub_1DDA1A880(&v18, ".");
        int v7 = *(char *)(v21 + v4 + 23);
        if (v7 >= 0) {
          unsigned int v8 = (const std::string::value_type *)(v21 + v4);
        }
        else {
          unsigned int v8 = *(const std::string::value_type **)(v21 + v4);
        }
        if (v7 >= 0) {
          std::string::size_type v9 = *(unsigned __int8 *)(v21 + v4 + 23);
        }
        else {
          std::string::size_type v9 = *(void *)(v21 + v4 + 8);
        }
        int v10 = std::string::append(&v18, v8, v9);
        long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
        int64_t v20 = v10->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v11;
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        if (v20 >= 0) {
          unsigned int v12 = __p;
        }
        else {
          unsigned int v12 = (void **)__p[0];
        }
        if (v20 >= 0) {
          std::string::size_type v13 = HIBYTE(v20);
        }
        else {
          std::string::size_type v13 = (std::string::size_type)__p[1];
        }
        std::string::append((std::string *)a2, (const std::string::value_type *)v12, v13);
        if (SHIBYTE(v20) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v18.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        uint64_t v14 = v3 + v4;
        int v15 = *(char *)(v14 + 23);
        if (v15 >= 0) {
          BOOL v16 = (const std::string::value_type *)v14;
        }
        else {
          BOOL v16 = *(const std::string::value_type **)v14;
        }
        if (v15 >= 0) {
          std::string::size_type v17 = *(unsigned __int8 *)(v14 + 23);
        }
        else {
          std::string::size_type v17 = *(void *)(v14 + 8);
        }
        std::string::append((std::string *)a2, v16, v17);
      }
      ++v5;
      uint64_t v3 = v21;
      v4 += 24;
    }
    while (v5 < 0xAAAAAAAAAAAAAAABLL * ((v22 - v21) >> 3));
  }
  __p[0] = &v21;
  sub_1DDA2A044((void ***)__p);
}

void sub_1DDA28BA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (*(char *)(v22 + 23) < 0) {
    operator delete(*(void **)v22);
  }
  a16 = &a22;
  sub_1DDA2A044((void ***)&a16);
  _Unwind_Resume(a1);
}

void sub_1DDA28C08(void *a1@<X1>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
}

void sub_1DDA28C24(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  if (((*(uint64_t (**)(void *))(*a1 + 64))(a1) & 1) == 0)
  {
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  (*(void (**)(long long *__return_ptr, void *))*a1)(&v68, a1);
  int v10 = sub_1DDA1E51C((uint64_t)&v68, v6, v7, v8, v9);
  if (v69 < 0) {
    operator delete((void *)v68);
  }
  if (!v10)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  sub_1DDBE3F6C(v10, &v67);
  if (objc_msgSend_hasPrefix_(v10, v11, @"dng.", v12, v13))
  {
    (*(void (**)(long long *__return_ptr, void *, long long *, void *))(*a1 + 624))(&v68, a1, &v67, v10);
    long long v14 = v68;
    long long v68 = 0uLL;
    int v15 = (std::__shared_weak_count *)*((void *)&v67 + 1);
    long long v67 = v14;
    if (v15)
    {
      sub_1DDA18310(v15);
      if (*((void *)&v68 + 1)) {
        sub_1DDA18310(*((std::__shared_weak_count **)&v68 + 1));
      }
    }
  }
  *a3 = 0;
  a3[1] = 0;
  int v16 = (*(uint64_t (**)(void *))(*a1 + 408))(a1);
  int v17 = (*(uint64_t (**)(void *))(*a1 + 72))(a1);
  if (!(void)v67 || !sub_1DDB656E0(v67))
  {
    if (!v16)
    {
      *a3 = 0;
      a3[1] = 0;
LABEL_101:
      sub_1DDBE3F6C(@"unsupported", &v68);
      long long v44 = v68;
      long long v68 = 0uLL;
      double v45 = (std::__shared_weak_count *)*((void *)&v67 + 1);
      long long v67 = v44;
      if (v45)
      {
        sub_1DDA18310(v45);
        if (*((void *)&v68 + 1)) {
          sub_1DDA18310(*((std::__shared_weak_count **)&v68 + 1));
        }
        uint64_t v46 = v67;
        if ((void)v67) {
          goto LABEL_105;
        }
      }
      else
      {
        uint64_t v46 = v44;
        if ((void)v44)
        {
LABEL_105:
          uint64_t v47 = *((void *)&v67 + 1);
          if (*((void *)&v67 + 1)) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v67 + 1) + 8), 1uLL, memory_order_relaxed);
          }
          double v48 = (std::__shared_weak_count *)a1[4];
          a1[3] = v46;
          a1[4] = v47;
          if (v48) {
            sub_1DDA18310(v48);
          }
          sub_1DDA1B448(v62, a1 + 1);
          sub_1DDA2A9C8(v62, &v68);
          long long v49 = v68;
          long long v68 = 0uLL;
          double v50 = (std::__shared_weak_count *)a3[1];
          *(_OWORD *)a3 = v49;
          if (v50)
          {
            sub_1DDA18310(v50);
            if (*((void *)&v68 + 1)) {
              sub_1DDA18310(*((std::__shared_weak_count **)&v68 + 1));
            }
          }
          if (v62[1]) {
            sub_1DDA18310((std::__shared_weak_count *)v62[1]);
          }
          goto LABEL_114;
        }
      }
      int v28 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](v28, "RawCameraException");
LABEL_119:
      __cxa_throw(v28, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    sub_1DDBE3F6C(@"dng.adobe.generic", &v68);
    long long v22 = v68;
    long long v68 = 0uLL;
    uint64_t v23 = (std::__shared_weak_count *)*((void *)&v67 + 1);
    long long v67 = v22;
    if (v23)
    {
      sub_1DDA18310(v23);
      if (*((void *)&v68 + 1)) {
        sub_1DDA18310(*((std::__shared_weak_count **)&v68 + 1));
      }
      uint64_t v24 = v67;
      if ((void)v67)
      {
LABEL_33:
        uint64_t v25 = *((void *)&v67 + 1);
        if (*((void *)&v67 + 1)) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v67 + 1) + 8), 1uLL, memory_order_relaxed);
        }
        BOOL v26 = (std::__shared_weak_count *)a1[4];
        a1[3] = v24;
        a1[4] = v25;
        if (v26) {
          sub_1DDA18310(v26);
        }
        sub_1DDA1B448(v62, a1 + 1);
        sub_1DDA2A85C(v62, &v68);
        long long v27 = v68;
        long long v68 = 0uLL;
        *(_OWORD *)a3 = v27;
        if (v62[1])
        {
          uint64_t v54 = v27;
          sub_1DDA18310((std::__shared_weak_count *)v62[1]);
          *(void *)&long long v27 = v54;
        }
        uint64_t v21 = (void *)v27;
        if (!(void)v27) {
          goto LABEL_101;
        }
        goto LABEL_100;
      }
    }
    else
    {
      uint64_t v24 = v22;
      if ((void)v22) {
        goto LABEL_33;
      }
    }
    int v28 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v28, "RawCameraException");
    goto LABEL_119;
  }
  long long v18 = v67;
  if (*((void *)&v67 + 1)) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v67 + 1) + 8), 1uLL, memory_order_relaxed);
  }
  int v19 = (std::__shared_weak_count *)a1[4];
  *(_OWORD *)(a1 + 3) = v18;
  if (v19) {
    sub_1DDA18310(v19);
  }
  sub_1DDA1B448(v62, a1 + 1);
  sub_1DDB67804((uint64_t *)v62, &v68);
  int64_t v20 = (std::__shared_weak_count *)*((void *)&v68 + 1);
  uint64_t v21 = (void *)v68;
  long long v68 = 0uLL;
  *(_OWORD *)a3 = __PAIR128__((unint64_t)v20, (unint64_t)v21);
  if (v62[1]) {
    sub_1DDA18310((std::__shared_weak_count *)v62[1]);
  }
  if (!v21 || !*a2) {
    goto LABEL_114;
  }
  (*(void (**)(long long *__return_ptr, void *))(*(void *)v21 + 144))(&v68, v21);
  if (*((void *)&v68 + 1) == (void)v68
    || (*(unsigned int (**)(void *))(*(void *)v21 + 176))(v21)
    && (*(unsigned int (**)(void *))(*(void *)v21 + 2152))(v21)
    && (*(unsigned int (**)(void *))(*a1 + 528))(a1) != 3
    && (*(unsigned int (**)(void *))(*a1 + 528))(a1) != 1)
  {
    double v52 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v52, "RawCameraException");
    __cxa_throw(v52, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if (sub_1DDA4CB54(*a2))
  {
    uint64_t v63 = 0;
    uint64_t v64 = 0;
    sub_1DDA4C3A8((long long *)v68, &v63, &v65);
    if (v64) {
      sub_1DDA18310(v64);
    }
  }
  else
  {
    unint64_t v29 = (std::__shared_weak_count *)a2[1];
    uint64_t v65 = *a2;
    uint64_t v66 = v29;
    if (v29) {
      atomic_fetch_add_explicit(&v29->__shared_owners_, 1uLL, memory_order_relaxed);
    }
  }
  (*(void (**)(void *, uint64_t *))(*(void *)v21 + 136))(v21, &v65);
  if (sub_1DDA4CA90(v65))
  {
    sub_1DDBE3F6C(@"dng.adobe.generic", v62);
    unint64_t v31 = v62[0];
    char v30 = v62[1];
    if (v62[1]) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)v62[1] + 1, 1uLL, memory_order_relaxed);
    }
    unint64_t v32 = (std::__shared_weak_count *)a1[4];
    a1[3] = v31;
    a1[4] = v30;
    if (v32) {
      sub_1DDA18310(v32);
    }
    sub_1DDA1B448(&__p, a1 + 1);
    sub_1DDA2A85C(&__p, &v60);
    uint64_t v21 = v60;
    uint64_t v33 = v61;
    char v60 = 0;
    int v61 = 0;
    *a3 = v21;
    a3[1] = v33;
    if (v20)
    {
      sub_1DDA18310(v20);
      if (v61) {
        sub_1DDA18310(v61);
      }
    }
    if (v57) {
      sub_1DDA18310(v57);
    }
    if (v21) {
      (*(void (**)(void *, uint64_t *))(*(void *)v21 + 136))(v21, &v65);
    }
    if (v62[1]) {
      sub_1DDA18310((std::__shared_weak_count *)v62[1]);
    }
    int64_t v20 = v33;
  }
  if (!v16)
  {
LABEL_77:
    if ((v17 & v16) == 0) {
      goto LABEL_97;
    }
    if ((*(uint64_t (**)(void *))(*(void *)v21 + 192))(v21))
    {
      if ((*(uint64_t (**)(void *))(*(void *)v21 + 192))(v21)) {
        goto LABEL_97;
      }
LABEL_122:
      double v53 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](v53, "RawCameraException");
      __cxa_throw(v53, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    goto LABEL_81;
  }
  (*(void (**)(void **__return_ptr, void *))(*(void *)v21 + 1016))(v62, v21);
  (*(void (**)(void **__return_ptr, void *, void))(*a1 + 256))(&v60, a1, 0);
  double v34 = (*(double (**)(void *))(*(void *)v21 + 896))(v21);
  double v59 = 0.0;
  sub_1DDA1A880(&__p, "IFD0:SUBIFD0");
  int v35 = (*(uint64_t (**)(void *, void **, double *))(*a1 + 240))(a1, &__p, &v59);
  if (v58 < 0) {
    operator delete(__p);
  }
  if (!v35)
  {
    if (v60)
    {
      int v61 = (std::__shared_weak_count *)v60;
      operator delete(v60);
    }
    if (v62[0])
    {
      v62[1] = v62[0];
      operator delete(v62[0]);
    }
    goto LABEL_77;
  }
  if (vabdd_f64(v59, v34) > 5.0)
  {
    if (v60)
    {
      int v61 = (std::__shared_weak_count *)v60;
      operator delete(v60);
    }
    if (v62[0])
    {
      v62[1] = v62[0];
      operator delete(v62[0]);
    }
    goto LABEL_81;
  }
  double v36 = vabdd_f64(*(double *)v60, *(double *)v62[0]);
  int v61 = (std::__shared_weak_count *)v60;
  operator delete(v60);
  if (v62[0])
  {
    v62[1] = v62[0];
    operator delete(v62[0]);
  }
  if (v36 <= 5.0) {
    goto LABEL_77;
  }
LABEL_81:
  sub_1DDBE3F6C(@"dng.adobe.generic", v62);
  long long v37 = *(_OWORD *)v62;
  v62[0] = 0;
  v62[1] = 0;
  uint64_t v38 = (std::__shared_weak_count *)*((void *)&v67 + 1);
  long long v67 = v37;
  if (v38)
  {
    sub_1DDA18310(v38);
    if (v62[1]) {
      sub_1DDA18310((std::__shared_weak_count *)v62[1]);
    }
    uint64_t v39 = v67;
  }
  else
  {
    uint64_t v39 = v37;
  }
  if (!v39) {
    goto LABEL_122;
  }
  uint64_t v40 = *((void *)&v67 + 1);
  if (*((void *)&v67 + 1)) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v67 + 1) + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v41 = (std::__shared_weak_count *)a1[4];
  a1[3] = v39;
  a1[4] = v40;
  if (v41) {
    sub_1DDA18310(v41);
  }
  sub_1DDA1B448(&v60, a1 + 1);
  sub_1DDA2A85C(&v60, v62);
  long long v42 = *(_OWORD *)v62;
  v62[0] = 0;
  v62[1] = 0;
  uint64_t v55 = (void *)v42;
  *(_OWORD *)a3 = v42;
  if (v20)
  {
    sub_1DDA18310(v20);
    if (v62[1]) {
      sub_1DDA18310((std::__shared_weak_count *)v62[1]);
    }
  }
  if (v61) {
    sub_1DDA18310(v61);
  }
  uint64_t v21 = v55;
LABEL_97:
  if (v66) {
    sub_1DDA18310(v66);
  }
  v62[0] = &v68;
  sub_1DDA2A044((void ***)v62);
  if (!v21) {
    goto LABEL_101;
  }
LABEL_100:
  (*(void (**)(long long *__return_ptr, void *))(*(void *)v21 + 144))(&v68, v21);
  long long v43 = v68;
  v62[0] = &v68;
  sub_1DDA2A044((void ***)v62);
  if (*((void *)&v43 + 1) == (void)v43) {
    goto LABEL_101;
  }
LABEL_114:
  if (*((void *)&v67 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v67 + 1));
  }
}

void sub_1DDA29680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,std::__shared_weak_count *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29,uint64_t a30,std::__shared_weak_count *a31)
{
  if (a23) {
    sub_1DDA18310(a23);
  }
  if (a29) {
    sub_1DDA18310(a29);
  }
  a22 = (void *)(v33 - 144);
  sub_1DDA2A044((void ***)&a22);
  int v35 = *(std::__shared_weak_count **)(v32 + 8);
  if (v35) {
    sub_1DDA18310(v35);
  }
  if (a31) {
    sub_1DDA18310(a31);
  }

  _Unwind_Resume(a1);
}

void sub_1DDA2983C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 216))(__p);
  unint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    unint64_t v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v8;
    }
    double v34 = a2 + 2;
    if (v10) {
      long long v11 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v10);
    }
    else {
      long long v11 = 0;
    }
    uint64_t v12 = &v11[24 * v7];
    char v30 = v11;
    unint64_t v31 = v12;
    uint64_t v33 = &v11[24 * v10];
    long long v13 = *(_OWORD *)__p;
    *((void *)v12 + 2) = v29;
    *(_OWORD *)uint64_t v12 = v13;
    __p[1] = 0;
    uint64_t v29 = 0;
    __p[0] = 0;
    uint64_t v32 = v12 + 24;
    sub_1DDA2A0E8(a2, &v30);
    uint64_t v14 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v30);
    int v15 = SHIBYTE(v29);
    a2[1] = v14;
    if (v15 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v6 = *(_OWORD *)__p;
    *(void *)(v5 + 16) = v29;
    *(_OWORD *)unint64_t v5 = v6;
    a2[1] = v5 + 24;
  }
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 224))(__p, a1);
  unint64_t v17 = a2[1];
  unint64_t v16 = a2[2];
  if (v17 >= v16)
  {
    unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    unint64_t v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20) {
      unint64_t v20 = 2 * v21;
    }
    if (v21 >= 0x555555555555555) {
      unint64_t v22 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v22 = v20;
    }
    double v34 = a2 + 2;
    if (v22) {
      uint64_t v23 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v22);
    }
    else {
      uint64_t v23 = 0;
    }
    uint64_t v24 = &v23[24 * v19];
    char v30 = v23;
    unint64_t v31 = v24;
    uint64_t v33 = &v23[24 * v22];
    long long v25 = *(_OWORD *)__p;
    *((void *)v24 + 2) = v29;
    *(_OWORD *)uint64_t v24 = v25;
    __p[1] = 0;
    uint64_t v29 = 0;
    __p[0] = 0;
    uint64_t v32 = v24 + 24;
    sub_1DDA2A0E8(a2, &v30);
    uint64_t v26 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v30);
    int v27 = SHIBYTE(v29);
    a2[1] = v26;
    if (v27 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v18 = *(_OWORD *)__p;
    *(void *)(v17 + 16) = v29;
    *(_OWORD *)unint64_t v17 = v18;
    a2[1] = v17 + 24;
  }
}

void sub_1DDA29AD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

std::string *sub_1DDA29B20@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 224))(a1);
  std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0) {
    unint64_t v4 = (char *)a2;
  }
  else {
    unint64_t v4 = (char *)a2->__r_.__value_.__r.__words[0];
  }
  if ((size & 0x80u) != 0) {
    std::string::size_type size = a2->__r_.__value_.__l.__size_;
  }
  unint64_t v5 = sub_1DDA29C60(v4, &v4[size], (unsigned int (*)(void))sub_1DDA29CE8);
  uint64_t v6 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  int v7 = (char)v6;
  std::string::size_type v8 = (std::string::size_type)a2 + v6;
  if (v7 >= 0)
  {
    std::string::size_type v9 = (std::string::size_type)a2;
  }
  else
  {
    std::string::size_type v8 = a2->__r_.__value_.__r.__words[0] + a2->__r_.__value_.__l.__size_;
    std::string::size_type v9 = a2->__r_.__value_.__r.__words[0];
  }
  uint64_t result = std::string::erase(a2, (std::string::size_type)&v5[-v9], v8 - (void)v5);
  std::string::size_type v11 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  char v12 = v11;
  long long v13 = (std::string *)a2->__r_.__value_.__r.__words[0];
  std::string::size_type v14 = a2->__r_.__value_.__l.__size_;
  if ((v11 & 0x80u) == 0) {
    int v15 = a2;
  }
  else {
    int v15 = (std::string *)a2->__r_.__value_.__r.__words[0];
  }
  if ((v11 & 0x80u) == 0) {
    std::string::size_type v16 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v16 = a2->__r_.__value_.__l.__size_;
  }
  if (v16)
  {
    do
    {
      if (v15->__r_.__value_.__s.__data_[0] == 47) {
        v15->__r_.__value_.__s.__data_[0] = 95;
      }
      int v15 = (std::string *)((char *)v15 + 1);
      --v16;
    }
    while (v16);
    std::string::size_type v11 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
    long long v13 = (std::string *)a2->__r_.__value_.__r.__words[0];
    std::string::size_type v14 = a2->__r_.__value_.__l.__size_;
    char v12 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  }
  if (v12 < 0) {
    std::string::size_type v11 = v14;
  }
  else {
    long long v13 = a2;
  }
  for (; v11; --v11)
  {
    if (v13->__r_.__value_.__s.__data_[0] == 58) {
      v13->__r_.__value_.__s.__data_[0] = 95;
    }
    long long v13 = (std::string *)((char *)v13 + 1);
  }
  return result;
}

void sub_1DDA29C40(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1DDA29C60(char *a1, char *a2, unsigned int (*a3)(void))
{
  if (a1 == a2) {
    return a2;
  }
  unint64_t v5 = a1;
  while (!a3(*v5))
  {
    if (++v5 == a2) {
      return a2;
    }
  }
  if (v5 != a2)
  {
    for (uint64_t i = v5 + 1; i != a2; ++i)
    {
      if (!a3(*i)) {
        *v5++ = *i;
      }
    }
  }
  return v5;
}

BOOL sub_1DDA29CE8(unsigned int a1)
{
  if (a1 <= 0x7F) {
    int v1 = *(_DWORD *)(MEMORY[0x1E4F14390] + 4 * a1 + 60) & 0x4000;
  }
  else {
    int v1 = __maskrune(a1, 0x4000uLL);
  }
  return v1 != 0;
}

std::string *sub_1DDA29D2C@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 232))(a1);
  std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0) {
    unint64_t v4 = (char *)a2;
  }
  else {
    unint64_t v4 = (char *)a2->__r_.__value_.__r.__words[0];
  }
  if ((size & 0x80u) != 0) {
    std::string::size_type size = a2->__r_.__value_.__l.__size_;
  }
  unint64_t v5 = sub_1DDA29C60(v4, &v4[size], (unsigned int (*)(void))sub_1DDA29CE8);
  uint64_t v6 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  int v7 = (char)v6;
  std::string::size_type v8 = (std::string::size_type)a2 + v6;
  if (v7 >= 0)
  {
    std::string::size_type v9 = (std::string::size_type)a2;
  }
  else
  {
    std::string::size_type v8 = a2->__r_.__value_.__r.__words[0] + a2->__r_.__value_.__l.__size_;
    std::string::size_type v9 = a2->__r_.__value_.__r.__words[0];
  }
  uint64_t result = std::string::erase(a2, (std::string::size_type)&v5[-v9], v8 - (void)v5);
  std::string::size_type v11 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  char v12 = v11;
  long long v13 = (std::string *)a2->__r_.__value_.__r.__words[0];
  std::string::size_type v14 = a2->__r_.__value_.__l.__size_;
  if ((v11 & 0x80u) == 0) {
    int v15 = a2;
  }
  else {
    int v15 = (std::string *)a2->__r_.__value_.__r.__words[0];
  }
  if ((v11 & 0x80u) == 0) {
    std::string::size_type v16 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v16 = a2->__r_.__value_.__l.__size_;
  }
  if (v16)
  {
    do
    {
      if (v15->__r_.__value_.__s.__data_[0] == 47) {
        v15->__r_.__value_.__s.__data_[0] = 95;
      }
      int v15 = (std::string *)((char *)v15 + 1);
      --v16;
    }
    while (v16);
    std::string::size_type v11 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
    long long v13 = (std::string *)a2->__r_.__value_.__r.__words[0];
    std::string::size_type v14 = a2->__r_.__value_.__l.__size_;
    char v12 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  }
  if (v12 < 0) {
    std::string::size_type v11 = v14;
  }
  else {
    long long v13 = a2;
  }
  for (; v11; --v11)
  {
    if (v13->__r_.__value_.__s.__data_[0] == 58) {
      v13->__r_.__value_.__s.__data_[0] = 95;
    }
    long long v13 = (std::string *)((char *)v13 + 1);
  }
  return result;
}

void sub_1DDA29E4C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA29E6C(void *a1@<X8>)
{
  memset(v3, 0, sizeof(v3));
  memset(v2, 0, sizeof(v2));
  memset(v1, 0, sizeof(v1));
  sub_1DDA2A358(a1, v3, v2, v1);
  unint64_t v4 = v1;
  sub_1DDA18270((void ***)&v4);
  v1[0] = (void **)v2;
  sub_1DDA18270(v1);
  v2[0] = (void **)v3;
  sub_1DDA18270(v2);
}

void sub_1DDA29EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void ***a9, uint64_t a10, uint64_t a11, void **a12, uint64_t a13, uint64_t a14, char a15)
{
  *(void *)(v16 - 40) = v15;
  sub_1DDA18270((void ***)(v16 - 40));
  a9 = &a12;
  sub_1DDA18270((void ***)&a9);
  a12 = (void **)&a15;
  sub_1DDA18270(&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA29F2C()
{
  return 0;
}

uint64_t sub_1DDA29F34(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 96);
}

uint64_t sub_1DDA29F3C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 97);
}

uint64_t sub_1DDA29F44(uint64_t result, char a2)
{
  *(unsigned char *)(result + 97) = a2;
  return result;
}

uint64_t sub_1DDA29F4C()
{
  return 538976288;
}

uint64_t sub_1DDA29F54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 208))();
}

void *sub_1DDA29F78@<X0>(void *a1@<X8>)
{
  return sub_1DDA1A880(a1, "");
}

uint64_t *sub_1DDA29F88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  if (v6)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
    uint64_t v5 = *a1;
  }
  a1[2] = 0;
  if (v5)
  {
    a1[2] = sub_1DDA19C94(v5);
    sub_1DDA19C9C(*a1, a3);
  }
  return a1;
}

void sub_1DDA29FE8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3) {
    sub_1DDA18310(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1DDA2A000(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    sub_1DDA19C9C(v2, a1[2]);
  }
  uint64_t v3 = (std::__shared_weak_count *)a1[1];
  if (v3) {
    sub_1DDA18310(v3);
  }
  return a1;
}

void sub_1DDA2A044(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_1DDA2A098((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_1DDA2A098(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

uint64_t sub_1DDA2A0E8(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1DDA2A1A8((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_1DDA2A160(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_1DDA18058();
  }
  return operator new(24 * a2);
}

uint64_t sub_1DDA2A1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v9;
  }
  char v13 = 1;
  sub_1DDA2A248((uint64_t)v12);
  return a6;
}

uint64_t sub_1DDA2A248(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1DDA2A280(a1);
  }
  return a1;
}

void sub_1DDA2A280(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 24;
  }
}

uint64_t sub_1DDA2A2C8(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1DDA2A300(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        uint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

void *sub_1DDA2A358(void *a1, void **a2, void **a3, void **a4)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  sub_1DDA1976C(a1, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 4);
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = 0;
  sub_1DDA1976C(a1 + 3, *a3, a3[1], ((char *)a3[1] - (char *)*a3) >> 4);
  a1[6] = 0;
  a1[7] = 0;
  a1[8] = 0;
  sub_1DDA1976C(a1 + 6, *a4, a4[1], ((char *)a4[1] - (char *)*a4) >> 4);
  return a1;
}

void sub_1DDA2A3EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1DDA18270((void ***)va);
  sub_1DDA18270((void ***)va);
  _Unwind_Resume(a1);
}

void sub_1DDA2A418(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1DDA2A418(a1, *a2);
    sub_1DDA2A418(a1, a2[1]);
    sub_1DDA2A474((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_1DDA2A474(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

void sub_1DDA2A4CC(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_1DDA2A4CC(a1, *(void *)a2);
    sub_1DDA2A4CC(a1, *((void *)a2 + 1));
    if (a2[55] < 0) {
      operator delete(*((void **)a2 + 4));
    }
    operator delete(a2);
  }
}

void **sub_1DDA2A530(uint64_t a1, void **a2)
{
  uint64_t v2 = (void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = (void **)(a1 + 8);
  do
  {
    char v6 = sub_1DDA2A5B0(v3 + 4, a2);
    if (v6 >= 0) {
      uint64_t v7 = v3;
    }
    else {
      uint64_t v7 = v3 + 1;
    }
    if (v6 >= 0) {
      uint64_t v5 = (void **)v3;
    }
    uint64_t v3 = (void *)*v7;
  }
  while (*v7);
  if (v5 == v2 || (sub_1DDA2A5B0(a2, v5 + 4) & 0x80) != 0) {
    return v2;
  }
  return v5;
}

uint64_t sub_1DDA2A5B0(void *a1, void **a2)
{
  size_t v2 = *((unsigned __int8 *)a1 + 23);
  size_t v3 = a1[1];
  if ((v2 & 0x80u) != 0)
  {
    a1 = (void *)*a1;
    size_t v2 = v3;
  }
  int v4 = *((char *)a2 + 23);
  if (v4 >= 0) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = *a2;
  }
  if (v4 >= 0) {
    size_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v6 = (size_t)a2[1];
  }
  return sub_1DDA2A5E8(a1, v2, v5, v6);
}

uint64_t sub_1DDA2A5E8(const void *a1, size_t a2, void *__s2, size_t a4)
{
  if (a4 >= a2) {
    size_t v7 = a2;
  }
  else {
    size_t v7 = a4;
  }
  int v8 = memcmp(a1, __s2, v7);
  if (v8)
  {
    if ((v8 & 0x80000000) == 0) {
      return 1;
    }
  }
  else
  {
    if (a2 == a4) {
      return 0;
    }
    if (a2 >= a4) {
      return 1;
    }
  }
  return 255;
}

int *sub_1DDA2A648(int *result, unsigned int *a2)
{
  unint64_t v2 = *result + (unint64_t)*a2;
  *uint64_t result = v2;
  BOOL v5 = v2 == (uint64_t)(v2 << 31) >> 31;
  uint64_t v3 = (int)v2 & 0x1FFFFFFFFLL;
  uint64_t v4 = v2 & 0x1FFFFFFFFLL;
  BOOL v5 = v5 && v4 == v3;
  if (!v5)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA2A6C8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA2A6DC@<X0>(void *a1@<X1>, int *a2@<X2>, int *a3@<X3>, unsigned int *a4@<X4>, void *a5@<X8>)
{
  long long v10 = operator new(0x48uLL);
  uint64_t result = sub_1DDA2A758(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  return result;
}

void sub_1DDA2A744(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA2A758(void *a1, void *a2, int *a3, int *a4, unsigned int *a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395B2D8;
  sub_1DDAD72B0((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1DDA2A7AC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA2A7C0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395B2D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA2A7E0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395B2D8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA2A834(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1DDA2A85C(void *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x1C0uLL);
  sub_1DDA2A8D0(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;

  sub_1DDA1AF34((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_1DDA2A8BC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA2A8D0(void *a1, void *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395B328;
  sub_1DDADBDF8((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_1DDA2A918(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA2A92C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395B328;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA2A94C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395B328;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA2A9A0(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1DDA2A9C8(void *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x1A8uLL);
  sub_1DDA2AA3C(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;

  sub_1DDA1AF34((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_1DDA2AA28(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA2AA3C(void *a1, void *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395B378;
  sub_1DDA2BCB8((uint64_t)(a1 + 3), a2);
  a1[41] = a1 + 42;
  a1[42] = 0;
  a1[45] = 0;
  a1[46] = 0;
  a1[43] = 0;
  a1[44] = a1 + 45;
  a1[47] = a1 + 48;
  a1[48] = 0;
  a1[51] = 0;
  a1[52] = 0;
  a1[49] = 0;
  a1[50] = a1 + 51;
  a1[3] = &unk_1F395B3C8;
  return a1;
}

void sub_1DDA2AAC8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA2AADC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395B378;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA2AAFC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395B378;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA2AB50(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1DDA2AB7C(uint64_t a1)
{
  sub_1DDA2AD98(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA2ABB4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 48);
  if (!v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v3 = *(void *)(result + 56);
  *a2 = v2;
  a2[1] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1DDA2AC28(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA2AC3C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 112))(&v3);
  uint64_t v1 = sub_1DDA4CA00(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2ACA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2ACBC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 112))(&v3);
  uint64_t v1 = sub_1DDA4CA90(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2AD24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA2AD3C()
{
  exception = __cxa_allocate_exception(0x10uLL);
  MEMORY[0x1E01C3B90](exception, "RawCameraException");
  __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
}

void sub_1DDA2AD84(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA2AD98(uint64_t a1)
{
  *(void *)a1 = &unk_1F398C6A0;
  sub_1DDA2AF00(a1 + 376, *(void **)(a1 + 384));
  sub_1DDA2AF00(a1 + 352, *(void **)(a1 + 360));
  sub_1DDA2AF00(a1 + 328, *(void **)(a1 + 336));
  sub_1DDA2AF00(a1 + 304, *(void **)(a1 + 312));

  return sub_1DDA2AE18(a1);
}

uint64_t sub_1DDA2AE18(uint64_t a1)
{
  *(void *)a1 = &unk_1F395BF98;

  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 272);
  if (v2) {
    sub_1DDA18310(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 256);
  if (v3) {
    sub_1DDA18310(v3);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 224);
  if (v4) {
    sub_1DDA18310(v4);
  }
  BOOL v5 = *(std::__shared_weak_count **)(a1 + 192);
  if (v5) {
    sub_1DDA18310(v5);
  }
  size_t v6 = *(std::__shared_weak_count **)(a1 + 176);
  if (v6) {
    sub_1DDA18310(v6);
  }
  size_t v7 = *(void **)(a1 + 144);
  if (v7)
  {
    *(void *)(a1 + 152) = v7;
    operator delete(v7);
  }
  int v8 = *(void **)(a1 + 120);
  if (v8)
  {
    *(void *)(a1 + 128) = v8;
    operator delete(v8);
  }
  uint64_t v9 = *(std::__shared_weak_count **)(a1 + 104);
  if (v9) {
    sub_1DDA18310(v9);
  }
  long long v10 = *(std::__shared_weak_count **)(a1 + 88);
  if (v10) {
    sub_1DDA18310(v10);
  }
  std::string::size_type v11 = *(std::__shared_weak_count **)(a1 + 56);
  if (v11) {
    sub_1DDA18310(v11);
  }
  char v12 = *(std::__shared_weak_count **)(a1 + 32);
  if (v12) {
    sub_1DDA18310(v12);
  }
  char v13 = *(std::__shared_weak_count **)(a1 + 16);
  if (v13) {
    std::__shared_weak_count::__release_weak(v13);
  }
  return a1;
}

void sub_1DDA2AF00(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1DDA2AF00(a1, *a2);
    sub_1DDA2AF00(a1, a2[1]);
    uint64_t v4 = (std::__shared_weak_count *)a2[6];
    if (v4) {
      sub_1DDA18310(v4);
    }
    operator delete(a2);
  }
}

void sub_1DDA2B310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1DDA2B4FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1DDA2BA00(_Unwind_Exception *a1)
{
}

void sub_1DDA2BA0C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_1DDA16678(a1);
  }
  _Unwind_Resume(a1);
}

void sub_1DDA2BA28(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_msgSend_kernelsWithString_messageLog_(MEMORY[0x1E4F1E058], a2, @"kernel vec4 apply1DLumaLUT (sampler src, sampler lut, float lutSize) __attribute__ (preserves_opacity) { \n vec4 c = sample(src, samplerCoord(src)); float luma = 0.299*c.r + 0.587*c.g + 0.114*c.b; float u = (c.b - luma)*0.565; float v = (c.r - luma)*0.713; luma = clamp(luma, 0.0, 1.0); float f = sample(lut, vec2(luma*lutSize, 0.5)).r; luma = f*luma; c.r = luma + 1.403*v; c.g = luma - 0.344*u - 0.714*v; c.b = luma + 1.770*u; return c; } \n vec4 highlightAndShadowFunc (vec4 c, vec4 param1, vec4 param2) __attribute__ (preserves_opacity) { \n float luma = 0.299*c.r + 0.587*c.g + 0.114*c.b; float u = (c.b - luma)*0.565; float v = (c.r - luma)*0.713; luma = clamp(luma, 0.0, 1.0); float highlightAmount = param1.x; float highlightCutoff = param1.y; float shadowAmount = param1.z; float shadowCutoff = param1.w; float gain = param2.x; gain = gain * (luma < shadowCutoff ? shadowAmount : (luma > highlightCutoff ? highlightAmount : 1.0)); luma = luma * gain; c.rgb *= gain; return c; } \n kernel vec4 highlightAndShadow (sampler src, vec4 param1, vec4 param2) __attribute__ (preserves_opacity) { \n vec4 c = sample(src, samplerCoord(src)); return highlightAndShadowFunc(c, param1, param2); } \n kernel vec4 localHighlightAndShadow (sampler src, sampler control, vec4 param1, vec4 param2) __attribute__ (preserves_opacity) { \n vec4 c = sample(src, samplerCoord(src)); vec4 m = sample(control, samplerCoord(control)); float highlightMultiplier = m.r + 1.0; float shadowMultiplier = m.g + 1.0; param2.x /= highlightMultiplier; param2.x *= shadowMultiplier; return param2.y < 1.0 ? highlightAndShadowFunc(c, param1, param2) : m; } \n kernel vec4 processControl (sampler control, vec4 param1, vec4 param2) __attribute__ (preserves_opacity) { \n vec4 m = sample(control, samplerCoord(control)); float luma = 0.299*m.r + 0.587*m.g + 0.114*m.b; float highlightCutoff = param1.y; float shadowCutoff = param1.w; float highlightMultiplier = luma > highlightCutoff ? 1.0 + (luma-highlightCutoff)/(1.0-highlightCutoff) : 1.0; float shadowMultiplier = luma < shadowCutoff ? 1.0 + (shadowCutoff - luma)/(shadowCutoff) : 1.0; return vec4(highlightMultiplier - 1.0, shadowMultiplier - 1.0, 0.0, 1.0); } \n",
    0,
    a5);
  id v15 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v8 = objc_msgSend_objectAtIndex_(v15, v5, 2, v6, v7);
  uint64_t v9 = (void *)qword_1EAB8B0D8;
  qword_1EAB8B0D8 = v8;

  uint64_t v13 = objc_msgSend_objectAtIndex_(v15, v10, 3, v11, v12);
  long long v14 = (void *)qword_1EAB8B0E0;
  qword_1EAB8B0E0 = v13;
}

void sub_1DDA2BABC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DDA2BAD0(uint64_t a1)
{
  uint64_t v2 = sub_1DDA83E7C();
  uint64_t v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)BOOL v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RAWLocalToneMap", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

void sub_1DDA2BC38(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  sub_1DDADE100();
  (*(void (**)(void))(**(void **)a1 + 168))();
  uint64_t v6 = *(void **)a1;

  sub_1DDA28C24(v6, a2, a3);
}

void sub_1DDA2BCB0(void **a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
}

uint64_t sub_1DDA2BCB8(uint64_t a1, void *a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395BF98;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v4 = *(void *)(*a2 + 32);
  *(void *)(a1 + 48) = *(void *)(*a2 + 24);
  *(void *)(a1 + 56) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  *(_OWORD *)(a1 + 120) = 0u;
  *(unsigned char *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(unsigned char *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  sub_1DDA4C33C(&v10, (void *)(a1 + 184));
  if (v11) {
    sub_1DDA18310(v11);
  }
  *(void *)(a1 + 207) = 0;
  *(void *)(a1 + 200) = 0;
  uint64_t v5 = a2[1];
  *(void *)(a1 + 216) = *a2;
  *(void *)(a1 + 224) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 232) = 0;
  *(_DWORD *)(a1 + 240) = 0;
  *(void *)(a1 + 288) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_DWORD *)(a1 + 280) = 0;
  *(void *)(a1 + 296) = dispatch_queue_create("RawCamera-Provider-Render-Queue", 0);
  uint64_t v6 = *(void *)(a1 + 48);
  if (!v6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = sub_1DDA2BF34;
  v9[3] = &unk_1E6D04B88;
  v9[4] = a1;
  sub_1DDA1E614(v6, (uint64_t)v9);
  return a1;
}

void sub_1DDA2BE60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    sub_1DDA18310(a16);
  }
  unint64_t v19 = (std::__shared_weak_count *)v16[22];
  if (v19) {
    sub_1DDA18310(v19);
  }
  unint64_t v20 = (void *)v16[18];
  if (v20)
  {
    v16[19] = v20;
    operator delete(v20);
  }
  unint64_t v21 = *v17;
  if (*v17)
  {
    v16[16] = v21;
    operator delete(v21);
  }
  unint64_t v22 = (std::__shared_weak_count *)v16[13];
  if (v22) {
    sub_1DDA18310(v22);
  }
  uint64_t v23 = (std::__shared_weak_count *)v16[11];
  if (v23) {
    sub_1DDA18310(v23);
  }
  uint64_t v24 = (std::__shared_weak_count *)v16[7];
  if (v24) {
    sub_1DDA18310(v24);
  }
  long long v25 = (std::__shared_weak_count *)v16[4];
  if (v25) {
    sub_1DDA18310(v25);
  }
  uint64_t v26 = (std::__shared_weak_count *)v16[2];
  if (v26) {
    std::__shared_weak_count::__release_weak(v26);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA2BF34(uint64_t a1)
{
  uint64_t v1 = (*(void (**)(void))(**(void **)(a1 + 32) + 88))(*(void *)(a1 + 32));

  return v1;
}

id sub_1DDA2BF84(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  (*(void (**)(std::__shared_weak_count **__return_ptr, uint64_t))(*(void *)a1 + 160))(&v41, a1);
  uint64_t v4 = ((void (*)(std::__shared_weak_count *, __CFString *))v41->__vftable[1].~__shared_weak_count)(v41, v3);
  if (v42) {
    sub_1DDA18310(v42);
  }
  if (!v4)
  {
    CFStringRef auxiliaryImageDataType = v3;
    (*(void (**)(std::__shared_weak_count **__return_ptr, uint64_t))(*(void *)a1 + 288))(&v41, a1);
    uint64_t v6 = (std::__shared_weak_count **)v41;
    uint64_t v5 = v42;
    if (v41 != v42)
    {
      uint64_t v4 = 0;
      while (1)
      {
        uint64_t v7 = *v6;
        uint64_t v8 = v6[1];
        if (v8) {
          atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        if (v7)
        {
          uint64_t v7 = (std::__shared_weak_count *)__dynamic_cast(v7, (const struct __class_type_info *)&unk_1F3969080, (const struct __class_type_info *)&unk_1F39690E8, 0);
          if (v7) {
            break;
          }
        }
LABEL_22:
        int v32 = 0;
LABEL_23:
        if (v7) {
          sub_1DDA18310(v7);
        }
        if (v8) {
          sub_1DDA18310(v8);
        }
        if (!v32)
        {
          v6 += 2;
          if (v6 != (std::__shared_weak_count **)v5) {
            continue;
          }
        }
        goto LABEL_31;
      }
      uint64_t v9 = v7;
      if (v8) {
        atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      (*(void (**)(std::__shared_weak_count ***__return_ptr, uint64_t))(*(void *)a1 + 160))(&v37, a1);
      sub_1DDA27D28((uint64_t)v37, &v39);
      if (v38) {
        sub_1DDA18310(v38);
      }
      uint64_t v35 = ((uint64_t (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      sub_1DDA1B2DC(&v36, &v35);
      sub_1DDA1A94C((uint64_t *)&v37, &v39, (uint64_t)&v36, 0);
      uint64_t v10 = (void *)MEMORY[0x1E4F1CA58];
      uint64_t v11 = ((uint64_t (*)(std::__shared_weak_count *))v9->__get_deleter)(v9);
      id v15 = objc_msgSend_dataWithLength_(v10, v12, v11, v13, v14);
      uint64_t v16 = v39;
      id v17 = v15;
      uint64_t v22 = objc_msgSend_mutableBytes(v17, v18, v19, v20, v21);
      uint64_t v27 = objc_msgSend_length(v17, v23, v24, v25, v26);
      sub_1DDA19DD0(v16, v22, v27);
      int v28 = CGImageSourceCreateWithData((CFDataRef)v17, 0);
      uint64_t v29 = v28;
      if (v28)
      {
        CFDictionaryRef v30 = CGImageSourceCopyAuxiliaryDataInfoAtIndex(v28, 0, auxiliaryImageDataType);

        CFRelease(v29);
        if (v30)
        {
          char v31 = 0;
          int v32 = 2;
          uint64_t v4 = v30;
          goto LABEL_19;
        }
        uint64_t v4 = 0;
      }
      int v32 = 0;
      char v31 = 1;
LABEL_19:

      sub_1DDA1AA18((uint64_t *)&v37);
      if (v40) {
        sub_1DDA18310(v40);
      }
      uint64_t v7 = v8;
      if ((v31 & 1) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    uint64_t v4 = 0;
LABEL_31:
    long long v37 = &v41;
    sub_1DDA18270((void ***)&v37);
    uint64_t v3 = (__CFString *)auxiliaryImageDataType;
  }

  return v4;
}

void sub_1DDA2C2C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

id sub_1DDA2C378(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(void (**)(uint64_t))(*(void *)v3 + 48))(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }

  return v1;
}

void sub_1DDA2C414(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2C42C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 176))(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2C4B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA2C4CC(void *a1@<X0>, void *a2@<X8>, double a3@<D0>)
{
  v5.n128_f64[0] = sub_1DDA4D4A0(a3);
  uint64_t v7 = *v6;
  uint64_t v8 = (std::__shared_weak_count *)v6[1];
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v7)
  {
    *a2 = v7;
    a2[1] = v8;
    return;
  }
  uint64_t v9 = a1[10];
  if (!v9)
  {
    (*(void (**)(long long **__return_ptr, void *, __n128))(*a1 + 144))(&v27, a1, v5);
    uint64_t v10 = v27;
    uint64_t v11 = v28;
    if (v28 == v27)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    if (a1[23])
    {
      if (!sub_1DDA4CB54(a1[23]))
      {
LABEL_16:
        if (!a1[10])
        {
          if (a1[23])
          {
            for (uint64_t i = v27; i != v28; uint64_t i = (long long *)((char *)i + 24))
            {
              uint64_t v22 = 0;
              uint64_t v23 = 0;
              sub_1DDA4C3A8(i, &v22, &v26);
              if (v23) {
                sub_1DDA18310(v23);
              }
              int v16 = sub_1DDA4CA00(v26);
              if (v16 == sub_1DDA4CA00(a1[23]))
              {
                uint64_t v18 = a1[23];
                uint64_t v17 = a1[24];
                if (v17) {
                  atomic_fetch_add_explicit((atomic_ullong *volatile)(v17 + 8), 1uLL, memory_order_relaxed);
                }
                uint64_t v19 = (std::__shared_weak_count *)a1[11];
                a1[10] = v18;
                a1[11] = v17;
                if (v19) {
                  sub_1DDA18310(v19);
                }
              }
              if (*((void *)&v26 + 1)) {
                sub_1DDA18310(*((std::__shared_weak_count **)&v26 + 1));
              }
              if (a1[10]) {
                break;
              }
            }
          }
        }
        *(void *)&long long v26 = &v27;
        sub_1DDA2A044((void ***)&v26);
        uint64_t v9 = a1[10];
        if (!v9)
        {
          uint64_t v20 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](v20, "RawCameraException");
          __cxa_throw(v20, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        goto LABEL_18;
      }
      uint64_t v10 = v27;
      uint64_t v11 = v28;
    }
    if (v11 != v10)
    {
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      sub_1DDA4C3A8(v10, &v24, &v26);
      long long v12 = v26;
      long long v26 = 0uLL;
      uint64_t v13 = (std::__shared_weak_count *)a1[11];
      *((_OWORD *)a1 + 5) = v12;
      if (v13)
      {
        sub_1DDA18310(v13);
        if (*((void *)&v26 + 1)) {
          sub_1DDA18310(*((std::__shared_weak_count **)&v26 + 1));
        }
      }
      if (v25) {
        sub_1DDA18310(v25);
      }
    }
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v14 = a1[11];
  *a2 = v9;
  a2[1] = v14;
  if (v14) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v14 + 8), 1uLL, memory_order_relaxed);
  }
  if (v8) {
    sub_1DDA18310(v8);
  }
}

void sub_1DDA2C724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, void **a13, uint64_t a14, uint64_t a15, char a16)
{
  if (a12) {
    sub_1DDA18310(a12);
  }
  a13 = (void **)&a16;
  sub_1DDA2A044(&a13);
  if (v16) {
    sub_1DDA18310(v16);
  }
  _Unwind_Resume(a1);
}

void sub_1DDA2C7AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 192);
  *(void *)(a1 + 184) = v3;
  *(void *)(a1 + 192) = v2;
  if (v4) {
    sub_1DDA18310(v4);
  }
}

void sub_1DDA2C7D8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 72))(__dst);
  sub_1DDB65B3C((uint64_t)__dst[0], (uint64_t *)a2);
  if (__dst[1]) {
    sub_1DDA18310((std::__shared_weak_count *)__dst[1]);
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 176))(a1))
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)a1 + 200))(a1, 9))
    {
      sub_1DDA1A880(__p, "8.dng");
      unint64_t v4 = *(void *)(a2 + 16);
      unint64_t v5 = *(void *)(a2 + 8);
      if (v5 >= v4)
      {
        unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *(void *)a2) >> 3);
        unint64_t v8 = v7 + 1;
        if (v7 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_1DDA17F78();
        }
        unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *(void *)a2) >> 3);
        if (2 * v9 > v8) {
          unint64_t v8 = 2 * v9;
        }
        if (v9 >= 0x555555555555555) {
          unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v10 = v8;
        }
        uint64_t v64 = a2 + 16;
        if (v10) {
          uint64_t v11 = (char *)sub_1DDA2A160(a2 + 16, v10);
        }
        else {
          uint64_t v11 = 0;
        }
        long long v12 = &v11[24 * v7];
        __dst[0] = v11;
        __dst[1] = v12;
        uint64_t v63 = &v11[24 * v10];
        long long v13 = *(_OWORD *)__p;
        *((void *)v12 + 2) = v60;
        *(_OWORD *)long long v12 = v13;
        __p[1] = 0;
        uint64_t v60 = 0;
        __p[0] = 0;
        uint64_t v62 = v12 + 24;
        sub_1DDA2A0E8((uint64_t *)a2, __dst);
        uint64_t v14 = *(void *)(a2 + 8);
        sub_1DDA2A2C8((uint64_t)__dst);
        int v15 = SHIBYTE(v60);
        *(void *)(a2 + 8) = v14;
        if (v15 < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        long long v6 = *(_OWORD *)__p;
        *(void *)(v5 + 16) = v60;
        *(_OWORD *)unint64_t v5 = v6;
        *(void *)(a2 + 8) = v5 + 24;
      }
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)a1 + 200))(a1, 8))
    {
      sub_1DDA1A880(__p, "7.dng");
      unint64_t v16 = *(void *)(a2 + 16);
      unint64_t v17 = *(void *)(a2 + 8);
      if (v17 >= v16)
      {
        unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *(void *)a2) >> 3);
        unint64_t v20 = v19 + 1;
        if (v19 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_1DDA17F78();
        }
        unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *(void *)a2) >> 3);
        if (2 * v21 > v20) {
          unint64_t v20 = 2 * v21;
        }
        if (v21 >= 0x555555555555555) {
          unint64_t v22 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v22 = v20;
        }
        uint64_t v64 = a2 + 16;
        if (v22) {
          uint64_t v23 = (char *)sub_1DDA2A160(a2 + 16, v22);
        }
        else {
          uint64_t v23 = 0;
        }
        uint64_t v24 = &v23[24 * v19];
        __dst[0] = v23;
        __dst[1] = v24;
        uint64_t v63 = &v23[24 * v22];
        long long v25 = *(_OWORD *)__p;
        *((void *)v24 + 2) = v60;
        *(_OWORD *)uint64_t v24 = v25;
        __p[1] = 0;
        uint64_t v60 = 0;
        __p[0] = 0;
        uint64_t v62 = v24 + 24;
        sub_1DDA2A0E8((uint64_t *)a2, __dst);
        uint64_t v26 = *(void *)(a2 + 8);
        sub_1DDA2A2C8((uint64_t)__dst);
        int v27 = SHIBYTE(v60);
        *(void *)(a2 + 8) = v26;
        if (v27 < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        long long v18 = *(_OWORD *)__p;
        *(void *)(v17 + 16) = v60;
        *(_OWORD *)unint64_t v17 = v18;
        *(void *)(a2 + 8) = v17 + 24;
      }
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)a1 + 200))(a1, 7))
    {
      sub_1DDA1A880(__p, "6.dng");
      unint64_t v28 = *(void *)(a2 + 16);
      unint64_t v29 = *(void *)(a2 + 8);
      if (v29 >= v28)
      {
        unint64_t v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *(void *)a2) >> 3);
        unint64_t v32 = v31 + 1;
        if (v31 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_1DDA17F78();
        }
        unint64_t v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *(void *)a2) >> 3);
        if (2 * v33 > v32) {
          unint64_t v32 = 2 * v33;
        }
        if (v33 >= 0x555555555555555) {
          unint64_t v34 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v34 = v32;
        }
        uint64_t v64 = a2 + 16;
        if (v34) {
          uint64_t v35 = (char *)sub_1DDA2A160(a2 + 16, v34);
        }
        else {
          uint64_t v35 = 0;
        }
        int v36 = &v35[24 * v31];
        __dst[0] = v35;
        __dst[1] = v36;
        uint64_t v63 = &v35[24 * v34];
        long long v37 = *(_OWORD *)__p;
        *((void *)v36 + 2) = v60;
        *(_OWORD *)int v36 = v37;
        __p[1] = 0;
        uint64_t v60 = 0;
        __p[0] = 0;
        uint64_t v62 = v36 + 24;
        sub_1DDA2A0E8((uint64_t *)a2, __dst);
        uint64_t v38 = *(void *)(a2 + 8);
        sub_1DDA2A2C8((uint64_t)__dst);
        int v39 = SHIBYTE(v60);
        *(void *)(a2 + 8) = v38;
        if (v39 < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        long long v30 = *(_OWORD *)__p;
        *(void *)(v29 + 16) = v60;
        *(_OWORD *)unint64_t v29 = v30;
        *(void *)(a2 + 8) = v29 + 24;
      }
    }
    uint64_t v40 = *(__n128 **)a2;
    uint64_t v41 = *(__n128 **)(a2 + 8);
    uint64_t v42 = (uint64_t)v41 - *(void *)a2;
    unint64_t v43 = 0xAAAAAAAAAAAAAAABLL * (v42 >> 3);
    if (v42 < 1)
    {
      long long v44 = 0;
      uint64_t v46 = 0;
    }
    else
    {
      long long v44 = sub_1DDA35884(0xAAAAAAAAAAAAAAABLL * (v42 >> 3));
      uint64_t v46 = v45;
    }
    sub_1DDA358F0(v40, v41, v43, (uint64_t)v44, v46);
    if (v44) {
      operator delete(v44);
    }
    uint64_t v47 = *(void *)a2;
    if (*(void *)a2 != *(void *)(a2 + 8))
    {
LABEL_52:
      if (*(char *)(v47 + 23) < 0)
      {
        sub_1DDA2639C(__dst, *(void **)v47, *(void *)(v47 + 8));
      }
      else
      {
        long long v48 = *(_OWORD *)v47;
        uint64_t v62 = *(void **)(v47 + 16);
        *(_OWORD *)__dst = v48;
      }
      uint64_t v49 = HIBYTE(v62);
      int v50 = SHIBYTE(v62);
      double v51 = __dst[0];
      if (SHIBYTE(v62) >= 0)
      {
        double v52 = __dst;
      }
      else
      {
        uint64_t v49 = (uint64_t)__dst[1];
        double v52 = (void **)__dst[0];
      }
      if (v49 >= 4)
      {
        double v53 = (char *)v52 + v49;
        uint64_t v54 = v52;
        do
        {
          uint64_t v55 = (char *)memchr(v54, 46, v49 - 3);
          if (!v55) {
            break;
          }
          if (*(_DWORD *)v55 == 1735287854)
          {
            if (v55 == v53 || v55 - (char *)v52 == -1) {
              break;
            }
            if (v50 < 0) {
              operator delete(v51);
            }
            v47 += 24;
            if (v47 != *(void *)(a2 + 8)) {
              goto LABEL_52;
            }
            return;
          }
          uint64_t v54 = (void **)(v55 + 1);
          uint64_t v49 = v53 - (char *)v54;
        }
        while (v53 - (char *)v54 >= 4);
      }
      if (v47 != *(void *)a2)
      {
        sub_1DDA3529C((uint64_t)&v65, (long long *)(v47 + 24), *(long long **)(a2 + 8), v47);
        uint64_t v57 = v56;
        for (uint64_t i = *(void *)(a2 + 8); i != v57; i -= 24)
        {
          if (*(char *)(i - 1) < 0) {
            operator delete(*(void **)(i - 24));
          }
        }
        *(void *)(a2 + 8) = v57;
        sub_1DDA2CE84((uint64_t *)a2, *(void *)a2, (long long *)__dst);
        LOBYTE(v50) = HIBYTE(v62);
      }
      if ((v50 & 0x80) != 0) {
        operator delete(__dst[0]);
      }
    }
  }
}

void sub_1DDA2CDE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

long long *sub_1DDA2CE84(uint64_t *a1, uint64_t a2, long long *a3)
{
  unint64_t v4 = (long long *)a2;
  unint64_t v6 = a1[1];
  unint64_t v9 = a1[2];
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = v9;
  if (v6 >= v9)
  {
    uint64_t v10 = *a1;
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - *a1) >> 3) + 1;
    if (v11 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((a2 - v10) >> 3);
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v8 - v10) >> 3);
    unint64_t v14 = 2 * v13;
    if (2 * v13 <= v11) {
      unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - *a1) >> 3) + 1;
    }
    if (v13 >= 0x555555555555555) {
      unint64_t v15 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v15 = v14;
    }
    uint64_t v22 = v7;
    if (v15) {
      unint64_t v16 = (char *)sub_1DDA2A160(v7, v15);
    }
    else {
      unint64_t v16 = 0;
    }
    long long v18 = v16;
    unint64_t v19 = &v16[24 * v12];
    unint64_t v20 = v19;
    unint64_t v21 = &v16[24 * v15];
    sub_1DDA353E0(&v18, a3);
    unint64_t v4 = (long long *)sub_1DDA3556C((uint64_t)a1, &v18, v4);
    sub_1DDA2A2C8((uint64_t)&v18);
  }
  else if (a2 == v6)
  {
    sub_1DDA35310(a1, a3);
  }
  else
  {
    sub_1DDA35370((uint64_t)a1, a2, v6, a2 + 24);
    if (v4 <= a3) {
      a3 = (long long *)((char *)a3 + 24 * (a1[1] > (unint64_t)a3));
    }
    std::string::operator=((std::string *)v4, (const std::string *)a3);
  }
  return v4;
}

void sub_1DDA2CFE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1DDA2A2C8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA2CFF8(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 88))(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2D080(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2D098(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 104))(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2D120(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2D138(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 120))(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2D1C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA2D1D8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1[23];
  if (v4 && (sub_1DDA4CA90(v4) & 1) == 0)
  {
    unint64_t v6 = *(uint64_t (**)(void *))(*a1 + 104);
    return (void *)v6(a1);
  }
  else
  {
    return sub_1DDA1A880(a2, "");
  }
}

uint64_t sub_1DDA2D26C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 80))();
}

void sub_1DDA2D290(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1[12];
  if (v4) {
    goto LABEL_14;
  }
  uint64_t v5 = a1[23];
  if (v5 && (sub_1DDA4CA90(v5) & 1) == 0)
  {
    (*(void (**)(uint64_t *__return_ptr, void *))(*a1 + 72))(&v13, a1);
    sub_1DDB65624(v13, &v15);
    uint64_t v7 = v15;
    unint64_t v6 = v16;
    uint64_t v15 = 0;
    unint64_t v16 = 0;
    unint64_t v8 = v14;
    if (!v14) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  sub_1DDBE3F6C(@"dng.adobe.generic", &v15);
  sub_1DDB65624(v15, &v13);
  uint64_t v7 = v13;
  unint64_t v6 = v14;
  unint64_t v8 = v16;
  if (v16) {
LABEL_5:
  }
    sub_1DDA18310(v8);
LABEL_6:
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = sub_1DDA2D484;
  void v12[3] = &unk_1E6D04B88;
  void v12[4] = a1;
  sub_1DDA1E614(v7, (uint64_t)v12);
  if (v7)
  {
    if (v6) {
      atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    unint64_t v9 = (std::__shared_weak_count *)a1[13];
    a1[12] = v7;
    a1[13] = v6;
    if (v9) {
      sub_1DDA18310(v9);
    }
  }
  if (v6) {
    sub_1DDA18310(v6);
  }
  uint64_t v4 = a1[12];
  if (!v4)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
LABEL_14:
  uint64_t v10 = a1[13];
  *a2 = v4;
  a2[1] = v10;
  if (v10) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
  }
}

void sub_1DDA2D430(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    sub_1DDA18310(a16);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA2D484(uint64_t a1)
{
  uint64_t v1 = (*(void (**)(void))(**(void **)(a1 + 32) + 88))(*(void *)(a1 + 32));

  return v1;
}

uint64_t sub_1DDA2D4D4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 216);
  if (!v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v3 = *(void *)(result + 224);
  *a2 = v2;
  a2[1] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1DDA2D548(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

double sub_1DDA2D55C()
{
  return 1.0;
}

uint64_t sub_1DDA2D564(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 408))();
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2D600(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2D618(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 416))();
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2D6B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2D6CC()
{
  return 0;
}

uint64_t sub_1DDA2D6D4()
{
  return 1;
}

uint64_t sub_1DDA2D6DC()
{
  return 0;
}

uint64_t sub_1DDA2D6E4()
{
  return 0;
}

void sub_1DDA2D6EC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v1);
  (*(void (**)(uint64_t))(*(void *)v1 + 216))(v1);
  if (v2) {
    sub_1DDA18310(v2);
  }
}

void sub_1DDA2D774(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA2D78C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v1);
  (*(void (**)(uint64_t))(*(void *)v1 + 224))(v1);
  if (v2) {
    sub_1DDA18310(v2);
  }
}

void sub_1DDA2D814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA2D82C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v1);
  (*(void (**)(uint64_t))(*(void *)v1 + 232))(v1);
  if (v2) {
    sub_1DDA18310(v2);
  }
}

void sub_1DDA2D8B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t (***sub_1DDA2D8CC(uint64_t a1))(void)
{
  uint64_t result = *(uint64_t (****)(void))(a1 + 24);
  if (result) {
    return sub_1DDAA72CC((uint64_t)result);
  }
  return result;
}

uint64_t sub_1DDA2D8DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2 && (sub_1DDAA731C(v2) & 1) == 0)
  {
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 32);
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    if (v3) {
      sub_1DDA18310(v3);
    }
    *(_DWORD *)(a1 + 40) = 0;
  }
  return 1;
}

void sub_1DDA2D924(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  if (v2) {
    sub_1DDA18310(v2);
  }
  *(_DWORD *)(a1 + 40) = 0;
}

void sub_1DDA2D958(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 256);
  *(void *)(a1 + 248) = v3;
  *(void *)(a1 + 256) = v2;
  if (v4) {
    sub_1DDA18310(v4);
  }
}

uint64_t sub_1DDA2D984(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 568))();
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2DA20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2DA38(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v6);
  uint64_t v1 = v6;
  sub_1DDA1A880(__p, "IFD0:EXIF");
  uint64_t v2 = (*(uint64_t (**)(uint64_t, void **))(*(void *)v1 + 264))(v1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  if (v7) {
    sub_1DDA18310(v7);
  }
  return v2;
}

void sub_1DDA2DAF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, std::__shared_weak_count *a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a17) {
    sub_1DDA18310(a17);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2DB20(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v6);
  uint64_t v1 = v6;
  sub_1DDA1A880(__p, "IFD0:EXIF");
  double v2 = (*(double (**)(uint64_t, void **, uint64_t))(*(void *)v1 + 280))(v1, __p, 1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  if (v7) {
    sub_1DDA18310(v7);
  }
  return v2;
}

void sub_1DDA2DBE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, std::__shared_weak_count *a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a17) {
    sub_1DDA18310(a17);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2DC14(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v6);
  uint64_t v1 = v6;
  sub_1DDA1A880(__p, "IFD0:EXIF");
  double v2 = (*(double (**)(uint64_t, void **))(*(void *)v1 + 296))(v1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  if (v7) {
    sub_1DDA18310(v7);
  }
  return v2;
}

void sub_1DDA2DCD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, std::__shared_weak_count *a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a17) {
    sub_1DDA18310(a17);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA2DD04(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v1);
  (*(void (**)(void))(*(void *)v1 + 584))();
  if (v2) {
    sub_1DDA18310(v2);
  }
}

void sub_1DDA2DDA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA2DDB8(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v1);
  (*(void (**)(void))(*(void *)v1 + 592))();
  if (v2) {
    sub_1DDA18310(v2);
  }
}

void sub_1DDA2DE5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2DE74(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v7 = v3;
  if (!*(void *)(a1 + 184))
  {
    sub_1DDA4C7FC(v3, &v54);
    (*(void (**)(uint64_t, uint64_t *))(*(void *)a1 + 136))(a1, &v54);
    if (v55) {
      sub_1DDA18310(v55);
    }
  }
  *(unsigned char *)(a1 + 200) = sub_1DDA2E1C4(v7, (const char *)@"kCGImageSourceDisableVendorLensCACorrection", v4, v5, v6) & 1;
  *(unsigned char *)(a1 + 201) = (sub_1DDA2E1C4(v7, (const char *)@"kCGImageSourceDisableVendorLensDistortionCorrection", v8, v9, v10) & 4) != 0;
  *(unsigned char *)(a1 + 202) = (sub_1DDA2E1C4(v7, (const char *)@"kCGImageSourceDisableVendorLensVignettingCorrection", v11, v12, v13) & 2) != 0;
  *(unsigned char *)(a1 + 203) = sub_1DDA2E20C(v7, (const char *)@"kCGImageSourceAltMode", v14, v15, v16);
  unint64_t v20 = objc_msgSend_objectForKeyedSubscript_(v7, v17, *MEMORY[0x1E4F2FF20], v18, v19);
  int v21 = sub_1DDB10AF0(v20);
  sub_1DDA2E254((_DWORD *)a1, v21);

  *(unsigned char *)(a1 + 212) = sub_1DDA2E20C(v7, (const char *)*MEMORY[0x1E4F2FEC8], v22, v23, v24);
  *(unsigned char *)(a1 + 213) = sub_1DDA2E20C(v7, (const char *)@"kCGImageSourceAddThumbnailInformation", v25, v26, v27);
  unint64_t v28 = sub_1DDA2E3A8(v7, (void *)*MEMORY[0x1E4F2FED8], 0);
  (*(void (**)(uint64_t, void *))(*(void *)a1 + 2880))(a1, v28);

  unint64_t v32 = sub_1DDA2E474(v7, (const char *)@"kCGImageSourceRawPropertiesHint", v29, v30, v31);
  int v36 = v32;
  if (v32) {
    char isEqualToString = objc_msgSend_isEqualToString_(v32, v33, @"ImportOnly", v34, v35);
  }
  else {
    char isEqualToString = 0;
  }
  *(unsigned char *)(a1 + 214) = isEqualToString;
  uint64_t v38 = (const char *)*MEMORY[0x1E4F2FF58];
  if (sub_1DDA2E4E0(v7, (void *)*MEMORY[0x1E4F2FF58]))
  {
    uint64_t v42 = sub_1DDA2E1C4(v7, v38, v39, v40, v41);
    (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 552))(a1, v42);
  }
  unint64_t v43 = sub_1DDA2E474(v7, (const char *)*MEMORY[0x1E4F2FE58], v39, v40, v41);
  long long v44 = sub_1DDA2E3A8(v7, (void *)*MEMORY[0x1E4F2FE60], 0);
  if (objc_msgSend_isEqualToString_(v43, v45, *MEMORY[0x1E4F2FE68], v46, v47))
  {
    int v51 = 1;
  }
  else
  {
    if (!objc_msgSend_isEqualToString_(v43, v48, *MEMORY[0x1E4F2FE70], v49, v50)) {
      goto LABEL_14;
    }
    int v51 = 2;
  }
  *(_DWORD *)(a1 + 280) = v51;
LABEL_14:
  double v52 = objc_msgSend_objectForKeyedSubscript_(v44, v48, *MEMORY[0x1E4F2FFA8], v49, v50);
  if (v52) {
    objc_storeStrong((id *)(a1 + 288), v52);
  }

  return 1;
}

void sub_1DDA2E164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1DDA2E1C4(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_1DDA357A8(a1, a2, a3, a4, a5);
  uint64_t v10 = objc_msgSend_intValue(v5, v6, v7, v8, v9);

  return v10;
}

void sub_1DDA2E1FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA2E20C(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_1DDA357A8(a1, a2, a3, a4, a5);
  uint64_t v10 = objc_msgSend_BOOLValue(v5, v6, v7, v8, v9);

  return v10;
}

void sub_1DDA2E244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA2E254(_DWORD *a1, int a2)
{
  sub_1DDB10E40(a2);
  id v14 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v4 = (*(void (**)(_DWORD *))(*(void *)a1 + 2760))(a1);
  if (!objc_msgSend_containsObject_(v4, v5, (uint64_t)v14, v6, v7))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  a1[51] = a2;
  a1[52] = a2;
  uint64_t v8 = sub_1DDB10E40(3);
  int v12 = objc_msgSend_containsObject_(v4, v9, (uint64_t)v8, v10, v11);

  if (v12) {
    a1[51] = 3;
  }
}

void sub_1DDA2E364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  __cxa_free_exception(v11);

  _Unwind_Resume(a1);
}

uint64_t sub_1DDA2E3A0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 212) = a2;
  return result;
}

id sub_1DDA2E3A8(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v9 = a2;
  if (v9 || !a3)
  {
    uint64_t v11 = objc_msgSend_objectForKeyedSubscript_(v5, v6, (uint64_t)v9, v7, v8);
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
    id v10 = v12;
  }
  else
  {
    id v10 = v5;
  }

  return v10;
}

void sub_1DDA2E454(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA2E474(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = objc_msgSend_objectForKeyedSubscript_(a1, a2, (uint64_t)a2, a4, a5);
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = v6;

  return v7;
}

void sub_1DDA2E4D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA2E4E0(void *a1, void *a2)
{
  id v3 = a1;
  id v7 = a2;
  if (v3)
  {
    uint64_t v8 = objc_msgSend_objectForKeyedSubscript_(v3, v4, (uint64_t)v7, v5, v6);
    BOOL v9 = v8 != 0;
  }
  else
  {
    BOOL v9 = 0;
  }

  return v9;
}

void sub_1DDA2E54C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA2E560()
{
  return 0;
}

uint64_t sub_1DDA2E568()
{
  return 0;
}

uint64_t sub_1DDA2E570()
{
  return 0;
}

uint64_t sub_1DDA2E578()
{
  return 0;
}

uint64_t sub_1DDA2E580(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 200);
}

uint64_t sub_1DDA2E588(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 201);
}

uint64_t sub_1DDA2E590(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 202);
}

uint64_t sub_1DDA2E598(uint64_t a1)
{
  return *(unsigned int *)(a1 + 204);
}

uint64_t sub_1DDA2E5A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 208);
}

BOOL sub_1DDA2E5A8(uint64_t a1)
{
  return *(_DWORD *)(a1 + 208) == 0;
}

uint64_t sub_1DDA2E5B8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 212);
}

uint64_t sub_1DDA2E5C0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 203);
}

CFTypeRef sub_1DDA2E5C8(uint64_t a1)
{
  if ((*(int (**)(uint64_t))(*(void *)a1 + 120))(a1) < 8)
  {
    CFTypeRef v6 = sub_1DDBEEC5C();
    goto LABEL_10;
  }
  int v2 = *(_DWORD *)(a1 + 280);
  if (v2 == 2)
  {
    id v3 = *(id *)(a1 + 288);
    uint64_t v4 = v3;
    if (v3) {
      goto LABEL_5;
    }
    CFTypeRef v5 = sub_1DDBEECF4();
    goto LABEL_14;
  }
  if (v2 != 1)
  {
    CFTypeRef v6 = sub_1DDBEECF4();
LABEL_10:
    CFTypeRef v7 = v6;
    if (!v6) {
      goto LABEL_15;
    }
    return v7;
  }
  id v3 = *(id *)(a1 + 288);
  uint64_t v4 = v3;
  if (v3)
  {
LABEL_5:
    CFTypeRef v5 = sub_1DDBEEF28(v3);
    goto LABEL_14;
  }
  CFTypeRef v5 = sub_1DDBEEDF8();
LABEL_14:
  CFTypeRef v7 = v5;

  if (!v7)
  {
LABEL_15:
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return v7;
}

void sub_1DDA2E6C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA2E6EC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 213);
}

uint64_t sub_1DDA2E6F4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 214);
}

double sub_1DDA2E6FC()
{
  return 0.0;
}

uint64_t sub_1DDA2E704(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 424))();
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2E7A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2E7B8(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 432))();
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2E854(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2E86C()
{
  return 0;
}

BOOL sub_1DDA2E874(uint64_t a1)
{
  if ((*(int (**)(uint64_t))(*(void *)a1 + 120))(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return (*(unsigned int (**)(uint64_t))(*(void *)a1 + 816))(a1) - 4 < 0xFFFFFFFD;
}

void sub_1DDA2E934(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA2E948(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 360))(a1)
    && ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 352))(a1) & 1) == 0)
  {
    (*(void (**)(_DWORD **__return_ptr, uint64_t))(*(void *)a1 + 2872))(&v25, a1);
    (*(void (**)(_DWORD *, uint64_t, int *, uint64_t))(*(void *)v25 + 80))(v25, a2, a3, a4);
  }
  else
  {
    uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 432))(a1);
    uint64_t v10 = v9;
    (*(void (**)(_DWORD **__return_ptr, uint64_t))(*(void *)a1 + 392))(&v25, a1);
    int v11 = v25[14];
    uint64_t v12 = sub_1DDAA7CC0((uint64_t)v25);
    int v13 = *a3;
    uint64_t v14 = a3[1];
    if ((int)v14 <= SHIDWORD(v8)) {
      int v15 = HIDWORD(v8);
    }
    else {
      int v15 = a3[1];
    }
    int v16 = HIDWORD(v8) + HIDWORD(v10);
    if (HIDWORD(v8) + HIDWORD(v10) >= a3[3] + (int)v14) {
      int v16 = a3[3] + v14;
    }
    if (v13 <= (int)v8) {
      int v17 = v8;
    }
    else {
      int v17 = *a3;
    }
    int v18 = v16 - v15;
    if (v16 > v15)
    {
      int v19 = 2 * v11;
      int v20 = a3[2] + v13;
      if ((int)v8 + (int)v10 < v20) {
        int v20 = v8 + v10;
      }
      size_t v21 = 2 * (v20 - v17);
      if (v14 <= v8 >> 32) {
        uint64_t v22 = v8 >> 32;
      }
      else {
        uint64_t v22 = a3[1];
      }
      uint64_t v23 = v19;
      uint64_t v24 = (char *)(v12 + (v22 - (v8 >> 32)) * v19 + 2 * (v17 - (int)v8));
      do
      {
        memcpy((void *)(a2 + ((int)v22 - a3[1]) * (int)a4 + 2 * (v17 - *a3)), v24, v21);
        LODWORD(v22) = v22 + 1;
        v24 += v23;
        --v18;
      }
      while (v18);
    }
  }
  if (v26) {
    sub_1DDA18310(v26);
  }
}

void sub_1DDA2EBBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA2EBD8(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  char v4 = (*(uint64_t (**)(uint64_t *))(*a1 + 360))(a1);
  uint64_t v5 = *a1;
  if (v4)
  {
    (*(void (**)(uint64_t *))(v5 + 384))(a1);
    uint64_t v6 = *a2;
    v11[0] = (*(uint64_t (**)(uint64_t *))(*a1 + 432))(a1);
    v11[1] = v7;
    sub_1DDAA7CF0(v6, (unsigned int *)v11, &v12);
    long long v8 = v12;
    long long v12 = 0uLL;
    uint64_t v9 = (std::__shared_weak_count *)a2[1];
    *(_OWORD *)a2 = v8;
    if (v9)
    {
      sub_1DDA18310(v9);
      if (*((void *)&v12 + 1)) {
        sub_1DDA18310(*((std::__shared_weak_count **)&v12 + 1));
      }
    }
  }
  else
  {
    uint64_t v10 = *(void (**)(uint64_t *))(v5 + 392);
    v10(a1);
  }
}

void sub_1DDA2ED30(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3) {
    sub_1DDA18310(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA2ED48(_DWORD *a1)
{
  int v2 = a1[10];
  if (!v2)
  {
    (*(void (**)(_DWORD *))(*(void *)a1 + 2920))(a1);
    int v2 = a1[10];
  }
  if (v2 != 1)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 2872))(&v4, a1);
  (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  if (v5) {
    sub_1DDA18310(v5);
  }
}

void sub_1DDA2EE5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA2EE84(uint64_t a1)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 2928))(a1);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 2872))(&v3, a1);
  if (!v3)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }
}

void sub_1DDA2EF88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  __cxa_free_exception(v10);
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(a1);
}

void sub_1DDA2EFB0(uint64_t a1@<X0>, void *a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 376))(&v9);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 456))(a1);
  uint64_t v6 = v5;
  uint64_t v7 = v4;
  uint64_t v8 = v5;
  if (fabs((*(double (**)(uint64_t))(*(void *)a1 + 2640))(a1) + -1.0) > 0.00001
    || fabs((*(double (**)(uint64_t))(*(void *)a1 + 2648))(a1) + -1.0) > 0.00001)
  {
    LODWORD(v8) = vcvtmd_s64_f64((*(double (**)(uint64_t))(*(void *)a1 + 2640))(a1) * (double)(int)v6);
    HIDWORD(v8) = vcvtmd_s64_f64((*(double (**)(uint64_t))(*(void *)a1 + 2648))(a1) * (double)SHIDWORD(v6));
  }
  sub_1DDAA7CF0(v9, (unsigned int *)&v7, a2);
  if (v10) {
    sub_1DDA18310(v10);
  }
}

void sub_1DDA2F190(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1DDA18310(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2F1A8(uint64_t *a1)
{
  int v2 = (*(uint64_t (**)(uint64_t *))(*a1 + 176))(a1);
  uint64_t v3 = *a1;
  if (v2)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t *))(v3 + 416);
    uint64_t v5 = a1;
  }
  else
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t *))(v3 + 424);
    uint64_t v5 = a1;
  }
  return v4(v5);
}

uint64_t sub_1DDA2F268(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 440))();
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2F304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2F31C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 440))();
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2F3B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2F3D0(uint64_t *a1)
{
  int v2 = (*(uint64_t (**)(uint64_t *))(*a1 + 176))(a1);
  uint64_t v3 = *a1;
  if (v2)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t *))(v3 + 440);
    uint64_t v5 = a1;
  }
  else
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t *))(v3 + 448);
    uint64_t v5 = a1;
  }
  return v4(v5);
}

uint64_t sub_1DDA2F490(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 448))();
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2F534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2F54C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 448))();
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2F5F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1DDA2F608(uint64_t *a1)
{
  int v2 = (*(uint64_t (**)(uint64_t *))(*a1 + 176))(a1);
  uint64_t v3 = *a1;
  if (v2)
  {
    unint64_t v4 = (*(uint64_t (**)(uint64_t *))(v3 + 464))(a1);
    unint64_t v5 = HIDWORD(v4);
    (*(void (**)(uint64_t *))(*a1 + 440))(a1);
    (*(uint64_t (**)(uint64_t *))(*a1 + 560))(a1);
  }
  else
  {
    unint64_t v6 = (*(uint64_t (**)(uint64_t *))(v3 + 472))(a1);
    LODWORD(v4) = v6;
    unint64_t v5 = HIDWORD(v6);
  }
  return v4 | ((unint64_t)v5 << 32);
}

uint64_t sub_1DDA2F784(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 456))();
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA2F828(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1DDA2F840(uint64_t a1)
{
  if ((*(int (**)(uint64_t))(*(void *)a1 + 120))(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    goto LABEL_9;
  }
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 432))(a1);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 160))(&v8, a1);
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)v8 + 464))();
  uint64_t v5 = v4;
  if (v9) {
    sub_1DDA18310(v9);
  }
  if ((int)v5 <= (int)v3 - (int)v2 || HIDWORD(v3) - HIDWORD(v2) >= SHIDWORD(v5))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
LABEL_9:
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return (v3 - v2) | ((unint64_t)(HIDWORD(v3) - HIDWORD(v2)) << 32);
}

void sub_1DDA2F9E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA2FA18(uint64_t a1)
{
  if (!(*(unsigned int (**)(uint64_t))(*(void *)a1 + 488))(a1)) {
    return *MEMORY[0x1E4F1DB28];
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 160))(&v4, a1);
  double v2 = (*(double (**)(void))(*(void *)v4 + 472))();
  if (v5) {
    sub_1DDA18310(v5);
  }
  return v2;
}

void sub_1DDA2FB28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA2FB40(uint64_t a1)
{
  if ((*(int (**)(uint64_t))(*(void *)a1 + 120))(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  double v2 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 456);

  return v2(a1);
}

void sub_1DDA2FC00(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA2FC14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 496))();
}

unint64_t sub_1DDA2FC40(uint64_t a1)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 432))(a1);
  return v1 & 0xFFFFFFFEFFFFFFFCLL;
}

unint64_t sub_1DDA2FC88(unsigned int *a1)
{
  if ((*(int (**)(unsigned int *))(*(void *)a1 + 120))(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  BOOL v2 = sub_1DDB10E74(a1[52]);
  uint64_t v3 = *(void *)a1;
  if (v2)
  {
    (*(void (**)(unsigned int *))(v3 + 432))(a1);
    unint64_t v5 = HIDWORD(v4);
  }
  else
  {
    int v6 = (*(uint64_t (**)(unsigned int *))(v3 + 544))(a1);
    (*(void (**)(unsigned int *))(*(void *)a1 + 496))(a1);
    unint64_t v5 = HIDWORD(v4);
    if (v6)
    {
      LODWORD(v4) = (int)v4 / v6;
      unint64_t v5 = ((int)v5 / v6);
    }
  }
  return v4 | (v5 << 32);
}

void sub_1DDA2FDC0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA2FDD4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v11);
  unint64_t v2 = (*(uint64_t (**)(void))(*(void *)v11 + 480))();
  if (v12) {
    sub_1DDA18310(v12);
  }
  if ((v2 - 20000) <= 0xFFFFB1E0 || (unint64_t v3 = HIDWORD(v2), (HIDWORD(v2) - 20000) <= 0xFFFFB1E0))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if (v2 > 0x3FF) {
    unsigned int v4 = v2;
  }
  else {
    unsigned int v4 = (v2 >> 1)
  }
       + 1024
       + (unsigned __int16)((v2 >> 1) + 1024) / (unsigned __int16)v2 * (unsigned __int16)v2
       - (unsigned __int16)((v2 >> 1) + 1024);
  if (HIDWORD(v2) <= 0x3FF) {
    LODWORD(v3) = (((v2 >> 33) & 0x7FFF) + 1024) / WORD2(v2) * WORD2(v2);
  }
  signed int v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 408))(a1);
  if ((int)v4 >= v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = v4;
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 408))(a1);
  if ((int)v3 >= SHIDWORD(v7)) {
    uint64_t v8 = HIDWORD(v7);
  }
  else {
    uint64_t v8 = v3;
  }
  return v6 | (v8 << 32);
}

void sub_1DDA2FFB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA2FFDC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v1);
  (*(void (**)(void))(*(void *)v1 + 488))();
  if (v2) {
    sub_1DDA18310(v2);
  }
}

void sub_1DDA30078(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA30090(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v1);
  (*(void (**)(void))(*(void *)v1 + 496))();
  if (v2) {
    sub_1DDA18310(v2);
  }
}

void sub_1DDA3012C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA30144(uint64_t a1)
{
  unsigned int v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 544))(a1);
  float v3 = 1.0;
  if (v2 >= 2) {
    float v3 = (float)(*(unsigned int (**)(uint64_t, float))(*(void *)a1 + 544))(a1, 1.0);
  }
  return (float)(1.0 / v3);
}

uint64_t sub_1DDA301E4(uint64_t a1)
{
  unsigned int v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 544))(a1);
  (*(void (**)(uint64_t))(*(void *)a1 + 432))(a1);
  if (v2 >= 2) {
    int v5 = v3 / (int)v2;
  }
  else {
    int v5 = v3;
  }
  if (v2 >= 2) {
    int v6 = v4 / (int)v2;
  }
  else {
    int v6 = v4;
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 432))(a1);
  CGFloat v8 = (double)(int)v7;
  CGFloat v9 = (double)SHIDWORD(v7);
  CGFloat v11 = (double)v10;
  CGFloat v13 = (double)v12;
  CGFloat v14 = (*(double (**)(uint64_t))(*(void *)a1 + 528))(a1);
  memset(&v17, 0, sizeof(v17));
  CGAffineTransformMakeScale(&v17, v14, v14);
  v22.origin.double x = v8;
  v22.origin.double y = v9;
  v22.size.double width = v11;
  v22.size.double height = v13;
  CGRect v23 = CGRectInset(v22, 0.00100000005, 0.00100000005);
  CGAffineTransform v16 = v17;
  CGRect v24 = CGRectApplyAffineTransform(v23, &v16);
  CGRect v25 = CGRectIntegral(v24);
  v18[0] = v25.origin.x;
  v18[1] = v25.origin.y;
  v19[0] = (*(double (**)(uint64_t))(*(void *)a1 + 2640))(a1) * (double)v5;
  v19[1] = (*(double (**)(uint64_t))(*(void *)a1 + 2648))(a1) * (double)v6;
  sub_1DDA35814(&v20, v18);
  sub_1DDA35814(&v21, v19);
  return v20;
}

uint64_t sub_1DDA30424(uint64_t a1)
{
  unsigned int v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 544))(a1);
  (*(void (**)(uint64_t))(*(void *)a1 + 496))(a1);
  if (v2 >= 2) {
    int v5 = v3 / (int)v2;
  }
  else {
    int v5 = v3;
  }
  if (v2 >= 2) {
    int v6 = v4 / (int)v2;
  }
  else {
    int v6 = v4;
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 456))(a1);
  CGFloat v8 = (double)(int)v7;
  CGFloat v9 = (double)SHIDWORD(v7);
  CGFloat v11 = (double)v10;
  CGFloat v13 = (double)v12;
  CGFloat v14 = (*(double (**)(uint64_t))(*(void *)a1 + 528))(a1);
  memset(&v17, 0, sizeof(v17));
  CGAffineTransformMakeScale(&v17, v14, v14);
  v22.origin.double x = v8;
  v22.origin.double y = v9;
  v22.size.double width = v11;
  v22.size.double height = v13;
  CGRect v23 = CGRectInset(v22, 0.00100000005, 0.00100000005);
  CGAffineTransform v16 = v17;
  CGRect v24 = CGRectApplyAffineTransform(v23, &v16);
  CGRect v25 = CGRectIntegral(v24);
  v18[0] = v25.origin.x;
  v18[1] = v25.origin.y;
  v19[0] = (double)v5;
  v19[1] = (double)v6;
  sub_1DDA35814(&v20, v18);
  sub_1DDA35814(&v21, v19);
  return v20;
}

uint64_t sub_1DDA305E0(unsigned int *a1)
{
  if ((*(int (**)(unsigned int *))(*(void *)a1 + 120))(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return a1[58];
}

void sub_1DDA30668(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA3067C(unsigned int a1)
{
  if (a1 <= 3) {
    unsigned int v1 = 2 * (a1 > 1);
  }
  else {
    unsigned int v1 = 4;
  }
  if (a1 <= 7) {
    return v1;
  }
  else {
    return 8;
  }
}

uint64_t sub_1DDA306A4(uint64_t result, unsigned int a2)
{
  if (a2 <= 3) {
    int v2 = 2 * (a2 > 1);
  }
  else {
    int v2 = 4;
  }
  if (a2 <= 7) {
    int v3 = v2;
  }
  else {
    int v3 = 8;
  }
  *(_DWORD *)(result + 232) = v3;
  return result;
}

uint64_t sub_1DDA306D0()
{
  return 0x100000001;
}

uint64_t sub_1DDA306D8()
{
  return 0x200000004;
}

uint64_t sub_1DDA306E4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 520))();
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA30780(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA30798(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 528))();
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA30834(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA3084C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v3 + 536))();
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA308E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA30900()
{
  return 8;
}

uint64_t sub_1DDA30908()
{
  return 3;
}

void sub_1DDA30910(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 168);
  if (!v4)
  {
    sub_1DDB15E80(0, &v8);
    long long v5 = v8;
    long long v8 = 0uLL;
    int v6 = *(std::__shared_weak_count **)(a1 + 176);
    *(_OWORD *)(a1 + 168) = v5;
    if (v6)
    {
      sub_1DDA18310(v6);
      if (*((void *)&v8 + 1)) {
        sub_1DDA18310(*((std::__shared_weak_count **)&v8 + 1));
      }
    }
    uint64_t v4 = *(void *)(a1 + 168);
  }
  uint64_t v7 = *(void *)(a1 + 176);
  *a2 = v4;
  a2[1] = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
}

void sub_1DDA30990(uint64_t a1, void *a2)
{
  sub_1DDB15E80(a2, &v5);
  long long v3 = v5;
  long long v5 = 0uLL;
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 176);
  *(_OWORD *)(a1 + 168) = v3;
  if (v4)
  {
    sub_1DDA18310(v4);
    if (*((void *)&v5 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v5 + 1));
    }
  }
}

uint64_t sub_1DDA309E8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t *))(*a1 + 120))(a1);
  if ((int)result <= 6
    || (uint64_t v5 = a1[3]) == 0
    && (((*(void (**)(uint64_t *))(*a1 + 2896))(a1), !a1[3])
     || (__int16 v6 = (*(uint64_t (**)(uint64_t *))(*a1 + 864))(a1),
         uint64_t result = sub_1DDAA6ACC(a1[3], v6 - 5),
         (uint64_t v5 = a1[3]) == 0)))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v7 = a1[4];
  *a2 = v5;
  a2[1] = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1DDA30B2C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA30B44(void *a1)
{
  int v2 = (*(uint64_t (**)(void *))(*a1 + 176))(a1);
  uint64_t v3 = *a1;
  if (v2) {
    uint64_t result = (*(uint64_t (**)(void *))(v3 + 2904))(a1);
  }
  else {
    uint64_t result = (*(uint64_t (**)(void *))(v3 + 2912))(a1);
  }
  uint64_t v5 = a1[3];
  if (v5)
  {
    unint64_t v8 = (*(uint64_t (**)(void *))(*a1 + 344))(a1);
    sub_1DDA18500(&v9, &v8);
    (*(void (**)(uint64_t, int *))(*(void *)v5 + 32))(v5, &v9);
    uint64_t v6 = a1[3];
    uint64_t v7 = (*(uint64_t (**)(void *))(*a1 + 56))(a1);
    return sub_1DDAA72C4(v6, v7);
  }
  return result;
}

void sub_1DDA30C98(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v8);
  uint64_t v2 = v8;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 408))(a1);
  v6[0] = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 432))(a1);
  v6[1] = v3;
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t *, void *))(*(void *)v2 + 552))(&v10, v2, &v7, v6);
  long long v4 = v10;
  long long v10 = 0uLL;
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = v4;
  if (v5)
  {
    sub_1DDA18310(v5);
    if (*((void *)&v10 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v10 + 1));
    }
  }
  if (v9) {
    sub_1DDA18310(v9);
  }
}

void sub_1DDA30DCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_1DDA18310(a14);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA30DE8(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v8);
  uint64_t v2 = v8;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 408))(a1);
  v6[0] = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 432))(a1);
  v6[1] = v3;
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t *, void *))(*(void *)v2 + 552))(&v10, v2, &v7, v6);
  long long v4 = v10;
  long long v10 = 0uLL;
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = v4;
  if (v5)
  {
    sub_1DDA18310(v5);
    if (*((void *)&v10 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v10 + 1));
    }
  }
  if (v9) {
    sub_1DDA18310(v9);
  }
}

void sub_1DDA30F1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_1DDA18310(a14);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA30F38(_DWORD *a1)
{
  if (!a1[10])
  {
    (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 2872))(&v5);
    uint64_t v2 = v5;
    if (v6) {
      sub_1DDA18310(v6);
    }
    if (v2)
    {
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 2872))(&v5, a1);
      (*(void (**)(uint64_t *__return_ptr))(*(void *)v5 + 24))(&v3);
      if (v4) {
        sub_1DDA18310(v4);
      }
      if (v6) {
        sub_1DDA18310(v6);
      }
      a1[10] = 1;
    }
  }
}

void sub_1DDA31028(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1DDA18310(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA31040(_DWORD *a1)
{
  int v2 = a1[10];
  if (!v2)
  {
    (*(void (**)(_DWORD *))(*(void *)a1 + 2920))(a1);
    int v2 = a1[10];
  }
  if (v2 == 1)
  {
    (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 2872))(&v8, a1);
    uint64_t v3 = v8;
    if (v9) {
      sub_1DDA18310(v9);
    }
    if (v3)
    {
      (*(void (**)(_DWORD *))(*(void *)a1 + 2144))(a1);
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 2872))(&v8, a1);
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      sub_1DDAA7368(v8, &v7, &v6);
      if (v9) {
        sub_1DDA18310(v9);
      }
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 2872))(&v8, a1);
      (*(void (**)(uint64_t *__return_ptr))(*(void *)v8 + 16))(&v4);
      if (v5) {
        sub_1DDA18310(v5);
      }
      if (v9) {
        sub_1DDA18310(v9);
      }
      a1[10] = 2;
    }
  }
}

void sub_1DDA31204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_1DDA18310(a14);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA31220(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  uint64_t v1 = (*(void (**)(void))(*(void *)v3 + 560))();
  if (v4) {
    sub_1DDA18310(v4);
  }

  return v1;
}

void sub_1DDA312D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA312E8(uint64_t a1@<X0>, void *a2@<X8>)
{
  (*(void (**)(id **__return_ptr))(*(void *)a1 + 72))(&v4);
  uint64_t v3 = sub_1DDB65470(v4);
  sub_1DDA31384(v3, a2);

  if (v5) {
    sub_1DDA18310(v5);
  }
}

void sub_1DDA31360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(a1);
}

void sub_1DDA31384(void *a1@<X0>, void *a2@<X8>)
{
  id v13 = a1;
  if (objc_msgSend_UTF8String(v13, v3, v4, v5, v6))
  {
    id v7 = v13;
    int v12 = (char *)objc_msgSend_UTF8String(v7, v8, v9, v10, v11);
    sub_1DDA1A880(a2, v12);
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
}

void sub_1DDA313F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DDA3140C(uint64_t a1@<X0>, _WORD **a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  sub_1DDA1E774(v7, v3, v4, v5, v6, a2);
  if (v8) {
    sub_1DDA18310(v8);
  }
}

void sub_1DDA31474(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA3148C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA1EA04(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA314F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3150C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA1EA8C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3157C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA31594(uint64_t a1@<X0>, void *a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  sub_1DDA1EB8C(v7, v3, v4, v5, v6, a2);
  if (v8) {
    sub_1DDA18310(v8);
  }
}

void sub_1DDA315FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA31614(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA1ED6C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3167C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA31694(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v3);
  sub_1DDA1EE68(v3, a2);
  if (v4) {
    sub_1DDA18310(v4);
  }
}

void sub_1DDA316FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA31714(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v3);
  sub_1DDA1F0F0(v3, a2);
  if (v4) {
    sub_1DDA18310(v4);
  }
}

void sub_1DDA3177C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA31794(uint64_t a1@<X0>, void *a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  sub_1DDA1F29C(v7, v3, v4, v5, v6, a2);
  if (v8) {
    sub_1DDA18310(v8);
  }
}

void sub_1DDA317FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA31814(uint64_t a1@<X0>, void *a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  sub_1DDA1F364(v7, v3, v4, v5, v6, a2);
  if (v8) {
    sub_1DDA18310(v8);
  }
}

void sub_1DDA3187C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA31894(uint64_t a1@<X0>, void *a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  sub_1DDA1F42C(v7, v3, v4, v5, v6, a2);
  if (v8) {
    sub_1DDA18310(v8);
  }
}

void sub_1DDA318FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA31914(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v3);
  BOOL v1 = sub_1DDA1F600(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA3197C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA31994(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA1F6A4(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA319FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA31A14(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  BOOL v5 = sub_1DDA1F728(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA31A7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA31A94(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA1F7B4(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA31AFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA31B14(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA1F838(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA31B7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA31B94(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA1F8C0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA31BFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA31C14(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA1F948(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA31C7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA31C94(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  BOOL v5 = sub_1DDA1F9D0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA31CFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA31D14(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA1FA60(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA31D84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA31D9C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA1FB08(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA31E0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA31E24(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA1FBB0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA31E94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA31EAC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v3);
  double v1 = sub_1DDA1FC34(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA31F1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA31F34(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v3);
  double v1 = sub_1DDA1FD18(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA31FA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA31FBC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA1FDF0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3202C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32044(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v3);
  double v1 = sub_1DDA1FE78(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA320B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA320CC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA1FF38(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3213C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32154(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA1FFCC(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA321C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA321DC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20060(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3224C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32264(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA200F4(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA322D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA322EC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20188(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3235C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA32374(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA2021C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA323DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA323F4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA202A4(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3245C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32474(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA2032C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA324E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA324FC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA203C0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3256C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32584(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20454(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA325F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA3260C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA204E8(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA32674(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3268C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20600(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA326FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32714(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20688(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA32784(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3279C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20710(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3280C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32824(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA207B4(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA32894(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA328AC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA2085C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3291C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32934(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20904(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA329A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA329BC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20988(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA32A2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32A44(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20A10(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA32AB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32ACC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20A94(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA32B3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32B54(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20B28(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA32BC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32BDC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20BC0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA32C4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32C64(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20C58(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA32CD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32CEC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20CE0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA32D5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32D74(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20D74(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA32DE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32DFC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20E08(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA32E6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32E84(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20E9C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA32EF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32F0C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20F30(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA32F7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA32F94(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA20FB8(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33004(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3301C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA21050(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3308C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA330A4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA210D8(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33114(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3312C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA2117C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3319C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA331B4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA21220(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33224(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3323C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA212C8(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA332AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA332C4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA21370(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33334(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3334C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA213F4(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA333BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA333D4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA21480(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33444(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3345C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA21514(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA334CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA334E4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA215A8(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33554(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3356C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA2163C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA335DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA335F4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA216D0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33664(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3367C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA21764(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA336EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA33704(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA217F8(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33774(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3378C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA2188C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA337FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA33814(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA21914(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33884(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3389C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA2199C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3390C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA33924(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA21A20(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3398C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA339A4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  BOOL v5 = sub_1DDA21AC4(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33A0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA33A24(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA21B50(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33A94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA33AAC(uint64_t a1@<X0>, double **a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v4);
  sub_1DDA21BD4(v4, a2, v3);
  if (v5) {
    sub_1DDA18310(v5);
  }
}

void sub_1DDA33B14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA33B2C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  sub_1DDA21FC8(v7, v3, v4, v5, v6, a2);
  if (v8) {
    sub_1DDA18310(v8);
  }
}

void sub_1DDA33B94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA33BAC(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  sub_1DDA22244(v7, v3, v4, v5, v6, a2);
  if (v8) {
    sub_1DDA18310(v8);
  }
}

void sub_1DDA33C14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA33C2C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  sub_1DDA223BC(v7, v3, v4, v5, v6, a2);
  if (v8) {
    sub_1DDA18310(v8);
  }
}

void sub_1DDA33C94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA33CAC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA22494(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33D1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA33D34(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA22518(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33DA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA33DBC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA225A0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33E2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA33E44(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v3);
  double v1 = sub_1DDA22634(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA33EB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA33ECC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA226E0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33F3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA33F54(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA22778(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA33FC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA33FDC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA22810(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34044(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3405C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA22894(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA340CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA340E4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA2292C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34154(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3416C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA229C0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA341DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA341F4(uint64_t a1)
{
  if ((*(int (**)(uint64_t))(*(void *)a1 + 120))(a1) <= 6)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 152))(&v7, a1);
  sub_1DDA22A54(v7, v2, v3, v4, v5);
  if (v8) {
    sub_1DDA18310(v8);
  }
  (*(double (**)(uint64_t, void, void))(*(void *)a1 + 2664))(a1, 0, 0);
}

void sub_1DDA34314(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA3433C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v3);
  sub_1DDA22AE8(v3, a2);
  if (v4) {
    sub_1DDA18310(v4);
  }
}

void sub_1DDA343A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA343BC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA22BB8(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34424(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3443C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA22C3C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA344AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA344C4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA22CD0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA3454C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA22D64(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA345BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA345D4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA22DE8(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3463C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA34654(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA22E70(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA346C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA346DC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA22F04(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3474C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA34764(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA22F98(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA347D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA347EC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA2302C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34854(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA3486C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v3);
  uint64_t v1 = sub_1DDA230B0(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA348D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA348EC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v3);
  double v1 = sub_1DDA2312C(v3);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA3495C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA34974(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA231A8(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA349E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA349FC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA2322C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34A6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA34A84(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA232B0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34AF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA34B0C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA23334(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34B74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA34B8C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA233B8(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34BFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA34C14(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA2343C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34C84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA34C9C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA234C0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34D0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA34D24(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA23544(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34D8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA34DA4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA235C8(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34E14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA34E2C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA2364C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34E9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA34EB4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA236D0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34F24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA34F3C(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  uint64_t v5 = sub_1DDA23754(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA34FA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA34FBC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA237D8(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3502C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA35044(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA2385C(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA350B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA350CC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v7);
  double v5 = sub_1DDA238E0(v7, v1, v2, v3, v4);
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA3513C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA35154(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v3);
  sub_1DDA23964(v3, a2);
  if (v4) {
    sub_1DDA18310(v4);
  }
}

void sub_1DDA351BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

float sub_1DDA351D4(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  float v1 = (*(float (**)(void))(*(void *)v3 + 576))();
  if (v4) {
    sub_1DDA18310(v4);
  }
  return v1;
}

void sub_1DDA35278(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA35290(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

long long *sub_1DDA3529C(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  double v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (*(char *)(a4 + 23) < 0) {
        operator delete(*(void **)a4);
      }
      long long v7 = *v5;
      *(void *)(a4 + 16) = *((void *)v5 + 2);
      *(_OWORD *)a4 = v7;
      a4 += 24;
      *((unsigned char *)v5 + 23) = 0;
      *(unsigned char *)double v5 = 0;
      double v5 = (long long *)((char *)v5 + 24);
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

void *sub_1DDA35310(void *result, long long *a2)
{
  uint64_t v2 = result;
  uint64_t v3 = result[1];
  if (*((char *)a2 + 23) < 0)
  {
    uint64_t result = sub_1DDA2639C((unsigned char *)result[1], *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *(void *)(v3 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v3 = v4;
  }
  v2[1] = v3 + 24;
  return result;
}

void sub_1DDA35368(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA35370(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  uint64_t v8 = v6;
  if (v7 < a3)
  {
    unint64_t v9 = v7;
    uint64_t v8 = *(void *)(a1 + 8);
    do
    {
      long long v10 = *(_OWORD *)v9;
      *(void *)(v8 + 16) = *(void *)(v9 + 16);
      *(_OWORD *)uint64_t v8 = v10;
      v8 += 24;
      *(void *)(v9 + 8) = 0;
      *(void *)(v9 + 16) = 0;
      *(void *)unint64_t v9 = 0;
      v9 += 24;
    }
    while (v9 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_1DDA35620((uint64_t)&v12, a2, v7, v6);
}

void *sub_1DDA353E0(void *result, long long *a2)
{
  uint64_t v3 = result;
  uint64_t v4 = result[2];
  if (v4 == result[3])
  {
    double v5 = (long long *)result[1];
    if ((unint64_t)v5 <= *result)
    {
      uint64_t v11 = v4 - *result;
      BOOL v10 = v11 == 0;
      uint64_t v12 = 0x5555555555555556 * (v11 >> 3);
      if (v10) {
        unint64_t v13 = 1;
      }
      else {
        unint64_t v13 = v12;
      }
      unint64_t v14 = v13 >> 2;
      uint64_t v15 = result[4];
      uint64_t v32 = v3[4];
      CGAffineTransform v16 = (char *)sub_1DDA2A160(v15, v13);
      int v18 = &v16[24 * v14];
      unint64_t v19 = v3[1];
      int64_t v20 = v3[2] - v19;
      if (v20)
      {
        uint64_t v21 = v20 / 24;
        CGRect v22 = &v18[24 * v21];
        uint64_t v23 = 24 * v21;
        CGRect v24 = &v16[24 * v14];
        do
        {
          long long v25 = *(_OWORD *)v19;
          *((void *)v24 + 2) = *(void *)(v19 + 16);
          *(_OWORD *)CGRect v24 = v25;
          v24 += 24;
          *(void *)(v19 + 8) = 0;
          *(void *)(v19 + 16) = 0;
          *(void *)unint64_t v19 = 0;
          v19 += 24;
          v23 -= 24;
        }
        while (v23);
        int64x2_t v26 = *(int64x2_t *)(v3 + 1);
      }
      else
      {
        int64x2_t v26 = vdupq_n_s64(v19);
        CGRect v22 = &v16[24 * v14];
      }
      uint64_t v29 = *v3;
      *uint64_t v3 = v16;
      v3[1] = v18;
      int64x2_t v30 = v26;
      uint64_t v27 = v3[3];
      v3[2] = v22;
      v3[3] = &v16[24 * v17];
      uint64_t v31 = v27;
      uint64_t result = (void *)sub_1DDA2A2C8((uint64_t)&v29);
      uint64_t v4 = v3[2];
    }
    else
    {
      int64_t v6 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v5 - *result) >> 3);
      if (v6 >= -1) {
        uint64_t v7 = v6 + 1;
      }
      else {
        uint64_t v7 = v6 + 2;
      }
      uint64_t v8 = -3 * (v7 >> 1);
      uint64_t result = sub_1DDA3529C((uint64_t)&v29, v5, (long long *)v4, (uint64_t)v5 - 24 * (v7 >> 1));
      uint64_t v4 = v9;
      v3[1] += 8 * v8;
      v3[2] = v9;
    }
  }
  if (*((char *)a2 + 23) < 0)
  {
    uint64_t result = sub_1DDA2639C((unsigned char *)v4, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v28 = *a2;
    *(void *)(v4 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v4 = v28;
  }
  v3[2] += 24;
  return result;
}

uint64_t sub_1DDA3556C(uint64_t a1, void *a2, long long *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1 + 16;
  sub_1DDA2A1A8(a1 + 16, (uint64_t)a3, (uint64_t)a3, *(void *)a1, *(void *)a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_1DDA356A8(v7, a3, *(long long **)(a1 + 8), a2[2]);
  uint64_t v9 = *(void *)a1;
  *(void *)a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = a2[2];
  a2[2] = v10;
  uint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_1DDA35620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    do
    {
      uint64_t v7 = a4 - 24;
      if (*(char *)(a4 - 1) < 0) {
        operator delete(*(void **)v7);
      }
      long long v8 = *(_OWORD *)(v6 - 24);
      *(void *)(v7 + 16) = *(void *)(v6 - 8);
      *(_OWORD *)uint64_t v7 = v8;
      *(unsigned char *)(v6 - 1) = 0;
      *(unsigned char *)(v6 - 24) = 0;
      a4 = v7;
      v6 -= 24;
    }
    while (v6 != a2);
  }
  return a3;
}

uint64_t sub_1DDA356A8(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      long long v5 = *a2;
      *(void *)(v4 + 16) = *((void *)a2 + 2);
      *(_OWORD *)uint64_t v4 = v5;
      v4 += 24;
      *((void *)a2 + 1) = 0;
      *((void *)a2 + 2) = 0;
      *(void *)a2 = 0;
      a2 = (long long *)((char *)a2 + 24);
    }
    while (a2 != a3);
    uint64_t v10 = v4;
  }
  char v8 = 1;
  sub_1DDA35728((uint64_t)v7);
  return v4;
}

uint64_t sub_1DDA35728(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1DDA35760(a1);
  }
  return a1;
}

void sub_1DDA35760(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 24;
  }
}

id sub_1DDA357A8(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v5 = objc_msgSend_objectForKeyedSubscript_(a1, a2, (uint64_t)a2, a4, a5);
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = v6;

  return v7;
}

void sub_1DDA35804(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

_DWORD *sub_1DDA35814(_DWORD *a1, double *a2)
{
  unint64_t v5 = llround(*a2);
  sub_1DDA1B2DC(&v6, (uint64_t *)&v5);
  *a1 = v6;
  unint64_t v5 = llround(a2[1]);
  sub_1DDA1B2DC(&v6, (uint64_t *)&v5);
  a1[1] = v6;
  return a1;
}

void *sub_1DDA35884(uint64_t a1)
{
  if (a1 < 1) {
    return 0;
  }
  if (a1 >= 0x555555555555555) {
    unint64_t v1 = 0x555555555555555;
  }
  else {
    unint64_t v1 = a1;
  }
  uint64_t v2 = (const std::nothrow_t *)MEMORY[0x1E4FBA2D0];
  while (1)
  {
    uint64_t result = operator new(24 * v1, v2);
    if (result) {
      break;
    }
    BOOL v4 = v1 > 1;
    v1 >>= 1;
    if (!v4) {
      return 0;
    }
  }
  return result;
}

void sub_1DDA358F0(__n128 *a1, __n128 *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3 < 2) {
    return;
  }
  unint64_t v5 = a2;
  int v6 = a1;
  if (a3 == 2)
  {
    id v7 = (__n128 *)((char *)a2 - 24);
    if (a2[-1].n128_i8[15] < 0)
    {
      sub_1DDA2639C(__dst, (void *)a2[-2].n128_u64[1], a2[-1].n128_u64[0]);
    }
    else
    {
      __n128 v8 = *v7;
      unint64_t v61 = a2[-1].n128_u64[1];
      *(__n128 *)__dst = v8;
    }
    if (v6[1].n128_i8[7] < 0)
    {
      sub_1DDA2639C(v58, (void *)v6->n128_u64[0], v6->n128_u64[1]);
    }
    else
    {
      __n128 v15 = *v6;
      unint64_t v59 = v6[1].n128_u64[0];
      *(__n128 *)char v58 = v15;
    }
    BOOL v33 = sub_1DDA35F20((uint64_t *)__dst, (uint64_t)v58);
    if (SHIBYTE(v59) < 0) {
      operator delete(v58[0]);
    }
    if (SHIBYTE(v61) < 0) {
      operator delete(__dst[0]);
    }
    if (v33)
    {
      unint64_t v34 = v6[1].n128_u64[0];
      __n128 v35 = *v6;
      unint64_t v36 = v5[-1].n128_u64[1];
      *int v6 = *v7;
      v6[1].n128_u64[0] = v36;
      *id v7 = v35;
      v5[-1].n128_u64[1] = v34;
    }
    return;
  }
  if ((uint64_t)a3 > 0)
  {
    int64_t v12 = a3 >> 1;
    unint64_t v13 = (char *)a1 + 24 * (a3 >> 1);
    if ((uint64_t)a3 <= a5)
    {
      sub_1DDA3605C(a1, (__n128 *)((char *)a1 + 24 * (a3 >> 1)), a3 >> 1, a4);
      uint64_t v37 = a4 + 24 * v12;
      sub_1DDA3605C((__n128 *)((char *)v6 + 24 * (a3 >> 1)), v5, a3 - v12, v37);
      v64[0] = (void *)a3;
      unint64_t v38 = a4 + 24 * a3;
      uint64_t v39 = v37;
      uint64_t v40 = a4;
      while (v39 != v38)
      {
        if (*(char *)(v39 + 23) < 0)
        {
          sub_1DDA2639C(&v70, *(void **)v39, *(void *)(v39 + 8));
        }
        else
        {
          long long v41 = *(_OWORD *)v39;
          uint64_t v71 = *(void *)(v39 + 16);
          long long v70 = v41;
        }
        if (*(char *)(v40 + 23) < 0)
        {
          sub_1DDA2639C(&v68, *(void **)v40, *(void *)(v40 + 8));
        }
        else
        {
          __n128 v42 = *(__n128 *)v40;
          unint64_t v69 = *(void *)(v40 + 16);
          __n128 v68 = v42;
        }
        BOOL v43 = sub_1DDA35F20((uint64_t *)&v70, (uint64_t)&v68);
        if (SHIBYTE(v69) < 0) {
          operator delete((void *)v68.n128_u64[0]);
        }
        if (SHIBYTE(v71) < 0) {
          operator delete((void *)v70);
        }
        int v44 = v6[1].n128_i8[7];
        if (v43)
        {
          if (v44 < 0) {
            operator delete((void *)v6->n128_u64[0]);
          }
          __n128 v45 = *(__n128 *)v39;
          v6[1].n128_u64[0] = *(void *)(v39 + 16);
          *int v6 = v45;
          *(unsigned char *)(v39 + 23) = 0;
          *(unsigned char *)uint64_t v39 = 0;
          v39 += 24;
        }
        else
        {
          if (v44 < 0) {
            operator delete((void *)v6->n128_u64[0]);
          }
          __n128 v46 = *(__n128 *)v40;
          v6[1].n128_u64[0] = *(void *)(v40 + 16);
          *int v6 = v46;
          *(unsigned char *)(v40 + 23) = 0;
          *(unsigned char *)uint64_t v40 = 0;
          v40 += 24;
        }
        int v6 = (__n128 *)((char *)v6 + 24);
        if (v40 == v37)
        {
          if (v39 != v38)
          {
            uint64_t v47 = 0;
            do
            {
              long long v48 = (char *)v6 + v47;
              if (v6[1].n128_i8[v47 + 7] < 0) {
                operator delete(*(void **)v48);
              }
              uint64_t v49 = (unsigned char *)(v39 + v47);
              long long v50 = *(_OWORD *)(v39 + v47);
              *((void *)v48 + 2) = *(void *)(v39 + v47 + 16);
              *(_OWORD *)long long v48 = v50;
              v49[23] = 0;
              *uint64_t v49 = 0;
              uint64_t v51 = v39 + v47 + 24;
              v47 += 24;
            }
            while (v51 != v38);
          }
          goto LABEL_90;
        }
      }
      if (v40 != v37)
      {
        uint64_t v52 = 0;
        do
        {
          double v53 = (char *)v6 + v52;
          if (v6[1].n128_i8[v52 + 7] < 0) {
            operator delete(*(void **)v53);
          }
          uint64_t v54 = (unsigned char *)(v40 + v52);
          long long v55 = *(_OWORD *)(v40 + v52);
          *((void *)v53 + 2) = *(void *)(v40 + v52 + 16);
          *(_OWORD *)double v53 = v55;
          v54[23] = 0;
          unsigned char *v54 = 0;
          uint64_t v56 = v40 + v52 + 24;
          v52 += 24;
        }
        while (v56 != v37);
      }
LABEL_90:
      if (a4) {
        sub_1DDA36EA0((unint64_t *)v64, a4);
      }
    }
    else
    {
      sub_1DDA358F0(a1, (char *)a1 + 24 * (a3 >> 1), a3 >> 1, a4, a5);
      uint64_t v14 = a3 - v12;
      sub_1DDA358F0(v13, v5, v14, a4, a5);
      sub_1DDA36684((long long *)v6, v13, (uint64_t)v5, v12, v14, a4, a5);
    }
    return;
  }
  if (a1 == a2) {
    return;
  }
  CGAffineTransform v16 = &a1[1].n128_i8[8];
  if (&a1[1].n128_i8[8] == (__int8 *)a2) {
    return;
  }
  uint64_t v17 = 0;
  int v18 = a1;
  do
  {
    unint64_t v19 = (__n128 *)v16;
    if (v18[2].n128_i8[15] < 0)
    {
      sub_1DDA2639C(&v70, *(void **)v16, v18[2].n128_u64[0]);
    }
    else
    {
      long long v20 = *(_OWORD *)v16;
      uint64_t v71 = *((void *)v16 + 2);
      long long v70 = v20;
    }
    if (v18[1].n128_i8[7] < 0)
    {
      sub_1DDA2639C(&v68, (void *)v18->n128_u64[0], v18->n128_u64[1]);
    }
    else
    {
      __n128 v21 = *v18;
      unint64_t v69 = v18[1].n128_u64[0];
      __n128 v68 = v21;
    }
    BOOL v22 = sub_1DDA35F20((uint64_t *)&v70, (uint64_t)&v68);
    if (SHIBYTE(v69) < 0) {
      operator delete((void *)v68.n128_u64[0]);
    }
    if (SHIBYTE(v71) < 0)
    {
      operator delete((void *)v70);
      if (!v22) {
        goto LABEL_50;
      }
    }
    else if (!v22)
    {
      goto LABEL_50;
    }
    uint64_t v23 = (void *)v19->n128_u64[0];
    CGRect v24 = (void *)v18[2].n128_u64[0];
    v67[0] = v18[2].n128_u32[2];
    *(_DWORD *)((char *)v67 + 3) = *(unsigned __int32 *)((char *)&v18[2].n128_u32[2] + 3);
    int v25 = v18[2].n128_i8[15];
    v19->n128_u64[1] = 0;
    v19[1].n128_u64[0] = 0;
    v19->n128_u64[0] = 0;
    for (uint64_t i = v17; ; i -= 24)
    {
      uint64_t v27 = (char *)v6 + i;
      long long v28 = (void **)((char *)&v6[1].n128_u64[1] + i);
      if (v6[2].n128_i8[i + 15] < 0) {
        operator delete(*v28);
      }
      *(_OWORD *)long long v28 = *(_OWORD *)v27;
      *(unint64_t *)((char *)&v6[2].n128_u64[1] + i) = *((void *)v27 + 2);
      v27[23] = 0;
      char *v27 = 0;
      if (!i)
      {
        uint64_t v32 = v6;
        goto LABEL_49;
      }
      if (v25 < 0)
      {
        sub_1DDA2639C(v64, v23, (unint64_t)v24);
      }
      else
      {
        v64[0] = v23;
        v64[1] = v24;
        *(_DWORD *)char v65 = v67[0];
        *(_DWORD *)&v65[3] = *(_DWORD *)((char *)v67 + 3);
        char v66 = v25;
      }
      uint64_t v29 = (void **)((char *)&v6[-1] + i - 8);
      if (v6->n128_i8[i - 1] < 0)
      {
        sub_1DDA2639C(__p, *v29, *(unint64_t *)((char *)v6[-1].n128_u64 + i));
      }
      else
      {
        long long v30 = *(_OWORD *)v29;
        uint64_t v63 = *(uint64_t *)((char *)&v6->n128_i64[-1] + i);
        *(_OWORD *)__p = v30;
      }
      BOOL v31 = sub_1DDA35F20((uint64_t *)v64, (uint64_t)__p);
      if (SHIBYTE(v63) < 0) {
        operator delete(__p[0]);
      }
      if (v66 < 0) {
        break;
      }
      if (!v31) {
        goto LABEL_47;
      }
LABEL_45:
      ;
    }
    operator delete(v64[0]);
    if (v31) {
      goto LABEL_45;
    }
LABEL_47:
    uint64_t v32 = (__n128 *)((char *)v6 + i);
    if (v6[1].n128_i8[i + 7] < 0) {
      operator delete((void *)v32->n128_u64[0]);
    }
LABEL_49:
    v32->n128_u64[0] = (unint64_t)v23;
    v32->n128_u64[1] = (unint64_t)v24;
    v32[1].n128_u32[0] = v67[0];
    *(unsigned __int32 *)((char *)v32[1].n128_u32 + 3) = *(_DWORD *)((char *)v67 + 3);
    v32[1].n128_u8[7] = v25;
    unint64_t v5 = a2;
LABEL_50:
    CGAffineTransform v16 = &v19[1].n128_i8[8];
    v17 += 24;
    int v18 = v19;
  }
  while (&v19[1].n128_i8[8] != (__int8 *)v5);
}

void sub_1DDA35E94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA35F20(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = *((unsigned __int8 *)a1 + 23);
  if (*((char *)a1 + 23) < 0) {
    a1 = (uint64_t *)*a1;
  }
  int v5 = atoi((const char *)a1);
  int v6 = (const char *)a2;
  if (*(char *)(a2 + 23) < 0) {
    int v6 = *(const char **)a2;
  }
  uint64_t v7 = *(unsigned __int8 *)(a2 + 23);
  int v8 = atoi(v6);
  if ((v4 & 0x80) != 0)
  {
    uint64_t v9 = v3;
    uint64_t v3 = (void *)*v3;
    uint64_t v4 = v9[1];
  }
  uint64_t v10 = (char *)v3 + v4;
  if (v4 >= 4)
  {
    uint64_t v11 = v3;
    do
    {
      int64_t v12 = (char *)memchr(v11, 46, v4 - 3);
      if (!v12) {
        break;
      }
      unint64_t v13 = v12;
      if (*(_DWORD *)v12 == 1735287854) {
        goto LABEL_13;
      }
      uint64_t v11 = v12 + 1;
      uint64_t v4 = v10 - (v13 + 1);
    }
    while (v4 > 3);
  }
  unint64_t v13 = v10;
LABEL_13:
  if ((v7 & 0x80) != 0)
  {
    uint64_t v14 = a2;
    a2 = *(void *)a2;
    uint64_t v7 = *(void *)(v14 + 8);
  }
  int64_t v15 = v13 - (char *)v3;
  CGAffineTransform v16 = (char *)(a2 + v7);
  if (v7 >= 4)
  {
    uint64_t v17 = (void *)a2;
    do
    {
      int v18 = (char *)memchr(v17, 46, v7 - 3);
      if (!v18) {
        break;
      }
      if (*(_DWORD *)v18 == 1735287854) {
        goto LABEL_21;
      }
      uint64_t v17 = v18 + 1;
      uint64_t v7 = v16 - (unsigned char *)v17;
    }
    while (v16 - (unsigned char *)v17 > 3);
  }
  int v18 = v16;
LABEL_21:
  BOOL v22 = (v13 == v10 || v15 == -1) && v18 != v16 && &v18[-a2 + 1] != 0;
  if (v5 == v8) {
    return v22;
  }
  else {
    return v5 > v8;
  }
}

__n128 sub_1DDA3605C(__n128 *a1, __n128 *a2, unint64_t a3, uint64_t a4)
{
  if (!a3) {
    return result;
  }
  int v6 = a2;
  uint64_t v7 = a1;
  if (a3 == 2)
  {
    __dst.n128_u64[0] = 0;
    if (a2[-1].n128_i8[15] < 0)
    {
      sub_1DDA2639C(v46, (void *)a2[-2].n128_u64[1], a2[-1].n128_u64[0]);
    }
    else
    {
      long long v9 = *(long long *)((char *)&a2[-2] + 8);
      unint64_t v47 = a2[-1].n128_u64[1];
      *(_OWORD *)__n128 v46 = v9;
    }
    if (v7[1].n128_i8[7] < 0)
    {
      sub_1DDA2639C(v44, (void *)v7->n128_u64[0], v7->n128_u64[1]);
    }
    else
    {
      __n128 v34 = *v7;
      unint64_t v45 = v7[1].n128_u64[0];
      *(__n128 *)int v44 = v34;
    }
    BOOL v35 = sub_1DDA35F20((uint64_t *)v46, (uint64_t)v44);
    if (SHIBYTE(v45) < 0) {
      operator delete(v44[0]);
    }
    if (SHIBYTE(v47) < 0) {
      operator delete(v46[0]);
    }
    if (v35) {
      unint64_t v36 = (__n128 *)((char *)v6 - 24);
    }
    else {
      unint64_t v36 = v7;
    }
    if (v35) {
      uint64_t v37 = v7;
    }
    else {
      uint64_t v37 = (__n128 *)((char *)v6 - 24);
    }
    __n128 v38 = *v36;
    *(void *)(a4 + 16) = v36[1].n128_u64[0];
    *(__n128 *)a4 = v38;
    v36->n128_u64[1] = 0;
    v36[1].n128_u64[0] = 0;
    v36->n128_u64[0] = 0;
    __n128 result = *v37;
    *(void *)(a4 + 40) = v37[1].n128_u64[0];
    *(__n128 *)(a4 + 24) = result;
    v37->n128_u64[1] = 0;
    v37[1].n128_u64[0] = 0;
    v37->n128_u64[0] = 0;
    return result;
  }
  if (a3 == 1)
  {
    __n128 result = *a1;
    *(void *)(a4 + 16) = a1[1].n128_u64[0];
    *(__n128 *)a4 = result;
    a1->n128_u64[1] = 0;
    a1[1].n128_u64[0] = 0;
    a1->n128_u64[0] = 0;
    return result;
  }
  if ((uint64_t)a3 > 8)
  {
    CGRect v24 = (__n128 *)((char *)a1 + 24 * (a3 >> 1));
    sub_1DDA358F0(a1, v24, a3 >> 1, a4, a3 >> 1);
    sub_1DDA358F0((char *)v7 + 24 * (a3 >> 1), v6, a3 - (a3 >> 1), a4 + 24 * (a3 >> 1), a3 - (a3 >> 1));
    uint64_t v25 = 0;
    int64x2_t v26 = (__n128 *)a4;
    uint64_t v27 = (__n128 *)((char *)v7 + 24 * (a3 >> 1));
    while (1)
    {
      if (v27 == v6)
      {
        if (v7 != v24)
        {
          uint64_t v39 = 0;
          do
          {
            uint64_t v40 = (__n128 *)((char *)v26 + v39 * 8);
            long long v41 = &v7->n128_u64[v39];
            __n128 result = *(__n128 *)((char *)v7 + v39 * 8);
            v40[1].n128_u64[0] = v7[1].n128_u64[v39];
            *uint64_t v40 = result;
            v41[1] = 0;
            v41[2] = 0;
            *long long v41 = 0;
            v39 += 3;
          }
          while ((__n128 *)((char *)v7 + v39 * 8) != v24);
        }
        return result;
      }
      if (v27[1].n128_i8[7] < 0)
      {
        sub_1DDA2639C(&__dst, (void *)v27->n128_u64[0], v27->n128_u64[1]);
      }
      else
      {
        __n128 v28 = *v27;
        uint64_t v55 = v27[1].n128_i64[0];
        __n128 __dst = v28;
      }
      if (v7[1].n128_i8[7] < 0)
      {
        sub_1DDA2639C(__p, (void *)v7->n128_u64[0], v7->n128_u64[1]);
      }
      else
      {
        __n128 v29 = *v7;
        unint64_t v53 = v7[1].n128_u64[0];
        *(__n128 *)__p = v29;
      }
      BOOL v30 = sub_1DDA35F20((uint64_t *)&__dst, (uint64_t)__p);
      if (SHIBYTE(v53) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v55) < 0)
      {
        operator delete((void *)__dst.n128_u64[0]);
        if (!v30)
        {
LABEL_62:
          __n128 result = *v7;
          v26[1].n128_u64[0] = v7[1].n128_u64[0];
          *int64x2_t v26 = result;
          v7->n128_u64[1] = 0;
          v7[1].n128_u64[0] = 0;
          v7->n128_u64[0] = 0;
          uint64_t v7 = (__n128 *)((char *)v7 + 24);
          goto LABEL_63;
        }
      }
      else if (!v30)
      {
        goto LABEL_62;
      }
      __n128 result = *v27;
      v26[1].n128_u64[0] = v27[1].n128_u64[0];
      *int64x2_t v26 = result;
      v27->n128_u64[1] = 0;
      v27[1].n128_u64[0] = 0;
      v27->n128_u64[0] = 0;
      uint64_t v27 = (__n128 *)((char *)v27 + 24);
LABEL_63:
      ++v25;
      int64x2_t v26 = (__n128 *)((char *)v26 + 24);
      if (v7 == v24)
      {
        if (v27 != v6)
        {
          unint64_t v31 = 0;
          do
          {
            uint64_t v32 = (char *)v27 + v31;
            BOOL v33 = (__n128 *)((char *)v26 + v31);
            __n128 result = *(__n128 *)((char *)v27 + v31);
            v33[1].n128_u64[0] = v27[1].n128_u64[v31 / 8];
            *BOOL v33 = result;
            *((void *)v32 + 1) = 0;
            *((void *)v32 + 2) = 0;
            *(void *)uint64_t v32 = 0;
            v31 += 24;
          }
          while ((__n128 *)((char *)v27 + v31) != v6);
        }
        return result;
      }
    }
  }
  if (a1 == a2) {
    return result;
  }
  __n128 result = *a1;
  *(void *)(a4 + 16) = a1[1].n128_u64[0];
  *(__n128 *)a4 = result;
  a1->n128_u64[1] = 0;
  a1[1].n128_u64[0] = 0;
  a1->n128_u64[0] = 0;
  uint64_t v10 = &a1[1].n128_i8[8];
  if (&a1[1].n128_i8[8] == (__int8 *)a2) {
    return result;
  }
  uint64_t v11 = 0;
  uint64_t v43 = 1;
  int64_t v12 = (__n128 *)a4;
  do
  {
    unint64_t v13 = (__n128 *)v10;
    if (v7[2].n128_i8[15] < 0)
    {
      sub_1DDA2639C(&__dst, *(void **)v10, v7[2].n128_u64[0]);
    }
    else
    {
      __n128 v14 = *(__n128 *)v10;
      uint64_t v55 = *((void *)v10 + 2);
      __n128 __dst = v14;
    }
    if (v12[1].n128_i8[7] < 0)
    {
      sub_1DDA2639C(__p, (void *)v12->n128_u64[0], v12->n128_u64[1]);
    }
    else
    {
      *(__n128 *)__p = *v12;
      unint64_t v53 = v12[1].n128_u64[0];
    }
    BOOL v15 = sub_1DDA35F20((uint64_t *)&__dst, (uint64_t)__p);
    if (SHIBYTE(v53) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v55) < 0) {
      operator delete((void *)__dst.n128_u64[0]);
    }
    CGAffineTransform v16 = (__n128 *)((char *)v12 + 24);
    ++v43;
    if (!v15)
    {
      __n128 result = *v13;
      v12[2].n128_u64[1] = v13[1].n128_u64[0];
      *CGAffineTransform v16 = result;
      v13->n128_u64[1] = 0;
      v13[1].n128_u64[0] = 0;
      v13->n128_u64[0] = 0;
      goto LABEL_46;
    }
    *CGAffineTransform v16 = *v12;
    v12[2].n128_u64[1] = v12[1].n128_u64[0];
    v12->n128_u64[1] = 0;
    v12[1].n128_u64[0] = 0;
    v12->n128_u64[0] = 0;
    uint64_t v17 = (__n128 *)a4;
    if (v12 == (__n128 *)a4) {
      goto LABEL_43;
    }
    uint64_t v18 = v11;
    while (1)
    {
      if (v7[2].n128_i8[15] < 0)
      {
        sub_1DDA2639C(v50, (void *)v13->n128_u64[0], v7[2].n128_u64[0]);
      }
      else
      {
        __n128 v19 = *v13;
        uint64_t v51 = v13[1].n128_i64[0];
        *(__n128 *)long long v50 = v19;
      }
      uint64_t v20 = a4 + v18;
      __n128 v21 = (void **)(a4 + v18 - 24);
      if (*(char *)(a4 + v18 - 1) < 0)
      {
        sub_1DDA2639C(v48, *v21, *(void *)(v20 - 16));
      }
      else
      {
        *(_OWORD *)long long v48 = *(_OWORD *)v21;
        uint64_t v49 = *(void *)(a4 + v18 - 8);
      }
      BOOL v22 = sub_1DDA35F20((uint64_t *)v50, (uint64_t)v48);
      if (SHIBYTE(v49) < 0) {
        operator delete(v48[0]);
      }
      if ((SHIBYTE(v51) & 0x80000000) == 0)
      {
        if (!v22)
        {
          uint64_t v17 = (__n128 *)(a4 + v18);
          goto LABEL_42;
        }
        goto LABEL_36;
      }
      operator delete(v50[0]);
      if (!v22) {
        break;
      }
LABEL_36:
      uint64_t v23 = a4 + v18;
      if (*(char *)(a4 + v18 + 23) < 0) {
        operator delete(*(void **)v23);
      }
      int64_t v12 = (__n128 *)((char *)v12 - 24);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v21;
      *(void *)(v23 + 16) = *(void *)(a4 + v18 - 8);
      *(unsigned char *)(v20 - 1) = 0;
      *(unsigned char *)__n128 v21 = 0;
      v18 -= 24;
      if (!v18)
      {
        uint64_t v17 = (__n128 *)a4;
        goto LABEL_42;
      }
    }
    uint64_t v17 = v12;
LABEL_42:
    int v6 = a2;
LABEL_43:
    if (v17[1].n128_i8[7] < 0) {
      operator delete((void *)v17->n128_u64[0]);
    }
    __n128 result = *v13;
    v17[1].n128_u64[0] = v13[1].n128_u64[0];
    *uint64_t v17 = result;
    v7[2].n128_u8[15] = 0;
    v13->n128_u8[0] = 0;
LABEL_46:
    uint64_t v10 = &v13[1].n128_i8[8];
    v11 += 24;
    int64_t v12 = v16;
    uint64_t v7 = v13;
  }
  while (&v13[1].n128_i8[8] != (__int8 *)v6);
  return result;
}

void sub_1DDA36598(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (v31) {
    sub_1DDA36EA0((unint64_t *)(v32 - 112), v31);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA36684(long long *a1, char *a2, uint64_t a3, int64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v80 = a5;
  if (a5)
  {
    while (v80 > a7 && a4 > a7)
    {
      if (!a4) {
        return;
      }
      uint64_t v13 = 0;
      uint64_t v14 = -a4;
      while (1)
      {
        if (a2[23] < 0)
        {
          sub_1DDA2639C(__dst, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          long long v15 = *(_OWORD *)a2;
          uint64_t v84 = *((void *)a2 + 2);
          *(_OWORD *)__n128 __dst = v15;
        }
        if (*((char *)a1 + v13 + 23) < 0)
        {
          sub_1DDA2639C(__p, *(void **)((char *)a1 + v13), *(void *)((char *)a1 + v13 + 8));
        }
        else
        {
          long long v16 = *(long long *)((char *)a1 + v13);
          uint64_t v82 = *(void *)((char *)a1 + v13 + 16);
          *(_OWORD *)__p = v16;
        }
        BOOL v17 = sub_1DDA35F20((uint64_t *)__dst, (uint64_t)__p);
        if (SHIBYTE(v82) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v84) < 0) {
          operator delete(__dst[0]);
        }
        if (v17) {
          break;
        }
        v13 += 24;
        if (__CFADD__(v14++, 1)) {
          return;
        }
      }
      uint64_t v19 = -v14;
      uint64_t v72 = (long long *)((char *)a1 + v13);
      uint64_t v75 = a6;
      uint64_t v77 = a3;
      uint64_t v78 = a1;
      uint64_t v74 = a7;
      if (-v14 >= v80)
      {
        if (v14 == -1)
        {
          __n128 v68 = (char *)a1 + v13;
          long long v69 = *(long long *)((char *)a1 + v13);
          uint64_t v89 = *(void *)((char *)a1 + v13 + 16);
          long long v88 = v69;
          long long v70 = *(_OWORD *)a2;
          *((void *)v68 + 2) = *((void *)a2 + 2);
          *(_OWORD *)__n128 v68 = v70;
          *(_OWORD *)a2 = v88;
          *((void *)a2 + 2) = v89;
          return;
        }
        if (v14 > 0) {
          uint64_t v19 = 1 - v14;
        }
        uint64_t v29 = v19 >> 1;
        BOOL v30 = (char *)a1 + 24 * (v19 >> 1);
        unint64_t v28 = v29;
        BOOL v22 = &v30[v13];
        uint64_t v31 = a3;
        __n128 v21 = a2;
        if (a2 != (char *)v31)
        {
          unint64_t v32 = 0xAAAAAAAAAAAAAAABLL * ((v77 - (uint64_t)a2) >> 3);
          uint64_t v33 = (uint64_t)v78 + 24 * v29 + v13;
          __n128 v21 = a2;
          do
          {
            __n128 v34 = &v21[24 * (v32 >> 1)];
            if (v34[23] < 0)
            {
              sub_1DDA2639C(&v88, *(void **)v34, *((void *)v34 + 1));
            }
            else
            {
              long long v35 = *(_OWORD *)v34;
              uint64_t v89 = *((void *)v34 + 2);
              long long v88 = v35;
            }
            if (*(char *)(v33 + 23) < 0)
            {
              sub_1DDA2639C(v86, *(void **)v22, *(void *)(v33 + 8));
            }
            else
            {
              long long v36 = *(_OWORD *)v22;
              uint64_t v87 = *((void *)v22 + 2);
              *(_OWORD *)int v86 = v36;
            }
            BOOL v37 = sub_1DDA35F20((uint64_t *)&v88, (uint64_t)v86);
            if (SHIBYTE(v87) < 0) {
              operator delete(v86[0]);
            }
            if (SHIBYTE(v89) < 0) {
              operator delete((void *)v88);
            }
            if (v37) {
              v32 += ~(v32 >> 1);
            }
            else {
              v32 >>= 1;
            }
            if (v37) {
              __n128 v21 = v34 + 24;
            }
          }
          while (v32);
        }
        uint64_t v73 = 0xAAAAAAAAAAAAAAABLL * ((v21 - a2) >> 3);
      }
      else
      {
        if (v80 >= 0) {
          uint64_t v20 = v80;
        }
        else {
          uint64_t v20 = v80 + 1;
        }
        uint64_t v73 = v20 >> 1;
        __n128 v21 = &a2[24 * (v20 >> 1)];
        BOOL v22 = a2;
        if (a2 - (char *)a1 != v13)
        {
          unint64_t v23 = 0xAAAAAAAAAAAAAAABLL * ((a2 - (char *)a1 - v13) >> 3);
          BOOL v22 = (char *)a1 + v13;
          do
          {
            if (v21[23] < 0)
            {
              sub_1DDA2639C(&v88, *(void **)v21, *((void *)v21 + 1));
            }
            else
            {
              long long v24 = *(_OWORD *)v21;
              uint64_t v89 = *((void *)v21 + 2);
              long long v88 = v24;
            }
            uint64_t v25 = &v22[24 * (v23 >> 1)];
            if (v25[23] < 0)
            {
              sub_1DDA2639C(v86, *(void **)v25, *((void *)v25 + 1));
            }
            else
            {
              long long v26 = *(_OWORD *)v25;
              uint64_t v87 = *((void *)v25 + 2);
              *(_OWORD *)int v86 = v26;
            }
            BOOL v27 = sub_1DDA35F20((uint64_t *)&v88, (uint64_t)v86);
            if (SHIBYTE(v87) < 0) {
              operator delete(v86[0]);
            }
            if (SHIBYTE(v89) < 0) {
              operator delete((void *)v88);
            }
            if (v27)
            {
              v23 >>= 1;
            }
            else
            {
              BOOL v22 = v25 + 24;
              v23 += ~(v23 >> 1);
            }
          }
          while (v23);
        }
        unint64_t v28 = 0xAAAAAAAAAAAAAAABLL * ((v22 - (char *)v78 - v13) >> 3);
      }
      if (v22 == a2)
      {
        __n128 v38 = (long long *)v21;
      }
      else if (v21 == a2)
      {
        __n128 v38 = (long long *)v22;
      }
      else
      {
        __n128 v38 = sub_1DDA36F80((long long *)v22, (long long *)a2, (long long *)v21);
      }
      a4 = -(uint64_t)(v28 + v14);
      uint64_t v39 = v80 - v73;
      if ((uint64_t)(v28 + v73) >= (uint64_t)(v80 - (v28 + v73) - v14))
      {
        a6 = v75;
        sub_1DDA36684(v38, v21, v77, -(uint64_t)(v28 + v14), v80 - v73, v75, v74);
        uint64_t v39 = v73;
        a2 = v22;
        a7 = v74;
        a4 = v28;
        a3 = (uint64_t)v38;
        a1 = v72;
      }
      else
      {
        uint64_t v40 = v22;
        a7 = v74;
        a6 = v75;
        sub_1DDA36684((char *)v78 + v13, v40, v38, v28, v73, v75, v74);
        a1 = v38;
        a2 = v21;
        a3 = v77;
      }
      uint64_t v80 = v39;
      if (!v39) {
        return;
      }
    }
    if (a4 <= v80)
    {
      if (a1 == (long long *)a2)
      {
        unint64_t v42 = 0;
      }
      else
      {
        uint64_t v55 = 0;
        uint64_t v56 = (uint64_t)a1;
        unint64_t v42 = 0;
        do
        {
          uint64_t v57 = a6 + v55;
          char v58 = (void *)((char *)a1 + v55);
          long long v59 = *(long long *)((char *)a1 + v55);
          *(void *)(v57 + 16) = *(void *)((char *)a1 + v55 + 16);
          *(_OWORD *)uint64_t v57 = v59;
          v58[1] = 0;
          v58[2] = 0;
          void *v58 = 0;
          ++v42;
          v55 += 24;
        }
        while ((char *)a1 + v55 != a2);
        if (v55)
        {
          uint64_t v60 = (long long *)(a6 + v55);
          uint64_t v61 = a6;
          while (a2 != (char *)a3)
          {
            if (a2[23] < 0)
            {
              sub_1DDA2639C(&v88, *(void **)a2, *((void *)a2 + 1));
            }
            else
            {
              long long v62 = *(_OWORD *)a2;
              uint64_t v89 = *((void *)a2 + 2);
              long long v88 = v62;
            }
            if (*(char *)(v61 + 23) < 0)
            {
              sub_1DDA2639C(v86, *(void **)v61, *(void *)(v61 + 8));
            }
            else
            {
              long long v63 = *(_OWORD *)v61;
              uint64_t v87 = *(void *)(v61 + 16);
              *(_OWORD *)int v86 = v63;
            }
            BOOL v64 = sub_1DDA35F20((uint64_t *)&v88, (uint64_t)v86);
            if (SHIBYTE(v87) < 0) {
              operator delete(v86[0]);
            }
            if (SHIBYTE(v89) < 0) {
              operator delete((void *)v88);
            }
            int v65 = *(char *)(v56 + 23);
            if (v64)
            {
              if (v65 < 0) {
                operator delete(*(void **)v56);
              }
              long long v66 = *(_OWORD *)a2;
              *(void *)(v56 + 16) = *((void *)a2 + 2);
              *(_OWORD *)uint64_t v56 = v66;
              a2[23] = 0;
              *a2 = 0;
              a2 += 24;
            }
            else
            {
              if (v65 < 0) {
                operator delete(*(void **)v56);
              }
              long long v67 = *(_OWORD *)v61;
              *(void *)(v56 + 16) = *(void *)(v61 + 16);
              *(_OWORD *)uint64_t v56 = v67;
              *(unsigned char *)(v61 + 23) = 0;
              *(unsigned char *)uint64_t v61 = 0;
              v61 += 24;
            }
            v56 += 24;
            if (v60 == (long long *)v61) {
              goto LABEL_129;
            }
          }
          sub_1DDA3529C((uint64_t)&v85, (long long *)v61, v60, v56);
        }
      }
    }
    else
    {
      if ((char *)a3 == a2) {
        return;
      }
      uint64_t v79 = a1;
      uint64_t v41 = 0;
      unint64_t v42 = 0;
      do
      {
        uint64_t v43 = a6 + v41;
        int v44 = &a2[v41];
        long long v45 = *(_OWORD *)&a2[v41];
        *(void *)(v43 + 16) = *(void *)&a2[v41 + 16];
        *(_OWORD *)uint64_t v43 = v45;
        *((void *)v44 + 1) = 0;
        *((void *)v44 + 2) = 0;
        *(void *)int v44 = 0;
        ++v42;
        v41 += 24;
      }
      while (&a2[v41] != (char *)a3);
      if (v41)
      {
        uint64_t v46 = a6 + v41;
        uint64_t v47 = a3 - 24;
        uint64_t v76 = a6;
        while (a2 != (char *)v79)
        {
          long long v48 = (char *)(v46 - 1);
          if (*(char *)(v46 - 1) < 0)
          {
            sub_1DDA2639C(&v88, *(void **)(v46 - 24), *(void *)(v46 - 16));
          }
          else
          {
            long long v49 = *(_OWORD *)(v46 - 24);
            uint64_t v89 = *(void *)(v46 - 8);
            long long v88 = v49;
          }
          if (*(a2 - 1) < 0)
          {
            sub_1DDA2639C(v86, *((void **)a2 - 3), *((void *)a2 - 2));
          }
          else
          {
            long long v50 = *(_OWORD *)(a2 - 24);
            uint64_t v87 = *((void *)a2 - 1);
            *(_OWORD *)int v86 = v50;
          }
          BOOL v51 = sub_1DDA35F20((uint64_t *)&v88, (uint64_t)v86);
          if (SHIBYTE(v87) < 0) {
            operator delete(v86[0]);
          }
          if (SHIBYTE(v89) < 0) {
            operator delete((void *)v88);
          }
          BOOL v52 = !v51;
          if (v51) {
            uint64_t v53 = (uint64_t)(a2 - 24);
          }
          else {
            uint64_t v53 = v46 - 24;
          }
          if (v52)
          {
            v46 -= 24;
          }
          else
          {
            long long v48 = a2 - 1;
            a2 -= 24;
          }
          if (*(char *)(v47 + 23) < 0) {
            operator delete(*(void **)v47);
          }
          long long v54 = *(_OWORD *)v53;
          *(void *)(v47 + 16) = *(void *)(v53 + 16);
          *(_OWORD *)uint64_t v47 = v54;
          v47 -= 24;
          *long long v48 = 0;
          *(unsigned char *)uint64_t v53 = 0;
          a3 -= 24;
          a6 = v76;
          if (v46 == v76) {
            goto LABEL_129;
          }
        }
        sub_1DDA36EFC((uint64_t)&v88, v46, a6, a3);
      }
    }
LABEL_129:
    if (a6 && v42)
    {
      for (unint64_t i = 0; i < v42; ++i)
      {
        if (*(char *)(a6 + 23) < 0) {
          operator delete(*(void **)a6);
        }
        a6 += 24;
      }
    }
  }
}

void sub_1DDA36E00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (v26)
  {
    unint64_t v29 = 0;
    uint64_t v30 = v26;
    do
    {
      if (*(char *)(v30 + 23) < 0) {
        operator delete(*(void **)v30);
      }
      ++v29;
      v30 += 24;
    }
    while (v29 < v27);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA36EA0(unint64_t *a1, uint64_t a2)
{
  unint64_t v2 = *a1;
  if (*a1)
  {
    unint64_t v5 = 0;
    do
    {
      if (*(char *)(a2 + 23) < 0)
      {
        operator delete(*(void **)a2);
        unint64_t v2 = *a1;
      }
      ++v5;
      a2 += 24;
    }
    while (v5 < v2);
  }
}

uint64_t sub_1DDA36EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    uint64_t v7 = a4 - 24;
    do
    {
      if (*(char *)(v7 + 23) < 0) {
        operator delete(*(void **)v7);
      }
      long long v8 = *(_OWORD *)(v5 - 24);
      *(void *)(v7 + 16) = *(void *)(v5 - 8);
      *(_OWORD *)uint64_t v7 = v8;
      v7 -= 24;
      *(unsigned char *)(v5 - 1) = 0;
      *(unsigned char *)(v5 - 24) = 0;
      v4 -= 24;
      v5 -= 24;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

long long *sub_1DDA36F80(long long *a1, long long *a2, long long *a3)
{
  uint64_t v3 = *((void *)a1 + 2);
  long long v4 = *a1;
  uint64_t v5 = *((void *)a2 + 2);
  *a1 = *a2;
  *((void *)a1 + 2) = v5;
  *a2 = v4;
  *((void *)a2 + 2) = v3;
  __n128 result = (long long *)((char *)a1 + 24);
  for (unint64_t i = (long long *)((char *)a2 + 24); i != a3; unint64_t i = (long long *)((char *)i + 24))
  {
    if (result == a2) {
      a2 = i;
    }
    uint64_t v8 = *((void *)result + 2);
    long long v9 = *result;
    uint64_t v10 = *((void *)i + 2);
    *__n128 result = *i;
    *((void *)result + 2) = v10;
    *unint64_t i = v9;
    *((void *)i + 2) = v8;
    __n128 result = (long long *)((char *)result + 24);
  }
  if (result != a2)
  {
    uint64_t v11 = result;
    int64_t v12 = a2;
    do
    {
      while (1)
      {
        uint64_t v15 = *((void *)v11 + 2);
        long long v14 = *v11;
        long long v13 = *v12;
        *((void *)v11 + 2) = *((void *)v12 + 2);
        *uint64_t v11 = v13;
        uint64_t v11 = (long long *)((char *)v11 + 24);
        *((void *)v12 + 2) = v15;
        *int64_t v12 = v14;
        int64_t v12 = (long long *)((char *)v12 + 24);
        if (v12 == a3) {
          break;
        }
        if (v11 == a2) {
          a2 = v12;
        }
      }
      int64_t v12 = a2;
    }
    while (v11 != a2);
  }
  return result;
}

void sub_1DDA370E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA37340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1DDA377A4(_Unwind_Exception *a1)
{
}

void sub_1DDA377B0(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_1DDA16678(a1);
  }
  _Unwind_Resume(a1);
}

void sub_1DDA377CC(uint64_t a1)
{
  unint64_t v2 = sub_1DDA83E7C();
  uint64_t v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RAWVignetteTable", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

double sub_1DDA37854(uint64_t a1, int a2)
{
  if (a2) {
    return 0.0;
  }
  return result;
}

void sub_1DDA37994(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA37AEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA37C5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA37F94(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {

    v2[2](v2);
    __cxa_begin_catch(exception_object);
    uint64_t v7 = sub_1DDBBA998();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1DDBF47F4();
    }

    __cxa_end_catch();
    JUMPOUT(0x1DDA37DA4);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA38068(uint64_t a1)
{
  unint64_t v2 = sub_1DDA83E7C();
  uint64_t v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RAWLensCorrectionVignetteFilter", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

double sub_1DDA380F0(uint64_t a1, int a2)
{
  if (a2 == 1) {
    return 0.0;
  }
  return result;
}

void sub_1DDA38234(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA38378(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA3889C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  if (a2)
  {

    v14[2](v14);
    __cxa_begin_catch(exception_object);
    __n128 v21 = sub_1DDBBA998();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_1DDBF486C();
    }

    __cxa_end_catch();
    JUMPOUT(0x1DDA387E8);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA389A0(uint64_t a1)
{
  unint64_t v2 = sub_1DDA83E7C();
  uint64_t v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RAWLensCorrectionLateralCAFilter", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

double sub_1DDA38A28(double a1, double a2, double a3, double a4, double a5, double a6, float a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  float v11 = a1;
  float v12 = a2;
  float v13 = a5;
  float v14 = a6;
  float v15 = v13 * 0.5;
  float v16 = a3;
  float v17 = a4;
  float v18 = (float)((float)(v11 - v16) / v13) * (float)(a10 - 1);
  float v19 = (float)(1.0 - (float)((float)(v12 - v17) / v14)) * (float)(a11 - 1);
  float v20 = floorf(v18);
  double v21 = (double)(a10 - 1);
  int v22 = (int)fmin(fmax(v20, 0.0), v21);
  float v23 = floorf(v19);
  double v24 = (double)(a11 - 1);
  double v25 = fmin(fmax(v23, 0.0), v24);
  int v26 = (int)fmin(fmax((float)(v20 + 1.0), 0.0), v21);
  float v27 = v14 * 0.5;
  float v28 = v18 - (float)v22;
  float v29 = v19 - (float)(int)v25;
  int v30 = (int)v25 * a10;
  uint64_t v31 = (float *)(a9 + 16 * (v30 + v22));
  int v32 = (int)fmin(fmax((float)(v23 + 1.0), 0.0), v24) * a10;
  uint64_t v33 = a9 + 16 * (v32 + v22);
  LODWORD(v21) = *(_DWORD *)v33;
  LODWORD(v25) = *(_DWORD *)(v33 + 4);
  LODWORD(v24) = *(_DWORD *)(v33 + 8);
  float v34 = *(float *)(v33 + 12);
  long long v35 = (float *)(a9 + 16 * (v30 + v26));
  float v36 = *v35;
  float v37 = v35[1];
  float v38 = v35[2];
  float v39 = v35[3];
  uint64_t v40 = (float *)(a9 + 16 * (v32 + v26));
  float v41 = (float)((float)(1.0 - v28) * *v31) + (float)(v28 * v36);
  *(float *)&double v21 = (float)(1.0 - v28) * *(float *)&v21;
  float v42 = v28 * *v40;
  float v43 = (float)(1.0 - v29) * (float)((float)((float)(1.0 - v28) * v31[1]) + (float)(v28 * v37));
  float v44 = (float)(1.0 - v29) * (float)((float)((float)(1.0 - v28) * v31[2]) + (float)(v28 * v38));
  float v45 = (float)(1.0 - v29) * (float)((float)((float)(1.0 - v28) * v31[3]) + (float)(v28 * v39));
  *(float *)&double v25 = v29 * (float)((float)((float)(1.0 - v28) * *(float *)&v25) + (float)(v28 * v40[1]));
  *(float *)&double v24 = v29 * (float)((float)((float)(1.0 - v28) * *(float *)&v24) + (float)(v28 * v40[2]));
  float v46 = v29 * (float)((float)((float)(1.0 - v28) * v34) + (float)(v28 * v40[3]));
  float v47 = (float)(v15
              * (float)((float)((float)((float)(1.0 - v29) * v41) + (float)(v29 * (float)(*(float *)&v21 + v42))) + 1.0))
      + v16;
  float v48 = (float)(v27 * (float)((float)(v43 + *(float *)&v25) + 1.0)) + v17;
  float v49 = (float)(v15 * (float)((float)(v44 + *(float *)&v24) + 1.0)) + v16;
  float v50 = (float)(v27 * (float)((float)(v45 + v46) + 1.0)) + v17;
  float v51 = (float)(1.0 - a7) * v11;
  float v52 = (float)(1.0 - a7) * v12;
  float v53 = v52 + (float)(v48 * a7);
  float v54 = v51 + (float)(v49 * a7);
  float v55 = v52 + (float)(v50 * a7);
  v62.origin.double x = v11;
  v62.origin.double y = v12;
  v64.origin.double x = (float)(v51 + (float)(v47 * a7));
  v64.origin.double y = v53;
  v62.size.double width = 0.0;
  v62.size.double height = 0.0;
  v64.size.double width = 0.0;
  v64.size.double height = 0.0;
  CGRect v63 = CGRectUnion(v62, v64);
  uint64_t v58 = 0;
  uint64_t v59 = 0;

  double v56 = v54;
  double v57 = v55;
  *(void *)&double result = (unint64_t)CGRectUnion(v63, *(CGRect *)(&v58 - 2));
  return result;
}

double sub_1DDA38C8C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  if ((int)a2 > 0) {
    return a6;
  }
  objc_msgSend_bytes(*(void **)(*(void *)(a1 + 32) + 96), a2, a3, a4, a5);
  objc_msgSend_intValue(*(void **)(*(void *)(a1 + 32) + 104), v11, v12, v13, v14);
  objc_msgSend_intValue(*(void **)(*(void *)(a1 + 32) + 112), v15, v16, v17, v18);
  double v9 = *MEMORY[0x1E4F1DB20];
  CGFloat v19 = *(double *)(MEMORY[0x1E4F1DB20] + 8);
  CGFloat v21 = *(double *)(MEMORY[0x1E4F1DB20] + 16);
  CGFloat v20 = *(double *)(MEMORY[0x1E4F1DB20] + 24);
  float v22 = 0.0;
  double v23 = 0.0;
  do
  {
    float v51 = v22;
    v62.origin.CGFloat x = (*(double (**)(double, double, double, double, double, double, float))(*(void *)(a1 + 40) + 16))(a6 + a8 * v23, a7, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v62.origin.CGFloat y = v24;
    v62.size.CGFloat width = v25;
    v62.size.CGFloat height = v26;
    v54.origin.CGFloat x = v9;
    v54.origin.CGFloat y = v19;
    v54.size.CGFloat width = v21;
    v54.size.CGFloat height = v20;
    CGRect v55 = CGRectUnion(v54, v62);
    CGFloat x = v55.origin.x;
    CGFloat y = v55.origin.y;
    CGFloat width = v55.size.width;
    CGFloat height = v55.size.height;
    v63.origin.CGFloat x = (*(double (**)(double, double, double, double, double, double, float))(*(void *)(a1 + 40) + 16))(a6 + a8 * (1.0 - v23), a7 + a9, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v63.origin.CGFloat y = v31;
    v63.size.CGFloat width = v32;
    v63.size.CGFloat height = v33;
    v56.origin.CGFloat x = x;
    v56.origin.CGFloat y = y;
    v56.size.CGFloat width = width;
    v56.size.CGFloat height = height;
    CGRect v57 = CGRectUnion(v56, v63);
    CGFloat v34 = v57.origin.x;
    CGFloat v35 = v57.origin.y;
    CGFloat v36 = v57.size.width;
    CGFloat v37 = v57.size.height;
    v64.origin.CGFloat x = (*(double (**)(double, double, double, double, double, double, float))(*(void *)(a1 + 40) + 16))(a6, a7 + a9 * (1.0 - v23), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v64.origin.CGFloat y = v38;
    v64.size.CGFloat width = v39;
    v64.size.CGFloat height = v40;
    v58.origin.CGFloat x = v34;
    v58.origin.CGFloat y = v35;
    v58.size.CGFloat width = v36;
    v58.size.CGFloat height = v37;
    CGRect v59 = CGRectUnion(v58, v64);
    CGFloat v41 = v59.origin.x;
    CGFloat v42 = v59.origin.y;
    CGFloat v43 = v59.size.width;
    CGFloat v44 = v59.size.height;
    v65.origin.CGFloat x = (*(double (**)(double, double, double, double, double, double, float))(*(void *)(a1 + 40) + 16))(a6 + a8, a7 + a9 * v23, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v65.origin.CGFloat y = v45;
    v65.size.CGFloat width = v46;
    v65.size.CGFloat height = v47;
    v60.origin.CGFloat x = v41;
    v60.origin.CGFloat y = v42;
    v60.size.CGFloat width = v43;
    v60.size.CGFloat height = v44;
    CGRect v61 = CGRectUnion(v60, v65);
    double v9 = v61.origin.x;
    CGFloat v19 = v61.origin.y;
    CGFloat v21 = v61.size.width;
    CGFloat v20 = v61.size.height;
    float v22 = v51 + 0.125;
    double v23 = (float)(v51 + 0.125);
  }
  while (v23 < 0.99999);
  return v9;
}

void sub_1DDA390A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA391FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA393F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA39898(_Unwind_Exception *a1)
{
}

void sub_1DDA398A4(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_1DDA16678(a1);
  }
  _Unwind_Resume(a1);
}

void sub_1DDA398B4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1DDA39804);
}

void sub_1DDA398CC(uint64_t a1)
{
  unint64_t v2 = sub_1DDA83E7C();
  uint64_t v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RAWLensCorrectionDistortionFilter", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

double sub_1DDA39954(double a1, double a2, double a3, double a4, double a5, double a6, float a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  float v11 = a1;
  float v12 = a2;
  float v13 = a5;
  float v14 = a6;
  float v15 = a3;
  float v16 = a4;
  float v17 = (float)((float)(v11 - v15) / v13) * (float)(a10 - 1);
  float v18 = floorf(v17);
  double v19 = (double)(a10 - 1);
  int v20 = (int)fmin(fmax(v18, 0.0), v19);
  float v21 = (float)(1.0 - (float)((float)(v12 - v16) / v14)) * (float)(a11 - 1);
  float v22 = floorf(v21);
  double v23 = (double)(a11 - 1);
  double v24 = fmin(fmax(v22, 0.0), v23);
  int v25 = (int)fmin(fmax((float)(v18 + 1.0), 0.0), v19);
  float v26 = v17 - (float)v20;
  int v27 = (int)fmin(fmax((float)(v22 + 1.0), 0.0), v23) * a10;
  return (float)((float)((float)(1.0 - a7) * v11)
               + (float)((float)((float)((float)(v13 * 0.5)
                                       * (float)((float)((float)((float)(1.0 - (float)(v21 - (float)(int)v24))
                                                               * (float)((float)((float)(1.0 - v26)
                                                                               * *(float *)(a9
                                                                                          + 8 * ((int)v24 * a10 + v20)))
                                                                       + (float)(v26
                                                                               * *(float *)(a9
                                                                                          + 8 * ((int)v24 * a10 + v25)))))
                                                       + (float)((float)(v21 - (float)(int)v24)
                                                               * (float)((float)((float)(1.0 - v26)
                                                                               * *(float *)(a9 + 8 * (v27 + v20)))
                                                                       + (float)(v26 * *(float *)(a9 + 8 * (v27 + v25))))))
                                               + 1.0))
                               + v15)
                       * a7));
}

double sub_1DDA39AE4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  if ((int)a2 > 0) {
    return a6;
  }
  objc_msgSend_bytes(*(void **)(*(void *)(a1 + 32) + 96), a2, a3, a4, a5);
  objc_msgSend_intValue(*(void **)(*(void *)(a1 + 32) + 104), v11, v12, v13, v14);
  objc_msgSend_intValue(*(void **)(*(void *)(a1 + 32) + 112), v15, v16, v17, v18);
  double v9 = *MEMORY[0x1E4F1DB20];
  CGFloat v19 = *(double *)(MEMORY[0x1E4F1DB20] + 8);
  CGFloat v21 = *(double *)(MEMORY[0x1E4F1DB20] + 16);
  CGFloat v20 = *(double *)(MEMORY[0x1E4F1DB20] + 24);
  float v22 = 0.0;
  double v23 = 0.0;
  do
  {
    float v51 = v22;
    v62.origin.CGFloat x = (*(double (**)(double, double, double, double, double, double, float))(*(void *)(a1 + 40) + 16))(a6 + a8 * v23, a7, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v62.origin.CGFloat y = v24;
    v62.size.CGFloat width = v25;
    v62.size.CGFloat height = v26;
    v54.origin.CGFloat x = v9;
    v54.origin.CGFloat y = v19;
    v54.size.CGFloat width = v21;
    v54.size.CGFloat height = v20;
    CGRect v55 = CGRectUnion(v54, v62);
    CGFloat x = v55.origin.x;
    CGFloat y = v55.origin.y;
    CGFloat width = v55.size.width;
    CGFloat height = v55.size.height;
    v63.origin.CGFloat x = (*(double (**)(double, double, double, double, double, double, float))(*(void *)(a1 + 40) + 16))(a6 + a8 * (1.0 - v23), a7 + a9, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v63.origin.CGFloat y = v31;
    v63.size.CGFloat width = v32;
    v63.size.CGFloat height = v33;
    v56.origin.CGFloat x = x;
    v56.origin.CGFloat y = y;
    v56.size.CGFloat width = width;
    v56.size.CGFloat height = height;
    CGRect v57 = CGRectUnion(v56, v63);
    CGFloat v34 = v57.origin.x;
    CGFloat v35 = v57.origin.y;
    CGFloat v36 = v57.size.width;
    CGFloat v37 = v57.size.height;
    v64.origin.CGFloat x = (*(double (**)(double, double, double, double, double, double, float))(*(void *)(a1 + 40) + 16))(a6, a7 + a9 * (1.0 - v23), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v64.origin.CGFloat y = v38;
    v64.size.CGFloat width = v39;
    v64.size.CGFloat height = v40;
    v58.origin.CGFloat x = v34;
    v58.origin.CGFloat y = v35;
    v58.size.CGFloat width = v36;
    v58.size.CGFloat height = v37;
    CGRect v59 = CGRectUnion(v58, v64);
    CGFloat v41 = v59.origin.x;
    CGFloat v42 = v59.origin.y;
    CGFloat v43 = v59.size.width;
    CGFloat v44 = v59.size.height;
    v65.origin.CGFloat x = (*(double (**)(double, double, double, double, double, double, float))(*(void *)(a1 + 40) + 16))(a6 + a8, a7 + a9 * v23, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(float *)(a1 + 80));
    v65.origin.CGFloat y = v45;
    v65.size.CGFloat width = v46;
    v65.size.CGFloat height = v47;
    v60.origin.CGFloat x = v41;
    v60.origin.CGFloat y = v42;
    v60.size.CGFloat width = v43;
    v60.size.CGFloat height = v44;
    CGRect v61 = CGRectUnion(v60, v65);
    double v9 = v61.origin.x;
    CGFloat v19 = v61.origin.y;
    CGFloat v21 = v61.size.width;
    CGFloat v20 = v61.size.height;
    float v22 = v51 + 0.125;
    double v23 = (float)(v51 + 0.125);
  }
  while (v23 < 0.99999);
  return v9;
}

void sub_1DDA39E7C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_1DDA39F84(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1DDA3A014(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA3A14C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DDA3AA28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12)
{
  __cxa_guard_abort(&qword_1EAB8B110);

  _Unwind_Resume(a1);
}

void sub_1DDA3AC98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1DDA3B188(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA3B278(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v9 = objc_msgSend_numberWithUnsignedInteger_(NSNumber, v6, a3, v7, v8);
    uint64_t v14 = objc_msgSend_stringValue(v9, v10, v11, v12, v13);
    objc_msgSend_dumpMemoryInfoKey_indent_(v5, v15, (uint64_t)v14, *(void *)(a1 + 40) + 1, v16);
    float v28 = (char *)v5;
  }
  else
  {
    NSClassFromString(&cfstr_Nsblock.isa);
    char isKindOfClass = objc_opt_isKindOfClass();
    CGFloat v20 = (const char *)v5;
    if (isKindOfClass)
    {
      uint64_t v21 = (*((void (**)(id, id))v5 + 2))(v5, v5);

      CGFloat v20 = (const char *)v21;
    }
    float v28 = (char *)v20;
    float v22 = *(void **)(a1 + 32);
    uint64_t v9 = objc_msgSend_numberWithUnsignedInteger_(NSNumber, v20, a3, v18, v19);
    uint64_t v14 = objc_msgSend_stringValue(v9, v23, v24, v25, v26);
    objc_msgSend_dumpObjCInfoKey_value_indent_(v22, v27, (uint64_t)v14, (uint64_t)v28, *(void *)(a1 + 40) + 1);
  }
}

void sub_1DDA3B3D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DDA3B424(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    objc_msgSend_dumpMemoryInfoKey_indent_(v5, v6, (uint64_t)v10, *(void *)(a1 + 40) + 1, v7);
  }

  NSClassFromString(&cfstr_Nsblock.isa);
  if (objc_opt_isKindOfClass())
  {
    uint64_t v9 = v5[2](v5);

    id v5 = (void (**)(void))v9;
  }
  objc_msgSend_dumpObjCInfoKey_value_indent_(*(void **)(a1 + 32), v8, (uint64_t)v10, (uint64_t)v5, *(void *)(a1 + 40) + 1);
}

void sub_1DDA3B508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DDA3BB2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA3BCAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend_compare_(a2, (const char *)a2, a3, a4, a5);
}

uint64_t sub_1DDA3BCB4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend_compare_(a2, (const char *)a2, a3, a4, a5);
}

void sub_1DDA3BE28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA3BF08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA3C000(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA3C0DC(uint64_t a1, uint64_t *a2, void *a3, void *a4)
{
  v140[2] = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v11 = a4;
  uint64_t v13 = *(unsigned int *)(a1 + 4);
  if (v13)
  {
    switch(*(_WORD *)(a1 + 2))
    {
      case 1:
        switch((int)v13)
        {
          case 1:
            uint64_t v14 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, *(unsigned __int8 *)(a1 + 8), v13, v10);
            goto LABEL_50;
          case 2:
            CGFloat v43 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, *(unsigned __int8 *)(a1 + 8), v13, v10);
            v137[0] = v43;
            CGFloat v47 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v44, *(unsigned __int8 *)(a1 + 9), v45, v46);
            v137[1] = v47;
            float v15 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v48, (uint64_t)v137, 2, v49);

            break;
          case 3:
            float v50 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, *(unsigned __int8 *)(a1 + 8), v13, v10);
            v136[0] = v50;
            CGRect v54 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v51, *(unsigned __int8 *)(a1 + 9), v52, v53);
            v136[1] = v54;
            CGRect v58 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v55, *(unsigned __int8 *)(a1 + 10), v56, v57);
            v136[2] = v58;
            float v15 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v59, (uint64_t)v136, 3, v60);

            break;
          case 4:
            CGRect v61 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, *(unsigned __int8 *)(a1 + 8), v13, v10);
            v135[0] = v61;
            CGRect v65 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v62, *(unsigned __int8 *)(a1 + 9), v63, v64);
            v135[1] = v65;
            long long v69 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v66, *(unsigned __int8 *)(a1 + 10), v67, v68);
            v135[2] = v69;
            uint64_t v73 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v70, *(unsigned __int8 *)(a1 + 11), v71, v72);
            v135[3] = v73;
            float v15 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v74, (uint64_t)v135, 4, v75);

            break;
          default:
            int v102 = sub_1DDA3CE7C(a1);
            uint64_t v14 = sub_1DDA3CF10(a1, a2, v102, *(_DWORD *)(a1 + 4), v7, v11);
            goto LABEL_50;
        }
        break;
      case 2:
        if (v13 <= 4)
        {
          id v19 = [NSString alloc];
          uint64_t v14 = objc_msgSend_initWithBytes_length_encoding_(v19, v20, a1 + 8, (*(_DWORD *)(a1 + 4) - 1), 1);
          goto LABEL_50;
        }
        uint64_t v126 = 0;
        uint64_t v127 = &v126;
        uint64_t v128 = 0x3812000000;
        uint64_t v129 = sub_1DDA3E330;
        uint64_t v130 = nullsub_2;
        uint64_t v131 = "";
        int v132 = sub_1DDA3CE7C(a1);
        uint64_t v122 = 0;
        uint64_t v123 = &v122;
        uint64_t v124 = 0x2020000000;
        int v125 = *(_DWORD *)(a1 + 4);
        uint64_t v114 = 0;
        uint64_t v115 = &v114;
        uint64_t v116 = 0x4012000000;
        uint64_t v117 = sub_1DDA3E340;
        v118 = sub_1DDA3E350;
        uint64_t v119 = "";
        CGFloat v34 = (std::__shared_weak_count *)a2[1];
        uint64_t v120 = *a2;
        uint64_t v121 = v34;
        if (v34) {
          atomic_fetch_add_explicit(&v34->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v113[0] = MEMORY[0x1E4F143A8];
        v113[1] = 3221225472;
        v113[2] = sub_1DDA3E360;
        v113[3] = &unk_1E6D04CC8;
        v113[4] = &v114;
        v113[5] = &v126;
        v113[6] = &v122;
        uint64_t v31 = MEMORY[0x1E01C46E0](v113);
        goto LABEL_38;
      case 3:
        if (v13 == 2)
        {
          CGFloat v35 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v8, *(unsigned __int16 *)(a1 + 8), v13, v10);
          v133[0] = v35;
          CGFloat v39 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v36, *(unsigned __int16 *)(a1 + 10), v37, v38);
          v133[1] = v39;
          float v15 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v40, (uint64_t)v133, 2, v41);

          break;
        }
        if (v13 == 1)
        {
LABEL_29:
          uint64_t v14 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v8, *(unsigned __int16 *)(a1 + 8), v13, v10);
        }
        else
        {
          int v16 = sub_1DDA3CE7C(a1);
          uint64_t v14 = sub_1DDA3D368(a1, a2, v16, *(_DWORD *)(a1 + 4), v7, v11);
        }
        goto LABEL_50;
      case 4:
        if (v13 == 1) {
          goto LABEL_14;
        }
        int v17 = sub_1DDA3CE7C(a1);
        uint64_t v14 = sub_1DDA3D7C0(a1, a2, v17, *(_DWORD *)(a1 + 4), v7, v11);
        goto LABEL_50;
      case 5:
        int v21 = sub_1DDA3CE7C(a1);
        uint64_t v14 = sub_1DDA3DCCC(a1, a2, v21, *(_DWORD *)(a1 + 4), v7, v11);
        goto LABEL_50;
      case 6:
        switch((int)v13)
        {
          case 1:
            uint64_t v14 = objc_msgSend_numberWithChar_(NSNumber, v8, *(char *)(a1 + 8), v13, v10);
            goto LABEL_50;
          case 2:
            uint64_t v105 = objc_msgSend_numberWithChar_(NSNumber, v8, *(char *)(a1 + 8), v13, v10);
            v140[0] = v105;
            uint64_t v109 = objc_msgSend_numberWithChar_(NSNumber, v106, *(char *)(a1 + 9), v107, v108);
            v140[1] = v109;
            float v15 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v110, (uint64_t)v140, 2, v111);

            break;
          case 3:
            uint64_t v76 = objc_msgSend_numberWithChar_(NSNumber, v8, *(char *)(a1 + 8), v13, v10);
            v139[0] = v76;
            uint64_t v80 = objc_msgSend_numberWithChar_(NSNumber, v77, *(char *)(a1 + 9), v78, v79);
            v139[1] = v80;
            uint64_t v84 = objc_msgSend_numberWithChar_(NSNumber, v81, *(char *)(a1 + 10), v82, v83);
            v139[2] = v84;
            float v15 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v85, (uint64_t)v139, 3, v86);

            break;
          case 4:
            uint64_t v87 = objc_msgSend_numberWithChar_(NSNumber, v8, *(char *)(a1 + 8), v13, v10);
            v138[0] = v87;
            uint64_t v91 = objc_msgSend_numberWithChar_(NSNumber, v88, *(char *)(a1 + 9), v89, v90);
            v138[1] = v91;
            uint64_t v95 = objc_msgSend_numberWithChar_(NSNumber, v92, *(char *)(a1 + 10), v93, v94);
            v138[2] = v95;
            uint64_t v99 = objc_msgSend_numberWithChar_(NSNumber, v96, *(char *)(a1 + 11), v97, v98);
            v138[3] = v99;
            float v15 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v100, (uint64_t)v138, 4, v101);

            break;
          default:
            int v103 = sub_1DDA3CE7C(a1);
            uint64_t v14 = sub_1DDA3CC50(a1, a2, v103, *(_DWORD *)(a1 + 4), v7, v11);
            goto LABEL_50;
        }
        break;
      case 7:
        if (v13 <= 4)
        {
          uint64_t v14 = objc_msgSend_dataWithBytes_length_(MEMORY[0x1E4F1C9B8], v8, a1 + 8, v13, v10);
          goto LABEL_50;
        }
        uint64_t v126 = 0;
        uint64_t v127 = &v126;
        uint64_t v128 = 0x3812000000;
        uint64_t v129 = sub_1DDA3E330;
        uint64_t v130 = nullsub_2;
        uint64_t v131 = "";
        int v132 = sub_1DDA3CE7C(a1);
        uint64_t v122 = 0;
        uint64_t v123 = &v122;
        uint64_t v124 = 0x2020000000;
        int v125 = *(_DWORD *)(a1 + 4);
        uint64_t v114 = 0;
        uint64_t v115 = &v114;
        uint64_t v116 = 0x4012000000;
        uint64_t v117 = sub_1DDA3E340;
        v118 = sub_1DDA3E350;
        uint64_t v119 = "";
        int v30 = (std::__shared_weak_count *)a2[1];
        uint64_t v120 = *a2;
        uint64_t v121 = v30;
        if (v30) {
          atomic_fetch_add_explicit(&v30->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v112[0] = MEMORY[0x1E4F143A8];
        v112[1] = 3221225472;
        v112[2] = sub_1DDA3E4D8;
        v112[3] = &unk_1E6D04CF0;
        v112[4] = &v114;
        v112[5] = &v126;
        v112[6] = &v122;
        uint64_t v31 = MEMORY[0x1E01C46E0](v112);
LABEL_38:
        float v15 = (void *)v31;
        _Block_object_dispose(&v114, 8);
        if (v121) {
          sub_1DDA18310(v121);
        }
        _Block_object_dispose(&v122, 8);
        _Block_object_dispose(&v126, 8);
        break;
      case 8:
        if (v13 == 1) {
          goto LABEL_29;
        }
        if (v13 == 2)
        {
          float v22 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v8, *(unsigned __int16 *)(a1 + 8), v13, v10);
          v134[0] = v22;
          uint64_t v26 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v23, *(unsigned __int16 *)(a1 + 10), v24, v25);
          v134[1] = v26;
          float v15 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v27, (uint64_t)v134, 2, v28);
        }
        else
        {
          int v42 = sub_1DDA3CE7C(a1);
          uint64_t v14 = sub_1DDA3D13C(a1, a2, v42, *(_DWORD *)(a1 + 4), v7, v11);
LABEL_50:
          float v15 = (void *)v14;
        }
        break;
      case 9:
        if (v13 == 1) {
          goto LABEL_14;
        }
        int v32 = sub_1DDA3CE7C(a1);
        uint64_t v14 = sub_1DDA3D594(a1, a2, v32, *(_DWORD *)(a1 + 4), v7, v11);
        goto LABEL_50;
      case 0xA:
        int v29 = sub_1DDA3CE7C(a1);
        uint64_t v14 = sub_1DDA3D9EC(a1, a2, v29, *(_DWORD *)(a1 + 4), v7, v11);
        goto LABEL_50;
      case 0xB:
        if (v13 == 1)
        {
          LODWORD(v12) = *(_DWORD *)(a1 + 8);
          objc_msgSend_numberWithFloat_(NSNumber, v8, v9, v13, v10, v12);
        }
        else
        {
          int v33 = sub_1DDA3CE7C(a1);
          sub_1DDA3DFAC(a1, a2, v33, *(_DWORD *)(a1 + 4), v7, v11);
        uint64_t v14 = };
        goto LABEL_50;
      case 0xC:
        int v18 = sub_1DDA3CE7C(a1);
        uint64_t v14 = sub_1DDA3E1D8(a1, a2, v18, *(_DWORD *)(a1 + 4));
        goto LABEL_50;
      case 0xD:
LABEL_14:
        uint64_t v14 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v8, *(unsigned int *)(a1 + 8), v13, v10);
        goto LABEL_50;
      default:
        float v15 = &unk_1F39AC188;
        break;
    }
  }
  else
  {
    float v15 = 0;
  }

  return v15;
}

void sub_1DDA3CAD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA3CC50(uint64_t a1, void *a2, int a3, int a4, void *a5, void *a6)
{
  id v11 = a5;
  id v12 = a6;
  v24[0] = 0;
  v24[1] = v24;
  v24[2] = 0x4012000000;
  uint64_t v24[3] = sub_1DDA3E340;
  v24[4] = sub_1DDA3E350;
  v24[5] = "";
  uint64_t v13 = (std::__shared_weak_count *)a2[1];
  v24[6] = *a2;
  uint64_t v25 = v13;
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  v22[0] = 0;
  v22[1] = v22;
  v22[2] = 0x3812000000;
  v22[3] = sub_1DDA3E330;
  v22[4] = nullsub_2;
  v22[5] = "";
  int v23 = a3;
  v20[0] = 0;
  v20[1] = v20;
  v20[2] = 0x2020000000;
  int v21 = a4;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  double v19[2] = sub_1DDA49DC8;
  v19[3] = &unk_1E6D04D60;
  v19[4] = v24;
  v19[5] = v22;
  v19[6] = v20;
  v19[7] = a1;
  uint64_t v14 = (void *)MEMORY[0x1E01C46E0](v19);
  float v15 = [RAWTIFFIFDTable alloc];
  int v17 = objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v15, v16, (uint64_t)v14, (uint64_t)v11, (uint64_t)v12);

  _Block_object_dispose(v20, 8);
  _Block_object_dispose(v22, 8);
  _Block_object_dispose(v24, 8);
  if (v25) {
    sub_1DDA18310(v25);
  }

  return v17;
}

void sub_1DDA3CE34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  float v15 = *(std::__shared_weak_count **)(v13 - 72);
  if (v15) {
    sub_1DDA18310(v15);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1DDA3CE7C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 4);
  uint64_t v3 = sub_1DDA3E82C(*(unsigned __int16 *)(a1 + 2));
  if ((unint64_t)(v3 * v2) <= 4 && (v2 != 1 || v3 != 4))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return *(unsigned int *)(a1 + 8);
}

void sub_1DDA3CEFC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

id sub_1DDA3CF10(uint64_t a1, void *a2, int a3, int a4, void *a5, void *a6)
{
  id v11 = a5;
  id v12 = a6;
  v24[0] = 0;
  v24[1] = v24;
  v24[2] = 0x4012000000;
  uint64_t v24[3] = sub_1DDA3E340;
  v24[4] = sub_1DDA3E350;
  v24[5] = "";
  uint64_t v13 = (std::__shared_weak_count *)a2[1];
  v24[6] = *a2;
  uint64_t v25 = v13;
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  v22[0] = 0;
  v22[1] = v22;
  v22[2] = 0x3812000000;
  v22[3] = sub_1DDA3E330;
  v22[4] = nullsub_2;
  v22[5] = "";
  int v23 = a3;
  v20[0] = 0;
  v20[1] = v20;
  v20[2] = 0x2020000000;
  int v21 = a4;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  double v19[2] = sub_1DDA4A008;
  v19[3] = &unk_1E6D04D60;
  v19[4] = v24;
  v19[5] = v22;
  v19[6] = v20;
  v19[7] = a1;
  uint64_t v14 = (void *)MEMORY[0x1E01C46E0](v19);
  float v15 = [RAWTIFFIFDTable alloc];
  int v17 = objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v15, v16, (uint64_t)v14, (uint64_t)v11, (uint64_t)v12);

  _Block_object_dispose(v20, 8);
  _Block_object_dispose(v22, 8);
  _Block_object_dispose(v24, 8);
  if (v25) {
    sub_1DDA18310(v25);
  }

  return v17;
}

void sub_1DDA3D0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  float v15 = *(std::__shared_weak_count **)(v13 - 72);
  if (v15) {
    sub_1DDA18310(v15);
  }

  _Unwind_Resume(a1);
}

id sub_1DDA3D13C(uint64_t a1, void *a2, int a3, int a4, void *a5, void *a6)
{
  id v11 = a5;
  id v12 = a6;
  v24[0] = 0;
  v24[1] = v24;
  v24[2] = 0x4012000000;
  uint64_t v24[3] = sub_1DDA3E340;
  v24[4] = sub_1DDA3E350;
  v24[5] = "";
  uint64_t v13 = (std::__shared_weak_count *)a2[1];
  v24[6] = *a2;
  uint64_t v25 = v13;
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  v22[0] = 0;
  v22[1] = v22;
  v22[2] = 0x3812000000;
  v22[3] = sub_1DDA3E330;
  v22[4] = nullsub_2;
  v22[5] = "";
  int v23 = a3;
  v20[0] = 0;
  v20[1] = v20;
  v20[2] = 0x2020000000;
  int v21 = a4;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  double v19[2] = sub_1DDA4A188;
  v19[3] = &unk_1E6D04D60;
  v19[4] = v24;
  v19[5] = v22;
  v19[6] = v20;
  v19[7] = a1;
  uint64_t v14 = (void *)MEMORY[0x1E01C46E0](v19);
  float v15 = [RAWTIFFIFDTable alloc];
  int v17 = objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v15, v16, (uint64_t)v14, (uint64_t)v11, (uint64_t)v12);

  _Block_object_dispose(v20, 8);
  _Block_object_dispose(v22, 8);
  _Block_object_dispose(v24, 8);
  if (v25) {
    sub_1DDA18310(v25);
  }

  return v17;
}

void sub_1DDA3D320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  float v15 = *(std::__shared_weak_count **)(v13 - 72);
  if (v15) {
    sub_1DDA18310(v15);
  }

  _Unwind_Resume(a1);
}

id sub_1DDA3D368(uint64_t a1, void *a2, int a3, int a4, void *a5, void *a6)
{
  id v11 = a5;
  id v12 = a6;
  v24[0] = 0;
  v24[1] = v24;
  v24[2] = 0x4012000000;
  uint64_t v24[3] = sub_1DDA3E340;
  v24[4] = sub_1DDA3E350;
  v24[5] = "";
  uint64_t v13 = (std::__shared_weak_count *)a2[1];
  v24[6] = *a2;
  uint64_t v25 = v13;
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  v22[0] = 0;
  v22[1] = v22;
  v22[2] = 0x3812000000;
  v22[3] = sub_1DDA3E330;
  v22[4] = nullsub_2;
  v22[5] = "";
  int v23 = a3;
  v20[0] = 0;
  v20[1] = v20;
  v20[2] = 0x2020000000;
  int v21 = a4;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  double v19[2] = sub_1DDA4A418;
  v19[3] = &unk_1E6D04D60;
  v19[4] = v24;
  v19[5] = v22;
  v19[6] = v20;
  v19[7] = a1;
  uint64_t v14 = (void *)MEMORY[0x1E01C46E0](v19);
  float v15 = [RAWTIFFIFDTable alloc];
  int v17 = objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v15, v16, (uint64_t)v14, (uint64_t)v11, (uint64_t)v12);

  _Block_object_dispose(v20, 8);
  _Block_object_dispose(v22, 8);
  _Block_object_dispose(v24, 8);
  if (v25) {
    sub_1DDA18310(v25);
  }

  return v17;
}

void sub_1DDA3D54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  float v15 = *(std::__shared_weak_count **)(v13 - 72);
  if (v15) {
    sub_1DDA18310(v15);
  }

  _Unwind_Resume(a1);
}

id sub_1DDA3D594(uint64_t a1, void *a2, int a3, int a4, void *a5, void *a6)
{
  id v11 = a5;
  id v12 = a6;
  v24[0] = 0;
  v24[1] = v24;
  v24[2] = 0x4012000000;
  uint64_t v24[3] = sub_1DDA3E340;
  v24[4] = sub_1DDA3E350;
  v24[5] = "";
  uint64_t v13 = (std::__shared_weak_count *)a2[1];
  v24[6] = *a2;
  uint64_t v25 = v13;
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  v22[0] = 0;
  v22[1] = v22;
  v22[2] = 0x3812000000;
  v22[3] = sub_1DDA3E330;
  v22[4] = nullsub_2;
  v22[5] = "";
  int v23 = a3;
  v20[0] = 0;
  v20[1] = v20;
  v20[2] = 0x2020000000;
  int v21 = a4;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  double v19[2] = sub_1DDA4A630;
  v19[3] = &unk_1E6D04D60;
  v19[4] = v24;
  v19[5] = v22;
  v19[6] = v20;
  v19[7] = a1;
  uint64_t v14 = (void *)MEMORY[0x1E01C46E0](v19);
  float v15 = [RAWTIFFIFDTable alloc];
  int v17 = objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v15, v16, (uint64_t)v14, (uint64_t)v11, (uint64_t)v12);

  _Block_object_dispose(v20, 8);
  _Block_object_dispose(v22, 8);
  _Block_object_dispose(v24, 8);
  if (v25) {
    sub_1DDA18310(v25);
  }

  return v17;
}

void sub_1DDA3D778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  float v15 = *(std::__shared_weak_count **)(v13 - 72);
  if (v15) {
    sub_1DDA18310(v15);
  }

  _Unwind_Resume(a1);
}

id sub_1DDA3D7C0(uint64_t a1, void *a2, int a3, int a4, void *a5, void *a6)
{
  id v11 = a5;
  id v12 = a6;
  v24[0] = 0;
  v24[1] = v24;
  v24[2] = 0x4012000000;
  uint64_t v24[3] = sub_1DDA3E340;
  v24[4] = sub_1DDA3E350;
  v24[5] = "";
  uint64_t v13 = (std::__shared_weak_count *)a2[1];
  v24[6] = *a2;
  uint64_t v25 = v13;
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  v22[0] = 0;
  v22[1] = v22;
  v22[2] = 0x3812000000;
  v22[3] = sub_1DDA3E330;
  v22[4] = nullsub_2;
  v22[5] = "";
  int v23 = a3;
  v20[0] = 0;
  v20[1] = v20;
  v20[2] = 0x2020000000;
  int v21 = a4;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  double v19[2] = sub_1DDA4A8BC;
  v19[3] = &unk_1E6D04D60;
  v19[4] = v24;
  v19[5] = v22;
  v19[6] = v20;
  v19[7] = a1;
  uint64_t v14 = (void *)MEMORY[0x1E01C46E0](v19);
  float v15 = [RAWTIFFIFDTable alloc];
  int v17 = objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v15, v16, (uint64_t)v14, (uint64_t)v11, (uint64_t)v12);

  _Block_object_dispose(v20, 8);
  _Block_object_dispose(v22, 8);
  _Block_object_dispose(v24, 8);
  if (v25) {
    sub_1DDA18310(v25);
  }

  return v17;
}

void sub_1DDA3D9A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  float v15 = *(std::__shared_weak_count **)(v13 - 72);
  if (v15) {
    sub_1DDA18310(v15);
  }

  _Unwind_Resume(a1);
}

id sub_1DDA3D9EC(uint64_t a1, uint64_t *a2, int a3, int a4, void *a5, void *a6)
{
  id v11 = a5;
  id v12 = a6;
  if (a4 == 1)
  {
    uint64_t v13 = sub_1DDA4A658(a1, a2, a3, 2u);
    uint64_t v14 = NSNumber;
    uint64_t v18 = objc_msgSend_objectAtIndexedSubscript_(v13, v15, 0, v16, v17);
    objc_msgSend_doubleValue(v18, v19, v20, v21, v22);
    double v24 = v23;
    uint64_t v28 = objc_msgSend_objectAtIndexedSubscript_(v13, v25, 1, v26, v27);
    objc_msgSend_doubleValue(v28, v29, v30, v31, v32);
    uint64_t v38 = objc_msgSend_numberWithDouble_(v14, v34, v35, v36, v37, v24 / v33);
  }
  else
  {
    v49[0] = 0;
    v49[1] = v49;
    v49[2] = 0x4012000000;
    v49[3] = sub_1DDA3E340;
    v49[4] = sub_1DDA3E350;
    v49[5] = "";
    CGFloat v39 = (std::__shared_weak_count *)a2[1];
    v49[6] = *a2;
    float v50 = v39;
    if (v39) {
      atomic_fetch_add_explicit(&v39->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    v47[0] = 0;
    v47[1] = v47;
    v47[2] = 0x3812000000;
    v47[3] = sub_1DDA3E330;
    v47[4] = nullsub_2;
    v47[5] = "";
    int v48 = a3;
    v45[0] = 0;
    v45[1] = v45;
    v45[2] = 0x2020000000;
    int v46 = a4;
    v44[0] = MEMORY[0x1E4F143A8];
    v44[1] = 3221225472;
    v44[2] = sub_1DDA4AAD0;
    v44[3] = &unk_1E6D04D88;
    v44[4] = v49;
    v44[5] = v47;
    v44[6] = v45;
    v44[7] = a1;
    CGFloat v40 = (void *)MEMORY[0x1E01C46E0](v44);
    uint64_t v41 = [RAWTIFFIFDTable alloc];
    uint64_t v38 = objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v41, v42, (uint64_t)v40, (uint64_t)v11, (uint64_t)v12);

    _Block_object_dispose(v45, 8);
    _Block_object_dispose(v47, 8);
    _Block_object_dispose(v49, 8);
    if (v50) {
      sub_1DDA18310(v50);
    }
  }

  return v38;
}

void sub_1DDA3DC58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA3DC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v10 - 144), 8);
  id v11 = *(std::__shared_weak_count **)(v10 - 88);
  if (v11) {
    sub_1DDA18310(v11);
  }
  JUMPOUT(0x1DDA3DC80);
}

id sub_1DDA3DCCC(uint64_t a1, uint64_t *a2, int a3, int a4, void *a5, void *a6)
{
  id v11 = a5;
  id v12 = a6;
  if (a4 == 1)
  {
    uint64_t v13 = sub_1DDA4A8E4(a1, a2, a3, 2u);
    uint64_t v14 = NSNumber;
    uint64_t v18 = objc_msgSend_objectAtIndexedSubscript_(v13, v15, 0, v16, v17);
    objc_msgSend_doubleValue(v18, v19, v20, v21, v22);
    double v24 = v23;
    uint64_t v28 = objc_msgSend_objectAtIndexedSubscript_(v13, v25, 1, v26, v27);
    objc_msgSend_doubleValue(v28, v29, v30, v31, v32);
    uint64_t v38 = objc_msgSend_numberWithDouble_(v14, v34, v35, v36, v37, v24 / v33);
  }
  else
  {
    v49[0] = 0;
    v49[1] = v49;
    v49[2] = 0x4012000000;
    v49[3] = sub_1DDA3E340;
    v49[4] = sub_1DDA3E350;
    v49[5] = "";
    CGFloat v39 = (std::__shared_weak_count *)a2[1];
    v49[6] = *a2;
    float v50 = v39;
    if (v39) {
      atomic_fetch_add_explicit(&v39->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    v47[0] = 0;
    v47[1] = v47;
    v47[2] = 0x3812000000;
    v47[3] = sub_1DDA3E330;
    v47[4] = nullsub_2;
    v47[5] = "";
    int v48 = a3;
    v45[0] = 0;
    v45[1] = v45;
    v45[2] = 0x2020000000;
    int v46 = a4;
    v44[0] = MEMORY[0x1E4F143A8];
    v44[1] = 3221225472;
    v44[2] = sub_1DDA4AC5C;
    v44[3] = &unk_1E6D04D88;
    v44[4] = v49;
    v44[5] = v47;
    v44[6] = v45;
    v44[7] = a1;
    CGFloat v40 = (void *)MEMORY[0x1E01C46E0](v44);
    uint64_t v41 = [RAWTIFFIFDTable alloc];
    uint64_t v38 = objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v41, v42, (uint64_t)v40, (uint64_t)v11, (uint64_t)v12);

    _Block_object_dispose(v45, 8);
    _Block_object_dispose(v47, 8);
    _Block_object_dispose(v49, 8);
    if (v50) {
      sub_1DDA18310(v50);
    }
  }

  return v38;
}

void sub_1DDA3DF38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA3DF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v10 - 144), 8);
  id v11 = *(std::__shared_weak_count **)(v10 - 88);
  if (v11) {
    sub_1DDA18310(v11);
  }
  JUMPOUT(0x1DDA3DF60);
}

id sub_1DDA3DFAC(uint64_t a1, void *a2, int a3, int a4, void *a5, void *a6)
{
  id v11 = a5;
  id v12 = a6;
  v24[0] = 0;
  v24[1] = v24;
  v24[2] = 0x4012000000;
  uint64_t v24[3] = sub_1DDA3E340;
  v24[4] = sub_1DDA3E350;
  v24[5] = "";
  uint64_t v13 = (std::__shared_weak_count *)a2[1];
  v24[6] = *a2;
  uint64_t v25 = v13;
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  v22[0] = 0;
  v22[1] = v22;
  v22[2] = 0x3812000000;
  v22[3] = sub_1DDA3E330;
  v22[4] = nullsub_2;
  v22[5] = "";
  int v23 = a3;
  v20[0] = 0;
  v20[1] = v20;
  v20[2] = 0x2020000000;
  int v21 = a4;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  double v19[2] = sub_1DDA4ADE8;
  v19[3] = &unk_1E6D04D60;
  v19[4] = v24;
  v19[5] = v22;
  v19[6] = v20;
  v19[7] = a1;
  uint64_t v14 = (void *)MEMORY[0x1E01C46E0](v19);
  uint64_t v15 = [RAWTIFFIFDTable alloc];
  uint64_t v17 = objc_msgSend_initWithValueBlock_forwardNamespace_reverseNamespace_(v15, v16, (uint64_t)v14, (uint64_t)v11, (uint64_t)v12);

  _Block_object_dispose(v20, 8);
  _Block_object_dispose(v22, 8);
  _Block_object_dispose(v24, 8);
  if (v25) {
    sub_1DDA18310(v25);
  }

  return v17;
}

void sub_1DDA3E190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  uint64_t v15 = *(std::__shared_weak_count **)(v13 - 72);
  if (v15) {
    sub_1DDA18310(v15);
  }

  _Unwind_Resume(a1);
}

id sub_1DDA3E1D8(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  int v24 = a3;
  sub_1DDA1B4D8((int *)&__p, &v24);
  sub_1DDA1A94C(v23, a2, (uint64_t)&__p, 0);
  int v6 = sub_1DDA49F48(a4);
  uint64_t v7 = *a2;
  unsigned int v20 = a4;
  sub_1DDA4B074(v7, &v20, (uint64_t *)&__p);
  id v12 = (double *)__p;
  uint64_t v13 = v22;
  if (__p != v22)
  {
    do
    {
      uint64_t v14 = objc_msgSend_numberWithDouble_(NSNumber, v8, v9, v10, v11, *v12);
      objc_msgSend_addObject_(v6, v15, (uint64_t)v14, v16, v17);

      ++v12;
    }
    while (v12 != v13);
  }
  uint64_t v18 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1C978], v8, (uint64_t)v6, v10, v11);
  if (__p)
  {
    uint64_t v22 = (double *)__p;
    operator delete(__p);
  }

  sub_1DDA1AA18(v23);

  return v18;
}

void sub_1DDA3E2E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }

  sub_1DDA1AA18(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA3E330(uint64_t result, uint64_t a2)
{
  *(_DWORD *)(result + 48) = *(_DWORD *)(a2 + 48);
  return result;
}

__n128 sub_1DDA3E340(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[3] = result;
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  return result;
}

void sub_1DDA3E350(uint64_t a1)
{
  unint64_t v1 = *(std::__shared_weak_count **)(a1 + 56);
  if (v1) {
    sub_1DDA18310(v1);
  }
}

id sub_1DDA3E360(void *a1)
{
  uint64_t v2 = (uint64_t *)(*(void *)(a1[4] + 8) + 48);
  sub_1DDA1B4D8((int *)__p, (int *)(*(void *)(a1[5] + 8) + 48));
  sub_1DDA1A94C(v10, v2, (uint64_t)__p, 0);
  uint64_t v3 = *(void *)(*(void *)(a1[4] + 8) + 48);
  unsigned int v8 = *(_DWORD *)(*(void *)(a1[6] + 8) + 24);
  sub_1DDA3E468(v3, &v8, (uint64_t *)__p);
  id v4 = [NSString alloc];
  int v6 = objc_msgSend_initWithBytes_length_encoding_(v4, v5, (uint64_t)__p[0], (*(_DWORD *)(*(void *)(a1[6] + 8) + 24) - 1), 1);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  sub_1DDA1AA18(v10);

  return v6;
}

void sub_1DDA3E438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14)
{
}

uint64_t sub_1DDA3E468@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  size_t v5 = *a2;
  sub_1DDA4B108(a3, v5);
  sub_1DDA19DD0(a1, *a3, v5);
  return sub_1DDA19C94(a1);
}

void sub_1DDA3E4BC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA3E4D8(void *a1)
{
  uint64_t v2 = (uint64_t *)(*(void *)(a1[4] + 8) + 48);
  sub_1DDA1B4D8((int *)&__p, (int *)(*(void *)(a1[5] + 8) + 48));
  sub_1DDA1A94C(v11, v2, (uint64_t)&__p, 0);
  uint64_t v3 = *(void *)(*(void *)(a1[4] + 8) + 48);
  unsigned int v8 = *(_DWORD *)(*(void *)(a1[6] + 8) + 24);
  sub_1DDA3E5D0(v3, &v8, (uint64_t *)&__p);
  int v6 = objc_msgSend_dataWithBytes_length_(MEMORY[0x1E4F1C9B8], v4, (uint64_t)__p, v10 - (unsigned char *)__p, v5);
  if (__p)
  {
    uint64_t v10 = __p;
    operator delete(__p);
  }
  sub_1DDA1AA18(v11);

  return v6;
}

void sub_1DDA3E5A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  sub_1DDA1AA18(&a14);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA3E5D0@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  size_t v5 = *a2;
  sub_1DDA1AB9C(a3, v5);
  sub_1DDA19DD0(a1, *a3, v5);
  return sub_1DDA19C94(a1);
}

void sub_1DDA3E624(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA3E640(uint64_t a1, double *a2, uint64_t *a3, double a4)
{
  uint64_t result = 0;
  switch(*(_WORD *)(a1 + 2))
  {
    case 1:
      LOBYTE(a4) = *(unsigned char *)(a1 + 8);
      goto LABEL_5;
    case 3:
      LOWORD(a4) = *(_WORD *)(a1 + 8);
      goto LABEL_5;
    case 4:
      LODWORD(a4) = *(_DWORD *)(a1 + 8);
LABEL_5:
      double v8 = (double)*(unint64_t *)&a4;
      goto LABEL_11;
    case 5:
      int v12 = sub_1DDA3CE7C(a1);
      sub_1DDA1B4D8(&v13, &v12);
      sub_1DDA1A94C(v14, a3, (uint64_t)&v13, 0);
      *a2 = (double)sub_1DDA19EC8(*a3);
      double v9 = (double)sub_1DDA19EC8(*a3);
      goto LABEL_13;
    case 6:
      int v10 = *(char *)(a1 + 8);
      goto LABEL_10;
    case 8:
      int v10 = *(__int16 *)(a1 + 8);
      goto LABEL_10;
    case 9:
      int v10 = *(_DWORD *)(a1 + 8);
LABEL_10:
      double v8 = (double)v10;
LABEL_11:
      *a2 = v8;
      goto LABEL_16;
    case 0xA:
      int v12 = sub_1DDA3CE7C(a1);
      sub_1DDA1B4D8(&v13, &v12);
      sub_1DDA1A94C(v14, a3, (uint64_t)&v13, 0);
      *a2 = (double)(int)sub_1DDA19EC8(*a3);
      double v9 = (double)(int)sub_1DDA19EC8(*a3);
LABEL_13:
      double v11 = *a2 / v9;
      goto LABEL_15;
    case 0xB:
      int v12 = sub_1DDA3CE7C(a1);
      sub_1DDA1B4D8(&v13, &v12);
      sub_1DDA1A94C(v14, a3, (uint64_t)&v13, 0);
      double v11 = sub_1DDA1A014(*a3);
LABEL_15:
      *a2 = v11;
      sub_1DDA1AA18(v14);
LABEL_16:
      uint64_t result = 1;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1DDA3E7C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1DDA1AA18((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA3E82C(int a1)
{
  int v1 = a1 - 1;
  uint64_t result = 1;
  switch(v1)
  {
    case 0:
    case 1:
    case 5:
    case 6:
      return result;
    case 2:
    case 7:
      uint64_t result = 2;
      break;
    case 3:
    case 8:
    case 10:
    case 12:
      uint64_t result = 4;
      break;
    case 4:
    case 9:
    case 11:
      uint64_t result = 8;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_1DDA3E8C0(uint64_t a1, _WORD *a2)
{
  uint64_t result = 0;
  switch(*(_WORD *)(a1 + 2))
  {
    case 1:
      LOWORD(a1) = *(unsigned __int8 *)(a1 + 8);
      goto LABEL_6;
    case 3:
    case 8:
      LOWORD(a1) = *(_WORD *)(a1 + 8);
      goto LABEL_6;
    case 4:
    case 9:
      LODWORD(a1) = *(_DWORD *)(a1 + 8);
      goto LABEL_6;
    case 6:
      LOWORD(a1) = *(char *)(a1 + 8);
LABEL_6:
      *a2 = a1;
      uint64_t result = 1;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *sub_1DDA3E944@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void **a3@<X8>)
{
  uint64_t v6 = *(unsigned int *)(a1 + 4);
  if ((unint64_t)(sub_1DDA3E82C(*(unsigned __int16 *)(a1 + 2)) * v6) > 4)
  {
    int v35 = sub_1DDA3CE7C(a1);
    sub_1DDA1B4D8((int *)&__p, &v35);
    sub_1DDA1A94C(v36, a2, (uint64_t)&__p, 0);
    __p = 0;
    double v33 = 0;
    CGFloat v34 = 0;
    unint64_t v9 = *(unsigned int *)(a1 + 4);
    if (v9 >> 4 >= 0x271)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    sub_1DDA3ECC0(&__p, v9);
    if (*(_DWORD *)(a1 + 4))
    {
      int v10 = 0;
      while (2)
      {
        switch(*(_WORD *)(a1 + 2))
        {
          case 1:
            unsigned int v11 = sub_1DDA19DA0(*a2);
            goto LABEL_14;
          case 3:
            unsigned int v11 = sub_1DDA19E68(*a2);
            goto LABEL_14;
          case 4:
            unsigned int v11 = sub_1DDA19EC8(*a2);
LABEL_14:
            double v17 = (double)v11;
            goto LABEL_20;
          case 5:
            unsigned int v13 = sub_1DDA19EC8(*a2);
            unsigned int v14 = sub_1DDA19EC8(*a2);
            double v15 = (double)v13;
            double v16 = (double)v14;
            goto LABEL_16;
          case 8:
            int v12 = sub_1DDA19FB0(*a2);
            goto LABEL_18;
          case 9:
            int v12 = sub_1DDA19EC8(*a2);
LABEL_18:
            double v17 = (double)v12;
            goto LABEL_20;
          case 0xA:
            int v18 = sub_1DDA19EC8(*a2);
            int v19 = sub_1DDA19EC8(*a2);
            double v15 = (double)v18;
            double v16 = (double)v19;
LABEL_16:
            double v17 = v15 / v16;
            goto LABEL_20;
          case 0xB:
            double v17 = sub_1DDA1A014(*a2);
            goto LABEL_20;
          case 0xC:
            double v17 = sub_1DDA1A030(*a2);
LABEL_20:
            unsigned int v20 = v33;
            if (v33 >= (double *)v34)
            {
              uint64_t v22 = (double *)__p;
              uint64_t v23 = ((char *)v33 - (unsigned char *)__p) >> 3;
              unint64_t v24 = v23 + 1;
              if ((unint64_t)(v23 + 1) >> 61) {
                sub_1DDA17F78();
              }
              uint64_t v25 = v34 - (unsigned char *)__p;
              if ((v34 - (unsigned char *)__p) >> 2 > v24) {
                unint64_t v24 = v25 >> 2;
              }
              if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v26 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v26 = v24;
              }
              if (v26)
              {
                uint64_t v27 = (char *)sub_1DDA1814C((uint64_t)&v34, v26);
                uint64_t v22 = (double *)__p;
                unsigned int v20 = v33;
              }
              else
              {
                uint64_t v27 = 0;
              }
              uint64_t v28 = (double *)&v27[8 * v23];
              *uint64_t v28 = v17;
              int v21 = v28 + 1;
              while (v20 != v22)
              {
                uint64_t v29 = *((void *)v20-- - 1);
                *((void *)v28-- - 1) = v29;
              }
              __p = v28;
              double v33 = v21;
              CGFloat v34 = &v27[8 * v26];
              if (v22) {
                operator delete(v22);
              }
            }
            else
            {
              *double v33 = v17;
              int v21 = v20 + 1;
            }
            double v33 = v21;
            if (++v10 >= *(_DWORD *)(a1 + 4)) {
              goto LABEL_40;
            }
            continue;
          default:
            *a3 = 0;
            a3[1] = 0;
            a3[2] = 0;
            if (__p)
            {
              double v33 = (double *)__p;
              operator delete(__p);
            }
            return sub_1DDA1AA18(v36);
        }
      }
    }
    int v21 = v33;
LABEL_40:
    uint64_t v30 = (double *)v34;
    *a3 = __p;
    a3[1] = v21;
    a3[2] = v30;
    return sub_1DDA1AA18(v36);
  }
  else
  {
    v36[0] = 0;
    uint64_t result = (uint64_t *)sub_1DDA3E640(a1, (double *)v36, a2, v7);
    if (result)
    {
      return sub_1DDA25B2C(a3, 1uLL, v36);
    }
    else
    {
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
    }
  }
  return result;
}

void sub_1DDA3EC50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  sub_1DDA1AA18(&a14);
  _Unwind_Resume(a1);
}

void sub_1DDA3ECC0(void **a1, unint64_t a2)
{
  id v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 3)
  {
    if (a2 >> 61) {
      sub_1DDA17F78();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)sub_1DDA1814C(v3, a2);
    double v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    unint64_t v9 = &v6[8 * v8];
    int v10 = (char *)*a1;
    unsigned int v11 = (char *)a1[1];
    int v12 = v7;
    if (v11 != *a1)
    {
      int v12 = v7;
      do
      {
        uint64_t v13 = *((void *)v11 - 1);
        v11 -= 8;
        *((void *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_1DDA3ED68(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = *(unsigned int *)(a1 + 4);
  if (sub_1DDA3E82C(*(unsigned __int16 *)(a1 + 2)) * v6 > 4)
  {
    int v42 = sub_1DDA3CE7C(a1);
    sub_1DDA1B4D8((int *)&__p, &v42);
    sub_1DDA1A94C(v43, a2, (uint64_t)&__p, 0);
    __p = 0;
    CGFloat v40 = 0;
    uint64_t v41 = 0;
    unint64_t v22 = *(unsigned int *)(a1 + 4);
    if (v22 >> 4 >= 0x271)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    sub_1DDA3F190(&__p, v22);
    if (*(_DWORD *)(a1 + 4))
    {
      int v23 = 0;
      while (2)
      {
        switch(*(_WORD *)(a1 + 2))
        {
          case 1:
            __int16 v24 = sub_1DDA19DA0(*a2);
            goto LABEL_33;
          case 3:
            __int16 v24 = sub_1DDA19E68(*a2);
            goto LABEL_33;
          case 4:
          case 9:
            __int16 v24 = sub_1DDA19EC8(*a2);
            goto LABEL_33;
          case 5:
          case 0xA:
            unsigned __int16 v25 = sub_1DDA19EC8(*a2);
            __int16 v26 = v25 / (unsigned __int16)sub_1DDA19EC8(*a2);
            goto LABEL_34;
          case 8:
            __int16 v24 = sub_1DDA19FB0(*a2);
LABEL_33:
            __int16 v26 = v24;
LABEL_34:
            uint64_t v27 = v40;
            if (v40 >= v41)
            {
              uint64_t v29 = (char *)__p;
              uint64_t v30 = v40 - (unsigned char *)__p;
              if (v40 - (unsigned char *)__p <= -3) {
                sub_1DDA17F78();
              }
              uint64_t v31 = v30 >> 1;
              if (v41 - (unsigned char *)__p <= (unint64_t)((v30 >> 1) + 1)) {
                uint64_t v32 = v31 + 1;
              }
              else {
                uint64_t v32 = v41 - (unsigned char *)__p;
              }
              if ((unint64_t)(v41 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFFELL) {
                uint64_t v33 = 0x7FFFFFFFFFFFFFFFLL;
              }
              else {
                uint64_t v33 = v32;
              }
              if (v33)
              {
                CGFloat v34 = (char *)sub_1DDA1AD0C((uint64_t)&v41, v33);
                uint64_t v29 = (char *)__p;
                uint64_t v27 = v40;
              }
              else
              {
                CGFloat v34 = 0;
              }
              int v35 = &v34[2 * v31];
              *(_WORD *)int v35 = v26;
              uint64_t v28 = v35 + 2;
              while (v27 != v29)
              {
                __int16 v36 = *((_WORD *)v27 - 1);
                v27 -= 2;
                *((_WORD *)v35 - 1) = v36;
                v35 -= 2;
              }
              __p = v35;
              CGFloat v40 = v28;
              uint64_t v41 = &v34[2 * v33];
              if (v29) {
                operator delete(v29);
              }
            }
            else
            {
              *(_WORD *)CGFloat v40 = v26;
              uint64_t v28 = v27 + 2;
            }
            CGFloat v40 = v28;
            if (++v23 >= *(_DWORD *)(a1 + 4)) {
              goto LABEL_54;
            }
            continue;
          default:
            *(void *)a3 = 0;
            *(void *)(a3 + 8) = 0;
            *(void *)(a3 + 16) = 0;
            if (__p)
            {
              CGFloat v40 = (char *)__p;
              operator delete(__p);
            }
            goto LABEL_55;
        }
      }
    }
    uint64_t v28 = v40;
LABEL_54:
    uint64_t v37 = v41;
    *(void *)a3 = __p;
    *(void *)(a3 + 8) = v28;
    *(void *)(a3 + 16) = v37;
LABEL_55:
    sub_1DDA1AA18(v43);
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    if (v6)
    {
      sub_1DDA3F190((void **)a3, v6);
      if (*(_DWORD *)(a1 + 4))
      {
        unsigned int v7 = 0;
        do
        {
          LODWORD(v43[0]) = v7;
          __int16 v8 = sub_1DDA3F234(a1, (unsigned int *)v43);
          __int16 v9 = v8;
          unsigned int v11 = *(_WORD **)(a3 + 8);
          unint64_t v10 = *(void *)(a3 + 16);
          if ((unint64_t)v11 >= v10)
          {
            uint64_t v13 = *(_WORD **)a3;
            uint64_t v14 = (uint64_t)v11 - *(void *)a3;
            if (v14 <= -3) {
              sub_1DDA17F78();
            }
            uint64_t v15 = v14 >> 1;
            unint64_t v16 = v10 - (void)v13;
            if (v16 <= (v14 >> 1) + 1) {
              unint64_t v17 = v15 + 1;
            }
            else {
              unint64_t v17 = v16;
            }
            if (v16 >= 0x7FFFFFFFFFFFFFFELL) {
              uint64_t v18 = 0x7FFFFFFFFFFFFFFFLL;
            }
            else {
              uint64_t v18 = v17;
            }
            if (v18)
            {
              int v19 = (char *)sub_1DDA1AD0C(a3 + 16, v18);
              uint64_t v13 = *(_WORD **)a3;
              unsigned int v11 = *(_WORD **)(a3 + 8);
            }
            else
            {
              int v19 = 0;
            }
            unsigned int v20 = &v19[2 * v15];
            *(_WORD *)unsigned int v20 = v9;
            int v12 = v20 + 2;
            while (v11 != v13)
            {
              __int16 v21 = *--v11;
              *((_WORD *)v20 - 1) = v21;
              v20 -= 2;
            }
            *(void *)a3 = v20;
            *(void *)(a3 + 8) = v12;
            *(void *)(a3 + 16) = &v19[2 * v18];
            if (v13) {
              operator delete(v13);
            }
          }
          else
          {
            *unsigned int v11 = v8;
            int v12 = v11 + 1;
          }
          *(void *)(a3 + 8) = v12;
          ++v7;
        }
        while (v7 < *(_DWORD *)(a1 + 4));
      }
    }
  }
}

void sub_1DDA3F108(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  unint64_t v16 = *(void **)v14;
  if (*(void *)v14)
  {
    *(void *)(v14 + 8) = v16;
    operator delete(v16);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA3F190(void **a1, unint64_t a2)
{
  id v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 1)
  {
    if ((a2 & 0x8000000000000000) != 0) {
      sub_1DDA17F78();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    unint64_t v6 = (char *)sub_1DDA1AD0C(v3, a2);
    unsigned int v7 = &v6[v5 & 0xFFFFFFFFFFFFFFFELL];
    __int16 v9 = &v6[2 * v8];
    unint64_t v10 = (char *)*a1;
    unsigned int v11 = (char *)a1[1];
    int v12 = v7;
    if (v11 != *a1)
    {
      int v12 = v7;
      do
      {
        __int16 v13 = *((_WORD *)v11 - 1);
        v11 -= 2;
        *((_WORD *)v12 - 1) = v13;
        v12 -= 2;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

uint64_t sub_1DDA3F234(uint64_t a1, unsigned int *a2)
{
  uint64_t v2 = *a2;
  if (v2 >= 2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return *(unsigned __int16 *)(a1 + 2 * v2 + 8);
}

void sub_1DDA3F29C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

double sub_1DDA3F2B0(uint64_t a1, void *a2, char a3, void *a4, void *a5)
{
  uint64_t v5 = sub_1DDA26868(a1, a2, a3, a4, a5);
  *(void *)uint64_t v5 = &unk_1F395CBE0;
  *(void *)(v5 + 528) = 0;
  *(void *)(v5 + 520) = 0;
  *(void *)(v5 + 504) = 0;
  *(void *)(v5 + 512) = v5 + 520;
  *(void *)(v5 + 552) = 0;
  *(void *)(v5 + 544) = 0;
  *(void *)(v5 + 536) = v5 + 544;
  *(void *)(v5 + 576) = 0;
  *(void *)(v5 + 568) = 0;
  *(void *)(v5 + 560) = v5 + 568;
  *(void *)(v5 + 600) = 0;
  *(void *)(v5 + 592) = 0;
  *(void *)(v5 + 584) = v5 + 592;
  *(void *)(v5 + 624) = 0;
  *(void *)(v5 + 616) = 0;
  *(void *)(v5 + 608) = v5 + 616;
  *(void *)(v5 + 640) = 0;
  *(void *)(v5 + 648) = 0;
  *(void *)(v5 + 632) = v5 + 640;
  *(void *)(v5 + 672) = 0;
  *(void *)(v5 + 664) = 0;
  *(void *)(v5 + 656) = v5 + 664;
  *(void *)(v5 + 688) = 0;
  *(void *)(v5 + 696) = 0;
  *(void *)(v5 + 680) = v5 + 688;
  *(void *)(v5 + 712) = 0;
  *(void *)(v5 + 720) = 0;
  *(void *)(v5 + 704) = v5 + 712;
  *(void *)(v5 + 736) = 0;
  *(void *)(v5 + 744) = 0;
  *(void *)(v5 + 728) = v5 + 736;
  *(void *)(v5 + 760) = 0;
  *(void *)(v5 + 768) = 0;
  *(void *)(v5 + 752) = v5 + 760;
  *(void *)(v5 + 792) = 0;
  *(void *)(v5 + 784) = 0;
  *(void *)(v5 + 776) = v5 + 784;
  *(void *)(v5 + 816) = 0;
  *(void *)(v5 + 808) = 0;
  *(void *)(v5 + 800) = v5 + 808;
  *(void *)(v5 + 832) = 0;
  *(void *)(v5 + 840) = 0;
  *(void *)(v5 + 824) = v5 + 832;
  *(void *)(v5 + 856) = 0;
  *(void *)(v5 + 864) = 0;
  *(void *)(v5 + 848) = v5 + 856;
  *(void *)(v5 + 880) = 0;
  *(void *)(v5 + 888) = 0;
  *(void *)(v5 + 872) = v5 + 880;
  *(void *)(v5 + 904) = 0;
  *(void *)(v5 + 912) = 0;
  *(void *)(v5 + 896) = v5 + 904;
  *(void *)(v5 + 936) = 0;
  *(void *)(v5 + 928) = 0;
  *(void *)(v5 + 920) = v5 + 928;
  *(void *)(v5 + 960) = 0;
  *(void *)(v5 + 952) = 0;
  *(void *)(v5 + 944) = v5 + 952;
  *(void *)(v5 + 984) = 0;
  *(void *)(v5 + 976) = 0;
  *(void *)(v5 + 968) = v5 + 976;
  *(void *)(v5 + 1008) = 0;
  *(void *)(v5 + 1000) = 0;
  *(void *)(v5 + 992) = v5 + 1000;
  *(_WORD *)(v5 + 1016) = 0;
  *(_DWORD *)(v5 + 1020) = 0;
  double result = 0.0;
  *(void *)(v5 + 1024) = 0;
  *(void *)(v5 + 1048) = 0;
  *(void *)(v5 + 1040) = 0;
  *(void *)(v5 + 1032) = v5 + 1040;
  *(void *)(v5 + 1072) = 0;
  *(void *)(v5 + 1064) = 0;
  *(void *)(v5 + 1056) = v5 + 1064;
  *(void *)(v5 + 1096) = 0;
  *(void *)(v5 + 1088) = 0;
  *(void *)(v5 + 1080) = v5 + 1088;
  *(void *)(v5 + 1120) = 0;
  *(void *)(v5 + 1112) = 0;
  *(void *)(v5 + 1104) = v5 + 1112;
  *(void *)(v5 + 1144) = 0;
  *(void *)(v5 + 1136) = 0;
  *(void *)(v5 + 1128) = v5 + 1136;
  *(void *)(v5 + 1168) = 0;
  *(void *)(v5 + 1160) = 0;
  *(void *)(v5 + 1152) = v5 + 1160;
  *(_DWORD *)(v5 + 1176) = 10;
  return result;
}

void sub_1DDA3F4AC(void **a1)
{
  uint64_t v2 = sub_1DDA83C7C();
  uint64_t v3 = v2;
  if ((unint64_t)a1 + 1 >= 2 && os_signpost_enabled(v2))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_BEGIN, (os_signpost_id_t)a1, "CTIFFImageParser", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 3221225472;
  v22[2] = sub_1DDA3FA0C;
  v22[3] = &unk_1E6D04A58;
  v22[4] = a1;
  id v4 = (void (**)(void))MEMORY[0x1E01C46E0](v22);
  if (((*((uint64_t (**)(void **))*a1 + 7))(a1) & 1) == 0)
  {
    uint64_t v5 = (*((void (**)(void **))*a1 + 50))(a1);
    if (!v5)
    {
LABEL_29:

      goto LABEL_30;
    }
    sub_1DDA27D28((uint64_t)a1, buf);
    uint64_t v6 = *(void *)(*(void *)buf + 40);
    if (v20) {
      sub_1DDA18310(v20);
    }
    if (v6)
    {
      sub_1DDA27D28((uint64_t)a1, &v15);
      sub_1DDA49310((uint64_t *)buf, (uint64_t *)&v15);
      if (v16) {
        sub_1DDA18310(v16);
      }
      sub_1DDA27D28((uint64_t)a1, &v15);
      sub_1DDBA97FC(v15[5], v5, a1[14]);
      if (v16) {
        sub_1DDA18310(v16);
      }
      sub_1DDA1AA18((uint64_t *)buf);
      goto LABEL_29;
    }
    sub_1DDA27D28((uint64_t)a1, &v15);
    (*((void (**)(uint8_t *__return_ptr))*v15 + 1))(buf);
    if (v16) {
      sub_1DDA18310(v16);
    }
    if (v21 < 0)
    {
      if (v20)
      {
        unsigned int v7 = *(uint8_t **)buf;
        goto LABEL_21;
      }
    }
    else if (v21)
    {
      unsigned int v7 = buf;
LABEL_21:
      sub_1DDBA9E00((os_signpost_id_t)v7, v5, a1[14]);
LABEL_27:
      if (v21 < 0) {
        operator delete(*(void **)buf);
      }
      goto LABEL_29;
    }
    sub_1DDA27D28((uint64_t)a1, &v17);
    LODWORD(v13) = 0;
    sub_1DDA49398((uint64_t)&v15, &v17, &v13);
    sub_1DDB9F680(&v17, v5, a1[14], 0, &v13);
    if (!v13)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    (**v13)(v13);
    if (v14) {
      sub_1DDA18310(v14);
    }
    sub_1DDA49424((uint64_t)&v15);
    if (v18) {
      sub_1DDA18310(v18);
    }
    goto LABEL_27;
  }
LABEL_30:
  sub_1DDA1A880(buf, "");
  (*((void (**)(void **, uint8_t *, uint64_t))*a1 + 84))(a1, buf, 42);
  if (v21 < 0) {
    operator delete(*(void **)buf);
  }
  sub_1DDA27D28((uint64_t)a1, buf);
  uint64_t v8 = (*((void (**)(void **, uint8_t *, const void ***))*a1 + 80))(a1, buf, &v15);
  if (v20) {
    sub_1DDA18310(v20);
  }
  __int16 v9 = sub_1DDA3FA94(v8);
  uint64_t v10 = (*((void (**)(void **, void *, void *))*a1 + 85))(a1, v8, v9);
  unsigned int v11 = a1[63];
  a1[63] = (void *)v10;

  v4[2](v4);
}

void sub_1DDA3F8E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_1DDA49424((uint64_t)&a12);
  if (a16) {
    sub_1DDA18310(a16);
  }
  if (a22 < 0) {
    operator delete(__p);
  }

  v22[2](v22);
  _Unwind_Resume(a1);
}

void sub_1DDA3FA0C(uint64_t a1)
{
  uint64_t v2 = sub_1DDA83C7C();
  uint64_t v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CTIFFImageParser", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

id sub_1DDA3FA94(void *a1)
{
  id v1 = a1;
  uint64_t v12 = 0;
  __int16 v13 = &v12;
  uint64_t v14 = 0x3032000000;
  uint64_t v15 = sub_1DDA3FFE8;
  unint64_t v16 = sub_1DDA3FFF8;
  objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v2, v3, v4, v5);
  id v17 = (id)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = sub_1DDA40000;
  uint64_t v11[3] = &unk_1E6D04D18;
  v11[4] = &v12;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v1, v6, (uint64_t)v11, v7, v8);
  id v9 = (id)v13[5];
  _Block_object_dispose(&v12, 8);

  return v9;
}

void sub_1DDA3FBA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

void sub_1DDA3FBCC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  sub_1DDA1A880(__p, "IFD0");
  uint64_t v4 = sub_1DDA2A530(a1 + 1032, __p);
  if ((void **)(a1 + 1040) != v4) {
    std::string::operator=(a2, (const std::string *)(v4 + 7));
  }
  if (v6 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1DDA3FC44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA3FC78(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  sub_1DDA1A880(__p, "IFD0");
  uint64_t v4 = sub_1DDA2A530(a1 + 1056, __p);
  if ((void **)(a1 + 1064) != v4) {
    std::string::operator=(a2, (const std::string *)(v4 + 7));
  }
  if (v6 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1DDA3FCF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1DDA3FD24(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 384))(&v7);
  unint64_t v2 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 16))(v7);
  if (v8) {
    sub_1DDA18310(v8);
  }
  unint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 424))(a1);
  BOOL v4 = v2 >= v3;
  unint64_t result = v2 - v3;
  if (result == 0 || !v4)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA3FE24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA3FE4C(uint64_t a1, void **a2, _DWORD *a3)
{
  uint64_t v5 = sub_1DDA2A530(a1 + 584, a2);
  if ((void **)(a1 + 592) != v5) {
    *a3 = *((_DWORD *)v5 + 14);
  }
  return a1 + 592 != (void)v5;
}

BOOL sub_1DDA3FE94(uint64_t a1, void **a2, _DWORD *a3)
{
  uint64_t v5 = sub_1DDA2A530(a1 + 608, a2);
  if ((void **)(a1 + 616) != v5) {
    *a3 = *((_DWORD *)v5 + 14);
  }
  return a1 + 616 != (void)v5;
}

BOOL sub_1DDA3FEDC(uint64_t a1, void **a2, _DWORD *a3)
{
  uint64_t v5 = sub_1DDA2A530(a1 + 632, a2);
  if ((void **)(a1 + 640) != v5) {
    *a3 = *((_DWORD *)v5 + 14);
  }
  return a1 + 640 != (void)v5;
}

uint64_t sub_1DDA3FF24(uint64_t a1, void **a2, unsigned int a3, _DWORD *a4)
{
  uint64_t v7 = sub_1DDA2A530(a1 + 656, a2);
  if ((void **)(a1 + 664) == v7) {
    return 0;
  }
  uint64_t v8 = v7[7];
  if (a3 >= (unint64_t)(((unsigned char *)v7[8] - v8) >> 2)) {
    return 0;
  }
  *a4 = *(_DWORD *)&v8[4 * a3];
  return 1;
}

id sub_1DDA3FF90@<X0>(void *a1@<X4>, __int16 a2@<W5>, int a3@<W6>, void *a4@<X7>, uint64_t a5@<X8>)
{
  id v9 = a1;
  id result = a4;
  *(void *)a5 = v9;
  *(_WORD *)(a5 + 8) = a2;
  *(_DWORD *)(a5 + 12) = a3;
  *(void *)(a5 + 16) = result;
  return result;
}

uint64_t sub_1DDA3FFE8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1DDA3FFF8(uint64_t a1)
{
}

void sub_1DDA40000(uint64_t a1, void *a2, void *a3)
{
  id v26 = a2;
  id v5 = a3;
  id v9 = objc_msgSend_objectForKeyedSubscript_(v5, v6, @"Name", v7, v8);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v14 = objc_msgSend_mutableCopy(v5, v10, v11, v12, v13);
    objc_msgSend_removeObjectForKey_(v14, v15, @"Name", v16, v17);
    objc_msgSend_setObject_forKeyedSubscript_(v14, v18, (uint64_t)v26, @"TagID", v19);
    int v23 = objc_msgSend_dictionaryWithDictionary_(MEMORY[0x1E4F1C9E8], v20, (uint64_t)v14, v21, v22);
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v24, (uint64_t)v23, (uint64_t)v9, v25);
  }
}

void sub_1DDA40100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1DDA40140(uint64_t a1)
{
  v18[24] = *MEMORY[0x1E4F143B8];
  v17[0] = &unk_1F39AC1A0;
  v17[1] = &unk_1F39AC1B8;
  v18[0] = &unk_1F39AFFC8;
  v18[1] = &unk_1F39AFFF0;
  v17[2] = &unk_1F39AC1D0;
  v17[3] = &unk_1F39AC1E8;
  double v18[2] = &unk_1F39B0018;
  v18[3] = &unk_1F39B0040;
  v17[4] = &unk_1F39AC200;
  v17[5] = &unk_1F39AC218;
  v18[4] = &unk_1F39B0068;
  v18[5] = &unk_1F39B0090;
  v17[6] = &unk_1F39AC230;
  v17[7] = &unk_1F39AC248;
  v18[6] = &unk_1F39B00B8;
  v18[7] = &unk_1F39B00E0;
  v17[8] = &unk_1F39AC260;
  v17[9] = &unk_1F39AC278;
  v18[8] = &unk_1F39B0108;
  v18[9] = &unk_1F39B0130;
  v17[10] = &unk_1F39AC290;
  v17[11] = &unk_1F39AC2A8;
  v18[10] = &unk_1F39B0158;
  v18[11] = &unk_1F39B0180;
  v17[12] = &unk_1F39AC2C0;
  v17[13] = &unk_1F39AC2D8;
  v18[12] = &unk_1F39B01A8;
  v18[13] = &unk_1F39B01D0;
  v17[14] = &unk_1F39AC2F0;
  v17[15] = &unk_1F39AC308;
  v18[14] = &unk_1F39B01F8;
  v18[15] = &unk_1F39B0220;
  v17[16] = &unk_1F39AC320;
  v17[17] = &unk_1F39AC338;
  v18[16] = &unk_1F39B0248;
  v18[17] = &unk_1F39B0270;
  v17[18] = &unk_1F39AC350;
  v15[0] = @"Name";
  v15[1] = @"Type";
  v16[0] = @"SubIFD";
  v16[1] = &unk_1F39AC368;
  v15[2] = @"Namespace";
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = sub_1DDA4053C;
  void v12[3] = &unk_1E6D04D38;
  void v12[4] = a1;
  unint64_t v2 = (void *)MEMORY[0x1E01C46E0](v12);
  v16[2] = v2;
  BOOL v4 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v3, (uint64_t)v16, (uint64_t)v15, 3);
  v18[18] = v4;
  v18[19] = &unk_1F39B0298;
  v17[19] = &unk_1F39AC380;
  v17[20] = &unk_1F39AC398;
  v18[20] = &unk_1F39B02C0;
  v18[21] = &unk_1F39B02E8;
  v17[21] = &unk_1F39AC3B0;
  v17[22] = &unk_1F39AC3E0;
  v13[0] = @"Name";
  v13[1] = @"Type";
  v14[0] = @"Exif";
  v14[1] = &unk_1F39AC368;
  v13[2] = @"Namespace";
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = sub_1DDA4056C;
  uint64_t v11[3] = &unk_1E6D04D38;
  v11[4] = a1;
  id v5 = (void *)MEMORY[0x1E01C46E0](v11);
  v14[2] = v5;
  uint64_t v7 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v6, (uint64_t)v14, (uint64_t)v13, 3);
  v17[23] = &unk_1F39AC3F8;
  v18[22] = v7;
  v18[23] = &unk_1F39B0310;
  id v9 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v8, (uint64_t)v18, (uint64_t)v17, 24);

  return v9;
}

void sub_1DDA40508(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA4053C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 640))();
}

uint64_t sub_1DDA4056C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 648))();
}

id sub_1DDA4059C(uint64_t a1)
{
  v11[33] = *MEMORY[0x1E4F143B8];
  v10[0] = &unk_1F39AC410;
  v10[1] = &unk_1F39AC428;
  v11[0] = &unk_1F39B0338;
  v11[1] = &unk_1F39B0360;
  v10[2] = &unk_1F39AC440;
  uint64_t v10[3] = &unk_1F39AC458;
  void v11[2] = &unk_1F39B0388;
  uint64_t v11[3] = &unk_1F39B03B0;
  v10[4] = &unk_1F39AC470;
  v10[5] = &unk_1F39AC488;
  v11[4] = &unk_1F39B03D8;
  void v11[5] = &unk_1F39B0400;
  v10[6] = &unk_1F39AC4A0;
  v10[7] = &unk_1F39AC4B8;
  v11[6] = &unk_1F39B0428;
  v11[7] = &unk_1F39B0450;
  v10[8] = &unk_1F39AC4D0;
  v10[9] = &unk_1F39AC4E8;
  v11[8] = &unk_1F39B0478;
  v11[9] = &unk_1F39B04A0;
  v10[10] = &unk_1F39AC500;
  v10[11] = &unk_1F39AC518;
  v11[10] = &unk_1F39B04C8;
  v11[11] = &unk_1F39B04F0;
  v10[12] = &unk_1F39AC530;
  v10[13] = &unk_1F39AC548;
  v11[12] = &unk_1F39B0518;
  v11[13] = &unk_1F39B0540;
  v10[14] = &unk_1F39AC560;
  v10[15] = &unk_1F39AC578;
  v11[14] = &unk_1F39B0568;
  v11[15] = &unk_1F39B0590;
  v10[16] = &unk_1F39AC590;
  v10[17] = &unk_1F39AC5A8;
  v11[16] = &unk_1F39B05B8;
  v11[17] = &unk_1F39B05E0;
  v10[18] = &unk_1F39AC5C0;
  v10[19] = &unk_1F39AC5D8;
  v11[18] = &unk_1F39B0608;
  v11[19] = &unk_1F39B0630;
  v10[20] = &unk_1F39AC5F0;
  v10[21] = &unk_1F39AC608;
  v11[20] = &unk_1F39B0658;
  v11[21] = &unk_1F39B0680;
  v10[22] = &unk_1F39AC620;
  v10[23] = &unk_1F39AC638;
  v11[22] = &unk_1F39B06A8;
  v11[23] = &unk_1F39B06D0;
  v10[24] = &unk_1F39AC650;
  v10[25] = &unk_1F39AC668;
  v11[24] = &unk_1F39B06F8;
  v11[25] = &unk_1F39B0720;
  v10[26] = &unk_1F39AC680;
  v10[27] = &unk_1F39AC698;
  v11[26] = &unk_1F39B0748;
  v11[27] = &unk_1F39B0770;
  v11[28] = &unk_1F39B0798;
  v10[28] = &unk_1F39AC6B0;
  v10[29] = &unk_1F39AC6C8;
  v8[0] = @"Name";
  v8[1] = @"Type";
  v9[0] = @"MakerNote";
  v9[1] = &unk_1F39AC6E0;
  v9[2] = &unk_1F39AC6F8;
  v8[2] = @"Count";
  v8[3] = @"Namespace";
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = sub_1DDA409C0;
  void v7[3] = &unk_1E6D04D38;
  v7[4] = a1;
  id v1 = (void *)MEMORY[0x1E01C46E0](v7);
  v9[3] = v1;
  unint64_t v3 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v2, (uint64_t)v9, (uint64_t)v8, 4);
  v11[29] = v3;
  v11[30] = &unk_1F39B07C0;
  v10[30] = &unk_1F39AC710;
  v10[31] = &unk_1F39AC728;
  v10[32] = &unk_1F39AC740;
  v11[31] = &unk_1F39B07E8;
  v11[32] = &unk_1F39B0810;
  id v5 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v4, (uint64_t)v11, (uint64_t)v10, 33);

  return v5;
}

void sub_1DDA4099C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA409C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 656))();
}

uint64_t sub_1DDA409F0()
{
  return MEMORY[0x1E4F1CC08];
}

uint64_t sub_1DDA409FC()
{
  return 42;
}

uint64_t *sub_1DDA40A04(uint64_t a1, uint64_t a2, int a3)
{
  sub_1DDA27D28(a1, &v34);
  LODWORD(v41[0]) = 0;
  sub_1DDA1A94C(v42, &v34, (uint64_t)v41, 0);
  if (v35[0]) {
    sub_1DDA18310(v35[0]);
  }
  sub_1DDA27D28(a1, &v34);
  int v6 = sub_1DDA19E68(v34);
  if (v35[0]) {
    sub_1DDA18310(v35[0]);
  }
  if (v6 == 18761 || v6 == 19789)
  {
    if (v6 == 19789) {
      uint64_t v7 = 2;
    }
    else {
      uint64_t v7 = 1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 96))(a1, v7);
    sub_1DDA27D28(a1, &v34);
    sub_1DDA29F88(v41, &v34, v7);
    if (v35[0]) {
      sub_1DDA18310(v35[0]);
    }
    sub_1DDA27D28(a1, &v34);
    int v8 = sub_1DDA19E68(v34);
    if (v35[0]) {
      sub_1DDA18310(v35[0]);
    }
    if (v8 == a3 || v8 == (*(unsigned int (**)(uint64_t))(*(void *)a1 + 664))(a1))
    {
      unsigned int v40 = 0;
      sub_1DDA27D28(a1, &v34);
      unsigned int v30 = (*(uint64_t (**)(uint64_t))(*(void *)v34 + 16))(v34);
      if (v35[0]) {
        sub_1DDA18310(v35[0]);
      }
      unsigned int v9 = 0;
      v39[0] = 0;
      v39[1] = 0;
      uint64_t v38 = (uint64_t *)v39;
      uint64_t v29 = *MEMORY[0x1E4FBA418];
      uint64_t v10 = *(std::__shared_weak_count **)(MEMORY[0x1E4FBA418] + 24);
      while (1)
      {
        sub_1DDA27D28(a1, &v34);
        unsigned int v40 = sub_1DDA19EC8(v34);
        if (v40) {
          BOOL v11 = v9 >= 0x14;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (v35[0]) {
          sub_1DDA18310(v35[0]);
        }
        if (!v12) {
          break;
        }
        uint64_t v13 = v39[0];
        if (v39[0])
        {
          uint64_t v14 = v39;
          do
          {
            uint64_t v15 = v13;
            uint64_t v16 = v14;
            unsigned int v17 = *((_DWORD *)v13 + 7);
            uint64_t v18 = v13 + 1;
            if (v17 >= v40)
            {
              uint64_t v18 = v15;
              uint64_t v14 = (void **)v15;
            }
            uint64_t v13 = (void *)*v18;
          }
          while (v13);
          if (v14 != v39)
          {
            if (v17 < v40) {
              uint64_t v15 = v16;
            }
            if (v40 >= *((_DWORD *)v15 + 7))
            {
              exception = __cxa_allocate_exception(0x10uLL);
              MEMORY[0x1E01C3B90](exception, "RawCameraException");
              __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
            }
          }
        }
        sub_1DDA4B1D0(&v38, &v40, &v40);
        if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1))
        {
          if (v30 <= v40 + 390) {
            goto LABEL_61;
          }
        }
        else
        {
          sub_1DDA27D28(a1, &v34);
          char v19 = (**(uint64_t (***)(uint64_t))v34)(v34);
          if (v30 > v40 + 390) {
            char v20 = 1;
          }
          else {
            char v20 = v19;
          }
          if (v35[0]) {
            sub_1DDA18310(v35[0]);
          }
          if ((v20 & 1) == 0)
          {
LABEL_61:
            (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 184))(a1, 1);
            break;
          }
        }
        sub_1DDA27D28(a1, &v34);
        uint64_t v21 = v34;
        sub_1DDA18410((int *)__p, (int *)&v40);
        (*(void (**)(uint64_t, void **, void))(*(void *)v21 + 40))(v21, __p, 0);
        if (v35[0]) {
          sub_1DDA18310(v35[0]);
        }
        sub_1DDA410D0((uint64_t)&v34);
        sub_1DDA4B28C(&v34, (uint64_t)"IFD", 3);
        std::ostream::operator<<();
        sub_1DDA4B5B8((uint64_t)v35, &v31);
        int v22 = *(char *)(a2 + 23);
        if (v22 >= 0) {
          int v23 = (const std::string::value_type *)a2;
        }
        else {
          int v23 = *(const std::string::value_type **)a2;
        }
        if (v22 >= 0) {
          std::string::size_type v24 = *(unsigned __int8 *)(a2 + 23);
        }
        else {
          std::string::size_type v24 = *(void *)(a2 + 8);
        }
        uint64_t v25 = std::string::insert(&v31, 0, v23, v24);
        long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
        std::string::size_type v33 = v25->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v26;
        v25->__r_.__value_.__l.__size_ = 0;
        v25->__r_.__value_.__r.__words[2] = 0;
        v25->__r_.__value_.__r.__words[0] = 0;
        (*(void (**)(uint64_t, void, void **))(*(void *)a1 + 704))(a1, 0, __p);
        if (SHIBYTE(v33) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v31.__r_.__value_.__l.__data_);
        }
        uint64_t v34 = v29;
        *(std::__shared_weak_count **)((char *)&v35[-1] + *(void *)(v29 - 24)) = v10;
        v35[0] = (std::__shared_weak_count *)(MEMORY[0x1E4FBA470] + 16);
        if (v36 < 0) {
          operator delete(v35[8]);
        }
        ++v9;
        std::streambuf::~streambuf();
        std::ostream::~ostream();
        MEMORY[0x1E01C3D40](&v37);
      }
      sub_1DDA4B17C((uint64_t)&v38, v39[0]);
    }
    sub_1DDA2A000(v41);
  }
  return sub_1DDA1AA18(v42);
}

void sub_1DDA40FBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,uint64_t a25)
{
  sub_1DDA2A000((uint64_t *)(v25 - 144));
  sub_1DDA1AA18((uint64_t *)(v25 - 120));
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA410D0(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA498] + 64;
  *(void *)(a1 + 112) = MEMORY[0x1E4FBA498] + 64;
  uint64_t v3 = *(void *)(MEMORY[0x1E4FBA418] + 16);
  uint64_t v4 = *(void *)(MEMORY[0x1E4FBA418] + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + *(void *)(v4 - 24)) = v3;
  id v5 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v5, (void *)(a1 + 8));
  uint64_t v6 = MEMORY[0x1E4FBA498] + 24;
  v5[1].__vftable = 0;
  v5[1].__fmtflags_ = -1;
  *(void *)a1 = v6;
  *(void *)(a1 + 112) = v2;
  std::streambuf::basic_streambuf();
  *(void *)(a1 + 8) = MEMORY[0x1E4FBA470] + 16;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_DWORD *)(a1 + 104) = 16;
  return a1;
}

void sub_1DDA41240(_Unwind_Exception *a1)
{
  std::ostream::~ostream();
  MEMORY[0x1E01C3D40](v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA41268(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA418];
  uint64_t v3 = *MEMORY[0x1E4FBA418];
  *(void *)a1 = *MEMORY[0x1E4FBA418];
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  *(void *)(a1 + 8) = MEMORY[0x1E4FBA470] + 16;
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1E01C3D40](a1 + 112);
  return a1;
}

id sub_1DDA4136C(uint64_t a1, void *a2, void *a3)
{
  id v47 = a2;
  id v5 = a3;
  sub_1DDA27D28(a1, &v54);
  LODWORD(v51) = 0;
  sub_1DDA1A94C(v56, &v54, (uint64_t)&v51, 0);
  if (v55) {
    sub_1DDA18310(v55);
  }
  sub_1DDA27D28(a1, &v54);
  int v6 = sub_1DDA19E68(v54);
  if (v55) {
    sub_1DDA18310(v55);
  }
  if (v6 == 18761 || v6 == 19789)
  {
    if (v6 == 19789) {
      uint64_t v7 = 2;
    }
    else {
      uint64_t v7 = 1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 96))(a1, v7);
    int v46 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v8, v9, v10, v11);
    int v12 = [RAWTIFFIFD alloc];
    uint64_t v45 = objc_msgSend_initWithNamespace_reverseNamespace_(v12, v13, (uint64_t)v47, (uint64_t)v5, v14);
    objc_msgSend_setObject_atIndexedSubscript_(v45, v15, (uint64_t)v46, 0, v16);
    objc_msgSend_setObject_forKeyedSubscript_(v45, v17, (uint64_t)v46, @"IFD", v18);
    sub_1DDA27D28(a1, &v51);
    sub_1DDA29F88(&v54, (uint64_t *)&v51, v7);
    if (v52[0]) {
      sub_1DDA18310((std::__shared_weak_count *)v52[0]);
    }
    sub_1DDA27D28(a1, &v51);
    int v19 = sub_1DDA19E68((uint64_t)v51);
    if (v52[0]) {
      sub_1DDA18310((std::__shared_weak_count *)v52[0]);
    }
    if (v19 == 42 || v19 == (*(unsigned int (**)(uint64_t))(*(void *)a1 + 664))(a1))
    {
      unsigned int v53 = 0;
      sub_1DDA27D28(a1, &v51);
      unsigned int v20 = (*(uint64_t (**)(uint64_t *))(*v51 + 16))(v51);
      if (v52[0]) {
        sub_1DDA18310((std::__shared_weak_count *)v52[0]);
      }
      uint64_t v21 = 0;
      v52[0] = 0;
      v52[1] = 0;
      float v51 = (uint64_t *)v52;
      while (1)
      {
        sub_1DDA27D28(a1, &v49);
        unsigned int v53 = sub_1DDA19EC8((uint64_t)v49);
        if (v53) {
          BOOL v22 = v21 >= 0x14;
        }
        else {
          BOOL v22 = 1;
        }
        int v23 = !v22;
        if (v50) {
          sub_1DDA18310(v50);
        }
        if (!v23) {
          break;
        }
        std::string::size_type v24 = v52[0];
        if (v52[0])
        {
          uint64_t v25 = v52;
          do
          {
            long long v26 = v24;
            uint64_t v27 = v25;
            unsigned int v28 = *((_DWORD *)v24 + 7);
            uint64_t v29 = v24 + 1;
            if (v28 >= v53)
            {
              uint64_t v29 = v26;
              uint64_t v25 = (void **)v26;
            }
            std::string::size_type v24 = (void *)*v29;
          }
          while (v24);
          if (v25 != v52)
          {
            if (v28 < v53) {
              long long v26 = v27;
            }
            if (v53 >= *((_DWORD *)v26 + 7))
            {
              exception = __cxa_allocate_exception(0x10uLL);
              MEMORY[0x1E01C3B90](exception, "RawCameraException");
              __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
            }
          }
        }
        sub_1DDA4B1D0(&v51, &v53, &v53);
        if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1))
        {
          if (v20 <= v53 + 390) {
            goto LABEL_52;
          }
        }
        else
        {
          sub_1DDA27D28(a1, &v49);
          char v30 = (**v49)(v49);
          if (v20 > v53 + 390) {
            char v31 = 1;
          }
          else {
            char v31 = v30;
          }
          if (v50) {
            sub_1DDA18310(v50);
          }
          if ((v31 & 1) == 0)
          {
LABEL_52:
            (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 184))(a1, 1);
            break;
          }
        }
        sub_1DDA27D28(a1, &v49);
        uint64_t v32 = v49;
        sub_1DDA18410(&v48, (int *)&v53);
        ((void (*)(uint64_t (***)(void), int *, void))(*v32)[5])(v32, &v48, 0);
        if (v50) {
          sub_1DDA18310(v50);
        }
        char v36 = objc_msgSend_stringWithFormat_(NSString, v33, @"%@[%d]", v34, v35, @"IFD", v21);
        uint64_t v37 = (*(void (**)(uint64_t, void, void *, id, id))(*(void *)a1 + 712))(a1, 0, v36, v47, v5);

        if (v37) {
          objc_msgSend_addObject_(v46, v38, (uint64_t)v37, v39, v40);
        }
        uint64_t v21 = (v21 + 1);
      }
      sub_1DDA4B17C((uint64_t)&v51, v52[0]);
      sub_1DDA2A000(&v54);
      int v42 = v45;
      id v41 = v45;
    }
    else
    {
      sub_1DDA2A000(&v54);
      id v41 = 0;
      int v42 = v45;
    }
  }
  else
  {
    id v41 = 0;
  }
  sub_1DDA1AA18(v56);

  return v41;
}

void sub_1DDA41898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_1DDA2A000((uint64_t *)va);

  sub_1DDA1AA18((uint64_t *)(v14 - 104));
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA419CC(uint64_t a1, uint64_t a2, _WORD *a3)
{
  sub_1DDA27D28(a1, &v18);
  uint64_t v5 = sub_1DDA19E68(v18);
  if (v19) {
    sub_1DDA18310(v19);
  }
  if (v5 > 0x200) {
    return 0;
  }
  uint64_t v6 = v5;
  sub_1DDA27D28(a1, &v18);
  (*(void (**)(uint64_t, _WORD *, uint64_t))(*(void *)v18 + 32))(v18, a3 + 2, 12 * v5);
  if (v19) {
    sub_1DDA18310(v19);
  }
  *a3 = v5;
  sub_1DDA27D28(a1, &v18);
  unsigned int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v18 + 16))(v18);
  if (v19) {
    sub_1DDA18310(v19);
  }
  sub_1DDA27D28(a1, &v18);
  uint64_t v8 = sub_1DDA19C94(v18);
  if (v19) {
    sub_1DDA18310(v19);
  }
  if (v5)
  {
    uint64_t v9 = a3 + 4;
    do
    {
      if (v8 == 1)
      {
        int v10 = (unsigned __int16)*(v9 - 1);
        unsigned int v11 = *(_DWORD *)v9;
      }
      else
      {
        *(v9 - 2) = bswap32((unsigned __int16)*(v9 - 2)) >> 16;
        unsigned int v12 = bswap32((unsigned __int16)*(v9 - 1));
        int v10 = HIWORD(v12);
        *(v9 - 1) = HIWORD(v12);
        unsigned int v11 = bswap32(*(_DWORD *)v9);
        *(_DWORD *)uint64_t v9 = v11;
      }
      unsigned int v13 = sub_1DDA3E82C(v10);
      unint64_t v14 = v13 * (unint64_t)v11;
      if ((v14 & 0xFFFFFFFF00000000) != 0 || v14 >= v7)
      {
        exception = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E01C3B90](exception, "RawCameraException");
        __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      if (v8 != 1)
      {
        if (v13 == 4 || v14 >= 5)
        {
          *((_DWORD *)v9 + 1) = bswap32(*((_DWORD *)v9 + 1));
        }
        else if (v13 == 2)
        {
          v9[2] = bswap32((unsigned __int16)v9[2]) >> 16;
          v9[3] = bswap32((unsigned __int16)v9[3]) >> 16;
        }
      }
      v9 += 6;
      --v6;
    }
    while (v6);
  }
  return v5;
}

void sub_1DDA41C08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA41C44()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  if (*(_DWORD *)(v0 + 1176) <= (int)v1) {
    return 1;
  }
  uint64_t v3 = v2;
  uint64_t v4 = v0;
  int v5 = sub_1DDA419CC(v0, v1, &v14);
  BOOL v6 = v5 != 0;
  if (v5)
  {
    LODWORD(v7) = v5;
    sub_1DDA27D28(v4, &v12);
    unsigned int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 16))(v12);
    if (v13) {
      sub_1DDA18310(v13);
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 688))(v4, v3);
    uint64_t v7 = v7;
    uint64_t v9 = &v15;
    do
    {
      uint64_t v12 = *v9;
      LODWORD(v13) = *((_DWORD *)v9 + 2);
      unint64_t v16 = sub_1DDA3E82C(WORD1(v12)) * HIDWORD(v12);
      sub_1DDA18500(&v17, &v16);
      if (v17) {
        BOOL v10 = v17 >= v8;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        (*(void (**)(uint64_t, uint64_t, uint64_t *))(*(void *)v4 + 728))(v4, v3, &v12);
      }
      uint64_t v9 = (uint64_t *)((char *)v9 + 12);
      --v7;
    }
    while (v7);
    (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 696))(v4, v3);
  }
  return v6;
}

void sub_1DDA41E10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_1DDA18310(a11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA41E28(uint64_t a1)
{
  unint64_t v2 = sub_1DDA3E82C(*(unsigned __int16 *)(a1 + 2)) * *(unsigned int *)(a1 + 4);
  sub_1DDA18500(&v3, &v2);
  return v3;
}

id sub_1DDA41E74()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  int v6 = v5;
  uint64_t v7 = (_DWORD *)v0;
  id v137 = v8;
  id v136 = v4;
  id v132 = v2;
  unsigned int v135 = v6 + 1;
  if (v6 + 1 >= v7[294])
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v9 = [RAWTIFFIFD alloc];
  uint64_t v12 = objc_msgSend_initWithNamespace_reverseNamespace_(v9, v10, (uint64_t)v136, (uint64_t)v132, v11);
  uint64_t v134 = v12;
  sub_1DDA1A880(&__p, "");
  unsigned int v14 = sub_1DDA419CC((uint64_t)v7, v13, v154);
  if (SHIBYTE(v153) < 0) {
    operator delete(__p);
  }
  sub_1DDA27D28((uint64_t)v7, &__p);
  unsigned int v131 = (*(uint64_t (**)(void *))(*(void *)__p + 16))(__p);
  if (v152) {
    sub_1DDA18310(v152);
  }
  if (!v14)
  {
LABEL_82:
    id v126 = v12;
    goto LABEL_83;
  }
  uint64_t v15 = 0;
  uint64_t v130 = v14;
  while (1)
  {
    unint64_t v16 = &v154[6 * v15];
    uint64_t v149 = *(void *)(v16 + 1);
    int v150 = v16[3];
    __p = (void *)(sub_1DDA3E82C(WORD1(v149)) * HIDWORD(v149));
    sub_1DDA18500(v148, (unint64_t *)&__p);
    if (!LODWORD(v148[0]) || LODWORD(v148[0]) >= v131) {
      goto LABEL_78;
    }
    uint64_t v20 = (unsigned __int16)v149;
    uint64_t v21 = objc_msgSend_numberWithUnsignedInteger_(NSNumber, v17, (unsigned __int16)v149, v18, v19);
    uint64_t v25 = objc_msgSend_objectForKeyedSubscript_(v136, v22, (uint64_t)v21, v23, v24);
    uint64_t v29 = objc_msgSend_objectForKeyedSubscript_(v25, v26, @"Name", v27, v28);

    std::string::size_type v33 = objc_msgSend_numberWithUnsignedInteger_(NSNumber, v30, v20, v31, v32);
    uint64_t v37 = objc_msgSend_objectForKeyedSubscript_(v136, v34, (uint64_t)v33, v35, v36);
    id v41 = objc_msgSend_objectForKeyedSubscript_(v37, v38, @"Type", v39, v40);

    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      WORD1(v149) = objc_msgSend_unsignedShortValue(v41, v42, v43, v44, v45);
    }

    uint64_t v49 = objc_msgSend_numberWithUnsignedInteger_(NSNumber, v46, v20, v47, v48);
    unsigned int v53 = objc_msgSend_objectForKeyedSubscript_(v136, v50, (uint64_t)v49, v51, v52);
    uint64_t v57 = objc_msgSend_objectForKeyedSubscript_(v53, v54, @"Count", v55, v56);

    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      HIDWORD(v149) = objc_msgSend_unsignedShortValue(v57, v58, v59, v60, v61);
    }

    id v62 = v136;
    id v138 = v132;
    long long v66 = objc_msgSend_numberWithUnsignedInteger_(NSNumber, v63, v20, v64, v65);
    long long v70 = objc_msgSend_objectForKeyedSubscript_(v62, v67, (uint64_t)v66, v68, v69);
    objc_msgSend_objectForKeyedSubscript_(v70, v71, @"Namespace", v72, v73);
    uint64_t v74 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue();

    if (v74)
    {
      sub_1DDA27D28((uint64_t)v7, &__p);
      uint64_t v75 = ((void (**)(void, void **, uint64_t *))v74)[2](v74, &__p, &v149);

      if (v152) {
        sub_1DDA18310(v152);
      }
      id v62 = (id)v75;
    }

    sub_1DDA27D28((uint64_t)v7, &__p);
    uint64_t v76 = sub_1DDA3FA94(v62);
    uint64_t v77 = sub_1DDA3C0DC((uint64_t)&v149, (uint64_t *)&__p, v62, v76);

    if (v152) {
      sub_1DDA18310(v152);
    }
    (*(void (**)(void **__return_ptr, _DWORD *, void *, id, uint64_t, void *, void, void, void *))(*(void *)v7 + 632))(&__p, v7, v134, v137, v20, v29, WORD1(v149), HIDWORD(v149), v77);
    uint64_t v78 = __p;

    WORD1(v149) = (_WORD)v152;
    HIDWORD(v149) = HIDWORD(v152);
    id v133 = v153;

    if (WORD1(v149) == 37500)
    {
      sub_1DDA27D28((uint64_t)v7, &v145);
      LODWORD(v141) = sub_1DDA3CE7C((uint64_t)&v149);
      sub_1DDA1B4D8((int *)&v143, (int *)&v141);
      sub_1DDA1A94C(v148, &v145, (uint64_t)&v143, 0);
      if (v146) {
        sub_1DDA18310(v146);
      }
      if ((*(unsigned int (**)(_DWORD *, uint64_t *))(*(void *)v7 + 752))(v7, &v149))
      {
        sub_1DDA27D28((uint64_t)v7, &v143);
        uint64_t v93 = (*(uint64_t (**)(_DWORD *))(*(void *)v7 + 120))(v7);
        sub_1DDA29F88(&v145, &v143, v93);
        if (v144) {
          sub_1DDA18310(v144);
        }
        sub_1DDA27D28((uint64_t)v7, &v141);
        LODWORD(v139) = (*(uint64_t (**)(_DWORD *))(*(void *)v7 + 136))(v7);
        sub_1DDA49398((uint64_t)&v143, &v141, &v139);
        if (v142) {
          sub_1DDA18310(v142);
        }
        sub_1DDA27D28((uint64_t)v7, &v139);
        int v147 = (*(uint64_t (**)(_DWORD *))(*(void *)v7 + 152))(v7);
        sub_1DDA1A94C(&v141, &v139, (uint64_t)&v147, 0);
        if (v140) {
          sub_1DDA18310(v140);
        }
        if (v78) {
          objc_msgSend_stringByAppendingFormat_(v137, v94, @".%@", v95, v96, v78);
        }
        else {
        v118 = objc_msgSend_stringByAppendingFormat_(v137, v94, @".%lu", v95, v96, v20);
        }
        uint64_t v121 = (*(void (**)(_DWORD *, void, void *, id, id))(*(void *)v7 + 712))(v7, v135, v118, v62, v138);
        if (v121) {
          objc_msgSend_setObject_atIndexedSubscript_(v134, v119, (uint64_t)v121, v20, v120);
        }

        (*(void (**)(_DWORD *))(*(void *)v7 + 760))(v7);
        sub_1DDA1AA18(&v141);
        sub_1DDA49424((uint64_t)&v143);
        sub_1DDA2A000(&v145);
      }
      sub_1DDA1AA18(v148);
      uint64_t v97 = v133;
      goto LABEL_77;
    }
    if (WORD1(v149) == 13) {
      break;
    }
    uint64_t v97 = v133;
    objc_msgSend_setObject_atIndexedSubscript_(v134, v79, (uint64_t)v133, v20, v80);
LABEL_77:

    uint64_t v12 = v134;
LABEL_78:
    if (++v15 == v130) {
      goto LABEL_82;
    }
  }
  sub_1DDA27D28((uint64_t)v7, &v145);
  sub_1DDA49310(v148, &v145);
  if (v146) {
    sub_1DDA18310(v146);
  }
  int v85 = HIDWORD(v149);
  LODWORD(v141) = v150;
  if (HIDWORD(v149) == 1)
  {
    LODWORD(v139) = v150;
    sub_1DDA27D28((uint64_t)v7, &v145);
    int v86 = (*(uint64_t (**)(uint64_t))(*(void *)v145 + 16))(v145);
    int v147 = 390;
    LODWORD(v143) = v86;
    unsigned int v87 = *sub_1DDA4B6A4(&v143, &v147);
    unsigned int v88 = v139;
    if (v146) {
      sub_1DDA18310(v146);
    }
    if (v87 >= v88)
    {
      sub_1DDA27D28((uint64_t)v7, &v145);
      uint64_t v89 = v145;
      sub_1DDA18410((int *)&v143, (int *)&v139);
      (*(void (**)(uint64_t, uint64_t *, void))(*(void *)v89 + 40))(v89, &v143, 0);
      if (v146) {
        sub_1DDA18310(v146);
      }
      if (v78) {
        objc_msgSend_stringByAppendingFormat_(v137, v90, @".%@", v91, v92, v78);
      }
      else {
      uint64_t v100 = objc_msgSend_stringByAppendingFormat_(v137, v90, @".%lu", v91, v92, v20);
      }
      uint64_t v124 = (*(void (**)(_DWORD *, void, void *, id, id))(*(void *)v7 + 712))(v7, v135, v100, v62, v138);
      if (v124) {
        objc_msgSend_setObject_atIndexedSubscript_(v134, v122, (uint64_t)v124, v20, v123);
      }

      goto LABEL_75;
    }
  }
  else
  {
    uint64_t v100 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v81, v82, v83, v84);
    if (!v85)
    {
LABEL_65:
      objc_msgSend_setObject_atIndexedSubscript_(v134, v98, (uint64_t)v100, v20, v99);
LABEL_75:

      char v125 = 1;
      goto LABEL_76;
    }
    uint64_t v101 = 0;
    while (1)
    {
      LODWORD(v139) = v141;
      sub_1DDA27D28((uint64_t)v7, &v145);
      int v102 = (*(uint64_t (**)(uint64_t))(*(void *)v145 + 16))(v145);
      int v147 = 390;
      LODWORD(v143) = v102;
      unsigned int v103 = *sub_1DDA4B6A4(&v143, &v147);
      unsigned int v104 = v139;
      if (v146) {
        sub_1DDA18310(v146);
      }
      if (v103 < v104) {
        break;
      }
      sub_1DDA27D28((uint64_t)v7, &v145);
      uint64_t v105 = v145;
      sub_1DDA18410((int *)&v143, (int *)&v141);
      (*(void (**)(uint64_t, uint64_t *, void))(*(void *)v105 + 40))(v105, &v143, 0);
      if (v146) {
        sub_1DDA18310(v146);
      }
      sub_1DDA27D28((uint64_t)v7, &v145);
      int v106 = sub_1DDA19EC8(v145);
      LODWORD(v139) = v106;
      if (v146)
      {
        sub_1DDA18310(v146);
        int v106 = v139;
      }
      if (!v106) {
        goto LABEL_87;
      }
      sub_1DDA27D28((uint64_t)v7, &v145);
      unsigned int v107 = (*(uint64_t (**)(uint64_t))(*(void *)v145 + 16))(v145);
      unsigned int v108 = v139;
      if (v146) {
        sub_1DDA18310(v146);
      }
      if (v108 >= v107)
      {
LABEL_87:
        uint64_t v128 = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E01C3B90](v128, "RawCameraException");
        __cxa_throw(v128, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      sub_1DDA27D28((uint64_t)v7, &v145);
      uint64_t v109 = v145;
      sub_1DDA18410((int *)&v143, (int *)&v139);
      (*(void (**)(uint64_t, uint64_t *, void))(*(void *)v109 + 40))(v109, &v143, 0);
      if (v146) {
        sub_1DDA18310(v146);
      }
      if (v78) {
        objc_msgSend_stringByAppendingFormat_(v137, v110, @".%@[%lu]", v111, v112, v78, v101);
      }
      else {
      double v113 = objc_msgSend_stringByAppendingFormat_(v137, v110, @".%lu[%lu]", v111, v112, v20, v101);
      }
      uint64_t v117 = (*(void (**)(_DWORD *, void, void *, id, id))(*(void *)v7 + 712))(v7, v135, v113, v62, v138);
      if (v117) {
        objc_msgSend_addObject_(v100, v114, (uint64_t)v117, v115, v116);
      }
      ++v101;

      LODWORD(v141) = v141 + 4;
      if (v85 == v101) {
        goto LABEL_65;
      }
    }
  }
  char v125 = 0;
LABEL_76:
  sub_1DDA1AA18(v148);
  uint64_t v97 = v133;
  if (v125) {
    goto LABEL_77;
  }

  id v126 = 0;
  uint64_t v12 = v134;
LABEL_83:

  return v126;
}

void sub_1DDA42A9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, uint64_t a17, void *a18, void *a19, void *a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *__p,uint64_t a39,void *a40)
{
  sub_1DDA1AA18(&a33);

  _Unwind_Resume(a1);
}

uint64_t sub_1DDA42DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DDA27D28(a1, &v24);
  sub_1DDA49310(v30, &v24);
  if (v25[0]) {
    sub_1DDA18310(v25[0]);
  }
  if (*(_DWORD *)(a3 + 4) >= 0xAu) {
    int v6 = 10;
  }
  else {
    int v6 = *(_DWORD *)(a3 + 4);
  }
  unsigned int v29 = *(_DWORD *)(a3 + 8);
  if (v6)
  {
    int v7 = 0;
    uint64_t v20 = *MEMORY[0x1E4FBA418];
    id v8 = *(std::__shared_weak_count **)(MEMORY[0x1E4FBA418] + 24);
    do
    {
      unsigned int v28 = v29;
      if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 56))(a1))
      {
        sub_1DDA27D28(a1, &v24);
        int v9 = (*(uint64_t (**)(uint64_t))(*(void *)v24 + 16))(v24);
        LODWORD(v21.__r_.__value_.__l.__data_) = 390;
        LODWORD(__p[0]) = v9;
        unsigned int v10 = *sub_1DDA4B6A4(__p, (int *)&v21);
        unsigned int v11 = v28;
        if (v25[0]) {
          sub_1DDA18310(v25[0]);
        }
        if (v10 < v11) {
          break;
        }
      }
      if (v6 != 1)
      {
        sub_1DDA27D28(a1, &v24);
        uint64_t v12 = v24;
        sub_1DDA18410((int *)__p, (int *)&v29);
        (*(void (**)(uint64_t, void **, void))(*(void *)v12 + 40))(v12, __p, 0);
        if (v25[0]) {
          sub_1DDA18310(v25[0]);
        }
        sub_1DDA27D28(a1, &v24);
        unsigned int v28 = sub_1DDA19EC8(v24);
        if (v25[0]) {
          sub_1DDA18310(v25[0]);
        }
      }
      sub_1DDA27D28(a1, &v24);
      uint64_t v13 = v24;
      sub_1DDA18410((int *)__p, (int *)&v28);
      (*(void (**)(uint64_t, void **, void))(*(void *)v13 + 40))(v13, __p, 0);
      if (v25[0]) {
        sub_1DDA18310(v25[0]);
      }
      sub_1DDA410D0((uint64_t)&v24);
      sub_1DDA4B28C(&v24, (uint64_t)":SUBIFD", 7);
      std::ostream::operator<<();
      sub_1DDA4B5B8((uint64_t)v25, &v21);
      int v14 = *(char *)(a2 + 23);
      if (v14 >= 0) {
        uint64_t v15 = (const std::string::value_type *)a2;
      }
      else {
        uint64_t v15 = *(const std::string::value_type **)a2;
      }
      if (v14 >= 0) {
        std::string::size_type v16 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        std::string::size_type v16 = *(void *)(a2 + 8);
      }
      unsigned int v17 = std::string::insert(&v21, 0, v15, v16);
      long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
      std::string::size_type v23 = v17->__r_.__value_.__r.__words[2];
      *(_OWORD *)__p = v18;
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      (*(void (**)(uint64_t, void, void **))(*(void *)a1 + 704))(a1, 0, __p);
      if (SHIBYTE(v23) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v21.__r_.__value_.__l.__data_);
      }
      v29 += 4;
      uint64_t v24 = v20;
      *(std::__shared_weak_count **)((char *)&v25[-1] + *(void *)(v20 - 24)) = v8;
      v25[0] = (std::__shared_weak_count *)(MEMORY[0x1E4FBA470] + 16);
      if (v26 < 0) {
        operator delete(v25[8]);
      }
      ++v7;
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      MEMORY[0x1E01C3D40](&v27);
    }
    while (v6 != v7);
  }
  sub_1DDA1AA18(v30);
  return 1;
}

void sub_1DDA431B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,std::__shared_weak_count *a23)
{
  if (a23) {
    sub_1DDA18310(a23);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA4325C()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  unsigned int v4 = sub_1DDA419CC(v0, v1, &v8);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = &v9;
    do
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t *))(*(void *)v3 + 744))(v3, v2, v6);
      int v6 = (uint64_t *)((char *)v6 + 12);
      --v5;
    }
    while (v5);
  }
  return 1;
}

uint64_t sub_1DDA43314(uint64_t a1)
{
  sub_1DDA27D28(a1, &v3);
  int v5 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 48))(v3);
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 160))(a1, &v5);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return 1;
}

void sub_1DDA433AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_1DDA18310(a11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA433C4()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  unsigned int v4 = sub_1DDA419CC(v0, v1, &v8);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = &v9;
    do
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t *))(*(void *)v3 + 776))(v3, v2, v6);
      int v6 = (uint64_t *)((char *)v6 + 12);
      --v5;
    }
    while (v5);
  }
  return 1;
}

void sub_1DDA43480(uint64_t **a1, uint64_t a2, unsigned __int16 *a3)
{
  uint64_t v87 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = *(unsigned __int8 *)(a2 + 23);
  if ((v6 & 0x80u) == 0) {
    int v7 = (const std::string::value_type *)a2;
  }
  else {
    int v7 = *(const std::string::value_type **)a2;
  }
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *(void *)(a2 + 8);
  }
  if (v6)
  {
    unint64_t v8 = 0;
    do
    {
      int v9 = *(unsigned __int8 *)v7++;
      if (v9 == 58) {
        ++v8;
      }
      --v6;
    }
    while (v6);
    if (v8 >= 9)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
  }
  unsigned int v10 = *a3;
  if (v10 <= 0x13C)
  {
    switch(*a3)
    {
      case 0xFEu:
        int v13 = a3[1];
        BOOL v14 = v13 == 4 || v13 == 9;
        if (v14 && *((_DWORD *)a3 + 1) == 1)
        {
          int v11 = *((_DWORD *)a3 + 2);
          __str.__r_.__value_.__r.__words[0] = a2;
          uint64_t v12 = sub_1DDA4B72C(a1 + 64, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
          goto LABEL_263;
        }
        break;
      case 0x100u:
        int v23 = a3[1];
        if (v23 == 3)
        {
          if (*((_DWORD *)a3 + 1) == 1)
          {
            int v11 = sub_1DDA44F28((uint64_t)a3);
            __str.__r_.__value_.__r.__words[0] = a2;
            uint64_t v12 = sub_1DDA4B72C(a1 + 67, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
            goto LABEL_263;
          }
        }
        else if (v23 == 4 && *((_DWORD *)a3 + 1) == 1)
        {
          int v11 = *((_DWORD *)a3 + 2);
          __str.__r_.__value_.__r.__words[0] = a2;
          uint64_t v12 = sub_1DDA4B72C(a1 + 67, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
          goto LABEL_263;
        }
        break;
      case 0x101u:
        int v24 = a3[1];
        if (v24 == 3)
        {
          if (*((_DWORD *)a3 + 1) == 1)
          {
            int v11 = sub_1DDA44F28((uint64_t)a3);
            __str.__r_.__value_.__r.__words[0] = a2;
            uint64_t v12 = sub_1DDA4B72C(a1 + 70, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
            goto LABEL_263;
          }
        }
        else if (v24 == 4 && *((_DWORD *)a3 + 1) == 1)
        {
          int v11 = *((_DWORD *)a3 + 2);
          __str.__r_.__value_.__r.__words[0] = a2;
          uint64_t v12 = sub_1DDA4B72C(a1 + 70, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
          goto LABEL_263;
        }
        break;
      case 0x102u:
        if (a3[1] == 3)
        {
          memset(&__str, 0, sizeof(__str));
          if (!sub_1DDA44F6C((uint64_t)a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_)) {
            goto LABEL_208;
          }
          uint64_t v81 = a2;
          std::string::size_type v16 = (std::string *)(sub_1DDA4B960(a1 + 82, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v81) + 7);
          if (v16 == &__str) {
            goto LABEL_208;
          }
          goto LABEL_183;
        }
        break;
      case 0x103u:
        if (a3[1] - 5 >= 0xFFFFFFFE && *((_DWORD *)a3 + 1) == 1)
        {
          LODWORD(v81) = 0;
          sub_1DDA1B3CC(&__str, (unsigned int *)&v81);
          int v11 = sub_1DDA3F234((uint64_t)a3, (unsigned int *)&__str);
          __str.__r_.__value_.__r.__words[0] = a2;
          uint64_t v12 = sub_1DDA4B72C(a1 + 73, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
          goto LABEL_263;
        }
        break;
      case 0x106u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          LODWORD(v81) = 0;
          sub_1DDA1B3CC(&__str, (unsigned int *)&v81);
          int v11 = sub_1DDA3F234((uint64_t)a3, (unsigned int *)&__str);
          __str.__r_.__value_.__r.__words[0] = a2;
          uint64_t v12 = sub_1DDA4B72C(a1 + 79, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
          goto LABEL_263;
        }
        break;
      case 0x10Fu:
        if (a3[1] == 2)
        {
          memset(&__str, 0, sizeof(__str));
          if (sub_1DDA45530((uint64_t)a1, (uint64_t)a3, &__str, 1))
          {
            uint64_t v81 = a2;
            uint64_t v27 = sub_1DDA4BAFC(a1 + 129, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v81);
            std::string::operator=((std::string *)(v27 + 7), &__str);
          }
          goto LABEL_191;
        }
        break;
      case 0x110u:
        if (a3[1] == 2)
        {
          memset(&__str, 0, sizeof(__str));
          if (sub_1DDA45530((uint64_t)a1, (uint64_t)a3, &__str, 1))
          {
            uint64_t v81 = a2;
            unsigned int v28 = sub_1DDA4BAFC(a1 + 132, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v81);
            std::string::operator=((std::string *)(v28 + 7), &__str);
          }
          goto LABEL_191;
        }
        break;
      case 0x111u:
        if (a3[1] - 3 <= 1)
        {
          sub_1DDA27D28((uint64_t)a1, &__str);
          int v29 = sub_1DDA19CA4((uint64_t)__str.__r_.__value_.__l.__data_);
          if (__str.__r_.__value_.__l.__size_) {
            sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
          }
          memset(&__str, 0, sizeof(__str));
          if (!sub_1DDA44F6C((uint64_t)a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_)) {
            goto LABEL_208;
          }
          if (v29)
          {
            std::string::size_type v30 = __str.__r_.__value_.__r.__words[0];
            if (((__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) & 0x3FFFFFFFCLL) != 0)
            {
              uint64_t v31 = 0;
              uint64_t v32 = ((__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 2);
              do
              {
                LODWORD(v81) = v29;
                LODWORD(__src) = *sub_1DDA2A648((int *)&v81, (unsigned int *)(v30 + v31));
                int v33 = sub_1DDA456E8((unsigned int *)&__src);
                std::string::size_type v30 = __str.__r_.__value_.__r.__words[0];
                *(_DWORD *)(__str.__r_.__value_.__r.__words[0] + v31) = v33;
                v31 += 4;
                --v32;
              }
              while (v32);
            }
          }
          uint64_t v81 = a2;
          std::string::size_type v16 = (std::string *)(sub_1DDA4B960(a1 + 97, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v81) + 7);
          if (v16 == &__str) {
            goto LABEL_208;
          }
          goto LABEL_183;
        }
        break;
      case 0x112u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          LODWORD(v81) = 0;
          sub_1DDA1B3CC(&__str, (unsigned int *)&v81);
          int v11 = sub_1DDA3F234((uint64_t)a3, (unsigned int *)&__str);
          __str.__r_.__value_.__r.__words[0] = a2;
          uint64_t v12 = sub_1DDA4B72C(a1 + 88, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
          goto LABEL_263;
        }
        break;
      case 0x115u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          LODWORD(v81) = 0;
          sub_1DDA1B3CC(&__str, (unsigned int *)&v81);
          int v11 = sub_1DDA3F234((uint64_t)a3, (unsigned int *)&__str);
          __str.__r_.__value_.__r.__words[0] = a2;
          uint64_t v12 = sub_1DDA4B72C(a1 + 85, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
          goto LABEL_263;
        }
        break;
      case 0x116u:
        int v36 = a3[1];
        if (v36 == 3)
        {
          if (*((_DWORD *)a3 + 1) == 1)
          {
            int v11 = sub_1DDA44F28((uint64_t)a3);
            __str.__r_.__value_.__r.__words[0] = a2;
            uint64_t v12 = sub_1DDA4B72C(a1 + 91, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
            goto LABEL_263;
          }
        }
        else if (v36 == 4 && *((_DWORD *)a3 + 1) == 1)
        {
          int v11 = *((_DWORD *)a3 + 2);
          __str.__r_.__value_.__r.__words[0] = a2;
          uint64_t v12 = sub_1DDA4B72C(a1 + 91, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
          goto LABEL_263;
        }
        break;
      case 0x117u:
        if (a3[1] - 3 <= 1)
        {
          memset(&__str, 0, sizeof(__str));
          if (sub_1DDA44F6C((uint64_t)a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_))
          {
            uint64_t v81 = a2;
            std::string::size_type v16 = (std::string *)(sub_1DDA4B960(a1 + 100, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v81) + 7);
            if (v16 != &__str) {
LABEL_183:
            }
              sub_1DDA17E28((char *)v16, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 2);
          }
          goto LABEL_208;
        }
        break;
      case 0x11Cu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          LODWORD(v81) = 0;
          sub_1DDA1B3CC(&__str, (unsigned int *)&v81);
          int v11 = sub_1DDA3F234((uint64_t)a3, (unsigned int *)&__str);
          __str.__r_.__value_.__r.__words[0] = a2;
          uint64_t v12 = sub_1DDA4B72C(a1 + 94, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
LABEL_263:
          *((_DWORD *)v12 + 14) = v11;
        }
        break;
      default:
        return;
    }
  }
  else
  {
    if (*a3 <= 0x2BBu)
    {
      if (*a3 > 0x200u)
      {
        switch(*a3)
        {
          case 0x211u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0 && a3[1] == 5 && *((_DWORD *)a3 + 1) == 3)
            {
              memset(&__str, 0, sizeof(__str));
              if (!sub_1DDA4575C((uint64_t)a1, (uint64_t)a3, (uint64_t)&__str)) {
                goto LABEL_208;
              }
              uint64_t v81 = a2;
              std::string::size_type v16 = (std::string *)(sub_1DDA4B960(a1 + 135, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v81) + 7);
              if (v16 == &__str) {
                goto LABEL_208;
              }
              goto LABEL_183;
            }
            break;
          case 0x212u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0 && a3[1] == 3 && *((_DWORD *)a3 + 1) == 2)
            {
              memset(&__str, 0, sizeof(__str));
              if (!sub_1DDA45C20((uint64_t)a1, (uint64_t)a3, &__str.__r_.__value_.__l.__data_)) {
                goto LABEL_208;
              }
              uint64_t v81 = a2;
              uint64_t v15 = (std::string *)(sub_1DDA4B960(a1 + 138, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v81) + 7);
              if (v15 == &__str) {
                goto LABEL_208;
              }
              goto LABEL_37;
            }
            break;
          case 0x213u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0 && a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
            {
              __int16 v49 = sub_1DDA44F28((uint64_t)a3);
              __str.__r_.__value_.__r.__words[0] = a2;
              *((_WORD *)sub_1DDA4BC98(a1 + 141, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str) + 28) = v49;
            }
            break;
          case 0x214u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0 && a3[1] == 5 && *((_DWORD *)a3 + 1) == 6)
            {
              memset(&__str, 0, sizeof(__str));
              if (!sub_1DDA4575C((uint64_t)a1, (uint64_t)a3, (uint64_t)&__str)) {
                goto LABEL_208;
              }
              uint64_t v81 = a2;
              std::string::size_type v16 = (std::string *)(sub_1DDA4B960(a1 + 144, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v81) + 7);
              if (v16 == &__str) {
                goto LABEL_208;
              }
              goto LABEL_183;
            }
            break;
          default:
            if (v10 == 513)
            {
              if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
              {
                int v51 = sub_1DDA3CE7C((uint64_t)a3);
                sub_1DDA27D28((uint64_t)a1, &__str);
                LODWORD(__p[0]) = sub_1DDA19CA4((uint64_t)__str.__r_.__value_.__l.__data_);
                LODWORD(__src) = sub_1DDA456E8((unsigned int *)__p);
                LODWORD(v81) = v51;
                int v52 = *sub_1DDA47EF8(&v81, &__src);
                uint64_t v81 = a2;
                *((_DWORD *)sub_1DDA4B72C(a1 + 103, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v81) + 14) = v52;
                if (__str.__r_.__value_.__l.__size_) {
                  sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
                }
              }
            }
            else if (v10 == 514 && a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
            {
              int v11 = *((_DWORD *)a3 + 2);
              __str.__r_.__value_.__r.__words[0] = a2;
              uint64_t v12 = sub_1DDA4B72C(a1 + 106, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
              goto LABEL_263;
            }
            break;
        }
      }
      else
      {
        switch(*a3)
        {
          case 0x13Du:
            if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
            {
              LODWORD(v81) = 0;
              sub_1DDA1B3CC(&__str, (unsigned int *)&v81);
              int v11 = sub_1DDA3F234((uint64_t)a3, (unsigned int *)&__str);
              __str.__r_.__value_.__r.__words[0] = a2;
              uint64_t v12 = sub_1DDA4B72C(a1 + 76, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
              goto LABEL_263;
            }
            break;
          case 0x142u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0)
            {
              int v38 = a3[1];
              if (v38 == 3)
              {
                if (*((_DWORD *)a3 + 1) == 1)
                {
                  int v11 = sub_1DDA44F28((uint64_t)a3);
                  __str.__r_.__value_.__r.__words[0] = a2;
                  uint64_t v12 = sub_1DDA4B72C(a1 + 109, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
                  goto LABEL_263;
                }
              }
              else if (v38 == 4 && *((_DWORD *)a3 + 1) == 1)
              {
                int v11 = *((_DWORD *)a3 + 2);
                __str.__r_.__value_.__r.__words[0] = a2;
                uint64_t v12 = sub_1DDA4B72C(a1 + 109, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
                goto LABEL_263;
              }
            }
            break;
          case 0x143u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0)
            {
              int v39 = a3[1];
              if (v39 == 3)
              {
                if (*((_DWORD *)a3 + 1) == 1)
                {
                  int v11 = sub_1DDA44F28((uint64_t)a3);
                  __str.__r_.__value_.__r.__words[0] = a2;
                  uint64_t v12 = sub_1DDA4B72C(a1 + 112, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
                  goto LABEL_263;
                }
              }
              else if (v39 == 4 && *((_DWORD *)a3 + 1) == 1)
              {
                int v11 = *((_DWORD *)a3 + 2);
                __str.__r_.__value_.__r.__words[0] = a2;
                uint64_t v12 = sub_1DDA4B72C(a1 + 112, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
                goto LABEL_263;
              }
            }
            break;
          case 0x144u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0 && a3[1] == 4)
            {
              sub_1DDA27D28((uint64_t)a1, &__str);
              int v40 = sub_1DDA19CA4((uint64_t)__str.__r_.__value_.__l.__data_);
              if (__str.__r_.__value_.__l.__size_) {
                sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
              }
              memset(&__str, 0, sizeof(__str));
              if (!sub_1DDA44F6C((uint64_t)a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_)) {
                goto LABEL_208;
              }
              if (v40)
              {
                uint64_t v81 = (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 2;
                sub_1DDA18500(&__src, (unint64_t *)&v81);
                if (__src)
                {
                  uint64_t v41 = 0;
                  std::string::size_type v42 = __str.__r_.__value_.__r.__words[0];
                  uint64_t v43 = 4 * __src;
                  do
                  {
                    LODWORD(v81) = v40;
                    LODWORD(__src) = *sub_1DDA2A648((int *)&v81, (unsigned int *)(v42 + v41));
                    int v44 = sub_1DDA456E8((unsigned int *)&__src);
                    std::string::size_type v42 = __str.__r_.__value_.__r.__words[0];
                    *(_DWORD *)(__str.__r_.__value_.__r.__words[0] + v41) = v44;
                    v41 += 4;
                  }
                  while (v43 != v41);
                }
              }
              uint64_t v81 = a2;
              std::string::size_type v16 = (std::string *)(sub_1DDA4B960(a1 + 115, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v81) + 7);
              if (v16 == &__str) {
                goto LABEL_208;
              }
              goto LABEL_183;
            }
            break;
          case 0x145u:
            if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0 && a3[1] - 3 <= 1)
            {
              memset(&__str, 0, sizeof(__str));
              if (!sub_1DDA44F6C((uint64_t)a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_)) {
                goto LABEL_208;
              }
              uint64_t v81 = a2;
              std::string::size_type v16 = (std::string *)(sub_1DDA4B960(a1 + 118, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v81) + 7);
              if (v16 == &__str) {
                goto LABEL_208;
              }
              goto LABEL_183;
            }
            break;
          case 0x14Au:
            int v45 = a3[1];
            if (v45 == 4 || v45 == 13)
            {
              int v46 = (void (*)(void))(*a1)[90];
              v46();
            }
            break;
          default:
            return;
        }
      }
      return;
    }
    if (*a3 > 0x8768u)
    {
      if (*a3 > 0xC627u)
      {
        if (v10 == 50728)
        {
          if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0)
          {
            sub_1DDA27D28((uint64_t)a1, &v81);
            sub_1DDA3E944((uint64_t)a3, &v81, (void **)&__str.__r_.__value_.__l.__data_);
            if (v82) {
              sub_1DDA18310(v82);
            }
            std::string::size_type size = __str.__r_.__value_.__l.__size_;
            uint64_t v56 = (double *)__str.__r_.__value_.__r.__words[0];
            if (__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0] == 24)
            {
              if (__str.__r_.__value_.__r.__words[0] < __str.__r_.__value_.__l.__size_)
              {
                do
                {
                  double *v56 = 1.0 / *v56;
                  ++v56;
                }
                while ((unint64_t)v56 < size);
              }
              uint64_t v81 = a2;
              CGRect v58 = (std::string *)(sub_1DDA4B960(a1 + 18, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v81) + 7);
              uint64_t v56 = (double *)__str.__r_.__value_.__r.__words[0];
              if (v58 != &__str)
              {
                sub_1DDA25BB0((char *)v58, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 3);
                uint64_t v56 = (double *)__str.__r_.__value_.__r.__words[0];
              }
            }
            if (v56)
            {
              __str.__r_.__value_.__l.__size_ = (std::string::size_type)v56;
              float v50 = v56;
              goto LABEL_210;
            }
          }
        }
        else if (v10 == 50933)
        {
          int v21 = a3[1];
          if (v21 == 7 || v21 == 4)
          {
            sub_1DDA27D28((uint64_t)a1, &__str);
            if ((**(uint64_t (***)(std::string::size_type))__str.__r_.__value_.__l.__data_)(__str.__r_.__value_.__r.__words[0]))
            {
              BOOL v22 = 1;
            }
            else
            {
              int v59 = sub_1DDA3CE7C((uint64_t)a3);
              LODWORD(__src) = sub_1DDA41E28((uint64_t)a3);
              LODWORD(v81) = v59;
              unsigned int v60 = *sub_1DDA47EF8(&v81, &__src);
              sub_1DDA27D28((uint64_t)a1, &v81);
              BOOL v22 = v60 < (*(unsigned int (**)(uint64_t))(*(void *)v81 + 16))(v81);
              if (v82) {
                sub_1DDA18310(v82);
              }
            }
            if (__str.__r_.__value_.__l.__size_) {
              sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
            }
            if (!v22)
            {
              ((void (*)(uint64_t **, uint64_t))(*a1)[23])(a1, 1);
              return;
            }
            uint64_t v81 = 0;
            uint64_t v82 = 0;
            uint64_t v83 = 0;
            int v61 = sub_1DDA44F6C((uint64_t)a1, (uint64_t)a3, (void **)&v81);
            id v62 = (int *)v81;
            if (v61)
            {
              uint64_t v63 = v82;
              if ((std::__shared_weak_count *)v81 != v82)
              {
                int v64 = 0;
                std::string::size_type v65 = *MEMORY[0x1E4FBA418];
                std::string::size_type v66 = *(void *)(MEMORY[0x1E4FBA418] + 24);
                do
                {
                  sub_1DDA27D28((uint64_t)a1, &__str);
                  sub_1DDA18410((int *)__p, v62);
                  sub_1DDA49398((uint64_t)&__src, (uint64_t *)&__str, __p);
                  if (__str.__r_.__value_.__l.__size_) {
                    sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
                  }
                  sub_1DDA410D0((uint64_t)&__str);
                  sub_1DDA4B28C(&__str, (uint64_t)":CAMERAPROFILES", 15);
                  uint64_t v67 = (void *)std::ostream::operator<<();
                  sub_1DDA4B28C(v67, (uint64_t)":", 1);
                  sub_1DDA4B5B8((uint64_t)&__str.__r_.__value_.__l.__size_, &v74);
                  int v68 = *(char *)(a2 + 23);
                  if (v68 >= 0) {
                    uint64_t v69 = (const std::string::value_type *)a2;
                  }
                  else {
                    uint64_t v69 = *(const std::string::value_type **)a2;
                  }
                  if (v68 >= 0) {
                    std::string::size_type v70 = *(unsigned __int8 *)(a2 + 23);
                  }
                  else {
                    std::string::size_type v70 = *(void *)(a2 + 8);
                  }
                  uint64_t v71 = std::string::insert(&v74, 0, v69, v70);
                  long long v72 = *(_OWORD *)&v71->__r_.__value_.__l.__data_;
                  std::string::size_type v76 = v71->__r_.__value_.__r.__words[2];
                  *(_OWORD *)__p = v72;
                  v71->__r_.__value_.__l.__size_ = 0;
                  v71->__r_.__value_.__r.__words[2] = 0;
                  v71->__r_.__value_.__r.__words[0] = 0;
                  ((void (*)(uint64_t **, void **, uint64_t))(*a1)[84])(a1, __p, 17234);
                  if (SHIBYTE(v76) < 0) {
                    operator delete(__p[0]);
                  }
                  if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(v74.__r_.__value_.__l.__data_);
                  }
                  __str.__r_.__value_.__r.__words[0] = v65;
                  *(std::string::size_type *)((char *)__str.__r_.__value_.__r.__words + *(void *)(v65 - 24)) = v66;
                  __str.__r_.__value_.__l.__size_ = MEMORY[0x1E4FBA470] + 16;
                  if (v79 < 0) {
                    operator delete(v78);
                  }
                  std::streambuf::~streambuf();
                  std::ostream::~ostream();
                  MEMORY[0x1E01C3D40](&v80);
                  sub_1DDA49424((uint64_t)&__src);
                  ++v62;
                  ++v64;
                }
                while (v62 != (int *)v63);
                id v62 = (int *)v81;
              }
            }
            if (v62)
            {
              uint64_t v82 = (std::__shared_weak_count *)v62;
              float v50 = v62;
              goto LABEL_210;
            }
          }
        }
      }
      else if (v10 == 34665)
      {
        if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
        {
          sub_1DDA1A880(&__str, ":EXIF");
          sub_1DDA27D28((uint64_t)a1, &__src);
          LODWORD(v74.__r_.__value_.__l.__data_) = sub_1DDA3CE7C((uint64_t)a3);
          sub_1DDA1B4D8((int *)__p, (int *)&v74);
          sub_1DDA1A94C(&v81, (uint64_t *)&__src, (uint64_t)__p, 0);
          if (v85) {
            sub_1DDA18310(v85);
          }
          sub_1DDA463E4((const void **)a2, (const void **)&__str.__r_.__value_.__l.__data_, (uint64_t)&__src);
          ((void (*)(uint64_t **, long long **))(*a1)[92])(a1, &__src);
          if (v86 < 0) {
            operator delete(__src);
          }
          sub_1DDA1AA18(&v81);
LABEL_191:
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
          {
            float v50 = (void *)__str.__r_.__value_.__r.__words[0];
            goto LABEL_210;
          }
        }
      }
      else if (v10 == 50717 && (((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0)
      {
        uint64_t v81 = 0;
        sub_1DDA27D28((uint64_t)a1, &__str);
        char v18 = sub_1DDA3E640((uint64_t)a3, (double *)&v81, (uint64_t *)&__str, v17);
        if (__str.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
        }
        if (v18)
        {
          __src = (long long *)v81;
          __str.__r_.__value_.__r.__words[0] = a2;
          uint64_t v19 = sub_1DDA4B960(a1 + 30, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
          sub_1DDA25BB0((char *)v19 + 56, (char *)&__src, (uint64_t)&v85, 1uLL);
        }
      }
    }
    else if (*a3 > 0x828Du)
    {
      if (v10 == 33422)
      {
        if (((uint64_t (*)(uint64_t **))(*a1)[7])(a1)) {
          return;
        }
        memset(&__str, 0, sizeof(__str));
        uint64_t v81 = 0;
        uint64_t v82 = 0;
        uint64_t v83 = 0;
        int v53 = a3[1];
        if (v53 == 1 || v53 == 7)
        {
          if (sub_1DDA45FB8((uint64_t)(a1 + 121), (void **)a2, (char *)&__str)
            && __str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0] == 4)
          {
            int v54 = *(unsigned __int16 *)__str.__r_.__value_.__l.__data_;
            LODWORD(__p[0]) = *(unsigned __int16 *)(__str.__r_.__value_.__r.__words[0] + 2);
            LODWORD(__src) = v54;
            if (*sub_1DDA4BDD8(&__src, (unsigned int *)__p) == *((_DWORD *)a3 + 1))
            {
              if (sub_1DDA46020((uint64_t)a1, (uint64_t)a3, (unint64_t *)&v81))
              {
                __src = (long long *)a2;
                uint64_t v55 = sub_1DDA4B960(a1 + 124, (void **)a2, (uint64_t)&unk_1DDBFB044, &__src) + 7;
                if (v55 != &v81) {
                  sub_1DDA49578(v55, (char *)v81, (char *)v82, (unint64_t)v82 - v81);
                }
              }
            }
          }
          if (v81)
          {
            uint64_t v82 = (std::__shared_weak_count *)v81;
            operator delete((void *)v81);
          }
        }
LABEL_208:
        float v50 = (void *)__str.__r_.__value_.__r.__words[0];
        if (!__str.__r_.__value_.__r.__words[0]) {
          return;
        }
        __str.__r_.__value_.__l.__size_ = __str.__r_.__value_.__r.__words[0];
LABEL_210:
        operator delete(v50);
        return;
      }
      if (v10 == 33434
        && (((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0
        && a3[1] == 5
        && *((_DWORD *)a3 + 1) == 1)
      {
        LODWORD(v81) = 0;
        if (sub_1DDA464B0((uint64_t)a1, (uint64_t)a3, (float *)&v81))
        {
          float v20 = *(float *)&v81;
          __str.__r_.__value_.__r.__words[0] = a2;
          *((double *)sub_1DDA4BE58(a1 + 36, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str) + 7) = v20;
        }
      }
    }
    else
    {
      if (v10 != 700)
      {
        if (v10 != 33421
          || (((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) != 0
          || a3[1] != 3
          || *((_DWORD *)a3 + 1) != 2)
        {
          return;
        }
        sub_1DDA27D28((uint64_t)a1, &v81);
        sub_1DDA3ED68((uint64_t)a3, &v81, (uint64_t)&__str);
        if (v82) {
          sub_1DDA18310(v82);
        }
        uint64_t v81 = a2;
        uint64_t v15 = (std::string *)(sub_1DDA4B960(a1 + 121, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v81) + 7);
        if (v15 != &__str) {
LABEL_37:
        }
          sub_1DDA49474((char *)v15, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 1);
        goto LABEL_208;
      }
      if ((((uint64_t (*)(uint64_t **))(*a1)[7])(a1) & 1) == 0 && a3[1] == 1)
      {
        uint64_t v48 = *((unsigned int *)a3 + 1);
        uint64_t v47 = *((unsigned int *)a3 + 2);
        sub_1DDAF91FC((xmlChar *)a1, a2, v47, v48);
      }
    }
  }
}

void sub_1DDA44CA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA44F28(uint64_t a1)
{
  unsigned int v3 = 0;
  sub_1DDA1B3CC(&v4, &v3);
  return sub_1DDA3F234(a1, &v4);
}

uint64_t sub_1DDA44F6C(uint64_t a1, uint64_t a2, void **a3)
{
  sub_1DDA27D28(a1, &v68);
  unsigned int v6 = (*(uint64_t (**)(unint64_t))(*(void *)v68 + 16))(v68);
  unsigned int v7 = sub_1DDA41E28(a2);
  if (v69) {
    sub_1DDA18310(v69);
  }
  if (v6 < v7)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  int v8 = *(unsigned __int16 *)(a2 + 2);
  if (v8 == 3)
  {
    sub_1DDA490A4(a3, *(unsigned int *)(a2 + 4));
    a3[1] = *a3;
    unsigned int v23 = *(_DWORD *)(a2 + 4);
    if (v23 < 3)
    {
      unint64_t v68 = 0;
      if (v23)
      {
        do
        {
          sub_1DDA18500(&v66, &v68);
          int v41 = sub_1DDA3F234(a2, (unsigned int *)&v66);
          int v42 = v41;
          int v44 = (char *)a3[1];
          unint64_t v43 = (unint64_t)a3[2];
          if ((unint64_t)v44 >= v43)
          {
            int v46 = (char *)*a3;
            uint64_t v47 = (v44 - (unsigned char *)*a3) >> 2;
            unint64_t v48 = v47 + 1;
            if ((unint64_t)(v47 + 1) >> 62) {
              sub_1DDA17F78();
            }
            uint64_t v49 = v43 - (void)v46;
            if (v49 >> 1 > v48) {
              unint64_t v48 = v49 >> 1;
            }
            if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v50 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v50 = v48;
            }
            if (v50)
            {
              int v51 = (char *)sub_1DDA17F90((uint64_t)(a3 + 2), v50);
              int v46 = (char *)*a3;
              int v44 = (char *)a3[1];
            }
            else
            {
              int v51 = 0;
            }
            int v52 = &v51[4 * v47];
            *(_DWORD *)int v52 = v42;
            int v45 = v52 + 4;
            while (v44 != v46)
            {
              int v53 = *((_DWORD *)v44 - 1);
              v44 -= 4;
              *((_DWORD *)v52 - 1) = v53;
              v52 -= 4;
            }
            *a3 = v52;
            a3[1] = v45;
            a3[2] = &v51[4 * v50];
            if (v46) {
              operator delete(v46);
            }
          }
          else
          {
            *(_DWORD *)int v44 = v41;
            int v45 = v44 + 4;
          }
          a3[1] = v45;
          ++v68;
        }
        while (v68 < *(unsigned int *)(a2 + 4));
      }
      return 1;
    }
    sub_1DDA27D28(a1, &v66);
    int v64 = sub_1DDA3CE7C(a2);
    sub_1DDA1B4D8(&v65, &v64);
    sub_1DDA1A94C((uint64_t *)&v68, &v66, (uint64_t)&v65, 0);
    if (v67) {
      sub_1DDA18310(v67);
    }
    if (*(_DWORD *)(a2 + 4))
    {
      unint64_t v24 = 0;
      do
      {
        sub_1DDA27D28(a1, &v66);
        int v25 = sub_1DDA19E68(v66);
        if (v67) {
          sub_1DDA18310(v67);
        }
        uint64_t v27 = (char *)a3[1];
        unint64_t v26 = (unint64_t)a3[2];
        if ((unint64_t)v27 >= v26)
        {
          int v29 = (char *)*a3;
          uint64_t v30 = (v27 - (unsigned char *)*a3) >> 2;
          unint64_t v31 = v30 + 1;
          if ((unint64_t)(v30 + 1) >> 62) {
            sub_1DDA17F78();
          }
          uint64_t v32 = v26 - (void)v29;
          if (v32 >> 1 > v31) {
            unint64_t v31 = v32 >> 1;
          }
          if ((unint64_t)v32 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v33 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v33 = v31;
          }
          if (v33)
          {
            uint64_t v34 = (char *)sub_1DDA17F90((uint64_t)(a3 + 2), v33);
            int v29 = (char *)*a3;
            uint64_t v27 = (char *)a3[1];
          }
          else
          {
            uint64_t v34 = 0;
          }
          uint64_t v35 = &v34[4 * v30];
          *(_DWORD *)uint64_t v35 = v25;
          unsigned int v28 = v35 + 4;
          while (v27 != v29)
          {
            int v36 = *((_DWORD *)v27 - 1);
            v27 -= 4;
            *((_DWORD *)v35 - 1) = v36;
            v35 -= 4;
          }
          *a3 = v35;
          a3[1] = v28;
          a3[2] = &v34[4 * v33];
          if (v29) {
            operator delete(v29);
          }
        }
        else
        {
          *(_DWORD *)uint64_t v27 = v25;
          unsigned int v28 = v27 + 4;
        }
        a3[1] = v28;
        ++v24;
      }
      while (v24 < *(unsigned int *)(a2 + 4));
    }
  }
  else
  {
    if (v8 != 4) {
      return 0;
    }
    sub_1DDA490A4(a3, *(unsigned int *)(a2 + 4));
    int v9 = *a3;
    a3[1] = *a3;
    if (*(_DWORD *)(a2 + 4) < 2u)
    {
      int v38 = *(_DWORD *)(a2 + 8);
      unint64_t v39 = (unint64_t)a3[2];
      if ((unint64_t)v9 >= v39)
      {
        uint64_t v54 = v39 - (void)v9;
        uint64_t v55 = v54 >> 1;
        if ((unint64_t)(v54 >> 1) <= 1) {
          uint64_t v55 = 1;
        }
        if ((unint64_t)v54 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v56 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v56 = v55;
        }
        uint64_t v57 = (char *)sub_1DDA17F90((uint64_t)(a3 + 2), v56);
        CGRect v58 = (char *)*a3;
        int v59 = (char *)a3[1];
        int v61 = &v57[4 * v60];
        *(_DWORD *)uint64_t v57 = v38;
        int v40 = v57 + 4;
        while (v59 != v58)
        {
          int v62 = *((_DWORD *)v59 - 1);
          v59 -= 4;
          *((_DWORD *)v57 - 1) = v62;
          v57 -= 4;
        }
        *a3 = v57;
        a3[1] = v40;
        a3[2] = v61;
        if (v58) {
          operator delete(v58);
        }
      }
      else
      {
        *int v9 = v38;
        int v40 = (char *)(v9 + 1);
      }
      a3[1] = v40;
      return 1;
    }
    sub_1DDA27D28(a1, &v66);
    int v64 = sub_1DDA3CE7C(a2);
    sub_1DDA1B4D8(&v65, &v64);
    sub_1DDA1A94C((uint64_t *)&v68, &v66, (uint64_t)&v65, 0);
    if (v67) {
      sub_1DDA18310(v67);
    }
    if (*(_DWORD *)(a2 + 4))
    {
      unint64_t v10 = 0;
      do
      {
        sub_1DDA27D28(a1, &v66);
        int v11 = sub_1DDA19EC8(v66);
        if (v67) {
          sub_1DDA18310(v67);
        }
        int v13 = (char *)a3[1];
        unint64_t v12 = (unint64_t)a3[2];
        if ((unint64_t)v13 >= v12)
        {
          uint64_t v15 = (char *)*a3;
          uint64_t v16 = (v13 - (unsigned char *)*a3) >> 2;
          unint64_t v17 = v16 + 1;
          if ((unint64_t)(v16 + 1) >> 62) {
            sub_1DDA17F78();
          }
          uint64_t v18 = v12 - (void)v15;
          if (v18 >> 1 > v17) {
            unint64_t v17 = v18 >> 1;
          }
          if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v19 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v19 = v17;
          }
          if (v19)
          {
            float v20 = (char *)sub_1DDA17F90((uint64_t)(a3 + 2), v19);
            uint64_t v15 = (char *)*a3;
            int v13 = (char *)a3[1];
          }
          else
          {
            float v20 = 0;
          }
          int v21 = &v20[4 * v16];
          *(_DWORD *)int v21 = v11;
          BOOL v14 = v21 + 4;
          while (v13 != v15)
          {
            int v22 = *((_DWORD *)v13 - 1);
            v13 -= 4;
            *((_DWORD *)v21 - 1) = v22;
            v21 -= 4;
          }
          *a3 = v21;
          a3[1] = v14;
          a3[2] = &v20[4 * v19];
          if (v15) {
            operator delete(v15);
          }
        }
        else
        {
          *(_DWORD *)int v13 = v11;
          BOOL v14 = v13 + 4;
        }
        a3[1] = v14;
        ++v10;
      }
      while (v10 < *(unsigned int *)(a2 + 4));
    }
  }
  sub_1DDA1AA18((uint64_t *)&v68);
  return 1;
}

void sub_1DDA45494(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, char a12, uint64_t a13)
{
  if (a11) {
    sub_1DDA18310(a11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA45530(uint64_t a1, uint64_t a2, std::string *a3, int a4)
{
  memset(&__str, 0, sizeof(__str));
  unsigned int v7 = *(_DWORD *)(a2 + 4);
  if (v7 <= 4)
  {
    if (v7)
    {
      unsigned int v11 = 0;
      do
      {
        LODWORD(v18[0]) = v11;
        if (!sub_1DDA49028(a2, (unsigned int *)v18)) {
          break;
        }
        LODWORD(v18[0]) = v11;
        std::string::value_type v12 = sub_1DDA49028(a2, (unsigned int *)v18);
        std::string::push_back(&__str, v12);
        ++v11;
      }
      while (v11 < *(_DWORD *)(a2 + 4));
    }
  }
  else
  {
    sub_1DDA27D28(a1, &v16);
    int v14 = sub_1DDA3CE7C(a2);
    sub_1DDA1B4D8(&v15, &v14);
    sub_1DDA1A94C(v18, &v16, (uint64_t)&v15, 0);
    if (v17) {
      sub_1DDA18310(v17);
    }
    sub_1DDA27D28(a1, &v16);
    int v15 = *(_DWORD *)(a2 + 4);
    BOOL v9 = sub_1DDA1A0CC(v16, (unsigned int *)&v15, (uint64_t)&__str);
    if (v17) {
      sub_1DDA18310(v17);
    }
    sub_1DDA1AA18(v18);
    if (!v9)
    {
      uint64_t v10 = 0;
      goto LABEL_15;
    }
  }
  if (a4) {
    sub_1DDA7B0E4(&__str);
  }
  std::string::operator=(a3, &__str);
  uint64_t v10 = 1;
LABEL_15:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_1DDA45680(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA456E8(unsigned int *a1)
{
  uint64_t result = *a1;
  if (result != (int)result)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA45748(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA4575C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DDA27D28(a1, &v45);
  unsigned int v6 = (*(uint64_t (**)(uint64_t))(*(void *)v45 + 16))(v45);
  unsigned int v7 = sub_1DDA41E28(a2);
  if (v46) {
    sub_1DDA18310(v46);
  }
  if (v6 < v7)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  int v8 = *(unsigned __int16 *)(a2 + 2);
  if (v8 == 10)
  {
    sub_1DDA27D28(a1, &v43);
    int v41 = sub_1DDA3CE7C(a2);
    sub_1DDA1B4D8(&v42, &v41);
    sub_1DDA1A94C(&v45, &v43, (uint64_t)&v42, 0);
    if (v44) {
      sub_1DDA18310(v44);
    }
    sub_1DDA4914C((void **)a3, *(unsigned int *)(a2 + 4));
    *(void *)(a3 + 8) = *(void *)a3;
    if (*(_DWORD *)(a2 + 4))
    {
      unint64_t v24 = 0;
      do
      {
        sub_1DDA27D28(a1, &v43);
        int v25 = sub_1DDA19EC8(v43);
        if (v44) {
          sub_1DDA18310(v44);
        }
        sub_1DDA27D28(a1, &v43);
        int v26 = sub_1DDA19EC8(v43);
        if (v44) {
          sub_1DDA18310(v44);
        }
        float v27 = (double)v25 / (double)v26;
        int v29 = *(float **)(a3 + 8);
        unint64_t v28 = *(void *)(a3 + 16);
        if ((unint64_t)v29 >= v28)
        {
          unint64_t v31 = *(float **)a3;
          uint64_t v32 = ((uint64_t)v29 - *(void *)a3) >> 2;
          unint64_t v33 = v32 + 1;
          if ((unint64_t)(v32 + 1) >> 62) {
            sub_1DDA17F78();
          }
          uint64_t v34 = v28 - (void)v31;
          if (v34 >> 1 > v33) {
            unint64_t v33 = v34 >> 1;
          }
          if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v35 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v35 = v33;
          }
          if (v35)
          {
            int v36 = (char *)sub_1DDA17F90(a3 + 16, v35);
            unint64_t v31 = *(float **)a3;
            int v29 = *(float **)(a3 + 8);
          }
          else
          {
            int v36 = 0;
          }
          uint64_t v37 = (float *)&v36[4 * v32];
          float *v37 = v27;
          uint64_t v30 = v37 + 1;
          while (v29 != v31)
          {
            int v38 = *((_DWORD *)v29-- - 1);
            *((_DWORD *)v37-- - 1) = v38;
          }
          *(void *)a3 = v37;
          *(void *)(a3 + 8) = v30;
          *(void *)(a3 + 16) = &v36[4 * v35];
          if (v31) {
            operator delete(v31);
          }
        }
        else
        {
          *int v29 = v27;
          uint64_t v30 = v29 + 1;
        }
        *(void *)(a3 + 8) = v30;
        ++v24;
      }
      while (v24 < *(unsigned int *)(a2 + 4));
    }
    goto LABEL_57;
  }
  if (v8 == 5)
  {
    sub_1DDA27D28(a1, &v43);
    int v41 = sub_1DDA3CE7C(a2);
    sub_1DDA1B4D8(&v42, &v41);
    sub_1DDA1A94C(&v45, &v43, (uint64_t)&v42, 0);
    if (v44) {
      sub_1DDA18310(v44);
    }
    sub_1DDA4914C((void **)a3, *(unsigned int *)(a2 + 4));
    *(void *)(a3 + 8) = *(void *)a3;
    if (*(_DWORD *)(a2 + 4))
    {
      unint64_t v9 = 0;
      do
      {
        sub_1DDA27D28(a1, &v43);
        unsigned int v10 = sub_1DDA19EC8(v43);
        if (v44) {
          sub_1DDA18310(v44);
        }
        sub_1DDA27D28(a1, &v43);
        unsigned int v11 = sub_1DDA19EC8(v43);
        if (v44) {
          sub_1DDA18310(v44);
        }
        float v12 = (double)v10 / (double)v11;
        int v14 = *(float **)(a3 + 8);
        unint64_t v13 = *(void *)(a3 + 16);
        if ((unint64_t)v14 >= v13)
        {
          uint64_t v16 = *(float **)a3;
          uint64_t v17 = ((uint64_t)v14 - *(void *)a3) >> 2;
          unint64_t v18 = v17 + 1;
          if ((unint64_t)(v17 + 1) >> 62) {
            sub_1DDA17F78();
          }
          uint64_t v19 = v13 - (void)v16;
          if (v19 >> 1 > v18) {
            unint64_t v18 = v19 >> 1;
          }
          if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v20 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v20 = v18;
          }
          if (v20)
          {
            int v21 = (char *)sub_1DDA17F90(a3 + 16, v20);
            uint64_t v16 = *(float **)a3;
            int v14 = *(float **)(a3 + 8);
          }
          else
          {
            int v21 = 0;
          }
          int v22 = (float *)&v21[4 * v17];
          float *v22 = v12;
          int v15 = v22 + 1;
          while (v14 != v16)
          {
            int v23 = *((_DWORD *)v14-- - 1);
            *((_DWORD *)v22-- - 1) = v23;
          }
          *(void *)a3 = v22;
          *(void *)(a3 + 8) = v15;
          *(void *)(a3 + 16) = &v21[4 * v20];
          if (v16) {
            operator delete(v16);
          }
        }
        else
        {
          float *v14 = v12;
          int v15 = v14 + 1;
        }
        *(void *)(a3 + 8) = v15;
        ++v9;
      }
      while (v9 < *(unsigned int *)(a2 + 4));
    }
LABEL_57:
    sub_1DDA1AA18(&v45);
    return 1;
  }
  return 0;
}

void sub_1DDA45B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1DDA1AA18((uint64_t *)va);
  _Unwind_Resume(a1);
}

BOOL sub_1DDA45C20(uint64_t a1, uint64_t a2, char **a3)
{
  sub_1DDA27D28(a1, &v44);
  unsigned int v6 = (*(uint64_t (**)(unint64_t))(*(void *)v44 + 16))(v44);
  unsigned int v7 = sub_1DDA41E28(a2);
  if (v45) {
    sub_1DDA18310(v45);
  }
  if (v6 < v7)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  int v8 = *(unsigned __int16 *)(a2 + 2);
  if (v8 == 3)
  {
    a3[1] = *a3;
    unsigned int v9 = *(_DWORD *)(a2 + 4);
    if (v9 < 3)
    {
      unint64_t v44 = 0;
      if (v9)
      {
        do
        {
          sub_1DDA18500(&v42, &v44);
          __int16 v24 = sub_1DDA3F234(a2, (unsigned int *)&v42);
          __int16 v25 = v24;
          float v27 = a3[1];
          unint64_t v26 = (unint64_t)a3[2];
          if ((unint64_t)v27 >= v26)
          {
            int v29 = *a3;
            uint64_t v30 = v27 - *a3;
            if (v30 <= -3) {
              sub_1DDA17F78();
            }
            uint64_t v31 = v30 >> 1;
            unint64_t v32 = v26 - (void)v29;
            if (v32 <= (v30 >> 1) + 1) {
              unint64_t v33 = v31 + 1;
            }
            else {
              unint64_t v33 = v32;
            }
            if (v32 >= 0x7FFFFFFFFFFFFFFELL) {
              uint64_t v34 = 0x7FFFFFFFFFFFFFFFLL;
            }
            else {
              uint64_t v34 = v33;
            }
            if (v34)
            {
              unint64_t v35 = (char *)sub_1DDA1AD0C((uint64_t)(a3 + 2), v34);
              int v29 = *a3;
              float v27 = a3[1];
            }
            else
            {
              unint64_t v35 = 0;
            }
            int v36 = &v35[2 * v31];
            *(_WORD *)int v36 = v25;
            unint64_t v28 = v36 + 2;
            while (v27 != v29)
            {
              __int16 v37 = *((_WORD *)v27 - 1);
              v27 -= 2;
              *((_WORD *)v36 - 1) = v37;
              v36 -= 2;
            }
            *a3 = v36;
            a3[1] = v28;
            a3[2] = &v35[2 * v34];
            if (v29) {
              operator delete(v29);
            }
          }
          else
          {
            *(_WORD *)float v27 = v24;
            unint64_t v28 = v27 + 2;
          }
          a3[1] = v28;
          ++v44;
        }
        while (v44 < *(unsigned int *)(a2 + 4));
      }
    }
    else
    {
      sub_1DDA27D28(a1, &v42);
      int v40 = sub_1DDA3CE7C(a2);
      sub_1DDA1B4D8(&v41, &v40);
      sub_1DDA1A94C((uint64_t *)&v44, &v42, (uint64_t)&v41, 0);
      if (v43) {
        sub_1DDA18310(v43);
      }
      if (*(_DWORD *)(a2 + 4))
      {
        unint64_t v10 = 0;
        do
        {
          sub_1DDA27D28(a1, &v42);
          __int16 v11 = sub_1DDA19E68(v42);
          if (v43) {
            sub_1DDA18310(v43);
          }
          unint64_t v13 = a3[1];
          unint64_t v12 = (unint64_t)a3[2];
          if ((unint64_t)v13 >= v12)
          {
            int v15 = *a3;
            uint64_t v16 = v13 - *a3;
            if (v16 <= -3) {
              sub_1DDA17F78();
            }
            uint64_t v17 = v16 >> 1;
            unint64_t v18 = v12 - (void)v15;
            if (v18 <= (v16 >> 1) + 1) {
              unint64_t v19 = v17 + 1;
            }
            else {
              unint64_t v19 = v18;
            }
            if (v18 >= 0x7FFFFFFFFFFFFFFELL) {
              uint64_t v20 = 0x7FFFFFFFFFFFFFFFLL;
            }
            else {
              uint64_t v20 = v19;
            }
            if (v20)
            {
              int v21 = (char *)sub_1DDA1AD0C((uint64_t)(a3 + 2), v20);
              int v15 = *a3;
              unint64_t v13 = a3[1];
            }
            else
            {
              int v21 = 0;
            }
            int v22 = &v21[2 * v17];
            *(_WORD *)int v22 = v11;
            int v14 = v22 + 2;
            while (v13 != v15)
            {
              __int16 v23 = *((_WORD *)v13 - 1);
              v13 -= 2;
              *((_WORD *)v22 - 1) = v23;
              v22 -= 2;
            }
            *a3 = v22;
            a3[1] = v14;
            a3[2] = &v21[2 * v20];
            if (v15) {
              operator delete(v15);
            }
          }
          else
          {
            *(_WORD *)unint64_t v13 = v11;
            int v14 = v13 + 2;
          }
          a3[1] = v14;
          ++v10;
        }
        while (v10 < *(unsigned int *)(a2 + 4));
      }
      sub_1DDA1AA18((uint64_t *)&v44);
    }
  }
  return v8 == 3;
}

void sub_1DDA45F4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, char a12, uint64_t a13)
{
  if (a11) {
    sub_1DDA18310(a11);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA45FB8(uint64_t a1, void **a2, char *a3)
{
  uint64_t v5 = sub_1DDA2A530(a1, a2);
  unsigned int v6 = v5;
  unsigned int v7 = (void **)(a1 + 8);
  if (v7 != v5 && v5 + 7 != (void **)a3) {
    sub_1DDA49474(a3, (char *)v5[7], (uint64_t)v5[8], ((unsigned char *)v5[8] - (unsigned char *)v5[7]) >> 1);
  }
  return v7 != v6;
}

uint64_t sub_1DDA46020(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1DDA27D28(a1, &v47);
  unsigned int v6 = (*(uint64_t (**)(unint64_t))(*(void *)v47 + 16))(v47);
  unsigned int v7 = sub_1DDA41E28(a2);
  if (v48) {
    sub_1DDA18310(v48);
  }
  if (v6 < v7)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  int v8 = *(unsigned __int16 *)(a2 + 2);
  if (v8 != 7 && v8 != 1) {
    return 0;
  }
  sub_1DDA4763C(a3, *(unsigned int *)(a2 + 4));
  a3[1] = *a3;
  unsigned int v9 = *(_DWORD *)(a2 + 4);
  if (v9 < 5)
  {
    unint64_t v47 = 0;
    if (v9)
    {
      do
      {
        sub_1DDA18500(&v45, &v47);
        char v26 = sub_1DDA49028(a2, (unsigned int *)&v45);
        char v27 = v26;
        int v29 = (unsigned char *)a3[1];
        unint64_t v28 = a3[2];
        if ((unint64_t)v29 >= v28)
        {
          unint64_t v31 = *a3;
          unint64_t v32 = &v29[-*a3];
          unint64_t v33 = (unint64_t)(v32 + 1);
          if ((uint64_t)(v32 + 1) < 0) {
            sub_1DDA17F78();
          }
          unint64_t v34 = v28 - v31;
          if (2 * v34 > v33) {
            unint64_t v33 = 2 * v34;
          }
          if (v34 >= 0x3FFFFFFFFFFFFFFFLL) {
            size_t v35 = 0x7FFFFFFFFFFFFFFFLL;
          }
          else {
            size_t v35 = v33;
          }
          if (v35) {
            int v36 = (char *)operator new(v35);
          }
          else {
            int v36 = 0;
          }
          __int16 v37 = &v32[(void)v36];
          int v38 = &v32[(void)v36];
          *int v38 = v27;
          uint64_t v30 = v38 + 1;
          if (v29 != (unsigned char *)v31)
          {
            unint64_t v39 = &v29[~v31];
            do
            {
              char v40 = *--v29;
              (v39--)[(void)v36] = v40;
            }
            while (v29 != (unsigned char *)v31);
            int v29 = (unsigned char *)*a3;
            __int16 v37 = v36;
          }
          *a3 = (unint64_t)v37;
          a3[1] = (unint64_t)v30;
          a3[2] = (unint64_t)&v36[v35];
          if (v29) {
            operator delete(v29);
          }
        }
        else
        {
          *int v29 = v26;
          uint64_t v30 = v29 + 1;
        }
        a3[1] = (unint64_t)v30;
        ++v47;
      }
      while (v47 < *(unsigned int *)(a2 + 4));
    }
  }
  else
  {
    sub_1DDA27D28(a1, &v45);
    int v43 = sub_1DDA3CE7C(a2);
    sub_1DDA1B4D8(&v44, &v43);
    sub_1DDA1A94C((uint64_t *)&v47, &v45, (uint64_t)&v44, 0);
    if (v46) {
      sub_1DDA18310(v46);
    }
    if (*(_DWORD *)(a2 + 4))
    {
      unint64_t v10 = 0;
      do
      {
        sub_1DDA27D28(a1, &v45);
        char v11 = sub_1DDA19DA0(v45);
        char v12 = v11;
        int v14 = (unsigned char *)a3[1];
        unint64_t v13 = a3[2];
        if ((unint64_t)v14 >= v13)
        {
          unint64_t v16 = *a3;
          uint64_t v17 = &v14[-*a3];
          unint64_t v18 = (unint64_t)(v17 + 1);
          if ((uint64_t)(v17 + 1) < 0) {
            sub_1DDA17F78();
          }
          unint64_t v19 = v13 - v16;
          if (2 * v19 > v18) {
            unint64_t v18 = 2 * v19;
          }
          if (v19 >= 0x3FFFFFFFFFFFFFFFLL) {
            size_t v20 = 0x7FFFFFFFFFFFFFFFLL;
          }
          else {
            size_t v20 = v18;
          }
          if (v20) {
            int v21 = (char *)operator new(v20);
          }
          else {
            int v21 = 0;
          }
          int v22 = &v17[(void)v21];
          __int16 v23 = &v17[(void)v21];
          *__int16 v23 = v12;
          int v15 = v23 + 1;
          if (v14 != (unsigned char *)v16)
          {
            __int16 v24 = &v14[~v16];
            do
            {
              char v25 = *--v14;
              (v24--)[(void)v21] = v25;
            }
            while (v14 != (unsigned char *)v16);
            int v14 = (unsigned char *)*a3;
            int v22 = v21;
          }
          *a3 = (unint64_t)v22;
          a3[1] = (unint64_t)v15;
          a3[2] = (unint64_t)&v21[v20];
          if (v14) {
            operator delete(v14);
          }
        }
        else
        {
          unsigned char *v14 = v11;
          int v15 = v14 + 1;
        }
        a3[1] = (unint64_t)v15;
        if (v46) {
          sub_1DDA18310(v46);
        }
        ++v10;
      }
      while (v10 < *(unsigned int *)(a2 + 4));
    }
    sub_1DDA1AA18((uint64_t *)&v47);
  }
  return 1;
}

void sub_1DDA4637C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, char a12, uint64_t a13)
{
  if (a11) {
    sub_1DDA18310(a11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA463E4@<X0>(const void **a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  if (*((char *)a1 + 23) >= 0) {
    size_t v5 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v5 = (size_t)a1[1];
  }
  if (*((char *)a2 + 23) >= 0) {
    size_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v6 = (size_t)a2[1];
  }
  uint64_t result = sub_1DDA49688(a3, v6 + v5);
  if (*(char *)(result + 23) >= 0) {
    int v8 = (char *)result;
  }
  else {
    int v8 = *(char **)result;
  }
  if (v5)
  {
    if (*((char *)a1 + 23) >= 0) {
      unsigned int v9 = a1;
    }
    else {
      unsigned int v9 = *a1;
    }
    uint64_t result = (uint64_t)memmove(v8, v9, v5);
  }
  unint64_t v10 = &v8[v5];
  if (v6)
  {
    if (*((char *)a2 + 23) >= 0) {
      char v11 = a2;
    }
    else {
      char v11 = *a2;
    }
    uint64_t result = (uint64_t)memmove(v10, v11, v6);
  }
  v10[v6] = 0;
  return result;
}

uint64_t sub_1DDA464B0(uint64_t a1, uint64_t a2, float *a3)
{
  int v6 = *(unsigned __int16 *)(a2 + 2);
  if (v6 == 10)
  {
    sub_1DDA27D28(a1, &v15);
    int v13 = sub_1DDA3CE7C(a2);
    sub_1DDA1B4D8(&v14, &v13);
    sub_1DDA1A94C(v17, &v15, (uint64_t)&v14, 0);
    if (v16) {
      sub_1DDA18310(v16);
    }
    sub_1DDA27D28(a1, &v15);
    int v10 = sub_1DDA19EC8(v15);
    if (v16) {
      sub_1DDA18310(v16);
    }
    sub_1DDA27D28(a1, &v15);
    double v8 = (double)v10;
    double v9 = (double)(int)sub_1DDA19EC8(v15);
  }
  else
  {
    if (v6 != 5) {
      return 0;
    }
    sub_1DDA27D28(a1, &v15);
    int v13 = sub_1DDA3CE7C(a2);
    sub_1DDA1B4D8(&v14, &v13);
    sub_1DDA1A94C(v17, &v15, (uint64_t)&v14, 0);
    if (v16) {
      sub_1DDA18310(v16);
    }
    sub_1DDA27D28(a1, &v15);
    unsigned int v7 = sub_1DDA19EC8(v15);
    if (v16) {
      sub_1DDA18310(v16);
    }
    sub_1DDA27D28(a1, &v15);
    double v8 = (double)v7;
    double v9 = (double)sub_1DDA19EC8(v15);
  }
  if (v16) {
    sub_1DDA18310(v16);
  }
  float v11 = v8 / v9;
  *a3 = v11;
  sub_1DDA1AA18(v17);
  return 1;
}

void sub_1DDA4663C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, std::__shared_weak_count *a4, ...)
{
  va_start(va, a4);
  if (a4) {
    sub_1DDA18310(a4);
  }
  sub_1DDA1AA18((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA466B4(uint64_t result, long long *a2, unsigned __int16 *a3)
{
  size_t v5 = (uint64_t **)result;
  unsigned int v6 = *a3;
  if (v6 > 0x9200)
  {
    if (*a3 <= 0x927Bu)
    {
      switch(*a3)
      {
        case 0x9201u:
          uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result);
          if ((result & 1) == 0)
          {
            LODWORD(__p) = 0;
            if (a3[1] == 10 && *((_DWORD *)a3 + 1) == 1)
            {
              uint64_t result = sub_1DDA464B0((uint64_t)v5, (uint64_t)a3, (float *)&__p);
              if (result)
              {
                double v7 = *(float *)&__p;
                double v8 = v5 + 39;
                goto LABEL_123;
              }
            }
          }
          break;
        case 0x9202u:
          uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result);
          if ((result & 1) == 0)
          {
            LODWORD(__p) = 0;
            if (a3[1] == 5 && *((_DWORD *)a3 + 1) == 1)
            {
              uint64_t result = sub_1DDA464B0((uint64_t)v5, (uint64_t)a3, (float *)&__p);
              if (result)
              {
                double v7 = *(float *)&__p;
                double v8 = v5 + 45;
                goto LABEL_123;
              }
            }
          }
          break;
        case 0x9208u:
          uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result);
          if ((result & 1) == 0 && a3[1] == 3)
          {
            LODWORD(__p) = 0;
            sub_1DDA1B3CC(&v61, (unsigned int *)&__p);
            LOWORD(__p) = sub_1DDA3F234((uint64_t)a3, (unsigned int *)&v61);
            int v61 = a2;
            int v38 = sub_1DDA4B960(v5 + 27, (void **)a2, (uint64_t)&unk_1DDBFB044, &v61);
            uint64_t result = (uint64_t)sub_1DDA49474((char *)v38 + 56, (char *)&__p, (uint64_t)&__p + 2, 1uLL);
          }
          break;
        case 0x920Au:
          uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result);
          if ((result & 1) == 0)
          {
            LODWORD(__p) = 0;
            if (a3[1] == 5 && *((_DWORD *)a3 + 1) == 1)
            {
              uint64_t result = sub_1DDA464B0((uint64_t)v5, (uint64_t)a3, (float *)&__p);
              if (result)
              {
                double v7 = *(float *)&__p;
                double v8 = v5 + 48;
                goto LABEL_123;
              }
            }
          }
          break;
        default:
          return result;
      }
      return result;
    }
    if (*a3 > 0xA002u)
    {
      if (v6 == 40963)
      {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result);
        if (result) {
          return result;
        }
        int v44 = a3[1];
        if ((v44 - 5) < 0xFFFFFFFE || *((_DWORD *)a3 + 1) != 1) {
          return result;
        }
        if (v44 == 4) {
          int v10 = *((_DWORD *)a3 + 2);
        }
        else {
          int v10 = sub_1DDA44F28((uint64_t)a3);
        }
        uint64_t v49 = v5 + 60;
LABEL_151:
        int v61 = a2;
        uint64_t result = (uint64_t)sub_1DDA4B72C(v49, (void **)a2, (uint64_t)&unk_1DDBFB044, &v61);
        *(_DWORD *)(result + 56) = v10;
        return result;
      }
      if (v6 != 41730) {
        return result;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result);
      if ((result & 1) != 0 || a3[1] != 7 || *((_DWORD *)a3 + 1) < 5u) {
        return result;
      }
      sub_1DDA27D28((uint64_t)v5, &__p);
      LODWORD(__src) = sub_1DDA3CE7C((uint64_t)a3);
      sub_1DDA1B4D8((int *)&v56, (int *)&__src);
      sub_1DDA1A94C((uint64_t *)&v61, (uint64_t *)&__p, (uint64_t)&v56, 0);
      if (v59) {
        sub_1DDA18310(v59);
      }
      sub_1DDA27D28((uint64_t)v5, &__p);
      unsigned int v13 = sub_1DDA19E68((uint64_t)__p);
      if (v59) {
        sub_1DDA18310(v59);
      }
      sub_1DDA27D28((uint64_t)v5, &__p);
      unsigned int v14 = sub_1DDA19E68((uint64_t)__p);
      if (v59) {
        sub_1DDA18310(v59);
      }
      uint64_t v15 = *((unsigned int *)a3 + 1);
      unsigned int v16 = __rev16(v13);
      unsigned int v17 = __rev16(v14);
      if (v14 * (unint64_t)v13 + 4 == v15)
      {
        unsigned int v16 = v13;
        unsigned int v18 = v14;
      }
      else
      {
        unsigned int v18 = v17;
      }
      if (v16 <= 6 && v18 <= 6)
      {
        size_t v19 = v18 * v16;
        if (v19 + 4 == v15 && v16 == 2 && v18 == 2)
        {
          __p = 0;
          int v59 = 0;
          unint64_t v60 = 0;
          sub_1DDA4763C((unint64_t *)&__p, v19);
          unsigned int v20 = 0;
          unsigned int v21 = (unsigned __int16)v19;
          do
          {
            sub_1DDA27D28((uint64_t)v5, &v56);
            char v22 = sub_1DDA19DA0((uint64_t)v56);
            char v23 = v22;
            __int16 v24 = (char *)v59;
            if ((unint64_t)v59 >= v60)
            {
              char v26 = (char *)__p;
              int64_t v27 = (char *)v59 - (unsigned char *)__p;
              int64_t v28 = (char *)v59 - (unsigned char *)__p + 1;
              if (v28 < 0) {
                sub_1DDA17F78();
              }
              unint64_t v29 = v60 - (void)__p;
              if (2 * (v60 - (unint64_t)__p) > v28) {
                int64_t v28 = 2 * v29;
              }
              if (v29 >= 0x3FFFFFFFFFFFFFFFLL) {
                size_t v30 = 0x7FFFFFFFFFFFFFFFLL;
              }
              else {
                size_t v30 = v28;
              }
              if (v30) {
                unint64_t v31 = (char *)operator new(v30);
              }
              else {
                unint64_t v31 = 0;
              }
              unint64_t v32 = &v31[v27];
              unint64_t v33 = &v31[v27];
              *unint64_t v33 = v23;
              char v25 = v33 + 1;
              if (v24 != v26)
              {
                unint64_t v34 = &v24[~(unint64_t)v26];
                do
                {
                  char v35 = *--v24;
                  (v34--)[(void)v31] = v35;
                }
                while (v24 != v26);
                __int16 v24 = (char *)__p;
                unint64_t v32 = v31;
              }
              __p = v32;
              int v59 = (std::__shared_weak_count *)v25;
              unint64_t v60 = (unint64_t)&v31[v30];
              if (v24) {
                operator delete(v24);
              }
            }
            else
            {
              LOBYTE(v59->__vftable) = v22;
              char v25 = v24 + 1;
            }
            int v59 = (std::__shared_weak_count *)v25;
            if (v57) {
              sub_1DDA18310(v57);
            }
            ++v20;
          }
          while (v20 < v21);
          LODWORD(__src) = 131074;
          unint64_t v56 = a2;
          int v36 = sub_1DDA4B960(v5 + 121, (void **)a2, (uint64_t)&unk_1DDBFB044, &v56);
          sub_1DDA49474((char *)v36 + 56, (char *)&__src, (uint64_t)&__src + 4, 2uLL);
          unint64_t v56 = a2;
          __int16 v37 = sub_1DDA4B960(v5 + 124, (void **)a2, (uint64_t)&unk_1DDBFB044, &v56) + 7;
          if (v37 != (uint64_t *)&__p) {
            sub_1DDA49578(v37, (char *)__p, (char *)v59, (char *)v59 - (unsigned char *)__p);
          }
          if (__p)
          {
            int v59 = (std::__shared_weak_count *)__p;
            operator delete(__p);
          }
        }
      }
    }
    else
    {
      if (v6 != 37500)
      {
        if (v6 != 40962) {
          return result;
        }
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result);
        if (result) {
          return result;
        }
        int v9 = a3[1];
        if ((v9 - 5) < 0xFFFFFFFE || *((_DWORD *)a3 + 1) != 1) {
          return result;
        }
        if (v9 == 4) {
          int v10 = *((_DWORD *)a3 + 2);
        }
        else {
          int v10 = sub_1DDA44F28((uint64_t)a3);
        }
        uint64_t v49 = v5 + 57;
        goto LABEL_151;
      }
      if (a3[1] != 7) {
        return result;
      }
      sub_1DDA27D28(result, &v61);
      if ((**(uint64_t (***)(long long *))v61)(v61))
      {
        BOOL v43 = 1;
      }
      else
      {
        int v45 = sub_1DDA3CE7C((uint64_t)a3);
        LODWORD(v56) = sub_1DDA41E28((uint64_t)a3);
        LODWORD(__p) = v45;
        unsigned int v46 = *sub_1DDA47EF8(&__p, &v56);
        sub_1DDA27D28((uint64_t)v5, &__p);
        BOOL v43 = v46 < (*(unsigned int (**)(void *))(*(void *)__p + 16))(__p);
        if (v59) {
          sub_1DDA18310(v59);
        }
      }
      if (v62) {
        sub_1DDA18310(v62);
      }
      if (!v43) {
        return ((uint64_t (*)(uint64_t **, uint64_t))(*v5)[23])(v5, 1);
      }
      sub_1DDA27D28((uint64_t)v5, &__p);
      LODWORD(__src) = sub_1DDA3CE7C((uint64_t)a3);
      sub_1DDA1B4D8((int *)&v56, (int *)&__src);
      sub_1DDA1A94C((uint64_t *)&v61, (uint64_t *)&__p, (uint64_t)&v56, 0);
      if (v59) {
        sub_1DDA18310(v59);
      }
      if (((unsigned int (*)(uint64_t **, unsigned __int16 *))(*v5)[94])(v5, a3))
      {
        sub_1DDA27D28((uint64_t)v5, &v56);
        uint64_t v47 = ((uint64_t (*)(uint64_t **))(*v5)[15])(v5);
        sub_1DDA29F88((uint64_t *)&__p, (uint64_t *)&v56, v47);
        if (v57) {
          sub_1DDA18310(v57);
        }
        sub_1DDA27D28((uint64_t)v5, &__src);
        LODWORD(v50) = ((uint64_t (*)(uint64_t **))(*v5)[17])(v5);
        sub_1DDA49398((uint64_t)&v56, &__src, &v50);
        if (v55) {
          sub_1DDA18310(v55);
        }
        sub_1DDA27D28((uint64_t)v5, &v50);
        int v53 = ((uint64_t (*)(uint64_t **))(*v5)[19])(v5);
        sub_1DDA1A94C(&__src, (uint64_t *)&v50, (uint64_t)&v53, 0);
        if (v51) {
          sub_1DDA18310(v51);
        }
        sub_1DDA47580(":MAKERNOTE", (const void **)a2, &v50);
        ((void (*)(uint64_t **, void **))(*v5)[96])(v5, &v50);
        if (v52 < 0) {
          operator delete(v50);
        }
        ((void (*)(uint64_t **))(*v5)[95])(v5);
        sub_1DDA1AA18(&__src);
        sub_1DDA49424((uint64_t)&v56);
        sub_1DDA2A000((uint64_t *)&__p);
      }
    }
    return (uint64_t)sub_1DDA1AA18((uint64_t *)&v61);
  }
  if (*a3 > 0x882Fu)
  {
    switch(*a3)
    {
      case 0x8830u:
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result);
        if ((result & 1) == 0 && a3[1] == 3)
        {
          uint64_t result = ((uint64_t (*)(uint64_t **, long long *))(*v5)[33])(v5, a2);
          if (result == 0xFFFF)
          {
            uint64_t result = sub_1DDA44F28((uint64_t)a3);
            *((_WORD *)v5 + 508) = result;
          }
        }
        break;
      case 0x8831u:
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result);
        if ((result & 1) == 0 && a3[1] == 4)
        {
          unsigned int v42 = *((unsigned __int16 *)v5 + 508);
          if (v42 <= 7 && ((1 << v42) & 0xB2) != 0)
          {
            int v40 = *((_DWORD *)a3 + 2);
            *((_DWORD *)v5 + 255) = v40;
            goto LABEL_104;
          }
        }
        break;
      case 0x8832u:
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result);
        if ((result & 1) == 0 && a3[1] == 4)
        {
          unsigned int v39 = *((unsigned __int16 *)v5 + 508);
          if (v39 <= 7 && ((1 << v39) & 0xD4) != 0)
          {
            int v40 = *((_DWORD *)a3 + 2);
            *((_DWORD *)v5 + 256) = v40;
            if (!*((_DWORD *)v5 + 255)) {
              goto LABEL_104;
            }
          }
        }
        break;
      case 0x8833u:
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result);
        if ((result & 1) == 0 && a3[1] == 4)
        {
          unsigned int v41 = *((unsigned __int16 *)v5 + 508);
          if (v41 <= 7 && ((1 << v41) & 0xE8) != 0)
          {
            int v40 = *((_DWORD *)a3 + 2);
            *((_DWORD *)v5 + 257) = v40;
            if (!*((_DWORD *)v5 + 255) && !*((_DWORD *)v5 + 256))
            {
LABEL_104:
              LODWORD(__p) = v40;
              goto LABEL_146;
            }
          }
        }
        break;
      default:
        return result;
    }
    return result;
  }
  switch(v6)
  {
    case 0x829Au:
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result);
      if (result) {
        return result;
      }
      LODWORD(__p) = 0;
      if (a3[1] != 5) {
        return result;
      }
      if (*((_DWORD *)a3 + 1) != 1) {
        return result;
      }
      uint64_t result = sub_1DDA464B0((uint64_t)v5, (uint64_t)a3, (float *)&__p);
      if (!result) {
        return result;
      }
      double v7 = *(float *)&__p;
      double v8 = v5 + 36;
LABEL_123:
      int v61 = a2;
      uint64_t result = (uint64_t)sub_1DDA4BE58(v8, (void **)a2, (uint64_t)&unk_1DDBFB044, &v61);
      *(double *)(result + 56) = v7;
      return result;
    case 0x829Du:
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result);
      if (result) {
        return result;
      }
      LODWORD(__p) = 0;
      if (a3[1] != 5) {
        return result;
      }
      if (*((_DWORD *)a3 + 1) != 1) {
        return result;
      }
      uint64_t result = sub_1DDA464B0((uint64_t)v5, (uint64_t)a3, (float *)&__p);
      if (!result) {
        return result;
      }
      double v7 = *(float *)&__p;
      double v8 = v5 + 42;
      goto LABEL_123;
    case 0x8827u:
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56))(result);
      if ((result & 1) == 0)
      {
        int v11 = a3[1];
        if (v11 == 3)
        {
          int v12 = sub_1DDA44F28((uint64_t)a3);
        }
        else
        {
          if (v11 != 4) {
            return result;
          }
          int v12 = *((_DWORD *)a3 + 2);
        }
        LODWORD(__p) = v12;
LABEL_146:
        int v61 = a2;
        unint64_t v48 = sub_1DDA4B960(v5 + 24, (void **)a2, (uint64_t)&unk_1DDBFB044, &v61);
        return (uint64_t)sub_1DDA17E28((char *)v48 + 56, (char *)&__p, (uint64_t)&__p + 4, 1uLL);
      }
      break;
  }
  return result;
}

void sub_1DDA473F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

uint64_t sub_1DDA47580@<X0>(char *__s@<X1>, const void **a2@<X0>, void **a3@<X8>)
{
  if (*((char *)a2 + 23) >= 0) {
    size_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v6 = (size_t)a2[1];
  }
  size_t v7 = strlen(__s);
  uint64_t result = sub_1DDA49688((uint64_t)a3, v6 + v7);
  if (*((char *)a3 + 23) < 0) {
    a3 = (void **)*a3;
  }
  if (v6)
  {
    if (*((char *)a2 + 23) >= 0) {
      int v9 = a2;
    }
    else {
      int v9 = *a2;
    }
    uint64_t result = (uint64_t)memmove(a3, v9, v6);
  }
  int v10 = (char *)a3 + v6;
  if (v7) {
    uint64_t result = (uint64_t)memmove(v10, __s, v7);
  }
  v10[v7] = 0;
  return result;
}

void sub_1DDA4763C(unint64_t *a1, size_t __sz)
{
  unint64_t v2 = *a1;
  if (a1[2] - *a1 < __sz)
  {
    if ((__sz & 0x8000000000000000) != 0) {
      sub_1DDA17F78();
    }
    size_t v5 = (char *)a1[1];
    size_t v6 = operator new(__sz);
    size_t v7 = &v5[(void)v6 - v2];
    double v8 = v7;
    if (v5 != (char *)v2)
    {
      int v9 = &v5[~v2];
      do
      {
        char v10 = *--v5;
        (v9--)[(void)v6] = v10;
      }
      while (v5 != (char *)v2);
      double v8 = v6;
    }
    *a1 = (unint64_t)v8;
    a1[1] = (unint64_t)v7;
    a1[2] = (unint64_t)&v6[__sz];
    if (v2)
    {
      operator delete((void *)v2);
    }
  }
}

void sub_1DDA476FC(uint64_t a1@<X0>, void **a2@<X1>, void *a3@<X8>)
{
  size_t v6 = sub_1DDA2A530(a1 + 656, a2);
  if ((void **)(a1 + 664) != v6)
  {
    size_t v7 = v6[7];
    if (v6[8] != v7 && *v7 != 8)
    {
      *a3 = 0;
      a3[1] = 0;
      return;
    }
  }
  *a3 = 0;
  a3[1] = 0;
  unsigned int v95 = 0;
  double v8 = sub_1DDA2A530(a1 + 704, a2);
  int v9 = v8;
  if ((void **)(a1 + 712) == v8)
  {
    sub_1DDA1A880(&v93, "IFD0");
    int v12 = sub_1DDA2A530(a1 + 704, (void **)&v93);
    BOOL v30 = v9 == v12;
    BOOL v11 = v9 != v12;
    if (v30) {
      unsigned int v10 = 1;
    }
    else {
      unsigned int v10 = *((_DWORD *)v12 + 14);
    }
    if (SHIBYTE(v94) < 0) {
      operator delete((void *)v93);
    }
  }
  else
  {
    unsigned int v10 = *((_DWORD *)v8 + 14);
    BOOL v11 = 1;
  }
  if (v11 && v10 && v10 <= 8) {
    unsigned int v95 = v10;
  }
  int v92 = 0;
  unsigned int v91 = 0;
  unsigned int v13 = sub_1DDA2A530(a1 + 536, a2);
  unsigned int v14 = v13;
  if ((void **)(a1 + 544) == v13) {
    unsigned int v78 = 0;
  }
  else {
    unsigned int v78 = *((_DWORD *)v13 + 14);
  }
  uint64_t v15 = sub_1DDA2A530(a1 + 560, a2);
  unsigned int v16 = v15;
  if ((void **)(a1 + 568) == v15) {
    unsigned int v77 = 0;
  }
  else {
    unsigned int v77 = *((_DWORD *)v15 + 14);
  }
  unsigned int v17 = sub_1DDA2A530(a1 + 584, a2);
  unsigned int v18 = v17;
  if ((void **)(a1 + 592) == v17) {
    int v79 = 0;
  }
  else {
    int v79 = *((_DWORD *)v17 + 14);
  }
  uint64_t v84 = a1 + 776;
  size_t v19 = sub_1DDA2A530(a1 + 776, a2);
  uint64_t v83 = (void **)(a1 + 784);
  if ((void **)(a1 + 784) == v19 || (unsigned int v20 = (int *)v19[7], v19[8] == v20))
  {
    int v21 = 0;
  }
  else
  {
    int v92 = *v20;
    int v21 = 1;
  }
  uint64_t v82 = a1 + 800;
  char v22 = sub_1DDA2A530(a1 + 800, a2);
  uint64_t v80 = v16;
  uint64_t v81 = (void **)(a1 + 808);
  char v23 = v14;
  if ((void **)(a1 + 808) == v22 || (__int16 v24 = (unsigned int *)v22[7], v22[8] == v24))
  {
    int v25 = 0;
  }
  else
  {
    unsigned int v91 = *v24;
    int v25 = 1;
  }
  char v26 = sub_1DDA2A530(v84, a2);
  if (v83 == v26) {
    unint64_t v27 = 0;
  }
  else {
    unint64_t v27 = ((unsigned char *)v26[8] - (unsigned char *)v26[7]) >> 2;
  }
  int64_t v28 = sub_1DDA2A530(v82, a2);
  if (v81 == v28) {
    uint64_t v29 = 0;
  }
  else {
    uint64_t v29 = ((unsigned char *)v28[8] - (unsigned char *)v28[7]) >> 2;
  }
  BOOL v30 = (void **)(a1 + 544) == v23 || a1 + 568 == (void)v80;
  if (v30 || a1 + 592 == (void)v18) {
    int v32 = 0;
  }
  else {
    int v32 = v21;
  }
  if (!v27) {
    int v32 = 0;
  }
  if ((v25 & v32) == 1 && v29)
  {
    unint64_t v33 = sub_1DDA2A530(a1 + 752, a2);
    unint64_t v34 = a3;
    char v35 = v33;
    if ((void **)(a1 + 760) == v33) {
      int v36 = 0;
    }
    else {
      int v36 = *((_DWORD *)v33 + 14);
    }
    unsigned int v41 = sub_1DDA2A530(a1 + 632, a2);
    if ((void **)(a1 + 640) == v41) {
      int v42 = 0;
    }
    else {
      int v42 = *((_DWORD *)v41 + 14);
    }
    if ((v79 & 0xFFFFFFFE) == 6)
    {
      sub_1DDA18410((int *)&__p, &v92);
      LODWORD(v86) = v91;
      sub_1DDA284D4(a1, (int *)&__p, (unsigned int *)&v86, v95, &v93);
      goto LABEL_68;
    }
    if (v79 != 1)
    {
      if (v79 != 52546) {
        return;
      }
      sub_1DDA18218(&__p, v78, v77);
      sub_1DDA4BF98(&__p, (int *)&v95, (unsigned int *)&v92, &v91, &v93);
      goto LABEL_68;
    }
    BOOL v44 = (void **)(a1 + 640) == v41 || v42 == 2;
    BOOL v45 = v36 == 1 || a1 + 760 == (void)v35;
    if (v45 && v44)
    {
      long long v93 = 0uLL;
      uint64_t v94 = 0;
      __p = 0;
      uint64_t v89 = 0;
      uint64_t v90 = 0;
      LODWORD(v86) = 0;
      sub_1DDA1B3CC(&v87, (unsigned int *)&v86);
      unint64_t v46 = 0;
      unsigned int v47 = 0;
      do
      {
        unint64_t v48 = sub_1DDA2A530(v84, a2);
        if (v83 != v48)
        {
          uint64_t v49 = v48[7];
          if (v46 < ((unsigned char *)v48[8] - (unsigned char *)v49) >> 2) {
            int v92 = v49[v46];
          }
        }
        unint64_t v50 = sub_1DDA2A530(v82, a2);
        if (v81 != v50)
        {
          int v51 = v50[7];
          if (v46 < ((unsigned char *)v50[8] - (unsigned char *)v51) >> 2) {
            unsigned int v91 = v51[v46];
          }
        }
        char v52 = (char *)*((void *)&v93 + 1);
        if (*((void *)&v93 + 1) >= (unint64_t)v94)
        {
          uint64_t v54 = (char *)v93;
          uint64_t v55 = (uint64_t)(*((void *)&v93 + 1) - v93) >> 2;
          unint64_t v56 = v55 + 1;
          if ((unint64_t)(v55 + 1) >> 62) {
            sub_1DDA17F78();
          }
          uint64_t v57 = (uint64_t)&v94[-v93];
          if ((uint64_t)&v94[-v93] >> 1 > v56) {
            unint64_t v56 = v57 >> 1;
          }
          if ((unint64_t)v57 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v58 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v58 = v56;
          }
          if (v58)
          {
            int v59 = (char *)sub_1DDA17F90((uint64_t)&v94, v58);
            char v52 = (char *)*((void *)&v93 + 1);
            uint64_t v54 = (char *)v93;
          }
          else
          {
            int v59 = 0;
          }
          unint64_t v60 = &v59[4 * v55];
          *(_DWORD *)unint64_t v60 = v92;
          int v53 = v60 + 4;
          while (v52 != v54)
          {
            int v61 = *((_DWORD *)v52 - 1);
            v52 -= 4;
            *((_DWORD *)v60 - 1) = v61;
            v60 -= 4;
          }
          *(void *)&long long v93 = v60;
          *((void *)&v93 + 1) = v53;
          uint64_t v94 = &v59[4 * v58];
          if (v54) {
            operator delete(v54);
          }
        }
        else
        {
          **((_DWORD **)&v93 + 1) = v92;
          int v53 = v52 + 4;
        }
        *((void *)&v93 + 1) = v53;
        unsigned int v62 = v91;
        uint64_t v63 = v89;
        if (v89 >= v90)
        {
          int v65 = (char *)__p;
          uint64_t v66 = (v89 - (unsigned char *)__p) >> 2;
          unint64_t v67 = v66 + 1;
          if ((unint64_t)(v66 + 1) >> 62) {
            sub_1DDA17F78();
          }
          uint64_t v68 = v90 - (unsigned char *)__p;
          if ((v90 - (unsigned char *)__p) >> 1 > v67) {
            unint64_t v67 = v68 >> 1;
          }
          if ((unint64_t)v68 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v69 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v69 = v67;
          }
          if (v69)
          {
            std::string::size_type v70 = (char *)sub_1DDA17F90((uint64_t)&v90, v69);
            int v65 = (char *)__p;
            uint64_t v63 = v89;
          }
          else
          {
            std::string::size_type v70 = 0;
          }
          uint64_t v71 = (unsigned int *)&v70[4 * v66];
          unsigned int *v71 = v62;
          int v64 = (char *)(v71 + 1);
          while (v63 != v65)
          {
            unsigned int v72 = *((_DWORD *)v63 - 1);
            v63 -= 4;
            *--uint64_t v71 = v72;
          }
          __p = v71;
          uint64_t v89 = v64;
          uint64_t v90 = &v70[4 * v69];
          if (v65) {
            operator delete(v65);
          }
        }
        else
        {
          *(_DWORD *)uint64_t v89 = v91;
          int v64 = v63 + 4;
        }
        uint64_t v89 = v64;
        sub_1DDA47EF8(&v87, &v91);
        unint64_t v46 = ++v47;
      }
      while (v27 > v47);
      unint64_t v73 = v78 * (unint64_t)v77;
      if ((v73 & 0xFFFFFFFF00000000) == 0)
      {
        uint64_t v74 = 3 * v73;
        if ((v74 & 0xFFFFFFFF00000000) == 0 && v87 == v74)
        {
          if (*((void *)&v93 + 1) == (void)v93) {
            sub_1DDA24AD0();
          }
          unsigned int v75 = *(_DWORD *)v93;
          sub_1DDA27D28(a1, &v86);
          unsigned int v85 = (*(uint64_t (**)(void))(*(void *)v86 + 16))(v86);
          unsigned int v76 = *sub_1DDA4C118(&v85, &v87);
          if (*((void *)&v86 + 1)) {
            sub_1DDA18310(*((std::__shared_weak_count **)&v86 + 1));
          }
          if (v75 <= v76)
          {
            sub_1DDA18218(&v85, v78, v77);
            sub_1DDA4C194((uint64_t)&v85, &v95, &v86);
            *(_OWORD *)a3 = v86;
          }
        }
      }
      if (__p)
      {
        uint64_t v89 = (char *)__p;
        operator delete(__p);
      }
      if ((void)v93)
      {
        *((void *)&v93 + 1) = v93;
        operator delete((void *)v93);
      }
    }
  }
  else
  {
    LODWORD(__p) = 0;
    __int16 v37 = sub_1DDA2A530(a1 + 824, a2);
    unint64_t v34 = a3;
    int v38 = v37;
    if ((void **)(a1 + 832) != v37) {
      LODWORD(__p) = *((_DWORD *)v37 + 14);
    }
    unsigned int v39 = sub_1DDA2A530(a1 + 848, a2);
    if ((void **)(a1 + 856) != v39 && (void **)(a1 + 832) != v38)
    {
      unsigned int v40 = *((_DWORD *)v39 + 14);
      sub_1DDA18410((int *)&v86, (int *)&__p);
      unsigned int v85 = v40;
      sub_1DDA284D4(a1, (int *)&v86, &v85, v95, &v93);
LABEL_68:
      *unint64_t v34 = v93;
    }
  }
}

void sub_1DDA47E38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24)
{
  if (__p) {
    operator delete(__p);
  }
  char v26 = *(void **)(v24 - 128);
  if (v26)
  {
    *(void *)(v24 - 120) = v26;
    operator delete(v26);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_1DDA47EF8(_DWORD *result, _DWORD *a2)
{
  BOOL v2 = __CFADD__(*result, *a2);
  *result += *a2;
  if (v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA47F60(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA47F74(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_1DDA1A880(__p, "IFD0");
  sub_1DDA476FC(a1, __p, &v8);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  sub_1DDA1A880(__p, "IFD1");
  sub_1DDA476FC(a1, __p, &v5);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  if ((void)v8)
  {
    int v4 = *(_DWORD *)(v8 + 16);
    if (v4 && (void)v5 && !*(_DWORD *)(v5 + 16)) {
      *(_DWORD *)(v5 + 16) = v4;
    }
    sub_1DDA480D4(a2, &v8);
  }
  if ((void)v5) {
    sub_1DDA480D4(a2, &v5);
  }
  if (*((void *)&v5 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v5 + 1));
  }
  if (*((void *)&v8 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v8 + 1));
  }
}

void sub_1DDA48064(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  size_t v19 = *(std::__shared_weak_count **)(v17 - 24);
  if (v19) {
    sub_1DDA18310(v19);
  }
  sub_1DDA18270((void ***)&__p);
  _Unwind_Resume(a1);
}

void **sub_1DDA480D4(uint64_t *a1, long long *a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (void **)(a1 + 2);
  unint64_t v5 = v6;
  char v7 = *(result - 1);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v10 = ((uint64_t)v7 - *a1) >> 4;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 60) {
      sub_1DDA17F78();
    }
    uint64_t v12 = v5 - *a1;
    if (v12 >> 3 > v11) {
      unint64_t v11 = v12 >> 3;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    v18[4] = result;
    unsigned int v14 = (char *)sub_1DDA19838((uint64_t)result, v13);
    uint64_t v15 = &v14[16 * v10];
    v18[0] = v14;
    v18[1] = v15;
    uint64_t v18[3] = &v14[16 * v16];
    long long v17 = *a2;
    *(_OWORD *)uint64_t v15 = *a2;
    if (*((void *)&v17 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v17 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    double v18[2] = v15 + 16;
    sub_1DDA49710(a1, v18);
    int v9 = (void *)a1[1];
    uint64_t result = sub_1DDA49898(v18);
  }
  else
  {
    *char v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    v7[1] = v8;
    if (v8) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
    }
    int v9 = v7 + 2;
    a1[1] = (uint64_t)(v7 + 2);
  }
  a1[1] = (uint64_t)v9;
  return result;
}

void sub_1DDA481DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1DDA49898((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA481F0(uint64_t a1, void **a2)
{
  int v4 = sub_1DDA2A530(a1 + 776, a2);
  if (((void **)(a1 + 784) == v4 || (unint64_t v5 = (unsigned int *)v4[7], v4[8] == v5))
    && ((unint64_t v6 = sub_1DDA2A530(a1 + 920, a2), (void **)(a1 + 928) == v6) || (v5 = (unsigned int *)v6[7], v6[8] == v5)))
  {
    return 0;
  }
  else
  {
    return *v5;
  }
}

uint64_t sub_1DDA48264(uint64_t a1, void **a2)
{
  uint64_t v4 = a1 + 800;
  unint64_t v5 = sub_1DDA2A530(a1 + 800, a2);
  unint64_t v6 = (void **)(a1 + 808);
  if ((void **)(a1 + 808) == v5 || (uint64_t v7 = (unsigned char *)v5[8] - (unsigned char *)v5[7]) == 0)
  {
    uint64_t v15 = a1 + 944;
    uint64_t v16 = sub_1DDA2A530(a1 + 944, a2);
    long long v17 = (void **)(a1 + 952);
    if ((void **)(a1 + 952) == v16) {
      return 0;
    }
    uint64_t v18 = (unsigned char *)v16[8] - (unsigned char *)v16[7];
    if (!v18)
    {
      return 0;
    }
    else
    {
      unint64_t v19 = 0;
      unsigned int v9 = 0;
      unint64_t v20 = v18 >> 2;
      unsigned int v21 = 1;
      do
      {
        char v22 = sub_1DDA2A530(v15, a2);
        if (v17 != v22)
        {
          char v23 = v22[7];
          if (v19 < ((unsigned char *)v22[8] - (unsigned char *)v23) >> 2) {
            v9 += v23[v19];
          }
        }
        unint64_t v19 = v21;
        BOOL v14 = v20 > v21++;
      }
      while (v14);
    }
  }
  else
  {
    unint64_t v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = v7 >> 2;
    unsigned int v11 = 1;
    do
    {
      uint64_t v12 = sub_1DDA2A530(v4, a2);
      if (v6 != v12)
      {
        unint64_t v13 = v12[7];
        if (v8 < ((unsigned char *)v12[8] - (unsigned char *)v13) >> 2) {
          v9 += v13[v8];
        }
      }
      unint64_t v8 = v11;
      BOOL v14 = v10 > v11++;
    }
    while (v14);
  }
  return v9;
}

unint64_t sub_1DDA48394(uint64_t a1, void **a2)
{
  uint64_t v4 = sub_1DDA2A530(a1 + 536, a2);
  if ((void **)(a1 + 544) == v4
    || (v5 = *((_DWORD *)v4 + 14), unint64_t v6 = sub_1DDA2A530(a1 + 560, a2), (void **)(a1 + 568) == v6))
  {
    unint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    sub_1DDA18218(&v10, v5, *((_DWORD *)v6 + 14));
    unint64_t v7 = v10 & 0xFFFFFFFF00000000;
    uint64_t v8 = v10;
  }
  return v8 | v7;
}

void sub_1DDA48424(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X8>)
{
  void v20[3] = *MEMORY[0x1E4F143B8];
  sub_1DDA1A880(v12, "IFD0:SUBIFD0");
  sub_1DDA1A880(v13, "IFD0:SUBIFD1");
  sub_1DDA1A880(v14, "IFD0:SUBIFD2");
  sub_1DDA1A880(v15, "IFD0:SUBIFD3");
  sub_1DDA1A880(v16, "IFD0:SUBIFD4");
  sub_1DDA1A880(v17, "IFD0:SUBIFD5");
  sub_1DDA1A880(v18, "IFD0:SUBIFD6");
  sub_1DDA1A880(v19, "IFD0:SUBIFD7");
  sub_1DDA1A880(v20, "IFD0");
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 512;
  uint64_t v8 = (void **)(a1 + 520);
  while (1)
  {
    unsigned int v9 = sub_1DDA2A530(v7, (void **)&v12[v6]);
    if (v8 != v9 && *((_DWORD *)v9 + 14) == a2) {
      break;
    }
    v6 += 3;
    if (v6 == 27)
    {
      sub_1DDA1A880(a3, "");
      goto LABEL_9;
    }
  }
  uint64_t v10 = (void **)&v12[v6];
  if (SHIBYTE(v12[v6 + 2]) < 0)
  {
    sub_1DDA2639C(a3, *v10, (unint64_t)v10[1]);
  }
  else
  {
    *(_OWORD *)a3 = *(_OWORD *)v10;
    a3[2] = v10[2];
  }
LABEL_9:
  for (uint64_t i = 0; i != -27; i -= 3)
  {
    if (SHIBYTE(v20[i + 2]) < 0) {
      operator delete((void *)v20[i]);
    }
  }
}

void sub_1DDA48600(_Unwind_Exception *exception_object, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = 0;
  while (1)
  {
    if (*((char *)&a9 + v10 + 215) < 0) {
      operator delete(*(void **)((char *)&a9 + v10 + 192));
    }
    v10 -= 24;
    if (v10 == -216) {
      _Unwind_Resume(exception_object);
    }
  }
}

void sub_1DDA4866C(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  void v19[3] = *MEMORY[0x1E4F143B8];
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  sub_1DDA1A880(v11, "IFD0:SUBIFD0");
  sub_1DDA1A880(v12, "IFD0:SUBIFD1");
  sub_1DDA1A880(v13, "IFD0:SUBIFD2");
  sub_1DDA1A880(v14, "IFD0:SUBIFD3");
  sub_1DDA1A880(v15, "IFD0:SUBIFD4");
  sub_1DDA1A880(v16, "IFD0:SUBIFD5");
  sub_1DDA1A880(v17, "IFD0:SUBIFD6");
  sub_1DDA1A880(v18, "IFD0:SUBIFD7");
  sub_1DDA1A880(v19, "IFD0");
  for (uint64_t i = 0; i != 27; i += 3)
  {
    uint64_t v7 = sub_1DDA2A530(a1 + 512, (void **)&v11[i]);
    if ((void **)(a1 + 520) != v7 && *((_DWORD *)v7 + 14) == a2)
    {
      unint64_t v8 = a3[1];
      if (v8 >= a3[2])
      {
        uint64_t v9 = sub_1DDA49920(a3, (long long *)&v11[i]);
      }
      else
      {
        sub_1DDA35310(a3, (long long *)&v11[i]);
        uint64_t v9 = v8 + 24;
      }
      a3[1] = v9;
    }
  }
  for (uint64_t j = 0; j != -27; j -= 3)
  {
    if (SHIBYTE(v19[j + 2]) < 0) {
      operator delete((void *)v19[j]);
    }
  }
}

void sub_1DDA48848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t sub_1DDA488B8(uint64_t a1)
{
  int64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  sub_1DDA48424(a1, 0, &v27);
  if (sub_1DDA48EBC(a1 + 992, (void **)&v27.__r_.__value_.__l.__data_, (void **)&v28))
  {
    BOOL v2 = 1;
  }
  else
  {
    sub_1DDA1A880(v25, "IFD0:SUBIFD0");
    if (sub_1DDA48EBC(a1 + 992, v25, (void **)&v28))
    {
      BOOL v2 = 1;
    }
    else
    {
      sub_1DDA1A880(__p, "IFD0:EXIF");
      BOOL v2 = sub_1DDA48EBC(a1 + 992, __p, (void **)&v28);
      if (v24 < 0) {
        operator delete(__p[0]);
      }
    }
    if (v26 < 0) {
      operator delete(v25[0]);
    }
  }
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (!v2) {
      goto LABEL_103;
    }
  }
  else if (!v2)
  {
    goto LABEL_103;
  }
  unsigned int v3 = v28;
  if (v29 - v28 == 4)
  {
    uint64_t v11 = 0;
    int v12 = 0;
    do
      int v12 = v28[v11++] | (v12 << 8);
    while (v11 != 4);
    if (v12 > 16908288)
    {
      if (v12 == 16908289)
      {
        uint64_t v10 = 1229539657;
        goto LABEL_104;
      }
      if (v12 == 33620224)
      {
        uint64_t v10 = 370546198;
        goto LABEL_104;
      }
    }
    else
    {
      if (v12 == 65794)
      {
        uint64_t v10 = 2492765332;
        goto LABEL_104;
      }
      if (v12 == 16777729)
      {
        uint64_t v10 = 1633771873;
        goto LABEL_104;
      }
    }
    goto LABEL_103;
  }
  if (v29 - v28 == 16)
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    unint64_t v6 = 0;
    do
    {
      *((void *)&v7 + 1) = v6;
      *(void *)&long long v7 = v5;
      unint64_t v6 = v7 >> 56;
      unint64_t v5 = v28[v4++] | (v5 << 8);
    }
    while (v4 != 16);
    if ((__int128)__PAIR128__(0x101020201010202, 0x1000100010000) < (__int128)__PAIR128__(v6, v5))
    {
      if (v6 == 0x101020201010202 && v5 == 0x1000100010001)
      {
        uint64_t v10 = 1364283729;
        goto LABEL_104;
      }
      if (v6 == 0x202010102020101 && v5 == 0x101000001010000)
      {
        uint64_t v10 = 1094795585;
        goto LABEL_104;
      }
    }
    else
    {
      if (v6 == 0x10100000101 && v5 == 0x101020201010202)
      {
        uint64_t v10 = 353703189;
        goto LABEL_104;
      }
      if (v6 == 0x101000001010000 && v5 == 0x202010102020101)
      {
        uint64_t v10 = 336860180;
        goto LABEL_104;
      }
    }
    goto LABEL_103;
  }
  memset(&v27, 0, sizeof(v27));
  if (v29 == v28)
  {
    std::string::size_type size = 0;
    unsigned int v16 = 0;
  }
  else
  {
    unint64_t v13 = 0;
    do
    {
      unint64_t v14 = (char)v3[v13];
      uint64_t v15 = "X";
      if (v14 < 3) {
        uint64_t v15 = off_1E6D04DA8[v14];
      }
      std::string::append(&v27, v15, 1uLL);
      ++v13;
      unsigned int v3 = v28;
    }
    while (v13 < v29 - v28);
    unsigned int v16 = HIBYTE(v27.__r_.__value_.__r.__words[2]);
    std::string::size_type size = v27.__r_.__value_.__l.__size_;
  }
  uint64_t v10 = 2172748160;
  if ((v16 & 0x80u) == 0) {
    std::string::size_type size = v16;
  }
  if (size != 36) {
    goto LABEL_63;
  }
  if ((v16 & 0x80u) == 0) {
    unint64_t v20 = &v27;
  }
  else {
    unint64_t v20 = (std::string *)v27.__r_.__value_.__r.__words[0];
  }
  if (!memcmp(v20, "GBGGRGRGRBGBGBGGRGGRGGBGBGBRGRGRGGBG", 0x24uLL))
  {
    BOOL v21 = 0;
    goto LABEL_99;
  }
  if (!memcmp(v20, "BGGRGGGRBGBRBGGRGGRGGBGGGBRGRBRGGBGG", 0x24uLL))
  {
    BOOL v21 = 0;
    uint64_t v10 = 2172748161;
    goto LABEL_99;
  }
  if (!memcmp(v20, "GGRGGBRBGBRGGGRGGBGGBGGRBRGRBGGGBGGR", 0x24uLL))
  {
    BOOL v21 = 0;
    uint64_t v10 = 2172748162;
  }
  else
  {
LABEL_63:
    if (sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "GRGGBGBGBRGRGRGGBGGBGGRGRGRBGBGBGGRG"))
    {
      BOOL v21 = 0;
      uint64_t v10 = 2172748163;
    }
    else if (sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "RGGBGGGBRGRBRGGBGGBGGRGGGRBGBRBGGRGG"))
    {
      BOOL v21 = 0;
      uint64_t v10 = 2172748164;
    }
    else if (sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "GGBGGRBRGRBGGGBGGRGGRGGBRBGBRGGGRGGB"))
    {
      BOOL v21 = 0;
      uint64_t v10 = 2172748165;
    }
    else if (sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "RGRBGBGBGGRGGRGGBGBGBRGRGRGGBGGBGGRG"))
    {
      BOOL v21 = 0;
      uint64_t v10 = 2172748166;
    }
    else if (sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "GRBGBRBGGRGGRGGBGGGBRGRBRGGBGGBGGRGG"))
    {
      BOOL v21 = 0;
      uint64_t v10 = 2172748167;
    }
    else if (sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "RBGBRGGGRGGBGGBGGRBRGRBGGGBGGRGGRGGB"))
    {
      BOOL v21 = 0;
      uint64_t v10 = 2172748168;
    }
    else if (sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "BGBRGRGRGGBGGBGGRGRGRBGBGBGGRGGRGGBG"))
    {
      BOOL v21 = 0;
      uint64_t v10 = 2172748169;
    }
    else if (sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "GBRGRBRGGBGGBGGRGGGRBGBRBGGRGGRGGBGG"))
    {
      BOOL v21 = 0;
      uint64_t v10 = 2172748170;
    }
    else if (sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "BRGRBGGGBGGRGGRGGBRBGBRGGGRGGBGGBGGR"))
    {
      BOOL v21 = 0;
      uint64_t v10 = 2172748171;
    }
    else if (sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "GBGGRGGRGGBGBGBRGRGRGGBGGBGGRGRGRBGB"))
    {
      BOOL v21 = 0;
      uint64_t v10 = 2172748172;
    }
    else if (sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "BGGRGGRGGBGGGBRGRBRGGBGGBGGRGGGRBGBR"))
    {
      BOOL v21 = 0;
      uint64_t v10 = 2172748173;
    }
    else if (sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "GGRGGBGGBGGRBRGRBGGGBGGRGGRGGBRBGBRG"))
    {
      BOOL v21 = 0;
      uint64_t v10 = 2172748174;
    }
    else if (sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "GRGGBGGBGGRGRGRBGBGBGGRGGRGGBGBGBRGR"))
    {
      BOOL v21 = 0;
      uint64_t v10 = 2172748175;
    }
    else if (sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "RGGBGGBGGRGGGRBGBRBGGRGGRGGBGGGBRGRB"))
    {
      BOOL v21 = 0;
      uint64_t v10 = 2172748176;
    }
    else
    {
      BOOL v21 = !sub_1DDA48F20((const void **)&v27.__r_.__value_.__l.__data_, "GGBGGRGGRGGBRBGBRGGGRGGBGGBGGRBRGRBG");
      uint64_t v10 = 2172748177;
    }
  }
LABEL_99:
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (!v21) {
      goto LABEL_104;
    }
    goto LABEL_103;
  }
  if (v21) {
LABEL_103:
  }
    uint64_t v10 = sub_1DDA27F98();
LABEL_104:
  if (v28)
  {
    uint64_t v29 = v28;
    operator delete(v28);
  }
  return v10;
}

void sub_1DDA48E48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  int64_t v28 = *(void **)(v26 - 56);
  if (v28)
  {
    *(void *)(v26 - 48) = v28;
    operator delete(v28);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA48EBC(uint64_t a1, void **a2, void **a3)
{
  unint64_t v5 = sub_1DDA2A530(a1, a2);
  unint64_t v6 = v5;
  long long v7 = (void **)(a1 + 8);
  if (v7 != v5 && v5 + 7 != a3) {
    sub_1DDA49578(a3, (char *)v5[7], (char *)v5[8], (unsigned char *)v5[8] - (unsigned char *)v5[7]);
  }
  return v7 != v6;
}

BOOL sub_1DDA48F20(const void **a1, char *__s)
{
  int v4 = *((char *)a1 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v5 = (size_t)a1[1];
  }
  if (v5 != strlen(__s)) {
    return 0;
  }
  if (v4 >= 0) {
    unint64_t v6 = a1;
  }
  else {
    unint64_t v6 = *a1;
  }
  return memcmp(v6, __s, v5) == 0;
}

uint64_t sub_1DDA48F98(uint64_t a1)
{
  uint64_t v2 = a1 + 680;
  sub_1DDA1A880(__p, "IFD0");
  unsigned int v3 = sub_1DDA2A530(v2, __p);
  if ((void **)(a1 + 688) == v3) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = *((unsigned int *)v3 + 14);
  }
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1DDA4900C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA49028(uint64_t a1, unsigned int *a2)
{
  uint64_t v2 = *a2;
  if (v2 >= 4)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return *(unsigned __int8 *)(a1 + v2 + 8);
}

void sub_1DDA49090(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA490A4(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 2)
  {
    if (a2 >> 62) {
      sub_1DDA17F78();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    unint64_t v6 = (char *)sub_1DDA17F90(v3, a2);
    char v7 = &v6[v5 & 0xFFFFFFFFFFFFFFFCLL];
    uint64_t v9 = &v6[4 * v8];
    uint64_t v10 = (char *)*a1;
    uint64_t v11 = (char *)a1[1];
    int v12 = v7;
    if (v11 != *a1)
    {
      int v12 = v7;
      do
      {
        int v13 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v12 - 1) = v13;
        v12 -= 4;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_1DDA4914C(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 2)
  {
    if (a2 >> 62) {
      sub_1DDA17F78();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    unint64_t v6 = (char *)sub_1DDA17F90(v3, a2);
    char v7 = &v6[v5 & 0xFFFFFFFFFFFFFFFCLL];
    uint64_t v9 = &v6[4 * v8];
    uint64_t v10 = (char *)*a1;
    uint64_t v11 = (char *)a1[1];
    int v12 = v7;
    if (v11 != *a1)
    {
      int v12 = v7;
      do
      {
        int v13 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v12 - 1) = v13;
        v12 -= 4;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_1DDA491F8(uint64_t a1)
{
  sub_1DDA49A44(a1);

  JUMPOUT(0x1E01C3DC0);
}

id sub_1DDA49230(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 504), a2, (uint64_t)a2, a4, a5);

  return v5;
}

void *sub_1DDA49264(void *__b, size_t __len, int __c)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_1DDA1A934();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    unint64_t v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *__b = v6;
  }
  else
  {
    *((unsigned char *)__b + 23) = __len;
    unint64_t v6 = __b;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memset(v6, __c, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __b;
}

uint64_t *sub_1DDA49310(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  if (v4)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
    uint64_t v3 = *a1;
  }
  *((_DWORD *)a1 + 4) = 0;
  if (v3) {
    *((_DWORD *)a1 + 4) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 48))(v3);
  }
  return a1;
}

void sub_1DDA49380(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3) {
    sub_1DDA18310(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA49398(uint64_t a1, uint64_t *a2, _DWORD *a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v6;
  if (v6)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
    uint64_t v5 = *(void *)a1;
  }
  *(_DWORD *)(a1 + 16) = -1;
  if (v5) {
    BOOL v7 = *a3 == -1;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    *(_DWORD *)(a1 + 16) = sub_1DDA19CA4(v5);
    sub_1DDA19CAC(*(void *)a1, a3);
  }
  return a1;
}

void sub_1DDA49408(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3) {
    sub_1DDA18310(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA49424(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  if (v2 && *(_DWORD *)(a1 + 16) != -1) {
    sub_1DDA19CAC(v2, (_DWORD *)(a1 + 16));
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
  if (v3) {
    sub_1DDA18310(v3);
  }
  return a1;
}

char *sub_1DDA49474(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  BOOL v7 = result;
  unint64_t v8 = *((void *)result + 2);
  uint64_t v9 = *(char **)result;
  if (a4 > (uint64_t)(v8 - *(void *)result) >> 1)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      unint64_t v8 = 0;
      *BOOL v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if ((a4 & 0x8000000000000000) != 0) {
      sub_1DDA17F78();
    }
    if (v8 <= a4) {
      unint64_t v10 = a4;
    }
    else {
      unint64_t v10 = v8;
    }
    if (v8 >= 0x7FFFFFFFFFFFFFFELL) {
      uint64_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v11 = v10;
    }
    uint64_t result = sub_1DDA1ACCC(v7, v11);
    int v13 = (char *)v7[1];
    int v12 = (void **)(v7 + 1);
    uint64_t v9 = v13;
LABEL_17:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      uint64_t v18 = v9;
      unint64_t v19 = __src;
      goto LABEL_19;
    }
    goto LABEL_20;
  }
  int v12 = (void **)(result + 8);
  unint64_t v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 1;
  if (v15 >= a4) {
    goto LABEL_17;
  }
  unsigned int v16 = &__src[2 * v15];
  if (v14 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v14 - v9);
    uint64_t v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    uint64_t v18 = v9;
    unint64_t v19 = v16;
LABEL_19:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_20:
  *int v12 = &v9[v17];
  return result;
}

void *sub_1DDA49578(void *result, char *__src, char *a3, unint64_t a4)
{
  BOOL v7 = result;
  unint64_t v8 = result[2];
  uint64_t v9 = (char *)*result;
  if (v8 - *result < a4)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      unint64_t v8 = 0;
      *BOOL v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if ((a4 & 0x8000000000000000) != 0) {
      sub_1DDA17F78();
    }
    uint64_t v10 = 2 * v8;
    if (2 * v8 <= a4) {
      uint64_t v10 = a4;
    }
    if (v8 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v11 = v10;
    }
    uint64_t result = sub_1DDA1AC10(v7, v11);
    uint64_t v9 = (char *)v7[1];
    goto LABEL_17;
  }
  int v12 = (unsigned char *)result[1];
  size_t v13 = v12 - v9;
  if (v12 - v9 >= a4)
  {
LABEL_17:
    size_t v16 = a3 - __src;
    if (v16) {
      uint64_t result = memmove(v9, __src, v16);
    }
    unint64_t v15 = &v9[v16];
    goto LABEL_20;
  }
  unint64_t v14 = &__src[v13];
  if (v12 != v9)
  {
    uint64_t result = memmove((void *)*result, __src, v13);
    uint64_t v9 = (char *)v7[1];
  }
  if (a3 != v14) {
    uint64_t result = memmove(v9, v14, a3 - v14);
  }
  unint64_t v15 = &v9[a3 - v14];
LABEL_20:
  v7[1] = v15;
  return result;
}

uint64_t sub_1DDA49688(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1DDA1A934();
  }
  if (a2 > 0x16)
  {
    uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17) {
      uint64_t v4 = a2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = operator new(v4 + 1);
    *(void *)(a1 + 8) = a2;
    *(void *)(a1 + 16) = v5 | 0x8000000000000000;
    *(void *)a1 = v6;
  }
  else
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 23) = a2;
  }
  return a1;
}

uint64_t sub_1DDA49710(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1DDA49788((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1DDA49788(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = (_OWORD *)(a7 - 16);
    do
    {
      long long v9 = *((_OWORD *)a3 - 1);
      a3 -= 2;
      *uint64_t v8 = v9;
      *a3 = 0;
      a3[1] = 0;
      *((void *)&v15 + 1) = v8;
      v7 -= 16;
      --v8;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_1DDA4981C((uint64_t)v12);
  return v10;
}

uint64_t sub_1DDA4981C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1DDA49854(a1);
  }
  return a1;
}

void sub_1DDA49854(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
    if (v3) {
      sub_1DDA18310(v3);
    }
    v1 += 16;
  }
}

void **sub_1DDA49898(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_1DDA498CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v1 = *(void *)(a1 + 16);
  while (v1 != v2)
  {
    *(void *)(a1 + 16) = v1 - 16;
    uint64_t v4 = *(std::__shared_weak_count **)(v1 - 8);
    if (v4)
    {
      sub_1DDA18310(v4);
      uint64_t v1 = *(void *)(a1 + 16);
    }
    else
    {
      v1 -= 16;
    }
  }
}

uint64_t sub_1DDA49920(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_1DDA17F78();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v18 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_1DDA2A160(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  size_t v11 = &v10[24 * v4];
  v15[0] = v10;
  v15[1] = v11;
  size_t v16 = v11;
  size_t v17 = &v10[24 * v9];
  if (*((char *)a2 + 23) < 0)
  {
    sub_1DDA2639C(v11, *(void **)a2, *((void *)a2 + 1));
    size_t v11 = v16;
  }
  else
  {
    long long v12 = *a2;
    *((void *)v11 + 2) = *((void *)a2 + 2);
    *(_OWORD *)size_t v11 = v12;
  }
  size_t v16 = v11 + 24;
  sub_1DDA2A0E8(a1, v15);
  uint64_t v13 = a1[1];
  sub_1DDA2A2C8((uint64_t)v15);
  return v13;
}

void sub_1DDA49A30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1DDA2A2C8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA49A44(uint64_t a1)
{
  *(void *)a1 = &unk_1F395CBE0;
  sub_1DDA2A418(a1 + 1152, *(void **)(a1 + 1160));
  sub_1DDA2A4CC(a1 + 1128, *(char **)(a1 + 1136));
  sub_1DDA2A418(a1 + 1104, *(void **)(a1 + 1112));
  sub_1DDA2A418(a1 + 1080, *(void **)(a1 + 1088));
  sub_1DDA49D14(a1 + 1056, *(void **)(a1 + 1064));
  sub_1DDA49D14(a1 + 1032, *(void **)(a1 + 1040));
  sub_1DDA2A418(a1 + 992, *(void **)(a1 + 1000));
  sub_1DDA2A418(a1 + 968, *(void **)(a1 + 976));
  sub_1DDA2A418(a1 + 944, *(void **)(a1 + 952));
  sub_1DDA2A418(a1 + 920, *(void **)(a1 + 928));
  sub_1DDA2A4CC(a1 + 896, *(char **)(a1 + 904));
  sub_1DDA2A4CC(a1 + 872, *(char **)(a1 + 880));
  sub_1DDA2A4CC(a1 + 848, *(char **)(a1 + 856));
  sub_1DDA2A4CC(a1 + 824, *(char **)(a1 + 832));
  sub_1DDA2A418(a1 + 800, *(void **)(a1 + 808));
  sub_1DDA2A418(a1 + 776, *(void **)(a1 + 784));
  sub_1DDA2A4CC(a1 + 752, *(char **)(a1 + 760));
  sub_1DDA2A4CC(a1 + 728, *(char **)(a1 + 736));
  sub_1DDA2A4CC(a1 + 704, *(char **)(a1 + 712));
  sub_1DDA2A4CC(a1 + 680, *(char **)(a1 + 688));
  sub_1DDA2A418(a1 + 656, *(void **)(a1 + 664));
  sub_1DDA2A4CC(a1 + 632, *(char **)(a1 + 640));
  sub_1DDA2A4CC(a1 + 608, *(char **)(a1 + 616));
  sub_1DDA2A4CC(a1 + 584, *(char **)(a1 + 592));
  sub_1DDA2A4CC(a1 + 560, *(char **)(a1 + 568));
  sub_1DDA2A4CC(a1 + 536, *(char **)(a1 + 544));
  sub_1DDA2A4CC(a1 + 512, *(char **)(a1 + 520));

  return sub_1DDA49BE0(a1);
}

uint64_t sub_1DDA49BE0(uint64_t a1)
{
  *(void *)a1 = &unk_1F395B018;
  sub_1DDA2A4CC(a1 + 480, *(char **)(a1 + 488));
  sub_1DDA2A4CC(a1 + 456, *(char **)(a1 + 464));
  sub_1DDA2A4CC(a1 + 432, *(char **)(a1 + 440));
  sub_1DDA2A4CC(a1 + 408, *(char **)(a1 + 416));
  sub_1DDA2A4CC(a1 + 384, *(char **)(a1 + 392));
  sub_1DDA2A4CC(a1 + 360, *(char **)(a1 + 368));
  sub_1DDA2A4CC(a1 + 336, *(char **)(a1 + 344));
  sub_1DDA2A4CC(a1 + 312, *(char **)(a1 + 320));
  sub_1DDA2A4CC(a1 + 288, *(char **)(a1 + 296));
  sub_1DDA2A418(a1 + 264, *(void **)(a1 + 272));
  sub_1DDA2A418(a1 + 240, *(void **)(a1 + 248));
  sub_1DDA2A418(a1 + 216, *(void **)(a1 + 224));
  sub_1DDA2A418(a1 + 192, *(void **)(a1 + 200));
  sub_1DDA2A418(a1 + 168, *(void **)(a1 + 176));
  sub_1DDA2A418(a1 + 144, *(void **)(a1 + 152));
  sub_1DDA2A418(a1 + 120, *(void **)(a1 + 128));

  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 88);
  if (v2) {
    sub_1DDA18310(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 32);
  if (v3) {
    sub_1DDA18310(v3);
  }
  unint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }
  return a1;
}

void sub_1DDA49D14(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1DDA49D14(a1, *a2);
    sub_1DDA49D14(a1, a2[1]);
    sub_1DDA49D70((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_1DDA49D70(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

id sub_1DDA49DC8(void *a1)
{
  return sub_1DDA49DF0(a1[7], (uint64_t *)(*(void *)(a1[4] + 8) + 48), *(_DWORD *)(*(void *)(a1[5] + 8) + 48), *(_DWORD *)(*(void *)(a1[6] + 8) + 24));
}

id sub_1DDA49DF0(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  int v23 = a3;
  sub_1DDA1B4D8((int *)&__p, &v23);
  sub_1DDA1A94C(v22, a2, (uint64_t)&__p, 0);
  uint64_t v6 = sub_1DDA49F48(a4);
  uint64_t v7 = *a2;
  unsigned int v19 = a4;
  sub_1DDA3E468(v7, &v19, (uint64_t *)&__p);
  size_t v11 = (char *)__p;
  long long v12 = v21;
  if (__p != v21)
  {
    do
    {
      uint64_t v13 = objc_msgSend_numberWithChar_(NSNumber, v8, *v11, v9, v10);
      objc_msgSend_addObject_(v6, v14, (uint64_t)v13, v15, v16);

      ++v11;
    }
    while (v11 != v12);
  }
  size_t v17 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1C978], v8, (uint64_t)v6, v9, v10);
  if (__p)
  {
    BOOL v21 = (char *)__p;
    operator delete(__p);
  }

  sub_1DDA1AA18(v22);

  return v17;
}

void sub_1DDA49EFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }

  sub_1DDA1AA18(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA49F48(unint64_t a1)
{
  if (a1 >> 61 || malloc_good_size(8 * a1) >> 32)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  unint64_t v5 = (void *)MEMORY[0x1E4F1CA48];

  return objc_msgSend_arrayWithCapacity_(v5, v2, a1, v3, v4);
}

void sub_1DDA49FF0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

id sub_1DDA4A008(void *a1)
{
  return sub_1DDA4A030(a1[7], (uint64_t *)(*(void *)(a1[4] + 8) + 48), *(_DWORD *)(*(void *)(a1[5] + 8) + 48), *(_DWORD *)(*(void *)(a1[6] + 8) + 24));
}

id sub_1DDA4A030(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  int v23 = a3;
  sub_1DDA1B4D8((int *)&__p, &v23);
  sub_1DDA1A94C(v22, a2, (uint64_t)&__p, 0);
  uint64_t v6 = sub_1DDA49F48(a4);
  uint64_t v7 = *a2;
  unsigned int v19 = a4;
  sub_1DDA3E5D0(v7, &v19, (uint64_t *)&__p);
  size_t v11 = (unsigned __int8 *)__p;
  long long v12 = v21;
  if (__p != v21)
  {
    do
    {
      uint64_t v13 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, *v11, v9, v10);
      objc_msgSend_addObject_(v6, v14, (uint64_t)v13, v15, v16);

      ++v11;
    }
    while (v11 != v12);
  }
  size_t v17 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1C978], v8, (uint64_t)v6, v9, v10);
  if (__p)
  {
    BOOL v21 = (unsigned __int8 *)__p;
    operator delete(__p);
  }

  sub_1DDA1AA18(v22);

  return v17;
}

void sub_1DDA4A13C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }

  sub_1DDA1AA18(&a13);
  _Unwind_Resume(a1);
}

id sub_1DDA4A188(void *a1)
{
  return sub_1DDA4A1B0(a1[7], (uint64_t *)(*(void *)(a1[4] + 8) + 48), *(_DWORD *)(*(void *)(a1[5] + 8) + 48), *(_DWORD *)(*(void *)(a1[6] + 8) + 24));
}

id sub_1DDA4A1B0(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  int v23 = a3;
  sub_1DDA1B4D8((int *)&__p, &v23);
  sub_1DDA1A94C(v22, a2, (uint64_t)&__p, 0);
  uint64_t v6 = sub_1DDA49F48(a4);
  uint64_t v7 = *a2;
  unsigned int v19 = a4;
  sub_1DDA4A308(v7, &v19, (uint64_t *)&__p);
  size_t v11 = (__int16 *)__p;
  long long v12 = v21;
  if (__p != v21)
  {
    do
    {
      uint64_t v13 = objc_msgSend_numberWithShort_(NSNumber, v8, *v11, v9, v10);
      objc_msgSend_addObject_(v6, v14, (uint64_t)v13, v15, v16);

      ++v11;
    }
    while (v11 != v12);
  }
  size_t v17 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1C978], v8, (uint64_t)v6, v9, v10);
  if (__p)
  {
    BOOL v21 = (__int16 *)__p;
    operator delete(__p);
  }

  sub_1DDA1AA18(v22);

  return v17;
}

void sub_1DDA4A2BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }

  sub_1DDA1AA18(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA4A308@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = 2 * v5;
  sub_1DDA4A3A0(a3, v5);
  sub_1DDA19DD0(a1, *a3, v6);
  uint64_t result = sub_1DDA19C94(a1);
  if (result != 1)
  {
    unint64_t v8 = (_WORD *)*a3;
    uint64_t v9 = (_WORD *)a3[1];
    while (v8 != v9)
    {
      *unint64_t v8 = bswap32((unsigned __int16)*v8) >> 16;
      ++v8;
    }
  }
  return result;
}

void sub_1DDA4A384(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA4A3A0(void *a1, uint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1DDA1ACCC(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 2 * a2);
    a1[1] = &v4[2 * a2];
  }
  return a1;
}

void sub_1DDA4A3FC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA4A418(void *a1)
{
  return sub_1DDA4A440(a1[7], (uint64_t *)(*(void *)(a1[4] + 8) + 48), *(_DWORD *)(*(void *)(a1[5] + 8) + 48), *(_DWORD *)(*(void *)(a1[6] + 8) + 24));
}

id sub_1DDA4A440(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  int v23 = a3;
  sub_1DDA1B4D8((int *)&__p, &v23);
  sub_1DDA1A94C(v22, a2, (uint64_t)&__p, 0);
  uint64_t v6 = sub_1DDA49F48(a4);
  uint64_t v7 = *a2;
  unsigned int v19 = a4;
  sub_1DDA4A598(v7, &v19, (uint64_t *)&__p);
  size_t v11 = (unsigned __int16 *)__p;
  long long v12 = v21;
  if (__p != v21)
  {
    do
    {
      uint64_t v13 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v8, *v11, v9, v10);
      objc_msgSend_addObject_(v6, v14, (uint64_t)v13, v15, v16);

      ++v11;
    }
    while (v11 != v12);
  }
  size_t v17 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1C978], v8, (uint64_t)v6, v9, v10);
  if (__p)
  {
    BOOL v21 = (unsigned __int16 *)__p;
    operator delete(__p);
  }

  sub_1DDA1AA18(v22);

  return v17;
}

void sub_1DDA4A54C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }

  sub_1DDA1AA18(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA4A598@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = 2 * v5;
  sub_1DDA1AC54(a3, v5);
  sub_1DDA19DD0(a1, *a3, v6);
  uint64_t result = sub_1DDA19C94(a1);
  if (result != 1)
  {
    unint64_t v8 = (_WORD *)*a3;
    uint64_t v9 = (_WORD *)a3[1];
    while (v8 != v9)
    {
      *unint64_t v8 = bswap32((unsigned __int16)*v8) >> 16;
      ++v8;
    }
  }
  return result;
}

void sub_1DDA4A614(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA4A630(void *a1)
{
  return sub_1DDA4A658(a1[7], (uint64_t *)(*(void *)(a1[4] + 8) + 48), *(_DWORD *)(*(void *)(a1[5] + 8) + 48), *(_DWORD *)(*(void *)(a1[6] + 8) + 24));
}

id sub_1DDA4A658(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  int v23 = a3;
  sub_1DDA1B4D8((int *)&__p, &v23);
  sub_1DDA1A94C(v22, a2, (uint64_t)&__p, 0);
  uint64_t v6 = sub_1DDA49F48(a4);
  uint64_t v7 = *a2;
  unsigned int v19 = a4;
  sub_1DDA4A7B0(v7, &v19, (uint64_t *)&__p);
  size_t v11 = (unsigned int *)__p;
  long long v12 = v21;
  if (__p != v21)
  {
    do
    {
      uint64_t v13 = objc_msgSend_numberWithInt_(NSNumber, v8, *v11, v9, v10);
      objc_msgSend_addObject_(v6, v14, (uint64_t)v13, v15, v16);

      ++v11;
    }
    while (v11 != v12);
  }
  size_t v17 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1C978], v8, (uint64_t)v6, v9, v10);
  if (__p)
  {
    BOOL v21 = (unsigned int *)__p;
    operator delete(__p);
  }

  sub_1DDA1AA18(v22);

  return v17;
}

void sub_1DDA4A764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }

  sub_1DDA1AA18(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA4A7B0@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v5 = *a2;
  uint64_t v6 = 4 * v5;
  sub_1DDA4A844(a3, v5);
  sub_1DDA19DD0(a1, *a3, v6);
  uint64_t result = sub_1DDA19C94(a1);
  if (result != 1)
  {
    unint64_t v8 = (unsigned int *)*a3;
    uint64_t v9 = (unsigned int *)a3[1];
    while (v8 != v9)
    {
      *unint64_t v8 = bswap32(*v8);
      ++v8;
    }
  }
  return result;
}

void sub_1DDA4A828(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA4A844(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1DDA17F34(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 4 * a2);
    a1[1] = &v4[4 * a2];
  }
  return a1;
}

void sub_1DDA4A8A0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA4A8BC(void *a1)
{
  return sub_1DDA4A8E4(a1[7], (uint64_t *)(*(void *)(a1[4] + 8) + 48), *(_DWORD *)(*(void *)(a1[5] + 8) + 48), *(_DWORD *)(*(void *)(a1[6] + 8) + 24));
}

id sub_1DDA4A8E4(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  int v23 = a3;
  sub_1DDA1B4D8((int *)&__p, &v23);
  sub_1DDA1A94C(v22, a2, (uint64_t)&__p, 0);
  uint64_t v6 = sub_1DDA49F48(a4);
  uint64_t v7 = *a2;
  unsigned int v19 = a4;
  sub_1DDA4AA3C(v7, &v19, (uint64_t *)&__p);
  size_t v11 = (unsigned int *)__p;
  long long v12 = v21;
  if (__p != v21)
  {
    do
    {
      uint64_t v13 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v8, *v11, v9, v10);
      objc_msgSend_addObject_(v6, v14, (uint64_t)v13, v15, v16);

      ++v11;
    }
    while (v11 != v12);
  }
  size_t v17 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1C978], v8, (uint64_t)v6, v9, v10);
  if (__p)
  {
    BOOL v21 = (unsigned int *)__p;
    operator delete(__p);
  }

  sub_1DDA1AA18(v22);

  return v17;
}

void sub_1DDA4A9F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }

  sub_1DDA1AA18(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA4AA3C@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v5 = *a2;
  uint64_t v6 = 4 * v5;
  sub_1DDA1AD40(a3, v5);
  sub_1DDA19DD0(a1, *a3, v6);
  uint64_t result = sub_1DDA19C94(a1);
  if (result != 1)
  {
    unint64_t v8 = (unsigned int *)*a3;
    uint64_t v9 = (unsigned int *)a3[1];
    while (v8 != v9)
    {
      *unint64_t v8 = bswap32(*v8);
      ++v8;
    }
  }
  return result;
}

void sub_1DDA4AAB4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA4AAD0(void *a1)
{
  uint64_t v2 = sub_1DDA4A658(a1[7], (uint64_t *)(*(void *)(a1[4] + 8) + 48), *(_DWORD *)(*(void *)(a1[5] + 8) + 48), 2 * *(_DWORD *)(*(void *)(a1[6] + 8) + 24));
  uint64_t v7 = sub_1DDA49F48(*(unsigned int *)(*(void *)(a1[6] + 8) + 24));
  for (unint64_t i = 0; i < objc_msgSend_count(v2, v3, v4, v5, v6); unint64_t i = v20 + 1)
  {
    long long v12 = NSNumber;
    uint64_t v13 = objc_msgSend_objectAtIndexedSubscript_(v2, v9, i, v10, v11);
    objc_msgSend_doubleValue(v13, v14, v15, v16, v17);
    double v19 = v18;
    unint64_t v20 = i + 1;
    char v24 = objc_msgSend_objectAtIndexedSubscript_(v2, v21, i + 1, v22, v23);
    objc_msgSend_doubleValue(v24, v25, v26, v27, v28);
    unint64_t v34 = objc_msgSend_numberWithDouble_(v12, v30, v31, v32, v33, v19 / v29);
    objc_msgSend_addObject_(v7, v35, (uint64_t)v34, v36, v37);
  }
  int v38 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1C978], v9, (uint64_t)v7, v10, v11);

  return v38;
}

void sub_1DDA4AC18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA4AC5C(void *a1)
{
  uint64_t v2 = sub_1DDA4A8E4(a1[7], (uint64_t *)(*(void *)(a1[4] + 8) + 48), *(_DWORD *)(*(void *)(a1[5] + 8) + 48), 2 * *(_DWORD *)(*(void *)(a1[6] + 8) + 24));
  uint64_t v7 = sub_1DDA49F48(*(unsigned int *)(*(void *)(a1[6] + 8) + 24));
  for (unint64_t i = 0; i < objc_msgSend_count(v2, v3, v4, v5, v6); unint64_t i = v20 + 1)
  {
    long long v12 = NSNumber;
    uint64_t v13 = objc_msgSend_objectAtIndexedSubscript_(v2, v9, i, v10, v11);
    objc_msgSend_doubleValue(v13, v14, v15, v16, v17);
    double v19 = v18;
    unint64_t v20 = i + 1;
    char v24 = objc_msgSend_objectAtIndexedSubscript_(v2, v21, i + 1, v22, v23);
    objc_msgSend_doubleValue(v24, v25, v26, v27, v28);
    unint64_t v34 = objc_msgSend_numberWithDouble_(v12, v30, v31, v32, v33, v19 / v29);
    objc_msgSend_addObject_(v7, v35, (uint64_t)v34, v36, v37);
  }
  int v38 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1C978], v9, (uint64_t)v7, v10, v11);

  return v38;
}

void sub_1DDA4ADA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA4ADE8(void *a1)
{
  return sub_1DDA4AE10(a1[7], (uint64_t *)(*(void *)(a1[4] + 8) + 48), *(_DWORD *)(*(void *)(a1[5] + 8) + 48), *(_DWORD *)(*(void *)(a1[6] + 8) + 24));
}

id sub_1DDA4AE10(uint64_t a1, uint64_t *a2, int a3, unsigned int a4)
{
  int v25 = a3;
  sub_1DDA1B4D8((int *)&__p, &v25);
  sub_1DDA1A94C(v24, a2, (uint64_t)&__p, 0);
  uint64_t v6 = sub_1DDA49F48(a4);
  uint64_t v7 = *a2;
  unsigned int v21 = a4;
  sub_1DDA4AF68(v7, &v21, (uint64_t *)&__p);
  uint64_t v13 = __p;
  long long v14 = v23;
  if (__p != v23)
  {
    do
    {
      LODWORD(v12) = *v13;
      uint64_t v15 = objc_msgSend_numberWithFloat_(NSNumber, v8, v9, v10, v11, v12);
      objc_msgSend_addObject_(v6, v16, (uint64_t)v15, v17, v18);

      ++v13;
    }
    while (v13 != v14);
  }
  double v19 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1C978], v8, (uint64_t)v6, v10, v11);
  if (__p)
  {
    uint64_t v23 = __p;
    operator delete(__p);
  }

  sub_1DDA1AA18(v24);

  return v19;
}

void sub_1DDA4AF1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }

  sub_1DDA1AA18(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA4AF68@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v5 = *a2;
  uint64_t v6 = 4 * v5;
  sub_1DDA4AFFC(a3, v5);
  sub_1DDA19DD0(a1, *a3, v6);
  uint64_t result = sub_1DDA19C94(a1);
  if (result != 1)
  {
    unint64_t v8 = (unsigned int *)*a3;
    uint64_t v9 = (unsigned int *)a3[1];
    while (v8 != v9)
    {
      *unint64_t v8 = bswap32(*v8);
      ++v8;
    }
  }
  return result;
}

void sub_1DDA4AFE0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA4AFFC(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1DDA17F34(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 4 * a2);
    a1[1] = &v4[4 * a2];
  }
  return a1;
}

void sub_1DDA4B058(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA4B074@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v5 = *a2;
  uint64_t v6 = 8 * v5;
  sub_1DDA24B78(a3, v5);
  sub_1DDA19DD0(a1, *a3, v6);
  uint64_t result = sub_1DDA19C94(a1);
  if (result != 1)
  {
    unint64_t v8 = (unint64_t *)*a3;
    uint64_t v9 = (unint64_t *)a3[1];
    while (v8 != v9)
    {
      *unint64_t v8 = bswap64(*v8);
      ++v8;
    }
  }
  return result;
}

void sub_1DDA4B0EC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA4B108(void *a1, size_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1DDA1AC10(a1, a2);
    uint64_t v4 = (char *)a1[1];
    unint64_t v5 = &v4[a2];
    bzero(v4, a2);
    a1[1] = v5;
  }
  return a1;
}

void sub_1DDA4B160(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA4B17C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1DDA4B17C(a1, *a2);
    sub_1DDA4B17C(a1, a2[1]);
    operator delete(a2);
  }
}

uint64_t **sub_1DDA4B1D0(uint64_t **a1, unsigned int *a2, _DWORD *a3)
{
  uint64_t v6 = a1 + 1;
  unint64_t v5 = a1[1];
  if (v5)
  {
    unsigned int v7 = *a2;
    while (1)
    {
      while (1)
      {
        unint64_t v8 = (uint64_t **)v5;
        unsigned int v9 = *((_DWORD *)v5 + 7);
        if (v7 >= v9) {
          break;
        }
        unint64_t v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      unint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    unint64_t v8 = a1 + 1;
LABEL_10:
    uint64_t v10 = (uint64_t *)operator new(0x20uLL);
    *((_DWORD *)v10 + 7) = *a3;
    sub_1DDA25078(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }
  return v8;
}

void *sub_1DDA4B28C(void *a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1E01C3C40](v13, a1);
  if (v13[0])
  {
    uint64_t v6 = (uint64_t)a1 + *(void *)(*a1 - 24);
    uint64_t v7 = *(void *)(v6 + 40);
    int v8 = *(_DWORD *)(v6 + 8);
    int v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      uint64_t v10 = std::locale::use_facet(&v14, MEMORY[0x1E4FBA258]);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20) {
      uint64_t v11 = a2 + a3;
    }
    else {
      uint64_t v11 = a2;
    }
    if (!sub_1DDA4B430(v7, a2, v11, a2 + a3, v6, (char)v9)) {
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 5);
    }
  }
  MEMORY[0x1E01C3C50](v13);
  return a1;
}

void sub_1DDA4B3C8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  MEMORY[0x1E01C3C50](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(void *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x1DDA4B3A8);
}

void sub_1DDA4B41C(_Unwind_Exception *a1)
{
}

uint64_t sub_1DDA4B430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6 = a1;
  if (a1)
  {
    uint64_t v11 = *(void *)(a5 + 24);
    if (v11 <= a4 - a2) {
      int64_t v12 = 0;
    }
    else {
      int64_t v12 = v11 - (a4 - a2);
    }
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1) != a3 - a2) {
      return 0;
    }
    if (v12 >= 1)
    {
      sub_1DDA49264(__p, v12, __c);
      uint64_t v13 = v18 >= 0 ? __p : (void **)__p[0];
      uint64_t v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(void *)v6 + 96))(v6, v13, v12);
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      if (v14 != v12) {
        return 0;
      }
    }
    uint64_t v15 = a4 - a3;
    if (v15 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 96))(v6, a3, v15) == v15) {
      *(void *)(a5 + 24) = 0;
    }
    else {
      return 0;
    }
  }
  return v6;
}

void sub_1DDA4B59C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA4B5B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1DDA4B658(a1);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1DDA1A934();
  }
  unint64_t v5 = (const void *)result;
  size_t v6 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    int v9 = operator new(v7 + 1);
    a2[1] = v6;
    a2[2] = v8 | 0x8000000000000000;
    *a2 = v9;
    a2 = v9;
  }
  else
  {
    *((unsigned char *)a2 + 23) = v4;
    if (!v4) {
      goto LABEL_9;
    }
  }
  uint64_t result = (uint64_t)memmove(a2, v5, v6);
LABEL_9:
  *((unsigned char *)a2 + v6) = 0;
  return result;
}

uint64_t sub_1DDA4B658(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 96);
  if ((v1 & 0x10) != 0)
  {
    unint64_t v3 = *(void *)(a1 + 48);
    if (*(void *)(a1 + 88) < v3) {
      *(void *)(a1 + 88) = v3;
    }
    return *(void *)(a1 + 40);
  }
  else if ((v1 & 8) != 0)
  {
    return *(void *)(a1 + 16);
  }
  else
  {
    return 0;
  }
}

_DWORD *sub_1DDA4B6A4(_DWORD *result, int *a2)
{
  uint64_t v2 = *result - (uint64_t)*a2;
  uint64_t v3 = v2 << 31 >> 31;
  *uint64_t result = v2;
  if (v3 != v2 || v3 < 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA4B718(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_1DDA4B72C(uint64_t **a1, void **a2, uint64_t a3, long long **a4)
{
  size_t v6 = (uint64_t **)sub_1DDA4B7C4((uint64_t)a1, &v9, a2);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_1DDA4B858((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1DDA25078(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

void *sub_1DDA4B7C4(uint64_t a1, void *a2, void **a3)
{
  unint64_t v5 = (void *)(a1 + 8);
  unint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = v4;
        uint64_t v8 = v4 + 4;
        if ((sub_1DDA2A5B0(a3, (void **)v4 + 4) & 0x80) == 0) {
          break;
        }
        unint64_t v4 = (void *)*v7;
        unint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if ((sub_1DDA2A5B0(v8, a3) & 0x80) == 0) {
        break;
      }
      unint64_t v5 = v7 + 1;
      unint64_t v4 = (void *)v7[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v7 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

unsigned char *sub_1DDA4B858@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  size_t v6 = (char *)operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 32;
  uint64_t v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_1DDA2639C(result, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    *((void *)v6 + 6) = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }
  *((_DWORD *)v6 + 14) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1DDA4B8E4(_Unwind_Exception *a1)
{
  *int v1 = 0;
  sub_1DDA4B900(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1DDA4B900(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 55) < 0) {
      operator delete(__p[4]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

uint64_t *sub_1DDA4B960(uint64_t **a1, void **a2, uint64_t a3, long long **a4)
{
  size_t v6 = (uint64_t **)sub_1DDA4B7C4((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    sub_1DDA4BA0C((uint64_t)a1, a4, (uint64_t)v10);
    sub_1DDA25078(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_1DDA4BAA4((uint64_t)v10, 0);
  }
  return v7;
}

unsigned char *sub_1DDA4BA0C@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  size_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 4;
  uint64_t v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_1DDA2639C(result, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    v6[6] = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }
  v6[7] = 0;
  v6[8] = 0;
  v6[9] = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1DDA4BA8C(_Unwind_Exception *a1)
{
  sub_1DDA4BAA4(v1, 0);
  _Unwind_Resume(a1);
}

void sub_1DDA4BAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1DDA2A474((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t *sub_1DDA4BAFC(uint64_t **a1, void **a2, uint64_t a3, long long **a4)
{
  size_t v6 = (uint64_t **)sub_1DDA4B7C4((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    sub_1DDA4BBA8((uint64_t)a1, a4, (uint64_t)v10);
    sub_1DDA25078(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_1DDA4BC40((uint64_t)v10, 0);
  }
  return v7;
}

unsigned char *sub_1DDA4BBA8@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  size_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 4;
  uint64_t v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_1DDA2639C(result, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    v6[6] = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }
  v6[7] = 0;
  v6[8] = 0;
  v6[9] = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1DDA4BC28(_Unwind_Exception *a1)
{
  sub_1DDA4BC40(v1, 0);
  _Unwind_Resume(a1);
}

void sub_1DDA4BC40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1DDA49D70((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t *sub_1DDA4BC98(uint64_t **a1, void **a2, uint64_t a3, long long **a4)
{
  size_t v6 = (uint64_t **)sub_1DDA4B7C4((uint64_t)a1, &v9, a2);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_1DDA4BD30((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1DDA25078(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

unsigned char *sub_1DDA4BD30@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  size_t v6 = (char *)operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 32;
  uint64_t v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_1DDA2639C(result, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    *((void *)v6 + 6) = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }
  *((_WORD *)v6 + 28) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1DDA4BDBC(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_1DDA4B900(v3, v2);
  _Unwind_Resume(a1);
}

_DWORD *sub_1DDA4BDD8(_DWORD *result, unsigned int *a2)
{
  unint64_t v2 = *result * (unint64_t)*a2;
  *uint64_t result = v2;
  if ((v2 & 0xFFFFFFFF00000000) != 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA4BE44(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_1DDA4BE58(uint64_t **a1, void **a2, uint64_t a3, long long **a4)
{
  size_t v6 = (uint64_t **)sub_1DDA4B7C4((uint64_t)a1, &v9, a2);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_1DDA4BEF0((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1DDA25078(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

unsigned char *sub_1DDA4BEF0@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  size_t v6 = (char *)operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 32;
  uint64_t v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_1DDA2639C(result, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    *((void *)v6 + 6) = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }
  *((void *)v6 + 7) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1DDA4BF7C(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_1DDA4B900(v3, v2);
  _Unwind_Resume(a1);
}

void *sub_1DDA4BF98@<X0>(void *a1@<X1>, int *a2@<X2>, unsigned int *a3@<X3>, unsigned int *a4@<X4>, void *a5@<X8>)
{
  uint64_t v10 = operator new(0x48uLL);
  uint64_t result = sub_1DDA4C014(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  return result;
}

void sub_1DDA4C000(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA4C014(void *a1, void *a2, int *a3, unsigned int *a4, unsigned int *a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395CF18;
  sub_1DDB57E1C((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1DDA4C068(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA4C07C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395CF18;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA4C09C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395CF18;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA4C0F0(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

_DWORD *sub_1DDA4C118(_DWORD *result, _DWORD *a2)
{
  BOOL v2 = *result >= *a2;
  *result -= *a2;
  if (!v2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA4C180(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA4C194@<X0>(uint64_t a1@<X1>, unsigned int *a2@<X2>, void *a3@<X8>)
{
  size_t v6 = operator new(0x68uLL);
  uint64_t result = sub_1DDA4C210(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_1DDA4C1FC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA4C210(void *a1, uint64_t a2, unsigned int *a3)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395CF68;
  sub_1DDAD7B30(a1 + 3, a2, *a3);
  return a1;
}

void sub_1DDA4C25C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA4C270(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395CF68;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA4C290(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395CF68;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA4C2E4(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_1DDA4C30C(uint64_t a1)
{
  BOOL v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2) {
    sub_1DDA18310(v2);
  }
  return a1;
}

void *sub_1DDA4C33C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  unint64_t v4 = operator new(0x48uLL);
  v4[1] = 0;
  v4[2] = 0;
  *unint64_t v4 = &unk_1F395CFE8;
  uint64_t result = sub_1DDA4CF50(v4 + 3, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void *sub_1DDA4C3A8@<X0>(long long *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_1DDA4CFC0(a1, a2, a3);
}

void sub_1DDA4C3D4(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  id v5 = a1;
  sub_1DDA4D0F4(&v5, a2, a3);
}

void sub_1DDA4C424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_1DDA4C438(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  id v5 = a1;
  sub_1DDA4D22C(&v5, a2, a3);
}

void sub_1DDA4C488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

__CFString *sub_1DDA4C49C(_DWORD *a1)
{
  unsigned int v1 = *a1 - 1;
  if (v1 > 8) {
    return @"0";
  }
  else {
    return off_1E6D04DC0[v1];
  }
}

uint64_t sub_1DDA4C4C8(_DWORD *a1)
{
  int v1 = *a1 - 1;
  if (v1 > 8) {
    return 0;
  }
  else {
    return dword_1DDBF947C[v1];
  }
}

void *sub_1DDA4C4F0(void *a1, long long *a2, void *a3)
{
  *a1 = &unk_1F395CFB8;
  id v5 = a1 + 1;
  if (*((char *)a2 + 23) < 0)
  {
    sub_1DDA2639C(v5, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v6 = *a2;
    v5[2] = *((void *)a2 + 2);
    *(_OWORD *)id v5 = v6;
  }
  uint64_t v7 = a3[1];
  a1[4] = *a3;
  a1[5] = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  return a1;
}

uint64_t sub_1DDA4C574(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  *(void *)a1 = &unk_1F395CFB8;
  sub_1DDA1A880((void *)(a1 + 8), "best");
  uint64_t v6 = a3[1];
  *(void *)(a1 + 32) = *a3;
  *(void *)(a1 + 40) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  id v7 = v5;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v11 = objc_msgSend_objectForKeyedSubscript_(&unk_1F39B0838, v8, (uint64_t)v7, v9, v10);
    if (v11)
    {
      id v12 = v7;
      uint64_t v17 = (char *)objc_msgSend_UTF8String(v12, v13, v14, v15, v16);
      sub_1DDA1AB54((std::string *)(a1 + 8), v17);
    }
  }
  return a1;
}

void sub_1DDA4C660(_Unwind_Exception *a1)
{
  uint64_t v6 = *(std::__shared_weak_count **)(v2 + 40);
  if (v6) {
    sub_1DDA18310(v6);
  }
  if (*(char *)(v2 + 31) < 0) {
    operator delete(*v3);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1DDA4C6AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  *(void *)a1 = &unk_1F395CFB8;
  sub_1DDA1A880((void *)(a1 + 8), "best");
  uint64_t v6 = a3[1];
  *(void *)(a1 + 32) = *a3;
  *(void *)(a1 + 40) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  id v7 = v5;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    unint64_t v12 = objc_msgSend_unsignedLongValue(v7, v8, v9, v10, v11);
    if (v12 < objc_msgSend_count(&unk_1F39ABC60, v13, v14, v15, v16))
    {
      objc_msgSend_objectAtIndexedSubscript_(&unk_1F39ABC60, v17, v12, v18, v19);
      id v20 = objc_claimAutoreleasedReturnValue();
      int v25 = (char *)objc_msgSend_UTF8String(v20, v21, v22, v23, v24);
      sub_1DDA1AB54((std::string *)(a1 + 8), v25);
    }
  }

  return a1;
}

void sub_1DDA4C7B0(_Unwind_Exception *a1)
{
  uint64_t v6 = v5;

  uint64_t v8 = *(std::__shared_weak_count **)(v2 + 40);
  if (v8) {
    sub_1DDA18310(v8);
  }
  if (*(char *)(v2 + 31) < 0) {
    operator delete(*v3);
  }

  _Unwind_Resume(a1);
}

void sub_1DDA4C7FC(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = a1;
  id v7 = v3;
  *a2 = 0;
  a2[1] = 0;
  if (!v3)
  {
    uint64_t v10 = 0;
LABEL_18:
    sub_1DDA4D364("best", &v22);
    long long v17 = v22;
    long long v22 = 0uLL;
    *(_OWORD *)a2 = v17;
    if (v10)
    {
      sub_1DDA18310(v10);
      if (*((void *)&v22 + 1)) {
        sub_1DDA18310(*((std::__shared_weak_count **)&v22 + 1));
      }
    }
    goto LABEL_21;
  }
  uint64_t v8 = *MEMORY[0x1E4F2FF38];
  uint64_t v9 = objc_msgSend_objectForKeyedSubscript_(v3, v4, *MEMORY[0x1E4F2FF38], v5, v6);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v20 = 0;
    unsigned int v21 = 0;
    sub_1DDA4C3D4(v9, &v20, &v22);
    uint64_t v10 = (std::__shared_weak_count *)*((void *)&v22 + 1);
    unint64_t v11 = v22;
    long long v22 = 0uLL;
    *(_OWORD *)a2 = __PAIR128__((unint64_t)v10, v11);
    if (v21) {
      sub_1DDA18310(v21);
    }

    if (v11) {
      goto LABEL_21;
    }
  }
  else
  {

    uint64_t v10 = 0;
  }
  uint64_t v15 = objc_msgSend_objectForKeyedSubscript_(v7, v12, v8, v13, v14);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {

    goto LABEL_18;
  }
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  sub_1DDA4C438(v15, &v18, &v22);
  long long v16 = v22;
  long long v22 = 0uLL;
  *(_OWORD *)a2 = v16;
  if (v10)
  {
    sub_1DDA18310(v10);
    if (*((void *)&v22 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v22 + 1));
    }
  }
  if (v19) {
    sub_1DDA18310(v19);
  }

  if (!(void)v16)
  {
    uint64_t v10 = (std::__shared_weak_count *)*((void *)&v16 + 1);
    goto LABEL_18;
  }
LABEL_21:
}

void sub_1DDA4C994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }

  if (v11) {
    sub_1DDA18310(v11);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1DDA4CA00(uint64_t a1)
{
  uint64_t v2 = operator new(0x24uLL);
  v2[8] = 9;
  *(_OWORD *)uint64_t v2 = xmmword_1DDBF9410;
  *((_OWORD *)v2 + 1) = unk_1DDBF9420;
  id v3 = (char *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    if (!*(void *)(a1 + 16))
    {
LABEL_9:
      uint64_t v6 = 2;
      goto LABEL_10;
    }
    id v3 = *(char **)v3;
  }
  else if (!*(unsigned char *)(a1 + 31))
  {
    goto LABEL_9;
  }
  int v4 = *v3;
  if (v4 < 48) {
    goto LABEL_9;
  }
  uint64_t v5 = v4 - 48;
  if (v5 > 8) {
    goto LABEL_9;
  }
  uint64_t v6 = v2[v5];
LABEL_10:
  operator delete(v2);
  return v6;
}

uint64_t sub_1DDA4CA90(uint64_t a1)
{
  int v1 = (const std::string *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    if (*(void *)(a1 + 16) != 4 || *(unsigned char *)(v1->__r_.__value_.__r.__words[0] + 3) != 100)
    {
      uint64_t v2 = *(void *)(a1 + 16);
      goto LABEL_9;
    }
    return 1;
  }
  uint64_t v2 = *(unsigned __int8 *)(a1 + 31);
  if (v2 == 4 && *(unsigned char *)(a1 + 11) == 100) {
    return 1;
  }
LABEL_9:
  if (v2 != 5) {
    return 0;
  }
  std::string::basic_string(&__p, v1, 1uLL, 4uLL, (std::allocator<char> *)&v6);
  BOOL v3 = std::string::compare(&__p, ".dng") == 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v3;
}

uint64_t sub_1DDA4CB54(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
  {
    if (*(void *)(a1 + 16)) {
      return std::string::compare((const std::string *)(a1 + 8), "best") == 0;
    }
  }
  else if (*(unsigned char *)(a1 + 31))
  {
    return std::string::compare((const std::string *)(a1 + 8), "best") == 0;
  }
  return 1;
}

uint64_t sub_1DDA4CBA0(uint64_t a1, uint64_t *a2)
{
  int v4 = sub_1DDA4CA00(a1);
  if (v4 != sub_1DDA4CA00(*a2)) {
    return 0xFFFFFFFFLL;
  }
  int v5 = sub_1DDA4CA90(a1);
  if (v5 != sub_1DDA4CA90(*a2)) {
    return 0xFFFFFFFFLL;
  }
  if (*(char *)(a1 + 31) < 0)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
  }
  else if (*(unsigned char *)(a1 + 31))
  {
LABEL_5:
    BOOL v6 = std::string::compare((const std::string *)(a1 + 8), "best") == 0;
    goto LABEL_8;
  }
  BOOL v6 = 1;
LABEL_8:
  uint64_t v7 = *a2;
  if ((*(char *)(*a2 + 31) & 0x80000000) == 0)
  {
    if (*(unsigned char *)(*a2 + 31)) {
      goto LABEL_10;
    }
LABEL_13:
    if (!v6) {
      return 0xFFFFFFFFLL;
    }
    return 0;
  }
  if (!*(void *)(v7 + 16)) {
    goto LABEL_13;
  }
LABEL_10:
  if (v6 != (std::string::compare((const std::string *)(v7 + 8), "best") == 0)) {
    return 0xFFFFFFFFLL;
  }
  return 0;
}

id sub_1DDA4CC84(uint64_t a1)
{
  unsigned int v1 = sub_1DDA4CA00(a1);
  if (objc_msgSend_count(&unk_1F39ABC78, v2, v3, v4, v5) <= (unint64_t)v1)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v9 = objc_msgSend_objectAtIndexedSubscript_(&unk_1F39ABC78, v6, v1, v7, v8);

  return v9;
}

void sub_1DDA4CD18(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

id sub_1DDA4CD2C(uint64_t a1)
{
  unsigned int v1 = sub_1DDA4CA00(a1);
  if (objc_msgSend_count(&unk_1F39ABC90, v2, v3, v4, v5) <= (unint64_t)v1)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v9 = objc_msgSend_objectAtIndexedSubscript_(&unk_1F39ABC90, v6, v1, v7, v8);

  return v9;
}

void sub_1DDA4CDC0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

id sub_1DDA4CDD4(uint64_t a1)
{
  uint64_t v2 = NSString;
  if (sub_1DDA4CA90(a1)) {
    uint64_t v3 = @"%@.dng";
  }
  else {
    uint64_t v3 = @"%@";
  }
  uint64_t v4 = sub_1DDA4CD2C(a1);
  uint64_t v8 = objc_msgSend_stringWithFormat_(v2, v5, (uint64_t)v3, v6, v7, v4);

  return v8;
}

void sub_1DDA4CE68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA4CE7C(uint64_t a1)
{
  sub_1DDA4D444(a1);

  JUMPOUT(0x1E01C3DC0);
}

void sub_1DDA4CEB4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395CFE8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA4CED4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395CFE8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA4CF28(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void *sub_1DDA4CF50(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v3 = (std::__shared_weak_count *)a2[1];
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *a1 = &unk_1F395CFB8;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = v4;
  a1[5] = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    sub_1DDA18310(v3);
  }
  return a1;
}

void *sub_1DDA4CFC0@<X0>(long long *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = operator new(0x48uLL);
  uint64_t result = sub_1DDA4D024(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_1DDA4D010(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA4D024(void *a1, long long *a2, void *a3)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395CFE8;
  sub_1DDA4D080(a1 + 3, a2, a3);
  return a1;
}

void sub_1DDA4D06C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA4D080(void *a1, long long *a2, void *a3)
{
  uint64_t v4 = (std::__shared_weak_count *)a3[1];
  v6[0] = *a3;
  v6[1] = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1DDA4C4F0(a1, a2, v6);
  if (v4) {
    sub_1DDA18310(v4);
  }
  return a1;
}

void sub_1DDA4D0DC(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1DDA18310(v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA4D0F4@<X0>(void **a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = operator new(0x48uLL);
  uint64_t result = sub_1DDA4D158(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_1DDA4D144(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA4D158(void *a1, void **a2, void *a3)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395CFE8;
  sub_1DDA4D1B4((uint64_t)(a1 + 3), a2, a3);
  return a1;
}

void sub_1DDA4D1A0(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA4D1B4(uint64_t a1, void **a2, void *a3)
{
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a3[1];
  v7[0] = *a3;
  v7[1] = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1DDA4C574(a1, v4, v7);
  if (v5) {
    sub_1DDA18310(v5);
  }
  return a1;
}

void sub_1DDA4D214(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1DDA18310(v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA4D22C@<X0>(void **a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = operator new(0x48uLL);
  uint64_t result = sub_1DDA4D290(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_1DDA4D27C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA4D290(void *a1, void **a2, void *a3)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395CFE8;
  sub_1DDA4D2EC((uint64_t)(a1 + 3), a2, a3);
  return a1;
}

void sub_1DDA4D2D8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA4D2EC(uint64_t a1, void **a2, void *a3)
{
  uint64_t v4 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a3[1];
  v7[0] = *a3;
  v7[1] = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1DDA4C6AC(a1, v4, v7);
  if (v5) {
    sub_1DDA18310(v5);
  }
  return a1;
}

void sub_1DDA4D34C(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1DDA18310(v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA4D364@<X0>(char *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x48uLL);
  uint64_t result = sub_1DDA4D3C0(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1DDA4D3AC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA4D3C0(void *a1, char *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395CFE8;
  a1[3] = &unk_1F395CFB8;
  sub_1DDA1A880(a1 + 4, a2);
  a1[7] = 0;
  a1[8] = 0;
  return a1;
}

void sub_1DDA4D430(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA4D444(uint64_t a1)
{
  *(void *)a1 = &unk_1F395CFB8;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (v2) {
    sub_1DDA18310(v2);
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

double sub_1DDA4D4A0(double a1)
{
  if (!*(unsigned char *)off_1EC8AC850(&off_1EC8AC850))
  {
    *(unsigned char *)v2(v3) = 1;
    context = (void *)MEMORY[0x1E01C4510]();
    uint64_t v5 = (void *)off_1EC8AC838(&off_1EC8AC838);
    _tlv_atexit((void (__cdecl *)(void *))sub_1DDA4C30C, v5);
  }
  off_1EC8AC838(&off_1EC8AC838);
  return a1;
}

void *sub_1DDA4D63C(uint64_t a1, int a2, unsigned int a3)
{
  int v9 = a2;
  uint64_t v5 = malloc_type_malloc(a3 + 64, 0xFF63A9DCuLL);
  uint64_t v6 = *(void *)(a1 + 24);
  sub_1DDA18410(&v8, &v9);
  (*(void (**)(uint64_t, int *, void))(*(void *)v6 + 40))(v6, &v8, 0);
  (*(void (**)(void, void *, void))(**(void **)(a1 + 24) + 32))(*(void *)(a1 + 24), v5, a3);
  return v5;
}

void sub_1DDA4D704(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    free(v1);
  }
  __cxa_end_catch();
  JUMPOUT(0x1DDA4D6ECLL);
}

void sub_1DDA4D728(void *a1, uint64_t a2, unsigned int a3, uint64_t a4, unsigned int a5, int a6, int a7, int a8, const UInt8 *a9, CFIndex a10)
{
  CFDataRef v13 = CFDataCreateWithBytesNoCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a9, a10, (CFAllocatorRef)*MEMORY[0x1E4F1CFA0]);
  uint64_t v14 = CGImageSourceCreateWithData(v13, 0);
  ImageAtIndeCGFloat x = CGImageSourceCreateImageAtIndex(v14, 0, 0);
  size_t BytesPerRow = CGImageGetBytesPerRow(ImageAtIndex);
  if (CGImageGetWidth(ImageAtIndex) != a5
    || (size_t Height = CGImageGetHeight(ImageAtIndex), Height != a6)
    || (DataProvider = CGImageGetDataProvider(ImageAtIndex),
        CFDataRef v17 = CGDataProviderCopyData(DataProvider),
        (CFDataRef v18 = v17) == 0))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if (CFDataGetLength(v17) != 4 * a5 * a6)
  {
    unsigned int v47 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v47, "RawCameraException");
    __cxa_throw(v47, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v19 = operator new(0xCuLL);
  *(void *)uint64_t v19 = 0;
  *((_DWORD *)v19 + 2) = 0;
  uint64_t v20 = (float32x2_t *)operator new(0xCuLL);
  unsigned int v21 = (float *)v20;
  CFDataRef theData = v18;
  unint64_t v48 = v14;
  CFDataRef v49 = v13;
  long long v22 = (float64x2_t *)a1[231];
  if (a1[232] - (void)v22 < 0x11uLL)
  {
    float32x2_t v23 = 0;
    float v24 = 0.0;
  }
  else
  {
    float32x2_t v23 = vcvt_f32_f64(*v22);
    *(float32x2_t *)uint64_t v19 = v23;
    float v24 = v22[1].f64[0];
    *((float *)v19 + 2) = v24;
  }
  float32x2_t v25 = (float32x2_t)vdup_n_s32(0x437F0000u);
  *uint64_t v20 = vdiv_f32(v25, vsub_f32(v25, v23));
  v20[1].f32[0] = 255.0 / (float)(255.0 - v24);
  if (a6)
  {
    uint64_t v54 = 0;
    int v26 = 0;
    int v27 = 0;
    if (a5 >= a3) {
      unsigned int v28 = a3;
    }
    else {
      unsigned int v28 = a5;
    }
    unsigned int v51 = a5;
    do
    {
      int v29 = (*(uint64_t (**)(void *))(*a1 + 40))(a1);
      BytePtr = CFDataGetBytePtr(theData);
      if (a5)
      {
        unsigned int v32 = a5;
        uint64_t v33 = &BytePtr[BytesPerRow * v54];
        unint64_t v34 = (_WORD *)(a2 + 2 * (v26 + a8 + (v27 + a7) * a3) * v29);
        unsigned int v35 = v32;
        do
        {
          LOBYTE(v31) = *v33;
          float v36 = *((float *)v19 + 1);
          float v37 = v21[1];
          float v38 = (float)((float)LODWORD(v31) - *(float *)v19) * *v21;
          float v39 = 255.0;
          if (v38 <= 255.0) {
            float v40 = v38;
          }
          else {
            float v40 = 255.0;
          }
          if (v38 >= 0.0) {
            float v41 = v40;
          }
          else {
            float v41 = 0.0;
          }
          *unint64_t v34 = *((_WORD *)a1 + (int)v41 + 156);
          LOBYTE(v41) = v33[1];
          float v42 = (float)((float)LODWORD(v41) - v36) * v37;
          if (v42 <= 255.0) {
            float v43 = v42;
          }
          else {
            float v43 = 255.0;
          }
          if (v42 >= 0.0) {
            float v44 = v43;
          }
          else {
            float v44 = 0.0;
          }
          v34[1] = *((_WORD *)a1 + (int)v44 + 412);
          LOBYTE(v44) = v33[2];
          float v45 = (float)((float)LODWORD(v44) - *((float *)v19 + 2)) * v21[2];
          if (v45 <= 255.0) {
            float v39 = v45;
          }
          if (v45 >= 0.0) {
            float v31 = v39;
          }
          else {
            float v31 = 0.0;
          }
          v34[2] = *((_WORD *)a1 + (int)v31 + 668);
          if (++v26 >= v28)
          {
            int v26 = 0;
            unint64_t v34 = (_WORD *)(a2
                          + 2 * (a8 + (++v27 + a7) * a3) * (*(unsigned int (**)(void *))(*a1 + 40))(a1));
          }
          else
          {
            v34 += 3;
          }
          v33 += 4;
          --v35;
        }
        while (v35);
      }
      ++v54;
      a5 = v51;
    }
    while (v54 != Height);
  }
  operator delete(v21);
  operator delete(v19);
  if (theData) {
    CFRelease(theData);
  }
  if (v49) {
    CFRelease(v49);
  }
  if (v48) {
    CFRelease(v48);
  }
  if (ImageAtIndex)
  {
    CFRelease(ImageAtIndex);
  }
}

void sub_1DDA4DBD4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  operator delete(v15);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  if (!v16) {
    JUMPOUT(0x1DDA4DAA4);
  }
  JUMPOUT(0x1DDA4DA9CLL);
}

void sub_1DDA4DC70(os_signpost_id_t a1)
{
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1DDA83CFC();
  uint64_t v3 = v2;
  if (a1 + 1 >= 2 && os_signpost_enabled(v2))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CDNGLossyUnpacker", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v64[0] = MEMORY[0x1E4F143A8];
  v64[1] = 3221225472;
  v64[2] = sub_1DDA4E3AC;
  v64[3] = &unk_1E6D04A58;
  v64[4] = a1;
  float v40 = (void (**)(void))MEMORY[0x1E01C46E0](v64);
  unsigned int v5 = *(_DWORD *)(a1 + 44);
  unsigned int v4 = *(_DWORD *)(a1 + 48);
  unsigned int v46 = *(_DWORD *)(a1 + 228);
  unsigned int v47 = *(_DWORD *)(a1 + 224);
  uint64_t __src = (void *)((uint64_t)(*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 2);
  sub_1DDA18500(&v63, (unint64_t *)&__src);
  if (v5 >> 5 >= 0xC35 || v4 > 0x1869F || v47 > 0x1869F || v46 > 0x1869F || (unsigned int v6 = v63, v63 >> 5 >= 0x271))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if ((((v4 + v46 - 1) / v46) >> (*(_DWORD *)(a1 + 216) != 0)) * ((v5 + v47 - 1) / v47) != v63) {
    goto LABEL_49;
  }
  uint64_t v7 = 0;
  int8x16_t v8 = (int8x16_t)xmmword_1DDBF94C0;
  v9.i64[0] = 0x1010101010101010;
  v9.i64[1] = 0x1010101010101010;
  do
  {
    *(int8x16_t *)&buf[v7] = v8;
    v7 += 16;
    int8x16_t v8 = vaddq_s8(v8, v9);
  }
  while (v7 != 256);
  uint64_t v11 = *(void *)(a1 + 192);
  uint64_t v10 = *(void *)(a1 + 200);
  uint64_t v12 = v10 - v11;
  if ((unint64_t)(v10 - v11) >= 0x201)
  {
LABEL_49:
    float v39 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v39, "RawCameraException");
    __cxa_throw(v39, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if (v10 != v11)
  {
    uint64_t v13 = 0;
    unint64_t v14 = v12 >> 1;
    do
    {
      buf[v13] = *(_WORD *)(v11 + 2 * v13);
      ++v13;
    }
    while (v14 > v13);
    if (v13 <= 0xFF) {
      memset(&buf[v13], buf[v13 - 1], (255 - v13) + 1);
    }
  }
  unsigned int v42 = v6;
  group = dispatch_group_create();
  queue = dispatch_queue_create("Lossy DNG Unpacker I/O Queue", 0);
  dispatch_queue_t v44 = dispatch_queue_create("Lossy DNG Unpacker Queue", MEMORY[0x1E4F14430]);
  uint64_t v16 = *(void *)(a1 + 288);
  uint64_t v15 = *(void *)(a1 + 296);
  if (v15 - v16 != 48 || v16 == v15)
  {
    int v29 = sub_1DDA1AC54(&__src, 0x10000);
    sub_1DDA4E434(0.416666667, 12.92, (uint64_t)v29, (uint64_t)__src, 255);
    uint64_t v30 = 312;
    float v31 = __src;
    do
    {
      memcpy((void *)(a1 + v30), v31, 0x200uLL);
      v30 += 512;
    }
    while (v30 != 1848);
    int v61 = (double *)v31;
    operator delete(v31);
  }
  else
  {
    do
    {
      CFDataRef v17 = *(uint64_t **)v16;
      if (*(void *)v16
        && (CFDataRef v17 = (uint64_t *)__dynamic_cast(v17, (const struct __class_type_info *)&unk_1F395A728, (const struct __class_type_info *)&unk_1F398C238, 0)) != 0)
      {
        CFDataRef v18 = *(std::__shared_weak_count **)(v16 + 8);
        if (v18) {
          atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
        }
      }
      else
      {
        CFDataRef v18 = 0;
      }
      uint64_t v19 = *((unsigned int *)v17 + 7);
      if (v19 <= 2)
      {
        uint64_t v20 = (const void *)v17[6];
        uint64_t v21 = v17[7];
        unint64_t v22 = (v21 - (uint64_t)v20) >> 3;
        uint64_t __src = 0;
        int v61 = 0;
        uint64_t v62 = 0;
        sub_1DDA1808C(&__src, v20, v21, v22);
        uint64_t v23 = 0;
        unint64_t v24 = v22 - 1;
        float32x2_t v25 = (double *)__src;
        do
        {
          uint64_t v26 = 0;
          double v27 = 0.0;
          do
          {
            double v28 = v25[v26];
            double v27 = v27 + v28 * pow((double)v23 / 255.0, (double)v26++);
          }
          while (v24 >= v26);
          *(_WORD *)(a1 + (v19 << 9) + 2 * v23++ + 312) = (int)(v27 * 65535.0);
        }
        while (v23 != 256);
        int v61 = v25;
        operator delete(v25);
      }
      if (v18) {
        sub_1DDA18310(v18);
      }
      v16 += 16;
    }
    while (v16 != v15);
  }
  uint64_t v41 = sub_1DDAA5B9C(a1);
  if (v42)
  {
    int v32 = 0;
    int v33 = 0;
    int v34 = 0;
    uint64_t v35 = MEMORY[0x1E4F143A8];
    do
    {
      block[0] = v35;
      block[1] = 3221225472;
      block[2] = sub_1DDA4E620;
      block[3] = &unk_1E6D04E10;
      os_signpost_id_t v51 = a1;
      int v54 = v32;
      float v36 = group;
      CFDataRef v49 = v36;
      unint64_t v50 = v44;
      uint64_t v52 = v41;
      int v53 = buf;
      unsigned int v55 = v5;
      unsigned int v56 = v47;
      unsigned int v57 = v46;
      int v58 = v34;
      int v59 = v33;
      dispatch_group_async(v36, queue, block);
      if (v33 + v47 >= v5) {
        unsigned int v37 = v46;
      }
      else {
        unsigned int v37 = 0;
      }
      if (v33 + v47 >= v5) {
        int v33 = 0;
      }
      else {
        v33 += v47;
      }

      v34 += v37;
      ++v32;
    }
    while (v42 != v32);
  }
  dispatch_group_wait(group, 0xFFFFFFFFFFFFFFFFLL);

  v40[2](v40);
}

void sub_1DDA4E2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (**a9)(void), uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14)
{
  a9[2](a9);
  _Unwind_Resume(a1);
}

void sub_1DDA4E3AC(uint64_t a1)
{
  uint64_t v2 = sub_1DDA83CFC();
  uint64_t v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)unsigned int v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CDNGLossyUnpacker", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

void sub_1DDA4E434(double a1, long double a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  double v15 = 0.0;
  double v16 = 0.0;
  *(&v15 + (a2 >= 1.0)) = 1.0;
  double v9 = 0.0;
  if (a2 == 0.0 || (a1 + -1.0) * (a2 + -1.0) > 0.0)
  {
    double v10 = 0.0;
  }
  else
  {
    for (int i = 0; i != 48; ++i)
    {
      while (1)
      {
        double v10 = (v15 + v16) * 0.5;
        if (a1 == 0.0) {
          break;
        }
        *(&v15 + ((pow(v10 / a2, -a1) + -1.0) / a1 + -1.0 / v10 > -1.0)) = v10;
        if (++i == 48)
        {
          double v9 = (1.0 / a1 + -1.0) * v10;
          goto LABEL_10;
        }
      }
      *(&v15 + (v10 / exp(1.0 - 1.0 / v10) < a2)) = v10;
    }
    double v9 = 0.0;
  }
LABEL_10:
  for (uint64_t j = 0; j != 0x10000; ++j)
  {
    *(_WORD *)(a4 + 2 * j) = -1;
    double v13 = (double)(int)j / (double)a5;
    if (v13 < 1.0)
    {
      if (v13 >= v10)
      {
        if (a1 == 0.0) {
          double v14 = exp((v13 + -1.0) / v10);
        }
        else {
          double v14 = pow((v9 + v13) / (v9 + 1.0), 1.0 / a1);
        }
      }
      else
      {
        double v14 = v13 / a2;
      }
      *(_WORD *)(a4 + 2 * j) = vcvtd_n_s64_f64(v14, 0x10uLL);
    }
  }
}

void sub_1DDA4E620(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = sub_1DDA4D63C(v2, *(_DWORD *)(*(void *)(v2 + 232) + 4 * *(unsigned int *)(a1 + 72)), *(_DWORD *)(*(void *)(v2 + 256) + 4 * *(unsigned int *)(a1 + 72)));
  if (v3)
  {
    unsigned int v5 = *(NSObject **)(a1 + 32);
    os_signpost_id_t v4 = *(NSObject **)(a1 + 40);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1DDA4E6E4;
    block[3] = &unk_1E6D04A98;
    void block[4] = v2;
    long long v9 = *(_OWORD *)(a1 + 56);
    long long v11 = *(_OWORD *)(a1 + 76);
    int v6 = *(_DWORD *)(a1 + 92);
    double v10 = v3;
    int v7 = *(_DWORD *)(a1 + 72);
    int v12 = v6;
    int v13 = v7;
    dispatch_group_async(v5, v4, block);
  }
}

void sub_1DDA4E6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DDA4D728(*(void **)(a1 + 32), *(void *)(a1 + 40), *(_DWORD *)(a1 + 64), a4, *(_DWORD *)(a1 + 68), *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), *(_DWORD *)(a1 + 80), *(const UInt8 **)(a1 + 56), *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 256) + 4 * *(unsigned int *)(a1 + 84)));
  unsigned int v5 = *(void **)(a1 + 56);

  free(v5);
}

char *sub_1DDA4E748(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  *(_DWORD *)(a1 + 224) = a2;
  *(_DWORD *)(a1 + 228) = a3;
  int v7 = (char *)(a1 + 232);
  if (v7 != (char *)a4) {
    sub_1DDA17E28(v7, *(char **)a4, *(void *)(a4 + 8), (uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 2);
  }
  uint64_t result = (char *)(a1 + 256);
  if (a1 + 256 != a5)
  {
    long long v9 = *(char **)a5;
    uint64_t v10 = *(void *)(a5 + 8);
    unint64_t v11 = (v10 - *(void *)a5) >> 2;
    return sub_1DDA17E28(result, v9, v10, v11);
  }
  return result;
}

unint64_t sub_1DDA4E7C0(int *a1)
{
  uint64_t v2 = (2 * a1[17]) + (uint64_t)a1[70];
  unint64_t result = 2 * (*(unsigned int (**)(int *))(*(void *)a1 + 40))(a1) * v2;
  if ((result & 0x1E) != 0)
  {
    uint64_t v4 = (2 * a1[17]) + (uint64_t)a1[15];
    return (2 * v4 * (*(unsigned int (**)(int *))(*(void *)a1 + 40))(a1) + 31) & 0xFFFFFFFFFFFFFFE0;
  }
  return result;
}

void *sub_1DDA4E874(uint64_t a1)
{
  *(void *)a1 = &unk_1F395D038;
  uint64_t v2 = *(void **)(a1 + 1848);
  if (v2)
  {
    *(void *)(a1 + 1856) = v2;
    operator delete(v2);
  }
  int v7 = (void **)(a1 + 288);
  sub_1DDA18270(&v7);
  uint64_t v3 = *(void **)(a1 + 256);
  if (v3)
  {
    *(void *)(a1 + 264) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void **)(a1 + 232);
  if (v4)
  {
    *(void *)(a1 + 240) = v4;
    operator delete(v4);
  }
  *(void *)a1 = &unk_1F3977E98;
  unsigned int v5 = *(void **)(a1 + 192);
  if (v5)
  {
    *(void *)(a1 + 200) = v5;
    operator delete(v5);
  }
  return sub_1DDA18384((void *)a1);
}

uint64_t sub_1DDA4E92C(uint64_t a1)
{
  *(void *)a1 = &unk_1F395D038;
  uint64_t v2 = *(void **)(a1 + 1848);
  if (v2)
  {
    *(void *)(a1 + 1856) = v2;
    operator delete(v2);
  }
  int8x16_t v8 = (void **)(a1 + 288);
  sub_1DDA18270(&v8);
  uint64_t v3 = *(void **)(a1 + 256);
  if (v3)
  {
    *(void *)(a1 + 264) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void **)(a1 + 232);
  if (v4)
  {
    *(void *)(a1 + 240) = v4;
    operator delete(v4);
  }
  *(void *)a1 = &unk_1F3977E98;
  unsigned int v5 = *(void **)(a1 + 192);
  if (v5)
  {
    *(void *)(a1 + 200) = v5;
    operator delete(v5);
  }
  int v6 = sub_1DDA18384((void *)a1);
  return MEMORY[0x1E01C3DC0](v6, 0x10B1C40D0438387);
}

void sub_1DDA4EA70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA4EBA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA4EC64(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v43[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *MEMORY[0x1E4F30058];
  uint64_t v34 = *MEMORY[0x1E4F30038];
  uint64_t v35 = v5;
  v42[0] = MEMORY[0x1E4F1CC38];
  v42[1] = @"com.canon.cr2-raw-image";
  uint64_t v6 = *MEMORY[0x1E4F30050];
  uint64_t v36 = *MEMORY[0x1E4F30018];
  v42[2] = @".cr2.";
  uint64_t v42[3] = &unk_1F39AC848;
  v42[4] = &unk_1F39AC860;
  int v7 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA4EF5C, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E4F30040], *MEMORY[0x1E4F30048]);
  v42[5] = v7;
  uint64_t v37 = *MEMORY[0x1E4F30000];
  unint64_t v11 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v8, (uint64_t)sub_1DDA4EFCC, v9, v10);
  v42[6] = v11;
  uint64_t v38 = *MEMORY[0x1E4F30020];
  double v15 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v12, (uint64_t)sub_1DDA4EFD8, v13, v14);
  v42[7] = v15;
  uint64_t v39 = *MEMORY[0x1E4F30008];
  uint64_t v19 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v16, (uint64_t)sub_1DDA818EC, v17, v18);
  v42[8] = v19;
  uint64_t v40 = *MEMORY[0x1E4F30028];
  uint64_t v23 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v20, (uint64_t)sub_1DDA4EFE4, v21, v22);
  v42[9] = v23;
  uint64_t v41 = *MEMORY[0x1E4F30030];
  double v27 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v24, (uint64_t)sub_1DDA4EFF0, v25, v26);
  v42[10] = v27;
  int v29 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v43[0] = v29;
  int v32 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v30, (uint64_t)v43, 1, v31);

  return v32;
}

void sub_1DDA4EEFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA4EF5C(unsigned char *a1, unint64_t a2)
{
  return a2 >= 0xC
      && a1[8] == 67
      && a1[9] == 82
      && a1[10] == 2
      && !a1[11]
      && *a1 == 73
      && a1[1] == 73
      && a1[2] == 42
      && !a1[3];
}

void sub_1DDA4EFCC(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA4EFD8(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA4EFE4(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, &unk_1F395D148);
}

uint64_t sub_1DDA4EFF0(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, &unk_1F395D148);
}

void sub_1DDA4EFFC(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v11 = a2;
  id v10 = a3;
  id v9 = a4;
  sub_1DDA51F38(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;
}

void sub_1DDA4F07C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA4F098(uint64_t a1)
{
  *(void *)a1 = &unk_1F395FAC0;
  sub_1DDA2A4CC(a1 + 1224, *(char **)(a1 + 1232));
  uint64_t v2 = *(void **)(a1 + 1184);
  if (v2)
  {
    *(void *)(a1 + 1192) = v2;
    operator delete(v2);
  }

  return sub_1DDA49A44(a1);
}

uint64_t sub_1DDA4F104()
{
  return 1;
}

uint64_t sub_1DDA4F10C(void **a1)
{
  sub_1DDA1A880(v7, "IFD0:EXIF:MAKERNOTE:ShotInfo");
  (*((void (**)(void **__return_ptr, void **, void **))*a1 + 49))(__p, a1, v7);
  uint64_t v2 = sub_1DDA2A530((uint64_t)(a1 + 24), __p);
  if (a1 + 25 == v2 || (uint64_t v3 = (unsigned int *)v2[7], v2[8] == v3))
  {
    uint64_t v4 = 0;
    char v5 = 0;
  }
  else
  {
    uint64_t v4 = *v3;
    char v5 = 1;
  }
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  if (v8 < 0)
  {
    operator delete(v7[0]);
    if (v5) {
      return v4;
    }
    return sub_1DDA27550(a1);
  }
  if ((v5 & 1) == 0) {
    return sub_1DDA27550(a1);
  }
  return v4;
}

void sub_1DDA4F20C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA4F240(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  uint64_t v84 = *MEMORY[0x1E4F143B8];
  sub_1DDA7B754(a1, a2, a3);
  unsigned int v6 = *a3;
  if (v6 > 0x99)
  {
    if (*a3 > 0x4017u)
    {
      if (v6 == 16408)
      {
        if (a3[1] == 4 && *((_DWORD *)a3 + 1) >= 4u)
        {
          sub_1DDA27D28(a1, &__p);
          LODWORD(v77[0]) = *((_DWORD *)a3 + 2);
          sub_1DDA18410((int *)v82, (int *)v77);
          sub_1DDA1A94C((uint64_t *)&__str, (uint64_t *)&__p, (uint64_t)v82, 0);
          if (__p.__r_.__value_.__l.__size_) {
            sub_1DDA18310((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
          }
          sub_1DDA27D28(a1, v82);
          LODWORD(v77[0]) = *((_DWORD *)a3 + 1);
          sub_1DDA1A5BC((void *)v82[0], (unsigned int *)v77, (uint64_t *)&__p);
          if (v82[1]) {
            sub_1DDA18310((std::__shared_weak_count *)v82[1]);
          }
          int v53 = (void *)__p.__r_.__value_.__r.__words[0];
          *(unsigned char *)(a1 + 1249) = *(_DWORD *)(__p.__r_.__value_.__r.__words[0] + 12) != 0;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)v53;
          operator delete(v53);
          sub_1DDA1AA18((uint64_t *)&__str);
        }
      }
      else if (v6 == 16417 && a3[1] == 4 && *((_DWORD *)a3 + 1) == 5)
      {
        sub_1DDA27D28(a1, &__p);
        LODWORD(v77[0]) = *((_DWORD *)a3 + 2);
        sub_1DDA18410((int *)v82, (int *)v77);
        sub_1DDA1A94C((uint64_t *)&__str, (uint64_t *)&__p, (uint64_t)v82, 0);
        if (__p.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
        }
        sub_1DDA27D28(a1, v82);
        LODWORD(v77[0]) = *((_DWORD *)a3 + 1);
        sub_1DDA1A5BC((void *)v82[0], (unsigned int *)v77, (uint64_t *)&__p);
        if (v82[1]) {
          sub_1DDA18310((std::__shared_weak_count *)v82[1]);
        }
        unint64_t v24 = (void *)__p.__r_.__value_.__r.__words[0];
        if (*(_DWORD *)__p.__r_.__value_.__l.__data_ == 20) {
          *(unsigned char *)(a1 + 1256) = *(_DWORD *)(__p.__r_.__value_.__r.__words[0] + 4) != 0;
        }
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)v24;
        operator delete(v24);
        sub_1DDA1AA18((uint64_t *)&__str);
      }
      return;
    }
    if (v6 != 154)
    {
      if (v6 != 16385 || ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) != 0) {
        return;
      }
      sub_1DDA27D28(a1, &__p);
      LODWORD(v77[0]) = *((_DWORD *)a3 + 2);
      sub_1DDA18410((int *)v82, (int *)v77);
      sub_1DDA1A94C((uint64_t *)&__str, (uint64_t *)&__p, (uint64_t)v82, 0);
      if (__p.__r_.__value_.__l.__size_) {
        sub_1DDA18310((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
      }
      unsigned int v12 = *((_DWORD *)a3 + 1);
      if (v12 - 8193 >= 0xFFFFE000)
      {
        if (*(char *)(a2 + 23) >= 0) {
          size_t v13 = *(unsigned __int8 *)(a2 + 23);
        }
        else {
          size_t v13 = *(void *)(a2 + 8);
        }
        p_p = &__p;
        sub_1DDA49688((uint64_t)&__p, v13 + 14);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        if (v13)
        {
          if (*(char *)(a2 + 23) >= 0) {
            double v15 = (const void *)a2;
          }
          else {
            double v15 = *(const void **)a2;
          }
          memmove(p_p, v15, v13);
        }
        strcpy((char *)p_p + v13, ":ColorBalance1");
        sub_1DDA27D28(a1, v77);
        LODWORD(__src[0]) = v12;
        sub_1DDA1A488((void *)v77[0], (unsigned int *)__src, (uint64_t *)v82);
        if (v77[1]) {
          sub_1DDA18310((std::__shared_weak_count *)v77[1]);
        }
        v77[1] = 0;
        unsigned int v78 = 0;
        v77[0] = 0;
        sub_1DDA51EC4((char *)v77, (unsigned __int16 *)v82[0], (unsigned __int16 *)v82[1], ((char *)v82[1] - (char *)v82[0]) >> 1);
        __src[0] = &__p;
        double v16 = sub_1DDA4B960((uint64_t **)(a1 + 120), (void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&unk_1DDBFB044, (long long **)__src);
        uint64_t v17 = (void *)v16[7];
        if (v17)
        {
          v16[8] = (uint64_t)v17;
          operator delete(v17);
          v16[7] = 0;
          v16[8] = 0;
          v16[9] = 0;
        }
        uint64_t v18 = v77[0];
        *(_OWORD *)(v16 + 7) = *(_OWORD *)v77;
        v16[9] = (uint64_t)v78;
        uint64_t v19 = v82[0];
        unsigned int v20 = 196;
        switch(*(_WORD *)v82[0])
        {
          case 1:
            goto LABEL_168;
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 9:
            unsigned int v20 = 231;
            goto LABEL_168;
          case 0xA:
            if (v12 >= 0x514) {
              unsigned int v20 = 504;
            }
            else {
              unsigned int v20 = 479;
            }
            goto LABEL_168;
          case 0xB:
            unsigned int v20 = 276;
            goto LABEL_168;
          case 0xC:
            unsigned int v20 = 778;
            goto LABEL_168;
          case 0xD:
          case 0xF:
            unsigned int v20 = 326;
            goto LABEL_168;
          case 0xE:
            unsigned int v20 = 556;
            goto LABEL_168;
          case 0x10:
            unsigned int v20 = 329;
LABEL_168:
            if (v12 < v20 + 4) {
              goto LABEL_194;
            }
            unint64_t v60 = 0;
            uint64_t v61 = 0;
            v77[0] = 0;
            v77[1] = 0;
            unsigned int v78 = 0;
            uint64_t v62 = v20;
            do
            {
              LOWORD(v18) = *((_WORD *)v82[0] + v61 + v62);
              double v63 = (double)(unint64_t)v18;
              if (v60 >= v78)
              {
                int v65 = (double *)v77[0];
                uint64_t v66 = ((char *)v60 - (char *)v77[0]) >> 3;
                unint64_t v67 = v66 + 1;
                if ((unint64_t)(v66 + 1) >> 61) {
                  sub_1DDA17F78();
                }
                uint64_t v68 = (char *)v78 - (char *)v77[0];
                if (((char *)v78 - (char *)v77[0]) >> 2 > v67) {
                  unint64_t v67 = v68 >> 2;
                }
                if ((unint64_t)v68 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v69 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v69 = v67;
                }
                if (v69)
                {
                  std::string::size_type v70 = (char *)sub_1DDA1814C((uint64_t)&v78, v69);
                  int v65 = (double *)v77[0];
                  unint64_t v60 = (double *)v77[1];
                }
                else
                {
                  std::string::size_type v70 = 0;
                }
                uint64_t v71 = (double *)&v70[8 * v66];
                double *v71 = v63;
                int v64 = v71 + 1;
                while (v60 != v65)
                {
                  unsigned int v72 = (void *)*((void *)v60-- - 1);
                  uint64_t v18 = v72;
                  *((void *)v71-- - 1) = v72;
                }
                v77[0] = v71;
                v77[1] = v64;
                unsigned int v78 = (double *)&v70[8 * v69];
                if (v65) {
                  operator delete(v65);
                }
              }
              else
              {
                double *v60 = v63;
                int v64 = v60 + 1;
              }
              v77[1] = v64;
              ++v61;
              unint64_t v60 = (double *)v64;
            }
            while (v61 != 4);
            sub_1DDA47580(":BLACKLEVELS", (const void **)a2, __src);
            uint64_t v81 = __src;
            unint64_t v73 = (char *)sub_1DDA52108((uint64_t **)(a1 + 264), __src, (uint64_t)&unk_1DDBFB044, (_OWORD **)&v81) + 56;
            if (v73 != (char *)v77) {
              sub_1DDA25BB0(v73, (char *)v77[0], (uint64_t)v77[1], ((char *)v77[1] - (char *)v77[0]) >> 3);
            }
            if (v76 < 0) {
              operator delete(__src[0]);
            }
            if (v77[0])
            {
              v77[1] = v77[0];
              operator delete(v77[0]);
            }
            uint64_t v19 = v82[0];
            if (v82[0]) {
              goto LABEL_194;
            }
            goto LABEL_195;
          default:
LABEL_194:
            v82[1] = v19;
            operator delete(v19);
LABEL_195:
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
            break;
        }
      }
LABEL_197:
      sub_1DDA1AA18((uint64_t *)&__str);
      return;
    }
    if (a3[1] != 4 || *((_DWORD *)a3 + 1) != 5) {
      return;
    }
    sub_1DDA27D28(a1, &__p);
    LODWORD(v77[0]) = *((_DWORD *)a3 + 2);
    sub_1DDA18410((int *)v82, (int *)v77);
    sub_1DDA1A94C((uint64_t *)&__str, (uint64_t *)&__p, (uint64_t)v82, 0);
    if (__p.__r_.__value_.__l.__size_) {
      sub_1DDA18310((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
    }
    sub_1DDA27D28(a1, v82);
    LODWORD(v77[0]) = *((_DWORD *)a3 + 1);
    sub_1DDA1A5BC((void *)v82[0], (unsigned int *)v77, (uint64_t *)&__p);
    if (v82[1]) {
      sub_1DDA18310((std::__shared_weak_count *)v82[1]);
    }
    int v42 = *(_DWORD *)(__p.__r_.__value_.__r.__words[0] + 4);
    int v43 = *(_DWORD *)(__p.__r_.__value_.__r.__words[0] + 8);
    sub_1DDA18218(v82, *(_DWORD *)(__p.__r_.__value_.__r.__words[0] + 12), *(_DWORD *)(__p.__r_.__value_.__r.__words[0] + 16));
    sub_1DDA18218(&v82[1], v42, v43);
    *(_OWORD *)(a1 + 1260) = *(_OWORD *)v82;
    int v44 = *(_DWORD *)(a1 + 1260);
    int v45 = *(_DWORD *)(a1 + 1268);
    if (v44 >= v45
      || (int v46 = *(_DWORD *)(a1 + 1264), v47 = *(_DWORD *)(a1 + 1272), v46 >= v47)
      || *(unsigned char *)(a1 + 1208)
      && (v45 > *(unsigned __int16 *)(a1 + 1210)
       || v47 > *(unsigned __int16 *)(a1 + 1212)
       || v44 > *(unsigned __int16 *)(a1 + 1218)
       || v46 > *(unsigned __int16 *)(a1 + 1220)))
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    if (__p.__r_.__value_.__r.__words[0])
    {
      __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
      operator delete(__p.__r_.__value_.__l.__data_);
    }
LABEL_57:
    sub_1DDA1AA18((uint64_t *)&__str);
    return;
  }
  if (*a3 > 0x28u)
  {
    if (v6 == 41)
    {
      if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1)) {
        return;
      }
      sub_1DDA27D28(a1, &__p);
      LODWORD(v77[0]) = *((_DWORD *)a3 + 2);
      sub_1DDA18410((int *)v82, (int *)v77);
      sub_1DDA1A94C((uint64_t *)&__str, (uint64_t *)&__p, (uint64_t)v82, 0);
      if (__p.__r_.__value_.__l.__size_) {
        sub_1DDA18310((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
      }
      unsigned int v48 = *((_DWORD *)a3 + 1);
      if (v48 <= 0x2000)
      {
        sub_1DDA27D28(a1, v82);
        LODWORD(v77[0]) = v48;
        sub_1DDA1A5BC((void *)v82[0], (unsigned int *)v77, (uint64_t *)&__p);
        if (v82[1]) {
          sub_1DDA18310((std::__shared_weak_count *)v82[1]);
        }
        if (*(char *)(a2 + 23) >= 0) {
          size_t v49 = *(unsigned __int8 *)(a2 + 23);
        }
        else {
          size_t v49 = *(void *)(a2 + 8);
        }
        unint64_t v50 = v82;
        sub_1DDA49688((uint64_t)v82, v49 + 15);
        if (v83 < 0) {
          unint64_t v50 = (void **)v82[0];
        }
        if (v49)
        {
          if (*(char *)(a2 + 23) >= 0) {
            os_signpost_id_t v51 = (const void *)a2;
          }
          else {
            os_signpost_id_t v51 = *(const void **)a2;
          }
          memmove(v50, v51, v49);
        }
        strcpy((char *)v50 + v49, ":G9WhiteBalance");
        v77[0] = v82;
        uint64_t v52 = (std::string *)((char *)sub_1DDA52108((uint64_t **)(a1 + 120), v82, (uint64_t)&unk_1DDBFB044, (_OWORD **)v77)+ 56);
        if (v52 != &__p) {
          sub_1DDA17E28((char *)v52, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_, (uint64_t)(__p.__r_.__value_.__l.__size_ - __p.__r_.__value_.__r.__words[0]) >> 2);
        }
        if (v83 < 0) {
          operator delete(v82[0]);
        }
        if (__p.__r_.__value_.__r.__words[0])
        {
          __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
    }
    else
    {
      if (v6 != 153 || ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) != 0 || a3[1] != 4) {
        return;
      }
      sub_1DDA27D28(a1, &__p);
      LODWORD(v77[0]) = sub_1DDA3CE7C((uint64_t)a3);
      sub_1DDA1B4D8((int *)v82, (int *)v77);
      sub_1DDA1A94C((uint64_t *)&__str, (uint64_t *)&__p, (uint64_t)v82, 0);
      if (__p.__r_.__value_.__l.__size_) {
        sub_1DDA18310((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
      }
      if (*(char *)(a2 + 23) >= 0) {
        size_t v21 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        size_t v21 = *(void *)(a2 + 8);
      }
      uint64_t v22 = &__p;
      sub_1DDA49688((uint64_t)&__p, v21 + 4);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        uint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if (v21)
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v23 = (const void *)a2;
        }
        else {
          uint64_t v23 = *(const void **)a2;
        }
        memmove(v22, v23, v21);
      }
      strcpy((char *)v22 + v21, ":CF2");
      (*(void (**)(uint64_t, std::string *, void))(*(void *)a1 + 784))(a1, &__p, *((unsigned int *)a3 + 1));
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    goto LABEL_57;
  }
  if (v6 == 4)
  {
    if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1)) {
      return;
    }
    sub_1DDA27D28(a1, &__p);
    LODWORD(v77[0]) = *((_DWORD *)a3 + 2);
    sub_1DDA18410((int *)v82, (int *)v77);
    sub_1DDA1A94C((uint64_t *)&__str, (uint64_t *)&__p, (uint64_t)v82, 0);
    if (__p.__r_.__value_.__l.__size_) {
      sub_1DDA18310((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
    }
    int v25 = *((_DWORD *)a3 + 1);
    if ((v25 - 257) < 0xFFFFFF07) {
      goto LABEL_197;
    }
    if (*(char *)(a2 + 23) >= 0) {
      size_t v26 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      size_t v26 = *(void *)(a2 + 8);
    }
    double v27 = &__p;
    sub_1DDA49688((uint64_t)&__p, v26 + 9);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      double v27 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if (v26)
    {
      if (*(char *)(a2 + 23) >= 0) {
        double v28 = (const void *)a2;
      }
      else {
        double v28 = *(const void **)a2;
      }
      memmove(v27, v28, v26);
    }
    strcpy((char *)v27 + v26, ":ShotInfo");
    sub_1DDA27D28(a1, v77);
    LODWORD(__src[0]) = v25;
    sub_1DDA1A488((void *)v77[0], (unsigned int *)__src, (uint64_t *)v82);
    if (v77[1]) {
      sub_1DDA18310((std::__shared_weak_count *)v77[1]);
    }
    uint64_t v30 = (unsigned __int16 *)v82[0];
    unsigned int v31 = *((unsigned __int16 *)v82[0] + 2);
    if (v31 >= 0x1C1)
    {
      LOWORD(v29) = *((_WORD *)v82[0] + 1);
      float v32 = exp2f((float)v29 * 0.03125) * 100.0;
      float v33 = (float)(exp2f((float)v31 * 0.03125) * 100.0) * 0.03125;
      float v34 = fabsf(v33);
      if (fabsf(v32) == INFINITY || v34 == INFINITY)
      {
LABEL_96:
        v82[1] = v30;
        operator delete(v30);
LABEL_97:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        goto LABEL_197;
      }
      float v36 = (float)(v33 * v32) / 100.0;
      float v37 = *(float *)"(knO20CCanonCR2ImageParser";
      if (v36 <= 4000000000.0) {
        float v37 = v36;
      }
      BOOL v38 = v36 < 0.0;
      float v39 = 0.0;
      if (!v38) {
        float v39 = v37;
      }
      LODWORD(__src[0]) = rintf(v39);
      v77[0] = &__p;
      uint64_t v40 = sub_1DDA4B960((uint64_t **)(a1 + 192), (void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&unk_1DDBFB044, (long long **)v77);
      sub_1DDA17E28((char *)v40 + 56, (char *)__src, (uint64_t)__src + 4, 1uLL);
      uint64_t v30 = (unsigned __int16 *)v82[0];
    }
    LODWORD(__src[0]) = v30[7];
    v77[0] = &__p;
    uint64_t v41 = sub_1DDA4B960((uint64_t **)(a1 + 168), (void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&unk_1DDBFB044, (long long **)v77);
    sub_1DDA17E28((char *)v41 + 56, (char *)__src, (uint64_t)__src + 4, 1uLL);
    uint64_t v30 = (unsigned __int16 *)v82[0];
    if (!v82[0]) {
      goto LABEL_97;
    }
    goto LABEL_96;
  }
  if (v6 == 7 && a3[1] == 2)
  {
    memset(&__str, 0, sizeof(__str));
    if (sub_1DDA45530(a1, (uint64_t)a3, &__str, 1))
    {
      std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      p_str = &__str;
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      {
        std::string::size_type size = __str.__r_.__value_.__l.__size_;
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      if (size)
      {
        id v9 = (unsigned __int8 *)p_str + size;
        char v10 = p_str;
        while (2)
        {
          for (uint64_t i = 0; i != 11; ++i)
          {
            if (v10->__r_.__value_.__s.__data_[0] == a0123456789[i])
            {
              if (v10 != (std::string *)v9 && (char *)v10 - (char *)p_str != -1)
              {
                LODWORD(v82[1]) = 0;
                v82[0] = 0;
                std::string::basic_string(&__p, &__str, (char *)v10 - (char *)p_str, size - ((char *)v10 - (char *)p_str), (std::allocator<char> *)v77);
                if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  int v54 = &__p;
                }
                else {
                  int v54 = (std::string *)__p.__r_.__value_.__r.__words[0];
                }
                sscanf((const char *)v54, "%d.%d.%d", v82, (char *)v82 + 4, &v82[1]);
                uint64_t v55 = 1000000 * SLODWORD(v82[0]);
                if (v55 == (int)v55)
                {
                  uint64_t v56 = 1000 * SHIDWORD(v82[0]);
                  if (v56 == (int)v56)
                  {
                    BOOL v57 = __OFADD__(v55, v56);
                    int v58 = v55 + v56;
                    if (!v57)
                    {
                      BOOL v57 = __OFADD__(v58, v82[1]);
                      int v59 = v58 + LODWORD(v82[1]);
                      if (!v57) {
                        *(_DWORD *)(a1 + 1252) = v59;
                      }
                    }
                  }
                }
                if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(__p.__r_.__value_.__l.__data_);
                }
              }
              goto LABEL_158;
            }
          }
          char v10 = (std::string *)((char *)v10 + 1);
          if (v10 != (std::string *)v9) {
            continue;
          }
          break;
        }
      }
    }
LABEL_158:
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1DDA500F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  if (a33 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA503AC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (a3 - 260 < 0xFFFFFF00) {
    return 0;
  }
  sub_1DDA27D28(a1, &v21);
  unsigned int v20 = a3;
  sub_1DDA1A5BC(v21, &v20, (uint64_t *)__p);
  if (v22) {
    sub_1DDA18310(v22);
  }
  char v5 = __p[0];
  unsigned int v6 = *((_DWORD *)__p[0] + 1);
  if (v6) {
    BOOL v7 = a3 >= 6;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    int v10 = 1;
    unsigned int v11 = 2;
    unsigned int v12 = 5;
    uint64_t v8 = 1;
    while (v5[v11] == v10 && v5[v11 + 1] >= 8u)
    {
      int v13 = v5[v11 + 2];
      if (v13)
      {
        int v14 = 0;
        do
        {
          int v15 = v14 + v12;
          if (v14 + v12 + 2 >= a3) {
            break;
          }
          int v16 = v5[v15 + 1];
          if (v16 < 1 || (int v17 = v14 + 2, v18 = v17 + v12, v16 + v17 + v12 > a3))
          {
LABEL_30:
            uint64_t v8 = 0;
            goto LABEL_9;
          }
          int v19 = v5[v15];
          if (v19 == 259)
          {
            *(unsigned char *)(a1 + 1250) = v5[v18] != 0;
          }
          else if (v19 == 515)
          {
            if (v16 != 1) {
              goto LABEL_30;
            }
            *(unsigned char *)(a1 + 1249) = v5[v18] != 0;
          }
          int v14 = v16 + v17;
          --v13;
        }
        while (v13);
      }
      else
      {
        int v14 = 0;
      }
      if (++v10 <= v6)
      {
        unsigned int v11 = v14 + v12;
        v12 += v14 + 3;
        if (v12 < a3) {
          continue;
        }
      }
      goto LABEL_9;
    }
  }
  uint64_t v8 = 1;
LABEL_9:
  __p[1] = v5;
  operator delete(v5);
  return v8;
}

void sub_1DDA5052C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_1DDA18310(a11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA50544(uint64_t a1)
{
  if (getenv("RAWCAMERA_DUALPIXEL_SECOND_IMAGE")) {
    sub_1DDA1A880(__p, "IFD4");
  }
  else {
    sub_1DDA1A880(__p, "IFD3");
  }
  uint64_t v2 = sub_1DDA481F0(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA505D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA505F0(uint64_t a1)
{
  if (getenv("RAWCAMERA_DUALPIXEL_SECOND_IMAGE")) {
    sub_1DDA1A880(__p, "IFD4");
  }
  else {
    sub_1DDA1A880(__p, "IFD3");
  }
  uint64_t v2 = sub_1DDA48264(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA5067C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1DDA5069C(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1210) | ((unint64_t)*(unsigned __int16 *)(a1 + 1212) << 32);
}

uint64_t sub_1DDA506AC(uint64_t a1)
{
  return *(void *)(a1 + 1260);
}

unint64_t sub_1DDA506B8(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1214) | ((unint64_t)*(unsigned __int16 *)(a1 + 1216) << 32);
}

uint64_t sub_1DDA506E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 1252);
}

double sub_1DDA506F0(uint64_t a1)
{
  return (double)*(int *)(a1 + 1260) / (double)(*(unsigned __int16 *)(a1 + 1218) - *(unsigned __int16 *)(a1 + 1214) + 1);
}

void sub_1DDA5074C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  int v4 = sub_1DDA7BFF0(a1);
  snprintf(__str, 0x10uLL, "%u", v4);
  sub_1DDA1A880(__p, "cr2");
  unint64_t v5 = a2[2];
  unint64_t v6 = a2[1];
  if (v6 >= v5)
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - *a2) >> 3);
    unint64_t v9 = v8 + 1;
    if (v8 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    char v76 = a2 + 2;
    if (v11) {
      unsigned int v12 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v11);
    }
    else {
      unsigned int v12 = 0;
    }
    int v13 = &v12[24 * v8];
    unsigned int v72 = v12;
    unint64_t v73 = v13;
    unsigned int v75 = &v12[24 * v11];
    long long v14 = *(_OWORD *)__p;
    *((void *)v13 + 2) = v71;
    *(_OWORD *)int v13 = v14;
    __p[1] = 0;
    uint64_t v71 = 0;
    __p[0] = 0;
    uint64_t v74 = v13 + 24;
    sub_1DDA2A0E8(a2, &v72);
    uint64_t v15 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v72);
    int v16 = SHIBYTE(v71);
    a2[1] = v15;
    if (v16 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v7 = *(_OWORD *)__p;
    *(void *)(v6 + 16) = v71;
    *(_OWORD *)unint64_t v6 = v7;
    a2[1] = v6 + 24;
  }
  sub_1DDA1A880(__p, "canon");
  unint64_t v18 = a2[1];
  unint64_t v17 = a2[2];
  if (v18 >= v17)
  {
    unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v18 - *a2) >> 3);
    unint64_t v21 = v20 + 1;
    if (v20 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    if (2 * v22 > v21) {
      unint64_t v21 = 2 * v22;
    }
    if (v22 >= 0x555555555555555) {
      unint64_t v23 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v23 = v21;
    }
    char v76 = a2 + 2;
    if (v23) {
      unint64_t v24 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v23);
    }
    else {
      unint64_t v24 = 0;
    }
    int v25 = &v24[24 * v20];
    unsigned int v72 = v24;
    unint64_t v73 = v25;
    unsigned int v75 = &v24[24 * v23];
    long long v26 = *(_OWORD *)__p;
    *((void *)v25 + 2) = v71;
    *(_OWORD *)int v25 = v26;
    __p[1] = 0;
    uint64_t v71 = 0;
    __p[0] = 0;
    uint64_t v74 = v25 + 24;
    sub_1DDA2A0E8(a2, &v72);
    uint64_t v27 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v72);
    int v28 = SHIBYTE(v71);
    a2[1] = v27;
    if (v28 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v19 = *(_OWORD *)__p;
    *(void *)(v18 + 16) = v71;
    *(_OWORD *)unint64_t v18 = v19;
    a2[1] = v18 + 24;
  }
  sub_1DDA1A880(__p, __str);
  unint64_t v30 = a2[1];
  unint64_t v29 = a2[2];
  if (v30 >= v29)
  {
    unint64_t v32 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v30 - *a2) >> 3);
    unint64_t v33 = v32 + 1;
    if (v32 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v34 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    if (2 * v34 > v33) {
      unint64_t v33 = 2 * v34;
    }
    if (v34 >= 0x555555555555555) {
      unint64_t v35 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v35 = v33;
    }
    char v76 = a2 + 2;
    if (v35) {
      float v36 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v35);
    }
    else {
      float v36 = 0;
    }
    float v37 = &v36[24 * v32];
    unsigned int v72 = v36;
    unint64_t v73 = v37;
    unsigned int v75 = &v36[24 * v35];
    long long v38 = *(_OWORD *)__p;
    *((void *)v37 + 2) = v71;
    *(_OWORD *)float v37 = v38;
    __p[1] = 0;
    uint64_t v71 = 0;
    __p[0] = 0;
    uint64_t v74 = v37 + 24;
    sub_1DDA2A0E8(a2, &v72);
    uint64_t v39 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v72);
    int v40 = SHIBYTE(v71);
    a2[1] = v39;
    if (v40 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v31 = *(_OWORD *)__p;
    *(void *)(v30 + 16) = v71;
    *(_OWORD *)unint64_t v30 = v31;
    a2[1] = v30 + 24;
  }
  if (sub_1DDA7B748(a1))
  {
    sub_1DDA1A880(__p, "sraw");
    unint64_t v42 = a2[1];
    unint64_t v41 = a2[2];
    if (v42 >= v41)
    {
      unint64_t v43 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v42 - *a2) >> 3);
      unint64_t v44 = v43 + 1;
      if (v43 + 1 > 0xAAAAAAAAAAAAAAALL) {
        sub_1DDA17F78();
      }
      unint64_t v45 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v41 - *a2) >> 3);
      if (2 * v45 > v44) {
        unint64_t v44 = 2 * v45;
      }
      if (v45 >= 0x555555555555555) {
        unint64_t v46 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v46 = v44;
      }
      char v76 = a2 + 2;
      if (!v46)
      {
        BOOL v57 = 0;
        goto LABEL_75;
      }
      goto LABEL_73;
    }
LABEL_65:
    long long v63 = *(_OWORD *)__p;
    *(void *)(v42 + 16) = v71;
    *(_OWORD *)unint64_t v42 = v63;
    a2[1] = v42 + 24;
    return;
  }
  unint64_t v47 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 440))(a1);
  unint64_t v48 = HIDWORD(v47);
  snprintf(__s, 0x10uLL, "%d", v47);
  snprintf(v77, 0x10uLL, "%d", v48);
  sub_1DDA1A880(__p, __s);
  unint64_t v50 = a2[1];
  unint64_t v49 = a2[2];
  if (v50 >= v49)
  {
    unint64_t v52 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v50 - *a2) >> 3);
    unint64_t v53 = v52 + 1;
    if (v52 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v54 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v49 - *a2) >> 3);
    if (2 * v54 > v53) {
      unint64_t v53 = 2 * v54;
    }
    if (v54 >= 0x555555555555555) {
      unint64_t v55 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v55 = v53;
    }
    char v76 = a2 + 2;
    if (v55) {
      uint64_t v56 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v55);
    }
    else {
      uint64_t v56 = 0;
    }
    int v58 = &v56[24 * v52];
    unsigned int v72 = v56;
    unint64_t v73 = v58;
    unsigned int v75 = &v56[24 * v55];
    long long v59 = *(_OWORD *)__p;
    *((void *)v58 + 2) = v71;
    *(_OWORD *)int v58 = v59;
    __p[1] = 0;
    uint64_t v71 = 0;
    __p[0] = 0;
    uint64_t v74 = v58 + 24;
    sub_1DDA2A0E8(a2, &v72);
    uint64_t v60 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v72);
    int v61 = SHIBYTE(v71);
    a2[1] = v60;
    if (v61 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v51 = *(_OWORD *)__p;
    *(void *)(v50 + 16) = v71;
    *(_OWORD *)unint64_t v50 = v51;
    a2[1] = v50 + 24;
  }
  sub_1DDA1A880(__p, v77);
  unint64_t v42 = a2[1];
  unint64_t v62 = a2[2];
  if (v42 < v62) {
    goto LABEL_65;
  }
  unint64_t v43 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v42 - *a2) >> 3);
  unint64_t v64 = v43 + 1;
  if (v43 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_1DDA17F78();
  }
  unint64_t v65 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v62 - *a2) >> 3);
  if (2 * v65 > v64) {
    unint64_t v64 = 2 * v65;
  }
  if (v65 >= 0x555555555555555) {
    unint64_t v46 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v46 = v64;
  }
  char v76 = a2 + 2;
  if (v46)
  {
LABEL_73:
    BOOL v57 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v46);
    goto LABEL_75;
  }
  BOOL v57 = 0;
LABEL_75:
  uint64_t v66 = &v57[24 * v43];
  unsigned int v72 = v57;
  unint64_t v73 = v66;
  unsigned int v75 = &v57[24 * v46];
  long long v67 = *(_OWORD *)__p;
  *((void *)v66 + 2) = v71;
  *(_OWORD *)uint64_t v66 = v67;
  __p[1] = 0;
  uint64_t v71 = 0;
  __p[0] = 0;
  uint64_t v74 = v66 + 24;
  sub_1DDA2A0E8(a2, &v72);
  uint64_t v68 = a2[1];
  sub_1DDA2A2C8((uint64_t)&v72);
  int v69 = SHIBYTE(v71);
  a2[1] = v68;
  if (v69 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1DDA50E1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

id sub_1DDA50EA0(uint64_t a1)
{
  v37[80] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1DDA409F0();
  long long v7 = objc_msgSend_mutableCopy(v2, v3, v4, v5, v6);

  v36[0] = &unk_1F39AC878;
  v34[1] = @"Namespace";
  v35[0] = @"CanonCameraSettings";
  v34[0] = @"Name";
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 3221225472;
  v29[2] = sub_1DDA518C0;
  v29[3] = &unk_1E6D04D38;
  v29[4] = a1;
  unint64_t v8 = (void *)MEMORY[0x1E01C46E0](v29);
  v35[1] = v8;
  unint64_t v10 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v9, (uint64_t)v35, (uint64_t)v34, 2);
  v37[0] = v10;
  v36[1] = &unk_1F39AC890;
  v32[1] = @"Namespace";
  v33[0] = @"CanonFocalLength";
  v32[0] = @"Name";
  v28[0] = MEMORY[0x1E4F143A8];
  v28[1] = 3221225472;
  v28[2] = sub_1DDA51C50;
  v28[3] = &unk_1E6D04D38;
  v28[4] = a1;
  unint64_t v11 = (void *)MEMORY[0x1E01C46E0](v28);
  v33[1] = v11;
  int v13 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v12, (uint64_t)v33, (uint64_t)v32, 2);
  v37[1] = v13;
  v37[2] = &unk_1F39B0860;
  v36[2] = &unk_1F39AC8A8;
  uint64_t v36[3] = &unk_1F39AC8C0;
  v37[3] = &unk_1F39B0888;
  v37[4] = &unk_1F39B08B0;
  v36[4] = &unk_1F39AC8D8;
  v36[5] = &unk_1F39AC8F0;
  v37[5] = &unk_1F39B08D8;
  v37[6] = &unk_1F39B0900;
  void v36[6] = &unk_1F39AC908;
  v36[7] = &unk_1F39AC920;
  v37[7] = &unk_1F39B0928;
  v37[8] = &unk_1F39B0950;
  v36[8] = &unk_1F39AC938;
  v36[9] = &unk_1F39AC950;
  v37[9] = &unk_1F39B0978;
  v37[10] = &unk_1F39B09A0;
  v36[10] = &unk_1F39AC848;
  v36[11] = &unk_1F39AC968;
  v37[11] = &unk_1F39B09C8;
  v37[12] = &unk_1F39B09F0;
  v36[12] = &unk_1F39AC980;
  v36[13] = &unk_1F39AC998;
  v37[13] = &unk_1F39B0A18;
  v37[14] = &unk_1F39B0A40;
  v36[14] = &unk_1F39AC9B0;
  v36[15] = &unk_1F39AC9C8;
  v37[15] = &unk_1F39B0A68;
  v37[16] = &unk_1F39B0A90;
  v36[16] = &unk_1F39AC9E0;
  v36[17] = &unk_1F39AC9F8;
  v37[17] = &unk_1F39B0AB8;
  v37[18] = &unk_1F39B0AE0;
  v36[18] = &unk_1F39ACA10;
  v36[19] = &unk_1F39ACA28;
  v37[19] = &unk_1F39B0B08;
  v37[20] = &unk_1F39B0B30;
  v36[20] = &unk_1F39ACA40;
  v36[21] = &unk_1F39ACA58;
  v37[21] = &unk_1F39B0B58;
  v37[22] = &unk_1F39B0B80;
  v36[22] = &unk_1F39ACA70;
  v36[23] = &unk_1F39ACA88;
  v37[23] = &unk_1F39B0BA8;
  v37[24] = &unk_1F39B0BD0;
  v36[24] = &unk_1F39ACAA0;
  v36[25] = &unk_1F39ACAB8;
  v37[25] = &unk_1F39B0BF8;
  v37[26] = &unk_1F39B0C20;
  v36[26] = &unk_1F39ACAD0;
  v36[27] = &unk_1F39ACAE8;
  v37[27] = &unk_1F39B0C48;
  v37[28] = &unk_1F39B0C70;
  v36[28] = &unk_1F39ACB00;
  v36[29] = &unk_1F39ACB18;
  v37[29] = &unk_1F39B0C98;
  v37[30] = &unk_1F39B0CC0;
  v36[30] = &unk_1F39ACB30;
  v36[31] = &unk_1F39ACB48;
  v37[31] = &unk_1F39B0CE8;
  v37[32] = &unk_1F39B0D10;
  v36[32] = &unk_1F39ACB60;
  v36[33] = &unk_1F39ACB78;
  v37[33] = &unk_1F39B0D38;
  v37[34] = &unk_1F39B0D60;
  v36[34] = &unk_1F39ACB90;
  v36[35] = &unk_1F39ACBA8;
  v37[35] = &unk_1F39B0D88;
  v37[36] = &unk_1F39B0DB0;
  v36[36] = &unk_1F39ACBC0;
  v36[37] = &unk_1F39ACBD8;
  v37[37] = &unk_1F39B0DD8;
  v37[38] = &unk_1F39B0E00;
  v36[38] = &unk_1F39ACBF0;
  v36[39] = &unk_1F39ACC08;
  v37[39] = &unk_1F39B0E28;
  v37[40] = &unk_1F39B0E50;
  v36[40] = &unk_1F39ACC20;
  v36[41] = &unk_1F39ACC38;
  v37[41] = &unk_1F39B0E78;
  v37[42] = &unk_1F39B0EA0;
  v36[42] = &unk_1F39ACC50;
  v36[43] = &unk_1F39ACC68;
  v37[43] = &unk_1F39B0EC8;
  v37[44] = &unk_1F39B0EF0;
  v36[44] = &unk_1F39ACC80;
  v36[45] = &unk_1F39ACC98;
  v37[45] = &unk_1F39B0F18;
  v37[46] = &unk_1F39B0F40;
  v36[46] = &unk_1F39ACCB0;
  v36[47] = &unk_1F39ACCC8;
  v37[47] = &unk_1F39B0F68;
  v37[48] = &unk_1F39B0F90;
  v36[48] = &unk_1F39ACCE0;
  v36[49] = &unk_1F39ACCF8;
  v37[49] = &unk_1F39B0FB8;
  v37[50] = &unk_1F39B0FE0;
  v36[50] = &unk_1F39ACD10;
  v36[51] = &unk_1F39ACD28;
  v37[51] = &unk_1F39B1008;
  v37[52] = &unk_1F39B1030;
  v36[52] = &unk_1F39ACD40;
  v36[53] = &unk_1F39ACD58;
  v37[53] = &unk_1F39B1058;
  v37[54] = &unk_1F39B1080;
  v36[54] = &unk_1F39ACD70;
  v36[55] = &unk_1F39ACD88;
  v37[55] = &unk_1F39B10A8;
  v37[56] = &unk_1F39B10D0;
  v36[56] = &unk_1F39ACDA0;
  v36[57] = &unk_1F39ACDB8;
  v37[57] = &unk_1F39B10F8;
  v37[58] = &unk_1F39B1120;
  v36[58] = &unk_1F39ACDD0;
  v36[59] = &unk_1F39ACDE8;
  v37[59] = &unk_1F39B1148;
  v37[60] = &unk_1F39B1170;
  v36[60] = &unk_1F39ACE00;
  v36[61] = &unk_1F39ACE18;
  v30[1] = @"Namespace";
  v31[0] = @"SensorInfo";
  v30[0] = @"Name";
  v27[0] = MEMORY[0x1E4F143A8];
  v27[1] = 3221225472;
  v27[2] = sub_1DDA51D18;
  v27[3] = &unk_1E6D04D38;
  v27[4] = a1;
  long long v14 = (void *)MEMORY[0x1E01C46E0](v27);
  v31[1] = v14;
  int v16 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v15, (uint64_t)v31, (uint64_t)v30, 2);
  v37[61] = v16;
  v37[62] = &unk_1F39B1198;
  v36[62] = &unk_1F39ACE30;
  v36[63] = &unk_1F39ACE48;
  v36[64] = &unk_1F39ACE60;
  v37[63] = &unk_1F39B11C0;
  v37[64] = &unk_1F39B11E8;
  v36[65] = &unk_1F39ACE78;
  v37[65] = &unk_1F39B1210;
  v36[66] = &unk_1F39ACE90;
  v37[66] = &unk_1F39B1238;
  v36[67] = &unk_1F39ACEA8;
  v37[67] = &unk_1F39B1260;
  v36[68] = &unk_1F39ACEC0;
  v37[68] = &unk_1F39B1288;
  v36[69] = &unk_1F39ACED8;
  v37[69] = &unk_1F39B12B0;
  v36[70] = &unk_1F39ACEF0;
  v37[70] = &unk_1F39B12D8;
  v36[71] = &unk_1F39ACF08;
  v37[71] = &unk_1F39B1300;
  v36[72] = &unk_1F39ACF20;
  v37[72] = &unk_1F39B1328;
  v36[73] = &unk_1F39ACF38;
  v37[73] = &unk_1F39B1350;
  v36[74] = &unk_1F39ACF50;
  v37[74] = &unk_1F39B1378;
  v36[75] = &unk_1F39ACF68;
  v37[75] = &unk_1F39B13A0;
  v36[76] = &unk_1F39ACF80;
  v37[76] = &unk_1F39B13C8;
  v36[77] = &unk_1F39ACF98;
  v37[77] = &unk_1F39B13F0;
  v36[78] = &unk_1F39ACFB0;
  v37[78] = &unk_1F39B1418;
  v36[79] = &unk_1F39ACFC8;
  v37[79] = &unk_1F39B1440;
  unint64_t v18 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v17, (uint64_t)v37, (uint64_t)v36, 80);
  objc_msgSend_addEntriesFromDictionary_(v7, v19, (uint64_t)v18, v20, v21);

  int v25 = objc_msgSend_dictionaryWithDictionary_(MEMORY[0x1E4F1C9E8], v22, (uint64_t)v7, v23, v24);

  return v25;
}

void sub_1DDA51854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA518C4(uint64_t a1, const char *a2)
{
  v5[38] = *MEMORY[0x1E4F143B8];
  v4[0] = &unk_1F39ACFE0;
  v4[1] = &unk_1F39AC878;
  v5[0] = &unk_1F39B1468;
  v5[1] = &unk_1F39B1490;
  v4[2] = &unk_1F39AC890;
  v4[3] = &unk_1F39AC8A8;
  v5[2] = &unk_1F39B14B8;
  void v5[3] = &unk_1F39B14E0;
  v4[4] = &unk_1F39AC8C0;
  v4[5] = &unk_1F39AC8D8;
  v5[4] = &unk_1F39B1508;
  v5[5] = &unk_1F39B1530;
  v4[6] = &unk_1F39AC908;
  v4[7] = &unk_1F39AC938;
  v5[6] = &unk_1F39B1558;
  v5[7] = &unk_1F39B1580;
  v4[8] = &unk_1F39AC950;
  v4[9] = &unk_1F39ACFF8;
  v5[8] = &unk_1F39B15A8;
  v5[9] = &unk_1F39B15D0;
  v4[10] = &unk_1F39AC848;
  v4[11] = &unk_1F39AC968;
  v5[10] = &unk_1F39B15F8;
  v5[11] = &unk_1F39B1620;
  v4[12] = &unk_1F39AC980;
  v4[13] = &unk_1F39AC998;
  v5[12] = &unk_1F39B1648;
  v5[13] = &unk_1F39B1670;
  v4[14] = &unk_1F39AC9B0;
  v4[15] = &unk_1F39AC9C8;
  v5[14] = &unk_1F39B1698;
  v5[15] = &unk_1F39B16C0;
  v4[16] = &unk_1F39AC9E0;
  v4[17] = &unk_1F39AC9F8;
  uint8_t v5[16] = &unk_1F39B16E8;
  v5[17] = &unk_1F39B1710;
  v4[18] = &unk_1F39AD010;
  v4[19] = &unk_1F39AD028;
  v5[18] = &unk_1F39B1738;
  v5[19] = &unk_1F39B1760;
  v4[20] = &unk_1F39AD040;
  v4[21] = &unk_1F39AD058;
  v5[20] = &unk_1F39B1788;
  v5[21] = &unk_1F39B17B0;
  v4[22] = &unk_1F39AD070;
  v4[23] = &unk_1F39ACA28;
  v5[22] = &unk_1F39B17D8;
  v5[23] = &unk_1F39B1800;
  v4[24] = &unk_1F39AD088;
  v4[25] = &unk_1F39ACA40;
  v5[24] = &unk_1F39B1828;
  v5[25] = &unk_1F39B1850;
  v4[26] = &unk_1F39ACA58;
  v4[27] = &unk_1F39AD0A0;
  v5[26] = &unk_1F39B1878;
  v5[27] = &unk_1F39B18A0;
  v4[28] = &unk_1F39AD0B8;
  v4[29] = &unk_1F39AD0D0;
  v5[28] = &unk_1F39B18C8;
  v5[29] = &unk_1F39B18F0;
  v4[30] = &unk_1F39ACA88;
  v4[31] = &unk_1F39ACAA0;
  v5[30] = &unk_1F39B1918;
  v5[31] = &unk_1F39B1940;
  v4[32] = &unk_1F39ACAB8;
  v4[33] = &unk_1F39ACAE8;
  v5[32] = &unk_1F39B1968;
  v5[33] = &unk_1F39B1990;
  v4[34] = &unk_1F39ACB00;
  v4[35] = &unk_1F39ACB18;
  v5[34] = &unk_1F39B19B8;
  v5[35] = &unk_1F39B19E0;
  v4[36] = &unk_1F39AD0E8;
  v4[37] = &unk_1F39AD100;
  v5[36] = &unk_1F39B1A08;
  v5[37] = &unk_1F39B1A30;
  uint64_t v2 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], a2, (uint64_t)v5, (uint64_t)v4, 38);

  return v2;
}

id sub_1DDA51C54(uint64_t a1, const char *a2)
{
  v5[4] = *MEMORY[0x1E4F143B8];
  v4[0] = &unk_1F39ACFE0;
  v4[1] = &unk_1F39AC878;
  v5[0] = &unk_1F39B1A58;
  v5[1] = &unk_1F39B1A80;
  v4[2] = &unk_1F39AC890;
  v4[3] = &unk_1F39AC8A8;
  v5[2] = &unk_1F39B1AA8;
  void v5[3] = &unk_1F39B1AD0;
  uint64_t v2 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], a2, (uint64_t)v5, (uint64_t)v4, 4);

  return v2;
}

id sub_1DDA51D1C(uint64_t a1, const char *a2)
{
  v5[11] = *MEMORY[0x1E4F143B8];
  v4[0] = &unk_1F39ACFE0;
  v4[1] = &unk_1F39AC878;
  v5[0] = &unk_1F39B1AF8;
  v5[1] = &unk_1F39B1B20;
  v4[2] = &unk_1F39AC890;
  v4[3] = &unk_1F39AC8A8;
  v5[2] = &unk_1F39B1B48;
  void v5[3] = &unk_1F39B1B70;
  void v4[4] = &unk_1F39AC8C0;
  v4[5] = &unk_1F39AC8D8;
  v5[4] = &unk_1F39B1B98;
  void v5[5] = &unk_1F39B1BC0;
  v4[6] = &unk_1F39AC8F0;
  v4[7] = &unk_1F39AC908;
  v5[6] = &unk_1F39B1BE8;
  v5[7] = &unk_1F39B1C10;
  v4[8] = &unk_1F39AC920;
  v4[9] = &unk_1F39AC938;
  v5[8] = &unk_1F39B1C38;
  v5[9] = &unk_1F39B1C60;
  v4[10] = &unk_1F39AC950;
  v5[10] = &unk_1F39B1C88;
  uint64_t v2 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], a2, (uint64_t)v5, (uint64_t)v4, 11);

  return v2;
}

void sub_1DDA51E74(uint64_t a1)
{
  sub_1DDA4F098(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA51EAC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1249);
}

uint64_t sub_1DDA51EB4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1256);
}

uint64_t sub_1DDA51EBC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1250);
}

char *sub_1DDA51EC4(char *result, unsigned __int16 *a2, unsigned __int16 *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    unint64_t result = sub_1DDA17F34(result, a4);
    long long v7 = (_DWORD *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      int v8 = *a2++;
      *v7++ = v8;
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_1DDA51F1C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA51F38(void *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x518uLL);
  sub_1DDA51FCC((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA51FB8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA51FCC(uint64_t a1, void *a2, char *a3, void **a4, void **a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395D4D8;
  sub_1DDA7B1CC(a1 + 24, a2, *a3, *a4, *a5);
  *(void *)(a1 + 24) = &unk_1F395D178;
  *(_WORD *)(a1 + 1273) = 0;
  *(_DWORD *)(a1 + 1276) = 0;
  *(unsigned char *)(a1 + 1280) = 0;
  *(_OWORD *)(a1 + 1284) = 0u;
  return a1;
}

void sub_1DDA52058(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA5206C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395D4D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA5208C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395D4D8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA520E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

_OWORD *sub_1DDA52108(uint64_t **a1, void **a2, uint64_t a3, _OWORD **a4)
{
  uint64_t v6 = (void **)sub_1DDA4B7C4((uint64_t)a1, &v14, a2);
  long long v7 = *v6;
  if (!*v6)
  {
    int v8 = (uint64_t **)v6;
    long long v7 = operator new(0x50uLL);
    v12[1] = a1 + 1;
    unint64_t v9 = *a4;
    uint64_t v10 = *((void *)*a4 + 2);
    void v7[2] = **a4;
    *((void *)v7 + 6) = v10;
    v9[1] = 0;
    v9[2] = 0;
    *unint64_t v9 = 0;
    *((void *)v7 + 8) = 0;
    *((void *)v7 + 9) = 0;
    *((void *)v7 + 7) = 0;
    char v13 = 1;
    sub_1DDA25078(a1, v14, v8, (uint64_t *)v7);
    v12[0] = 0;
    sub_1DDA4BAA4((uint64_t)v12, 0);
  }
  return v7;
}

id sub_1DDA521D0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v43[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *MEMORY[0x1E4F30058];
  uint64_t v34 = *MEMORY[0x1E4F30038];
  uint64_t v35 = v5;
  v42[0] = MEMORY[0x1E4F1CC28];
  v42[1] = @"com.konicaminolta.raw-image";
  uint64_t v6 = *MEMORY[0x1E4F30050];
  uint64_t v36 = *MEMORY[0x1E4F30018];
  v42[2] = @".mrw.";
  uint64_t v42[3] = &unk_1F39AD118;
  v42[4] = &unk_1F39AD130;
  long long v7 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA524C8, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E4F30040], *MEMORY[0x1E4F30048]);
  v42[5] = v7;
  uint64_t v37 = *MEMORY[0x1E4F30000];
  unint64_t v11 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v8, (uint64_t)sub_1DDA524F0, v9, v10);
  v42[6] = v11;
  uint64_t v38 = *MEMORY[0x1E4F30020];
  uint64_t v15 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v12, (uint64_t)sub_1DDA524FC, v13, v14);
  v42[7] = v15;
  uint64_t v39 = *MEMORY[0x1E4F30008];
  long long v19 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v16, (uint64_t)sub_1DDA818EC, v17, v18);
  v42[8] = v19;
  uint64_t v40 = *MEMORY[0x1E4F30028];
  uint64_t v23 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v20, (uint64_t)sub_1DDA52508, v21, v22);
  v42[9] = v23;
  uint64_t v41 = *MEMORY[0x1E4F30030];
  uint64_t v27 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v24, (uint64_t)sub_1DDA52514, v25, v26);
  v42[10] = v27;
  unint64_t v29 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v43[0] = v29;
  unint64_t v32 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v30, (uint64_t)v43, 1, v31);

  return v32;
}

void sub_1DDA52468(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA524C8(unsigned int *a1, unint64_t a2)
{
  return a2 >= 4 && bswap32(*a1) == 5067341;
}

void sub_1DDA524F0(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA524FC(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA52508(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, &unk_1F395D518);
}

uint64_t sub_1DDA52514(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, &unk_1F395D518);
}

void sub_1DDA52520(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v11 = a2;
  id v10 = a3;
  id v9 = a4;
  sub_1DDA53748(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;
}

void sub_1DDA525A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_1DDA525BC(uint64_t a1)
{
  sub_1DDA27D28(a1, &v25);
  LODWORD(v23[0]) = 4;
  sub_1DDA1A94C(v27, (uint64_t *)&v25, (uint64_t)v23, 0);
  if (v26) {
    sub_1DDA18310(v26);
  }
  sub_1DDA27D28(a1, &v25);
  unsigned int v2 = sub_1DDA19EC8((uint64_t)v25);
  if (v26) {
    sub_1DDA18310(v26);
  }
  sub_1DDA27D28(a1, &v25);
  int v3 = (*(uint64_t (**)(void *))(*(void *)v25 + 16))(v25);
  LODWORD(__p) = 8;
  LODWORD(v23[0]) = v3;
  unsigned int v4 = *sub_1DDA4B6A4(v23, (int *)&__p);
  if (v26) {
    sub_1DDA18310(v26);
  }
  if (v2 >= v4)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  *(void *)(a1 + 1208) = v2 + 8;
  while (1)
  {
    sub_1DDA27D28(a1, &v25);
    int v5 = (*(uint64_t (**)(void *))(*(void *)v25 + 48))(v25);
    uint64_t v6 = *(void *)(a1 + 1208);
    if (v26) {
      sub_1DDA18310(v26);
    }
    uint64_t v7 = v5;
    if (v6 <= v5) {
      break;
    }
    sub_1DDA27D28(a1, &v25);
    int v8 = sub_1DDA19EC8((uint64_t)v25);
    if (v26) {
      sub_1DDA18310(v26);
    }
    sub_1DDA27D28(a1, &v25);
    unsigned int v9 = sub_1DDA19EC8((uint64_t)v25);
    if (v26) {
      sub_1DDA18310(v26);
    }
    switch(v8)
    {
      case 5263940:
        sub_1DDA27D28(a1, &v25);
        *(void *)(a1 + 1184) = sub_1DDA19F24((uint64_t)v25);
        if (v26) {
          sub_1DDA18310(v26);
        }
        sub_1DDA27D28(a1, &v25);
        *(_WORD *)(a1 + 1194) = sub_1DDA19E68((uint64_t)v25);
        if (v26) {
          sub_1DDA18310(v26);
        }
        sub_1DDA27D28(a1, &v25);
        *(_WORD *)(a1 + 1192) = sub_1DDA19E68((uint64_t)v25);
        if (v26) {
          sub_1DDA18310(v26);
        }
        sub_1DDA27D28(a1, &v25);
        *(_WORD *)(a1 + 1198) = sub_1DDA19E68((uint64_t)v25);
        if (v26) {
          sub_1DDA18310(v26);
        }
        sub_1DDA27D28(a1, &v25);
        *(_WORD *)(a1 + 1196) = sub_1DDA19E68((uint64_t)v25);
        if (v26) {
          sub_1DDA18310(v26);
        }
        sub_1DDA27D28(a1, &v25);
        *(unsigned char *)(a1 + 1200) = sub_1DDA19DA0((uint64_t)v25);
        if (v26) {
          sub_1DDA18310(v26);
        }
        sub_1DDA27D28(a1, &v25);
        *(unsigned char *)(a1 + 1201) = sub_1DDA19DA0((uint64_t)v25);
        if (v26) {
          sub_1DDA18310(v26);
        }
        sub_1DDA27D28(a1, &v25);
        *(unsigned char *)(a1 + 1202) = sub_1DDA19DA0((uint64_t)v25);
        if (v26) {
          sub_1DDA18310(v26);
        }
        unsigned int v14 = *(unsigned __int16 *)(a1 + 1194);
        if ((v14 & 1) != 0
          || (unsigned int v15 = *(unsigned __int16 *)(a1 + 1192), (v15 & 1) != 0)
          || v14 - 1001 > 0x2326
          || v15 - 1001 >= 0x2327
          || v14 < *(unsigned __int16 *)(a1 + 1198)
          || v15 < *(unsigned __int16 *)(a1 + 1196))
        {
          uint64_t v18 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](v18, "RawCameraException");
          __cxa_throw(v18, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        break;
      case 5526615:
        sub_1DDA27D28(a1, v23);
        sub_1DDA27D28(a1, &__p);
        LODWORD(p_p) = (*(uint64_t (**)(void *))(*(void *)__p + 48))(__p);
        sub_1DDA49398((uint64_t)&v25, (uint64_t *)v23, &p_p);
        if (v21) {
          sub_1DDA18310(v21);
        }
        if (v23[1]) {
          sub_1DDA18310((std::__shared_weak_count *)v23[1]);
        }
        sub_1DDA3F4AC((void **)a1);
        sub_1DDA49424((uint64_t)&v25);
        break;
      case 5718599:
        sub_1DDA27D28(a1, &v25);
        id v10 = v25;
        v23[0] = (void *)4;
        sub_1DDA18488(&__p, (unint64_t *)v23);
        (*(void (**)(void *, void **, uint64_t))(*(void *)v10 + 40))(v10, &__p, 1);
        if (v26) {
          sub_1DDA18310(v26);
        }
        sub_1DDA27D28(a1, v23);
        char v11 = v23[0];
        LODWORD(p_p) = 4;
        sub_1DDA1B3CC(&__p, (unsigned int *)&p_p);
        sub_1DDA1A488(v11, (unsigned int *)&__p, (uint64_t *)&v25);
        if (v23[1]) {
          sub_1DDA18310((std::__shared_weak_count *)v23[1]);
        }
        v23[1] = 0;
        uint64_t v24 = 0;
        v23[0] = 0;
        sub_1DDA51EC4((char *)v23, (unsigned __int16 *)v25, (unsigned __int16 *)v26, ((char *)v26 - (unsigned char *)v25) >> 1);
        sub_1DDA1A880(&__p, "MinoltaSegmentWBG");
        p_p = &__p;
        unsigned int v12 = sub_1DDA52108((uint64_t **)(a1 + 120), &__p, (uint64_t)&unk_1DDBFB044, (_OWORD **)&p_p);
        uint64_t v13 = (void *)v12[7];
        if (v13)
        {
          v12[8] = v13;
          operator delete(v13);
          v12[7] = 0;
          v12[8] = 0;
          v12[9] = 0;
        }
        *(_OWORD *)(v12 + 7) = *(_OWORD *)v23;
        v12[9] = v24;
        v23[1] = 0;
        uint64_t v24 = 0;
        v23[0] = 0;
        if (v22 < 0)
        {
          operator delete(__p);
          if (v23[0])
          {
            v23[1] = v23[0];
            operator delete(v23[0]);
          }
        }
        if (v25)
        {
          uint64_t v26 = (std::__shared_weak_count *)v25;
          operator delete(v25);
        }
        break;
    }
    sub_1DDA27D28(a1, &v25);
    int v16 = v25;
    v23[0] = (void *)(v7 + v9 + 8);
    sub_1DDA1B2DC(&__p, (uint64_t *)v23);
    (*(void (**)(void *, void **, void))(*(void *)v16 + 40))(v16, &__p, 0);
    if (v26) {
      sub_1DDA18310(v26);
    }
  }
  return sub_1DDA1AA18(v27);
}

void sub_1DDA52BF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,std::__shared_weak_count *a21,uint64_t a22,uint64_t a23)
{
  if (a21) {
    sub_1DDA18310(a21);
  }
  sub_1DDA1AA18(&a23);
  _Unwind_Resume(a1);
}

void sub_1DDA52D54(uint64_t **a1, long long *a2, unsigned __int16 *a3)
{
  int v6 = *a3;
  if (v6 == 279)
  {
    if (a3[1] - 3 > 1) {
      return;
    }
    std::string __p = 0;
    int v28 = 0;
    uint64_t v29 = 0;
    if (sub_1DDA44F6C((uint64_t)a1, (uint64_t)a3, &__p))
    {
      unint64_t v18 = (char *)v28 - (unsigned char *)__p;
      if ((((char *)v28 - (unsigned char *)__p) & 0x3FFFFFFFCLL) != 0)
      {
        sub_1DDA27D28((uint64_t)a1, &v25);
        unsigned int v19 = (*(uint64_t (**)(long long *))(*(void *)v25 + 16))(v25);
        unsigned int v20 = *(_DWORD *)__p;
        if (v26) {
          sub_1DDA18310(v26);
        }
        if (v19 < v20)
        {
          uint64_t v21 = (unsigned int *)__p;
          uint64_t v22 = (v18 >> 2);
          do
          {
            *uint64_t v21 = bswap32(*v21);
            ++v21;
            --v22;
          }
          while (v22);
        }
      }
      uint64_t v25 = a2;
      uint64_t v23 = (char *)(sub_1DDA4B960(a1 + 100, (void **)a2, (uint64_t)&unk_1DDBFB044, &v25) + 7);
      if (v23 != (char *)&__p) {
        sub_1DDA17E28(v23, (char *)__p, (uint64_t)v28, ((char *)v28 - (unsigned char *)__p) >> 2);
      }
    }
    goto LABEL_28;
  }
  if (v6 == 273)
  {
    if (a3[1] - 3 > 1) {
      return;
    }
    sub_1DDA27D28((uint64_t)a1, &__p);
    int v7 = sub_1DDA19CA4((uint64_t)__p);
    if (v28) {
      sub_1DDA18310(v28);
    }
    std::string __p = 0;
    int v28 = 0;
    uint64_t v29 = 0;
    if (sub_1DDA44F6C((uint64_t)a1, (uint64_t)a3, &__p))
    {
      unint64_t v8 = (char *)v28 - (unsigned char *)__p;
      if ((((char *)v28 - (unsigned char *)__p) & 0x3FFFFFFFCLL) != 0)
      {
        sub_1DDA27D28((uint64_t)a1, &v25);
        unsigned int v9 = (*(uint64_t (**)(long long *))(*(void *)v25 + 16))(v25);
        unsigned int v10 = *(_DWORD *)__p;
        if (v26) {
          sub_1DDA18310(v26);
        }
        uint64_t v11 = (v8 >> 2);
        if (v9 < v10)
        {
          unsigned int v12 = (unsigned int *)__p;
          uint64_t v13 = v11;
          do
          {
            *unsigned int v12 = bswap32(*v12);
            ++v12;
            --v13;
          }
          while (v13);
        }
        if (v7)
        {
          uint64_t v14 = 0;
          unsigned int v15 = (char *)__p;
          do
          {
            LODWORD(v25) = v7;
            int v24 = *sub_1DDA2A648((int *)&v25, (unsigned int *)&v15[v14]);
            int v16 = sub_1DDA456E8((unsigned int *)&v24);
            unsigned int v15 = (char *)__p;
            *(_DWORD *)((char *)__p + v14) = v16;
            v14 += 4;
            --v11;
          }
          while (v11);
        }
      }
      uint64_t v25 = a2;
      uint64_t v17 = (char *)(sub_1DDA4B960(a1 + 97, (void **)a2, (uint64_t)&unk_1DDBFB044, &v25) + 7);
      if (v17 != (char *)&__p) {
        sub_1DDA17E28(v17, (char *)__p, (uint64_t)v28, ((char *)v28 - (unsigned char *)__p) >> 2);
      }
    }
LABEL_28:
    if (__p)
    {
      int v28 = (std::__shared_weak_count *)__p;
      operator delete(__p);
    }
    return;
  }

  sub_1DDA43480(a1, (uint64_t)a2, a3);
}

void sub_1DDA53028(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, void *__p, uint64_t a13)
{
  if (a11) {
    sub_1DDA18310(a11);
  }
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA53088(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  nullsub_6();
  unsigned int v5 = *a3;
  if (v5 <= 0x88)
  {
    if (v5 != 4)
    {
      if (v5 == 136 && a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
      {
        sub_1DDA27D28(a1, &v15);
        int v6 = sub_1DDA19CA4(v15);
        LODWORD(v11) = *((_DWORD *)a3 + 2);
        LODWORD(v13) = v6;
        *(void *)(a1 + 1216) = *sub_1DDA2A648((int *)&v13, (unsigned int *)&v11);
        if (v16) {
          sub_1DDA18310(v16);
        }
      }
      return;
    }
    goto LABEL_10;
  }
  if (v5 != 137)
  {
    if (v5 != 276) {
      return;
    }
LABEL_10:
    if (a3[1] == 7)
    {
      uint64_t v7 = v5 == 4 ? 140 : 160;
      if ((v7 | 2uLL) <= *((unsigned int *)a3 + 1))
      {
        sub_1DDA27D28(a1, &v13);
        unint64_t v11 = v7 + *((unsigned int *)a3 + 2);
        sub_1DDA18488(&v12, &v11);
        sub_1DDA1A94C(&v15, &v13, (uint64_t)&v12, 0);
        if (v14) {
          sub_1DDA18310(v14);
        }
        sub_1DDA27D28(a1, &v13);
        int v8 = sub_1DDA19E68(v13);
        if (v14) {
          sub_1DDA18310(v14);
        }
        if (v8 == 76) {
          int v9 = 6;
        }
        else {
          int v9 = 1;
        }
        if (v8 == 82) {
          int v9 = 8;
        }
        *(_DWORD *)(a1 + 1228) = v9;
        sub_1DDA1AA18(&v15);
      }
    }
    return;
  }
  if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1) {
    *(_DWORD *)(a1 + 1224) = *((_DWORD *)a3 + 2);
  }
}

void sub_1DDA53220(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, std::__shared_weak_count *a15)
{
  if (a15) {
    sub_1DDA18310(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA53274(uint64_t a1)
{
  return *(void *)(a1 + 1208);
}

unint64_t sub_1DDA5327C(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1192) | ((unint64_t)*(unsigned __int16 *)(a1 + 1194) << 32);
}

uint64_t sub_1DDA5328C(uint64_t a1)
{
  return (unsigned __int16)~(-1 << *(unsigned char *)(a1 + 1201));
}

void sub_1DDA532A4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DDA47F74(a1, a2);
  sub_1DDA1B2DC(&v5, (uint64_t *)(a1 + 1216));
  unsigned int v4 = *(_DWORD *)(a1 + 1224);
  sub_1DDA284D4(a1, &v5, &v4, *(_DWORD *)(a1 + 1228), &v6);
  if ((void)v6) {
    sub_1DDA480D4(a2, &v6);
  }
  if (*((void *)&v6 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v6 + 1));
  }
}

void sub_1DDA53320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1DDA18310(a12);
  }
  sub_1DDA18270(&a11);
  _Unwind_Resume(a1);
}

BOOL sub_1DDA53350(uint64_t a1, unsigned __int8 a2)
{
  return a2 == 216;
}

void sub_1DDA53360(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_1DDA1A880(&__p, "mrw");
  unint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    unint64_t v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v8;
    }
    unint64_t v45 = a2 + 2;
    if (v10) {
      unint64_t v11 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v10);
    }
    else {
      unint64_t v11 = 0;
    }
    int v12 = &v11[24 * v7];
    uint64_t v41 = v11;
    unint64_t v42 = v12;
    unint64_t v44 = &v11[24 * v10];
    long long v13 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v12 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)int v12 = v13;
    memset(&__p, 0, sizeof(__p));
    unint64_t v43 = v12 + 24;
    sub_1DDA2A0E8(a2, &v41);
    uint64_t v14 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v41);
    int v15 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v14;
    if (v15 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v6 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v5 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1DDA1A880(&__p, "minolta");
  unint64_t v17 = a2[1];
  unint64_t v16 = a2[2];
  if (v17 >= v16)
  {
    unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    unint64_t v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20) {
      unint64_t v20 = 2 * v21;
    }
    if (v21 >= 0x555555555555555) {
      unint64_t v22 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v22 = v20;
    }
    unint64_t v45 = a2 + 2;
    if (v22) {
      uint64_t v23 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v22);
    }
    else {
      uint64_t v23 = 0;
    }
    int v24 = &v23[24 * v19];
    uint64_t v41 = v23;
    unint64_t v42 = v24;
    unint64_t v44 = &v23[24 * v22];
    long long v25 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v24 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)int v24 = v25;
    memset(&__p, 0, sizeof(__p));
    unint64_t v43 = v24 + 24;
    sub_1DDA2A0E8(a2, &v41);
    uint64_t v26 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v41);
    int v27 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v26;
    if (v27 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v18 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v17 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v17 = v18;
    a2[1] = v17 + 24;
  }
  sub_1DDA29B20(a1, &__p);
  unint64_t v29 = a2[1];
  unint64_t v28 = a2[2];
  if (v29 >= v28)
  {
    unint64_t v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    unint64_t v32 = v31 + 1;
    if (v31 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *a2) >> 3);
    if (2 * v33 > v32) {
      unint64_t v32 = 2 * v33;
    }
    if (v33 >= 0x555555555555555) {
      unint64_t v34 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v34 = v32;
    }
    unint64_t v45 = a2 + 2;
    if (v34) {
      uint64_t v35 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v34);
    }
    else {
      uint64_t v35 = 0;
    }
    uint64_t v36 = &v35[24 * v31];
    uint64_t v41 = v35;
    unint64_t v42 = v36;
    unint64_t v44 = &v35[24 * v34];
    long long v37 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v36 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)uint64_t v36 = v37;
    memset(&__p, 0, sizeof(__p));
    unint64_t v43 = v36 + 24;
    sub_1DDA2A0E8(a2, &v41);
    uint64_t v38 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v41);
    int v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v38;
    if (v39 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v30 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v29 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v29 = v30;
    a2[1] = v29 + 24;
  }
}

void sub_1DDA536B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1DDA53710(uint64_t a1)
{
  sub_1DDA49A44(a1);

  JUMPOUT(0x1E01C3DC0);
}

void sub_1DDA53748(void *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x4E8uLL);
  sub_1DDA537DC((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA537C8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA537DC(uint64_t a1, void *a2, char *a3, void **a4, void **a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395D880;
  sub_1DDA3F2B0(a1 + 24, a2, *a3, *a4, *a5);
  *(void *)(a1 + 24) = &unk_1F395D548;
  *(_OWORD *)(a1 + 1208) = 0u;
  *(_DWORD *)(a1 + 1223) = 0;
  *(void *)(a1 + 1232) = 0;
  *(void *)(a1 + 1248) = 0;
  *(void *)(a1 + 1240) = 0;
  return a1;
}

void sub_1DDA5386C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA53880(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395D880;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA538A0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395D880;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA538F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

id sub_1DDA5391C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v43[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *MEMORY[0x1E4F30058];
  uint64_t v34 = *MEMORY[0x1E4F30038];
  uint64_t v35 = v5;
  v42[0] = MEMORY[0x1E4F1CC28];
  v42[1] = @"com.olympus.raw-image";
  uint64_t v6 = *MEMORY[0x1E4F30050];
  uint64_t v36 = *MEMORY[0x1E4F30018];
  v42[2] = @".orf.";
  uint64_t v42[3] = &unk_1F39AD148;
  v42[4] = &unk_1F39AD160;
  unint64_t v7 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA53C14, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E4F30040], *MEMORY[0x1E4F30048]);
  v42[5] = v7;
  uint64_t v37 = *MEMORY[0x1E4F30000];
  unint64_t v11 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v8, (uint64_t)sub_1DDA53C1C, v9, v10);
  v42[6] = v11;
  uint64_t v38 = *MEMORY[0x1E4F30020];
  int v15 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v12, (uint64_t)sub_1DDA53C28, v13, v14);
  v42[7] = v15;
  uint64_t v39 = *MEMORY[0x1E4F30008];
  unint64_t v19 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v16, (uint64_t)sub_1DDA818EC, v17, v18);
  v42[8] = v19;
  uint64_t v40 = *MEMORY[0x1E4F30028];
  uint64_t v23 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v20, (uint64_t)sub_1DDA53C34, v21, v22);
  v42[9] = v23;
  uint64_t v41 = *MEMORY[0x1E4F30030];
  int v27 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v24, (uint64_t)sub_1DDA53C40, v25, v26);
  v42[10] = v27;
  unint64_t v29 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v43[0] = v29;
  unint64_t v32 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v30, (uint64_t)v43, 1, v31);

  return v32;
}

void sub_1DDA53BB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA53C14()
{
  return 0;
}

void sub_1DDA53C1C(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA53C28(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA53C34(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, &unk_1F395D8C0);
}

uint64_t sub_1DDA53C40(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, &unk_1F395D8C0);
}

void sub_1DDA53C4C(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v13 = a2;
  id v12 = a3;
  id v11 = a4;
  sub_1DDA57804(a1, &v13, &v12, &v11, &v10);
  long long v8 = v10;
  *a5 = v10;
  if (!(void)v8)
  {
    sub_1DDA5799C(a1, &v13, &v12, &v11, &v10);
    long long v9 = v10;
    long long v10 = 0uLL;
    *a5 = v9;
    if (*((void *)&v8 + 1))
    {
      sub_1DDA18310(*((std::__shared_weak_count **)&v8 + 1));
      if (*((void *)&v10 + 1)) {
        sub_1DDA18310(*((std::__shared_weak_count **)&v10 + 1));
      }
    }
  }
}

void sub_1DDA53D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  if (v13) {
    sub_1DDA18310(v13);
  }

  _Unwind_Resume(a1);
}

double sub_1DDA53D44(uint64_t a1, void *a2, char a3, void *a4, void *a5)
{
  sub_1DDA3F2B0(a1, a2, a3, a4, a5);
  *(void *)uint64_t v5 = &unk_1F395D8F0;
  *(unsigned char *)(v5 + 1180) = 0;
  *(void *)(v5 + 1336) = 0;
  *(void *)(v5 + 1328) = 0;
  double result = 0.0;
  *(_OWORD *)(v5 + 1184) = 0u;
  *(_OWORD *)(v5 + 1200) = 0u;
  *(_OWORD *)(v5 + 1216) = 0u;
  *(_OWORD *)(v5 + 1232) = 0u;
  *(_OWORD *)(v5 + 1248) = 0u;
  *(_OWORD *)(v5 + 1258) = 0u;
  *(void *)(v5 + 1276) = 0;
  *(unsigned char *)(v5 + 1284) = 0;
  *(_OWORD *)(v5 + 1288) = 0u;
  *(_OWORD *)(v5 + 1304) = 0u;
  *(void *)(v5 + 1320) = v5 + 1328;
  *(_DWORD *)(v5 + 1344) = 0;
  *(unsigned char *)(v5 + 1348) = 0;
  *(unsigned char *)(v5 + 1350) = 0;
  *(unsigned char *)(v5 + 1352) = 0;
  *(unsigned char *)(v5 + 1354) = 0;
  return result;
}

BOOL sub_1DDA53DD4(uint64_t a1)
{
  memset(&__str, 0, sizeof(__str));
  sub_1DDA27D28(a1, &__p);
  uint64_t v2 = (*(int (**)(void *))(*(void *)__p + 48))(__p);
  if (v36) {
    sub_1DDA18310(v36);
  }
  uint64_t v38 = v2;
  sub_1DDA27D28(a1, &__p);
  int v3 = __p;
  LODWORD(v32) = 8;
  sub_1DDA1B3CC(&v33, (unsigned int *)&v32);
  BOOL v4 = sub_1DDA1A0CC((uint64_t)v3, (unsigned int *)&v33, (uint64_t)&__str);
  if (v36) {
    sub_1DDA18310(v36);
  }
  std::string::size_type v5 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if (v4)
  {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v7 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v7 = __str.__r_.__value_.__l.__size_;
    }
    if (v7 != 8)
    {
      if (v7 != 7) {
        goto LABEL_20;
      }
      p_str = &__str;
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      int data = (int)p_str->__r_.__value_.__l.__data_;
      int v10 = *(_DWORD *)((char *)p_str->__r_.__value_.__r.__words + 3);
      if (data != 1297697871 || v10 != 1398100045) {
        goto LABEL_20;
      }
LABEL_63:
      sub_1DDA27D28(a1, &__p);
      int v30 = sub_1DDA19E68((uint64_t)__p);
      if (v36) {
        sub_1DDA18310(v36);
      }
      BOOL v17 = v30 == 19789 || v30 == 18761;
      if (v30 == 18761 || v30 == 19789)
      {
        if (v30 == 19789) {
          uint64_t v31 = 2;
        }
        else {
          uint64_t v31 = 1;
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, v31);
        sub_1DDA1B2DC(&__p, &v38);
        (*(void (**)(uint64_t, void **))(*(void *)a1 + 144))(a1, &__p);
        std::string::operator=((std::string *)(a1 + 1248), &__str);
        sub_1DDA27D28(a1, &__p);
        *(_WORD *)(a1 + 1272) = sub_1DDA19E68((uint64_t)__p);
        if (v36) {
          sub_1DDA18310(v36);
        }
        sub_1DDA27D28(a1, &__p);
        LODWORD(v33.__r_.__value_.__l.__data_) = (*(uint64_t (**)(void *))(*(void *)__p + 48))(__p);
        LODWORD(v32) = *sub_1DDA57B34((int *)&v33, &v38);
        (*(void (**)(uint64_t, uint64_t *))(*(void *)a1 + 160))(a1, &v32);
        if (v36) {
          sub_1DDA18310(v36);
        }
      }
      goto LABEL_31;
    }
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v19 = &__str;
    }
    else {
      unint64_t v19 = (std::string *)__str.__r_.__value_.__r.__words[0];
    }
    if (!memcmp(v19, "OM SYSTE", 8uLL))
    {
      if (v19->__r_.__value_.__r.__words[0] == 0x4554535953204D4FLL)
      {
        std::string __p = 0;
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        sub_1DDA27D28(a1, &v33);
        uint64_t v20 = v33.__r_.__value_.__r.__words[0];
        unsigned int v34 = 4;
        sub_1DDA1B3CC(&v32, &v34);
        BOOL v21 = sub_1DDA1A0CC(v20, (unsigned int *)&v32, (uint64_t)&__p);
        if (v33.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)v33.__r_.__value_.__l.__size_);
        }
        if (!v21) {
          goto LABEL_82;
        }
        sub_1DDA463E4((const void **)&__str.__r_.__value_.__l.__data_, (const void **)&__p, (uint64_t)&v33);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        std::string __str = v33;
        std::string::size_type v22 = HIBYTE(v33.__r_.__value_.__r.__words[2]);
        if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v22 = __str.__r_.__value_.__l.__size_;
        }
        if (v22 != 9) {
          goto LABEL_82;
        }
        uint64_t v23 = &__str;
        if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          uint64_t v23 = (std::string *)__str.__r_.__value_.__r.__words[0];
        }
        std::string::size_type v24 = v23->__r_.__value_.__r.__words[0];
        int v25 = v23->__r_.__value_.__s.__data_[8];
        if (v24 != 0x4554535953204D4FLL || v25 != 77) {
          goto LABEL_82;
        }
        unint64_t v27 = HIBYTE(v37);
        if (v37 < 0) {
          unint64_t v27 = (unint64_t)v36;
        }
        if (v27 > 4)
        {
LABEL_82:
          if (SHIBYTE(v37) < 0) {
            operator delete(__p);
          }
          goto LABEL_30;
        }
        sub_1DDA27D28(a1, &v33);
        std::string::size_type v28 = v33.__r_.__value_.__r.__words[0];
        unint64_t v29 = (std::__shared_weak_count *)HIBYTE(v37);
        if (v37 < 0) {
          unint64_t v29 = v36;
        }
        uint64_t v32 = 3 - (void)v29;
        sub_1DDA18488(&v34, (unint64_t *)&v32);
        (*(void (**)(std::string::size_type, unsigned int *, uint64_t))(*(void *)v28 + 40))(v28, &v34, 1);
        if (v33.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)v33.__r_.__value_.__l.__size_);
        }
        if (SHIBYTE(v37) < 0) {
          operator delete(__p);
        }
      }
      goto LABEL_63;
    }
  }
  else
  {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
LABEL_20:
  if ((v5 & 0x80u) == 0) {
    std::string::size_type v12 = v5;
  }
  else {
    std::string::size_type v12 = size;
  }
  if (v12 != 5) {
    goto LABEL_30;
  }
  char v13 = &__str;
  if ((v5 & 0x80u) != 0) {
    char v13 = (std::string *)__str.__r_.__value_.__r.__words[0];
  }
  int v14 = (int)v13->__r_.__value_.__l.__data_;
  int v15 = v13->__r_.__value_.__s.__data_[4];
  if (v14 != 1297697871 || v15 != 80)
  {
LABEL_30:
    BOOL v17 = 0;
    goto LABEL_31;
  }
  std::string::operator=((std::string *)(a1 + 1248), &__str);
  sub_1DDA27D28(a1, &__p);
  *(_WORD *)(a1 + 1272) = sub_1DDA19E68((uint64_t)__p);
  if (v36) {
    sub_1DDA18310(v36);
  }
  sub_1DDA27D28(a1, &__p);
  LODWORD(v33.__r_.__value_.__l.__data_) = (*(uint64_t (**)(void *))(*(void *)__p + 48))(__p);
  (*(void (**)(uint64_t, std::string *))(*(void *)a1 + 160))(a1, &v33);
  if (v36) {
    sub_1DDA18310(v36);
  }
  BOOL v17 = 1;
LABEL_31:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return v17;
}

void sub_1DDA54330(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA543D4(uint64_t a1, const void **a2, unsigned __int16 *a3)
{
  v34[1] = *(std::__shared_weak_count **)MEMORY[0x1E4F143B8];
  nullsub_6();
  unsigned int v6 = *a3;
  if (v6 > 0x1017)
  {
    if (*a3 > 0x201Fu)
    {
      if (v6 == 8224)
      {
        int v15 = a3[1];
        if (v15 == 7 || v15 == 13)
        {
          sub_1DDA27D28(a1, &__src);
          int v30 = *((_DWORD *)a3 + 2);
          sub_1DDA18410((int *)&p_str, &v30);
          sub_1DDA1A94C((uint64_t *)&__str, &__src, (uint64_t)&p_str, 0);
          if (v34[0]) {
            sub_1DDA18310(v34[0]);
          }
          if (*((char *)a2 + 23) >= 0) {
            size_t v16 = *((unsigned __int8 *)a2 + 23);
          }
          else {
            size_t v16 = (size_t)a2[1];
          }
          BOOL v17 = v26;
          sub_1DDA49688((uint64_t)v26, v16 + 15);
          if (v27 < 0) {
            BOOL v17 = (void **)v26[0];
          }
          if (v16)
          {
            if (*((char *)a2 + 23) >= 0) {
              uint64_t v18 = a2;
            }
            else {
              uint64_t v18 = *a2;
            }
            memmove(v17, v18, v16);
          }
          strcpy((char *)v17 + v16, ":CameraSettings");
          sub_1DDA54C78();
          if (v27 < 0) {
            operator delete(v26[0]);
          }
          sub_1DDA1AA18((uint64_t *)&__str);
        }
      }
      else if ((v6 == 8256 || v6 == 12288) {
             && ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0)
      }
      {
        unsigned int v7 = a3[1];
        if (v7 <= 0xD && ((1 << v7) & 0x2088) != 0)
        {
          sub_1DDA27D28(a1, &__src);
          int v30 = *((_DWORD *)a3 + 2);
          sub_1DDA18410((int *)&p_str, &v30);
          sub_1DDA1A94C((uint64_t *)&__str, &__src, (uint64_t)&p_str, 0);
          if (v34[0]) {
            sub_1DDA18310(v34[0]);
          }
          if (*((char *)a2 + 23) >= 0) {
            size_t v8 = *((unsigned __int8 *)a2 + 23);
          }
          else {
            size_t v8 = (size_t)a2[1];
          }
          long long v9 = __p;
          sub_1DDA49688((uint64_t)__p, v8 + 16);
          if (v25 < 0) {
            long long v9 = (void **)__p[0];
          }
          if (v8)
          {
            if (*((char *)a2 + 23) >= 0) {
              int v10 = a2;
            }
            else {
              int v10 = *a2;
            }
            memmove(v9, v10, v8);
          }
          strcpy((char *)v9 + v8, ":ImageProcessing");
          sub_1DDA54D8C();
          if (v25 < 0) {
            operator delete(__p[0]);
          }
          sub_1DDA1AA18((uint64_t *)&__str);
        }
      }
      return;
    }
    if (v6 != 4120)
    {
      if (v6 == 8208)
      {
        int v11 = a3[1];
        if (v11 == 7 || v11 == 13)
        {
          sub_1DDA27D28(a1, &__src);
          int v30 = *((_DWORD *)a3 + 2);
          sub_1DDA18410((int *)&p_str, &v30);
          sub_1DDA1A94C((uint64_t *)&__str, &__src, (uint64_t)&p_str, 0);
          if (v34[0]) {
            sub_1DDA18310(v34[0]);
          }
          if (*((char *)a2 + 23) >= 0) {
            size_t v12 = *((unsigned __int8 *)a2 + 23);
          }
          else {
            size_t v12 = (size_t)a2[1];
          }
          char v13 = v28;
          sub_1DDA49688((uint64_t)v28, v12 + 15);
          if (v29 < 0) {
            char v13 = (void **)v28[0];
          }
          if (v12)
          {
            if (*((char *)a2 + 23) >= 0) {
              int v14 = a2;
            }
            else {
              int v14 = *a2;
            }
            memmove(v13, v14, v12);
          }
          strcpy((char *)v13 + v12, ":CameraSettings");
          sub_1DDA54B64();
          if (v29 < 0) {
            operator delete(v28[0]);
          }
          sub_1DDA1AA18((uint64_t *)&__str);
        }
      }
      return;
    }
    if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1)) {
      return;
    }
    if (a3[1] != 3) {
      return;
    }
    LODWORD(__src) = 0;
    sub_1DDA1B3CC(&__str, (unsigned int *)&__src);
    int v20 = sub_1DDA3F234((uint64_t)a3, (unsigned int *)&__str);
    *(_WORD *)(a1 + 1352) = v20;
    *(unsigned char *)(a1 + 1354) = 1;
    if (!*(unsigned char *)(a1 + 1350)) {
      return;
    }
    LODWORD(__src) = *(unsigned __int16 *)(a1 + 1348);
    HIDWORD(__src) = 256;
    LODWORD(v34[0]) = v20;
    sub_1DDA47580(":redBlueBalance", a2, (void **)&__str.__r_.__value_.__l.__data_);
    p_str = &__str;
    BOOL v21 = (char *)sub_1DDA52108((uint64_t **)(a1 + 120), (void **)&__str.__r_.__value_.__l.__data_, (uint64_t)&unk_1DDBFB044, (_OWORD **)&p_str);
    sub_1DDA17E28(v21 + 56, (char *)&__src, (uint64_t)v34 + 4, 3uLL);
    goto LABEL_80;
  }
  if (*a3 > 0x1011u)
  {
    if (v6 == 4114)
    {
      if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0
        && a3[1] == 3
        && *((_DWORD *)a3 + 1) == 4)
      {
        sub_1DDA27D28(a1, &__src);
        sub_1DDA3E944((uint64_t)a3, &__src, (void **)&__str.__r_.__value_.__l.__data_);
        p_str = (std::string *)a2;
        std::string::size_type v22 = sub_1DDA4B960((uint64_t **)(a1 + 264), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&p_str);
        uint64_t v23 = (void *)v22[7];
        if (v23)
        {
          v22[8] = (uint64_t)v23;
          operator delete(v23);
          v22[7] = 0;
          v22[8] = 0;
          v22[9] = 0;
        }
        *(std::string *)(v22 + 7) = __str;
        memset(&__str, 0, sizeof(__str));
        if (v34[0]) {
          sub_1DDA18310(v34[0]);
        }
      }
    }
    else if (v6 == 4119 && ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0 && a3[1] == 3)
    {
      LODWORD(__src) = 0;
      sub_1DDA1B3CC(&__str, (unsigned int *)&__src);
      *(_WORD *)(a1 + 1348) = sub_1DDA3F234((uint64_t)a3, (unsigned int *)&__str);
      *(unsigned char *)(a1 + 1350) = 1;
    }
  }
  else
  {
    if (v6 != 256)
    {
      if (v6 != 519 || a3[1] != 2 || *((_DWORD *)a3 + 1) > 0x3Fu) {
        return;
      }
      memset(&__str, 0, sizeof(__str));
      if (sub_1DDA45530(a1, (uint64_t)a3, &__str, 1)) {
        std::string::operator=((std::string *)(a1 + 1296), &__str);
      }
LABEL_80:
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      return;
    }
    if (a3[1] == 7)
    {
      int v19 = *((_DWORD *)a3 + 2);
      sub_1DDA27D28(a1, &__str);
      LODWORD(__src) = sub_1DDA19CA4((uint64_t)__str.__r_.__value_.__l.__data_);
      *(_DWORD *)(a1 + 1276) = sub_1DDA456E8((unsigned int *)&__src) + v19;
      if (__str.__r_.__value_.__l.__size_) {
        sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
      }
      *(_DWORD *)(a1 + 1280) = *((_DWORD *)a3 + 1);
    }
  }
}

void sub_1DDA54A6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (__p) {
    operator delete(__p);
  }
  uint64_t v35 = *(std::__shared_weak_count **)(v33 - 48);
  if (v35) {
    sub_1DDA18310(v35);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA54B64()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  unsigned int v4 = sub_1DDA419CC(v0, v1, v10);
  if (v4)
  {
    unint64_t v5 = 0;
    uint64_t v6 = 12 * v4;
    do
    {
      if (*(char *)(v2 + 23) < 0)
      {
        sub_1DDA2639C(__p, *(void **)v2, *(void *)(v2 + 8));
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)v2;
        uint64_t v9 = *(void *)(v2 + 16);
      }
      (*(void (**)(uint64_t, void **, _WORD *))(*(void *)v3 + 800))(v3, __p, &v10[v5 / 2 + 2]);
      if (SHIBYTE(v9) < 0) {
        operator delete(__p[0]);
      }
      v5 += 12;
    }
    while (v6 != v5);
  }
  return 1;
}

void sub_1DDA54C5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA54C78()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  unsigned int v4 = sub_1DDA419CC(v0, v1, v10);
  if (v4)
  {
    unint64_t v5 = 0;
    uint64_t v6 = 12 * v4;
    do
    {
      if (*(char *)(v2 + 23) < 0)
      {
        sub_1DDA2639C(__p, *(void **)v2, *(void *)(v2 + 8));
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)v2;
        uint64_t v9 = *(void *)(v2 + 16);
      }
      (*(void (**)(uint64_t, void **, _WORD *))(*(void *)v3 + 808))(v3, __p, &v10[v5 / 2 + 2]);
      if (SHIBYTE(v9) < 0) {
        operator delete(__p[0]);
      }
      v5 += 12;
    }
    while (v6 != v5);
  }
  return 1;
}

void sub_1DDA54D70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA54D8C()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  unsigned int v4 = sub_1DDA419CC(v0, v1, v10);
  if (v4)
  {
    unint64_t v5 = 0;
    uint64_t v6 = 12 * v4;
    do
    {
      if (*(char *)(v2 + 23) < 0)
      {
        sub_1DDA2639C(__p, *(void **)v2, *(void *)(v2 + 8));
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)v2;
        uint64_t v9 = *(void *)(v2 + 16);
      }
      (*(void (**)(uint64_t, void **, _WORD *))(*(void *)v3 + 816))(v3, __p, &v10[v5 / 2 + 2]);
      if (SHIBYTE(v9) < 0) {
        operator delete(__p[0]);
      }
      v5 += 12;
    }
    while (v6 != v5);
  }
  return 1;
}

void sub_1DDA54E84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1DDA54EA0(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  sub_1DDA27D28(a1, &v9);
  sub_1DDA49310(v11, &v9);
  if (v10) {
    sub_1DDA18310(v10);
  }
  int v5 = *a3;
  if (v5 == 256)
  {
    if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1) {
      *(unsigned char *)(a1 + 1284) = *((_DWORD *)a3 + 2) == 1;
    }
  }
  else if (v5 == 257)
  {
    if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
    {
      int v6 = *((_DWORD *)a3 + 2);
      sub_1DDA27D28(a1, &v9);
      unsigned int v8 = sub_1DDA19CA4(v9);
      *(_DWORD *)(a1 + 1288) = sub_1DDA456E8(&v8) + v6;
      if (v10) {
        sub_1DDA18310(v10);
      }
    }
  }
  else if (v5 == 258 && a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
  {
    *(_DWORD *)(a1 + 1292) = *((_DWORD *)a3 + 2);
  }
  return sub_1DDA1AA18(v11);
}

void sub_1DDA54FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1DDA1AA18((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1DDA54FF0(uint64_t a1, void **a2, unsigned __int16 *a3)
{
  *(void *)&v31[4] = *MEMORY[0x1E4F143B8];
  sub_1DDA27D28(a1, v25);
  sub_1DDA49310(v27, (uint64_t *)v25);
  if (v25[1]) {
    sub_1DDA18310((std::__shared_weak_count *)v25[1]);
  }
  unsigned int v6 = *a3;
  if (v6 > 0x61F)
  {
    if (*a3 <= 0x1112u)
    {
      if (v6 == 1568)
      {
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          LODWORD(__p.__r_.__value_.__l.__data_) = 0;
          sub_1DDA1B3CC(v25, (unsigned int *)&__p);
          *(_DWORD *)(a1 + 1344) = sub_1DDA3F234((uint64_t)a3, (unsigned int *)v25);
        }
      }
      else if (v6 == 4112 && a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
      {
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        sub_1DDA1B3CC(v25, (unsigned int *)&__p);
        __int16 v10 = sub_1DDA3F234((uint64_t)a3, (unsigned int *)v25);
        v25[0] = a2;
        *((_WORD *)sub_1DDA4BC98((uint64_t **)(a1 + 1320), a2, (uint64_t)&unk_1DDBFB044, (long long **)v25) + 28) = v10;
      }
    }
    else if (v6 == 4371)
    {
      if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 4)
      {
        sub_1DDA27D28(a1, &__p);
        sub_1DDA3ED68((uint64_t)a3, (uint64_t *)&__p, (uint64_t)v25);
        if (__p.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
        }
        char v13 = v25[0];
        if ((void *)((char *)v25[1] - (char *)v25[0]) == (void *)8)
        {
          int v14 = *(unsigned __int16 *)v25[0];
          int v15 = *((unsigned __int16 *)v25[0] + 1);
          int v16 = *((unsigned __int16 *)v25[0] + 2) - v14 + 1;
          int v17 = *((unsigned __int16 *)v25[0] + 3) - v15 + 1;
          *(_DWORD *)(a1 + 1232) = v14;
          *(_DWORD *)(a1 + 1236) = v15;
          *(_DWORD *)(a1 + 1240) = v16;
          *(_DWORD *)(a1 + 1244) = v17;
          *(_DWORD *)(a1 + 1216) += v14;
          *(_DWORD *)(a1 + 1220) += v15;
          *(_DWORD *)(a1 + 1224) = v16;
          *(_DWORD *)(a1 + 1228) = v17;
        }
        else
        {
LABEL_67:
          if (!v13) {
            return sub_1DDA1AA18(v27);
          }
        }
        v25[1] = v13;
        operator delete(v13);
      }
    }
    else if (v6 == 5378)
    {
      if (a3[1] == 1 && *((_DWORD *)a3 + 1) == 1)
      {
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        sub_1DDA1B3CC(v25, (unsigned int *)&__p);
        *(unsigned char *)(a1 + 1180) = (sub_1DDA49028((uint64_t)a3, (unsigned int *)v25) & 3) != 0;
      }
    }
    else if (v6 == 5386 && a3[1] == 11 && *((_DWORD *)a3 + 1) == 4)
    {
      sub_1DDA27D28(a1, &__p);
      sub_1DDA3E944((uint64_t)a3, (uint64_t *)&__p, v25);
      unsigned int v7 = *(void **)(a1 + 1184);
      if (v7)
      {
        *(void *)(a1 + 1192) = v7;
        operator delete(v7);
        *(void *)(a1 + 1184) = 0;
        *(void *)(a1 + 1192) = 0;
        *(void *)(a1 + 1200) = 0;
      }
      *(_OWORD *)(a1 + 1184) = *(_OWORD *)v25;
      *(void *)(a1 + 1200) = v26;
LABEL_24:
      v25[1] = 0;
      uint64_t v26 = 0;
      v25[0] = 0;
      if (__p.__r_.__value_.__l.__size_) {
        sub_1DDA18310((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
      }
    }
  }
  else
  {
    switch(*a3)
    {
      case 0x612u:
        if (a3[1] == 3 && (*((_DWORD *)a3 + 1) - 1) <= 1)
        {
          LODWORD(__p.__r_.__value_.__l.__data_) = 0;
          sub_1DDA1B3CC(v25, (unsigned int *)&__p);
          *(_DWORD *)(a1 + 1216) = sub_1DDA3F234((uint64_t)a3, (unsigned int *)v25);
        }
        break;
      case 0x613u:
        if (a3[1] == 3 && (*((_DWORD *)a3 + 1) - 1) <= 1)
        {
          LODWORD(__p.__r_.__value_.__l.__data_) = 0;
          sub_1DDA1B3CC(v25, (unsigned int *)&__p);
          *(_DWORD *)(a1 + 1220) = sub_1DDA3F234((uint64_t)a3, (unsigned int *)v25);
        }
        break;
      case 0x614u:
        if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
        {
          int v11 = *((_DWORD *)a3 + 2);
          *(_DWORD *)(a1 + 1224) = v11;
          *(_DWORD *)(a1 + 1208) = v11;
        }
        break;
      case 0x615u:
        if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
        {
          int v12 = *((_DWORD *)a3 + 2);
          *(_DWORD *)(a1 + 1228) = v12;
          *(_DWORD *)(a1 + 1212) = v12;
        }
        break;
      default:
        if (v6 == 256)
        {
          if (a3[1] == 3)
          {
            int v18 = *((_DWORD *)a3 + 1);
            if (v18 == 2 || v18 == 4)
            {
              sub_1DDA27D28(a1, &__p);
              sub_1DDA3ED68((uint64_t)a3, (uint64_t *)&__p, (uint64_t)v25);
              if (__p.__r_.__value_.__l.__size_) {
                sub_1DDA18310((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
              }
              if (*((char *)a2 + 23) < 0) {
                sub_1DDA2639C(&__p, *a2, (unint64_t)a2[1]);
              }
              else {
                std::string __p = *(std::string *)a2;
              }
              std::string::append(&__p, ":WBRedBlueLevels", 0x10uLL);
              int64_t v19 = ((char *)v25[1] - (char *)v25[0]) >> 1;
              if (v19 == 4)
              {
                int v21 = *((unsigned __int16 *)v25[0] + 2);
                LODWORD(__src) = *(unsigned __int16 *)v25[0];
                HIDWORD(__src) = v21;
                int v30 = *((unsigned __int16 *)v25[0] + 1);
                p_p = &__p;
                std::string::size_type v22 = sub_1DDA4B960((uint64_t **)(a1 + 120), (void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&unk_1DDBFB044, (long long **)&p_p);
                sub_1DDA17E28((char *)v22 + 56, (char *)&__src, (uint64_t)v31, 3uLL);
              }
              else if (v19 == 2)
              {
                LODWORD(__src) = *(unsigned __int16 *)v25[0];
                HIDWORD(__src) = 256;
                int v30 = *((unsigned __int16 *)v25[0] + 1);
                p_p = &__p;
                int v20 = sub_1DDA4B960((uint64_t **)(a1 + 120), (void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&unk_1DDBFB044, (long long **)&p_p);
                sub_1DDA17E28((char *)v20 + 56, (char *)&__src, (uint64_t)v31, 3uLL);
              }
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              char v13 = v25[0];
              goto LABEL_67;
            }
          }
        }
        else if (v6 == 1536 && a3[1] == 3 && *((_DWORD *)a3 + 1) == 4)
        {
          sub_1DDA27D28(a1, &__p);
          sub_1DDA3E944((uint64_t)a3, (uint64_t *)&__p, v25);
          uint64_t __src = a2;
          unsigned int v8 = sub_1DDA4B960((uint64_t **)(a1 + 264), a2, (uint64_t)&unk_1DDBFB044, (long long **)&__src);
          uint64_t v9 = (void *)v8[7];
          if (v9)
          {
            v8[8] = (uint64_t)v9;
            operator delete(v9);
            v8[7] = 0;
            v8[8] = 0;
            v8[9] = 0;
          }
          *(_OWORD *)(v8 + 7) = *(_OWORD *)v25;
          v8[9] = v26;
          goto LABEL_24;
        }
        break;
    }
  }
  return sub_1DDA1AA18(v27);
}

void sub_1DDA555C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (__p) {
    operator delete(__p);
  }
  sub_1DDA1AA18(&a20);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA5569C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 1224) && *(_DWORD *)(a1 + 1228)) {
    return *(void *)(a1 + 1216);
  }
  else {
    return sub_1DDA27F1C(a1);
  }
}

double sub_1DDA556D8(int *a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 592))(&v7);
  if (v7)
  {
    uint64_t v2 = sub_1DDAD6FB0(v7);
    int v3 = a1[311];
    double v4 = (double)a1[310] / (double)(int)v2;
    if (v4 < (double)v3 / (double)SHIDWORD(v2)) {
      double v4 = (double)v3 / (double)SHIDWORD(v2);
    }
    double v5 = 1.0 / v4 * (double)a1[308] / (double)(int)v2;
  }
  else
  {
    double v5 = *MEMORY[0x1E4F1DB28];
  }
  if (v8) {
    sub_1DDA18310(v8);
  }
  return v5;
}

void sub_1DDA557E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA557FC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1 + 704;
  sub_1DDA1A880(__p, "IFD0");
  double v5 = sub_1DDA2A530(v4, __p);
  unsigned int v6 = v5;
  if ((void **)(a1 + 712) == v5) {
    int v7 = 0;
  }
  else {
    int v7 = *((_DWORD *)v5 + 14);
  }
  if (v14 < 0) {
    operator delete(__p[0]);
  }
  if ((v7 - 9) >= 0xFFFFFFF8 || a1 + 712 == (void)v6) {
    int v9 = v7;
  }
  else {
    int v9 = 0;
  }
  sub_1DDA47F74(a1, a2);
  if (*(unsigned char *)(a1 + 1284))
  {
    sub_1DDA18410((int *)&v11, (int *)(a1 + 1288));
    int v12 = *(_DWORD *)(a1 + 1292);
    sub_1DDA284D4(a1, (int *)&v11, (unsigned int *)&v12, v9, __p);
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
  }
  sub_1DDA18410(&v12, (int *)(a1 + 1276));
  unsigned int v10 = *(_DWORD *)(a1 + 1280);
  sub_1DDA284D4(a1, &v12, &v10, v9, &v11);
  if (__p[0]) {
    sub_1DDA480D4(a2, (long long *)__p);
  }
  if ((void)v11) {
    sub_1DDA480D4(a2, &v11);
  }
  if (*((void *)&v11 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v11 + 1));
  }
  if (__p[1]) {
    sub_1DDA18310((std::__shared_weak_count *)__p[1]);
  }
}

void sub_1DDA55948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
}

uint64_t sub_1DDA559A8(uint64_t a1)
{
  sub_1DDA1A880(__p, "IFD0");
  uint64_t v2 = sub_1DDA481F0(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA55A04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA55A20(uint64_t a1)
{
  sub_1DDA1A880(__p, "IFD0");
  uint64_t v2 = sub_1DDA48264(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA55A7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1DDA55A98(uint64_t a1)
{
  sub_1DDA1A880(__p, "IFD0");
  unint64_t v2 = sub_1DDA48394(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA55AF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA55B10(uint64_t a1)
{
  uint64_t v2 = a1 + 656;
  sub_1DDA1A880(__p, "IFD0");
  int v3 = sub_1DDA2A530(v2, __p);
  if ((void **)(a1 + 664) == v3 || (uint64_t v4 = (int *)v3[7], v3[8] == v4))
  {
    LOBYTE(v5) = 0;
    int v6 = 0;
  }
  else
  {
    int v5 = *v4;
    int v6 = 1;
  }
  if (v9 < 0)
  {
    operator delete(__p[0]);
    if (v6) {
      goto LABEL_7;
    }
LABEL_9:
    LOWORD(result) = sub_1DDA27FA0();
    return (unsigned __int16)result;
  }
  if (!v6) {
    goto LABEL_9;
  }
LABEL_7:
  LODWORD(result) = ~(-1 << v5);
  return (unsigned __int16)result;
}

void sub_1DDA55BC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA55BDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 792))();
}

BOOL sub_1DDA55C08(uint64_t a1)
{
  return *(unsigned char *)(a1 + 1180) && *(void *)(a1 + 1184) != *(void *)(a1 + 1192);
}

BOOL sub_1DDA55C2C(uint64_t a1)
{
  uint64_t v2 = a1 + 1320;
  sub_1DDA1A880(__p, "IFD0:EXIF:MAKERNOTE:ImageProcessing");
  int v3 = sub_1DDA2A530(v2, __p);
  uint64_t v4 = v3;
  int v5 = (void **)(a1 + 1328);
  if (v5 == v3) {
    int v6 = 0;
  }
  else {
    int v6 = (_WORD)v3[7] & 1;
  }
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  return v5 != v4 && v6 != 0;
}

void sub_1DDA55CB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA55CD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_1DDA1A880(__p, "orf");
  unint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    unint64_t v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v8;
    }
    uint64_t v36 = a2 + 2;
    if (v10) {
      long long v11 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v10);
    }
    else {
      long long v11 = 0;
    }
    int v12 = &v11[24 * v7];
    uint64_t v32 = v11;
    uint64_t v33 = v12;
    uint64_t v35 = &v11[24 * v10];
    long long v13 = *(_OWORD *)__p;
    *((void *)v12 + 2) = v31;
    *(_OWORD *)int v12 = v13;
    __p[1] = 0;
    uint64_t v31 = 0;
    __p[0] = 0;
    unsigned int v34 = v12 + 24;
    sub_1DDA2A0E8(a2, &v32);
    uint64_t v14 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v32);
    int v15 = SHIBYTE(v31);
    a2[1] = v14;
    if (v15 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v6 = *(_OWORD *)__p;
    *(void *)(v5 + 16) = v31;
    *(_OWORD *)unint64_t v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1DDA1A880(__p, "olympus");
  unint64_t v17 = a2[1];
  unint64_t v16 = a2[2];
  if (v17 >= v16)
  {
    unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    unint64_t v21 = v20 + 1;
    if (v20 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v22 > v21) {
      unint64_t v21 = 2 * v22;
    }
    if (v22 >= 0x555555555555555) {
      unint64_t v23 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v23 = v21;
    }
    uint64_t v36 = a2 + 2;
    if (v23) {
      std::string::size_type v24 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v23);
    }
    else {
      std::string::size_type v24 = 0;
    }
    char v25 = &v24[24 * v20];
    uint64_t v32 = v24;
    uint64_t v33 = v25;
    uint64_t v35 = &v24[24 * v23];
    long long v26 = *(_OWORD *)__p;
    *((void *)v25 + 2) = v31;
    *(_OWORD *)char v25 = v26;
    __p[1] = 0;
    uint64_t v31 = 0;
    __p[0] = 0;
    unsigned int v34 = v25 + 24;
    sub_1DDA2A0E8(a2, &v32);
    unint64_t v19 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v32);
    int v27 = SHIBYTE(v31);
    a2[1] = v19;
    if (v27 < 0)
    {
      operator delete(__p[0]);
      unint64_t v19 = a2[1];
    }
  }
  else
  {
    long long v18 = *(_OWORD *)__p;
    *(void *)(v17 + 16) = v31;
    *(_OWORD *)unint64_t v17 = v18;
    unint64_t v19 = v17 + 24;
    a2[1] = v17 + 24;
  }
  std::string::size_type v28 = (long long *)(a1 + 1296);
  if (v19 >= a2[2])
  {
    uint64_t result = sub_1DDA49920(a2, v28);
  }
  else
  {
    sub_1DDA35310(a2, v28);
    uint64_t result = v19 + 24;
  }
  a2[1] = result;
  return result;
}

void sub_1DDA55F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t *sub_1DDA55FB8(std::string *a1, uint64_t a2, uint64_t a3)
{
  sub_1DDA27D28((uint64_t)a1, &__p);
  sub_1DDA49310(v8, (uint64_t *)&__p);
  if (__p.__r_.__value_.__l.__size_) {
    sub_1DDA18310((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
  }
  BOOL v5 = *(_WORD *)a3 == 256 && *(_WORD *)(a3 + 2) == 2;
  if (v5 && *(_DWORD *)(a3 + 4) <= 0x3Fu)
  {
    memset(&__p, 0, sizeof(__p));
    if (sub_1DDA45530((uint64_t)a1, a3, &__p, 1)) {
      std::string::operator=(a1 + 54, &__p);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return sub_1DDA1AA18(v8);
}

void sub_1DDA56068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1DDA1AA18(&a15);
  _Unwind_Resume(a1);
}

id sub_1DDA560A4(uint64_t a1)
{
  v49[5] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1DDA409F0();
  int v30 = objc_msgSend_mutableCopy(v2, v3, v4, v5, v6);

  v48[0] = &unk_1F39AD178;
  v46[1] = @"Namespace";
  v47[0] = @"EquipmentIFD";
  v46[0] = @"Name";
  v37[0] = MEMORY[0x1E4F143A8];
  v37[1] = 3221225472;
  v37[2] = sub_1DDA56534;
  v37[3] = &unk_1E6D04E50;
  v37[4] = a1;
  uint64_t v32 = (void *)MEMORY[0x1E01C46E0](v37);
  v47[1] = v32;
  char v29 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v7, (uint64_t)v47, (uint64_t)v46, 2);
  v49[0] = v29;
  v48[1] = &unk_1F39AD190;
  v44[1] = @"Namespace";
  v45[0] = @"CameraSettingsIFD";
  v44[0] = @"Name";
  v36[0] = MEMORY[0x1E4F143A8];
  v36[1] = 3221225472;
  v36[2] = sub_1DDA567AC;
  uint64_t v36[3] = &unk_1E6D04E50;
  v36[4] = a1;
  uint64_t v31 = (void *)MEMORY[0x1E01C46E0](v36);
  v45[1] = v31;
  unint64_t v9 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v8, (uint64_t)v45, (uint64_t)v44, 2);
  v49[1] = v9;
  v48[2] = &unk_1F39AD1A8;
  v42[1] = @"Namespace";
  v43[0] = @"RawDevelopmentIFD";
  v42[0] = @"Name";
  v35[0] = MEMORY[0x1E4F143A8];
  v35[1] = 3221225472;
  void v35[2] = sub_1DDA56E0C;
  v35[3] = &unk_1E6D04E50;
  v35[4] = a1;
  unint64_t v10 = (void *)MEMORY[0x1E01C46E0](v35);
  v43[1] = v10;
  int v12 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v11, (uint64_t)v43, (uint64_t)v42, 2);
  v49[2] = v12;
  v48[3] = &unk_1F39AD1C0;
  v40[1] = @"Namespace";
  v41[0] = @"ImageProcessingIFD";
  v40[0] = @"Name";
  v34[0] = MEMORY[0x1E4F143A8];
  v34[1] = 3221225472;
  void v34[2] = sub_1DDA56FA4;
  v34[3] = &unk_1E6D04E50;
  v34[4] = a1;
  long long v13 = (void *)MEMORY[0x1E01C46E0](v34);
  v41[1] = v13;
  int v15 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v14, (uint64_t)v41, (uint64_t)v40, 2);
  v49[3] = v15;
  v48[4] = &unk_1F39AD1D8;
  v38[1] = @"Namespace";
  v39[0] = @"FocusInfoIFD";
  v38[0] = @"Name";
  v33[0] = MEMORY[0x1E4F143A8];
  v33[1] = 3221225472;
  void v33[2] = sub_1DDA57514;
  v33[3] = &unk_1E6D04E50;
  v33[4] = a1;
  unint64_t v16 = (void *)MEMORY[0x1E01C46E0](v33);
  v39[1] = v16;
  long long v18 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v17, (uint64_t)v39, (uint64_t)v38, 2);
  v49[4] = v18;
  unint64_t v20 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v19, (uint64_t)v49, (uint64_t)v48, 5);
  objc_msgSend_addEntriesFromDictionary_(v30, v21, (uint64_t)v20, v22, v23);

  int v27 = objc_msgSend_dictionaryWithDictionary_(MEMORY[0x1E4F1C9E8], v24, (uint64_t)v30, v25, v26);

  return v27;
}

void sub_1DDA5649C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

id sub_1DDA56538(uint64_t a1, const char *a2)
{
  v5[25] = *MEMORY[0x1E4F143B8];
  v4[0] = &unk_1F39AD1F0;
  v4[1] = &unk_1F39AD208;
  v5[0] = &unk_1F39B1CB0;
  v5[1] = &unk_1F39B1CD8;
  v4[2] = &unk_1F39AD220;
  v4[3] = &unk_1F39AD238;
  v5[2] = &unk_1F39B1D00;
  void v5[3] = &unk_1F39B1D28;
  void v4[4] = &unk_1F39AD250;
  v4[5] = &unk_1F39AD268;
  v5[4] = &unk_1F39B1D50;
  void v5[5] = &unk_1F39B1D78;
  v4[6] = &unk_1F39AD280;
  v4[7] = &unk_1F39AD298;
  v5[6] = &unk_1F39B1DA0;
  v5[7] = &unk_1F39B1DC8;
  v4[8] = &unk_1F39AD2B0;
  v4[9] = &unk_1F39AD2C8;
  v5[8] = &unk_1F39B1DF0;
  v5[9] = &unk_1F39B1E18;
  v4[10] = &unk_1F39AD2E0;
  void v4[11] = &unk_1F39AD2F8;
  v5[10] = &unk_1F39B1E40;
  v5[11] = &unk_1F39B1E68;
  v4[12] = &unk_1F39AD310;
  v4[13] = &unk_1F39AD328;
  void v5[12] = &unk_1F39B1E90;
  v5[13] = &unk_1F39B1EB8;
  v4[14] = &unk_1F39AD340;
  v4[15] = &unk_1F39AD358;
  v5[14] = &unk_1F39B1EE0;
  v5[15] = &unk_1F39B1F08;
  v4[16] = &unk_1F39AD370;
  v4[17] = &unk_1F39AD388;
  uint8_t v5[16] = &unk_1F39B1F30;
  v5[17] = &unk_1F39B1F58;
  v4[18] = &unk_1F39AD3A0;
  v4[19] = &unk_1F39AD3B8;
  v5[18] = &unk_1F39B1F80;
  v5[19] = &unk_1F39B1FA8;
  v4[20] = &unk_1F39AD3D0;
  v4[21] = &unk_1F39AD3E8;
  v5[20] = &unk_1F39B1FD0;
  v5[21] = &unk_1F39B1FF8;
  v4[22] = &unk_1F39AD400;
  v4[23] = &unk_1F39AD418;
  v5[22] = &unk_1F39B2020;
  v5[23] = &unk_1F39B2048;
  v4[24] = &unk_1F39AD430;
  v5[24] = &unk_1F39B2070;
  uint64_t v2 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], a2, (uint64_t)v5, (uint64_t)v4, 25);

  return v2;
}

id sub_1DDA567B0(uint64_t a1, const char *a2)
{
  v5[68] = *MEMORY[0x1E4F143B8];
  v4[0] = &unk_1F39AD1F0;
  v4[1] = &unk_1F39AD208;
  v5[0] = &unk_1F39B2CF0;
  v5[1] = &unk_1F39B2D18;
  v4[2] = &unk_1F39AD220;
  v4[3] = &unk_1F39AD238;
  v5[2] = &unk_1F39B2D40;
  void v5[3] = &unk_1F39B2D68;
  void v4[4] = &unk_1F39AD6B8;
  v4[5] = &unk_1F39AD280;
  v5[4] = &unk_1F39B2D90;
  void v5[5] = &unk_1F39B2DB8;
  v4[6] = &unk_1F39AD298;
  v4[7] = &unk_1F39AD2B0;
  v5[6] = &unk_1F39B2DE0;
  v5[7] = &unk_1F39B2E08;
  v4[8] = &unk_1F39AD2C8;
  v4[9] = &unk_1F39AD6D0;
  v5[8] = &unk_1F39B2E30;
  v5[9] = &unk_1F39B2E58;
  v4[10] = &unk_1F39AD370;
  void v4[11] = &unk_1F39AD388;
  v5[10] = &unk_1F39B2E80;
  v5[11] = &unk_1F39B2EA8;
  v4[12] = &unk_1F39AD3A0;
  v4[13] = &unk_1F39AD3B8;
  void v5[12] = &unk_1F39B2ED0;
  v5[13] = &unk_1F39B2EF8;
  v4[14] = &unk_1F39AD988;
  v4[15] = &unk_1F39ADA78;
  v5[14] = &unk_1F39B2F20;
  v5[15] = &unk_1F39B2F48;
  v4[16] = &unk_1F39ADA90;
  v4[17] = &unk_1F39AD9A0;
  uint8_t v5[16] = &unk_1F39B2F70;
  v5[17] = &unk_1F39B2F98;
  v4[18] = &unk_1F39ADAA8;
  v4[19] = &unk_1F39ADAC0;
  v5[18] = &unk_1F39B2FC0;
  v5[19] = &unk_1F39B2FE8;
  v4[20] = &unk_1F39AD3D0;
  v4[21] = &unk_1F39ADAD8;
  v5[20] = &unk_1F39B3010;
  v5[21] = &unk_1F39B3038;
  v4[22] = &unk_1F39ADAF0;
  v4[23] = &unk_1F39ADB08;
  v5[22] = &unk_1F39B3060;
  v5[23] = &unk_1F39B3088;
  v4[24] = &unk_1F39ADB20;
  void v4[25] = &unk_1F39ADB38;
  v5[24] = &unk_1F39B30B0;
  v5[25] = &unk_1F39B30D8;
  v4[26] = &unk_1F39ADB50;
  v4[27] = &unk_1F39ADB68;
  void v5[26] = &unk_1F39B3100;
  v5[27] = &unk_1F39B3128;
  v4[28] = &unk_1F39ADB80;
  v4[29] = &unk_1F39ADB98;
  v5[28] = &unk_1F39B3150;
  v5[29] = &unk_1F39B3178;
  v4[30] = &unk_1F39ADBB0;
  v4[31] = &unk_1F39ADBC8;
  v5[30] = &unk_1F39B31A0;
  v5[31] = &unk_1F39B31C8;
  v4[32] = &unk_1F39ADBE0;
  v4[33] = &unk_1F39ADBF8;
  v5[32] = &unk_1F39B31F0;
  v5[33] = &unk_1F39B3218;
  v4[34] = &unk_1F39ADC10;
  v4[35] = &unk_1F39ADC28;
  v5[34] = &unk_1F39B3240;
  v5[35] = &unk_1F39B3268;
  v4[36] = &unk_1F39ADC40;
  v4[37] = &unk_1F39ADC58;
  v5[36] = &unk_1F39B3290;
  v5[37] = &unk_1F39B32B8;
  void v4[38] = &unk_1F39ADC70;
  v4[39] = &unk_1F39ADC88;
  v5[38] = &unk_1F39B32E0;
  void v5[39] = &unk_1F39B3308;
  v4[40] = &unk_1F39ADCA0;
  v4[41] = &unk_1F39ADCB8;
  v5[40] = &unk_1F39B3330;
  v5[41] = &unk_1F39B3358;
  v4[42] = &unk_1F39ADCD0;
  v4[43] = &unk_1F39ADCE8;
  v5[42] = &unk_1F39B3380;
  v5[43] = &unk_1F39B33A8;
  v4[44] = &unk_1F39ADD00;
  v4[45] = &unk_1F39ADD18;
  v5[44] = &unk_1F39B33D0;
  v5[45] = &unk_1F39B33F8;
  v4[46] = &unk_1F39ADD30;
  v4[47] = &unk_1F39ADD48;
  v5[46] = &unk_1F39B3420;
  v5[47] = &unk_1F39B3448;
  v4[48] = &unk_1F39ADD60;
  v4[49] = &unk_1F39ADD78;
  v5[48] = &unk_1F39B3470;
  v5[49] = &unk_1F39B3498;
  v4[50] = &unk_1F39ADD90;
  v4[51] = &unk_1F39ADDA8;
  v5[50] = &unk_1F39B34C0;
  v5[51] = &unk_1F39B34E8;
  v4[52] = &unk_1F39ADDC0;
  v4[53] = &unk_1F39ADDD8;
  v5[52] = &unk_1F39B3510;
  v5[53] = &unk_1F39B3538;
  v4[54] = &unk_1F39ADDF0;
  v4[55] = &unk_1F39ADE08;
  v5[54] = &unk_1F39B3560;
  v5[55] = &unk_1F39B3588;
  v4[56] = &unk_1F39ADE20;
  v4[57] = &unk_1F39AD718;
  v5[56] = &unk_1F39B35B0;
  v5[57] = &unk_1F39B35D8;
  v4[58] = &unk_1F39ADE38;
  v4[59] = &unk_1F39ADE50;
  v5[58] = &unk_1F39B3600;
  v5[59] = &unk_1F39B3628;
  v4[60] = &unk_1F39ADE68;
  v4[61] = &unk_1F39ADE80;
  v5[60] = &unk_1F39B3650;
  v5[61] = &unk_1F39B3678;
  v4[62] = &unk_1F39ADE98;
  v4[63] = &unk_1F39ADEB0;
  v5[62] = &unk_1F39B36A0;
  v5[63] = &unk_1F39B36C8;
  v4[64] = &unk_1F39ADEC8;
  v5[64] = &unk_1F39B36F0;
  v4[65] = &unk_1F39ADEE0;
  v5[65] = &unk_1F39B3718;
  v4[66] = &unk_1F39ADEF8;
  v5[66] = &unk_1F39B3740;
  v4[67] = &unk_1F39ADF10;
  v5[67] = &unk_1F39B3768;
  uint64_t v2 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], a2, (uint64_t)v5, (uint64_t)v4, 68);

  return v2;
}

id sub_1DDA56E10(uint64_t a1, const char *a2)
{
  v5[14] = *MEMORY[0x1E4F143B8];
  v4[0] = &unk_1F39AD1F0;
  v4[1] = &unk_1F39AD208;
  v5[0] = &unk_1F39B3790;
  v5[1] = &unk_1F39B37B8;
  v4[2] = &unk_1F39AD220;
  v4[3] = &unk_1F39AD238;
  v5[2] = &unk_1F39B37E0;
  void v5[3] = &unk_1F39B3808;
  void v4[4] = &unk_1F39AD250;
  v4[5] = &unk_1F39AD268;
  v5[4] = &unk_1F39B3830;
  void v5[5] = &unk_1F39B3858;
  v4[6] = &unk_1F39AD448;
  v4[7] = &unk_1F39AD460;
  v5[6] = &unk_1F39B3880;
  v5[7] = &unk_1F39B38A8;
  v4[8] = &unk_1F39AD478;
  v4[9] = &unk_1F39AD490;
  v5[8] = &unk_1F39B38D0;
  v5[9] = &unk_1F39B38F8;
  v4[10] = &unk_1F39AD4A8;
  void v4[11] = &unk_1F39AD4C0;
  v5[10] = &unk_1F39B3920;
  v5[11] = &unk_1F39B3948;
  v4[12] = &unk_1F39AD4D8;
  v4[13] = &unk_1F39AD4F0;
  void v5[12] = &unk_1F39B3970;
  v5[13] = &unk_1F39B3998;
  uint64_t v2 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], a2, (uint64_t)v5, (uint64_t)v4, 14);

  return v2;
}

id sub_1DDA56FA8(uint64_t a1, const char *a2)
{
  v5[58] = *MEMORY[0x1E4F143B8];
  v4[0] = &unk_1F39AD1F0;
  v4[1] = &unk_1F39AD208;
  v5[0] = &unk_1F39B2098;
  v5[1] = &unk_1F39B20C0;
  v4[2] = &unk_1F39AD238;
  v4[3] = &unk_1F39AD250;
  v5[2] = &unk_1F39B20E8;
  void v5[3] = &unk_1F39B2110;
  void v4[4] = &unk_1F39AD268;
  v4[5] = &unk_1F39AD448;
  v5[4] = &unk_1F39B2138;
  void v5[5] = &unk_1F39B2160;
  v4[6] = &unk_1F39AD460;
  v4[7] = &unk_1F39AD478;
  v5[6] = &unk_1F39B2188;
  v5[7] = &unk_1F39B21B0;
  v4[8] = &unk_1F39AD490;
  v4[9] = &unk_1F39AD4A8;
  v5[8] = &unk_1F39B21D8;
  v5[9] = &unk_1F39B2200;
  v4[10] = &unk_1F39AD4C0;
  void v4[11] = &unk_1F39AD4D8;
  v5[10] = &unk_1F39B2228;
  v5[11] = &unk_1F39B2250;
  v4[12] = &unk_1F39AD4F0;
  v4[13] = &unk_1F39AD508;
  void v5[12] = &unk_1F39B2278;
  v5[13] = &unk_1F39B22A0;
  void v4[14] = &unk_1F39AD520;
  v4[15] = &unk_1F39AD538;
  v5[14] = &unk_1F39B22C8;
  void v5[15] = &unk_1F39B22F0;
  v4[16] = &unk_1F39AD550;
  v4[17] = &unk_1F39AD568;
  uint8_t v5[16] = &unk_1F39B2318;
  v5[17] = &unk_1F39B2340;
  v4[18] = &unk_1F39AD580;
  v4[19] = &unk_1F39AD598;
  v5[18] = &unk_1F39B2368;
  v5[19] = &unk_1F39B2390;
  v4[20] = &unk_1F39AD5B0;
  v4[21] = &unk_1F39AD5C8;
  v5[20] = &unk_1F39B23B8;
  v5[21] = &unk_1F39B23E0;
  v4[22] = &unk_1F39AD5E0;
  v4[23] = &unk_1F39AD5F8;
  v5[22] = &unk_1F39B2408;
  v5[23] = &unk_1F39B2430;
  v4[24] = &unk_1F39AD610;
  void v4[25] = &unk_1F39AD628;
  v5[24] = &unk_1F39B2458;
  v5[25] = &unk_1F39B2480;
  v4[26] = &unk_1F39AD640;
  v4[27] = &unk_1F39AD658;
  void v5[26] = &unk_1F39B24A8;
  v5[27] = &unk_1F39B24D0;
  v4[28] = &unk_1F39AD670;
  v4[29] = &unk_1F39AD688;
  v5[28] = &unk_1F39B24F8;
  v5[29] = &unk_1F39B2520;
  v4[30] = &unk_1F39AD6A0;
  v4[31] = &unk_1F39AD6B8;
  v5[30] = &unk_1F39B2548;
  v5[31] = &unk_1F39B2570;
  v4[32] = &unk_1F39AD6D0;
  v4[33] = &unk_1F39AD370;
  v5[32] = &unk_1F39B2598;
  v5[33] = &unk_1F39B25C0;
  v4[34] = &unk_1F39AD6E8;
  v4[35] = &unk_1F39AD700;
  v5[34] = &unk_1F39B25E8;
  v5[35] = &unk_1F39B2610;
  v4[36] = &unk_1F39AD718;
  v4[37] = &unk_1F39AD730;
  v5[36] = &unk_1F39B2638;
  v5[37] = &unk_1F39B2660;
  void v4[38] = &unk_1F39AD748;
  v4[39] = &unk_1F39AD760;
  v5[38] = &unk_1F39B2688;
  void v5[39] = &unk_1F39B26B0;
  v4[40] = &unk_1F39AD778;
  v4[41] = &unk_1F39AD790;
  v5[40] = &unk_1F39B26D8;
  v5[41] = &unk_1F39B2700;
  v4[42] = &unk_1F39AD7A8;
  v4[43] = &unk_1F39AD7C0;
  v5[42] = &unk_1F39B2728;
  v5[43] = &unk_1F39B2750;
  v4[44] = &unk_1F39AD7D8;
  v4[45] = &unk_1F39AD7F0;
  v5[44] = &unk_1F39B2778;
  v5[45] = &unk_1F39B27A0;
  v4[46] = &unk_1F39AD808;
  v4[47] = &unk_1F39AD820;
  v5[46] = &unk_1F39B27C8;
  v5[47] = &unk_1F39B27F0;
  v4[48] = &unk_1F39AD838;
  v4[49] = &unk_1F39AD850;
  v5[48] = &unk_1F39B2818;
  v5[49] = &unk_1F39B2840;
  v4[50] = &unk_1F39AD868;
  v4[51] = &unk_1F39AD880;
  v5[50] = &unk_1F39B2868;
  v5[51] = &unk_1F39B2890;
  v4[52] = &unk_1F39AD898;
  v4[53] = &unk_1F39AD8B0;
  v5[52] = &unk_1F39B28B8;
  v5[53] = &unk_1F39B28E0;
  v4[54] = &unk_1F39AD8C8;
  v4[55] = &unk_1F39AD8E0;
  v5[54] = &unk_1F39B2908;
  v5[55] = &unk_1F39B2930;
  v4[56] = &unk_1F39AD8F8;
  v4[57] = &unk_1F39AD910;
  v5[56] = &unk_1F39B2958;
  v5[57] = &unk_1F39B2980;
  uint64_t v2 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], a2, (uint64_t)v5, (uint64_t)v4, 58);

  return v2;
}

id sub_1DDA57518(uint64_t a1, const char *a2)
{
  v5[21] = *MEMORY[0x1E4F143B8];
  v4[0] = &unk_1F39AD1F0;
  v4[1] = &unk_1F39AD928;
  v5[0] = &unk_1F39B29A8;
  v5[1] = &unk_1F39B29D0;
  v4[2] = &unk_1F39AD940;
  v4[3] = &unk_1F39AD958;
  v5[2] = &unk_1F39B29F8;
  void v5[3] = &unk_1F39B2A20;
  void v4[4] = &unk_1F39AD970;
  v4[5] = &unk_1F39AD6D0;
  v5[4] = &unk_1F39B2A48;
  void v5[5] = &unk_1F39B2A70;
  v4[6] = &unk_1F39AD370;
  v4[7] = &unk_1F39AD3A0;
  v5[6] = &unk_1F39B2A98;
  v5[7] = &unk_1F39B2AC0;
  v4[8] = &unk_1F39AD3B8;
  v4[9] = &unk_1F39AD988;
  v5[8] = &unk_1F39B2AE8;
  v5[9] = &unk_1F39B2B10;
  v4[10] = &unk_1F39AD9A0;
  void v4[11] = &unk_1F39AD9B8;
  v5[10] = &unk_1F39B2B38;
  v5[11] = &unk_1F39B2B60;
  v4[12] = &unk_1F39AD868;
  v4[13] = &unk_1F39AD898;
  void v5[12] = &unk_1F39B2B88;
  v5[13] = &unk_1F39B2BB0;
  void v4[14] = &unk_1F39AD9D0;
  v4[15] = &unk_1F39AD9E8;
  v5[14] = &unk_1F39B2BD8;
  void v5[15] = &unk_1F39B2C00;
  v4[16] = &unk_1F39ADA00;
  v4[17] = &unk_1F39ADA18;
  uint8_t v5[16] = &unk_1F39B2C28;
  v5[17] = &unk_1F39B2C50;
  v4[18] = &unk_1F39ADA30;
  v4[19] = &unk_1F39ADA48;
  v5[18] = &unk_1F39B2C78;
  v5[19] = &unk_1F39B2CA0;
  v4[20] = &unk_1F39ADA60;
  v5[20] = &unk_1F39B2CC8;
  uint64_t v2 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], a2, (uint64_t)v5, (uint64_t)v4, 21);

  return v2;
}

void sub_1DDA57740(uint64_t a1)
{
  sub_1DDA57778(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA57778(uint64_t a1)
{
  *(void *)a1 = &unk_1F395D8F0;
  sub_1DDA2A4CC(a1 + 1320, *(char **)(a1 + 1328));
  if (*(char *)(a1 + 1319) < 0) {
    operator delete(*(void **)(a1 + 1296));
  }
  if (*(char *)(a1 + 1271) < 0) {
    operator delete(*(void **)(a1 + 1248));
  }
  uint64_t v2 = *(void **)(a1 + 1184);
  if (v2)
  {
    *(void *)(a1 + 1192) = v2;
    operator delete(v2);
  }

  return sub_1DDA49A44(a1);
}

void sub_1DDA57804(void *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x568uLL);
  sub_1DDA57898(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA57884(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA57898(void *a1, void *a2, char *a3, void **a4, void **a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395DC50;
  sub_1DDA58014((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1DDA578EC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA57900(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395DC50;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA57920(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395DC50;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA57974(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

void sub_1DDA5799C(void *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x568uLL);
  sub_1DDA57A30(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA57A1C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA57A30(void *a1, void *a2, char *a3, void **a4, void **a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395DCA0;
  sub_1DDA58E4C((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1DDA57A84(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA57A98(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395DCA0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA57AB8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395DCA0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA57B0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

int *sub_1DDA57B34(int *result, void *a2)
{
  uint64_t v2 = *result;
  BOOL v3 = __OFSUB__(v2, *a2);
  uint64_t v4 = v2 - *a2;
  *uint64_t result = v4;
  if (v3 || (unint64_t)(v4 - 0x80000000) <= 0xFFFFFFFEFFFFFFFFLL)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA57BB0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

id sub_1DDA57BC4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v43[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *MEMORY[0x1E4F30058];
  uint64_t v34 = *MEMORY[0x1E4F30038];
  uint64_t v35 = v5;
  v42[0] = MEMORY[0x1E4F1CC28];
  v42[1] = @"com.olympus.or-raw-image";
  uint64_t v6 = *MEMORY[0x1E4F30050];
  uint64_t v36 = *MEMORY[0x1E4F30018];
  void v42[2] = @".orf.";
  uint64_t v42[3] = &unk_1F39ADF28;
  v42[4] = &unk_1F39ADF40;
  unint64_t v7 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA57EBC, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E4F30040], *MEMORY[0x1E4F30048]);
  v42[5] = v7;
  uint64_t v37 = *MEMORY[0x1E4F30000];
  long long v11 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v8, (uint64_t)sub_1DDA57EC8, v9, v10);
  v42[6] = v11;
  uint64_t v38 = *MEMORY[0x1E4F30020];
  int v15 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v12, (uint64_t)sub_1DDA57ED4, v13, v14);
  v42[7] = v15;
  uint64_t v39 = *MEMORY[0x1E4F30008];
  unint64_t v19 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v16, (uint64_t)sub_1DDA818EC, v17, v18);
  v42[8] = v19;
  uint64_t v40 = *MEMORY[0x1E4F30028];
  uint64_t v23 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v20, (uint64_t)sub_1DDA57EE0, v21, v22);
  v42[9] = v23;
  uint64_t v41 = *MEMORY[0x1E4F30030];
  int v27 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v24, (uint64_t)sub_1DDA57EEC, v25, v26);
  v42[10] = v27;
  char v29 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v43[0] = v29;
  uint64_t v32 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v30, (uint64_t)v43, 1, v31);

  return v32;
}

void sub_1DDA57E5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA57EBC(unsigned __int8 *a1, unint64_t a2)
{
  return sub_1DDA57F94(a1, a2, (unsigned __int16 *)"RO24COlympusORFORImageParser");
}

void sub_1DDA57EC8(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA57ED4(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA57EE0(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, &unk_1F395DCE0);
}

uint64_t sub_1DDA57EEC(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, &unk_1F395DCE0);
}

void sub_1DDA57EF8(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v11 = a2;
  id v10 = a3;
  id v9 = a4;
  sub_1DDA57804(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;
}

void sub_1DDA57F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA57F94(unsigned __int8 *a1, unint64_t a2, unsigned __int16 *a3)
{
  if (a2 >= 4)
  {
    int v3 = *a1;
    if (v3 == 77)
    {
      if (a1[1] == 77)
      {
        unsigned int v6 = *a3;
        if (a1[2] == v6 >> 8) {
          return a1[3] == v6;
        }
      }
    }
    else if (v3 == 73 && a1[1] == 73)
    {
      unsigned int v4 = *a3;
      if (a1[2] == v4 && a1[3] == v4 >> 8) {
        return 1;
      }
    }
  }
  return 0;
}

void sub_1DDA58014(uint64_t a1, void *a2, char a3, void *a4, void *a5)
{
  sub_1DDA53D44(a1, a2, a3, a4, a5);
  *uint64_t v5 = &unk_1F395DD10;
}

uint64_t sub_1DDA58048()
{
  return 20306;
}

void sub_1DDA58050(_DWORD *a1@<X0>, void *a2@<X1>, _OWORD *a3@<X2>, void *a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  int v8 = a1[336];
  if (v8 <= 2)
  {
    if (v8 == 1)
    {
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v13, a1);
      uint64_t v12 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
      sub_1DDA58378(&v13, (unint64_t *)&v12, a2, a3, &v15);
    }
    else
    {
      if (v8 != 2) {
        return;
      }
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v13, a1);
      uint64_t v12 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
      sub_1DDA58530(&v13, (unint64_t *)&v12, a2, a3, &v15);
    }
LABEL_14:
    long long v11 = v15;
    long long v15 = 0uLL;
    *(_OWORD *)a4 = v11;
    id v10 = v14;
    if (!v14) {
      return;
    }
    goto LABEL_15;
  }
  if (v8 == 3)
  {
    (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v13, a1);
    uint64_t v12 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
    sub_1DDA586DC(&v13, (unint64_t *)&v12, a2, a3, &v15);
    goto LABEL_14;
  }
  if (v8 == 16)
  {
    (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v13, a1);
    uint64_t v12 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
    sub_1DDA58888(&v13, (unint64_t *)&v12, a2, a3, &v15);
    if (v14) {
      sub_1DDA18310(v14);
    }
    sub_1DDAB4290(v15, 1);
    long long v9 = v15;
    if (!*((void *)&v15 + 1))
    {
      *(_OWORD *)a4 = (unint64_t)v15;
      return;
    }
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v15 + 1) + 8), 1uLL, memory_order_relaxed);
    id v10 = (std::__shared_weak_count *)*((void *)&v15 + 1);
    *(_OWORD *)a4 = v9;
    if (v10) {
LABEL_15:
    }
      sub_1DDA18310(v10);
  }
}

void sub_1DDA58330(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
}

void sub_1DDA58378(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, void *a5@<X8>)
{
  id v10 = operator new(0xE0uLL);
  sub_1DDA5840C((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA583F8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA5840C(uint64_t a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395E070;
  sub_1DDAA58A8(a1 + 24, a2, *a3, a4, a5);
  *(void *)(a1 + 24) = &unk_1F3963238;
  *(_DWORD *)(a1 + 212) = 16;
  *(void *)(a1 + 216) = 0;
  return a1;
}

void sub_1DDA58480(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA58494(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E070;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA584B4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E070;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA58508(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1DDA58530(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, void *a5@<X8>)
{
  id v10 = operator new(0xD8uLL);
  sub_1DDA585C4(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA585B0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA585C4(void *a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395E0C0;
  sub_1DDAA58A8((uint64_t)(a1 + 3), a2, *a3, a4, a5);
  a1[3] = &unk_1F3962D88;
  return a1;
}

void sub_1DDA5862C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA58640(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E0C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA58660(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E0C0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA586B4(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1DDA586DC(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, void *a5@<X8>)
{
  id v10 = operator new(0xD8uLL);
  sub_1DDA58770(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA5875C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA58770(void *a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395E110;
  sub_1DDAA58A8((uint64_t)(a1 + 3), a2, *a3, a4, a5);
  a1[3] = &unk_1F3977BA8;
  return a1;
}

void sub_1DDA587D8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA587EC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E110;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA5880C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E110;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA58860(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1DDA58888(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, void *a5@<X8>)
{
  id v10 = operator new(0xE0uLL);
  sub_1DDA5891C((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA58908(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA5891C(uint64_t a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395E160;
  sub_1DDAA58A8(a1 + 24, a2, *a3, a4, a5);
  *(void *)(a1 + 24) = &unk_1F3963058;
  *(void *)(a1 + 212) = 0x100000000;
  *(_WORD *)(a1 + 220) = 0;
  return a1;
}

void sub_1DDA58994(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA589A8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E160;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA589C8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E160;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA58A1C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

id sub_1DDA58A44(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v43[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *MEMORY[0x1E4F30058];
  uint64_t v34 = *MEMORY[0x1E4F30038];
  uint64_t v35 = v5;
  v42[0] = MEMORY[0x1E4F1CC28];
  v42[1] = @"com.olympus.sr-raw-image";
  uint64_t v6 = *MEMORY[0x1E4F30050];
  uint64_t v36 = *MEMORY[0x1E4F30018];
  void v42[2] = @".orf.";
  uint64_t v42[3] = &unk_1F39ADF58;
  v42[4] = &unk_1F39ADF70;
  unint64_t v7 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA58D3C, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E4F30040], *MEMORY[0x1E4F30048]);
  v42[5] = v7;
  uint64_t v37 = *MEMORY[0x1E4F30000];
  long long v11 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v8, (uint64_t)sub_1DDA58D80, v9, v10);
  v42[6] = v11;
  uint64_t v38 = *MEMORY[0x1E4F30020];
  long long v15 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v12, (uint64_t)sub_1DDA58D8C, v13, v14);
  v42[7] = v15;
  uint64_t v39 = *MEMORY[0x1E4F30008];
  unint64_t v19 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v16, (uint64_t)sub_1DDA818EC, v17, v18);
  v42[8] = v19;
  uint64_t v40 = *MEMORY[0x1E4F30028];
  uint64_t v23 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v20, (uint64_t)sub_1DDA58D98, v21, v22);
  v42[9] = v23;
  uint64_t v41 = *MEMORY[0x1E4F30030];
  int v27 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v24, (uint64_t)sub_1DDA58DA4, v25, v26);
  v42[10] = v27;
  char v29 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v43[0] = v29;
  uint64_t v32 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v30, (uint64_t)v43, 1, v31);

  return v32;
}

void sub_1DDA58CDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA58D3C(unsigned char *a1, unint64_t a2)
{
  return a2 >= 4 && *a1 == 73 && a1[1] == 73 && a1[2] == 82 && a1[3] == 83;
}

void sub_1DDA58D80(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA58D8C(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA58D98(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, &unk_1F395E1A0);
}

uint64_t sub_1DDA58DA4(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, &unk_1F395E1A0);
}

void sub_1DDA58DB0(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v11 = a2;
  id v10 = a3;
  id v9 = a4;
  sub_1DDA5799C(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;
}

void sub_1DDA58E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1DDA58E4C(uint64_t a1, void *a2, char a3, void *a4, void *a5)
{
  sub_1DDA53D44(a1, a2, a3, a4, a5);
  *uint64_t v5 = &unk_1F395E1D0;
}

uint64_t sub_1DDA58E80()
{
  return 21330;
}

char *sub_1DDA58E8C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (char *)operator new(0x60uLL);
  *((void *)v2 + 1) = 0;
  *((void *)v2 + 2) = 0;
  *(void *)uint64_t v2 = &unk_1F395E530;
  *(_OWORD *)(v2 + 40) = xmmword_1DDBF9790;
  *(_OWORD *)(v2 + 56) = xmmword_1DDBF97A0;
  *(_OWORD *)(v2 + 72) = xmmword_1DDBF97B0;
  __asm { FMOV            V0.2D, #1.0 }
  *((void *)v2 + 11) = 0x3FF0000000000000;
  a1[1] = v2;
  *(_OWORD *)(v2 + 24) = _Q0;
  uint64_t result = v2 + 24;
  *a1 = result;
  return result;
}

void *sub_1DDA58F10@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1DDA59190(a1, a2);
}

double sub_1DDA58F38(uint64_t a1, uint64_t *a2)
{
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)a1 = _Q0;
  *(_OWORD *)(a1 + 16) = xmmword_1DDBF9790;
  *(_OWORD *)(a1 + 32) = xmmword_1DDBF97A0;
  *(_OWORD *)(a1 + 48) = xmmword_1DDBF97B0;
  *(void *)(a1 + 64) = 0x3FF0000000000000;
  uint64_t v7 = *a2;
  if (a2[1] - *a2 != 64)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  *(void *)a1 = *(void *)v7;
  *(void *)(a1 + 16) = *(void *)(v7 + 8);
  *(void *)(a1 + 8) = *(void *)(v7 + 16);
  *(void *)(a1 + 32) = *(void *)(v7 + 24);
  *(void *)(a1 + 24) = *(void *)(v7 + 32);
  *(void *)(a1 + 48) = *(void *)(v7 + 40);
  *(void *)(a1 + 40) = *(void *)(v7 + 48);
  double result = *(double *)(v7 + 56);
  *(double *)(a1 + 56) = result;
  return result;
}

void sub_1DDA59008(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA5901C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  uint64_t v10 = a1[7];
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  double result = operator new(0x40uLL);
  a2[1] = result + 8;
  a2[2] = result + 8;
  *double result = v3;
  result[1] = v5;
  result[2] = v4;
  result[3] = v7;
  result[4] = v6;
  result[5] = v9;
  result[6] = v8;
  result[7] = v10;
  *a2 = result;
  return result;
}

double sub_1DDA59098(uint64_t a1)
{
  double v1 = *(double *)(a1 + 48) + *(double *)(a1 + 40) * 0.2;
  *(void *)(a1 + 64) = 0x3FF4000000000000;
  double result = (1.25 - v1) / 0.3;
  *(double *)(a1 + 56) = result;
  return result;
}

float sub_1DDA590CC@<S0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 + 32) = 0;
  float v2 = *(double *)a1;
  *(float *)a2 = v2;
  *(int32x4_t *)(a2 + 4) = vrev64q_s32((int32x4_t)vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(*(float64x2_t *)(a1 + 8)), *(float64x2_t *)(a1 + 24)));
  *(int32x2_t *)(a2 + 20) = vrev64_s32((int32x2_t)vcvt_f32_f64(*(float64x2_t *)(a1 + 40)));
  float result = *(double *)(a1 + 56);
  *(float *)(a2 + 28) = result;
  return result;
}

void sub_1DDA59114(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E530;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA59134(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E530;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

void *sub_1DDA59190@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x60uLL);
  float result = sub_1DDA591EC(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1DDA591D8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA591EC(void *a1, uint64_t *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395E530;
  sub_1DDA58F38((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_1DDA59234(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

id sub_1DDA59248(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v68[4] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA597E8, a4, a5);
  uint64_t v9 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v6, (uint64_t)sub_1DDA597F4, v7, v8);
  uint64_t v13 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v10, (uint64_t)sub_1DDA59800, v11, v12);
  unint64_t v43 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v14, (uint64_t)sub_1DDA818EC, v15, v16);
  unint64_t v42 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v17, (uint64_t)sub_1DDA5980C, v18, v19);
  unint64_t v50 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v20, (uint64_t)sub_1DDA59818, v21, v22);
  uint64_t v47 = *MEMORY[0x1E4F30058];
  v57[0] = *MEMORY[0x1E4F30038];
  uint64_t v48 = v57[0];
  v57[1] = v47;
  v67[0] = MEMORY[0x1E4F1CC28];
  v67[1] = @"com.panasonic.raw-image";
  uint64_t v45 = *MEMORY[0x1E4F30050];
  uint64_t v58 = *MEMORY[0x1E4F30018];
  uint64_t v46 = v58;
  uint64_t v59 = v45;
  _DWORD v67[2] = @".raw.";
  v67[3] = &unk_1F39ADF88;
  uint64_t v23 = *MEMORY[0x1E4F30048];
  uint64_t v60 = *MEMORY[0x1E4F30040];
  uint64_t v44 = v60;
  uint64_t v61 = v23;
  v67[4] = &unk_1F39ADFA0;
  v67[5] = v5;
  unint64_t v49 = (void *)v5;
  uint64_t v25 = *MEMORY[0x1E4F30020];
  uint64_t v62 = *MEMORY[0x1E4F30000];
  uint64_t v24 = v62;
  uint64_t v63 = v25;
  v67[6] = v9;
  v67[7] = v13;
  uint64_t v26 = (void *)v9;
  uint64_t v28 = *MEMORY[0x1E4F30028];
  uint64_t v64 = *MEMORY[0x1E4F30008];
  uint64_t v27 = v64;
  uint64_t v65 = v28;
  v67[8] = v43;
  v67[9] = v42;
  uint64_t v66 = *MEMORY[0x1E4F30030];
  uint64_t v29 = v66;
  v67[10] = v50;
  uint64_t v41 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v30, (uint64_t)v67, (uint64_t)v57, 11);
  v68[0] = v41;
  v55[0] = v48;
  v55[1] = v47;
  v56[0] = MEMORY[0x1E4F1CC28];
  v56[1] = @"com.panasonic.rw2-raw-image";
  v55[2] = v46;
  v55[3] = v45;
  v56[2] = @".rw2.";
  uint64_t v56[3] = &unk_1F39ADF88;
  v55[4] = v44;
  v55[5] = v23;
  v56[4] = &unk_1F39ADFA0;
  v56[5] = v49;
  v55[6] = v24;
  v55[7] = v25;
  v56[6] = v26;
  v56[7] = v13;
  v55[8] = v27;
  v55[9] = v28;
  v56[8] = v43;
  v56[9] = v42;
  v55[10] = v29;
  v56[10] = v50;
  uint64_t v40 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v31, (uint64_t)v56, (uint64_t)v55, 11);
  v68[1] = v40;
  v53[0] = v48;
  v53[1] = v47;
  v54[0] = MEMORY[0x1E4F1CC28];
  v54[1] = @"com.leica.raw-image";
  v53[2] = v46;
  v53[3] = v45;
  v54[2] = @".raw.";
  v54[3] = &unk_1F39ADF88;
  v53[4] = v44;
  v53[5] = v23;
  v54[4] = &unk_1F39ADFA0;
  v54[5] = v49;
  v53[6] = v24;
  v53[7] = v25;
  v54[6] = v26;
  v54[7] = v13;
  v53[8] = v27;
  v53[9] = v28;
  v54[8] = v43;
  v54[9] = v42;
  v53[10] = v29;
  v54[10] = v50;
  uint64_t v39 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v32, (uint64_t)v54, (uint64_t)v53, 11);
  v68[2] = v39;
  v51[0] = v48;
  v51[1] = v47;
  v52[0] = MEMORY[0x1E4F1CC28];
  v52[1] = @"com.leica.rwl-raw-image";
  v51[2] = v46;
  v51[3] = v45;
  v52[2] = @".rwl.";
  v52[3] = &unk_1F39ADF88;
  v51[4] = v44;
  v51[5] = v23;
  v52[4] = &unk_1F39ADFA0;
  v52[5] = v49;
  v51[6] = v24;
  v51[7] = v25;
  v52[6] = v26;
  v52[7] = v13;
  v51[8] = v27;
  v51[9] = v28;
  v52[8] = v43;
  v52[9] = v42;
  v51[10] = v29;
  v52[10] = v50;
  uint64_t v34 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v33, (uint64_t)v52, (uint64_t)v51, 11);
  v68[3] = v34;
  uint64_t v37 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v35, (uint64_t)v68, 4, v36);

  return v37;
}

void sub_1DDA59700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA597E8(unsigned __int8 *a1, unint64_t a2)
{
  return sub_1DDA57F94(a1, a2, (unsigned __int16 *)"U");
}

void sub_1DDA597F4(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA59800(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA5980C(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, &unk_1F395E570);
}

uint64_t sub_1DDA59818(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, &unk_1F395E570);
}

void sub_1DDA59824(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v11 = a2;
  id v10 = a3;
  id v9 = a4;
  sub_1DDA5DC00(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;
}

void sub_1DDA598A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

double sub_1DDA598C0(uint64_t a1, void *a2, char a3, void *a4, void *a5)
{
  sub_1DDA3F2B0(a1, a2, a3, a4, a5);
  *(void *)uint64_t v5 = &unk_1F395E5A0;
  *(unsigned char *)(v5 + 1208) = 0;
  *(unsigned char *)(v5 + 1212) = 0;
  *(unsigned char *)(v5 + 1216) = 0;
  *(unsigned char *)(v5 + 1220) = 0;
  *(unsigned char *)(v5 + 1224) = 0;
  *(void *)(v5 + 1180) = 0;
  double result = 0.0;
  *(_OWORD *)(v5 + 1188) = 0u;
  *(unsigned char *)(v5 + 1204) = 0;
  *(_WORD *)(v5 + 1228) = 1;
  *(_OWORD *)(v5 + 1240) = 0u;
  *(void *)(v5 + 1232) = v5 + 1240;
  *(unsigned char *)(v5 + 1266) = 0;
  *(unsigned char *)(v5 + 1268) = 0;
  *(unsigned char *)(v5 + 1270) = 0;
  *(_WORD *)(v5 + 1272) = 0;
  *(unsigned char *)(v5 + 1340) = 0;
  *(unsigned char *)(v5 + 1342) = 0;
  *(unsigned char *)(v5 + 1344) = 0;
  *(unsigned char *)(v5 + 1346) = 0;
  *(unsigned char *)(v5 + 1348) = 0;
  *(unsigned char *)(v5 + 1350) = 0;
  *(unsigned char *)(v5 + 1352) = 0;
  *(unsigned char *)(v5 + 1354) = 0;
  *(unsigned char *)(v5 + 1356) = 0;
  *(unsigned char *)(v5 + 1358) = 0;
  *(unsigned char *)(v5 + 1360) = 0;
  *(unsigned char *)(v5 + 1362) = 0;
  *(unsigned char *)(v5 + 1364) = 0;
  *(unsigned char *)(v5 + 1366) = 0;
  *(unsigned char *)(v5 + 1368) = 0;
  *(unsigned char *)(v5 + 1376) = 0;
  *(unsigned char *)(v5 + 1400) = 0;
  *(unsigned char *)(v5 + 1408) = 0;
  *(unsigned char *)(v5 + 1432) = 0;
  *(unsigned char *)(v5 + 1440) = 0;
  *(unsigned char *)(v5 + 1442) = 0;
  *(unsigned char *)(v5 + 1444) = 0;
  *(unsigned char *)(v5 + 1446) = 0;
  *(unsigned char *)(v5 + 1448) = 0;
  *(unsigned char *)(v5 + 1450) = 0;
  *(unsigned char *)(v5 + 1452) = 0;
  *(unsigned char *)(v5 + 1454) = 0;
  *(unsigned char *)(v5 + 1456) = 0;
  *(unsigned char *)(v5 + 1458) = 0;
  *(unsigned char *)(v5 + 1464) = 0;
  *(unsigned char *)(v5 + 1488) = 0;
  *(unsigned char *)(v5 + 1496) = 0;
  *(unsigned char *)(v5 + 1520) = 0;
  *(unsigned char *)(v5 + 1528) = 0;
  *(unsigned char *)(v5 + 1530) = 0;
  *(unsigned char *)(v5 + 1532) = 0;
  *(unsigned char *)(v5 + 1534) = 0;
  *(unsigned char *)(v5 + 1536) = 0;
  *(unsigned char *)(v5 + 1560) = 0;
  *(unsigned char *)(v5 + 1568) = 0;
  *(unsigned char *)(v5 + 1592) = 0;
  *(unsigned char *)(v5 + 1600) = 0;
  *(unsigned char *)(v5 + 1624) = 0;
  *(unsigned char *)(v5 + 1632) = 0;
  *(unsigned char *)(v5 + 1656) = 0;
  *(unsigned char *)(v5 + 1664) = 0;
  *(unsigned char *)(v5 + 1688) = 0;
  *(unsigned char *)(v5 + 1264) = 0;
  *(void *)(v5 + 1256) = 0;
  *(_OWORD *)(v5 + 1280) = 0u;
  *(_OWORD *)(v5 + 1296) = 0u;
  *(unsigned char *)(v5 + 1312) = 0;
  *(void *)(v5 + 1330) = 0;
  *(_OWORD *)(v5 + 1314) = 0u;
  *(unsigned char *)(v5 + 1338) = 0;
  return result;
}

uint64_t sub_1DDA59A20()
{
  return 85;
}

void sub_1DDA59A28(uint64_t a1, char *a2, unsigned __int16 *a3)
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  sub_1DDA43480((uint64_t **)a1, (uint64_t)a2, a3);
  uint64_t v6 = a2[23];
  BOOL v7 = (v6 & 0x80u) != 0;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a2 + 1);
  }
  if (v7) {
    long long v8 = *(char **)a2;
  }
  else {
    long long v8 = a2;
  }
  if (v6 >= 18)
  {
    id v9 = &v8[v6];
    id v10 = v8;
    do
    {
      char v11 = (char *)memchr(v10, 69, v6 - 17);
      if (!v11) {
        break;
      }
      if (*(void *)v11 == 0x6465646465626D45
        && *((void *)v11 + 1) == 0x69616E626D756854
        && *((_WORD *)v11 + 8) == 14956)
      {
        if (v11 != v9 && v11 == v8) {
          return;
        }
        break;
      }
      id v10 = v11 + 1;
      uint64_t v6 = v9 - (unsigned char *)v10;
    }
    while (v9 - (unsigned char *)v10 >= 18);
  }
  unsigned int v14 = *a3;
  if (v14 <= 0x117)
  {
    switch(*a3)
    {
      case 1u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) == 4)
        {
          int v15 = 0;
          LODWORD(__p[0]) = 0;
          do
          {
            sub_1DDA1B3CC(&__src, (unsigned int *)__p);
            int v15 = (sub_1DDA49028((uint64_t)a3, (unsigned int *)&__src) - 48) | (v15 << 8);
            int v16 = LODWORD(__p[0])++;
          }
          while (v16 < 3);
          *(_DWORD *)(a1 + 1180) = v15;
        }
        break;
      case 2u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1) {
          *(_WORD *)(a1 + 1184) = sub_1DDA44F28((uint64_t)a3);
        }
        break;
      case 3u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1) {
          *(_WORD *)(a1 + 1186) = sub_1DDA44F28((uint64_t)a3);
        }
        break;
      case 4u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1) {
          *(_WORD *)(a1 + 1188) = sub_1DDA44F28((uint64_t)a3);
        }
        break;
      case 5u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1) {
          *(_WORD *)(a1 + 1190) = sub_1DDA44F28((uint64_t)a3);
        }
        break;
      case 6u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1) {
          *(_WORD *)(a1 + 1192) = sub_1DDA44F28((uint64_t)a3);
        }
        break;
      case 7u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1) {
          *(_WORD *)(a1 + 1194) = sub_1DDA44F28((uint64_t)a3);
        }
        break;
      case 9u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1) {
          *(_WORD *)(a1 + 1228) = sub_1DDA44F28((uint64_t)a3);
        }
        break;
      case 0xAu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1266) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1268) = 1;
        }
        break;
      case 0xBu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_DWORD *)(a1 + 1212) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1216) = 1;
        }
        break;
      case 0x11u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1338) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1340) = 1;
        }
        break;
      case 0x12u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          unsigned __int32 v30 = sub_1DDA44F28((uint64_t)a3);
          *(_WORD *)(a1 + 1342) = v30;
          *(unsigned char *)(a1 + 1344) = 1;
          if (*(unsigned char *)(a1 + 1340))
          {
            __src.n128_u32[0] = *(unsigned __int16 *)(a1 + 1338);
            __src.n128_u32[1] = 256;
            __src.n128_u32[2] = v30;
            sub_1DDA1A880(__p, "redGreenBlue");
            p_src = (__n128 *)__p;
            uint64_t v31 = (char *)sub_1DDA52108((uint64_t **)(a1 + 120), __p, (uint64_t)&unk_1DDBFB044, (_OWORD **)&p_src);
            sub_1DDA17E28(v31 + 56, (char *)&__src, (uint64_t)&__src.n128_i64[1] + 4, 3uLL);
            goto LABEL_121;
          }
        }
        break;
      case 0x17u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          __src.n128_u32[0] = sub_1DDA44F28((uint64_t)a3);
          __p[0] = a2;
          uint64_t v32 = sub_1DDA4B960((uint64_t **)(a1 + 192), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p);
          sub_1DDA17E28((char *)v32 + 56, (char *)&__src, (uint64_t)__src.n128_i64 + 4, 1uLL);
        }
        break;
      case 0x1Cu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1346) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1348) = 1;
        }
        break;
      case 0x1Du:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1350) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1352) = 1;
        }
        break;
      case 0x1Eu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          unsigned int v33 = sub_1DDA44F28((uint64_t)a3);
          *(_WORD *)(a1 + 1354) = v33;
          *(unsigned char *)(a1 + 1356) = 1;
          if (*(unsigned char *)(a1 + 1348))
          {
            if (*(unsigned char *)(a1 + 1352))
            {
              LOWORD(v34) = *(_WORD *)(a1 + 1346);
              LOWORD(v35) = *(_WORD *)(a1 + 1350);
              *(double *)std::string __p = (double)v34;
              *(double *)&__p[1] = (double)v35;
              *(double *)&long long v76 = (double)v35;
              *((double *)&v76 + 1) = (double)v33;
              sub_1DDA47580(":OBCorrection", (const void **)a2, (void **)&__src);
              p_src = &__src;
              uint64_t v36 = (char *)sub_1DDA52108((uint64_t **)(a1 + 264), (void **)&__src, (uint64_t)&unk_1DDBFB044, (_OWORD **)&p_src);
              sub_1DDA25BB0(v36 + 56, (char *)__p, (uint64_t)v77, 4uLL);
              if (v79 < 0)
              {
                uint64_t v37 = (void *)__src.n128_u64[0];
                goto LABEL_123;
              }
            }
          }
        }
        break;
      case 0x24u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1358) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1360) = 1;
        }
        break;
      case 0x25u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1362) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1364) = 1;
        }
        break;
      case 0x26u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          unsigned int v38 = sub_1DDA44F28((uint64_t)a3);
          *(_WORD *)(a1 + 1366) = v38;
          *(unsigned char *)(a1 + 1368) = 1;
          if (*(unsigned char *)(a1 + 1360))
          {
            if (*(unsigned char *)(a1 + 1364))
            {
              unsigned int v39 = *(unsigned __int16 *)(a1 + 1362);
              __src.n128_u32[0] = *(unsigned __int16 *)(a1 + 1358);
              *(unint64_t *)((char *)__src.n128_u64 + 4) = __PAIR64__(v38, v39);
              sub_1DDA1A880(__p, "redGreenBlue");
              p_src = (__n128 *)__p;
              uint64_t v40 = (char *)sub_1DDA52108((uint64_t **)(a1 + 120), __p, (uint64_t)&unk_1DDBFB044, (_OWORD **)&p_src);
              sub_1DDA17E28(v40 + 56, (char *)&__src, (uint64_t)&__src.n128_i64[1] + 4, 3uLL);
LABEL_121:
              if (SBYTE7(v76) < 0)
              {
                uint64_t v37 = __p[0];
LABEL_123:
                operator delete(v37);
              }
            }
          }
        }
        break;
      case 0x2Du:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_DWORD *)(a1 + 1220) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1224) = 1;
        }
        break;
      case 0x2Eu:
        if (a3[1] == 7)
        {
          uint64_t v41 = *((unsigned int *)a3 + 2);
          *(_DWORD *)(a1 + 1196) = v41;
          unint64_t v42 = *((unsigned int *)a3 + 1);
          *(_DWORD *)(a1 + 1200) = v42;
          sub_1DDA5B768(a1, v41, v42);
        }
        break;
      case 0x2Fu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          int v43 = sub_1DDA44F28((uint64_t)a3);
          *(_WORD *)(a1 + 1256) = v43;
          if (v43) {
            goto LABEL_146;
          }
        }
        break;
      case 0x30u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          int v44 = sub_1DDA44F28((uint64_t)a3);
          *(_WORD *)(a1 + 1258) = v44;
          if (v44) {
            goto LABEL_146;
          }
        }
        break;
      case 0x31u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          int v45 = sub_1DDA44F28((uint64_t)a3);
          *(_WORD *)(a1 + 1260) = v45;
          if (v45) {
            goto LABEL_146;
          }
        }
        break;
      case 0x32u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          int v46 = sub_1DDA44F28((uint64_t)a3);
          *(_WORD *)(a1 + 1262) = v46;
          if (v46) {
LABEL_146:
          }
            *(unsigned char *)(a1 + 1264) = 1;
        }
        break;
      case 0x37u:
        if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
        {
          __src.n128_u32[0] = *((_DWORD *)a3 + 2);
          __p[0] = a2;
          uint64_t v59 = sub_1DDA4B960((uint64_t **)(a1 + 192), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p);
          sub_1DDA17E28((char *)v59 + 56, (char *)&__src, (uint64_t)__src.n128_i64 + 4, 1uLL);
        }
        break;
      case 0x39u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1DDA27D28(a1, &__src);
          LODWORD(v71) = sub_1DDA3CE7C((uint64_t)a3);
          sub_1DDA1B4D8((int *)&p_src, (int *)&v71);
          sub_1DDA1A94C((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          sub_1DDA27D28(a1, &__src);
          unsigned int v47 = sub_1DDA19E68(__src.n128_i64[0]);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          if (((4 * v47) | 2uLL) <= *((unsigned int *)a3 + 1))
          {
            sub_1DDA27D28(a1, &p_src);
            LODWORD(v71) = v47;
            sub_1DDA4AA3C((uint64_t)p_src, (unsigned int *)&v71, (uint64_t *)&__src);
            sub_1DDA5BD44(a1 + 1376, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            if (v74) {
              sub_1DDA18310((std::__shared_weak_count *)v74);
            }
          }
          goto LABEL_271;
        }
        break;
      case 0x3Au:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1DDA27D28(a1, &__src);
          LODWORD(v71) = sub_1DDA3CE7C((uint64_t)a3);
          sub_1DDA1B4D8((int *)&p_src, (int *)&v71);
          sub_1DDA1A94C((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          sub_1DDA27D28(a1, &__src);
          int v48 = sub_1DDA19E68(__src.n128_i64[0]);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          if (*((_DWORD *)a3 + 1) >= ((4 * v48) | 2u))
          {
            sub_1DDA27D28(a1, &p_src);
            unint64_t v49 = p_src;
            int v70 = 2 * v48;
            sub_1DDA1B3CC(&v71, (unsigned int *)&v70);
            sub_1DDA4A598((uint64_t)v49, (unsigned int *)&v71, (uint64_t *)&__src);
            sub_1DDA5BD44(a1 + 1408, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            if (v74) {
              sub_1DDA18310((std::__shared_weak_count *)v74);
            }
          }
          goto LABEL_233;
        }
        break;
      case 0x3Bu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1440) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1442) = 1;
        }
        break;
      case 0x3Cu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1444) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1446) = 1;
        }
        break;
      case 0x3Du:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1448) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1450) = 1;
        }
        break;
      case 0x3Eu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1452) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1454) = 1;
        }
        break;
      case 0x3Fu:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1456) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1458) = 1;
        }
        break;
      case 0x40u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1DDA27D28(a1, &__src);
          LODWORD(v71) = sub_1DDA3CE7C((uint64_t)a3);
          sub_1DDA1B4D8((int *)&p_src, (int *)&v71);
          sub_1DDA1A94C((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          sub_1DDA27D28(a1, &__src);
          int v50 = sub_1DDA19E68(__src.n128_i64[0]);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          if (*((_DWORD *)a3 + 1) >= ((4 * v50) | 2u))
          {
            sub_1DDA27D28(a1, &p_src);
            long long v51 = p_src;
            int v70 = 2 * v50;
            sub_1DDA1B3CC(&v71, (unsigned int *)&v70);
            sub_1DDA4A598((uint64_t)v51, (unsigned int *)&v71, (uint64_t *)&__src);
            sub_1DDA5BD44(a1 + 1464, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            if (v74) {
              sub_1DDA18310((std::__shared_weak_count *)v74);
            }
          }
          goto LABEL_233;
        }
        break;
      case 0x41u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1DDA27D28(a1, &__src);
          LODWORD(v71) = sub_1DDA3CE7C((uint64_t)a3);
          sub_1DDA1B4D8((int *)&p_src, (int *)&v71);
          sub_1DDA1A94C((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          sub_1DDA27D28(a1, &__src);
          unsigned int v52 = sub_1DDA19E68(__src.n128_i64[0]);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          if (2 * (unint64_t)v52 + 2 <= *((unsigned int *)a3 + 1))
          {
            sub_1DDA27D28(a1, &p_src);
            LODWORD(v71) = v52;
            sub_1DDA4A598((uint64_t)p_src, (unsigned int *)&v71, (uint64_t *)&__src);
            sub_1DDA5BD44(a1 + 1496, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            if (v74) {
              sub_1DDA18310((std::__shared_weak_count *)v74);
            }
          }
          goto LABEL_271;
        }
        break;
      case 0x42u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1528) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1530) = 1;
        }
        break;
      case 0x43u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
        {
          *(_WORD *)(a1 + 1532) = sub_1DDA44F28((uint64_t)a3);
          *(unsigned char *)(a1 + 1534) = 1;
        }
        break;
      case 0x44u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1DDA27D28(a1, &__src);
          LODWORD(v71) = sub_1DDA3CE7C((uint64_t)a3);
          sub_1DDA1B4D8((int *)&p_src, (int *)&v71);
          sub_1DDA1A94C((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          sub_1DDA27D28(a1, &__src);
          unsigned int v53 = sub_1DDA19E68(__src.n128_i64[0]);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          if (((4 * v53) | 2uLL) <= *((unsigned int *)a3 + 1))
          {
            sub_1DDA27D28(a1, &p_src);
            LODWORD(v71) = v53;
            sub_1DDA4A7B0((uint64_t)p_src, (unsigned int *)&v71, (uint64_t *)&__src);
            sub_1DDA5BD44(a1 + 1536, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            if (v74) {
              sub_1DDA18310((std::__shared_weak_count *)v74);
            }
          }
          goto LABEL_271;
        }
        break;
      case 0x45u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1DDA27D28(a1, &__src);
          LODWORD(v71) = sub_1DDA3CE7C((uint64_t)a3);
          sub_1DDA1B4D8((int *)&p_src, (int *)&v71);
          sub_1DDA1A94C((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          sub_1DDA27D28(a1, &__src);
          unsigned int v54 = sub_1DDA19E68(__src.n128_i64[0]);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          if (2 * (unint64_t)v54 + 2 <= *((unsigned int *)a3 + 1))
          {
            sub_1DDA27D28(a1, &p_src);
            unint64_t v55 = p_src;
            int v70 = 2 * v54;
            sub_1DDA1B3CC(&v71, (unsigned int *)&v70);
            sub_1DDA4A598((uint64_t)v55, (unsigned int *)&v71, (uint64_t *)&__src);
            sub_1DDA5BD44(a1 + 1568, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            if (v74) {
              sub_1DDA18310((std::__shared_weak_count *)v74);
            }
          }
LABEL_233:
          sub_1DDA1AA18((uint64_t *)__p);
        }
        break;
      case 0x46u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1DDA27D28(a1, &__src);
          LODWORD(v71) = sub_1DDA3CE7C((uint64_t)a3);
          sub_1DDA1B4D8((int *)&p_src, (int *)&v71);
          sub_1DDA1A94C((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          sub_1DDA27D28(a1, &__src);
          unsigned int v56 = sub_1DDA19E68(__src.n128_i64[0]);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          if (((4 * v56) | 2uLL) <= *((unsigned int *)a3 + 1))
          {
            sub_1DDA27D28(a1, &p_src);
            LODWORD(v71) = v56;
            sub_1DDA4A7B0((uint64_t)p_src, (unsigned int *)&v71, (uint64_t *)&__src);
            sub_1DDA5BD44(a1 + 1600, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            if (v74) {
              sub_1DDA18310((std::__shared_weak_count *)v74);
            }
          }
          goto LABEL_271;
        }
        break;
      case 0x47u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1DDA27D28(a1, &__src);
          LODWORD(v71) = sub_1DDA3CE7C((uint64_t)a3);
          sub_1DDA1B4D8((int *)&p_src, (int *)&v71);
          sub_1DDA1A94C((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          sub_1DDA27D28(a1, &__src);
          unsigned int v57 = sub_1DDA19E68(__src.n128_i64[0]);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          if (v57 && 2 * (unint64_t)v57 + 2 <= *((unsigned int *)a3 + 1))
          {
            sub_1DDA27D28(a1, &p_src);
            LODWORD(v71) = v57;
            sub_1DDA4A598((uint64_t)p_src, (unsigned int *)&v71, (uint64_t *)&__src);
            sub_1DDA5BD44(a1 + 1632, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            if (v74) {
              sub_1DDA18310((std::__shared_weak_count *)v74);
            }
          }
          goto LABEL_271;
        }
        break;
      case 0x48u:
        if (a3[1] == 7 && *((_DWORD *)a3 + 1) >= 2u)
        {
          sub_1DDA27D28(a1, &__src);
          LODWORD(v71) = sub_1DDA3CE7C((uint64_t)a3);
          sub_1DDA1B4D8((int *)&p_src, (int *)&v71);
          sub_1DDA1A94C((uint64_t *)__p, (uint64_t *)&__src, (uint64_t)&p_src, 0);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          sub_1DDA27D28(a1, &__src);
          unsigned int v58 = sub_1DDA19E68(__src.n128_i64[0]);
          if (__src.n128_u64[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__src.n128_u64[1]);
          }
          if (v58 && 2 * (unint64_t)v58 + 2 <= *((unsigned int *)a3 + 1))
          {
            sub_1DDA27D28(a1, &p_src);
            LODWORD(v71) = v58;
            sub_1DDA4A598((uint64_t)p_src, (unsigned int *)&v71, (uint64_t *)&__src);
            sub_1DDA5BD44(a1 + 1664, &__src);
            if (__src.n128_u64[0])
            {
              __src.n128_u64[1] = __src.n128_u64[0];
              operator delete((void *)__src.n128_u64[0]);
            }
            if (v74) {
              sub_1DDA18310((std::__shared_weak_count *)v74);
            }
          }
LABEL_271:
          sub_1DDA1AA18((uint64_t *)__p);
        }
        break;
      default:
        return;
    }
    return;
  }
  if (v14 != 280)
  {
    if (v14 != 281)
    {
      if (v14 != 283 || a3[1] != 7 || *((_DWORD *)a3 + 1) != 64 || !*(unsigned char *)(a1 + 1224) || *(int *)(a1 + 1220) < 4) {
        return;
      }
      sub_1DDA27D28(a1, __p);
      LODWORD(v71) = sub_1DDA3CE7C((uint64_t)a3);
      sub_1DDA1B4D8((int *)&p_src, (int *)&v71);
      sub_1DDA1A94C((uint64_t *)&__src, (uint64_t *)__p, (uint64_t)&p_src, 0);
      if (__p[1]) {
        sub_1DDA18310((std::__shared_weak_count *)__p[1]);
      }
      memset(v77, 0, sizeof(v77));
      *(_OWORD *)std::string __p = 0u;
      long long v76 = 0u;
      sub_1DDA27D28(a1, &v71);
      int v69 = sub_1DDA3CE7C((uint64_t)a3);
      sub_1DDA1B4D8(&v70, &v69);
      sub_1DDA1A94C((uint64_t *)&p_src, (uint64_t *)&v71, (uint64_t)&v70, 0);
      if (v72) {
        sub_1DDA18310(v72);
      }
      sub_1DDA27D28(a1, &v71);
      (*(void (**)(void *, void **, uint64_t))(*v71 + 32))(v71, __p, 64);
      if (v72) {
        sub_1DDA18310(v72);
      }
      sub_1DDA1AA18((uint64_t *)&p_src);
      sub_1DDA27D28(a1, &v71);
      uint64_t v17 = v71;
      int v69 = 32;
      sub_1DDA1B3CC(&v70, (unsigned int *)&v69);
      sub_1DDA1A488(v17, (unsigned int *)&v70, (uint64_t *)&p_src);
      if (v72) {
        sub_1DDA18310(v72);
      }
      uint64_t v18 = p_src;
      if ((char *)v74 - (char *)p_src != 64) {
        goto LABEL_313;
      }
      uint64_t v19 = 0;
      unint64_t v20 = 0;
      unint64_t v21 = 0;
      do
      {
        unint64_t v21 = (*((unsigned __int8 *)__p + v19 + 4) + 73 * v21) % 0xFFEF;
        unint64_t v20 = (*((unsigned __int8 *)v77 + v19++) + 73 * v20) % 0xFFEF;
      }
      while (v19 != 28);
      uint64_t v22 = 0;
      unint64_t v23 = 0;
      unint64_t v24 = 0;
      do
      {
        unint64_t v24 = (*((unsigned __int8 *)__p + v22 + 2) + 73 * v24) % 0xFFEF;
        unint64_t v23 = (*((unsigned __int8 *)__p + v22 + 3) + 73 * v23) % 0xFFEF;
        v22 += 2;
      }
      while (v22 != 60);
      if (v21 != p_src->n128_u16[1] || v20 != p_src[3].n128_u16[6]) {
        goto LABEL_313;
      }
      if (v24 == p_src->n128_u16[0] && v23 == p_src[3].n128_u16[7])
      {
        if (p_src[1].n128_u8[13] << 8 == 256)
        {
          *(unsigned char *)(a1 + 1312) = 1;
          unsigned int v26 = v18[2].n128_u16[1];
          *(_WORD *)(a1 + 1314) = v26;
          unsigned int v27 = v18[2].n128_u16[0];
          *(_WORD *)(a1 + 1316) = v27;
          int v28 = v18->n128_u16[4];
          *(_WORD *)(a1 + 1318) = v28;
          int v29 = v18[1].n128_u16[3];
          *(_WORD *)(a1 + 1320) = v29;
          *(_WORD *)(a1 + 1322) = v18[1].n128_u16[4];
          *(_WORD *)(a1 + 1324) = v18[2].n128_u16[7];
          *(_WORD *)(a1 + 1326) = v18[1].n128_u16[0];
          *(_WORD *)(a1 + 1328) = v18[3].n128_u16[2];
          *(_WORD *)(a1 + 1330) = v18[3].n128_u16[3];
          *(_WORD *)(a1 + 1332) = v18[1].n128_u16[2];
          *(_WORD *)(a1 + 1334) = v18[2].n128_u16[4];
          *(_WORD *)(a1 + 1336) = v18[3].n128_u16[5];
          if (!__PAIR64__(v26, v27) && !v28 && !v29) {
            *(unsigned char *)(a1 + 1312) = 0;
          }
        }
      }
      else
      {
LABEL_313:
        if (!p_src) {
          goto LABEL_60;
        }
      }
      uint64_t v74 = v18;
      operator delete(v18);
LABEL_60:
      sub_1DDA1AA18((uint64_t *)&__src);
      return;
    }
    if (a3[1] != 7 || *((_DWORD *)a3 + 1) != 32 || !*(unsigned char *)(a1 + 1224) || *(int *)(a1 + 1220) < 4) {
      return;
    }
    sub_1DDA27D28(a1, __p);
    LODWORD(v71) = sub_1DDA3CE7C((uint64_t)a3);
    sub_1DDA1B4D8((int *)&p_src, (int *)&v71);
    sub_1DDA1A94C((uint64_t *)&__src, (uint64_t *)__p, (uint64_t)&p_src, 0);
    if (__p[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__p[1]);
    }
    *(_OWORD *)std::string __p = 0u;
    long long v76 = 0u;
    sub_1DDA27D28(a1, &v71);
    int v69 = sub_1DDA3CE7C((uint64_t)a3);
    sub_1DDA1B4D8(&v70, &v69);
    sub_1DDA1A94C((uint64_t *)&p_src, (uint64_t *)&v71, (uint64_t)&v70, 0);
    if (v72) {
      sub_1DDA18310(v72);
    }
    sub_1DDA27D28(a1, &v71);
    (*(void (**)(void *, void **, uint64_t))(*v71 + 32))(v71, __p, 32);
    if (v72) {
      sub_1DDA18310(v72);
    }
    sub_1DDA1AA18((uint64_t *)&p_src);
    sub_1DDA27D28(a1, &v71);
    uint64_t v60 = v71;
    int v69 = 16;
    sub_1DDA1B3CC(&v70, (unsigned int *)&v69);
    sub_1DDA1A488(v60, (unsigned int *)&v70, (uint64_t *)&p_src);
    if (v72) {
      sub_1DDA18310(v72);
    }
    uint64_t v61 = p_src;
    if ((char *)v74 - (char *)p_src != 32) {
      goto LABEL_315;
    }
    uint64_t v62 = 0;
    unint64_t v63 = 0;
    unint64_t v64 = 0;
    do
    {
      unint64_t v64 = (*((unsigned __int8 *)__p + v62 + 4) + 73 * v64) % 0xFFEF;
      unint64_t v63 = (*((unsigned __int8 *)&__p[2] + v62++) + 73 * v63) % 0xFFEF;
    }
    while (v62 != 12);
    uint64_t v65 = 0;
    unint64_t v66 = 0;
    unint64_t v67 = 0;
    do
    {
      unint64_t v67 = (*((unsigned __int8 *)__p + v65 + 2) + 73 * v67) % 0xFFEF;
      unint64_t v66 = (*((unsigned __int8 *)__p + v65 + 3) + 73 * v66) % 0xFFEF;
      v65 += 2;
    }
    while (v65 != 28);
    if (v64 != p_src->n128_u16[1] || v63 != p_src[1].n128_u16[6]) {
      goto LABEL_315;
    }
    if (v67 == p_src->n128_u16[0] && v66 == p_src[1].n128_u16[7])
    {
      if ((p_src->n128_u16[7] & 0xF) == 1)
      {
        *(unsigned char *)(a1 + 1270) = 1;
        *(_WORD *)(a1 + 1272) = v61[1].n128_u16[4];
        *(double *)(a1 + 1280) = (double)v61->n128_i16[5] * 0.0000305175781;
        *(double *)(a1 + 1288) = (double)v61[1].n128_i16[0] * 0.0000305175781;
        *(double *)(a1 + 1296) = (double)v61->n128_i16[4] * 0.0000305175781;
        *(double *)(a1 + 1304) = (double)v61[1].n128_i16[3] * 0.0000305175781;
      }
    }
    else
    {
LABEL_315:
      if (!p_src) {
        goto LABEL_311;
      }
    }
    uint64_t v74 = v61;
    operator delete(v61);
LABEL_311:
    sub_1DDA1AA18((uint64_t *)&__src);
    return;
  }
  if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
  {
    *(_DWORD *)(a1 + 1204) = *((_DWORD *)a3 + 2);
    *(unsigned char *)(a1 + 1208) = 1;
  }
}

void sub_1DDA5B23C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, std::__shared_weak_count *a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v22 = *(void **)(v20 - 96);
  if (v22)
  {
    *(void *)(v20 - 88) = v22;
    operator delete(v22);
  }
  if (a13) {
    sub_1DDA18310(a13);
  }
  sub_1DDA1AA18((uint64_t *)&__p);
  _Unwind_Resume(a1);
}

uint64_t *sub_1DDA5B768(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v25 = a2;
  sub_1DDA27D28(a1, &v23);
  unint64_t v5 = (*(unsigned int (**)(uint64_t))(*(void *)v23 + 16))(v23);
  if (v24) {
    sub_1DDA18310(v24);
  }
  if (v5 <= a3)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  sub_1DDA27D28(a1, &v21);
  sub_1DDA1B2DC(&v19, &v25);
  sub_1DDA1A94C(&v23, &v21, (uint64_t)&v19, 0);
  if (v22) {
    sub_1DDA18310(v22);
  }
  sub_1DDA27D28(a1, &v19);
  sub_1DDA29F88(&v21, &v19, 2);
  if (v20) {
    sub_1DDA18310(v20);
  }
  sub_1DDA27D28(a1, &v19);
  uint64_t v6 = sub_1DDA19E68(v19);
  if (v20) {
    sub_1DDA18310(v20);
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)a1 + 616))(a1, v6))
  {
    while (1)
    {
      sub_1DDA27D28(a1, &v19);
      unsigned int v7 = sub_1DDA19E68(v19);
      if (v20) {
        sub_1DDA18310(v20);
      }
      sub_1DDA27D28(a1, &v19);
      __int16 v8 = sub_1DDA19E68(v19);
      if (v20) {
        sub_1DDA18310(v20);
      }
      sub_1DDA27D28(a1, &v19);
      int v9 = (*(uint64_t (**)(uint64_t))(*(void *)v19 + 48))(v19);
      if (v20) {
        sub_1DDA18310(v20);
      }
      BOOL v10 = v7 < 0xFF01;
      if (v7 < 0xFF01) {
        break;
      }
      if (v7 == 65505)
      {
        sub_1DDA27D28(a1, &v19);
        (*(void (**)(uint64_t, void **, uint64_t))(*(void *)v19 + 32))(v19, &__p, 6);
        if (v20) {
          sub_1DDA18310(v20);
        }
        if (__p != 1718188101) {
          goto LABEL_33;
        }
        sub_1DDA27D28(a1, &v19);
        int v26 = (*(uint64_t (**)(uint64_t))(*(void *)v19 + 48))(v19);
        uint64_t v14 = *sub_1DDA57B34(&v26, &v25);
        if (v20) {
          sub_1DDA18310(v20);
        }
      }
      else
      {
        uint64_t v14 = 0;
      }
      unsigned __int16 v11 = v8 - 2;
      LODWORD(a3) = a3 - 4 - (unsigned __int16)(v8 - 2);
      if ((a3 & 0x80000000) == 0)
      {
        sub_1DDA27D28(a1, &v19);
        uint64_t v12 = v19;
        std::string __p = (void *)(v9 + (unint64_t)v11);
        sub_1DDA1B2DC(&v26, (uint64_t *)&__p);
        (*(void (**)(uint64_t, int *, void))(*(void *)v12 + 40))(v12, &v26, 0);
        if (v20) {
          sub_1DDA18310(v20);
        }
        if (a3 >= 5 && !v14 && v7 != 65498) {
          continue;
        }
      }
      goto LABEL_34;
    }
    uint64_t v14 = 0;
  }
  else
  {
LABEL_33:
    uint64_t v14 = 0;
    BOOL v10 = 1;
  }
LABEL_34:
  sub_1DDA2A000(&v21);
  double result = sub_1DDA1AA18(&v23);
  if (!v10 && v14)
  {
    sub_1DDA27D28(a1, &v21);
    uint64_t v19 = v25 + v14;
    sub_1DDA1B2DC(&__p, &v19);
    sub_1DDA49398((uint64_t)&v23, &v21, &__p);
    if (v22) {
      sub_1DDA18310(v22);
    }
    sub_1DDA27D28(a1, &v19);
    LODWORD(__p) = 0;
    sub_1DDA1A94C(&v21, &v19, (uint64_t)&__p, 0);
    if (v20) {
      sub_1DDA18310(v20);
    }
    sub_1DDA27D28(a1, &__p);
    sub_1DDA29F88(&v19, (uint64_t *)&__p, 2);
    if (v17) {
      sub_1DDA18310(v17);
    }
    sub_1DDA1A880(&__p, "EmbeddedThumbnail:");
    (*(void (**)(uint64_t, void **, uint64_t))(*(void *)a1 + 672))(a1, &__p, 42);
    if (v18 < 0) {
      operator delete(__p);
    }
    sub_1DDA2A000(&v19);
    sub_1DDA1AA18(&v21);
    return (uint64_t *)sub_1DDA49424((uint64_t)&v23);
  }
  return result;
}

void sub_1DDA5BC14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22)
{
}

uint64_t sub_1DDA5BD44(uint64_t a1, __n128 *a2)
{
  if (*(unsigned char *)(a1 + 24))
  {
    sub_1DDA5DACC(a1, a2);
  }
  else
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(__n128 *)a1 = *a2;
    *(void *)(a1 + 16) = a2[1].n128_u64[0];
    a2->n128_u64[0] = 0;
    a2->n128_u64[1] = 0;
    a2[1].n128_u64[0] = 0;
    *(unsigned char *)(a1 + 24) = 1;
  }
  return a1;
}

uint64_t *sub_1DDA5BDA4(uint64_t a1, long long *a2, uint64_t a3)
{
  double result = (uint64_t *)nullsub_6();
  if (*(_WORD *)a3 == 73 && *(_WORD *)(a3 + 2) == 3 && *(_DWORD *)(a3 + 4) == 1)
  {
    unsigned int v10 = 0;
    sub_1DDA1B3CC(&v11, &v10);
    __int16 v9 = sub_1DDA3F234(a3, (unsigned int *)&v11);
    unsigned __int16 v11 = a2;
    double result = sub_1DDA4BC98((uint64_t **)(a1 + 1232), (void **)a2, (uint64_t)&unk_1DDBFB044, &v11);
    *((_WORD *)result + 28) = v9;
  }
  return result;
}

uint64_t sub_1DDA5BE40(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 1208)) {
    return *(unsigned int *)(a1 + 1204);
  }
  sub_1DDA1A880(__p, "IFD0");
  uint64_t v2 = sub_1DDA481F0(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA5BEAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA5BEC8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 1208))
  {
    sub_1DDA27D28(a1, &__p);
    int v2 = (*(uint64_t (**)(void *))(*(void *)__p + 16))(__p);
    if (!*(unsigned char *)(a1 + 1208)) {
      sub_1DDA1D8BC();
    }
    int v8 = v2;
    uint64_t v3 = *sub_1DDA4C118(&v8, (_DWORD *)(a1 + 1204));
    if (v6) {
      sub_1DDA18310(v6);
    }
  }
  else
  {
    sub_1DDA1A880(&__p, "IFD0");
    uint64_t v3 = sub_1DDA48264(a1, &__p);
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  return v3;
}

void sub_1DDA5BF94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1DDA5BFC4(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1184) | ((unint64_t)*(unsigned __int16 *)(a1 + 1186) << 32);
}

unint64_t sub_1DDA5BFD4(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1190) | ((unint64_t)*(unsigned __int16 *)(a1 + 1188) << 32);
}

unint64_t sub_1DDA5BFF8(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int16 *)(a1 + 1184);
  if (*(unsigned char *)(a1 + 1264))
  {
    unsigned int v2 = *(unsigned __int16 *)(a1 + 1258);
    if ((int)(*(unsigned __int16 *)(a1 + 1262) - v2) > (int)v1) {
      goto LABEL_8;
    }
    uint64_t v3 = *(unsigned __int16 *)(a1 + 1256);
    if (*(unsigned __int16 *)(a1 + 1260) - (int)v3 > *(unsigned __int16 *)(a1 + 1186)) {
      goto LABEL_8;
    }
  }
  else
  {
    unsigned int v2 = *(unsigned __int16 *)(a1 + 1190);
    if (*(unsigned __int16 *)(a1 + 1194) + v2 > v1
      || (uint64_t v3 = *(unsigned __int16 *)(a1 + 1188),
          *(unsigned __int16 *)(a1 + 1192) + v3 > *(unsigned __int16 *)(a1 + 1186)))
    {
LABEL_8:
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
  }
  return v2 | (unint64_t)(v3 << 32);
}

void sub_1DDA5C11C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA5C13C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 1268)) {
    return *(unsigned __int16 *)(a1 + 1266);
  }
  else {
    return sub_1DDA27FA8();
  }
}

void sub_1DDA5C150(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1DDBB6538();
  int v8 = v4;
  if (*(unsigned char *)(a1 + 1656)
    && objc_msgSend_BOOLForKey_(v4, v5, @"USE_MULTISIZE_TILES", v6, v7))
  {
    if (!*(unsigned char *)(a1 + 1530))
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    if (!*(unsigned char *)(a1 + 1656)) {
      sub_1DDA1D8BC();
    }
    unint64_t v9 = *(unsigned __int16 *)(a1 + 1528);
    if (!*(_WORD *)(a1 + 1528)
      || (unsigned int v10 = *(const void **)(a1 + 1632), v9 > (uint64_t)(*(void *)(a1 + 1640) - (void)v10) >> 1))
    {
      uint64_t v14 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](v14, "RawCameraException");
      __cxa_throw(v14, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    std::string __p = 0;
    char v18 = 0;
    uint64_t v19 = 0;
    sub_1DDA1D908(&__p, v10, (uint64_t)v10 + 2 * v9, v9);
    unsigned __int16 v11 = (unsigned __int16 *)__p;
    uint64_t v12 = v18;
    if (__p == v18)
    {
      int v13 = 0;
    }
    else
    {
      int v13 = 0;
      do
      {
        int v20 = v13;
        int v13 = *sub_1DDA5DB20(&v20, v11++);
      }
      while (v11 != v12);
      if (v13 < 0)
      {
LABEL_20:
        int v16 = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E01C3B90](v16, "RawCameraException");
        __cxa_throw(v16, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
    }
    if (v13 != *(unsigned __int16 *)(a1 + 1184)) {
      goto LABEL_20;
    }
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    sub_1DDA1D908(a2, __p, (uint64_t)v18, ((char *)v18 - (unsigned char *)__p) >> 1);
    if (__p)
    {
      char v18 = (unsigned __int16 *)__p;
      operator delete(__p);
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
}

void sub_1DDA5C338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  _Unwind_Resume(a1);
}

void sub_1DDA5C390(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1DDBB6538();
  int v8 = v4;
  if (*(unsigned char *)(a1 + 1688)
    && objc_msgSend_BOOLForKey_(v4, v5, @"USE_MULTISIZE_TILES", v6, v7))
  {
    if (!*(unsigned char *)(a1 + 1534))
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    if (!*(unsigned char *)(a1 + 1688)) {
      sub_1DDA1D8BC();
    }
    unint64_t v9 = *(unsigned __int16 *)(a1 + 1532);
    if (!*(_WORD *)(a1 + 1532)
      || (unsigned int v10 = *(const void **)(a1 + 1664), v9 > (uint64_t)(*(void *)(a1 + 1672) - (void)v10) >> 1))
    {
      uint64_t v14 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](v14, "RawCameraException");
      __cxa_throw(v14, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    std::string __p = 0;
    char v18 = 0;
    uint64_t v19 = 0;
    sub_1DDA1D908(&__p, v10, (uint64_t)v10 + 2 * v9, v9);
    unsigned __int16 v11 = (unsigned __int16 *)__p;
    uint64_t v12 = v18;
    if (__p == v18)
    {
      int v13 = 0;
    }
    else
    {
      int v13 = 0;
      do
      {
        int v20 = v13;
        int v13 = *sub_1DDA5DB20(&v20, v11++);
      }
      while (v11 != v12);
      if (v13 < 0)
      {
LABEL_20:
        int v16 = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E01C3B90](v16, "RawCameraException");
        __cxa_throw(v16, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
    }
    if (v13 != *(unsigned __int16 *)(a1 + 1186)) {
      goto LABEL_20;
    }
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    sub_1DDA1D908(a2, __p, (uint64_t)v18, ((char *)v18 - (unsigned char *)__p) >> 1);
    if (__p)
    {
      char v18 = (unsigned __int16 *)__p;
      operator delete(__p);
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
}

void sub_1DDA5C578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA5C5D0(uint64_t a1)
{
  if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1)) {
    return 0;
  }
  std::string __p = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  sub_1DDA27D28(a1, &v15);
  int v3 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 48))(v15);
  if (v16) {
    sub_1DDA18310(v16);
  }
  sub_1DDA27D28(a1, &v15);
  uint64_t v4 = v15;
  unsigned int v13 = 12;
  sub_1DDA1B3CC(&v14, &v13);
  BOOL v5 = sub_1DDA1A0CC(v4, &v14, (uint64_t)&__p);
  if (v16) {
    sub_1DDA18310(v16);
  }
  if (!v5) {
    goto LABEL_25;
  }
  if (v19 >= 0) {
    uint64_t v6 = HIBYTE(v19);
  }
  else {
    uint64_t v6 = v18;
  }
  if (v6 != 5)
  {
    if (v6 != 9) {
      goto LABEL_25;
    }
    p_p = (unsigned __int8 *)&__p;
    if (v19 < 0) {
      p_p = (unsigned __int8 *)__p;
    }
    uint64_t v8 = *(void *)p_p;
    int v9 = p_p[8];
    if (v8 != 0x696E6F73616E6150 || v9 != 99) {
      goto LABEL_25;
    }
LABEL_20:
    uint64_t v15 = v3 + 12;
    sub_1DDA1B2DC(&v14, &v15);
    (*(void (**)(uint64_t, unsigned int *))(*(void *)a1 + 160))(a1, &v14);
    uint64_t v2 = 1;
    goto LABEL_26;
  }
  if (v19 >= 0) {
    unsigned __int16 v11 = &__p;
  }
  else {
    unsigned __int16 v11 = __p;
  }
  if (!memcmp(v11, "LEICA", 5uLL)) {
    goto LABEL_20;
  }
LABEL_25:
  uint64_t v2 = 0;
LABEL_26:
  if (SHIBYTE(v19) < 0) {
    operator delete(__p);
  }
  return v2;
}

void sub_1DDA5C7A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA5C7E0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DDA47F74(a1, a2);
  sub_1DDA18410((int *)__p, (int *)(a1 + 1196));
  unsigned int v10 = *(_DWORD *)(a1 + 1200);
  sub_1DDA284D4(a1, (int *)__p, &v10, 1, &v11);
  if ((void)v11)
  {
    sub_1DDA1A880(__p, "IFD0");
    uint64_t v4 = sub_1DDA2A530(a1 + 704, __p);
    BOOL v5 = v4;
    uint64_t v6 = (void **)(a1 + 712);
    if (v6 == v4) {
      int v7 = 0;
    }
    else {
      int v7 = *((_DWORD *)v4 + 14);
    }
    if (v9 < 0) {
      operator delete(__p[0]);
    }
    if (v6 != v5 && v7) {
      *(_DWORD *)(v11 + 16) = v7;
    }
    sub_1DDA480D4(a2, &v11);
  }
  if (*((void *)&v11 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v11 + 1));
  }
}

void sub_1DDA5C8C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17)
{
  if (a17) {
    sub_1DDA18310(a17);
  }
  sub_1DDA18270((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA5C90C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int16 *)(a1 + 1228) - 2;
  if (v1 > 2) {
    return 2492765332;
  }
  else {
    return dword_1DDBF9A24[(__int16)v1];
  }
}

uint64_t sub_1DDA5C93C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 792))();
}

uint64_t sub_1DDA5C968(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1270);
}

double sub_1DDA5C970(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a2 = *(unsigned char *)(a1 + 1312);
  *(_OWORD *)(a2 + 2) = *(_OWORD *)(a1 + 1314);
  double result = *(double *)(a1 + 1330);
  *(double *)(a2 + 18) = result;
  return result;
}

BOOL sub_1DDA5C990(uint64_t a1)
{
  uint64_t v2 = a1 + 1232;
  sub_1DDA1A880(__p, "IFD0:EXIF:MAKERNOTE");
  int v3 = sub_1DDA2A530(v2, __p);
  uint64_t v4 = v3;
  BOOL v5 = (void **)(a1 + 1240);
  if ((void **)(a1 + 1240) == v3) {
    int v6 = 0;
  }
  else {
    int v6 = *((unsigned __int16 *)v3 + 28);
  }
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  if (v5 == v4)
  {
    sub_1DDA1A880(__p, "EmbeddedThumbnail:IFD0:EXIF:MAKERNOTE");
    uint64_t v8 = sub_1DDA2A530(v2, __p);
    char v9 = v8;
    if (v4 != v8) {
      int v6 = *((unsigned __int16 *)v8 + 28);
    }
    if (v12 < 0) {
      operator delete(__p[0]);
    }
    return v4 != v9 && v6 == 2;
  }
  else
  {
    return v6 == 2;
  }
}

void sub_1DDA5CA64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA5CA84(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v4 = (char *)&v69;
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 216))(&v69);
  uint64_t v5 = v71;
  unsigned __int8 v6 = v71;
  int v7 = (void **)v69;
  uint64_t v8 = v70;
  if ((v71 & 0x80u) == 0) {
    char v9 = (char *)&v69 + v71;
  }
  else {
    char v9 = (char *)v69 + v70;
  }
  if ((v71 & 0x80u) != 0) {
    uint64_t v4 = (char *)v69;
  }
  if (v4 != v9)
  {
    do
    {
      *uint64_t v4 = __toupper(*v4);
      ++v4;
    }
    while (v4 != v9);
    uint64_t v5 = v71;
    int v7 = (void **)v69;
    uint64_t v8 = v70;
    unsigned __int8 v6 = v71;
  }
  if ((v6 & 0x80u) == 0)
  {
    unsigned int v10 = &v69;
  }
  else
  {
    uint64_t v5 = v8;
    unsigned int v10 = v7;
  }
  if (v5 >= 5)
  {
    long long v11 = (char *)v10 + v5;
    char v12 = v10;
    do
    {
      unsigned int v13 = (char *)memchr(v12, 76, v5 - 4);
      if (!v13) {
        break;
      }
      if (*(_DWORD *)v13 == 1128875340 && v13[4] == 65)
      {
        if (v13 == v11 || v13 - (char *)v10 == -1) {
          break;
        }
        if (a1[295] >= 0x30000u) {
          uint64_t v15 = "rwl";
        }
        else {
          uint64_t v15 = "raw";
        }
        sub_1DDA1A880(&__p, v15);
        unint64_t v16 = a2[2];
        unint64_t v17 = a2[1];
        if (v17 >= v16)
        {
          unint64_t v56 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
          unint64_t v57 = v56 + 1;
          if (v56 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_1DDA17F78();
          }
          unint64_t v58 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
          if (2 * v58 > v57) {
            unint64_t v57 = 2 * v58;
          }
          if (v58 >= 0x555555555555555) {
            unint64_t v59 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v59 = v57;
          }
          long long v76 = a2 + 2;
          if (v59) {
            uint64_t v60 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v59);
          }
          else {
            uint64_t v60 = 0;
          }
          uint64_t v61 = &v60[24 * v56];
          unsigned int v72 = v60;
          unint64_t v73 = v61;
          unsigned int v75 = &v60[24 * v59];
          long long v62 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *((void *)v61 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)uint64_t v61 = v62;
          memset(&__p, 0, sizeof(__p));
          uint64_t v74 = v61 + 24;
          sub_1DDA2A0E8(a2, &v72);
          uint64_t v63 = a2[1];
          sub_1DDA2A2C8((uint64_t)&v72);
          int v64 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
          a2[1] = v63;
          if (v64 < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          long long v18 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *(void *)(v17 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)unint64_t v17 = v18;
          a2[1] = v17 + 24;
        }
        sub_1DDA1A880(&__p, "leica");
        unint64_t v33 = a2[1];
        unint64_t v65 = a2[2];
        if (v33 >= v65)
        {
          unint64_t v35 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v33 - *a2) >> 3);
          unint64_t v66 = v35 + 1;
          if (v35 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_1DDA17F78();
          }
          unint64_t v67 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v65 - *a2) >> 3);
          if (2 * v67 > v66) {
            unint64_t v66 = 2 * v67;
          }
          if (v67 >= 0x555555555555555) {
            unint64_t v38 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v38 = v66;
          }
          long long v76 = a2 + 2;
          if (!v38)
          {
            unsigned int v39 = 0;
            goto LABEL_55;
          }
          goto LABEL_53;
        }
        goto LABEL_45;
      }
      char v12 = (void **)(v13 + 1);
      uint64_t v5 = v11 - (char *)v12;
    }
    while (v11 - (char *)v12 >= 5);
  }
  if (a1[295] >= 0x30000u) {
    uint64_t v19 = "rw2";
  }
  else {
    uint64_t v19 = "raw";
  }
  sub_1DDA1A880(&__p, v19);
  unint64_t v20 = a2[2];
  unint64_t v21 = a2[1];
  if (v21 >= v20)
  {
    unint64_t v23 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v21 - *a2) >> 3);
    unint64_t v24 = v23 + 1;
    if (v23 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v25 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v20 - *a2) >> 3);
    if (2 * v25 > v24) {
      unint64_t v24 = 2 * v25;
    }
    if (v25 >= 0x555555555555555) {
      unint64_t v26 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v26 = v24;
    }
    long long v76 = a2 + 2;
    if (v26) {
      unsigned int v27 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v26);
    }
    else {
      unsigned int v27 = 0;
    }
    int v28 = &v27[24 * v23];
    unsigned int v72 = v27;
    unint64_t v73 = v28;
    unsigned int v75 = &v27[24 * v26];
    long long v29 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v28 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)int v28 = v29;
    memset(&__p, 0, sizeof(__p));
    uint64_t v74 = v28 + 24;
    sub_1DDA2A0E8(a2, &v72);
    uint64_t v30 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v72);
    int v31 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v30;
    if (v31 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v22 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v21 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v21 = v22;
    a2[1] = v21 + 24;
  }
  sub_1DDA1A880(&__p, "panasonic");
  unint64_t v33 = a2[1];
  unint64_t v32 = a2[2];
  if (v33 >= v32)
  {
    unint64_t v35 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v33 - *a2) >> 3);
    unint64_t v36 = v35 + 1;
    if (v35 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v37 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v32 - *a2) >> 3);
    if (2 * v37 > v36) {
      unint64_t v36 = 2 * v37;
    }
    if (v37 >= 0x555555555555555) {
      unint64_t v38 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v38 = v36;
    }
    long long v76 = a2 + 2;
    if (v38) {
LABEL_53:
    }
      unsigned int v39 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v38);
    else {
      unsigned int v39 = 0;
    }
LABEL_55:
    uint64_t v40 = &v39[24 * v35];
    unsigned int v72 = v39;
    unint64_t v73 = v40;
    unsigned int v75 = &v39[24 * v38];
    long long v41 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v40 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)uint64_t v40 = v41;
    memset(&__p, 0, sizeof(__p));
    uint64_t v74 = v40 + 24;
    sub_1DDA2A0E8(a2, &v72);
    uint64_t v42 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v72);
    int v43 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v42;
    if (v43 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
LABEL_45:
    long long v34 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v33 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v33 = v34;
    a2[1] = v33 + 24;
  }
  sub_1DDA29B20((uint64_t)a1, &__p);
  unint64_t v44 = a2[2];
  unint64_t v45 = a2[1];
  if (v45 >= v44)
  {
    unint64_t v47 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v45 - *a2) >> 3);
    unint64_t v48 = v47 + 1;
    if (v47 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v49 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v44 - *a2) >> 3);
    if (2 * v49 > v48) {
      unint64_t v48 = 2 * v49;
    }
    if (v49 >= 0x555555555555555) {
      unint64_t v50 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v50 = v48;
    }
    long long v76 = a2 + 2;
    if (v50) {
      long long v51 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v50);
    }
    else {
      long long v51 = 0;
    }
    unsigned int v52 = &v51[24 * v47];
    unsigned int v72 = v51;
    unint64_t v73 = v52;
    unsigned int v75 = &v51[24 * v50];
    long long v53 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v52 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unsigned int v52 = v53;
    memset(&__p, 0, sizeof(__p));
    uint64_t v74 = v52 + 24;
    sub_1DDA2A0E8(a2, &v72);
    uint64_t v54 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v72);
    int v55 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v54;
    if (v55 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v46 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v45 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v45 = v46;
    a2[1] = v45 + 24;
  }
  if ((char)v71 < 0) {
    operator delete(v69);
  }
}

void sub_1DDA5D0E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  sub_1DDA2A044((void ***)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA5D16C(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1272);
}

double sub_1DDA5D174(uint64_t a1)
{
  return *(double *)(a1 + 1280);
}

double sub_1DDA5D17C(uint64_t a1)
{
  return *(double *)(a1 + 1288);
}

double sub_1DDA5D184(uint64_t a1)
{
  return *(double *)(a1 + 1296);
}

double sub_1DDA5D18C(uint64_t a1)
{
  return *(double *)(a1 + 1304);
}

void sub_1DDA5D194(_DWORD *a1@<X0>, void *a2@<X1>, _OWORD *a3@<X2>, void *a4@<X8>)
{
  v28[4] = *MEMORY[0x1E4F143B8];
  if (*((unsigned char *)a1 + 1216))
  {
    *a4 = 0;
    a4[1] = 0;
    if (!*((unsigned char *)a1 + 1224))
    {
      int v8 = a1[303];
      if ((v8 - 34826) > 4 || ((1 << (v8 - 10)) & 0x15) == 0)
      {
        if (v8 == 34316)
        {
          (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v19, a1);
          uint64_t v17 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
          LODWORD(v16) = 6;
          sub_1DDA5DD98(&v19, (unint64_t *)&v17, a2, a3, (int *)&v16, __p);
LABEL_27:
          long long v12 = *(_OWORD *)__p;
          __p[0] = 0;
          __p[1] = 0;
          *(_OWORD *)a4 = v12;
          if (v20) {
            sub_1DDA18310(v20);
          }
        }
        else
        {
          NSLog(&cfstr_D_0.isa, a1[303]);
        }
      }
      else
      {
        sub_1DDA1A880(__p, "D-LUX2");
        sub_1DDA1A880(v24, "D-LUX 3");
        sub_1DDA1A880(v25, "DIGILUX 3");
        sub_1DDA1A880(v26, "DMC-L1");
        sub_1DDA1A880(v27, "DMC-LX1");
        sub_1DDA1A880(v28, "DMC-LX2");
        sub_1DDA5DF6C((uint64_t)&v19, __p, 6);
        for (uint64_t i = 0; i != -18; i -= 3)
        {
          if (SHIBYTE(v28[i + 2]) < 0) {
            operator delete((void *)v28[i]);
          }
        }
        (*(void (**)(void **__return_ptr, _DWORD *))(*(void *)a1 + 224))(__p, a1);
        long long v11 = sub_1DDA2A530((uint64_t)&v19, __p);
        if (v23 < 0) {
          operator delete(__p[0]);
        }
        (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v17, a1);
        uint64_t v16 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
        if (&v20 == (std::__shared_weak_count **)v11)
        {
          sub_1DDA5E470(&v17, (unint64_t *)&v16, a2, a3, __p);
        }
        else
        {
          int v15 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 504))(a1);
          sub_1DDA5E2AC(&v17, (unint64_t *)&v16, a2, a3, &v15, __p);
        }
        long long v13 = *(_OWORD *)__p;
        __p[0] = 0;
        __p[1] = 0;
        *(_OWORD *)a4 = v13;
        if (v18) {
          sub_1DDA18310(v18);
        }
        sub_1DDA2A4CC((uint64_t)&v19, (char *)v20);
      }
      return;
    }
  }
  else
  {
    if (!*((unsigned char *)a1 + 1224))
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    *a4 = 0;
    a4[1] = 0;
  }
  switch(a1[305])
  {
    case 4:
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v19, a1);
      uint64_t v17 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
      if (!*((unsigned char *)a1 + 1224)) {
        sub_1DDA1D8BC();
      }
      char v21 = 1;
      LODWORD(v16) = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 520))(a1);
      sub_1DDA5E61C(&v19, (unint64_t *)&v17, a2, a3, a1 + 305, &v21, (int *)&v16, __p);
      goto LABEL_27;
    case 5:
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v19, a1);
      uint64_t v17 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
      sub_1DDA5E938(&v19, (unint64_t *)&v17, a2, a3, __p);
      goto LABEL_27;
    case 6:
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v19, a1);
      uint64_t v17 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
      if (!*((unsigned char *)a1 + 1224)) {
        sub_1DDA1D8BC();
      }
      char v21 = 0;
      LODWORD(v16) = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 520))(a1);
      sub_1DDA5E61C(&v19, (unint64_t *)&v17, a2, a3, a1 + 305, &v21, (int *)&v16, __p);
      goto LABEL_27;
    case 7:
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v19, a1);
      uint64_t v17 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
      LOBYTE(v15) = 0;
      sub_1DDA5E774(&v19, (unint64_t *)&v17, a2, a3, (char *)&v15, __p);
      goto LABEL_27;
    case 8:
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v19, a1);
      uint64_t v17 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
      sub_1DDA5EA50(&v19, (unint64_t *)&v17, a2, a3, (uint64_t)(a1 + 344), __p);
      goto LABEL_27;
    default:
      return;
  }
}

void sub_1DDA5D96C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, std::__shared_weak_count *a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a16) {
    sub_1DDA18310(a16);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA5DA94(uint64_t a1)
{
  sub_1DDA5DB9C(a1);

  JUMPOUT(0x1E01C3DC0);
}

__n128 sub_1DDA5DACC(uint64_t a1, __n128 *a2)
{
  uint64_t v4 = *(void **)a1;
  if (v4)
  {
    *(void *)(a1 + 8) = v4;
    operator delete(v4);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
  }
  __n128 result = *a2;
  *(__n128 *)a1 = *a2;
  *(void *)(a1 + 16) = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

_DWORD *sub_1DDA5DB20(_DWORD *result, unsigned __int16 *a2)
{
  int v2 = *a2;
  BOOL v3 = __OFADD__(*result, v2);
  *result += v2;
  if (v3)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA5DB88(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA5DB9C(uint64_t a1)
{
  *(void *)a1 = &unk_1F395E5A0;
  sub_1DDA1E3C4(a1 + 1376);
  sub_1DDA2A4CC(a1 + 1232, *(char **)(a1 + 1240));

  return sub_1DDA49A44(a1);
}

void sub_1DDA5DC00(void *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, void *a5@<X8>)
{
  unsigned int v10 = operator new(0x6B8uLL);
  sub_1DDA5DC94(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA5DC80(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA5DC94(void *a1, void *a2, char *a3, void **a4, void **a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395E8F0;
  sub_1DDA598C0((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1DDA5DCE8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA5DCFC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E8F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA5DD1C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E8F0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA5DD70(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

void sub_1DDA5DD98(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, int *a5@<X5>, void *a6@<X8>)
{
  long long v12 = operator new(0xE0uLL);
  sub_1DDA5DE3C((uint64_t)v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;

  sub_1DDA1AF34((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1DDA5DE28(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA5DE3C(uint64_t a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5, int *a6)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395E940;
  int v7 = *a6;
  sub_1DDAA58A8(a1 + 24, a2, *a3, a4, a5);
  *(void *)(a1 + 24) = &unk_1F397AAA0;
  *(_DWORD *)(a1 + 212) = v7;
  *(unsigned char *)(a1 + 216) = 1;
  *(_DWORD *)(a1 + 220) = 12;
  return a1;
}

void sub_1DDA5DEBC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA5DED0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E940;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA5DEF0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E940;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA5DF44(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_1DDA5DF6C(uint64_t a1, void **a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = a1 + 8;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 24 * a3;
    do
    {
      sub_1DDA5DFF0((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 3;
      v6 -= 24;
    }
    while (v6);
  }
  return a1;
}

void sub_1DDA5DFD8(_Unwind_Exception *a1)
{
  sub_1DDA2A4CC(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1DDA5DFF0(uint64_t **a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)sub_1DDA5E074(a1, a2, &v10, &v9, a3);
  __n128 result = *v6;
  if (!*v6)
  {
    sub_1DDA5E20C((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1DDA25078(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

void **sub_1DDA5E074(void *a1, uint64_t a2, void ***a3, uint64_t *a4, void **a5)
{
  uint64_t v9 = (void **)(a1 + 1);
  if (a1 + 1 == (void *)a2 || (sub_1DDA2A5B0(a5, (void **)(a2 + 32)) & 0x80) != 0)
  {
    if (*a1 == a2)
    {
      long long v12 = (void *)a2;
    }
    else
    {
      long long v11 = *(void **)a2;
      if (*(void *)a2)
      {
        do
        {
          long long v12 = v11;
          long long v11 = (void *)v11[1];
        }
        while (v11);
      }
      else
      {
        uint64_t v16 = (void *)a2;
        do
        {
          long long v12 = (void *)v16[2];
          BOOL v17 = *v12 == (void)v16;
          uint64_t v16 = v12;
        }
        while (v17);
      }
      if ((sub_1DDA2A5B0(v12 + 4, a5) & 0x80) == 0) {
        goto LABEL_17;
      }
    }
    if (*(void *)a2)
    {
      *a3 = (void **)v12;
      return (void **)(v12 + 1);
    }
    else
    {
      *a3 = (void **)a2;
      return (void **)a2;
    }
  }
  if ((sub_1DDA2A5B0((void *)(a2 + 32), a5) & 0x80) == 0)
  {
    *a3 = (void **)a2;
    *a4 = a2;
    return (void **)a4;
  }
  a4 = (uint64_t *)(a2 + 8);
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    unsigned int v14 = *(void ***)(a2 + 8);
    do
    {
      int v15 = v14;
      unsigned int v14 = (void **)*v14;
    }
    while (v14);
  }
  else
  {
    uint64_t v19 = (void **)a2;
    do
    {
      int v15 = (void **)v19[2];
      BOOL v17 = *v15 == v19;
      uint64_t v19 = v15;
    }
    while (!v17);
  }
  if (v15 == v9)
  {
LABEL_29:
    if (v13)
    {
      *a3 = v15;
      return v15;
    }
    else
    {
      *a3 = (void **)a2;
    }
    return (void **)a4;
  }
  if ((sub_1DDA2A5B0(a5, v15 + 4) & 0x80) != 0)
  {
    uint64_t v13 = *a4;
    goto LABEL_29;
  }
LABEL_17:

  return (void **)sub_1DDA4B7C4((uint64_t)a1, a3, a5);
}

void *sub_1DDA5E20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x38uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  __n128 result = v6 + 32;
  if (*(char *)(a2 + 23) < 0)
  {
    __n128 result = sub_1DDA2639C(result, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__n128 result = *(_OWORD *)a2;
    result[2] = *(void *)(a2 + 16);
  }
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1DDA5E290(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_1DDA4B900(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1DDA5E2AC(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, int *a5@<X5>, void *a6@<X8>)
{
  long long v12 = operator new(0xD8uLL);
  sub_1DDA5E350((uint64_t)v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;

  sub_1DDA1AF34((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1DDA5E33C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA5E350(uint64_t a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5, int *a6)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395E990;
  int v7 = *a6;
  sub_1DDAA58A8(a1 + 24, a2, *a3, a4, a5);
  *(void *)(a1 + 24) = &unk_1F3963418;
  *(_DWORD *)(a1 + 212) = v7;
  return a1;
}

void sub_1DDA5E3C0(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA5E3D4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E990;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA5E3F4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E990;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA5E448(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1DDA5E470(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, void *a5@<X8>)
{
  unsigned int v10 = operator new(0xD8uLL);
  sub_1DDA5E504(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA5E4F0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA5E504(void *a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395E9E0;
  sub_1DDAA58A8((uint64_t)(a1 + 3), a2, *a3, a4, a5);
  a1[3] = &unk_1F3963328;
  return a1;
}

void sub_1DDA5E56C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA5E580(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E9E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA5E5A0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395E9E0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA5E5F4(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1DDA5E61C(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, int *a5@<X5>, char *a6@<X6>, int *a7@<X7>, void *a8@<X8>)
{
  uint64_t v16 = operator new(0xE0uLL);
  sub_1DDA5E6D8((uint64_t)v16, a1, a2, a3, a4, a5, a6, a7);
  *a8 = v16 + 3;
  a8[1] = v16;

  sub_1DDA1AF34((uint64_t)a8, v16 + 4, (uint64_t)(v16 + 3));
}

void sub_1DDA5E6C4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA5E6D8(uint64_t a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5, int *a6, char *a7, int *a8)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395E940;
  int v9 = *a6;
  char v10 = *a7;
  int v11 = *a8;
  sub_1DDAA58A8(a1 + 24, a2, *a3, a4, a5);
  *(void *)(a1 + 24) = &unk_1F397AAA0;
  *(_DWORD *)(a1 + 212) = v9;
  *(unsigned char *)(a1 + 216) = v10;
  *(_DWORD *)(a1 + 220) = v11;
  return a1;
}

void sub_1DDA5E760(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA5E774(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, char *a5@<X5>, void *a6@<X8>)
{
  long long v12 = operator new(0xD8uLL);
  sub_1DDA5E818((uint64_t)v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;

  sub_1DDA1AF34((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1DDA5E804(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA5E818(uint64_t a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5, char *a6)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395EA30;
  char v7 = *a6;
  sub_1DDAA58A8(a1 + 24, a2, *a3, a4, a5);
  *(void *)(a1 + 24) = &unk_1F39859C0;
  *(unsigned char *)(a1 + 210) = v7;
  return a1;
}

void sub_1DDA5E888(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA5E89C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395EA30;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA5E8BC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395EA30;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA5E910(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1DDA5E938(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, void *a5@<X8>)
{
  char v10 = operator new(0xD8uLL);
  sub_1DDA5E9CC((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA5E9B8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA5E9CC(uint64_t a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395EA30;
  sub_1DDAA58A8(a1 + 24, a2, *a3, a4, a5);
  *(void *)(a1 + 24) = &unk_1F39859C0;
  *(unsigned char *)(a1 + 210) = 1;
  return a1;
}

void sub_1DDA5EA3C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA5EA50(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, uint64_t a5@<X5>, void *a6@<X8>)
{
  long long v12 = operator new(0x20268uLL);
  sub_1DDA5EAF8(v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;

  sub_1DDA1AF34((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1DDA5EAE4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA5EAF8(void *a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5, uint64_t a6)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395EA80;
  sub_1DDA5EBF4((uint64_t)(a1 + 3), a2, *a3, a4, a5, a6);
  return a1;
}

void sub_1DDA5EB44(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA5EB58(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395EA80;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA5EB78(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395EA80;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA5EBCC(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_1DDA5EBF4(uint64_t a1, void *a2, unint64_t a3, void *a4, _OWORD *a5, uint64_t a6)
{
  int v9 = (void *)sub_1DDAA58A8(a1, a2, a3, a4, a5);
  *int v9 = &unk_1F395A8F8;
  sub_1DDA5EC88((uint64_t)(v9 + 24), a6);
  *(unsigned char *)(a1 + 512) = 0;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(void *)(a1 + 576) = *a4;
  *(void *)(a1 + 131656) = 0;
  return a1;
}

void sub_1DDA5EC74(_Unwind_Exception *a1)
{
  sub_1DDA18384(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA5EC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DDA5EE74(a1, a2);
  sub_1DDA5EF0C(v4 + 32, a2 + 32);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 79) = *(_DWORD *)(a2 + 79);
  *(_OWORD *)(a1 + 64) = v5;
  sub_1DDA5EF0C(a1 + 88, a2 + 88);
  sub_1DDA5EF0C(a1 + 120, a2 + 120);
  int v6 = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 155) = *(_DWORD *)(a2 + 155);
  *(_DWORD *)(a1 + 152) = v6;
  sub_1DDA5EFA4(a1 + 160, a2 + 160);
  sub_1DDA5EF0C(a1 + 192, a2 + 192);
  sub_1DDA5EFA4(a1 + 224, a2 + 224);
  sub_1DDA5EF0C(a1 + 256, a2 + 256);
  sub_1DDA5EF0C(a1 + 288, a2 + 288);
  return a1;
}

void sub_1DDA5ED70(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 280))
  {
    char v10 = *v8;
    if (*v8)
    {
      *(void *)(v1 + 264) = v10;
      operator delete(v10);
    }
  }
  if (*(unsigned char *)(v1 + 248))
  {
    int v11 = *v7;
    if (*v7)
    {
      *(void *)(v1 + 232) = v11;
      operator delete(v11);
    }
  }
  if (*(unsigned char *)(v1 + 216))
  {
    long long v12 = *v6;
    if (*v6)
    {
      *(void *)(v1 + 200) = v12;
      operator delete(v12);
    }
  }
  if (*(unsigned char *)(v1 + 184))
  {
    uint64_t v13 = *v5;
    if (*v5)
    {
      *(void *)(v1 + 168) = v13;
      operator delete(v13);
    }
  }
  if (*(unsigned char *)(v1 + 144))
  {
    unsigned int v14 = *v4;
    if (*v4)
    {
      *(void *)(v1 + 128) = v14;
      operator delete(v14);
    }
  }
  if (*(unsigned char *)(v1 + 112))
  {
    int v15 = *v3;
    if (*v3)
    {
      *(void *)(v1 + 96) = v15;
      operator delete(v15);
    }
  }
  if (*(unsigned char *)(v1 + 56))
  {
    uint64_t v16 = *v2;
    if (*v2)
    {
      *(void *)(v1 + 40) = v16;
      operator delete(v16);
    }
  }
  if (*(unsigned char *)(v1 + 24))
  {
    BOOL v17 = *(void **)v1;
    if (*(void *)v1)
    {
      *(void *)(v1 + 8) = v17;
      operator delete(v17);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA5EE74(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 24) = 0;
  sub_1DDA5EEC0((void *)a1, a2);
  return a1;
}

void sub_1DDA5EEA4(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 24)) {
    sub_1DDBF495C((void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA5EEC0(void *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 24))
  {
    int v2 = result;
    *__n128 result = 0;
    result[1] = 0;
    result[2] = 0;
    __n128 result = sub_1DDA1D984(result, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 2);
    *((unsigned char *)v2 + 24) = 1;
  }
  return result;
}

uint64_t sub_1DDA5EF0C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 24) = 0;
  sub_1DDA5EF58((void *)a1, a2);
  return a1;
}

void sub_1DDA5EF3C(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 24)) {
    sub_1DDBF495C((void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA5EF58(void *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 24))
  {
    int v2 = result;
    *__n128 result = 0;
    result[1] = 0;
    result[2] = 0;
    __n128 result = sub_1DDA1D908(result, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 1);
    *((unsigned char *)v2 + 24) = 1;
  }
  return result;
}

uint64_t sub_1DDA5EFA4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 24) = 0;
  sub_1DDA5EEC0((void *)a1, a2);
  return a1;
}

void sub_1DDA5EFD4(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 24)) {
    sub_1DDBF495C((void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA5EFF0(void *__p@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 8) = __p;
  operator delete(__p);
}

id sub_1DDA5EFF8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v43[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *MEMORY[0x1E4F30058];
  uint64_t v34 = *MEMORY[0x1E4F30038];
  uint64_t v35 = v5;
  v42[0] = MEMORY[0x1E4F1CC38];
  v42[1] = @"com.canon.cr3-raw-image";
  uint64_t v6 = *MEMORY[0x1E4F30050];
  uint64_t v36 = *MEMORY[0x1E4F30018];
  void v42[2] = @".cr3.";
  uint64_t v42[3] = &unk_1F39ADFB8;
  v42[4] = &unk_1F39ADFD0;
  char v7 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA5F2F0, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E4F30040], *MEMORY[0x1E4F30048]);
  v42[5] = v7;
  uint64_t v37 = *MEMORY[0x1E4F30000];
  int v11 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v8, (uint64_t)sub_1DDA5F3FC, v9, v10);
  v42[6] = v11;
  uint64_t v38 = *MEMORY[0x1E4F30020];
  int v15 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v12, (uint64_t)sub_1DDA5F408, v13, v14);
  v42[7] = v15;
  uint64_t v39 = *MEMORY[0x1E4F30008];
  uint64_t v19 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v16, (uint64_t)sub_1DDA818EC, v17, v18);
  v42[8] = v19;
  uint64_t v40 = *MEMORY[0x1E4F30028];
  char v23 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v20, (uint64_t)sub_1DDA5F414, v21, v22);
  v42[9] = v23;
  uint64_t v41 = *MEMORY[0x1E4F30030];
  unsigned int v27 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v24, (uint64_t)sub_1DDA5F420, v25, v26);
  v42[10] = v27;
  long long v29 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v43[0] = v29;
  unint64_t v32 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v30, (uint64_t)v43, 1, v31);

  return v32;
}

void sub_1DDA5F290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA5F2F0(uint64_t a1, unint64_t a2)
{
  unint64_t v12 = a2;
  sub_1DDA18500(v10, &v12);
  sub_1DDA199C4(a1, (uint64_t)v10, 0, &v11);
  sub_1DDA29F88(v10, (uint64_t *)&v11, 2);
  unsigned int v3 = sub_1DDA19EC8(v11);
  int v4 = sub_1DDA19EC8(v11);
  int v5 = sub_1DDA19EC8(v11);
  BOOL v8 = v3 >= 0xC && v12 > v3 && v4 == 1718909296 && v5 == 1668446240;
  sub_1DDA2A000(v10);
  if (*((void *)&v11 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v11 + 1));
  }
  return v8;
}

void sub_1DDA5F3B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13)
{
  if (a13) {
    sub_1DDA18310(a13);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DDA5F3A4);
}

void sub_1DDA5F3FC(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA5F408(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA5F414(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, (void *)qword_1EAB8AE78);
}

uint64_t sub_1DDA5F420(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, (void *)qword_1EAB8AE78);
}

void sub_1DDA5F42C(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v11 = a2;
  id v10 = a3;
  id v9 = a4;
  sub_1DDA70700(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;
}

void sub_1DDA5F4AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

double sub_1DDA5F4C8(uint64_t a1, void *a2, char a3, void *a4, void *a5)
{
  uint64_t v5 = sub_1DDA26868(a1, a2, a3, a4, a5);
  *(void *)uint64_t v5 = &unk_1F395EAF0;
  *(void *)(v5 + 504) = 0;
  *(_DWORD *)(v5 + 512) = -1;
  *(unsigned char *)(v5 + 604) = 0;
  *(unsigned char *)(v5 + 608) = 0;
  *(unsigned char *)(v5 + 612) = 0;
  *(unsigned char *)(v5 + 616) = 0;
  *(unsigned char *)(v5 + 620) = 0;
  *(unsigned char *)(v5 + 624) = 0;
  *(unsigned char *)(v5 + 628) = 0;
  *(unsigned char *)(v5 + 632) = 0;
  *(unsigned char *)(v5 + 636) = 0;
  *(unsigned char *)(v5 + 640) = 0;
  *(unsigned char *)(v5 + 644) = 0;
  *(unsigned char *)(v5 + 648) = 0;
  *(unsigned char *)(v5 + 652) = 0;
  *(unsigned char *)(v5 + 656) = 0;
  *(unsigned char *)(v5 + 660) = 0;
  *(unsigned char *)(v5 + 664) = 0;
  *(unsigned char *)(v5 + 668) = 0;
  *(unsigned char *)(v5 + 672) = 0;
  *(unsigned char *)(v5 + 676) = 0;
  *(unsigned char *)(v5 + 680) = 0;
  *(unsigned char *)(v5 + 684) = 0;
  *(unsigned char *)(v5 + 688) = 0;
  *(unsigned char *)(v5 + 692) = 0;
  *(void *)(v5 + 720) = 0;
  *(unsigned char *)(v5 + 728) = 0;
  *(unsigned char *)(v5 + 732) = 0;
  *(unsigned char *)(v5 + 736) = 0;
  *(unsigned char *)(v5 + 600) = 0;
  double result = 0.0;
  *(_OWORD *)(v5 + 568) = 0u;
  *(_OWORD *)(v5 + 584) = 0u;
  *(_OWORD *)(v5 + 536) = 0u;
  *(_OWORD *)(v5 + 552) = 0u;
  *(_OWORD *)(v5 + 520) = 0u;
  return result;
}

void sub_1DDA5F58C(uint64_t a1)
{
  uint64_t v699 = *MEMORY[0x1E4F143B8];
  context = (void *)MEMORY[0x1E01C4510]();
  uint64_t v649 = a1;
  sub_1DDA27D28(a1, &__p);
  LODWORD(__src) = 0;
  sub_1DDA1A94C(v687, (uint64_t *)&__p, (uint64_t)&__src, 0);
  sub_1DDA1AA18(v687);
  if (v676) {
    sub_1DDA18310(v676);
  }
  sub_1DDA27D28(a1, &__p);
  sub_1DDA29F88(v686, (uint64_t *)&__p, 2);
  sub_1DDA2A000(v686);
  if (v676) {
    sub_1DDA18310(v676);
  }
  sub_1DDA27D28(a1, &__p);
  sub_1DDA61850(a1, (const char *)&__p, 0xFFFFFFFFLL, v2, v3);
  id v639 = (id)objc_claimAutoreleasedReturnValue();
  if (v676) {
    sub_1DDA18310(v676);
  }
  v636 = (*(void (**)(uint64_t))(*(void *)a1 + 400))(a1);
  v635 = objc_msgSend_valueForKeyPath_(v639, v4, @"moov.uuid-85C0B687-820F-11E0-8111-F4CE462B6A48.CMT1", v5, v6);
  if (!v635)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  char v11 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v7, v8, v9, v10);
  v684[0] = MEMORY[0x1E4F143A8];
  v684[1] = 3221225472;
  v684[2] = sub_1DDA62190;
  v684[3] = &unk_1E6D04E78;
  id v12 = v11;
  id v685 = v12;
  v624 = v12;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v635, v13, (uint64_t)v684, v14, v15);
  objc_msgSend_setObject_forKeyedSubscript_(v636, v16, (uint64_t)v12, *MEMORY[0x1E4F2FD40], v17);
  v631 = objc_msgSend_valueForKeyPath_(v639, v18, @"moov.uuid-85C0B687-820F-11E0-8111-F4CE462B6A48.CMT2", v19, v20);
  if (!v631)
  {
    v616 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v616, "RawCameraException");
    __cxa_throw(v616, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v25 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v21, v22, v23, v24);
  v682[0] = MEMORY[0x1E4F143A8];
  v682[1] = 3221225472;
  v682[2] = sub_1DDA622B4;
  v682[3] = &unk_1E6D04E78;
  id v26 = v25;
  id v683 = v26;
  v638 = v26;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v631, v27, (uint64_t)v682, v28, v29);
  objc_msgSend_setObject_forKeyedSubscript_(v636, v30, (uint64_t)v26, *MEMORY[0x1E4F2F800], v31);
  v634 = objc_msgSend_valueForKeyPath_(v639, v32, @"moov.uuid-85C0B687-820F-11E0-8111-F4CE462B6A48.CMT3", v33, v34);
  if (!v634)
  {
    v617 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v617, "RawCameraException");
    __cxa_throw(v617, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v39 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v35, v36, v37, v38);
  v680[0] = MEMORY[0x1E4F143A8];
  v680[1] = 3221225472;
  v680[2] = sub_1DDA623D8;
  v680[3] = &unk_1E6D04E78;
  id v40 = v39;
  id v681 = v40;
  v623 = v40;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v634, v41, (uint64_t)v680, v42, v43);
  objc_msgSend_setObject_forKeyedSubscript_(v636, v44, (uint64_t)v40, *MEMORY[0x1E4F2FC28], v45);
  v630 = objc_msgSend_valueForKeyPath_(v639, v46, @"moov.uuid-85C0B687-820F-11E0-8111-F4CE462B6A48.CMT4", v47, v48);
  if (!v630)
  {
    v618 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v618, "RawCameraException");
    __cxa_throw(v618, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  long long v53 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v49, v50, v51, v52);
  v678[0] = MEMORY[0x1E4F143A8];
  v678[1] = 3221225472;
  v678[2] = sub_1DDA624FC;
  v678[3] = &unk_1E6D04E78;
  id v54 = v53;
  id v679 = v54;
  v622 = v54;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v630, v55, (uint64_t)v678, v56, v57);
  objc_msgSend_setObject_forKeyedSubscript_(v636, v58, (uint64_t)v54, *MEMORY[0x1E4F2FA18], v59);
  uint64_t v63 = objc_msgSend_stringWithFormat_(NSString, v60, @"%@.val", v61, v62, *MEMORY[0x1E4F2FD60]);
  objc_msgSend_valueForKeyPath_(v635, v64, (uint64_t)v63, v65, v66);
  id v67 = objc_claimAutoreleasedReturnValue();
  unsigned int v72 = (char *)objc_msgSend_UTF8String(v67, v68, v69, v70, v71);

  long long v76 = objc_msgSend_stringWithFormat_(NSString, v73, @"%@.val", v74, v75, *MEMORY[0x1E4F2FD68]);
  objc_msgSend_valueForKeyPath_(v635, v77, (uint64_t)v76, v78, v79);
  id v80 = objc_claimAutoreleasedReturnValue();
  unsigned int v85 = (char *)objc_msgSend_UTF8String(v80, v81, v82, v83, v84);

  if (v72) {
    sub_1DDA1AB54((std::string *)(v649 + 520), v72);
  }
  if (v85) {
    sub_1DDA1AB54((std::string *)(v649 + 544), v85);
  }
  uint64_t v89 = objc_msgSend_valueForKeyPath_(v634, v86, @"ModelID.val", v87, v88);
  *(_DWORD *)(v649 + 512) = objc_msgSend_unsignedLongValue(v89, v90, v91, v92, v93);

  uint64_t v97 = objc_msgSend_objectForKeyedSubscript_(v634, v94, @"SensorInfo", v95, v96);
  v637 = v97;
  if (!v97)
  {
    v619 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v619, "RawCameraException");
    __cxa_throw(v619, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v101 = objc_msgSend_valueForKeyPath_(v97, v98, @"parsedVal.SensorWidth", v99, v100);
  *(_DWORD *)(v649 + 576) = objc_msgSend_unsignedIntValue(v101, v102, v103, v104, v105);

  uint64_t v109 = objc_msgSend_valueForKeyPath_(v637, v106, @"parsedVal.SensorHeight", v107, v108);
  *(_DWORD *)(v649 + 580) = objc_msgSend_unsignedIntValue(v109, v110, v111, v112, v113);

  uint64_t v117 = objc_msgSend_valueForKeyPath_(v637, v114, @"parsedVal.SensorLeftBorder", v115, v116);
  *(_DWORD *)(v649 + 584) = objc_msgSend_unsignedIntValue(v117, v118, v119, v120, v121);

  char v125 = objc_msgSend_valueForKeyPath_(v637, v122, @"parsedVal.SensorTopBorder", v123, v124);
  *(_DWORD *)(v649 + 588) = objc_msgSend_unsignedIntValue(v125, v126, v127, v128, v129);

  id v133 = objc_msgSend_valueForKeyPath_(v637, v130, @"parsedVal.SensorRightBorder", v131, v132);
  *(_DWORD *)(v649 + 592) = objc_msgSend_unsignedIntValue(v133, v134, v135, v136, v137);

  uint64_t v141 = objc_msgSend_valueForKeyPath_(v637, v138, @"parsedVal.SensorBottomBorder", v139, v140);
  *(_DWORD *)(v649 + 596) = objc_msgSend_unsignedIntValue(v141, v142, v143, v144, v145);

  v620 = objc_msgSend_objectForKeyedSubscript_(v638, v146, *MEMORY[0x1E4F2F910], v147, v148);
  uint64_t v153 = v649;
  unsigned int v157 = objc_msgSend_intValue(v620, v149, v150, v151, v152) - 1;
  if (v157 < 7
    && (objc_msgSend_objectForKeyedSubscript_(v638, v154, **((void **)&unk_1E6D04F40 + (int)v157), v155, v156),
        (uint64_t v158 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    v621 = v158;
    LODWORD(v665[0]) = objc_msgSend_unsignedIntValue(v158, v154, v159, v155, v156);
    sub_1DDA1A880(&__p, "IFD0:EXIF");
    __n128 __src = &__p;
    double v160 = (char *)sub_1DDA52108((uint64_t **)(v649 + 192), &__p, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src);
    sub_1DDA17E28(v160 + 56, (char *)v665, (uint64_t)v665 + 4, 1uLL);
    if (SHIBYTE(v677) < 0) {
      operator delete(__p);
    }
  }
  else
  {
    v621 = 0;
  }
  v626 = objc_msgSend_objectForKeyedSubscript_(v638, v154, *MEMORY[0x1E4F2F828], v155, v156);
  if (v626)
  {
    objc_msgSend_doubleValue(v626, v161, v162, v163, v164);
    uint64_t v166 = v165;
    sub_1DDA1A880(&__p, "IFD0:EXIF");
    __n128 __src = &__p;
    *((void *)sub_1DDA70898((uint64_t **)(v649 + 288), &__p, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src) + 7) = v166;
    if (SHIBYTE(v677) < 0) {
      operator delete(__p);
    }
  }
  v627 = objc_msgSend_objectForKeyedSubscript_(v638, v161, *MEMORY[0x1E4F2F920], v163, v164);
  if (v627)
  {
    objc_msgSend_doubleValue(v627, v167, v168, v169, v170);
    uint64_t v172 = v171;
    sub_1DDA1A880(&__p, "IFD0:EXIF");
    __n128 __src = &__p;
    *((void *)sub_1DDA70898((uint64_t **)(v649 + 312), &__p, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src) + 7) = v172;
    if (SHIBYTE(v677) < 0) {
      operator delete(__p);
    }
  }
  v628 = objc_msgSend_objectForKeyedSubscript_(v638, v167, *MEMORY[0x1E4F2F830], v169, v170);
  if (v628)
  {
    objc_msgSend_doubleValue(v628, v173, v174, v175, v176);
    uint64_t v178 = v177;
    sub_1DDA1A880(&__p, "IFD0:EXIF");
    __n128 __src = &__p;
    *((void *)sub_1DDA70898((uint64_t **)(v649 + 336), &__p, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src) + 7) = v178;
    if (SHIBYTE(v677) < 0) {
      operator delete(__p);
    }
  }
  v629 = objc_msgSend_objectForKeyedSubscript_(v638, v173, *MEMORY[0x1E4F2F850], v175, v176);
  if (v629)
  {
    objc_msgSend_doubleValue(v629, v179, v180, v181, v182);
    uint64_t v184 = v183;
    sub_1DDA1A880(&__p, "IFD0:EXIF");
    __n128 __src = &__p;
    *((void *)sub_1DDA70898((uint64_t **)(v649 + 384), &__p, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src) + 7) = v184;
    if (SHIBYTE(v677) < 0) {
      operator delete(__p);
    }
  }
  v632 = objc_msgSend_valueForKeyPath_(v639, v179, @"moov.uuid-85C0B687-820F-11E0-8111-F4CE462B6A48.THMB", v181, v182);
  if (v632)
  {
    uint64_t v188 = objc_msgSend_objectForKeyedSubscript_(v632, v185, @"thumbnailOffset", v186, v187);
    v193 = v188;
    if (v188)
    {
      *(_DWORD *)(v649 + 664) = objc_msgSend_unsignedIntValue(v188, v189, v190, v191, v192);
      *(unsigned char *)(v649 + 668) = 1;
    }

    uint64_t v197 = objc_msgSend_objectForKeyedSubscript_(v632, v194, @"thumbnailLength", v195, v196);
    uint64_t v202 = v197;
    if (v197)
    {
      *(_DWORD *)(v649 + 672) = objc_msgSend_unsignedIntValue(v197, v198, v199, v200, v201);
      *(unsigned char *)(v649 + 676) = 1;
    }

    v206 = objc_msgSend_objectForKeyedSubscript_(v632, v203, @"thumbnailWidth", v204, v205);
    uint64_t v211 = v206;
    if (v206)
    {
      *(_DWORD *)(v649 + 680) = objc_msgSend_unsignedIntValue(v206, v207, v208, v209, v210);
      *(unsigned char *)(v649 + 684) = 1;
    }

    uint64_t v215 = objc_msgSend_objectForKeyedSubscript_(v632, v212, @"thumbnailHeight", v213, v214);
    int v220 = v215;
    if (v215)
    {
      *(_DWORD *)(v649 + 688) = objc_msgSend_unsignedIntValue(v215, v216, v217, v218, v219);
      *(unsigned char *)(v649 + 692) = 1;
    }

    uint64_t v153 = v649;
  }
  v633 = objc_msgSend_valueForKeyPath_(v639, v185, @"uuid-EAF42B5E-1C98-4B88-B9FB-B7DC406E4D16.PRVW", v186, v187);
  if (v633)
  {
    v225 = objc_msgSend_objectForKeyedSubscript_(v633, v221, @"previewOffset", v223, v224);
    uint64_t v230 = v225;
    if (v225)
    {
      *(_DWORD *)(v153 + 632) = objc_msgSend_unsignedIntValue(v225, v226, v227, v228, v229);
      *(unsigned char *)(v153 + 636) = 1;
    }

    uint64_t v234 = objc_msgSend_objectForKeyedSubscript_(v633, v231, @"previewLength", v232, v233);
    v239 = v234;
    if (v234)
    {
      *(_DWORD *)(v649 + 640) = objc_msgSend_unsignedIntValue(v234, v235, v236, v237, v238);
      *(unsigned char *)(v649 + 644) = 1;
    }

    uint64_t v243 = objc_msgSend_objectForKeyedSubscript_(v633, v240, @"previewWidth", v241, v242);
    uint64_t v248 = v243;
    if (v243)
    {
      *(_DWORD *)(v649 + 648) = objc_msgSend_unsignedIntValue(v243, v244, v245, v246, v247);
      *(unsigned char *)(v649 + 652) = 1;
    }

    uint64_t v252 = objc_msgSend_objectForKeyedSubscript_(v633, v249, @"previewHeight", v250, v251);
    v257 = v252;
    if (v252)
    {
      *(_DWORD *)(v649 + 656) = objc_msgSend_unsignedIntValue(v252, v253, v254, v255, v256);
      *(unsigned char *)(v649 + 660) = 1;
    }
  }
  v640 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v221, v222, v223, v224);
  long long v673 = 0u;
  long long v674 = 0u;
  long long v671 = 0u;
  long long v672 = 0u;
  objc_msgSend_valueForKeyPath_(v639, v258, @"moov.trak", v259, v260);
  obuint64_t j = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v646 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v261, (uint64_t)&v671, (uint64_t)v698, 16);
  if (v646)
  {
    uint64_t v644 = *(void *)v672;
    v641 = (uint64_t **)(v649 + 264);
    v642 = (uint64_t **)(v649 + 120);
    do
    {
      uint64_t v659 = 0;
      do
      {
        if (*(void *)v672 != v644) {
          objc_enumerationMutation(obj);
        }
        uint64_t v265 = *(void **)(*((void *)&v671 + 1) + 8 * v659);
        uint64_t v266 = objc_msgSend_valueForKeyPath_(v265, v262, @"mdia.hdlr.ComponentSubType", v263, v264);
        int v271 = objc_msgSend_unsignedIntValue(v266, v267, v268, v269, v270);

        if (v271 == 1835365473)
        {
          v647 = objc_msgSend_valueForKeyPath_(v265, v262, @"mdia.minf.stbl.co64.Metadata", v263, v264);
          v653 = objc_msgSend_objectForKeyedSubscript_(v647, v322, @"ExifInfo7", v323, v324);
          v657 = objc_msgSend_objectForKeyedSubscript_(v647, v325, @"ExifInfo8", v326, v327);
          v655 = objc_msgSend_objectForKeyedSubscript_(v647, v328, @"ExifInfo9", v329, v330);
          v650 = objc_msgSend_valueForKeyPath_(v657, v331, @"37500.ColorData.parsedVal", v332, v333);
          if ((*(unsigned int (**)(uint64_t))(*(void *)v649 + 632))(v649))
          {
            v337 = objc_msgSend_objectForKeyedSubscript_(v650, v334, @"WB_RGGBLevelsAsShot", v335, v336);
            id v342 = v337;
            if (v337 && objc_msgSend_count(v337, v338, v339, v340, v341) == 4)
            {
              v343 = objc_msgSend_objectAtIndexedSubscript_(v342, v338, 0, v340, v341);
              LODWORD(__src) = objc_msgSend_unsignedIntValue(v343, v344, v345, v346, v347);
              v351 = objc_msgSend_objectAtIndexedSubscript_(v342, v348, 1, v349, v350);
              HIDWORD(__src) = objc_msgSend_unsignedIntValue(v351, v352, v353, v354, v355);
              v359 = objc_msgSend_objectAtIndexedSubscript_(v342, v356, 2, v357, v358);
              LODWORD(v696) = objc_msgSend_unsignedIntValue(v359, v360, v361, v362, v363);
              v367 = objc_msgSend_objectAtIndexedSubscript_(v342, v364, 3, v365, v366);
              HIDWORD(v696) = objc_msgSend_unsignedIntValue(v367, v368, v369, v370, v371);
              sub_1DDA1A880(&__p, "AsShotWhiteBalance");
              v665[0] = &__p;
              v372 = (char *)sub_1DDA52108(v642, &__p, (uint64_t)&unk_1DDBFB044, (_OWORD **)v665);
              sub_1DDA17E28(v372 + 56, (char *)&__src, (uint64_t)&v697, 4uLL);
              if (SHIBYTE(v677) < 0) {
                operator delete(__p);
              }
            }
            v373 = objc_msgSend_objectForKeyedSubscript_(v650, v338, @"PerChannelBlackLevel", v340, v341);
            v378 = v373;
            if (v373 && objc_msgSend_count(v373, v374, v375, v376, v377) == 4)
            {
              uint64_t v382 = 0;
              std::string __p = 0;
              v676 = 0;
              unint64_t v677 = 0;
              do
              {
                v383 = objc_msgSend_objectAtIndexedSubscript_(v378, v379, v382, v380, v381);
                objc_msgSend_doubleValue(v383, v384, v385, v386, v387);
                v389 = v388;
                v390 = v676;
                if ((unint64_t)v676 >= v677)
                {
                  v392 = (std::__shared_weak_count *)__p;
                  int64_t v393 = ((char *)v676 - (unsigned char *)__p) >> 3;
                  unint64_t v394 = v393 + 1;
                  if ((unint64_t)(v393 + 1) >> 61) {
                    sub_1DDA17F78();
                  }
                  uint64_t v395 = v677 - (void)__p;
                  if ((uint64_t)(v677 - (void)__p) >> 2 > v394) {
                    unint64_t v394 = v395 >> 2;
                  }
                  if ((unint64_t)v395 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v396 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v396 = v394;
                  }
                  if (v396)
                  {
                    v397 = (char *)sub_1DDA1814C((uint64_t)&v677, v396);
                    v392 = (std::__shared_weak_count *)__p;
                    v390 = v676;
                  }
                  else
                  {
                    v397 = 0;
                  }
                  v398 = (std::__shared_weak_count_vtbl **)&v397[8 * v393];
                  *v398 = v389;
                  p_shared_owners = (std::__shared_weak_count *)(v398 + 1);
                  while (v390 != v392)
                  {
                    uint64_t shared_weak_owners = v390[-1].__shared_weak_owners_;
                    v390 = (std::__shared_weak_count *)((char *)v390 - 8);
                    *--v398 = (std::__shared_weak_count_vtbl *)shared_weak_owners;
                  }
                  std::string __p = v398;
                  v676 = p_shared_owners;
                  unint64_t v677 = (unint64_t)&v397[8 * v396];
                  if (v392) {
                    operator delete(v392);
                  }
                }
                else
                {
                  v676->__vftable = v388;
                  p_shared_owners = (std::__shared_weak_count *)&v390->__shared_owners_;
                }
                v676 = p_shared_owners;

                ++v382;
              }
              while (v382 != 4);
              sub_1DDA1A880(&__src, "IFD0:EXIF:MAKERNOTE:BLACKLEVELS");
              v665[0] = &__src;
              v400 = (char *)sub_1DDA52108(v641, &__src, (uint64_t)&unk_1DDBFB044, (_OWORD **)v665) + 56;
              if (v400 != (char *)&__p) {
                sub_1DDA25BB0(v400, (char *)__p, (uint64_t)v676, ((char *)v676 - (unsigned char *)__p) >> 3);
              }
              if (SHIBYTE(v697) < 0) {
                operator delete(__src);
              }
              if (__p)
              {
                v676 = (std::__shared_weak_count *)__p;
                operator delete(__p);
              }
            }
          }
          else
          {
            v401 = objc_msgSend_valueForKeyPath_(v657, v334, @"37500.ColorData.val", v335, v336);
            id v342 = v401;
            if (v401)
            {
              std::string __p = 0;
              v676 = 0;
              unint64_t v677 = 0;
              v696 = 0;
              __n128 __src = 0;
              unint64_t v697 = 0;
              long long v667 = 0u;
              long long v668 = 0u;
              long long v669 = 0u;
              long long v670 = 0u;
              id v342 = v401;
              uint64_t v407 = objc_msgSend_countByEnumeratingWithState_objects_count_(v342, v402, (uint64_t)&v667, (uint64_t)v694, 16);
              if (v407)
              {
                uint64_t v408 = *(void *)v668;
                do
                {
                  for (uint64_t i = 0; i != v407; ++i)
                  {
                    if (*(void *)v668 != v408) {
                      objc_enumerationMutation(v342);
                    }
                    v410 = *(void **)(*((void *)&v667 + 1) + 8 * i);
                    int v411 = objc_msgSend_unsignedIntValue(v410, (const char *)v403, v404, v405, v406);
                    int v416 = v411;
                    v417 = v676;
                    if ((unint64_t)v676 >= v677)
                    {
                      v419 = (std::__shared_weak_count *)__p;
                      int64_t v420 = ((char *)v676 - (unsigned char *)__p) >> 2;
                      unint64_t v421 = v420 + 1;
                      if ((unint64_t)(v420 + 1) >> 62) {
                        sub_1DDA17F78();
                      }
                      uint64_t v422 = v677 - (void)__p;
                      if ((uint64_t)(v677 - (void)__p) >> 1 > v421) {
                        unint64_t v421 = v422 >> 1;
                      }
                      if ((unint64_t)v422 >= 0x7FFFFFFFFFFFFFFCLL) {
                        unint64_t v412 = 0x3FFFFFFFFFFFFFFFLL;
                      }
                      else {
                        unint64_t v412 = v421;
                      }
                      if (v412)
                      {
                        v423 = (char *)sub_1DDA17F90((uint64_t)&v677, v412);
                        v419 = (std::__shared_weak_count *)__p;
                        v417 = v676;
                      }
                      else
                      {
                        v423 = 0;
                      }
                      v424 = &v423[4 * v420];
                      *(_DWORD *)v424 = v416;
                      v418 = (std::__shared_weak_count *)(v424 + 4);
                      while (v417 != v419)
                      {
                        int shared_weak_owners_high = HIDWORD(v417[-1].__shared_weak_owners_);
                        v417 = (std::__shared_weak_count *)((char *)v417 - 4);
                        *((_DWORD *)v424 - 1) = shared_weak_owners_high;
                        v424 -= 4;
                      }
                      std::string __p = v424;
                      v676 = v418;
                      unint64_t v677 = (unint64_t)&v423[4 * v412];
                      if (v419) {
                        operator delete(v419);
                      }
                    }
                    else
                    {
                      LODWORD(v676->__vftable) = v411;
                      v418 = (std::__shared_weak_count *)((char *)&v417->__vftable + 4);
                    }
                    v676 = v418;
                    objc_msgSend_doubleValue(v410, (const char *)v412, v413, v414, v415);
                    uint64_t v427 = v426;
                    v428 = v696;
                    if ((unint64_t)v696 >= v697)
                    {
                      v430 = __src;
                      uint64_t v431 = ((char *)v696 - (unsigned char *)__src) >> 3;
                      unint64_t v432 = v431 + 1;
                      if ((unint64_t)(v431 + 1) >> 61) {
                        sub_1DDA17F78();
                      }
                      uint64_t v433 = v697 - (void)__src;
                      if ((uint64_t)(v697 - (void)__src) >> 2 > v432) {
                        unint64_t v432 = v433 >> 2;
                      }
                      if ((unint64_t)v433 >= 0x7FFFFFFFFFFFFFF8) {
                        unint64_t v403 = 0x1FFFFFFFFFFFFFFFLL;
                      }
                      else {
                        unint64_t v403 = v432;
                      }
                      if (v403)
                      {
                        v434 = (char *)sub_1DDA1814C((uint64_t)&v697, v403);
                        v428 = v696;
                        v430 = __src;
                      }
                      else
                      {
                        v434 = 0;
                      }
                      v435 = &v434[8 * v431];
                      *(void *)v435 = v427;
                      v429 = v435 + 8;
                      while (v428 != v430)
                      {
                        uint64_t v436 = *--v428;
                        *((void *)v435 - 1) = v436;
                        v435 -= 8;
                      }
                      __n128 __src = v435;
                      v696 = v429;
                      unint64_t v697 = (unint64_t)&v434[8 * v403];
                      if (v430) {
                        operator delete(v430);
                      }
                    }
                    else
                    {
                      void *v696 = v426;
                      v429 = v428 + 1;
                    }
                    v696 = v429;
                  }
                  uint64_t v407 = objc_msgSend_countByEnumeratingWithState_objects_count_(v342, (const char *)v403, (uint64_t)&v667, (uint64_t)v694, 16);
                }
                while (v407);
              }

              sub_1DDA1A880(v665, "IFD0:EXIF:MAKERNOTE:ColorBalance1");
              v688 = v665;
              v437 = (char *)sub_1DDA52108(v642, v665, (uint64_t)&unk_1DDBFB044, (_OWORD **)&v688) + 56;
              if (v437 != (char *)&__p) {
                sub_1DDA17E28(v437, (char *)__p, (uint64_t)v676, ((char *)v676 - (unsigned char *)__p) >> 2);
              }
              if (v666 < 0) {
                operator delete(v665[0]);
              }
              sub_1DDA1A880(v665, "IFD0:EXIF:MAKERNOTE:BLACKLEVELS");
              v688 = v665;
              v438 = (char *)sub_1DDA52108(v641, v665, (uint64_t)&unk_1DDBFB044, (_OWORD **)&v688) + 56;
              if (v438 != (char *)&__src) {
                sub_1DDA25BB0(v438, (char *)__src, (uint64_t)v696, ((char *)v696 - (unsigned char *)__src) >> 3);
              }
              if (v666 < 0) {
                operator delete(v665[0]);
              }
              if (__src)
              {
                v696 = __src;
                operator delete(__src);
              }
              if (__p)
              {
                v676 = (std::__shared_weak_count *)__p;
                operator delete(__p);
              }
            }
          }

LABEL_156:
          goto LABEL_157;
        }
        if (v271 != 1986618469) {
          goto LABEL_158;
        }
        v647 = objc_msgSend_valueForKeyPath_(v265, v262, @"mdia.minf.stbl", v263, v264);
        v653 = objc_msgSend_valueForKeyPath_(v647, v272, @"stsz", v273, v274);
        v657 = objc_msgSend_valueForKeyPath_(v647, v275, @"co64", v276, v277);
        v281 = objc_msgSend_valueForKeyPath_(v647, v278, @"stsd.Entries.CRAW", v279, v280);
        v655 = v281;
        if (v281)
        {
          v285 = objc_msgSend_valueForKeyPath_(v281, v282, @"Extensions.JPEG", v283, v284);
          BOOL v286 = v285 == 0;

          if (v286)
          {
            v439 = objc_msgSend_valueForKeyPath_(v655, v287, @"Extensions.CMP1", v288, v289);
            BOOL v440 = v439 == 0;

            if (!v440)
            {
              v444 = objc_msgSend_objectForKeyedSubscript_(v655, v441, @"Width", v442, v443);
              uint64_t v449 = objc_msgSend_unsignedIntValue(v444, v445, v446, v447, v448);

              v453 = objc_msgSend_objectForKeyedSubscript_(v655, v450, @"Height", v451, v452);
              uint64_t v458 = objc_msgSend_unsignedIntValue(v453, v454, v455, v456, v457);

              v651 = objc_msgSend_valueForKeyPath_(v655, v459, @"Extensions.CMP1", v460, v461);
              v692[0] = @"Width";
              v465 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v462, v449, v463, v464);
              v693[0] = v465;
              v692[1] = @"Height";
              v469 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v466, v458, v467, v468);
              v693[1] = v469;
              v693[2] = v657;
              v692[2] = @"co64";
              v692[3] = @"CMP1";
              v693[3] = v651;
              v471 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v470, (uint64_t)v693, (uint64_t)v692, 4);
              objc_msgSend_addObject_(v640, v472, (uint64_t)v471, v473, v474);
            }
            goto LABEL_157;
          }
          v290 = objc_msgSend_objectForKeyedSubscript_(v657, v287, @"offset", v288, v289);
          v295 = v290;
          if (v290)
          {
            *(_DWORD *)(v649 + 600) = objc_msgSend_unsignedIntValue(v290, v291, v292, v293, v294);
            *(unsigned char *)(v649 + 604) = 1;
          }

          v299 = objc_msgSend_objectForKeyedSubscript_(v653, v296, @"SampleSize", v297, v298);
          v304 = v299;
          if (v299)
          {
            *(_DWORD *)(v649 + 608) = objc_msgSend_unsignedIntValue(v299, v300, v301, v302, v303);
            *(unsigned char *)(v649 + 612) = 1;
          }

          v308 = objc_msgSend_objectForKeyedSubscript_(v655, v305, @"Width", v306, v307);
          v313 = v308;
          if (v308)
          {
            *(_DWORD *)(v649 + 616) = objc_msgSend_unsignedIntValue(v308, v309, v310, v311, v312);
            *(unsigned char *)(v649 + 620) = 1;
          }

          v317 = objc_msgSend_objectForKeyedSubscript_(v655, v314, @"Height", v315, v316);
          v650 = v317;
          if (v317)
          {
            *(_DWORD *)(v649 + 624) = objc_msgSend_unsignedIntValue(v317, v318, v319, v320, v321);
            *(unsigned char *)(v649 + 628) = 1;
          }
          goto LABEL_156;
        }
LABEL_157:

LABEL_158:
        ++v659;
      }
      while (v659 != v646);
      uint64_t v475 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v262, (uint64_t)&v671, (uint64_t)v698, 16);
      uint64_t v646 = v475;
    }
    while (v475);
  }

  objc_msgSend_sortUsingComparator_(v640, v476, (uint64_t)&unk_1F395ED70, v477, v478);
  uint64_t v479 = v649;
  if (objc_msgSend_count(v640, v480, v481, v482, v483))
  {
    v488 = objc_msgSend_firstObject(v640, v484, v485, v486, v487);
    v492 = objc_msgSend_objectForKeyedSubscript_(v488, v489, @"Width", v490, v491);
    *(_DWORD *)(v649 + 708) = objc_msgSend_unsignedIntValue(v492, v493, v494, v495, v496);

    v500 = objc_msgSend_objectForKeyedSubscript_(v488, v497, @"Height", v498, v499);
    *(_DWORD *)(v649 + 712) = objc_msgSend_unsignedIntValue(v500, v501, v502, v503, v504);

    v508 = objc_msgSend_valueForKeyPath_(v488, v505, @"CMP1.bayer_type", v506, v507);
    *(_DWORD *)(v649 + 716) = objc_msgSend_unsignedIntValue(v508, v509, v510, v511, v512);

    uint64_t v516 = objc_msgSend_valueForKeyPath_(v488, v513, @"CMP1.tile_width", v514, v515);
    v645 = (void *)v516;
    v520 = objc_msgSend_valueForKeyPath_(v488, v517, @"CMP1.tile_height", v518, v519);
    uint64_t v524 = objc_msgSend_valueForKeyPath_(v488, v521, @"CMP1.dwt_level", v522, v523);
    v648 = (void *)v524;
    uint64_t v528 = objc_msgSend_valueForKeyPath_(v488, v525, @"CMP1.tile_h_overlap", v526, v527);
    v652 = (void *)v528;
    uint64_t v532 = objc_msgSend_valueForKeyPath_(v488, v529, @"CMP1.tile_v_overlap", v530, v531);
    v654 = (void *)v532;
    uint64_t v536 = objc_msgSend_valueForKeyPath_(v488, v533, @"CMP1.plane_num", v534, v535);
    v656 = (void *)v536;
    v658 = objc_msgSend_valueForKeyPath_(v488, v537, @"co64.tile_headers", v538, v539);
    v660 = objc_msgSend_valueForKeyPath_(v488, v540, @"CMP1.ct_mode", v541, v542);
    v549 = objc_msgSend_valueForKeyPath_(v488, v543, @"CMP1.bit_depth", v544, v545);
    if (*(unsigned char *)(v649 + 732)) {
      objc_msgSend_numberWithUnsignedInt_(NSNumber, v546, *(unsigned int *)(v649 + 728), v547, v548);
    }
    else {
    v550 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v546, 0, v547, v548);
    }
    v690[0] = @"tile_width";
    v690[1] = @"tile_height";
    v691[0] = v516;
    v691[1] = v520;
    v690[2] = @"dwt_level";
    v690[3] = @"tile_h_overlap";
    v691[2] = v524;
    v691[3] = v528;
    v690[4] = @"tile_v_overlap";
    v690[5] = @"plane_num";
    v691[4] = v532;
    v691[5] = v536;
    v690[6] = @"tile_headers";
    v690[7] = @"ct_mode";
    v691[6] = v658;
    v691[7] = v660;
    v690[8] = @"bit_depth";
    v690[9] = @"version";
    v691[8] = v549;
    v691[9] = v550;
    uint64_t v552 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v551, (uint64_t)v691, (uint64_t)v690, 10);
    v553 = *(void **)(v649 + 720);
    *(void *)(v649 + 720) = v552;

    *(_DWORD *)(v649 + 572) = 0;
    v557 = objc_msgSend_valueForKeyPath_(v488, v554, @"CMP1.sub_header_part_length", v555, v556);
    int v562 = objc_msgSend_unsignedIntValue(v557, v558, v559, v560, v561);

    long long v663 = 0u;
    long long v664 = 0u;
    long long v661 = 0u;
    long long v662 = 0u;
    v566 = objc_msgSend_valueForKeyPath_(v488, v563, @"co64.tile_headers", v564, v565);
    uint64_t v571 = objc_msgSend_countByEnumeratingWithState_objects_count_(v566, v567, (uint64_t)&v661, (uint64_t)v689, 16);
    if (v571)
    {
      uint64_t v572 = *(void *)v662;
      do
      {
        for (uint64_t j = 0; j != v571; ++j)
        {
          if (*(void *)v662 != v572) {
            objc_enumerationMutation(v566);
          }
          v574 = objc_msgSend_objectForKeyedSubscript_(*(void **)(*((void *)&v661 + 1) + 8 * j), v568, @"tile_data_length", v569, v570);
          *(_DWORD *)(v649 + 572) += objc_msgSend_unsignedIntValue(v574, v575, v576, v577, v578);
        }
        uint64_t v571 = objc_msgSend_countByEnumeratingWithState_objects_count_(v566, v568, (uint64_t)&v661, (uint64_t)v689, 16);
      }
      while (v571);
    }

    v582 = objc_msgSend_valueForKeyPath_(v488, v579, @"co64.offset", v580, v581);
    *(_DWORD *)(v649 + 568) = objc_msgSend_unsignedIntValue(v582, v583, v584, v585, v586) + v562;

    uint64_t v479 = v649;
  }
  if ((unint64_t)objc_msgSend_count(v640, v484, v485, v486, v487) >= 2)
  {
    v590 = objc_msgSend_objectAtIndexedSubscript_(v640, v587, 1, v588, v589);
    v594 = objc_msgSend_objectForKeyedSubscript_(v590, v591, @"Width", v592, v593);
    *(_DWORD *)(v479 + 696) = objc_msgSend_unsignedIntValue(v594, v595, v596, v597, v598);

    v602 = objc_msgSend_objectForKeyedSubscript_(v590, v599, @"Height", v600, v601);
    *(_DWORD *)(v649 + 700) = objc_msgSend_unsignedIntValue(v602, v603, v604, v605, v606);

    v610 = objc_msgSend_valueForKeyPath_(v590, v607, @"CMP1.bayer_type", v608, v609);
    *(_DWORD *)(v649 + 704) = objc_msgSend_unsignedIntValue(v610, v611, v612, v613, v614);

    uint64_t v479 = v649;
  }
  objc_storeStrong((id *)(v479 + 504), v639);
}

void sub_1DDA610B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21,uint64_t a22,uint64_t a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29)
{
  _Unwind_Resume(a1);
}

id sub_1DDA61850(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5 = a3;
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  for (uint64_t i = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], a2, a3, a4, a5);
  {
    if ((int)sub_1DDA63178(*(void *)a2) < 1) {
      break;
    }
    unsigned int v8 = sub_1DDA19EC8(*(void *)a2);
    unsigned int v13 = bswap32(sub_1DDA19EC8(*(void *)a2));
    if (v8 >= 8)
    {
      uint64_t v9 = *(_DWORD **)a2;
      unsigned int v14 = v8 - 8;
      sub_1DDA1A6EC(v9, &v14);
    }
    uint64_t v10 = *(void *)a2;
    LODWORD(v12) = 0;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)v10 + 40))(v10, &v12, 2);
  }

  return i;
}

void sub_1DDA62070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  if (a29) {
    sub_1DDA18310(a29);
  }

  _Unwind_Resume(a1);
}

void sub_1DDA62190(uint64_t a1, void *a2, void *a3)
{
  id v25 = a2;
  id v5 = a3;
  uint64_t v9 = objc_msgSend_valueForKey_(v5, v6, @"hide", v7, v8);
  char v14 = objc_msgSend_BOOLValue(v9, v10, v11, v12, v13);

  if ((v14 & 1) == 0)
  {
    uint64_t v21 = objc_msgSend_valueForKey_(v5, v15, @"parsedVal", v16, v17);
    if (v21)
    {
      objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v18, (uint64_t)v21, (uint64_t)v25, v20);
    }
    else
    {
      uint64_t v24 = objc_msgSend_valueForKey_(v5, v18, @"val", v19, v20);
      if (v24) {
        objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v22, (uint64_t)v24, (uint64_t)v25, v23);
      }
    }
  }
}

void sub_1DDA62278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DDA622B4(uint64_t a1, void *a2, void *a3)
{
  id v25 = a2;
  id v5 = a3;
  uint64_t v9 = objc_msgSend_valueForKey_(v5, v6, @"hide", v7, v8);
  char v14 = objc_msgSend_BOOLValue(v9, v10, v11, v12, v13);

  if ((v14 & 1) == 0)
  {
    uint64_t v21 = objc_msgSend_valueForKey_(v5, v15, @"parsedVal", v16, v17);
    if (v21)
    {
      objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v18, (uint64_t)v21, (uint64_t)v25, v20);
    }
    else
    {
      uint64_t v24 = objc_msgSend_valueForKey_(v5, v18, @"val", v19, v20);
      if (v24) {
        objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v22, (uint64_t)v24, (uint64_t)v25, v23);
      }
    }
  }
}

void sub_1DDA6239C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DDA623D8(uint64_t a1, void *a2, void *a3)
{
  id v25 = a2;
  id v5 = a3;
  uint64_t v9 = objc_msgSend_valueForKey_(v5, v6, @"hide", v7, v8);
  char v14 = objc_msgSend_BOOLValue(v9, v10, v11, v12, v13);

  if ((v14 & 1) == 0)
  {
    uint64_t v21 = objc_msgSend_valueForKey_(v5, v15, @"parsedVal", v16, v17);
    if (v21)
    {
      objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v18, (uint64_t)v21, (uint64_t)v25, v20);
    }
    else
    {
      uint64_t v24 = objc_msgSend_valueForKey_(v5, v18, @"val", v19, v20);
      if (v24) {
        objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v22, (uint64_t)v24, (uint64_t)v25, v23);
      }
    }
  }
}

void sub_1DDA624C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DDA624FC(uint64_t a1, void *a2, void *a3)
{
  id v25 = a2;
  id v5 = a3;
  uint64_t v9 = objc_msgSend_valueForKey_(v5, v6, @"hide", v7, v8);
  char v14 = objc_msgSend_BOOLValue(v9, v10, v11, v12, v13);

  if ((v14 & 1) == 0)
  {
    uint64_t v21 = objc_msgSend_valueForKey_(v5, v15, @"parsedVal", v16, v17);
    if (v21)
    {
      objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v18, (uint64_t)v21, (uint64_t)v25, v20);
    }
    else
    {
      uint64_t v24 = objc_msgSend_valueForKey_(v5, v18, @"val", v19, v20);
      if (v24) {
        objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v22, (uint64_t)v24, (uint64_t)v25, v23);
      }
    }
  }
}

void sub_1DDA625E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA62620(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  uint64_t v8 = objc_msgSend_valueForKey_(a3, v5, @"Width", v6, v7);
  uint64_t v12 = objc_msgSend_valueForKey_(v4, v9, @"Width", v10, v11);
  uint64_t v16 = objc_msgSend_compare_(v8, v13, (uint64_t)v12, v14, v15);

  return v16;
}

void sub_1DDA626A0(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1DDA626CC(void **a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, _OWORD *a4@<X8>)
{
  (*((void (**)(uint64_t *__return_ptr))*a1 + 48))(&v9);
  uint64_t v8 = (*((uint64_t (**)(void **))*a1 + 53))(a1);
  sub_1DDA70934(&v9, (unint64_t *)&v8, a2, a3, a1 + 90, &v11);
  *a4 = v11;
  long long v11 = 0uLL;
  if (v10) {
    sub_1DDA18310(v10);
  }
}

void sub_1DDA627B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1DDA18310(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA627C8(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v7 = objc_msgSend_valueForKeyPath_(*(void **)(a1 + 504), a2, @"moov.uuid-85C0B687-820F-11E0-8111-F4CE462B6A48.CMT1.Orientation.val", a3, a4);
  uint64_t v12 = v7;
  if (v7) {
    int v13 = objc_msgSend_intValue(v7, v8, v9, v10, v11);
  }
  else {
    int v13 = 1;
  }
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  if (*(unsigned char *)(a1 + 668) && *(unsigned char *)(a1 + 676))
  {
    sub_1DDA18410(&v15, (int *)(a1 + 664));
    if (!*(unsigned char *)(a1 + 676)) {
      sub_1DDA1D8BC();
    }
    unsigned int v14 = *(_DWORD *)(a1 + 672);
    sub_1DDA284D4(a1, &v15, &v14, v13, &v16);
    if ((void)v16) {
      sub_1DDA480D4(a5, &v16);
    }
    if (*((void *)&v16 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v16 + 1));
    }
  }
  if (*(unsigned char *)(a1 + 636) && *(unsigned char *)(a1 + 644))
  {
    sub_1DDA18410(&v15, (int *)(a1 + 632));
    if (!*(unsigned char *)(a1 + 644)) {
      sub_1DDA1D8BC();
    }
    unsigned int v14 = *(_DWORD *)(a1 + 640);
    sub_1DDA284D4(a1, &v15, &v14, v13, &v16);
    if ((void)v16) {
      sub_1DDA480D4(a5, &v16);
    }
    if (*((void *)&v16 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v16 + 1));
    }
  }
  if (*(unsigned char *)(a1 + 604) && *(unsigned char *)(a1 + 612))
  {
    sub_1DDA18410(&v15, (int *)(a1 + 600));
    if (!*(unsigned char *)(a1 + 612)) {
      sub_1DDA1D8BC();
    }
    unsigned int v14 = *(_DWORD *)(a1 + 608);
    sub_1DDA284D4(a1, &v15, &v14, v13, &v16);
    if ((void)v16) {
      sub_1DDA480D4(a5, &v16);
    }
    if (*((void *)&v16 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v16 + 1));
    }
  }
}

void sub_1DDA6297C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1DDA18310(a12);
  }
  sub_1DDA18270(&a11);

  _Unwind_Resume(a1);
}

char *sub_1DDA629D0@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[543] < 0) {
    return (char *)sub_1DDA2639C((unsigned char *)a2, *((void **)result + 65), *((void *)result + 66));
  }
  *(_OWORD *)a2 = *(_OWORD *)(result + 520);
  *(void *)(a2 + 16) = *((void *)result + 67);
  return result;
}

char *sub_1DDA62A00@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[567] < 0) {
    return (char *)sub_1DDA2639C((unsigned char *)a2, *((void **)result + 68), *((void *)result + 69));
  }
  *(_OWORD *)a2 = *((_OWORD *)result + 34);
  *(void *)(a2 + 16) = *((void *)result + 70);
  return result;
}

uint64_t sub_1DDA62A34(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 716) - 1;
  if (v1 > 2) {
    return 2492765332;
  }
  else {
    return dword_1DDBF9AF4[v1];
  }
}

uint64_t sub_1DDA62A60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 568);
}

uint64_t sub_1DDA62A68(uint64_t a1)
{
  return *(unsigned int *)(a1 + 572);
}

uint64_t sub_1DDA62A70(uint64_t a1)
{
  sub_1DDA18218(&v2, *(_DWORD *)(a1 + 576), *(_DWORD *)(a1 + 580));
  return v2;
}

uint64_t sub_1DDA62AA0(_DWORD *a1)
{
  int v1 = a1[146];
  int v2 = a1[147];
  int v3 = a1[148] - v1 + 1;
  int v4 = a1[149] - v2 + 1;
  sub_1DDA18218(&v6, v1, v2);
  sub_1DDA18218(&v7, v3, v4);
  return v6;
}

void sub_1DDA62B0C(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v75 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 440))(a1);
  snprintf(__str, 0x10uLL, "%u", a1[128]);
  snprintf(__s, 0x10uLL, "%d", v4);
  snprintf(v72, 0x10uLL, "%d", HIDWORD(v4));
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_1DDA1A880(__p, "cr3");
  unint64_t v5 = a2[2];
  unint64_t v6 = a2[1];
  if (v6 >= v5)
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - *a2) >> 3);
    unint64_t v9 = v8 + 1;
    if (v8 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    uint64_t v71 = a2 + 2;
    if (v11) {
      uint64_t v12 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v11);
    }
    else {
      uint64_t v12 = 0;
    }
    int v13 = &v12[24 * v8];
    id v67 = v12;
    uint64_t v68 = v13;
    uint64_t v70 = &v12[24 * v11];
    long long v14 = *(_OWORD *)__p;
    *((void *)v13 + 2) = v66;
    *(_OWORD *)int v13 = v14;
    __p[1] = 0;
    uint64_t v66 = 0;
    __p[0] = 0;
    uint64_t v69 = v13 + 24;
    sub_1DDA2A0E8(a2, &v67);
    uint64_t v15 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v67);
    int v16 = SHIBYTE(v66);
    a2[1] = v15;
    if (v16 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v7 = *(_OWORD *)__p;
    *(void *)(v6 + 16) = v66;
    *(_OWORD *)unint64_t v6 = v7;
    a2[1] = v6 + 24;
  }
  sub_1DDA1A880(__p, "canon");
  unint64_t v18 = a2[1];
  unint64_t v17 = a2[2];
  if (v18 >= v17)
  {
    unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v18 - *a2) >> 3);
    unint64_t v21 = v20 + 1;
    if (v20 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    if (2 * v22 > v21) {
      unint64_t v21 = 2 * v22;
    }
    if (v22 >= 0x555555555555555) {
      unint64_t v23 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v23 = v21;
    }
    uint64_t v71 = a2 + 2;
    if (v23) {
      uint64_t v24 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v23);
    }
    else {
      uint64_t v24 = 0;
    }
    id v25 = &v24[24 * v20];
    id v67 = v24;
    uint64_t v68 = v25;
    uint64_t v70 = &v24[24 * v23];
    long long v26 = *(_OWORD *)__p;
    *((void *)v25 + 2) = v66;
    *(_OWORD *)id v25 = v26;
    __p[1] = 0;
    uint64_t v66 = 0;
    __p[0] = 0;
    uint64_t v69 = v25 + 24;
    sub_1DDA2A0E8(a2, &v67);
    uint64_t v27 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v67);
    int v28 = SHIBYTE(v66);
    a2[1] = v27;
    if (v28 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v19 = *(_OWORD *)__p;
    *(void *)(v18 + 16) = v66;
    *(_OWORD *)unint64_t v18 = v19;
    a2[1] = v18 + 24;
  }
  sub_1DDA1A880(__p, __str);
  unint64_t v30 = a2[1];
  unint64_t v29 = a2[2];
  if (v30 >= v29)
  {
    unint64_t v32 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v30 - *a2) >> 3);
    unint64_t v33 = v32 + 1;
    if (v32 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v34 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    if (2 * v34 > v33) {
      unint64_t v33 = 2 * v34;
    }
    if (v34 >= 0x555555555555555) {
      unint64_t v35 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v35 = v33;
    }
    uint64_t v71 = a2 + 2;
    if (v35) {
      uint64_t v36 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v35);
    }
    else {
      uint64_t v36 = 0;
    }
    uint64_t v37 = &v36[24 * v32];
    id v67 = v36;
    uint64_t v68 = v37;
    uint64_t v70 = &v36[24 * v35];
    long long v38 = *(_OWORD *)__p;
    *((void *)v37 + 2) = v66;
    *(_OWORD *)uint64_t v37 = v38;
    __p[1] = 0;
    uint64_t v66 = 0;
    __p[0] = 0;
    uint64_t v69 = v37 + 24;
    sub_1DDA2A0E8(a2, &v67);
    uint64_t v39 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v67);
    int v40 = SHIBYTE(v66);
    a2[1] = v39;
    if (v40 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v31 = *(_OWORD *)__p;
    *(void *)(v30 + 16) = v66;
    *(_OWORD *)unint64_t v30 = v31;
    a2[1] = v30 + 24;
  }
  sub_1DDA1A880(__p, __s);
  unint64_t v42 = a2[1];
  unint64_t v41 = a2[2];
  if (v42 >= v41)
  {
    unint64_t v44 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v42 - *a2) >> 3);
    unint64_t v45 = v44 + 1;
    if (v44 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v46 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v41 - *a2) >> 3);
    if (2 * v46 > v45) {
      unint64_t v45 = 2 * v46;
    }
    if (v46 >= 0x555555555555555) {
      unint64_t v47 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v47 = v45;
    }
    uint64_t v71 = a2 + 2;
    if (v47) {
      uint64_t v48 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v47);
    }
    else {
      uint64_t v48 = 0;
    }
    unint64_t v49 = &v48[24 * v44];
    id v67 = v48;
    uint64_t v68 = v49;
    uint64_t v70 = &v48[24 * v47];
    long long v50 = *(_OWORD *)__p;
    *((void *)v49 + 2) = v66;
    *(_OWORD *)unint64_t v49 = v50;
    __p[1] = 0;
    uint64_t v66 = 0;
    __p[0] = 0;
    uint64_t v69 = v49 + 24;
    sub_1DDA2A0E8(a2, &v67);
    uint64_t v51 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v67);
    int v52 = SHIBYTE(v66);
    a2[1] = v51;
    if (v52 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v43 = *(_OWORD *)__p;
    *(void *)(v42 + 16) = v66;
    *(_OWORD *)unint64_t v42 = v43;
    a2[1] = v42 + 24;
  }
  sub_1DDA1A880(__p, v72);
  unint64_t v54 = a2[1];
  unint64_t v53 = a2[2];
  if (v54 >= v53)
  {
    unint64_t v56 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v54 - *a2) >> 3);
    unint64_t v57 = v56 + 1;
    if (v56 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v58 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v53 - *a2) >> 3);
    if (2 * v58 > v57) {
      unint64_t v57 = 2 * v58;
    }
    if (v58 >= 0x555555555555555) {
      unint64_t v59 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v59 = v57;
    }
    uint64_t v71 = a2 + 2;
    if (v59) {
      uint64_t v60 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v59);
    }
    else {
      uint64_t v60 = 0;
    }
    uint64_t v61 = &v60[24 * v56];
    id v67 = v60;
    uint64_t v68 = v61;
    uint64_t v70 = &v60[24 * v59];
    long long v62 = *(_OWORD *)__p;
    *((void *)v61 + 2) = v66;
    *(_OWORD *)uint64_t v61 = v62;
    __p[1] = 0;
    uint64_t v66 = 0;
    __p[0] = 0;
    uint64_t v69 = v61 + 24;
    sub_1DDA2A0E8(a2, &v67);
    uint64_t v63 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v67);
    int v64 = SHIBYTE(v66);
    a2[1] = v63;
    if (v64 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v55 = *(_OWORD *)__p;
    *(void *)(v54 + 16) = v66;
    *(_OWORD *)unint64_t v54 = v55;
    a2[1] = v54 + 24;
  }
}

void sub_1DDA63108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA63178(uint64_t a1)
{
  int v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 16))(a1);
  unsigned int v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  int v5 = v2 - sub_1DDA456E8(&v4);
  sub_1DDA18410((int *)&v6, &v5);
  return v6;
}

id sub_1DDA63214(uint64_t a1, uint64_t *a2)
{
  v33[3] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1DDA19EC8(*a2);
  uint64_t v4 = sub_1DDA19EC8(*a2);
  unint64_t v9 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v5, v6, v7, v8);
  unsigned int v13 = (*(uint64_t (**)(void))(*(void *)*a2 + 16))() - 8;
  if (v13 >= 4)
  {
    unsigned int v14 = v13 >> 2;
    do
    {
      uint64_t v15 = NSNumber;
      uint64_t v16 = sub_1DDA19EC8(*a2);
      unint64_t v20 = objc_msgSend_numberWithUnsignedInt_(v15, v17, v16, v18, v19);
      objc_msgSend_addObject_(v9, v21, (uint64_t)v20, v22, v23);

      --v14;
    }
    while (v14);
  }
  v32[0] = @"majorBrand";
  uint64_t v24 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v10, v3, v11, v12);
  v33[0] = v24;
  v32[1] = @"minorVersion";
  int v28 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v25, v4, v26, v27);
  void v32[2] = @"compatibleBrands";
  v33[1] = v28;
  void v33[2] = v9;
  unint64_t v30 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v29, (uint64_t)v33, (uint64_t)v32, 3);

  return v30;
}

void sub_1DDA633B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA633F8(uint64_t a1, uint64_t *a2)
{
  v29[4] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1DDA19DA0(*a2);
  int v5 = sub_1DDA19DA0(*a2);
  int v6 = sub_1DDA19DA0(*a2);
  unsigned int v7 = sub_1DDA19DA0(*a2);
  uint64_t v8 = sub_1DDA19EC8(*a2);
  uint64_t v9 = sub_1DDA19EC8(*a2);
  if (v9 >= 2)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v10 = v9;
  if (!v8 && v9 == 1) {
    uint64_t v8 = sub_1DDA19EC8(*a2);
  }
  uint64_t v11 = sub_1DDA61850(a1, a2, v10);
  v28[0] = @"Version";
  uint64_t v15 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v12, v4, v13, v14);
  v29[0] = v15;
  v28[1] = @"Flags";
  uint64_t v19 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v16, (v5 << 16) | (v6 << 8) | v7, v17, v18);
  v29[1] = v19;
  v28[2] = @"SampleSize";
  uint64_t v23 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v20, v8, v21, v22);
  v28[3] = @"Entries";
  v29[2] = v23;
  v29[3] = v11;
  id v25 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v24, (uint64_t)v29, (uint64_t)v28, 4);

  return v25;
}

void sub_1DDA635E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *sub_1DDA63634(uint64_t a1, uint64_t *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v7 = 0;
  uint64_t v2 = *a2;
  unsigned int v5 = (*(uint64_t (**)(uint64_t))(*(void *)*a2 + 16))(*a2);
  BOOL v3 = sub_1DDA1A0CC(v2, &v5, (uint64_t)__p);
  if (SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
  if (v3) {
    return @"xmp data";
  }
  else {
    return &stru_1F398F7F8;
  }
}

void sub_1DDA636CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA636E8(uint64_t a1, uint64_t *a2)
{
  sub_1DDA19EC8(*a2);
  uint64_t v4 = sub_1DDA19EC8(*a2);

  return sub_1DDA61850(a1, a2, v4);
}

id sub_1DDA63738(uint64_t a1, uint64_t *a2)
{
  v53[8] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1DDA19DA0(*a2);
  int v4 = sub_1DDA19DA0(*a2);
  int v5 = sub_1DDA19DA0(*a2);
  unsigned int v6 = sub_1DDA19DA0(*a2);
  uint64_t v7 = sub_1DDA19EC8(*a2);
  uint64_t v8 = sub_1DDA19EC8(*a2);
  uint64_t v9 = sub_1DDA19EC8(*a2);
  uint64_t v10 = sub_1DDA19EC8(*a2);
  unsigned int v47 = sub_1DDA19EC8(*a2);
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v51 = 0;
  uint64_t v11 = *a2;
  unsigned int v48 = sub_1DDA63178(v11);
  sub_1DDA1B354(&v49, &v48);
  sub_1DDA1A0CC(v11, &v49, (uint64_t)__p);
  if (v51 >= 0) {
    objc_msgSend_stringWithUTF8String_(NSString, v12, (uint64_t)__p, v13, v14);
  }
  else {
  unint64_t v46 = objc_msgSend_stringWithUTF8String_(NSString, v12, (uint64_t)__p[0], v13, v14);
  }
  v52[0] = @"Version";
  uint64_t v18 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v15, v3, v16, v17);
  v53[0] = v18;
  v52[1] = @"Flags";
  uint64_t v22 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v19, (v4 << 16) | (v5 << 8) | v6, v20, v21);
  v53[1] = v22;
  v52[2] = @"ComponentType";
  uint64_t v26 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v23, v7, v24, v25);
  v53[2] = v26;
  v52[3] = @"ComponentSubType";
  unint64_t v30 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v27, v8, v28, v29);
  v53[3] = v30;
  v52[4] = @"Component";
  unint64_t v34 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v31, v9, v32, v33);
  v53[4] = v34;
  v52[5] = @"ComponentFlags";
  long long v38 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v35, v10, v36, v37);
  v53[5] = v38;
  v52[6] = @"ComponentFlagsMask";
  unint64_t v42 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v39, v47, v40, v41);
  v52[7] = @"ComponentName";
  v53[6] = v42;
  v53[7] = v46;
  unint64_t v44 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v43, (uint64_t)v53, (uint64_t)v52, 8);

  if (SHIBYTE(v51) < 0) {
    operator delete(__p[0]);
  }

  return v44;
}

void sub_1DDA639F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

id sub_1DDA63A7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v22[3] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1DDA19DA0(*a2);
  int v5 = sub_1DDA19DA0(*a2);
  int v6 = sub_1DDA19DA0(*a2);
  unsigned int v7 = sub_1DDA19DA0(*a2);
  uint64_t v8 = sub_1DDA19EC8(*a2);
  uint64_t v9 = sub_1DDA61850(a1, a2, v8);
  v21[0] = @"Version";
  uint64_t v13 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, v4, v11, v12);
  v22[0] = v13;
  v21[1] = @"Flags";
  uint64_t v17 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v14, (v5 << 16) | (v6 << 8) | v7, v15, v16);
  v21[2] = @"Entries";
  v22[1] = v17;
  v22[2] = v9;
  uint64_t v19 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v18, (uint64_t)v22, (uint64_t)v21, 3);

  return v19;
}

void sub_1DDA63BD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA63C04(uint64_t a1, uint64_t *a2)
{
  v99[18] = *MEMORY[0x1E4F143B8];
  sub_1DDA19EC8(*a2);
  sub_1DDA19E68(*a2);
  uint64_t v4 = sub_1DDA19E68(*a2);
  uint64_t v5 = sub_1DDA19E68(*a2);
  uint64_t v6 = sub_1DDA19E68(*a2);
  uint64_t v7 = sub_1DDA19EC8(*a2);
  uint64_t v8 = sub_1DDA19EC8(*a2);
  unsigned int v91 = sub_1DDA19EC8(*a2);
  unsigned int v89 = sub_1DDA19E68(*a2);
  unsigned int v88 = sub_1DDA19E68(*a2);
  unsigned int v87 = sub_1DDA19E68(*a2);
  unsigned int v86 = sub_1DDA19E68(*a2);
  unsigned int v85 = sub_1DDA19E68(*a2);
  unsigned int v84 = sub_1DDA19E68(*a2);
  uint64_t v9 = sub_1DDA19EC8(*a2);
  uint64_t v10 = sub_1DDA19E68(*a2);
  unsigned int v11 = sub_1DDA19DA0(*a2);
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v97 = 0;
  uint64_t v12 = *a2;
  unsigned int v95 = v11;
  sub_1DDA1A0CC(v12, &v95, (uint64_t)__p);
  uint64_t v13 = *a2;
  unsigned int v95 = 31 - v11;
  (*(void (**)(uint64_t, unsigned int *, uint64_t))(*(void *)v13 + 40))(v13, &v95, 1);
  unsigned int v83 = sub_1DDA19E68(*a2);
  unsigned int v14 = sub_1DDA19E68(*a2);
  sub_1DDA19EC8(*a2);
  uint64_t v93 = sub_1DDA61850(a1, a2, 0xFFFFFFFFLL);
  if (v97 >= 0) {
    objc_msgSend_stringWithUTF8String_(NSString, v15, (uint64_t)__p, v16, v17);
  }
  else {
  uint64_t v94 = objc_msgSend_stringWithUTF8String_(NSString, v15, (uint64_t)__p[0], v16, v17);
  }
  v98[0] = @"DataReference";
  uint64_t v82 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v18, v4, v19, v20);
  v99[0] = v82;
  v98[1] = @"Version";
  uint64_t v81 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v21, v5, v22, v23);
  v99[1] = v81;
  v98[2] = @"RevisionLevel";
  id v80 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v24, v6, v25, v26);
  v99[2] = v80;
  v98[3] = @"Vendor";
  uint64_t v79 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v27, v7, v28, v29);
  v99[3] = v79;
  v98[4] = @"TemporalQuality";
  uint64_t v78 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v30, v8, v31, v32);
  v99[4] = v78;
  v98[5] = @"SpatialQuality";
  unsigned int v77 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v33, v91, v34, v35);
  v99[5] = v77;
  v98[6] = @"Width";
  uint64_t v90 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v36, v89, v37, v38);
  v99[6] = v90;
  v98[7] = @"Height";
  uint64_t v92 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v39, v88, v40, v41);
  v99[7] = v92;
  v98[8] = @"HorizontalRes";
  unint64_t v45 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v42, v87, v43, v44);
  v99[8] = v45;
  v98[9] = @"HorizontalResDec";
  unsigned int v49 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v46, v86, v47, v48);
  v99[9] = v49;
  v98[10] = @"VerticalRes";
  unint64_t v53 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v50, v85, v51, v52);
  v99[10] = v53;
  v98[11] = @"VerticalResDec";
  unint64_t v57 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v54, v84, v55, v56);
  v99[11] = v57;
  v98[12] = @"DataSize";
  uint64_t v61 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v58, v9, v59, v60);
  v99[12] = v61;
  v98[13] = @"FrameCount";
  uint64_t v65 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v62, v10, v63, v64);
  v99[13] = v65;
  v99[14] = v94;
  v98[14] = @"CompressorName";
  v98[15] = @"Depth";
  uint64_t v69 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v66, v83, v67, v68);
  v99[15] = v69;
  v98[16] = @"ColorTableID";
  unint64_t v73 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v70, v14, v71, v72);
  v98[17] = @"Extensions";
  v99[16] = v73;
  v99[17] = v93;
  uint64_t v75 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v74, (uint64_t)v99, (uint64_t)v98, 18);

  if (SHIBYTE(v97) < 0) {
    operator delete(__p[0]);
  }

  return v75;
}

void sub_1DDA64118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,void *a21,void *a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

id sub_1DDA64250(uint64_t a1, uint64_t *a2)
{
  void v31[2] = *MEMORY[0x1E4F143B8];
  sub_1DDA19EC8(*a2);
  sub_1DDA19E68(*a2);
  unsigned int v27 = sub_1DDA19E68(*a2);
  unsigned int v3 = sub_1DDA19EC8(*a2);
  for (uint64_t i = sub_1DDA49F48(v3);
  {
    sub_1DDA19E68(*a2);
    uint64_t v8 = sub_1DDA19E68(*a2);
    uint64_t v9 = sub_1DDA19EC8(*a2);
    v30[0] = @"tagID";
    uint64_t v13 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v10, v8, v11, v12);
    v30[1] = @"tagSize";
    v31[0] = v13;
    uint64_t v17 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v14, v9, v15, v16);
    v31[1] = v17;
    uint64_t v19 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v18, (uint64_t)v31, (uint64_t)v30, 2);
    objc_msgSend_addObject_(i, v20, (uint64_t)v19, v21, v22);
  }
  v28[0] = @"DataReference";
  uint64_t v23 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v4, v27, v5, v6);
  v28[1] = @"Tags";
  v29[0] = v23;
  v29[1] = i;
  uint64_t v25 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v24, (uint64_t)v29, (uint64_t)v28, 2);

  return v25;
}

void sub_1DDA64418(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA6446C(uint64_t a1, uint64_t *a2)
{
  v198[2] = *MEMORY[0x1E4F143B8];
  unsigned int v4 = sub_1DDA19E68(*a2);
  unsigned int v5 = sub_1DDA19E68(*a2);
  unsigned int v6 = sub_1DDA19E68(*a2);
  sub_1DDA19E68(*a2);
  uint64_t v7 = sub_1DDA19EC8(*a2);
  uint64_t v8 = sub_1DDA19EC8(*a2);
  unsigned int v188 = sub_1DDA19EC8(*a2);
  unsigned int v183 = sub_1DDA19EC8(*a2);
  unsigned int v9 = sub_1DDA19DA0(*a2);
  unsigned int v186 = sub_1DDA19DA0(*a2);
  unsigned int v180 = sub_1DDA19DA0(*a2);
  unsigned int v181 = sub_1DDA19DA0(*a2);
  unsigned int v179 = sub_1DDA19EC8(*a2);
  char v178 = sub_1DDA19DA0(*a2);
  sub_1DDA19DA0(*a2);
  sub_1DDA19E68(*a2);
  if (v6 == 512)
  {
    if (!*(unsigned char *)(a1 + 732)) {
      *(unsigned char *)(a1 + 732) = 1;
    }
    int v10 = 512;
    goto LABEL_9;
  }
  if (v6 == 256)
  {
    if (!*(unsigned char *)(a1 + 732)) {
      *(unsigned char *)(a1 + 732) = 1;
    }
    int v10 = 256;
LABEL_9:
    *(_DWORD *)(a1 + 728) = v10;
    goto LABEL_11;
  }
  if (!*(unsigned char *)(a1 + 732)) {
    goto LABEL_38;
  }
LABEL_11:
  if (*(_DWORD *)(a1 + 728) == 256) {
    int v11 = 65280;
  }
  else {
    int v11 = 65296;
  }
  if (v11 != v4
    || v7 >> 5 >= 0xC35
    || v8 > 0x1869F
    || !v7
    || !v8
    || !v183
    || !v188
    || v7 < v188
    || v8 < v183)
  {
LABEL_38:
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  unsigned int v171 = v4;
  unsigned int v174 = v6;
  unsigned int v176 = v9;
  unint64_t v182 = v186 >> 4;
  uint64_t v190 = sub_1DDA49F48(v182);
  if (v186 >= 0x10)
  {
    if (v182 <= 1) {
      int v16 = 1;
    }
    else {
      int v16 = v182;
    }
    do
    {
      uint64_t v17 = sub_1DDA19DA0(*a2);
      uint64_t v18 = sub_1DDA19DA0(*a2);
      sub_1DDA19E68(*a2);
      v197[0] = @"sample_width";
      uint64_t v22 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v19, v17, v20, v21);
      v197[1] = @"sample_height";
      v198[0] = v22;
      uint64_t v26 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v23, v18, v24, v25);
      v198[1] = v26;
      uint64_t v28 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v27, (uint64_t)v198, (uint64_t)v197, 2);
      objc_msgSend_addObject_(v190, v29, (uint64_t)v28, v30, v31);

      --v16;
    }
    while (v16);
  }
  objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v12, v13, v14, v15);
  id v185 = (id)objc_claimAutoreleasedReturnValue();
  v195[0] = @"marker_code_main_header";
  v196[0] = objc_msgSend_numberWithUnsignedShort_(NSNumber, v32, v171, v33, v34);
  v195[1] = @"main_header_length";
  uint64_t v172 = (void *)v196[0];
  uint64_t v173 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v35, v5, v36, v37);
  v196[1] = v173;
  v195[2] = @"revision";
  uint64_t v170 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v38, v174, v39, v40);
  v196[2] = v170;
  v195[3] = @"frame_width";
  uint64_t v169 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v41, v7, v42, v43);
  v196[3] = v169;
  v195[4] = @"frame_height";
  uint64_t v175 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v44, v8, v45, v46);
  v196[4] = v175;
  v195[5] = @"tile_width";
  uint64_t v168 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v47, v188, v48, v49);
  v196[5] = v168;
  v195[6] = @"tile_height";
  double v167 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v50, v183, v51, v52);
  v196[6] = v167;
  v195[7] = @"tile_num";
  uint64_t v184 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v53, v8 / v183 * (v7 / v188), v54, v55);
  v196[7] = v184;
  v195[8] = @"bit_depth";
  uint64_t v177 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v56, v176, v57, v58);
  v196[8] = v177;
  v195[9] = @"plane_num";
  uint64_t v62 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v59, v182, v60, v61);
  uint64_t v63 = v186 & 0xF;
  uint64_t v187 = (void *)v62;
  v196[9] = v62;
  v195[10] = @"bayer_type";
  v189 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v64, v63, v65, v66);
  v196[10] = v189;
  v195[11] = @"ct_mode";
  uint64_t v70 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v67, v180 >> 4, v68, v69);
  v196[11] = v70;
  v195[12] = @"dwt_level";
  uint64_t v74 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v71, v180 & 0xF, v72, v73);
  v196[12] = v74;
  v195[13] = @"tile_h_overlap";
  uint64_t v78 = objc_msgSend_numberWithBool_(NSNumber, v75, v181 >> 7, v76, v77);
  v196[13] = v78;
  v195[14] = @"tile_v_overlap";
  uint64_t v82 = objc_msgSend_numberWithBool_(NSNumber, v79, (v181 >> 6) & 1, v80, v81);
  v196[14] = v82;
  v195[15] = @"sub_header_part_length";
  unsigned int v86 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v83, v179, v84, v85);
  v196[15] = v86;
  v195[16] = @"main_extension_flag";
  uint64_t v90 = objc_msgSend_numberWithBool_(NSNumber, v87, (v178 >> 7) & 1, v88, v89);
  v195[17] = @"planes";
  v196[16] = v90;
  v196[17] = v190;
  uint64_t v92 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v91, (uint64_t)v196, (uint64_t)v195, 18);
  objc_msgSend_addEntriesFromDictionary_(v185, v93, (uint64_t)v92, v94, v95);

  if (v178 < 0)
  {
    uint64_t v96 = sub_1DDA19EC8(*a2);
    char v97 = sub_1DDA19DA0(*a2);
    sub_1DDA19E68(*a2);
    char v98 = sub_1DDA19DA0(*a2);
    v193[0] = @"main_extension_header_data_length";
    int v102 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v99, v96, v100, v101);
    int v103 = v97;
    v194[0] = v102;
    v193[1] = @"buffer_model_info_flag";
    uint64_t v107 = objc_msgSend_numberWithBool_(NSNumber, v104, (v97 >> 7) & 1, v105, v106);
    v194[1] = v107;
    v193[2] = @"user_info_flag";
    uint64_t v111 = objc_msgSend_numberWithBool_(NSNumber, v108, v98 & 1, v109, v110);
    v194[2] = v111;
    uint64_t v113 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v112, (uint64_t)v194, (uint64_t)v193, 3);
    objc_msgSend_addEntriesFromDictionary_(v185, v114, (uint64_t)v113, v115, v116);

    if (v103 < 0)
    {
      uint64_t v120 = sub_1DDA19EC8(*a2);
      uint64_t v121 = sub_1DDA19EC8(*a2);
      uint64_t v122 = sub_1DDA19EC8(*a2);
      uint64_t v123 = sub_1DDA19EC8(*a2);
      uint64_t v124 = sub_1DDA19EC8(*a2);
      uint64_t v125 = sub_1DDA19EC8(*a2);
      v191[0] = @"bit_rate_value_minus1";
      uint64_t v129 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v126, v120, v127, v128);
      v192[0] = v129;
      v191[1] = @"bit_rate_scale";
      id v133 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v130, v121, v131, v132);
      v192[1] = v133;
      v191[2] = @"buffersize_value_minus1";
      uint64_t v137 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v134, v122, v135, v136);
      v192[2] = v137;
      v191[3] = @"buffersize_scale";
      uint64_t v141 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v138, v123, v139, v140);
      v192[3] = v141;
      v191[4] = @"num_units_in_tick";
      uint64_t v145 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v142, v124, v143, v144);
      v192[4] = v145;
      v191[5] = @"time_scale";
      uint64_t v149 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v146, v125, v147, v148);
      v192[5] = v149;
      uint64_t v151 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v150, (uint64_t)v192, (uint64_t)v191, 6);
      objc_msgSend_addEntriesFromDictionary_(v185, v152, (uint64_t)v151, v153, v154);
    }
    if (!*(unsigned char *)(a1 + 732)) {
      sub_1DDA1D8BC();
    }
    if (*(_DWORD *)(a1 + 728) == 512)
    {
      uint64_t v155 = objc_msgSend_numberWithBool_(NSNumber, v117, (v103 >> 6) & 1, v118, v119);
      objc_msgSend_setObject_forKeyedSubscript_(v185, v156, (uint64_t)v155, @"bit_depth_transformation_info_flag", v157);

      if ((v103 >> 6))
      {
        unsigned int v158 = sub_1DDA19EC8(*a2);
        uint64_t v162 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v159, HIBYTE(v158), v160, v161);
        objc_msgSend_setObject_forKeyedSubscript_(v185, v163, (uint64_t)v162, @"bit_depth_before_transformation", v164);
      }
    }
  }

  return v185;
}

void sub_1DDA64EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26)
{
  _Unwind_Resume(a1);
}

id sub_1DDA65118(uint64_t a1, uint64_t *a2)
{
  v49[8] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1DDA19DA0(*a2);
  int v4 = sub_1DDA19DA0(*a2);
  int v5 = sub_1DDA19DA0(*a2);
  unsigned int v6 = sub_1DDA19DA0(*a2);
  uint64_t v7 = sub_1DDA19EC8(*a2);
  uint64_t v8 = sub_1DDA19EC8(*a2);
  uint64_t v9 = sub_1DDA19EC8(*a2);
  uint64_t v10 = sub_1DDA19EC8(*a2);
  uint64_t v11 = sub_1DDA19E68(*a2);
  unsigned int v47 = sub_1DDA19E68(*a2);
  v48[0] = @"Version";
  uint64_t v15 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v12, v3, v13, v14);
  v49[0] = v15;
  v48[1] = @"Flags";
  uint64_t v19 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v16, (v4 << 16) | (v5 << 8) | v6, v17, v18);
  v49[1] = v19;
  v48[2] = @"CreationTime";
  uint64_t v23 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v20, v7, v21, v22);
  v49[2] = v23;
  v48[3] = @"ModificationTime";
  unsigned int v27 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v24, v8, v25, v26);
  v49[3] = v27;
  v48[4] = @"TimeScale";
  uint64_t v31 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v28, v9, v29, v30);
  v49[4] = v31;
  void v48[5] = @"Duration";
  uint64_t v35 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v32, v10, v33, v34);
  v49[5] = v35;
  v48[6] = @"Language";
  uint64_t v39 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v36, v11, v37, v38);
  v49[6] = v39;
  v48[7] = @"Quality";
  uint64_t v43 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v40, v47, v41, v42);
  void v49[7] = v43;
  uint64_t v45 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v44, (uint64_t)v49, (uint64_t)v48, 8);

  return v45;
}

void sub_1DDA65384(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA653F0(uint64_t a1, uint64_t *a2)
{
  v134[16] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1DDA19DA0(*a2);
  int v4 = sub_1DDA19DA0(*a2);
  int v5 = sub_1DDA19DA0(*a2);
  unsigned int v6 = sub_1DDA19DA0(*a2);
  uint64_t v7 = sub_1DDA19EC8(*a2);
  uint64_t v8 = sub_1DDA19EC8(*a2);
  uint64_t v9 = sub_1DDA19EC8(*a2);
  uint64_t v10 = sub_1DDA19EC8(*a2);
  unsigned int v129 = sub_1DDA19EC8(*a2);
  unsigned int v127 = sub_1DDA19E68(*a2);
  sub_1DDA19EC8(*a2);
  sub_1DDA19EC8(*a2);
  sub_1DDA19E68(*a2);
  unsigned int v125 = sub_1DDA19EC8(*a2);
  unsigned int v123 = sub_1DDA19EC8(*a2);
  unsigned int v121 = sub_1DDA19EC8(*a2);
  unsigned int v119 = sub_1DDA19EC8(*a2);
  unsigned int v117 = sub_1DDA19EC8(*a2);
  unsigned int v115 = sub_1DDA19EC8(*a2);
  unsigned int v113 = sub_1DDA19EC8(*a2);
  unsigned int v111 = sub_1DDA19EC8(*a2);
  unsigned int v110 = sub_1DDA19EC8(*a2);
  unsigned int v109 = sub_1DDA19EC8(*a2);
  unsigned int v108 = sub_1DDA19EC8(*a2);
  unsigned int v107 = sub_1DDA19EC8(*a2);
  unsigned int v106 = sub_1DDA19EC8(*a2);
  unsigned int v105 = sub_1DDA19EC8(*a2);
  unsigned int v104 = sub_1DDA19EC8(*a2);
  uint64_t v11 = sub_1DDA19EC8(*a2);
  v133[0] = @"Version";
  uint64_t v131 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v12, v3, v13, v14);
  v134[0] = v131;
  v133[1] = @"Flags";
  int v103 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v15, (v4 << 16) | (v5 << 8) | v6, v16, v17);
  v134[1] = v103;
  void v133[2] = @"CreationTime";
  int v102 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v18, v7, v19, v20);
  void v134[2] = v102;
  v133[3] = @"ModificationTime";
  uint64_t v101 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v21, v8, v22, v23);
  v134[3] = v101;
  v133[4] = @"TimeScale";
  uint64_t v100 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v24, v9, v25, v26);
  v134[4] = v100;
  v133[5] = @"Duration";
  uint64_t v99 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v27, v10, v28, v29);
  v134[5] = v99;
  v133[6] = @"PreferredRate";
  uint64_t v130 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v30, v129, v31, v32);
  v134[6] = v130;
  v133[7] = @"PreferredVolume";
  uint64_t v128 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v33, v127, v34, v35);
  v134[7] = v128;
  v133[8] = @"Matrix";
  id v126 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v36, v125, v37, v38);
  v132[0] = v126;
  uint64_t v124 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v39, v123, v40, v41);
  v132[1] = v124;
  uint64_t v122 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v42, v121, v43, v44);
  v132[2] = v122;
  uint64_t v120 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v45, v119, v46, v47);
  v132[3] = v120;
  uint64_t v118 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v48, v117, v49, v50);
  v132[4] = v118;
  uint64_t v116 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v51, v115, v52, v53);
  v132[5] = v116;
  uint64_t v114 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v54, v113, v55, v56);
  v132[6] = v114;
  uint64_t v112 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v57, v111, v58, v59);
  v132[7] = v112;
  uint64_t v63 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v60, v110, v61, v62);
  v132[8] = v63;
  uint64_t v66 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v64, (uint64_t)v132, 9, v65);
  v134[8] = v66;
  v133[9] = @"PreviewTime";
  uint64_t v70 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v67, v109, v68, v69);
  uint64_t v71 = v11;
  v134[9] = v70;
  v133[10] = @"PreviewDuration";
  uint64_t v75 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v72, v108, v73, v74);
  v134[10] = v75;
  v133[11] = @"PosterTime";
  uint64_t v79 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v76, v107, v77, v78);
  v134[11] = v79;
  v133[12] = @"SelectionTime";
  unsigned int v83 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v80, v106, v81, v82);
  v134[12] = v83;
  v133[13] = @"SelectionDuration";
  unsigned int v87 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v84, v105, v85, v86);
  v134[13] = v87;
  v133[14] = @"CurrentTime";
  unsigned int v91 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v88, v104, v89, v90);
  v134[14] = v91;
  v133[15] = @"NextTrackID";
  uint64_t v95 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v92, v71, v93, v94);
  v134[15] = v95;
  char v97 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v96, (uint64_t)v134, (uint64_t)v133, 16);

  return v97;
}

void sub_1DDA659C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29)
{
  _Unwind_Resume(a1);
}

id sub_1DDA65B38(uint64_t a1, uint64_t *a2)
{
  v124[14] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1DDA19DA0(*a2);
  int v4 = sub_1DDA19DA0(*a2);
  int v5 = sub_1DDA19DA0(*a2);
  unsigned int v6 = sub_1DDA19DA0(*a2);
  uint64_t v7 = sub_1DDA19EC8(*a2);
  uint64_t v8 = sub_1DDA19EC8(*a2);
  uint64_t v9 = sub_1DDA19EC8(*a2);
  sub_1DDA19EC8(*a2);
  uint64_t v10 = sub_1DDA19EC8(*a2);
  sub_1DDA19F24(*a2);
  unsigned int v119 = sub_1DDA19E68(*a2);
  unsigned int v117 = sub_1DDA19E68(*a2);
  unsigned int v115 = sub_1DDA19E68(*a2);
  sub_1DDA19E68(*a2);
  unsigned int v113 = sub_1DDA19EC8(*a2);
  unsigned int v111 = sub_1DDA19EC8(*a2);
  unsigned int v109 = sub_1DDA19EC8(*a2);
  unsigned int v107 = sub_1DDA19EC8(*a2);
  unsigned int v105 = sub_1DDA19EC8(*a2);
  unsigned int v103 = sub_1DDA19EC8(*a2);
  unsigned int v102 = sub_1DDA19EC8(*a2);
  unsigned int v101 = sub_1DDA19EC8(*a2);
  unsigned int v100 = sub_1DDA19EC8(*a2);
  unsigned int v99 = sub_1DDA19E68(*a2);
  unsigned int v98 = sub_1DDA19E68(*a2);
  unsigned int v97 = sub_1DDA19E68(*a2);
  uint64_t v11 = sub_1DDA19E68(*a2);
  v123[0] = @"Version";
  unsigned int v121 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v12, v3, v13, v14);
  v124[0] = v121;
  v123[1] = @"Flags";
  uint64_t v96 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v15, (v4 << 16) | (v5 << 8) | v6, v16, v17);
  v124[1] = v96;
  v123[2] = @"CreationTime";
  uint64_t v95 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v18, v7, v19, v20);
  v124[2] = v95;
  v123[3] = @"ModificationTime";
  uint64_t v94 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v21, v8, v22, v23);
  v124[3] = v94;
  v123[4] = @"TrackID";
  uint64_t v93 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v24, v9, v25, v26);
  v124[4] = v93;
  v123[5] = @"Duration";
  uint64_t v92 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v27, v10, v28, v29);
  v124[5] = v92;
  v123[6] = @"Layer";
  uint64_t v120 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v30, v119, v31, v32);
  v124[6] = v120;
  v123[7] = @"AlternateGroup";
  uint64_t v118 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v33, v117, v34, v35);
  v124[7] = v118;
  v123[8] = @"Volume";
  uint64_t v116 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v36, v115, v37, v38);
  v124[8] = v116;
  v123[9] = @"Matrix";
  uint64_t v114 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v39, v113, v40, v41);
  v122[0] = v114;
  uint64_t v112 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v42, v111, v43, v44);
  v122[1] = v112;
  unsigned int v110 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v45, v109, v46, v47);
  v122[2] = v110;
  unsigned int v108 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v48, v107, v49, v50);
  v122[3] = v108;
  unsigned int v106 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v51, v105, v52, v53);
  v122[4] = v106;
  unsigned int v104 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v54, v103, v55, v56);
  v122[5] = v104;
  uint64_t v60 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v57, v102, v58, v59);
  v122[6] = v60;
  uint64_t v64 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v61, v101, v62, v63);
  uint64_t v65 = v11;
  v122[7] = v64;
  uint64_t v69 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v66, v100, v67, v68);
  v122[8] = v69;
  uint64_t v72 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v70, (uint64_t)v122, 9, v71);
  v124[9] = v72;
  v123[10] = @"TrackWidth";
  uint64_t v76 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v73, v99, v74, v75);
  v124[10] = v76;
  v123[11] = @"TrackWidthQ";
  uint64_t v80 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v77, v98, v78, v79);
  v124[11] = v80;
  v123[12] = @"TrackHeight";
  uint64_t v84 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v81, v97, v82, v83);
  v124[12] = v84;
  v123[13] = @"TrackHeightQ";
  uint64_t v88 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v85, v65, v86, v87);
  v124[13] = v88;
  uint64_t v90 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v89, (uint64_t)v124, (uint64_t)v123, 14);

  return v90;
}

void sub_1DDA6609C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27)
{
  _Unwind_Resume(a1);
}

id sub_1DDA661F8(uint64_t a1, uint64_t *a2)
{
  v27[4] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1DDA19DA0(*a2);
  int v5 = sub_1DDA19DA0(*a2);
  int v6 = sub_1DDA19DA0(*a2);
  unsigned int v7 = sub_1DDA19DA0(*a2);
  uint64_t v8 = sub_1DDA19EC8(*a2);
  uint64_t v9 = sub_1DDA19EC8(*a2);
  uint64_t v10 = sub_1DDA61850(a1, a2, v9);
  v26[0] = @"Version";
  uint64_t v14 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v11, v4, v12, v13);
  v27[0] = v14;
  v26[1] = @"Flags";
  uint64_t v18 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v15, (v5 << 16) | (v6 << 8) | v7, v16, v17);
  v27[1] = v18;
  v26[2] = @"MainShootingMode";
  uint64_t v22 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v19, v8, v20, v21);
  void v26[3] = @"boxes";
  v27[2] = v22;
  void v27[3] = v10;
  uint64_t v24 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v23, (uint64_t)v27, (uint64_t)v26, 4);

  return v24;
}

void sub_1DDA6638C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA663C8(uint64_t a1, char *a2)
{
  uint64_t v3 = sub_1DDA6D490(a1, a2);
  uint64_t v4 = sub_1DDA6C0B0((uint64_t)v3, (uint64_t *)a2, v3, 1);

  return v4;
}

void sub_1DDA66424(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA66434(uint64_t a1, char *a2)
{
  uint64_t v3 = sub_1DDA68B78(a1, a2);
  uint64_t v4 = sub_1DDA6C0B0((uint64_t)v3, (uint64_t *)a2, v3, 1);

  return v4;
}

void sub_1DDA66490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA664A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1DDA69A6C();
  uint64_t v4 = sub_1DDA6C0B0((uint64_t)v3, a2, v3, 1);

  return v4;
}

void sub_1DDA664FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA6650C(uint64_t a1, char *a2)
{
  uint64_t v3 = sub_1DDA6D9AC(a1, a2);
  uint64_t v4 = sub_1DDA6C0B0((uint64_t)v3, (uint64_t *)a2, v3, 1);

  return v4;
}

void sub_1DDA66568(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA66578(uint64_t a1, uint64_t *a2)
{
  void v37[5] = *MEMORY[0x1E4F143B8];
  sub_1DDA19DA0(*a2);
  int v3 = sub_1DDA19DA0(*a2);
  int v4 = sub_1DDA19DA0(*a2);
  unsigned int v5 = sub_1DDA19DA0(*a2);
  uint64_t v6 = sub_1DDA19E68(*a2);
  uint64_t v7 = sub_1DDA19E68(*a2);
  uint64_t v8 = sub_1DDA19EC8(*a2);
  sub_1DDA19E68(*a2);
  sub_1DDA19E68(*a2);
  unsigned int v9 = sub_1DDA19CB8(*a2);
  int v34 = (*(uint64_t (**)(void))(*(void *)*a2 + 48))();
  unsigned int v35 = v9;
  unsigned int v35 = *sub_1DDA1A378(&v35, &v34);
  uint64_t v10 = sub_1DDA456E8(&v35);
  v36[0] = @"Flags";
  uint64_t v14 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v11, (v3 << 16) | (v4 << 8) | v5, v12, v13);
  v37[0] = v14;
  v36[1] = @"thumbnailWidth";
  uint64_t v18 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v15, v6, v16, v17);
  v37[1] = v18;
  v36[2] = @"thumbnailHeight";
  uint64_t v22 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v19, v7, v20, v21);
  v37[2] = v22;
  uint64_t v36[3] = @"thumbnailOffset";
  uint64_t v26 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v23, v10, v24, v25);
  v37[3] = v26;
  v36[4] = @"thumbnailLength";
  uint64_t v30 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v27, v8, v28, v29);
  v37[4] = v30;
  uint64_t v32 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v31, (uint64_t)v37, (uint64_t)v36, 5);

  return v32;
}

void sub_1DDA667A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA667EC(uint64_t a1, uint64_t *a2)
{
  v30[4] = *MEMORY[0x1E4F143B8];
  sub_1DDA19EC8(*a2);
  sub_1DDA19E68(*a2);
  uint64_t v3 = sub_1DDA19E68(*a2);
  uint64_t v4 = sub_1DDA19E68(*a2);
  sub_1DDA19E68(*a2);
  uint64_t v5 = sub_1DDA19EC8(*a2);
  unsigned int v6 = sub_1DDA19CB8(*a2);
  int v27 = (*(uint64_t (**)(void))(*(void *)*a2 + 48))();
  unsigned int v28 = v6;
  unsigned int v28 = *sub_1DDA1A378(&v28, &v27);
  uint64_t v7 = sub_1DDA456E8(&v28);
  v29[0] = @"previewWidth";
  uint64_t v11 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v8, v3, v9, v10);
  v30[0] = v11;
  v29[1] = @"previewHeight";
  uint64_t v15 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v12, v4, v13, v14);
  v30[1] = v15;
  void v29[2] = @"previewOffset";
  uint64_t v19 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v16, v7, v17, v18);
  void v30[2] = v19;
  v29[3] = @"previewLength";
  uint64_t v23 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v20, v5, v21, v22);
  uint64_t v30[3] = v23;
  uint64_t v25 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v24, (uint64_t)v30, (uint64_t)v29, 4);

  return v25;
}

void sub_1DDA669BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA669F8(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v129 = *MEMORY[0x1E4F143B8];
  id v106 = a3;
  uint64_t v9 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v5, v6, v7, v8);
  unsigned int v108 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v10, v11, v12, v13);
  objc_msgSend_setObject_forKeyedSubscript_(v9, v14, (uint64_t)v108, @"Metadata", v15);
  uint64_t v16 = sub_1DDA19DA0(*a2);
  int v17 = sub_1DDA19DA0(*a2);
  int v18 = sub_1DDA19DA0(*a2);
  unsigned int v19 = sub_1DDA19DA0(*a2);
  unsigned int v20 = sub_1DDA19EC8(*a2);
  uint64_t v24 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v21, v16, v22, v23);
  objc_msgSend_setObject_forKeyedSubscript_(v9, v25, (uint64_t)v24, @"version", v26);

  uint64_t v30 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v27, (v17 << 16) | (v18 << 8) | v19, v28, v29);
  objc_msgSend_setObject_forKeyedSubscript_(v9, v31, (uint64_t)v30, @"flags", v32);

  if (v20 < 2)
  {
    uint64_t v45 = NSNumber;
    unint64_t v46 = sub_1DDA19F24(*a2);
    uint64_t v33 = objc_msgSend_numberWithUnsignedLongLong_(v45, v47, v46, v48, v49);
    objc_msgSend_setObject_forKeyedSubscript_(v9, v50, (uint64_t)v33, @"offset", v51);
  }
  else
  {
    uint64_t v33 = sub_1DDA49F48(v20);
    do
    {
      int v34 = NSNumber;
      unint64_t v35 = sub_1DDA19F24(*a2);
      uint64_t v39 = objc_msgSend_numberWithUnsignedLongLong_(v34, v36, v35, v37, v38);
      objc_msgSend_addObject_(v33, v40, (uint64_t)v39, v41, v42);

      --v20;
    }
    while (v20);
    objc_msgSend_setObject_forKeyedSubscript_(v9, v43, (uint64_t)v33, @"offset", v44);
  }

  long long v126 = 0u;
  long long v125 = 0u;
  long long v124 = 0u;
  long long v123 = 0u;
  uint64_t v55 = objc_msgSend_objectForKeyedSubscript_(v106, v52, @"Tags", v53, v54);
  uint64_t v60 = objc_msgSend_countByEnumeratingWithState_objects_count_(v55, v56, (uint64_t)&v123, (uint64_t)v128, 16);
  if (v60)
  {
    uint64_t v61 = *(void *)v124;
    do
    {
      for (uint64_t i = 0; i != v60; ++i)
      {
        if (*(void *)v124 != v61) {
          objc_enumerationMutation(v55);
        }
        uint64_t v63 = objc_msgSend_objectForKeyedSubscript_(*(void **)(*((void *)&v123 + 1) + 8 * i), v57, @"tagSize", v58, v59);
        objc_msgSend_unsignedIntValue(v63, v64, v65, v66, v67);
      }
      uint64_t v60 = objc_msgSend_countByEnumeratingWithState_objects_count_(v55, v57, (uint64_t)&v123, (uint64_t)v128, 16);
    }
    while (v60);
  }

  uint64_t v71 = objc_msgSend_objectForKeyedSubscript_(v9, v68, @"offset", v69, v70);
  uint64_t v76 = objc_msgSend_unsignedLongLongValue(v71, v72, v73, v74, v75);

  uint64_t v122 = v76;
  if (v76)
  {
    sub_1DDA27D28(a1, &v119);
    sub_1DDA18488(&v117, (unint64_t *)&v122);
    sub_1DDA1A94C(v121, &v119, (uint64_t)&v117, 0);
    if (v120) {
      sub_1DDA18310(v120);
    }
    sub_1DDA27D28(a1, &v117);
    sub_1DDA29F88(&v119, &v117, 1);
    if (v118) {
      sub_1DDA18310(v118);
    }
    long long v113 = 0u;
    long long v114 = 0u;
    long long v115 = 0u;
    long long v116 = 0u;
    objc_msgSend_objectForKeyedSubscript_(v106, v77, @"Tags", v78, v79);
    obuint64_t j = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v81 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v80, (uint64_t)&v113, (uint64_t)v127, 16);
    if (v81)
    {
      uint64_t v109 = *(void *)v114;
      do
      {
        uint64_t v110 = v81;
        for (uint64_t j = 0; j != v110; ++j)
        {
          if (*(void *)v114 != v109) {
            objc_enumerationMutation(obj);
          }
          uint64_t v86 = *(void **)(*((void *)&v113 + 1) + 8 * j);
          uint64_t v87 = objc_msgSend_objectForKeyedSubscript_(v86, v82, @"tagSize", v83, v84);
          int v92 = objc_msgSend_unsignedIntValue(v87, v88, v89, v90, v91);

          uint64_t v96 = objc_msgSend_objectForKeyedSubscript_(v86, v93, @"tagID", v94, v95);
          int v101 = objc_msgSend_unsignedIntValue(v96, v97, v98, v99, v100);

          sub_1DDA27D28(a1, &v117);
          int v102 = sub_1DDA19EC8(v117);
          if (v118) {
            sub_1DDA18310(v118);
          }
          sub_1DDA27D28(a1, &v117);
          int v103 = sub_1DDA19E68(v117);
          if (v118) {
            sub_1DDA18310(v118);
          }
          if (v92 == v102 && v101 == v103)
          {
            sub_1DDA27D28(a1, &v112);
            int v111 = v92 - 6;
            sub_1DDA1A6EC(v112, &v111);
          }
          sub_1DDA27D28(a1, &v117);
          uint64_t v104 = v117;
          int v111 = v102 - 6;
          sub_1DDA18410((int *)&v112, &v111);
          (*(void (**)(uint64_t, _DWORD **, uint64_t))(*(void *)v104 + 40))(v104, &v112, 1);
          if (v118) {
            sub_1DDA18310(v118);
          }
        }
        uint64_t v81 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v82, (uint64_t)&v113, (uint64_t)v127, 16);
      }
      while (v81);
    }

    sub_1DDA2A000(&v119);
    sub_1DDA1AA18(v121);
  }

  return v9;
}

void sub_1DDA677DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

id sub_1DDA67C40(uint64_t a1, uint64_t *a2, void *a3)
{
  id v66 = a3;
  uint64_t v67 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v5, v6, v7, v8);
  uint64_t v9 = sub_1DDA19DA0(*a2);
  int v10 = sub_1DDA19DA0(*a2);
  int v11 = sub_1DDA19DA0(*a2);
  unsigned int v12 = sub_1DDA19DA0(*a2);
  unsigned int v13 = sub_1DDA19EC8(*a2);
  int v17 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v14, v9, v15, v16);
  objc_msgSend_setObject_forKeyedSubscript_(v67, v18, (uint64_t)v17, @"version", v19);

  uint64_t v23 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v20, (v10 << 16) | (v11 << 8) | v12, v21, v22);
  objc_msgSend_setObject_forKeyedSubscript_(v67, v24, (uint64_t)v23, @"flags", v25);

  if (v13 < 2)
  {
    uint64_t v39 = NSNumber;
    unint64_t v40 = sub_1DDA19F24(*a2);
    uint64_t v26 = objc_msgSend_numberWithUnsignedLongLong_(v39, v41, v40, v42, v43);
    objc_msgSend_setObject_forKeyedSubscript_(v67, v44, (uint64_t)v26, @"offset", v45);
  }
  else
  {
    uint64_t v26 = sub_1DDA49F48(v13);
    unsigned int v27 = v13;
    do
    {
      uint64_t v28 = NSNumber;
      unint64_t v29 = sub_1DDA19F24(*a2);
      uint64_t v33 = objc_msgSend_numberWithUnsignedLongLong_(v28, v30, v29, v31, v32);
      objc_msgSend_addObject_(v26, v34, (uint64_t)v33, v35, v36);

      --v27;
    }
    while (v27);
    objc_msgSend_setObject_forKeyedSubscript_(v67, v37, (uint64_t)v26, @"offset", v38);
  }

  if (v66)
  {
    if (v13 == 1)
    {
      uint64_t v49 = objc_msgSend_objectForKeyedSubscript_(v66, v46, @"sub_header_part_length", v47, v48);
      int v54 = objc_msgSend_unsignedIntValue(v49, v50, v51, v52, v53);

      uint64_t v58 = objc_msgSend_objectForKeyedSubscript_(v67, v55, @"offset", v56, v57);
      uint64_t v63 = objc_msgSend_unsignedLongLongValue(v58, v59, v60, v61, v62);

      uint64_t v73 = v63;
      if (v63)
      {
        sub_1DDA27D28(a1, &v70);
        sub_1DDA18488(&v69, (unint64_t *)&v73);
        sub_1DDA1A94C(v72, &v70, (uint64_t)&v69, 0);
        if (v71) {
          sub_1DDA18310(v71);
        }
        sub_1DDA27D28(a1, &v69);
        int v68 = v54;
        sub_1DDA1A6EC(v69, &v68);
      }
    }
  }
  id v64 = v67;

  return v64;
}

void sub_1DDA688C8(_Unwind_Exception *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15, ...)
{
  va_start(va, a15);

  if (a15) {
    sub_1DDA18310(a15);
  }
  sub_1DDA1AA18((uint64_t *)va);

  _Unwind_Resume(a1);
}

id sub_1DDA68B78(uint64_t a1, const char *a2)
{
  v166[39] = *MEMORY[0x1E4F143B8];
  v165[0] = @"33434";
  uint64_t v163 = qword_1EAB8AE98;
  uint64_t v164 = *MEMORY[0x1E4F2F828];
  uint64_t v86 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], a2, (uint64_t)&v164, (uint64_t)&v163, 1);
  v166[0] = v86;
  v165[1] = @"33437";
  uint64_t v161 = qword_1EAB8AE98;
  uint64_t v162 = *MEMORY[0x1E4F2F830];
  uint64_t v85 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v2, (uint64_t)&v162, (uint64_t)&v161, 1);
  v166[1] = v85;
  v165[2] = @"34850";
  uint64_t v159 = qword_1EAB8AE98;
  uint64_t v160 = *MEMORY[0x1E4F2F820];
  uint64_t v84 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v3, (uint64_t)&v160, (uint64_t)&v159, 1);
  v166[2] = v84;
  v165[3] = @"34855";
  uint64_t v157 = qword_1EAB8AE98;
  uint64_t v158 = *MEMORY[0x1E4F2F870];
  uint64_t v83 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v4, (uint64_t)&v158, (uint64_t)&v157, 1);
  v166[3] = v83;
  v165[4] = @"34864";
  uint64_t v155 = qword_1EAB8AE98;
  uint64_t v156 = *MEMORY[0x1E4F2F910];
  uint64_t v82 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v5, (uint64_t)&v156, (uint64_t)&v155, 1);
  v166[4] = v82;
  v165[5] = @"34866";
  uint64_t v153 = qword_1EAB8AE98;
  uint64_t v154 = *MEMORY[0x1E4F2F8E8];
  uint64_t v81 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v6, (uint64_t)&v154, (uint64_t)&v153, 1);
  v166[5] = v81;
  v165[6] = @"36864";
  uint64_t v7 = *MEMORY[0x1E4F2F968];
  v151[0] = qword_1EAB8AE98;
  v151[1] = qword_1EAB8AEA0;
  v152[0] = v7;
  v152[1] = &unk_1F39ABCA8;
  v151[2] = qword_1EAB8AEA8;
  v152[2] = &unk_1F395ED90;
  uint64_t v80 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v8, (uint64_t)v152, (uint64_t)v151, 3);
  v166[6] = v80;
  v165[7] = @"36867";
  uint64_t v149 = qword_1EAB8AE98;
  uint64_t v150 = *MEMORY[0x1E4F2F7F0];
  uint64_t v79 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v9, (uint64_t)&v150, (uint64_t)&v149, 1);
  v166[7] = v79;
  v165[8] = @"36868";
  uint64_t v147 = qword_1EAB8AE98;
  uint64_t v148 = *MEMORY[0x1E4F2F7E8];
  uint64_t v78 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v10, (uint64_t)&v148, (uint64_t)&v147, 1);
  v166[8] = v78;
  v165[9] = @"36880";
  v145[0] = qword_1EAB8AE98;
  v145[1] = qword_1EAB8AEB0;
  uint64_t v11 = MEMORY[0x1E4F1CC38];
  v146[0] = @"36880";
  v146[1] = MEMORY[0x1E4F1CC38];
  uint64_t v77 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v12, (uint64_t)v146, (uint64_t)v145, 2);
  v166[9] = v77;
  v165[10] = @"36881";
  v143[0] = qword_1EAB8AE98;
  v143[1] = qword_1EAB8AEB0;
  v144[0] = @"36881";
  v144[1] = v11;
  uint64_t v76 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v13, (uint64_t)v144, (uint64_t)v143, 2);
  v166[10] = v76;
  v165[11] = @"36882";
  v141[0] = qword_1EAB8AE98;
  v141[1] = qword_1EAB8AEB0;
  v142[0] = @"36882";
  v142[1] = v11;
  uint64_t v75 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v14, (uint64_t)v142, (uint64_t)v141, 2);
  v166[11] = v75;
  v165[12] = @"37121";
  uint64_t v15 = *MEMORY[0x1E4F2F7C8];
  v139[0] = qword_1EAB8AE98;
  v139[1] = qword_1EAB8AEA0;
  v140[0] = v15;
  v140[1] = &unk_1F39ABCC0;
  v139[2] = qword_1EAB8AEA8;
  v140[2] = &unk_1F395ED90;
  uint64_t v74 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v16, (uint64_t)v140, (uint64_t)v139, 3);
  v166[12] = v74;
  v165[13] = @"37377";
  uint64_t v137 = qword_1EAB8AE98;
  uint64_t v138 = *MEMORY[0x1E4F2F920];
  uint64_t v73 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v17, (uint64_t)&v138, (uint64_t)&v137, 1);
  v166[13] = v73;
  v165[14] = @"37378";
  uint64_t v135 = qword_1EAB8AE98;
  uint64_t v136 = *MEMORY[0x1E4F2F6D0];
  uint64_t v72 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v18, (uint64_t)&v136, (uint64_t)&v135, 1);
  v166[14] = v72;
  v165[15] = @"37380";
  uint64_t v133 = qword_1EAB8AE98;
  uint64_t v134 = *MEMORY[0x1E4F2F810];
  uint64_t v71 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v19, (uint64_t)&v134, (uint64_t)&v133, 1);
  v166[15] = v71;
  v165[16] = @"37383";
  uint64_t v131 = qword_1EAB8AE98;
  uint64_t v132 = *MEMORY[0x1E4F2F8B8];
  uint64_t v70 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v20, (uint64_t)&v132, (uint64_t)&v131, 1);
  v166[16] = v70;
  v165[17] = @"37385";
  uint64_t v129 = qword_1EAB8AE98;
  uint64_t v130 = *MEMORY[0x1E4F2F838];
  uint64_t v69 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v21, (uint64_t)&v130, (uint64_t)&v129, 1);
  v166[17] = v69;
  v165[18] = @"37386";
  uint64_t v127 = qword_1EAB8AE98;
  uint64_t v128 = *MEMORY[0x1E4F2F850];
  int v68 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v22, (uint64_t)&v128, (uint64_t)&v127, 1);
  v166[18] = v68;
  v165[19] = @"37510";
  uint64_t v23 = *MEMORY[0x1E4F2F958];
  v125[0] = qword_1EAB8AE98;
  v125[1] = qword_1EAB8AEB0;
  v126[0] = v23;
  v126[1] = v11;
  uint64_t v67 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v24, (uint64_t)v126, (uint64_t)v125, 2);
  v166[19] = v67;
  v165[20] = @"37520";
  uint64_t v123 = qword_1EAB8AE98;
  uint64_t v124 = *MEMORY[0x1E4F2F940];
  id v66 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v25, (uint64_t)&v124, (uint64_t)&v123, 1);
  v166[20] = v66;
  v165[21] = @"37521";
  uint64_t v121 = qword_1EAB8AE98;
  uint64_t v122 = *MEMORY[0x1E4F2F950];
  uint64_t v65 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v26, (uint64_t)&v122, (uint64_t)&v121, 1);
  v166[21] = v65;
  v165[22] = @"37522";
  uint64_t v119 = qword_1EAB8AE98;
  uint64_t v120 = *MEMORY[0x1E4F2F948];
  id v64 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v27, (uint64_t)&v120, (uint64_t)&v119, 1);
  v166[22] = v64;
  v165[23] = @"40960";
  uint64_t v28 = *MEMORY[0x1E4F2F840];
  v117[0] = qword_1EAB8AE98;
  v117[1] = qword_1EAB8AEA0;
  v118[0] = v28;
  v118[1] = &unk_1F39ABCD8;
  v117[2] = qword_1EAB8AEA8;
  v118[2] = &unk_1F395ED90;
  uint64_t v63 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v29, (uint64_t)v118, (uint64_t)v117, 3);
  v166[23] = v63;
  v165[24] = @"40961";
  uint64_t v115 = qword_1EAB8AE98;
  uint64_t v116 = *MEMORY[0x1E4F2F7C0];
  uint64_t v62 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v30, (uint64_t)&v116, (uint64_t)&v115, 1);
  v166[24] = v62;
  v165[25] = @"40962";
  uint64_t v113 = qword_1EAB8AE98;
  uint64_t v114 = *MEMORY[0x1E4F2F8D8];
  uint64_t v61 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v31, (uint64_t)&v114, (uint64_t)&v113, 1);
  v166[25] = v61;
  v165[26] = @"40963";
  uint64_t v111 = qword_1EAB8AE98;
  uint64_t v112 = *MEMORY[0x1E4F2F8E0];
  uint64_t v60 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v32, (uint64_t)&v112, (uint64_t)&v111, 1);
  v166[26] = v60;
  v165[27] = @"41486";
  uint64_t v109 = qword_1EAB8AE98;
  uint64_t v110 = *MEMORY[0x1E4F2F860];
  uint64_t v59 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v33, (uint64_t)&v110, (uint64_t)&v109, 1);
  v166[27] = v59;
  v165[28] = @"41487";
  uint64_t v107 = qword_1EAB8AE98;
  uint64_t v108 = *MEMORY[0x1E4F2F868];
  uint64_t v58 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v34, (uint64_t)&v108, (uint64_t)&v107, 1);
  v166[28] = v58;
  v165[29] = @"41488";
  uint64_t v105 = qword_1EAB8AE98;
  uint64_t v106 = *MEMORY[0x1E4F2F858];
  uint64_t v57 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v35, (uint64_t)&v106, (uint64_t)&v105, 1);
  v166[29] = v57;
  v165[30] = @"41985";
  uint64_t v103 = qword_1EAB8AE98;
  uint64_t v104 = *MEMORY[0x1E4F2F7E0];
  uint64_t v37 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v36, (uint64_t)&v104, (uint64_t)&v103, 1);
  v166[30] = v37;
  v165[31] = @"41986";
  uint64_t v101 = qword_1EAB8AE98;
  uint64_t v102 = *MEMORY[0x1E4F2F818];
  uint64_t v39 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v38, (uint64_t)&v102, (uint64_t)&v101, 1);
  v166[31] = v39;
  v165[32] = @"41987";
  uint64_t v99 = qword_1EAB8AE98;
  uint64_t v100 = *MEMORY[0x1E4F2F970];
  uint64_t v41 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v40, (uint64_t)&v100, (uint64_t)&v99, 1);
  v166[32] = v41;
  v165[33] = @"41990";
  uint64_t v97 = qword_1EAB8AE98;
  uint64_t v98 = *MEMORY[0x1E4F2F8F8];
  uint64_t v43 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v42, (uint64_t)&v98, (uint64_t)&v97, 1);
  v166[33] = v43;
  v165[34] = @"42032";
  uint64_t v95 = qword_1EAB8AE98;
  uint64_t v96 = *MEMORY[0x1E4F2F7B8];
  uint64_t v45 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v44, (uint64_t)&v96, (uint64_t)&v95, 1);
  v166[34] = v45;
  v165[35] = @"42033";
  uint64_t v93 = qword_1EAB8AE98;
  uint64_t v94 = *MEMORY[0x1E4F2F7A8];
  uint64_t v47 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v46, (uint64_t)&v94, (uint64_t)&v93, 1);
  v166[35] = v47;
  v165[36] = @"42034";
  uint64_t v91 = qword_1EAB8AE98;
  uint64_t v92 = *MEMORY[0x1E4F2F8A0];
  uint64_t v49 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v48, (uint64_t)&v92, (uint64_t)&v91, 1);
  v166[36] = v49;
  v165[37] = @"42036";
  uint64_t v89 = qword_1EAB8AE98;
  uint64_t v90 = *MEMORY[0x1E4F2F890];
  uint64_t v51 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v50, (uint64_t)&v90, (uint64_t)&v89, 1);
  v166[37] = v51;
  v165[38] = @"42037";
  uint64_t v87 = qword_1EAB8AE98;
  uint64_t v88 = *MEMORY[0x1E4F2F898];
  uint64_t v53 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v52, (uint64_t)&v88, (uint64_t)&v87, 1);
  v166[38] = v53;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v54, (uint64_t)v166, (uint64_t)v165, 39);
  id v56 = (id)objc_claimAutoreleasedReturnValue();

  return v56;
}

void sub_1DDA69814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32,void *a33,void *a34,void *a35,void *a36,void *a37,void *a38,void *a39,void *a40)
{
  _Unwind_Resume(a1);
}

id sub_1DDA69A6C()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  v381[93] = *MEMORY[0x1E4F143B8];
  v193[0] = MEMORY[0x1E4F143A8];
  v193[1] = 3221225472;
  v193[2] = sub_1DDA6F1D0;
  void v193[3] = &unk_1E6D04F20;
  v193[4] = v0;
  uint64_t v192 = (void *)MEMORY[0x1E01C46E0](v193);
  v380[0] = @"1";
  v378[0] = qword_1EAB8AE98;
  v378[1] = qword_1EAB8AEB0;
  uint64_t v1 = MEMORY[0x1E4F1CC38];
  v379[0] = @"CameraSettings";
  v379[1] = MEMORY[0x1E4F1CC38];
  v378[2] = qword_1EAB8AEA0;
  v379[2] = &unk_1F39AC008;
  unsigned int v186 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v2, (uint64_t)v379, (uint64_t)v378, 3);
  v381[0] = v186;
  v380[1] = @"2";
  v376[0] = qword_1EAB8AE98;
  v376[1] = qword_1EAB8AEB0;
  v377[0] = @"FocalLength";
  v377[1] = v1;
  id v185 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v3, (uint64_t)v377, (uint64_t)v376, 2);
  v381[1] = v185;
  v380[2] = @"3";
  v374[0] = qword_1EAB8AE98;
  v374[1] = qword_1EAB8AEB0;
  v375[0] = @"FlashInfo";
  v375[1] = v1;
  uint64_t v184 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v4, (uint64_t)v375, (uint64_t)v374, 2);
  v381[2] = v184;
  v380[3] = @"4";
  v372[0] = qword_1EAB8AE98;
  v372[1] = qword_1EAB8AEA0;
  v373[0] = @"ShotInfo";
  v373[1] = &unk_1F39AC020;
  v372[2] = qword_1EAB8AEA8;
  v372[3] = qword_1EAB8AEB0;
  v373[2] = &unk_1F395EF10;
  v373[3] = v1;
  unsigned int v183 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v5, (uint64_t)v373, (uint64_t)v372, 4);
  v381[3] = v183;
  v380[4] = @"5";
  v370[0] = qword_1EAB8AE98;
  v370[1] = qword_1EAB8AEB0;
  v371[0] = @"Panorama";
  v371[1] = v1;
  unint64_t v182 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v6, (uint64_t)v371, (uint64_t)v370, 2);
  v381[4] = v182;
  v380[5] = @"6";
  v368[0] = qword_1EAB8AE98;
  v368[1] = qword_1EAB8AEA0;
  v369[0] = @"ImageType";
  v369[1] = &unk_1F39AC038;
  unsigned int v181 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v7, (uint64_t)v369, (uint64_t)v368, 2);
  v381[5] = v181;
  v380[6] = @"7";
  v366[0] = qword_1EAB8AE98;
  v366[1] = qword_1EAB8AEA0;
  v367[0] = @"FirmwareVersion";
  v367[1] = &unk_1F39AC050;
  v366[2] = qword_1EAB8AEA8;
  v367[2] = &unk_1F395EE10;
  unsigned int v180 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v8, (uint64_t)v367, (uint64_t)v366, 3);
  v381[6] = v180;
  v380[7] = @"8";
  uint64_t v364 = qword_1EAB8AE98;
  uint64_t v365 = @"FileNumber";
  unsigned int v179 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v9, (uint64_t)&v365, (uint64_t)&v364, 1);
  v381[7] = v179;
  v380[8] = @"9";
  v362[0] = qword_1EAB8AE98;
  v362[1] = qword_1EAB8AEA0;
  v363[0] = @"OwnerName";
  v363[1] = &unk_1F39AC068;
  char v178 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v10, (uint64_t)v363, (uint64_t)v362, 2);
  v381[8] = v178;
  v380[9] = @"10";
  v360[0] = qword_1EAB8AE98;
  v360[1] = qword_1EAB8AEB0;
  v361[0] = @"UnknownD30";
  v361[1] = v1;
  uint64_t v177 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v11, (uint64_t)v361, (uint64_t)v360, 2);
  v381[9] = v177;
  v380[10] = @"12";
  uint64_t v358 = qword_1EAB8AE98;
  v359 = @"SerialNumber";
  unsigned int v176 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v12, (uint64_t)&v359, (uint64_t)&v358, 1);
  v381[10] = v176;
  v380[11] = @"13";
  v356[0] = qword_1EAB8AE98;
  v356[1] = qword_1EAB8AEB0;
  v357[0] = @"CameraInfo";
  v357[1] = v1;
  uint64_t v175 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v13, (uint64_t)v357, (uint64_t)v356, 2);
  v381[11] = v175;
  v380[12] = @"14";
  uint64_t v354 = qword_1EAB8AE98;
  uint64_t v355 = @"FileLength";
  unsigned int v174 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v14, (uint64_t)&v355, (uint64_t)&v354, 1);
  v381[12] = v174;
  v380[13] = @"15";
  v352[0] = qword_1EAB8AE98;
  v352[1] = qword_1EAB8AEB0;
  v353[0] = @"CustomFunctions";
  v353[1] = v1;
  uint64_t v173 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v15, (uint64_t)v353, (uint64_t)v352, 2);
  v381[13] = v173;
  v380[14] = @"16";
  uint64_t v350 = qword_1EAB8AE98;
  v351 = @"ModelID";
  uint64_t v172 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v16, (uint64_t)&v351, (uint64_t)&v350, 1);
  v381[14] = v172;
  v380[15] = @"17";
  v348[0] = qword_1EAB8AE98;
  v348[1] = qword_1EAB8AEB0;
  v349[0] = @"MovieInfo";
  v349[1] = v1;
  unsigned int v171 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v17, (uint64_t)v349, (uint64_t)v348, 2);
  v381[15] = v171;
  v380[16] = @"18";
  v346[0] = qword_1EAB8AE98;
  v346[1] = qword_1EAB8AEB0;
  v347[0] = @"AFInfo";
  v347[1] = v1;
  uint64_t v170 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v18, (uint64_t)v347, (uint64_t)v346, 2);
  v381[16] = v170;
  v380[17] = @"19";
  v344[0] = qword_1EAB8AE98;
  v344[1] = qword_1EAB8AEB0;
  v345[0] = @"ThumbnailImageValidArea";
  v345[1] = v1;
  uint64_t v169 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v19, (uint64_t)v345, (uint64_t)v344, 2);
  v381[17] = v169;
  v380[18] = @"21";
  v342[0] = qword_1EAB8AE98;
  v342[1] = qword_1EAB8AEB0;
  v343[0] = @"SerialNumberFormat";
  v343[1] = v1;
  uint64_t v168 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v20, (uint64_t)v343, (uint64_t)v342, 2);
  v381[18] = v168;
  v380[19] = @"25";
  v340[0] = qword_1EAB8AE98;
  v340[1] = qword_1EAB8AEB0;
  v341[0] = @"25";
  v341[1] = v1;
  double v167 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v21, (uint64_t)v341, (uint64_t)v340, 2);
  v381[19] = v167;
  v380[20] = @"26";
  uint64_t v338 = qword_1EAB8AE98;
  uint64_t v339 = @"SuperMacro";
  uint64_t v166 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v22, (uint64_t)&v339, (uint64_t)&v338, 1);
  v381[20] = v166;
  v380[21] = @"28";
  v336[0] = qword_1EAB8AE98;
  v336[1] = qword_1EAB8AEB0;
  v337[0] = @"DateStampMode";
  v337[1] = v1;
  uint64_t v165 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v23, (uint64_t)v337, (uint64_t)v336, 2);
  v381[21] = v165;
  v380[22] = @"29";
  v334[0] = qword_1EAB8AE98;
  v334[1] = qword_1EAB8AEB0;
  v335[0] = @"MyColors";
  v335[1] = v1;
  uint64_t v164 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v24, (uint64_t)v335, (uint64_t)v334, 2);
  v381[22] = v164;
  v380[23] = @"30";
  uint64_t v332 = qword_1EAB8AE98;
  uint64_t v333 = @"FirmwareRevision";
  uint64_t v163 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v25, (uint64_t)&v333, (uint64_t)&v332, 1);
  v381[23] = v163;
  v380[24] = @"35";
  v330[0] = qword_1EAB8AE98;
  v330[1] = qword_1EAB8AEB0;
  v331[0] = @"Categories";
  v331[1] = v1;
  uint64_t v162 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v26, (uint64_t)v331, (uint64_t)v330, 2);
  v381[24] = v162;
  v380[25] = @"36";
  v328[0] = qword_1EAB8AE98;
  v328[1] = qword_1EAB8AEB0;
  v329[0] = @"FaceDetect1";
  v329[1] = v1;
  uint64_t v161 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v27, (uint64_t)v329, (uint64_t)v328, 2);
  v381[25] = v161;
  v380[26] = @"37";
  v326[0] = qword_1EAB8AE98;
  v326[1] = qword_1EAB8AEB0;
  v327[0] = @"FaceDetect2";
  v327[1] = v1;
  uint64_t v160 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v28, (uint64_t)v327, (uint64_t)v326, 2);
  v381[26] = v160;
  v380[27] = @"38";
  v324[0] = qword_1EAB8AE98;
  v324[1] = qword_1EAB8AEB0;
  v325[0] = @"AFInfo2";
  v325[1] = v1;
  v324[2] = qword_1EAB8AEA0;
  v324[3] = qword_1EAB8AEA8;
  v325[2] = &unk_1F39AC080;
  v325[3] = &unk_1F395EE90;
  uint64_t v159 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v29, (uint64_t)v325, (uint64_t)v324, 4);
  v381[27] = v159;
  v380[28] = @"39";
  v322[0] = qword_1EAB8AE98;
  v322[1] = qword_1EAB8AEB0;
  v323[0] = @"ContrastInfo";
  v323[1] = v1;
  uint64_t v158 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v30, (uint64_t)v323, (uint64_t)v322, 2);
  v381[28] = v158;
  v380[29] = @"40";
  v320[0] = qword_1EAB8AE98;
  v320[1] = qword_1EAB8AEB0;
  v321[0] = @"ImageUniqueID";
  v321[1] = v1;
  uint64_t v157 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v31, (uint64_t)v321, (uint64_t)v320, 2);
  v381[29] = v157;
  v380[30] = @"47";
  v318[0] = qword_1EAB8AE98;
  v318[1] = qword_1EAB8AEB0;
  v319[0] = @"FaceDetect3";
  v319[1] = v1;
  uint64_t v156 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v32, (uint64_t)v319, (uint64_t)v318, 2);
  v381[30] = v156;
  v380[31] = @"51";
  v316[0] = qword_1EAB8AE98;
  v316[1] = qword_1EAB8AEB0;
  v317[0] = @"51";
  v317[1] = v1;
  uint64_t v155 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v33, (uint64_t)v317, (uint64_t)v316, 2);
  v381[31] = v155;
  v380[32] = @"53";
  v314[0] = qword_1EAB8AE98;
  v314[1] = qword_1EAB8AEB0;
  v315[0] = @"TimeInfo";
  v315[1] = v1;
  uint64_t v154 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v34, (uint64_t)v315, (uint64_t)v314, 2);
  v381[32] = v154;
  v380[33] = @"56";
  v312[0] = qword_1EAB8AE98;
  v312[1] = qword_1EAB8AEB0;
  v313[0] = @"BatteryType";
  v313[1] = v1;
  uint64_t v153 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v35, (uint64_t)v313, (uint64_t)v312, 2);
  v381[33] = v153;
  v380[34] = @"60";
  v310[0] = qword_1EAB8AE98;
  v310[1] = qword_1EAB8AEB0;
  v311[0] = @"AFInfo3";
  v311[1] = v1;
  uint64_t v152 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v36, (uint64_t)v311, (uint64_t)v310, 2);
  v381[34] = v152;
  v380[35] = @"61";
  v308[0] = qword_1EAB8AE98;
  v308[1] = qword_1EAB8AEB0;
  v309[0] = @"61";
  v309[1] = v1;
  uint64_t v151 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v37, (uint64_t)v309, (uint64_t)v308, 2);
  v381[35] = v151;
  v380[36] = @"63";
  v306[0] = qword_1EAB8AE98;
  v306[1] = qword_1EAB8AEB0;
  v307[0] = @"63";
  v307[1] = v1;
  uint64_t v150 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v38, (uint64_t)v307, (uint64_t)v306, 2);
  v381[36] = v150;
  v380[37] = @"129";
  v304[0] = qword_1EAB8AE98;
  v304[1] = qword_1EAB8AEB0;
  v305[0] = @"RawDataOffset";
  v305[1] = v1;
  uint64_t v149 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v39, (uint64_t)v305, (uint64_t)v304, 2);
  v381[37] = v149;
  v380[38] = @"131";
  v302[0] = qword_1EAB8AE98;
  v302[1] = qword_1EAB8AEB0;
  v303[0] = @"OriginalDecisionDataOffset";
  v303[1] = v1;
  uint64_t v148 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v40, (uint64_t)v303, (uint64_t)v302, 2);
  v381[38] = v148;
  v380[39] = @"144";
  v300[0] = qword_1EAB8AE98;
  v300[1] = qword_1EAB8AEB0;
  v301[0] = @"CustomFunctions";
  v301[1] = v1;
  uint64_t v147 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v41, (uint64_t)v301, (uint64_t)v300, 2);
  v381[39] = v147;
  v380[40] = @"145";
  v298[0] = qword_1EAB8AE98;
  v298[1] = qword_1EAB8AEB0;
  v299[0] = @"PersonalFunctions";
  v299[1] = v1;
  int v146 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v42, (uint64_t)v299, (uint64_t)v298, 2);
  v381[40] = v146;
  v380[41] = @"146";
  v296[0] = qword_1EAB8AE98;
  v296[1] = qword_1EAB8AEB0;
  v297[0] = @"PersonalFunctionValues";
  v297[1] = v1;
  uint64_t v145 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v43, (uint64_t)v297, (uint64_t)v296, 2);
  v381[41] = v145;
  v380[42] = @"147";
  v294[0] = qword_1EAB8AE98;
  v294[1] = qword_1EAB8AEB0;
  v295[0] = @"FileInfo";
  v295[1] = v1;
  uint64_t v144 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v44, (uint64_t)v295, (uint64_t)v294, 2);
  v381[42] = v144;
  v380[43] = @"148";
  v292[0] = qword_1EAB8AE98;
  v292[1] = qword_1EAB8AEB0;
  v293[0] = @"AFPointsInFocus";
  v293[1] = v1;
  uint64_t v143 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v45, (uint64_t)v293, (uint64_t)v292, 2);
  v381[43] = v143;
  v380[44] = @"149";
  uint64_t v290 = qword_1EAB8AE98;
  uint64_t v291 = *MEMORY[0x1E4F2FC30];
  double v142 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v46, (uint64_t)&v291, (uint64_t)&v290, 1);
  v381[44] = v142;
  v380[45] = @"150";
  v288[0] = qword_1EAB8AE98;
  v288[1] = qword_1EAB8AEB0;
  v289[0] = @"InternalSerialNumber";
  v289[1] = v1;
  uint64_t v141 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v47, (uint64_t)v289, (uint64_t)v288, 2);
  v381[45] = v141;
  v380[46] = @"151";
  v286[0] = qword_1EAB8AE98;
  v286[1] = qword_1EAB8AEB0;
  v287[0] = @"DustRemovalData";
  v287[1] = v1;
  uint64_t v140 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v48, (uint64_t)v287, (uint64_t)v286, 2);
  v381[46] = v140;
  v380[47] = @"152";
  v284[0] = qword_1EAB8AE98;
  v284[1] = qword_1EAB8AEB0;
  v285[0] = @"CropInfo";
  v285[1] = v1;
  v284[2] = qword_1EAB8AEA0;
  v284[3] = qword_1EAB8AEA8;
  v285[2] = &unk_1F39AC098;
  v285[3] = &unk_1F395EEB0;
  uint64_t v139 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v49, (uint64_t)v285, (uint64_t)v284, 4);
  v381[47] = v139;
  v380[48] = @"153";
  v282[0] = qword_1EAB8AE98;
  v282[1] = qword_1EAB8AEB0;
  v283[0] = @"CustomFunctions2";
  v283[1] = v1;
  uint64_t v138 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v50, (uint64_t)v283, (uint64_t)v282, 2);
  v381[48] = v138;
  v380[49] = @"154";
  v280[0] = qword_1EAB8AE98;
  v280[1] = qword_1EAB8AEB0;
  v281[0] = @"AspectInfo";
  v281[1] = v1;
  v280[2] = qword_1EAB8AEA0;
  v280[3] = qword_1EAB8AEA8;
  v281[2] = &unk_1F39AC0B0;
  v281[3] = &unk_1F395EE70;
  uint64_t v137 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v51, (uint64_t)v281, (uint64_t)v280, 4);
  v381[49] = v137;
  v380[50] = @"160";
  v278[0] = qword_1EAB8AE98;
  v278[1] = qword_1EAB8AEB0;
  v279[0] = @"ProcessingInfo";
  v279[1] = v1;
  v278[2] = qword_1EAB8AEA0;
  v278[3] = qword_1EAB8AEA8;
  v279[2] = &unk_1F39AC0C8;
  v279[3] = &unk_1F395EEF0;
  uint64_t v136 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v52, (uint64_t)v279, (uint64_t)v278, 4);
  v381[50] = v136;
  v380[51] = @"161";
  v276[0] = qword_1EAB8AE98;
  v276[1] = qword_1EAB8AEB0;
  v277[0] = @"ToneCurveTable";
  v277[1] = v1;
  uint64_t v135 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v53, (uint64_t)v277, (uint64_t)v276, 2);
  v381[51] = v135;
  v380[52] = @"162";
  v274[0] = qword_1EAB8AE98;
  v274[1] = qword_1EAB8AEB0;
  v275[0] = @"SharpnessTable";
  v275[1] = v1;
  uint64_t v127 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v54, (uint64_t)v275, (uint64_t)v274, 2);
  v381[52] = v127;
  v380[53] = @"163";
  v272[0] = qword_1EAB8AE98;
  v272[1] = qword_1EAB8AEB0;
  v273[0] = @"SharpnessFreqTable";
  v273[1] = v1;
  long long v126 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v55, (uint64_t)v273, (uint64_t)v272, 2);
  v381[53] = v126;
  v380[54] = @"164";
  v270[0] = qword_1EAB8AE98;
  v270[1] = qword_1EAB8AEB0;
  v271[0] = @"WhiteBalanceTable";
  v271[1] = v1;
  long long v125 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v56, (uint64_t)v271, (uint64_t)v270, 2);
  v381[54] = v125;
  v380[55] = @"169";
  v268[0] = qword_1EAB8AE98;
  v268[1] = qword_1EAB8AEB0;
  v269[0] = @"ColorBalance";
  v269[1] = v1;
  uint64_t v124 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v57, (uint64_t)v269, (uint64_t)v268, 2);
  v381[55] = v124;
  v380[56] = @"170";
  v266[0] = qword_1EAB8AE98;
  v266[1] = qword_1EAB8AEB0;
  v267[0] = @"MeasuredColor";
  v267[1] = v1;
  uint64_t v123 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v58, (uint64_t)v267, (uint64_t)v266, 2);
  v381[56] = v123;
  v380[57] = @"174";
  uint64_t v264 = qword_1EAB8AE98;
  uint64_t v265 = @"ColorTemperature";
  uint64_t v122 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v59, (uint64_t)&v265, (uint64_t)&v264, 1);
  v381[57] = v122;
  v380[58] = @"176";
  v262[0] = qword_1EAB8AE98;
  v262[1] = qword_1EAB8AEB0;
  v263[0] = @"Flags";
  v263[1] = v1;
  uint64_t v121 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v60, (uint64_t)v263, (uint64_t)v262, 2);
  v381[58] = v121;
  v380[59] = @"177";
  v260[0] = qword_1EAB8AE98;
  v260[1] = qword_1EAB8AEB0;
  v261[0] = @"ModifiedInfo";
  v261[1] = v1;
  uint64_t v120 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v61, (uint64_t)v261, (uint64_t)v260, 2);
  v381[59] = v120;
  v380[60] = @"178";
  v258[0] = qword_1EAB8AE98;
  v258[1] = qword_1EAB8AEB0;
  v259[0] = @"ToneCurveMatching";
  v259[1] = v1;
  uint64_t v119 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v62, (uint64_t)v259, (uint64_t)v258, 2);
  v381[60] = v119;
  v380[61] = @"179";
  v256[0] = qword_1EAB8AE98;
  v256[1] = qword_1EAB8AEB0;
  v257[0] = @"WhiteBalanceMatching";
  v257[1] = v1;
  uint64_t v118 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v63, (uint64_t)v257, (uint64_t)v256, 2);
  v381[61] = v118;
  v380[62] = @"180";
  uint64_t v254 = qword_1EAB8AE98;
  uint64_t v255 = @"ColorSpace";
  uint64_t v117 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v64, (uint64_t)&v255, (uint64_t)&v254, 1);
  v381[62] = v117;
  v380[63] = @"182";
  v252[0] = qword_1EAB8AE98;
  v252[1] = qword_1EAB8AEB0;
  v253[0] = @"PreviewImageInfo";
  v253[1] = v1;
  uint64_t v107 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v65, (uint64_t)v253, (uint64_t)v252, 2);
  v381[63] = v107;
  v380[64] = @"208";
  v250[0] = qword_1EAB8AE98;
  v250[1] = qword_1EAB8AEB0;
  v251[0] = @"VRDOffset";
  v251[1] = v1;
  uint64_t v106 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v66, (uint64_t)v251, (uint64_t)v250, 2);
  v381[64] = v106;
  v380[65] = @"224";
  v248[0] = qword_1EAB8AE98;
  v248[1] = qword_1EAB8AEB0;
  v249[0] = @"SensorInfo";
  v249[1] = v1;
  v248[2] = qword_1EAB8AEA8;
  v249[2] = &unk_1F395EE30;
  uint64_t v105 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v67, (uint64_t)v249, (uint64_t)v248, 3);
  v381[65] = v105;
  v380[66] = @"16385";
  v246[0] = qword_1EAB8AE98;
  v246[1] = qword_1EAB8AEB0;
  v247[0] = @"ColorData";
  v247[1] = v1;
  v247[2] = &unk_1F39AC0E0;
  v246[2] = qword_1EAB8AEA0;
  v246[3] = qword_1EAB8AEA8;
  uint64_t v191 = (void *)MEMORY[0x1E01C46E0](v192);
  v247[3] = v191;
  uint64_t v190 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v68, (uint64_t)v247, (uint64_t)v246, 4);
  v381[66] = v190;
  v380[67] = @"16386";
  v244[0] = qword_1EAB8AE98;
  v244[1] = qword_1EAB8AEB0;
  v245[0] = @"CRWParam";
  v245[1] = v1;
  v189 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v69, (uint64_t)v245, (uint64_t)v244, 2);
  v381[67] = v189;
  v380[68] = @"16387";
  v242[0] = qword_1EAB8AE98;
  v242[1] = qword_1EAB8AEB0;
  v243[0] = @"ColorInfo";
  v243[1] = v1;
  unsigned int v188 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v70, (uint64_t)v243, (uint64_t)v242, 2);
  v381[68] = v188;
  v380[69] = @"16389";
  v240[0] = qword_1EAB8AE98;
  v240[1] = qword_1EAB8AEB0;
  v241[0] = @"Flavor";
  v241[1] = v1;
  uint64_t v187 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v71, (uint64_t)v241, (uint64_t)v240, 2);
  v381[69] = v187;
  v380[70] = @"16392";
  v238[0] = qword_1EAB8AE98;
  v238[1] = qword_1EAB8AEB0;
  v239[0] = @"PictureStyleUserDef";
  v239[1] = v1;
  uint64_t v134 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v72, (uint64_t)v239, (uint64_t)v238, 2);
  v381[70] = v134;
  v380[71] = @"16393";
  v236[0] = qword_1EAB8AE98;
  v236[1] = qword_1EAB8AEB0;
  v237[0] = @"PictureStylePC";
  v237[1] = v1;
  uint64_t v133 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v73, (uint64_t)v237, (uint64_t)v236, 2);
  v381[71] = v133;
  v380[72] = @"16400";
  v234[0] = qword_1EAB8AE98;
  v234[1] = qword_1EAB8AEB0;
  v235[0] = @"CustomPictureStyleFileName";
  v235[1] = v1;
  uint64_t v132 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v74, (uint64_t)v235, (uint64_t)v234, 2);
  v381[72] = v132;
  v380[73] = @"16401";
  v232[0] = qword_1EAB8AE98;
  v232[1] = qword_1EAB8AEB0;
  v233[0] = @"16401";
  v233[1] = v1;
  uint64_t v131 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v75, (uint64_t)v233, (uint64_t)v232, 2);
  v381[73] = v131;
  v380[74] = @"16402";
  v230[0] = qword_1EAB8AE98;
  v230[1] = qword_1EAB8AEB0;
  v231[0] = @"16402";
  v231[1] = v1;
  uint64_t v130 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v76, (uint64_t)v231, (uint64_t)v230, 2);
  v381[74] = v130;
  v380[75] = @"16403";
  v228[0] = qword_1EAB8AE98;
  v228[1] = qword_1EAB8AEB0;
  v229[0] = @"AFMicroAdj";
  v229[1] = v1;
  uint64_t v129 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v77, (uint64_t)v229, (uint64_t)v228, 2);
  v381[75] = v129;
  v380[76] = @"16405";
  v226[0] = qword_1EAB8AE98;
  v226[1] = qword_1EAB8AEB0;
  v227[0] = @"VignettingCorr";
  v227[1] = v1;
  uint64_t v128 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v78, (uint64_t)v227, (uint64_t)v226, 2);
  v381[76] = v128;
  v380[77] = @"16406";
  v224[0] = qword_1EAB8AE98;
  v224[1] = qword_1EAB8AEB0;
  v225[0] = @"VignettingCorr2";
  v225[1] = v1;
  v224[2] = qword_1EAB8AEA0;
  v224[3] = qword_1EAB8AEA8;
  v225[2] = &unk_1F39AC0F8;
  v225[3] = &unk_1F395EE50;
  uint64_t v116 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v79, (uint64_t)v225, (uint64_t)v224, 4);
  v381[77] = v116;
  v380[78] = @"16408";
  v222[0] = qword_1EAB8AE98;
  v222[1] = qword_1EAB8AEB0;
  v223[0] = @"LightingOpt";
  v223[1] = v1;
  v222[2] = qword_1EAB8AEA0;
  v222[3] = qword_1EAB8AEA8;
  v223[2] = &unk_1F39AC110;
  v223[3] = &unk_1F395EED0;
  uint64_t v115 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v80, (uint64_t)v223, (uint64_t)v222, 4);
  v381[78] = v115;
  v380[79] = @"16409";
  v220[0] = qword_1EAB8AE98;
  v220[1] = qword_1EAB8AEB0;
  v221[0] = @"LensInfo";
  v221[1] = v1;
  uint64_t v114 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v81, (uint64_t)v221, (uint64_t)v220, 2);
  v381[79] = v114;
  v380[80] = @"16416";
  v218[0] = qword_1EAB8AE98;
  v218[1] = qword_1EAB8AEB0;
  v219[0] = @"AmbienceInfo";
  v219[1] = v1;
  uint64_t v113 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v82, (uint64_t)v219, (uint64_t)v218, 2);
  v381[80] = v113;
  v380[81] = @"16417";
  v216[0] = qword_1EAB8AE98;
  v216[1] = qword_1EAB8AEB0;
  v217[0] = @"MultiExp";
  v217[1] = v1;
  uint64_t v112 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v83, (uint64_t)v217, (uint64_t)v216, 2);
  v381[81] = v112;
  v380[82] = @"16420";
  v214[0] = qword_1EAB8AE98;
  v214[1] = qword_1EAB8AEB0;
  v215[0] = @"FilterInfo";
  v215[1] = v1;
  uint64_t v111 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v84, (uint64_t)v215, (uint64_t)v214, 2);
  v381[82] = v111;
  v380[83] = @"16421";
  v212[0] = qword_1EAB8AE98;
  v212[1] = qword_1EAB8AEB0;
  v213[0] = @"HDRInfo";
  v213[1] = v1;
  uint64_t v110 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v85, (uint64_t)v213, (uint64_t)v212, 2);
  v381[83] = v110;
  v380[84] = @"16423";
  v210[0] = qword_1EAB8AE98;
  v210[1] = qword_1EAB8AEB0;
  v211[0] = @"16423";
  v211[1] = v1;
  uint64_t v109 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v86, (uint64_t)v211, (uint64_t)v210, 2);
  v381[84] = v109;
  v380[85] = @"16424";
  v208[0] = qword_1EAB8AE98;
  v208[1] = qword_1EAB8AEB0;
  v209[0] = @"AFConfig";
  v209[1] = v1;
  uint64_t v108 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v87, (uint64_t)v209, (uint64_t)v208, 2);
  v381[85] = v108;
  v380[86] = @"16428";
  v206[0] = qword_1EAB8AE98;
  v206[1] = qword_1EAB8AEB0;
  v207[0] = @"16428";
  v207[1] = v1;
  uint64_t v89 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v88, (uint64_t)v207, (uint64_t)v206, 2);
  v381[86] = v89;
  v380[87] = @"16430";
  v204[0] = qword_1EAB8AE98;
  v204[1] = qword_1EAB8AEB0;
  v205[0] = @"16430";
  v205[1] = v1;
  uint64_t v91 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v90, (uint64_t)v205, (uint64_t)v204, 2);
  v381[87] = v91;
  v380[88] = @"16435";
  v202[0] = qword_1EAB8AE98;
  v202[1] = qword_1EAB8AEB0;
  v203[0] = @"16435";
  v203[1] = v1;
  uint64_t v93 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v92, (uint64_t)v203, (uint64_t)v202, 2);
  v381[88] = v93;
  v380[89] = @"16437";
  v200[0] = qword_1EAB8AE98;
  v200[1] = qword_1EAB8AEB0;
  v201[0] = @"16437";
  v201[1] = v1;
  uint64_t v95 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v94, (uint64_t)v201, (uint64_t)v200, 2);
  v381[89] = v95;
  v380[90] = @"16439";
  v198[0] = qword_1EAB8AE98;
  v198[1] = qword_1EAB8AEB0;
  v199[0] = @"16439";
  v199[1] = v1;
  uint64_t v97 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v96, (uint64_t)v199, (uint64_t)v198, 2);
  v381[90] = v97;
  v380[91] = @"16441";
  v196[0] = qword_1EAB8AE98;
  v196[1] = qword_1EAB8AEB0;
  v197[0] = @"16441";
  v197[1] = v1;
  uint64_t v99 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v98, (uint64_t)v197, (uint64_t)v196, 2);
  v381[91] = v99;
  v380[92] = @"16444";
  v194[0] = qword_1EAB8AE98;
  v194[1] = qword_1EAB8AEB0;
  v195[0] = @"16444";
  v195[1] = v1;
  uint64_t v101 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v100, (uint64_t)v195, (uint64_t)v194, 2);
  v381[92] = v101;
  uint64_t v104 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v102, (uint64_t)v381, (uint64_t)v380, 93);

  return v104;
}

void sub_1DDA6BAD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32,void *a33,void *a34,void *a35,void *a36,void *a37,void *a38,void *a39,void *a40,void *a41,void *a42,void *a43,void *a44,void *a45,void *a46,void *a47,void *a48,void *a49,void *a50,void *a51,void *a52,void *a53,void *a54,void *a55,void *a56,void *a57,void *a58,void *a59,void *a60,void *a61,void *a62,void *a63)
{
  _Unwind_Resume(a1);
}

id sub_1DDA6C0B0(uint64_t a1, uint64_t *a2, void *a3, char a4)
{
  v289[6] = *MEMORY[0x1E4F143B8];
  id v278 = a3;
  objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v5, v6, v7, v8);
  id v276 = (id)objc_claimAutoreleasedReturnValue();
  int v9 = sub_1DDA19E68(*a2);
  if (v9 != 18761 && v9 != 19789)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if (v9 == 18761) {
    uint64_t v11 = 1;
  }
  else {
    uint64_t v11 = 2;
  }
  sub_1DDA19C9C(*a2, v11);
  if (sub_1DDA19E68(*a2) != 42)
  {
    v272 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v272, "RawCameraException");
    __cxa_throw(v272, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  int v287 = 0;
  int v287 = sub_1DDA19EC8(*a2);
  v281 = a2;
  uint64_t v12 = *a2;
  sub_1DDA18410((int *)&v285, &v287);
  (*(void (**)(uint64_t, std::string *, void))(*(void *)v12 + 40))(v12, &v285, 0);
  unsigned int v13 = v281;
  unsigned int v277 = sub_1DDA19E68(*v281);
  if (v277)
  {
    int v279 = 0;
    while (2)
    {
      unsigned int v280 = sub_1DDA19E68(*v13);
      uint64_t v14 = sub_1DDA19E68(*v13);
      uint64_t v15 = sub_1DDA19EC8(*v13);
      unsigned int v286 = 0;
      uint64_t v16 = sub_1DDA19EC8(*v13);
      unsigned int v286 = v16;
      uint64_t v20 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v17, v16, v18, v19);
      uint64_t v26 = (__CFString *)v20;
      switch((int)v14)
      {
        case 1:
          if (v15 >= 5)
          {
            sub_1DDA18410((int *)__p, (int *)&v286);
            sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            sub_1DDA49F48(v15);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
            int v28 = v15;
            do
            {
              unint64_t v29 = NSNumber;
              uint64_t v30 = sub_1DDA19DA0(*v281);
              int v34 = objc_msgSend_numberWithUnsignedChar_(v29, v31, v30, v32, v33);
              objc_msgSend_addObject_(v27, v35, (uint64_t)v34, v36, v37);

              --v28;
            }
            while (v28);
            goto LABEL_64;
          }
          sub_1DDA49F48(v15);
          unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          if (v15)
          {
            uint64_t v196 = (v15 - 1) + 1;
            uint64_t v197 = &v286;
            do
            {
              unsigned int v198 = *(unsigned __int8 *)v197;
              uint64_t v197 = (unsigned int *)((char *)v197 + 1);
              uint64_t v199 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v193, v198, v194, v195);
              objc_msgSend_addObject_(v27, v200, (uint64_t)v199, v201, v202);

              --v196;
            }
            while (v196);
          }
          goto LABEL_77;
        case 2:
          if (v15 < 5)
          {
            uint64_t v203 = sub_1DDA19C94(*v13);
            unsigned int v207 = v286;
            unsigned int v208 = bswap32(v286);
            if (v203 == 2) {
              unsigned int v207 = v208;
            }
            LODWORD(__p[0]) = v207;
            memset(&v285, 0, sizeof(v285));
            if (!v15) {
              goto LABEL_101;
            }
            uint64_t v209 = v15;
            uint64_t v210 = (std::string::value_type *)__p;
            do
            {
              std::string::value_type v211 = *v210++;
              std::string::append(&v285, 1uLL, v211);
              --v209;
            }
            while (v209);
            if ((v285.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              objc_msgSend_stringWithUTF8String_(NSString, v204, (uint64_t)v285.__r_.__value_.__l.__data_, v205, v206);
            }
            else {
LABEL_101:
            }
              objc_msgSend_stringWithUTF8String_(NSString, v204, (uint64_t)&v285, v205, v206);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            if (SHIBYTE(v285.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v285.__r_.__value_.__l.__data_);
            }
          }
          else
          {
            sub_1DDA18410((int *)__p, (int *)&v286);
            sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            __p[0] = 0;
            __p[1] = 0;
            uint64_t v284 = 0;
            uint64_t v101 = *v13;
            unsigned int v282 = v15;
            unsigned int v27 = &stru_1F398F7F8;
            if (sub_1DDA1A0CC(v101, &v282, (uint64_t)__p))
            {
              if (v284 >= 0) {
                objc_msgSend_stringWithUTF8String_(NSString, v102, (uint64_t)__p, v103, v104);
              }
              else {
                objc_msgSend_stringWithUTF8String_(NSString, v102, (uint64_t)__p[0], v103, v104);
              }
              unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
            }

            if (SHIBYTE(v284) < 0) {
              operator delete(__p[0]);
            }
            sub_1DDA1AA18((uint64_t *)&v285);
          }
          goto LABEL_104;
        case 3:
          if (v15 >= 3)
          {
            sub_1DDA18410((int *)__p, (int *)&v286);
            sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            sub_1DDA49F48(v15);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
            int v71 = v15;
            do
            {
              uint64_t v72 = NSNumber;
              uint64_t v73 = sub_1DDA19E68(*v281);
              uint64_t v77 = objc_msgSend_numberWithUnsignedShort_(v72, v74, v73, v75, v76);
              objc_msgSend_addObject_(v27, v78, (uint64_t)v77, v79, v80);

              --v71;
            }
            while (v71);
            goto LABEL_64;
          }
          if (v15 != 2)
          {
            objc_msgSend_numberWithUnsignedShort_(NSNumber, v21, (unsigned __int16)v286, v23, v24);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            goto LABEL_104;
          }
          sub_1DDA49F48(2uLL);
          unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          uint64_t v180 = 0;
          do
          {
            unsigned int v181 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v177, *(unsigned __int16 *)((char *)&v286 + v180), v178, v179);
            objc_msgSend_addObject_(v27, v182, (uint64_t)v181, v183, v184);

            v180 += 2;
          }
          while (v180 != 4);
          goto LABEL_77;
        case 4:
          if (v15 < 2)
          {
            objc_msgSend_numberWithUnsignedInt_(NSNumber, v21, v286, v23, v24);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            goto LABEL_104;
          }
          sub_1DDA18410((int *)__p, (int *)&v286);
          sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
          sub_1DDA49F48(v15);
          unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          int v81 = v15;
          do
          {
            uint64_t v82 = NSNumber;
            uint64_t v83 = sub_1DDA19EC8(*v281);
            uint64_t v87 = objc_msgSend_numberWithUnsignedInt_(v82, v84, v83, v85, v86);
            objc_msgSend_addObject_(v27, v88, (uint64_t)v87, v89, v90);

            --v81;
          }
          while (v81);
          goto LABEL_64;
        case 5:
          if (v15 < 2)
          {
            sub_1DDA18410((int *)__p, (int *)&v286);
            sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            uint64_t v163 = v13;
            uint64_t v164 = NSNumber;
            *(float *)&double v165 = sub_1DDA1A08C(*v163);
            objc_msgSend_numberWithFloat_(v164, v166, v167, v168, v169, v165);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            sub_1DDA1AA18((uint64_t *)&v285);
            goto LABEL_104;
          }
          sub_1DDA18410((int *)__p, (int *)&v286);
          sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
          sub_1DDA49F48(v15);
          unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          int v49 = v15;
          do
          {
            uint64_t v50 = NSNumber;
            *(float *)&double v51 = sub_1DDA1A08C(*v281);
            id v56 = objc_msgSend_numberWithFloat_(v50, v52, v53, v54, v55, v51);
            objc_msgSend_addObject_(v27, v57, (uint64_t)v56, v58, v59);

            --v49;
          }
          while (v49);
          goto LABEL_64;
        case 6:
          if (v15 >= 5)
          {
            sub_1DDA18410((int *)__p, (int *)&v286);
            sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            sub_1DDA49F48(v15);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
            int v105 = v15;
            do
            {
              uint64_t v106 = NSNumber;
              uint64_t v107 = sub_1DDA19F80(*v281);
              uint64_t v111 = objc_msgSend_numberWithChar_(v106, v108, v107, v109, v110);
              objc_msgSend_addObject_(v27, v112, (uint64_t)v111, v113, v114);

              --v105;
            }
            while (v105);
            goto LABEL_64;
          }
          sub_1DDA49F48(v15);
          unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          if (v15)
          {
            uint64_t v215 = (v15 - 1) + 1;
            v216 = &v286;
            do
            {
              unsigned int v217 = *(unsigned __int8 *)v216;
              v216 = (unsigned int *)((char *)v216 + 1);
              uint64_t v218 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v212, v217, v213, v214);
              objc_msgSend_addObject_(v27, v219, (uint64_t)v218, v220, v221);

              --v215;
            }
            while (v215);
          }
          goto LABEL_77;
        case 7:
          if (v15 < 5)
          {
            objc_msgSend_dataWithBytes_length_(MEMORY[0x1E4F1CA58], v21, (uint64_t)&v286, v15, v24);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          }
          else
          {
            sub_1DDA18410((int *)__p, (int *)&v286);
            sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            uint64_t v118 = objc_msgSend_dataWithLength_(MEMORY[0x1E4F1CA58], v115, v15, v116, v117);
            uint64_t v119 = *v13;
            id v120 = v118;
            uint64_t v125 = objc_msgSend_mutableBytes(v120, v121, v122, v123, v124);
            uint64_t v130 = objc_msgSend_length(v120, v126, v127, v128, v129);
            LODWORD(v119) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v119 + 32))(v119, v125, v130);
            if (objc_msgSend_length(v120, v131, v132, v133, v134) == v119)
            {
              unsigned int v27 = (__CFString *)v120;
            }
            else
            {
              unsigned int v27 = v26;
            }

            sub_1DDA1AA18((uint64_t *)&v285);
          }
          goto LABEL_104;
        case 8:
          if (v15 >= 3)
          {
            sub_1DDA18410((int *)__p, (int *)&v286);
            sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            sub_1DDA49F48(v15);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
            int v91 = v15;
            do
            {
              uint64_t v92 = NSNumber;
              uint64_t v93 = sub_1DDA19FB0(*v281);
              uint64_t v97 = objc_msgSend_numberWithShort_(v92, v94, v93, v95, v96);
              objc_msgSend_addObject_(v27, v98, (uint64_t)v97, v99, v100);

              --v91;
            }
            while (v91);
            goto LABEL_64;
          }
          if (v15 == 2)
          {
            sub_1DDA49F48(2uLL);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
            uint64_t v188 = 0;
            do
            {
              v189 = objc_msgSend_numberWithShort_(NSNumber, v185, *(__int16 *)((char *)&v286 + v188), v186, v187);
              objc_msgSend_addObject_(v27, v190, (uint64_t)v189, v191, v192);

              v188 += 2;
            }
            while (v188 != 4);
LABEL_77:
          }
          else
          {
            objc_msgSend_numberWithShort_(NSNumber, v21, (__int16)v286, v23, v24);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          }
          goto LABEL_104;
        case 9:
          if (v15 < 2)
          {
            objc_msgSend_numberWithInt_(NSNumber, v21, v286, v23, v24);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            goto LABEL_104;
          }
          sub_1DDA18410((int *)__p, (int *)&v286);
          sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
          sub_1DDA49F48(v15);
          unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          int v146 = v15;
          do
          {
            uint64_t v147 = NSNumber;
            uint64_t v148 = sub_1DDA19EC8(*v281);
            uint64_t v152 = objc_msgSend_numberWithInt_(v147, v149, v148, v150, v151);
            objc_msgSend_addObject_(v27, v153, (uint64_t)v152, v154, v155);

            --v146;
          }
          while (v146);
          goto LABEL_64;
        case 10:
          if (v15 < 2)
          {
            sub_1DDA18410((int *)__p, (int *)&v286);
            sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            uint64_t v170 = v13;
            unsigned int v171 = NSNumber;
            *(float *)&double v172 = sub_1DDA1A04C(*v170);
            objc_msgSend_numberWithFloat_(v171, v173, v174, v175, v176, v172);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            sub_1DDA1AA18((uint64_t *)&v285);
            goto LABEL_104;
          }
          sub_1DDA18410((int *)__p, (int *)&v286);
          sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
          sub_1DDA49F48(v15);
          unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          int v60 = v15;
          do
          {
            uint64_t v61 = NSNumber;
            *(float *)&double v62 = sub_1DDA1A04C(*v281);
            uint64_t v67 = objc_msgSend_numberWithFloat_(v61, v63, v64, v65, v66, v62);
            objc_msgSend_addObject_(v27, v68, (uint64_t)v67, v69, v70);

            --v60;
          }
          while (v60);
          goto LABEL_64;
        case 11:
          if (v15 < 2)
          {
            LODWORD(v25) = v286;
            objc_msgSend_numberWithFloat_(NSNumber, v21, v22, v23, v24, v25);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            goto LABEL_104;
          }
          sub_1DDA18410((int *)__p, (int *)&v286);
          sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
          sub_1DDA49F48(v15);
          unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
          int v135 = v15;
          do
          {
            uint64_t v136 = NSNumber;
            *(float *)&double v137 = sub_1DDA1A014(*v281);
            double v142 = objc_msgSend_numberWithFloat_(v136, v138, v139, v140, v141, v137);
            objc_msgSend_addObject_(v27, v143, (uint64_t)v142, v144, v145);

            --v135;
          }
          while (v135);
          goto LABEL_64;
        case 12:
          if (v15 < 2)
          {
            sub_1DDA18410((int *)__p, (int *)&v286);
            sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            uint64_t v156 = v13;
            uint64_t v157 = NSNumber;
            double v158 = sub_1DDA1A030(*v156);
            objc_msgSend_numberWithDouble_(v157, v159, v160, v161, v162, v158);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();

            sub_1DDA1AA18((uint64_t *)&v285);
          }
          else
          {
            sub_1DDA18410((int *)__p, (int *)&v286);
            sub_1DDA1A94C((uint64_t *)&v285, v13, (uint64_t)__p, 0);
            sub_1DDA49F48(v15);
            unsigned int v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
            int v38 = v15;
            do
            {
              uint64_t v39 = NSNumber;
              double v40 = sub_1DDA1A030(*v281);
              uint64_t v45 = objc_msgSend_numberWithDouble_(v39, v41, v42, v43, v44, v40);
              objc_msgSend_addObject_(v27, v46, (uint64_t)v45, v47, v48);

              --v38;
            }
            while (v38);
LABEL_64:

            sub_1DDA1AA18((uint64_t *)&v285);
          }
LABEL_104:
          uint64_t v222 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v21, v280, v23, v24);
          uint64_t v227 = objc_msgSend_stringValue(v222, v223, v224, v225, v226);
          uint64_t v231 = objc_msgSend_objectForKeyedSubscript_(v278, v228, (uint64_t)v227, v229, v230);

          if (v231)
          {
            uint64_t v235 = objc_msgSend_objectForKeyedSubscript_(v231, v232, qword_1EAB8AE98, v233, v234);
            v239 = objc_msgSend_objectForKeyedSubscript_(v231, v236, qword_1EAB8AEB0, v237, v238);
            uint64_t v243 = objc_msgSend_objectForKeyedSubscript_(v231, v240, qword_1EAB8AEA0, v241, v242);
            objc_msgSend_objectForKeyedSubscript_(v231, v244, qword_1EAB8AEA8, v245, v246);
            uint64_t v250 = (void (**)(void, void))objc_claimAutoreleasedReturnValue();
            if (v243
              && (objc_msgSend_numberWithUnsignedShort_(NSNumber, v247, v14, v248, v249),
                  uint64_t v251 = objc_claimAutoreleasedReturnValue(),
                  int v255 = objc_msgSend_containsObject_(v243, v252, (uint64_t)v251, v253, v254),
                  v251,
                  !v255))
            {
              NSLog(&cfstr_UnexpectedType.isa);
            }
            else if (v235)
            {
              v288[0] = @"tag";
              uint64_t v256 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v247, v280, v248, v249);
              v289[0] = v256;
              v289[1] = v235;
              v288[1] = @"tagName";
              void v288[2] = @"type";
              uint64_t v260 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v257, v14, v258, v259);
              void v289[2] = v260;
              v288[3] = @"count";
              uint64_t v265 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v261, v15, v262, v263);
              v289[3] = v265;
              v289[4] = v27;
              v288[4] = @"val";
              v288[5] = @"hide";
              uint64_t v266 = (void *)MEMORY[0x1E4F1CC28];
              if (v239) {
                uint64_t v266 = v239;
              }
              v289[5] = v266;
              v267 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v264, (uint64_t)v289, (uint64_t)v288, 6);

              if (v250)
              {
                uint64_t v270 = ((void (**)(void, void *))v250)[2](v250, v267);

                v267 = (void *)v270;
              }
              objc_msgSend_setObject_forKeyedSubscript_(v276, v268, (uint64_t)v267, (uint64_t)v235, v269);
            }
            else
            {
              NSLog(&cfstr_NoTagName.isa);
            }
          }
          ++v279;
          unsigned int v13 = v281;
          if (v277 <= (unsigned __int16)v279) {
            break;
          }
          continue;
        default:
          unsigned int v27 = (__CFString *)v20;
          goto LABEL_104;
      }
      break;
    }
  }
  if ((a4 & 1) != 0 && sub_1DDA19EC8(*v13))
  {
    uint64_t v273 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v273, "RawCameraException");
    __cxa_throw(v273, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }

  return v276;
}

void sub_1DDA6D024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, _Unwind_Exception *exception_object, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  __cxa_free_exception(v27);

  _Unwind_Resume(a1);
}

id sub_1DDA6D490(uint64_t a1, const char *a2)
{
  v57[13] = *MEMORY[0x1E4F143B8];
  v56[0] = @"256";
  uint64_t v54 = qword_1EAB8AE98;
  uint64_t v55 = *MEMORY[0x1E4F2FDD8];
  unint64_t v29 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], a2, (uint64_t)&v55, (uint64_t)&v54, 1);
  v57[0] = v29;
  v56[1] = @"257";
  uint64_t v52 = qword_1EAB8AE98;
  uint64_t v53 = *MEMORY[0x1E4F2FB48];
  int v28 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v2, (uint64_t)&v53, (uint64_t)&v52, 1);
  v57[1] = v28;
  v56[2] = @"258";
  uint64_t v50 = qword_1EAB8AE98;
  uint64_t v51 = *MEMORY[0x1E4F2F530];
  unsigned int v27 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v3, (uint64_t)&v51, (uint64_t)&v50, 1);
  void v57[2] = v27;
  uint64_t v56[3] = @"259";
  uint64_t v48 = qword_1EAB8AE98;
  uint64_t v49 = *MEMORY[0x1E4F2FD28];
  uint64_t v26 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v4, (uint64_t)&v49, (uint64_t)&v48, 1);
  v57[3] = v26;
  v56[4] = @"271";
  uint64_t v46 = qword_1EAB8AE98;
  uint64_t v47 = *MEMORY[0x1E4F2FD60];
  uint64_t v6 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v5, (uint64_t)&v47, (uint64_t)&v46, 1);
  v57[4] = v6;
  v56[5] = @"272";
  uint64_t v44 = qword_1EAB8AE98;
  uint64_t v45 = *MEMORY[0x1E4F2FD68];
  uint64_t v8 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v7, (uint64_t)&v45, (uint64_t)&v44, 1);
  v57[5] = v8;
  v56[6] = @"274";
  uint64_t v42 = qword_1EAB8AE98;
  uint64_t v43 = *MEMORY[0x1E4F2FD70];
  int v10 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v9, (uint64_t)&v43, (uint64_t)&v42, 1);
  v57[6] = v10;
  v56[7] = @"282";
  uint64_t v40 = qword_1EAB8AE98;
  uint64_t v41 = *MEMORY[0x1E4F2FDA8];
  uint64_t v12 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v11, (uint64_t)&v41, (uint64_t)&v40, 1);
  v57[7] = v12;
  v56[8] = @"283";
  uint64_t v38 = qword_1EAB8AE98;
  uint64_t v39 = *MEMORY[0x1E4F2FDB8];
  uint64_t v14 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v13, (uint64_t)&v39, (uint64_t)&v38, 1);
  v57[8] = v14;
  v56[9] = @"296";
  uint64_t v36 = qword_1EAB8AE98;
  uint64_t v37 = *MEMORY[0x1E4F2FD80];
  uint64_t v16 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v15, (uint64_t)&v37, (uint64_t)&v36, 1);
  v57[9] = v16;
  v56[10] = @"306";
  uint64_t v34 = qword_1EAB8AE98;
  uint64_t v35 = *MEMORY[0x1E4F2FD38];
  uint64_t v18 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v17, (uint64_t)&v35, (uint64_t)&v34, 1);
  v57[10] = v18;
  void v56[11] = @"315";
  uint64_t v32 = qword_1EAB8AE98;
  uint64_t v33 = *MEMORY[0x1E4F2FD20];
  uint64_t v20 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v19, (uint64_t)&v33, (uint64_t)&v32, 1);
  v57[11] = v20;
  v56[12] = @"33432";
  uint64_t v30 = qword_1EAB8AE98;
  uint64_t v31 = *MEMORY[0x1E4F2FD30];
  uint64_t v22 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v21, (uint64_t)&v31, (uint64_t)&v30, 1);
  v57[12] = v22;
  uint64_t v24 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v23, (uint64_t)v57, (uint64_t)v56, 13);

  return v24;
}

void sub_1DDA6D8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

id sub_1DDA6D9AC(uint64_t a1, const char *a2)
{
  v160[31] = *MEMORY[0x1E4F143B8];
  v159[0] = @"0";
  uint64_t v2 = *MEMORY[0x1E4F2FAB0];
  v157[0] = qword_1EAB8AE98;
  v157[1] = qword_1EAB8AEA0;
  v158[0] = v2;
  v158[1] = &unk_1F39ABCF0;
  v157[2] = qword_1EAB8AEA8;
  v158[2] = &unk_1F395EDB0;
  uint64_t v96 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], a2, (uint64_t)v158, (uint64_t)v157, 3);
  v160[0] = v96;
  v159[1] = @"1";
  uint64_t v3 = *MEMORY[0x1E4F2FA48];
  v155[0] = qword_1EAB8AE98;
  v155[1] = qword_1EAB8AEA0;
  v156[0] = v3;
  v156[1] = &unk_1F39ABD08;
  uint64_t v95 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v4, (uint64_t)v156, (uint64_t)v155, 2);
  v160[1] = v95;
  v159[2] = @"2";
  uint64_t v5 = *MEMORY[0x1E4F2FA40];
  v153[0] = qword_1EAB8AE98;
  v153[1] = qword_1EAB8AEA0;
  v154[0] = v5;
  v154[1] = &unk_1F39ABD20;
  v153[2] = qword_1EAB8AEA8;
  v154[2] = &unk_1F395EDF0;
  uint64_t v94 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v6, (uint64_t)v154, (uint64_t)v153, 3);
  v160[2] = v94;
  v159[3] = @"3";
  uint64_t v7 = *MEMORY[0x1E4F2FA58];
  v151[0] = qword_1EAB8AE98;
  v151[1] = qword_1EAB8AEA0;
  v152[0] = v7;
  v152[1] = &unk_1F39ABD38;
  uint64_t v93 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v8, (uint64_t)v152, (uint64_t)v151, 2);
  v160[3] = v93;
  v159[4] = @"4";
  uint64_t v9 = *MEMORY[0x1E4F2FA50];
  v149[0] = qword_1EAB8AE98;
  v149[1] = qword_1EAB8AEA0;
  v150[0] = v9;
  v150[1] = &unk_1F39ABD50;
  v149[2] = qword_1EAB8AEA8;
  v150[2] = &unk_1F395EDF0;
  uint64_t v92 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v10, (uint64_t)v150, (uint64_t)v149, 3);
  v160[4] = v92;
  v159[5] = @"5";
  uint64_t v11 = *MEMORY[0x1E4F2F9B8];
  v147[0] = qword_1EAB8AE98;
  v147[1] = qword_1EAB8AEA0;
  v148[0] = v11;
  v148[1] = &unk_1F39ABD68;
  int v91 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v12, (uint64_t)v148, (uint64_t)v147, 2);
  v160[5] = v91;
  v159[6] = @"6";
  uint64_t v13 = *MEMORY[0x1E4F2F9B0];
  v145[0] = qword_1EAB8AE98;
  v145[1] = qword_1EAB8AEA0;
  v146[0] = v13;
  v146[1] = &unk_1F39ABD80;
  uint64_t v90 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v14, (uint64_t)v146, (uint64_t)v145, 2);
  v160[6] = v90;
  v159[7] = @"7";
  uint64_t v15 = *MEMORY[0x1E4F2FA98];
  v143[0] = qword_1EAB8AE98;
  v143[1] = qword_1EAB8AEA0;
  v144[0] = v15;
  v144[1] = &unk_1F39ABD98;
  void v143[2] = qword_1EAB8AEA8;
  void v144[2] = &unk_1F395EDD0;
  uint64_t v89 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v16, (uint64_t)v144, (uint64_t)v143, 3);
  v160[7] = v89;
  v159[8] = @"8";
  uint64_t v17 = *MEMORY[0x1E4F2FA78];
  v141[0] = qword_1EAB8AE98;
  v141[1] = qword_1EAB8AEA0;
  v142[0] = v17;
  v142[1] = &unk_1F39ABDB0;
  uint64_t v88 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v18, (uint64_t)v142, (uint64_t)v141, 2);
  v160[8] = v88;
  v159[9] = @"9";
  uint64_t v19 = *MEMORY[0x1E4F2FA90];
  v139[0] = qword_1EAB8AE98;
  v139[1] = qword_1EAB8AEA0;
  v140[0] = v19;
  v140[1] = &unk_1F39ABDC8;
  uint64_t v87 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v20, (uint64_t)v140, (uint64_t)v139, 2);
  v160[9] = v87;
  v159[10] = @"10";
  uint64_t v21 = *MEMORY[0x1E4F2FA68];
  v137[0] = qword_1EAB8AE98;
  v137[1] = qword_1EAB8AEA0;
  v138[0] = v21;
  v138[1] = &unk_1F39ABDE0;
  uint64_t v86 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v22, (uint64_t)v138, (uint64_t)v137, 2);
  v160[10] = v86;
  v159[11] = @"11";
  uint64_t v23 = *MEMORY[0x1E4F2F9C8];
  v135[0] = qword_1EAB8AE98;
  v135[1] = qword_1EAB8AEA0;
  v136[0] = v23;
  v136[1] = &unk_1F39ABDF8;
  uint64_t v85 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v24, (uint64_t)v136, (uint64_t)v135, 2);
  v160[11] = v85;
  v159[12] = @"12";
  uint64_t v25 = *MEMORY[0x1E4F2FA88];
  v133[0] = qword_1EAB8AE98;
  v133[1] = qword_1EAB8AEA0;
  v134[0] = v25;
  v134[1] = &unk_1F39ABE10;
  uint64_t v84 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v26, (uint64_t)v134, (uint64_t)v133, 2);
  v160[12] = v84;
  v159[13] = @"13";
  uint64_t v27 = *MEMORY[0x1E4F2FA80];
  v131[0] = qword_1EAB8AE98;
  v131[1] = qword_1EAB8AEA0;
  v132[0] = v27;
  v132[1] = &unk_1F39ABE28;
  uint64_t v83 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v28, (uint64_t)v132, (uint64_t)v131, 2);
  v160[13] = v83;
  v159[14] = @"14";
  uint64_t v29 = *MEMORY[0x1E4F2FAA8];
  v129[0] = qword_1EAB8AE98;
  v129[1] = qword_1EAB8AEA0;
  v130[0] = v29;
  v130[1] = &unk_1F39ABE40;
  uint64_t v82 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v30, (uint64_t)v130, (uint64_t)v129, 2);
  v160[14] = v82;
  v159[15] = @"15";
  uint64_t v31 = *MEMORY[0x1E4F2FAA0];
  v127[0] = qword_1EAB8AE98;
  v127[1] = qword_1EAB8AEA0;
  v128[0] = v31;
  v128[1] = &unk_1F39ABE58;
  int v81 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v32, (uint64_t)v128, (uint64_t)v127, 2);
  v160[15] = v81;
  v159[16] = @"16";
  uint64_t v33 = *MEMORY[0x1E4F2FA38];
  v125[0] = qword_1EAB8AE98;
  v125[1] = qword_1EAB8AEA0;
  v126[0] = v33;
  v126[1] = &unk_1F39ABE70;
  uint64_t v80 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v34, (uint64_t)v126, (uint64_t)v125, 2);
  v160[16] = v80;
  v159[17] = @"17";
  uint64_t v35 = *MEMORY[0x1E4F2FA30];
  v123[0] = qword_1EAB8AE98;
  v123[1] = qword_1EAB8AEA0;
  v124[0] = v35;
  v124[1] = &unk_1F39ABE88;
  uint64_t v79 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v36, (uint64_t)v124, (uint64_t)v123, 2);
  v160[17] = v79;
  v159[18] = @"18";
  uint64_t v37 = *MEMORY[0x1E4F2FA60];
  v121[0] = qword_1EAB8AE98;
  v121[1] = qword_1EAB8AEA0;
  v122[0] = v37;
  v122[1] = &unk_1F39ABEA0;
  uint64_t v78 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v38, (uint64_t)v122, (uint64_t)v121, 2);
  v160[18] = v78;
  v159[19] = @"19";
  uint64_t v39 = *MEMORY[0x1E4F2FA00];
  v119[0] = qword_1EAB8AE98;
  v119[1] = qword_1EAB8AEA0;
  v120[0] = v39;
  v120[1] = &unk_1F39ABEB8;
  uint64_t v77 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v40, (uint64_t)v120, (uint64_t)v119, 2);
  v160[19] = v77;
  v159[20] = @"20";
  uint64_t v41 = *MEMORY[0x1E4F2F9F8];
  v117[0] = qword_1EAB8AE98;
  v117[1] = qword_1EAB8AEA0;
  v118[0] = v41;
  v118[1] = &unk_1F39ABED0;
  v117[2] = qword_1EAB8AEA8;
  v118[2] = &unk_1F395EDF0;
  uint64_t v76 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v42, (uint64_t)v118, (uint64_t)v117, 3);
  v160[20] = v76;
  v159[21] = @"21";
  uint64_t v43 = *MEMORY[0x1E4F2FA10];
  v115[0] = qword_1EAB8AE98;
  v115[1] = qword_1EAB8AEA0;
  v116[0] = v43;
  v116[1] = &unk_1F39ABEE8;
  uint64_t v75 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v44, (uint64_t)v116, (uint64_t)v115, 2);
  v160[21] = v75;
  v159[22] = @"22";
  uint64_t v45 = *MEMORY[0x1E4F2FA08];
  v113[0] = qword_1EAB8AE98;
  v113[1] = qword_1EAB8AEA0;
  v114[0] = v45;
  v114[1] = &unk_1F39ABF00;
  v113[2] = qword_1EAB8AEA8;
  v114[2] = &unk_1F395EDF0;
  uint64_t v74 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v46, (uint64_t)v114, (uint64_t)v113, 3);
  v160[22] = v74;
  v159[23] = @"23";
  uint64_t v47 = *MEMORY[0x1E4F2F9E0];
  v111[0] = qword_1EAB8AE98;
  v111[1] = qword_1EAB8AEA0;
  v112[0] = v47;
  v112[1] = &unk_1F39ABF18;
  uint64_t v49 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v48, (uint64_t)v112, (uint64_t)v111, 2);
  v160[23] = v49;
  v159[24] = @"24";
  uint64_t v50 = *MEMORY[0x1E4F2F9D8];
  v109[0] = qword_1EAB8AE98;
  v109[1] = qword_1EAB8AEA0;
  v110[0] = v50;
  v110[1] = &unk_1F39ABF30;
  uint64_t v52 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v51, (uint64_t)v110, (uint64_t)v109, 2);
  v160[24] = v52;
  v159[25] = @"25";
  uint64_t v53 = *MEMORY[0x1E4F2F9F0];
  v107[0] = qword_1EAB8AE98;
  v107[1] = qword_1EAB8AEA0;
  v108[0] = v53;
  v108[1] = &unk_1F39ABF48;
  uint64_t v55 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v54, (uint64_t)v108, (uint64_t)v107, 2);
  v160[25] = v55;
  v159[26] = @"26";
  uint64_t v56 = *MEMORY[0x1E4F2F9E8];
  v105[0] = qword_1EAB8AE98;
  v105[1] = qword_1EAB8AEA0;
  v106[0] = v56;
  v106[1] = &unk_1F39ABF60;
  uint64_t v58 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v57, (uint64_t)v106, (uint64_t)v105, 2);
  v160[26] = v58;
  v159[27] = @"27";
  uint64_t v59 = *MEMORY[0x1E4F2FA70];
  v103[0] = qword_1EAB8AE98;
  v103[1] = qword_1EAB8AEA0;
  v104[0] = v59;
  v104[1] = &unk_1F39ABF78;
  uint64_t v61 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v60, (uint64_t)v104, (uint64_t)v103, 2);
  v160[27] = v61;
  v159[28] = @"28";
  uint64_t v62 = *MEMORY[0x1E4F2F9C0];
  v101[0] = qword_1EAB8AE98;
  v101[1] = qword_1EAB8AEA0;
  v102[0] = v62;
  v102[1] = &unk_1F39ABF90;
  uint64_t v64 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v63, (uint64_t)v102, (uint64_t)v101, 2);
  v160[28] = v64;
  v159[29] = @"29";
  uint64_t v65 = *MEMORY[0x1E4F2F9D0];
  v99[0] = qword_1EAB8AE98;
  v99[1] = qword_1EAB8AEA0;
  v100[0] = v65;
  v100[1] = &unk_1F39ABFA8;
  uint64_t v67 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v66, (uint64_t)v100, (uint64_t)v99, 2);
  v160[29] = v67;
  v159[30] = @"30";
  uint64_t v68 = *MEMORY[0x1E4F2FA20];
  v97[0] = qword_1EAB8AE98;
  v97[1] = qword_1EAB8AEA0;
  v98[0] = v68;
  v98[1] = &unk_1F39ABFC0;
  uint64_t v70 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v69, (uint64_t)v98, (uint64_t)v97, 2);
  v160[30] = v70;
  uint64_t v72 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v71, (uint64_t)v160, (uint64_t)v159, 31);

  return v72;
}

void sub_1DDA6E5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32)
{
  _Unwind_Resume(a1);
}

id sub_1DDA6E7D0(uint64_t a1, void *a2)
{
  v44[4] = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  uint64_t v7 = objc_msgSend_mutableCopy(v2, v3, v4, v5, v6);
  uint64_t v11 = objc_msgSend_objectForKeyedSubscript_(v2, v8, @"val", v9, v10);
  if (v11)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend_length(v11, v12, v13, v14, v15) == 4)
    {
      id v16 = v11;
      uint64_t v21 = (unsigned __int8 *)objc_msgSend_bytes(v16, v17, v18, v19, v20);
      uint64_t v25 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v22, *v21, v23, v24);
      v44[0] = v25;
      uint64_t v29 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v26, v21[1], v27, v28);
      v44[1] = v29;
      uint64_t v33 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v30, v21[2], v31, v32);
      void v44[2] = v33;
      uint64_t v37 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v34, v21[3], v35, v36);
      v44[3] = v37;
      uint64_t v40 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v38, (uint64_t)v44, 4, v39);

      objc_msgSend_setObject_forKeyedSubscript_(v7, v41, (uint64_t)v40, @"parsedVal", v42);
    }
  }

  return v7;
}

void sub_1DDA6E964(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

id sub_1DDA6E9DC(uint64_t a1, void *a2)
{
  v44[4] = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  uint64_t v7 = objc_msgSend_mutableCopy(v2, v3, v4, v5, v6);
  uint64_t v11 = objc_msgSend_objectForKeyedSubscript_(v2, v8, @"val", v9, v10);
  if (v11)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend_length(v11, v12, v13, v14, v15) == 4)
    {
      id v16 = v11;
      uint64_t v21 = (unsigned __int8 *)objc_msgSend_bytes(v16, v17, v18, v19, v20);
      uint64_t v25 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v22, *v21, v23, v24);
      v44[0] = v25;
      uint64_t v29 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v26, v21[1], v27, v28);
      v44[1] = v29;
      uint64_t v33 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v30, v21[2], v31, v32);
      void v44[2] = v33;
      uint64_t v37 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v34, v21[3], v35, v36);
      v44[3] = v37;
      uint64_t v40 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v38, (uint64_t)v44, 4, v39);

      objc_msgSend_setObject_forKeyedSubscript_(v7, v41, (uint64_t)v40, @"parsedVal", v42);
    }
  }

  return v7;
}

void sub_1DDA6EB70(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

id sub_1DDA6EBE8(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v7 = objc_msgSend_mutableCopy(v2, v3, v4, v5, v6);
  uint64_t v11 = objc_msgSend_objectForKeyedSubscript_(v2, v8, @"val", v9, v10);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend_count(v11, v12, v13, v14, v15) == 3)
  {
    uint64_t v19 = objc_msgSend_objectAtIndexedSubscript_(v11, v16, 0, v17, v18);
    objc_msgSend_doubleValue(v19, v20, v21, v22, v23);
    double v25 = v24;

    uint64_t v29 = objc_msgSend_objectAtIndexedSubscript_(v11, v26, 1, v27, v28);
    objc_msgSend_doubleValue(v29, v30, v31, v32, v33);
    double v35 = v34;

    uint64_t v39 = objc_msgSend_objectAtIndexedSubscript_(v11, v36, 2, v37, v38);
    objc_msgSend_doubleValue(v39, v40, v41, v42, v43);
    double v45 = v25 + v35 / 60.0 + v44 / 3600.0;

    double v46 = 2000000000.0;
    if (v45 <= 2000000000.0) {
      double v46 = v45;
    }
    if (v45 >= -2000000000.0) {
      double v47 = v46;
    }
    else {
      double v47 = -2000000000.0;
    }
    uint64_t v48 = NSString;
    uint64_t v49 = (int)fmod(v47 * 60.0, 60.0);
    float v50 = fmod(v47 * 3600.0, 60.0);
    uint64_t v54 = objc_msgSend_stringWithFormat_(v48, v51, @"%.2d:%.2d:%05.2f", v52, v53, (int)v47, v49, v50);
    objc_msgSend_setObject_forKeyedSubscript_(v7, v55, (uint64_t)v54, @"parsedVal", v56);
  }

  return v7;
}

void sub_1DDA6EDA8(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

id sub_1DDA6EDF4(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v7 = objc_msgSend_mutableCopy(v2, v3, v4, v5, v6);
  uint64_t v11 = objc_msgSend_objectForKeyedSubscript_(v2, v8, @"val", v9, v10);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend_count(v11, v12, v13, v14, v15) == 3)
  {
    uint64_t v19 = objc_msgSend_objectAtIndexedSubscript_(v11, v16, 0, v17, v18);
    objc_msgSend_doubleValue(v19, v20, v21, v22, v23);
    double v25 = v24;

    uint64_t v29 = objc_msgSend_objectAtIndexedSubscript_(v11, v26, 1, v27, v28);
    objc_msgSend_doubleValue(v29, v30, v31, v32, v33);
    double v35 = v34;

    uint64_t v39 = objc_msgSend_objectAtIndexedSubscript_(v11, v36, 2, v37, v38);
    objc_msgSend_doubleValue(v39, v40, v41, v42, v43);
    double v45 = v25 + v35 / 60.0 + v44 / 3600.0;

    float v50 = objc_msgSend_numberWithDouble_(NSNumber, v46, v47, v48, v49, v45);
    objc_msgSend_setObject_forKeyedSubscript_(v7, v51, (uint64_t)v50, @"parsedVal", v52);
  }

  return v7;
}

void sub_1DDA6EF3C(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

id sub_1DDA6EF84(uint64_t a1, void *a2)
{
  id v2 = a2;

  return v2;
}

id sub_1DDA6EFAC(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v6 = objc_msgSend_objectForKeyedSubscript_(v2, v3, @"val", v4, v5);
  uint64_t v11 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v7, v8, v9, v10);
  uint64_t v25 = MEMORY[0x1E4F143A8];
  uint64_t v26 = 3221225472;
  uint64_t v27 = sub_1DDA6F110;
  uint64_t v28 = &unk_1E6D04F00;
  id v12 = v6;
  id v29 = v12;
  id v13 = v11;
  id v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1F39B39C0, v14, (uint64_t)&v25, v15, v16);
  uint64_t v21 = objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, @"parsedVal", v23);

  return v21;
}

void sub_1DDA6F0C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1DDA6F110(uint64_t a1, void *a2, void *a3)
{
  id v21 = a2;
  id v5 = a3;
  unint64_t v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    uint64_t v18 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);
  }
}

void sub_1DDA6F1AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1DDA6F1D0(uint64_t a1, void *a2)
{
  uint64_t v137 = *MEMORY[0x1E4F143B8];
  id v126 = a2;
  uint64_t v127 = *(void *)(a1 + 32);
  uint64_t v128 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v3, v4, v5, v6);
  unint64_t v10 = objc_msgSend_objectForKeyedSubscript_(v126, v7, @"type", v8, v9);
  int isEqualToValue = objc_msgSend_isEqualToValue_(v10, v11, (uint64_t)&unk_1F39ADFE8, v12, v13);

  if (isEqualToValue)
  {
    uint64_t v18 = objc_msgSend_objectForKeyedSubscript_(v126, v15, @"val", v16, v17);
    unint64_t v23 = objc_msgSend_length(v18, v19, v20, v21, v22);
    unint64_t v24 = v23 >> 1;
    uint64_t v25 = sub_1DDA49F48(v23 >> 1);
    id v26 = v18;
    uint64_t v31 = (__int16 *)objc_msgSend_bytes(v26, v27, v28, v29, v30);
    unint64_t v133 = objc_msgSend_length(v26, v32, v33, v34, v35);
    sub_1DDA18500(&v134, &v133);
    double v39 = sub_1DDA199C4((uint64_t)v31, (uint64_t)&v134, 0, &v135);
    if (v23 >= 2)
    {
      if (v24 <= 1) {
        unint64_t v24 = 1;
      }
      do
      {
        unsigned int v40 = *v31++;
        uint64_t v41 = objc_msgSend_numberWithShort_(NSNumber, v36, v40, v37, v38, v39);
        objc_msgSend_addObject_(v25, v42, (uint64_t)v41, v43, v44);

        --v24;
      }
      while (v24);
    }
    double v45 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1C978], v36, (uint64_t)v25, v37, v38, v39);
    if (*((void *)&v135 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v135 + 1));
    }
  }
  else
  {
    double v45 = objc_msgSend_objectForKeyedSubscript_(v126, v15, @"val", v16, v17);
  }
  uint64_t v49 = objc_msgSend_objectAtIndexedSubscript_(v45, v46, 0, v47, v48);
  if (objc_msgSend_unsignedShortValue(v49, v50, v51, v52, v53) <= 0x1F)
  {
  }
  else
  {
    uint64_t v57 = objc_msgSend_objectAtIndexedSubscript_(v45, v54, 0, v55, v56);
    BOOL v62 = objc_msgSend_unsignedShortValue(v57, v58, v59, v60, v61) < 0x22;

    if (v62)
    {
      uint64_t v66 = &unk_1F39ABFD8;
      goto LABEL_19;
    }
  }
  uint64_t v67 = objc_msgSend_objectAtIndexedSubscript_(v45, v63, 0, v64, v65);
  if (objc_msgSend_unsignedShortValue(v67, v68, v69, v70, v71) <= 0xF)
  {

    uint64_t v66 = 0;
  }
  else
  {
    uint64_t v75 = objc_msgSend_objectAtIndexedSubscript_(v45, v72, 0, v73, v74);
    BOOL v80 = objc_msgSend_unsignedShortValue(v75, v76, v77, v78, v79) < 0x20;

    if (v80) {
      uint64_t v66 = &unk_1F39ABFF0;
    }
    else {
      uint64_t v66 = 0;
    }
  }
LABEL_19:
  long long v131 = 0u;
  long long v132 = 0u;
  long long v129 = 0u;
  long long v130 = 0u;
  uint64_t v85 = objc_msgSend_countByEnumeratingWithState_objects_count_(v66, v63, (uint64_t)&v129, (uint64_t)v136, 16);
  if (v85)
  {
    uint64_t v86 = *(void *)v130;
    do
    {
      for (uint64_t i = 0; i != v85; ++i)
      {
        if (*(void *)v130 != v86) {
          objc_enumerationMutation(v66);
        }
        uint64_t v88 = *(void **)(*((void *)&v129 + 1) + 8 * i);
        *(unsigned char *)(v127 + 736) = 1;
        uint64_t v89 = objc_msgSend_objectForKeyedSubscript_(v88, v81, @"index", v83, v84);
        unsigned int v94 = objc_msgSend_unsignedIntValue(v89, v90, v91, v92, v93);

        uint64_t v98 = objc_msgSend_objectForKeyedSubscript_(v88, v95, @"name", v96, v97);
        uint64_t v102 = objc_msgSend_objectForKeyedSubscript_(v88, v99, @"size", v100, v101);
        unsigned int v107 = objc_msgSend_unsignedIntValue(v102, v103, v104, v105, v106);

        if (v107 == 1)
        {
          uint64_t v111 = objc_msgSend_objectAtIndexedSubscript_(v45, v108, v94, v109, v110);
          objc_msgSend_setObject_forKeyedSubscript_(v128, v112, (uint64_t)v111, (uint64_t)v98, v113);
        }
        else
        {
          uint64_t v114 = v107;
          uint64_t v111 = sub_1DDA49F48(v107);
          if (v107)
          {
            do
            {
              uint64_t v118 = objc_msgSend_objectAtIndexedSubscript_(v45, v115, v94, v116, v117);
              objc_msgSend_addObject_(v111, v119, (uint64_t)v118, v120, v121);

              ++v94;
              --v114;
            }
            while (v114);
          }
          objc_msgSend_setObject_forKeyedSubscript_(v128, v115, (uint64_t)v111, (uint64_t)v98, v117);
        }
      }
      uint64_t v85 = objc_msgSend_countByEnumeratingWithState_objects_count_(v66, v81, (uint64_t)&v129, (uint64_t)v136, 16);
    }
    while (v85);
  }
  uint64_t v122 = objc_msgSend_mutableCopy(v126, v81, v82, v83, v84);
  objc_msgSend_setObject_forKeyedSubscript_(v122, v123, (uint64_t)v128, @"parsedVal", v124);

  return v122;
}

void sub_1DDA6F610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

id sub_1DDA6F740(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v6 = objc_msgSend_objectForKeyedSubscript_(v2, v3, @"val", v4, v5);
  uint64_t v11 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v7, v8, v9, v10);
  uint64_t v25 = MEMORY[0x1E4F143A8];
  uint64_t v26 = 3221225472;
  uint64_t v27 = sub_1DDA6F8A4;
  uint64_t v28 = &unk_1E6D04F00;
  id v12 = v6;
  id v29 = v12;
  id v13 = v11;
  id v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1F39B41B8, v14, (uint64_t)&v25, v15, v16);
  uint64_t v21 = objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, @"parsedVal", v23);

  return v21;
}

void sub_1DDA6F85C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1DDA6F8A4(uint64_t a1, void *a2, void *a3)
{
  id v21 = a2;
  id v5 = a3;
  unint64_t v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    uint64_t v18 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);
  }
}

void sub_1DDA6F940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1DDA6F964(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v6 = objc_msgSend_objectForKeyedSubscript_(v2, v3, @"val", v4, v5);
  uint64_t v11 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v7, v8, v9, v10);
  uint64_t v25 = MEMORY[0x1E4F143A8];
  uint64_t v26 = 3221225472;
  uint64_t v27 = sub_1DDA6FAC8;
  uint64_t v28 = &unk_1E6D04F00;
  id v12 = v6;
  id v29 = v12;
  id v13 = v11;
  id v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1F39B41E0, v14, (uint64_t)&v25, v15, v16);
  id v21 = objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, @"parsedVal", v23);

  return v21;
}

void sub_1DDA6FA80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1DDA6FAC8(uint64_t a1, void *a2, void *a3)
{
  id v21 = a2;
  id v5 = a3;
  unint64_t v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    uint64_t v18 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);
  }
}

void sub_1DDA6FB64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1DDA6FB88(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v6 = objc_msgSend_objectForKeyedSubscript_(v2, v3, @"val", v4, v5);
  uint64_t v11 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v7, v8, v9, v10);
  uint64_t v25 = MEMORY[0x1E4F143A8];
  uint64_t v26 = 3221225472;
  uint64_t v27 = sub_1DDA6FCEC;
  uint64_t v28 = &unk_1E6D04F00;
  id v12 = v6;
  id v29 = v12;
  id v13 = v11;
  id v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1F39B4208, v14, (uint64_t)&v25, v15, v16);
  id v21 = objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, @"parsedVal", v23);

  return v21;
}

void sub_1DDA6FCA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1DDA6FCEC(uint64_t a1, void *a2, void *a3)
{
  id v21 = a2;
  id v5 = a3;
  unint64_t v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    uint64_t v18 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);
  }
}

void sub_1DDA6FD88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1DDA6FDAC(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v6 = objc_msgSend_objectForKeyedSubscript_(v2, v3, @"val", v4, v5);
  uint64_t v11 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v7, v8, v9, v10);
  uint64_t v25 = MEMORY[0x1E4F143A8];
  uint64_t v26 = 3221225472;
  uint64_t v27 = sub_1DDA6FF10;
  uint64_t v28 = &unk_1E6D04F00;
  id v12 = v6;
  id v29 = v12;
  id v13 = v11;
  id v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1F39B4230, v14, (uint64_t)&v25, v15, v16);
  id v21 = objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, @"parsedVal", v23);

  return v21;
}

void sub_1DDA6FEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1DDA6FF10(uint64_t a1, void *a2, void *a3)
{
  id v21 = a2;
  id v5 = a3;
  unint64_t v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    uint64_t v18 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);
  }
}

void sub_1DDA6FFAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1DDA6FFD0(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v6 = objc_msgSend_objectForKeyedSubscript_(v2, v3, @"val", v4, v5);
  uint64_t v11 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v7, v8, v9, v10);
  uint64_t v25 = MEMORY[0x1E4F143A8];
  uint64_t v26 = 3221225472;
  uint64_t v27 = sub_1DDA70134;
  uint64_t v28 = &unk_1E6D04F00;
  id v12 = v6;
  id v29 = v12;
  id v13 = v11;
  id v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1F39B4258, v14, (uint64_t)&v25, v15, v16);
  id v21 = objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, @"parsedVal", v23);

  return v21;
}

void sub_1DDA700EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1DDA70134(uint64_t a1, void *a2, void *a3)
{
  id v21 = a2;
  id v5 = a3;
  unint64_t v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    uint64_t v18 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);
  }
}

void sub_1DDA701D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1DDA701F4(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v6 = objc_msgSend_objectForKeyedSubscript_(v2, v3, @"val", v4, v5);
  uint64_t v11 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v7, v8, v9, v10);
  uint64_t v25 = MEMORY[0x1E4F143A8];
  uint64_t v26 = 3221225472;
  uint64_t v27 = sub_1DDA70358;
  uint64_t v28 = &unk_1E6D04F00;
  id v12 = v6;
  id v29 = v12;
  id v13 = v11;
  id v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1F39B4280, v14, (uint64_t)&v25, v15, v16);
  id v21 = objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, @"parsedVal", v23);

  return v21;
}

void sub_1DDA70310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1DDA70358(uint64_t a1, void *a2, void *a3)
{
  id v21 = a2;
  id v5 = a3;
  unint64_t v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    uint64_t v18 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);
  }
}

void sub_1DDA703F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1DDA70418(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v6 = objc_msgSend_objectForKeyedSubscript_(v2, v3, @"val", v4, v5);
  uint64_t v11 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v7, v8, v9, v10);
  uint64_t v25 = MEMORY[0x1E4F143A8];
  uint64_t v26 = 3221225472;
  uint64_t v27 = sub_1DDA7057C;
  uint64_t v28 = &unk_1E6D04F00;
  id v12 = v6;
  id v29 = v12;
  id v13 = v11;
  id v30 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1F39B42A8, v14, (uint64_t)&v25, v15, v16);
  id v21 = objc_msgSend_mutableCopy(v2, v17, v18, v19, v20, v25, v26, v27, v28);
  objc_msgSend_setObject_forKeyedSubscript_(v21, v22, (uint64_t)v13, @"parsedVal", v23);

  return v21;
}

void sub_1DDA70534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1DDA7057C(uint64_t a1, void *a2, void *a3)
{
  id v21 = a2;
  id v5 = a3;
  unint64_t v10 = objc_msgSend_unsignedIntegerValue(v5, v6, v7, v8, v9);
  if (objc_msgSend_count(*(void **)(a1 + 32), v11, v12, v13, v14) > v10)
  {
    uint64_t v18 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v15, v10, v16, v17);
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v19, (uint64_t)v18, (uint64_t)v21, v20);
  }
}

void sub_1DDA70618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DDA70640(uint64_t a1)
{
  sub_1DDA70680(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA70678(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 736);
}

uint64_t sub_1DDA70680(uint64_t a1)
{
  *(void *)a1 = &unk_1F395EAF0;

  if (*(char *)(a1 + 567) < 0) {
    operator delete(*(void **)(a1 + 544));
  }
  if (*(char *)(a1 + 543) < 0) {
    operator delete(*(void **)(a1 + 520));
  }

  return sub_1DDA49BE0(a1);
}

void sub_1DDA70700(void *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x300uLL);
  sub_1DDA70794(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA70780(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA70794(void *a1, void *a2, char *a3, void **a4, void **a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395EF58;
  sub_1DDA5F4C8((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1DDA707E8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA707FC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395EF58;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA7081C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395EF58;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA70870(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

_OWORD *sub_1DDA70898(uint64_t **a1, void **a2, uint64_t a3, _OWORD **a4)
{
  uint64_t v6 = (void **)sub_1DDA4B7C4((uint64_t)a1, &v12, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    uint64_t v7 = operator new(0x40uLL);
    uint64_t v9 = *a4;
    uint64_t v10 = *((void *)*a4 + 2);
    void v7[2] = **a4;
    *((void *)v7 + 6) = v10;
    v9[1] = 0;
    v9[2] = 0;
    *uint64_t v9 = 0;
    *((void *)v7 + 7) = 0;
    sub_1DDA25078(a1, v12, v8, (uint64_t *)v7);
  }
  return v7;
}

void sub_1DDA70934(void *a1@<X1>, unint64_t *a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X4>, void **a5@<X5>, void *a6@<X8>)
{
  uint64_t v12 = operator new(0x130uLL);
  sub_1DDA709D8(v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;

  sub_1DDA1AF34((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1DDA709C4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA709D8(void *a1, void *a2, unint64_t *a3, uint64_t a4, _OWORD *a5, void **a6)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395EFA8;
  sub_1DDA70ADC((uint64_t)(a1 + 3), a2, *a3, a4, a5, *a6, 16);
  return a1;
}

void sub_1DDA70A2C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA70A40(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395EFA8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA70A60(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395EFA8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA70AB4(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_1DDA70ADC(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, _OWORD *a5, void *a6, int a7)
{
  id v13 = a6;
  sub_1DDAA58A8(a1, a2, a3, (void *)a4, a5);
  *(void *)a1 = &unk_1F398EC88;
  *(_DWORD *)(a1 + 188) = a7;
  *(void *)(a1 + 192) = 0;
  id v14 = v13;
  *(void *)(a1 + 200) = v14;
  *(void *)(a1 + 256) = 0;
  sub_1DDB46DC8((void *)(a1 + 264));
  if (*(int *)a4 <= 0) {
    goto LABEL_7;
  }
  if (*(int *)(a4 + 4) <= 0) {
    goto LABEL_7;
  }
  uint64_t v18 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v15, @"tile_width", v16, v17);
  *(_DWORD *)(a1 + 208) = objc_msgSend_unsignedIntValue(v18, v19, v20, v21, v22);

  if ((*(_DWORD *)(a1 + 208) - 1) >= *(_DWORD *)a4) {
    goto LABEL_7;
  }
  uint64_t v26 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v23, @"tile_height", v24, v25);
  *(_DWORD *)(a1 + 212) = objc_msgSend_unsignedIntValue(v26, v27, v28, v29, v30);

  if ((*(_DWORD *)(a1 + 212) - 1) >= *(_DWORD *)(a4 + 4)) {
    goto LABEL_7;
  }
  uint64_t v34 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v31, @"dwt_level", v32, v33);
  *(_DWORD *)(a1 + 216) = objc_msgSend_unsignedIntValue(v34, v35, v36, v37, v38);

  uint64_t v42 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v39, @"tile_index", v40, v41);
  *(_DWORD *)(a1 + 220) = objc_msgSend_unsignedIntValue(v42, v43, v44, v45, v46);

  float v50 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v47, @"plane_num", v48, v49);
  *(_DWORD *)(a1 + 224) = objc_msgSend_unsignedIntValue(v50, v51, v52, v53, v54);

  uint64_t v58 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v55, @"tile_h_overlap", v56, v57);
  *(_DWORD *)(a1 + 240) = objc_msgSend_unsignedIntValue(v58, v59, v60, v61, v62);

  uint64_t v66 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v63, @"tile_v_overlap", v64, v65);
  *(_DWORD *)(a1 + 244) = objc_msgSend_unsignedIntValue(v66, v67, v68, v69, v70);

  uint64_t v74 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v71, @"ct_mode", v72, v73);
  *(_DWORD *)(a1 + 248) = objc_msgSend_unsignedIntValue(v74, v75, v76, v77, v78);

  uint64_t v82 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 200), v79, @"bit_depth", v80, v81);
  *(_DWORD *)(a1 + 252) = objc_msgSend_unsignedIntValue(v82, v83, v84, v85, v86);

  int v87 = *(_DWORD *)(a1 + 48);
  unsigned int v88 = *(_DWORD *)(a1 + 212);
  unsigned int v89 = (*(_DWORD *)(a1 + 44) + *(_DWORD *)(a1 + 208) - 1) / *(_DWORD *)(a1 + 208);
  unsigned int v90 = (v87 + v88 - 1) / v88;
  *(_DWORD *)(a1 + 232) = v89;
  *(_DWORD *)(a1 + 236) = v90;
  *(_DWORD *)(a1 + 228) = v90 * v89;
  if (v88 != v87)
  {
LABEL_7:
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }

  return a1;
}

void sub_1DDA70DF0(_Unwind_Exception *a1)
{
  id v5 = *(std::__shared_weak_count **)(v2 + 272);
  if (v5) {
    sub_1DDA18310(v5);
  }

  sub_1DDA18384((void *)v2);
  _Unwind_Resume(a1);
}

id sub_1DDA70E80(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v43[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *MEMORY[0x1E4F30058];
  uint64_t v34 = *MEMORY[0x1E4F30038];
  uint64_t v35 = v5;
  v42[0] = MEMORY[0x1E4F1CC28];
  v42[1] = @"com.fuji.raw-image";
  uint64_t v6 = *MEMORY[0x1E4F30050];
  uint64_t v36 = *MEMORY[0x1E4F30018];
  void v42[2] = @".raf.";
  uint64_t v42[3] = &unk_1F39AE708;
  v42[4] = &unk_1F39AE720;
  uint64_t v7 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA71178, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E4F30040], *MEMORY[0x1E4F30048]);
  v42[5] = v7;
  uint64_t v37 = *MEMORY[0x1E4F30000];
  uint64_t v11 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v8, (uint64_t)sub_1DDA711A8, v9, v10);
  v42[6] = v11;
  uint64_t v38 = *MEMORY[0x1E4F30020];
  uint64_t v15 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v12, (uint64_t)sub_1DDA711B4, v13, v14);
  v42[7] = v15;
  uint64_t v39 = *MEMORY[0x1E4F30008];
  uint64_t v19 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v16, (uint64_t)sub_1DDA818EC, v17, v18);
  v42[8] = v19;
  uint64_t v40 = *MEMORY[0x1E4F30028];
  uint64_t v23 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v20, (uint64_t)sub_1DDA711C0, v21, v22);
  v42[9] = v23;
  uint64_t v41 = *MEMORY[0x1E4F30030];
  uint64_t v27 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v24, (uint64_t)sub_1DDA711CC, v25, v26);
  v42[10] = v27;
  uint64_t v29 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v43[0] = v29;
  uint64_t v32 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v30, (uint64_t)v43, 1, v31);

  return v32;
}

void sub_1DDA71118(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA71178(void *a1, unint64_t a2)
{
  return a2 >= 8 && *a1 == 0x4D4C4946494A5546;
}

void sub_1DDA711A8(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA711B4(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA711C0(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, &unk_1F395EFE8);
}

uint64_t sub_1DDA711CC(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, &unk_1F395EFE8);
}

void sub_1DDA711D8(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v11 = a2;
  id v10 = a3;
  id v9 = a4;
  sub_1DDA74F78(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;
}

void sub_1DDA71258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

double sub_1DDA71274(uint64_t a1, void *a2, char a3, void *a4, void *a5)
{
  sub_1DDA3F2B0(a1, a2, a3, a4, a5);
  *(void *)uint64_t v5 = &unk_1F395F018;
  *(unsigned char *)(v5 + 1380) = 0;
  *(unsigned char *)(v5 + 1384) = 0;
  *(unsigned char *)(v5 + 1392) = 0;
  *(unsigned char *)(v5 + 1604) = 0;
  *(unsigned char *)(v5 + 1608) = 0;
  *(unsigned char *)(v5 + 1612) = 0;
  *(unsigned char *)(v5 + 1616) = 0;
  *(unsigned char *)(v5 + 1620) = 0;
  *(unsigned char *)(v5 + 1624) = 0;
  *(unsigned char *)(v5 + 1628) = 0;
  *(unsigned char *)(v5 + 1632) = 0;
  *(unsigned char *)(v5 + 1640) = 0;
  *(_WORD *)(v5 + 1180) = 0;
  *(_OWORD *)(v5 + 1184) = 0u;
  *(_OWORD *)(v5 + 1200) = 0u;
  *(_OWORD *)(v5 + 1216) = 0u;
  *(_OWORD *)(v5 + 1232) = 0u;
  *(_OWORD *)(v5 + 1248) = 0u;
  *(_OWORD *)(v5 + 1264) = 0u;
  *(_OWORD *)(v5 + 1280) = 0u;
  *(_OWORD *)(v5 + 1296) = 0u;
  *(_OWORD *)(v5 + 1312) = 0u;
  *(_OWORD *)(v5 + 1328) = 0u;
  *(_OWORD *)(v5 + 1344) = 0u;
  *(_OWORD *)(v5 + 1357) = 0u;
  *(_OWORD *)(v5 + 1400) = 0u;
  *(_OWORD *)(v5 + 1416) = 0u;
  *(void *)(v5 + 1440) = 0;
  *(_DWORD *)(v5 + 1448) = 0;
  *(_OWORD *)(v5 + 1456) = 0u;
  *(_OWORD *)(v5 + 1472) = 0u;
  *(_OWORD *)(v5 + 1488) = 0u;
  *(_OWORD *)(v5 + 1504) = 0u;
  *(_OWORD *)(v5 + 1520) = 0u;
  *(_OWORD *)(v5 + 1536) = 0u;
  *(_OWORD *)(v5 + 1552) = 0u;
  *(_OWORD *)(v5 + 1568) = 0u;
  *(_OWORD *)(v5 + 1584) = 0u;
  *(unsigned char *)(v5 + 1600) = 0;
  double result = NAN;
  *(void *)(v5 + 1432) = -1;
  return result;
}

void sub_1DDA71354(void **a1)
{
  sub_1DDA27D28((uint64_t)a1, &v21);
  LODWORD(v18) = 100;
  (*(void (**)(uint64_t, uint64_t (****)(void), void))(*(void *)v21 + 40))(v21, &v18, 0);
  if (v22) {
    sub_1DDA18310(v22);
  }
  unsigned int v24 = 0;
  sub_1DDA27D28((uint64_t)a1, &v21);
  unsigned int v2 = sub_1DDA19EC8(v21);
  if (v22) {
    sub_1DDA18310(v22);
  }
  unsigned int v24 = v2;
  sub_1DDA27D28((uint64_t)a1, &v21);
  unsigned int v3 = sub_1DDA19EC8(v21);
  if (v22) {
    sub_1DDA18310(v22);
  }
  sub_1DDA27D28((uint64_t)a1, &v21);
  int v4 = sub_1DDA19EC8(v21);
  if (v22) {
    sub_1DDA18310(v22);
  }
  sub_1DDA27D28((uint64_t)a1, &v21);
  LODWORD(v18) = 128;
  (*(void (**)(uint64_t, uint64_t (****)(void), void))(*(void *)v21 + 40))(v21, &v18, 0);
  if (v22) {
    sub_1DDA18310(v22);
  }
  unsigned int v23 = 0;
  sub_1DDA27D28((uint64_t)a1, &v21);
  unsigned int v5 = sub_1DDA19EC8(v21);
  if (v22) {
    sub_1DDA18310(v22);
  }
  unsigned int v23 = v5;
  sub_1DDA27D28((uint64_t)a1, &v21);
  unsigned int v6 = sub_1DDA19EC8(v21);
  if (v22) {
    sub_1DDA18310(v22);
  }
  sub_1DDA27D28((uint64_t)a1, &v21);
  int v7 = sub_1DDA19EC8(v21);
  if (v22) {
    sub_1DDA18310(v22);
  }
  if (v4 == 2 || v7 == 2 || v4 == 3 || v7 == 3)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  sub_1DDA27D28((uint64_t)a1, &v21);
  LODWORD(v18) = 92;
  (*(void (**)(uint64_t, uint64_t (****)(void), void))(*(void *)v21 + 40))(v21, &v18, 0);
  if (v22) {
    sub_1DDA18310(v22);
  }
  sub_1DDA27D28((uint64_t)a1, &v21);
  unsigned int v8 = sub_1DDA19EC8(v21);
  if (v22) {
    sub_1DDA18310(v22);
  }
  if (((*((uint64_t (**)(void **))*a1 + 7))(a1) & 1) == 0) {
    sub_1DDA71B6C((uint64_t)a1, v8);
  }
  sub_1DDA27D28((uint64_t)a1, &v21);
  LODWORD(v18) = 84;
  (*(void (**)(uint64_t, uint64_t (****)(void), void))(*(void *)v21 + 40))(v21, &v18, 0);
  if (v22) {
    sub_1DDA18310(v22);
  }
  sub_1DDA27D28((uint64_t)a1, &v21);
  *((_DWORD *)a1 + 337) = sub_1DDA19EC8(v21);
  if (v22) {
    sub_1DDA18310(v22);
  }
  sub_1DDA27D28((uint64_t)a1, &v21);
  *((_DWORD *)a1 + 338) = sub_1DDA19EC8(v21);
  if (v22) {
    sub_1DDA18310(v22);
  }
  sub_1DDA27D28((uint64_t)a1, &v18);
  int v20 = *((_DWORD *)a1 + 337) + 12;
  sub_1DDA18410((int *)&v16, &v20);
  sub_1DDA49398((uint64_t)&v21, (uint64_t *)&v18, &v16);
  if (v19) {
    sub_1DDA18310(v19);
  }
  sub_1DDA3F4AC(a1);
  sub_1DDA49424((uint64_t)&v21);
  if (v24)
  {
    sub_1DDA27D28((uint64_t)a1, &v18);
    sub_1DDA18410((int *)&v16, (int *)&v24);
    sub_1DDA49398((uint64_t)&v21, (uint64_t *)&v18, &v16);
    if (v19) {
      sub_1DDA18310(v19);
    }
    sub_1DDA27D28((uint64_t)a1, &v16);
    int v20 = 0;
    sub_1DDA1A94C((uint64_t *)&v18, &v16, (uint64_t)&v20, 0);
    if (v17) {
      sub_1DDA18310(v17);
    }
    sub_1DDA27D28((uint64_t)a1, &v16);
    int v9 = sub_1DDA19E68(v16);
    if (v17) {
      sub_1DDA18310(v17);
    }
    sub_1DDA27D28((uint64_t)a1, &v16);
    int v10 = sub_1DDA19E68(v16);
    if (v17) {
      sub_1DDA18310(v17);
    }
    if (v9 == 18761 && v10 == 10752 || v9 == 19789 && v10 == 42)
    {
      sub_1DDA3F4AC(a1);
    }
    else
    {
      a1[175] = (void *)v24;
      a1[177] = (void *)v3;
    }
    sub_1DDA1AA18((uint64_t *)&v18);
    sub_1DDA49424((uint64_t)&v21);
  }
  ++*((_DWORD *)a1 + 336);
  if (v23)
  {
    sub_1DDA27D28((uint64_t)a1, &v21);
    if ((**(uint64_t (***)(uint64_t))v21)(v21))
    {
      BOOL v11 = 1;
    }
    else
    {
      sub_1DDA27D28((uint64_t)a1, &v18);
      if ((**v18)(v18))
      {
        BOOL v11 = 0;
      }
      else
      {
        unsigned int v12 = v23;
        sub_1DDA27D28((uint64_t)a1, &v16);
        BOOL v11 = v12 + v6 < (*(unsigned int (**)(uint64_t))(*(void *)v16 + 16))(v16);
        if (v17) {
          sub_1DDA18310(v17);
        }
      }
      if (v19) {
        sub_1DDA18310(v19);
      }
    }
    if (v22) {
      sub_1DDA18310(v22);
    }
    if (v11)
    {
      sub_1DDA27D28((uint64_t)a1, &v18);
      sub_1DDA18410((int *)&v16, (int *)&v23);
      sub_1DDA49398((uint64_t)&v21, (uint64_t *)&v18, &v16);
      if (v19) {
        sub_1DDA18310(v19);
      }
      sub_1DDA27D28((uint64_t)a1, &v16);
      int v20 = 0;
      sub_1DDA1A94C((uint64_t *)&v18, &v16, (uint64_t)&v20, 0);
      if (v17) {
        sub_1DDA18310(v17);
      }
      sub_1DDA27D28((uint64_t)a1, &v16);
      int v13 = sub_1DDA19E68(v16);
      if (v17) {
        sub_1DDA18310(v17);
      }
      sub_1DDA27D28((uint64_t)a1, &v16);
      int v14 = sub_1DDA19E68(v16);
      if (v17) {
        sub_1DDA18310(v17);
      }
      if (v13 == 18761 && v14 == 10752 || v13 == 19789 && v14 == 42)
      {
        sub_1DDA3F4AC(a1);
      }
      else
      {
        a1[176] = (void *)v23;
        a1[178] = (void *)v6;
      }
      sub_1DDA1AA18((uint64_t *)&v18);
      sub_1DDA49424((uint64_t)&v21);
    }
  }
}

void sub_1DDA71A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, char a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, char a15, std::__shared_weak_count *a16)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  if (a12) {
    sub_1DDA18310(a12);
  }
  if (a16) {
    sub_1DDA18310(a16);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA71B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  uint64_t v36 = a2;
  sub_1DDA27D28(a1, &__p);
  unsigned int v3 = __p;
  sub_1DDA1B2DC(&__src, &v36);
  (*(void (**)(void *, uint64_t *, void))(*(void *)v3 + 40))(v3, &__src, 0);
  if (v33) {
    sub_1DDA18310(v33);
  }
  sub_1DDA27D28(a1, &__p);
  LODWORD(__src) = sub_1DDA19EC8((uint64_t)__p);
  sub_1DDA1B3CC(&v35, (unsigned int *)&__src);
  if (v33) {
    sub_1DDA18310(v33);
  }
  sub_1DDA27D28(a1, &__p);
  int v4 = (*(uint64_t (**)(void *))(*(void *)__p + 48))(__p);
  LODWORD(v28) = 4;
  LODWORD(__src) = v35;
  LODWORD(v30) = *sub_1DDA75110((int *)&__src, (unsigned int *)&v28);
  LODWORD(__src) = v4;
  int v5 = *sub_1DDA2A648((int *)&__src, (unsigned int *)&v30);
  sub_1DDA27D28(a1, &__src);
  unsigned int v6 = (*(uint64_t (**)(uint64_t))(*(void *)__src + 16))(__src);
  BOOL v8 = v5 < 0 || v6 >= v5;
  if (v39) {
    sub_1DDA18310(v39);
  }
  if (v33) {
    sub_1DDA18310(v33);
  }
  BOOL v9 = v35 < 0xC9 && v8;
  if (v9 && v35 != 0)
  {
    for (unsigned int i = 0; i < v35; ++i)
    {
      sub_1DDA27D28(a1, &__p);
      int v12 = sub_1DDA19E68((uint64_t)__p);
      if (v33) {
        sub_1DDA18310(v33);
      }
      sub_1DDA27D28(a1, &__p);
      unsigned int v13 = sub_1DDA19E68((uint64_t)__p);
      if (v33) {
        sub_1DDA18310(v33);
      }
      sub_1DDA27D28(a1, &__p);
      int v14 = (*(uint64_t (**)(void *))(*(void *)__p + 48))(__p);
      if (v33) {
        sub_1DDA18310(v33);
      }
      if (v12 <= 288)
      {
        if (v12 != 256)
        {
          if (v12 == 272)
          {
            if (v13 == 4)
            {
              sub_1DDA27D28(a1, &__p);
              uint64_t v19 = sub_1DDA19E68((uint64_t)__p);
              if (v33) {
                sub_1DDA18310(v33);
              }
              sub_1DDA27D28(a1, &__p);
              unsigned int v20 = sub_1DDA19E68((uint64_t)__p);
              if (v33) {
                sub_1DDA18310(v33);
              }
              if (!*(unsigned char *)(a1 + 1380)) {
                *(unsigned char *)(a1 + 1380) = 1;
              }
              *(void *)(a1 + 1372) = v20 | (unint64_t)(v19 << 32);
            }
          }
          else if (v12 == 273 && v13 == 4)
          {
            sub_1DDA27D28(a1, &__p);
            uint64_t v15 = sub_1DDA19E68((uint64_t)__p);
            if (v33) {
              sub_1DDA18310(v33);
            }
            sub_1DDA27D28(a1, &__p);
            unsigned int v16 = sub_1DDA19E68((uint64_t)__p);
            if (v33) {
              sub_1DDA18310(v33);
            }
            if (!*(unsigned char *)(a1 + 1392)) {
              *(unsigned char *)(a1 + 1392) = 1;
            }
            *(void *)(a1 + 1384) = v16 | (unint64_t)(v15 << 32);
          }
          goto LABEL_82;
        }
        if (v13 == 4)
        {
          sub_1DDA27D28(a1, &__p);
          *(_DWORD *)(a1 + 1360) = sub_1DDA19E68((uint64_t)__p);
          if (v33) {
            sub_1DDA18310(v33);
          }
          sub_1DDA27D28(a1, &__p);
          *(_DWORD *)(a1 + 1356) = sub_1DDA19E68((uint64_t)__p);
          goto LABEL_62;
        }
      }
      else
      {
        if (v12 > 12271)
        {
          if (v12 == 12272)
          {
            sub_1DDA1A880(&__p, "RAF:WB_GRGBLevels");
            sub_1DDA27D28(a1, &v30);
            LODWORD(__src) = sub_1DDA19E68(v30);
            sub_1DDA27D28(a1, &v28);
            HIDWORD(__src) = sub_1DDA19E68(v28);
            sub_1DDA27D28(a1, &v26);
            LODWORD(v39) = sub_1DDA19E68(v26);
            sub_1DDA27D28(a1, &v24);
            HIDWORD(v39) = sub_1DDA19E68(v24);
            p_p = &__p;
            uint64_t v21 = sub_1DDA4B960((uint64_t **)(a1 + 120), &__p, (uint64_t)&unk_1DDBFB044, (long long **)&p_p);
            sub_1DDA17E28((char *)v21 + 56, (char *)&__src, (uint64_t)&v40, 4uLL);
            if (v25) {
              sub_1DDA18310(v25);
            }
            if (v27) {
              sub_1DDA18310(v27);
            }
            if (v29) {
              sub_1DDA18310(v29);
            }
            if (v31) {
              sub_1DDA18310(v31);
            }
            if (v34 < 0) {
              operator delete(__p);
            }
          }
          else if (v12 == 38480 && v13 == 4)
          {
            sub_1DDA27D28(a1, &__p);
            int v17 = sub_1DDA19FB0((uint64_t)__p);
            if (v33) {
              sub_1DDA18310(v33);
            }
            sub_1DDA27D28(a1, &__p);
            int v18 = sub_1DDA19FB0((uint64_t)__p);
            if (v33) {
              sub_1DDA18310(v33);
            }
            *(double *)(a1 + 1632) = (double)v17 / (double)v18;
            *(unsigned char *)(a1 + 1640) = 1;
          }
          goto LABEL_82;
        }
        if (v12 == 289)
        {
          if (v13 == 4)
          {
            sub_1DDA27D28(a1, &__p);
            *(_DWORD *)(a1 + 1368) = sub_1DDA19E68((uint64_t)__p);
            if (v33) {
              sub_1DDA18310(v33);
            }
            sub_1DDA27D28(a1, &__p);
            *(_DWORD *)(a1 + 1364) = sub_1DDA19E68((uint64_t)__p);
            goto LABEL_62;
          }
        }
        else if (v12 == 304 && v13 == 4)
        {
          sub_1DDA27D28(a1, &__p);
          *(_DWORD *)(a1 + 1396) = sub_1DDA19EC8((uint64_t)__p);
LABEL_62:
          if (v33) {
            sub_1DDA18310(v33);
          }
        }
      }
LABEL_82:
      sub_1DDA27D28(a1, &__p);
      uint64_t v22 = v13;
      unsigned int v23 = __p;
      uint64_t __src = v14 + v22;
      sub_1DDA1B2DC(&v30, &__src);
      (*(void (**)(void *, uint64_t *, void))(*(void *)v23 + 40))(v23, &v30, 0);
      if (v33) {
        sub_1DDA18310(v33);
      }
    }
  }
}

void sub_1DDA721B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, std::__shared_weak_count *a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v25 = *(std::__shared_weak_count **)(v23 - 104);
  if (v25) {
    sub_1DDA18310(v25);
  }
  if (a19) {
    sub_1DDA18310(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA722A4(uint64_t a1)
{
  return *(void *)(a1 + 1400);
}

uint64_t sub_1DDA722AC(uint64_t a1)
{
  return *(void *)(a1 + 1424) + *(void *)(a1 + 1416);
}

uint64_t sub_1DDA722BC(uint64_t a1)
{
  return *(void *)(a1 + 1408);
}

uint64_t sub_1DDA722C4(uint64_t a1)
{
  return *(void *)(a1 + 1424);
}

BOOL sub_1DDA722CC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 784))(a1) != 0;
}

unint64_t sub_1DDA72314(unsigned int *a1)
{
  uint64_t v1 = a1[339];
  return v1 | ((unint64_t)(a1[340] << (*(uint64_t (**)(unsigned int *))(*(void *)a1 + 800))(a1)) << 32);
}

uint64_t sub_1DDA72370(unsigned char *a1)
{
  if (a1[1380] && a1[1392])
  {
    (*(void (**)(unsigned char *))(*(void *)a1 + 800))(a1);
    return 0;
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)a1 + 800))(a1);
    return 0x800000008;
  }
}

uint64_t sub_1DDA72434(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 1380) && *(unsigned char *)(a1 + 1392)) {
    return *(void *)(a1 + 1372);
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 800))(a1);
  return 0;
}

void sub_1DDA724C4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DDA47F74(a1, a2);
  if (a2[1] == *a2) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(*(void *)*a2 + 16);
  }
  sub_1DDA18410(&v6, (int *)(a1 + 1348));
  unsigned int v5 = *(_DWORD *)(a1 + 1352);
  sub_1DDA284D4(a1, &v6, &v5, v4, &v7);
  if ((void)v7) {
    sub_1DDA480D4(a2, &v7);
  }
  if (*((void *)&v7 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v7 + 1));
  }
}

void sub_1DDA72564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1DDA18310(a12);
  }
  sub_1DDA18270(&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA72594(uint64_t a1)
{
  std::string __p = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  sub_1DDA27D28(a1, &v10);
  uint64_t v2 = v10;
  unsigned int v8 = 8;
  sub_1DDA1B3CC(&v9, &v8);
  BOOL v3 = sub_1DDA1A0CC(v2, &v9, (uint64_t)&__p);
  if (v11) {
    sub_1DDA18310(v11);
  }
  if (!v3) {
    goto LABEL_10;
  }
  uint64_t v4 = HIBYTE(v14);
  if (v14 < 0) {
    uint64_t v4 = v13;
  }
  if (v4 != 8) {
    goto LABEL_10;
  }
  p_p = &__p;
  if (v14 < 0) {
    p_p = __p;
  }
  if (*p_p == 0x4D4C4946494A5546)
  {
    sub_1DDA27D28(a1, &v10);
    sub_1DDA19EC8(v10);
    if (v11) {
      sub_1DDA18310(v11);
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, 1);
    sub_1DDA27D28(a1, &v10);
    unsigned int v9 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 48))(v10);
    (*(void (**)(uint64_t, unsigned int *))(*(void *)a1 + 160))(a1, &v9);
    if (v11) {
      sub_1DDA18310(v11);
    }
    uint64_t v6 = 1;
  }
  else
  {
LABEL_10:
    uint64_t v6 = 0;
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__p);
  }
  return v6;
}

void sub_1DDA7272C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA72770()
{
  uint64_t v0 = (uint64_t **)MEMORY[0x1F4188790]();
  BOOL v3 = v2;
  uint64_t v80 = (std::__shared_weak_count *)v1;
  uint64_t v4 = (uint64_t)v0;
  v104[1] = *MEMORY[0x1E4F143B8];
  if ((__int16)*v2 == -4096)
  {
    if (v2[1] == 13)
    {
      sub_1DDA27D28((uint64_t)v0, &v99);
      LODWORD(v102) = *((_DWORD *)v3 + 2);
      sub_1DDA18410((int *)&v96, (int *)&v102);
      sub_1DDA1A94C(v101, &v99, (uint64_t)&v96, 0);
      if (v100[0]) {
        sub_1DDA18310(v100[0]);
      }
      uint64_t v77 = v3;
      unsigned int v5 = sub_1DDA419CC(v4, (uint64_t)v80, &v99);
      if (v5)
      {
        uint64_t v6 = 0;
        uint64_t v7 = v5;
        uint64_t v78 = (uint64_t **)(v4 + 536);
        uint64_t v79 = v5;
        while (2)
        {
          unsigned int v8 = (char *)&v100[-1] + 12 * v6;
          int v10 = *((unsigned __int16 *)v8 + 2);
          uint64_t v9 = (uint64_t)(v8 + 4);
          switch(v10)
          {
            case 61441:
              if (v77[1] != 3) {
                goto LABEL_158;
              }
              goto LABEL_11;
            case 61442:
              if (*((_WORD *)&v100[-1] + 6 * v6 + 3) == 3)
              {
LABEL_11:
                LODWORD(v102) = 0;
                sub_1DDA1B3CC(&v96, (unsigned int *)&v102);
                int v11 = sub_1DDA3F234(v9, (unsigned int *)&v96);
                uint64_t v96 = v80;
                *((_DWORD *)sub_1DDA4B72C(v78, (void **)&v80->__vftable, (uint64_t)&unk_1DDBFB044, (long long **)&v96) + 14) = v11;
              }
              else
              {
LABEL_158:
                int v76 = *((_DWORD *)v100 + 3 * v6 + 1);
                uint64_t v96 = v80;
                *((_DWORD *)sub_1DDA4B72C(v78, (void **)&v80->__vftable, (uint64_t)&unk_1DDBFB044, (long long **)&v96) + 14) = v76;
              }
              goto LABEL_175;
            case 61443:
              if (*((_WORD *)&v100[-1] + 6 * v6 + 3) != 4) {
                goto LABEL_175;
              }
              uint64_t v96 = 0;
              uint64_t v97 = 0;
              uint64_t v98 = 0;
              if (sub_1DDA44F6C(v4, v9, &v96))
              {
                uint64_t v102 = v80;
                int v12 = (char *)(sub_1DDA4B960((uint64_t **)(v4 + 656), (void **)&v80->__vftable, (uint64_t)&unk_1DDBFB044, (long long **)&v102)+ 7);
                if (v12 != (char *)&v96) {
                  sub_1DDA17E28(v12, (char *)v96, (uint64_t)v97, ((char *)v97 - (unsigned char *)v96) >> 2);
                }
              }
              *(_DWORD *)(v4 + 1600) = *((_DWORD *)v100 + 3 * v6 + 1);
              *(unsigned char *)(v4 + 1604) = 1;
              goto LABEL_96;
            case 61444:
              if (*((_WORD *)&v100[-1] + 6 * v6 + 3) == 4)
              {
                *(_DWORD *)(v4 + 1608) = *((_DWORD *)v100 + 3 * v6 + 1);
                *(unsigned char *)(v4 + 1612) = 1;
              }
              goto LABEL_175;
            case 61445:
              if (*((_WORD *)&v100[-1] + 6 * v6 + 3) == 4)
              {
                *(_DWORD *)(v4 + 1616) = *((_DWORD *)v100 + 3 * v6 + 1);
                *(unsigned char *)(v4 + 1620) = 1;
              }
              goto LABEL_175;
            case 61446:
              if (*((_WORD *)&v100[-1] + 6 * v6 + 3) == 4)
              {
                *(_DWORD *)(v4 + 1624) = *((_DWORD *)v100 + 3 * v6 + 1);
                *(unsigned char *)(v4 + 1628) = 1;
              }
              goto LABEL_175;
            case 61447:
              if (*((unsigned __int16 *)&v100[-1] + 6 * v6 + 3) - 3 > 1) {
                goto LABEL_175;
              }
              sub_1DDA27D28(v4, &v96);
              int v13 = sub_1DDA19CA4((uint64_t)v96);
              if (v97) {
                sub_1DDA18310(v97);
              }
              uint64_t v96 = 0;
              uint64_t v97 = 0;
              uint64_t v98 = 0;
              int v14 = sub_1DDA44F6C(v4, v9, &v96);
              uint64_t v15 = (std::__shared_weak_count *)v96;
              if (v14)
              {
                if (v13 && (((char *)v97 - (unsigned char *)v96) & 0x3FFFFFFFCLL) != 0)
                {
                  uint64_t v16 = 0;
                  uint64_t v17 = ((unint64_t)((char *)v97 - (unsigned char *)v96) >> 2);
                  do
                  {
                    LODWORD(v102) = v13;
                    LODWORD(__src) = *sub_1DDA2A648((int *)&v102, (unsigned int *)((char *)v15 + v16));
                    int v18 = sub_1DDA456E8((unsigned int *)&__src);
                    uint64_t v15 = (std::__shared_weak_count *)v96;
                    *(_DWORD *)((char *)v96 + v16) = v18;
                    v16 += 4;
                    --v17;
                  }
                  while (v17);
                }
                *(void *)(v4 + 8 * *(unsigned int *)(v4 + 1344) + 1400) = LODWORD(v15->__vftable);
              }
              else if (!v96)
              {
                goto LABEL_174;
              }
              uint64_t v97 = v15;
              operator delete(v15);
LABEL_174:
              uint64_t v7 = v79;
LABEL_175:
              if (++v6 == v7) {
                break;
              }
              continue;
            case 61448:
              if (*((unsigned __int16 *)&v100[-1] + 6 * v6 + 3) - 3 > 1) {
                goto LABEL_175;
              }
              uint64_t v96 = 0;
              uint64_t v97 = 0;
              uint64_t v98 = 0;
              int v19 = sub_1DDA44F6C(v4, v9, &v96);
              unsigned int v20 = (std::__shared_weak_count *)v96;
              if (!v19) {
                goto LABEL_97;
              }
              uint64_t v21 = v4 + 8 * *(unsigned int *)(v4 + 1344);
              *(void *)(v21 + 1416) = 0;
              if (v97 == v20) {
                goto LABEL_97;
              }
              uint64_t v22 = 0;
              uint64_t v23 = 0;
              uint64_t v24 = (void *)(v21 + 1416);
              do
                v23 += *((unsigned int *)&v20->__vftable + v22++);
              while (((char *)v97 - (char *)v20) >> 2 > (unint64_t)v22);
              *uint64_t v24 = v23;
              goto LABEL_98;
            case 61449:
              uint64_t v25 = (char *)&v100[-1] + 12 * v6;
              if (*((_WORD *)v25 + 3) == 4 && *((_DWORD *)v25 + 2) == 1) {
                *(_DWORD *)(v4 + 4 * *(unsigned int *)(v4 + 1344) + 1432) = *((_DWORD *)v100 + 3 * v6 + 1);
              }
              goto LABEL_175;
            case 61450:
              uint64_t v27 = (char *)&v100[-1] + 12 * v6;
              int v28 = *((_DWORD *)v27 + 2);
              if (*((_WORD *)v27 + 3) != 4 || (v28 & 0xFFFFFFDF) != 4) {
                goto LABEL_175;
              }
              sub_1DDA27D28(v4, &v102);
              sub_1DDA3E944(v9, (uint64_t *)&v102, &v96);
              if (v103) {
                sub_1DDA18310(v103);
              }
              if (v28 == 36 && (char *)v96 + 32 != (char *)v97) {
                uint64_t v97 = (std::__shared_weak_count *)((char *)v96 + 32);
              }
              uint64_t v102 = v80;
              uint64_t v30 = (char *)(sub_1DDA4B960((uint64_t **)(v4 + 264), (void **)&v80->__vftable, (uint64_t)&unk_1DDBFB044, (long long **)&v102)+ 7);
              if (v30 != (char *)&v96) {
                sub_1DDA25BB0(v30, (char *)v96, (uint64_t)v97, ((char *)v97 - (unsigned char *)v96) >> 3);
              }
              goto LABEL_96;
            case 61451:
              if (*((_WORD *)&v100[-1] + 6 * v6 + 3) != 10 || *((_DWORD *)v100 + 3 * v6) <= 1u) {
                goto LABEL_175;
              }
              sub_1DDA27D28(v4, &v102);
              LODWORD(v92) = sub_1DDA3CE7C(v9);
              sub_1DDA1B4D8((int *)&__src, (int *)&v92);
              sub_1DDA1A94C((uint64_t *)&v96, (uint64_t *)&v102, (uint64_t)&__src, 0);
              if (v103) {
                sub_1DDA18310(v103);
              }
              sub_1DDA27D28(v4, &v102);
              int v31 = sub_1DDA19EC8((uint64_t)v102);
              if (v103) {
                sub_1DDA18310(v103);
              }
              sub_1DDA27D28(v4, &v102);
              unsigned int v32 = sub_1DDA19EC8((uint64_t)v102);
              if (v103) {
                sub_1DDA18310(v103);
              }
              if (v32 <= 0x10)
              {
                sub_1DDA24B78(&v102, 2 * v32);
                if (v32)
                {
                  uint64_t v33 = 0;
                  if (2 * (unint64_t)v32 <= 1) {
                    uint64_t v34 = 1;
                  }
                  else {
                    uint64_t v34 = 2 * v32;
                  }
                  uint64_t v35 = 8 * v34;
                  do
                  {
                    sub_1DDA27D28(v4, &__src);
                    int v36 = sub_1DDA19EC8((uint64_t)__src);
                    if (v95) {
                      sub_1DDA18310(v95);
                    }
                    sub_1DDA27D28(v4, &__src);
                    int v37 = sub_1DDA19EC8((uint64_t)__src);
                    if (v95) {
                      sub_1DDA18310(v95);
                    }
                    *(double *)((char *)&v102->__vftable + v33) = (double)v36 / (double)v37;
                    v33 += 8;
                  }
                  while (v35 != v33);
                }
                *(unsigned char *)(v4 + *(unsigned int *)(v4 + 1344) + 1180) = 0;
                sub_1DDA24B78(&__src, v32);
                sub_1DDA24B78(&v92, v32);
                if (v32)
                {
                  uint64_t v38 = 0;
                  uint64_t v39 = v102;
                  uint64_t v40 = (char *)v92;
                  uint64_t v41 = (char *)__src;
                  do
                  {
                    *(void *)&v40[v38] = *(std::__shared_weak_count_vtbl **)((char *)&v39->__vftable + v38);
                    *(void *)&v41[v38] = *(std::__shared_weak_count_vtbl **)((char *)&v39->__vftable + 8 * v32 + v38);
                    v38 += 8;
                  }
                  while (8 * v32 != v38);
                }
                *(_DWORD *)(v4 + 4 * *(unsigned int *)(v4 + 1344) + 1184) = v31;
                unsigned int v42 = *(_DWORD *)(v4 + 1344);
                uint64_t v43 = (char *)(v4 + 24 * v42 + 1192);
                if (v43 != (char *)&v92)
                {
                  sub_1DDA25BB0(v43, (char *)v92, (uint64_t)v93, (v93 - (unsigned char *)v92) >> 3);
                  unsigned int v42 = *(_DWORD *)(v4 + 1344);
                }
                uint64_t v44 = (char *)(v4 + 24 * v42 + 1240);
                uint64_t v45 = __src;
                if (v44 != (char *)&__src)
                {
                  sub_1DDA25BB0(v44, (char *)__src, (uint64_t)v95, ((char *)v95 - (unsigned char *)__src) >> 3);
                  uint64_t v45 = __src;
                }
                std::string __p = 0;
                unsigned int v90 = 0;
                uint64_t v91 = 0;
                sub_1DDA1808C(&__p, v45, (uint64_t)v95, ((char *)v95 - (unsigned char *)v45) >> 3);
                *(unsigned char *)(v4 + *(unsigned int *)(v4 + 1344) + 1180) = (*(uint64_t (**)(uint64_t, void **))(*(void *)v4 + 864))(v4, &__p);
                if (__p)
                {
                  unsigned int v90 = __p;
                  operator delete(__p);
                }
                if (v92)
                {
                  uint64_t v93 = v92;
                  operator delete(v92);
                }
                if (__src)
                {
                  uint64_t v95 = (std::__shared_weak_count *)__src;
                  operator delete(__src);
                }
                if (v102)
                {
                  uint64_t v103 = v102;
                  operator delete(v102);
                }
              }
              goto LABEL_173;
            case 61454:
              if (*((_WORD *)&v100[-1] + 6 * v6 + 3) != 4 || *((_DWORD *)v100 + 3 * v6) != 3) {
                goto LABEL_175;
              }
              sub_1DDA27D28(v4, &v102);
              sub_1DDA3ED68(v9, (uint64_t *)&v102, (uint64_t)&v96);
              if (v103) {
                sub_1DDA18310(v103);
              }
              LODWORD(v102) = *((unsigned __int16 *)v96 + 1);
              HIDWORD(v102) = *(unsigned __int16 *)v96;
              LODWORD(v103) = HIDWORD(v102);
              HIDWORD(v103) = *((unsigned __int16 *)v96 + 2);
              uint64_t __src = v80;
              uint64_t v46 = sub_1DDA4B960((uint64_t **)(v4 + 120), (void **)&v80->__vftable, (uint64_t)&unk_1DDBFB044, (long long **)&__src);
              sub_1DDA17E28((char *)v46 + 56, (char *)&v102, (uint64_t)v104, 4uLL);
LABEL_96:
              unsigned int v20 = (std::__shared_weak_count *)v96;
LABEL_97:
              if (v20)
              {
LABEL_98:
                uint64_t v97 = v20;
                operator delete(v20);
              }
              goto LABEL_175;
            case 61455:
              if (*((_WORD *)&v100[-1] + 6 * v6 + 3) != 10 || *((_DWORD *)v100 + 3 * v6) < 2u) {
                goto LABEL_175;
              }
              sub_1DDA27D28(v4, &v102);
              LODWORD(v92) = sub_1DDA3CE7C(v9);
              sub_1DDA1B4D8((int *)&__src, (int *)&v92);
              sub_1DDA1A94C((uint64_t *)&v96, (uint64_t *)&v102, (uint64_t)&__src, 0);
              if (v103) {
                sub_1DDA18310(v103);
              }
              sub_1DDA27D28(v4, &v102);
              int v47 = sub_1DDA19EC8((uint64_t)v102);
              if (v103) {
                sub_1DDA18310(v103);
              }
              sub_1DDA27D28(v4, &v102);
              unsigned int v48 = sub_1DDA19EC8((uint64_t)v102);
              if (v103) {
                sub_1DDA18310(v103);
              }
              if (v48 <= 0x10)
              {
                sub_1DDA24B78(&v102, 3 * v48);
                if (v48)
                {
                  uint64_t v49 = 0;
                  if (3 * (unint64_t)v48 <= 1) {
                    uint64_t v50 = 1;
                  }
                  else {
                    uint64_t v50 = 3 * v48;
                  }
                  uint64_t v51 = 8 * v50;
                  do
                  {
                    sub_1DDA27D28(v4, &__src);
                    int v52 = sub_1DDA19EC8((uint64_t)__src);
                    if (v95) {
                      sub_1DDA18310(v95);
                    }
                    sub_1DDA27D28(v4, &__src);
                    int v53 = sub_1DDA19EC8((uint64_t)__src);
                    if (v95) {
                      sub_1DDA18310(v95);
                    }
                    *(double *)((char *)&v102->__vftable + v49) = (double)v52 / (double)v53;
                    v49 += 8;
                  }
                  while (v51 != v49);
                }
                *(unsigned char *)(v4 + *(unsigned int *)(v4 + 1344) + 1442) = 0;
                sub_1DDA24B78(&__src, v48);
                sub_1DDA24B78(&v92, v48);
                sub_1DDA24B78(&v87, v48);
                if (v48)
                {
                  uint64_t v54 = 0;
                  uint64_t v55 = v102;
                  uint64_t v56 = (char *)__src;
                  uint64_t v57 = (char *)v92;
                  uint64_t v58 = (char *)v87;
                  do
                  {
                    *(void *)&v56[v54] = *(std::__shared_weak_count_vtbl **)((char *)&v55->__vftable + v54);
                    *(void *)&v57[v54] = *(std::__shared_weak_count_vtbl **)((char *)&v55->__vftable + 8 * v48 + v54);
                    *(void *)&v58[v54] = *(std::__shared_weak_count_vtbl **)((char *)&v55->__vftable + 16 * v48 + v54);
                    v54 += 8;
                  }
                  while (8 * v48 != v54);
                }
                uint64_t v59 = *(unsigned int *)(v4 + 1344);
                *(_DWORD *)(v4 + 4 * v59 + 1444) = v47;
                uint64_t v60 = (char *)(v4 + 24 * v59 + 1456);
                if (v60 != (char *)&__src)
                {
                  sub_1DDA25BB0(v60, (char *)__src, (uint64_t)v95, ((char *)v95 - (unsigned char *)__src) >> 3);
                  LODWORD(v59) = *(_DWORD *)(v4 + 1344);
                }
                uint64_t v61 = (char *)(v4 + 24 * v59 + 1504);
                if (v61 != (char *)&v92)
                {
                  sub_1DDA25BB0(v61, (char *)v92, (uint64_t)v93, (v93 - (unsigned char *)v92) >> 3);
                  LODWORD(v59) = *(_DWORD *)(v4 + 1344);
                }
                uint64_t v62 = (char *)(v4 + 24 * v59 + 1552);
                if (v62 != (char *)&v87) {
                  sub_1DDA25BB0(v62, (char *)v87, (uint64_t)v88, (v88 - (unsigned char *)v87) >> 3);
                }
                uint64_t v84 = 0;
                uint64_t v85 = 0;
                uint64_t v86 = 0;
                sub_1DDA1808C(&v84, v92, (uint64_t)v93, (v93 - (unsigned char *)v92) >> 3);
                if ((*(uint64_t (**)(uint64_t, void **))(*(void *)v4 + 864))(v4, &v84))
                {
                  *(unsigned char *)(v4 + *(unsigned int *)(v4 + 1344) + 1442) = 1;
                }
                else
                {
                  uint64_t v81 = 0;
                  uint64_t v82 = 0;
                  uint64_t v83 = 0;
                  sub_1DDA1808C(&v81, v87, (uint64_t)v88, (v88 - (unsigned char *)v87) >> 3);
                  *(unsigned char *)(v4 + *(unsigned int *)(v4 + 1344) + 1442) = (*(uint64_t (**)(uint64_t, void **))(*(void *)v4 + 864))(v4, &v81);
                  if (v81)
                  {
                    uint64_t v82 = v81;
                    operator delete(v81);
                  }
                }
                if (v84)
                {
                  uint64_t v85 = v84;
                  operator delete(v84);
                }
                if (v87)
                {
                  unsigned int v88 = v87;
                  operator delete(v87);
                }
                if (v92)
                {
                  uint64_t v93 = v92;
                  operator delete(v92);
                }
                if (__src)
                {
                  uint64_t v95 = (std::__shared_weak_count *)__src;
                  operator delete(__src);
                }
                if (v102)
                {
                  uint64_t v103 = v102;
                  operator delete(v102);
                }
              }
              goto LABEL_173;
            case 61456:
              if (*((_WORD *)&v100[-1] + 6 * v6 + 3) != 10 || *((_DWORD *)v100 + 3 * v6) < 2u) {
                goto LABEL_175;
              }
              sub_1DDA27D28(v4, &v102);
              LODWORD(v92) = sub_1DDA3CE7C(v9);
              sub_1DDA1B4D8((int *)&__src, (int *)&v92);
              sub_1DDA1A94C((uint64_t *)&v96, (uint64_t *)&v102, (uint64_t)&__src, 0);
              if (v103) {
                sub_1DDA18310(v103);
              }
              sub_1DDA27D28(v4, &v102);
              int v63 = sub_1DDA19EC8((uint64_t)v102);
              if (v103) {
                sub_1DDA18310(v103);
              }
              sub_1DDA27D28(v4, &v102);
              unsigned int v64 = sub_1DDA19EC8((uint64_t)v102);
              if (v103) {
                sub_1DDA18310(v103);
              }
              if (v64 <= 0x10)
              {
                sub_1DDA24B78(&v102, 2 * v64);
                if (v64)
                {
                  uint64_t v65 = 0;
                  if (2 * (unint64_t)v64 <= 1) {
                    uint64_t v66 = 1;
                  }
                  else {
                    uint64_t v66 = 2 * v64;
                  }
                  uint64_t v67 = 8 * v66;
                  do
                  {
                    sub_1DDA27D28(v4, &__src);
                    int v68 = sub_1DDA19EC8((uint64_t)__src);
                    if (v95) {
                      sub_1DDA18310(v95);
                    }
                    sub_1DDA27D28(v4, &__src);
                    int v69 = sub_1DDA19EC8((uint64_t)__src);
                    if (v95) {
                      sub_1DDA18310(v95);
                    }
                    *(double *)((char *)&v102->__vftable + v65) = (double)v68 / (double)v69;
                    v65 += 8;
                  }
                  while (v67 != v65);
                }
                sub_1DDA74C84(&__src, v64);
                uint64_t v70 = (long long *)__src;
                if (v64)
                {
                  uint64_t v71 = 0;
                  uint64_t v72 = v102;
                  uint64_t v73 = (char *)__src + 8;
                  do
                  {
                    uint64_t v74 = *(uint64_t *)((char *)&v72->__vftable + 8 * v64 + v71);
                    *(v73 - 1) = *(std::__shared_weak_count_vtbl **)((char *)&v72->__vftable + v71);
                    *uint64_t v73 = v74;
                    v71 += 8;
                    v73 += 2;
                  }
                  while (8 * v64 != v71);
                }
                *(_DWORD *)(v4 + 4 * *(unsigned int *)(v4 + 1344) + 1288) = v63;
                uint64_t v75 = (void **)(v4 + 24 * *(unsigned int *)(v4 + 1344) + 1296);
                if (v75 != &__src)
                {
                  sub_1DDA74CFC(v75, v70, (long long *)v95, ((char *)v95 - (char *)v70) >> 4);
                  uint64_t v70 = (long long *)__src;
                }
                if (v70)
                {
                  uint64_t v95 = (std::__shared_weak_count *)v70;
                  operator delete(v70);
                }
                if (v102)
                {
                  uint64_t v103 = v102;
                  operator delete(v102);
                }
              }
LABEL_173:
              sub_1DDA1AA18((uint64_t *)&v96);
              goto LABEL_174;
            default:
              goto LABEL_175;
          }
          break;
        }
      }
      sub_1DDA1AA18(v101);
    }
  }
  else
  {
    sub_1DDA43480(v0, v1, v2);
  }
}

void sub_1DDA73644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  if (__p) {
    operator delete(__p);
  }
  if (a20) {
    operator delete(a20);
  }
  if (a23) {
    operator delete(a23);
  }
  if (a29) {
    operator delete(a29);
  }
  if (a32) {
    operator delete(a32);
  }
  uint64_t v41 = *(void **)(v39 - 120);
  if (v41)
  {
    *(void *)(v39 - 112) = v41;
    operator delete(v41);
  }
  sub_1DDA1AA18((uint64_t *)&a35);
  sub_1DDA1AA18((uint64_t *)(v39 - 144));
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA73960(uint64_t result, uint64_t a2, unsigned __int16 *a3)
{
  if ((*a3 | 8) == 0x140B && a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
  {
    uint64_t v5 = result;
    unsigned int v6 = 0;
    sub_1DDA1B3CC(&v7, &v6);
    double result = sub_1DDA3F234((uint64_t)a3, &v7);
    *(_WORD *)(v5 + 1440) = result;
  }
  return result;
}

void sub_1DDA739D4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_1DDA1A880(&__p, "raf");
  unint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    unint64_t v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v8;
    }
    uint64_t v45 = a2 + 2;
    if (v10) {
      int v11 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v10);
    }
    else {
      int v11 = 0;
    }
    int v12 = &v11[24 * v7];
    uint64_t v41 = v11;
    unsigned int v42 = v12;
    uint64_t v44 = &v11[24 * v10];
    long long v13 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v12 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)int v12 = v13;
    memset(&__p, 0, sizeof(__p));
    uint64_t v43 = v12 + 24;
    sub_1DDA2A0E8(a2, &v41);
    uint64_t v14 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v41);
    int v15 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v14;
    if (v15 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v6 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v5 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1DDA1A880(&__p, "fuji");
  unint64_t v17 = a2[1];
  unint64_t v16 = a2[2];
  if (v17 >= v16)
  {
    unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    unint64_t v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20) {
      unint64_t v20 = 2 * v21;
    }
    if (v21 >= 0x555555555555555) {
      unint64_t v22 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v22 = v20;
    }
    uint64_t v45 = a2 + 2;
    if (v22) {
      uint64_t v23 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v22);
    }
    else {
      uint64_t v23 = 0;
    }
    uint64_t v24 = &v23[24 * v19];
    uint64_t v41 = v23;
    unsigned int v42 = v24;
    uint64_t v44 = &v23[24 * v22];
    long long v25 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v24 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)uint64_t v24 = v25;
    memset(&__p, 0, sizeof(__p));
    uint64_t v43 = v24 + 24;
    sub_1DDA2A0E8(a2, &v41);
    uint64_t v26 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v41);
    int v27 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v26;
    if (v27 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v18 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v17 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v17 = v18;
    a2[1] = v17 + 24;
  }
  sub_1DDA29B20(a1, &__p);
  unint64_t v29 = a2[1];
  unint64_t v28 = a2[2];
  if (v29 >= v28)
  {
    unint64_t v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    unint64_t v32 = v31 + 1;
    if (v31 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *a2) >> 3);
    if (2 * v33 > v32) {
      unint64_t v32 = 2 * v33;
    }
    if (v33 >= 0x555555555555555) {
      unint64_t v34 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v34 = v32;
    }
    uint64_t v45 = a2 + 2;
    if (v34) {
      uint64_t v35 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v34);
    }
    else {
      uint64_t v35 = 0;
    }
    int v36 = &v35[24 * v31];
    uint64_t v41 = v35;
    unsigned int v42 = v36;
    uint64_t v44 = &v35[24 * v34];
    long long v37 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v36 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)int v36 = v37;
    memset(&__p, 0, sizeof(__p));
    uint64_t v43 = v36 + 24;
    sub_1DDA2A0E8(a2, &v41);
    uint64_t v38 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v41);
    int v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v38;
    if (v39 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v30 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v29 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v29 = v30;
    a2[1] = v29 + 24;
  }
}

void sub_1DDA73D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA73D84(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 824))();
}

uint64_t sub_1DDA73DB0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1180);
}

void *sub_1DDA73DB8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 824))(a1);
  long long v5 = 0uLL;
  if (result)
  {
    (*(void (**)(uint64_t, __n128))(*(void *)a1 + 464))(a1, (__n128)0);
    uint64_t v9 = v6;
    int v8 = (*(void *)(a1 + 1200) - *(void *)(a1 + 1192)) >> 3;
    double result = sub_1DDA751B0(&v9, &v9, (int *)(a1 + 1184), &v8, a1 + 1192, a1 + 1240, &v7);
    long long v5 = v7;
  }
  *a2 = v5;
  return result;
}

void *sub_1DDA73E8C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 824))(a1);
  long long v5 = 0uLL;
  if (result)
  {
    (*(void (**)(uint64_t, __n128))(*(void *)a1 + 464))(a1, (__n128)0);
    int v10 = (*(void *)(a1 + 1200) - *(void *)(a1 + 1192)) >> 3;
    LODWORD(v8) = v6;
    LODWORD(v9) = v6;
    HIDWORD(v9) = (v6 >> 31) & 0xFFFFFFFE;
    HIDWORD(v8) = HIDWORD(v9);
    double result = sub_1DDA754F0(&v9, &v8, (int *)(a1 + 1184), &v10, a1 + 1192, a1 + 1240, &v7);
    long long v5 = v7;
  }
  *a2 = v5;
  return result;
}

BOOL sub_1DDA73F70(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[1];
  if (*a2 == v2) {
    return 0;
  }
  uint64_t v3 = *a2 + 8;
  do
  {
    double v4 = fabs(*(double *)(v3 - 8));
    BOOL result = v4 > 0.0001;
    BOOL v6 = v4 > 0.0001 || v3 == v2;
    v3 += 8;
  }
  while (!v6);
  return result;
}

float sub_1DDA73FB0@<S0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(double **)(a1 + 1464);
  uint64_t v3 = *(double **)(a1 + 1456);
  unint64_t v4 = v2 - v3;
  *(unsigned char *)a2 = *(unsigned char *)(a1 + 1442);
  int v5 = *(_DWORD *)(a1 + 1444);
  *(_DWORD *)(a2 + 4) = v4;
  *(_DWORD *)(a2 + 8) = v5;
  if ((unint64_t)((char *)v2 - (char *)v3) > 0x80)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v6 = 0;
  long long v7 = 0uLL;
  *(_OWORD *)(a2 + 60) = 0u;
  *(_OWORD *)(a2 + 44) = 0u;
  *(_OWORD *)(a2 + 28) = 0u;
  *(_OWORD *)(a2 + 12) = 0u;
  do
  {
    uint64_t v8 = a2 + v6;
    *(_OWORD *)(v8 + 76) = 0uLL;
    *(_OWORD *)(v8 + 140) = 0uLL;
    v6 += 16;
  }
  while (v6 != 64);
  if (v2 != v3)
  {
    uint64_t v9 = *(double **)(a1 + 1504);
    int v10 = *(double **)(a1 + 1552);
    if (v4 <= 1) {
      unint64_t v4 = 1;
    }
    int v11 = (float *)(a2 + 140);
    do
    {
      double v12 = *v9++;
      float v13 = v12;
      *(v11 - 16) = v13;
      double v14 = *v10++;
      float v15 = v14;
      *int v11 = v15;
      double v16 = *v3++;
      *(float *)&long long v7 = v16;
      *((_DWORD *)v11++ - 32) = v7;
      --v4;
    }
    while (v4);
  }
  return *(float *)&v7;
}

void sub_1DDA740A8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

float sub_1DDA740BC@<S0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(double **)(a1 + 1200);
  uint64_t v3 = *(double **)(a1 + 1192);
  unint64_t v4 = v2 - v3;
  *(unsigned char *)a2 = *(unsigned char *)(a1 + 1180);
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a1 + 1184);
  *(_DWORD *)(a2 + 8) = v4;
  if ((unint64_t)((char *)v2 - (char *)v3) > 0x80)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  float result = 0.0;
  *(_OWORD *)(a2 + 124) = 0u;
  *(_OWORD *)(a2 + 108) = 0u;
  *(_OWORD *)(a2 + 92) = 0u;
  *(_OWORD *)(a2 + 76) = 0u;
  *(_OWORD *)(a2 + 60) = 0u;
  *(_OWORD *)(a2 + 44) = 0u;
  *(_OWORD *)(a2 + 28) = 0u;
  *(_OWORD *)(a2 + 12) = 0u;
  if (v2 != v3)
  {
    uint64_t v6 = *(double **)(a1 + 1240);
    uint64_t v7 = (uint64_t)(*(void *)(a1 + 1248) - (void)v6) >> 3;
    if (v4 <= 1) {
      unint64_t v4 = 1;
    }
    uint64_t v8 = (float *)(a2 + 76);
    do
    {
      float v9 = *v3;
      *(v8 - 16) = v9;
      if (!v7) {
        sub_1DDA24AD0();
      }
      double v10 = *v6++;
      float result = v10;
      *v8++ = result;
      --v7;
      ++v3;
      --v4;
    }
    while (v4);
  }
  return result;
}

void sub_1DDA741B8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA741CC(int *a1)
{
  uint64_t v2 = (*(uint64_t (**)(int *))(*(void *)a1 + 784))(a1);
  uint64_t v3 = a1[358];
  if (v2)
  {
    if (v3 >= 4) {
      return 0;
    }
    else {
      return dword_1DDBF9C00[v3];
    }
  }
  else
  {
    switch((int)v3)
    {
      case 128:
        return 2172748160;
      case 129:
        return 2172748161;
      case 130:
        return 2172748162;
      case 131:
        return 2172748163;
      case 132:
        return 2172748164;
      case 133:
        int v5 = 5;
        goto LABEL_26;
      case 134:
        return 2172748166;
      case 135:
        return 2172748167;
      case 136:
        return 2172748168;
      case 137:
        int v5 = 9;
        goto LABEL_26;
      case 138:
        int v5 = 10;
        goto LABEL_26;
      case 139:
        int v5 = 11;
        goto LABEL_26;
      case 140:
        return 2172748172;
      case 141:
        int v5 = 13;
        goto LABEL_26;
      case 142:
        return 2172748174;
      case 143:
        return 2172748175;
      case 144:
        return 2172748176;
      case 145:
        int v5 = 17;
LABEL_26:
        uint64_t result = v5 | 0x81818180;
        break;
      default:
        switch((int)v3)
        {
          case 0:
            uint64_t result = 2492765332;
            break;
          case 1:
            uint64_t result = 1633771873;
            break;
          case 2:
            uint64_t result = 1229539657;
            break;
          case 3:
            uint64_t result = 370546198;
            break;
          default:
            return 0;
        }
        break;
    }
  }
  return result;
}

void sub_1DDA74414(_DWORD *a1@<X0>, void *a2@<X1>, _OWORD *a3@<X2>, void *a4@<X8>)
{
  if ((*(uint64_t (**)(_DWORD *))(*(void *)a1 + 784))(a1)
    || !*((unsigned char *)a1 + 1604)
    || ((unsigned int v8 = a1[400], v8 <= 0x10) ? (v9 = ((1 << v8) & 0x15000) == 0) : (v9 = 1),
        v9 || !*((unsigned char *)a1 + 1612) || !*((unsigned char *)a1 + 1620) || !*((unsigned char *)a1 + 1628)))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  *a4 = 0;
  a4[1] = 0;
  int v10 = a1[402];
  if (v8 != 12)
  {
    if (v10 == 4)
    {
      if (a1[406] != 1) {
        return;
      }
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v18, a1);
      uint64_t v17 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
      sub_1DDA758B4(&v18, (unint64_t *)&v17, a2, a3, &v20);
LABEL_21:
      long long v12 = v20;
      long long v20 = 0uLL;
      *(_OWORD *)a4 = v12;
      float v13 = v19;
      if (!v19) {
        return;
      }
      goto LABEL_22;
    }
    goto LABEL_18;
  }
  if (v10 != 4)
  {
LABEL_18:
    if (!v10 && !a1[406])
    {
      (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v18, a1);
      uint64_t v17 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
      uint64_t v16 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 784))(a1);
      sub_1DDA75A64(&v18, (unint64_t *)&v17, &v16, a2, a3, &v20);
      goto LABEL_21;
    }
    return;
  }
  int v11 = a1[406];
  if (v11 != 1)
  {
    if (v11) {
      return;
    }
    (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v18, a1);
    uint64_t v17 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
    uint64_t v16 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 784))(a1);
    sub_1DDA756DC(&v18, (unint64_t *)&v17, &v16, a2, a3, &v20);
    goto LABEL_21;
  }
  (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 384))(&v18, a1);
  uint64_t v17 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 424))(a1);
  sub_1DDA58888(&v18, (unint64_t *)&v17, a2, a3, &v20);
  if (v19) {
    sub_1DDA18310(v19);
  }
  sub_1DDAB4290(v20, 1);
  long long v14 = v20;
  if (!*((void *)&v20 + 1))
  {
    *(_OWORD *)a4 = (unint64_t)v20;
    return;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v20 + 1) + 8), 1uLL, memory_order_relaxed);
  float v13 = (std::__shared_weak_count *)*((void *)&v20 + 1);
  *(_OWORD *)a4 = v14;
  if (v13) {
LABEL_22:
  }
    sub_1DDA18310(v13);
}

void sub_1DDA74860(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14)
{
  if (a12) {
    sub_1DDA18310(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA748C8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 1604)) {
    return *(unsigned int *)(a1 + 1600);
  }
  else {
    return sub_1DDA27FA8();
  }
}

id sub_1DDA748DC(uint64_t a1)
{
  v25[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1DDA40140(a1);
  uint64_t v7 = objc_msgSend_mutableCopy(v2, v3, v4, v5, v6);

  uint64_t v24 = &unk_1F39AE738;
  v22[1] = @"Namespace";
  v23[0] = @"FujiIFD";
  v21[4] = a1;
  v22[0] = @"Name";
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 3221225472;
  v21[2] = sub_1DDA74AAC;
  void v21[3] = &unk_1E6D04D38;
  unsigned int v8 = (void *)MEMORY[0x1E01C46E0](v21);
  v23[1] = v8;
  int v10 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v9, (uint64_t)v23, (uint64_t)v22, 2);
  v25[0] = v10;
  long long v12 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v11, (uint64_t)v25, (uint64_t)&v24, 1);
  objc_msgSend_addEntriesFromDictionary_(v7, v13, (uint64_t)v12, v14, v15);

  unint64_t v19 = objc_msgSend_dictionaryWithDictionary_(MEMORY[0x1E4F1C9E8], v16, (uint64_t)v7, v17, v18);

  return v19;
}

void sub_1DDA74A60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA74AAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 872))();
}

id sub_1DDA74ADC(uint64_t a1, const char *a2)
{
  void v5[12] = *MEMORY[0x1E4F143B8];
  v4[0] = &unk_1F39AE750;
  v4[1] = &unk_1F39AE768;
  v5[0] = &unk_1F39B42D0;
  v5[1] = &unk_1F39B42F8;
  v4[2] = &unk_1F39AE780;
  v4[3] = &unk_1F39AE798;
  v5[2] = &unk_1F39B4320;
  void v5[3] = &unk_1F39B4348;
  void v4[4] = &unk_1F39AE7B0;
  v4[5] = &unk_1F39AE7C8;
  v5[4] = &unk_1F39B4370;
  void v5[5] = &unk_1F39B4398;
  v4[6] = &unk_1F39AE7E0;
  v4[7] = &unk_1F39AE7F8;
  v5[6] = &unk_1F39B43C0;
  v5[7] = &unk_1F39B43E8;
  v4[8] = &unk_1F39AE810;
  v4[9] = &unk_1F39AE828;
  v5[8] = &unk_1F39B4410;
  v5[9] = &unk_1F39B4438;
  v4[10] = &unk_1F39AE840;
  void v4[11] = &unk_1F39AE858;
  v5[10] = &unk_1F39B4460;
  v5[11] = &unk_1F39B4488;
  uint64_t v2 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], a2, (uint64_t)v5, (uint64_t)v4, 12);

  return v2;
}

void sub_1DDA74C44(void *a1)
{
  sub_1DDA74E50(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA74C7C(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1440);
}

void *sub_1DDA74C84(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1DDA197F4(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 16 * a2);
    a1[1] = &v4[16 * a2];
  }
  return a1;
}

void sub_1DDA74CE0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1DDA74CFC(void *a1, long long *a2, long long *a3, unint64_t a4)
{
  uint64_t v6 = a2;
  uint64_t v8 = a1[2];
  uint64_t result = (char *)*a1;
  if (a4 <= (v8 - (uint64_t)result) >> 4)
  {
    uint64_t v18 = (char *)a1[1];
    float v13 = a1 + 1;
    long long v12 = v18;
    unint64_t v19 = (v18 - result) >> 4;
    if (v19 >= a4)
    {
      uint64_t v26 = result;
      if (a2 != a3)
      {
        int v27 = result;
        do
        {
          long long v28 = *v6++;
          *(_OWORD *)int v27 = v28;
          v27 += 16;
          v26 += 16;
        }
        while (v6 != a3);
      }
      uint64_t v17 = (char *)(v26 - result);
      long long v12 = result;
    }
    else
    {
      long long v20 = &a2[v19];
      if (v12 != result)
      {
        uint64_t v21 = 16 * v19;
        do
        {
          long long v22 = *v6++;
          *(_OWORD *)uint64_t result = v22;
          result += 16;
          v21 -= 16;
        }
        while (v21);
      }
      uint64_t v23 = v12;
      if (v20 != a3)
      {
        uint64_t v24 = v12;
        do
        {
          long long v25 = *v20++;
          *(_OWORD *)uint64_t v24 = v25;
          v24 += 16;
          v23 += 16;
        }
        while (v20 != a3);
      }
      uint64_t v17 = (char *)(v23 - v12);
    }
  }
  else
  {
    if (result)
    {
      a1[1] = result;
      operator delete(result);
      uint64_t v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (a4 >> 60) {
      sub_1DDA17F78();
    }
    uint64_t v10 = v8 >> 3;
    if (v8 >> 3 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = sub_1DDA197F4(a1, v11);
    uint64_t v14 = (char *)a1[1];
    float v13 = a1 + 1;
    long long v12 = v14;
    uint64_t v15 = v14;
    if (v6 != a3)
    {
      uint64_t v15 = v12;
      do
      {
        long long v16 = *v6++;
        *(_OWORD *)uint64_t v15 = v16;
        v15 += 16;
      }
      while (v6 != a3);
    }
    uint64_t v17 = (char *)(v15 - v12);
  }
  *float v13 = &v17[(void)v12];
  return result;
}

uint64_t sub_1DDA74E50(void *a1)
{
  uint64_t v2 = 0;
  *a1 = &unk_1F395F018;
  do
  {
    uint64_t v3 = (void *)a1[v2 + 197];
    if (v3)
    {
      a1[v2 + 198] = v3;
      operator delete(v3);
    }
    v2 -= 3;
  }
  while (v2 != -6);
  for (uint64_t i = 0; i != -6; i -= 3)
  {
    uint64_t v5 = (void *)a1[i + 191];
    if (v5)
    {
      a1[i + 192] = v5;
      operator delete(v5);
    }
  }
  for (uint64_t j = 0; j != -6; j -= 3)
  {
    uint64_t v7 = (void *)a1[j + 185];
    if (v7)
    {
      a1[j + 186] = v7;
      operator delete(v7);
    }
  }
  for (uint64_t k = 0; k != -6; k -= 3)
  {
    BOOL v9 = (void *)a1[k + 165];
    if (v9)
    {
      a1[k + 166] = v9;
      operator delete(v9);
    }
  }
  for (uint64_t m = 0; m != -6; m -= 3)
  {
    unint64_t v11 = (void *)a1[m + 158];
    if (v11)
    {
      a1[m + 159] = v11;
      operator delete(v11);
    }
  }
  for (uint64_t n = 0; n != -6; n -= 3)
  {
    float v13 = (void *)a1[n + 152];
    if (v13)
    {
      a1[n + 153] = v13;
      operator delete(v13);
    }
  }

  return sub_1DDA49A44((uint64_t)a1);
}

void sub_1DDA74F78(void *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, void *a5@<X8>)
{
  uint64_t v10 = operator new(0x688uLL);
  sub_1DDA7500C(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA74FF8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA7500C(void *a1, void *a2, char *a3, void **a4, void **a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395F3B0;
  sub_1DDA71274((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1DDA75060(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA75074(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395F3B0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA75094(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395F3B0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA750E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

int *sub_1DDA75110(int *result, unsigned int *a2)
{
  unsigned int v2 = *a2;
  if ((*a2 & 0x80000000) != 0) {
    unsigned int v2 = -v2;
  }
  unint64_t v3 = *result * (unint64_t)v2;
  if ((*a2 & 0x80000000) == 0) {
    int v4 = v3;
  }
  else {
    int v4 = -(int)v3;
  }
  BOOL v5 = (v3 & 0xFFFFFFFF00000000) != 0;
  if (v3) {
    BOOL v6 = (*a2 & 0x80000000) != 0;
  }
  else {
    BOOL v6 = 0;
  }
  *uint64_t result = v4;
  if (v5 || v6)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA7519C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA751B0@<X0>(void *a1@<X1>, void *a2@<X2>, int *a3@<X3>, int *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, void *a7@<X8>)
{
  uint64_t v14 = operator new(0x70uLL);
  uint64_t result = sub_1DDA75244(v14, a1, a2, a3, a4, a5, a6);
  *a7 = v14 + 3;
  a7[1] = v14;
  return result;
}

void sub_1DDA75230(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA75244(void *a1, void *a2, void *a3, int *a4, int *a5, uint64_t a6, uint64_t a7)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395F400;
  sub_1DDA7533C((uint64_t)(a1 + 3), a2, a3, a4, a5, a6, a7);
  return a1;
}

void sub_1DDA7528C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA752A0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395F400;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA752C0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395F400;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA75314(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_1DDA7533C(uint64_t a1, void *a2, void *a3, int *a4, int *a5, uint64_t a6, uint64_t a7)
{
  int v11 = *a4;
  int v12 = *a5;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v17 = 0;
  sub_1DDA1808C(&v17, *(const void **)a6, *(void *)(a6 + 8), (uint64_t)(*(void *)(a6 + 8) - *(void *)a6) >> 3);
  std::string __p = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  sub_1DDA1808C(&__p, *(const void **)a7, *(void *)(a7 + 8), (uint64_t)(*(void *)(a7 + 8) - *(void *)a7) >> 3);
  sub_1DDA75438(a1, a2, a3, v11, v12, (uint64_t)&v17, (uint64_t)&__p);
  if (__p)
  {
    uint64_t v15 = __p;
    operator delete(__p);
  }
  if (v17)
  {
    uint64_t v18 = v17;
    operator delete(v17);
  }
  return a1;
}

void sub_1DDA75404(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  if (a12) {
    operator delete(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA75438(uint64_t a1, void *a2, void *a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  *(void *)a1 = &unk_1F398F2A0;
  *(void *)(a1 + 8) = *a2;
  *(void *)(a1 + 16) = *a3;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = a4;
  *(_DWORD *)(a1 + 36) = a5;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  sub_1DDA1808C((void *)(a1 + 40), *(const void **)a6, *(void *)(a6 + 8), (uint64_t)(*(void *)(a6 + 8) - *(void *)a6) >> 3);
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  sub_1DDA1808C((void *)(a1 + 64), *(const void **)a7, *(void *)(a7 + 8), (uint64_t)(*(void *)(a7 + 8) - *(void *)a7) >> 3);
  return a1;
}

void sub_1DDA754D4(_Unwind_Exception *exception_object)
{
  int v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 48) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA754F0@<X0>(void *a1@<X1>, void *a2@<X2>, int *a3@<X3>, int *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, void *a7@<X8>)
{
  uint64_t v14 = operator new(0x70uLL);
  uint64_t result = sub_1DDA75584(v14, a1, a2, a3, a4, a5, a6);
  *a7 = v14 + 3;
  a7[1] = v14;
  return result;
}

void sub_1DDA75570(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA75584(void *a1, void *a2, void *a3, int *a4, int *a5, uint64_t a6, uint64_t a7)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395F400;
  sub_1DDA755E0((uint64_t)(a1 + 3), a2, a3, a4, a5, a6, a7);
  return a1;
}

void sub_1DDA755CC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA755E0(uint64_t a1, void *a2, void *a3, int *a4, int *a5, uint64_t a6, uint64_t a7)
{
  int v11 = *a4;
  int v12 = *a5;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v17 = 0;
  sub_1DDA1808C(&v17, *(const void **)a6, *(void *)(a6 + 8), (uint64_t)(*(void *)(a6 + 8) - *(void *)a6) >> 3);
  std::string __p = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  sub_1DDA1808C(&__p, *(const void **)a7, *(void *)(a7 + 8), (uint64_t)(*(void *)(a7 + 8) - *(void *)a7) >> 3);
  sub_1DDA75438(a1, a2, a3, v11, v12, (uint64_t)&v17, (uint64_t)&__p);
  if (__p)
  {
    uint64_t v15 = __p;
    operator delete(__p);
  }
  if (v17)
  {
    uint64_t v18 = v17;
    operator delete(v17);
  }
  return a1;
}

void sub_1DDA756A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  if (a12) {
    operator delete(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA756DC(void *a1@<X1>, unint64_t *a2@<X2>, uint64_t *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X5>, void *a6@<X8>)
{
  int v12 = operator new(0xE8uLL);
  sub_1DDA75780(v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;

  sub_1DDA1AF34((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1DDA7576C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA75780(void *a1, void *a2, unint64_t *a3, uint64_t *a4, void *a5, _OWORD *a6)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395F450;
  uint64_t v7 = *a4;
  sub_1DDAA58A8((uint64_t)(a1 + 3), a2, *a3, a5, a6);
  a1[3] = &unk_1F3977C98;
  *(void *)((char *)a1 + 212) = 0x100000000;
  a1[28] = v7;
  return a1;
}

void sub_1DDA75804(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA75818(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395F450;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA75838(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395F450;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA7588C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1DDA758B4(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, void *a5@<X8>)
{
  uint64_t v10 = operator new(0xD8uLL);
  sub_1DDA75948((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA75934(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA75948(uint64_t a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395F4A0;
  sub_1DDAA58A8(a1 + 24, a2, *a3, a4, a5);
  *(void *)(a1 + 24) = &unk_1F397D968;
  *(unsigned char *)(a1 + 210) = 0;
  return a1;
}

void sub_1DDA759B4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA759C8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395F4A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA759E8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395F4A0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA75A3C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1DDA75A64(void *a1@<X1>, unint64_t *a2@<X2>, uint64_t *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X5>, void *a6@<X8>)
{
  int v12 = operator new(0xE0uLL);
  sub_1DDA75B08((uint64_t)v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;

  sub_1DDA1AF34((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1DDA75AF4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA75B08(uint64_t a1, void *a2, unint64_t *a3, uint64_t *a4, void *a5, _OWORD *a6)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395E070;
  uint64_t v7 = *a4;
  sub_1DDAA58A8(a1 + 24, a2, *a3, a5, a6);
  *(void *)(a1 + 24) = &unk_1F3963238;
  *(_DWORD *)(a1 + 212) = 16;
  *(void *)(a1 + 216) = v7;
  return a1;
}

void sub_1DDA75B88(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

id sub_1DDA75B9C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v43[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *MEMORY[0x1E4F30058];
  uint64_t v34 = *MEMORY[0x1E4F30038];
  uint64_t v35 = v5;
  v42[0] = MEMORY[0x1E4F1CC38];
  v42[1] = @"com.canon.tif-raw-image";
  uint64_t v6 = *MEMORY[0x1E4F30050];
  uint64_t v36 = *MEMORY[0x1E4F30018];
  void v42[2] = @".tif.";
  uint64_t v42[3] = &unk_1F39AE870;
  v42[4] = &unk_1F39AE888;
  uint64_t v7 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA75E94, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E4F30040], *MEMORY[0x1E4F30048]);
  v42[5] = v7;
  uint64_t v37 = *MEMORY[0x1E4F30000];
  int v11 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v8, (uint64_t)sub_1DDA75F08, v9, v10);
  v42[6] = v11;
  uint64_t v38 = *MEMORY[0x1E4F30020];
  uint64_t v15 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v12, (uint64_t)sub_1DDA75F14, v13, v14);
  v42[7] = v15;
  uint64_t v39 = *MEMORY[0x1E4F30008];
  uint64_t v19 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v16, (uint64_t)sub_1DDA818EC, v17, v18);
  v42[8] = v19;
  uint64_t v40 = *MEMORY[0x1E4F30028];
  uint64_t v23 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v20, (uint64_t)sub_1DDA75F20, v21, v22);
  v42[9] = v23;
  uint64_t v41 = *MEMORY[0x1E4F30030];
  int v27 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v24, (uint64_t)sub_1DDA75F2C, v25, v26);
  v42[10] = v27;
  unint64_t v29 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v43[0] = v29;
  unint64_t v32 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v30, (uint64_t)v43, 1, v31);

  return v32;
}

void sub_1DDA75E34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA75E94(unsigned char *a1, unint64_t a2)
{
  return a2 >= 0xC
      && a1[8] == 186
      && a1[9] == 176
      && a1[10] == 172
      && a1[11] == 187
      && *a1 == 77
      && a1[1] == 77
      && !a1[2]
      && a1[3] == 42;
}

void sub_1DDA75F08(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA75F14(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA75F20(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, &unk_1F395F4E0);
}

uint64_t sub_1DDA75F2C(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, &unk_1F395F4E0);
}

void sub_1DDA75F38(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v11 = a2;
  id v10 = a3;
  id v9 = a4;
  sub_1DDA76874(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;
}

void sub_1DDA75FB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1DDA75FD4(uint64_t a1, long long *a2, unsigned __int16 *a3)
{
  sub_1DDA7B754(a1, (uint64_t)a2, a3);
  int v6 = *a3;
  if (v6 == 164)
  {
    if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0 && a3[1] == 3)
    {
      std::string __p = 0;
      uint64_t v34 = 0;
      unint64_t v35 = 0;
      if (*((_DWORD *)a3 + 1) >= 3u)
      {
        int v9 = 0;
        do
        {
          sub_1DDA27D28(a1, &v28);
          int v10 = sub_1DDA3CE7C((uint64_t)a3);
          unint64_t __src = 48;
          sub_1DDA18500(&v25, &__src);
          int v36 = v9;
          int v26 = *sub_1DDA4BDD8(&v36, &v25);
          int v36 = v10;
          int v27 = *sub_1DDA47EF8(&v36, &v26);
          sub_1DDA18410(&v32, &v27);
          sub_1DDA1A94C((uint64_t *)&v30, (uint64_t *)&v28, (uint64_t)&v32, 0);
          if (v29) {
            sub_1DDA18310(v29);
          }
          for (int i = 0; i != 3; ++i)
          {
            sub_1DDA27D28(a1, &v28);
            int v12 = sub_1DDA19E68((uint64_t)v28);
            if (v29) {
              sub_1DDA18310(v29);
            }
            uint64_t v13 = v34;
            if ((unint64_t)v34 >= v35)
            {
              uint64_t v15 = __p;
              uint64_t v16 = ((char *)v34 - (unsigned char *)__p) >> 2;
              unint64_t v17 = v16 + 1;
              if ((unint64_t)(v16 + 1) >> 62) {
                sub_1DDA17F78();
              }
              uint64_t v18 = v35 - (void)__p;
              if ((uint64_t)(v35 - (void)__p) >> 1 > v17) {
                unint64_t v17 = v18 >> 1;
              }
              if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v19 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v19 = v17;
              }
              if (v19)
              {
                long long v20 = (char *)sub_1DDA17F90((uint64_t)&v35, v19);
                uint64_t v15 = __p;
                uint64_t v13 = v34;
              }
              else
              {
                long long v20 = 0;
              }
              uint64_t v21 = &v20[4 * v16];
              *(_DWORD *)uint64_t v21 = v12;
              uint64_t v14 = v21 + 4;
              while (v13 != v15)
              {
                int v22 = *--v13;
                *((_DWORD *)v21 - 1) = v22;
                v21 -= 4;
              }
              std::string __p = v21;
              uint64_t v34 = v14;
              unint64_t v35 = (unint64_t)&v20[4 * v19];
              if (v15) {
                operator delete(v15);
              }
            }
            else
            {
              *uint64_t v34 = v12;
              uint64_t v14 = v13 + 1;
            }
            uint64_t v34 = v14;
          }
          sub_1DDA1AA18((uint64_t *)&v30);
          ++v9;
        }
        while (((24 * v9) | 3u) <= *((_DWORD *)a3 + 1));
      }
      long long v30 = a2;
      uint64_t v23 = (char *)(sub_1DDA4B960((uint64_t **)(a1 + 120), (void **)a2, (uint64_t)&unk_1DDBFB044, &v30) + 7);
      if (v23 != (char *)&__p) {
        sub_1DDA17E28(v23, (char *)__p, (uint64_t)v34, ((char *)v34 - (unsigned char *)__p) >> 2);
      }
      if (__p)
      {
        uint64_t v34 = __p;
        operator delete(__p);
      }
    }
  }
  else if (v6 == 160)
  {
    if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0)
    {
      sub_1DDA27D28(a1, &v30);
      int v7 = sub_1DDA3CE7C((uint64_t)a3);
      int v32 = 16;
      LODWORD(v28) = v7;
      int v36 = *sub_1DDA1B54C(&v28, &v32);
      sub_1DDA18410((int *)&__src, &v36);
      sub_1DDA1A94C((uint64_t *)&__p, (uint64_t *)&v30, (uint64_t)&__src, 0);
      if (v31) {
        sub_1DDA18310(v31);
      }
      sub_1DDA27D28(a1, &v30);
      LODWORD(__src) = sub_1DDA19E68((uint64_t)v30);
      long long v28 = a2;
      long long v8 = sub_1DDA4B960((uint64_t **)(a1 + 168), (void **)a2, (uint64_t)&unk_1DDBFB044, &v28);
      sub_1DDA17E28((char *)v8 + 56, (char *)&__src, (uint64_t)&__src + 4, 1uLL);
      if (v31) {
        sub_1DDA18310(v31);
      }
      sub_1DDA1AA18((uint64_t *)&__p);
    }
  }
  else if (v6 == 129 && a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
  {
    *(void *)(a1 + 1256) = *((unsigned int *)a3 + 2);
  }
}

void sub_1DDA76394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
}

uint64_t sub_1DDA7643C(uint64_t a1)
{
  return *(void *)(a1 + 1256);
}

void sub_1DDA76444(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  int v3 = sub_1DDA7BFF0(a1);
  snprintf(__str, 0x10uLL, "%u", v3);
  sub_1DDA1A880(__p, "tif");
  unint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    unint64_t v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v8;
    }
    uint64_t v46 = a2 + 2;
    if (v10) {
      char v11 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v10);
    }
    else {
      char v11 = 0;
    }
    int v12 = &v11[24 * v7];
    unsigned int v42 = v11;
    uint64_t v43 = v12;
    uint64_t v45 = &v11[24 * v10];
    long long v13 = *(_OWORD *)__p;
    *((void *)v12 + 2) = v41;
    *(_OWORD *)int v12 = v13;
    __p[1] = 0;
    uint64_t v41 = 0;
    __p[0] = 0;
    uint64_t v44 = v12 + 24;
    sub_1DDA2A0E8(a2, &v42);
    uint64_t v14 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v42);
    int v15 = SHIBYTE(v41);
    a2[1] = v14;
    if (v15 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v6 = *(_OWORD *)__p;
    *(void *)(v5 + 16) = v41;
    *(_OWORD *)unint64_t v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1DDA1A880(__p, "canon");
  unint64_t v17 = a2[1];
  unint64_t v16 = a2[2];
  if (v17 >= v16)
  {
    unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    unint64_t v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20) {
      unint64_t v20 = 2 * v21;
    }
    if (v21 >= 0x555555555555555) {
      unint64_t v22 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v22 = v20;
    }
    uint64_t v46 = a2 + 2;
    if (v22) {
      uint64_t v23 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v22);
    }
    else {
      uint64_t v23 = 0;
    }
    uint64_t v24 = &v23[24 * v19];
    unsigned int v42 = v23;
    uint64_t v43 = v24;
    uint64_t v45 = &v23[24 * v22];
    long long v25 = *(_OWORD *)__p;
    *((void *)v24 + 2) = v41;
    *(_OWORD *)uint64_t v24 = v25;
    __p[1] = 0;
    uint64_t v41 = 0;
    __p[0] = 0;
    uint64_t v44 = v24 + 24;
    sub_1DDA2A0E8(a2, &v42);
    uint64_t v26 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v42);
    int v27 = SHIBYTE(v41);
    a2[1] = v26;
    if (v27 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v18 = *(_OWORD *)__p;
    *(void *)(v17 + 16) = v41;
    *(_OWORD *)unint64_t v17 = v18;
    a2[1] = v17 + 24;
  }
  sub_1DDA1A880(__p, __str);
  unint64_t v29 = a2[1];
  unint64_t v28 = a2[2];
  if (v29 >= v28)
  {
    unint64_t v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    unint64_t v32 = v31 + 1;
    if (v31 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *a2) >> 3);
    if (2 * v33 > v32) {
      unint64_t v32 = 2 * v33;
    }
    if (v33 >= 0x555555555555555) {
      unint64_t v34 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v34 = v32;
    }
    uint64_t v46 = a2 + 2;
    if (v34) {
      unint64_t v35 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v34);
    }
    else {
      unint64_t v35 = 0;
    }
    int v36 = &v35[24 * v31];
    unsigned int v42 = v35;
    uint64_t v43 = v36;
    uint64_t v45 = &v35[24 * v34];
    long long v37 = *(_OWORD *)__p;
    *((void *)v36 + 2) = v41;
    *(_OWORD *)int v36 = v37;
    __p[1] = 0;
    uint64_t v41 = 0;
    __p[0] = 0;
    uint64_t v44 = v36 + 24;
    sub_1DDA2A0E8(a2, &v42);
    uint64_t v38 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v42);
    int v39 = SHIBYTE(v41);
    a2[1] = v38;
    if (v39 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v30 = *(_OWORD *)__p;
    *(void *)(v29 + 16) = v41;
    *(_OWORD *)unint64_t v29 = v30;
    a2[1] = v29 + 24;
  }
}

void sub_1DDA767E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1DDA7683C(uint64_t a1)
{
  sub_1DDA4F098(a1);

  JUMPOUT(0x1E01C3DC0);
}

void sub_1DDA76874(void *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x508uLL);
  sub_1DDA76908(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA768F4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA76908(void *a1, void *a2, char *a3, void **a4, void **a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395F848;
  sub_1DDA7B1CC((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  a1[3] = &unk_1F395F510;
  a1[160] = 0;
  return a1;
}

void sub_1DDA7697C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA76990(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395F848;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA769B0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395F848;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA76A04(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

void sub_1DDA76AE4(void *a1)
{
  __cxa_begin_catch(a1);
  unint64_t v8 = objc_msgSend_redImage(MEMORY[0x1E4F1E050], v4, v5, v6, v7);
  long long v13 = objc_msgSend_imageByCroppingToRect_(v8, v9, v10, v11, v12, 0.0, 0.0, 698.0, 282.0);
  objc_msgSend_setCiImage_(v1, v14, (uint64_t)v13, v15, v16);

  __cxa_end_catch();
  JUMPOUT(0x1DDA76AB4);
}

void sub_1DDA76B50(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_1DDA76BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }

  _Unwind_Resume(a1);
}

void sub_1DDA76CD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA76D40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1DDA76D50(void *result, void *a2)
{
  uint64_t v2 = a2[1];
  *uint64_t result = *a2;
  result[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1DDA76D90(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  unint64_t v4 = (std::__shared_weak_count *)a1[1];
  *a1 = v3;
  a1[1] = v2;
  if (v4) {
    sub_1DDA18310(v4);
  }
}

void sub_1DDA76E68(uint64_t a1@<X0>, unsigned int *a2@<X1>, unsigned int *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = a1;
  id v9 = a4;
  char v8 = 0;
  sub_1DDA7AAE0(&v10, a2, a3, &v8, (uint64_t *)&v9, a5);
}

void sub_1DDA76ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1DDA76EEC(uint64_t a1@<X0>, unsigned int *a2@<X1>, unsigned int *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = a1;
  id v9 = a4;
  char v8 = 1;
  sub_1DDA7AAE0(&v10, a2, a3, &v8, (uint64_t *)&v9, a5);
}

void sub_1DDA76F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA76F74(uint64_t a1, uint64_t a2, unsigned int *a3, unsigned int *a4, char a5, uint64_t a6)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F395F898;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  uint64_t v7 = *a3;
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = *a4;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 112) = 1;
  *(unsigned char *)(a1 + 113) = a5;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(void *)(a1 + 168) = MEMORY[0x1E01C46E0](a6);
  return a1;
}

void sub_1DDA77018(_Unwind_Exception *a1)
{
  uint64_t v5 = *(std::__shared_weak_count **)(v1 + 160);
  if (v5) {
    sub_1DDA18310(v5);
  }
  sub_1DDBF4970(v3, v2, (void *)v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA77048(uint64_t a1)
{
  *(void *)a1 = &unk_1F395F898;
  uint64_t v2 = (void **)(a1 + 24);
  if (*(void *)(a1 + 24) && *(unsigned char *)(a1 + 112))
  {
    uint64_t v3 = sub_1DDB4378C();
    sub_1DDB43CEC(v3, v2);
  }
  if (*(unsigned char *)(a1 + 112))
  {
    uint64_t v4 = sub_1DDB4378C();
    sub_1DDB43EC0(v4, (void *)a1);
  }

  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 160);
  if (v5) {
    sub_1DDA18310(v5);
  }

  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 128);
  if (v6) {
    sub_1DDA18310(v6);
  }
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 104);
  if (v7) {
    sub_1DDA18310(v7);
  }
  char v8 = *(std::__shared_weak_count **)(a1 + 80);
  if (v8) {
    sub_1DDA18310(v8);
  }
  id v9 = *(std::__shared_weak_count **)(a1 + 32);
  if (v9) {
    sub_1DDA18310(v9);
  }
  uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (v10) {
    std::__shared_weak_count::__release_weak(v10);
  }
  return a1;
}

void sub_1DDA77128(uint64_t a1)
{
  sub_1DDA77048(a1);

  JUMPOUT(0x1E01C3DC0);
}

id sub_1DDA77160(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 136);
  if (!v2)
  {
    uint64_t v3 = CGImagePluginGetOptions();
    uint64_t v4 = *(void **)(a1 + 136);
    *(void *)(a1 + 136) = v3;

    uint64_t v2 = *(void **)(a1 + 136);
  }

  return v2;
}

id sub_1DDA771B4(uint64_t a1)
{
  id v2 = *(id *)(a1 + 40);
  if (v2)
  {
    uint64_t v3 = *(void **)(a1 + 144);
    if (v3
      || (CGImagePluginGetProperties(),
          uint64_t v4 = objc_claimAutoreleasedReturnValue(),
          uint64_t v5 = *(void **)(a1 + 144),
          *(void *)(a1 + 144) = v4,
          v5,
          (uint64_t v3 = *(void **)(a1 + 144)) != 0))
    {
      id v2 = v3;
    }
    else
    {
      id v2 = 0;
    }
  }

  return v2;
}

void sub_1DDA7721C(uint64_t a1)
{
  if (!getenv("RAWCAMERA_IMAGEBLOCKSET_NOLOCK"))
  {
    sub_1DDB46DC8(&v4);
    long long v2 = v4;
    long long v4 = 0uLL;
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 128);
    *(_OWORD *)(a1 + 120) = v2;
    if (v3)
    {
      sub_1DDA18310(v3);
      if (*((void *)&v4 + 1)) {
        sub_1DDA18310(*((std::__shared_weak_count **)&v4 + 1));
      }
    }
  }
  operator new();
}

void sub_1DDA7750C(void *a1)
{
  __cxa_begin_catch(a1);
  free(v1);
  __cxa_end_catch();
  JUMPOUT(0x1DDA773F4);
}

void sub_1DDA7754C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a20) {
    sub_1DDA18310(a20);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1DDA775A0(void *a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  v85[0] = a4;
  v85[1] = a5;
  v86[0] = a6;
  v86[1] = a7;
  v84[0] = a8;
  v84[1] = a9;
  uint64_t v11 = a1[1];
  long long v13 = *(void **)v11;
  uint64_t v12 = *(std::__shared_weak_count **)(v11 + 8);
  if (v12) {
    atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v13
    || ((v15 = a1[2], (v14 = a1[3]) != 0) ? (BOOL v16 = (a1[3] & 1 | v15) == 0) : (BOOL v16 = 1),
        v16 ? (int v17 = 0) : (int v17 = 1),
        !v15 && !v17))
  {
    uint64_t v27 = 0;
    if (!v12) {
      return v27;
    }
    goto LABEL_33;
  }
  long long v18 = (std::__shared_weak_count *)v13[16];
  uint64_t v73 = v13[15];
  uint64_t v74 = v18;
  if (v18) {
    atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1DDA7A800(v83, &v73);
  if (v74) {
    sub_1DDA18310(v74);
  }
  id v19 = a3;
  uint64_t v26 = objc_msgSend_objectForKeyedSubscript_(v19, v20, *MEMORY[0x1E4F1DD38], v21, v22);
  if (v26)
  {
    uint64_t v27 = 0;
  }
  else
  {
    unint64_t v32 = objc_msgSend_objectForKeyedSubscript_(v19, v23, *MEMORY[0x1E4F1DD48], v24, v25);
    if (v32)
    {
      uint64_t v27 = 0;
    }
    else
    {
      objc_msgSend_BOOLValue(0, v28, v29, v30, v31);
      uint64_t v40 = objc_msgSend_objectForKeyedSubscript_(v19, v33, *MEMORY[0x1E4F1DD40], v34, v35);
      if (v40)
      {
        uint64_t v27 = 0;
      }
      else
      {
        objc_msgSend_BOOLValue(0, v36, v37, v38, v39);
        uint64_t v44 = objc_msgSend_objectForKeyedSubscript_(v19, v41, *MEMORY[0x1E4F1DD18], v42, v43);
        if (v44)
        {
          uint64_t v27 = 0;
        }
        else
        {
          uint64_t v61 = objc_msgSend_objectForKeyedSubscript_(v19, v45, *MEMORY[0x1E4F1DD20], v46, v47);
          if (v61
            || (objc_msgSend_objectForKeyedSubscript_(v19, v48, *MEMORY[0x1E4F1DD28], v49, v50, 0),
                uint64_t v51 = objc_claimAutoreleasedReturnValue(),
                v51,
                v51)
            || (objc_msgSend_objectForKeyedSubscript_(v19, v52, *MEMORY[0x1E4F1DD30], v53, v54),
                uint64_t v55 = objc_claimAutoreleasedReturnValue(),
                v55,
                v55))
          {
            uint64_t v27 = 0;
          }
          else
          {
            sub_1DDA35814(&v82, v85);
            sub_1DDA35814((_DWORD *)&v82 + 2, v86);
            sub_1DDA35814(&v81, v84);
            uint64_t v73 = 0;
            uint64_t v74 = (std::__shared_weak_count *)&v73;
            uint64_t v75 = 0x4012000000;
            int v76 = sub_1DDA7A4A4;
            uint64_t v77 = sub_1DDA7A4B4;
            uint64_t v78 = "";
            uint64_t v79 = 0;
            uint64_t v80 = 0;
            (*(void (**)(uint64_t *__return_ptr, void *))(*v13 + 64))(&v71, v13);
            (*(void (**)(uint64_t))(*(void *)v71 + 120))(v71);
            (*(void (**)(uint64_t *__return_ptr, void *))(*v13 + 64))(&v69, v13);
            sub_1DDA2E598(v69);
            uint64_t v57 = sub_1DDA7A4C4();
            uint64_t v58 = v57;
            block[0] = MEMORY[0x1E4F143A8];
            block[1] = 3321888768;
            block[2] = sub_1DDA7A6F0;
            block[3] = &unk_1F395F9B0;
            void block[4] = &v73;
            void block[5] = v13;
            int v63 = v12;
            if (v12) {
              atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            uint64_t v64 = v15;
            uint64_t v65 = v14;
            uint64_t v66 = a2;
            long long v67 = v82;
            uint64_t v68 = v81;
            dispatch_sync(v57, block);

            if (v70) {
              sub_1DDA18310(v70);
            }
            if (v72) {
              sub_1DDA18310(v72);
            }
            if (v63) {
              sub_1DDA18310(v63);
            }
            uint64_t v59 = v74[2].__vftable;
            if (!v59)
            {
              exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
              MEMORY[0x1E01C3B90](exception, "RawCameraException");
              __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
            }
            uint64_t v27 = sub_1DDB4E9EC(v59);
            _Block_object_dispose(&v73, 8);
            if (v80) {
              sub_1DDA18310(v80);
            }
          }

          uint64_t v44 = 0;
        }
      }
    }
  }
  sub_1DDA7A8CC(v83);
  if (v12) {
LABEL_33:
  }
    sub_1DDA18310(v12);
  return v27;
}

void sub_1DDA779F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,std::__shared_weak_count *a35)
{
  _Block_object_dispose(&a28, 8);
  if (a35) {
    sub_1DDA18310(a35);
  }

  sub_1DDA7A8CC((uint64_t *)(v37 - 160));
  if (v35) {
    sub_1DDA18310(v35);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DDA777A0);
}

void sub_1DDA77AC0(_Unwind_Exception *a1)
{
}

uint64_t sub_1DDA77AD8(uint64_t result)
{
  uint64_t v1 = result;
  if (result)
  {
    uint64_t v2 = *(void *)(result + 8);
    if (v2)
    {
      uint64_t v3 = *(std::__shared_weak_count **)(v2 + 8);
      if (v3) {
        sub_1DDA18310(v3);
      }
      MEMORY[0x1E01C3DC0](v2, 0x20C40A4A59CD2);
      *(void *)(v1 + 8) = 0;
    }
    id v4 = *(id *)v1;
    *(void *)uint64_t v1 = 0;

    return MEMORY[0x1E01C3DC0](v1, 0xA0C40069AE433);
  }
  return result;
}

uint64_t sub_1DDA77B64(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return MEMORY[0x1F40E98D0]();
  }
  return result;
}

uint64_t sub_1DDA77B78(uint64_t a1, void *a2, int a3, int a4, CGColorSpaceRef space)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  if ((unint64_t)(*a2 - 0xFFFFFFFFLL) < 0xFFFFFFFF00000002 || !*(void *)(a1 + 40)) {
    return 0;
  }
  if (space)
  {
    uint64_t v9 = *MEMORY[0x1E4F2FC90];
    v10[0] = CGColorSpaceGetName(space);
    uint64_t v6 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v5, (uint64_t)v10, (uint64_t)&v9, 1);
    uint64_t inited = CGImagePluginInitThumbJPEGAtOffsetWithOptions();

    return inited;
  }

  return MEMORY[0x1F40E98B0]();
}

void sub_1DDA77CC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA77CD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(void *)(a1 + 40)) {
    CGImagePluginReadRawXMPProps();
  }
}

void sub_1DDA77D44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA77D58(std::__shared_weak_count **a1)
{
  ((void (*)(_OWORD *__return_ptr))(*a1)[5].__shared_weak_owners_)(v31);
  sub_1DDA7A90C(v39, (uint64_t *)v31);
  if (*((void *)&v31[0] + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v31[0] + 1));
  }
  *((unsigned char *)a1 + 112) = 0;
  ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count **))(*a1)[2].__shared_weak_owners_)(&v37, a1);
  if (!v37 || !*((unsigned char *)a1 + 113) && ((*(uint64_t (**)(void))(*(void *)v37 + 40))() & 1) == 0) {
    goto LABEL_37;
  }
  uint64_t v2 = a1[12];
  if (v2) {
    goto LABEL_11;
  }
  uint64_t v3 = v37;
  uint64_t v4 = ((uint64_t (*)(std::__shared_weak_count **))(*a1)[1].__vftable)(a1);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 296))(v31, v3, v4);
  long long v5 = v31[0];
  v31[0] = 0uLL;
  uint64_t v6 = a1[13];
  *((_OWORD *)a1 + 6) = v5;
  if (!v6)
  {
    uint64_t v2 = (std::__shared_weak_count *)v5;
    if ((void)v5) {
      goto LABEL_11;
    }
LABEL_37:
    uint64_t v13 = 0;
    goto LABEL_53;
  }
  sub_1DDA18310(v6);
  if (*((void *)&v31[0] + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v31[0] + 1));
  }
  uint64_t v2 = a1[12];
  if (!v2) {
    goto LABEL_37;
  }
LABEL_11:
  uint64_t v7 = __dynamic_cast(v2, (const struct __class_type_info *)&unk_1F3969080, (const struct __class_type_info *)&unk_1F39690E8, 0);
  if (v7)
  {
    char v8 = a1[13];
    if (v8)
    {
      atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v2 = a1[12];
      if (!v2)
      {
        uint64_t v9 = 0;
        goto LABEL_26;
      }
    }
  }
  else
  {
    char v8 = 0;
  }
  unint64_t v10 = (unint64_t)__dynamic_cast(v2, (const struct __class_type_info *)&unk_1F3969080, (const struct __class_type_info *)&unk_1F397D7B8, 0);
  if (v10)
  {
    uint64_t v9 = a1[13];
    if (v9)
    {
      atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v2 = a1[12];
      if (!v2)
      {
        if (!v7) {
          goto LABEL_42;
        }
LABEL_26:
        v30[0] = (*(uint64_t (**)(void *))(*(void *)v7 + 16))(v7);
        uint64_t v36 = (*(uint64_t (**)(void *))(*(void *)v7 + 24))(v7);
        uint64_t v35 = ((uint64_t (*)(std::__shared_weak_count **))(*a1)[1].__vftable)(a1);
        v31[0] = 0uLL;
        uint64_t v12 = (*(uint64_t (**)(void *, _OWORD *))(*(void *)v7 + 56))(v7, v31);
        uint64_t v13 = ((uint64_t (*)(std::__shared_weak_count **, void *, uint64_t *, uint64_t *, uint64_t))(*a1)[5].__vftable)(a1, v30, &v36, &v35, v12);
        if (*((void *)&v31[0] + 1)) {
          sub_1DDA18310(*((std::__shared_weak_count **)&v31[0] + 1));
        }
        goto LABEL_47;
      }
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  unint64_t v11 = (unint64_t)__dynamic_cast(v2, (const struct __class_type_info *)&unk_1F3969080, (const struct __class_type_info *)&unk_1F39691B8, 0);
  if (v11)
  {
    uint64_t v2 = a1[13];
    if (v2)
    {
      atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!a1[12])
      {
        if (v7) {
          goto LABEL_26;
        }
        goto LABEL_40;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v17 = ((void (*)(std::__shared_weak_count **))(*a1)[3].__shared_weak_owners_)(a1);
  if (!v17) {
    goto LABEL_41;
  }
  long long v18 = a1[12];
  uint64_t shared_weak_owners_low = LODWORD(v18->__shared_weak_owners_);
  if (shared_weak_owners_low >= 2)
  {
    unint64_t v20 = objc_msgSend_numberWithInt_(NSNumber, v14, shared_weak_owners_low, v15, v16);
    sub_1DDA784D0(v17, (void *)*MEMORY[0x1E4F2FD40], (void *)*MEMORY[0x1E4F2FD70], v20);

    long long v18 = a1[12];
  }
  if (HIDWORD(v18->__shared_weak_owners_))
  {
    if (*((unsigned char *)a1 + 113))
    {
      if (((unsigned int (*)(std::__shared_weak_count **))(*a1)[1].__shared_weak_owners_)(a1))
      {
        uint64_t v24 = objc_msgSend_numberWithInt_(NSNumber, v21, HIDWORD(a1[12]->__shared_weak_owners_), v22, v23);
        objc_msgSend_setObject_forKeyedSubscript_(v17, v25, (uint64_t)v24, @"disorientation", v26);
      }
    }
    else
    {
      sub_1DDA784D0(v17, (void *)*MEMORY[0x1E4F2FD40], (void *)*MEMORY[0x1E4F2FD70], &unk_1F39AE8A0);
    }
  }

  if (v7) {
    goto LABEL_26;
  }
LABEL_40:
  if (v11 | v10)
  {
LABEL_42:
    uint64_t v27 = a1[12];
    ((void (*)(_OWORD *__return_ptr, std::__shared_weak_count **))(*a1)[5].__shared_weak_owners_)(v31, a1);
    unint64_t v28 = (CGColorSpace *)((uint64_t (*)(std::__shared_weak_count *, _OWORD *))v27->__vftable[1].__on_zero_shared)(v27, v31);
    if (!v28) {
      unint64_t v28 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DC98]);
    }
    if (*((void *)&v31[0] + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v31[0] + 1));
    }
    long long v34 = 0u;
    long long v33 = 0u;
    *(void *)&v31[0] = (int)sub_1DDAD6FB0((uint64_t)a1[12]);
    *((void *)&v31[0] + 1) = sub_1DDAD6FB0((uint64_t)a1[12]) >> 32;
    v31[1] = xmmword_1DDBF9C90;
    uint64_t v32 = (int)(3 * sub_1DDAD6FB0((uint64_t)a1[12]));
    LODWORD(v33) = 1380401696;
    *((void *)&v33 + 1) = v28;
    DWORD1(v34) = 0;
    *(_DWORD *)((char *)&v34 + 7) = 0;
    v30[0] = sub_1DDA7857C;
    v30[1] = 0;
    ((void (*)(std::__shared_weak_count **, _OWORD *, void *))(*a1)[4].__shared_owners_)(a1, v31, v30);
    CGColorSpaceRelease(v28);
    uint64_t v13 = 1;
    goto LABEL_47;
  }
LABEL_41:
  uint64_t v13 = 0;
LABEL_47:
  if (v2) {
    sub_1DDA18310(v2);
  }
  if (v9) {
    sub_1DDA18310(v9);
  }
  if (v8) {
    sub_1DDA18310(v8);
  }
LABEL_53:
  if (v38) {
    sub_1DDA18310(v38);
  }
  sub_1DDA7AA80(v39);
  return v13;
}

void sub_1DDA783F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,std::__shared_weak_count *a24)
{
  if (v26)
  {
    sub_1DDA18310(v26);
    if (!v25)
    {
LABEL_3:
      if (!v24) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if (!v25)
  {
    goto LABEL_3;
  }
  sub_1DDA18310(v25);
  if (!v24)
  {
LABEL_5:
    if (a24) {
      sub_1DDA18310(a24);
    }
    sub_1DDA7AA80((uint64_t *)(v29 - 96));
    _Unwind_Resume(a1);
  }
LABEL_4:
  sub_1DDA18310(v24);
  goto LABEL_5;
}

void sub_1DDA784D0(void *a1, void *a2, void *a3, void *a4)
{
  id v11 = a3;
  id v7 = a4;
  char v8 = sub_1DDA7A98C(a1, a2, 0);
  objc_msgSend_setObject_forKeyedSubscript_(v8, v9, (uint64_t)v7, (uint64_t)v11, v10);
}

void sub_1DDA78558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA7857C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 168))();
}

uint64_t sub_1DDA785A0(_DWORD *a1)
{
  if (*((unsigned char *)a1 + 113))
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  (*(void (**)(long long *__return_ptr))(*(void *)a1 + 136))(&v36);
  sub_1DDA7A90C(v51, (uint64_t *)&v36);
  if (*((void *)&v36 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v36 + 1));
  }
  (*(void (**)(uint64_t *__return_ptr, _DWORD *))(*(void *)a1 + 64))(&v49, a1);
  if (!v49)
  {
    uint64_t v32 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v32, "RawCameraException");
    __cxa_throw(v32, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)v49 + 408))(v49);
  v48[0] = 0;
  v48[1] = v2;
  v47[0] = (*(uint64_t (**)(void))(*(void *)v49 + 432))();
  v47[1] = v3;
  v46[0] = 0;
  v46[1] = v3;
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)v49 + 456))(v49);
  uint64_t v6 = v5;
  double v7 = (*(double (**)(uint64_t))(*(void *)v49 + 2640))(v49);
  double v8 = (*(double (**)(uint64_t))(*(void *)v49 + 2648))(v49);
  uint64_t v43 = v4;
  int v44 = (int)((double)(int)v6 / v7);
  int v45 = (int)((double)SHIDWORD(v6) / v8);
  if (!sub_1DDB56B24((int *)v47, (int *)v48) || !sub_1DDB56B24((int *)&v43, (int *)v46))
  {
    long long v33 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v33, "RawCameraException");
    __cxa_throw(v33, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v9 = v49;
  uint64_t v10 = sub_1DDA2E598(v49);
  id v11 = (*(void (**)(_DWORD *))(*(void *)a1 + 88))(a1);
  (*(void (**)(uint64_t, uint64_t, void *))(*(void *)v9 + 2728))(v9, v10, v11);

  if (v49)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(void *)v49 + 2872))(&v41);
    if (v42) {
      sub_1DDA18310(v42);
    }
  }
  if (sub_1DDA2E5C0(v49))
  {
    uint64_t v40 = 0;
    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    uint64_t v12 = (*(void (**)(_DWORD *))(*(void *)a1 + 80))(a1);
    int v16 = sub_1DDA2E20C(v12, (const char *)@"PreserveMargin", v13, v14, v15);
    sub_1DDA78E34((uint64_t)a1, v16, (uint64_t)&v36);

    long long v34 = sub_1DDA78F48;
    uint64_t v35 = 0;
    (*(void (**)(_DWORD *, long long *, uint64_t (**)(uint64_t)))(*(void *)a1 + 104))(a1, &v36, &v34);
    int v17 = (*(void (**)(_DWORD *))(*(void *)a1 + 88))(a1);
    uint64_t v18 = v49;
    uint64_t v19 = sub_1DDA2E598(v49);
    unint64_t v20 = (*(void (**)(uint64_t, uint64_t))(*(void *)v18 + 2736))(v18, v19);
    objc_msgSend_setObject_forKeyedSubscript_(v17, v21, (uint64_t)v20, *MEMORY[0x1E4F2FD18], v22);
  }
  else
  {
    unsigned int v23 = sub_1DDA2E5A0(v49);
    if (sub_1DDB10E68(v23))
    {
      uint64_t v40 = 0;
      long long v38 = 0u;
      long long v39 = 0u;
      long long v36 = 0u;
      long long v37 = 0u;
      sub_1DDA78E34((uint64_t)a1, 0, (uint64_t)&v36);
      long long v34 = sub_1DDA78F6C;
      uint64_t v35 = 0;
      (*(void (**)(_DWORD *, long long *, uint64_t (**)(uint64_t)))(*(void *)a1 + 104))(a1, &v36, &v34);
    }
    else
    {
      if (!(*(unsigned int (**)(uint64_t))(*(void *)v49 + 544))(v49)
        && (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 24))(a1))
      {
        int v24 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 24))(a1);
        unsigned int v25 = 16;
        do
        {
          (*(void (**)(uint64_t, void))(*(void *)v49 + 552))(v49, v25 >> 1);
          uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)v49 + 520))(v49);
          BOOL v28 = (int)v26 <= v24 && SHIDWORD(v26) <= v24 && v25 > 1;
          v25 >>= 1;
        }
        while (v28);
      }
      if ((*(uint64_t (**)(_DWORD *))(*(void *)a1 + 24))(a1))
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v49 + 544))(v49)) {
          int v29 = 8;
        }
        else {
          int v29 = 16;
        }
      }
      else
      {
        int v29 = 16;
      }
      a1[22] = v29;
      uint64_t v40 = 0;
      long long v38 = 0u;
      long long v39 = 0u;
      long long v36 = 0u;
      long long v37 = 0u;
      sub_1DDA78F90((uint64_t *)a1, (uint64_t)&v36);
      a1[16] = (*(uint64_t (**)(uint64_t))(*(void *)v49 + 544))(v49);
      long long v34 = sub_1DDA78F6C;
      uint64_t v35 = 0;
      (*(void (**)(_DWORD *, long long *, uint64_t (**)(uint64_t)))(*(void *)a1 + 104))(a1, &v36, &v34);
      (*(void (**)(_DWORD *))(*(void *)a1 + 144))(a1);
    }
  }
  if (v50) {
    sub_1DDA18310(v50);
  }
  sub_1DDA7AA80(v51);
  return 1;
}

void sub_1DDA78D70(_Unwind_Exception *a1)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 - 88);
  if (v3) {
    sub_1DDA18310(v3);
  }
  sub_1DDA7AA80((uint64_t *)(v1 - 80));
  _Unwind_Resume(a1);
}

CGColorSpaceRef sub_1DDA78E34@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 64) = 0;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  uint64_t v4 = **(void **)(a1 + 24);
  if (a2)
  {
    uint64_t v5 = (*(uint64_t (**)(void))(v4 + 408))();
  }
  else
  {
    (*(void (**)(void))(v4 + 432))();
    uint64_t v5 = v6;
  }
  *(void *)a3 = (int)v5;
  *(void *)(a3 + 8) = v5 >> 32;
  *(int64x2_t *)(a3 + 16) = vdupq_n_s64(0x10uLL);
  uint64_t v7 = 63;
  if (((2 * (int)v5) & 0x1FFFFFFFFFFFFE00) == 0) {
    uint64_t v7 = 31;
  }
  uint64_t v8 = 15;
  if (((2 * (int)v5) & 0x1FFFFFFFFFFFFF80) != 0) {
    uint64_t v8 = v7;
  }
  *(void *)(a3 + 32) = (v8 + ((2 * (int)v5) & 0x1FFFFFFFFFFFFFFELL)) & ~v8;
  *(_DWORD *)(a3 + 40) = 1196573017;
  uint64_t v9 = (CGColorSpace *)sub_1DDBEE718();
  *(void *)(a3 + 48) = v9;
  *(_DWORD *)(a3 + 60) = 0;
  *(_WORD *)(a3 + 64) = 256;
  *(unsigned char *)(a3 + 66) = 0;

  return CGColorSpaceRetain(v9);
}

uint64_t sub_1DDA78F48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 176))();
}

uint64_t sub_1DDA78F6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 160))();
}

CGColorSpaceRef sub_1DDA78F90@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 64) = 0;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1[3] + 520))(a1[3]);
  uint64_t v5 = (int)v4;
  *(void *)a2 = (int)v4;
  *(void *)(a2 + 8) = v4 >> 32;
  *(void *)(a2 + 16) = (*(unsigned int (**)(uint64_t *))(*a1 + 152))(a1);
  uint64_t v6 = 4 * (*(unsigned int (**)(uint64_t *))(*a1 + 152))(a1);
  unint64_t v7 = v5 * v6;
  uint64_t v8 = 63;
  if ((unint64_t)(v5 * v6) < 0x1000) {
    uint64_t v8 = 31;
  }
  if (v7 < 0x400) {
    uint64_t v8 = 15;
  }
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = (v8 + (v7 >> 3)) & ~v8;
  *(_DWORD *)(a2 + 40) = 1380401696;
  if (sub_1DDA2E598(a1[3]) && !(BOOL v9 = sub_1DDA2E5A8(a1[3]))) {
    uint64_t v10 = (CGColorSpace *)sub_1DDBEE610(v9);
  }
  else {
    uint64_t v10 = (CGColorSpace *)sub_1DDA2E5C8(a1[3]);
  }
  *(void *)(a2 + 48) = v10;
  *(_DWORD *)(a2 + 60) = 5;
  *(_WORD *)(a2 + 64) = 256;
  *(unsigned char *)(a2 + 66) = 0;

  return CGColorSpaceRetain(v10);
}

id sub_1DDA790EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 136))(&v7, a1);
  sub_1DDA7A90C(v9, &v7);
  if (v8) {
    sub_1DDA18310(v8);
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 64))(&v7, a1);
  if (!v7)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v4 = (*(void (**)(uint64_t, id))(*(void *)v7 + 16))(v7, v3);
  if (v8) {
    sub_1DDA18310(v8);
  }
  sub_1DDA7AA80(v9);

  return v4;
}

void sub_1DDA79234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1DDA7AA80((uint64_t *)va);

  _Unwind_Resume(a1);
}

void sub_1DDA7928C(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1[9];
  if (v4) {
    goto LABEL_8;
  }
  if (!a1[5] || (Sessiouint64_t n = (const void *)CGImagePluginGetSession()) == 0)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
LABEL_14:
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  sub_1DDA19A18(Session, &v10);
  long long v6 = v10;
  long long v10 = 0uLL;
  uint64_t v7 = (std::__shared_weak_count *)a1[10];
  *(_OWORD *)(a1 + 9) = v6;
  if (!v7)
  {
    uint64_t v4 = v6;
    if ((void)v6) {
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  sub_1DDA18310(v7);
  if (*((void *)&v10 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v10 + 1));
  }
  uint64_t v4 = a1[9];
  if (!v4)
  {
LABEL_12:
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    goto LABEL_14;
  }
LABEL_8:
  uint64_t v8 = a1[10];
  *a2 = v4;
  a2[1] = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
}

void sub_1DDA79394(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA793B0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = (void **)(a1 + 24);
  uint64_t result = *(void **)(a1 + 24);
  if (result)
  {
LABEL_57:
    if (*(void *)(a1 + 120))
    {
      sub_1DDA2D958((uint64_t)result, (uint64_t *)(a1 + 120));
      uint64_t result = *v5;
    }
    goto LABEL_59;
  }
  int v6 = *(unsigned __int8 *)(a1 + 113);
  if (*(unsigned char *)(a1 + 112))
  {
    sub_1DDA1B448(&v41, (void *)(a1 + 8));
    uint64_t v7 = sub_1DDB4378C();
    sub_1DDB43B88(v7, (void *)a1, &v40);
    long long v8 = v40;
    long long v40 = 0uLL;
    BOOL v9 = *(std::__shared_weak_count **)(a1 + 32);
    *(_OWORD *)(a1 + 24) = v8;
    if (!v9)
    {
      if ((void)v8) {
        goto LABEL_54;
      }
      goto LABEL_11;
    }
    sub_1DDA18310(v9);
    if (*((void *)&v40 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v40 + 1));
    }
    if (!*v5)
    {
LABEL_11:
      uint64_t v13 = *(void *)(a1 + 168);
      (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a1 + 136))(&v39, a1);
      int v14 = *(unsigned __int8 *)(a1 + 113);
      if (v6)
      {
        uint64_t v15 = 0;
      }
      else
      {
        uint64_t v15 = (*(void (**)(uint64_t))(*(void *)a1 + 88))(a1);
      }
      uint64_t v21 = (*(void (**)(uint64_t))(*(void *)a1 + 184))(a1);
      (*(void (**)(long long *__return_ptr, uint64_t, long long *, BOOL, void *, void *))(v13 + 16))(&v40, v13, &v39, v14 != 0, v15, v21);

      if (!v6) {
      if (*((void *)&v39 + 1))
      }
        sub_1DDA18310(*((std::__shared_weak_count **)&v39 + 1));
      uint64_t v22 = (*(void (**)(uint64_t))(*(void *)a1 + 80))(a1);
      sub_1DDA4C7FC(v22, &v37);
      sub_1DDA2BC38((uint64_t)&v40, &v37, &v39);
      long long v23 = v39;
      long long v39 = 0uLL;
      int v24 = *(std::__shared_weak_count **)(a1 + 32);
      *(_OWORD *)(a1 + 24) = v23;
      if (v24)
      {
        sub_1DDA18310(v24);
        if (*((void *)&v39 + 1)) {
          sub_1DDA18310(*((std::__shared_weak_count **)&v39 + 1));
        }
      }
      if (v38) {
        sub_1DDA18310(v38);
      }

      if (!*v5) {
        goto LABEL_62;
      }
      uint64_t v25 = sub_1DDB4378C();
      sub_1DDB43D64(v25, (void *)a1, v5);
      if (*(unsigned char *)(a1 + 113))
      {
LABEL_50:
        if (*(_DWORD *)(a1 + 64)) {
          (*(void (**)(void *))(*(void *)*v5 + 552))(*v5);
        }
        if (*((void *)&v40 + 1)) {
          sub_1DDA18310(*((std::__shared_weak_count **)&v40 + 1));
        }
        goto LABEL_54;
      }
      uint64_t v26 = *(void *)(a1 + 24);
      uint64_t v27 = (*(void (**)(uint64_t))(*(void *)a1 + 80))(a1);
      LOBYTE(v26) = sub_1DDA2DE74(v26, v27);

      if (v26)
      {
        char v28 = (*(uint64_t (**)(void))(*(void *)*v5 + 40))();
        if ((void)v40) {
          char v29 = v28;
        }
        else {
          char v29 = 1;
        }
        if ((v29 & 1) == 0)
        {
          (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a1 + 136))(&v39, a1);
          int v30 = (**(uint64_t (***)(void))v39)(v39);
          if (*((void *)&v39 + 1)) {
            sub_1DDA18310(*((std::__shared_weak_count **)&v39 + 1));
          }
          if (v30)
          {
            uint64_t v35 = 0;
            long long v36 = 0;
            sub_1DDB6D1CC(&v40, &v35);
            if (v36) {
              sub_1DDA18310(v36);
            }
          }
        }
        if ((*(uint64_t (**)(void))(*(void *)*v5 + 40))())
        {
          (*(void (**)(uint64_t *__return_ptr))(*(void *)*v5 + 112))(&v33);
          if (v34) {
            sub_1DDA18310(v34);
          }
          goto LABEL_50;
        }
        exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E01C3B90](exception, "RawCameraException");
      }
      else
      {
LABEL_62:
        exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E01C3B90](exception, "RawCameraException");
      }
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 168);
    (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a1 + 136))(&v40, a1);
    int v11 = *(unsigned __int8 *)(a1 + 113);
    if (v6)
    {
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v12 = (*(void (**)(uint64_t))(*(void *)a1 + 88))(a1);
    }
    int v16 = (*(void (**)(uint64_t))(*(void *)a1 + 184))(a1);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, long long *, BOOL, void *, void *))(v10 + 16))(&v41, v10, &v40, v11 != 0, v12, v16);

    if (!v6) {
    if (*((void *)&v40 + 1))
    }
      sub_1DDA18310(*((std::__shared_weak_count **)&v40 + 1));
    int v17 = (*(void (**)(uint64_t))(*(void *)a1 + 80))(a1);
    sub_1DDA4C7FC(v17, &v39);
    sub_1DDA2BC38((uint64_t)&v41, (uint64_t *)&v39, &v40);
    long long v18 = v40;
    long long v40 = 0uLL;
    uint64_t v19 = *(std::__shared_weak_count **)(a1 + 32);
    *(_OWORD *)(a1 + 24) = v18;
    if (v19)
    {
      sub_1DDA18310(v19);
      if (*((void *)&v40 + 1)) {
        sub_1DDA18310(*((std::__shared_weak_count **)&v40 + 1));
      }
    }
    if (*((void *)&v39 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v39 + 1));
    }

    if (!*v5)
    {
      unint64_t v20 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](v20, "RawCameraException");
      __cxa_throw(v20, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
  }
LABEL_54:
  if (v42) {
    sub_1DDA18310(v42);
  }
  uint64_t result = *v5;
  if (*v5) {
    goto LABEL_57;
  }
LABEL_59:
  uint64_t v31 = *(void *)(a1 + 32);
  *a2 = result;
  a2[1] = v31;
  if (v31) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v31 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1DDA799E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a12) {
    sub_1DDA18310(a12);
  }
  if (a18) {
    sub_1DDA18310(a18);
  }
  if (a20) {
    sub_1DDA18310(a20);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA79B08(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 24);
  if (*(void *)(a1 + 24))
  {
    uint64_t v3 = sub_1DDB4378C();
    sub_1DDB43CEC(v3, v1);
    uint64_t v4 = *(std::__shared_weak_count **)(a1 + 32);
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    if (v4)
    {
      sub_1DDA18310(v4);
    }
  }
}

uint64_t sub_1DDA79B68(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

void sub_1DDA79B70(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  uint64_t v4 = (*(void (**)(uint64_t))(*(void *)a1 + 80))(a1);
  int v8 = sub_1DDA2E20C(v4, (const char *)@"PreserveMargin", v5, v6, v7);

  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 64))(&v10, a1);
  if (v8) {
    (*(void (**)(long long *__return_ptr))(*(void *)v10 + 384))(&v12);
  }
  else {
    (*(void (**)(long long *__return_ptr))(*(void *)v10 + 392))(&v12);
  }
  long long v9 = v12;
  long long v12 = 0uLL;
  *(_OWORD *)a2 = v9;
  if (v11) {
    sub_1DDA18310(v11);
  }
}

void sub_1DDA79CC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA79CFC(uint64_t a1)
{
  sub_1DDA79B70(a1, &v1);
  sub_1DDAA7CC0(v1);
  operator new();
}

void sub_1DDA79EE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  __cxa_free_exception(v14);
  if (a14) {
    sub_1DDA18310(a14);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA79F24(uint64_t result)
{
  uint64_t v1 = result;
  if (result)
  {
    uint64_t v2 = *(std::__shared_weak_count **)(result + 8);
    if (v2) {
      sub_1DDA18310(v2);
    }
    return MEMORY[0x1E01C3DC0](v1, 0x20C40A4A59CD2);
  }
  return result;
}

void sub_1DDA79F78(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1[19];
  if (!v4)
  {
    uint64_t v11 = 0;
    (*(void (**)(uint64_t *__return_ptr, void *))(*a1 + 64))(&v9, a1);
    sub_1DDB55AAC(&v9, &v11, &v8);
    long long v5 = v8;
    long long v8 = 0uLL;
    uint64_t v6 = (std::__shared_weak_count *)a1[20];
    *(_OWORD *)(a1 + 19) = v5;
    if (v6)
    {
      sub_1DDA18310(v6);
      if (*((void *)&v8 + 1)) {
        sub_1DDA18310(*((std::__shared_weak_count **)&v8 + 1));
      }
    }
    if (v10) {
      sub_1DDA18310(v10);
    }
    uint64_t v4 = a1[19];
  }
  uint64_t v7 = a1[20];
  *a2 = v4;
  a2[1] = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
}

void sub_1DDA7A038(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13)
{
  if (a13) {
    sub_1DDA18310(a13);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA7A050@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  sub_1DDB4E5E4(a2, a3, a4, a5);
  sub_1DDA79F78(a1, &v8);
  sub_1DDB55AD8(v8, a5);
  if (v9) {
    sub_1DDA18310(v9);
  }
  return (*(uint64_t (**)(void *))(*a1 + 144))(a1);
}

void sub_1DDA7A0D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  long long v12 = *(std::__shared_weak_count **)(v10 + 8);
  if (v12) {
    sub_1DDA18310(v12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA7A108(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 96);
  if (!v1)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void sub_1DDA7A1A8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA7A1BC(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  sub_1DDA79B70(a1, &v10);
  sub_1DDB4E618(a2, a3, a4, &v10, a5);
  (*(void (**)(uint64_t))(*(void *)a1 + 144))(a1);
  if (v11) {
    sub_1DDA18310(v11);
  }
}

void sub_1DDA7A258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  long long v12 = *(std::__shared_weak_count **)(v10 + 8);
  if (v12) {
    sub_1DDA18310(v12);
  }
  if (a10) {
    sub_1DDA18310(a10);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA7A284(unsigned char *a1)
{
  if (a1[113])
  {
    id v1 = 0;
  }
  else
  {
    uint64_t v2 = (*(void (**)(unsigned char *))(*(void *)a1 + 80))(a1);
    uint64_t v6 = objc_msgSend_objectForKeyedSubscript_(v2, v3, @"kCGImageSourceXMPSidecar", v4, v5);

    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      id v1 = v6;
    }
    else {
      id v1 = 0;
    }
  }

  return v1;
}

void sub_1DDA7A340(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA7A35C(uint64_t a1)
{
  uint64_t v2 = (*(void (**)(uint64_t))(*(void *)a1 + 80))(a1);
  BOOL v3 = sub_1DDA2E4E0(v2, off_1EAB8AEC0);

  uint64_t v4 = (*(void (**)(uint64_t))(*(void *)a1 + 80))(a1);
  uint64_t v8 = v4;
  if (v3)
  {
    uint64_t v9 = sub_1DDA2E20C(v4, (const char *)off_1EAB8AEC0, v5, v6, v7);
  }
  else
  {
    BOOL v10 = sub_1DDA2E4E0(v4, off_1EAB8AEB8);

    if (!v10) {
      return 0;
    }
    uint64_t v8 = (*(void (**)(uint64_t))(*(void *)a1 + 80))(a1);
    uint64_t v9 = sub_1DDA2E20C(v8, (const char *)off_1EAB8AEB8, v11, v12, v13);
  }
  uint64_t v14 = v9;

  return v14;
}

void sub_1DDA7A470(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA7A48C(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t sub_1DDA7A494(uint64_t result, uint64_t a2)
{
  *(void *)(result + 56) = a2;
  return result;
}

uint64_t sub_1DDA7A49C(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

__n128 sub_1DDA7A4A4(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[3] = result;
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  return result;
}

void sub_1DDA7A4B4(uint64_t a1)
{
  id v1 = *(std::__shared_weak_count **)(a1 + 56);
  if (v1) {
    sub_1DDA18310(v1);
  }
}

id sub_1DDA7A4C4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EAB8B128, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1EAB8B128))
  {
    qword_1EAB8B120 = (uint64_t)dispatch_queue_create("Provider_Queue_Sync", 0);
    __cxa_guard_release(&qword_1EAB8B128);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EAB8B150, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1EAB8B150))
  {
    qword_1EAB8B130[0] = (uint64_t)dispatch_queue_create("Provider_Queue_1", 0);
    qword_1EAB8B138 = (uint64_t)dispatch_queue_create("Provider_Queue_2", 0);
    qword_1EAB8B140 = (uint64_t)dispatch_queue_create("Provider_Queue_3", 0);
    qword_1EAB8B148 = (uint64_t)dispatch_queue_create("Provider_Queue_4", 0);
    __cxa_guard_release(&qword_1EAB8B150);
  }
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x3032000000;
  uint64_t v8 = sub_1DDA7A860;
  uint64_t v9 = sub_1DDA7A870;
  id v10 = 0;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1DDA7A878;
  block[3] = &unk_1E6D04F80;
  void block[4] = &v5;
  dispatch_sync((dispatch_queue_t)qword_1EAB8B120, block);
  uint64_t v0 = (void *)v6[5];
  if (!v0)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  id v1 = v0;
  _Block_object_dispose(&v5, 8);

  return v1;
}

void sub_1DDA7A6C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_1DDA7A6F0(void *a1)
{
  void (*v2)(long long *__return_ptr, void *, void, void *, void *);
  uint64_t v3;
  void *v4;
  uint64_t v5;
  long long v6;
  std::__shared_weak_count *v7;
  long long v8;

  uint64_t v2 = (void (*)(long long *__return_ptr, void *, void, void *, void *))a1[7];
  BOOL v3 = a1[8];
  uint64_t v4 = (void *)(a1[5] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(void (**)(long long *__return_ptr, void *, void, void *, void *))(*v4 + v2);
  }
  v2(&v8, v4, a1[9], a1 + 10, a1 + 12);
  uint64_t v5 = *(void *)(a1[4] + 8);
  uint64_t v6 = v8;
  uint64_t v8 = 0uLL;
  uint64_t v7 = *(std::__shared_weak_count **)(v5 + 56);
  *(_OWORD *)(v5 + 48) = v6;
  if (v7)
  {
    sub_1DDA18310(v7);
    if (*((void *)&v8 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v8 + 1));
    }
  }
}

void sub_1DDA7A79C(void *a1)
{
}

uint64_t sub_1DDA7A7A8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(result + 48) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1DDA7A7C4(uint64_t a1)
{
  id v1 = *(std::__shared_weak_count **)(a1 + 48);
  if (v1) {
    sub_1DDA18310(v1);
  }
}

uint64_t *sub_1DDA7A800(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  if (v4)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
    uint64_t v3 = *a1;
  }
  if (v3) {
    sub_1DDB46F08(v3);
  }
  return a1;
}

void sub_1DDA7A848(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3) {
    sub_1DDA18310(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA7A860(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1DDA7A870(uint64_t a1)
{
}

void sub_1DDA7A878(uint64_t a1)
{
  uint64_t v1 = dword_1EAB8B118++;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), (id)qword_1EAB8B130[v1]);
  dword_1EAB8B118 &= 3u;
}

uint64_t *sub_1DDA7A8CC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    sub_1DDB46F10(v2);
  }
  uint64_t v3 = (std::__shared_weak_count *)a1[1];
  if (v3) {
    sub_1DDA18310(v3);
  }
  return a1;
}

uint64_t *sub_1DDA7A90C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  if (v4)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
    uint64_t v3 = *a1;
  }
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 72))(v3);
  }
  return a1;
}

void sub_1DDA7A974(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3) {
    sub_1DDA18310(v3);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA7A98C(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  id v10 = v6;
  if (v6 || !a3)
  {
    if (v6)
    {
      objc_msgSend_objectForKeyedSubscript_(v5, v7, (uint64_t)v6, v8, v9);
      id v11 = (id)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        uint64_t v16 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v12, v13, v14, v15);

        id v11 = (id)v16;
        objc_msgSend_setObject_forKey_(v5, v17, v16, (uint64_t)v10, v18);
      }
    }
    else
    {
      id v11 = 0;
    }
  }
  else
  {
    id v11 = v5;
  }

  return v11;
}

void sub_1DDA7AA60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_1DDA7AA80(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 80))(v2);
  }
  uint64_t v3 = (std::__shared_weak_count *)a1[1];
  if (v3) {
    sub_1DDA18310(v3);
  }
  return a1;
}

void sub_1DDA7AAE0(uint64_t *a1@<X1>, unsigned int *a2@<X2>, unsigned int *a3@<X3>, char *a4@<X4>, uint64_t *a5@<X5>, void *a6@<X8>)
{
  uint64_t v12 = operator new(0xC8uLL);
  sub_1DDA7AB84(v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;

  sub_1DDA1AF34((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1DDA7AB70(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA7AB84(void *a1, uint64_t *a2, unsigned int *a3, unsigned int *a4, char *a5, uint64_t *a6)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395F9F0;
  sub_1DDA76F74((uint64_t)(a1 + 3), *a2, a3, a4, *a5, *a6);
  return a1;
}

void sub_1DDA7ABD8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA7ABEC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395F9F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA7AC0C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395F9F0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA7AC60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 48))();
}

void *sub_1DDA7AC88@<X0>(void *a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  CFStringRef FilePath = (const __CFString *)CGImageReadSessionGetFilePath();
  if (FilePath && CFStringGetFileSystemRepresentation(FilePath, buffer, 1024)) {
    return sub_1DDA1A880(a1, buffer);
  }
  else {
    return sub_1DDA19B60(a1);
  }
}

uint64_t sub_1DDA7AD20()
{
  unint64_t Size = CGImageReadSessionGetSize();
  sub_1DDA18500(&v2, &Size);
  return v2;
}

uint64_t sub_1DDA7AD58(uint64_t a1, void *a2, size_t a3)
{
  unsigned int v9 = 0;
  if (!*(unsigned char *)(a1 + 56))
  {
    (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);
    uint64_t BytesAtOffset = CGImageReadSessionGetBytesAtOffset();
    sub_1DDA18488(&v10, (unint64_t *)&BytesAtOffset);
    *(_DWORD *)(a1 + 52) = v10;
    *(unsigned char *)(a1 + 56) = 1;
  }
  uint64_t BytesAtOffset = a3;
  id v6 = (unsigned int *)(a1 + 48);
  int v10 = *(_DWORD *)(a1 + 48);
  if (*(_DWORD *)(a1 + 52) >= *sub_1DDA7B054(&v10, &BytesAtOffset))
  {
    memcpy(a2, (const void *)(a1 + *(int *)(a1 + 48) + 57), a3);
    uint64_t BytesAtOffset = a3;
  }
  else
  {
    sub_1DDA456E8(v6);
    uint64_t BytesAtOffset = CGImageReadSessionGetBytesAtOffset();
  }
  sub_1DDA18500(&v9, (unint64_t *)&BytesAtOffset);
  sub_1DDA2A648((int *)v6, &v9);
  return v9;
}

uint64_t sub_1DDA7AEA8(_DWORD *a1, int *a2, int a3)
{
  int v13 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 16))(a1);
  sub_1DDA1B4D8(&v12, &v13);
  if (a3 == 2)
  {
    int v7 = v12;
LABEL_7:
    int v13 = v7;
    id v6 = a2;
    goto LABEL_8;
  }
  if (a3 == 1)
  {
    int v7 = a1[12];
    goto LABEL_7;
  }
  if (a3)
  {
    int v8 = 0;
    goto LABEL_11;
  }
  int v11 = sub_1DDA19CA4((uint64_t)a1);
  int v13 = *a2;
  id v6 = &v11;
LABEL_8:
  int v8 = *sub_1DDA1A378(&v13, v6);
  if (v8 < 0)
  {
LABEL_13:
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
LABEL_11:
  if (v12 < v8) {
    goto LABEL_13;
  }
  a1[12] = v8;
  return 0;
}

void sub_1DDA7AFC0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA7AFD4(uint64_t a1)
{
  int v2 = sub_1DDA19CA4(a1);
  int v3 = *(_DWORD *)(a1 + 48);
  int v5 = v2;
  int v6 = v3;
  return *sub_1DDA26264(&v6, &v5);
}

void sub_1DDA7B01C(void *a1)
{
  sub_1DDA19AE8(a1);

  JUMPOUT(0x1E01C3DC0);
}

int *sub_1DDA7B054(int *result, void *a2)
{
  uint64_t v2 = *result;
  BOOL v3 = __OFADD__(v2, *a2);
  uint64_t v4 = v2 + *a2;
  *__n128 result = v4;
  if (v3 || (unint64_t)(v4 - 0x80000000) <= 0xFFFFFFFEFFFFFFFFLL)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA7B0D0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::string *sub_1DDA7B0E4(std::string *this)
{
  uint64_t v2 = HIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v2 & 0x80u) == 0) {
    BOOL v3 = this;
  }
  else {
    BOOL v3 = (std::string *)this->__r_.__value_.__r.__words[0];
  }
  if ((v2 & 0x80u) == 0) {
    std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = this->__r_.__value_.__l.__size_;
  }
  do
  {
    if (!size) {
      goto LABEL_20;
    }
    int v5 = *((unsigned __int8 *)&v3[-1].__r_.__value_.__r.__words[2] + size-- + 7);
  }
  while (v5 == 32);
  if (size == -1)
  {
LABEL_20:
    int v10 = (char)v2;
    int v11 = (char *)this + v2;
    if (v10 < 0) {
      int v11 = (char *)(this->__r_.__value_.__r.__words[0] + this->__r_.__value_.__l.__size_);
    }
    std::string::size_type v9 = v11 - (char *)v3;
LABEL_23:
    return std::string::erase(this, 0, v9);
  }
  __n128 result = std::string::erase(this, size + 1, 0xFFFFFFFFFFFFFFFFLL);
  std::string::size_type v7 = HIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v7 & 0x80u) == 0) {
    int v8 = this;
  }
  else {
    int v8 = (std::string *)this->__r_.__value_.__r.__words[0];
  }
  if ((v7 & 0x80u) != 0) {
    std::string::size_type v7 = this->__r_.__value_.__l.__size_;
  }
  if (v7)
  {
    std::string::size_type v9 = 0;
    while (v8->__r_.__value_.__s.__data_[v9] == 32)
    {
      if (v7 == ++v9) {
        return result;
      }
    }
    if (v9 != -1) {
      goto LABEL_23;
    }
  }
  return result;
}

void sub_1DDA7B1CC(uint64_t a1, void *a2, char a3, void *a4, void *a5)
{
  sub_1DDA3F2B0(a1, a2, a3, a4, a5);
  *(void *)uint64_t v5 = &unk_1F395FAC0;
  *(_DWORD *)(v5 + 1180) = -1;
  *(void *)(v5 + 1210) = 0;
  *(_DWORD *)(v5 + 1218) = 0;
  *(void *)(v5 + 1240) = 0;
  *(void *)(v5 + 1232) = 0;
  *(void *)(v5 + 1184) = 0;
  *(void *)(v5 + 1200) = 0;
  *(void *)(v5 + 1192) = 0;
  *(unsigned char *)(v5 + 1208) = 0;
  *(void *)(v5 + 1224) = v5 + 1232;
  *(unsigned char *)(v5 + 1248) = 0;
}

void sub_1DDA7B238(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  sub_1DDA43480((uint64_t **)a1, a2, a3);
  if (*a3 == 50752 && ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0)
  {
    sub_1DDA27D28(a1, &v48);
    sub_1DDA49310(v50, &v48);
    if (v49) {
      sub_1DDA18310(v49);
    }
    if (a3[1] != 3 || *((_DWORD *)a3 + 1) != 3) {
      goto LABEL_71;
    }
    int v6 = getenv("RAWCAMERA_DUALPIXEL_SECOND_IMAGE");
    uint64_t v7 = *(unsigned __int8 *)(a2 + 23);
    int v8 = (char)v7;
    if ((v7 & 0x80u) != 0) {
      uint64_t v7 = *(void *)(a2 + 8);
    }
    if (v6)
    {
      if (v7 != 4) {
        goto LABEL_21;
      }
      if (v8 >= 0) {
        std::string::size_type v9 = (int *)a2;
      }
      else {
        std::string::size_type v9 = *(int **)a2;
      }
      int v10 = *v9;
      int v11 = 860112457;
    }
    else
    {
      if (v7 != 4) {
        goto LABEL_21;
      }
      if (v8 >= 0) {
        int v12 = (int *)a2;
      }
      else {
        int v12 = *(int **)a2;
      }
      int v10 = *v12;
      int v11 = 876889673;
    }
    if (v10 == v11)
    {
LABEL_71:
      sub_1DDA1AA18(v50);
      return;
    }
LABEL_21:
    sub_1DDA27D28(a1, &v48);
    uint64_t v13 = v48;
    int v46 = *((_DWORD *)a3 + 2);
    sub_1DDA18410(&v47, &v46);
    (*(void (**)(uint64_t, int *, void))(*(void *)v13 + 40))(v13, &v47, 0);
    if (v49) {
      sub_1DDA18310(v49);
    }
    sub_1DDA27D28(a1, &v48);
    int v14 = sub_1DDA19E68(v48);
    if (v49) {
      sub_1DDA18310(v49);
    }
    if (v14)
    {
      sub_1DDA27D28(a1, &v48);
      int v15 = sub_1DDA19E68(v48);
      if (v49) {
        sub_1DDA18310(v49);
      }
      sub_1DDA27D28(a1, &v48);
      int v16 = sub_1DDA19E68(v48);
      if (v49) {
        sub_1DDA18310(v49);
      }
      int v17 = 0;
      uint64_t v18 = (void **)(a1 + 1184);
      uint64_t v19 = *(char **)(a1 + 1184);
      *(void *)(a1 + 1192) = v19;
      unint64_t v20 = (void *)(a1 + 1200);
      do
      {
        if ((unint64_t)v19 >= *v20)
        {
          uint64_t v21 = (char *)*v18;
          uint64_t v22 = (v19 - (unsigned char *)*v18) >> 2;
          unint64_t v23 = v22 + 1;
          if ((unint64_t)(v22 + 1) >> 62) {
            sub_1DDA17F78();
          }
          uint64_t v24 = *v20 - (void)v21;
          if (v24 >> 1 > v23) {
            unint64_t v23 = v24 >> 1;
          }
          if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v25 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v25 = v23;
          }
          if (v25)
          {
            uint64_t v26 = (char *)sub_1DDA17F90(a1 + 1200, v25);
            uint64_t v19 = *(char **)(a1 + 1192);
            uint64_t v21 = *(char **)(a1 + 1184);
          }
          else
          {
            uint64_t v26 = 0;
          }
          uint64_t v27 = &v26[4 * v22];
          *(_DWORD *)uint64_t v27 = v15;
          char v28 = v27 + 4;
          while (v19 != v21)
          {
            int v29 = *((_DWORD *)v19 - 1);
            v19 -= 4;
            *((_DWORD *)v27 - 1) = v29;
            v27 -= 4;
          }
          *(void *)(a1 + 1184) = v27;
          *(void *)(a1 + 1192) = v28;
          *(void *)(a1 + 1200) = &v26[4 * v25];
          if (v21) {
            operator delete(v21);
          }
          uint64_t v19 = v28;
        }
        else
        {
          *(_DWORD *)uint64_t v19 = v15;
          v19 += 4;
        }
        *(void *)(a1 + 1192) = v19;
        ++v17;
      }
      while (v17 != v14);
      if ((unint64_t)v19 >= *v20)
      {
        uint64_t v31 = (char *)*v18;
        uint64_t v32 = (v19 - (unsigned char *)*v18) >> 2;
        unint64_t v33 = v32 + 1;
        if ((unint64_t)(v32 + 1) >> 62) {
          sub_1DDA17F78();
        }
        uint64_t v34 = *v20 - (void)v31;
        if (v34 >> 1 > v33) {
          unint64_t v33 = v34 >> 1;
        }
        if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v35 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v35 = v33;
        }
        if (v35)
        {
          long long v36 = (char *)sub_1DDA17F90(a1 + 1200, v35);
          uint64_t v19 = *(char **)(a1 + 1192);
          uint64_t v31 = *(char **)(a1 + 1184);
        }
        else
        {
          long long v36 = 0;
        }
        uint64_t v37 = &v36[4 * v32];
        long long v38 = &v36[4 * v35];
        *(_DWORD *)uint64_t v37 = v16;
        int v30 = v37 + 4;
        while (v19 != v31)
        {
          int v39 = *((_DWORD *)v19 - 1);
          v19 -= 4;
          *((_DWORD *)v37 - 1) = v39;
          v37 -= 4;
        }
        *(void *)(a1 + 1184) = v37;
        *(void *)(a1 + 1192) = v30;
        *(void *)(a1 + 1200) = v38;
        if (v31) {
          operator delete(v31);
        }
      }
      else
      {
        *(_DWORD *)uint64_t v19 = v16;
        int v30 = v19 + 4;
      }
      *(void *)(a1 + 1192) = v30;
      if (!*(unsigned char *)(a1 + 1248))
      {
        int v47 = 0;
        sub_1DDA1B3CC(&v48, (unsigned int *)&v47);
        uint64_t v40 = *(void *)(a1 + 1184);
        if (*(void *)(a1 + 1192) != v40)
        {
          unint64_t v41 = 0;
          unsigned int v42 = 1;
          do
          {
            uint64_t v43 = (int *)(v40 + 4 * v41);
            if (*v43 < 0)
            {
              exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
              MEMORY[0x1E01C3B90](exception, "RawCameraException");
              __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
            }
            sub_1DDA1B54C(&v48, v43);
            unint64_t v41 = v42;
            uint64_t v40 = *(void *)(a1 + 1184);
            ++v42;
          }
          while (v41 < (*(void *)(a1 + 1192) - v40) >> 2);
        }
        if (v48 != *(unsigned __int16 *)(a1 + 1210))
        {
          int v45 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](v45, "RawCameraException");
          __cxa_throw(v45, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
      }
    }
    goto LABEL_71;
  }
}

void sub_1DDA7B6C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1DDA1AA18((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA7B748(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1248);
}

void sub_1DDA7B754(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  nullsub_6();
  unsigned int v5 = *a3;
  if (v5 > 0x92)
  {
    if (v5 == 147)
    {
      if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0 && a3[1] == 3)
      {
        sub_1DDA7BA74(a1, (uint64_t)a3);
      }
    }
    else if (v5 == 224 && a3[1] == 3)
    {
      sub_1DDA7BC4C(a1, (uint64_t)a3);
      int v6 = *(_DWORD **)(a1 + 1184);
      if (v6 == *(_DWORD **)(a1 + 1192))
      {
        int v7 = *(unsigned __int16 *)(a1 + 1210);
        unint64_t v8 = *(void *)(a1 + 1200);
        if ((unint64_t)v6 >= v8)
        {
          uint64_t v10 = v8 - (void)v6;
          uint64_t v11 = v10 >> 1;
          if ((unint64_t)(v10 >> 1) <= 1) {
            uint64_t v11 = 1;
          }
          if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v12 = v11;
          }
          uint64_t v13 = sub_1DDA17F90(a1 + 1200, v12);
          int v14 = *(char **)(a1 + 1192);
          int v15 = *(char **)(a1 + 1184);
          int v17 = &v13[v16];
          *uint64_t v13 = v7;
          std::string::size_type v9 = v13 + 1;
          while (v14 != v15)
          {
            int v18 = *((_DWORD *)v14 - 1);
            v14 -= 4;
            *--uint64_t v13 = v18;
          }
          *(void *)(a1 + 1184) = v13;
          *(void *)(a1 + 1192) = v9;
          *(void *)(a1 + 1200) = v17;
          if (v15) {
            operator delete(v15);
          }
        }
        else
        {
          *int v6 = v7;
          std::string::size_type v9 = v6 + 1;
        }
        *(void *)(a1 + 1192) = v9;
      }
    }
  }
  else if (v5 == 1)
  {
    if (a3[1] == 3)
    {
      sub_1DDA7B914(a1, (uint64_t)a3);
    }
  }
  else if (v5 == 16 && a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
  {
    *(_DWORD *)(a1 + 1180) = *((_DWORD *)a3 + 2);
  }
}

uint64_t *sub_1DDA7B914(uint64_t a1, uint64_t a2)
{
  sub_1DDA27D28(a1, &__p);
  int v12 = *(_DWORD *)(a2 + 8);
  sub_1DDA18410((int *)&v8, &v12);
  sub_1DDA1A94C(v13, (uint64_t *)&__p, (uint64_t)&v8, 0);
  if (v11) {
    sub_1DDA18310(v11);
  }
  sub_1DDA27D28(a1, &__p);
  unsigned int v4 = sub_1DDA19E68((uint64_t)__p);
  if (v11) {
    sub_1DDA18310(v11);
  }
  if ((v4 & 1) == 0 && (unsigned __int16)(v4 - 200) >= 0xFF39u)
  {
    sub_1DDA27D28(a1, &v8);
    unsigned int v5 = (v4 >> 1) - 1;
    int v12 = (unsigned __int16)v5;
    sub_1DDA1A488(v8, (unsigned int *)&v12, (uint64_t *)&__p);
    if (v9) {
      sub_1DDA18310(v9);
    }
    int v6 = (std::__shared_weak_count *)__p;
    if (v5 >= 0x2E)
    {
      *(unsigned char *)(a1 + 1248) = *((_WORD *)__p + 45) != 0;
LABEL_12:
      uint64_t v11 = v6;
      operator delete(v6);
      return sub_1DDA1AA18(v13);
    }
    if (__p) {
      goto LABEL_12;
    }
  }
  return sub_1DDA1AA18(v13);
}

void sub_1DDA7BA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_1DDA18310(a11);
  }
  sub_1DDA1AA18((uint64_t *)(v11 - 40));
  _Unwind_Resume(a1);
}

uint64_t *sub_1DDA7BA74(uint64_t a1, uint64_t a2)
{
  sub_1DDA27D28(a1, &v12);
  LODWORD(p_p) = *(_DWORD *)(a2 + 8);
  sub_1DDA18410((int *)&__p, (int *)&p_p);
  sub_1DDA1A94C(v14, (uint64_t *)&v12, (uint64_t)&__p, 0);
  if (v13) {
    sub_1DDA18310(v13);
  }
  sub_1DDA27D28(a1, &v12);
  unsigned int v4 = sub_1DDA19E68((uint64_t)v12);
  if (v13) {
    sub_1DDA18310(v13);
  }
  if ((v4 & 1) == 0 && (unsigned __int16)(v4 - 100) >= 0xFF9Eu)
  {
    unsigned int v5 = v4 >> 1;
    unsigned int v6 = (v4 >> 1) - 1;
    if (v5 != 1)
    {
      sub_1DDA27D28(a1, &__p);
      LODWORD(p_p) = (unsigned __int16)v6;
      sub_1DDA1A488(__p, (unsigned int *)&p_p, (uint64_t *)&v12);
      if (v10) {
        sub_1DDA18310(v10);
      }
      if (v6 >= 8)
      {
        __int16 v7 = *((_WORD *)v12 + 7);
        sub_1DDA1A880(&__p, "IFD0:EXIF:MAKERNOTE:FILEINFO");
        p_p = &__p;
        *((_WORD *)sub_1DDA7C038((uint64_t **)(a1 + 1224), &__p, (uint64_t)&unk_1DDBFB044, (_OWORD **)&p_p) + 28) = v7;
        if (v11 < 0) {
          operator delete(__p);
        }
      }
      if (v12)
      {
        uint64_t v13 = (std::__shared_weak_count *)v12;
        operator delete(v12);
      }
    }
  }
  return sub_1DDA1AA18(v14);
}

void sub_1DDA7BBC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a16) {
    operator delete(a16);
  }
  sub_1DDA1AA18(&a19);
  _Unwind_Resume(a1);
}

uint64_t *sub_1DDA7BC4C(uint64_t a1, uint64_t a2)
{
  sub_1DDA27D28(a1, &__p);
  int v20 = *(_DWORD *)(a2 + 8);
  sub_1DDA18410((int *)&v16, &v20);
  sub_1DDA1A94C(v21, (uint64_t *)&__p, (uint64_t)&v16, 0);
  if (v19) {
    sub_1DDA18310(v19);
  }
  sub_1DDA27D28(a1, &__p);
  unsigned int v4 = sub_1DDA19E68((uint64_t)__p);
  if (v19) {
    sub_1DDA18310(v19);
  }
  if (v4 >= 9)
  {
    sub_1DDA27D28(a1, &v16);
    unsigned int v5 = v16;
    unsigned int v15 = 8;
    sub_1DDA1B3CC(&v20, &v15);
    sub_1DDA1A488(v5, (unsigned int *)&v20, (uint64_t *)&__p);
    if (v17) {
      sub_1DDA18310(v17);
    }
    unsigned int v6 = (std::__shared_weak_count *)__p;
    unsigned int v7 = *(unsigned __int16 *)__p;
    *(_WORD *)(a1 + 1210) = v7;
    unsigned int v8 = WORD1(v6->__vftable);
    *(_WORD *)(a1 + 1212) = v8;
    unsigned int shared_owners_low = LOWORD(v6->__shared_owners_);
    *(_WORD *)(a1 + 1214) = shared_owners_low;
    unsigned int v10 = WORD1(v6->__shared_owners_);
    *(_WORD *)(a1 + 1216) = v10;
    unsigned int v11 = WORD2(v6->__shared_owners_);
    *(_WORD *)(a1 + 1218) = v11;
    unsigned int shared_owners_high = HIWORD(v6->__shared_owners_);
    *(_WORD *)(a1 + 1220) = shared_owners_high;
    if (v7 >> 4 >= 0x271
      || v8 >> 4 >= 0x271
      || shared_owners_low >= v7
      || v11 >= v7
      || shared_owners_low >= v11
      || v10 >= v8
      || shared_owners_high >= v8
      || v10 >= shared_owners_high)
    {
      exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](exception, "RawCameraException");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    *(unsigned char *)(a1 + 1208) = 1;
    uint64_t v19 = v6;
    operator delete(v6);
  }
  return sub_1DDA1AA18(v21);
}

void sub_1DDA7BEB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  sub_1DDA1AA18((uint64_t *)(v13 - 40));
  _Unwind_Resume(a1);
}

BOOL sub_1DDA7BF4C(uint64_t a1)
{
  uint64_t v2 = a1 + 1224;
  sub_1DDA1A880(__p, "IFD0:EXIF:MAKERNOTE:FILEINFO");
  BOOL v3 = sub_1DDA2A530(v2, __p);
  unsigned int v4 = v3;
  unsigned int v5 = (void **)(a1 + 1232);
  if (v5 == v3) {
    int v6 = 0;
  }
  else {
    int v6 = *((unsigned __int16 *)v3 + 28);
  }
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  return v5 != v4 && v6 != 0;
}

void sub_1DDA7BFD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA7BFF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 1180);
}

uint64_t sub_1DDA7BFF8(uint64_t a1)
{
  return a1 + 1184;
}

void sub_1DDA7C000(uint64_t a1)
{
  sub_1DDA4F098(a1);

  JUMPOUT(0x1E01C3DC0);
}

_OWORD *sub_1DDA7C038(uint64_t **a1, void **a2, uint64_t a3, _OWORD **a4)
{
  int v6 = (void **)sub_1DDA4B7C4((uint64_t)a1, &v12, a2);
  unsigned int v7 = *v6;
  if (!*v6)
  {
    unsigned int v8 = (uint64_t **)v6;
    unsigned int v7 = operator new(0x40uLL);
    std::string::size_type v9 = *a4;
    uint64_t v10 = *((void *)*a4 + 2);
    void v7[2] = **a4;
    *((void *)v7 + 6) = v10;
    v9[1] = 0;
    uint64_t v9[2] = 0;
    *std::string::size_type v9 = 0;
    *((_WORD *)v7 + 28) = 0;
    sub_1DDA25078(a1, v12, v8, (uint64_t *)v7);
  }
  return v7;
}

void sub_1DDA7C14C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA7C27C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA7C340(uint64_t a1, int a2, uint64_t *a3)
{
  unsigned int v5 = (void *)sub_1DDBF0D7C(a1, a2);
  *unsigned int v5 = &unk_1F395FDF8;
  v5[6] = 0;
  int v6 = (void **)(v5 + 6);
  v5[7] = 0;
  v5[8] = 0;
  *(_DWORD *)(a1 + 12) = sub_1DDA19EC8(*a3);
  *(_DWORD *)(a1 + 16) = sub_1DDA19EC8(*a3);
  *(_DWORD *)(a1 + 20) = sub_1DDA19EC8(*a3);
  *(_DWORD *)(a1 + 24) = sub_1DDA19EC8(*a3);
  *(_DWORD *)(a1 + 28) = sub_1DDA19EC8(*a3);
  *(_DWORD *)(a1 + 32) = sub_1DDA19EC8(*a3);
  *(_DWORD *)(a1 + 36) = sub_1DDA19EC8(*a3);
  *(_DWORD *)(a1 + 40) = sub_1DDA19EC8(*a3);
  int v7 = sub_1DDA19EC8(*a3);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      float v9 = sub_1DDA1A014(*a3);
      float v10 = v9;
      uint64_t v12 = *(float **)(a1 + 56);
      unint64_t v11 = *(void *)(a1 + 64);
      if ((unint64_t)v12 >= v11)
      {
        int v14 = (float *)*v6;
        uint64_t v15 = ((char *)v12 - (unsigned char *)*v6) >> 2;
        unint64_t v16 = v15 + 1;
        if ((unint64_t)(v15 + 1) >> 62) {
          sub_1DDA17F78();
        }
        uint64_t v17 = v11 - (void)v14;
        if (v17 >> 1 > v16) {
          unint64_t v16 = v17 >> 1;
        }
        if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v18 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v18 = v16;
        }
        if (v18)
        {
          uint64_t v19 = (char *)sub_1DDA17F90(a1 + 64, v18);
          int v14 = *(float **)(a1 + 48);
          uint64_t v12 = *(float **)(a1 + 56);
        }
        else
        {
          uint64_t v19 = 0;
        }
        int v20 = (float *)&v19[4 * v15];
        *int v20 = v10;
        uint64_t v13 = v20 + 1;
        while (v12 != v14)
        {
          int v21 = *((_DWORD *)v12-- - 1);
          *((_DWORD *)v20-- - 1) = v21;
        }
        *(void *)(a1 + 48) = v20;
        *(void *)(a1 + 56) = v13;
        *(void *)(a1 + 64) = &v19[4 * v18];
        if (v14) {
          operator delete(v14);
        }
      }
      else
      {
        *uint64_t v12 = v9;
        uint64_t v13 = v12 + 1;
      }
      *(void *)(a1 + 56) = v13;
    }
  }
  return a1;
}

void sub_1DDA7C4FC(_Unwind_Exception *exception_object)
{
  unsigned int v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 56) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA7C528(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v6 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], a2, a3, a4, a5);
  float v10 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v7, *(unsigned int *)(a1 + 12), v8, v9);
  objc_msgSend_setObject_forKeyedSubscript_(v6, v11, (uint64_t)v10, @"Top", v12);

  unint64_t v16 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v13, *(unsigned int *)(a1 + 16), v14, v15);
  objc_msgSend_setObject_forKeyedSubscript_(v6, v17, (uint64_t)v16, @"Left", v18);

  uint64_t v22 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v19, *(unsigned int *)(a1 + 20), v20, v21);
  objc_msgSend_setObject_forKeyedSubscript_(v6, v23, (uint64_t)v22, @"Bottom", v24);

  char v28 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v25, *(unsigned int *)(a1 + 24), v26, v27);
  objc_msgSend_setObject_forKeyedSubscript_(v6, v29, (uint64_t)v28, @"Right", v30);

  uint64_t v34 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v31, *(unsigned int *)(a1 + 28), v32, v33);
  objc_msgSend_setObject_forKeyedSubscript_(v6, v35, (uint64_t)v34, @"Plane", v36);

  uint64_t v40 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v37, *(unsigned int *)(a1 + 32), v38, v39);
  objc_msgSend_setObject_forKeyedSubscript_(v6, v41, (uint64_t)v40, @"Planes", v42);

  int v46 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v43, *(unsigned int *)(a1 + 36), v44, v45);
  objc_msgSend_setObject_forKeyedSubscript_(v6, v47, (uint64_t)v46, @"RowPitch", v48);

  int v52 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v49, *(unsigned int *)(a1 + 40), v50, v51);
  objc_msgSend_setObject_forKeyedSubscript_(v6, v53, (uint64_t)v52, @"ColPitch", v54);

  int v63 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v55, v56, v57, v58);
  uint64_t v65 = *(_DWORD **)(a1 + 48);
  uint64_t v66 = *(_DWORD **)(a1 + 56);
  while (v65 != v66)
  {
    LODWORD(v64) = *v65;
    long long v67 = objc_msgSend_numberWithFloat_(NSNumber, v59, v60, v61, v62, v64);
    objc_msgSend_addObject_(v63, v68, (uint64_t)v67, v69, v70);

    ++v65;
  }
  objc_msgSend_setObject_forKeyedSubscript_(v6, v59, (uint64_t)v63, @"Scale", v62);
  uint64_t v71 = [RAWOpcodeScalePerColumn alloc];
  uint64_t v75 = objc_msgSend_initWithArguments_(v71, v72, (uint64_t)v6, v73, v74);

  return v75;
}

void sub_1DDA7C764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1DDA7C7B8(void *a1)
{
  *a1 = &unk_1F395FDF8;
  uint64_t v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_1DDA7C808(void *a1)
{
  *a1 = &unk_1F395FDF8;
  uint64_t v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA7C878()
{
  return 13;
}

double sub_1DDA7C880@<D0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, double **a7@<X6>, void *a8@<X8>)
{
  unint64_t v16 = (char *)operator new(0x60uLL);
  uint64_t v17 = v16;
  *((void *)v16 + 1) = 0;
  *((void *)v16 + 2) = 0;
  *(void *)unint64_t v16 = &unk_1F395FE40;
  double result = 0.0;
  *(_OWORD *)(v16 + 24) = 0u;
  uint64_t v19 = (uint64_t)(v16 + 24);
  *(_OWORD *)(v16 + 40) = 0u;
  *(_OWORD *)(v16 + 56) = 0u;
  *(_OWORD *)(v16 + 72) = 0u;
  *((void *)v16 + 11) = 0;
  *a8 = v16 + 24;
  a8[1] = v16;
  if (a1)
  {
    uint64_t v36 = 0;
    sub_1DDA7CB9C((uint64_t)(v16 + 24), 1uLL, &v36);
    if (a7[1] == *a7) {
      goto LABEL_32;
    }
    uint64_t v20 = (double *)v17[3];
    if ((double *)v17[4] == v20) {
      goto LABEL_32;
    }
    double result = -**a7;
    *uint64_t v20 = result;
    a1 = 1;
  }
  if (a2)
  {
    uint64_t v36 = 0;
    sub_1DDA7CB9C(v19, 2uLL, &v36);
    uint64_t v21 = a1;
    if (a1 >= (unint64_t)(a7[1] - *a7)) {
      goto LABEL_32;
    }
    uint64_t v22 = v17[3];
    if ((unint64_t)(v17[4] - v22) < 9) {
      goto LABEL_32;
    }
    ++a1;
    double result = -(*a7)[v21];
    *(double *)(v22 + 8) = result;
  }
  if (a3)
  {
    uint64_t v36 = 0;
    sub_1DDA7CB9C(v19, 3uLL, &v36);
    uint64_t v23 = a1;
    if (a1 >= (unint64_t)(a7[1] - *a7)) {
      goto LABEL_32;
    }
    uint64_t v24 = v17[3];
    if ((unint64_t)(v17[4] - v24) < 0x11) {
      goto LABEL_32;
    }
    ++a1;
    double result = -(*a7)[v23];
    *(double *)(v24 + 16) = result;
  }
  if (a4)
  {
    uint64_t v36 = 0;
    sub_1DDA7CB9C((uint64_t)(v17 + 9), 1uLL, &v36);
    uint64_t v25 = a1;
    if (a1 >= (unint64_t)(a7[1] - *a7)) {
      goto LABEL_32;
    }
    uint64_t v26 = (double *)v17[9];
    if ((double *)v17[10] == v26) {
      goto LABEL_32;
    }
    ++a1;
    double result = -(*a7)[v25];
    *uint64_t v26 = result;
  }
  if (a5)
  {
    uint64_t v36 = 0;
    sub_1DDA7CB9C((uint64_t)(v17 + 9), 2uLL, &v36);
    uint64_t v27 = a1;
    if (a1 >= (unint64_t)(a7[1] - *a7)) {
      goto LABEL_32;
    }
    uint64_t v28 = v17[9];
    if ((unint64_t)(v17[10] - v28) < 9) {
      goto LABEL_32;
    }
    ++a1;
    double result = -(*a7)[v27];
    *(double *)(v28 + 8) = result;
  }
  if (!a6) {
    return result;
  }
  uint64_t v36 = 0;
  sub_1DDA7CB9C((uint64_t)(v17 + 6), 4uLL, &v36);
  int v29 = *a7;
  unint64_t v30 = a7[1] - *a7;
  if (v30 <= a1) {
    goto LABEL_32;
  }
  uint64_t v31 = (double *)v17[6];
  unint64_t v32 = v17[7] - (void)v31;
  if (!v32
    || (v33 = a1 + 1, *uint64_t v31 = -v29[a1], v30 <= v33)
    || v32 < 9
    || (uint64_t v34 = a1 + 2, v31[1] = -v29[v33], v30 <= v34)
    || v32 < 0x11
    || (uint64_t v35 = a1 + 3, v31[2] = -v29[v34], v30 <= v35)
    || v32 <= 0x18)
  {
LABEL_32:
    sub_1DDA24AD0();
  }
  double result = -v29[v35];
  void v31[3] = result;
  return result;
}

void sub_1DDA7CB70(_Unwind_Exception *a1)
{
  sub_1DDA18310(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA7CB9C(uint64_t a1, unint64_t a2, void *a3)
{
  unint64_t v3 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v3)
  {
    if (a2 < v3) {
      *(void *)(a1 + 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    sub_1DDA7CBCC((void **)a1, a2 - v3, a3);
  }
}

void sub_1DDA7CBCC(void **a1, unint64_t a2, void *a3)
{
  uint64_t v8 = a1[2];
  uint64_t v6 = (uint64_t)(a1 + 2);
  int v7 = v8;
  uint64_t v9 = *(void **)(v6 - 8);
  if (a2 <= (v8 - (unsigned char *)v9) >> 3)
  {
    if (a2)
    {
      uint64_t v16 = 8 * a2;
      uint64_t v17 = &v9[a2];
      do
      {
        *v9++ = *a3;
        v16 -= 8;
      }
      while (v16);
      uint64_t v9 = v17;
    }
    a1[1] = v9;
  }
  else
  {
    uint64_t v10 = (char *)v9 - (unsigned char *)*a1;
    unint64_t v11 = a2 + (v10 >> 3);
    if (v11 >> 61) {
      sub_1DDA17F78();
    }
    uint64_t v12 = v10 >> 3;
    uint64_t v13 = v7 - (unsigned char *)*a1;
    if (v13 >> 2 > v11) {
      unint64_t v11 = v13 >> 2;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v11;
    }
    if (v14) {
      uint64_t v15 = (char *)sub_1DDA1814C(v6, v14);
    }
    else {
      uint64_t v15 = 0;
    }
    uint64_t v18 = &v15[8 * v12];
    uint64_t v19 = &v18[8 * a2];
    uint64_t v20 = 8 * a2;
    uint64_t v21 = v18;
    do
    {
      *(void *)uint64_t v21 = *a3;
      v21 += 8;
      v20 -= 8;
    }
    while (v20);
    uint64_t v22 = &v15[8 * v14];
    uint64_t v23 = (char *)*a1;
    for (int i = (char *)a1[1]; i != v23; i -= 8)
    {
      uint64_t v25 = *((void *)i - 1);
      *((void *)v18 - 1) = v25;
      v18 -= 8;
    }
    *a1 = v18;
    a1[1] = v19;
    a1[2] = v22;
    if (v23)
    {
      operator delete(v23);
    }
  }
}

void sub_1DDA7CCF0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395FE40;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA7CD10(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F395FE40;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

void sub_1DDA7CD64(uint64_t a1)
{
}

void sub_1DDA7CD70(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
  unint64_t v3 = *(void **)(a1 + 24);
  if (v3)
  {
    *(void *)(a1 + 32) = v3;
    operator delete(v3);
  }
  unsigned int v4 = *(void **)a1;
  if (*(void *)a1)
  {
    *(void *)(a1 + 8) = v4;
    operator delete(v4);
  }
}

id sub_1DDA7CDD8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v43[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *MEMORY[0x1E4F30058];
  uint64_t v34 = *MEMORY[0x1E4F30038];
  uint64_t v35 = v5;
  v42[0] = MEMORY[0x1E4F1CC28];
  v42[1] = @"com.canon.crw-raw-image";
  uint64_t v6 = *MEMORY[0x1E4F30050];
  uint64_t v36 = *MEMORY[0x1E4F30018];
  void v42[2] = @".crw.";
  uint64_t v42[3] = &unk_1F39AE8B8;
  v42[4] = &unk_1F39AE8D0;
  int v7 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA7D0D0, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E4F30040], *MEMORY[0x1E4F30048]);
  v42[5] = v7;
  uint64_t v37 = *MEMORY[0x1E4F30000];
  unint64_t v11 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v8, (uint64_t)sub_1DDA7D184, v9, v10);
  v42[6] = v11;
  uint64_t v38 = *MEMORY[0x1E4F30020];
  uint64_t v15 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v12, (uint64_t)sub_1DDA7D190, v13, v14);
  v42[7] = v15;
  uint64_t v39 = *MEMORY[0x1E4F30008];
  uint64_t v19 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v16, (uint64_t)sub_1DDA818EC, v17, v18);
  v42[8] = v19;
  uint64_t v40 = *MEMORY[0x1E4F30028];
  uint64_t v23 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v20, (uint64_t)sub_1DDA7D19C, v21, v22);
  v42[9] = v23;
  uint64_t v41 = *MEMORY[0x1E4F30030];
  uint64_t v27 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v24, (uint64_t)sub_1DDA7D1A8, v25, v26);
  v42[10] = v27;
  int v29 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v43[0] = v29;
  unint64_t v32 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v30, (uint64_t)v43, 1, v31);

  return v32;
}

void sub_1DDA7D070(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA7D0D0(unsigned char *a1, unint64_t a2)
{
  return a2 >= 0xE
      && *a1 == 73
      && a1[1] == 73
      && a1[2] == 26
      && !a1[3]
      && !a1[4]
      && !a1[5]
      && a1[6] == 72
      && a1[7] == 69
      && a1[8] == 65
      && a1[9] == 80
      && a1[10] == 67
      && a1[11] == 67
      && a1[12] == 68
      && a1[13] == 82;
}

void sub_1DDA7D184(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA7D190(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA7D19C(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, &unk_1F395FE80);
}

uint64_t sub_1DDA7D1A8(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, &unk_1F395FE80);
}

void sub_1DDA7D1B4(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v11 = a2;
  id v10 = a3;
  id v9 = a4;
  sub_1DDA7FB24(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;
}

void sub_1DDA7D234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1DDA7D250(void **a1)
{
  sub_1DDA27D28((uint64_t)a1, &__p);
  char v2 = (**(uint64_t (***)(void *))__p)(__p);
  if (v18) {
    sub_1DDA18310(v18);
  }
  if (v2)
  {
    if ((*((uint64_t (**)(void **))*a1 + 7))(a1))
    {
LABEL_15:
      uint64_t v14 = 0;
      sub_1DDA27D28((uint64_t)a1, &__p);
      LODWORD(v15) = 0;
      (*(void (**)(void *, const void ***, void))(*(void *)__p + 40))(__p, &v15, 0);
      if (v18) {
        sub_1DDA18310(v18);
      }
      sub_1DDA27D28((uint64_t)a1, &__p);
      int v5 = sub_1DDA19E68((uint64_t)__p);
      if (v18) {
        sub_1DDA18310(v18);
      }
      if (v5 == 18761 || v5 == 19789)
      {
        if (v5 == 19789) {
          uint64_t v6 = 2;
        }
        else {
          uint64_t v6 = 1;
        }
        sub_1DDA27D28((uint64_t)a1, &__p);
        sub_1DDA19C9C((uint64_t)__p, v6);
        if (v18) {
          sub_1DDA18310(v18);
        }
        (*((void (**)(void **, uint64_t))*a1 + 12))(a1, v6);
        (*((void (**)(void **, uint64_t))*a1 + 14))(a1, v6);
        (*((void (**)(void **, uint64_t))*a1 + 16))(a1, v6);
        sub_1DDA27D28((uint64_t)a1, &__p);
        int v13 = sub_1DDA19EC8((uint64_t)__p);
        if (v18) {
          sub_1DDA18310(v18);
        }
        sub_1DDA27D28((uint64_t)a1, &__p);
        (*(void (**)(void *, char *, uint64_t))(*(void *)__p + 32))(__p, (char *)&v14 + 4, 4);
        if (v18) {
          sub_1DDA18310(v18);
        }
        sub_1DDA27D28((uint64_t)a1, &__p);
        (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)__p + 32))(__p, &v14, 4);
        if (v18) {
          sub_1DDA18310(v18);
        }
        if (v14 == 0x5041454852444343)
        {
          sub_1DDA27D28((uint64_t)a1, &__p);
          int v7 = sub_1DDA19EC8((uint64_t)__p);
          if (v18) {
            sub_1DDA18310(v18);
          }
          if (v7 == 65538)
          {
            sub_1DDA27D28((uint64_t)a1, &__p);
            LODWORD(v15) = 0;
            (*(void (**)(void *, const void ***, uint64_t))(*(void *)__p + 40))(__p, &v15, 2);
            if (v18) {
              sub_1DDA18310(v18);
            }
            sub_1DDA1B4D8(&v12, &v13);
            sub_1DDA27D28((uint64_t)a1, &__p);
            LODWORD(v15) = (*(uint64_t (**)(void *))(*(void *)__p + 48))(__p);
            unsigned int v11 = *sub_1DDA26264(&v15, &v12);
            int v8 = sub_1DDA456E8(&v11);
            if (v18) {
              sub_1DDA18310(v18);
            }
            sub_1DDA27D28((uint64_t)a1, &__p);
            (*(void (**)(void *, int *, void))(*(void *)__p + 40))(__p, &v12, 0);
            if (v18) {
              sub_1DDA18310(v18);
            }
            unsigned int v9 = sub_1DDA456E8((unsigned int *)&v12);
            sub_1DDA7D850((uint64_t)a1, v9, v8, 1u);
          }
        }
      }
      return;
    }
    unint64_t v3 = (*((void (**)(void **))*a1 + 50))(a1);
    if (v3)
    {
      sub_1DDA27D28((uint64_t)a1, &__p);
      uint64_t v4 = *((void *)__p + 5);
      if (v18) {
        sub_1DDA18310(v18);
      }
      if (v4)
      {
        sub_1DDA27D28((uint64_t)a1, &v15);
        sub_1DDA49310((uint64_t *)&__p, (uint64_t *)&v15);
        if (v16) {
          sub_1DDA18310(v16);
        }
        sub_1DDA27D28((uint64_t)a1, &v15);
        sub_1DDBADD4C(v15[5], v3, a1[14]);
        if (v16) {
          sub_1DDA18310(v16);
        }
        sub_1DDA1AA18((uint64_t *)&__p);
        goto LABEL_14;
      }
      sub_1DDA27D28((uint64_t)a1, &v15);
      (*((void (**)(void **__return_ptr))*v15 + 1))(&__p);
      if (v16) {
        sub_1DDA18310(v16);
      }
      if (v19 < 0)
      {
        if (!v18)
        {
LABEL_52:
          operator delete(__p);
          goto LABEL_14;
        }
        p_p = __p;
      }
      else
      {
        if (!v19) {
          goto LABEL_14;
        }
        p_p = &__p;
      }
      sub_1DDBADE90((uint64_t)p_p, v3, a1[14]);
      if (v19 < 0) {
        goto LABEL_52;
      }
    }
LABEL_14:

    goto LABEL_15;
  }
}

void sub_1DDA7D7A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1DDA7D850(uint64_t a1, unsigned int a2, int a3, unsigned int a4)
{
  unsigned int v28 = a2;
  sub_1DDA27D28(a1, &v26);
  unsigned int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v26 + 16))(v26);
  if (v27) {
    sub_1DDA18310(v27);
  }
  if (v8 > a2)
  {
    sub_1DDA27D28(a1, &v24);
    unint64_t v22 = v28 + a3 - 4;
    sub_1DDA18488(&v23, &v22);
    sub_1DDA1A94C(&v26, &v24, (uint64_t)&v23, 0);
    if (v25) {
      sub_1DDA18310(v25);
    }
    sub_1DDA27D28(a1, &v24);
    int v9 = (*(uint64_t (**)(uint64_t))(*(void *)v24 + 48))(v24);
    if (v25) {
      sub_1DDA18310(v25);
    }
    sub_1DDA27D28(a1, &v24);
    unsigned int v10 = sub_1DDA19EC8(v24);
    if (v25) {
      sub_1DDA18310(v25);
    }
    sub_1DDA27D28(a1, &v24);
    LODWORD(v22) = (*(uint64_t (**)(uint64_t))(*(void *)v24 + 16))(v24);
    unsigned int v11 = *sub_1DDA4C118(&v22, &v28);
    if (v25) {
      sub_1DDA18310(v25);
    }
    if (v10 >= v11) {
      goto LABEL_41;
    }
    if (a4 > 0xC) {
      goto LABEL_41;
    }
    uint64_t v12 = v9;
    if (v9 - 2 < v28 + v10) {
      goto LABEL_41;
    }
    sub_1DDA27D28(a1, &v24);
    uint64_t v13 = v24;
    unsigned int v23 = v28 + v10;
    sub_1DDA18410((int *)&v22, (int *)&v23);
    (*(void (**)(uint64_t, unint64_t *, void))(*(void *)v13 + 40))(v13, &v22, 0);
    if (v25) {
      sub_1DDA18310(v25);
    }
    sub_1DDA27D28(a1, &v24);
    unsigned int v14 = sub_1DDA19E68(v24);
    if (v25) {
      sub_1DDA18310(v25);
    }
    if (v10 + 10 * v14 + v28 + 2 > v12) {
      goto LABEL_41;
    }
    if (a4 == 1)
    {
      if ((unsigned __int16)(v14 - 3) < 8u)
      {
LABEL_24:
        int v15 = 0;
        uint64_t v16 = a4 + 1;
        do
        {
          sub_1DDA27D28(a1, &v24);
          __int16 v17 = sub_1DDA19E68(v24);
          if (v25) {
            sub_1DDA18310(v25);
          }
          unsigned int v23 = 0;
          sub_1DDA27D28(a1, &v24);
          unsigned int v18 = sub_1DDA19EC8(v24);
          if (v25) {
            sub_1DDA18310(v25);
          }
          unsigned int v23 = v18;
          sub_1DDA27D28(a1, &v24);
          int v19 = sub_1DDA19EC8(v24);
          if (v25) {
            sub_1DDA18310(v25);
          }
          if ((v17 & 0x3800) == 0x2800 || (v17 & 0x3800) == 0x3000)
          {
            uint64_t v20 = v28 + v19;
            if (!__CFADD__(v28, v19))
            {
              sub_1DDA27D28(a1, &v24);
              LODWORD(v22) = (*(uint64_t (**)(uint64_t))(*(void *)v24 + 16))(v24);
              unsigned int v21 = *sub_1DDA4C118(&v22, &v23);
              if (v25) {
                sub_1DDA18310(v25);
              }
              if (v21 >= v20 && v20 != v28) {
                sub_1DDA7D850(a1, v20, v23, v16);
              }
            }
          }
          else
          {
            sub_1DDA7DCC4(a1, v28, v17, v23, v19);
          }
          ++v15;
        }
        while (v14 > (unsigned __int16)v15);
      }
    }
    else if (v14 - 1 <= 0x31)
    {
      goto LABEL_24;
    }
LABEL_41:
    sub_1DDA1AA18(&v26);
  }
}

void sub_1DDA7DC2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, std::__shared_weak_count *a5, ...)
{
  va_start(va, a5);
  if (a5) {
    sub_1DDA18310(a5);
  }
  sub_1DDA1AA18((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1DDA7DCC4(uint64_t a1, int a2, __int16 a3, unsigned int a4, int a5)
{
  sub_1DDA27D28(a1, &__p);
  sub_1DDA49310(v63, (uint64_t *)&__p);
  if (v59) {
    sub_1DDA18310(v59);
  }
  if ((a3 & 0xC000) == 0x4000)
  {
    if ((a3 & 0x3FFF) == 0x1834) {
      *(_DWORD *)(a1 + 504) = a4;
    }
  }
  else
  {
    if ((a3 & 0xC000) != 0) {
      return sub_1DDA1AA18(v63);
    }
    unsigned int v62 = a2 + a5;
    if (__CFADD__(a2, a5)) {
      return sub_1DDA1AA18(v63);
    }
    sub_1DDA27D28(a1, &__p);
    unsigned int v10 = __p;
    sub_1DDA18410((int *)v56, (int *)&v62);
    (*(void (**)(void *, void **, void))(*(void *)v10 + 40))(v10, v56, 0);
    if (v59) {
      sub_1DDA18310(v59);
    }
    unsigned int v11 = a3 & 0x3FFF;
    if (v11 <= 0x102F)
    {
      switch(a3 & 0x3FFF)
      {
        case 0x80A:
          if (a4 - 256 <= 0xFFFFFF00) {
            goto LABEL_159;
          }
          sub_1DDA27D28(a1, &__p);
          LODWORD(v56[0]) = a4;
          sub_1DDA1A0CC((uint64_t)__p, (unsigned int *)v56, a1 + 512);
          if (v59) {
            sub_1DDA18310(v59);
          }
          uint64_t v12 = a4;
          uint64_t v13 = *(char *)(a1 + 535) < 0 ? *(void *)(a1 + 520) : *(unsigned __int8 *)(a1 + 535);
          if (v13 + 1 >= (unint64_t)a4) {
            goto LABEL_159;
          }
          sub_1DDA27D28(a1, &__p);
          if (*(char *)(a1 + 535) < 0) {
            uint64_t v47 = *(void *)(a1 + 520);
          }
          else {
            uint64_t v47 = *(unsigned __int8 *)(a1 + 535);
          }
          uint64_t v48 = __p;
          v56[0] = (void *)(~v47 + v12);
          sub_1DDA18500(__src, (unint64_t *)v56);
          sub_1DDA1A0CC((uint64_t)v48, (unsigned int *)__src, a1 + 536);
          goto LABEL_149;
        case 0x80B:
          if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1)) {
            return sub_1DDA1AA18(v63);
          }
          sub_1DDA27D28(a1, &__p);
          LODWORD(v56[0]) = a4;
          sub_1DDA1A0CC((uint64_t)__p, (unsigned int *)v56, a1 + 560);
          goto LABEL_149;
        case 0x80C:
          if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1)) {
            return sub_1DDA1AA18(v63);
          }
          sub_1DDA27D28(a1, &__p);
          LODWORD(v56[0]) = a4;
          sub_1DDA1A0CC((uint64_t)__p, (unsigned int *)v56, a1 + 584);
          goto LABEL_149;
        case 0x80D:
          if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1)) {
            return sub_1DDA1AA18(v63);
          }
          sub_1DDA27D28(a1, &__p);
          LODWORD(v56[0]) = a4;
          sub_1DDA1A0CC((uint64_t)__p, (unsigned int *)v56, a1 + 608);
          goto LABEL_149;
        case 0x80E:
        case 0x80F:
        case 0x811:
        case 0x812:
        case 0x813:
        case 0x814:
        case 0x815:
          return sub_1DDA1AA18(v63);
        case 0x810:
          if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1)) {
            return sub_1DDA1AA18(v63);
          }
          sub_1DDA27D28(a1, &__p);
          LODWORD(v56[0]) = a4;
          sub_1DDA1A0CC((uint64_t)__p, (unsigned int *)v56, a1 + 632);
          goto LABEL_149;
        case 0x816:
          if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1)) {
            return sub_1DDA1AA18(v63);
          }
          sub_1DDA27D28(a1, &__p);
          LODWORD(v56[0]) = a4;
          sub_1DDA1A0CC((uint64_t)__p, (unsigned int *)v56, a1 + 656);
          goto LABEL_149;
        case 0x817:
          if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1)) {
            return sub_1DDA1AA18(v63);
          }
          sub_1DDA27D28(a1, &__p);
          LODWORD(v56[0]) = a4;
          sub_1DDA1A0CC((uint64_t)__p, (unsigned int *)v56, a1 + 680);
          goto LABEL_149;
        default:
          if (v11 == 50)
          {
            if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1)) {
              return sub_1DDA1AA18(v63);
            }
            unint64_t v61 = a4 >> 1;
            sub_1DDA27D28(a1, v56);
            uint64_t v43 = v56[0];
            sub_1DDA18500(__src, &v61);
            sub_1DDA1A488(v43, (unsigned int *)__src, (uint64_t *)&__p);
            if (v56[1]) {
              sub_1DDA18310((std::__shared_weak_count *)v56[1]);
            }
            v56[1] = 0;
            uint64_t v57 = 0;
            v56[0] = 0;
            sub_1DDA51EC4((char *)v56, (unsigned __int16 *)__p, (unsigned __int16 *)v59, ((char *)v59 - (unsigned char *)__p) >> 1);
            sub_1DDA1A880(__src, "CIFF:CanonColorInfo1");
            double v64 = __src;
            uint64_t v42 = sub_1DDA52108((uint64_t **)(a1 + 120), __src, (uint64_t)&unk_1DDBFB044, (_OWORD **)&v64);
            goto LABEL_135;
          }
          if (v11 == 4138)
          {
            char v16 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1);
            char v17 = a4 < 6 ? 1 : v16;
            if ((v17 & 1) == 0)
            {
              sub_1DDA27D28(a1, &__p);
              unsigned int v18 = __p;
              v56[0] = (void *)(v62 + 2);
              sub_1DDA18488(__src, (unint64_t *)v56);
              (*(void (**)(void *, void **, void))(*(void *)v18 + 40))(v18, __src, 0);
              if (v59) {
                sub_1DDA18310(v59);
              }
              sub_1DDA27D28(a1, &__p);
              *(_WORD *)(a1 + 772) = sub_1DDA19E68((uint64_t)__p);
              if (v59) {
                sub_1DDA18310(v59);
              }
              sub_1DDA27D28(a1, &__p);
              *(_WORD *)(a1 + 774) = sub_1DDA19E68((uint64_t)__p);
              if (v59) {
                sub_1DDA18310(v59);
              }
              if (a4 < 0x32)
              {
                if (a4 < 0x10) {
                  return sub_1DDA1AA18(v63);
                }
              }
              else
              {
                sub_1DDA27D28(a1, &__p);
                int v19 = __p;
                v56[0] = (void *)(v62 + 44);
                sub_1DDA18488(__src, (unint64_t *)v56);
                (*(void (**)(void *, void **, void))(*(void *)v19 + 40))(v19, __src, 0);
                if (v59) {
                  sub_1DDA18310(v59);
                }
                sub_1DDA27D28(a1, &__p);
                int v20 = sub_1DDA19FB0((uint64_t)__p);
                if (v59) {
                  sub_1DDA18310(v59);
                }
                sub_1DDA27D28(a1, &__p);
                unsigned int v21 = __p;
                v56[0] = (void *)(v62 + 48);
                sub_1DDA18488(__src, (unint64_t *)v56);
                (*(void (**)(void *, void **, void))(*(void *)v21 + 40))(v21, __src, 0);
                if (v59) {
                  sub_1DDA18310(v59);
                }
                sub_1DDA27D28(a1, &__p);
                int v22 = sub_1DDA19FB0((uint64_t)__p);
                unsigned int v23 = (unsigned __int16 *)v59;
                if (v59) {
                  sub_1DDA18310(v59);
                }
                float v24 = sub_1DDA7EEF4((uint64_t)v23, v20);
                float v25 = log2f(v24);
                if (v22)
                {
                  float v24 = (float)v22 / 10.0;
                  float v25 = log2f(v24);
                }
                float v26 = -v25;
                sub_1DDA1A880(&__p, "CIFF");
                v56[0] = &__p;
                *((double *)sub_1DDA70898((uint64_t **)(a1 + 312), &__p, (uint64_t)&unk_1DDBFB044, (_OWORD **)v56) + 7) = v26;
                if (v60 < 0) {
                  operator delete(__p);
                }
                sub_1DDA1A880(&__p, "CIFF");
                v56[0] = &__p;
                *((double *)sub_1DDA70898((uint64_t **)(a1 + 288), &__p, (uint64_t)&unk_1DDBFB044, (_OWORD **)v56) + 7) = v24;
                if (v60 < 0) {
                  operator delete(__p);
                }
              }
              sub_1DDA27D28(a1, &__p);
              uint64_t v50 = __p;
              v56[0] = (void *)(v62 + 14);
              sub_1DDA18488(__src, (unint64_t *)v56);
              (*(void (**)(void *, void **, void))(*(void *)v50 + 40))(v50, __src, 0);
              if (v59) {
                sub_1DDA18310(v59);
              }
              sub_1DDA27D28(a1, &__p);
              int v51 = sub_1DDA19E68((uint64_t)__p);
              if (v59) {
                sub_1DDA18310(v59);
              }
              LODWORD(__src[0]) = v51;
              sub_1DDA1A880(&__p, "CIFF:CanonShotInfo");
              v56[0] = &__p;
              int v52 = (char *)sub_1DDA52108((uint64_t **)(a1 + 168), &__p, (uint64_t)&unk_1DDBFB044, (_OWORD **)v56);
              sub_1DDA17E28(v52 + 56, (char *)__src, (uint64_t)__src + 4, 1uLL);
              if (v60 < 0)
              {
                int v15 = (unsigned __int16 *)__p;
                goto LABEL_142;
              }
            }
          }
          break;
      }
      return sub_1DDA1AA18(v63);
    }
    if ((a3 & 0x3FFFu) > 0x180F)
    {
      if ((a3 & 0x3FFFu) > 0x2004)
      {
        switch(v11)
        {
          case 0x2005u:
            if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0)
            {
              *(_DWORD *)(a1 + 704) = v62;
              *(_DWORD *)(a1 + 708) = a4;
            }
            break;
          case 0x2007u:
            *(_DWORD *)(a1 + 748) = v62;
            *(_DWORD *)(a1 + 752) = a4;
            break;
          case 0x2008u:
            *(_DWORD *)(a1 + 756) = v62;
            *(_DWORD *)(a1 + 760) = a4;
            break;
        }
        return sub_1DDA1AA18(v63);
      }
      if (v11 == 6160)
      {
        sub_1DDA27D28(a1, &__p);
        *(_DWORD *)(a1 + 736) = sub_1DDA19EC8((uint64_t)__p);
        if (v59) {
          sub_1DDA18310(v59);
        }
        sub_1DDA27D28(a1, &__p);
        *(_DWORD *)(a1 + 740) = sub_1DDA19EC8((uint64_t)__p);
        if (v59) {
          sub_1DDA18310(v59);
        }
        sub_1DDA27D28(a1, &__p);
        sub_1DDA19EC8((uint64_t)__p);
        if (v59) {
          sub_1DDA18310(v59);
        }
        sub_1DDA27D28(a1, &__p);
        *(_DWORD *)(a1 + 744) = sub_1DDA19EC8((uint64_t)__p);
      }
      else
      {
        if (v11 != 6197 || ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) != 0) {
          return sub_1DDA1AA18(v63);
        }
        sub_1DDA27D28(a1, &__p);
        *(_DWORD *)(a1 + 776) = sub_1DDA19EC8((uint64_t)__p);
      }
LABEL_149:
      if (v59) {
        sub_1DDA18310(v59);
      }
      return sub_1DDA1AA18(v63);
    }
    if ((a3 & 0x3FFFu) > 0x10A8)
    {
      if (v11 == 4265)
      {
        if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1)) {
          return sub_1DDA1AA18(v63);
        }
        sub_1DDA27D28(a1, &__p);
        LODWORD(v56[0]) = 2;
        (*(void (**)(void *, void **, uint64_t))(*(void *)__p + 40))(__p, v56, 1);
        if (v59) {
          sub_1DDA18310(v59);
        }
        if (a4 <= 2) {
          goto LABEL_159;
        }
        unint64_t v61 = (a4 - 2) >> 1;
        sub_1DDA27D28(a1, v56);
        uint64_t v41 = v56[0];
        sub_1DDA18500(__src, &v61);
        sub_1DDA1A488(v41, (unsigned int *)__src, (uint64_t *)&__p);
        if (v56[1]) {
          sub_1DDA18310((std::__shared_weak_count *)v56[1]);
        }
        v56[1] = 0;
        uint64_t v57 = 0;
        v56[0] = 0;
        sub_1DDA51EC4((char *)v56, (unsigned __int16 *)__p, (unsigned __int16 *)v59, ((char *)v59 - (unsigned char *)__p) >> 1);
        sub_1DDA1A880(__src, "CIFF:ColorBalance");
        double v64 = __src;
        uint64_t v42 = sub_1DDA52108((uint64_t **)(a1 + 120), __src, (uint64_t)&unk_1DDBFB044, (_OWORD **)&v64);
LABEL_135:
        uint64_t v44 = v42;
        int v46 = (void *)v42 + 7;
        uint64_t v45 = (void *)*((void *)v42 + 7);
        if (v45)
        {
          *((void *)v44 + 8) = v45;
          operator delete(v45);
          *int v46 = 0;
          v46[1] = 0;
          void v46[2] = 0;
        }
        *(_OWORD *)((char *)v44 + 56) = *(_OWORD *)v56;
        *((void *)v44 + 9) = v57;
        v56[1] = 0;
        uint64_t v57 = 0;
        v56[0] = 0;
        if (v55 < 0)
        {
          operator delete(__src[0]);
          if (v56[0])
          {
            v56[1] = v56[0];
            operator delete(v56[0]);
          }
        }
        int v15 = (unsigned __int16 *)__p;
        if (__p) {
          goto LABEL_141;
        }
      }
      else if (v11 == 4277 && a4 >= 0xA)
      {
        sub_1DDA27D28(a1, &__p);
        unsigned int v27 = sub_1DDA19E68((uint64_t)__p);
        if (v59) {
          sub_1DDA18310(v59);
        }
        if (v27 >= 0xA)
        {
          sub_1DDA27D28(a1, &__p);
          *(_WORD *)(a1 + 764) = sub_1DDA19E68((uint64_t)__p);
          if (v59) {
            sub_1DDA18310(v59);
          }
          sub_1DDA27D28(a1, &__p);
          *(_WORD *)(a1 + 766) = sub_1DDA19E68((uint64_t)__p);
          if (v59) {
            sub_1DDA18310(v59);
          }
          sub_1DDA27D28(a1, &__p);
          *(_WORD *)(a1 + 768) = sub_1DDA19E68((uint64_t)__p);
          if (v59) {
            sub_1DDA18310(v59);
          }
          sub_1DDA27D28(a1, &__p);
          *(_WORD *)(a1 + 770) = sub_1DDA19E68((uint64_t)__p);
          goto LABEL_149;
        }
      }
    }
    else
    {
      if (v11 != 4144)
      {
        if (v11 != 4145 || ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) != 0) {
          return sub_1DDA1AA18(v63);
        }
        if (a4 - 256 > 0xFFFFFF11)
        {
          sub_1DDA27D28(a1, v56);
          unsigned int v14 = v56[0];
          __src[0] = (void *)(a4 >> 1);
          sub_1DDA18500(&v64, (unint64_t *)__src);
          sub_1DDA1A488(v14, (unsigned int *)&v64, (uint64_t *)&__p);
          if (v56[1]) {
            sub_1DDA18310((std::__shared_weak_count *)v56[1]);
          }
          int v15 = (unsigned __int16 *)__p;
          *(_DWORD *)(a1 + 712) = *((unsigned __int16 *)__p + 1);
          *(_DWORD *)(a1 + 716) = v15[2];
          *(uint32x4_t *)(a1 + 720) = vmovl_u16(*(uint16x4_t *)(v15 + 5));
LABEL_141:
          uint64_t v59 = (std::__shared_weak_count *)v15;
LABEL_142:
          operator delete(v15);
          return sub_1DDA1AA18(v63);
        }
LABEL_159:
        exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E01C3B90](exception, "RawCameraException");
        __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0)
      {
        sub_1DDA27D28(a1, &__p);
        sub_1DDA19E68((uint64_t)__p);
        if (v59) {
          sub_1DDA18310(v59);
        }
        sub_1DDA27D28(a1, &__p);
        int v28 = sub_1DDA19E68((uint64_t)__p);
        if (v59) {
          sub_1DDA18310(v59);
        }
        LOWORD(v64) = v28;
        sub_1DDA27D28(a1, &__p);
        int v29 = sub_1DDA19E68((uint64_t)__p);
        if (v59) {
          sub_1DDA18310(v59);
        }
        LOWORD(v61) = v29;
        sub_1DDA27D28(a1, &__p);
        sub_1DDA19E68((uint64_t)__p);
        if (v59) {
          sub_1DDA18310(v59);
        }
        sub_1DDA27D28(a1, &__p);
        sub_1DDA19E68((uint64_t)__p);
        if (v59) {
          sub_1DDA18310(v59);
        }
        sub_1DDA27D28(a1, &__p);
        int v30 = sub_1DDA19E68((uint64_t)__p);
        if (v59) {
          sub_1DDA18310(v59);
        }
        if (v28 == 8 && v29 == 8 && (v30 == 12 || v30 == 10))
        {
          sub_1DDAA532C(0x80uLL, v56);
          std::string __p = v56[0];
          uint64_t v59 = (std::__shared_weak_count *)v56[1];
          uint64_t v31 = sub_1DDA7EF68((uint64_t)v56[0]);
          unint64_t v32 = 0;
          uint64_t v33 = 0;
          int v34 = 0;
          char v35 = 0;
          do
          {
            if (v34 < v30)
            {
              sub_1DDA27D28(a1, v56);
              __int16 v36 = sub_1DDA19E68((uint64_t)v56[0]);
              __int16 v37 = word_1DDBF9DB0[v35 & 1];
              if (v56[1]) {
                sub_1DDA18310((std::__shared_weak_count *)v56[1]);
              }
              ++v35;
              uint64_t v33 = (v33 << 16) | (unsigned __int16)(v37 ^ v36);
              v34 += 16;
            }
            *(_WORD *)(v31 + 2 * v32) = (unint64_t)(v33 << -(uint64_t)v34) >> (64 - v30);
            v34 -= v30;
          }
          while (v32++ < 0x3F);
          LODWORD(__src[0]) = 0;
          sub_1DDA7FD14(&__p, (unsigned int *)__src, (unsigned __int16 *)&v61, (unsigned __int16 *)&v64, (unsigned __int16 *)&v64, v56);
          long long v39 = *(_OWORD *)v56;
          v56[0] = 0;
          v56[1] = 0;
          uint64_t v40 = *(std::__shared_weak_count **)(a1 + 792);
          *(_OWORD *)(a1 + 784) = v39;
          if (v40)
          {
            sub_1DDA18310(v40);
            if (v56[1]) {
              sub_1DDA18310((std::__shared_weak_count *)v56[1]);
            }
          }
          goto LABEL_149;
        }
      }
    }
  }
  return sub_1DDA1AA18(v63);
}

void sub_1DDA7EC6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  sub_1DDA1AA18(&a27);
  _Unwind_Resume(a1);
}

float sub_1DDA7EEF4(uint64_t a1, int a2)
{
  float result = 30.0;
  if (a2 >= -160)
  {
    if (a2 <= 384)
    {
      int v3 = 0;
      uint64_t v4 = &word_1DDBF9DBC;
      uint64_t v5 = -61;
      do
      {
        int v6 = *v4;
        v4 += 4;
        unsigned int v7 = a2 - v6;
        if (a2 - v6 < 0) {
          unsigned int v7 = -v7;
        }
        int v8 = a2 - *((__int16 *)&unk_1DDBF9DB4 + 4 * v3);
        if (v8 < 0) {
          int v8 = *((__int16 *)&unk_1DDBF9DB4 + 4 * v3) - a2;
        }
        if (v7 < v8) {
          int v3 = v5 + 62;
        }
      }
      while (!__CFADD__(v5++, 1));
      return *((float *)&unk_1DDBF9DB4 + 2 * v3 + 1);
    }
    else
    {
      return 0.00025;
    }
  }
  return result;
}

uint64_t sub_1DDA7EF68(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (!result)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA7EFC4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA7EFD8(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  int v4 = a1[186];
  if (v4 == 90) {
    int v5 = 6;
  }
  else {
    int v5 = 1;
  }
  if (v4 == 180) {
    int v5 = 3;
  }
  a2[1] = 0;
  a2[2] = 0;
  if (v4 == 270) {
    int v6 = 8;
  }
  else {
    int v6 = v5;
  }
  *a2 = 0;
  sub_1DDA18410((int *)&v8, a1 + 187);
  int v9 = a1[188];
  sub_1DDA284D4((uint64_t)a1, (int *)&v8, (unsigned int *)&v9, v6, &v10);
  sub_1DDA18410(&v9, a1 + 189);
  unsigned int v7 = a1[190];
  sub_1DDA284D4((uint64_t)a1, &v9, &v7, v6, &v8);
  if ((void)v10) {
    sub_1DDA480D4(a2, &v10);
  }
  if ((void)v8) {
    sub_1DDA480D4(a2, &v8);
  }
  if (*((void *)&v8 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v8 + 1));
  }
  if (*((void *)&v10 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v10 + 1));
  }
}

void sub_1DDA7F0D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_1DDA18310(a14);
  }
  sub_1DDA18270(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA7F11C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 776);
}

char *sub_1DDA7F124@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[535] < 0) {
    return (char *)sub_1DDA2639C((unsigned char *)a2, *((void **)result + 64), *((void *)result + 65));
  }
  *(_OWORD *)a2 = *((_OWORD *)result + 32);
  *(void *)(a2 + 16) = *((void *)result + 66);
  return result;
}

char *sub_1DDA7F154@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[559] < 0) {
    return (char *)sub_1DDA2639C((unsigned char *)a2, *((void **)result + 67), *((void *)result + 68));
  }
  *(_OWORD *)a2 = *(_OWORD *)(result + 536);
  *(void *)(a2 + 16) = *((void *)result + 69);
  return result;
}

uint64_t sub_1DDA7F184(uint64_t a1, const void **a2)
{
  int v3 = *((char *)a2 + 23);
  if (v3 >= 0) {
    int v4 = (const void *)*((unsigned __int8 *)a2 + 23);
  }
  else {
    int v4 = a2[1];
  }
  if (v4 != (const void *)4)
  {
    if (v4 == (const void *)6)
    {
      int v5 = v3 >= 0 ? a2 : (const void **)*a2;
      int v6 = *(_DWORD *)v5;
      int v7 = *((unsigned __int16 *)v5 + 2);
      if (v6 == 1179011395 && v7 == 12918)
      {
        unsigned int v9 = *(unsigned __int16 *)(a1 + 774);
        if (v9 == 268) {
          return 1000;
        }
        else {
          return llround(exp2((double)v9 * 0.03125) * 100.0 * 0.03125);
        }
      }
    }
    goto LABEL_20;
  }
  if (v3 >= 0) {
    unsigned int v11 = a2;
  }
  else {
    unsigned int v11 = *a2;
  }
  if (memcmp(v11, "CIFF", 4uLL))
  {
LABEL_20:
    return sub_1DDA27550((void **)a1);
  }
  unsigned int v12 = *(unsigned __int16 *)(a1 + 774);
  *(double *)&unint64_t v13 = exp2((double)v12 * 0.03125) * 100.0;
  double v14 = *(double *)&v13 * 0.03125;
  LOWORD(v13) = *(_WORD *)(a1 + 772);
  double v15 = exp2((double)v13 * 0.03125) * 100.0;
  double v16 = 1000.0;
  if (v12 != 268) {
    double v16 = v14;
  }
  return llround(v15 * v16 / 100.0);
}

uint64_t sub_1DDA7F2E8()
{
  return 2492765332;
}

uint64_t sub_1DDA7F2F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 704);
}

uint64_t sub_1DDA7F2FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 708);
}

uint64_t sub_1DDA7F304(uint64_t a1)
{
  sub_1DDA18218(&v2, *(_DWORD *)(a1 + 712), *(_DWORD *)(a1 + 716));
  return v2;
}

uint64_t sub_1DDA7F334(_DWORD *a1)
{
  int v1 = a1[180];
  int v2 = a1[181];
  int v3 = a1[182] - v1 + 1;
  int v4 = a1[183] - v2 + 1;
  sub_1DDA18218(&v6, v1, v2);
  sub_1DDA18218(&v7, v3, v4);
  return v6;
}

void sub_1DDA7F3A0(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v75 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 440))(a1);
  snprintf(__str, 0x10uLL, "%u", a1[126]);
  snprintf(__s, 0x10uLL, "%d", v4);
  snprintf(v72, 0x10uLL, "%d", HIDWORD(v4));
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_1DDA1A880(__p, "crw");
  unint64_t v5 = a2[2];
  unint64_t v6 = a2[1];
  if (v6 >= v5)
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - *a2) >> 3);
    unint64_t v9 = v8 + 1;
    if (v8 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    uint64_t v71 = a2 + 2;
    if (v11) {
      unsigned int v12 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v11);
    }
    else {
      unsigned int v12 = 0;
    }
    unint64_t v13 = &v12[24 * v8];
    long long v67 = v12;
    uint64_t v68 = v13;
    uint64_t v70 = &v12[24 * v11];
    long long v14 = *(_OWORD *)__p;
    *((void *)v13 + 2) = v66;
    *(_OWORD *)unint64_t v13 = v14;
    __p[1] = 0;
    uint64_t v66 = 0;
    __p[0] = 0;
    uint64_t v69 = v13 + 24;
    sub_1DDA2A0E8(a2, &v67);
    uint64_t v15 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v67);
    int v16 = SHIBYTE(v66);
    a2[1] = v15;
    if (v16 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v7 = *(_OWORD *)__p;
    *(void *)(v6 + 16) = v66;
    *(_OWORD *)unint64_t v6 = v7;
    a2[1] = v6 + 24;
  }
  sub_1DDA1A880(__p, "canon");
  unint64_t v18 = a2[1];
  unint64_t v17 = a2[2];
  if (v18 >= v17)
  {
    unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v18 - *a2) >> 3);
    unint64_t v21 = v20 + 1;
    if (v20 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    if (2 * v22 > v21) {
      unint64_t v21 = 2 * v22;
    }
    if (v22 >= 0x555555555555555) {
      unint64_t v23 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v23 = v21;
    }
    uint64_t v71 = a2 + 2;
    if (v23) {
      float v24 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v23);
    }
    else {
      float v24 = 0;
    }
    float v25 = &v24[24 * v20];
    long long v67 = v24;
    uint64_t v68 = v25;
    uint64_t v70 = &v24[24 * v23];
    long long v26 = *(_OWORD *)__p;
    *((void *)v25 + 2) = v66;
    *(_OWORD *)float v25 = v26;
    __p[1] = 0;
    uint64_t v66 = 0;
    __p[0] = 0;
    uint64_t v69 = v25 + 24;
    sub_1DDA2A0E8(a2, &v67);
    uint64_t v27 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v67);
    int v28 = SHIBYTE(v66);
    a2[1] = v27;
    if (v28 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v19 = *(_OWORD *)__p;
    *(void *)(v18 + 16) = v66;
    *(_OWORD *)unint64_t v18 = v19;
    a2[1] = v18 + 24;
  }
  sub_1DDA1A880(__p, __str);
  unint64_t v30 = a2[1];
  unint64_t v29 = a2[2];
  if (v30 >= v29)
  {
    unint64_t v32 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v30 - *a2) >> 3);
    unint64_t v33 = v32 + 1;
    if (v32 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v34 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    if (2 * v34 > v33) {
      unint64_t v33 = 2 * v34;
    }
    if (v34 >= 0x555555555555555) {
      unint64_t v35 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v35 = v33;
    }
    uint64_t v71 = a2 + 2;
    if (v35) {
      __int16 v36 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v35);
    }
    else {
      __int16 v36 = 0;
    }
    __int16 v37 = &v36[24 * v32];
    long long v67 = v36;
    uint64_t v68 = v37;
    uint64_t v70 = &v36[24 * v35];
    long long v38 = *(_OWORD *)__p;
    *((void *)v37 + 2) = v66;
    *(_OWORD *)__int16 v37 = v38;
    __p[1] = 0;
    uint64_t v66 = 0;
    __p[0] = 0;
    uint64_t v69 = v37 + 24;
    sub_1DDA2A0E8(a2, &v67);
    uint64_t v39 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v67);
    int v40 = SHIBYTE(v66);
    a2[1] = v39;
    if (v40 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v31 = *(_OWORD *)__p;
    *(void *)(v30 + 16) = v66;
    *(_OWORD *)unint64_t v30 = v31;
    a2[1] = v30 + 24;
  }
  sub_1DDA1A880(__p, __s);
  unint64_t v42 = a2[1];
  unint64_t v41 = a2[2];
  if (v42 >= v41)
  {
    unint64_t v44 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v42 - *a2) >> 3);
    unint64_t v45 = v44 + 1;
    if (v44 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v46 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v41 - *a2) >> 3);
    if (2 * v46 > v45) {
      unint64_t v45 = 2 * v46;
    }
    if (v46 >= 0x555555555555555) {
      unint64_t v47 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v47 = v45;
    }
    uint64_t v71 = a2 + 2;
    if (v47) {
      uint64_t v48 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v47);
    }
    else {
      uint64_t v48 = 0;
    }
    uint64_t v49 = &v48[24 * v44];
    long long v67 = v48;
    uint64_t v68 = v49;
    uint64_t v70 = &v48[24 * v47];
    long long v50 = *(_OWORD *)__p;
    *((void *)v49 + 2) = v66;
    *(_OWORD *)uint64_t v49 = v50;
    __p[1] = 0;
    uint64_t v66 = 0;
    __p[0] = 0;
    uint64_t v69 = v49 + 24;
    sub_1DDA2A0E8(a2, &v67);
    uint64_t v51 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v67);
    int v52 = SHIBYTE(v66);
    a2[1] = v51;
    if (v52 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v43 = *(_OWORD *)__p;
    *(void *)(v42 + 16) = v66;
    *(_OWORD *)unint64_t v42 = v43;
    a2[1] = v42 + 24;
  }
  sub_1DDA1A880(__p, v72);
  unint64_t v54 = a2[1];
  unint64_t v53 = a2[2];
  if (v54 >= v53)
  {
    unint64_t v56 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v54 - *a2) >> 3);
    unint64_t v57 = v56 + 1;
    if (v56 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v58 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v53 - *a2) >> 3);
    if (2 * v58 > v57) {
      unint64_t v57 = 2 * v58;
    }
    if (v58 >= 0x555555555555555) {
      unint64_t v59 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v59 = v57;
    }
    uint64_t v71 = a2 + 2;
    if (v59) {
      char v60 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v59);
    }
    else {
      char v60 = 0;
    }
    unint64_t v61 = &v60[24 * v56];
    long long v67 = v60;
    uint64_t v68 = v61;
    uint64_t v70 = &v60[24 * v59];
    long long v62 = *(_OWORD *)__p;
    *((void *)v61 + 2) = v66;
    *(_OWORD *)unint64_t v61 = v62;
    __p[1] = 0;
    uint64_t v66 = 0;
    __p[0] = 0;
    uint64_t v69 = v61 + 24;
    sub_1DDA2A0E8(a2, &v67);
    uint64_t v63 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v67);
    int v64 = SHIBYTE(v66);
    a2[1] = v63;
    if (v64 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v55 = *(_OWORD *)__p;
    *(void *)(v54 + 16) = v66;
    *(_OWORD *)unint64_t v54 = v55;
    a2[1] = v54 + 24;
  }
}

void sub_1DDA7F99C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1DDA7FA10(uint64_t a1)
{
  sub_1DDA7FA48(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA7FA48(uint64_t a1)
{
  *(void *)a1 = &unk_1F395FEB0;
  int v2 = *(std::__shared_weak_count **)(a1 + 792);
  if (v2) {
    sub_1DDA18310(v2);
  }
  if (*(char *)(a1 + 703) < 0) {
    operator delete(*(void **)(a1 + 680));
  }
  if (*(char *)(a1 + 679) < 0) {
    operator delete(*(void **)(a1 + 656));
  }
  if (*(char *)(a1 + 655) < 0) {
    operator delete(*(void **)(a1 + 632));
  }
  if (*(char *)(a1 + 631) < 0) {
    operator delete(*(void **)(a1 + 608));
  }
  if (*(char *)(a1 + 607) < 0) {
    operator delete(*(void **)(a1 + 584));
  }
  if (*(char *)(a1 + 583) < 0) {
    operator delete(*(void **)(a1 + 560));
  }
  if (*(char *)(a1 + 559) < 0) {
    operator delete(*(void **)(a1 + 536));
  }
  if (*(char *)(a1 + 535) < 0) {
    operator delete(*(void **)(a1 + 512));
  }

  return sub_1DDA49BE0(a1);
}

void sub_1DDA7FB24(void *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x338uLL);
  sub_1DDA7FBB8((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA7FBA4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA7FBB8(uint64_t a1, void *a2, char *a3, void **a4, void **a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F3960150;
  sub_1DDA26868(a1 + 24, a2, *a3, *a4, *a5);
  *(void *)(a1 + 24) = &unk_1F395FEB0;
  *(_DWORD *)(a1 + 528) = -1;
  *(_OWORD *)(a1 + 808) = 0u;
  *(_OWORD *)(a1 + 536) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_OWORD *)(a1 + 584) = 0u;
  *(_OWORD *)(a1 + 600) = 0u;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_OWORD *)(a1 + 632) = 0u;
  *(_OWORD *)(a1 + 648) = 0u;
  *(_OWORD *)(a1 + 664) = 0u;
  *(_OWORD *)(a1 + 680) = 0u;
  *(_OWORD *)(a1 + 696) = 0u;
  *(_OWORD *)(a1 + 712) = 0u;
  *(_OWORD *)(a1 + 728) = 0u;
  *(_OWORD *)(a1 + 744) = 0u;
  *(_OWORD *)(a1 + 760) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 788) = 0u;
  return a1;
}

void sub_1DDA7FC64(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA7FC78(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3960150;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA7FC98(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3960150;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA7FCEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

void sub_1DDA7FD14(void *a1@<X1>, unsigned int *a2@<X2>, unsigned __int16 *a3@<X3>, unsigned __int16 *a4@<X4>, unsigned __int16 *a5@<X5>, void *a6@<X8>)
{
  unsigned int v12 = operator new(0x58uLL);
  sub_1DDA7FDB8(v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 3;
  a6[1] = v12;

  sub_1DDA1AF34((uint64_t)a6, v12 + 4, (uint64_t)(v12 + 3));
}

void sub_1DDA7FDA4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA7FDB8(void *a1, void *a2, unsigned int *a3, unsigned __int16 *a4, unsigned __int16 *a5, unsigned __int16 *a6)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F39601A0;
  sub_1DDA7FEB0((uint64_t)(a1 + 3), a2, a3, a4, a5, a6);
  return a1;
}

void sub_1DDA7FE00(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA7FE14(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F39601A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA7FE34(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F39601A0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA7FE88(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_1DDA7FEB0(uint64_t a1, void *a2, unsigned int *a3, unsigned __int16 *a4, unsigned __int16 *a5, unsigned __int16 *a6)
{
  sub_1DDA1B3CC(&v16, a3);
  int v11 = *a4;
  int v14 = *a5;
  int v15 = v11;
  int v13 = *a6;
  return sub_1DDAA7BA8(a1, a2, &v16, &v15, &v14, &v13);
}

uint64_t sub_1DDA7FF34(os_signpost_id_t a1, unint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  unint64_t v30 = a2;
  unint64_t v29 = a3;
  id v5 = a4;
  unint64_t v6 = CGImagePluginGetOptions();
  unint64_t v10 = v6;
  if (v6)
  {
    int v11 = objc_msgSend_objectForKeyedSubscript_(v6, v7, (uint64_t)off_1EAB8AEC0, v8, v9);
    BOOL v12 = v11 != 0;
  }
  else
  {
    BOOL v12 = 0;
  }
  int v13 = sub_1DDA83D7C();
  int v14 = v13;
  if (a1 + 1 >= 2 && os_signpost_enabled(v13))
  {
    unint64_t v22 = "NO";
    *(_DWORD *)buf = 134218498;
    if (v12) {
      unint64_t v22 = "YES";
    }
    *(void *)&buf[4] = v30;
    *(_WORD *)&buf[12] = 2048;
    *(void *)&buf[14] = v29;
    __int16 v32 = 2080;
    unint64_t v33 = v22;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v14, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CGImagePluginInitRaw", "Index:%lu, ThumbSize:%lu, UseRawData:%s", buf, 0x20u);
  }

  v27[0] = MEMORY[0x1E4F143A8];
  v27[1] = 3221225472;
  v27[2] = sub_1DDA80450;
  void v27[3] = &unk_1E6D04FA0;
  v27[4] = a1;
  void v27[5] = v30;
  v27[6] = v29;
  BOOL v28 = v12;
  int v15 = (void (**)(void))MEMORY[0x1E01C46E0](v27);
  sub_1DDA18500(&v25, &v30);
  sub_1DDA18500(&v26, &v29);
  sub_1DDA76E68(a1, (unsigned int *)&v25, &v26, v5, buf);
  if (!*(void *)buf) {
    goto LABEL_24;
  }
  int v16 = (*(uint64_t (**)(void))(**(void **)buf + 40))(*(void *)buf);
  uint64_t v17 = **(void **)buf;
  if (!v16)
  {
    (*(void (**)(void))(v17 + 32))();
    if ((*(uint64_t (**)(void))(**(void **)buf + 8))(*(void *)buf)) {
      goto LABEL_15;
    }
    sub_1DDA18500(&v26, &v30);
    sub_1DDA18500(&v24, &v29);
    sub_1DDA76E68(a1, &v26, &v24, v5, &v25);
    long long v18 = v25;
    long long v25 = 0uLL;
    long long v19 = *(std::__shared_weak_count **)&buf[8];
    *(_OWORD *)buf = v18;
    if (v19)
    {
      sub_1DDA18310(v19);
      if (*((void *)&v25 + 1)) {
        sub_1DDA18310(*((std::__shared_weak_count **)&v25 + 1));
      }
      unint64_t v20 = *(uint64_t (****)(void))buf;
      if (!*(void *)buf) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v20 = (uint64_t (***)(void))v18;
      if (!(void)v18) {
        goto LABEL_23;
      }
    }
    if ((**v20)(v20)) {
      goto LABEL_15;
    }
LABEL_23:
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    goto LABEL_25;
  }
  if (((*(uint64_t (**)(void))v17)() & 1) == 0)
  {
LABEL_24:
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
LABEL_25:
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
LABEL_15:
  if (*(void *)&buf[8]) {
    sub_1DDA18310(*(std::__shared_weak_count **)&buf[8]);
  }
  v15[2](v15);

  return 1;
}

void sub_1DDA80324(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    uint64_t v4 = *(std::__shared_weak_count **)(v2 - 88);
    if (v4) {
      sub_1DDA18310(v4);
    }
    __cxa_begin_catch(exception_object);
    id v5 = CGImagePluginGetProperties();
    uint64_t v9 = v5;
    if (v5)
    {
      unint64_t v10 = objc_msgSend_objectForKeyedSubscript_(v5, v6, *MEMORY[0x1E4F2FED8], v7, v8);
      int v14 = v10;
      if (v10) {
        objc_msgSend_removeObjectForKey_(v10, v11, @"kCGImageSourceRawReconstructionMethodVersions", v12, v13);
      }
    }
    __cxa_end_catch();
    JUMPOUT(0x1DDA801C8);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA80450(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1DDA83D7C();
  int v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    if (*(unsigned char *)(a1 + 56)) {
      uint64_t v7 = "YES";
    }
    else {
      uint64_t v7 = "NO";
    }
    int v8 = 134218498;
    uint64_t v9 = v5;
    __int16 v10 = 2048;
    uint64_t v11 = v6;
    __int16 v12 = 2080;
    uint64_t v13 = v7;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CGImagePluginInitRaw", "Index:%lu, ThumbSize:%lu, UseRawData:%s", (uint8_t *)&v8, 0x20u);
  }
}

void sub_1DDA80550(const void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  void (**v258)(void *__return_ptr);
  void *v259;
  CFDataRef data;
  std::__shared_weak_count *v261;
  uint64_t v262;
  std::__shared_weak_count *v263;
  id obj;
  void *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  int v270;
  void *v271;
  long long v272;
  long long v273;
  long long v274;
  long long v275;
  long long v276;
  long long v277;
  long long v278;
  long long v279;
  int v280;
  void **v281[3];
  uint64_t v282;
  uint8_t buf[8];
  std::__shared_weak_count *v284;
  uint64_t v285;
  std::__shared_weak_count *v286;
  uint64_t v287;
  std::__shared_weak_count *v288;
  uint64_t v289;
  std::__shared_weak_count *v290;
  long long v291;
  void v292[5];
  void *v293;
  void v294[2];
  void v295[2];
  unsigned char v296[128];
  unsigned char v297[128];
  void v298[2];
  void v299[2];
  void v300[2];
  void v301[4];

  void v301[2] = *MEMORY[0x1E4F143B8];
  uint64_t v258 = a4;
  uint64_t v5 = sub_1DDA83D7C();
  uint64_t v6 = v5;
  if ((unint64_t)a1 + 1 >= 2 && os_signpost_enabled(v5))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v6, OS_SIGNPOST_INTERVAL_BEGIN, (os_signpost_id_t)a1, "CGImagePluginAddSourceProps", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v292[0] = MEMORY[0x1E4F143A8];
  v292[1] = 3221225472;
  void v292[2] = sub_1DDA816DC;
  v292[3] = &unk_1E6D04A58;
  v292[4] = a1;
  uint64_t v254 = (void (**)(void))MEMORY[0x1E01C46E0](v292);
  context = (void *)MEMORY[0x1E01C4510]();
  v257 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v7, v8, v9, v10);
  double v11 = sub_1DDA19A18(a1, &v291);
  uint64_t v270 = (*(uint64_t (**)(void, double))(*(void *)v291 + 48))(v291, v11);
  v258[2](&v289);
  if (v289)
  {
    std::string v285 = 0;
    unsigned int v286 = 0;
    sub_1DDA4C33C(&v285, buf);
    sub_1DDA2BC38((uint64_t)&v289, (uint64_t *)buf, &v287);
    if (v284) {
      sub_1DDA18310(v284);
    }
    if (v286) {
      sub_1DDA18310(v286);
    }
    if (v287)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v287 + 32))(v287)) {
        CGImageSourceAddProperty();
      }
      unint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v287 + 408))(v287);
      v300[0] = @"Width";
      int v16 = objc_msgSend_numberWithInt_(NSNumber, v13, v12, v14, v15);
      v300[1] = @"Height";
      v301[0] = v16;
      unint64_t v20 = objc_msgSend_numberWithInt_(NSNumber, v17, HIDWORD(v12), v18, v19);
      v301[1] = v20;
      uint64_t v250 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v21, (uint64_t)v301, (uint64_t)v300, 2);

      CGImageSourceAddProperty();
      (*(void (**)(uint64_t))(*(void *)v287 + 456))(v287);
      v298[0] = @"Width";
      unint64_t v23 = (unint64_t)v22;
      unsigned int v26 = objc_msgSend_numberWithInt_(NSNumber, v22, (uint64_t)v22, v24, v25);
      v298[1] = @"Height";
      v299[0] = v26;
      uint64_t v266 = HIDWORD(v23);
      uint64_t v268 = v23;
      unint64_t v30 = objc_msgSend_numberWithInt_(NSNumber, v27, HIDWORD(v23), v28, v29);
      v299[1] = v30;
      uint64_t v249 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v31, (uint64_t)v299, (uint64_t)v298, 2);

      CGImageSourceAddProperty();
      (*(void (**)(uint8_t *__return_ptr))(*(void *)v287 + 288))(buf);
      if (v284 != *(std::__shared_weak_count **)buf)
      {
        __int16 v36 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v32, v33, v34, v35);
        uint64_t v37 = *(void *)buf;
        long long v38 = v284;
        if (*(std::__shared_weak_count **)buf != v284)
        {
          while (1)
          {
            uint64_t v39 = *(const void **)v37;
            int v40 = *(std::__shared_weak_count **)(v37 + 8);
            if (v40) {
              atomic_fetch_add_explicit(&v40->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            if (v39)
            {
              unint64_t v41 = (unsigned int *)__dynamic_cast(v39, (const struct __class_type_info *)&unk_1F3969080, (const struct __class_type_info *)&unk_1F39690E8, 0);
              if (v41) {
                break;
              }
            }
            if (v40) {
              goto LABEL_23;
            }
LABEL_24:
            v37 += 16;
            if ((std::__shared_weak_count *)v37 == v38) {
              goto LABEL_25;
            }
          }
          unint64_t v46 = v41;
          if (v40) {
            atomic_fetch_add_explicit(&v40->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          unint64_t v47 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v42, v43, v44, v45);
          uint64_t v48 = NSNumber;
          uint64_t v49 = (*(uint64_t (**)(unsigned int *))(*(void *)v46 + 16))(v46);
          unint64_t v53 = objc_msgSend_numberWithLongLong_(v48, v50, v49, v51, v52);
          objc_msgSend_setObject_forKeyedSubscript_(v47, v54, (uint64_t)v53, @"JPEGOffset", v55);

          unint64_t v56 = NSNumber;
          uint64_t v57 = (*(uint64_t (**)(unsigned int *))(*(void *)v46 + 24))(v46);
          unint64_t v61 = objc_msgSend_numberWithUnsignedLong_(v56, v58, v57, v59, v60);
          objc_msgSend_setObject_forKeyedSubscript_(v47, v62, (uint64_t)v61, @"JPEGLength", v63);

          int v64 = NSNumber;
          uint64_t v65 = sub_1DDAD6FB0((uint64_t)v46);
          uint64_t v69 = objc_msgSend_numberWithInt_(v64, v66, v65, v67, v68);
          objc_msgSend_setObject_forKeyedSubscript_(v47, v70, (uint64_t)v69, @"Width", v71);

          uint64_t v72 = NSNumber;
          unint64_t v73 = sub_1DDAD6FB0((uint64_t)v46);
          uint64_t v77 = objc_msgSend_numberWithInt_(v72, v74, HIDWORD(v73), v75, v76);
          objc_msgSend_setObject_forKeyedSubscript_(v47, v78, (uint64_t)v77, @"Height", v79);

          uint64_t v83 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v80, v46[4], v81, v82);
          objc_msgSend_setObject_forKeyedSubscript_(v47, v84, (uint64_t)v83, @"Orientation", v85);

          if ((objc_msgSend_containsObject_(v36, v86, (uint64_t)v47, v87, v88) & 1) == 0) {
            objc_msgSend_addObject_(v36, v89, (uint64_t)v47, v90, v91);
          }

          if (!v40) {
            goto LABEL_24;
          }
          sub_1DDA18310(v40);
LABEL_23:
          sub_1DDA18310(v40);
          goto LABEL_24;
        }
LABEL_25:
        CGImageSourceAddProperty();
      }
      uint64_t v256 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v32, v33, v34, v35);
      uint64_t v95 = objc_msgSend_numberWithInt_(NSNumber, v92, v268, v93, v94);
      objc_msgSend_setObject_forKeyedSubscript_(v256, v96, (uint64_t)v95, @"Width", v97);

      uint64_t v101 = objc_msgSend_numberWithInt_(NSNumber, v98, v266, v99, v100);
      objc_msgSend_setObject_forKeyedSubscript_(v256, v102, (uint64_t)v101, @"Height", v103);

      objc_msgSend_setObject_forKeyedSubscript_(v256, v104, @"kCGColorSpaceDisplayP3", @"NamedColorSpace", v105);
      uint64_t v252 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v106, v107, v108, v109);
      uint64_t v113 = (*(void (**)(uint64_t))(*(void *)v287 + 24))(v287);
      if (v113) {
        objc_msgSend_addObjectsFromArray_(v252, v110, (uint64_t)v113, v111, v112);
      }

      uint64_t v118 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v114, v115, v116, v117);
      uint64_t v265 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v119, v120, v121, v122);
      uint64_t v127 = *(void *)buf;
      v261 = v284;
      if (*(std::__shared_weak_count **)buf != v284)
      {
        uint64_t v255 = v270;
        uint64_t v128 = MEMORY[0x1E4F1CC38];
        do
        {
          long long v129 = *(const void **)v127;
          long long v130 = *(std::__shared_weak_count **)(v127 + 8);
          uint64_t v262 = v127;
          if (v130) {
            atomic_fetch_add_explicit(&v130->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          uint64_t v263 = v130;
          if (v129
            && (long long v131 = __dynamic_cast(v129, (const struct __class_type_info *)&unk_1F3969080, (const struct __class_type_info *)&unk_1F39690E8, 0)) != 0)
          {
            uint64_t v132 = (uint64_t)v131;
            if (v263) {
              atomic_fetch_add_explicit(&v263->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            unsigned int v282 = 0;
            unsigned int v282 = (*(uint64_t (**)(void *))(*(void *)v131 + 16))(v131);
            if (v282 != v255)
            {
              sub_1DDA1B2DC(&v280, &v282);
              sub_1DDA1A94C((uint64_t *)v281, (uint64_t *)&v291, (uint64_t)&v280, 0);
              unint64_t v133 = (void *)MEMORY[0x1E4F1CA58];
              uint64_t v134 = (*(uint64_t (**)(uint64_t))(*(void *)v132 + 24))(v132);
              uint64_t v138 = objc_msgSend_dataWithLength_(v133, v135, v134, v136, v137);
              uint64_t v139 = v291;
              int data = v138;
              uint64_t v144 = objc_msgSend_mutableBytes(data, v140, v141, v142, v143);
              uint64_t v149 = objc_msgSend_length(data, v145, v146, v147, v148);
              sub_1DDA19DD0(v139, v144, v149);
              uint64_t v150 = CGImageSourceCreateWithData(data, 0);
              if (v150)
              {
                cf = v150;
                CFDictionaryRef v151 = CGImageSourceCopyProperties(v150, 0);
                id v278 = 0u;
                int v279 = 0u;
                id v276 = 0u;
                unsigned int v277 = 0u;
                uint64_t v259 = v151;
                objc_msgSend_valueForKeyPath_(v151, v152, @"{FileContents}.Images", v153, v154);
                obuint64_t j = (id)objc_claimAutoreleasedReturnValue();
                uint64_t v156 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v155, (uint64_t)&v276, (uint64_t)v297, 16);
                if (v156)
                {
                  v267 = *(void *)v277;
                  do
                  {
                    uint64_t v269 = v156;
                    for (uint64_t i = 0; i != v269; ++i)
                    {
                      if (*(void *)v277 != v267) {
                        objc_enumerationMutation(obj);
                      }
                      uint64_t v162 = objc_msgSend_mutableCopy(*(void **)(*((void *)&v276 + 1) + 8 * i), v157, v158, v159, v160);
                      objc_msgSend_removeObjectForKey_(v162, v163, @"ThumbnailImages", v164, v165);
                      uint64_t v169 = objc_msgSend_objectForKeyedSubscript_(v162, v166, @"AuxiliaryData", v167, v168);
                      int v271 = objc_msgSend_mutableCopy(v169, v170, v171, v172, v173);

                      objc_opt_class();
                      if (objc_opt_isKindOfClass())
                      {
                        uint64_t v274 = 0u;
                        uint64_t v275 = 0u;
                        v272 = 0u;
                        uint64_t v273 = 0u;
                        id v174 = v271;
                        uint64_t v180 = objc_msgSend_countByEnumeratingWithState_objects_count_(v174, v175, (uint64_t)&v272, (uint64_t)v296, 16);
                        if (v180)
                        {
                          uint64_t v181 = *(void *)v273;
                          do
                          {
                            for (uint64_t j = 0; j != v180; ++j)
                            {
                              if (*(void *)v273 != v181) {
                                objc_enumerationMutation(v174);
                              }
                              uint64_t v183 = objc_msgSend_mutableCopy(*(void **)(*((void *)&v272 + 1) + 8 * j), v176, v177, v178, v179);
                              objc_msgSend_setObject_forKeyedSubscript_(v183, v184, v128, @"embeddedInThumbnail", v185);
                              if ((objc_msgSend_containsObject_(v118, v186, (uint64_t)v183, v187, v188) & 1) == 0) {
                                objc_msgSend_addObject_(v118, v189, (uint64_t)v183, v190, v191);
                              }
                            }
                            uint64_t v180 = objc_msgSend_countByEnumeratingWithState_objects_count_(v174, v176, (uint64_t)&v272, (uint64_t)v296, 16);
                          }
                          while (v180);
                        }

                        objc_msgSend_removeObjectForKey_(v162, v192, @"AuxiliaryData", v193, v194);
                      }

                      if (objc_msgSend_count(v162, v195, v196, v197, v198)
                        && (objc_msgSend_containsObject_(v265, v199, (uint64_t)v162, v200, v201) & 1) == 0)
                      {
                        objc_msgSend_addObject_(v265, v202, (uint64_t)v162, v203, v204);
                      }
                    }
                    uint64_t v156 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v157, (uint64_t)&v276, (uint64_t)v297, 16);
                  }
                  while (v156);
                }

                CFRelease(cf);
              }
              else
              {
                v294[0] = @"Width";
                uint64_t v206 = NSNumber;
                uint64_t v207 = sub_1DDAD6FB0(v132);
                std::string::value_type v211 = objc_msgSend_numberWithInt_(v206, v208, v207, v209, v210);
                v294[1] = @"Height";
                v295[0] = v211;
                v212 = NSNumber;
                unint64_t v213 = sub_1DDAD6FB0(v132);
                unsigned int v217 = objc_msgSend_numberWithInt_(v212, v214, HIDWORD(v213), v215, v216);
                v295[1] = v217;
                uint64_t v259 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v218, (uint64_t)v295, (uint64_t)v294, 2);

                if ((objc_msgSend_containsObject_(v265, v219, (uint64_t)v259, v220, v221) & 1) == 0) {
                  objc_msgSend_addObject_(v265, v222, (uint64_t)v259, v223, v224);
                }
              }

              sub_1DDA1AA18((uint64_t *)v281);
            }
            uint64_t v205 = v263;
            if (!v263) {
              goto LABEL_68;
            }
            sub_1DDA18310(v263);
          }
          else
          {
            uint64_t v205 = v263;
            if (!v263) {
              goto LABEL_68;
            }
          }
          sub_1DDA18310(v205);
LABEL_68:
          uint64_t v127 = v262 + 16;
        }
        while ((std::__shared_weak_count *)(v262 + 16) != v261);
      }
      if (objc_msgSend_count(v265, v123, v124, v125, v126)) {
        objc_msgSend_setObject_forKeyedSubscript_(v256, v225, (uint64_t)v265, @"ThumbnailImages", v228);
      }
      if (objc_msgSend_count(v118, v225, v226, v227, v228)) {
        objc_msgSend_addObjectsFromArray_(v252, v229, (uint64_t)v118, v231, v232);
      }
      if (objc_msgSend_count(v252, v229, v230, v231, v232))
      {
        uint64_t v236 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1C978], v233, (uint64_t)v252, v234, v235);
        objc_msgSend_setObject_forKeyedSubscript_(v256, v237, (uint64_t)v236, @"AuxiliaryData", v238);
      }
      uint64_t v293 = v256;
      v239 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v233, (uint64_t)&v293, 1, v235);
      v240 = NSNumber;
      uint64_t v245 = objc_msgSend_count(v239, v241, v242, v243, v244);
      objc_msgSend_numberWithUnsignedInteger_(v240, v246, v245, v247, v248);
      CGImageSourceAddProperty();
      CGImageSourceAddProperty();

      v281[0] = (void **)buf;
      sub_1DDA18270(v281);
    }
    if (v288) {
      sub_1DDA18310(v288);
    }
  }
  if (v290) {
    sub_1DDA18310(v290);
  }
  if (*((void *)&v291 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v291 + 1));
  }

  v254[2](v254);
}

void sub_1DDA813E0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void **a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,std::__shared_weak_count *a60,uint64_t a61,std::__shared_weak_count *a62,uint64_t a63)
{
  if (a2)
  {

    a49 = (void **)&a53;
    sub_1DDA18270(&a49);

    if (a60) {
      sub_1DDA18310(a60);
    }
    if (a62) {
      sub_1DDA18310(a62);
    }
    if (a64) {
      sub_1DDA18310(a64);
    }

    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x1DDA81340);
  }
  _Unwind_Resume(a1);
}

void sub_1DDA816B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
}

void sub_1DDA816DC(uint64_t a1)
{
  uint64_t v2 = sub_1DDA83D7C();
  int v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CGImagePluginAddSourceProps", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

uint64_t sub_1DDA81764(os_signpost_id_t a1)
{
  uint64_t v2 = sub_1DDA83D7C();
  int v3 = v2;
  if (a1 + 1 >= 2 && os_signpost_enabled(v2))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CGImagePluginImageCount", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  void v6[2] = sub_1DDA81864;
  double v6[3] = &unk_1E6D04A58;
  v6[4] = a1;
  os_signpost_id_t v4 = (void (**)(void))MEMORY[0x1E01C46E0](v6);
  v4[2]();

  return 1;
}

void sub_1DDA81854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA81864(uint64_t a1)
{
  uint64_t v2 = sub_1DDA83D7C();
  int v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CGImagePluginImageCount", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

BOOL sub_1DDA818EC(void *a1, void *a2)
{
  os_signpost_id_t v4 = sub_1DDA83D7C();
  uint64_t v5 = v4;
  if ((unint64_t)a1 + 1 >= 2 && os_signpost_enabled(v4))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v5, OS_SIGNPOST_INTERVAL_BEGIN, (os_signpost_id_t)a1, "CGImagePluginCompareOptionsRaw", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v93[0] = MEMORY[0x1E4F143A8];
  v93[1] = 3221225472;
  v93[2] = sub_1DDA82170;
  v93[3] = &unk_1E6D04A58;
  v93[4] = a1;
  uint64_t v6 = (void (**)(void))MEMORY[0x1E01C46E0](v93);
  id v7 = a1;
  id v8 = a2;
  if (v7 == v8)
  {
    BOOL v20 = 1;
    goto LABEL_75;
  }
  uint64_t v80 = v6;
  BOOL v9 = sub_1DDA2E4E0(v7, off_1EAB8AEB8);
  BOOL v10 = sub_1DDA2E4E0(v7, off_1EAB8AEC0);
  BOOL v11 = sub_1DDA2E4E0(v8, off_1EAB8AEB8);
  BOOL v15 = sub_1DDA2E4E0(v8, off_1EAB8AEC0);
  int v16 = 0;
  int v17 = !v10;
  if (v9 && (v17 & 1) == 0) {
    int v16 = sub_1DDA2E20C(v7, (const char *)off_1EAB8AEC0, v12, v13, v14);
  }
  if (v9 && !v10) {
    int v16 = sub_1DDA2E20C(v7, (const char *)off_1EAB8AEB8, v12, v13, v14);
  }
  if (((v9 | v17) & 1) == 0) {
    int v16 = sub_1DDA2E20C(v7, (const char *)off_1EAB8AEC0, v12, v13, v14);
  }
  int v18 = 0;
  int v19 = !v15;
  if (v11 && (v19 & 1) == 0) {
    int v18 = sub_1DDA2E20C(v8, (const char *)off_1EAB8AEC0, v12, v13, v14);
  }
  if (v11 && !v15) {
    int v18 = sub_1DDA2E20C(v8, (const char *)off_1EAB8AEB8, v12, v13, v14);
  }
  if (((v11 | v19) & 1) == 0) {
    int v18 = sub_1DDA2E20C(v8, (const char *)off_1EAB8AEC0, v12, v13, v14);
  }
  if (v16 != v18)
  {
    BOOL v20 = 0;
    uint64_t v6 = v80;
    goto LABEL_75;
  }
  if (!sub_1DDA821F8(v7, v8, @"kCGImageSourceAltMode", 1)
    || !sub_1DDA821F8(v7, v8, (void *)*MEMORY[0x1E4F2FEC8], 1))
  {
    goto LABEL_74;
  }
  uint64_t v24 = *MEMORY[0x1E4F2FF20];
  uint64_t v25 = objc_msgSend_objectForKeyedSubscript_(v7, v21, *MEMORY[0x1E4F2FF20], v22, v23);
  int v26 = sub_1DDB10AF0(v25);
  unint64_t v30 = objc_msgSend_objectForKeyedSubscript_(v8, v27, v24, v28, v29);
  uint64_t v6 = v80;
  LODWORD(v24) = sub_1DDB10AF0(v30);

  if (v26 != v24)
  {
LABEL_44:
    BOOL v20 = 0;
    goto LABEL_75;
  }
  int v34 = sub_1DDA2E1C4(v7, (const char *)@"kCGImageSourceDisableVendorLensDistortionCorrection", v31, v32, v33);
  if (v34 != sub_1DDA2E1C4(v8, (const char *)@"kCGImageSourceDisableVendorLensDistortionCorrection", v35, v36, v37)|| (unint64_t v41 = (const char *)*MEMORY[0x1E4F2FF58], v42 = sub_1DDA2E1C4(v7, (const char *)*MEMORY[0x1E4F2FF58], v38, v39, v40), v43 = sub_1DDA3067C(v42), v47 = sub_1DDA2E1C4(v8, v41, v44, v45, v46), v43 != sub_1DDA3067C(v47)))
  {
LABEL_74:
    BOOL v20 = 0;
    uint64_t v6 = v80;
    goto LABEL_75;
  }
  uint64_t v51 = (const char *)*MEMORY[0x1E4F2FF38];
  uint64_t v6 = v80;
  uint64_t v52 = sub_1DDA2E474(v7, (const char *)*MEMORY[0x1E4F2FF38], v48, v49, v50);
  unint64_t v56 = v52;
  if (v52)
  {
    uint64_t v89 = 0;
    uint64_t v90 = 0;
    sub_1DDA4C3D4(v52, &v89, buf);
    if (v90) {
      sub_1DDA18310(v90);
    }
  }
  else
  {
    uint64_t v60 = sub_1DDA357A8(v7, v51, v53, v54, v55);
    uint64_t v87 = 0;
    uint64_t v88 = 0;
    sub_1DDA4C438(v60, &v87, buf);
    if (v88) {
      sub_1DDA18310(v88);
    }
  }
  unint64_t v61 = sub_1DDA2E474(v8, v51, v57, v58, v59);
  uint64_t v65 = v61;
  if (v61)
  {
    uint64_t v83 = 0;
    uint64_t v84 = 0;
    sub_1DDA4C3D4(v61, &v83, &v85);
    if (v84) {
      sub_1DDA18310(v84);
    }
  }
  else
  {
    uint64_t v66 = sub_1DDA357A8(v8, v51, v62, v63, v64);
    uint64_t v81 = 0;
    uint64_t v82 = 0;
    sub_1DDA4C438(v66, &v81, &v85);
    if (v82) {
      sub_1DDA18310(v82);
    }
  }
  int v67 = sub_1DDA4CBA0(*(uint64_t *)buf, &v85);
  if (v86) {
    sub_1DDA18310(v86);
  }

  if (v92) {
    sub_1DDA18310(v92);
  }

  if (v67) {
    goto LABEL_44;
  }
  uint64_t v68 = (void *)*MEMORY[0x1E4F2FED8];
  uint64_t v69 = sub_1DDA2E3A8(v7, (void *)*MEMORY[0x1E4F2FED8], 0);
  uint64_t v74 = sub_1DDA2E3A8(v8, v68, 0);
  if (v69 != v74 && (objc_msgSend_count(v69, v70, v71, v72, v73) || objc_msgSend_count(v74, v75, v76, v77, v78)))
  {
    if (sub_1DDA821F8(v69, v74, (void *)*MEMORY[0x1E4F2FEF0], 0)
      && sub_1DDA822C8(v69, v74, (void *)*MEMORY[0x1E4F2FEF8])
      && sub_1DDA822C8(v69, v74, (void *)*MEMORY[0x1E4F2FEE8])
      && sub_1DDA822C8(v69, v74, (void *)*MEMORY[0x1E4F2FEE0])
      && sub_1DDA821F8(v69, v74, (void *)*MEMORY[0x1E4F2FE08], 0)
      && sub_1DDA822C8(v69, v74, (void *)*MEMORY[0x1E4F2FE20]))
    {
      if (sub_1DDA822C8(v69, v74, (void *)*MEMORY[0x1E4F2FE10])
        && sub_1DDA822C8(v69, v74, (void *)*MEMORY[0x1E4F2FE18])
        && sub_1DDA822C8(v69, v74, (void *)*MEMORY[0x1E4F2FE00])
        && sub_1DDA821F8(v69, v74, (void *)*MEMORY[0x1E4F2FEB8], 0)
        && sub_1DDA823BC(v69, v74, off_1EAB8AEC8)
        && sub_1DDA822C8(v69, v74, off_1EAB8AED0)
        && sub_1DDA822C8(v69, v74, off_1EAB8AEF0)
        && sub_1DDA822C8(v69, v74, off_1EAB8AEF8)
        && sub_1DDA821F8(v69, v74, off_1EAB8AF00, 0)
        && sub_1DDA822C8(v69, v74, off_1EAB8AF08)
        && sub_1DDA822C8(v69, v74, off_1EAB8AF18)
        && sub_1DDA822C8(v69, v74, off_1EAB8AF20)
        && sub_1DDA822C8(v69, v74, off_1EAB8AF28)
        && sub_1DDA822C8(v69, v74, off_1EAB8AF30)
        && sub_1DDA822C8(v69, v74, off_1EAB8AF38))
      {
        uint64_t v6 = v80;
        BOOL v20 = sub_1DDA822C8(v69, v74, off_1EAB8AF40);
      }
      else
      {
        BOOL v20 = 0;
        uint64_t v6 = v80;
      }
    }
    else
    {
      BOOL v20 = 0;
    }
  }
  else
  {
    BOOL v20 = 1;
  }

LABEL_75:
  v6[2](v6);

  return v20;
}

void sub_1DDA82134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (**a9)(void), void *a10)
{
  a9[2]();
  _Unwind_Resume(a1);
}

void sub_1DDA82170(uint64_t a1)
{
  uint64_t v2 = sub_1DDA83D7C();
  int v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CGImagePluginCompareOptionsRaw", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

uint64_t sub_1DDA821F8(void *a1, void *a2, void *a3, char a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  BOOL v10 = sub_1DDA2E4E0(v7, v9);
  if (v10 ^ sub_1DDA2E4E0(v8, v9)) != 1 || (a4)
  {
    int v15 = sub_1DDA2E20C(v7, (const char *)v9, v11, v12, v13);
    uint64_t v14 = v15 ^ sub_1DDA2E20C(v8, (const char *)v9, v16, v17, v18) ^ 1;
  }
  else
  {
    uint64_t v14 = 0;
  }

  return v14;
}

void sub_1DDA822B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA822C8(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  BOOL v8 = sub_1DDA2E4E0(v5, v7);
  if (v8 == sub_1DDA2E4E0(v6, v7))
  {
    double v13 = sub_1DDA83A30(v5, (const char *)v7, v9, v10, v11);
    double v17 = sub_1DDA83A30(v6, (const char *)v7, v14, v15, v16);
    BOOL v12 = vabdd_f64(v13, v17) / fmax(fabs(v13), fmax(fabs(v17), 0.001)) < 0.0000001;
  }
  else
  {
    BOOL v12 = 0;
  }

  return v12;
}

void sub_1DDA8239C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA823BC(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v10 = sub_1DDA83A80(a1, v6, v7, v8, v9);
  uint64_t v14 = sub_1DDA83A80(v5, v6, v11, v12, v13);
  int v19 = (void *)v14;
  if (v10 == (void *)v14)
  {
    BOOL v20 = 1;
  }
  else
  {
    BOOL v20 = 0;
    if (v10 && v14)
    {
      uint64_t v21 = objc_msgSend_count(v10, v15, v16, v17, v18);
      if (v21 == objc_msgSend_count(v19, v22, v23, v24, v25))
      {
        unint64_t v30 = 0;
        do
        {
          unint64_t v31 = objc_msgSend_count(v10, v26, v27, v28, v29);
          BOOL v20 = v30 >= v31;
          if (v30 >= v31) {
            break;
          }
          uint64_t v35 = objc_msgSend_objectAtIndexedSubscript_(v10, v32, v30, v33, v34);
          objc_msgSend_doubleValue(v35, v36, v37, v38, v39);
          double v41 = v40;

          uint64_t v45 = objc_msgSend_objectAtIndexedSubscript_(v19, v42, v30, v43, v44);
          objc_msgSend_doubleValue(v45, v46, v47, v48, v49);
          double v51 = v50;

          ++v30;
        }
        while (vabdd_f64(v41, v51) / fmax(fabs(v41), fmax(fabs(v51), 0.001)) <= 0.0000001);
      }
      else
      {
        BOOL v20 = 0;
      }
    }
  }

  return v20;
}

void sub_1DDA82520(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA82568(os_signpost_id_t a1, unint64_t a2, unint64_t a3, void *a4)
{
  unint64_t v16 = a3;
  unint64_t v17 = a2;
  id v5 = a4;
  id v6 = sub_1DDA83D7C();
  uint64_t v7 = v6;
  if (a1 + 1 >= 2 && os_signpost_enabled(v6))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v7, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CGImagePluginInitThumbnail", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  void v15[2] = sub_1DDA82750;
  void v15[3] = &unk_1E6D04A58;
  v15[4] = a1;
  uint64_t v8 = (void (**)(void))MEMORY[0x1E01C46E0](v15);
  sub_1DDA18500(&v12, &v17);
  sub_1DDA18500(&v11, &v16);
  sub_1DDA76EEC(a1, &v12, &v11, v5, buf);
  if (*(void *)buf) {
    uint64_t v9 = (*(uint64_t (**)(void))(**(void **)buf + 8))(*(void *)buf);
  }
  else {
    uint64_t v9 = 0;
  }
  if (v14) {
    sub_1DDA18310(v14);
  }
  v8[2](v8);

  return v9;
}

void sub_1DDA826E8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1DDA18310(a12);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DDA8266CLL);
}

void sub_1DDA82734()
{
  (*(void (**)(uint64_t))(v0 + 16))(v0);
  JUMPOUT(0x1DDA82700);
}

void sub_1DDA82750(uint64_t a1)
{
  uint64_t v2 = sub_1DDA83D7C();
  int v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)id v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CGImagePluginInitThumbnail", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

id sub_1DDA827D8(os_signpost_id_t a1, unint64_t a2, void *a3, void *a4)
{
  unint64_t v19 = a2;
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = sub_1DDA83D7C();
  uint64_t v9 = v8;
  if (a1 + 1 >= 2 && os_signpost_enabled(v8))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v9, OS_SIGNPOST_INTERVAL_BEGIN, a1, "CGImagePluginCopyAuxiliaryDataInfo", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  double v18[2] = sub_1DDA829F0;
  void v18[3] = &unk_1E6D04A58;
  v18[4] = a1;
  uint64_t v10 = (void (**)(void))MEMORY[0x1E01C46E0](v18);
  sub_1DDA18500(&v15, &v19);
  unsigned int v13 = 0;
  sub_1DDA1B3CC(&v14, &v13);
  sub_1DDA76E68(a1, &v15, &v14, v7, buf);
  if (*(void *)buf)
  {
    unsigned int v11 = (*(void (**)(void, id))(**(void **)buf + 16))(*(void *)buf, v6);
  }
  else
  {
    unsigned int v11 = 0;
  }
  if (v17) {
    sub_1DDA18310(v17);
  }
  v10[2](v10);

  return v11;
}

void sub_1DDA82984(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1DDA18310(a12);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DDA828F4);
}

void sub_1DDA829D4()
{
  (*(void (**)(uint64_t))(v0 + 16))(v0);
  JUMPOUT(0x1DDA8299CLL);
}

void sub_1DDA829F0(uint64_t a1)
{
  uint64_t v2 = sub_1DDA83D7C();
  int v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)id v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "CGImagePluginCopyAuxiliaryDataInfo", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

void *CopyRawPluginsInfoArray(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = objc_msgSend_array(MEMORY[0x1E4F1CA48], a2, a3, a4, a5);
  uint64_t v10 = sub_1DDA75B9C((uint64_t)v5, v6, v7, v8, v9);
  objc_msgSend_addObjectsFromArray_(v5, v11, (uint64_t)v10, v12, v13);

  unint64_t v19 = sub_1DDA8F5C4(v14, v15, v16, v17, v18);
  objc_msgSend_addObjectsFromArray_(v5, v20, (uint64_t)v19, v21, v22);

  uint64_t v28 = sub_1DDA4EC64(v23, v24, v25, v26, v27);
  objc_msgSend_addObjectsFromArray_(v5, v29, (uint64_t)v28, v30, v31);

  uint64_t v37 = sub_1DDA5EFF8(v32, v33, v34, v35, v36);
  objc_msgSend_addObjectsFromArray_(v5, v38, (uint64_t)v37, v39, v40);

  uint64_t v46 = sub_1DDA8C6B8(v41, v42, v43, v44, v45);
  objc_msgSend_addObjectsFromArray_(v5, v47, (uint64_t)v46, v48, v49);

  uint64_t v55 = sub_1DDAA1EB4(v50, v51, v52, v53, v54);
  objc_msgSend_addObjectsFromArray_(v5, v56, (uint64_t)v55, v57, v58);

  uint64_t v64 = sub_1DDAA38BC(v59, v60, v61, v62, v63);
  objc_msgSend_addObjectsFromArray_(v5, v65, (uint64_t)v64, v66, v67);

  uint64_t v73 = sub_1DDB3ACE0(v68, v69, v70, v71, v72);
  objc_msgSend_addObjectsFromArray_(v5, v74, (uint64_t)v73, v75, v76);

  uint64_t v82 = sub_1DDA8A48C(v77, v78, v79, v80, v81);
  objc_msgSend_addObjectsFromArray_(v5, v83, (uint64_t)v82, v84, v85);

  uint64_t v91 = sub_1DDB5B96C(v86, v87, v88, v89, v90);
  objc_msgSend_addObjectsFromArray_(v5, v92, (uint64_t)v91, v93, v94);

  uint64_t v100 = sub_1DDA89A34(v95, v96, v97, v98, v99);
  objc_msgSend_addObjectsFromArray_(v5, v101, (uint64_t)v100, v102, v103);

  uint64_t v109 = sub_1DDAD9B4C(v104, v105, v106, v107, v108);
  objc_msgSend_addObjectsFromArray_(v5, v110, (uint64_t)v109, v111, v112);

  uint64_t v118 = sub_1DDA83EFC(v113, v114, v115, v116, v117);
  objc_msgSend_addObjectsFromArray_(v5, v119, (uint64_t)v118, v120, v121);

  uint64_t v127 = sub_1DDB17D88(v122, v123, v124, v125, v126);
  objc_msgSend_addObjectsFromArray_(v5, v128, (uint64_t)v127, v129, v130);

  uint64_t v136 = sub_1DDAAD8D0(v131, v132, v133, v134, v135);
  objc_msgSend_addObjectsFromArray_(v5, v137, (uint64_t)v136, v138, v139);

  uint64_t v145 = sub_1DDA7CDD8(v140, v141, v142, v143, v144);
  objc_msgSend_addObjectsFromArray_(v5, v146, (uint64_t)v145, v147, v148);

  uint64_t v154 = sub_1DDA70E80(v149, v150, v151, v152, v153);
  objc_msgSend_addObjectsFromArray_(v5, v155, (uint64_t)v154, v156, v157);

  uint64_t v163 = sub_1DDA59248(v158, v159, v160, v161, v162);
  objc_msgSend_addObjectsFromArray_(v5, v164, (uint64_t)v163, v165, v166);

  uint64_t v172 = sub_1DDA521D0(v167, v168, v169, v170, v171);
  objc_msgSend_addObjectsFromArray_(v5, v173, (uint64_t)v172, v174, v175);

  uint64_t v181 = sub_1DDA58A44(v176, v177, v178, v179, v180);
  objc_msgSend_addObjectsFromArray_(v5, v182, (uint64_t)v181, v183, v184);

  uint64_t v190 = sub_1DDA57BC4(v185, v186, v187, v188, v189);
  objc_msgSend_addObjectsFromArray_(v5, v191, (uint64_t)v190, v192, v193);

  uint64_t v199 = sub_1DDA5391C(v194, v195, v196, v197, v198);
  objc_msgSend_addObjectsFromArray_(v5, v200, (uint64_t)v199, v201, v202);

  unsigned int v208 = sub_1DDBF2130(v203, v204, v205, v206, v207);
  objc_msgSend_addObjectsFromArray_(v5, v209, (uint64_t)v208, v210, v211);

  return v5;
}

void sub_1DDA82D30(void *a1)
{
  int v3 = v2;

  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DDA82D20);
}

CFArrayRef RCCopyMethodsArrayForIdentifier(os_signpost_id_t a1)
{
  uint64_t v2 = sub_1DDA83D7C();
  int v3 = v2;
  if (a1 + 1 >= 2 && os_signpost_enabled(v2))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_BEGIN, a1, "RCCopyMethodsArrayForIdentifier", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  void v7[2] = sub_1DDA82EF4;
  void v7[3] = &unk_1E6D04A58;
  v7[4] = a1;
  os_signpost_id_t v4 = (void (**)(void))MEMORY[0x1E01C46E0](v7);
  CFArrayRef v5 = CFArrayCreate(0, 0, 0, 0);
  v4[2](v4);

  return v5;
}

void sub_1DDA82EC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA82EF4(uint64_t a1)
{
  uint64_t v2 = sub_1DDA83D7C();
  int v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)CFArrayRef v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RCCopyMethodsArrayForIdentifier", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

uint64_t RCCreateCIImageFromBufferAndProperties(__CVBuffer *a1, void *a2)
{
  os_signpost_id_t v4 = sub_1DDA83D7C();
  CFArrayRef v5 = v4;
  if ((unint64_t)a1 + 1 >= 2 && os_signpost_enabled(v4))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v5, OS_SIGNPOST_INTERVAL_BEGIN, (os_signpost_id_t)a1, "RCCreateCIImageFromBufferAndProperties", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  uint64_t v9[2] = sub_1DDA830BC;
  v9[3] = &unk_1E6D04A58;
  void v9[4] = a1;
  id v6 = (void (**)(void))MEMORY[0x1E01C46E0](v9);
  uint64_t v7 = RCCreateCIImageFromBufferAndPropertiesV2(a1, a2, 1u);
  v6[2](v6);

  return v7;
}

void sub_1DDA83090(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA830BC(uint64_t a1)
{
  uint64_t v2 = sub_1DDA83D7C();
  int v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)CFArrayRef v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RCCreateCIImageFromBufferAndProperties", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

uint64_t RCCreateCIImageFromBufferAndPropertiesV2(__CVBuffer *a1, void *a2, unsigned __int8 a3)
{
  v81[2] = *MEMORY[0x1E4F143B8];
  CVPixelBufferRef v80 = a1;
  unsigned __int8 v79 = a3;
  CFArrayRef v5 = sub_1DDA83D7C();
  id v6 = v5;
  if ((unint64_t)a1 + 1 >= 2 && os_signpost_enabled(v5))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v6, OS_SIGNPOST_INTERVAL_BEGIN, (os_signpost_id_t)a1, "RCCreateCIImageFromBufferAndProperties", (const char *)&unk_1DDC3ACB6, buf, 2u);
  }

  v78[0] = MEMORY[0x1E4F143A8];
  v78[1] = 3221225472;
  v78[2] = sub_1DDA839A8;
  v78[3] = &unk_1E6D04A58;
  v78[4] = a1;
  uint64_t v7 = (void (**)(void))MEMORY[0x1E01C46E0](v78);
  uint64_t v8 = (void *)MEMORY[0x1E01C4510]();
  sub_1DDADE100();
  if (!v80 || !a2)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t PixelFormatType = CVPixelBufferGetPixelFormatType(v80);
  uint64_t v13 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v10, PixelFormatType, v11, v12);
  char v17 = objc_msgSend_containsObject_(&unk_1F39AC128, v14, (uint64_t)v13, v15, v16);

  if ((v17 & 1) == 0)
  {
    uint64_t v62 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v62, "RawCameraException");
    __cxa_throw(v62, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  id v18 = a2;
  uint64_t v22 = objc_msgSend_objectForKeyedSubscript_(v18, v19, @"{Exif}", v20, v21);
  BOOL v23 = v22 == 0;

  if (v23
    || (objc_msgSend_objectForKeyedSubscript_(v18, v24, @"{DNG}", v25, v26),
        uint64_t v27 = objc_claimAutoreleasedReturnValue(),
        BOOL v28 = v27 == 0,
        v27,
        v28))
  {
    uint64_t v63 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v63, "RawCameraException");
    __cxa_throw(v63, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v77 = objc_msgSend_mutableCopy(v18, v29, v30, v31, v32);
  sub_1DDA83AEC(&v80, &v77, &v79, buf);
  (*(void (**)(void))(**(void **)buf + 168))(*(void *)buf);
  uint64_t v71 = *(void **)buf;
  uint64_t v72 = v76;
  if (v76) {
    atomic_fetch_add_explicit(&v76->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1DDA4C7FC(0, &v69);
  sub_1DDA2BCB0(&v71, &v69, &v73);
  if (v70) {
    sub_1DDA18310(v70);
  }
  if (v72) {
    sub_1DDA18310(v72);
  }
  uint64_t v33 = v73;
  if (!v73)
  {
    uint64_t v64 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v64, "RawCameraException");
    __cxa_throw(v64, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if ((*(unsigned int (**)(void *))(*v73 + 2152))(v73)) {
    int v34 = 1;
  }
  else {
    int v34 = 3;
  }
  sub_1DDA2E254(v33, v34);
  sub_1DDA2E3A0((uint64_t)v73, 1);
  uint64_t v35 = (std::__shared_weak_count *)(*(uint64_t (**)(void *))(*v73 + 408))(v73);
  uint64_t v71 = 0;
  uint64_t v72 = v35;
  uint64_t v69 = (*(uint64_t (**)(void))(*v73 + 432))();
  uint64_t v70 = v36;
  v68[0] = 0;
  v68[1] = v36;
  uint64_t v37 = (*(uint64_t (**)(void *))(*v73 + 456))(v73);
  uint64_t v39 = v38;
  double v40 = (*(double (**)(void *))(*v73 + 2640))(v73);
  double v41 = (*(double (**)(void *))(*v73 + 2648))(v73);
  uint64_t v66 = v37;
  LODWORD(v67) = (int)((double)(int)v39 / v40);
  HIDWORD(v67) = (int)((double)SHIDWORD(v39) / v41);
  if (!sub_1DDB56B24((int *)&v69, (int *)&v71))
  {
    uint64_t v65 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v65, "RawCameraException");
    goto LABEL_32;
  }
  if (!sub_1DDB56B24((int *)&v66, (int *)v68))
  {
    uint64_t v65 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v65, "RawCameraException");
LABEL_32:
    __cxa_throw(v65, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  unsigned int v42 = v73;
  uint64_t v43 = sub_1DDA2E598((uint64_t)v73);
  (*(void (**)(void *, uint64_t, void *))(*v42 + 2728))(v42, v43, v77);
  uint64_t v47 = objc_msgSend_numberWithInt_(NSNumber, v44, v70, v45, v46, v66, v67);
  objc_msgSend_setObject_forKeyedSubscript_(v77, v48, (uint64_t)v47, @"PixelWidth", v49);

  uint64_t v53 = objc_msgSend_numberWithInt_(NSNumber, v50, HIDWORD(v70), v51, v52);
  objc_msgSend_setObject_forKeyedSubscript_(v77, v54, (uint64_t)v53, @"PixelHeight", v55);

  unint64_t v56 = sub_1DDACAB90(v73, 0);
  v81[0] = v56;
  v81[1] = v77;
  uint64_t v59 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v57, (uint64_t)v81, 2, v58);

  if (v74) {
    sub_1DDA18310(v74);
  }
  if (v76) {
    sub_1DDA18310(v76);
  }

  v7[2](v7);

  return v59;
}

void sub_1DDA83814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18, uint64_t a19, std::__shared_weak_count *a20,uint64_t a21,void *a22)
{
  if (a2)
  {

    if (a18) {
      sub_1DDA18310(a18);
    }
    if (a20) {
      sub_1DDA18310(a20);
    }

    __cxa_begin_catch(exception_object);
    __cxa_end_catch();
    JUMPOUT(0x1DDA835F8);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA839A8(uint64_t a1)
{
  uint64_t v2 = sub_1DDA83D7C();
  int v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)CFArrayRef v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1DDA14000, v3, OS_SIGNPOST_INTERVAL_END, v4, "RCCreateCIImageFromBufferAndProperties", (const char *)&unk_1DDC3ACB6, v5, 2u);
  }
}

double sub_1DDA83A30(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CFArrayRef v5 = sub_1DDA357A8(a1, a2, a3, a4, a5);
  objc_msgSend_doubleValue(v5, v6, v7, v8, v9);
  double v11 = v10;

  return v11;
}

void sub_1DDA83A70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA83A80(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CFArrayRef v5 = objc_msgSend_objectForKeyedSubscript_(a1, a2, (uint64_t)a2, a4, a5);
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v6 = v5;
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;

  return v7;
}

void sub_1DDA83ADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA83AEC(void *a1@<X1>, void *a2@<X2>, unsigned __int8 *a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = operator new(0x9F0uLL);
  sub_1DDA83B78(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;

  sub_1DDA1AF34((uint64_t)a4, v8 + 4, (uint64_t)(v8 + 3));
}

void sub_1DDA83B64(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA83B78(void *a1, void *a2, void *a3, unsigned __int8 *a4)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F39601F0;
  sub_1DDAE6828(a1 + 3, *a2, *a3, *a4);
  return a1;
}

void sub_1DDA83BCC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA83BE0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F39601F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA83C00(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F39601F0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA83C54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

id sub_1DDA83C7C()
{
  p_cache = DMKernels.cache;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EBA50700, memory_order_acquire) & 1) == 0)
  {
    int v3 = __cxa_guard_acquire(&qword_1EBA50700);
    p_cache = (void **)(DMKernels + 16);
    if (v3)
    {
      qword_1EBA506F8 = (uint64_t)os_log_create("com.apple.rawcamera", "parse");
      __cxa_guard_release(&qword_1EBA50700);
      p_cache = (void **)(DMKernels + 16);
    }
  }
  int v1 = p_cache[223];

  return v1;
}

id sub_1DDA83CFC()
{
  uint64_t v0 = &unk_1EAB8B000;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EAB8B160, memory_order_acquire) & 1) == 0)
  {
    int v3 = __cxa_guard_acquire(&qword_1EAB8B160);
    uint64_t v0 = (void *)&unk_1EAB8B000;
    if (v3)
    {
      qword_1EAB8B158 = (uint64_t)os_log_create("com.apple.rawcamera", "unpack");
      __cxa_guard_release(&qword_1EAB8B160);
      uint64_t v0 = (void *)&unk_1EAB8B000;
    }
  }
  int v1 = (void *)v0[43];

  return v1;
}

id sub_1DDA83D7C()
{
  uint64_t v0 = &unk_1EAB8B000;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EAB8B170, memory_order_acquire) & 1) == 0)
  {
    int v3 = __cxa_guard_acquire(&qword_1EAB8B170);
    uint64_t v0 = (void *)&unk_1EAB8B000;
    if (v3)
    {
      qword_1EAB8B168 = (uint64_t)os_log_create("com.apple.rawcamera", "plugin");
      __cxa_guard_release(&qword_1EAB8B170);
      uint64_t v0 = (void *)&unk_1EAB8B000;
    }
  }
  int v1 = (void *)v0[45];

  return v1;
}

id sub_1DDA83DFC()
{
  uint64_t v0 = &unk_1EAB8B000;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EAB8B180, memory_order_acquire) & 1) == 0)
  {
    int v3 = __cxa_guard_acquire(&qword_1EAB8B180);
    uint64_t v0 = (void *)&unk_1EAB8B000;
    if (v3)
    {
      qword_1EAB8B178 = (uint64_t)os_log_create("com.apple.rawcamera", "render");
      __cxa_guard_release(&qword_1EAB8B180);
      uint64_t v0 = (void *)&unk_1EAB8B000;
    }
  }
  int v1 = (void *)v0[47];

  return v1;
}

id sub_1DDA83E7C()
{
  uint64_t v0 = &unk_1EAB8B000;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EAB8B190, memory_order_acquire) & 1) == 0)
  {
    int v3 = __cxa_guard_acquire(&qword_1EAB8B190);
    uint64_t v0 = (void *)&unk_1EAB8B000;
    if (v3)
    {
      qword_1EAB8B188 = (uint64_t)os_log_create("com.apple.rawcamera", "cifilter");
      __cxa_guard_release(&qword_1EAB8B190);
      uint64_t v0 = (void *)&unk_1EAB8B000;
    }
  }
  int v1 = (void *)v0[49];

  return v1;
}

id sub_1DDA83EFC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v94[2] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = *MEMORY[0x1E4F30058];
  v77[0] = *MEMORY[0x1E4F30038];
  uint64_t v5 = v77[0];
  v77[1] = v6;
  v87[0] = MEMORY[0x1E4F1CC38];
  v87[1] = @"com.sony.arw-raw-image";
  uint64_t v8 = *MEMORY[0x1E4F30050];
  uint64_t v78 = *MEMORY[0x1E4F30018];
  uint64_t v7 = v78;
  uint64_t v79 = v8;
  v87[2] = @".arw.";
  v87[3] = &unk_1F39AE990;
  uint64_t v9 = *MEMORY[0x1E4F30040];
  v87[4] = &unk_1F39AE9A8;
  uint64_t v10 = *MEMORY[0x1E4F30048];
  uint64_t v80 = v9;
  uint64_t v81 = v10;
  uint64_t v88 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA15EC8, a4, a5);
  uint64_t v82 = *MEMORY[0x1E4F30000];
  uint64_t v65 = (void *)v88;
  uint64_t v64 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v11, (uint64_t)sub_1DDA84404, v12, v13);
  uint64_t v89 = v64;
  uint64_t v83 = *MEMORY[0x1E4F30020];
  uint64_t v66 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v14, (uint64_t)sub_1DDA84410, v15, v16);
  uint64_t v67 = v83;
  uint64_t v90 = v66;
  uint64_t v84 = *MEMORY[0x1E4F30008];
  uint64_t v17 = v84;
  objc_msgSend_numberWithUnsignedLong_(NSNumber, v18, (uint64_t)sub_1DDA818EC, v19, v20);
  v63 = uint64_t v68 = v82;
  uint64_t v91 = v63;
  uint64_t v85 = *MEMORY[0x1E4F30028];
  uint64_t v21 = v85;
  uint64_t v62 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v22, (uint64_t)sub_1DDA8441C, v23, v24);
  uint64_t v92 = v62;
  uint64_t v86 = *MEMORY[0x1E4F30030];
  uint64_t v25 = v86;
  uint64_t v61 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v26, (uint64_t)sub_1DDA84428, v27, v28);
  uint64_t v93 = v61;
  uint64_t v60 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v29, (uint64_t)v87, (uint64_t)v77, 11);
  v94[0] = v60;
  v69[0] = v5;
  v69[1] = v6;
  v70[0] = MEMORY[0x1E4F1CC38];
  v70[1] = @"com.sony.axr-raw-image";
  v69[2] = v7;
  v69[3] = v8;
  v70[2] = @".axr.";
  v70[3] = &unk_1F39AE990;
  v70[4] = &unk_1F39AE9A8;
  v69[4] = v9;
  v69[5] = v10;
  uint64_t v71 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v30, (uint64_t)sub_1DDA15EC8, v31, v32);
  v69[6] = v68;
  uint64_t v36 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v33, (uint64_t)sub_1DDA84404, v34, v35);
  uint64_t v72 = v36;
  v69[7] = v67;
  double v40 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v37, (uint64_t)sub_1DDA84410, v38, v39);
  uint64_t v73 = v40;
  v69[8] = v17;
  uint64_t v44 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v41, (uint64_t)sub_1DDA818EC, v42, v43);
  uint64_t v74 = v44;
  v69[9] = v21;
  uint64_t v48 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v45, (uint64_t)sub_1DDA8441C, v46, v47);
  uint64_t v75 = v48;
  v69[10] = v25;
  uint64_t v52 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v49, (uint64_t)sub_1DDA84428, v50, v51);
  uint64_t v76 = v52;
  uint64_t v53 = (void *)v71;
  uint64_t v55 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v54, (uint64_t)v70, (uint64_t)v69, 11);
  v94[1] = v55;
  uint64_t v58 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v56, (uint64_t)v94, 2, v57);

  return v58;
}

void sub_1DDA84330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1DDA84404(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA84410(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA8441C(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, &unk_1F3960230);
}

uint64_t sub_1DDA84428(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, &unk_1F3960230);
}

void sub_1DDA84434(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v11 = a2;
  id v10 = a3;
  id v9 = a4;
  sub_1DDA88BA4(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;
}

void sub_1DDA844B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA844D0(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  long long v8 = v4;
  if (v4) {
    uint64_t isEqualToString = objc_msgSend_isEqualToString_(v4, v5, (uint64_t)v3, v6, v7);
  }
  else {
    uint64_t isEqualToString = 0;
  }

  return isEqualToString;
}

void sub_1DDA84530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_1DDA84544(uint64_t a1, void *a2, char a3, void *a4, void *a5)
{
  sub_1DDA3F2B0(a1, a2, a3, a4, a5);
  *(void *)uint64_t v5 = &unk_1F3960260;
  *(void *)(v5 + 1184) = 0;
  double result = 0.0;
  *(_OWORD *)(v5 + 1200) = 0u;
  *(void *)(v5 + 1192) = v5 + 1200;
  *(_OWORD *)(v5 + 1224) = 0u;
  *(void *)(v5 + 1216) = v5 + 1224;
  *(_OWORD *)(v5 + 1248) = 0u;
  *(void *)(v5 + 1240) = v5 + 1248;
  *(void *)(v5 + 1264) = 0;
  *(_WORD *)(v5 + 1272) = 0;
  *(unsigned char *)(v5 + 1400) = 0;
  *(unsigned char *)(v5 + 1408) = 0;
  *(unsigned char *)(v5 + 1424) = 0;
  *(unsigned char *)(v5 + 1432) = 0;
  *(unsigned char *)(v5 + 1440) = 0;
  *(unsigned char *)(v5 + 1444) = 0;
  *(unsigned char *)(v5 + 1452) = 0;
  *(_OWORD *)(v5 + 1280) = 0u;
  *(_WORD *)(v5 + 1304) = 0;
  *(void *)(v5 + 1296) = 0;
  *(_WORD *)(v5 + 1336) = 0;
  *(void *)(v5 + 1328) = 0;
  *(_OWORD *)(v5 + 1312) = 0u;
  *(_OWORD *)(v5 + 1344) = 0u;
  *(_OWORD *)(v5 + 1360) = 0u;
  *(unsigned char *)(v5 + 1376) = 0;
  return result;
}

void sub_1DDA845F0(unsigned int *a1, uint64_t a2, unsigned __int16 *a3)
{
  uint64_t v133 = *MEMORY[0x1E4F143B8];
  unsigned int v6 = *a3;
  if (v6 > 0x7200)
  {
    if (*a3 <= 0x730Fu)
    {
      if (*a3 <= 0x72FFu)
      {
        switch(v6)
        {
          case 0x7201u:
            if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1) {
              a1[343] = *((_DWORD *)a3 + 2);
            }
            return;
          case 0x7221u:
            if (a3[1] == 7 && *((_DWORD *)a3 + 1) == 4)
            {
              sub_1DDA27D28((uint64_t)a1, &v125);
              uint64_t v52 = sub_1DDA19C94((uint64_t)v125);
              unsigned int v53 = bswap32(*((_DWORD *)a3 + 2));
              if (v52 == 2) {
                int v54 = v53;
              }
              else {
                int v54 = *((_DWORD *)a3 + 2);
              }
              if (v126) {
                sub_1DDA18310(v126);
              }
              if (*(char *)(a2 + 23) >= 0) {
                size_t v55 = *(unsigned __int8 *)(a2 + 23);
              }
              else {
                size_t v55 = *(void *)(a2 + 8);
              }
              unint64_t v56 = v128;
              sub_1DDA49688((uint64_t)v128, v55 + 10);
              if (v129 < 0) {
                unint64_t v56 = (void *)v128[0];
              }
              if (v55)
              {
                if (*(char *)(a2 + 23) >= 0) {
                  uint64_t v57 = (const void *)a2;
                }
                else {
                  uint64_t v57 = *(const void **)a2;
                }
                memmove(v56, v57, v55);
              }
              strcpy((char *)v56 + v55, ":SR2SubIFD");
              sub_1DDA85EB0((uint64_t)a1, (uint64_t)v128, a1[342], a1[343], v54);
              if (v129 < 0)
              {
                uint64_t v24 = (std::__shared_weak_count *)v128[0];
LABEL_326:
                operator delete(v24);
                return;
              }
            }
            return;
          case 0x7250u:
            if ((*(uint64_t (**)(unsigned int *))(*(void *)a1 + 56))(a1)) {
              return;
            }
            sub_1DDA47580(":MRWInfo", (const void **)a2, &v125);
            sub_1DDA8637C((uint64_t)a1, (const void **)&v125, *((unsigned int *)a3 + 2));
            goto LABEL_324;
        }
LABEL_132:
        sub_1DDA43480((uint64_t **)a1, a2, a3);
        return;
      }
      if (v6 != 29440)
      {
        if (v6 != 29443)
        {
          if (v6 != 29446) {
            goto LABEL_132;
          }
          int v21 = a3[1];
          if (v21 != 3 && v21 != 8 || *((_DWORD *)a3 + 1) != 4) {
            return;
          }
          sub_1DDA27D28((uint64_t)a1, __p);
          sub_1DDA3ED68((uint64_t)a3, (uint64_t *)__p, (uint64_t)&v125);
          if (__p[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__p[1]);
          }
          uint64_t v24 = (std::__shared_weak_count *)v125;
          if ((char *)v126 - (unsigned char *)v125 != 8) {
            goto LABEL_108;
          }
          LOWORD(v22) = *((_WORD *)v125 + 2);
          LOWORD(v23) = *((_WORD *)v125 + 3);
          double v25 = (double)v23;
          double v26 = fmax((double)v22, v25);
          LOWORD(v25) = *((_WORD *)v125 + 1);
          double v27 = (double)*(unint64_t *)&v25;
          double v28 = fmax(v27, v26);
          LOWORD(v27) = *(_WORD *)v125;
          double __src = fmax((double)*(unint64_t *)&v27, v28);
          sub_1DDA47580(":0x7306", (const void **)a2, __p);
          v119[0] = __p;
          uint64_t v29 = (char *)sub_1DDA52108((uint64_t **)a1 + 30, __p, (uint64_t)&unk_1DDBFB044, (_OWORD **)v119);
          sub_1DDA25BB0(v29 + 56, (char *)&__src, (uint64_t)&v131, 1uLL);
          goto LABEL_105;
        }
        int v58 = a3[1];
        if (v58 != 3 && v58 != 8 || *((_DWORD *)a3 + 1) != 4) {
          return;
        }
        sub_1DDA27D28((uint64_t)a1, __p);
        sub_1DDA3ED68((uint64_t)a3, (uint64_t *)__p, (uint64_t)&v125);
        if (__p[1]) {
          sub_1DDA18310((std::__shared_weak_count *)__p[1]);
        }
        uint64_t v50 = (unsigned __int16 *)v125;
        uint64_t v51 = (unsigned __int16 *)v126;
        if ((char *)v126 - (unsigned char *)v125 == 8) {
          goto LABEL_181;
        }
        goto LABEL_187;
      }
    }
    else
    {
      if (*a3 > 0x7980u)
      {
        if (*a3 <= 0xC61Fu)
        {
          if (v6 == 31105)
          {
LABEL_115:
            if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1) {
              *((_WORD *)a1 + 668) = sub_1DDA44F28((uint64_t)a3);
            }
            return;
          }
          if (v6 == 50719)
          {
            if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 2)
            {
              sub_1DDA27D28((uint64_t)a1, __p);
              LODWORD(__src) = sub_1DDA3CE7C((uint64_t)a3);
              sub_1DDA1B4D8((int *)v119, (int *)&__src);
              sub_1DDA1A94C((uint64_t *)&v125, (uint64_t *)__p, (uint64_t)v119, 0);
              if (__p[1]) {
                sub_1DDA18310((std::__shared_weak_count *)__p[1]);
              }
              sub_1DDA27D28((uint64_t)a1, __p);
              unsigned int v7 = sub_1DDA19EC8((uint64_t)__p[0]);
              if (__p[1]) {
                sub_1DDA18310((std::__shared_weak_count *)__p[1]);
              }
              sub_1DDA27D28((uint64_t)a1, __p);
              uint64_t v8 = sub_1DDA19EC8((uint64_t)__p[0]);
              if (__p[1]) {
                sub_1DDA18310((std::__shared_weak_count *)__p[1]);
              }
              if (!*((unsigned char *)a1 + 1440)) {
                *((unsigned char *)a1 + 1440) = 1;
              }
              *((void *)a1 + 179) = v7 | (unint64_t)(v8 << 32);
              sub_1DDA1AA18((uint64_t *)&v125);
            }
            return;
          }
          goto LABEL_132;
        }
        if (v6 == 50720)
        {
          if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 2)
          {
            sub_1DDA27D28((uint64_t)a1, __p);
            LODWORD(__src) = sub_1DDA3CE7C((uint64_t)a3);
            sub_1DDA1B4D8((int *)v119, (int *)&__src);
            sub_1DDA1A94C((uint64_t *)&v125, (uint64_t *)__p, (uint64_t)v119, 0);
            if (__p[1]) {
              sub_1DDA18310((std::__shared_weak_count *)__p[1]);
            }
            sub_1DDA27D28((uint64_t)a1, __p);
            unsigned int v47 = sub_1DDA19EC8((uint64_t)__p[0]);
            if (__p[1]) {
              sub_1DDA18310((std::__shared_weak_count *)__p[1]);
            }
            sub_1DDA27D28((uint64_t)a1, __p);
            uint64_t v48 = sub_1DDA19EC8((uint64_t)__p[0]);
            if (__p[1]) {
              sub_1DDA18310((std::__shared_weak_count *)__p[1]);
            }
            if (!*((unsigned char *)a1 + 1452)) {
              *((unsigned char *)a1 + 1452) = 1;
            }
            *(void *)(a1 + 361) = v47 | (unint64_t)(v48 << 32);
            sub_1DDA1AA18((uint64_t *)&v125);
          }
          return;
        }
        if (v6 == 50740)
        {
          if ((*(unsigned int (**)(unsigned int *))(*(void *)a1 + 56))(a1)) {
            BOOL v30 = 0;
          }
          else {
            BOOL v30 = a3[1] == 1;
          }
          BOOL v31 = v30 && *((_DWORD *)a3 + 1) == 4;
          if (!v31 || !sub_1DDA48F20((const void **)a2, "IFD0")) {
            return;
          }
          LODWORD(__p[0]) = 0;
          sub_1DDA1B3CC(&v125, (unsigned int *)__p);
          unsigned int v32 = sub_1DDA49028((uint64_t)a3, (unsigned int *)&v125);
          LODWORD(__src) = 1;
          sub_1DDA1B3CC(v119, (unsigned int *)&__src);
          unsigned int v33 = sub_1DDA49028((uint64_t)a3, (unsigned int *)v119);
          v132[0] = 2;
          sub_1DDA1B3CC(&v117, v132);
          unsigned int v34 = sub_1DDA49028((uint64_t)a3, (unsigned int *)&v117);
          unsigned int v121 = 3;
          sub_1DDA1B3CC(&v122, &v121);
          unsigned int v35 = sub_1DDA49028((uint64_t)a3, &v122);
          sub_1DDA47580(":DNGPrivate", (const void **)a2, &v125);
          (*(void (**)(unsigned int *, void **, unint64_t))(*(void *)a1 + 784))(a1, &v125, v32 | ((((unint64_t)v34 << 8) | ((unint64_t)v35 << 16) | v33) << 8));
LABEL_324:
          if ((SHIBYTE(v127) & 0x80000000) == 0) {
            return;
          }
          uint64_t v24 = (std::__shared_weak_count *)v125;
          goto LABEL_326;
        }
        goto LABEL_132;
      }
      if (v6 != 29456)
      {
        if (v6 != 29459)
        {
          if (v6 != 30847) {
            goto LABEL_132;
          }
          if (a3[1] != 3 || (*((_DWORD *)a3 + 1) - 3) > 1) {
            return;
          }
          sub_1DDA27D28((uint64_t)a1, __p);
          sub_1DDA3ED68((uint64_t)a3, (uint64_t *)__p, (uint64_t)&v125);
          if (__p[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__p[1]);
          }
          LOWORD(v12) = *((_WORD *)v125 + 1);
          LOWORD(v13) = *((_WORD *)v125 + 2);
          double v14 = (double)v13;
          double v15 = fmax((double)v12, v14);
          LOWORD(v14) = *(_WORD *)v125;
          double v16 = fmax((double)*(unint64_t *)&v14, v15);
          if ((char *)v126 - (unsigned char *)v125 == 8)
          {
            LOWORD(v15) = *((_WORD *)v125 + 3);
            double v16 = fmax(v16, (double)*(unint64_t *)&v15);
          }
          if (*(char *)(a2 + 23) >= 0) {
            size_t v17 = *(unsigned __int8 *)(a2 + 23);
          }
          else {
            size_t v17 = *(void *)(a2 + 8);
          }
          id v18 = __p;
          sub_1DDA49688((uint64_t)__p, v17 + 11);
          if (v124 < 0) {
            id v18 = (void **)__p[0];
          }
          if (v17)
          {
            if (*(char *)(a2 + 23) >= 0) {
              uint64_t v19 = (const void *)a2;
            }
            else {
              uint64_t v19 = *(const void **)a2;
            }
            memmove(v18, v19, v17);
          }
          strcpy((char *)v18 + v17, ":WhiteLevel");
          double __src = v16;
          v119[0] = __p;
          uint64_t v20 = sub_1DDA4B960((uint64_t **)a1 + 30, __p, (uint64_t)&unk_1DDBFB044, (long long **)v119);
          sub_1DDA25BB0((char *)v20 + 56, (char *)&__src, (uint64_t)&v131, 1uLL);
LABEL_105:
          if (SHIBYTE(v124) < 0) {
            operator delete(__p[0]);
          }
          goto LABEL_107;
        }
        int v49 = a3[1];
        if (v49 != 3 && v49 != 8 || *((_DWORD *)a3 + 1) != 4) {
          return;
        }
        sub_1DDA27D28((uint64_t)a1, __p);
        sub_1DDA3ED68((uint64_t)a3, (uint64_t *)__p, (uint64_t)&v125);
        if (__p[1]) {
          sub_1DDA18310((std::__shared_weak_count *)__p[1]);
        }
        uint64_t v50 = (unsigned __int16 *)v125;
        uint64_t v51 = (unsigned __int16 *)v126;
        if ((char *)v126 - (unsigned char *)v125 == 8)
        {
LABEL_181:
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v124 = 0;
          sub_1DDA51EC4((char *)__p, v50, v51, 4uLL);
          sub_1DDA47580(":WBLevels", (const void **)a2, v119);
          double __src = COERCE_DOUBLE(v119);
          uint64_t v59 = sub_1DDA52108((uint64_t **)a1 + 15, v119, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src);
          uint64_t v60 = (void *)v59[7];
          if (v60)
          {
            v59[8] = v60;
            operator delete(v60);
            v59[7] = 0;
            v59[8] = 0;
            v59[9] = 0;
          }
          *(_OWORD *)(v59 + 7) = *(_OWORD *)__p;
          v59[9] = v124;
          __p[1] = 0;
          uint64_t v124 = 0;
          __p[0] = 0;
          if (SHIBYTE(v120) < 0)
          {
            operator delete(v119[0]);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
          uint64_t v50 = (unsigned __int16 *)v125;
        }
LABEL_187:
        if (!v50) {
          return;
        }
        uint64_t v126 = (std::__shared_weak_count *)v50;
        uint64_t v24 = (std::__shared_weak_count *)v50;
        goto LABEL_326;
      }
    }
    int v36 = a3[1];
    if (v36 != 3 && v36 != 8 || *((_DWORD *)a3 + 1) != 4) {
      return;
    }
    sub_1DDA27D28((uint64_t)a1, __p);
    sub_1DDA3ED68((uint64_t)a3, (uint64_t *)__p, (uint64_t)&v125);
    if (__p[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__p[1]);
    }
    uint64_t v24 = (std::__shared_weak_count *)v125;
    if ((char *)v126 - (unsigned char *)v125 != 8) {
      goto LABEL_108;
    }
    if (*(char *)(a2 + 23) >= 0) {
      size_t v37 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      size_t v37 = *(void *)(a2 + 8);
    }
    uint64_t v38 = __p;
    sub_1DDA49688((uint64_t)__p, v37 + 12);
    if (v124 < 0) {
      uint64_t v38 = (void **)__p[0];
    }
    if (v37)
    {
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v39 = (const void *)a2;
      }
      else {
        uint64_t v39 = *(const void **)a2;
      }
      memmove(v38, v39, v37);
    }
    strcpy((char *)v38 + v37, ":BlackLevels");
    v119[1] = 0;
    uint64_t v120 = 0;
    v119[0] = 0;
    sub_1DDA88A70((char *)v119, (unsigned __int16 *)v125, (unsigned __int16 *)v126, ((char *)v126 - (unsigned char *)v125) >> 1);
    double __src = COERCE_DOUBLE(__p);
    double v40 = sub_1DDA4B960((uint64_t **)a1 + 33, __p, (uint64_t)&unk_1DDBFB044, (long long **)&__src);
    double v41 = (void *)v40[7];
    if (v41)
    {
      v40[8] = (uint64_t)v41;
      operator delete(v41);
      v40[7] = 0;
      v40[8] = 0;
      v40[9] = 0;
    }
    *(_OWORD *)(v40 + 7) = *(_OWORD *)v119;
    v40[9] = v120;
    goto LABEL_105;
  }
  if (*a3 > 0x7010u)
  {
    switch(*a3)
    {
      case 0x7031u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1) {
          *((_WORD *)a1 + 636) = sub_1DDA44F28((uint64_t)a3);
        }
        return;
      case 0x7032u:
        if (a3[1] != 8 || *((_DWORD *)a3 + 1) != 17) {
          return;
        }
        sub_1DDA27D28((uint64_t)a1, __p);
        LODWORD(__src) = sub_1DDA3CE7C((uint64_t)a3);
        sub_1DDA1B4D8((int *)v119, (int *)&__src);
        sub_1DDA1A94C((uint64_t *)&v125, (uint64_t *)__p, (uint64_t)v119, 0);
        if (__p[1]) {
          sub_1DDA18310((std::__shared_weak_count *)__p[1]);
        }
        sub_1DDA27D28((uint64_t)a1, __p);
        unsigned int v78 = sub_1DDA19FB0((uint64_t)__p[0]);
        if (__p[1]) {
          sub_1DDA18310((std::__shared_weak_count *)__p[1]);
        }
        if (v78 <= 0x10)
        {
          uint64_t v79 = (void **)(a1 + 320);
          sub_1DDA3F190((void **)a1 + 160, (unsigned __int16)v78);
          if (v78)
          {
            int v80 = 0;
            do
            {
              sub_1DDA27D28((uint64_t)a1, __p);
              __int16 v81 = sub_1DDA19FB0((uint64_t)__p[0]);
              __int16 v82 = v81;
              uint64_t v83 = (char *)*((void *)a1 + 161);
              unint64_t v84 = *((void *)a1 + 162);
              if ((unint64_t)v83 >= v84)
              {
                uint64_t v86 = (char *)*v79;
                uint64_t v87 = v83 - (unsigned char *)*v79;
                if (v87 <= -3) {
                  sub_1DDA17F78();
                }
                uint64_t v88 = v87 >> 1;
                unint64_t v89 = v84 - (void)v86;
                if (v89 <= (v87 >> 1) + 1) {
                  unint64_t v90 = v88 + 1;
                }
                else {
                  unint64_t v90 = v89;
                }
                if (v89 >= 0x7FFFFFFFFFFFFFFELL) {
                  uint64_t v91 = 0x7FFFFFFFFFFFFFFFLL;
                }
                else {
                  uint64_t v91 = v90;
                }
                if (v91)
                {
                  uint64_t v92 = (char *)sub_1DDA1AD0C((uint64_t)(a1 + 324), v91);
                  uint64_t v83 = (char *)*((void *)a1 + 161);
                  uint64_t v86 = (char *)*((void *)a1 + 160);
                }
                else
                {
                  uint64_t v92 = 0;
                }
                uint64_t v93 = &v92[2 * v88];
                *(_WORD *)uint64_t v93 = v82;
                uint64_t v85 = v93 + 2;
                while (v83 != v86)
                {
                  __int16 v94 = *((_WORD *)v83 - 1);
                  v83 -= 2;
                  *((_WORD *)v93 - 1) = v94;
                  v93 -= 2;
                }
                *((void *)a1 + 160) = v93;
                *((void *)a1 + 161) = v85;
                *((void *)a1 + 162) = &v92[2 * v91];
                if (v86) {
                  operator delete(v86);
                }
              }
              else
              {
                *(_WORD *)uint64_t v83 = v81;
                uint64_t v85 = v83 + 2;
              }
              *((void *)a1 + 161) = v85;
              if (__p[1]) {
                sub_1DDA18310((std::__shared_weak_count *)__p[1]);
              }
              ++v80;
            }
            while (v80 != (unsigned __int16)v78);
          }
        }
        goto LABEL_305;
      case 0x7033u:
        goto LABEL_132;
      case 0x7034u:
        if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1) {
          *((_WORD *)a1 + 652) = sub_1DDA44F28((uint64_t)a3);
        }
        return;
      case 0x7035u:
        if (a3[1] != 8 || *((_DWORD *)a3 + 1) != 33) {
          return;
        }
        sub_1DDA27D28((uint64_t)a1, __p);
        LODWORD(__src) = sub_1DDA3CE7C((uint64_t)a3);
        sub_1DDA1B4D8((int *)v119, (int *)&__src);
        sub_1DDA1A94C((uint64_t *)&v125, (uint64_t *)__p, (uint64_t)v119, 0);
        if (__p[1]) {
          sub_1DDA18310((std::__shared_weak_count *)__p[1]);
        }
        sub_1DDA27D28((uint64_t)a1, __p);
        unsigned int v95 = sub_1DDA19FB0((uint64_t)__p[0]);
        if (__p[1]) {
          sub_1DDA18310((std::__shared_weak_count *)__p[1]);
        }
        if (v95 <= 0x20)
        {
          uint64_t v96 = (void **)(a1 + 328);
          sub_1DDA3F190((void **)a1 + 164, (unsigned __int16)v95);
          if (v95)
          {
            int v97 = 0;
            do
            {
              sub_1DDA27D28((uint64_t)a1, __p);
              __int16 v98 = sub_1DDA19FB0((uint64_t)__p[0]);
              __int16 v99 = v98;
              uint64_t v100 = (char *)*((void *)a1 + 165);
              unint64_t v101 = *((void *)a1 + 166);
              if ((unint64_t)v100 >= v101)
              {
                uint64_t v103 = (char *)*v96;
                uint64_t v104 = v100 - (unsigned char *)*v96;
                if (v104 <= -3) {
                  sub_1DDA17F78();
                }
                uint64_t v105 = v104 >> 1;
                unint64_t v106 = v101 - (void)v103;
                if (v106 <= (v104 >> 1) + 1) {
                  unint64_t v107 = v105 + 1;
                }
                else {
                  unint64_t v107 = v106;
                }
                if (v106 >= 0x7FFFFFFFFFFFFFFELL) {
                  uint64_t v108 = 0x7FFFFFFFFFFFFFFFLL;
                }
                else {
                  uint64_t v108 = v107;
                }
                if (v108)
                {
                  uint64_t v109 = (char *)sub_1DDA1AD0C((uint64_t)(a1 + 332), v108);
                  uint64_t v100 = (char *)*((void *)a1 + 165);
                  uint64_t v103 = (char *)*((void *)a1 + 164);
                }
                else
                {
                  uint64_t v109 = 0;
                }
                uint64_t v110 = &v109[2 * v105];
                *(_WORD *)uint64_t v110 = v99;
                uint64_t v102 = v110 + 2;
                while (v100 != v103)
                {
                  __int16 v111 = *((_WORD *)v100 - 1);
                  v100 -= 2;
                  *((_WORD *)v110 - 1) = v111;
                  v110 -= 2;
                }
                *((void *)a1 + 164) = v110;
                *((void *)a1 + 165) = v102;
                *((void *)a1 + 166) = &v109[2 * v108];
                if (v103) {
                  operator delete(v103);
                }
              }
              else
              {
                *(_WORD *)uint64_t v100 = v98;
                uint64_t v102 = v100 + 2;
              }
              *((void *)a1 + 165) = v102;
              if (__p[1]) {
                sub_1DDA18310((std::__shared_weak_count *)__p[1]);
              }
              ++v97;
            }
            while (v97 != (unsigned __int16)v95);
          }
        }
        goto LABEL_305;
      case 0x7036u:
        goto LABEL_115;
      case 0x7037u:
        if (a3[1] != 8 || *((_DWORD *)a3 + 1) != 17) {
          return;
        }
        sub_1DDA27D28((uint64_t)a1, __p);
        LODWORD(__src) = sub_1DDA3CE7C((uint64_t)a3);
        sub_1DDA1B4D8((int *)v119, (int *)&__src);
        sub_1DDA1A94C((uint64_t *)&v125, (uint64_t *)__p, (uint64_t)v119, 0);
        if (__p[1]) {
          sub_1DDA18310((std::__shared_weak_count *)__p[1]);
        }
        sub_1DDA27D28((uint64_t)a1, __p);
        unsigned int v61 = sub_1DDA19FB0((uint64_t)__p[0]);
        if (__p[1]) {
          sub_1DDA18310((std::__shared_weak_count *)__p[1]);
        }
        if (v61 <= 0x10)
        {
          uint64_t v62 = (void **)(a1 + 336);
          sub_1DDA3F190((void **)a1 + 168, (unsigned __int16)v61);
          if (v61)
          {
            int v63 = 0;
            do
            {
              sub_1DDA27D28((uint64_t)a1, __p);
              __int16 v64 = sub_1DDA19FB0((uint64_t)__p[0]);
              __int16 v65 = v64;
              uint64_t v66 = (char *)*((void *)a1 + 169);
              unint64_t v67 = *((void *)a1 + 170);
              if ((unint64_t)v66 >= v67)
              {
                uint64_t v69 = (char *)*v62;
                uint64_t v70 = v66 - (unsigned char *)*v62;
                if (v70 <= -3) {
                  sub_1DDA17F78();
                }
                uint64_t v71 = v70 >> 1;
                unint64_t v72 = v67 - (void)v69;
                if (v72 <= (v70 >> 1) + 1) {
                  unint64_t v73 = v71 + 1;
                }
                else {
                  unint64_t v73 = v72;
                }
                if (v72 >= 0x7FFFFFFFFFFFFFFELL) {
                  uint64_t v74 = 0x7FFFFFFFFFFFFFFFLL;
                }
                else {
                  uint64_t v74 = v73;
                }
                if (v74)
                {
                  uint64_t v75 = (char *)sub_1DDA1AD0C((uint64_t)(a1 + 340), v74);
                  uint64_t v66 = (char *)*((void *)a1 + 169);
                  uint64_t v69 = (char *)*((void *)a1 + 168);
                }
                else
                {
                  uint64_t v75 = 0;
                }
                uint64_t v76 = &v75[2 * v71];
                *(_WORD *)uint64_t v76 = v65;
                uint64_t v68 = v76 + 2;
                while (v66 != v69)
                {
                  __int16 v77 = *((_WORD *)v66 - 1);
                  v66 -= 2;
                  *((_WORD *)v76 - 1) = v77;
                  v76 -= 2;
                }
                *((void *)a1 + 168) = v76;
                *((void *)a1 + 169) = v68;
                *((void *)a1 + 170) = &v75[2 * v74];
                if (v69) {
                  operator delete(v69);
                }
              }
              else
              {
                *(_WORD *)uint64_t v66 = v64;
                uint64_t v68 = v66 + 2;
              }
              *((void *)a1 + 169) = v68;
              if (__p[1]) {
                sub_1DDA18310((std::__shared_weak_count *)__p[1]);
              }
              ++v63;
            }
            while (v63 != (unsigned __int16)v61);
          }
        }
        goto LABEL_305;
      case 0x7038u:
        if (a3[1] != 3 || *((_DWORD *)a3 + 1) != 2) {
          return;
        }
        sub_1DDA27D28((uint64_t)a1, __p);
        LODWORD(__src) = sub_1DDA3CE7C((uint64_t)a3);
        sub_1DDA1B4D8((int *)v119, (int *)&__src);
        sub_1DDA1A94C((uint64_t *)&v125, (uint64_t *)__p, (uint64_t)v119, 0);
        if (__p[1]) {
          sub_1DDA18310((std::__shared_weak_count *)__p[1]);
        }
        sub_1DDA27D28((uint64_t)a1, __p);
        int v112 = sub_1DDA19FB0((uint64_t)__p[0]);
        if (__p[1]) {
          sub_1DDA18310((std::__shared_weak_count *)__p[1]);
        }
        sub_1DDA27D28((uint64_t)a1, __p);
        double v113 = (double)(int)sub_1DDA19FB0((uint64_t)__p[0]);
        if (__p[1]) {
          sub_1DDA18310((std::__shared_weak_count *)__p[1]);
        }
        int v114 = *((unsigned __int8 *)a1 + 1424);
        *((double *)a1 + 176) = (double)v112;
        *((double *)a1 + 177) = v113;
        if (!v114) {
          *((unsigned char *)a1 + 1424) = 1;
        }
LABEL_305:
        sub_1DDA1AA18((uint64_t *)&v125);
        return;
      case 0x7039u:
        if (a3[1] == 5 && *((_DWORD *)a3 + 1) == 3)
        {
          sub_1DDA27D28((uint64_t)a1, __p);
          LODWORD(__src) = sub_1DDA3CE7C((uint64_t)a3);
          sub_1DDA1B4D8((int *)v119, (int *)&__src);
          sub_1DDA1A94C((uint64_t *)&v125, (uint64_t *)__p, (uint64_t)v119, 0);
          if (__p[1]) {
            sub_1DDA18310((std::__shared_weak_count *)__p[1]);
          }
          sub_1DDA27D28((uint64_t)a1, v119);
          v132[0] = sub_1DDA1A08C((uint64_t)v119[0]);
          sub_1DDA27D28((uint64_t)a1, &__src);
          v132[1] = sub_1DDA1A08C(*(uint64_t *)&__src);
          sub_1DDA27D28((uint64_t)a1, &v117);
          void v132[2] = sub_1DDA1A08C(v117);
          sub_1DDA867F8(__p, v132, 3uLL);
          if (v118) {
            sub_1DDA18310(v118);
          }
          if (v131) {
            sub_1DDA18310(v131);
          }
          if (v119[1]) {
            sub_1DDA18310((std::__shared_weak_count *)v119[1]);
          }
          sub_1DDA8687C((uint64_t)(a1 + 344), (uint64_t)__p);
          if (__p[0])
          {
            __p[1] = __p[0];
            operator delete(__p[0]);
          }
          sub_1DDA1AA18((uint64_t *)&v125);
        }
        return;
      default:
        if (v6 != 28689)
        {
          if (v6 != 29184) {
            goto LABEL_132;
          }
          if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1) {
            a1[342] = *((_DWORD *)a3 + 2);
          }
          return;
        }
        if ((*(unsigned int (**)(unsigned int *))(*(void *)a1 + 56))(a1)) {
          BOOL v115 = 0;
        }
        else {
          BOOL v115 = a3[1] == 3;
        }
        BOOL v116 = v115 && *((_DWORD *)a3 + 1) == 4;
        if (!v116 || !sub_1DDA48F20((const void **)a2, "IFD0:SUBIFD0")) {
          return;
        }
        uint64_t v125 = 0;
        uint64_t v126 = 0;
        uint64_t v127 = 0;
        if (!sub_1DDA45C20((uint64_t)a1, (uint64_t)a3, (char **)&v125)) {
          goto LABEL_107;
        }
        __p[0] = (void *)a2;
        char v11 = sub_1DDA4B960((uint64_t **)a1 + 155, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p) + 7;
        if (v11 == (uint64_t *)&v125) {
          goto LABEL_107;
        }
        break;
    }
LABEL_43:
    sub_1DDA49474((char *)v11, (char *)v125, (uint64_t)v126, ((char *)v126 - (unsigned char *)v125) >> 1);
LABEL_107:
    uint64_t v24 = (std::__shared_weak_count *)v125;
LABEL_108:
    if (!v24) {
      return;
    }
    uint64_t v126 = v24;
    goto LABEL_326;
  }
  if (v6 == 330)
  {
    if ((*(uint64_t (**)(unsigned int *))(*(void *)a1 + 56))(a1)) {
      return;
    }
    (*(void (**)(void **__return_ptr, unsigned int *))(*(void *)a1 + 224))(&v125, a1);
    if (!sub_1DDA48F20((const void **)&v125, "DSLR-A100")) {
      goto LABEL_323;
    }
    sub_1DDA1A880(__p, "IFD0");
    uint64_t v45 = sub_1DDA2A530((uint64_t)(a1 + 134), __p);
    BOOL v46 = a1 + 136 != (unsigned int *)v45 && *((_DWORD *)v45 + 14) == 3872;
    if (SHIBYTE(v124) < 0) {
      operator delete(__p[0]);
    }
    if (v46) {
      *((void *)a1 + 148) = *((unsigned int *)a3 + 2);
    }
    else {
LABEL_323:
    }
      sub_1DDA43480((uint64_t **)a1, a2, a3);
    goto LABEL_324;
  }
  if (v6 == 28672)
  {
    if ((*(unsigned int (**)(unsigned int *))(*(void *)a1 + 56))(a1)) {
      BOOL v42 = 0;
    }
    else {
      BOOL v42 = a3[1] == 3;
    }
    BOOL v43 = v42 && *((_DWORD *)a3 + 1) == 1;
    if (v43 && sub_1DDA48F20((const void **)a2, "IFD0:SUBIFD0"))
    {
      __int16 v44 = sub_1DDA44F28((uint64_t)a3);
      uint64_t v125 = (void *)a2;
      *((_WORD *)sub_1DDA4BC98((uint64_t **)a1 + 149, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v125) + 28) = v44;
    }
    return;
  }
  if (v6 != 28688) {
    goto LABEL_132;
  }
  if ((*(unsigned int (**)(unsigned int *))(*(void *)a1 + 56))(a1)) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = a3[1] == 3;
  }
  BOOL v10 = v9 && *((_DWORD *)a3 + 1) == 4;
  if (v10 && sub_1DDA48F20((const void **)a2, "IFD0:SUBIFD0"))
  {
    uint64_t v125 = 0;
    uint64_t v126 = 0;
    uint64_t v127 = 0;
    if (!sub_1DDA45C20((uint64_t)a1, (uint64_t)a3, (char **)&v125)) {
      goto LABEL_107;
    }
    __p[0] = (void *)a2;
    char v11 = sub_1DDA4B960((uint64_t **)a1 + 152, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p) + 7;
    if (v11 == (uint64_t *)&v125) {
      goto LABEL_107;
    }
    goto LABEL_43;
  }
}

void sub_1DDA85BA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37)
{
}

void sub_1DDA85EB0(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, int a5)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  unsigned int v36 = a3;
  if (a3 && a4 - 0x20000 >= 0xFFFE0801)
  {
    uint64_t v8 = 0;
    memset(v37, 0, sizeof(v37));
    do
    {
      a5 = 48828125 * a5 + 1;
      *(_DWORD *)((char *)v37 + v8) = a5;
      v8 += 4;
    }
    while (v8 != 16);
    uint64_t v9 = 0;
    int v10 = DWORD2(v37[0]);
    int v11 = v37[0];
    int v12 = (*((void *)&v37[0] + 1) ^ (unint64_t)LODWORD(v37[0])) >> 31;
    HIDWORD(v37[0]) = v12;
    do
    {
      int v13 = v10 ^ v11;
      int v11 = *(_DWORD *)((char *)v37 + v9 + 4);
      int v10 = v12;
      HIDWORD(v14) = v13;
      LODWORD(v14) = v12 ^ v11;
      int v12 = v14 >> 31;
      *(_DWORD *)((char *)&v37[1] + v9) = v12;
      v9 += 4;
    }
    while (v9 != 492);
    LODWORD(v15) = a4 >> 2;
    sub_1DDA1AD40(__p, a4 >> 2);
    sub_1DDA27D28(a1, &v33);
    sub_1DDA49310(v34, (uint64_t *)&v33);
    if (*((void *)&v33 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v33 + 1));
    }
    sub_1DDA27D28(a1, &v31);
    sub_1DDA29F88((uint64_t *)&v33, &v31, 2);
    if (v32) {
      sub_1DDA18310(v32);
    }
    sub_1DDA27D28(a1, &v31);
    uint64_t v16 = v31;
    sub_1DDA18410(&v30, (int *)&v36);
    (*(void (**)(uint64_t, int *, void))(*(void *)v16 + 40))(v16, &v30, 0);
    if (v32) {
      sub_1DDA18310(v32);
    }
    if (a4 >= 4)
    {
      uint64_t v17 = 0;
      if (v15 <= 1) {
        uint64_t v15 = 1;
      }
      else {
        uint64_t v15 = v15;
      }
      do
      {
        sub_1DDA27D28(a1, &v31);
        int v18 = sub_1DDA19EC8(v31);
        *(_DWORD *)((char *)__p[0] + v17) = v18;
        if (v32) {
          sub_1DDA18310(v32);
        }
        v17 += 4;
      }
      while (4 * v15 != v17);
      uint64_t v19 = 0;
      uint64_t v20 = __p[0];
      do
      {
        int v21 = *((_DWORD *)v37 + (((_BYTE)v19 - 64) & 0x7F)) ^ *((_DWORD *)v37 + (((_BYTE)v19 + 0x80) & 0x7F));
        *((_DWORD *)v37 + (((_BYTE)v19 - 1) & 0x7F)) = v21;
        v20[v19++] ^= v21;
      }
      while (v15 != v19);
      unint64_t v22 = (unsigned int *)__p[0];
      do
      {
        unsigned int *v22 = bswap32(*v22);
        ++v22;
        --v15;
      }
      while (v15);
    }
    sub_1DDA2A000((uint64_t *)&v33);
    LODWORD(v31) = a4;
    sub_1DDA199C4((uint64_t)__p[0], (uint64_t)&v31, 0, &v33);
    sub_1DDA19C9C(v33, 1);
    uint64_t v23 = v33;
    uint64_t v31 = -(uint64_t)v36;
    sub_1DDA1B2DC(&v30, &v31);
    sub_1DDA19CAC(v23, &v30);
    uint64_t v24 = v33;
    sub_1DDA18410((int *)&v31, (int *)&v36);
    (*(void (**)(uint64_t, uint64_t *, void))(*(void *)v24 + 40))(v24, &v31, 0);
    sub_1DDA27D28(a1, &v31);
    long long v25 = v33;
    if (*((void *)&v33 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v33 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    double v26 = *(std::__shared_weak_count **)(a1 + 88);
    *(_OWORD *)(a1 + 80) = v25;
    if (v26) {
      sub_1DDA18310(v26);
    }
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)a1 + 704))(a1, 0, a2);
    uint64_t v28 = v31;
    double v27 = v32;
    if (v32) {
      atomic_fetch_add_explicit(&v32->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    uint64_t v29 = *(std::__shared_weak_count **)(a1 + 88);
    *(void *)(a1 + 80) = v28;
    *(void *)(a1 + 88) = v27;
    if (v29) {
      sub_1DDA18310(v29);
    }
    if (v32) {
      sub_1DDA18310(v32);
    }
    if (*((void *)&v33 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v33 + 1));
    }
    sub_1DDA1AA18(v34);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }
}

void sub_1DDA862A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA8637C(uint64_t a1, const void **a2, uint64_t a3)
{
  uint64_t v30 = a3;
  sub_1DDA27D28(a1, &v26);
  uint64_t v5 = v26;
  sub_1DDA1B2DC(&__p, &v30);
  (*(void (**)(void *, void **, void))(*(void *)v5 + 40))(v5, &__p, 0);
  if (v27) {
    sub_1DDA18310(v27);
  }
  sub_1DDA27D28(a1, &v26);
  int v6 = sub_1DDA19EC8((uint64_t)v26);
  if (v27) {
    sub_1DDA18310(v27);
  }
  if (v6 == 1230130432)
  {
    uint64_t v29 = 0;
    sub_1DDA27D28(a1, &v26);
    uint64_t v7 = sub_1DDA19EC8((uint64_t)v26);
    if (v27) {
      sub_1DDA18310(v27);
    }
    uint64_t v29 = v7;
    sub_1DDA18500(&v21, (unint64_t *)&v30);
    LODWORD(v26) = v21;
    int v8 = *sub_1DDA88D3C(&v26, &v29);
    double v26 = (void *)8;
    LODWORD(__p) = v8;
    uint64_t v9 = *sub_1DDA88D3C(&__p, &v26);
    while (1)
    {
      sub_1DDA27D28(a1, &v26);
      int v10 = (*(uint64_t (**)(void *))(*(void *)v26 + 48))(v26);
      if (v27) {
        sub_1DDA18310(v27);
      }
      uint64_t v11 = v10;
      if (v10 >= v9) {
        break;
      }
      sub_1DDA27D28(a1, &v26);
      int v12 = sub_1DDA19EC8((uint64_t)v26);
      if (v27) {
        sub_1DDA18310(v27);
      }
      sub_1DDA27D28(a1, &v26);
      unsigned int v13 = sub_1DDA19EC8((uint64_t)v26);
      if (v27) {
        sub_1DDA18310(v27);
      }
      if (v12 == 1195529984)
      {
        if (*((char *)a2 + 23) >= 0) {
          size_t v14 = *((unsigned __int8 *)a2 + 23);
        }
        else {
          size_t v14 = (size_t)a2[1];
        }
        sub_1DDA49688((uint64_t)&v26, v14 + 4);
        if (v28 >= 0) {
          uint64_t v15 = &v26;
        }
        else {
          uint64_t v15 = v26;
        }
        if (v14)
        {
          if (*((char *)a2 + 23) >= 0) {
            uint64_t v16 = a2;
          }
          else {
            uint64_t v16 = *a2;
          }
          memmove(v15, v16, v14);
        }
        strcpy((char *)v15 + v14, ":WBG");
        sub_1DDA27D28(a1, &__p);
        LODWORD(v21) = 4;
        (*(void (**)(void *, long long *, uint64_t))(*(void *)__p + 40))(__p, &v21, 1);
        if (v25) {
          sub_1DDA18310(v25);
        }
        sub_1DDA27D28(a1, &v21);
        uint64_t v17 = (void *)v21;
        unsigned int v23 = 4;
        sub_1DDA1B3CC(&v31, &v23);
        sub_1DDA1A488(v17, (unsigned int *)&v31, (uint64_t *)&__p);
        if (*((void *)&v21 + 1)) {
          sub_1DDA18310(*((std::__shared_weak_count **)&v21 + 1));
        }
        uint64_t v22 = 0;
        long long v21 = 0uLL;
        sub_1DDA51EC4((char *)&v21, (unsigned __int16 *)__p, (unsigned __int16 *)v25, ((char *)v25 - (unsigned char *)__p) >> 1);
        uint64_t v31 = &v26;
        int v18 = sub_1DDA4B960((uint64_t **)(a1 + 120), &v26, (uint64_t)&unk_1DDBFB044, (long long **)&v31);
        uint64_t v19 = (void *)v18[7];
        if (v19)
        {
          v18[8] = (uint64_t)v19;
          operator delete(v19);
          v18[7] = 0;
          v18[8] = 0;
          v18[9] = 0;
        }
        *(_OWORD *)(v18 + 7) = v21;
        v18[9] = v22;
        if (__p)
        {
          long long v25 = (std::__shared_weak_count *)__p;
          operator delete(__p);
        }
        if (v28 < 0) {
          operator delete(v26);
        }
      }
      sub_1DDA27D28(a1, &v26);
      uint64_t v20 = v26;
      std::string __p = (void *)(v11 + v13 + 8);
      sub_1DDA1B2DC(&v21, (uint64_t *)&__p);
      (*(void (**)(void *, long long *, void))(*(void *)v20 + 40))(v20, &v21, 0);
      if (v27) {
        sub_1DDA18310(v27);
      }
    }
  }
}

void sub_1DDA86758(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, std::__shared_weak_count *a18, int a19, __int16 a20,char a21,char a22)
{
  if (a18) {
    sub_1DDA18310(a18);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA867F8(void *a1, const void *a2, unint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    sub_1DDA17F34(a1, a3);
    int v6 = (char *)a1[1];
    memmove(v6, a2, 4 * a3);
    a1[1] = &v6[4 * a3];
  }
  return a1;
}

void sub_1DDA86860(_Unwind_Exception *exception_object)
{
  id v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA8687C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 24))
  {
    if (a1 != a2) {
      sub_1DDA17E28((char *)a1, *(char **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 2);
    }
  }
  else
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    sub_1DDA1D984((void *)a1, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 2);
    *(unsigned char *)(a1 + 24) = 1;
  }
  return a1;
}

uint64_t sub_1DDA868F4(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1336);
}

void *sub_1DDA868FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return sub_1DDA1D908(a2, *(const void **)(a1 + 1344), *(void *)(a1 + 1352), (uint64_t)(*(void *)(a1 + 1352) - *(void *)(a1 + 1344)) >> 1);
}

char *sub_1DDA8691C(char *result, long long *a2, unsigned __int16 *a3)
{
  if (*a3 == 34866)
  {
    if (a3[1] == 4)
    {
      int v4 = *((_DWORD *)a3 + 2);
      int v6 = a2;
      id v3 = sub_1DDA4B960((uint64_t **)result + 24, (void **)a2, (uint64_t)&unk_1DDBFB044, &v6);
      return sub_1DDA17E28((char *)v3 + 56, (char *)&v4, (uint64_t)&v5, 1uLL);
    }
  }
  else
  {
    return (char *)sub_1DDA466B4((uint64_t)result, a2, a3);
  }
  return result;
}

void sub_1DDA869AC(void *a1@<X1>, void *a2@<X2>, uint64_t a3@<X3>, void *a4@<X4>, __int16 a5@<W5>, int a6@<W6>, void *a7@<X7>, uint64_t a8@<X8>)
{
  id v39 = a1;
  id v14 = a2;
  id v15 = a4;
  id v16 = a7;
  int v23 = objc_msgSend_isEqualToString_(v14, v17, @"IFD[0]", v18, v19) ^ 1;
  if (a3 != 330) {
    LOBYTE(v23) = 1;
  }
  if ((v23 & 1) == 0)
  {
    uint64_t v24 = objc_msgSend_objectForKeyedSubscript_(v39, v20, @"Model", v21, v22);
    if (objc_msgSend_isEqualToString_(v24, v25, @"DSLR-A100", v26, v27))
    {
      uint64_t v31 = objc_msgSend_objectForKeyedSubscript_(v39, v28, @"ImageWidth", v29, v30);
      int v36 = objc_msgSend_intValue(v31, v32, v33, v34, v35);

      if (v36 == 3872)
      {
        id v37 = v16;
        *(void *)a8 = @"A100DataOffset";
        *(_WORD *)(a8 + 8) = 4;
        *(_DWORD *)(a8 + 12) = 1;
        *(void *)(a8 + 16) = v37;
        goto LABEL_9;
      }
    }
    else
    {
    }
  }
  sub_1DDA3FF90(v15, a5, a6, v16, a8);
LABEL_9:
}

void sub_1DDA86B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_1DDA86B54(uint64_t a1, const void **a2, uint64_t a3)
{
  uint64_t v19 = a3;
  sub_1DDA27D28(a1, &__p);
  sub_1DDA1B2DC(&v17, &v19);
  sub_1DDA1A94C(v18, (uint64_t *)&__p, (uint64_t)&v17, 0);
  if (v15) {
    sub_1DDA18310(v15);
  }
  sub_1DDA27D28(a1, &__p);
  int v5 = sub_1DDA19EC8((uint64_t)__p);
  if (v15) {
    sub_1DDA18310(v15);
  }
  if (v5 == 1230130432)
  {
    if (*((char *)a2 + 23) >= 0) {
      size_t v6 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v6 = (size_t)a2[1];
    }
    p_p = &__p;
    sub_1DDA49688((uint64_t)&__p, v6 + 8);
    if (v16 < 0) {
      p_p = __p;
    }
    if (v6)
    {
      if (*((char *)a2 + 23) >= 0) {
        int v8 = a2;
      }
      else {
        int v8 = *a2;
      }
      memmove(p_p, v8, v6);
    }
    strcpy((char *)p_p + v6, ":MRWInfo");
    sub_1DDA8637C(a1, (const void **)&__p, v19);
  }
  else
  {
    sub_1DDA27D28(a1, &__p);
    uint64_t v9 = __p;
    sub_1DDA1B2DC(&v17, &v19);
    (*(void (**)(void *, int *, void))(*(void *)v9 + 40))(v9, &v17, 0);
    if (v15) {
      sub_1DDA18310(v15);
    }
    if (*((char *)a2 + 23) >= 0) {
      size_t v10 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v10 = (size_t)a2[1];
    }
    uint64_t v11 = &__p;
    sub_1DDA49688((uint64_t)&__p, v10 + 11);
    if (v16 < 0) {
      uint64_t v11 = __p;
    }
    if (v10)
    {
      if (*((char *)a2 + 23) >= 0) {
        int v12 = a2;
      }
      else {
        int v12 = *a2;
      }
      memmove(v11, v12, v10);
    }
    strcpy((char *)v11 + v10, ":SR2Private");
    (*(void (**)(uint64_t, void, void **))(*(void *)a1 + 704))(a1, 0, &__p);
  }
  if (v16 < 0) {
    operator delete(__p);
  }
  return sub_1DDA1AA18(v18);
}

void sub_1DDA86DAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1DDA1AA18(&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA86E18(uint64_t a1)
{
  uint64_t v2 = a1 + 1192;
  sub_1DDA1A880(__p, "IFD0:SUBIFD0");
  id v3 = sub_1DDA2A530(v2, __p);
  if ((void **)(a1 + 1200) == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = *((unsigned __int16 *)v3 + 28);
  }
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1DDA86E8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA86EA8(uint64_t a1)
{
  int v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1);
  if ((v2 & 1) == 0)
  {
    std::string __p = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    sub_1DDA27D28(a1, &v15);
    uint64_t v3 = (*(int (**)(uint64_t))(*(void *)v15 + 48))(v15);
    if (v16) {
      sub_1DDA18310(v16);
    }
    uint64_t v17 = v3;
    sub_1DDA27D28(a1, &v15);
    uint64_t v4 = v15;
    unsigned int v14 = 9;
    sub_1DDA1B3CC(&v21, &v14);
    BOOL v5 = sub_1DDA1A0CC(v4, &v21, (uint64_t)&__p);
    if (v16) {
      sub_1DDA18310(v16);
    }
    if (!v5) {
      goto LABEL_16;
    }
    uint64_t v6 = HIBYTE(v20);
    if (v20 < 0) {
      uint64_t v6 = v19;
    }
    if (v6 != 9) {
      goto LABEL_16;
    }
    p_p = (unsigned __int8 *)&__p;
    if (v20 < 0) {
      p_p = (unsigned __int8 *)__p;
    }
    uint64_t v8 = *(void *)p_p;
    int v9 = p_p[8];
    if (v8 == 0x43534420594E4F53 && v9 == 32)
    {
      sub_1DDA27D28(a1, &v15);
      unsigned int v12 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 48))(v15);
      int v13 = 3;
      unsigned int v21 = v12;
      unsigned int v14 = *sub_1DDA1A378(&v21, &v13);
      (*(void (**)(uint64_t, unsigned int *))(*(void *)a1 + 160))(a1, &v14);
      if (v16) {
        sub_1DDA18310(v16);
      }
    }
    else
    {
LABEL_16:
      sub_1DDA1B2DC(&v15, &v17);
      (*(void (**)(uint64_t, uint64_t *))(*(void *)a1 + 160))(a1, &v15);
    }
    if (SHIBYTE(v20) < 0) {
      operator delete(__p);
    }
  }
  return v2 ^ 1u;
}

void sub_1DDA870CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a11) {
    sub_1DDA18310(a11);
  }
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA87114(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  uint64_t result = nullsub_6();
  int v6 = *a3;
  if (v6 == 45057)
  {
    if (a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
    {
      unsigned int v9 = 0;
      sub_1DDA1B3CC(&v10, &v9);
      uint64_t result = sub_1DDA3F234((uint64_t)a3, &v10);
      *(_DWORD *)(a1 + 1264) = result;
    }
  }
  else if (v6 == 8201 && a3[1] == 3 && *((_DWORD *)a3 + 1) == 1)
  {
    unsigned int v9 = 0;
    sub_1DDA1B3CC(&v10, &v9);
    uint64_t result = sub_1DDA3F234((uint64_t)a3, &v10);
    *(_DWORD *)(a1 + 1268) = result;
  }
  return result;
}

uint64_t sub_1DDA871CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 1184);
  if (!v1)
  {
    sub_1DDA1A880(__p, "IFD0:SUBIFD0");
    uint64_t v1 = sub_1DDA481F0(a1, __p);
    if (v5 < 0) {
      operator delete(__p[0]);
    }
  }
  return v1;
}

void sub_1DDA87230(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA8724C(uint64_t a1)
{
  if (*(void *)(a1 + 1184)) {
    return 0;
  }
  sub_1DDA1A880(__p, "IFD0:SUBIFD0");
  uint64_t v1 = sub_1DDA48264(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v1;
}

void sub_1DDA872B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1DDA872D4(uint64_t a1)
{
  if (*(void *)(a1 + 1184)) {
    sub_1DDA1A880(__p, "IFD0");
  }
  else {
    sub_1DDA1A880(__p, "IFD0:SUBIFD0");
  }
  unint64_t v2 = sub_1DDA48394(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA87358(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA87378(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 1440) && *(unsigned char *)(a1 + 1452)) {
    return *(void *)(a1 + 1432);
  }
  else {
    return sub_1DDA27EA8(a1);
  }
}

void sub_1DDA873B0(uint64_t a1@<X0>, unsigned int *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v62 = 0;
  int v63 = 0;
  uint64_t v64 = 0;
  uint64_t v59 = 0;
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  sub_1DDA1A880(&__p, "IFD0:SUBIFD0");
  uint64_t v8 = sub_1DDA2A530(a1 + 1192, (void **)&__p);
  unsigned int v9 = v8;
  if ((void **)(a1 + 1200) == v8) {
    int v10 = 0;
  }
  else {
    int v10 = *((unsigned __int16 *)v8 + 28);
  }
  if (SHIBYTE(v58) < 0) {
    operator delete((void *)__p);
  }
  if ((void **)(a1 + 1200) == v9)
  {
LABEL_44:
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 384))(&v54, a1);
    v52[0] = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 424))(a1);
    sub_1DDA8909C(&v54, (unint64_t *)v52, a2, a3, &__p);
    if (v55) {
      sub_1DDA18310(v55);
    }
  }
  else
  {
    switch(v10)
    {
      case 0:
        (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 384))(&v54, a1);
        v52[0] = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 424))(a1);
        sub_1DDA58378(&v54, (unint64_t *)v52, a2, a3, &__p);
        if (v55) {
          sub_1DDA18310(v55);
        }
        uint64_t v11 = __p;
        int v54 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 432))(a1);
        sub_1DDA18500(v52, (unint64_t *)&v54);
        (*(void (**)(uint64_t, void **))(*(void *)v11 + 32))(v11, v52);
        uint64_t v12 = __p;
        uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 104))(a1);
        sub_1DDAA72C4(v12, v13);
        break;
      case 1:
        (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 384))(&v54, a1);
        v52[0] = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 424))(a1);
        sub_1DDA88DC0(&v54, (unint64_t *)v52, a2, a3, &__p);
        if (v55) {
          sub_1DDA18310(v55);
        }
        uint64_t v18 = __p;
        int v54 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 432))(a1);
        sub_1DDA18500(v52, (unint64_t *)&v54);
        (*(void (**)(uint64_t, void **))(*(void *)v18 + 32))(v18, v52);
        uint64_t v19 = __p;
        uint64_t v20 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 104))(a1);
        sub_1DDAA72C4(v19, v20);
        sub_1DDAB426C(__p, 0);
        sub_1DDAB4274(__p, 1);
        break;
      case 2:
        sub_1DDA1A880(&__p, "IFD0:SUBIFD0");
        if (sub_1DDA45FB8(a1 + 1216, (void **)&__p, (char *)&v62))
        {
          sub_1DDA1A880(&v54, "IFD0:SUBIFD0");
          BOOL v17 = sub_1DDA45FB8(a1 + 1240, &v54, (char *)&v59);
          if (SHIBYTE(v56) < 0) {
            operator delete(v54);
          }
        }
        else
        {
          BOOL v17 = 0;
        }
        if (SHIBYTE(v58) < 0)
        {
          operator delete((void *)__p);
          if (!v17) {
            goto LABEL_44;
          }
        }
        else if (!v17)
        {
          goto LABEL_44;
        }
        (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 384))(&v54, a1);
        v52[0] = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 424))(a1);
        sub_1DDA88EE0(&v54, (unint64_t *)v52, a2, a3, &__p);
        if (v55) {
          sub_1DDA18310(v55);
        }
        uint64_t v27 = __p;
        int v54 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 432))(a1);
        sub_1DDA18500(v52, (unint64_t *)&v54);
        (*(void (**)(uint64_t, void **))(*(void *)v27 + 32))(v27, v52);
        uint64_t v28 = __p;
        uint64_t v29 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 104))(a1);
        sub_1DDAA72C4(v28, v29);
        sub_1DDB09650(__p, (uint64_t)&v62);
        sub_1DDB09674(__p, (uint64_t)&v59);
        break;
      case 3:
        goto LABEL_44;
      case 4:
        long long __p = 0uLL;
        int v58 = 0;
        int v54 = 0;
        size_t v55 = 0;
        unint64_t v56 = 0;
        sub_1DDA48424(a1, 0, v52);
        unsigned int v14 = sub_1DDA2A530(a1 + 872, v52);
        uint64_t v15 = v14;
        if ((void **)(a1 + 880) == v14) {
          unsigned int v16 = 0;
        }
        else {
          unsigned int v16 = *((_DWORD *)v14 + 14);
        }
        if (SHIBYTE(v53) < 0) {
          operator delete(v52[0]);
        }
        sub_1DDA48424(a1, 0, v52);
        uint64_t v30 = sub_1DDA2A530(a1 + 896, v52);
        uint64_t v31 = v30;
        unsigned int v39 = v16;
        if ((void **)(a1 + 904) == v30) {
          uint64_t v32 = 0;
        }
        else {
          uint64_t v32 = *((unsigned int *)v30 + 14);
        }
        if (SHIBYTE(v53) < 0) {
          operator delete(v52[0]);
        }
        sub_1DDA48424(a1, 0, v52);
        BOOL v33 = sub_1DDA88414(a1 + 920, v52, (char *)&__p);
        if (SHIBYTE(v53) < 0) {
          operator delete(v52[0]);
        }
        sub_1DDA48424(a1, 0, v52);
        int v34 = v33 | sub_1DDA88414(a1 + 944, v52, (char *)&v54);
        if ((void **)(a1 + 904) != v31) {
          LOBYTE(v34) = 1;
        }
        if ((void **)(a1 + 880) == v15) {
          char v35 = v34;
        }
        else {
          char v35 = 1;
        }
        if (SHIBYTE(v53) < 0) {
          operator delete(v52[0]);
        }
        if ((v35 & 1) == 0)
        {
          exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](exception, "RawCameraException");
          __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        if (sub_1DDA8847C(a1))
        {
          __int16 v51 = 0;
          v52[0] = 0;
          v52[1] = 0;
          uint64_t v53 = 0;
          uint64_t v48 = 0;
          int v49 = 0;
          uint64_t v50 = 0;
          uint64_t v45 = 0;
          BOOL v46 = 0;
          uint64_t v47 = 0;
          sub_1DDA1A880(v43, "IFD0:SUBIFD0");
          int v36 = sub_1DDA2A530(a1 + 1128, v43);
          if ((void **)(a1 + 1136) != v36) {
            __int16 v51 = *((_WORD *)v36 + 28);
          }
          if (v44 < 0) {
            operator delete(v43[0]);
          }
          sub_1DDA1A880(v43, "IFD0:SUBIFD0");
          sub_1DDA45FB8(a1 + 1104, v43, (char *)v52);
          if (v44 < 0) {
            operator delete(v43[0]);
          }
          sub_1DDA1A880(v43, "IFD0:SUBIFD0");
          sub_1DDA88414(a1 + 1080, v43, (char *)&v48);
          if (v44 < 0) {
            operator delete(v43[0]);
          }
          sub_1DDA1A880(v43, "IFD0:SUBIFD0");
          sub_1DDA88414(a1 + 1152, v43, (char *)&v45);
          if (v44 < 0) {
            operator delete(v43[0]);
          }
          (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 384))(&v41, a1);
          uint64_t v40 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 424))(a1);
          sub_1DDA89404(&v41, (unint64_t *)&v40, a2, a3, (uint64_t)&v48, (uint64_t)v52, &v51, v43, (uint64_t)&v45);
          if (v42) {
            sub_1DDA18310(v42);
          }
          (*(void (**)(void *, void, uint64_t, long long *, void **))(*(void *)v43[0] + 200))(v43[0], v39, v32, &__p, &v54);
          *(_OWORD *)a4 = *(_OWORD *)v43;
          if (v45)
          {
            BOOL v46 = v45;
            operator delete(v45);
          }
          if (v48)
          {
            int v49 = (std::__shared_weak_count *)v48;
            operator delete(v48);
          }
          if (v52[0])
          {
            v52[1] = v52[0];
            operator delete(v52[0]);
          }
        }
        else
        {
          (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 384))(&v48, a1);
          uint64_t v45 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 424))(a1);
          sub_1DDA89248(&v48, (unint64_t *)&v45, a2, a3, v52);
          if (v49) {
            sub_1DDA18310(v49);
          }
          (*(void (**)(void *, void, uint64_t, long long *, void **))(*(void *)v52[0] + 200))(v52[0], v39, v32, &__p, &v54);
          *(_OWORD *)a4 = *(_OWORD *)v52;
        }
        if (v54)
        {
          size_t v55 = (std::__shared_weak_count *)v54;
          operator delete(v54);
        }
        if ((void)__p)
        {
          *((void *)&__p + 1) = __p;
          operator delete((void *)__p);
        }
        goto LABEL_47;
      case 5:
        LODWORD(v48) = 0;
        sub_1DDA48424(a1, 0, &__p);
        sub_1DDA3FF24(a1, (void **)&__p, 0, &v48);
        if (SHIBYTE(v58) < 0) {
          operator delete((void *)__p);
        }
        if (v48 != 32)
        {
          id v37 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](v37, "RawCameraException");
          __cxa_throw(v37, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a1 + 384))(&__p, a1);
        int v54 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 424))(a1);
        sub_1DDA89878(&__p, (unint64_t *)&v54, a2, a3, v52);
        if (*((void *)&__p + 1)) {
          sub_1DDA18310(*((std::__shared_weak_count **)&__p + 1));
        }
        unsigned int v21 = v52[0];
        *(void *)&long long __p = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 432))(a1);
        sub_1DDA18500(&v54, (unint64_t *)&__p);
        (*(void (**)(void *, void **))(*(void *)v21 + 32))(v21, &v54);
        uint64_t v22 = v52[0];
        uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 104))(a1);
        sub_1DDAA72C4((uint64_t)v22, v23);
        LODWORD(v22) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 424))(a1);
        uint64_t v24 = operator new(4uLL);
        *(void *)&long long __p = v24;
        *uint64_t v24 = v22;
        *((void *)&__p + 1) = v24 + 1;
        int v58 = v24 + 1;
        int v25 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 432))(a1);
        uint64_t v26 = operator new(4uLL);
        int v54 = v26;
        *uint64_t v26 = v25;
        size_t v55 = (std::__shared_weak_count *)(v26 + 1);
        unint64_t v56 = v26 + 1;
        (*(void (**)(void *, void, void, long long *, void **))(*(void *)v52[0] + 200))(v52[0], *a2, a2[1], &__p, &v54);
        (*(void (**)(void *, uint64_t))(*(void *)v52[0] + 64))(v52[0], 3);
        (*(void (**)(void *, uint64_t))(*(void *)v52[0] + 48))(v52[0], 3);
        *(_OWORD *)a4 = *(_OWORD *)v52;
        v52[0] = 0;
        v52[1] = 0;
        if (v54)
        {
          size_t v55 = (std::__shared_weak_count *)v54;
          operator delete(v54);
        }
        if ((void)__p)
        {
          *((void *)&__p + 1) = __p;
          operator delete((void *)__p);
        }
        if (v52[1]) {
          sub_1DDA18310((std::__shared_weak_count *)v52[1]);
        }
        goto LABEL_47;
      default:
        *(void *)a4 = 0;
        *(void *)(a4 + 8) = 0;
        goto LABEL_47;
    }
  }
  *(_OWORD *)a4 = __p;
LABEL_47:
  if (v59)
  {
    uint64_t v60 = v59;
    operator delete(v59);
  }
  if (v62)
  {
    int v63 = v62;
    operator delete(v62);
  }
}

void sub_1DDA881A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, std::__shared_weak_count *a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  if (a16) {
    sub_1DDA18310(a16);
  }
  if (__p) {
    operator delete(__p);
  }
  if (a24) {
    operator delete(a24);
  }
  if (a28) {
    operator delete(a28);
  }
  if (a34) {
    operator delete(a34);
  }
  if (a40) {
    operator delete(a40);
  }
  uint64_t v47 = *(void **)(v45 - 152);
  if (v47)
  {
    *(void *)(v45 - 144) = v47;
    operator delete(v47);
  }
  uint64_t v48 = *(void **)(v45 - 128);
  if (v48)
  {
    *(void *)(v45 - 120) = v48;
    operator delete(v48);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA88414(uint64_t a1, void **a2, char *a3)
{
  char v5 = sub_1DDA2A530(a1, a2);
  int v6 = v5;
  char v7 = (void **)(a1 + 8);
  if (v7 != v5 && v5 + 7 != (void **)a3) {
    sub_1DDA17E28(a3, (char *)v5[7], (uint64_t)v5[8], ((unsigned char *)v5[8] - (unsigned char *)v5[7]) >> 2);
  }
  return v7 != v6;
}

BOOL sub_1DDA8847C(uint64_t a1)
{
  uint64_t v2 = a1 + 632;
  sub_1DDA1A880(__p, "IFD0:SUBIFD0");
  uint64_t v3 = sub_1DDA2A530(v2, __p);
  uint64_t v4 = v3;
  char v5 = (void **)(a1 + 640);
  if (v5 == v3) {
    int v6 = 0;
  }
  else {
    int v6 = *((_DWORD *)v3 + 14);
  }
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  return v5 != v4 && v6 == 6;
}

void sub_1DDA88504(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA88520(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  snprintf(__str, 0x10uLL, "%d", *(_DWORD *)(a1 + 1264));
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_1DDA1A880(__p, "arw");
  unint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    unint64_t v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v8;
    }
    int v58 = a2 + 2;
    if (v10) {
      uint64_t v11 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v10);
    }
    else {
      uint64_t v11 = 0;
    }
    uint64_t v12 = &v11[24 * v7];
    int v54 = v11;
    size_t v55 = v12;
    uint64_t v57 = &v11[24 * v10];
    long long v13 = *(_OWORD *)__p;
    *((void *)v12 + 2) = v53;
    *(_OWORD *)uint64_t v12 = v13;
    __p[1] = 0;
    uint64_t v53 = 0;
    __p[0] = 0;
    unint64_t v56 = v12 + 24;
    sub_1DDA2A0E8(a2, &v54);
    uint64_t v14 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v54);
    int v15 = SHIBYTE(v53);
    a2[1] = v14;
    if (v15 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v6 = *(_OWORD *)__p;
    *(void *)(v5 + 16) = v53;
    *(_OWORD *)unint64_t v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1DDA1A880(__p, "sony");
  unint64_t v17 = a2[1];
  unint64_t v16 = a2[2];
  if (v17 >= v16)
  {
    unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    unint64_t v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20) {
      unint64_t v20 = 2 * v21;
    }
    if (v21 >= 0x555555555555555) {
      unint64_t v22 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v22 = v20;
    }
    int v58 = a2 + 2;
    if (v22) {
      uint64_t v23 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v22);
    }
    else {
      uint64_t v23 = 0;
    }
    uint64_t v24 = &v23[24 * v19];
    int v54 = v23;
    size_t v55 = v24;
    uint64_t v57 = &v23[24 * v22];
    long long v25 = *(_OWORD *)__p;
    *((void *)v24 + 2) = v53;
    *(_OWORD *)uint64_t v24 = v25;
    __p[1] = 0;
    uint64_t v53 = 0;
    __p[0] = 0;
    unint64_t v56 = v24 + 24;
    sub_1DDA2A0E8(a2, &v54);
    uint64_t v26 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v54);
    int v27 = SHIBYTE(v53);
    a2[1] = v26;
    if (v27 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v18 = *(_OWORD *)__p;
    *(void *)(v17 + 16) = v53;
    *(_OWORD *)unint64_t v17 = v18;
    a2[1] = v17 + 24;
  }
  sub_1DDA1A880(__p, __str);
  unint64_t v29 = a2[1];
  unint64_t v28 = a2[2];
  if (v29 >= v28)
  {
    unint64_t v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    unint64_t v32 = v31 + 1;
    if (v31 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *a2) >> 3);
    if (2 * v33 > v32) {
      unint64_t v32 = 2 * v33;
    }
    if (v33 >= 0x555555555555555) {
      unint64_t v34 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v34 = v32;
    }
    int v58 = a2 + 2;
    if (v34) {
      char v35 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v34);
    }
    else {
      char v35 = 0;
    }
    int v36 = &v35[24 * v31];
    int v54 = v35;
    size_t v55 = v36;
    uint64_t v57 = &v35[24 * v34];
    long long v37 = *(_OWORD *)__p;
    *((void *)v36 + 2) = v53;
    *(_OWORD *)int v36 = v37;
    __p[1] = 0;
    uint64_t v53 = 0;
    __p[0] = 0;
    unint64_t v56 = v36 + 24;
    sub_1DDA2A0E8(a2, &v54);
    uint64_t v38 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v54);
    int v39 = SHIBYTE(v53);
    a2[1] = v38;
    if (v39 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v30 = *(_OWORD *)__p;
    *(void *)(v29 + 16) = v53;
    *(_OWORD *)unint64_t v29 = v30;
    a2[1] = v29 + 24;
  }
  if (sub_1DDA8847C(a1))
  {
    sub_1DDA1A880(__p, "sraw");
    unint64_t v41 = a2[1];
    unint64_t v40 = a2[2];
    if (v41 >= v40)
    {
      unint64_t v43 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v41 - *a2) >> 3);
      unint64_t v44 = v43 + 1;
      if (v43 + 1 > 0xAAAAAAAAAAAAAAALL) {
        sub_1DDA17F78();
      }
      unint64_t v45 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v40 - *a2) >> 3);
      if (2 * v45 > v44) {
        unint64_t v44 = 2 * v45;
      }
      if (v45 >= 0x555555555555555) {
        unint64_t v46 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v46 = v44;
      }
      int v58 = a2 + 2;
      if (v46) {
        uint64_t v47 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v46);
      }
      else {
        uint64_t v47 = 0;
      }
      uint64_t v48 = &v47[24 * v43];
      int v54 = v47;
      size_t v55 = v48;
      uint64_t v57 = &v47[24 * v46];
      long long v49 = *(_OWORD *)__p;
      *((void *)v48 + 2) = v53;
      *(_OWORD *)uint64_t v48 = v49;
      __p[1] = 0;
      uint64_t v53 = 0;
      __p[0] = 0;
      unint64_t v56 = v48 + 24;
      sub_1DDA2A0E8(a2, &v54);
      uint64_t v50 = a2[1];
      sub_1DDA2A2C8((uint64_t)&v54);
      int v51 = SHIBYTE(v53);
      a2[1] = v50;
      if (v51 < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      long long v42 = *(_OWORD *)__p;
      *(void *)(v41 + 16) = v53;
      *(_OWORD *)unint64_t v41 = v42;
      a2[1] = v41 + 24;
    }
  }
}

void sub_1DDA889CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1DDA88A38(uint64_t a1)
{
  sub_1DDA88AE8(a1);

  JUMPOUT(0x1E01C3DC0);
}

char *sub_1DDA88A70(char *result, unsigned __int16 *a2, unsigned __int16 *a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    uint64_t result = sub_1DDA18108(result, a4);
    unint64_t v7 = (double *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      unsigned int v8 = *a2++;
      *v7++ = (double)v8;
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_1DDA88ACC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA88AE8(uint64_t a1)
{
  *(void *)a1 = &unk_1F3960260;
  if (*(unsigned char *)(a1 + 1400))
  {
    uint64_t v2 = *(void **)(a1 + 1376);
    if (v2)
    {
      *(void *)(a1 + 1384) = v2;
      operator delete(v2);
    }
  }
  uint64_t v3 = *(void **)(a1 + 1344);
  if (v3)
  {
    *(void *)(a1 + 1352) = v3;
    operator delete(v3);
  }
  unint64_t v4 = *(void **)(a1 + 1312);
  if (v4)
  {
    *(void *)(a1 + 1320) = v4;
    operator delete(v4);
  }
  unint64_t v5 = *(void **)(a1 + 1280);
  if (v5)
  {
    *(void *)(a1 + 1288) = v5;
    operator delete(v5);
  }
  sub_1DDA2A418(a1 + 1240, *(void **)(a1 + 1248));
  sub_1DDA2A418(a1 + 1216, *(void **)(a1 + 1224));
  sub_1DDA2A4CC(a1 + 1192, *(char **)(a1 + 1200));

  return sub_1DDA49A44(a1);
}

void sub_1DDA88BA4(void *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x5C8uLL);
  sub_1DDA88C38(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA88C24(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA88C38(void *a1, void *a2, char *a3, void **a4, void **a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F39605A0;
  sub_1DDA84544((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1DDA88C8C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA88CA0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F39605A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA88CC0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F39605A0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA88D14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

_DWORD *sub_1DDA88D3C(_DWORD *result, void *a2)
{
  uint64_t v2 = *result;
  BOOL v3 = __CFADD__(v2, *a2);
  unint64_t v4 = v2 + *a2;
  *uint64_t result = v4;
  if (v3 || HIDWORD(v4))
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DDA88DAC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA88DC0(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0xE8uLL);
  sub_1DDA88E54(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA88E40(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA88E54(void *a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F395F450;
  sub_1DDAA58A8((uint64_t)(a1 + 3), a2, *a3, a4, a5);
  a1[3] = &unk_1F3977C98;
  *(void *)((char *)a1 + 212) = 0x100000000;
  a1[28] = 0;
  return a1;
}

void sub_1DDA88ECC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA88EE0(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x108uLL);
  sub_1DDA88F74((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA88F60(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA88F74(uint64_t a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F39605F0;
  sub_1DDAA58A8(a1 + 24, a2, *a3, a4, a5);
  *(void *)(a1 + 24) = &unk_1F3976288;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  return a1;
}

void sub_1DDA88FEC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA89000(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F39605F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA89020(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F39605F0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA89074(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1DDA8909C(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0xD8uLL);
  sub_1DDA89130(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA8911C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA89130(void *a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F3960640;
  sub_1DDAA58A8((uint64_t)(a1 + 3), a2, *a3, a4, a5);
  a1[3] = &unk_1F3962E78;
  return a1;
}

void sub_1DDA89198(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA891AC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3960640;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA891CC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3960640;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA89220(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1DDA89248(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x110uLL);
  sub_1DDA892DC((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA892C8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA892DC(uint64_t a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F3960690;
  sub_1DDAA58A8(a1 + 24, a2, *a3, a4, a5);
  *(void *)(a1 + 24) = &unk_1F397E688;
  *(_DWORD *)(a1 + 212) = 0;
  *(_DWORD *)(a1 + 216) = 0;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  return a1;
}

void sub_1DDA89354(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA89368(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3960690;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA89388(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3960690;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA893DC(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1DDA89404(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, _WORD *a7@<X7>, void *a8@<X8>, uint64_t a9)
{
  unint64_t v17 = operator new(0x160uLL);
  sub_1DDA894D0(v17, a1, a2, a3, a4, a5, a6, a7, a9);
  *a8 = v17 + 3;
  a8[1] = v17;

  sub_1DDA1AF34((uint64_t)a8, v17 + 4, (uint64_t)(v17 + 3));
}

void sub_1DDA894BC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA894D0(void *a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5, uint64_t a6, uint64_t a7, _WORD *a8, uint64_t a9)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F39606E0;
  sub_1DDA895D8((uint64_t)(a1 + 3), a2, a3, a4, a5, a6, a7, a8, a9);
  return a1;
}

void sub_1DDA89528(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA8953C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F39606E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA8955C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F39606E0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA895B0(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_1DDA895D8(uint64_t a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5, uint64_t a6, uint64_t a7, _WORD *a8, uint64_t a9)
{
  unint64_t v15 = *a3;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v23 = 0;
  sub_1DDA1D984(&v23, *(const void **)a6, *(void *)(a6 + 8), (uint64_t)(*(void *)(a6 + 8) - *(void *)a6) >> 2);
  unint64_t v20 = 0;
  unint64_t v21 = 0;
  uint64_t v22 = 0;
  sub_1DDA1D908(&v20, *(const void **)a7, *(void *)(a7 + 8), (uint64_t)(*(void *)(a7 + 8) - *(void *)a7) >> 1);
  LOWORD(a8) = *a8;
  long long v18 = 0;
  uint64_t v19 = 0;
  long long __p = 0;
  sub_1DDA1D984(&__p, *(const void **)a9, *(void *)(a9 + 8), (uint64_t)(*(void *)(a9 + 8) - *(void *)a9) >> 2);
  sub_1DDA89738(a1, a2, v15, a4, a5, (uint64_t)&v23, (uint64_t)&v20, (__int16)a8, (uint64_t)&__p);
  if (__p)
  {
    long long v18 = __p;
    operator delete(__p);
  }
  if (v20)
  {
    unint64_t v21 = v20;
    operator delete(v20);
  }
  if (v23)
  {
    uint64_t v24 = v23;
    operator delete(v23);
  }
  return a1;
}

void sub_1DDA896EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  if (a13) {
    operator delete(a13);
  }
  if (a16) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA89738(uint64_t a1, void *a2, unint64_t a3, void *a4, _OWORD *a5, uint64_t a6, uint64_t a7, __int16 a8, uint64_t a9)
{
  uint64_t v13 = sub_1DDAA58A8(a1, a2, a3, a4, a5);
  *(void *)uint64_t v13 = &unk_1F3972C80;
  *(_DWORD *)(v13 + 188) = 0;
  *(_DWORD *)(v13 + 192) = 0;
  *(_OWORD *)(v13 + 200) = 0u;
  *(_OWORD *)(v13 + 248) = 0u;
  *(_OWORD *)(v13 + 216) = 0u;
  *(_OWORD *)(v13 + 232) = 0u;
  *(void *)(v13 + 264) = 0;
  sub_1DDA1D984((void *)(v13 + 248), *(const void **)a6, *(void *)(a6 + 8), (uint64_t)(*(void *)(a6 + 8) - *(void *)a6) >> 2);
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 0;
  sub_1DDA1D908((void *)(a1 + 272), *(const void **)a7, *(void *)(a7 + 8), (uint64_t)(*(void *)(a7 + 8) - *(void *)a7) >> 1);
  *(_WORD *)(a1 + 296) = a8;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 304) = 0;
  sub_1DDA1D984((void *)(a1 + 304), *(const void **)a9, *(void *)(a9 + 8), (uint64_t)(*(void *)(a9 + 8) - *(void *)a9) >> 2);
  return a1;
}

void sub_1DDA89814(_Unwind_Exception *a1)
{
  long long v6 = *v3;
  if (*v3)
  {
    v1[35] = v6;
    operator delete(v6);
  }
  unint64_t v7 = *v2;
  if (*v2)
  {
    v1[32] = v7;
    operator delete(v7);
  }
  unsigned int v8 = (void *)v1[28];
  if (v8)
  {
    v1[29] = v8;
    operator delete(v8);
  }
  unint64_t v9 = *v4;
  if (*v4)
  {
    v1[26] = v9;
    operator delete(v9);
  }
  sub_1DDA18384(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA89878(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x110uLL);
  sub_1DDA8990C((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA898F8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA8990C(uint64_t a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F3960730;
  sub_1DDAA58A8(a1 + 24, a2, *a3, a4, a5);
  *(void *)(a1 + 24) = &unk_1F396F718;
  *(_DWORD *)(a1 + 212) = 0;
  *(_DWORD *)(a1 + 216) = 0;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  return a1;
}

void sub_1DDA89984(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA89998(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3960730;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA899B8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3960730;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA89A0C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

id sub_1DDA89A34(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v43[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *MEMORY[0x1E4F30058];
  uint64_t v34 = *MEMORY[0x1E4F30038];
  uint64_t v35 = v5;
  v42[0] = MEMORY[0x1E4F1CC38];
  v42[1] = @"com.sony.raw-image";
  uint64_t v6 = *MEMORY[0x1E4F30050];
  uint64_t v36 = *MEMORY[0x1E4F30018];
  void v42[2] = @".srf.";
  uint64_t v42[3] = &unk_1F39AE9C0;
  v42[4] = &unk_1F39AE9D8;
  unint64_t v7 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA89D2C, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E4F30040], *MEMORY[0x1E4F30048]);
  v42[5] = v7;
  uint64_t v37 = *MEMORY[0x1E4F30000];
  uint64_t v11 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v8, (uint64_t)sub_1DDA89D78, v9, v10);
  v42[6] = v11;
  uint64_t v38 = *MEMORY[0x1E4F30020];
  unint64_t v15 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v12, (uint64_t)sub_1DDA89D84, v13, v14);
  v42[7] = v15;
  uint64_t v39 = *MEMORY[0x1E4F30008];
  uint64_t v19 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v16, (uint64_t)sub_1DDA818EC, v17, v18);
  v42[8] = v19;
  uint64_t v40 = *MEMORY[0x1E4F30028];
  uint64_t v23 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v20, (uint64_t)sub_1DDA89D90, v21, v22);
  v42[9] = v23;
  uint64_t v41 = *MEMORY[0x1E4F30030];
  int v27 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v24, (uint64_t)sub_1DDA89D9C, v25, v26);
  v42[10] = v27;
  unint64_t v29 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v43[0] = v29;
  unint64_t v32 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v30, (uint64_t)v43, 1, v31);

  return v32;
}

void sub_1DDA89CCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA89D2C(unsigned char *a1, unint64_t a2, void *a3)
{
  if (a2 >= 4 && *a1 == 73 && a1[1] == 73 && a1[2] == 42 && !a1[3]) {
    return sub_1DDA844D0(@"com.sony.raw-image", a3);
  }
  else {
    return 0;
  }
}

void sub_1DDA89D78(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA89D84(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA89D90(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, &unk_1F3960770);
}

uint64_t sub_1DDA89D9C(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, &unk_1F3960770);
}

void sub_1DDA89DA8(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v11 = a2;
  id v10 = a3;
  id v9 = a4;
  sub_1DDA8A2D4(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;
}

void sub_1DDA89E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA89E44(uint64_t a1, uint64_t a2)
{
  if (*(_WORD *)(a2 + 2) == 7)
  {
    unsigned int v2 = *(_DWORD *)(a2 + 4);
    if (v2 >= 2) {
      *(void *)(a1 + 1184) = *(_DWORD *)(a2 + 8) + v2;
    }
  }
  return sub_1DDA43314(a1);
}

uint64_t sub_1DDA89E6C(uint64_t a1)
{
  return *(void *)(a1 + 1184);
}

unint64_t sub_1DDA89E74(uint64_t a1)
{
  sub_1DDA1A880(__p, "IFD0");
  unint64_t v2 = sub_1DDA48394(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA89ED0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA89EEC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_1DDA1A880(&__p, "srf");
  unint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    unint64_t v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v8;
    }
    unint64_t v45 = a2 + 2;
    if (v10) {
      char v11 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v10);
    }
    else {
      char v11 = 0;
    }
    uint64_t v12 = &v11[24 * v7];
    uint64_t v41 = v11;
    long long v42 = v12;
    unint64_t v44 = &v11[24 * v10];
    long long v13 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v12 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)uint64_t v12 = v13;
    memset(&__p, 0, sizeof(__p));
    unint64_t v43 = v12 + 24;
    sub_1DDA2A0E8(a2, &v41);
    uint64_t v14 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v41);
    int v15 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v14;
    if (v15 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v6 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v5 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1DDA1A880(&__p, "sony");
  unint64_t v17 = a2[1];
  unint64_t v16 = a2[2];
  if (v17 >= v16)
  {
    unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    unint64_t v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20) {
      unint64_t v20 = 2 * v21;
    }
    if (v21 >= 0x555555555555555) {
      unint64_t v22 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v22 = v20;
    }
    unint64_t v45 = a2 + 2;
    if (v22) {
      uint64_t v23 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v22);
    }
    else {
      uint64_t v23 = 0;
    }
    uint64_t v24 = &v23[24 * v19];
    uint64_t v41 = v23;
    long long v42 = v24;
    unint64_t v44 = &v23[24 * v22];
    long long v25 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v24 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)uint64_t v24 = v25;
    memset(&__p, 0, sizeof(__p));
    unint64_t v43 = v24 + 24;
    sub_1DDA2A0E8(a2, &v41);
    uint64_t v26 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v41);
    int v27 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v26;
    if (v27 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v18 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v17 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v17 = v18;
    a2[1] = v17 + 24;
  }
  sub_1DDA29B20(a1, &__p);
  unint64_t v29 = a2[1];
  unint64_t v28 = a2[2];
  if (v29 >= v28)
  {
    unint64_t v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    unint64_t v32 = v31 + 1;
    if (v31 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *a2) >> 3);
    if (2 * v33 > v32) {
      unint64_t v32 = 2 * v33;
    }
    if (v33 >= 0x555555555555555) {
      unint64_t v34 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v34 = v32;
    }
    unint64_t v45 = a2 + 2;
    if (v34) {
      uint64_t v35 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v34);
    }
    else {
      uint64_t v35 = 0;
    }
    uint64_t v36 = &v35[24 * v31];
    uint64_t v41 = v35;
    long long v42 = v36;
    unint64_t v44 = &v35[24 * v34];
    long long v37 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v36 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)uint64_t v36 = v37;
    memset(&__p, 0, sizeof(__p));
    unint64_t v43 = v36 + 24;
    sub_1DDA2A0E8(a2, &v41);
    uint64_t v38 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v41);
    int v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v38;
    if (v39 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v30 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v29 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v29 = v30;
    a2[1] = v29 + 24;
  }
}

void sub_1DDA8A244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1DDA8A29C(uint64_t a1)
{
  sub_1DDA49A44(a1);

  JUMPOUT(0x1E01C3DC0);
}

void sub_1DDA8A2D4(void *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x4C0uLL);
  sub_1DDA8A368(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA8A354(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA8A368(void *a1, void *a2, char *a3, void **a4, void **a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F3960AD8;
  sub_1DDA3F2B0((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  a1[3] = &unk_1F39607A0;
  a1[151] = 0;
  return a1;
}

void sub_1DDA8A3DC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA8A3F0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3960AD8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA8A410(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3960AD8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA8A464(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

id sub_1DDA8A48C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v43[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *MEMORY[0x1E4F30058];
  uint64_t v34 = *MEMORY[0x1E4F30038];
  uint64_t v35 = v5;
  v42[0] = MEMORY[0x1E4F1CC38];
  v42[1] = @"com.pentax.raw-image";
  uint64_t v6 = *MEMORY[0x1E4F30050];
  uint64_t v36 = *MEMORY[0x1E4F30018];
  void v42[2] = @".pef.";
  uint64_t v42[3] = &unk_1F39AE9F0;
  v42[4] = &unk_1F39AEA08;
  unint64_t v7 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA15E30, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E4F30040], *MEMORY[0x1E4F30048]);
  v42[5] = v7;
  uint64_t v37 = *MEMORY[0x1E4F30000];
  char v11 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v8, (uint64_t)sub_1DDA8A784, v9, v10);
  v42[6] = v11;
  uint64_t v38 = *MEMORY[0x1E4F30020];
  int v15 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v12, (uint64_t)sub_1DDA8A790, v13, v14);
  v42[7] = v15;
  uint64_t v39 = *MEMORY[0x1E4F30008];
  unint64_t v19 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v16, (uint64_t)sub_1DDA818EC, v17, v18);
  v42[8] = v19;
  uint64_t v40 = *MEMORY[0x1E4F30028];
  uint64_t v23 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v20, (uint64_t)sub_1DDA8A79C, v21, v22);
  v42[9] = v23;
  uint64_t v41 = *MEMORY[0x1E4F30030];
  int v27 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v24, (uint64_t)sub_1DDA8A7A8, v25, v26);
  v42[10] = v27;
  unint64_t v29 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v43[0] = v29;
  unint64_t v32 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v30, (uint64_t)v43, 1, v31);

  return v32;
}

void sub_1DDA8A724(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA8A784(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA8A790(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA8A79C(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, &unk_1F3960B18);
}

uint64_t sub_1DDA8A7A8(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, &unk_1F3960B18);
}

void sub_1DDA8A7B4(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v11 = a2;
  id v10 = a3;
  id v9 = a4;
  sub_1DDA8C4D0(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;
}

void sub_1DDA8A834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA8A850(uint64_t a1)
{
  memset(&__p, 0, sizeof(__p));
  sub_1DDA27D28(a1, &v20);
  uint64_t v2 = (*(int (**)(uint64_t))(*(void *)v20 + 48))(v20);
  if (v21) {
    sub_1DDA18310(v21);
  }
  uint64_t v22 = v2;
  sub_1DDA27D28(a1, &v20);
  uint64_t v3 = v20;
  int v19 = 8;
  sub_1DDA1B3CC(&v24, (unsigned int *)&v19);
  BOOL v4 = sub_1DDA1A0CC(v3, (unsigned int *)&v24, (uint64_t)&__p);
  if (v21) {
    sub_1DDA18310(v21);
  }
  if (v4)
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (size == 7)
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if (memcmp(p_p, "PENTAX ", 7uLL))
      {
LABEL_17:
        BOOL v4 = 0;
        goto LABEL_18;
      }
    }
    else
    {
      if (size != 3) {
        goto LABEL_17;
      }
      uint64_t v6 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        uint64_t v6 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      int data_low = LOWORD(v6->__r_.__value_.__l.__data_);
      int v8 = v6->__r_.__value_.__s.__data_[2];
      if (data_low != 20289 || v8 != 67) {
        goto LABEL_17;
      }
    }
    sub_1DDA27D28(a1, &v20);
    int v12 = sub_1DDA19E68(v20);
    if (v21) {
      sub_1DDA18310(v21);
    }
    BOOL v4 = v12 == 19789 || v12 == 18761;
    if (v12 == 18761 || v12 == 19789)
    {
      std::string::operator=((std::string *)(a1 + 1184), &__p);
      if (v12 == 19789) {
        uint64_t v13 = 2;
      }
      else {
        uint64_t v13 = 1;
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, v13);
      std::string::size_type v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v14 = __p.__r_.__value_.__l.__size_;
      }
      if (v14 != 7) {
        goto LABEL_44;
      }
      int v15 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v15 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      int data = (int)v15->__r_.__value_.__l.__data_;
      int v17 = *(_DWORD *)((char *)v15->__r_.__value_.__r.__words + 3);
      if (data == 1414415696 && v17 == 542654804)
      {
        sub_1DDA1B2DC(&v20, &v22);
        (*(void (**)(uint64_t, uint64_t *))(*(void *)a1 + 144))(a1, &v20);
        sub_1DDA27D28(a1, &v20);
        int v24 = (*(uint64_t (**)(uint64_t))(*(void *)v20 + 48))(v20);
        int v19 = *sub_1DDA57B34(&v24, &v22);
        (*(void (**)(uint64_t, int *))(*(void *)a1 + 160))(a1, &v19);
      }
      else
      {
LABEL_44:
        sub_1DDA27D28(a1, &v20);
        int v24 = (*(uint64_t (**)(uint64_t))(*(void *)v20 + 48))(v20);
        (*(void (**)(uint64_t, int *))(*(void *)a1 + 160))(a1, &v24);
      }
      if (v21) {
        sub_1DDA18310(v21);
      }
    }
  }
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v4;
}

void sub_1DDA8ABA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA8ABFC(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  nullsub_6();
  unsigned int v6 = *a3;
  if (v6 <= 0x68)
  {
    if (*a3 > 4u)
    {
      if (v6 == 5)
      {
        if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1) {
          *(_DWORD *)(a1 + 1208) = *((_DWORD *)a3 + 2);
        }
      }
      else if (v6 == 92 && a3[1] == 1 && *((_DWORD *)a3 + 1) >= 2u)
      {
        LOBYTE(p_dst) = 0;
        if (sub_1DDA41E28((uint64_t)a3) < 5)
        {
          LODWORD(v40) = 1;
          sub_1DDA1B3CC(&__dst, (unsigned int *)&v40);
          char v9 = sub_1DDA49028((uint64_t)a3, (unsigned int *)&__dst);
        }
        else
        {
          sub_1DDA27D28(a1, &v40);
          LODWORD(v35[0]) = sub_1DDA3CE7C((uint64_t)a3);
          sub_1DDA1B4D8((int *)&v38, (int *)v35);
          sub_1DDA1A94C((uint64_t *)&__dst, (uint64_t *)&v40, (uint64_t)&v38, 0);
          if (v41) {
            sub_1DDA18310(v41);
          }
          sub_1DDA27D28(a1, &v40);
          LODWORD(v38) = 1;
          ((void (*)(std::__shared_weak_count *, void **, uint64_t))v40->__vftable[1].~__shared_weak_count)(v40, &v38, 1);
          if (v41) {
            sub_1DDA18310(v41);
          }
          sub_1DDA27D28(a1, &v40);
          ((void (*)(std::__shared_weak_count *, std::string **, uint64_t))v40->__on_zero_shared_weak)(v40, &p_dst, 1);
          if (v41) {
            sub_1DDA18310(v41);
          }
          sub_1DDA1AA18((uint64_t *)&__dst);
          char v9 = (char)p_dst;
        }
        *(unsigned char *)(a1 + 1280) = v9;
      }
    }
    else if (v6 == 3)
    {
      if (a3[1] == 4 && *((_DWORD *)a3 + 1) == 1) {
        *(void *)(a1 + 1224) = *((unsigned int *)a3 + 2);
      }
    }
    else if (v6 == 4 && a3[1] == 4 && *((_DWORD *)a3 + 1) == 1)
    {
      *(void *)(a1 + 1216) = *((unsigned int *)a3 + 2);
    }
    return;
  }
  if (*a3 > 0x200u)
  {
    if (v6 == 513)
    {
      if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) != 0
        || a3[1] != 3
        || *((_DWORD *)a3 + 1) != 4)
      {
        return;
      }
      if (*(char *)(a2 + 23) < 0) {
        sub_1DDA2639C(&__dst, *(void **)a2, *(void *)(a2 + 8));
      }
      else {
        std::string __dst = *(std::string *)a2;
      }
      std::string::append(&__dst, ":WhitePoint", 0xBuLL);
      sub_1DDA27D28(a1, &v38);
      LODWORD(p_dst) = *((_DWORD *)a3 + 2);
      sub_1DDA18410((int *)v35, (int *)&p_dst);
      sub_1DDA1A94C((uint64_t *)&v40, (uint64_t *)&v38, (uint64_t)v35, 0);
      if (v39) {
        sub_1DDA18310(v39);
      }
      sub_1DDA27D28(a1, v35);
      uint64_t v23 = v35[0];
      unsigned int v37 = 4;
      sub_1DDA1B3CC(&p_dst, &v37);
      sub_1DDA1A488(v23, (unsigned int *)&p_dst, (uint64_t *)&v38);
      if (v35[1]) {
        sub_1DDA18310((std::__shared_weak_count *)v35[1]);
      }
      v35[1] = 0;
      uint64_t v36 = 0;
      v35[0] = 0;
      sub_1DDA51EC4((char *)v35, (unsigned __int16 *)v38, (unsigned __int16 *)v39, ((char *)v39 - (unsigned char *)v38) >> 1);
      p_dst = &__dst;
      int v24 = sub_1DDA4B960((uint64_t **)(a1 + 120), (void **)&__dst.__r_.__value_.__l.__data_, (uint64_t)&unk_1DDBFB044, (long long **)&p_dst);
      uint64_t v25 = (void *)v24[7];
      if (v25)
      {
        v24[8] = (uint64_t)v25;
        operator delete(v25);
        void v24[7] = 0;
        v24[8] = 0;
        v24[9] = 0;
      }
      *(_OWORD *)(v24 + 7) = *(_OWORD *)v35;
      v24[9] = v36;
      if (v38)
      {
        uint64_t v39 = (std::__shared_weak_count *)v38;
        operator delete(v38);
      }
      sub_1DDA1AA18((uint64_t *)&v40);
      goto LABEL_110;
    }
    if (v6 == 544 && ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0)
    {
      sub_1DDA27D28(a1, &v40);
      LODWORD(v35[0]) = *((_DWORD *)a3 + 2);
      sub_1DDA18410((int *)&v38, (int *)v35);
      sub_1DDA1A94C((uint64_t *)&__dst, (uint64_t *)&v40, (uint64_t)&v38, 0);
      if (v41) {
        sub_1DDA18310(v41);
      }
      sub_1DDA27D28(a1, &v40);
      char v10 = sub_1DDA19E68((uint64_t)v40);
      if (v41) {
        sub_1DDA18310(v41);
      }
      sub_1DDA27D28(a1, &v40);
      LODWORD(v38) = 12;
      ((void (*)(std::__shared_weak_count *, void **, uint64_t))v40->__vftable[1].~__shared_weak_count)(v40, &v38, 1);
      if (v41) {
        sub_1DDA18310(v41);
      }
      if (a3[1] == 7)
      {
        size_t v11 = (v10 + 12) & 0xF;
        if (*((_DWORD *)a3 + 1) >= (3 * v11 + 14))
        {
          LOWORD(v38) = 0;
          sub_1DDA24A4C(&v40, v11, &v38);
          LOBYTE(v35[0]) = 0;
          sub_1DDA8C358(&v38, v11, v35);
          LOBYTE(p_dst) = 0;
          sub_1DDA8C358(v35, (v11 + 17), &p_dst);
          if (v11)
          {
            uint64_t v12 = 0;
            do
            {
              sub_1DDA27D28(a1, &p_dst);
              __int16 v13 = sub_1DDA19E68((uint64_t)p_dst);
              *(_WORD *)((char *)&v40->__vftable + v12) = v13;
              if (v34) {
                sub_1DDA18310(v34);
              }
              v12 += 2;
            }
            while (2 * v11 != v12);
            for (uint64_t i = 0; i != v11; ++i)
            {
              sub_1DDA27D28(a1, &p_dst);
              char v15 = sub_1DDA19DA0((uint64_t)p_dst);
              *((unsigned char *)v38 + i) = v15;
              if (v34) {
                sub_1DDA18310(v34);
              }
            }
          }
          long long v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          sub_1DDA1D908(&v30, v40, (uint64_t)v41, ((char *)v41 - (char *)v40) >> 1);
          std::string __p = 0;
          unint64_t v28 = 0;
          uint64_t v29 = 0;
          sub_1DDA8C3D8(&__p, v38, (uint64_t)v39, (char *)v39 - (unsigned char *)v38);
          char v16 = sub_1DDA8B6E0(&v30, &__p, v35);
          if (__p)
          {
            unint64_t v28 = __p;
            operator delete(__p);
          }
          if (v30)
          {
            uint64_t v31 = v30;
            operator delete(v30);
          }
          if ((v16 & 1) == 0)
          {
            exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
            MEMORY[0x1E01C3B90](exception, "RawCameraException");
            __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
          }
          if ((void **)(a1 + 1256) != v35) {
            sub_1DDA49578((void *)(a1 + 1256), (char *)v35[0], (char *)v35[1], (char *)v35[1] - (char *)v35[0]);
          }
          if (v35[0])
          {
            v35[1] = v35[0];
            operator delete(v35[0]);
          }
          if (v38)
          {
            uint64_t v39 = (std::__shared_weak_count *)v38;
            operator delete(v38);
          }
          if (v40)
          {
            uint64_t v41 = v40;
            operator delete(v40);
          }
        }
      }
      sub_1DDA1AA18((uint64_t *)&__dst);
    }
  }
  else
  {
    if (v6 != 105)
    {
      if (v6 == 512
        && ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0
        && a3[1] == 3
        && *((_DWORD *)a3 + 1) == 4)
      {
        sub_1DDA27D28(a1, &v40);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)&v40, (void **)&__dst.__r_.__value_.__l.__data_);
        uint64_t v38 = (void *)a2;
        unint64_t v7 = sub_1DDA4B960((uint64_t **)(a1 + 264), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v38);
        int v8 = (void *)v7[7];
        if (v8)
        {
          v7[8] = (uint64_t)v8;
          operator delete(v8);
          v7[7] = 0;
          v7[8] = 0;
          v7[9] = 0;
        }
        *(std::string *)(v7 + 7) = __dst;
        memset(&__dst, 0, sizeof(__dst));
        if (v41) {
          sub_1DDA18310(v41);
        }
      }
      return;
    }
    if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1)) {
      return;
    }
    if (a3[1] != 7) {
      return;
    }
    unsigned int v17 = *((_DWORD *)a3 + 1);
    if (!v17) {
      return;
    }
    if (v17 <= 4)
    {
      LODWORD(v40) = 0;
      sub_1DDA1B3CC(&__dst, (unsigned int *)&v40);
      if (!sub_1DDA49028((uint64_t)a3, (unsigned int *)&__dst)) {
        return;
      }
      goto LABEL_88;
    }
    sub_1DDA27D28(a1, &v40);
    LODWORD(v35[0]) = *((_DWORD *)a3 + 2);
    sub_1DDA18410((int *)&v38, (int *)v35);
    sub_1DDA1A94C((uint64_t *)&__dst, (uint64_t *)&v40, (uint64_t)&v38, 0);
    if (v41) {
      sub_1DDA18310(v41);
    }
    sub_1DDA27D28(a1, &v40);
    int v18 = sub_1DDA19DA0((uint64_t)v40);
    if (v41) {
      sub_1DDA18310(v41);
    }
    sub_1DDA1AA18((uint64_t *)&__dst);
    if (v18)
    {
LABEL_88:
      int v19 = (uint64_t **)(a1 + 1232);
      if (*(char *)(a2 + 23) >= 0) {
        size_t v20 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        size_t v20 = *(void *)(a2 + 8);
      }
      sub_1DDA49688((uint64_t)&__dst, v20 + 21);
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v21 = &__dst;
      }
      else {
        uint64_t v21 = (std::string *)__dst.__r_.__value_.__r.__words[0];
      }
      if (v20)
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v22 = (const void *)a2;
        }
        else {
          uint64_t v22 = *(const void **)a2;
        }
        memmove(v21, v22, v20);
      }
      strcpy((char *)v21 + v20, ":ExpandedDynamicRange");
      uint64_t v40 = (std::__shared_weak_count *)&__dst;
      *((void *)sub_1DDA70898(v19, (void **)&__dst.__r_.__value_.__l.__data_, (uint64_t)&unk_1DDBFB044, (_OWORD **)&v40)+ 7) = 0x3FE0000000000000;
LABEL_110:
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
    }
  }
}

void sub_1DDA8B4EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22)
{
  int v24 = *(std::__shared_weak_count **)(v22 - 96);
  if (v24) {
    sub_1DDA18310(v24);
  }
  sub_1DDA1AA18((uint64_t *)(v22 - 80));
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA8B6E0(void *a1, void *a2, void *a3)
{
  uint64_t v3 = a1[1] - *a1;
  uint64_t v4 = v3 >> 1;
  if (v3 >> 1 != a2[1] - *a2 || a3[1] - *a3 != v4 + 17)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v5 = 0;
  unsigned int v6 = v4 + 16;
  do
    *(unsigned char *)(*a3 + v5++) = 0;
  while (v5 != 16);
  uint64_t v7 = ((unint64_t)v3 >> 1);
  if (v4)
  {
    uint64_t v8 = 0;
    do
    {
      int v9 = *(unsigned __int8 *)(*a2 + v8);
      if ((v9 - 17) < 0xFFFFFFF0) {
        return 1;
      }
      ++*(unsigned char *)(*a3 + (v9 - 1));
    }
    while (v7 != ++v8);
  }
  uint64_t v10 = 0;
  int v11 = 0;
  unsigned int v12 = 16;
  do
  {
    int v13 = *(unsigned __int8 *)(*a3 + v10);
    if (*(unsigned char *)(*a3 + v10))
    {
      int v14 = v13 << (11 - v10);
      int v15 = v11;
      do
      {
        if (v4)
        {
          uint64_t v16 = 0;
          while (v15 != *(unsigned __int16 *)(*a1 + 2 * v16))
          {
            if (v7 == ++v16) {
              goto LABEL_18;
            }
          }
          *(unsigned char *)(*a3 + v12++) = v16;
        }
LABEL_18:
        v15 += 1 << (11 - v10);
        BOOL v17 = __OFSUB__(v13--, 1);
      }
      while (!((v13 < 0) ^ v17 | (v13 == 0)));
      v11 += v14;
    }
    ++v10;
  }
  while (v10 != 16);
  if (v12 == v6)
  {
    *(unsigned char *)(*a3 + v6) = -1;
    return 1;
  }
  return 0;
}

void sub_1DDA8B87C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA8B894(uint64_t a1)
{
  unsigned int v6 = 1;
  sub_1DDA1A880(__p, "IFD0");
  BOOL v2 = sub_1DDA3FE4C(a1, __p, &v6);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  if (v2) {
    return v6;
  }
  else {
    return 1;
  }
}

void sub_1DDA8B904(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA8B920(uint64_t a1)
{
  sub_1DDA1A880(__p, "IFD0");
  uint64_t v2 = sub_1DDA481F0(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA8B97C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA8B998(uint64_t a1)
{
  sub_1DDA1A880(__p, "IFD0");
  uint64_t v2 = sub_1DDA48264(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA8B9F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1DDA8BA10(uint64_t a1)
{
  sub_1DDA1A880(__p, "IFD0");
  unint64_t v2 = sub_1DDA48394(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA8BA6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA8BA88(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1 + 704;
  sub_1DDA1A880(__p, "IFD0");
  char v5 = sub_1DDA2A530(v4, __p);
  unsigned int v6 = v5;
  if ((void **)(a1 + 712) == v5) {
    int v7 = 0;
  }
  else {
    int v7 = *((_DWORD *)v5 + 14);
  }
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  if ((v7 - 9) >= 0xFFFFFFF8 || a1 + 712 == (void)v6) {
    int v9 = v7;
  }
  else {
    int v9 = 0;
  }
  sub_1DDA47F74(a1, a2);
  sub_1DDA1B2DC(__p, (uint64_t *)(a1 + 1216));
  sub_1DDA18500(&v10, (unint64_t *)(a1 + 1224));
  sub_1DDA284D4(a1, (int *)__p, (unsigned int *)&v10, v9, &v11);
  sub_1DDA1A880(__p, "IFD2");
  sub_1DDA476FC(a1, __p, &v10);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  if ((void)v11) {
    sub_1DDA480D4(a2, &v11);
  }
  if ((void)v10) {
    sub_1DDA480D4(a2, &v10);
  }
  if (*((void *)&v10 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v10 + 1));
  }
  if (*((void *)&v11 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v11 + 1));
  }
}

void sub_1DDA8BBCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (a13) {
    sub_1DDA18310(a13);
  }
  sub_1DDA18270((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA8BC40(uint64_t a1)
{
  uint64_t v2 = a1 + 656;
  sub_1DDA1A880(__p, "IFD0");
  uint64_t v3 = sub_1DDA2A530(v2, __p);
  if ((void **)(a1 + 664) == v3 || (uint64_t v4 = (int *)v3[7], v3[8] == v4))
  {
    LOBYTE(v5) = 0;
    int v6 = 0;
  }
  else
  {
    int v5 = *v4;
    int v6 = 1;
  }
  if (v9 < 0)
  {
    operator delete(__p[0]);
    if (v6) {
      goto LABEL_7;
    }
LABEL_9:
    LOWORD(result) = sub_1DDA27FA0();
    return (unsigned __int16)result;
  }
  if (!v6) {
    goto LABEL_9;
  }
LABEL_7:
  LODWORD(result) = ~(-1 << v5);
  return (unsigned __int16)result;
}

void sub_1DDA8BCF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA8BD0C(uint64_t a1, void **a2, void *a3)
{
  int v5 = sub_1DDA2A530(a1 + 1232, a2);
  if ((void **)(a1 + 1240) != v5) {
    *a3 = v5[7];
  }
  return a1 + 1240 != (void)v5;
}

void sub_1DDA8BD54(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v61 = *MEMORY[0x1E4F143B8];
  snprintf(__str, 0x10uLL, "%d", a1[302]);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_1DDA1A880(__p, "pef");
  unint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    unint64_t v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v8;
    }
    uint64_t v59 = a2 + 2;
    if (v10) {
      long long v11 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v10);
    }
    else {
      long long v11 = 0;
    }
    unsigned int v12 = &v11[24 * v7];
    size_t v55 = v11;
    uint64_t v56 = (uint64_t)v12;
    int v58 = &v11[24 * v10];
    long long v13 = *(_OWORD *)__p;
    *((void *)v12 + 2) = v54;
    *(_OWORD *)unsigned int v12 = v13;
    __p[1] = 0;
    uint64_t v54 = 0;
    __p[0] = 0;
    uint64_t v57 = v12 + 24;
    sub_1DDA2A0E8(a2, &v55);
    uint64_t v14 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v55);
    int v15 = SHIBYTE(v54);
    a2[1] = v14;
    if (v15 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v6 = *(_OWORD *)__p;
    *(void *)(v5 + 16) = v54;
    *(_OWORD *)unint64_t v5 = v6;
    a2[1] = v5 + 24;
  }
  uint64_t v16 = &v55;
  (*(void (**)(void **__return_ptr, _DWORD *))(*(void *)a1 + 216))(&v55, a1);
  uint64_t v17 = HIBYTE(v57);
  int v18 = SHIBYTE(v57);
  int v19 = v55;
  if (SHIBYTE(v57) < 0)
  {
    uint64_t v17 = v56;
    uint64_t v16 = (void **)v55;
  }
  size_t v20 = (char *)v16 + v17;
  if (v17 >= 7)
  {
    uint64_t v21 = v16;
    do
    {
      uint64_t v22 = (char *)memchr(v21, 83, v17 - 6);
      if (!v22) {
        break;
      }
      if (*(_DWORD *)v22 == 1397571923 && *(_DWORD *)(v22 + 3) == 1196315987) {
        goto LABEL_25;
      }
      uint64_t v21 = (void **)(v22 + 1);
      uint64_t v17 = v20 - (char *)v21;
    }
    while (v20 - (char *)v21 > 6);
  }
  uint64_t v22 = v20;
LABEL_25:
  BOOL v25 = v22 == v20 || v22 - (char *)v16 == -1;
  if ((v18 & 0x80000000) == 0)
  {
    if (v25) {
      goto LABEL_33;
    }
LABEL_43:
    sub_1DDA1A880(__p, "samsung");
    unint64_t v27 = a2[1];
    unint64_t v32 = a2[2];
    if (v27 >= v32)
    {
      unint64_t v28 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v27 - *a2) >> 3);
      unint64_t v34 = v28 + 1;
      if (v28 + 1 > 0xAAAAAAAAAAAAAAALL) {
        sub_1DDA17F78();
      }
      unint64_t v35 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v32 - *a2) >> 3);
      if (2 * v35 > v34) {
        unint64_t v34 = 2 * v35;
      }
      if (v35 >= 0x555555555555555) {
        unint64_t v31 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v31 = v34;
      }
      uint64_t v59 = a2 + 2;
      if (v31) {
        goto LABEL_52;
      }
      uint64_t v36 = 0;
      goto LABEL_55;
    }
LABEL_44:
    long long v33 = *(_OWORD *)__p;
    *(void *)(v27 + 16) = v54;
    *(_OWORD *)unint64_t v27 = v33;
    a2[1] = v27 + 24;
    goto LABEL_57;
  }
  operator delete(v19);
  if (!v25) {
    goto LABEL_43;
  }
LABEL_33:
  sub_1DDA1A880(__p, "pentax");
  unint64_t v27 = a2[1];
  unint64_t v26 = a2[2];
  if (v27 < v26) {
    goto LABEL_44;
  }
  unint64_t v28 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v27 - *a2) >> 3);
  unint64_t v29 = v28 + 1;
  if (v28 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_1DDA17F78();
  }
  unint64_t v30 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v26 - *a2) >> 3);
  if (2 * v30 > v29) {
    unint64_t v29 = 2 * v30;
  }
  if (v30 >= 0x555555555555555) {
    unint64_t v31 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v31 = v29;
  }
  uint64_t v59 = a2 + 2;
  if (v31)
  {
LABEL_52:
    uint64_t v36 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v31);
    goto LABEL_55;
  }
  uint64_t v36 = 0;
LABEL_55:
  unsigned int v37 = &v36[24 * v28];
  size_t v55 = v36;
  uint64_t v56 = (uint64_t)v37;
  int v58 = &v36[24 * v31];
  long long v38 = *(_OWORD *)__p;
  *((void *)v37 + 2) = v54;
  *(_OWORD *)unsigned int v37 = v38;
  __p[1] = 0;
  uint64_t v54 = 0;
  __p[0] = 0;
  uint64_t v57 = v37 + 24;
  sub_1DDA2A0E8(a2, &v55);
  uint64_t v39 = a2[1];
  sub_1DDA2A2C8((uint64_t)&v55);
  int v40 = SHIBYTE(v54);
  a2[1] = v39;
  if (v40 < 0) {
    operator delete(__p[0]);
  }
LABEL_57:
  sub_1DDA1A880(__p, __str);
  unint64_t v42 = a2[1];
  unint64_t v41 = a2[2];
  if (v42 >= v41)
  {
    unint64_t v44 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v42 - *a2) >> 3);
    unint64_t v45 = v44 + 1;
    if (v44 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v46 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v41 - *a2) >> 3);
    if (2 * v46 > v45) {
      unint64_t v45 = 2 * v46;
    }
    if (v46 >= 0x555555555555555) {
      unint64_t v47 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v47 = v45;
    }
    uint64_t v59 = a2 + 2;
    if (v47) {
      uint64_t v48 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v47);
    }
    else {
      uint64_t v48 = 0;
    }
    long long v49 = &v48[24 * v44];
    size_t v55 = v48;
    uint64_t v56 = (uint64_t)v49;
    int v58 = &v48[24 * v47];
    long long v50 = *(_OWORD *)__p;
    *((void *)v49 + 2) = v54;
    *(_OWORD *)long long v49 = v50;
    __p[1] = 0;
    uint64_t v54 = 0;
    __p[0] = 0;
    uint64_t v57 = v49 + 24;
    sub_1DDA2A0E8(a2, &v55);
    uint64_t v51 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v55);
    int v52 = SHIBYTE(v54);
    a2[1] = v51;
    if (v52 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v43 = *(_OWORD *)__p;
    *(void *)(v42 + 16) = v54;
    *(_OWORD *)unint64_t v42 = v43;
    a2[1] = v42 + 24;
  }
}

void sub_1DDA8C290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1DDA8C2FC(uint64_t a1)
{
  sub_1DDA8C454(a1);

  JUMPOUT(0x1E01C3DC0);
}

void *sub_1DDA8C334@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return sub_1DDA8C3D8(a2, *(const void **)(a1 + 1256), *(void *)(a1 + 1264), *(void *)(a1 + 1264) - *(void *)(a1 + 1256));
}

uint64_t sub_1DDA8C350(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1280);
}

void *sub_1DDA8C358(void *a1, size_t a2, unsigned char *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    size_t v5 = a2;
    sub_1DDA1AC10(a1, a2);
    long long v6 = (unsigned char *)a1[1];
    unint64_t v7 = &v6[v5];
    do
    {
      *v6++ = *a3;
      --v5;
    }
    while (v5);
    a1[1] = v7;
  }
  return a1;
}

void sub_1DDA8C3BC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA8C3D8(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    long long v6 = result;
    uint64_t result = sub_1DDA1AC10(result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1DDA8C438(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA8C454(uint64_t a1)
{
  *(void *)a1 = &unk_1F3960B48;
  uint64_t v2 = *(void **)(a1 + 1256);
  if (v2)
  {
    *(void *)(a1 + 1264) = v2;
    operator delete(v2);
  }
  sub_1DDA2A4CC(a1 + 1232, *(char **)(a1 + 1240));
  if (*(char *)(a1 + 1207) < 0) {
    operator delete(*(void **)(a1 + 1184));
  }

  return sub_1DDA49A44(a1);
}

void sub_1DDA8C4D0(void *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x520uLL);
  sub_1DDA8C564((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA8C550(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA8C564(uint64_t a1, void *a2, char *a3, void **a4, void **a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F3960E98;
  sub_1DDA3F2B0(a1 + 24, a2, *a3, *a4, *a5);
  *(void *)(a1 + 24) = &unk_1F3960B48;
  *(void *)(a1 + 1264) = 0;
  *(_OWORD *)(a1 + 1272) = 0u;
  *(void *)(a1 + 1208) = 0;
  *(_OWORD *)(a1 + 1216) = 0u;
  *(_DWORD *)(a1 + 1232) = 0;
  *(_OWORD *)(a1 + 1240) = 0u;
  *(void *)(a1 + 1256) = a1 + 1264;
  *(void *)(a1 + 1296) = 0;
  *(void *)(a1 + 1288) = 0;
  *(unsigned char *)(a1 + 1304) = 0;
  return a1;
}

void sub_1DDA8C608(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA8C61C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3960E98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA8C63C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3960E98;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA8C690(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

id sub_1DDA8C6B8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v43[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *MEMORY[0x1E4F30058];
  uint64_t v34 = *MEMORY[0x1E4F30038];
  uint64_t v35 = v5;
  v42[0] = MEMORY[0x1E4F1CC38];
  v42[1] = @"com.leafamerica.raw-image";
  uint64_t v6 = *MEMORY[0x1E4F30050];
  uint64_t v36 = *MEMORY[0x1E4F30018];
  void v42[2] = @".mos.";
  uint64_t v42[3] = &unk_1F39AEA20;
  v42[4] = &unk_1F39AEA38;
  uint64_t v7 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA158AC, a4, a5, v34, v35, v36, v6, *MEMORY[0x1E4F30040], *MEMORY[0x1E4F30048]);
  v42[5] = v7;
  uint64_t v37 = *MEMORY[0x1E4F30000];
  long long v11 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v8, (uint64_t)sub_1DDA8C9B0, v9, v10);
  v42[6] = v11;
  uint64_t v38 = *MEMORY[0x1E4F30020];
  int v15 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v12, (uint64_t)sub_1DDA8C9BC, v13, v14);
  v42[7] = v15;
  uint64_t v39 = *MEMORY[0x1E4F30008];
  int v19 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v16, (uint64_t)sub_1DDA818EC, v17, v18);
  v42[8] = v19;
  uint64_t v40 = *MEMORY[0x1E4F30028];
  uint64_t v23 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v20, (uint64_t)sub_1DDA8C9C8, v21, v22);
  v42[9] = v23;
  uint64_t v41 = *MEMORY[0x1E4F30030];
  unint64_t v27 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v24, (uint64_t)sub_1DDA8C9D4, v25, v26);
  v42[10] = v27;
  unint64_t v29 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v28, (uint64_t)v42, (uint64_t)&v34, 11);
  v43[0] = v29;
  unint64_t v32 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v30, (uint64_t)v43, 1, v31);

  return v32;
}

void sub_1DDA8C950(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DDA8C9B0(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA8C9BC(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA8C9C8(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, &unk_1F3960ED8);
}

uint64_t sub_1DDA8C9D4(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, &unk_1F3960ED8);
}

void sub_1DDA8C9E0(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v11 = a2;
  id v10 = a3;
  id v9 = a4;
  sub_1DDA8F248(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;
}

void sub_1DDA8CA60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1DDA8CA7C(uint64_t a1)
{
  v36[1] = *MEMORY[0x1E4F143B8];
  sub_1DDA3F4AC((void **)a1);
  if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0)
  {
    uint64_t v2 = (*(void (**)(uint64_t))(*(void *)a1 + 400))(a1);
    uint64_t v3 = sub_1DDA7A98C(v2, (void *)*MEMORY[0x1E4F2FD40], 0);
    unint64_t v4 = sub_1DDA7A98C(v2, (void *)*MEMORY[0x1E4F2F800], 0);
    objc_msgSend_setObject_forKeyedSubscript_(v3, v5, @"Leaf", *MEMORY[0x1E4F2FD60], v6);
    unsigned int v9 = *(unsigned __int16 *)(a1 + 1180) - 1;
    if (v9 < 0x14) {
      objc_msgSend_setObject_forKeyedSubscript_(v3, v7, *((void *)&off_1E6D04FC0 + (__int16)v9), *MEMORY[0x1E4F2FD68], v8);
    }
    id v10 = NSNumber;
    sub_1DDA1A880(__p, "CameraObj_ISO_speed");
    uint64_t v11 = (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 264))(a1, __p);
    int v15 = objc_msgSend_numberWithInt_(v10, v12, v11, v13, v14);
    v36[0] = v15;
    uint64_t v18 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v16, (uint64_t)v36, 1, v17);

    if (v35 < 0) {
      operator delete(__p[0]);
    }
    objc_msgSend_setObject_forKeyedSubscript_(v4, v19, (uint64_t)v18, *MEMORY[0x1E4F2F878], v20);
    if (*(_WORD *)(a1 + 1182))
    {
      int v24 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v21, *(unsigned __int16 *)(a1 + 1182), v22, v23);
      uint64_t v25 = *MEMORY[0x1E4F2FD70];
      objc_msgSend_setObject_forKeyedSubscript_(v2, v26, (uint64_t)v24, *MEMORY[0x1E4F2FD70], v27);

      uint64_t v31 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v28, *(unsigned __int16 *)(a1 + 1182), v29, v30);
      objc_msgSend_setObject_forKeyedSubscript_(v3, v32, (uint64_t)v31, v25, v33);
    }
  }
}

void sub_1DDA8CCF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

double sub_1DDA8CD7C(void **a1, uint64_t a2, int a3)
{
  sub_1DDA1A880(v15, "XMP:exif");
  (*((void (**)(void **__return_ptr, void **, void **))*a1 + 49))(__p, a1, v15);
  uint64_t v6 = sub_1DDA2A530((uint64_t)(a1 + 36), __p);
  uint64_t v7 = v6;
  if (a1 + 37 == v6) {
    double v8 = -1.0;
  }
  else {
    double v8 = *((double *)v6 + 7);
  }
  if (v18 < 0) {
    operator delete(__p[0]);
  }
  if (v16 < 0) {
    operator delete(v15[0]);
  }
  if (a1 + 37 == v7)
  {
    if (a3)
    {
      sub_1DDA1A880(v15, "XMP:exif");
      (*((void (**)(void **__return_ptr, void **, void **))*a1 + 49))(__p, a1, v15);
      unsigned int v9 = sub_1DDA2A530((uint64_t)(a1 + 39), __p);
      if (a1 + 40 == v9) {
        double v10 = 0.0;
      }
      else {
        double v10 = *((double *)v9 + 7);
      }
      BOOL v12 = v10 > -100.0 && a1 + 40 != v9;
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      if (v16 < 0)
      {
        operator delete(v15[0]);
        if (v12) {
          return sub_1DDA27858(v10);
        }
      }
      else if (v12)
      {
        return sub_1DDA27858(v10);
      }
    }
    return sub_1DDA276C8(a1, a2, a3);
  }
  return v8;
}

void sub_1DDA8CF48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA8CF84(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  unint64_t v4 = (unsigned __int8 *)a2;
  sub_1DDA43480((uint64_t **)a1, a2, a3);
  int v6 = *a3;
  if (v6 != 34310)
  {
    if (v6 == 259)
    {
      BOOL v7 = a3[1] == 3 && *((_DWORD *)a3 + 1) == 1;
      if (v7)
      {
        LODWORD(v43[0]) = 0;
        sub_1DDA1B3CC(__p, (unsigned int *)v43);
        if (sub_1DDA3F234((uint64_t)a3, (unsigned int *)__p) == 99)
        {
          exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](exception, "RawCameraException");
          __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
      }
    }
    return;
  }
  sub_1DDA1A880(__p, "IFD0");
  uint64_t v9 = v4[23];
  if ((v9 & 0x80u) == 0) {
    double v10 = (void *)v4[23];
  }
  else {
    double v10 = (void *)*((void *)v4 + 1);
  }
  uint64_t v11 = (void *)HIBYTE(v50);
  int v12 = SHIBYTE(v50);
  if (v50 < 0) {
    uint64_t v11 = __p[1];
  }
  if (v10 != v11) {
    goto LABEL_123;
  }
  uint64_t v13 = __p[0];
  if (v50 >= 0) {
    uint64_t v14 = __p;
  }
  else {
    uint64_t v14 = (void **)__p[0];
  }
  if ((v9 & 0x80) != 0)
  {
    if (memcmp(*(const void **)v4, v14, *((void *)v4 + 1)))
    {
LABEL_123:
      if (v12 < 0) {
        operator delete(__p[0]);
      }
      return;
    }
  }
  else if (v4[23])
  {
    while (*v4 == *(unsigned __int8 *)v14)
    {
      ++v4;
      uint64_t v14 = (void **)((char *)v14 + 1);
      if (!--v9) {
        goto LABEL_25;
      }
    }
    goto LABEL_123;
  }
LABEL_25:
  int v15 = a3[1];
  if (v15 == 2)
  {
    if (v12 < 0) {
      operator delete(v13);
    }
  }
  else
  {
    if (v12 < 0) {
      operator delete(v13);
    }
    if (v15 != 1) {
      return;
    }
  }
  sub_1DDA8D950(a1, *((unsigned int *)a3 + 2), *((unsigned int *)a3 + 1), 0);
  if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0 && *(unsigned char *)(a1 + 1200))
  {
    int v48 = 33620224;
    int v47 = 65794;
    int v46 = 16908289;
    int v45 = 16777729;
    LODWORD(__src) = 131074;
    sub_1DDA1A880(__p, "IFD0:EXIF");
    v43[0] = __p;
    char v16 = (char *)sub_1DDA52108((uint64_t **)(a1 + 968), __p, (uint64_t)&unk_1DDBFB044, (_OWORD **)v43);
    sub_1DDA49474(v16 + 56, (char *)&__src, (uint64_t)&__src + 4, 2uLL);
    if (SHIBYTE(v50) < 0) {
      operator delete(__p[0]);
    }
    int v17 = (*(_DWORD *)(a1 + 1208) + 360) % 360;
    switch(v17)
    {
      case 90:
        int v22 = *(unsigned __int8 *)(a1 + 1201);
        if (v22 == 1)
        {
          if (*(unsigned char *)(a1 + 1202) != 3 || *(unsigned char *)(a1 + 1203) != 2 || *(unsigned char *)(a1 + 1204)) {
            break;
          }
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v50 = 0;
          sub_1DDA8C3D8(__p, &v46, (uint64_t)&v47, 4uLL);
          sub_1DDA1A880(v43, "IFD0:EXIF");
          double __src = v43;
          uint64_t v23 = sub_1DDA52108((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src);
          int v24 = (void *)v23[7];
          if (v24)
          {
            v23[8] = v24;
            operator delete(v24);
            v23[7] = 0;
            v23[8] = 0;
            v23[9] = 0;
          }
          *(_OWORD *)(v23 + 7) = *(_OWORD *)__p;
          v23[9] = v50;
          __p[1] = 0;
          uint64_t v50 = 0;
          __p[0] = 0;
          if (v44 < 0)
          {
            operator delete(v43[0]);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
          int v22 = *(unsigned __int8 *)(a1 + 1201);
        }
        if (v22 == 2 && !*(unsigned char *)(a1 + 1202) && *(unsigned char *)(a1 + 1203) == 1 && *(unsigned char *)(a1 + 1204) == 3)
        {
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v50 = 0;
          sub_1DDA8C3D8(__p, &v48, (uint64_t)__p, 4uLL);
          sub_1DDA1A880(v43, "IFD0:EXIF");
          double __src = v43;
          uint64_t v21 = sub_1DDA52108((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src);
          goto LABEL_98;
        }
        break;
      case 180:
        int v25 = *(unsigned __int8 *)(a1 + 1201);
        if (v25 == 1)
        {
          if (*(unsigned char *)(a1 + 1202) != 3 || *(unsigned char *)(a1 + 1203) != 2 || *(unsigned char *)(a1 + 1204)) {
            break;
          }
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v50 = 0;
          sub_1DDA8C3D8(__p, &v47, (uint64_t)&v48, 4uLL);
          sub_1DDA1A880(v43, "IFD0:EXIF");
          double __src = v43;
          uint64_t v26 = sub_1DDA52108((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src);
          uint64_t v27 = (void *)v26[7];
          if (v27)
          {
            v26[8] = v27;
            operator delete(v27);
            v26[7] = 0;
            v26[8] = 0;
            v26[9] = 0;
          }
          *(_OWORD *)(v26 + 7) = *(_OWORD *)__p;
          v26[9] = v50;
          __p[1] = 0;
          uint64_t v50 = 0;
          __p[0] = 0;
          if (v44 < 0)
          {
            operator delete(v43[0]);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
          int v25 = *(unsigned __int8 *)(a1 + 1201);
        }
        if (v25 == 2 && !*(unsigned char *)(a1 + 1202) && *(unsigned char *)(a1 + 1203) == 1 && *(unsigned char *)(a1 + 1204) == 3)
        {
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v50 = 0;
          sub_1DDA8C3D8(__p, &v46, (uint64_t)&v47, 4uLL);
          sub_1DDA1A880(v43, "IFD0:EXIF");
          double __src = v43;
          uint64_t v21 = sub_1DDA52108((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src);
          goto LABEL_98;
        }
        break;
      case 270:
        int v18 = *(unsigned __int8 *)(a1 + 1201);
        if (v18 == 1)
        {
          if (*(unsigned char *)(a1 + 1202) != 3 || *(unsigned char *)(a1 + 1203) != 2 || *(unsigned char *)(a1 + 1204)) {
            break;
          }
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v50 = 0;
          sub_1DDA8C3D8(__p, &v45, (uint64_t)&v46, 4uLL);
          sub_1DDA1A880(v43, "IFD0:EXIF");
          double __src = v43;
          int v19 = sub_1DDA52108((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src);
          uint64_t v20 = (void *)v19[7];
          if (v20)
          {
            void v19[8] = v20;
            operator delete(v20);
            v19[7] = 0;
            void v19[8] = 0;
            v19[9] = 0;
          }
          *(_OWORD *)(v19 + 7) = *(_OWORD *)__p;
          v19[9] = v50;
          __p[1] = 0;
          uint64_t v50 = 0;
          __p[0] = 0;
          if (v44 < 0)
          {
            operator delete(v43[0]);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
          int v18 = *(unsigned __int8 *)(a1 + 1201);
        }
        if (v18 == 2 && !*(unsigned char *)(a1 + 1202) && *(unsigned char *)(a1 + 1203) == 1 && *(unsigned char *)(a1 + 1204) == 3)
        {
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v50 = 0;
          sub_1DDA8C3D8(__p, &v47, (uint64_t)&v48, 4uLL);
          sub_1DDA1A880(v43, "IFD0:EXIF");
          double __src = v43;
          uint64_t v21 = sub_1DDA52108((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src);
LABEL_98:
          uint64_t v31 = v21;
          uint64_t v33 = (void *)v21 + 7;
          unint64_t v32 = (void *)*((void *)v21 + 7);
          if (v32)
          {
            *((void *)v31 + 8) = v32;
            operator delete(v32);
            *uint64_t v33 = 0;
            v33[1] = 0;
            void v33[2] = 0;
          }
          *(_OWORD *)((char *)v31 + 56) = *(_OWORD *)__p;
          *((void *)v31 + 9) = v50;
          __p[1] = 0;
          uint64_t v50 = 0;
          __p[0] = 0;
          if (v44 < 0)
          {
            operator delete(v43[0]);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
        }
        break;
      default:
        int v28 = *(unsigned __int8 *)(a1 + 1201);
        if (v28 == 1)
        {
          if (*(unsigned char *)(a1 + 1202) != 3 || *(unsigned char *)(a1 + 1203) != 2 || *(unsigned char *)(a1 + 1204)) {
            break;
          }
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v50 = 0;
          sub_1DDA8C3D8(__p, &v48, (uint64_t)__p, 4uLL);
          sub_1DDA1A880(v43, "IFD0:EXIF");
          double __src = v43;
          uint64_t v29 = sub_1DDA52108((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src);
          uint64_t v30 = (void *)v29[7];
          if (v30)
          {
            v29[8] = v30;
            operator delete(v30);
            v29[7] = 0;
            v29[8] = 0;
            v29[9] = 0;
          }
          *(_OWORD *)(v29 + 7) = *(_OWORD *)__p;
          v29[9] = v50;
          __p[1] = 0;
          uint64_t v50 = 0;
          __p[0] = 0;
          if (v44 < 0)
          {
            operator delete(v43[0]);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
          int v28 = *(unsigned __int8 *)(a1 + 1201);
        }
        if (v28 == 2 && !*(unsigned char *)(a1 + 1202) && *(unsigned char *)(a1 + 1203) == 1 && *(unsigned char *)(a1 + 1204) == 3)
        {
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v50 = 0;
          sub_1DDA8C3D8(__p, &v45, (uint64_t)&v46, 4uLL);
          sub_1DDA1A880(v43, "IFD0:EXIF");
          double __src = v43;
          uint64_t v21 = sub_1DDA52108((uint64_t **)(a1 + 992), v43, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src);
          goto LABEL_98;
        }
        break;
    }
  }
  int v34 = *(_DWORD *)(a1 + 1212);
  int v35 = *(_DWORD *)(a1 + 1208);
  if (!*(void *)(a1 + 1208)) {
    return;
  }
  int v36 = v35 + ((v34 - v35) & ~((v34 - v35) >> 31));
  if (v36 == v34) {
    int v37 = *(_DWORD *)(a1 + 1212);
  }
  else {
    int v37 = v34 + 1;
  }
  BOOL v7 = v36 == v34;
  unsigned int v38 = (v36 - v37) / 0x168u;
  if (!v7) {
    ++v38;
  }
  int v39 = v34 + 360 * v38;
  if ((v39 - v35) >= 0x167) {
    int v40 = 359;
  }
  else {
    int v40 = v39 - v35;
  }
  signed int v41 = v39 - v35 - 360 * ((v39 - v35 - v40 + 359) / 0x168u);
  if (v41 > 179)
  {
    if (v41 == 180)
    {
      __int16 v42 = 3;
    }
    else
    {
      if (v41 != 270) {
        return;
      }
      __int16 v42 = 8;
    }
  }
  else if (v41)
  {
    if (v41 != 90) {
      return;
    }
    __int16 v42 = 6;
  }
  else
  {
    __int16 v42 = 1;
  }
  *(_WORD *)(a1 + 1182) = v42;
}

void sub_1DDA8D8C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a18) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1DDA8D950(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  uint64_t v76 = *MEMORY[0x1E4F143B8];
  uint64_t v64 = a2;
  sub_1DDA27D28(a1, v70);
  sub_1DDA1B2DC(&v73, &v64);
  sub_1DDA1A94C(v63, (uint64_t *)v70, (uint64_t)&v73, 0);
  if (*(void *)&v70[8]) {
    sub_1DDA18310(*(std::__shared_weak_count **)&v70[8]);
  }
  if (a3 >= 0x35)
  {
    unsigned int v57 = a4 + 1;
    while (1)
    {
      sub_1DDA27D28(a1, v70);
      int v7 = sub_1DDA19EC8(*(uint64_t *)v70);
      if (*(void *)&v70[8]) {
        sub_1DDA18310(*(std::__shared_weak_count **)&v70[8]);
      }
      if (v7 != 1347114067) {
        return sub_1DDA1AA18(v63);
      }
      sub_1DDA27D28(a1, v70);
      uint64_t v8 = *(void *)v70;
      unint64_t v73 = 4;
      sub_1DDA18488(&v60, &v73);
      (*(void (**)(uint64_t, void **, uint64_t))(*(void *)v8 + 40))(v8, &v60, 1);
      if (*(void *)&v70[8]) {
        sub_1DDA18310(*(std::__shared_weak_count **)&v70[8]);
      }
      sub_1DDA27D28(a1, v70);
      (*(void (**)(void, unint64_t *, uint64_t))(**(void **)v70 + 32))(*(void *)v70, &v73, 32);
      if (*(void *)&v70[8]) {
        sub_1DDA18310(*(std::__shared_weak_count **)&v70[8]);
      }
      char v75 = 0;
      sub_1DDA27D28(a1, v70);
      uint64_t v9 = *(void *)v70;
      uint64_t v60 = (void *)8;
      sub_1DDA18488(__p, (unint64_t *)&v60);
      (*(void (**)(uint64_t, void **, uint64_t))(*(void *)v9 + 40))(v9, __p, 1);
      if (*(void *)&v70[8]) {
        sub_1DDA18310(*(std::__shared_weak_count **)&v70[8]);
      }
      sub_1DDA27D28(a1, v70);
      unsigned int v10 = sub_1DDA19EC8(*(uint64_t *)v70);
      if (*(void *)&v70[8]) {
        sub_1DDA18310(*(std::__shared_weak_count **)&v70[8]);
      }
      sub_1DDA27D28(a1, v70);
      int v11 = (*(uint64_t (**)(void))(**(void **)v70 + 48))(*(void *)v70);
      if (*(void *)&v70[8]) {
        sub_1DDA18310(*(std::__shared_weak_count **)&v70[8]);
      }
      uint64_t v72 = 0;
      *(_OWORD *)uint64_t v70 = 0u;
      long long v71 = 0u;
      uint64_t v12 = v11;
      uint64_t v13 = v10;
      if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0)
      {
        BOOL v14 = v73 == 0x6A624F746F6F6853 && *(void *)v74 == 0x79745F6B6361625FLL;
        if (v14 && *(void *)&v74[3] == 0x657079745F6B63)
        {
          LODWORD(__p[0]) = 0;
          sub_1DDA27D28(a1, &v60);
          if (v10 >= 0x27uLL) {
            uint64_t v43 = 39;
          }
          else {
            uint64_t v43 = v10;
          }
          (*(void (**)(void *, char *, uint64_t))(*(void *)v60 + 32))(v60, v70, v43);
          HIBYTE(v72) = 0;
          if (v61) {
            sub_1DDA18310(v61);
          }
          int v44 = sscanf(v70, "%u", __p);
          BOOL v41 = 0;
          __int16 v45 = (__int16)__p[0];
          if (v44 != 1) {
            __int16 v45 = 0;
          }
          *(_WORD *)(a1 + 1180) = v45;
          *(unsigned char *)(a1 + 1216) = 1;
          goto LABEL_191;
        }
      }
      if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0)
      {
        BOOL v16 = v73 == 0x666F725074706143 && *(void *)v74 == 0x5F7265626D756E5FLL;
        BOOL v17 = v16 && *(void *)&v74[8] == 0x656E616C705F666FLL;
        if (v17 && *(unsigned __int16 *)&v74[16] == 115)
        {
          LODWORD(__p[0]) = 0;
          sub_1DDA27D28(a1, &v60);
          if (v10 >= 0x27uLL) {
            uint64_t v46 = 39;
          }
          else {
            uint64_t v46 = v10;
          }
          (*(void (**)(void *, char *, uint64_t))(*(void *)v60 + 32))(v60, v70, v46);
          HIBYTE(v72) = 0;
          if (v61) {
            sub_1DDA18310(v61);
          }
          if (sscanf(v70, "%u", __p) == 1 && LODWORD(__p[0]) >= 2) {
            *(_WORD *)(a1 + 1180) = 2;
          }
          BOOL v41 = 0;
          *(unsigned char *)(a1 + 1217) = 1;
          goto LABEL_191;
        }
      }
      if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0
        && !(v73 ^ 0x5F6A624F7475654ELL | *(void *)v74 ^ 0x736C61727475656ELL | v74[8]))
      {
        sub_1DDA27D28(a1, &v60);
        if (v10 >= 0x27uLL) {
          uint64_t v48 = 39;
        }
        else {
          uint64_t v48 = v10;
        }
        (*(void (**)(void *, char *, uint64_t))(*(void *)v60 + 32))(v60, v70, v48);
        HIBYTE(v72) = 0;
        if (v61) {
          sub_1DDA18310(v61);
        }
        if (sscanf(v70, "%d%d%d%d", &v66, &v67, &v68, &v69) == 4)
        {
          LODWORD(__p[0]) = 0;
          sub_1DDA8F1C4(&v60, 4uLL, __p);
          long long v49 = v60;
          *(_DWORD *)uint64_t v60 = v67;
          v49[1] = v68;
          v49[2] = v68;
          v49[3] = v69;
          sub_1DDA1A880(__p, "NeutObj_neutrals");
          double __src = __p;
          uint64_t v50 = (char *)sub_1DDA52108((uint64_t **)(a1 + 120), __p, (uint64_t)&unk_1DDBFB044, (_OWORD **)&__src) + 56;
          if (v50 != (char *)&v60) {
            sub_1DDA17E28(v50, (char *)v60, (uint64_t)v61, ((char *)v61 - (unsigned char *)v60) >> 2);
          }
          if (v59 < 0) {
            operator delete(__p[0]);
          }
          if (v60)
          {
            uint64_t v61 = (std::__shared_weak_count *)v60;
            operator delete(v60);
          }
        }
        BOOL v41 = 0;
        *(unsigned char *)(a1 + 1218) = 1;
        goto LABEL_191;
      }
      if (v73 == 0x666F725074706143
        && *(void *)v74 == 0x7461645F7761725FLL
        && *(void *)&v74[8] == 0x697461746F725F61
        && *(void *)&v74[11] == 0x6E6F697461746FLL)
      {
        sub_1DDA27D28(a1, &v60);
        if (v10 >= 0x27uLL) {
          uint64_t v42 = 39;
        }
        else {
          uint64_t v42 = v10;
        }
        (*(void (**)(void *, char *, uint64_t))(*(void *)v60 + 32))(v60, v70, v42);
        HIBYTE(v72) = 0;
        if (v61) {
          sub_1DDA18310(v61);
        }
        sscanf(v70, "%d", a1 + 1208);
        BOOL v41 = 0;
        *(unsigned char *)(a1 + 1219) = 1;
        goto LABEL_191;
      }
      if (v73 == 0x5F666F7250676D49
        && *(void *)v74 == 0x6E6F697461746F72
        && *(void *)&v74[7] == 0x656C676E615F6ELL)
      {
        sub_1DDA27D28(a1, &v60);
        if (v10 >= 0x27uLL) {
          uint64_t v47 = 39;
        }
        else {
          uint64_t v47 = v10;
        }
        (*(void (**)(void *, char *, uint64_t))(*(void *)v60 + 32))(v60, v70, v47);
        HIBYTE(v72) = 0;
        if (v61) {
          sub_1DDA18310(v61);
        }
        sscanf(v70, "%d", a1 + 1212);
        BOOL v41 = 0;
        *(unsigned char *)(a1 + 1220) = 1;
        goto LABEL_191;
      }
      if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0)
      {
        BOOL v24 = v73 == 0x666F725074706143 && *(void *)v74 == 0x5F636961736F6D5FLL;
        if (v24 && *(void *)&v74[8] == 0x6E726574746170)
        {
          sub_1DDA27D28(a1, &v60);
          if (v10 >= 0x27uLL) {
            uint64_t v51 = 39;
          }
          else {
            uint64_t v51 = v10;
          }
          (*(void (**)(void *, char *, uint64_t))(*(void *)v60 + 32))(v60, v70, v51);
          HIBYTE(v72) = 0;
          if (v61) {
            sub_1DDA18310(v61);
          }
          BOOL v41 = 0;
          *(unsigned char *)(a1 + 1201) = v70[0] - 48;
          *(unsigned char *)(a1 + 1202) = v70[2] - 48;
          *(unsigned char *)(a1 + 1203) = v70[4] - 48;
          *(unsigned char *)(a1 + 1204) = v70[6] - 48;
          *(unsigned char *)(a1 + 1200) = 1;
          *(unsigned char *)(a1 + 1221) = 1;
          goto LABEL_191;
        }
      }
      BOOL v26 = v73 == 0x6572705F4745504ALL && *(void *)v74 == 0x7461645F77656976;
      if (!v26 || *(unsigned __int16 *)&v74[8] != 97) {
        break;
      }
      BOOL v41 = 0;
      *(void *)(a1 + 1184) = v12;
      *(void *)(a1 + 1192) = v10;
      *(unsigned char *)(a1 + 1222) = 1;
LABEL_191:
      sub_1DDA27D28(a1, &v60);
      uint64_t v54 = v60;
      __p[0] = (void *)(v12 + v13);
      sub_1DDA1B2DC(&v66, (uint64_t *)__p);
      (*(void (**)(void *, unsigned int *, void))(*(void *)v54 + 40))(v54, &v66, 0);
      if (v61) {
        sub_1DDA18310(v61);
      }
      a3 = a3 - 52 - v13;
      char v55 = a3 < 0x35 || v41;
      if (v55) {
        return sub_1DDA1AA18(v63);
      }
    }
    if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0)
    {
      BOOL v28 = v73 == 0x624F6172656D6143 && *(void *)v74 == 0x70735F4F53495F6ALL;
      if (v28 && *(_DWORD *)&v74[8] == 6579557)
      {
        unsigned int v66 = 0;
        sub_1DDA27D28(a1, &v60);
        if (v10 >= 0x27uLL) {
          uint64_t v52 = 39;
        }
        else {
          uint64_t v52 = v10;
        }
        (*(void (**)(void *, char *, uint64_t))(*(void *)v60 + 32))(v60, v70, v52);
        HIBYTE(v72) = 0;
        if (v61) {
          sub_1DDA18310(v61);
        }
        if (sscanf(v70, "%u", &v66) == 1 && v66 <= 6)
        {
          LODWORD(__src) = dword_1DDBFA2F8[v66];
          sub_1DDA1A880(&v60, "CameraObj_ISO_speed");
          __p[0] = &v60;
          uint64_t v53 = (char *)sub_1DDA52108((uint64_t **)(a1 + 192), &v60, (uint64_t)&unk_1DDBFB044, (_OWORD **)__p);
          sub_1DDA17E28(v53 + 56, (char *)&__src, (uint64_t)&__src + 4, 1uLL);
          if (v62 < 0) {
            operator delete(v60);
          }
        }
        BOOL v41 = 0;
        *(unsigned char *)(a1 + 1223) = 1;
        goto LABEL_191;
      }
    }
    if (v73 == 0x4F65727574706143
      && *(void *)v74 == 0x63656C65735F6A62
      && *(void *)&v74[5] == 0x6E6F697463656CLL)
    {
      goto LABEL_190;
    }
    BOOL v32 = v73 == 0x4F65727574706143 && *(void *)v74 == 0x5F656E6F745F6A62;
    BOOL v33 = v32 && *(void *)&v74[6] == 0x65767275635F65;
    if (v33
      || (v73 == 0x4F65727574706143 ? (BOOL v34 = *(void *)v74 == 0x70726168735F6A62) : (BOOL v34 = 0),
          v34 ? (BOOL v35 = *(void *)&v74[5] == 0x7373656E707261) : (BOOL v35 = 0),
          v35
       || (v73 == 0x6A624F746F6F6853 ? (BOOL v36 = *(void *)v74 == 0x735F726F6C6F635FLL) : (BOOL v36 = 0),
           v36 ? (BOOL v37 = *(void *)&v74[5] == 0x70757465735F72) : (BOOL v37 = 0),
           v37
        || (v73 == 0x6A624F746F6F6853 ? (BOOL v38 = *(void *)v74 == 0x65735F657661735FLL) : (BOOL v38 = 0),
            v38 ? (BOOL v39 = *(_DWORD *)&v74[8] == 7370100) : (BOOL v39 = 0),
            v39))))
    {
LABEL_190:
      BOOL v41 = 0;
      goto LABEL_191;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 56))(a1))
    {
      if (*(unsigned char *)(a1 + 1219) && *(unsigned char *)(a1 + 1220))
      {
        int v40 = *(unsigned __int8 *)(a1 + 1222);
LABEL_118:
        BOOL v41 = v40 != 0;
        goto LABEL_187;
      }
    }
    else if (*(unsigned char *)(a1 + 1216) {
           && *(unsigned char *)(a1 + 1217)
    }
           && *(unsigned char *)(a1 + 1218)
           && *(unsigned char *)(a1 + 1219)
           && *(unsigned char *)(a1 + 1220)
           && *(unsigned char *)(a1 + 1221)
           && *(unsigned char *)(a1 + 1222))
    {
      int v40 = *(unsigned __int8 *)(a1 + 1223);
      goto LABEL_118;
    }
    BOOL v41 = 0;
LABEL_187:
    if (v41 || v10 < 0x35) {
      goto LABEL_191;
    }
    sub_1DDA8D950(a1, v12, v10, v57);
    goto LABEL_190;
  }
  return sub_1DDA1AA18(v63);
}

void sub_1DDA8E668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35)
{
}

void *sub_1DDA8E784@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  int v2 = *(unsigned __int16 *)(a1 + 1180);
  if (v2 == 35 || v2 == 32) {
    unint64_t v4 = "Mamiya";
  }
  else {
    unint64_t v4 = "Leaf";
  }
  return sub_1DDA1A880(a2, v4);
}

void *sub_1DDA8E7B0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unsigned int v4 = *(unsigned __int16 *)(a1 + 1180) - 1;
  if (v4 > 0x22) {
    uint64_t v5 = "";
  }
  else {
    uint64_t v5 = off_1E6D05060[(__int16)v4];
  }
  return sub_1DDA1A880(a2, v5);
}

uint64_t sub_1DDA8E7E8(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1180);
}

uint64_t sub_1DDA8E7F0(uint64_t a1)
{
  sub_1DDA1A880(__p, "IFD0");
  uint64_t v2 = sub_1DDA481F0(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA8E84C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA8E868(uint64_t a1)
{
  sub_1DDA1A880(__p, "IFD0");
  uint64_t v2 = sub_1DDA48264(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA8E8C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA8E8E0(uint64_t a1)
{
  unsigned int v6 = 1;
  sub_1DDA1A880(__p, "IFD0");
  BOOL v2 = sub_1DDA3FE4C(a1, __p, &v6);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  if (v2) {
    return v6;
  }
  else {
    return 1;
  }
}

void sub_1DDA8E950(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1DDA8E96C(uint64_t a1)
{
  sub_1DDA1A880(__p, "IFD0");
  unint64_t v2 = sub_1DDA48394(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA8E9C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA8E9E4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DDA47F74(a1, a2);
  sub_1DDA1B2DC(&v6, (uint64_t *)(a1 + 1184));
  sub_1DDA18500(&v5, (unint64_t *)(a1 + 1192));
  sub_1DDA284D4(a1, &v6, &v5, 1, &v7);
  if ((void)v7)
  {
    int v4 = *(unsigned __int16 *)(a1 + 1182);
    if (*(_WORD *)(a1 + 1182))
    {
      if (v4 == 6)
      {
        int v4 = 8;
      }
      else if (v4 == 8)
      {
        int v4 = 6;
      }
    }
    *(_DWORD *)(v7 + 20) = v4;
    sub_1DDA480D4(a2, &v7);
  }
  if (*((void *)&v7 + 1)) {
    sub_1DDA18310(*((std::__shared_weak_count **)&v7 + 1));
  }
}

void sub_1DDA8EA8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1DDA18310(a12);
  }
  sub_1DDA18270(&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA8EABC(uint64_t a1)
{
  return 0x400000004;
}

uint64_t sub_1DDA8EB14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 536))(a1);
  if (result == 7)
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 384))(&v12, a1);
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 424))(a1);
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 440))(a1);
    *(void *)&long long v9 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 448))(a1);
    *((void *)&v9 + 1) = v5;
    sub_1DDA8F410(&v12, (unint64_t *)&v11, &v10, &v9, &v14);
    if (v13) {
      sub_1DDA18310(v13);
    }
    uint64_t v6 = v14;
    uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 432))(a1);
    sub_1DDA18500(&v9, (unint64_t *)&v12);
    (*(void (**)(uint64_t, long long *))(*(void *)v6 + 32))(v6, &v9);
    uint64_t v7 = v14;
    uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 104))(a1);
    uint64_t result = sub_1DDAA72C4(v7, v8);
    *(_OWORD *)a2 = v14;
  }
  else
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
  }
  return result;
}

void sub_1DDA8ED38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, uint64_t a16)
{
  if (a14) {
    sub_1DDA18310(a14);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA8ED6C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  int v3 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 784))(a1);
  snprintf(__str, 0x10uLL, "%u", v3);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_1DDA1A880(__p, "mos");
  unint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    unint64_t v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v8;
    }
    uint64_t v46 = a2 + 2;
    if (v10) {
      uint64_t v11 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v10);
    }
    else {
      uint64_t v11 = 0;
    }
    uint64_t v12 = &v11[24 * v7];
    uint64_t v42 = v11;
    uint64_t v43 = v12;
    __int16 v45 = &v11[24 * v10];
    long long v13 = *(_OWORD *)__p;
    *((void *)v12 + 2) = v41;
    *(_OWORD *)uint64_t v12 = v13;
    __p[1] = 0;
    uint64_t v41 = 0;
    __p[0] = 0;
    int v44 = v12 + 24;
    sub_1DDA2A0E8(a2, &v42);
    uint64_t v14 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v42);
    int v15 = SHIBYTE(v41);
    a2[1] = v14;
    if (v15 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v6 = *(_OWORD *)__p;
    *(void *)(v5 + 16) = v41;
    *(_OWORD *)unint64_t v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1DDA1A880(__p, "leaf");
  unint64_t v17 = a2[1];
  unint64_t v16 = a2[2];
  if (v17 >= v16)
  {
    unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    unint64_t v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20) {
      unint64_t v20 = 2 * v21;
    }
    if (v21 >= 0x555555555555555) {
      unint64_t v22 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v22 = v20;
    }
    uint64_t v46 = a2 + 2;
    if (v22) {
      uint64_t v23 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v22);
    }
    else {
      uint64_t v23 = 0;
    }
    BOOL v24 = &v23[24 * v19];
    uint64_t v42 = v23;
    uint64_t v43 = v24;
    __int16 v45 = &v23[24 * v22];
    long long v25 = *(_OWORD *)__p;
    *((void *)v24 + 2) = v41;
    *(_OWORD *)BOOL v24 = v25;
    __p[1] = 0;
    uint64_t v41 = 0;
    __p[0] = 0;
    int v44 = v24 + 24;
    sub_1DDA2A0E8(a2, &v42);
    uint64_t v26 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v42);
    int v27 = SHIBYTE(v41);
    a2[1] = v26;
    if (v27 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v18 = *(_OWORD *)__p;
    *(void *)(v17 + 16) = v41;
    *(_OWORD *)unint64_t v17 = v18;
    a2[1] = v17 + 24;
  }
  sub_1DDA1A880(__p, __str);
  unint64_t v29 = a2[1];
  unint64_t v28 = a2[2];
  if (v29 >= v28)
  {
    unint64_t v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    unint64_t v32 = v31 + 1;
    if (v31 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *a2) >> 3);
    if (2 * v33 > v32) {
      unint64_t v32 = 2 * v33;
    }
    if (v33 >= 0x555555555555555) {
      unint64_t v34 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v34 = v32;
    }
    uint64_t v46 = a2 + 2;
    if (v34) {
      BOOL v35 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v34);
    }
    else {
      BOOL v35 = 0;
    }
    BOOL v36 = &v35[24 * v31];
    uint64_t v42 = v35;
    uint64_t v43 = v36;
    __int16 v45 = &v35[24 * v34];
    long long v37 = *(_OWORD *)__p;
    *((void *)v36 + 2) = v41;
    *(_OWORD *)BOOL v36 = v37;
    __p[1] = 0;
    uint64_t v41 = 0;
    __p[0] = 0;
    int v44 = v36 + 24;
    sub_1DDA2A0E8(a2, &v42);
    uint64_t v38 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v42);
    int v39 = SHIBYTE(v41);
    a2[1] = v38;
    if (v39 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v30 = *(_OWORD *)__p;
    *(void *)(v29 + 16) = v41;
    *(_OWORD *)unint64_t v29 = v30;
    a2[1] = v29 + 24;
  }
}

void sub_1DDA8F134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1DDA8F18C(uint64_t a1)
{
  sub_1DDA49A44(a1);

  JUMPOUT(0x1E01C3DC0);
}

void *sub_1DDA8F1C4(void *a1, unint64_t a2, _DWORD *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1DDA17F34(a1, a2);
    long long v6 = (_DWORD *)a1[1];
    unint64_t v7 = &v6[a2];
    uint64_t v8 = 4 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 4;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_1DDA8F22C(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA8F248(void *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x4E0uLL);
  sub_1DDA8F2DC((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA8F2C8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA8F2DC(uint64_t a1, void *a2, char *a3, void **a4, void **a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F3961250;
  sub_1DDA3F2B0(a1 + 24, a2, *a3, *a4, *a5);
  *(void *)(a1 + 24) = &unk_1F3960F08;
  *(_DWORD *)(a1 + 1204) = 0;
  *(void *)(a1 + 1216) = 0;
  *(unsigned char *)(a1 + 1224) = 0;
  *(_OWORD *)(a1 + 1232) = 0u;
  return a1;
}

void sub_1DDA8F360(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA8F374(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3961250;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA8F394(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3961250;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA8F3E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

void sub_1DDA8F410(void *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X4>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0xD8uLL);
  sub_1DDA8F4A4((uint64_t)v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA8F490(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA8F4A4(uint64_t a1, void *a2, unint64_t *a3, void *a4, _OWORD *a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F39612A0;
  sub_1DDAA58A8(a1 + 24, a2, *a3, a4, a5);
  *(void *)(a1 + 24) = &unk_1F3976198;
  *(_WORD *)(a1 + 210) = -1;
  return a1;
}

void sub_1DDA8F514(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA8F528(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F39612A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA8F548(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F39612A0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA8F59C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

id sub_1DDA8F5C4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v68[2] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend_numberWithUnsignedLong_(NSNumber, a2, (uint64_t)sub_1DDA15750, a4, a5);
  uint64_t v9 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v6, (uint64_t)sub_1DDA8F9F4, v7, v8);
  uint64_t v13 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v10, (uint64_t)sub_1DDA8FA00, v11, v12);
  uint64_t v53 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v14, (uint64_t)sub_1DDA818EC, v15, v16);
  uint64_t v52 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v17, (uint64_t)sub_1DDA8FA0C, v18, v19);
  uint64_t v51 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v20, (uint64_t)sub_1DDA8FA18, v21, v22);
  uint64_t v26 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v23, (uint64_t)sub_1DDA8FA24, v24, v25);
  uint64_t v47 = *MEMORY[0x1E4F30058];
  v56[0] = *MEMORY[0x1E4F30038];
  uint64_t v48 = v56[0];
  v56[1] = v47;
  v67[0] = MEMORY[0x1E4F1CC38];
  v67[1] = @"com.adobe.raw-image";
  uint64_t v45 = *MEMORY[0x1E4F30050];
  uint64_t v57 = *MEMORY[0x1E4F30018];
  uint64_t v46 = v57;
  uint64_t v58 = v45;
  _DWORD v67[2] = @".dng.";
  v67[3] = &unk_1F39AEA50;
  uint64_t v43 = *MEMORY[0x1E4F30048];
  uint64_t v59 = *MEMORY[0x1E4F30040];
  uint64_t v44 = v59;
  uint64_t v60 = v43;
  v67[4] = &unk_1F39AEA68;
  v67[5] = v5;
  uint64_t v28 = *MEMORY[0x1E4F30020];
  uint64_t v61 = *MEMORY[0x1E4F30000];
  uint64_t v27 = v61;
  uint64_t v62 = v28;
  v67[6] = v9;
  v67[7] = v13;
  uint64_t v50 = (void *)v13;
  long long v30 = (void *)v9;
  uint64_t v31 = *MEMORY[0x1E4F30028];
  uint64_t v63 = *MEMORY[0x1E4F30008];
  uint64_t v29 = v63;
  uint64_t v64 = v31;
  v67[8] = v53;
  v67[9] = v52;
  unint64_t v32 = (void *)v5;
  uint64_t v34 = *MEMORY[0x1E4F30010];
  uint64_t v65 = *MEMORY[0x1E4F30030];
  uint64_t v33 = v65;
  uint64_t v66 = v34;
  v67[10] = v51;
  void v67[11] = v26;
  long long v49 = (void *)v26;
  uint64_t v42 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v35, (uint64_t)v67, (uint64_t)v56, 12);
  v68[0] = v42;
  v54[0] = v48;
  v54[1] = v47;
  v55[0] = MEMORY[0x1E4F1CC38];
  v55[1] = @"com.dxo.raw-image";
  v54[2] = v46;
  v54[3] = v45;
  v55[2] = @".dxo.";
  v55[3] = &unk_1F39AEA50;
  v54[4] = v44;
  v54[5] = v43;
  v55[4] = &unk_1F39AEA68;
  v55[5] = v32;
  v54[6] = v27;
  v54[7] = v28;
  v55[6] = v30;
  v55[7] = v50;
  v54[8] = v29;
  v54[9] = v31;
  v55[8] = v53;
  v55[9] = v52;
  v54[10] = v33;
  v55[10] = v51;
  long long v37 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v36, (uint64_t)v55, (uint64_t)v54, 11);
  v68[1] = v37;
  int v40 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v38, (uint64_t)v68, 2, v39);

  return v40;
}

void sub_1DDA8F950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, void *a20,void *a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_1DDA8F9F4(const void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DDA8FA00(os_signpost_id_t a1)
{
  return sub_1DDA81764(a1);
}

uint64_t sub_1DDA8FA0C(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA7FF34(a1, a2, a3, &unk_1F39612E0);
}

uint64_t sub_1DDA8FA18(os_signpost_id_t a1, unint64_t a2, unint64_t a3)
{
  return sub_1DDA82568(a1, a2, a3, &unk_1F39612E0);
}

uint64_t sub_1DDA8FA24(os_signpost_id_t a1, unint64_t a2, void *a3)
{
  return objc_claimAutoreleasedReturnValue();
}

void sub_1DDA8FA48(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, void *a4@<X4>, _OWORD *a5@<X8>)
{
  char v11 = a2;
  id v10 = a3;
  id v9 = a4;
  sub_1DDA9EEFC(a1, &v11, &v10, &v9, &v8);
  *a5 = v8;
}

void sub_1DDA8FAC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA8FAE4(uint64_t a1, void *a2, char a3, void *a4, void *a5)
{
  sub_1DDA3F2B0(a1, a2, a3, a4, a5);
  *long long v6 = &unk_1F3961310;
  sub_1DDA1A880(v6 + 148, "IFD0");
  sub_1DDA1A880((void *)(a1 + 1208), "IFD0:CAMERAPROFILES0:IFD0");
  *(void *)(a1 + 1232) = 0x1000000000000;
  *(_WORD *)(a1 + 1240) = 1;
  *(_OWORD *)(a1 + 1248) = 0u;
  *(_OWORD *)(a1 + 1264) = 0u;
  *(_OWORD *)(a1 + 1280) = 0u;
  *(_OWORD *)(a1 + 1296) = 0u;
  uint64_t v7 = operator new(0x18uLL);
  *(void *)(a1 + 1288) = v7;
  *(void *)(a1 + 1304) = v7 + 3;
  void v7[2] = 0x3FF0000000000000;
  *(_OWORD *)uint64_t v7 = xmmword_1DDBFA3F8;
  *(void *)(a1 + 1296) = v7 + 3;
  *(void *)(a1 + 1328) = 0;
  *(void *)(a1 + 1320) = 0;
  *(void *)(a1 + 1312) = a1 + 1320;
  *(void *)(a1 + 1352) = 0;
  *(void *)(a1 + 1344) = 0;
  *(void *)(a1 + 1336) = a1 + 1344;
  *(void *)(a1 + 1376) = 0;
  *(void *)(a1 + 1368) = 0;
  *(void *)(a1 + 1360) = a1 + 1368;
  *(void *)(a1 + 1400) = 0;
  *(void *)(a1 + 1392) = 0;
  *(void *)(a1 + 1384) = a1 + 1392;
  *(void *)(a1 + 1416) = 0;
  *(void *)(a1 + 1424) = 0;
  *(void *)(a1 + 1408) = a1 + 1416;
  *(void *)(a1 + 1448) = 0;
  *(void *)(a1 + 1440) = 0;
  *(void *)(a1 + 1432) = a1 + 1440;
  *(void *)(a1 + 1464) = 0;
  *(void *)(a1 + 1472) = 0;
  *(void *)(a1 + 1456) = a1 + 1464;
  *(void *)(a1 + 1488) = 0;
  *(void *)(a1 + 1496) = 0;
  *(void *)(a1 + 1480) = a1 + 1488;
  *(void *)(a1 + 1512) = 0;
  *(void *)(a1 + 1520) = 0;
  *(void *)(a1 + 1504) = a1 + 1512;
  *(void *)(a1 + 1536) = 0;
  *(void *)(a1 + 1544) = 0;
  *(void *)(a1 + 1528) = a1 + 1536;
  *(void *)(a1 + 1568) = 0;
  *(void *)(a1 + 1560) = 0;
  *(void *)(a1 + 1552) = a1 + 1560;
  *(void *)(a1 + 1592) = 0;
  *(void *)(a1 + 1584) = 0;
  *(void *)(a1 + 1576) = a1 + 1584;
  *(double *)(a1 + 1600) = sub_1DDB10E94();
  *(void *)(a1 + 1608) = v8;
  *(_DWORD *)(a1 + 1616) = 0;
  *(void *)(a1 + 1640) = 0;
  *(void *)(a1 + 1632) = 0;
  *(void *)(a1 + 1624) = a1 + 1632;
  *(void *)(a1 + 1664) = 0;
  *(void *)(a1 + 1656) = 0;
  *(void *)(a1 + 1648) = a1 + 1656;
  *(void *)(a1 + 1688) = 0;
  *(void *)(a1 + 1680) = 0;
  *(void *)(a1 + 1672) = a1 + 1680;
  *(void *)(a1 + 1712) = 0;
  *(void *)(a1 + 1704) = 0;
  *(void *)(a1 + 1696) = a1 + 1704;
  *(void *)(a1 + 1736) = 0;
  *(void *)(a1 + 1728) = 0;
  *(void *)(a1 + 1720) = a1 + 1728;
  *(void *)(a1 + 1752) = 0;
  *(void *)(a1 + 1760) = 0;
  *(void *)(a1 + 1744) = a1 + 1752;
  *(void *)(a1 + 1784) = 0;
  *(void *)(a1 + 1776) = 0;
  *(void *)(a1 + 1768) = a1 + 1776;
  *(void *)(a1 + 1800) = 0;
  *(void *)(a1 + 1808) = 0;
  *(void *)(a1 + 1792) = a1 + 1800;
  *(void *)(a1 + 1824) = 0;
  *(void *)(a1 + 1832) = 0;
  *(void *)(a1 + 1816) = a1 + 1824;
  *(void *)(a1 + 1848) = 0;
  *(void *)(a1 + 1856) = 0;
  *(void *)(a1 + 1840) = a1 + 1848;
  *(void *)(a1 + 1872) = 0;
  *(void *)(a1 + 1880) = 0;
  *(void *)(a1 + 1864) = a1 + 1872;
  *(void *)(a1 + 1904) = 0;
  *(void *)(a1 + 1896) = 0;
  *(void *)(a1 + 1888) = a1 + 1896;
  *(void *)(a1 + 1912) = 0x3FF0000000000000;
  *(void *)(a1 + 1920) = 0x3FF0000000000000;
  *(void *)(a1 + 1944) = 0;
  *(void *)(a1 + 1936) = 0;
  *(void *)(a1 + 1928) = a1 + 1936;
  *(unsigned char *)(a1 + 1952) = 0;
  *(unsigned char *)(a1 + 1956) = 0;
  *(unsigned char *)(a1 + 1960) = 0;
  *(unsigned char *)(a1 + 1972) = 0;
  *(unsigned char *)(a1 + 1976) = 0;
  *(unsigned char *)(a1 + 1988) = 0;
  *(unsigned char *)(a1 + 1992) = 0;
  *(unsigned char *)(a1 + 2112) = 0;
  *(void *)(a1 + 2128) = 0;
  *(void *)(a1 + 2136) = 0;
  *(void *)(a1 + 2120) = a1 + 2128;
  *(void *)(a1 + 2152) = 0;
  *(void *)(a1 + 2160) = 0;
  *(void *)(a1 + 2144) = a1 + 2152;
  *(void *)(a1 + 2232) = 0;
  *(_OWORD *)(a1 + 2200) = 0u;
  *(_OWORD *)(a1 + 2216) = 0u;
  *(_OWORD *)(a1 + 2168) = 0u;
  *(_OWORD *)(a1 + 2184) = 0u;
  *(void *)(a1 + 2256) = 0;
  *(void *)(a1 + 2248) = 0;
  *(void *)(a1 + 2240) = a1 + 2248;
  *(void *)(a1 + 2280) = 0;
  *(void *)(a1 + 2272) = 0;
  *(void *)(a1 + 2264) = a1 + 2272;
  *(void *)(a1 + 2304) = 0;
  *(void *)(a1 + 2296) = 0;
  *(void *)(a1 + 2288) = a1 + 2296;
  *(void *)(a1 + 2328) = 0;
  *(void *)(a1 + 2320) = 0;
  *(void *)(a1 + 2312) = a1 + 2320;
  *(void *)(a1 + 2352) = 0;
  *(void *)(a1 + 2344) = 0;
  *(void *)(a1 + 2336) = a1 + 2344;
  *(void *)(a1 + 2376) = 0;
  *(void *)(a1 + 2368) = 0;
  *(void *)(a1 + 2360) = a1 + 2368;
  *(void *)(a1 + 2400) = 0;
  *(void *)(a1 + 2392) = 0;
  *(void *)(a1 + 2384) = a1 + 2392;
  *(void *)(a1 + 2424) = 0;
  *(void *)(a1 + 2416) = 0;
  *(void *)(a1 + 2408) = a1 + 2416;
  *(void *)(a1 + 2448) = 0;
  *(void *)(a1 + 2440) = 0;
  *(void *)(a1 + 2432) = a1 + 2440;
  *(void *)(a1 + 2472) = 0;
  *(void *)(a1 + 2464) = 0;
  *(void *)(a1 + 2456) = a1 + 2464;
  *(void *)(a1 + 2496) = 0;
  *(void *)(a1 + 2488) = 0;
  *(void *)(a1 + 2480) = a1 + 2488;
  return a1;
}

void sub_1DDA8FEB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, void **a14)
{
  sub_1DDA2A418(v16, *(void **)(v14 + 1584));
  sub_1DDA2A418(v22, *(void **)(v14 + 1560));
  sub_1DDA2A4CC(v21, *(char **)(v14 + 1536));
  sub_1DDA2A4CC(v20, *(char **)(v14 + 1512));
  sub_1DDA2A418(v19, *(void **)(v14 + 1488));
  sub_1DDA2A4CC(v18, *(char **)(v14 + 1464));
  sub_1DDA2A4CC(v15, *(char **)(v14 + 1440));
  sub_1DDA2A4CC(v17, *(char **)(v14 + 1416));
  sub_1DDA2A4CC(a10, *(char **)(v14 + 1392));
  sub_1DDA2A4CC(a11, *(char **)(v14 + 1368));
  sub_1DDA2A4CC(a12, *(char **)(v14 + 1344));
  sub_1DDA49D14(a9, *(void **)(v14 + 1320));
  uint64_t v24 = *(void **)(v14 + 1288);
  if (v24)
  {
    *(void *)(v14 + 1296) = v24;
    operator delete(v24);
  }
  uint64_t v25 = *(void **)(v14 + 1248);
  if (v25)
  {
    *(void *)(v14 + 1256) = v25;
    operator delete(v25);
  }
  if (*(char *)(v14 + 1231) < 0) {
    operator delete(*a13);
  }
  if (*(char *)(v14 + 1207) < 0) {
    operator delete(*a14);
  }
  sub_1DDA49A44(v14);
  _Unwind_Resume(a1);
}

id sub_1DDA8FFBC(uint64_t a1, int a2, int a3, int a4)
{
  sub_1DDA1A880(__p, "");
  uint64_t v8 = sub_1DDA90068(a1, a2, a3, (uint64_t)__p, a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }

  return v8;
}

void sub_1DDA9004C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA90068(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v223 = *MEMORY[0x1E4F143B8];
  sub_1DDA4866C(a1, a2, (uint64_t *)&v193);
  objc_msgSend_array(MEMORY[0x1E4F1CA48], v6, v7, v8, v9);
  id v182 = (id)objc_claimAutoreleasedReturnValue();
  id v10 = v193;
  uint64_t v186 = v194;
  if (v193 != v194)
  {
    uint64_t v188 = (void **)(a1 + 784);
    uint64_t v189 = a1 + 776;
    unsigned int v181 = *MEMORY[0x1E4F1E298];
    uint64_t v179 = (void **)(a1 + 928);
    uint64_t v180 = a1 + 920;
    uint64_t v178 = (void **)(a1 + 952);
    uint64_t v190 = a4;
    do
    {
      char v11 = sub_1DDA2A530(a1 + 2264, v10);
      if ((void **)(a1 + 2272) != v11)
      {
        unsigned int v12 = *((unsigned __int16 *)v11 + 28);
        if (v12 >= 3)
        {
          exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](exception, "RawCameraException");
          __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        if (v12 != a5) {
          goto LABEL_154;
        }
      }
      uint64_t v13 = sub_1DDA2A530(a1 + 2288, v10);
      if ((void **)(a1 + 2296) == v13) {
        double v14 = 0.0;
      }
      else {
        double v14 = *((double *)v13 + 7);
      }
      uint64_t v15 = sub_1DDA2A530(a1 + 2312, v10);
      if ((void **)(a1 + 2320) == v15) {
        double v16 = 1.0;
      }
      else {
        double v16 = *((double *)v15 + 7);
      }
      sub_1DDA2A530(a1 + 2336, v10);
      sub_1DDA2A530(a1 + 2360, v10);
      v191.__r_.__value_.__s.__data_[0] = 0;
      char v192 = 0;
      memset(__dst, 0, 24);
      uint64_t v17 = sub_1DDA2A530(a1 + 2408, v10);
      if ((void **)(a1 + 2416) != v17 || (uint64_t v17 = sub_1DDA2A530(a1 + 2384, v10), (void **)(a1 + 2392) != v17))
      {
        std::string::operator=((std::string *)__dst, (const std::string *)(v17 + 7));
        sub_1DDA91638(&v191, (const std::string *)__dst);
      }
      if ((__dst[23] & 0x80000000) != 0) {
        operator delete(*(void **)__dst);
      }
      if (!v192)
      {
LABEL_64:
        BOOL v35 = sub_1DDA2A530(a1 + 536, v10);
        if ((void **)(a1 + 544) == v35)
        {
          uint64_t v173 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](v173, "RawCameraException");
          __cxa_throw(v173, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        unsigned int v36 = *((_DWORD *)v35 + 14);
        long long v37 = sub_1DDA2A530(a1 + 560, v10);
        if ((void **)(a1 + 568) == v37)
        {
          uint64_t v174 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](v174, "RawCameraException");
          __cxa_throw(v174, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        unsigned int v38 = *((_DWORD *)v37 + 14);
        uint64_t v39 = sub_1DDA2A530(a1 + 680, v10);
        if ((void **)(a1 + 688) == v39)
        {
          uint64_t v176 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](v176, "RawCameraException");
          __cxa_throw(v176, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        int v40 = *((_DWORD *)v39 + 14);
        uint64_t v41 = sub_1DDA2A530(a1 + 656, v10);
        if ((void **)(a1 + 664) == v41 || (uint64_t v42 = (int *)v41[7], v41[8] == v42))
        {
          uint64_t v172 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](v172, "RawCameraException");
          __cxa_throw(v172, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        int v43 = *v42;
        uint64_t v44 = sub_1DDA2A530(a1 + 584, v10);
        if ((void **)(a1 + 592) == v44)
        {
          uint64_t v175 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](v175, "RawCameraException");
          __cxa_throw(v175, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        int v45 = *((_DWORD *)v44 + 14);
        uint64_t v46 = sub_1DDA2A530(a1 + 632, v10);
        if ((void **)(a1 + 640) == v46)
        {
LABEL_160:
          uint64_t v167 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](v167, "RawCameraException");
          __cxa_throw(v167, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        if (v45 == 7 || v45 == 52546 || v45 == 34892)
        {
          if (*((_DWORD *)v46 + 14) != a3) {
            goto LABEL_160;
          }
          if (v43 == 8)
          {
            if (v40 == 1)
            {
              uint64_t v47 = sub_1DDA2A530(v189, v10);
              if (v188 == v47) {
                unint64_t v51 = 0;
              }
              else {
                unint64_t v51 = ((unsigned char *)v47[8] - (unsigned char *)v47[7]) >> 2;
              }
              uint64_t v52 = objc_msgSend_dataWithCapacity_(MEMORY[0x1E4F1CA58], v48, 30000, v49, v50, v178);
              if (v51)
              {
                unint64_t v59 = 0;
                unsigned int v60 = 1;
                do
                {
                  uint64_t v61 = sub_1DDA2A530(v189, v10);
                  if (v188 == v61
                    || (uint64_t v62 = v61[7], v59 >= ((unsigned char *)v61[8] - v62) >> 2)
                    || (int v63 = *(_DWORD *)&v62[4 * v59], v64 = sub_1DDA2A530(a1 + 800, v10), (void **)(a1 + 808) == v64)
                    || (uint64_t v65 = v64[7], v59 >= ((unsigned char *)v64[8] - v65) >> 2))
                  {
                    uint64_t v165 = __cxa_allocate_exception(0x10uLL);
                    MEMORY[0x1E01C3B90](v165, "RawCameraException");
                    __cxa_throw(v165, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
                  }
                  size_t v66 = *(unsigned int *)&v65[4 * v59];
                  sub_1DDA1AB9C(__dst, v66);
                  sub_1DDA27D28(a1, __p);
                  LODWORD(v209) = v63;
                  (*(void (**)(void *, void, void, uint64_t *))(*(void *)__p[0] + 24))(__p[0], *(void *)__dst, *(void *)&__dst[8] - *(void *)__dst, &v209);
                  a4 = v190;
                  if (__p[1]) {
                    sub_1DDA18310((std::__shared_weak_count *)__p[1]);
                  }
                  objc_msgSend_appendBytes_length_(v52, v67, *(uint64_t *)__dst, v66, v68);
                  if (*(void *)__dst)
                  {
                    *(void *)&__dst[8] = *(void *)__dst;
                    operator delete(*(void **)__dst);
                  }
                  unint64_t v59 = v60;
                }
                while (v51 > v60++);
                goto LABEL_107;
              }
              uint64_t v102 = sub_1DDA2A530(v180, v10);
              if (v179 == v102) {
                goto LABEL_170;
              }
              uint64_t v103 = ((unsigned char *)v102[8] - (unsigned char *)v102[7]) >> 2;
              if (v103 == 1)
              {
                uint64_t v104 = sub_1DDA2A530(v180, v10);
                if (v179 == v104
                  || (uint64_t v105 = (int *)v104[7], v104[8] == v105)
                  || (v106 = *v105, unint64_t v107 = sub_1DDA2A530(a1 + 944, v10), v178 == v107)
                  || (uint64_t v108 = (unsigned int *)v107[7], v107[8] == v108))
                {
                  uint64_t v170 = __cxa_allocate_exception(0x10uLL);
                  MEMORY[0x1E01C3B90](v170, "RawCameraException");
                  __cxa_throw(v170, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
                }
                size_t v109 = *v108;
                sub_1DDA1AB9C(__dst, v109);
                sub_1DDA27D28(a1, __p);
                LODWORD(v209) = v106;
                (*(void (**)(void *, void, void, uint64_t *))(*(void *)__p[0] + 24))(__p[0], *(void *)__dst, *(void *)&__dst[8] - *(void *)__dst, &v209);
                if (__p[1]) {
                  sub_1DDA18310((std::__shared_weak_count *)__p[1]);
                }
                objc_msgSend_appendBytes_length_(v52, v110, *(uint64_t *)__dst, v109, v111);
                if (*(void *)__dst)
                {
                  *(void *)&__dst[8] = *(void *)__dst;
                  operator delete(*(void **)__dst);
                }
LABEL_107:
                if (!objc_msgSend_length(v52, v69, v70, v71, v72))
                {
                  uint64_t v168 = __cxa_allocate_exception(0x10uLL);
                  MEMORY[0x1E01C3B90](v168, "RawCameraException");
                  __cxa_throw(v168, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
                }
                uint64_t v183 = objc_msgSend_dataWithLength_(MEMORY[0x1E4F1CA58], v74, v38 * (unint64_t)(v36 & 0x1FFFFFFF), v75, v76);
                if (v45 == 52546)
                {
                  int v112 = v52;
                  objc_msgSend_mutableBytes(v112, v113, v114, v115, v116);
                  objc_msgSend_length(v112, v117, v118, v119, v120);
                  unsigned int v121 = v183;
                  objc_msgSend_mutableBytes(v121, v122, v123, v124, v125);
                  JxlDecoderCreate();
                  JxlDecoderSubscribeEvents();
                  if (JxlDecoderSetInput()) {
                    goto LABEL_163;
                  }
                  if (JxlDecoderProcessInput() != 64) {
                    goto LABEL_163;
                  }
                  long long v221 = 0u;
                  memset(v222, 0, sizeof(v222));
                  long long v219 = 0u;
                  long long v220 = 0u;
                  long long v217 = 0u;
                  long long v218 = 0u;
                  long long v215 = 0u;
                  long long v216 = 0u;
                  long long v213 = 0u;
                  long long v214 = 0u;
                  memset(__dst, 0, sizeof(__dst));
                  if (JxlDecoderGetBasicInfo()
                    || *(_DWORD *)&__dst[12] != 8
                    || DWORD1(v214) != 1
                    || JxlDecoderProcessInput() != 256
                    || JxlDecoderGetColorAsEncodedProfile()
                    || JxlDecoderSetPreferredColorProfile()
                    || (uint64_t v209 = DWORD1(v214) | 0x200000000,
                        long long v210 = xmmword_1DDBF8D60,
                        *(void *)&long long v201 = 0,
                        JxlDecoderImageOutBufferSize())
                    || JxlDecoderSetImageOutBuffer()
                    || JxlDecoderProcessInput() != 4096)
                  {
LABEL_163:
                    uint64_t v171 = __cxa_allocate_exception(0x10uLL);
                    MEMORY[0x1E01C3B90](v171, "RawCameraException");
                    __cxa_throw(v171, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
                  }
                  JxlDecoderDestroy();
                  uint64_t v101 = (uint64_t)v183;
                }
                else
                {
                  __int16 v77 = v52;
                  uint64_t v82 = objc_msgSend_mutableBytes(v77, v78, v79, v80, v81);
                  uint64_t v87 = objc_msgSend_length(v77, v83, v84, v85, v86);
                  uint64_t v88 = v183;
                  uint64_t v93 = objc_msgSend_mutableBytes(v88, v89, v90, v91, v92);
                  uint64_t v98 = objc_msgSend_length(v88, v94, v95, v96, v97);
                  long long v201 = xmmword_1F3961658;
                  uint64_t v202 = qword_1F3961668;
                  uint64_t v199 = v82;
                  uint64_t v200 = v87;
                  applejpeg_decode_create();
                  long long v210 = 0uLL;
                  uint64_t v211 = 0;
                  uint64_t v209 = v36 & 0x1FFFFFFF;
                  applejpeg_decode_set_option_stride();
                  uint64_t v197 = 0;
                  uint64_t v198 = 0;
                  uint64_t v195 = v93;
                  uint64_t v196 = v98;
                  output_buffer_std::string::size_type size = applejpeg_decode_open_mem();
                  if (!output_buffer_size)
                  {
                    output_buffer_std::string::size_type size = applejpeg_decode_set_option_outformat();
                    if (!output_buffer_size)
                    {
                      output_buffer_std::string::size_type size = applejpeg_decode_get_output_buffer_size();
                      if (!output_buffer_size) {
                        output_buffer_std::string::size_type size = applejpeg_decode_image_all();
                      }
                    }
                  }
                  applejpeg_decode_destroy();
                  uint64_t v101 = (uint64_t)v183;
                  if (output_buffer_size)
                  {
                    uint64_t v169 = __cxa_allocate_exception(0x10uLL);
                    MEMORY[0x1E01C3B90](v169, "RawCameraException");
                    __cxa_throw(v169, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
                  }
                }
                uint64_t v126 = objc_msgSend_imageWithBitmapData_bytesPerRow_size_format_colorSpace_(MEMORY[0x1E4F1E050], v100, v101, v36 & 0x1FFFFFFF, v181, 0, (double)v36, (double)v38);
                v207[0] = @"inputRVector";
                uint64_t v131 = objc_msgSend_vectorWithX_Y_Z_W_(MEMORY[0x1E4F1E080], v127, v128, v129, v130, v16, 0.0, 0.0, 0.0);
                v208[0] = v131;
                v207[1] = @"inputGVector";
                uint64_t v136 = objc_msgSend_vectorWithX_Y_Z_W_(MEMORY[0x1E4F1E080], v132, v133, v134, v135, 0.0, v16, 0.0, 0.0);
                v208[1] = v136;
                void v207[2] = @"inputBVector";
                uint64_t v141 = objc_msgSend_vectorWithX_Y_Z_W_(MEMORY[0x1E4F1E080], v137, v138, v139, v140, 0.0, 0.0, v16, 0.0);
                void v208[2] = v141;
                v207[3] = @"inputBiasVector";
                uint64_t v146 = objc_msgSend_vectorWithX_Y_Z_W_(MEMORY[0x1E4F1E080], v142, v143, v144, v145, v14, v14, v14, 0.0);
                v208[3] = v146;
                uint64_t v148 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v147, (uint64_t)v208, (uint64_t)v207, 4);
                uint64_t v151 = objc_msgSend_imageByApplyingFilter_withInputParameters_(v126, v149, @"CIColorMatrix", (uint64_t)v148, v150);

                memset(__dst, 0, 24);
                if (sub_1DDA48EBC(a1 + 2432, v10, (void **)__dst))
                {
                  uint64_t v155 = objc_msgSend_dataWithBytes_length_(MEMORY[0x1E4F1C9B8], v152, *(uint64_t *)__dst, *(void *)&__dst[8] - *(void *)__dst, v154);
                  uint64_t v157 = (void *)v155;
                  if (v155)
                  {
                    uint64_t v205 = @"_XMP";
                    uint64_t v206 = v155;
                    uint64_t v158 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v156, (uint64_t)&v206, (uint64_t)&v205, 1);
                    uint64_t v162 = objc_msgSend_imageBySettingProperties_(v151, v159, (uint64_t)v158, v160, v161);
                  }
                  else
                  {
                    uint64_t v162 = v151;
                  }
                }
                else
                {
                  uint64_t v162 = v151;
                }
                if (*(void *)__dst)
                {
                  *(void *)&__dst[8] = *(void *)__dst;
                  operator delete(*(void **)__dst);
                }
                objc_msgSend_addObject_(v182, v152, (uint64_t)v162, v153, v154);

                uint64_t v163 = v183;
              }
              else
              {
                if (!v103)
                {
LABEL_170:
                  uint64_t v177 = __cxa_allocate_exception(0x10uLL);
                  MEMORY[0x1E01C3B90](v177, "RawCameraException");
                  __cxa_throw(v177, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
                }
                uint64_t v163 = sub_1DDBBA998();
                if (os_log_type_enabled(v163, OS_LOG_TYPE_INFO))
                {
                  *(_WORD *)std::string __dst = 0;
                  _os_log_impl(&dword_1DDA14000, v163, OS_LOG_TYPE_INFO, "Auxiliary image will be ignored since it has more than 1 tile.", __dst, 2u);
                }
              }

LABEL_150:
              goto LABEL_151;
            }
            uint64_t v52 = sub_1DDBBA998();
            if (!os_log_type_enabled(v52, OS_LOG_TYPE_INFO)) {
              goto LABEL_150;
            }
            *(_DWORD *)std::string __dst = 67109120;
            *(_DWORD *)&__dst[4] = v40;
            uint64_t v53 = v52;
            uint64_t v54 = "Auxiliary image will be ignored since it has %d channels instead of 1.";
          }
          else
          {
            uint64_t v52 = sub_1DDBBA998();
            if (!os_log_type_enabled(v52, OS_LOG_TYPE_INFO)) {
              goto LABEL_150;
            }
            *(_DWORD *)std::string __dst = 67109120;
            *(_DWORD *)&__dst[4] = v43;
            uint64_t v53 = v52;
            uint64_t v54 = "Auxiliary image will be ignored since it is not 8-bit.  It is %d bits per sample.";
          }
        }
        else
        {
          uint64_t v52 = sub_1DDBBA998();
          if (!os_log_type_enabled(v52, OS_LOG_TYPE_INFO)) {
            goto LABEL_150;
          }
          *(_DWORD *)std::string __dst = 67109120;
          *(_DWORD *)&__dst[4] = v45;
          uint64_t v53 = v52;
          uint64_t v54 = "Auxiliary image will be ignored since it has an unrecognized compression value of %d.";
        }
        _os_log_impl(&dword_1DDA14000, v53, OS_LOG_TYPE_INFO, v54, __dst, 8u);
        goto LABEL_150;
      }
      int v18 = *(char *)(a4 + 23);
      if (v18 < 0)
      {
        if (!*(void *)(a4 + 8)) {
          goto LABEL_64;
        }
      }
      else if (!*(unsigned char *)(a4 + 23))
      {
        goto LABEL_64;
      }
      if (SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_1DDA2639C(__dst, v191.__r_.__value_.__l.__data_, v191.__r_.__value_.__l.__size_);
        if ((*(unsigned char *)(a4 + 23) & 0x80) == 0)
        {
LABEL_24:
          *(_OWORD *)std::string __p = *(_OWORD *)a4;
          uint64_t v204 = *(void *)(a4 + 16);
          goto LABEL_27;
        }
      }
      else
      {
        *(std::string *)std::string __dst = v191;
        if ((v18 & 0x80) == 0) {
          goto LABEL_24;
        }
      }
      sub_1DDA2639C(__p, *(void **)a4, *(void *)(a4 + 8));
LABEL_27:
      if (__dst[23] >= 0) {
        uint64_t v19 = &__dst[__dst[23]];
      }
      else {
        uint64_t v19 = (unsigned char *)(*(void *)__dst + *(void *)&__dst[8]);
      }
      if (__dst[23] >= 0) {
        uint64_t v20 = __dst;
      }
      else {
        uint64_t v20 = *(unsigned char **)__dst;
      }
      while (v20 != v19)
      {
        *uint64_t v20 = __tolower((char)*v20);
        ++v20;
      }
      int64_t v21 = HIBYTE(v204);
      char v22 = HIBYTE(v204);
      uint64_t v23 = (void **)__p[0];
      uint64_t v24 = __p[1];
      if (v204 >= 0) {
        uint64_t v25 = (void **)((char *)__p + HIBYTE(v204));
      }
      else {
        uint64_t v25 = (void **)((char *)__p[0] + (unint64_t)__p[1]);
      }
      if (v204 >= 0) {
        uint64_t v26 = __p;
      }
      else {
        uint64_t v26 = (void **)__p[0];
      }
      if (v26 != v25)
      {
        do
        {
          *(unsigned char *)uint64_t v26 = __tolower(*(char *)v26);
          uint64_t v26 = (void **)((char *)v26 + 1);
        }
        while (v26 != v25);
        int64_t v21 = HIBYTE(v204);
        uint64_t v23 = (void **)__p[0];
        uint64_t v24 = __p[1];
        char v22 = HIBYTE(v204);
      }
      char v27 = __dst[23];
      if (__dst[23] >= 0) {
        uint64_t v28 = __dst;
      }
      else {
        uint64_t v28 = *(unsigned char **)__dst;
      }
      if (v22 >= 0) {
        uint64_t v29 = __p;
      }
      else {
        uint64_t v29 = v23;
      }
      if (v22 >= 0) {
        int64_t v30 = v21;
      }
      else {
        int64_t v30 = (int64_t)v24;
      }
      if (v30)
      {
        uint64_t v31 = *(void *)&__dst[8];
        if (__dst[23] >= 0) {
          uint64_t v31 = __dst[23];
        }
        unint64_t v32 = &v28[v31];
        if (v31 >= v30)
        {
          int v55 = *(char *)v29;
          uint64_t v56 = v28;
          do
          {
            uint64_t v57 = v31 - v30;
            if (v57 == -1) {
              break;
            }
            uint64_t v58 = (char *)memchr(v56, v55, v57 + 1);
            if (!v58) {
              break;
            }
            uint64_t v33 = v58;
            if (!memcmp(v58, v29, v30)) {
              goto LABEL_58;
            }
            uint64_t v56 = v33 + 1;
            uint64_t v31 = v32 - (v33 + 1);
          }
          while (v31 >= v30);
        }
        uint64_t v33 = v32;
LABEL_58:
        if (v33 == v32) {
          uint64_t v34 = -1;
        }
        else {
          uint64_t v34 = v33 - v28;
        }
        a4 = v190;
        if (v22 < 0)
        {
LABEL_87:
          operator delete(v23);
          if ((__dst[23] & 0x80) == 0) {
            goto LABEL_63;
          }
          goto LABEL_88;
        }
      }
      else
      {
        uint64_t v34 = 0;
        if (v22 < 0) {
          goto LABEL_87;
        }
      }
      if ((v27 & 0x80) == 0) {
        goto LABEL_63;
      }
LABEL_88:
      operator delete(*(void **)__dst);
LABEL_63:
      if (v34 != -1) {
        goto LABEL_64;
      }
LABEL_151:
      if (v192 && SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v191.__r_.__value_.__l.__data_);
      }
LABEL_154:
      v10 += 3;
    }
    while (v10 != v186);
  }
  *(void *)std::string __dst = &v193;
  sub_1DDA2A044((void ***)__dst);

  return v182;
}

void sub_1DDA912D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  size_t v66 = (void *)STACK[0x2E0];
  if (STACK[0x2E0])
  {
    STACK[0x2E8] = (unint64_t)v66;
    operator delete(v66);
  }

  if (a62)
  {
    if (a61 < 0) {
      operator delete(a56);
    }
  }

  a56 = &a64;
  sub_1DDA2A044((void ***)&a56);
  _Unwind_Resume(a1);
}

id sub_1DDA91564(uint64_t a1, int a2, int a3, uint64_t a4)
{
  if (*(char *)(a4 + 23) < 0)
  {
    sub_1DDA2639C(__p, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a4;
    uint64_t v10 = *(void *)(a4 + 16);
  }
  uint64_t v7 = sub_1DDA90068(a1, a2, a3, (uint64_t)__p, 0);
  if (SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }

  return v7;
}

void sub_1DDA91608(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

std::string *sub_1DDA91638(std::string *__dst, const std::string *a2)
{
  if (__dst[1].__r_.__value_.__s.__data_[0])
  {
    std::string::operator=(__dst, a2);
  }
  else
  {
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_1DDA2639C(__dst, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v3 = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
      __dst->__r_.__value_.__r.__words[2] = a2->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__dst->__r_.__value_.__l.__data_ = v3;
    }
    __dst[1].__r_.__value_.__s.__data_[0] = 1;
  }
  return __dst;
}

id sub_1DDA916A4(uint64_t a1, int a2, uint64_t a3, int a4)
{
  sub_1DDA1A880(__p, "");
  uint64_t v7 = sub_1DDA9174C(a1, a2, 0, (long long *)__p, a4);
  if (v10 < 0) {
    operator delete(__p[0]);
  }

  return v7;
}

void sub_1DDA91730(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA9174C(uint64_t a1, int a2, uint64_t a3, long long *a4, int a5)
{
  v86[2] = *MEMORY[0x1E4F143B8];
  sub_1DDA4866C(a1, a2, (uint64_t *)&v83);
  uint64_t v12 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v8, v9, v10, v11);
  uint64_t v13 = (void *)v12;
  double v14 = v83;
  uint64_t v15 = v84;
  if (v83 != v84)
  {
    uint64_t v16 = a1 + 2264;
    uint64_t v17 = (void **)(a1 + 2272);
    uint64_t v74 = (void **)(a1 + 2416);
    uint64_t v75 = a1 + 2408;
    uint64_t v64 = (void **)(a1 + 2392);
    uint64_t v65 = a1 + 2384;
    uint64_t v76 = (void **)(a1 + 544);
    uint64_t v72 = a1 + 560;
    uint64_t v73 = a1 + 536;
    uint64_t v70 = a1 + 2272;
    uint64_t v71 = (void **)(a1 + 568);
    int v63 = (void *)v12;
    int v69 = a5;
    int v67 = v84;
    uint64_t v68 = a4;
    uint64_t v66 = a1 + 2264;
    do
    {
      int v18 = sub_1DDA2A530(v16, v14);
      if (v17 != v18)
      {
        unsigned int v19 = *((unsigned __int16 *)v18 + 28);
        if (v19 >= 3)
        {
          exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](exception, "RawCameraException");
          __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        if (v19 != a5) {
          goto LABEL_75;
        }
      }
      __p.__r_.__value_.__s.__data_[0] = 0;
      char v82 = 0;
      memset(&__dst, 0, sizeof(__dst));
      uint64_t v20 = sub_1DDA2A530(v75, v14);
      if (v74 != v20 || (uint64_t v20 = sub_1DDA2A530(v65, v14), v64 != v20))
      {
        std::string::operator=(&__dst, (const std::string *)(v20 + 7));
        sub_1DDA91638(&__p, &__dst);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      if (!v82)
      {
LABEL_66:
        int v43 = sub_1DDA2A530(v73, v14);
        uint64_t v44 = v43;
        if (v76 == v43) {
          unsigned int v45 = v77 & 0xFFFFFF00;
        }
        else {
          unsigned int v45 = *((_DWORD *)v43 + 14);
        }
        unsigned int v77 = v45;
        uint64_t v46 = sub_1DDA2A530(v72, v14);
        if (v71 != v46 && v76 != v44)
        {
          uint64_t v50 = *((unsigned int *)v46 + 14);
          v85[0] = @"Width";
          unint64_t v51 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v47, v77, v48, v49);
          v85[1] = @"Height";
          v86[0] = v51;
          int v55 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v52, v50, v53, v54);
          v86[1] = v55;
          objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v56, (uint64_t)v86, (uint64_t)v85, 2);
          v57 = uint64_t v17 = (void **)v70;

          objc_msgSend_addObject_(v13, v58, (uint64_t)v57, v59, v60);
        }
        goto LABEL_72;
      }
      int v21 = *((char *)a4 + 23);
      if (v21 < 0)
      {
        if (!*((void *)a4 + 1)) {
          goto LABEL_66;
        }
      }
      else if (!*((unsigned char *)a4 + 23))
      {
        goto LABEL_66;
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_1DDA2639C(&__dst, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
        if ((*((unsigned char *)a4 + 23) & 0x80) == 0)
        {
LABEL_18:
          long long v78 = *a4;
          uint64_t v79 = *((void *)a4 + 2);
          goto LABEL_21;
        }
      }
      else
      {
        std::string __dst = __p;
        if ((v21 & 0x80) == 0) {
          goto LABEL_18;
        }
      }
      sub_1DDA2639C(&v78, *(void **)a4, *((void *)a4 + 1));
LABEL_21:
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        char v22 = (std::string *)((char *)&__dst + HIBYTE(__dst.__r_.__value_.__r.__words[2]));
      }
      else {
        char v22 = (std::string *)(__dst.__r_.__value_.__r.__words[0] + __dst.__r_.__value_.__l.__size_);
      }
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_dst = &__dst;
      }
      else {
        p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
      }
      while (p_dst != v22)
      {
        p_dst->__r_.__value_.__s.__data_[0] = __tolower(p_dst->__r_.__value_.__s.__data_[0]);
        p_dst = (std::string *)((char *)p_dst + 1);
      }
      int64_t v24 = HIBYTE(v79);
      char v25 = HIBYTE(v79);
      int64_t v26 = *((void *)&v78 + 1);
      char v27 = (char *)v78;
      if (v79 >= 0) {
        uint64_t v28 = (char *)&v78 + HIBYTE(v79);
      }
      else {
        uint64_t v28 = (char *)(v78 + *((void *)&v78 + 1));
      }
      if (v79 >= 0) {
        uint64_t v29 = (char *)&v78;
      }
      else {
        uint64_t v29 = (char *)v78;
      }
      if (v29 != v28)
      {
        do
        {
          *uint64_t v29 = __tolower(*v29);
          ++v29;
        }
        while (v29 != v28);
        int64_t v24 = HIBYTE(v79);
        int64_t v26 = *((void *)&v78 + 1);
        char v27 = (char *)v78;
        char v25 = HIBYTE(v79);
      }
      char v30 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v31 = &__dst;
      }
      else {
        uint64_t v31 = (std::string *)__dst.__r_.__value_.__r.__words[0];
      }
      if (v25 >= 0) {
        unint64_t v32 = (char *)&v78;
      }
      else {
        unint64_t v32 = v27;
      }
      if (v25 >= 0) {
        int64_t v33 = v24;
      }
      else {
        int64_t v33 = v26;
      }
      if (v33)
      {
        int64_t size = __dst.__r_.__value_.__l.__size_;
        if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int64_t size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
        }
        BOOL v35 = (char *)v31 + size;
        if (size >= v33)
        {
          int v38 = *v32;
          uint64_t v39 = v31;
          do
          {
            int64_t v40 = size - v33;
            if (v40 == -1) {
              break;
            }
            uint64_t v41 = (char *)memchr(v39, v38, v40 + 1);
            if (!v41) {
              break;
            }
            unsigned int v36 = v41;
            if (!memcmp(v41, v32, v33)) {
              goto LABEL_59;
            }
            uint64_t v39 = (std::string *)(v36 + 1);
            int64_t size = v35 - (v36 + 1);
          }
          while (size >= v33);
          unsigned int v36 = v35;
LABEL_59:
          uint64_t v13 = v63;
        }
        else
        {
          unsigned int v36 = (char *)v31 + size;
        }
        if (v36 == v35) {
          uint64_t v37 = -1;
        }
        else {
          uint64_t v37 = v36 - (char *)v31;
        }
      }
      else
      {
        uint64_t v37 = 0;
      }
      a4 = v68;
      if (v25 < 0)
      {
        operator delete(v27);
        if ((*((unsigned char *)&__dst.__r_.__value_.__s + 23) & 0x80) == 0) {
          goto LABEL_65;
        }
      }
      else if ((v30 & 0x80) == 0)
      {
        goto LABEL_65;
      }
      operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_65:
      BOOL v42 = v37 == -1;
      a5 = v69;
      uint64_t v16 = v66;
      uint64_t v15 = v67;
      uint64_t v17 = (void **)v70;
      if (!v42) {
        goto LABEL_66;
      }
LABEL_72:
      if (v82 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
LABEL_75:
      v14 += 3;
    }
    while (v14 != v15);
  }
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v83;
  sub_1DDA2A044((void ***)&__p);

  return v13;
}

void sub_1DDA91C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40,char a41)
{
  std::string __p = (void *)(v41 - 152);
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

id sub_1DDA91CCC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  if (*(char *)(a4 + 23) < 0)
  {
    sub_1DDA2639C(__p, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a4;
    uint64_t v9 = *(void *)(a4 + 16);
  }
  long long v6 = sub_1DDA9174C(a1, a2, 0, (long long *)__p, 0);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }

  return v6;
}

void sub_1DDA91D64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA91D80(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v83[3] = *MEMORY[0x1E4F143B8];
  id v4 = a2;
  uint64_t v9 = v4;
  if (v4)
  {
    if ((int)a3 <= 1717856626)
    {
      if (a3 != 1278226488)
      {
        unsigned __int16 v12 = 25968;
        goto LABEL_9;
      }
      uint64_t v10 = (unsigned int *)MEMORY[0x1E4F1E298];
      uint64_t v11 = 1;
    }
    else
    {
      uint64_t v10 = (unsigned int *)MEMORY[0x1E4F1E2B0];
      uint64_t v11 = 2;
      if (a3 != 1751411059 && a3 != 1751410032)
      {
        unsigned __int16 v12 = 26995;
LABEL_9:
        if (a3 != (v12 | 0x66640000))
        {
          exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](exception, "RawCameraException");
          __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        uint64_t v10 = (unsigned int *)MEMORY[0x1E4F1E2A8];
        uint64_t v11 = 4;
      }
    }
    uint64_t v14 = *v10;
    objc_msgSend_extent(v4, v5, v6, v7, v8);
    double v16 = v15;
    objc_msgSend_extent(v9, v17, v18, v19, v20);
    uint64_t v21 = (uint64_t)rint(floor(v16));
    uint64_t v23 = (uint64_t)rint(floor(v22));
    uint64_t v24 = v21 * v11;
    uint64_t v28 = objc_msgSend_dataWithLength_(MEMORY[0x1E4F1CA58], v25, v23 * v21 * v11, v26, v27);
    int64_t v33 = objc_msgSend_context(MEMORY[0x1E4F1E018], v29, v30, v31, v32, v28);
    id v34 = v28;
    uint64_t v39 = objc_msgSend_mutableBytes(v34, v35, v36, v37, v38);
    objc_msgSend_extent(v9, v40, v41, v42, v43);
    objc_msgSend_render_toBitmap_rowBytes_bounds_format_colorSpace_(v33, v44, (uint64_t)v9, v39, v24, v14, 0);

    uint64_t v49 = objc_msgSend_properties(v9, v45, v46, v47, v48);
    objc_msgSend_objectForKeyedSubscript_(v49, v50, @"_XMP", v51, v52);
    CFDataRef v53 = (const __CFData *)objc_claimAutoreleasedReturnValue();

    if (v53) {
      CGImageMetadataRef v57 = CGImageMetadataCreateFromXMPData(v53);
    }
    else {
      CGImageMetadataRef v57 = 0;
    }
    uint64_t v58 = *MEMORY[0x1E4F2F370];
    v83[0] = v34;
    uint64_t v59 = *MEMORY[0x1E4F2F378];
    v82[0] = v58;
    v82[1] = v59;
    v80[0] = @"BytesPerRow";
    uint64_t v60 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v54, v24, v55, v56);
    v81[0] = v60;
    v80[1] = @"Height";
    uint64_t v64 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v61, v23, v62, v63);
    v81[1] = v64;
    v80[2] = @"PixelFormat";
    uint64_t v68 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v65, a3, v66, v67);
    v81[2] = v68;
    v80[3] = @"Width";
    uint64_t v72 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v69, v21, v70, v71);
    void v81[3] = v72;
    uint64_t v74 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v73, (uint64_t)v81, (uint64_t)v80, 4);
    uint64_t v76 = (void *)v74;
    v82[2] = *MEMORY[0x1E4F2F380];
    if (v57) {
      CGImageMetadataRef v77 = v57;
    }
    else {
      CGImageMetadataRef v77 = (CGImageMetadataRef)MEMORY[0x1E4F1CC08];
    }
    v83[1] = v74;
    v83[2] = v77;
    uint64_t v13 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v75, (uint64_t)v83, (uint64_t)v82, 3);

    goto LABEL_19;
  }
  uint64_t v13 = 0;
LABEL_19:

  return v13;
}

void sub_1DDA920F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1DDA921AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  int isEqualToString = objc_msgSend_isEqualToString_(v3, v4, *MEMORY[0x1E4F2F3B0], v5, v6);
  int v11 = objc_msgSend_isEqualToString_(v3, v8, *MEMORY[0x1E4F2F3B8], v9, v10);
  int v15 = objc_msgSend_isEqualToString_(v3, v12, *MEMORY[0x1E4F2F3D0], v13, v14);
  int v19 = objc_msgSend_isEqualToString_(v3, v16, @"kCGImageAuxiliaryDataTypeHDRGainMap", v17, v18);
  int v23 = objc_msgSend_isEqualToString_(v3, v20, *MEMORY[0x1E4F2F3E8], v21, v22);
  int v27 = objc_msgSend_isEqualToString_(v3, v24, *MEMORY[0x1E4F2F3E0], v25, v26);
  int v31 = objc_msgSend_isEqualToString_(v3, v28, *MEMORY[0x1E4F2F3F8], v29, v30);
  int v35 = objc_msgSend_isEqualToString_(v3, v32, @"kCGImageAuxiliaryDataTypeSemanticSegmentationGlassesMatte", v33, v34);
  int v39 = objc_msgSend_isEqualToString_(v3, v36, @"kCGImageAuxiliaryDataTypeSemanticSegmentationSkyMatte", v37, v38);
  if (isEqualToString)
  {
    int64_t v40 = sub_1DDA8FFBC(a1, 8, 1, 51177);
    if (!objc_msgSend_count(v40, v41, v42, v43, v44))
    {
      uint64_t v49 = sub_1DDA8FFBC(a1, 9, 1, 51177);

      int64_t v40 = (void *)v49;
    }
    uint64_t v50 = objc_msgSend_firstObject(v40, v45, v46, v47, v48);
    uint64_t v51 = sub_1DDA91D80((uint64_t)v50, v50, 1751410032);
LABEL_65:
    uint64_t v124 = (void *)v51;

    goto LABEL_66;
  }
  if (v11)
  {
    int64_t v40 = sub_1DDA8FFBC(a1, 8, 51177, 2);
    if (!objc_msgSend_count(v40, v52, v53, v54, v55))
    {
      uint64_t v60 = sub_1DDA8FFBC(a1, 9, 51177, 2);

      int64_t v40 = (void *)v60;
    }
    uint64_t v50 = objc_msgSend_firstObject(v40, v56, v57, v58, v59);
    uint64_t v51 = sub_1DDA91D80((uint64_t)v50, v50, 1751411059);
    goto LABEL_65;
  }
  if (v15)
  {
    sub_1DDA1A880(v152, "portraiteffectsmatte");
    int64_t v40 = sub_1DDA91564(a1, 65540, 52527, (uint64_t)v152);
    if (v153 < 0) {
      operator delete(v152[0]);
    }
    if (!objc_msgSend_count(v40, v61, v62, v63, v64))
    {
      sub_1DDA1A880(v150, "portraiteffectsmatte");
      uint64_t v69 = sub_1DDA91564(a1, 65540, 51182, (uint64_t)v150);

      if (v151 < 0) {
        operator delete(v150[0]);
      }
      int64_t v40 = (void *)v69;
    }
    uint64_t v50 = objc_msgSend_firstObject(v40, v65, v66, v67, v68);
    uint64_t v51 = sub_1DDA91D80((uint64_t)v50, v50, 1278226488);
    goto LABEL_65;
  }
  if (v19)
  {
    sub_1DDA1A880(v148, "hdrgainmap");
    int64_t v40 = sub_1DDA91564(a1, 65540, 52527, (uint64_t)v148);
    if (v149 < 0) {
      operator delete(v148[0]);
    }
    if (!objc_msgSend_count(v40, v70, v71, v72, v73))
    {
      sub_1DDA1A880(v146, "hdrgainmap");
      uint64_t v78 = sub_1DDA91564(a1, 65540, 51182, (uint64_t)v146);

      if (v147 < 0) {
        operator delete(v146[0]);
      }
      int64_t v40 = (void *)v78;
    }
    uint64_t v50 = objc_msgSend_firstObject(v40, v74, v75, v76, v77);
    uint64_t v51 = sub_1DDA91D80((uint64_t)v50, v50, 1278226488);
    goto LABEL_65;
  }
  if (v23)
  {
    sub_1DDA1A880(v144, "skinmatte");
    int64_t v40 = sub_1DDA91564(a1, 65540, 52527, (uint64_t)v144);
    if (v145 < 0) {
      operator delete(v144[0]);
    }
    if (!objc_msgSend_count(v40, v79, v80, v81, v82))
    {
      sub_1DDA1A880(__p, "skinmatte");
      uint64_t v87 = sub_1DDA91564(a1, 65540, 51182, (uint64_t)__p);

      if (v143 < 0) {
        operator delete(__p[0]);
      }
      int64_t v40 = (void *)v87;
    }
    uint64_t v50 = objc_msgSend_firstObject(v40, v83, v84, v85, v86);
    uint64_t v51 = sub_1DDA91D80((uint64_t)v50, v50, 1278226488);
    goto LABEL_65;
  }
  if (v27)
  {
    sub_1DDA1A880(v140, "hairmatte");
    int64_t v40 = sub_1DDA91564(a1, 65540, 52527, (uint64_t)v140);
    if (v141 < 0) {
      operator delete(v140[0]);
    }
    if (!objc_msgSend_count(v40, v88, v89, v90, v91))
    {
      sub_1DDA1A880(v138, "hairmatte");
      uint64_t v96 = sub_1DDA91564(a1, 65540, 51182, (uint64_t)v138);

      if (v139 < 0) {
        operator delete(v138[0]);
      }
      int64_t v40 = (void *)v96;
    }
    uint64_t v50 = objc_msgSend_firstObject(v40, v92, v93, v94, v95);
    uint64_t v51 = sub_1DDA91D80((uint64_t)v50, v50, 1278226488);
    goto LABEL_65;
  }
  if (v31)
  {
    sub_1DDA1A880(v136, "teethmatte");
    int64_t v40 = sub_1DDA91564(a1, 65540, 52527, (uint64_t)v136);
    if (v137 < 0) {
      operator delete(v136[0]);
    }
    if (!objc_msgSend_count(v40, v97, v98, v99, v100))
    {
      sub_1DDA1A880(v134, "teethmatte");
      uint64_t v105 = sub_1DDA91564(a1, 65540, 51182, (uint64_t)v134);

      if (v135 < 0) {
        operator delete(v134[0]);
      }
      int64_t v40 = (void *)v105;
    }
    uint64_t v50 = objc_msgSend_firstObject(v40, v101, v102, v103, v104);
    uint64_t v51 = sub_1DDA91D80((uint64_t)v50, v50, 1278226488);
    goto LABEL_65;
  }
  if (v35)
  {
    sub_1DDA1A880(v132, "glassesmatte");
    int64_t v40 = sub_1DDA91564(a1, 65540, 52527, (uint64_t)v132);
    if (v133 < 0) {
      operator delete(v132[0]);
    }
    if (!objc_msgSend_count(v40, v106, v107, v108, v109))
    {
      sub_1DDA1A880(v130, "glassesmatte");
      uint64_t v114 = sub_1DDA91564(a1, 65540, 51182, (uint64_t)v130);

      if (v131 < 0) {
        operator delete(v130[0]);
      }
      int64_t v40 = (void *)v114;
    }
    uint64_t v50 = objc_msgSend_firstObject(v40, v110, v111, v112, v113);
    uint64_t v51 = sub_1DDA91D80((uint64_t)v50, v50, 1278226488);
    goto LABEL_65;
  }
  if (v39)
  {
    sub_1DDA1A880(v128, "skymatte");
    int64_t v40 = sub_1DDA91564(a1, 65540, 52527, (uint64_t)v128);
    if (v129 < 0) {
      operator delete(v128[0]);
    }
    if (!objc_msgSend_count(v40, v115, v116, v117, v118))
    {
      sub_1DDA1A880(v126, "skymatte");
      uint64_t v123 = sub_1DDA91564(a1, 65540, 51182, (uint64_t)v126);

      if (v127 < 0) {
        operator delete(v126[0]);
      }
      int64_t v40 = (void *)v123;
    }
    uint64_t v50 = objc_msgSend_firstObject(v40, v119, v120, v121, v122);
    uint64_t v51 = sub_1DDA91D80((uint64_t)v50, v50, 1278226488);
    goto LABEL_65;
  }
  uint64_t v124 = 0;
LABEL_66:

  return v124;
}

void sub_1DDA92910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id sub_1DDA92ADC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v128[1] = *MEMORY[0x1E4F143B8];
  uint64_t v101 = objc_msgSend_array(MEMORY[0x1E4F1CA48], a2, a3, a4, a5);
  uint64_t v100 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v6, v7, v8, v9);
  uint64_t v127 = *MEMORY[0x1E4F2F3B0];
  uint64_t v10 = sub_1DDA916A4(a1, 8, 1, 51177);
  v128[0] = v10;
  unsigned __int16 v12 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v11, (uint64_t)v128, (uint64_t)&v127, 1);
  objc_msgSend_addObject_(v100, v13, (uint64_t)v12, v14, v15);

  uint64_t v125 = *MEMORY[0x1E4F2F3B8];
  double v16 = sub_1DDA916A4(a1, 8, 2, 51177);
  uint64_t v126 = v16;
  uint64_t v18 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v17, (uint64_t)&v126, (uint64_t)&v125, 1);
  objc_msgSend_addObject_(v100, v19, (uint64_t)v18, v20, v21);

  uint64_t v22 = *MEMORY[0x1E4F2F3D0];
  v123[0] = @"portraiteffectsmatte";
  v123[1] = @"skinmatte";
  uint64_t v23 = *MEMORY[0x1E4F2F3E8];
  v124[0] = v22;
  v124[1] = v23;
  uint64_t v24 = *MEMORY[0x1E4F2F3E0];
  void v123[2] = @"hairmatte";
  v123[3] = @"teetmatte";
  uint64_t v25 = *MEMORY[0x1E4F2F3F8];
  void v124[2] = v24;
  v124[3] = v25;
  v123[4] = @"glassesmatte";
  v123[5] = @"skymatte";
  v124[4] = @"kCGImageAuxiliaryDataTypeSemanticSegmentationGlassesMatte";
  v124[5] = @"kCGImageAuxiliaryDataTypeSemanticSegmentationSkyMatte";
  v123[6] = @"hdrgainmap";
  v124[6] = @"kCGImageAuxiliaryDataTypeHDRGainMap";
  int v27 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v26, (uint64_t)v124, (uint64_t)v123, 7);
  long long v116 = 0u;
  long long v117 = 0u;
  long long v114 = 0u;
  long long v115 = 0u;
  uint64_t v29 = objc_msgSend_countByEnumeratingWithState_objects_count_(&unk_1F39AC140, v28, (uint64_t)&v114, (uint64_t)v122, 16);
  if (v29)
  {
    uint64_t v30 = *(void *)v115;
    do
    {
      for (uint64_t i = 0; i != v29; ++i)
      {
        if (*(void *)v115 != v30) {
          objc_enumerationMutation(&unk_1F39AC140);
        }
        id v32 = *(id *)(*((void *)&v114 + 1) + 8 * i);
        uint64_t v37 = (char *)objc_msgSend_UTF8String(v32, v33, v34, v35, v36);
        sub_1DDA1A880(__p, v37);
        uint64_t v42 = sub_1DDA91CCC(a1, 65540, 0, (uint64_t)__p);
        if (v113 < 0) {
          operator delete(__p[0]);
        }
        if (!objc_msgSend_count(v42, v38, v39, v40, v41))
        {
          id v44 = v32;
          uint64_t v49 = (char *)objc_msgSend_UTF8String(v44, v45, v46, v47, v48);
          sub_1DDA1A880(v110, v49);
          uint64_t v50 = sub_1DDA91CCC(a1, 65540, 0, (uint64_t)v110);

          if (v111 < 0) {
            operator delete(v110[0]);
          }
          uint64_t v42 = (void *)v50;
        }
        id v120 = v32;
        uint64_t v121 = v42;
        uint64_t v51 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v43, (uint64_t)&v121, (uint64_t)&v120, 1);
        objc_msgSend_addObject_(v100, v52, (uint64_t)v51, v53, v54);
      }
      uint64_t v29 = objc_msgSend_countByEnumeratingWithState_objects_count_(&unk_1F39AC140, v55, (uint64_t)&v114, (uint64_t)v122, 16);
    }
    while (v29);
  }
  long long v108 = 0u;
  long long v109 = 0u;
  long long v106 = 0u;
  long long v107 = 0u;
  obuint64_t j = v100;
  uint64_t v98 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v56, (uint64_t)&v106, (uint64_t)v119, 16);
  if (v98)
  {
    uint64_t v97 = *(void *)v107;
    do
    {
      for (uint64_t j = 0; j != v98; ++j)
      {
        if (*(void *)v107 != v97) {
          objc_enumerationMutation(obj);
        }
        uint64_t v57 = *(void **)(*((void *)&v106 + 1) + 8 * j);
        long long v102 = 0u;
        long long v103 = 0u;
        long long v104 = 0u;
        long long v105 = 0u;
        id v58 = v57;
        uint64_t v63 = objc_msgSend_countByEnumeratingWithState_objects_count_(v58, v59, (uint64_t)&v102, (uint64_t)v118, 16);
        if (v63)
        {
          uint64_t v64 = *(void *)v103;
          do
          {
            for (uint64_t k = 0; k != v63; ++k)
            {
              if (*(void *)v103 != v64) {
                objc_enumerationMutation(v58);
              }
              uint64_t v66 = *(void *)(*((void *)&v102 + 1) + 8 * k);
              uint64_t v67 = objc_msgSend_objectForKeyedSubscript_(v58, v60, v66, v61, v62);
              uint64_t v72 = objc_msgSend_firstObject(v67, v68, v69, v70, v71);

              if (v72)
              {
                uint64_t v77 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v73, v74, v75, v76);
                uint64_t v83 = objc_msgSend_objectForKeyedSubscript_(v27, v78, v66, v79, v80);
                if (v83)
                {
                  objc_msgSend_setObject_forKeyedSubscript_(v77, v81, (uint64_t)v83, @"AuxiliaryDataType", v82);
                  objc_msgSend_addEntriesFromDictionary_(v77, v84, (uint64_t)v72, v85, v86);
                  objc_msgSend_addObject_(v101, v87, (uint64_t)v77, v88, v89);
                }
              }
            }
            uint64_t v63 = objc_msgSend_countByEnumeratingWithState_objects_count_(v58, v60, (uint64_t)&v102, (uint64_t)v118, 16);
          }
          while (v63);
        }
      }
      uint64_t v98 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v90, (uint64_t)&v106, (uint64_t)v119, 16);
    }
    while (v98);
  }

  uint64_t v94 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1C978], v91, (uint64_t)v101, v92, v93);

  return v94;
}

void sub_1DDA9304C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  _Unwind_Resume(a1);
}

BOOL sub_1DDA93170(uint64_t a1)
{
  int v7 = 0;
  sub_1DDA48424(a1, 0, __p);
  if (sub_1DDA3FEDC(a1, __p, &v7))
  {
    int v2 = v7;
    if (v6 < 0) {
      operator delete(__p[0]);
    }
    return v2 == 34892 || v2 == 32803;
  }
  else
  {
    if (v6 < 0) {
      operator delete(__p[0]);
    }
    return 0;
  }
}

void sub_1DDA931FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA93218()
{
  return 1;
}

uint64_t sub_1DDA93220(unsigned char *a1)
{
  uint64_t result = (*(uint64_t (**)(unsigned char *))(*(void *)a1 + 72))(a1);
  if (result) {
    return a1[1233] != 0;
  }
  return result;
}

BOOL sub_1DDA93274(uint64_t a1)
{
  int v7 = 0;
  sub_1DDA48424(a1, 0, __p);
  BOOL v2 = sub_1DDA3FEDC(a1, __p, &v7);
  int v3 = v7;
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  return v3 == 34892 && v2;
}

void sub_1DDA932E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA932FC(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 1240) == 3;
}

std::string *sub_1DDA9330C@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  memset(&v6, 0, sizeof(v6));
  id v4 = sub_1DDA2A530(a1 + 1312, (void **)(a1 + 1184));
  if ((void **)(a1 + 1320) == v4) {
    return (std::string *)sub_1DDA27E6C(a1);
  }
  uint64_t result = std::string::operator=(&v6, (const std::string *)(v4 + 7));
  *a2 = v6;
  return result;
}

void sub_1DDA93384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA933A0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DDA47F74(a1, a2);
  sub_1DDA4866C(a1, 1, v7);
  id v4 = (void **)v7[0];
  uint64_t v5 = v7[1];
  while (v4 != (void **)v5)
  {
    sub_1DDA476FC(a1, v4, &v6);
    if ((void)v6) {
      sub_1DDA480D4(a2, &v6);
    }
    if (*((void *)&v6 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v6 + 1));
    }
    v4 += 3;
  }
  *(void *)&long long v6 = v7;
  sub_1DDA2A044((void ***)&v6);
}

void sub_1DDA9343C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1DDA18270((void ***)va);
  _Unwind_Resume(a1);
}

void sub_1DDA93480(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  uint64_t v274 = *MEMORY[0x1E4F143B8];
  sub_1DDA43480((uint64_t **)a1, a2, a3);
  unsigned int v6 = *a3;
  if (v6 > 0xC68C)
  {
    if (*a3 > 0xC7E8u)
    {
      if (*a3 <= 0xCD2Cu)
      {
        switch(*a3)
        {
          case 0xC7E9u:
            if (a3[1] != 3) {
              return;
            }
            if (*((_DWORD *)a3 + 1) != 1) {
              return;
            }
            LOWORD(buf.__r_.__value_.__l.__data_) = 0;
            if (!sub_1DDA3E8C0((uint64_t)a3, &buf)) {
              return;
            }
            __int16 data = (__int16)buf.__r_.__value_.__l.__data_;
            __str.__r_.__value_.__r.__words[0] = a2;
            int v11 = sub_1DDA4BC98((uint64_t **)(a1 + 2264), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
            goto LABEL_378;
          case 0xC7EAu:
            if (a3[1] != 5 || *((_DWORD *)a3 + 1) != 1) {
              return;
            }
            sub_1DDA27D28(a1, &buf);
            LODWORD(v269.f64[0]) = sub_1DDA3CE7C((uint64_t)a3);
            sub_1DDA1B4D8((int *)__p, (int *)&v269);
            sub_1DDA1A94C((uint64_t *)&__str, (uint64_t *)&buf, (uint64_t)__p, 0);
            if (buf.__r_.__value_.__l.__size_) {
              sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
            }
            sub_1DDA27D28(a1, &buf);
            unsigned int v54 = sub_1DDA19EC8((uint64_t)buf.__r_.__value_.__l.__data_);
            if (buf.__r_.__value_.__l.__size_) {
              sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
            }
            sub_1DDA27D28(a1, &buf);
            unsigned int v55 = sub_1DDA19EC8((uint64_t)buf.__r_.__value_.__l.__data_);
            if (buf.__r_.__value_.__l.__size_) {
              sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
            }
            if (v54 != 1 || v55)
            {
              uint64_t v73 = (uint64_t **)(a1 + 2288);
              if (v54 | v55) {
                goto LABEL_667;
              }
              buf.__r_.__value_.__r.__words[0] = a2;
              id v58 = sub_1DDA4BE58(v73, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
              uint64_t v59 = 0x7FF8000000000000;
            }
            else
            {
              buf.__r_.__value_.__r.__words[0] = a2;
              id v58 = sub_1DDA4BE58((uint64_t **)(a1 + 2288), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
              uint64_t v59 = 0x7FF0000000000000;
            }
            v58[7] = v59;
            goto LABEL_668;
          case 0xC7EBu:
            if (a3[1] != 5 || *((_DWORD *)a3 + 1) != 1) {
              return;
            }
            sub_1DDA27D28(a1, &buf);
            LODWORD(v269.f64[0]) = sub_1DDA3CE7C((uint64_t)a3);
            sub_1DDA1B4D8((int *)__p, (int *)&v269);
            sub_1DDA1A94C((uint64_t *)&__str, (uint64_t *)&buf, (uint64_t)__p, 0);
            if (buf.__r_.__value_.__l.__size_) {
              sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
            }
            sub_1DDA27D28(a1, &buf);
            unsigned int v54 = sub_1DDA19EC8((uint64_t)buf.__r_.__value_.__l.__data_);
            if (buf.__r_.__value_.__l.__size_) {
              sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
            }
            sub_1DDA27D28(a1, &buf);
            unsigned int v55 = sub_1DDA19EC8((uint64_t)buf.__r_.__value_.__l.__data_);
            if (buf.__r_.__value_.__l.__size_) {
              sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
            }
            if (v54 != 1 || v55)
            {
              uint64_t v73 = (uint64_t **)(a1 + 2312);
              if (v54 | v55)
              {
LABEL_667:
                buf.__r_.__value_.__r.__words[0] = a2;
                *((double *)sub_1DDA4BE58(v73, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf) + 7) = (double)v54 / (double)v55;
LABEL_668:
                sub_1DDA1AA18((uint64_t *)&__str);
                return;
              }
              buf.__r_.__value_.__r.__words[0] = a2;
              uint64_t v56 = sub_1DDA4BE58(v73, (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
              uint64_t v57 = 0x7FF8000000000000;
            }
            else
            {
              buf.__r_.__value_.__r.__words[0] = a2;
              uint64_t v56 = sub_1DDA4BE58((uint64_t **)(a1 + 2312), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
              uint64_t v57 = 0x7FF0000000000000;
            }
            v56[7] = v57;
            goto LABEL_668;
          case 0xC7ECu:
            if (a3[1] != 3) {
              return;
            }
            if (*((_DWORD *)a3 + 1) != 1) {
              return;
            }
            LOWORD(buf.__r_.__value_.__l.__data_) = 0;
            if (!sub_1DDA3E8C0((uint64_t)a3, &buf)) {
              return;
            }
            __int16 data = (__int16)buf.__r_.__value_.__l.__data_;
            __str.__r_.__value_.__r.__words[0] = a2;
            int v11 = sub_1DDA4BC98((uint64_t **)(a1 + 2336), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
            goto LABEL_378;
          case 0xC7EDu:
            if (a3[1] != 3) {
              return;
            }
            if (*((_DWORD *)a3 + 1) != 1) {
              return;
            }
            LOWORD(buf.__r_.__value_.__l.__data_) = 0;
            if (!sub_1DDA3E8C0((uint64_t)a3, &buf)) {
              return;
            }
            __int16 data = (__int16)buf.__r_.__value_.__l.__data_;
            __str.__r_.__value_.__r.__words[0] = a2;
            int v11 = sub_1DDA4BC98((uint64_t **)(a1 + 2360), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
LABEL_378:
            *((_WORD *)v11 + 28) = data;
            return;
          case 0xC7EEu:
            if (a3[1] != 2) {
              return;
            }
            memset(&__str, 0, sizeof(__str));
            if (sub_1DDA45530(a1, (uint64_t)a3, &__str, 0))
            {
              buf.__r_.__value_.__r.__words[0] = a2;
              uint64_t v62 = sub_1DDA4BAFC((uint64_t **)(a1 + 2384), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
              std::string::operator=((std::string *)(v62 + 7), &__str);
            }
            goto LABEL_295;
          default:
            goto LABEL_323;
        }
      }
      if (*a3 <= 0xCD3Fu)
      {
        if (v6 == 52525)
        {
          if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0
            && a3[1] == 7
            && (sub_1DDA48F20((const void **)a2, "IFD0") || sub_1DDA48F20((const void **)a2, "IFD0:SUBIFD0")))
          {
            int v50 = *(unsigned __int8 *)(a1 + 1972);
            int v51 = *((_DWORD *)a3 + 2);
            *(void *)(a1 + 1960) = *(void *)a3;
            *(_DWORD *)(a1 + 1968) = v51;
            if (!v50) {
              *(unsigned char *)(a1 + 1972) = 1;
            }
          }
          return;
        }
        if (v6 == 52526)
        {
          if (a3[1] == 2)
          {
            memset(&__str, 0, sizeof(__str));
            if (sub_1DDA45530(a1, (uint64_t)a3, &__str, 0))
            {
              buf.__r_.__value_.__r.__words[0] = a2;
              uint64_t v14 = sub_1DDA4BAFC((uint64_t **)(a1 + 2408), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
              std::string::operator=((std::string *)(v14 + 7), &__str);
            }
LABEL_295:
            if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
            {
              unsigned __int16 v12 = (void *)__str.__r_.__value_.__r.__words[0];
LABEL_657:
              operator delete(v12);
              return;
            }
          }
          return;
        }
        goto LABEL_323;
      }
      if (v6 == 52544)
      {
        if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) == 0
          && a3[1] == 7
          && (sub_1DDA48F20((const void **)a2, "IFD0") || sub_1DDA48F20((const void **)a2, "IFD0:SUBIFD0")))
        {
          int v52 = *(unsigned __int8 *)(a1 + 1988);
          int v53 = *((_DWORD *)a3 + 2);
          *(void *)(a1 + 1976) = *(void *)a3;
          *(_DWORD *)(a1 + 1984) = v53;
          if (!v52) {
            *(unsigned char *)(a1 + 1988) = 1;
          }
        }
        return;
      }
      if (v6 != 52547) {
        goto LABEL_323;
      }
      if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) != 0 || a3[1] - 3 > 1) {
        return;
      }
      if (*(char *)(a2 + 23) < 0)
      {
        sub_1DDA2639C(v219, *(void **)a2, *(void *)(a2 + 8));
      }
      else
      {
        *(_OWORD *)long long v219 = *(_OWORD *)a2;
        uint64_t v220 = *(void *)(a2 + 16);
      }
      uint64_t v209 = sub_1DDA2A530(a1 + 512, v219);
      BOOL v210 = (void **)(a1 + 520) == v209 || *((_DWORD *)v209 + 14) || *((_DWORD *)a3 + 1) != 1;
      if (SHIBYTE(v220) < 0) {
        operator delete(v219[0]);
      }
      if (v210) {
        return;
      }
      if (a3[1] == 4) {
        int v17 = *((_DWORD *)a3 + 2);
      }
      else {
        int v17 = sub_1DDA44F28((uint64_t)a3);
      }
      __str.__r_.__value_.__r.__words[0] = a2;
      uint64_t v18 = sub_1DDA4B72C((uint64_t **)(a1 + 2480), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
      goto LABEL_703;
    }
    if (*a3 > 0xC71Eu)
    {
      if (*a3 <= 0xC74Du)
      {
        if (v6 != 50975)
        {
          if (v6 != 51008)
          {
            if (v6 == 51009)
            {
              if (*(char *)(a2 + 23) < 0)
              {
                sub_1DDA2639C(v229, *(void **)a2, *(void *)(a2 + 8));
              }
              else
              {
                *(_OWORD *)uint64_t v229 = *(_OWORD *)a2;
                uint64_t v230 = *(void *)(a2 + 16);
              }
              uint64_t v166 = sub_1DDA2A530(a1 + 512, v229);
              BOOL v167 = (void **)(a1 + 520) != v166 && *((_DWORD *)v166 + 14) == 0;
              if (SHIBYTE(v230) < 0) {
                operator delete(v229[0]);
              }
              if (!v167) {
                return;
              }
              sub_1DDA970C8(a1, (uint64_t)a3, (uint64_t *)&__str);
              uint64_t v175 = (std::string *)(a1 + 2192);
              if (*(void *)(a1 + 2200) == *(void *)(a1 + 2192))
              {
                if (v175 != &__str) {
                  sub_1DDA9DFDC(a1 + 2192, (uint64_t *)__str.__r_.__value_.__l.__data_, (uint64_t *)__str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 4);
                }
              }
              else
              {
                uint64_t v176 = sub_1DDBBA998();
                if (os_log_type_enabled(v176, OS_LOG_TYPE_INFO))
                {
                  if (*(char *)(a2 + 23) >= 0) {
                    uint64_t v177 = (void *)a2;
                  }
                  else {
                    uint64_t v177 = *(void **)a2;
                  }
                  LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
                  *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v177;
                  _os_log_impl(&dword_1DDA14000, v176, OS_LOG_TYPE_INFO, "Did not expect a second opcodelist2 for path %s", (uint8_t *)&buf, 0xCu);
                }

                std::string::size_type size = __str.__r_.__value_.__l.__size_;
                for (uint64_t i = (long long *)__str.__r_.__value_.__r.__words[0]; i != (long long *)size; ++i)
                  sub_1DDA97738((uint64_t *)v175, i);
              }
              goto LABEL_675;
            }
LABEL_323:
            uint64_t v71 = sub_1DDBBA998();
            if (os_log_type_enabled(v71, OS_LOG_TYPE_INFO))
            {
              LODWORD(__str.__r_.__value_.__l.__data_) = 67109120;
              HIDWORD(__str.__r_.__value_.__r.__words[0]) = v6;
              _os_log_impl(&dword_1DDA14000, v71, OS_LOG_TYPE_INFO, "Unhandled TIFF Tag by AdobeDNGImageParser %d", (uint8_t *)&__str, 8u);
            }

            return;
          }
          if (*(char *)(a2 + 23) < 0)
          {
            sub_1DDA2639C(v231, *(void **)a2, *(void *)(a2 + 8));
          }
          else
          {
            *(_OWORD *)uint64_t v231 = *(_OWORD *)a2;
            uint64_t v232 = *(void *)(a2 + 16);
          }
          uint64_t v168 = sub_1DDA2A530(a1 + 512, v231);
          BOOL v169 = (void **)(a1 + 520) != v168 && *((_DWORD *)v168 + 14) == 0;
          if (SHIBYTE(v232) < 0) {
            operator delete(v231[0]);
          }
          if (!v169) {
            return;
          }
          sub_1DDA970C8(a1, (uint64_t)a3, (uint64_t *)&__str);
          uint64_t v180 = (std::string *)(a1 + 2168);
          if (*(void *)(a1 + 2176) == *(void *)(a1 + 2168))
          {
            if (v180 != &__str) {
              sub_1DDA9DFDC(a1 + 2168, (uint64_t *)__str.__r_.__value_.__l.__data_, (uint64_t *)__str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 4);
            }
          }
          else
          {
            unsigned int v181 = sub_1DDBBA998();
            if (os_log_type_enabled(v181, OS_LOG_TYPE_INFO))
            {
              if (*(char *)(a2 + 23) >= 0) {
                id v182 = (void *)a2;
              }
              else {
                id v182 = *(void **)a2;
              }
              LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
              *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v182;
              _os_log_impl(&dword_1DDA14000, v181, OS_LOG_TYPE_INFO, "Did not expect a second opcodelist1 for path %s", (uint8_t *)&buf, 0xCu);
            }

            std::string::size_type v184 = __str.__r_.__value_.__l.__size_;
            for (uint64_t j = (long long *)__str.__r_.__value_.__r.__words[0]; j != (long long *)v184; ++j)
              sub_1DDA97738((uint64_t *)v180, j);
          }
LABEL_675:
          buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
          sub_1DDA18270((void ***)&buf);
          return;
        }
        if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1) & 1) != 0 || a3[1] - 3 > 1) {
          return;
        }
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(v221, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)long long v221 = *(_OWORD *)a2;
          uint64_t v222 = *(void *)(a2 + 16);
        }
        uint64_t v211 = sub_1DDA2A530(a1 + 512, v221);
        BOOL v212 = (void **)(a1 + 520) == v211 || *((_DWORD *)v211 + 14) || *((_DWORD *)a3 + 1) != 1;
        if (SHIBYTE(v222) < 0) {
          operator delete(v221[0]);
        }
        if (v212) {
          return;
        }
        if (a3[1] == 4) {
          int v17 = *((_DWORD *)a3 + 2);
        }
        else {
          int v17 = sub_1DDA44F28((uint64_t)a3);
        }
        __str.__r_.__value_.__r.__words[0] = a2;
        uint64_t v18 = sub_1DDA4B72C((uint64_t **)(a1 + 2456), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
LABEL_703:
        *((_DWORD *)v18 + 14) = v17;
        return;
      }
      if (v6 == 51022)
      {
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(v227, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)uint64_t v227 = *(_OWORD *)a2;
          uint64_t v228 = *(void *)(a2 + 16);
        }
        uint64_t v170 = sub_1DDA2A530(a1 + 512, v227);
        BOOL v171 = (void **)(a1 + 520) != v170 && *((_DWORD *)v170 + 14) == 0;
        if (SHIBYTE(v228) < 0) {
          operator delete(v227[0]);
        }
        if (!v171) {
          return;
        }
        sub_1DDA970C8(a1, (uint64_t)a3, (uint64_t *)&__str);
        uint64_t v185 = (std::string *)(a1 + 2216);
        if (*(void *)(a1 + 2224) == *(void *)(a1 + 2216))
        {
          if (v185 != &__str) {
            sub_1DDA9DFDC(a1 + 2216, (uint64_t *)__str.__r_.__value_.__l.__data_, (uint64_t *)__str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 4);
          }
        }
        else
        {
          uint64_t v186 = sub_1DDBBA998();
          if (os_log_type_enabled(v186, OS_LOG_TYPE_INFO))
          {
            if (*(char *)(a2 + 23) >= 0) {
              uint64_t v187 = (void *)a2;
            }
            else {
              uint64_t v187 = *(void **)a2;
            }
            LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
            *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v187;
            _os_log_impl(&dword_1DDA14000, v186, OS_LOG_TYPE_INFO, "Did not expect a second opcodelist3 for path %s", (uint8_t *)&buf, 0xCu);
          }

          std::string::size_type v189 = __str.__r_.__value_.__l.__size_;
          for (uint64_t k = (long long *)__str.__r_.__value_.__r.__words[0]; k != (long long *)v189; ++k)
            sub_1DDA97738((uint64_t *)v185, k);
        }
        goto LABEL_675;
      }
      if (v6 != 51041)
      {
        if (v6 != 51110) {
          goto LABEL_323;
        }
        if (a3[1] != 4 || *((_DWORD *)a3 + 1) != 1) {
          return;
        }
        if (!sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))
          && !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1208)))
        {
          if (*(char *)(a2 + 23) < 0)
          {
            sub_1DDA2639C(v223, *(void **)a2, *(void *)(a2 + 8));
          }
          else
          {
            *(_OWORD *)uint64_t v223 = *(_OWORD *)a2;
            uint64_t v224 = *(void *)(a2 + 16);
          }
          long long v216 = sub_1DDA2A530(a1 + 512, v223);
          if ((void **)(a1 + 520) == v216)
          {
            if (SHIBYTE(v224) < 0)
            {
              unsigned __int16 v12 = v223[0];
              goto LABEL_657;
            }
            return;
          }
          int v217 = *((_DWORD *)v216 + 14);
          if (SHIBYTE(v224) < 0) {
            operator delete(v223[0]);
          }
          if (v217) {
            return;
          }
        }
        int v17 = *((_DWORD *)a3 + 2);
        __str.__r_.__value_.__r.__words[0] = a2;
        uint64_t v18 = sub_1DDA4B72C((uint64_t **)(a1 + 2240), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
        goto LABEL_703;
      }
      if (a3[1] != 12) {
        return;
      }
      sub_1DDA27D28(a1, &buf);
      sub_1DDA3E944((uint64_t)a3, (uint64_t *)&buf, (void **)&__str.__r_.__value_.__l.__data_);
      if (buf.__r_.__value_.__l.__size_) {
        sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
      }
      buf.__r_.__value_.__r.__words[0] = a1 + 1184;
      uint64_t v60 = (std::string *)(sub_1DDA4B960((uint64_t **)(a1 + 1928), (void **)(a1 + 1184), (uint64_t)&unk_1DDBFB044, (long long **)&buf)+ 7);
      if (v60 != &__str) {
        sub_1DDA25BB0((char *)v60, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 3);
      }
LABEL_654:
      unsigned __int16 v12 = (void *)__str.__r_.__value_.__r.__words[0];
      goto LABEL_655;
    }
    if (*a3 <= 0xC6FBu)
    {
      if (v6 != 50829)
      {
        if (v6 == 50935)
        {
          if (a3[1] == 5 && *((_DWORD *)a3 + 1) == 1)
          {
            if (*(char *)(a2 + 23) < 0)
            {
              sub_1DDA2639C(v225, *(void **)a2, *(void *)(a2 + 8));
            }
            else
            {
              *(_OWORD *)uint64_t v225 = *(_OWORD *)a2;
              uint64_t v226 = *(void *)(a2 + 16);
            }
            char v192 = sub_1DDA2A530(a1 + 512, v225);
            BOOL v193 = (void **)(a1 + 520) != v192 && *((_DWORD *)v192 + 14) == 0;
            if (SHIBYTE(v226) < 0) {
              operator delete(v225[0]);
            }
            if (v193)
            {
              buf.__r_.__value_.__r.__words[0] = 0;
              sub_1DDA27D28(a1, &__str);
              int v195 = sub_1DDA3E640((uint64_t)a3, (double *)&buf, (uint64_t *)&__str, v194);
              if (__str.__r_.__value_.__l.__size_) {
                sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
              }
              if (v195)
              {
                std::string::pointer v196 = buf.__r_.__value_.__l.__data_;
                if (!*(unsigned char *)(a1 + 1956)) {
                  *(unsigned char *)(a1 + 1956) = 1;
                }
                float v197 = *(double *)&v196;
                *(float *)(a1 + 1952) = v197;
              }
            }
          }
          return;
        }
        goto LABEL_323;
      }
      if (*(char *)(a2 + 23) < 0)
      {
        sub_1DDA2639C(v233, *(void **)a2, *(void *)(a2 + 8));
      }
      else
      {
        *(_OWORD *)uint64_t v233 = *(_OWORD *)a2;
        uint64_t v234 = *(void *)(a2 + 16);
      }
      uint64_t v158 = sub_1DDA2A530(a1 + 512, v233);
      if ((void **)(a1 + 520) == v158 || *((_DWORD *)v158 + 14) || a3[1] - 3 > 1)
      {
        if (SHIBYTE(v234) < 0)
        {
          unsigned __int16 v12 = v233[0];
          goto LABEL_657;
        }
        return;
      }
      int v159 = *((_DWORD *)a3 + 1);
      if (SHIBYTE(v234) < 0) {
        operator delete(v233[0]);
      }
      if (v159 != 4) {
        return;
      }
      int v160 = a3[1];
      if (v160 == 4)
      {
        memset(&__str, 0, sizeof(__str));
        if (sub_1DDA44F6C(a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_))
        {
          int v199 = *(_DWORD *)__str.__r_.__value_.__l.__data_;
          int v198 = *(_DWORD *)(__str.__r_.__value_.__r.__words[0] + 4);
          int v201 = *(_DWORD *)(__str.__r_.__value_.__r.__words[0] + 8);
          int v200 = *(_DWORD *)(__str.__r_.__value_.__r.__words[0] + 12);
          sub_1DDA18218(&buf, v198, *(_DWORD *)__str.__r_.__value_.__l.__data_);
          sub_1DDA18218(&buf.__r_.__value_.__r.__words[1], v200 - v198, v201 - v199);
          __p[0] = (void *)a2;
          uint64_t v202 = sub_1DDA9F278((uint64_t **)(a1 + 1408), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p);
          *(_OWORD *)(v202 + 7) = *(_OWORD *)&buf.__r_.__value_.__l.__data_;
        }
      }
      else
      {
        if (v160 != 3) {
          return;
        }
        memset(&__str, 0, sizeof(__str));
        if (sub_1DDA45C20(a1, (uint64_t)a3, &__str.__r_.__value_.__l.__data_))
        {
          int v161 = *(unsigned __int16 *)(__str.__r_.__value_.__r.__words[0] + 2);
          int v162 = *(unsigned __int16 *)__str.__r_.__value_.__l.__data_;
          int v163 = *(unsigned __int16 *)(__str.__r_.__value_.__r.__words[0] + 6);
          int v164 = *(unsigned __int16 *)(__str.__r_.__value_.__r.__words[0] + 4);
          buf.__r_.__value_.__r.__words[0] = a2;
          uint64_t v165 = sub_1DDA9F278((uint64_t **)(a1 + 1408), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
          *((_DWORD *)v165 + 14) = v161;
          *((_DWORD *)v165 + 15) = v162;
          *((_DWORD *)v165 + 16) = v163 - v161;
          *((_DWORD *)v165 + 17) = v164 - v162;
        }
      }
      goto LABEL_654;
    }
    if (v6 != 50940)
    {
      if (v6 == 50964)
      {
        if (a3[1] != 10
          || !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))
          && !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1208)))
        {
          return;
        }
        sub_1DDA27D28(a1, &__str);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)&__str, (void **)&buf.__r_.__value_.__l.__data_);
        if (__str.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
        }
        if (*(_WORD *)(a1 + 1234))
        {
          unsigned __int16 v12 = (void *)buf.__r_.__value_.__r.__words[0];
          int64_t v61 = buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0];
          if (3 * *(unsigned __int16 *)(a1 + 1234) != (uint64_t)(buf.__r_.__value_.__l.__size_
                                                                 - buf.__r_.__value_.__r.__words[0]) >> 3)
            goto LABEL_618;
        }
        else
        {
          int64_t v61 = buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0];
        }
        *(_WORD *)(a1 + 1234) = (v61 >> 3) / 3uLL;
        sub_1DDAD8498(&__str, (unsigned __int16)((v61 >> 3) / 3uLL), 3, &buf);
        __p[0] = (void *)a2;
        std::string v191 = sub_1DDA9F094((uint64_t **)(a1 + 1768), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p);
        sub_1DDAD88E8(v191 + 7, (uint64_t)&__str);
      }
      else
      {
        if (v6 != 50965) {
          goto LABEL_323;
        }
        if (a3[1] != 10
          || !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))
          && !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1208)))
        {
          return;
        }
        sub_1DDA27D28(a1, &__str);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)&__str, (void **)&buf.__r_.__value_.__l.__data_);
        if (__str.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
        }
        if (*(_WORD *)(a1 + 1234))
        {
          unsigned __int16 v12 = (void *)buf.__r_.__value_.__r.__words[0];
          int64_t v13 = buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0];
          if (3 * *(unsigned __int16 *)(a1 + 1234) != (uint64_t)(buf.__r_.__value_.__l.__size_
                                                                 - buf.__r_.__value_.__r.__words[0]) >> 3)
          {
LABEL_618:
            if (!v12) {
              return;
            }
            buf.__r_.__value_.__l.__size_ = (std::string::size_type)v12;
            goto LABEL_657;
          }
        }
        else
        {
          int64_t v13 = buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0];
        }
        *(_WORD *)(a1 + 1234) = (v13 >> 3) / 3uLL;
        sub_1DDAD8498(&__str, (unsigned __int16)((v13 >> 3) / 3uLL), 3, &buf);
        __p[0] = (void *)a2;
        uint64_t v190 = sub_1DDA9F094((uint64_t **)(a1 + 1792), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p);
        sub_1DDAD88E8(v190 + 7, (uint64_t)&__str);
      }
LABEL_615:
      if (__str.__r_.__value_.__l.__size_)
      {
        __str.__r_.__value_.__r.__words[2] = __str.__r_.__value_.__l.__size_;
        operator delete((void *)__str.__r_.__value_.__l.__size_);
      }
      unsigned __int16 v12 = (void *)buf.__r_.__value_.__r.__words[0];
      goto LABEL_618;
    }
    sub_1DDA27D28(a1, &buf);
    LODWORD(v269.f64[0]) = sub_1DDA3CE7C((uint64_t)a3);
    sub_1DDA1B4D8((int *)__p, (int *)&v269);
    sub_1DDA1A94C((uint64_t *)&__str, (uint64_t *)&buf, (uint64_t)__p, 0);
    if (buf.__r_.__value_.__l.__size_) {
      sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
    }
    if (a3[1] != 11
      || !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))
      && !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1208)))
    {
      goto LABEL_668;
    }
    unint64_t v63 = *((unsigned int *)a3 + 1);
    if (v63) {
      goto LABEL_668;
    }
    sub_1DDA24B78(&buf, v63 >> 1);
    sub_1DDA24B78(__p, (unint64_t)*((unsigned int *)a3 + 1) >> 1);
    if (*((_DWORD *)a3 + 1) >= 2u)
    {
      unint64_t v64 = 0;
      do
      {
        sub_1DDA27D28(a1, &v269);
        float v65 = sub_1DDA1A014(*(uint64_t *)&v269.f64[0]);
        *(double *)(buf.__r_.__value_.__r.__words[0] + 8 * v64) = v65;
        if (*(void *)&v269.f64[1]) {
          sub_1DDA18310(*(std::__shared_weak_count **)&v269.f64[1]);
        }
        sub_1DDA27D28(a1, &v269);
        float v66 = sub_1DDA1A014(*(uint64_t *)&v269.f64[0]);
        *((double *)__p[0] + v64) = v66;
        if (*(void *)&v269.f64[1]) {
          sub_1DDA18310(*(std::__shared_weak_count **)&v269.f64[1]);
        }
        ++v64;
      }
      while (v64 < (unint64_t)*((unsigned int *)a3 + 1) >> 1);
    }
    uint64_t v67 = __p[0];
    if (*(double *)buf.__r_.__value_.__l.__data_ == 0.0)
    {
      if (*(double *)__p[0] != 0.0
        || (uint64_t v68 = ((uint64_t)(buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0]) >> 3) - 1,
            fabs(*(double *)(buf.__r_.__value_.__r.__words[0] + 8 * v68) + -1.0) >= 0.0001)
        || fabs(*((double *)__p[0] + v68) + -1.0) >= 0.0001)
      {
LABEL_319:
        __p[1] = v67;
        operator delete(v67);
LABEL_320:
        if (buf.__r_.__value_.__r.__words[0])
        {
          buf.__r_.__value_.__l.__size_ = buf.__r_.__value_.__r.__words[0];
          operator delete(buf.__r_.__value_.__l.__data_);
        }
        goto LABEL_668;
      }
      *(void *)&v269.f64[0] = a2;
      uint64_t v69 = (std::string *)(sub_1DDA4B960((uint64_t **)(a1 + 2120), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v269)+ 7);
      if (v69 != &buf) {
        sub_1DDA25BB0((char *)v69, buf.__r_.__value_.__l.__data_, buf.__r_.__value_.__l.__size_, (uint64_t)(buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0]) >> 3);
      }
      *(void *)&v269.f64[0] = a2;
      uint64_t v70 = (char *)(sub_1DDA4B960((uint64_t **)(a1 + 2144), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&v269) + 7);
      uint64_t v67 = __p[0];
      if (v70 != (char *)__p)
      {
        sub_1DDA25BB0(v70, (char *)__p[0], (uint64_t)__p[1], ((char *)__p[1] - (char *)__p[0]) >> 3);
        uint64_t v67 = __p[0];
      }
    }
    if (!v67) {
      goto LABEL_320;
    }
    goto LABEL_319;
  }
  if (*a3 > 0xC611u)
  {
    switch(*a3)
    {
      case 0xC612u:
        if (!sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))
          || a3[1] != 1
          || *((_DWORD *)a3 + 1) != 4)
        {
          return;
        }
        unsigned int v7 = 0;
        LODWORD(__str.__r_.__value_.__l.__data_) = 0;
        do
        {
          sub_1DDA1B3CC(&buf, (unsigned int *)&__str);
          unsigned int v7 = (v7 << 8) | sub_1DDA49028((uint64_t)a3, (unsigned int *)&buf);
          int v8 = LODWORD(__str.__r_.__value_.__l.__data_)++;
        }
        while (v8 < 3);
        __str.__r_.__value_.__r.__words[0] = a2;
        uint64_t v9 = sub_1DDA4B72C((uint64_t **)(a1 + 1432), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
        goto LABEL_161;
      case 0xC613u:
        if (!sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))
          || a3[1] != 1
          || *((_DWORD *)a3 + 1) != 4)
        {
          return;
        }
        unsigned int v7 = 0;
        LODWORD(__str.__r_.__value_.__l.__data_) = 0;
        do
        {
          sub_1DDA1B3CC(&buf, (unsigned int *)&__str);
          unsigned int v7 = (v7 << 8) | sub_1DDA49028((uint64_t)a3, (unsigned int *)&buf);
          int v41 = LODWORD(__str.__r_.__value_.__l.__data_)++;
        }
        while (v41 < 3);
        if (v7 > 0x1070000)
        {
          exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](exception, "RawCameraException");
          __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        __str.__r_.__value_.__r.__words[0] = a2;
        uint64_t v9 = sub_1DDA4B72C((uint64_t **)(a1 + 1456), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
LABEL_161:
        *((_DWORD *)v9 + 14) = v7;
        return;
      case 0xC614u:
        if (!sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184)) || a3[1] != 2) {
          return;
        }
        memset(&__str, 0, sizeof(__str));
        if (sub_1DDA45530(a1, (uint64_t)a3, &__str, 0))
        {
          buf.__r_.__value_.__r.__words[0] = a2;
          uint64_t v39 = sub_1DDA4BAFC((uint64_t **)(a1 + 1312), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
          std::string::operator=((std::string *)(v39 + 7), &__str);
        }
        goto LABEL_295;
      case 0xC616u:
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(v261, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)v261 = *(_OWORD *)a2;
          uint64_t v262 = *(void *)(a2 + 16);
        }
        uint64_t v83 = sub_1DDA2A530(a1 + 512, v261);
        if ((void **)(a1 + 520) == v83 || *((_DWORD *)v83 + 14))
        {
          if ((SHIBYTE(v262) & 0x80000000) == 0) {
            return;
          }
          unsigned __int16 v12 = v261[0];
          goto LABEL_657;
        }
        int v84 = a3[1];
        if (SHIBYTE(v262) < 0) {
          operator delete(v261[0]);
        }
        if (v84 != 1) {
          return;
        }
        int v85 = a3[2];
        if ((v85 - 5) < 0xFFFFFFFE || *(_WORD *)(a1 + 1234) && *(unsigned __int16 *)(a1 + 1234) != v85) {
          return;
        }
        *(_WORD *)(a1 + 1234) = v85;
        memset(&__str, 0, sizeof(__str));
        if (!sub_1DDA46020(a1, (uint64_t)a3, (unint64_t *)&__str)) {
          goto LABEL_654;
        }
        unsigned __int16 v12 = (void *)__str.__r_.__value_.__r.__words[0];
        if (__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0] != *(unsigned __int16 *)(a1 + 1234))
        {
          uint64_t v86 = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E01C3B90](v86, "RawCameraException");
          __cxa_throw(v86, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        goto LABEL_655;
      case 0xC617u:
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(v259, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)uint64_t v259 = *(_OWORD *)a2;
          uint64_t v260 = *(void *)(a2 + 16);
        }
        uint64_t v87 = sub_1DDA2A530(a1 + 512, v259);
        if ((void **)(a1 + 520) != v87 && !*((_DWORD *)v87 + 14) && a3[1] == 3)
        {
          int v88 = *((_DWORD *)a3 + 1);
          if (SHIBYTE(v260) < 0) {
            operator delete(v259[0]);
          }
          if (v88 == 1)
          {
            __int16 data = sub_1DDA44F28((uint64_t)a3);
            __str.__r_.__value_.__r.__words[0] = a2;
            int v11 = sub_1DDA4BC98((uint64_t **)(a1 + 1504), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
            goto LABEL_378;
          }
          return;
        }
        if ((SHIBYTE(v260) & 0x80000000) == 0) {
          return;
        }
        unsigned __int16 v12 = v259[0];
        goto LABEL_657;
      case 0xC618u:
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(v257, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)v257 = *(_OWORD *)a2;
          uint64_t v258 = *(void *)(a2 + 16);
        }
        long long v106 = sub_1DDA2A530(a1 + 512, v257);
        if ((void **)(a1 + 520) == v106 || *((_DWORD *)v106 + 14))
        {
          if ((SHIBYTE(v258) & 0x80000000) == 0) {
            return;
          }
          unsigned __int16 v12 = v257[0];
          goto LABEL_657;
        }
        int v107 = a3[1];
        if (SHIBYTE(v258) < 0) {
          operator delete(v257[0]);
        }
        if (v107 == 3)
        {
          memset(&__str, 0, sizeof(__str));
          if (sub_1DDA45C20(a1, (uint64_t)a3, &__str.__r_.__value_.__l.__data_))
          {
            buf.__r_.__value_.__r.__words[0] = a2;
            long long v108 = (std::string *)(sub_1DDA4B960((uint64_t **)(a1 + 1576), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf)+ 7);
            if (v108 != &__str) {
              sub_1DDA49474((char *)v108, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 1);
            }
          }
          goto LABEL_654;
        }
        return;
      case 0xC619u:
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(v255, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)uint64_t v255 = *(_OWORD *)a2;
          uint64_t v256 = *(void *)(a2 + 16);
        }
        uint64_t v93 = sub_1DDA2A530(a1 + 512, v255);
        if ((void **)(a1 + 520) != v93 && !*((_DWORD *)v93 + 14) && a3[1] == 3)
        {
          int v94 = *((_DWORD *)a3 + 1);
          if (SHIBYTE(v256) < 0) {
            operator delete(v255[0]);
          }
          if (v94 == 2)
          {
            LODWORD(buf.__r_.__value_.__l.__data_) = 0;
            sub_1DDA1B3CC(&__str, (unsigned int *)&buf);
            int v95 = sub_1DDA3F234((uint64_t)a3, (unsigned int *)&__str);
            LODWORD(buf.__r_.__value_.__l.__data_) = 1;
            sub_1DDA1B3CC(&__str, (unsigned int *)&buf);
            int v96 = sub_1DDA3F234((uint64_t)a3, (unsigned int *)&__str);
            LOWORD(buf.__r_.__value_.__l.__data_) = v95;
            *(_WORD *)&buf.__r_.__value_.__s.__data_[2] = v96;
            __str.__r_.__value_.__r.__words[0] = a2;
            uint64_t v97 = sub_1DDA4B960((uint64_t **)(a1 + 1552), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
            sub_1DDA49474((char *)v97 + 56, (char *)&buf, (uint64_t)buf.__r_.__value_.__r.__words + 4, 2uLL);
            if (((v95 * v96) & 0xFFFF0000) == 0) {
              *(_WORD *)(a1 + 1238) = v95 * v96;
            }
          }
          return;
        }
        if ((SHIBYTE(v256) & 0x80000000) == 0) {
          return;
        }
        unsigned __int16 v12 = v255[0];
        goto LABEL_657;
      case 0xC61Au:
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(v253, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)uint64_t v253 = *(_OWORD *)a2;
          uint64_t v254 = *(void *)(a2 + 16);
        }
        uint64_t v89 = sub_1DDA2A530(a1 + 512, v253);
        if ((void **)(a1 + 520) == v89 || *((_DWORD *)v89 + 14))
        {
          if ((SHIBYTE(v254) & 0x80000000) == 0) {
            return;
          }
          unsigned __int16 v12 = v253[0];
          goto LABEL_657;
        }
        int v90 = a3[1];
        if ((v90 - 3) >= 3)
        {
          if (SHIBYTE(v254) < 0) {
            operator delete(v253[0]);
          }
          if (v90 != 9) {
            return;
          }
        }
        else if (SHIBYTE(v254) < 0)
        {
          operator delete(v253[0]);
        }
        if (*((_DWORD *)a3 + 1) == *(unsigned __int16 *)(a1 + 1236) * *(unsigned __int16 *)(a1 + 1238))
        {
          sub_1DDA27D28(a1, &buf);
          sub_1DDA3E944((uint64_t)a3, (uint64_t *)&buf, (void **)&__str.__r_.__value_.__l.__data_);
          if (buf.__r_.__value_.__l.__size_) {
            sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
          }
          std::string::size_type v91 = __str.__r_.__value_.__r.__words[0];
          if (*((_DWORD *)a3 + 1) == (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 3)
          {
            if (__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0] == 8)
            {
              sub_1DDA25B2C(&buf, 4uLL, __str.__r_.__value_.__l.__data_);
              if (__str.__r_.__value_.__r.__words[0])
              {
                __str.__r_.__value_.__l.__size_ = __str.__r_.__value_.__r.__words[0];
                operator delete(__str.__r_.__value_.__l.__data_);
              }
              std::string __str = buf;
            }
            buf.__r_.__value_.__r.__words[0] = a2;
            uint64_t v92 = (std::string *)(sub_1DDA4B960((uint64_t **)(a1 + 264), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf)+ 7);
            std::string::size_type v91 = __str.__r_.__value_.__r.__words[0];
            if (v92 != &__str)
            {
              sub_1DDA25BB0((char *)v92, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 3);
              std::string::size_type v91 = __str.__r_.__value_.__r.__words[0];
            }
          }
          if (v91)
          {
            __str.__r_.__value_.__l.__size_ = v91;
            unsigned __int16 v12 = (void *)v91;
            goto LABEL_657;
          }
        }
        return;
      case 0xC61Bu:
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(v251, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)uint64_t v251 = *(_OWORD *)a2;
          uint64_t v252 = *(void *)(a2 + 16);
        }
        long long v109 = sub_1DDA2A530(a1 + 512, v251);
        if ((void **)(a1 + 520) == v109 || *((_DWORD *)v109 + 14))
        {
          if ((SHIBYTE(v252) & 0x80000000) == 0) {
            return;
          }
          unsigned __int16 v12 = v251[0];
          goto LABEL_657;
        }
        int v110 = a3[1];
        if (SHIBYTE(v252) < 0) {
          operator delete(v251[0]);
        }
        if (v110 != 10) {
          return;
        }
        sub_1DDA27D28(a1, &buf);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)&buf, (void **)&__str.__r_.__value_.__l.__data_);
        if (buf.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
        }
        float64x2_t v269 = 0uLL;
        float64x2_t v272 = 0uLL;
        std::string::size_type v111 = __str.__r_.__value_.__r.__words[0];
        if (__str.__r_.__value_.__l.__size_ == __str.__r_.__value_.__r.__words[0])
        {
          float64x2_t v114 = (float64x2_t)vdupq_n_s64(0x7FF8000000000000uLL);
        }
        else
        {
          uint64_t v112 = 0;
          unint64_t v113 = (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 3;
          if (v113 <= 1) {
            unint64_t v113 = 1;
          }
          do
          {
            *(double *)((unint64_t)&v269 & 0xFFFFFFFFFFFFFFF7 | (8 * (v112 & 1))) = *(double *)(v111 + 8 * v112)
                                                                                           + *(double *)((unint64_t)&v269 & 0xFFFFFFFFFFFFFFF7 | (8 * (v112 & 1)));
            *(double *)((unint64_t)&v272 & 0xFFFFFFFFFFFFFFF7 | (8 * (v112 & 1))) = *(double *)((unint64_t)&v272 & 0xFFFFFFFFFFFFFFF7 | (8 * (v112 & 1)))
                                                                                           + 1.0;
            ++v112;
          }
          while (v113 != v112);
          float64x2_t v114 = vdivq_f64(v269, v272);
        }
        float64x2_t v269 = v114;
        sub_1DDA24B78(&buf, 4uLL);
        uint64_t v143 = 0;
        std::string::size_type v144 = buf.__r_.__value_.__r.__words[0];
        do
        {
          *(void *)(v144 + 8 * v143) = *(void *)((unint64_t)&v269 & 0xFFFFFFFFFFFFFFF7 | (8 * (v143 & 1)));
          ++v143;
        }
        while (v143 != 4);
        sub_1DDA47580(":DeltaH", (const void **)a2, __p);
        *(void *)&v271.f64[0] = __p;
        char v145 = (std::string *)((char *)sub_1DDA52108((uint64_t **)(a1 + 264), __p, (uint64_t)&unk_1DDBFB044, &v271) + 56);
        if (v145 != &buf) {
          sub_1DDA25BB0((char *)v145, buf.__r_.__value_.__l.__data_, buf.__r_.__value_.__l.__size_, (uint64_t)(buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0]) >> 3);
        }
        if (SHIBYTE(v250) < 0)
        {
          uint64_t v146 = __p[0];
          goto LABEL_521;
        }
        goto LABEL_522;
      case 0xC61Cu:
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(v247, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)uint64_t v247 = *(_OWORD *)a2;
          uint64_t v248 = *(void *)(a2 + 16);
        }
        long long v115 = sub_1DDA2A530(a1 + 512, v247);
        if ((void **)(a1 + 520) == v115 || *((_DWORD *)v115 + 14))
        {
          if ((SHIBYTE(v248) & 0x80000000) == 0) {
            return;
          }
          unsigned __int16 v12 = v247[0];
          goto LABEL_657;
        }
        int v116 = a3[1];
        if (SHIBYTE(v248) < 0) {
          operator delete(v247[0]);
        }
        if (v116 != 10) {
          return;
        }
        sub_1DDA27D28(a1, &buf);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)&buf, (void **)&__str.__r_.__value_.__l.__data_);
        if (buf.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
        }
        float64x2_t v272 = 0uLL;
        float64x2_t v271 = 0uLL;
        std::string::size_type v117 = __str.__r_.__value_.__r.__words[0];
        if (__str.__r_.__value_.__l.__size_ == __str.__r_.__value_.__r.__words[0])
        {
          float64x2_t v120 = (float64x2_t)vdupq_n_s64(0x7FF8000000000000uLL);
        }
        else
        {
          uint64_t v118 = 0;
          unint64_t v119 = (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 3;
          if (v119 <= 1) {
            unint64_t v119 = 1;
          }
          do
          {
            *(double *)((unint64_t)&v272 & 0xFFFFFFFFFFFFFFF7 | (8 * (v118 & 1))) = *(double *)(v117 + 8 * v118)
                                                                                           + *(double *)((unint64_t)&v272 & 0xFFFFFFFFFFFFFFF7 | (8 * (v118 & 1)));
            *(double *)((unint64_t)&v271 & 0xFFFFFFFFFFFFFFF7 | (8 * (v118 & 1))) = *(double *)((unint64_t)&v271 & 0xFFFFFFFFFFFFFFF7 | (8 * (v118 & 1)))
                                                                                           + 1.0;
            ++v118;
          }
          while (v119 != v118);
          float64x2_t v120 = vdivq_f64(v272, v271);
        }
        float64x2_t v272 = v120;
        sub_1DDA24B78(&buf, 4uLL);
        char v147 = &v272;
        float64x2_t v148 = vld1q_dup_f64(v147->f64);
        char v149 = (_OWORD *)buf.__r_.__value_.__r.__words[0];
        *(float64x2_t *)buf.__r_.__value_.__l.__data_ = v148;
        uint64_t v150 = &v272.f64[1];
        float64x2_t v151 = vld1q_dup_f64(v150);
        v149[1] = v151;
        __p[1] = 0;
        uint64_t v250 = 0;
        __p[0] = 0;
        sub_1DDA1808C(__p, v149, buf.__r_.__value_.__l.__size_, (uint64_t)(buf.__r_.__value_.__l.__size_ - (void)v149) >> 3);
        sub_1DDA47580(":DeltaV", (const void **)a2, (void **)&v269);
        v267 = &v269;
        uint64_t v152 = sub_1DDA52108((uint64_t **)(a1 + 264), (void **)&v269, (uint64_t)&unk_1DDBFB044, (_OWORD **)&v267);
        char v153 = (void *)v152[7];
        if (v153)
        {
          v152[8] = v153;
          operator delete(v153);
          v152[7] = 0;
          v152[8] = 0;
          v152[9] = 0;
        }
        *(_OWORD *)(v152 + 7) = *(_OWORD *)__p;
        v152[9] = v250;
        __p[1] = 0;
        uint64_t v250 = 0;
        __p[0] = 0;
        if (v270 < 0)
        {
          operator delete(*(void **)&v269.f64[0]);
          uint64_t v146 = __p[0];
          if (__p[0])
          {
            __p[1] = __p[0];
LABEL_521:
            operator delete(v146);
          }
        }
LABEL_522:
        uint64_t v72 = (char *)buf.__r_.__value_.__r.__words[0];
        if (buf.__r_.__value_.__r.__words[0])
        {
          buf.__r_.__value_.__l.__size_ = buf.__r_.__value_.__r.__words[0];
          goto LABEL_524;
        }
        goto LABEL_654;
      case 0xC61Du:
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(v245, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)uint64_t v245 = *(_OWORD *)a2;
          uint64_t v246 = *(void *)(a2 + 16);
        }
        uint64_t v98 = sub_1DDA2A530(a1 + 512, v245);
        if ((void **)(a1 + 520) == v98
          || *((_DWORD *)v98 + 14)
          || (int v100 = a3[1], (v100 - 3) >= 2) && v100 != 9)
        {
          if ((SHIBYTE(v246) & 0x80000000) == 0) {
            return;
          }
          unsigned __int16 v12 = v245[0];
          goto LABEL_657;
        }
        int v101 = *((_DWORD *)a3 + 1);
        int v102 = *(unsigned __int16 *)(a1 + 1236);
        if (SHIBYTE(v246) < 0) {
          operator delete(v245[0]);
        }
        if (v101 != v102) {
          return;
        }
        int v103 = a3[1];
        if (*((_DWORD *)a3 + 1) == 1)
        {
          if (v103 == 3)
          {
            *(double *)&buf.__r_.__value_.__l.__data_ = (double)sub_1DDA44F28((uint64_t)a3);
          }
          else
          {
            LODWORD(v99) = *((_DWORD *)a3 + 2);
            *(double *)&buf.__r_.__value_.__l.__data_ = (double)v99;
          }
          __str.__r_.__value_.__r.__words[0] = a2;
          long long v104 = sub_1DDA4B960((uint64_t **)(a1 + 240), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
          sub_1DDA25BB0((char *)v104 + 56, (char *)&buf, (uint64_t)&buf.__r_.__value_.__l.__size_, 1uLL);
          return;
        }
        if (v103 == 4)
        {
          memset(&__str, 0, sizeof(__str));
          if (!sub_1DDA44F6C(a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_)) {
            goto LABEL_654;
          }
          memset(&buf, 0, sizeof(buf));
          sub_1DDA9DE20((char *)&buf, (unsigned int *)__str.__r_.__value_.__l.__data_, (unsigned int *)__str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 2);
          __p[0] = (void *)a2;
          long long v105 = sub_1DDA4B960((uint64_t **)(a1 + 240), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p);
          goto LABEL_696;
        }
        if (v103 != 3) {
          return;
        }
        memset(&__str, 0, sizeof(__str));
        if (sub_1DDA45C20(a1, (uint64_t)a3, &__str.__r_.__value_.__l.__data_))
        {
          memset(&buf, 0, sizeof(buf));
          sub_1DDA88A70((char *)&buf, (unsigned __int16 *)__str.__r_.__value_.__l.__data_, (unsigned __int16 *)__str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 1);
          __p[0] = (void *)a2;
          long long v105 = sub_1DDA4B960((uint64_t **)(a1 + 240), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p);
LABEL_696:
          long long v213 = v105;
          long long v215 = v105 + 7;
          long long v214 = (void *)v105[7];
          if (v214)
          {
            v213[8] = (uint64_t)v214;
            operator delete(v214);
            *long long v215 = 0;
            v215[1] = 0;
            void v215[2] = 0;
          }
          *(std::string *)(v213 + 7) = buf;
          goto LABEL_654;
        }
        goto LABEL_654;
      case 0xC61Eu:
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(v237, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)uint64_t v237 = *(_OWORD *)a2;
          uint64_t v238 = *(void *)(a2 + 16);
        }
        uint64_t v121 = sub_1DDA2A530(a1 + 512, v237);
        if ((void **)(a1 + 520) == v121 || *((_DWORD *)v121 + 14) || a3[1] - 3 > 2)
        {
          if ((SHIBYTE(v238) & 0x80000000) == 0) {
            return;
          }
          unsigned __int16 v12 = v237[0];
          goto LABEL_657;
        }
        int v122 = *((_DWORD *)a3 + 1);
        if (SHIBYTE(v238) < 0) {
          operator delete(v237[0]);
        }
        if (v122 != 2) {
          return;
        }
        int v123 = a3[1];
        if (v123 == 5)
        {
          memset(&__str, 0, sizeof(__str));
          int v208 = sub_1DDA4575C(a1, (uint64_t)a3, (uint64_t)&__str);
          unsigned __int16 v12 = (void *)__str.__r_.__value_.__r.__words[0];
          if (!v208 || __str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0] != 8) {
            goto LABEL_655;
          }
          float v206 = *(float *)__str.__r_.__value_.__l.__data_;
          if (fabsf(*(float *)__str.__r_.__value_.__l.__data_) != INFINITY)
          {
            float v207 = *(float *)(__str.__r_.__value_.__r.__words[0] + 4);
            if (fabsf(v207) != INFINITY)
            {
              buf.__r_.__value_.__r.__words[0] = a2;
              uint64_t v79 = sub_1DDA4BE58((uint64_t **)(a1 + 1384), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
              goto LABEL_664;
            }
          }
          goto LABEL_656;
        }
        if (v123 != 4)
        {
          if (v123 != 3) {
            return;
          }
          memset(&__str, 0, sizeof(__str));
          if (sub_1DDA45C20(a1, (uint64_t)a3, &__str.__r_.__value_.__l.__data_))
          {
            uint64_t v77 = *(unsigned __int16 *)__str.__r_.__value_.__l.__data_;
            uint64_t v78 = *(unsigned __int16 *)(__str.__r_.__value_.__r.__words[0] + 2);
            buf.__r_.__value_.__r.__words[0] = a2;
            uint64_t v79 = sub_1DDA4BE58((uint64_t **)(a1 + 1384), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
            goto LABEL_475;
          }
          goto LABEL_654;
        }
        memset(&__str, 0, sizeof(__str));
        if (!sub_1DDA44F6C(a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_)) {
          goto LABEL_654;
        }
        sub_1DDA18218(__p, *(_DWORD *)__str.__r_.__value_.__l.__data_, *(_DWORD *)(__str.__r_.__value_.__r.__words[0] + 4));
        buf.__r_.__value_.__r.__words[0] = a2;
        uint64_t v79 = sub_1DDA4BE58((uint64_t **)(a1 + 1384), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
        goto LABEL_652;
      case 0xC61Fu:
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(__dst, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)std::string __dst = *(_OWORD *)a2;
          uint64_t v242 = *(void *)(a2 + 16);
        }
        uint64_t v74 = sub_1DDA2A530(a1 + 512, __dst);
        if ((void **)(a1 + 520) == v74 || *((_DWORD *)v74 + 14) || a3[1] - 3 > 2)
        {
          if ((SHIBYTE(v242) & 0x80000000) == 0) {
            return;
          }
          unsigned __int16 v12 = __dst[0];
          goto LABEL_657;
        }
        int v75 = *((_DWORD *)a3 + 1);
        if (SHIBYTE(v242) < 0) {
          operator delete(__dst[0]);
        }
        if (v75 != 2) {
          return;
        }
        int v76 = a3[1];
        if (v76 == 5)
        {
          memset(&__str, 0, sizeof(__str));
          int v203 = sub_1DDA4575C(a1, (uint64_t)a3, (uint64_t)&__str);
          unsigned __int16 v12 = (void *)__str.__r_.__value_.__r.__words[0];
          if (!v203 || __str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0] != 8) {
            goto LABEL_655;
          }
          if (fabsf(*(float *)__str.__r_.__value_.__l.__data_) != INFINITY)
          {
            float v204 = *(float *)(__str.__r_.__value_.__r.__words[0] + 4);
            if (fabsf(v204) != INFINITY)
            {
              sub_1DDA18218(__p, *(float *)__str.__r_.__value_.__l.__data_, v204);
              buf.__r_.__value_.__r.__words[0] = a2;
              uint64_t v79 = sub_1DDA4BE58((uint64_t **)(a1 + 1336), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
              goto LABEL_652;
            }
          }
          goto LABEL_656;
        }
        if (v76 != 4)
        {
          if (v76 != 3) {
            return;
          }
          memset(&__str, 0, sizeof(__str));
          if (sub_1DDA45C20(a1, (uint64_t)a3, &__str.__r_.__value_.__l.__data_))
          {
            uint64_t v77 = *(unsigned __int16 *)__str.__r_.__value_.__l.__data_;
            uint64_t v78 = *(unsigned __int16 *)(__str.__r_.__value_.__r.__words[0] + 2);
            buf.__r_.__value_.__r.__words[0] = a2;
            uint64_t v79 = sub_1DDA4BE58((uint64_t **)(a1 + 1336), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
            goto LABEL_475;
          }
          goto LABEL_654;
        }
        memset(&__str, 0, sizeof(__str));
        if (!sub_1DDA44F6C(a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_)) {
          goto LABEL_654;
        }
        sub_1DDA18218(__p, *(_DWORD *)__str.__r_.__value_.__l.__data_, *(_DWORD *)(__str.__r_.__value_.__r.__words[0] + 4));
        buf.__r_.__value_.__r.__words[0] = a2;
        uint64_t v79 = sub_1DDA4BE58((uint64_t **)(a1 + 1336), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
        goto LABEL_652;
      case 0xC620u:
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(v239, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)v239 = *(_OWORD *)a2;
          uint64_t v240 = *(void *)(a2 + 16);
        }
        uint64_t v80 = sub_1DDA2A530(a1 + 512, v239);
        if ((void **)(a1 + 520) == v80 || *((_DWORD *)v80 + 14) || a3[1] - 3 > 2)
        {
          if ((SHIBYTE(v240) & 0x80000000) == 0) {
            return;
          }
          unsigned __int16 v12 = v239[0];
          goto LABEL_657;
        }
        int v81 = *((_DWORD *)a3 + 1);
        if (SHIBYTE(v240) < 0) {
          operator delete(v239[0]);
        }
        if (v81 != 2) {
          return;
        }
        int v82 = a3[1];
        if (v82 != 5)
        {
          if (v82 == 4)
          {
            memset(&__str, 0, sizeof(__str));
            if (!sub_1DDA44F6C(a1, (uint64_t)a3, (void **)&__str.__r_.__value_.__l.__data_)) {
              goto LABEL_654;
            }
            sub_1DDA18218(__p, *(_DWORD *)__str.__r_.__value_.__l.__data_, *(_DWORD *)(__str.__r_.__value_.__r.__words[0] + 4));
            buf.__r_.__value_.__r.__words[0] = a2;
            uint64_t v79 = sub_1DDA4BE58((uint64_t **)(a1 + 1360), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
LABEL_652:
            uint64_t v124 = __p[0];
            goto LABEL_653;
          }
          if (v82 != 3) {
            return;
          }
          memset(&__str, 0, sizeof(__str));
          if (sub_1DDA45C20(a1, (uint64_t)a3, &__str.__r_.__value_.__l.__data_))
          {
            uint64_t v77 = *(unsigned __int16 *)__str.__r_.__value_.__l.__data_;
            uint64_t v78 = *(unsigned __int16 *)(__str.__r_.__value_.__r.__words[0] + 2);
            buf.__r_.__value_.__r.__words[0] = a2;
            uint64_t v79 = sub_1DDA4BE58((uint64_t **)(a1 + 1360), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
LABEL_475:
            uint64_t v124 = (void *)(v77 | (v78 << 32));
            goto LABEL_653;
          }
          goto LABEL_654;
        }
        memset(&__str, 0, sizeof(__str));
        int v205 = sub_1DDA4575C(a1, (uint64_t)a3, (uint64_t)&__str);
        unsigned __int16 v12 = (void *)__str.__r_.__value_.__r.__words[0];
        if (!v205 || __str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0] != 8) {
          goto LABEL_655;
        }
        float v206 = *(float *)__str.__r_.__value_.__l.__data_;
        if (fabsf(*(float *)__str.__r_.__value_.__l.__data_) != INFINITY)
        {
          float v207 = *(float *)(__str.__r_.__value_.__r.__words[0] + 4);
          if (fabsf(v207) != INFINITY)
          {
            buf.__r_.__value_.__r.__words[0] = a2;
            uint64_t v79 = sub_1DDA4BE58((uint64_t **)(a1 + 1360), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf);
LABEL_664:
            uint64_t v124 = (void *)((int)v206 | ((unint64_t)(int)v207 << 32));
LABEL_653:
            v79[7] = (uint64_t)v124;
            goto LABEL_654;
          }
        }
        break;
      case 0xC621u:
        if (a3[1] != 10
          || !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))
          && !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1208)))
        {
          return;
        }
        sub_1DDA27D28(a1, &__str);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)&__str, (void **)&buf.__r_.__value_.__l.__data_);
        if (__str.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
        }
        if (*(_WORD *)(a1 + 1234))
        {
          unsigned __int16 v12 = (void *)buf.__r_.__value_.__r.__words[0];
          int64_t v37 = buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0];
          if (3 * *(unsigned __int16 *)(a1 + 1234) != (uint64_t)(buf.__r_.__value_.__l.__size_
                                                                 - buf.__r_.__value_.__r.__words[0]) >> 3)
            goto LABEL_618;
        }
        else
        {
          int64_t v37 = buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0];
        }
        *(_WORD *)(a1 + 1234) = (v37 >> 3) / 3uLL;
        sub_1DDAD8498(&__str, (unsigned __int16)((v37 >> 3) / 3uLL), 3, &buf);
        __p[0] = (void *)a2;
        char v131 = sub_1DDA9F094((uint64_t **)(a1 + 1624), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p);
        sub_1DDAD88E8(v131 + 7, (uint64_t)&__str);
        goto LABEL_615;
      case 0xC622u:
        if (a3[1] != 10
          || !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))
          && !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1208)))
        {
          return;
        }
        sub_1DDA27D28(a1, &__str);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)&__str, (void **)&buf.__r_.__value_.__l.__data_);
        if (__str.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
        }
        if (*(_WORD *)(a1 + 1234))
        {
          unsigned __int16 v12 = (void *)buf.__r_.__value_.__r.__words[0];
          int64_t v21 = buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0];
          if (3 * *(unsigned __int16 *)(a1 + 1234) != (uint64_t)(buf.__r_.__value_.__l.__size_
                                                                 - buf.__r_.__value_.__r.__words[0]) >> 3)
            goto LABEL_618;
        }
        else
        {
          int64_t v21 = buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0];
        }
        *(_WORD *)(a1 + 1234) = (v21 >> 3) / 3uLL;
        sub_1DDAD8498(&__str, (unsigned __int16)((v21 >> 3) / 3uLL), 3, &buf);
        __p[0] = (void *)a2;
        uint64_t v130 = sub_1DDA9F094((uint64_t **)(a1 + 1648), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p);
        sub_1DDAD88E8(v130 + 7, (uint64_t)&__str);
        goto LABEL_615;
      case 0xC623u:
        if (a3[1] != 10 || !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))) {
          return;
        }
        sub_1DDA27D28(a1, &__str);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)&__str, (void **)&buf.__r_.__value_.__l.__data_);
        if (__str.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
        }
        if (*(_WORD *)(a1 + 1234))
        {
          unsigned __int16 v12 = (void *)buf.__r_.__value_.__r.__words[0];
          uint64_t v38 = (uint64_t)(buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0]) >> 3;
          if (v38 != *(unsigned __int16 *)(a1 + 1234) * *(unsigned __int16 *)(a1 + 1234)) {
            goto LABEL_618;
          }
        }
        else
        {
          uint64_t v38 = (uint64_t)(buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0]) >> 3;
        }
        uint64_t v136 = (int)sqrt((double)(unint64_t)v38);
        *(_WORD *)(a1 + 1234) = v136;
        sub_1DDAD8498(&__str, v136, v136, &buf);
        __p[0] = (void *)a2;
        char v137 = sub_1DDA9F094((uint64_t **)(a1 + 1720), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p);
        sub_1DDAD88E8(v137 + 7, (uint64_t)&__str);
        goto LABEL_615;
      case 0xC624u:
        if (a3[1] != 10 || !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))) {
          return;
        }
        sub_1DDA27D28(a1, &__str);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)&__str, (void **)&buf.__r_.__value_.__l.__data_);
        if (__str.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
        }
        if (*(_WORD *)(a1 + 1234))
        {
          unsigned __int16 v12 = (void *)buf.__r_.__value_.__r.__words[0];
          uint64_t v20 = (uint64_t)(buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0]) >> 3;
          if (v20 != *(unsigned __int16 *)(a1 + 1234) * *(unsigned __int16 *)(a1 + 1234)) {
            goto LABEL_618;
          }
        }
        else
        {
          uint64_t v20 = (uint64_t)(buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0]) >> 3;
        }
        uint64_t v134 = (int)sqrt((double)(unint64_t)v20);
        *(_WORD *)(a1 + 1234) = v134;
        sub_1DDAD8498(&__str, v134, v134, &buf);
        __p[0] = (void *)a2;
        char v135 = sub_1DDA9F094((uint64_t **)(a1 + 1744), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p);
        sub_1DDAD88E8(v135 + 7, (uint64_t)&__str);
        goto LABEL_615;
      case 0xC625u:
        if (a3[1] != 10
          || !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))
          && !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1208)))
        {
          return;
        }
        sub_1DDA27D28(a1, &__str);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)&__str, (void **)&buf.__r_.__value_.__l.__data_);
        if (__str.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
        }
        if (*(_WORD *)(a1 + 1234))
        {
          unsigned __int16 v12 = (void *)buf.__r_.__value_.__r.__words[0];
          int64_t v40 = buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0];
          if (3 * *(unsigned __int16 *)(a1 + 1234) != (uint64_t)(buf.__r_.__value_.__l.__size_
                                                                 - buf.__r_.__value_.__r.__words[0]) >> 3)
            goto LABEL_618;
        }
        else
        {
          int64_t v40 = buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0];
        }
        *(_WORD *)(a1 + 1234) = (v40 >> 3) / 3uLL;
        sub_1DDAD8498(&__str, (unsigned __int16)((v40 >> 3) / 3uLL), 3, &buf);
        __p[0] = (void *)a2;
        uint64_t v132 = sub_1DDA9F094((uint64_t **)(a1 + 1672), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p);
        sub_1DDAD88E8(v132 + 7, (uint64_t)&__str);
        goto LABEL_615;
      case 0xC626u:
        if (a3[1] != 10
          || !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))
          && !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1208)))
        {
          return;
        }
        sub_1DDA27D28(a1, &__str);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)&__str, (void **)&buf.__r_.__value_.__l.__data_);
        if (__str.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
        }
        if (*(_WORD *)(a1 + 1234))
        {
          unsigned __int16 v12 = (void *)buf.__r_.__value_.__r.__words[0];
          int64_t v42 = buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0];
          if (3 * *(unsigned __int16 *)(a1 + 1234) != (uint64_t)(buf.__r_.__value_.__l.__size_
                                                                 - buf.__r_.__value_.__r.__words[0]) >> 3)
            goto LABEL_618;
        }
        else
        {
          int64_t v42 = buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0];
        }
        *(_WORD *)(a1 + 1234) = (v42 >> 3) / 3uLL;
        sub_1DDAD8498(&__str, (unsigned __int16)((v42 >> 3) / 3uLL), 3, &buf);
        __p[0] = (void *)a2;
        char v133 = sub_1DDA9F094((uint64_t **)(a1 + 1696), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p);
        sub_1DDAD88E8(v133 + 7, (uint64_t)&__str);
        goto LABEL_615;
      case 0xC627u:
        if (a3[1] != 5 || !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))) {
          return;
        }
        sub_1DDA27D28(a1, &buf);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)&buf, (void **)&__str.__r_.__value_.__l.__data_);
        if (buf.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
        }
        if (*(_WORD *)(a1 + 1234))
        {
          unsigned __int16 v12 = (void *)__str.__r_.__value_.__r.__words[0];
          std::string::size_type v49 = __str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0];
          if (*(unsigned __int16 *)(a1 + 1234) != (uint64_t)(__str.__r_.__value_.__l.__size_
                                                           - __str.__r_.__value_.__r.__words[0]) >> 3)
            goto LABEL_655;
        }
        else
        {
          std::string::size_type v49 = __str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0];
        }
        *(_WORD *)(a1 + 1234) = v49 >> 3;
        buf.__r_.__value_.__r.__words[0] = a2;
        uint64_t v138 = (std::string *)(sub_1DDA4B960((uint64_t **)(a1 + 1864), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf)+ 7);
        if (v138 != &__str) {
          sub_1DDA25BB0((char *)v138, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_, (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 3);
        }
        unsigned __int16 v12 = (void *)__str.__r_.__value_.__r.__words[0];
        if (__str.__r_.__value_.__l.__size_ == __str.__r_.__value_.__r.__words[0])
        {
          unsigned __int16 v12 = (void *)__str.__r_.__value_.__l.__size_;
          goto LABEL_655;
        }
        uint64_t v139 = 0;
        unint64_t v140 = (uint64_t)(__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0]) >> 3;
        uint64_t v141 = *(void *)(a1 + 1288);
        uint64_t v142 = (*(void *)(a1 + 1296) - v141) >> 3;
        if (v140 <= 1) {
          unint64_t v140 = 1;
        }
        do
        {
          if (v142 == v139) {
            goto LABEL_655;
          }
          *(double *)(v141 + 8 * v139) = *(double *)&v12[v139] * *(double *)(v141 + 8 * v139);
          ++v139;
        }
        while (v140 != v139);
        goto LABEL_656;
      case 0xC628u:
        unsigned int v22 = a3[1];
        if (v22 > 0xA) {
          return;
        }
        if (((1 << v22) & 0x428) == 0) {
          return;
        }
        if (!sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))) {
          return;
        }
        unint64_t v23 = a3[2];
        if ((v23 - 5) < 0xFFFFFFFE
          || *(_WORD *)(a1 + 1234) && *(unsigned __int16 *)(a1 + 1234) != v23)
        {
          return;
        }
        *(_WORD *)(a1 + 1234) = v23;
        buf.__r_.__value_.__r.__words[0] = 0x3FF0000000000000;
        sub_1DDA25B2C(&__str, v23, &buf);
        sub_1DDA27D28(a1, __p);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)__p, (void **)&buf.__r_.__value_.__l.__data_);
        if (__p[1]) {
          sub_1DDA18310((std::__shared_weak_count *)__p[1]);
        }
        std::string::size_type v25 = buf.__r_.__value_.__l.__size_;
        uint64_t v24 = (char *)buf.__r_.__value_.__r.__words[0];
        unint64_t v26 = (uint64_t)(buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0]) >> 3;
        if (v26 != *(unsigned __int16 *)(a1 + 1234)) {
          goto LABEL_326;
        }
        if (*(_WORD *)(a1 + 1234))
        {
          int v27 = (double *)__str.__r_.__value_.__r.__words[0];
          uint64_t v28 = (double *)buf.__r_.__value_.__r.__words[0];
          uint64_t v29 = (uint64_t)(buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0]) >> 3;
          do
          {
            double v30 = *v28++;
            float v31 = v30;
            double *v27 = *v27 / v31;
            ++v27;
            --v29;
          }
          while (v29);
        }
        *(_WORD *)(a1 + 1234) = v23;
        if ((std::string *)(a1 + 1248) != &buf)
        {
          sub_1DDA25BB0((char *)(a1 + 1248), v24, v25, v26);
          LODWORD(v23) = *(unsigned __int16 *)(a1 + 1234);
          uint64_t v24 = (char *)buf.__r_.__value_.__r.__words[0];
        }
        uint64_t v32 = *(void *)(a1 + 1288);
        uint64_t v33 = (*(void *)(a1 + 1296) - v32) >> 3;
        if (v33 == v23 && v23)
        {
          uint64_t v34 = 0;
          do
          {
            float v35 = *(double *)(v32 + 8 * v34);
            float v36 = *(double *)&v24[8 * v34];
            *(double *)(v32 + 8 * v34++) = (float)(v35 / v36);
          }
          while (v33 != v34);
        }
        else
        {
LABEL_326:
          if (!v24) {
            goto LABEL_654;
          }
        }
        buf.__r_.__value_.__l.__size_ = (std::string::size_type)v24;
        uint64_t v72 = v24;
LABEL_524:
        operator delete(v72);
        goto LABEL_654;
      case 0xC629u:
        if (a3[1] != 5 || !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))) {
          return;
        }
        sub_1DDA27D28(a1, &buf);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)&buf, (void **)&__str.__r_.__value_.__l.__data_);
        if (buf.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
        }
        unsigned __int16 v12 = (void *)__str.__r_.__value_.__r.__words[0];
        if (__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0] != 16) {
          goto LABEL_655;
        }
        *(void *)(a1 + 1272) = *(void *)__str.__r_.__value_.__l.__data_;
        *(void *)(a1 + 1280) = v12[1];
        goto LABEL_656;
      case 0xC62Au:
        if (a3[1] != 10
          || *((_DWORD *)a3 + 1) != 1
          || !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184)))
        {
          return;
        }
        sub_1DDA27D28(a1, &buf);
        sub_1DDA3E944((uint64_t)a3, (uint64_t *)&buf, (void **)&__str.__r_.__value_.__l.__data_);
        if (buf.__r_.__value_.__l.__size_) {
          sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
        }
        unsigned __int16 v12 = (void *)__str.__r_.__value_.__r.__words[0];
        if (__str.__r_.__value_.__l.__size_ - __str.__r_.__value_.__r.__words[0] != 8) {
          goto LABEL_655;
        }
        uint64_t v19 = *(void *)__str.__r_.__value_.__l.__data_;
        buf.__r_.__value_.__r.__words[0] = a2;
        sub_1DDA4BE58((uint64_t **)(a1 + 1888), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&buf)[7] = v19;
        goto LABEL_654;
      case 0xC62Bu:
        if (sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))
          && a3[1] == 5
          && *((_DWORD *)a3 + 1) == 1)
        {
          (*(void (**)(std::string *__return_ptr, uint64_t))(*(void *)a1 + 384))(&__str, a1);
          char v44 = sub_1DDA3E640((uint64_t)a3, (double *)(a1 + 1912), (uint64_t *)&__str, v43);
          if (__str.__r_.__value_.__l.__size_) {
            sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
          }
          if ((v44 & 1) == 0)
          {
            unsigned int v45 = __cxa_allocate_exception(0x10uLL);
            MEMORY[0x1E01C3B90](v45, "RawCameraException");
            __cxa_throw(v45, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
          }
        }
        return;
      case 0xC62Cu:
        if (sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))
          && a3[1] == 5
          && *((_DWORD *)a3 + 1) == 1)
        {
          (*(void (**)(std::string *__return_ptr, uint64_t))(*(void *)a1 + 384))(&__str, a1);
          char v47 = sub_1DDA3E640((uint64_t)a3, (double *)(a1 + 1920), (uint64_t *)&__str, v46);
          if (__str.__r_.__value_.__l.__size_) {
            sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
          }
          if ((v47 & 1) == 0)
          {
            uint64_t v48 = __cxa_allocate_exception(0x10uLL);
            MEMORY[0x1E01C3B90](v48, "RawCameraException");
            __cxa_throw(v48, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
          }
        }
        return;
      case 0xC62Du:
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(&v235, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          long long v235 = *(_OWORD *)a2;
          uint64_t v236 = *(void *)(a2 + 16);
        }
        sub_1DDA2A530(a1 + 512, (void **)&v235);
        if ((SHIBYTE(v236) & 0x80000000) == 0) {
          return;
        }
        unsigned __int16 v12 = (void *)v235;
        goto LABEL_657;
      case 0xC632u:
        if (*(char *)(a2 + 23) < 0)
        {
          sub_1DDA2639C(v243, *(void **)a2, *(void *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)uint64_t v243 = *(_OWORD *)a2;
          uint64_t v244 = *(void *)(a2 + 16);
        }
        uint64_t v125 = sub_1DDA2A530(a1 + 512, v243);
        if ((void **)(a1 + 520) != v125 && !*((_DWORD *)v125 + 14) && a3[1] == 5)
        {
          int v126 = *((_DWORD *)a3 + 1);
          if (SHIBYTE(v244) < 0) {
            operator delete(v243[0]);
          }
          if (v126 == 1)
          {
            buf.__r_.__value_.__r.__words[0] = 0;
            sub_1DDA27D28(a1, &__str);
            int v128 = sub_1DDA3E640((uint64_t)a3, (double *)&buf, (uint64_t *)&__str, v127);
            if (__str.__r_.__value_.__l.__size_) {
              sub_1DDA18310((std::__shared_weak_count *)__str.__r_.__value_.__l.__size_);
            }
            if (v128)
            {
              uint64_t v129 = buf.__r_.__value_.__r.__words[0];
              __str.__r_.__value_.__r.__words[0] = a2;
              sub_1DDA4BE58((uint64_t **)(a1 + 1528), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str)[7] = v129;
            }
          }
          return;
        }
        if ((SHIBYTE(v244) & 0x80000000) == 0) {
          return;
        }
        unsigned __int16 v12 = v243[0];
        goto LABEL_657;
      case 0xC65Au:
        if (a3[1] != 3
          || *((_DWORD *)a3 + 1) != 1
          || !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))
          && !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1208)))
        {
          return;
        }
        __int16 data = sub_1DDA44F28((uint64_t)a3);
        __str.__r_.__value_.__r.__words[0] = a2;
        int v11 = sub_1DDA4BC98((uint64_t **)(a1 + 1816), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
        goto LABEL_378;
      case 0xC65Bu:
        if (a3[1] != 3
          || *((_DWORD *)a3 + 1) != 1
          || !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1184))
          && !sub_1DDA97024((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 1208)))
        {
          return;
        }
        __int16 data = sub_1DDA44F28((uint64_t)a3);
        __str.__r_.__value_.__r.__words[0] = a2;
        int v11 = sub_1DDA4BC98((uint64_t **)(a1 + 1840), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)&__str);
        goto LABEL_378;
      default:
        goto LABEL_323;
    }
    goto LABEL_656;
  }
  if (v6 == 277)
  {
    if (*(char *)(a2 + 23) < 0)
    {
      sub_1DDA2639C(&v265, *(void **)a2, *(void *)(a2 + 8));
    }
    else
    {
      long long v265 = *(_OWORD *)a2;
      uint64_t v266 = *(void *)(a2 + 16);
    }
    uint64_t v154 = sub_1DDA2A530(a1 + 512, (void **)&v265);
    BOOL v155 = (void **)(a1 + 520) == v154 || *((_DWORD *)v154 + 14) != 0;
    if (SHIBYTE(v266) < 0) {
      operator delete((void *)v265);
    }
    char v172 = a3[1] != 3 || v155;
    if ((v172 & 1) == 0 && *((_DWORD *)a3 + 1) == 1) {
      *(_WORD *)(a1 + 1236) = sub_1DDA44F28((uint64_t)a3);
    }
    return;
  }
  if (v6 == 339)
  {
    if (*(char *)(a2 + 23) < 0)
    {
      sub_1DDA2639C(v263, *(void **)a2, *(void *)(a2 + 8));
    }
    else
    {
      *(_OWORD *)uint64_t v263 = *(_OWORD *)a2;
      uint64_t v264 = *(void *)(a2 + 16);
    }
    uint64_t v156 = sub_1DDA2A530(a1 + 512, v263);
    BOOL v157 = (void **)(a1 + 520) != v156 && *((_DWORD *)v156 + 14) == 0;
    if (SHIBYTE(v264) < 0) {
      operator delete(v263[0]);
    }
    if (a3[1] != 3 || !v157) {
      return;
    }
    memset(&__str, 0, sizeof(__str));
    BOOL v174 = sub_1DDA45C20(a1, (uint64_t)a3, &__str.__r_.__value_.__l.__data_);
    unsigned __int16 v12 = (void *)__str.__r_.__value_.__r.__words[0];
    if (__str.__r_.__value_.__r.__words[0] == __str.__r_.__value_.__l.__size_) {
      BOOL v174 = 0;
    }
    if (v174)
    {
      *(_WORD *)(a1 + 1240) = *(_WORD *)__str.__r_.__value_.__l.__data_;
LABEL_656:
      __str.__r_.__value_.__l.__size_ = (std::string::size_type)v12;
      goto LABEL_657;
    }
LABEL_655:
    if (!v12) {
      return;
    }
    goto LABEL_656;
  }
  if (v6 != 700) {
    goto LABEL_323;
  }
  if (*((_DWORD *)a3 + 1) && a3[1] == 1)
  {
    sub_1DDA27D28(a1, &buf);
    LODWORD(v269.f64[0]) = sub_1DDA3CE7C((uint64_t)a3);
    sub_1DDA1B4D8((int *)__p, (int *)&v269);
    sub_1DDA1A94C((uint64_t *)&__str, (uint64_t *)&buf, (uint64_t)__p, 0);
    if (buf.__r_.__value_.__l.__size_) {
      sub_1DDA18310((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
    }
    unsigned int v15 = sub_1DDA41E28((uint64_t)a3);
    sub_1DDA1AB9C(&buf, v15);
    sub_1DDA27D28(a1, __p);
    sub_1DDA19DD0((uint64_t)__p[0], (uint64_t)buf.__r_.__value_.__l.__data_, buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0]);
    if (__p[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__p[1]);
    }
    __p[0] = (void *)a2;
    double v16 = (std::string *)(sub_1DDA4B960((uint64_t **)(a1 + 2432), (void **)a2, (uint64_t)&unk_1DDBFB044, (long long **)__p)
                        + 7);
    if (v16 != &buf) {
      sub_1DDA49578(v16, buf.__r_.__value_.__l.__data_, (char *)buf.__r_.__value_.__l.__size_, buf.__r_.__value_.__l.__size_ - buf.__r_.__value_.__r.__words[0]);
    }
    if (buf.__r_.__value_.__r.__words[0])
    {
      buf.__r_.__value_.__l.__size_ = buf.__r_.__value_.__r.__words[0];
      operator delete(buf.__r_.__value_.__l.__data_);
    }
    goto LABEL_668;
  }
}

void sub_1DDA9697C(_Unwind_Exception *a1)
{
  int v3 = *(void **)(v1 - 208);
  if (v3)
  {
    *(void *)(v1 - 200) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(a1);
}

BOOL sub_1DDA97024(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) == 0;
  }
  if (!a1[23]) {
    return 1;
  }
  uint64_t v6 = v2 - 1;
  do
  {
    int v8 = *a1++;
    int v7 = v8;
    int v10 = *a2++;
    int v9 = v10;
    BOOL v12 = v6-- != 0;
    BOOL v13 = v7 == v9;
    BOOL v14 = v7 == v9;
  }
  while (v13 && v12);
  return v14;
}

uint64_t *sub_1DDA970C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = (uint64_t *)sub_1DDA41E28(a2);
  unsigned int v32 = result;
  if (result < 5) {
    return result;
  }
  sub_1DDA27D28(a1, &v30);
  unsigned int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v30 + 16))(v30);
  if (v31) {
    sub_1DDA18310(v31);
  }
  if (sub_1DDA3CE7C(a2) <= 8)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    goto LABEL_47;
  }
  LODWORD(v28) = sub_1DDA3CE7C(a2);
  if (*sub_1DDA47EF8(&v28, &v32) >= v7)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
LABEL_47:
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  sub_1DDA27D28(a1, &v28);
  LODWORD(v27) = sub_1DDA3CE7C(a2);
  sub_1DDA1B4D8((int *)&v23, (int *)&v27);
  sub_1DDA1A94C(&v30, (uint64_t *)&v28, (uint64_t)&v23, 0);
  if (v29) {
    sub_1DDA18310(v29);
  }
  sub_1DDA1AB9C(&v28, v32);
  if ((char *)v29 - (char *)v28 != v32)
  {
    uint64_t v20 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](v20, "RawCameraException");
    __cxa_throw(v20, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  sub_1DDA27D28(a1, &v23);
  unsigned int v8 = (*(uint64_t (**)(uint64_t, std::__shared_weak_count *, int64_t))(*(void *)v23 + 32))(v23, v28, (char *)v29 - (char *)v28);
  int v9 = v28;
  int v10 = (char *)((char *)v29 - (char *)v28);
  int v11 = (char *)v8;
  if (v24)
  {
    sub_1DDA18310(v24);
    int v9 = v28;
  }
  if (v10 == v11)
  {
    uint64_t v23 = (char *)v29 - (char *)v9;
    sub_1DDA18500(&v22, (unint64_t *)&v23);
    sub_1DDA199C4((uint64_t)v9, (uint64_t)&v22, 0, &v27);
    sub_1DDA19C9C(v27, 2);
    for (int i = sub_1DDA19EC8(v27); i; --i)
    {
      int v13 = sub_1DDA19EC8(v27);
      unsigned int v14 = sub_1DDA19EC8(v27);
      unsigned int v26 = 0;
      unsigned int v15 = sub_1DDA19EC8(v27);
      int v25 = 0;
      unsigned int v26 = v15;
      int v25 = sub_1DDA19EC8(v27);
      if (v14 <= 0x1070000)
      {
        sub_1DDA49310(&v23, (uint64_t *)&v27);
        long long v22 = 0uLL;
        switch(v13)
        {
          case 1:
            sub_1DDA9F3B8(&v26, &v21);
            goto LABEL_29;
          case 2:
            sub_1DDA9F518(&v26, &v21);
            goto LABEL_29;
          case 3:
            sub_1DDA9F678(&v26, &v21);
            goto LABEL_29;
          case 4:
            sub_1DDA9F7D8(&v26, &v21);
            goto LABEL_29;
          case 5:
            sub_1DDA9F938(&v26, &v21);
            goto LABEL_29;
          case 6:
            sub_1DDA9FA98(&v26, &v21);
            goto LABEL_29;
          case 7:
            sub_1DDA9FBF8(&v26, &v21);
            goto LABEL_29;
          case 8:
            sub_1DDA9FD58(&v26, &v21);
            goto LABEL_29;
          case 9:
            sub_1DDA9FEB8(&v26, &v21);
            goto LABEL_29;
          case 10:
            sub_1DDAA0018(&v26, &v21);
            goto LABEL_29;
          case 11:
            sub_1DDAA0178(&v26, &v21);
            goto LABEL_29;
          case 12:
            sub_1DDAA02D8(&v26, &v21);
            goto LABEL_29;
          case 13:
            sub_1DDAA0438(&v26, &v21);
            goto LABEL_29;
          case 14:
            sub_1DDAA0598(&v26, &v21);
LABEL_29:
            long long v16 = v21;
            long long v21 = 0uLL;
            int v17 = (std::__shared_weak_count *)*((void *)&v22 + 1);
            long long v22 = v16;
            if (v17)
            {
              sub_1DDA18310(v17);
              if (*((void *)&v21 + 1)) {
                sub_1DDA18310(*((std::__shared_weak_count **)&v21 + 1));
              }
            }
            if ((void)v22) {
              sub_1DDA97738(a3, &v22);
            }
            break;
          default:
            break;
        }
        if (*((void *)&v22 + 1)) {
          sub_1DDA18310(*((std::__shared_weak_count **)&v22 + 1));
        }
        sub_1DDA1AA18(&v23);
      }
      uint64_t v18 = v27;
      sub_1DDA18410((int *)&v23, &v25);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)v18 + 40))(v18, &v23, 1);
    }
    if (*((void *)&v27 + 1)) {
      sub_1DDA18310(*((std::__shared_weak_count **)&v27 + 1));
    }
    int v9 = v28;
  }
  if (v9)
  {
    uint64_t v29 = v9;
    operator delete(v9);
  }
  return sub_1DDA1AA18(&v30);
}

void sub_1DDA975C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, std::__shared_weak_count *a19, void *__p,uint64_t a21)
{
  if (a12) {
    sub_1DDA18310(a12);
  }
  sub_1DDA1AA18(&a14);
  if (a19) {
    sub_1DDA18310(a19);
  }
  if (__p)
  {
    a21 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_1DDA1AA18((uint64_t *)(v22 - 80));
  *(void *)(v22 - 80) = v21;
  sub_1DDA18270((void ***)(v22 - 80));
  _Unwind_Resume(a1);
}

void **sub_1DDA97738(uint64_t *a1, long long *a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (void **)(a1 + 2);
  unint64_t v5 = v6;
  unsigned int v7 = *(result - 1);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v10 = ((uint64_t)v7 - *a1) >> 4;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 60) {
      sub_1DDA17F78();
    }
    uint64_t v12 = v5 - *a1;
    if (v12 >> 3 > v11) {
      unint64_t v11 = v12 >> 3;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    v18[4] = result;
    unsigned int v14 = (char *)sub_1DDA19838((uint64_t)result, v13);
    unsigned int v15 = &v14[16 * v10];
    v18[0] = v14;
    v18[1] = v15;
    uint64_t v18[3] = &v14[16 * v16];
    long long v17 = *a2;
    *(_OWORD *)unsigned int v15 = *a2;
    if (*((void *)&v17 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v17 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    double v18[2] = v15 + 16;
    sub_1DDA9DE98(a1, v18);
    int v9 = (void *)a1[1];
    uint64_t result = sub_1DDA49898(v18);
  }
  else
  {
    *unsigned int v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    v7[1] = v8;
    if (v8) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
    }
    int v9 = v7 + 2;
    a1[1] = (uint64_t)(v7 + 2);
  }
  a1[1] = (uint64_t)v9;
  return result;
}

void sub_1DDA97840(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1DDA49898((void **)va);
  _Unwind_Resume(a1);
}

void sub_1DDA97854(double *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a2[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a2[23];
  }
  else {
    uint64_t v3 = *((void *)a2 + 1);
  }
  uint64_t v4 = *((unsigned __int8 *)a1 + 1207);
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a1 + 149);
  }
  if (v3 != v4) {
    return;
  }
  if (v5 >= 0) {
    unsigned int v7 = (unsigned __int8 *)(a1 + 148);
  }
  else {
    unsigned int v7 = (unsigned __int8 *)*((void *)a1 + 148);
  }
  if ((v2 & 0x80) != 0)
  {
    if (memcmp(*(const void **)a2, v7, *((void *)a2 + 1))) {
      return;
    }
LABEL_16:
    (*(void (**)(void **__return_ptr, double *))(*(void *)a1 + 368))(&v24, a1);
    if (v25 == v24)
    {
      int v9 = *((unsigned __int16 *)a1 + 617);
      if (v25) {
        operator delete(v25);
      }
      if (v9 != 3) {
        return;
      }
      sub_1DDAD849C(3u, (uint64_t)&v24);
      sub_1DDAD849C(3u, (uint64_t)&v21);
      (*(void (**)(uint64_t *__return_ptr, double *))(*(void *)a1 + 336))(&v18, a1);
      (*(void (**)(uint64_t *__return_ptr, double *))(*(void *)a1 + 344))(&v15, a1);
      sub_1DDA97B10((uint64_t)a1, &v13);
      sub_1DDA97BE4((uint64_t)a1, &v11);
      sub_1DDA97CB8(v10, (unsigned int *)&v24, &v18, &v13, &v21, &v15, &v11, a1 + 200, (uint64_t)(a1 + 161));
      if (*((void *)&v11 + 1))
      {
        uint64_t v12 = *((void *)&v11 + 1);
        operator delete(*((void **)&v11 + 1));
      }
      if (*((void *)&v13 + 1))
      {
        uint64_t v14 = *((void *)&v13 + 1);
        operator delete(*((void **)&v13 + 1));
      }
      if (v16)
      {
        long long v17 = v16;
        operator delete(v16);
      }
      if (v19)
      {
        uint64_t v20 = v19;
        operator delete(v19);
      }
      if (v22)
      {
        uint64_t v23 = v22;
        operator delete(v22);
      }
      uint64_t v8 = v25;
      if (!v25) {
        return;
      }
      unsigned int v26 = v25;
    }
    else
    {
      if (!v24) {
        return;
      }
      int v25 = v24;
      uint64_t v8 = v24;
    }
    operator delete(v8);
    return;
  }
  if (!a2[23]) {
    goto LABEL_16;
  }
  while (*a2 == *v7)
  {
    ++a2;
    ++v7;
    if (!--v2) {
      goto LABEL_16;
    }
  }
}

void sub_1DDA97A7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25)
{
  if (__p) {
    operator delete(__p);
  }
  if (a16) {
    operator delete(a16);
  }
  if (a20) {
    operator delete(a20);
  }
  if (a24) {
    operator delete(a24);
  }
  long long v27 = *(void **)(v25 - 72);
  if (v27)
  {
    *(void *)(v25 - 64) = v27;
    operator delete(v27);
  }
  uint64_t v28 = *(void **)(v25 - 40);
  if (v28)
  {
    *(void *)(v25 - 32) = v28;
    operator delete(v28);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA97B10@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  if (*(_WORD *)(a1 + 1234))
  {
    uint64_t v4 = a1 + 1624;
    sub_1DDA9BA0C(a1, (uint64_t)__p);
    int v5 = sub_1DDA2A530(v4, __p);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
    if ((void **)(a1 + 1632) == v5) {
      return sub_1DDAD80DC(a2);
    }
    else {
      sub_1DDAD80E8(a2, (uint64_t)(v5 + 7));
    }
  }
  else
  {
    sub_1DDAD849C(3u, (uint64_t)a2);
  }
  return result;
}

void sub_1DDA97BC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA97BE4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  if (*(_WORD *)(a1 + 1234))
  {
    uint64_t v4 = a1 + 1648;
    sub_1DDA9BA0C(a1, (uint64_t)__p);
    int v5 = sub_1DDA2A530(v4, __p);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
    if ((void **)(a1 + 1656) == v5) {
      return sub_1DDAD80DC(a2);
    }
    else {
      sub_1DDAD80E8(a2, (uint64_t)(v5 + 7));
    }
  }
  else
  {
    sub_1DDAD849C(3u, (uint64_t)a2);
  }
  return result;
}

void sub_1DDA97C9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA97CB8(uint64_t a1, unsigned int *a2, _DWORD *a3, _DWORD *a4, unsigned int *a5, _DWORD *a6, _DWORD *a7, double *a8, uint64_t a9)
{
  sub_1DDAD80DC(&v96);
  sub_1DDAD80DC(&v94);
  sub_1DDAD80DC(&v92);
  sub_1DDAD8BC8(a2, a3, (uint64_t)&v89);
  sub_1DDAD88E8(&v96, (uint64_t)&v89);
  if (__p)
  {
    std::string::size_type v91 = __p;
    operator delete(__p);
  }
  sub_1DDAD8BC8((unsigned int *)&v96, a4, (uint64_t)&v89);
  sub_1DDAD88E8(&v94, (uint64_t)&v89);
  if (__p)
  {
    std::string::size_type v91 = __p;
    operator delete(__p);
  }
  if (*a7 && a7[1])
  {
    sub_1DDAD8BC8(a5, a6, (uint64_t)&v89);
    sub_1DDAD88E8(&v96, (uint64_t)&v89);
    if (__p)
    {
      std::string::size_type v91 = __p;
      operator delete(__p);
    }
    sub_1DDAD8BC8((unsigned int *)&v96, a7, (uint64_t)&v89);
    sub_1DDAD88E8(&v92, (uint64_t)&v89);
    if (__p)
    {
      std::string::size_type v91 = __p;
      operator delete(__p);
    }
    uint64_t v89 = sub_1DDAD8560((uint64_t)&v94, 0);
    std::string __p = v16;
    double v17 = *(double *)sub_1DDAD85FC((uint64_t)&v89, 0);
    uint64_t v87 = sub_1DDAD8560((uint64_t)&v92, 0);
    uint64_t v88 = v18;
    double v19 = *(double *)sub_1DDAD85FC((uint64_t)&v87, 0);
    uint64_t v85 = sub_1DDAD8560((uint64_t)&v96, 0);
    uint64_t v86 = v20;
    *(double *)sub_1DDAD85FC((uint64_t)&v85, 0) = v19 * 1.4 + v17 * -0.4;
    uint64_t v89 = sub_1DDAD8560((uint64_t)&v94, 0);
    std::string __p = v21;
    double v22 = *(double *)sub_1DDAD85FC((uint64_t)&v89, 1u);
    uint64_t v87 = sub_1DDAD8560((uint64_t)&v92, 0);
    uint64_t v88 = v23;
    double v24 = *(double *)sub_1DDAD85FC((uint64_t)&v87, 1u);
    uint64_t v85 = sub_1DDAD8560((uint64_t)&v96, 0);
    uint64_t v86 = v25;
    *(double *)sub_1DDAD85FC((uint64_t)&v85, 1u) = v24 * 1.4 + v22 * -0.4;
    uint64_t v89 = sub_1DDAD8560((uint64_t)&v94, 0);
    std::string __p = v26;
    double v27 = *(double *)sub_1DDAD85FC((uint64_t)&v89, 2u);
    uint64_t v87 = sub_1DDAD8560((uint64_t)&v92, 0);
    uint64_t v88 = v28;
    double v29 = *(double *)sub_1DDAD85FC((uint64_t)&v87, 2u);
    uint64_t v85 = sub_1DDAD8560((uint64_t)&v96, 0);
    uint64_t v86 = v30;
    *(double *)sub_1DDAD85FC((uint64_t)&v85, 2u) = v29 * 1.4 + v27 * -0.4;
    uint64_t v89 = sub_1DDAD8560((uint64_t)&v94, 1u);
    std::string __p = v31;
    double v32 = *(double *)sub_1DDAD85FC((uint64_t)&v89, 0);
    uint64_t v87 = sub_1DDAD8560((uint64_t)&v92, 1u);
    uint64_t v88 = v33;
    double v34 = *(double *)sub_1DDAD85FC((uint64_t)&v87, 0);
    uint64_t v85 = sub_1DDAD8560((uint64_t)&v96, 1u);
    uint64_t v86 = v35;
    *(double *)sub_1DDAD85FC((uint64_t)&v85, 0) = v34 * 1.4 + v32 * -0.4;
    uint64_t v89 = sub_1DDAD8560((uint64_t)&v94, 1u);
    std::string __p = v36;
    double v37 = *(double *)sub_1DDAD85FC((uint64_t)&v89, 1u);
    uint64_t v87 = sub_1DDAD8560((uint64_t)&v92, 1u);
    uint64_t v88 = v38;
    double v39 = *(double *)sub_1DDAD85FC((uint64_t)&v87, 1u);
    uint64_t v85 = sub_1DDAD8560((uint64_t)&v96, 1u);
    uint64_t v86 = v40;
    *(double *)sub_1DDAD85FC((uint64_t)&v85, 1u) = v39 * 1.4 + v37 * -0.4;
    uint64_t v89 = sub_1DDAD8560((uint64_t)&v94, 1u);
    std::string __p = v41;
    double v42 = *(double *)sub_1DDAD85FC((uint64_t)&v89, 2u);
    uint64_t v87 = sub_1DDAD8560((uint64_t)&v92, 1u);
    uint64_t v88 = v43;
    double v44 = *(double *)sub_1DDAD85FC((uint64_t)&v87, 2u);
    uint64_t v85 = sub_1DDAD8560((uint64_t)&v96, 1u);
    uint64_t v86 = v45;
    *(double *)sub_1DDAD85FC((uint64_t)&v85, 2u) = v44 * 1.4 + v42 * -0.4;
    uint64_t v89 = sub_1DDAD8560((uint64_t)&v94, 2u);
    std::string __p = v46;
    double v47 = *(double *)sub_1DDAD85FC((uint64_t)&v89, 0);
    uint64_t v87 = sub_1DDAD8560((uint64_t)&v92, 2u);
    uint64_t v88 = v48;
    double v49 = *(double *)sub_1DDAD85FC((uint64_t)&v87, 0);
    uint64_t v85 = sub_1DDAD8560((uint64_t)&v96, 2u);
    uint64_t v86 = v50;
    *(double *)sub_1DDAD85FC((uint64_t)&v85, 0) = v49 * 1.4 + v47 * -0.4;
    uint64_t v89 = sub_1DDAD8560((uint64_t)&v94, 2u);
    std::string __p = v51;
    double v52 = *(double *)sub_1DDAD85FC((uint64_t)&v89, 1u);
    uint64_t v87 = sub_1DDAD8560((uint64_t)&v92, 2u);
    uint64_t v88 = v53;
    double v54 = *(double *)sub_1DDAD85FC((uint64_t)&v87, 1u);
    uint64_t v85 = sub_1DDAD8560((uint64_t)&v96, 2u);
    uint64_t v86 = v55;
    *(double *)sub_1DDAD85FC((uint64_t)&v85, 1u) = v54 * 1.4 + v52 * -0.4;
    uint64_t v89 = sub_1DDAD8560((uint64_t)&v94, 2u);
    std::string __p = v56;
    double v57 = *(double *)sub_1DDAD85FC((uint64_t)&v89, 2u);
    uint64_t v87 = sub_1DDAD8560((uint64_t)&v92, 2u);
    uint64_t v88 = v58;
    double v59 = *(double *)sub_1DDAD85FC((uint64_t)&v87, 2u);
    uint64_t v85 = sub_1DDAD8560((uint64_t)&v96, 2u);
    uint64_t v86 = v60;
    *(double *)sub_1DDAD85FC((uint64_t)&v85, 2u) = v59 * 1.4 + v57 * -0.4;
  }
  double v61 = *a8;
  if (*a8 <= 0.0 || (double v62 = a8[1], v62 <= 0.0))
  {
    uint64_t v83 = 0;
  }
  else
  {
    uint64_t v89 = 0x3FF0000000000000;
    sub_1DDA7CB9C(a9, 4uLL, &v89);
    uint64_t v89 = sub_1DDAD8560((uint64_t)&v96, 0);
    std::string __p = v63;
    double v64 = *(double *)sub_1DDAD85FC((uint64_t)&v89, 0);
    uint64_t v87 = sub_1DDAD8560((uint64_t)&v96, 0);
    uint64_t v88 = v65;
    double v66 = *(double *)sub_1DDAD85FC((uint64_t)&v87, 1u);
    uint64_t v85 = sub_1DDAD8560((uint64_t)&v96, 0);
    uint64_t v86 = v67;
    double v68 = v61 * 100.0 / v62;
    double v69 = (1.0 - v61 - v62) * 100.0 / v62;
    **(double **)a9 = v66 * 100.0 + v64 * v68 + *(double *)sub_1DDAD85FC((uint64_t)&v85, 2u) * v69;
    uint64_t v89 = sub_1DDAD8560((uint64_t)&v96, 1u);
    std::string __p = v70;
    double v71 = *(double *)sub_1DDAD85FC((uint64_t)&v89, 0);
    uint64_t v87 = sub_1DDAD8560((uint64_t)&v96, 1u);
    uint64_t v88 = v72;
    double v73 = *(double *)sub_1DDAD85FC((uint64_t)&v87, 1u);
    uint64_t v85 = sub_1DDAD8560((uint64_t)&v96, 1u);
    uint64_t v86 = v74;
    *(double *)(*(void *)a9 + 8) = v73 * 100.0 + v71 * v68 + *(double *)sub_1DDAD85FC((uint64_t)&v85, 2u) * v69;
    uint64_t v89 = sub_1DDAD8560((uint64_t)&v96, 2u);
    std::string __p = v75;
    double v76 = *(double *)sub_1DDAD85FC((uint64_t)&v89, 0);
    uint64_t v87 = sub_1DDAD8560((uint64_t)&v96, 2u);
    uint64_t v88 = v77;
    double v78 = *(double *)sub_1DDAD85FC((uint64_t)&v87, 1u);
    uint64_t v85 = sub_1DDAD8560((uint64_t)&v96, 2u);
    uint64_t v86 = v79;
    double v80 = v78 * 100.0 + v76 * v68 + *(double *)sub_1DDAD85FC((uint64_t)&v85, 2u) * v69;
    uint64_t v81 = *(void *)a9;
    double v82 = *(double *)(*(void *)a9 + 8);
    *(double *)uint64_t v81 = v82 / **(double **)a9;
    *(double *)(v81 + 16) = v82 / v80;
    *(void *)(v81 + 8) = 0x3FF0000000000000;
    uint64_t v83 = 1;
  }
  if (*((void *)&v92 + 1))
  {
    uint64_t v93 = *((void *)&v92 + 1);
    operator delete(*((void **)&v92 + 1));
  }
  if (*((void *)&v94 + 1))
  {
    uint64_t v95 = *((void *)&v94 + 1);
    operator delete(*((void **)&v94 + 1));
  }
  if (*((void *)&v96 + 1))
  {
    uint64_t v97 = *((void *)&v96 + 1);
    operator delete(*((void **)&v96 + 1));
  }
  return v83;
}

void sub_1DDA983D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27)
{
  if (__p) {
    operator delete(__p);
  }
  if (a22) {
    operator delete(a22);
  }
  if (a26) {
    operator delete(a26);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA984D8()
{
}

void sub_1DDA984E0()
{
}

uint64_t sub_1DDA984E8(uint64_t a1)
{
  sub_1DDA48424(a1, 0, __p);
  uint64_t v2 = sub_1DDA481F0(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA98540(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA9855C(uint64_t a1)
{
  sub_1DDA48424(a1, 0, __p);
  uint64_t v2 = sub_1DDA48264(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA985B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1DDA985D0(uint64_t a1)
{
  sub_1DDA48424(a1, 0, __p);
  unint64_t v2 = sub_1DDA48394(a1, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA98628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1DDA98644(uint64_t a1)
{
  unint64_t v2 = sub_1DDA27F78();
  sub_1DDA48424(a1, 0, v11);
  uint64_t v3 = sub_1DDA2A530(a1 + 872, v11);
  if ((void **)(a1 + 880) == v3)
  {
    BOOL v6 = 0;
    unint64_t v7 = 0;
    unsigned int v4 = 0;
  }
  else
  {
    unsigned int v4 = *((_DWORD *)v3 + 14);
    sub_1DDA48424(a1, 0, __p);
    char v5 = sub_1DDA2A530(a1 + 896, __p);
    BOOL v6 = a1 + 904 != (void)v5;
    if ((void **)(a1 + 904) == v5) {
      unint64_t v7 = 0;
    }
    else {
      unint64_t v7 = *((unsigned int *)v5 + 14);
    }
    if (v10 < 0) {
      operator delete(__p[0]);
    }
  }
  if (v12 < 0)
  {
    operator delete(v11[0]);
    if (v6) {
      return v4 | (v7 << 32);
    }
  }
  else if (v6)
  {
    return v4 | (v7 << 32);
  }
  unint64_t v7 = HIDWORD(v2);
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 536))(a1) == 1) {
    unsigned int v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 440))(a1);
  }
  else {
    unsigned int v4 = v2;
  }
  return v4 | (v7 << 32);
}

void sub_1DDA987A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1DDA987E0(uint64_t a1, unsigned int *a2)
{
  unsigned int v3 = *a2;
  uint64_t v2 = a2[1];
  if ((int)*a2 < 1 || (int)v2 <= 0)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    goto LABEL_22;
  }
  uint64_t v6 = a1 + 872;
  sub_1DDA48424(a1, 0, v16);
  unint64_t v7 = sub_1DDA2A530(v6, v16);
  if ((void **)(a1 + 880) == v7)
  {
    BOOL v10 = 0;
    unsigned int v11 = 0;
    unsigned int v8 = 0;
  }
  else
  {
    unsigned int v8 = *((_DWORD *)v7 + 14);
    sub_1DDA48424(a1, 0, __p);
    int v9 = sub_1DDA2A530(a1 + 896, __p);
    BOOL v10 = a1 + 904 != (void)v9;
    if ((void **)(a1 + 904) == v9) {
      unsigned int v11 = 0;
    }
    else {
      unsigned int v11 = *((_DWORD *)v9 + 14);
    }
    if (v15 < 0) {
      operator delete(__p[0]);
    }
  }
  if ((v17 & 0x80000000) == 0)
  {
    if (!v10) {
      return v3 | (unint64_t)(v2 << 32);
    }
    goto LABEL_16;
  }
  operator delete(v16[0]);
  if (v10)
  {
LABEL_16:
    if (v8 && v11)
    {
      sub_1DDA18218(v16, (v8 + v3 - 1) / v8 * v8, (v11 + v2 - 1) / v11 * v11);
      unsigned int v3 = v16[0];
      uint64_t v2 = HIDWORD(v16[0]);
      return v3 | (unint64_t)(v2 << 32);
    }
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
LABEL_22:
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return v3 | (unint64_t)(v2 << 32);
}

void sub_1DDA98958(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA989A4(uint64_t a1)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 440))(a1);
  sub_1DDA48424(a1, 0, __p);
  uint64_t v2 = sub_1DDA2A530(a1 + 1408, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  if ((void **)(a1 + 1416) == v2) {
    return 0;
  }
  else {
    return v2[7];
  }
}

void sub_1DDA98A54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA98A70(uint64_t a1)
{
  uint64_t v2 = sub_1DDA27EF0(a1);
  sub_1DDA48424(a1, 0, __p);
  unsigned int v3 = sub_1DDA2A530(a1 + 1336, __p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  if ((void **)(a1 + 1344) != v3) {
    uint64_t v2 = (uint64_t)v3[7];
  }
  sub_1DDA48424(a1, 0, __p);
  sub_1DDA2A530(a1 + 1360, __p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1DDA98B3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1DDA98B5C(uint64_t a1)
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 448))(a1);
  (*(void (**)(uint64_t))(*(void *)a1 + 440))(a1);
  sub_1DDA48424(a1, 0, __p);
  unsigned int v3 = sub_1DDA2A530(a1 + 1336, __p);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  if ((void **)(a1 + 1344) == v3)
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0;
  }
  else
  {
    int v4 = *((_DWORD *)v3 + 15);
    uint64_t v5 = (*((_DWORD *)v3 + 14) + v2);
    unint64_t v6 = (unint64_t)(v4 + HIDWORD(v2)) << 32;
  }
  sub_1DDA48424(a1, 0, __p);
  sub_1DDA2A530(a1 + 1360, __p);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return v6 | v5;
}

void sub_1DDA98CA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA98CC4(uint64_t a1)
{
  uint64_t v2 = a1 + 1408;
  sub_1DDA48424(a1, 0, __p);
  unsigned int v3 = sub_1DDA2A530(v2, __p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  return a1 + 1416 != (void)v3;
}

void sub_1DDA98D28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA98D44(uint64_t a1)
{
  uint64_t v2 = a1 + 1336;
  sub_1DDA48424(a1, 0, __p);
  unsigned int v3 = sub_1DDA2A530(v2, __p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  return a1 + 1344 != (void)v3;
}

void sub_1DDA98DA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA98DC4(uint64_t a1)
{
  uint64_t v2 = a1 + 1360;
  sub_1DDA48424(a1, 0, __p);
  unsigned int v3 = sub_1DDA2A530(v2, __p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  return a1 + 1368 != (void)v3;
}

void sub_1DDA98E28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA98E44(uint64_t a1)
{
  uint64_t v2 = a1 + 656;
  sub_1DDA48424(a1, 0, __p);
  unsigned int v3 = sub_1DDA2A530(v2, __p);
  if ((void **)(a1 + 664) == v3 || (int v4 = (unsigned int *)v3[7], v3[8] == v4))
  {
    uint64_t v5 = 0;
    char v6 = 0;
  }
  else
  {
    uint64_t v5 = *v4;
    char v6 = 1;
  }
  if (v9 < 0)
  {
    operator delete(__p[0]);
    if (v6) {
      return v5;
    }
    return sub_1DDA27FA8();
  }
  if ((v6 & 1) == 0) {
    return sub_1DDA27FA8();
  }
  return v5;
}

void sub_1DDA98EE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA98F04(uint64_t a1)
{
  uint64_t v2 = a1 + 680;
  sub_1DDA48424(a1, 0, __p);
  unsigned int v3 = sub_1DDA2A530(v2, __p);
  if ((void **)(a1 + 688) == v3) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = *((unsigned int *)v3 + 14);
  }
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1DDA98F74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA98F90(uint64_t a1)
{
  uint64_t v2 = a1 + 584;
  sub_1DDA48424(a1, 0, __p);
  unsigned int v3 = sub_1DDA2A530(v2, __p);
  uint64_t v4 = v3;
  if ((void **)(a1 + 592) == v3) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *((unsigned int *)v3 + 14);
  }
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  if ((void **)(a1 + 592) == v4) {
    return sub_1DDA27FB8();
  }
  return v5;
}

void sub_1DDA99020(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA9903C(void **a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, void **a4@<X8>)
{
  int v8 = (*((uint64_t (**)(void **))*a1 + 67))(a1);
  long long v88 = 0uLL;
  uint64_t v89 = 0;
  uint64_t v86 = 0;
  long long v87 = 0uLL;
  char v9 = sub_1DDA2A530((uint64_t)(a1 + 179), a1 + 148);
  BOOL v10 = v9;
  if (a1 + 180 == v9)
  {
    int v11 = 0;
    uint64_t v75 = 0;
    goto LABEL_33;
  }
  int v11 = *((_DWORD *)v9 + 14);
  sub_1DDA48424((uint64_t)a1, 0, v85);
  char v12 = sub_1DDA2A530((uint64_t)(a1 + 109), v85);
  if (a1 + 110 == v12)
  {
    BOOL v14 = 0;
    uint64_t v75 = 0;
  }
  else
  {
    HIDWORD(v75) = *((_DWORD *)v12 + 14);
    sub_1DDA48424((uint64_t)a1, 0, v83);
    long long v13 = sub_1DDA2A530((uint64_t)(a1 + 112), v83);
    if (a1 + 113 == v13)
    {
      BOOL v14 = 0;
      LODWORD(v75) = 0;
    }
    else
    {
      LODWORD(v75) = *((_DWORD *)v13 + 14);
      sub_1DDA48424((uint64_t)a1, 0, v81);
      if (sub_1DDA88414((uint64_t)(a1 + 115), v81, (char *)&v88))
      {
        sub_1DDA48424((uint64_t)a1, 0, &__p);
        BOOL v14 = sub_1DDA88414((uint64_t)(a1 + 118), &__p, (char *)&v86);
        if (v80 < 0) {
          operator delete(__p);
        }
      }
      else
      {
        BOOL v14 = 0;
      }
      if (v82 < 0) {
        operator delete(v81[0]);
      }
    }
    if (v84 < 0) {
      operator delete(v83[0]);
    }
  }
  if (SHIBYTE(v85[2]) < 0)
  {
    operator delete(v85[0]);
    if (v14) {
      goto LABEL_17;
    }
LABEL_19:
    LODWORD(v75) = *(_DWORD *)(a2 + 4);
    HIDWORD(v75) = *(_DWORD *)a2;
    LODWORD(v83[0]) = (*((uint64_t (**)(void **))*a1 + 53))(a1);
    sub_1DDA8F1C4(v85, 1uLL, v83);
    if ((void)v88)
    {
      *((void *)&v88 + 1) = v88;
      operator delete((void *)v88);
    }
    long long v88 = *(_OWORD *)v85;
    uint64_t v89 = v85[2];
    LODWORD(v83[0]) = (*((uint64_t (**)(void **))*a1 + 54))(a1);
    sub_1DDA8F1C4(v85, 1uLL, v83);
    if (v86)
    {
      *(void *)&long long v87 = v86;
      operator delete(v86);
    }
    char v15 = v85[0];
    uint64_t v86 = v85[0];
    long long v87 = *(_OWORD *)&v85[1];
    uint64_t v16 = v85[1];
    goto LABEL_24;
  }
  if (!v14) {
    goto LABEL_19;
  }
LABEL_17:
  char v15 = v86;
  uint64_t v16 = (unsigned char *)v87;
LABEL_24:
  if (*((void *)&v88 + 1) - (void)v88 != v16 - v15)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  (*((void (**)(void **__return_ptr, void **))*a1 + 48))(v85, a1);
  unsigned int v17 = (*(uint64_t (**)(void *))(*(void *)v85[0] + 16))(v85[0]);
  if (v85[1]) {
    sub_1DDA18310((std::__shared_weak_count *)v85[1]);
  }
  if (*((void *)&v88 + 1) != (void)v88)
  {
    uint64_t v18 = 0;
    unsigned int v19 = 1;
    do
    {
      unsigned int v20 = *(_DWORD *)(v88 + 4 * v18);
      if (v17 <= v20 || (unsigned int v21 = *((_DWORD *)v86 + v18), v17 <= v21) || v17 < v21 + v20)
      {
        double v73 = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E01C3B90](v73, "RawCameraException");
        __cxa_throw(v73, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      uint64_t v18 = v19;
    }
    while ((uint64_t)(*((void *)&v88 + 1) - v88) >> 2 > (unint64_t)v19++);
  }
LABEL_33:
  if (v8 <= 7)
  {
    if (v8 == 1)
    {
      (*((void (**)(void **__return_ptr, void **))*a1 + 48))(v85, a1);
      v81[0] = (void *)(*((uint64_t (**)(void **))*a1 + 53))(a1);
      LOBYTE(v90) = (*((uint64_t (**)(void **))*a1 + 9))(a1);
      sub_1DDAA06F8(v85, (unint64_t *)v81, (void *)a2, a3, (char *)&v90, v83);
      if (v85[1]) {
        sub_1DDA18310((std::__shared_weak_count *)v85[1]);
      }
      uint64_t v45 = v83[0];
      v85[0] = (void *)(*((uint64_t (**)(void **))*a1 + 54))(a1);
      sub_1DDA18500(v81, (unint64_t *)v85);
      (*(void (**)(void *, void **))(*(void *)v45 + 32))(v45, v81);
      double v46 = v83[0];
      uint64_t v47 = (*((uint64_t (**)(void **))*a1 + 13))(a1);
      sub_1DDAA72C4((uint64_t)v46, v47);
      uint64_t v48 = v83[0];
      unsigned __int16 v49 = (*((uint64_t (**)(void **))*a1 + 65))(a1);
      (*(void (**)(void *, void))(*(void *)v48 + 248))(v48, v49);
      uint64_t v50 = v83[0];
      unsigned __int16 v51 = (*((uint64_t (**)(void **))*a1 + 66))(a1);
      (*(void (**)(void *, void))(*(void *)v50 + 232))(v50, v51);
      sub_1DDA48424((uint64_t)a1, 0, v85);
      double v52 = sub_1DDA2A530((uint64_t)(a1 + 197), v85);
      if (SHIBYTE(v85[2]) < 0) {
        operator delete(v85[0]);
      }
      if (a1 + 198 != v52) {
        (*(void (**)(void *, void **))(*(void *)v83[0] + 208))(v83[0], v52 + 7);
      }
      (*(void (**)(void *, void, void, long long *, void **))(*(void *)v83[0] + 240))(v83[0], HIDWORD(v75), v75, &v88, &v86);
      (*(void (**)(void))(*(void *)v83[0] + 256))();
LABEL_73:
      long long v39 = *(_OWORD *)v83;
LABEL_81:
      *(_OWORD *)a4 = v39;
      goto LABEL_82;
    }
    if (v8 != 7)
    {
LABEL_62:
      *a4 = 0;
      a4[1] = 0;
      goto LABEL_82;
    }
    if (a1 + 180 == v10)
    {
      (*((void (**)(void **__return_ptr, void **))*a1 + 48))(&__p, a1);
      int v90 = (void **)(*((uint64_t (**)(void **))*a1 + 53))(a1);
      unint64_t v77 = sub_1DDA987E0((uint64_t)a1, (unsigned int *)a2);
      (*((void (**)(void **__return_ptr, void **))*a1 + 27))(v85, a1);
      (*((void (**)(void **__return_ptr, void **))*a1 + 28))(v83, a1);
      sub_1DDAA0DCC(&__p, (unint64_t *)&v90, &v77, a3, (uint64_t)v85, (uint64_t)v83, v81);
      if (v84 < 0) {
        operator delete(v83[0]);
      }
      if (SHIBYTE(v85[2]) < 0) {
        operator delete(v85[0]);
      }
      if (v79) {
        sub_1DDA18310(v79);
      }
      uint64_t v60 = v81[0];
      v85[0] = (void *)(*((uint64_t (**)(void **))*a1 + 54))(a1);
      sub_1DDA18500(v83, (unint64_t *)v85);
      (*(void (**)(void *, void **))(*(void *)v60 + 32))(v60, v83);
      double v61 = v81[0];
      uint64_t v62 = (*((uint64_t (**)(void **))*a1 + 13))(a1);
      sub_1DDAA72C4((uint64_t)v61, v62);
      long long v39 = *(_OWORD *)v81;
      goto LABEL_81;
    }
    double v32 = sub_1DDA2A530((uint64_t)(a1 + 182), a1 + 148);
    if (a1 + 183 == v32) {
      uint64_t v33 = v11 & 0xFFFF0000;
    }
    else {
      uint64_t v33 = *((unsigned int *)v32 + 14);
    }
    (*((void (**)(void **__return_ptr, void **))*a1 + 48))(v83, a1);
    int v90 = (void **)(*((uint64_t (**)(void **))*a1 + 53))(a1);
    unint64_t v77 = sub_1DDA987E0((uint64_t)a1, (unsigned int *)a2);
    v91[0] = (*((uint64_t (**)(void **))*a1 + 9))(a1);
    sub_1DDA9AC2C(a1, 8, (uint64_t *)v85);
    sub_1DDAA0AA4(v83, (unint64_t *)&v90, (void *)a2, &v77, a3, v91, (long long *)v85, v81);
    std::string __p = v85;
    sub_1DDA18270((void ***)&__p);
    if (v83[1]) {
      sub_1DDA18310((std::__shared_weak_count *)v83[1]);
    }
    unint64_t v63 = v81[0];
    v85[0] = (void *)(*((uint64_t (**)(void **))*a1 + 54))(a1);
    sub_1DDA18500(v83, (unint64_t *)v85);
    (*(void (**)(void *, void **))(*(void *)v63 + 32))(v63, v83);
    double v64 = v81[0];
    uint64_t v65 = (*((uint64_t (**)(void **))*a1 + 13))(a1);
    sub_1DDAA72C4((uint64_t)v64, v65);
    (*(void (**)(void *, uint64_t))(*(void *)v81[0] + 200))(v81[0], v33);
    (*(void (**)(void *, void, void, long long *, void **))(*(void *)v81[0] + 240))(v81[0], HIDWORD(v75), v75, &v88, &v86);
    double v66 = v81[0];
    unsigned __int16 v67 = (*((uint64_t (**)(void **))*a1 + 66))(a1);
    (*(void (**)(void *, void))(*(void *)v66 + 232))(v66, v67);
    if ((*((unsigned int (**)(void **))*a1 + 9))(a1))
    {
      double v68 = v81[0];
      unsigned __int16 v69 = (*((uint64_t (**)(void **))*a1 + 66))(a1);
      (*(void (**)(void *, void))(*(void *)v68 + 48))(v68, v69);
    }
    memset(v85, 0, sizeof(v85));
    sub_1DDA48424((uint64_t)a1, 0, v83);
    BOOL v70 = sub_1DDA45FB8((uint64_t)(a1 + 197), v83, (char *)v85);
    BOOL v71 = v70;
    if (v84 < 0)
    {
      operator delete(v83[0]);
      if (!v71) {
        goto LABEL_97;
      }
    }
    else if (!v70)
    {
LABEL_97:
      *(_OWORD *)a4 = *(_OWORD *)v81;
      v81[0] = 0;
      v81[1] = 0;
      uint64_t v72 = v85[0];
      if (!v85[0]) {
        goto LABEL_82;
      }
      goto LABEL_105;
    }
    (*(void (**)(void *, void **))(*(void *)v81[0] + 208))(v81[0], v85);
    goto LABEL_97;
  }
  if (v8 == 8)
  {
    LODWORD(v90) = 0;
    LODWORD(v77) = 0;
    sub_1DDA48424((uint64_t)a1, 0, v85);
    sub_1DDA3FE94((uint64_t)a1, v85, &v90);
    if (SHIBYTE(v85[2]) < 0) {
      operator delete(v85[0]);
    }
    sub_1DDA48424((uint64_t)a1, 0, v85);
    sub_1DDA3FF24((uint64_t)a1, v85, 0, &v77);
    if (SHIBYTE(v85[2]) < 0) {
      operator delete(v85[0]);
    }
    (*((void (**)(void **__return_ptr, void **))*a1 + 48))(v83, a1);
    v81[0] = (void *)(*((uint64_t (**)(void **))*a1 + 53))(a1);
    std::string __p = (void *)sub_1DDA987E0((uint64_t)a1, (unsigned int *)a2);
    v91[0] = (*((uint64_t (**)(void **))*a1 + 9))(a1);
    sub_1DDAA1164(v83, (unint64_t *)v81, (void *)a2, &__p, a3, (int *)&v90, (int *)&v77, v85, v91);
    if (v83[1]) {
      sub_1DDA18310((std::__shared_weak_count *)v83[1]);
    }
    double v34 = v85[0];
    v83[0] = (void *)(*((uint64_t (**)(void **))*a1 + 54))(a1);
    sub_1DDA18500(v81, (unint64_t *)v83);
    (*(void (**)(void *, void **))(*(void *)v34 + 32))(v34, v81);
    uint64_t v35 = v85[0];
    uint64_t v36 = (*((uint64_t (**)(void **))*a1 + 13))(a1);
    sub_1DDAA72C4((uint64_t)v35, v36);
    (*(void (**)(void *, void, void, long long *, void **))(*(void *)v85[0] + 240))(v85[0], HIDWORD(v75), v75, &v88, &v86);
    double v37 = v85[0];
    unsigned __int16 v38 = (*((uint64_t (**)(void **))*a1 + 66))(a1);
    (*(void (**)(void *, void))(*(void *)v37 + 64))(v37, v38);
    (*(void (**)(void *, uint64_t))(*(void *)v85[0] + 48))(v85[0], 3);
    long long v39 = *(_OWORD *)v85;
    goto LABEL_81;
  }
  if (v8 != 34892)
  {
    if (v8 == 52546)
    {
      if ((*((unsigned int (**)(void **))*a1 + 9))(a1))
      {
        (*((void (**)(void **__return_ptr, void **))*a1 + 48))(v83, a1);
        int v90 = (void **)(*((uint64_t (**)(void **))*a1 + 53))(a1);
        unint64_t v77 = sub_1DDA987E0((uint64_t)a1, (unsigned int *)a2);
        v91[0] = (*((uint64_t (**)(void **))*a1 + 9))(a1);
        sub_1DDA9AC2C(a1, 8, (uint64_t *)v85);
        sub_1DDAA177C(v83, (unint64_t *)&v90, (void *)a2, &v77, a3, v91, (long long *)v85, v81);
        std::string __p = v85;
        sub_1DDA18270((void ***)&__p);
        if (v83[1]) {
          sub_1DDA18310((std::__shared_weak_count *)v83[1]);
        }
        uint64_t v23 = v81[0];
        v85[0] = (void *)(*((uint64_t (**)(void **))*a1 + 54))(a1);
        sub_1DDA18500(v83, (unint64_t *)v85);
        (*(void (**)(void *, void **))(*(void *)v23 + 32))(v23, v83);
        double v24 = v81[0];
        uint64_t v25 = (*((uint64_t (**)(void **))*a1 + 13))(a1);
        sub_1DDAA72C4((uint64_t)v24, v25);
        (*(void (**)(void *, void, void, long long *, void **))(*(void *)v81[0] + 240))(v81[0], HIDWORD(v75), v75, &v88, &v86);
        unsigned int v26 = v81[0];
        unsigned __int16 v27 = (*((uint64_t (**)(void **))*a1 + 66))(a1);
        (*(void (**)(void *, void))(*(void *)v26 + 232))(v26, v27);
        uint64_t v28 = v81[0];
        unsigned __int16 v29 = (*((uint64_t (**)(void **))*a1 + 66))(a1);
        (*(void (**)(void *, void))(*(void *)v28 + 48))(v28, v29);
        (*(void (**)(void))(*(void *)v81[0] + 248))();
        memset(v85, 0, sizeof(v85));
        sub_1DDA48424((uint64_t)a1, 0, v83);
        BOOL v30 = sub_1DDA45FB8((uint64_t)(a1 + 197), v83, (char *)v85);
        BOOL v31 = v30;
        if (v84 < 0)
        {
          operator delete(v83[0]);
          if (!v31) {
            goto LABEL_101;
          }
        }
        else if (!v30)
        {
LABEL_101:
          if (sub_1DDA16440((uint64_t)v81[0]))
          {
            *(_OWORD *)a4 = *(_OWORD *)v81;
            a4 = v81;
          }
          else
          {
            fwrite("The JPEGXL Unpacker does not support the color profile in the encoded data", 0x4AuLL, 1uLL, (FILE *)*MEMORY[0x1E4F143C8]);
          }
          *a4 = 0;
          a4[1] = 0;
          uint64_t v72 = v85[0];
          if (!v85[0])
          {
LABEL_106:
            if (v81[1]) {
              sub_1DDA18310((std::__shared_weak_count *)v81[1]);
            }
            goto LABEL_82;
          }
LABEL_105:
          v85[1] = v72;
          operator delete(v72);
          goto LABEL_106;
        }
        (*(void (**)(void *, void **))(*(void *)v81[0] + 208))(v81[0], v85);
        goto LABEL_101;
      }
      (*((void (**)(void **__return_ptr, void **))*a1 + 48))(v81, a1);
      int v90 = (void **)(*((uint64_t (**)(void **))*a1 + 53))(a1);
      unint64_t v77 = sub_1DDA987E0((uint64_t)a1, (unsigned int *)a2);
      sub_1DDA9AC2C(a1, 8, (uint64_t *)v85);
      LODWORD(__p) = sub_1DDA9AD00((uint64_t)a1);
      LODWORD(v76) = sub_1DDA9AD8C((uint64_t)a1);
      sub_1DDAA1AE4(v81, (unint64_t *)&v90, (void *)a2, &v77, a3, (long long *)v85, (int *)&__p, v83, (int *)&v76);
      std::string __p = v85;
      sub_1DDA18270((void ***)&__p);
      if (v81[1]) {
        sub_1DDA18310((std::__shared_weak_count *)v81[1]);
      }
      uint64_t v53 = v83[0];
      v85[0] = (void *)(*((uint64_t (**)(void **))*a1 + 54))(a1);
      sub_1DDA18500(v81, (unint64_t *)v85);
      (*(void (**)(void *, void **))(*(void *)v53 + 32))(v53, v81);
      double v54 = v83[0];
      uint64_t v55 = (*((uint64_t (**)(void **))*a1 + 13))(a1);
      sub_1DDAA72C4((uint64_t)v54, v55);
      (*(void (**)(void *, void, void, long long *, void **))(*(void *)v83[0] + 240))(v83[0], HIDWORD(v75), v75, &v88, &v86);
      uint64_t v56 = v83[0];
      unsigned __int16 v57 = (*((uint64_t (**)(void **))*a1 + 66))(a1);
      (*(void (**)(void *, void))(*(void *)v56 + 232))(v56, v57);
      uint64_t v58 = v83[0];
      unsigned __int16 v59 = (*((uint64_t (**)(void **))*a1 + 66))(a1);
      (*(void (**)(void *, void))(*(void *)v58 + 48))(v58, v59);
      goto LABEL_73;
    }
    goto LABEL_62;
  }
  if (!(*((unsigned int (**)(void **))*a1 + 9))(a1)) {
    goto LABEL_62;
  }
  v83[0] = 0;
  sub_1DDA25B2C(v85, 4uLL, v83);
  sub_1DDA48424((uint64_t)a1, 0, v83);
  (*((void (**)(void **, void **, void **, void))*a1 + 31))(a1, v83, v85, 0);
  if (v84 < 0) {
    operator delete(v83[0]);
  }
  (*((void (**)(void **__return_ptr, void **))*a1 + 48))(&__p, a1);
  unint64_t v77 = (*((uint64_t (**)(void **))*a1 + 53))(a1);
  unint64_t v76 = sub_1DDA987E0((uint64_t)a1, (unsigned int *)a2);
  sub_1DDA9AC2C(a1, 8, (uint64_t *)v83);
  sub_1DDAA13A8(&__p, &v77, (void *)a2, &v76, a3, (long long *)v83, (uint64_t)v85, v81);
  int v90 = v83;
  sub_1DDA18270(&v90);
  if (v79) {
    sub_1DDA18310(v79);
  }
  uint64_t v40 = v81[0];
  v83[0] = (void *)(*((uint64_t (**)(void **))*a1 + 54))(a1);
  sub_1DDA18500(&__p, (unint64_t *)v83);
  (*(void (**)(void *, void **))(*(void *)v40 + 32))(v40, &__p);
  int v41 = v81[0];
  uint64_t v42 = (*((uint64_t (**)(void **))*a1 + 13))(a1);
  sub_1DDAA72C4((uint64_t)v41, v42);
  (*(void (**)(void *, void, void, long long *, void **))(*(void *)v81[0] + 240))(v81[0], HIDWORD(v75), v75, &v88, &v86);
  uint64_t v43 = v81[0];
  unsigned __int16 v44 = (*((uint64_t (**)(void **))*a1 + 66))(a1);
  (*(void (**)(void *, void))(*(void *)v43 + 64))(v43, v44);
  (*(void (**)(void *, uint64_t))(*(void *)v81[0] + 48))(v81[0], 3);
  *(_OWORD *)a4 = *(_OWORD *)v81;
  if (v85[0])
  {
    v85[1] = v85[0];
    operator delete(v85[0]);
  }
LABEL_82:
  if (v86)
  {
    *(void *)&long long v87 = v86;
    operator delete(v86);
  }
  if ((void)v88)
  {
    *((void *)&v88 + 1) = v88;
    operator delete((void *)v88);
  }
}

void sub_1DDA9A944(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,std::__shared_weak_count *a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41)
{
  if (__p) {
    operator delete(__p);
  }
  if (a21) {
    sub_1DDA18310(a21);
  }
  if (a40) {
    operator delete(a40);
  }
  uint64_t v43 = *(void **)(v41 - 144);
  if (v43)
  {
    *(void *)(v41 - 136) = v43;
    operator delete(v43);
  }
  _Unwind_Resume(exception_object);
}

void **sub_1DDA9AC2C@<X0>(void **result@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = result;
  uint64_t v6 = 0;
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  do
  {
    char v7 = &v4[3 * v6];
    int v8 = (long long *)v7[271];
    char v9 = (long long *)v7[272];
    while (v8 != v9)
    {
      double result = (void **)(*(uint64_t (**)(void))(**(void **)v8 + 16))();
      if (result == a2) {
        double result = sub_1DDA97738(a3, v8);
      }
      ++v8;
    }
    ++v6;
  }
  while (v6 != 3);
  return result;
}

void sub_1DDA9ACE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1DDA18270((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA9AD00(uint64_t a1)
{
  uint64_t v2 = a1 + 2456;
  sub_1DDA48424(a1, 0, __p);
  unsigned int v3 = sub_1DDA2A530(v2, __p);
  if ((void **)(a1 + 2464) == v3) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = *((unsigned int *)v3 + 14);
  }
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1DDA9AD70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA9AD8C(uint64_t a1)
{
  uint64_t v2 = a1 + 2480;
  sub_1DDA48424(a1, 0, __p);
  unsigned int v3 = sub_1DDA2A530(v2, __p);
  if ((void **)(a1 + 2488) == v3) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = *((unsigned int *)v3 + 14);
  }
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1DDA9ADFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA9AE18(uint64_t a1)
{
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 536))(a1) == 34892) {
    return 0xFFFFLL;
  }
  sub_1DDA48424(a1, 0, __p);
  unsigned int v3 = sub_1DDA2A530(a1 + 240, __p);
  if ((void **)(a1 + 248) == v3 || (v4 = (double *)v3[7], v3[8] == v4) || (double v5 = *v4, *v4 < 0.0))
  {
    if (v10 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    if (v10 < 0) {
      operator delete(__p[0]);
    }
    if (v5 <= 65535.0) {
      return (int)v5;
    }
  }
  sub_1DDA48424(a1, 0, __p);
  uint64_t v6 = sub_1DDA2A530(a1 + 656, __p);
  if ((void **)(a1 + 664) == v6 || (char v7 = (unsigned int *)v6[7], v6[8] == v7) || (v8 = *v7, *v7 < 8))
  {
    if (v10 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    if (v10 < 0) {
      operator delete(__p[0]);
    }
    if (v8 <= 0x10) {
      return (int)(exp2((double)v8) + -1.0);
    }
  }
  return sub_1DDA27FA0();
}

void sub_1DDA9AF94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1DDA9AFB4@<X0>(uint64_t a1@<X0>, unsigned int a2@<W3>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 1296);
  double v5 = *(const void **)(a1 + 1288);
  unint64_t v6 = (v4 - (uint64_t)v5) >> 3;
  if (v6 == a2)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return sub_1DDA1808C(a3, v5, v4, v6);
  }
  else
  {
    uint64_t v8 = 0x3FF0000000000000;
    return sub_1DDA25B2C(a3, a2, &v8);
  }
}

void *sub_1DDA9B02C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  if ((*(unsigned int (**)(void *))(*a1 + 72))(a1)
    && (*(unsigned int (**)(void *))(*a1 + 528))(a1) == 1)
  {
    uint64_t v7 = 0x3FF0000000000000;
    return sub_1DDA25B2C(a2, 3uLL, &v7);
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    double v5 = (const void *)a1[156];
    uint64_t v6 = a1[157];
    return sub_1DDA1808C(a2, v5, v6, (v6 - (uint64_t)v5) >> 3);
  }
}

double sub_1DDA9B10C(double *a1)
{
  if (sub_1DDB11748(a1 + 159)) {
    return a1[159];
  }
  (*(void (**)(void **__return_ptr, double *))(*(void *)a1 + 368))(&v5, a1);
  uint64_t v2 = v5;
  unsigned int v3 = v6;
  if (v5)
  {
    uint64_t v6 = v5;
    operator delete(v5);
  }
  if (v3 == v2) {
    return sub_1DDB10E94();
  }
  else {
    return a1[159];
  }
}

uint64_t sub_1DDA9B1A8(uint64_t a1)
{
  uint64_t v2 = a1 + 192;
  sub_1DDA1A880(__p, "IFD0:EXIF");
  unsigned int v3 = sub_1DDA2A530(v2, __p);
  if ((void **)(a1 + 200) == v3 || (uint64_t v4 = (unsigned int *)v3[7], v3[8] == v4)) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *v4;
  }
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

void sub_1DDA9B228(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA9B244(void **a1, uint64_t a2, char a3)
{
  sub_1DDA1A880(__p, "IFD0:EXIF");
  double v5 = sub_1DDA276C8(a1, (uint64_t)__p, a3);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

void sub_1DDA9B2B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA9B2CC(uint64_t a1, uint64_t a2)
{
  sub_1DDA97B10(a1, &v15);
  if (v15) {
    BOOL v4 = DWORD1(v15) == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    *(_DWORD *)(a2 + 8) = sub_1DDA9B5C4(a1);
    sub_1DDAD88E8((void *)(a2 + 16), (uint64_t)&v15);
  }
  sub_1DDA97BE4(a1, &v13);
  if (v13 && DWORD1(v13))
  {
    *(_DWORD *)(a2 + 12) = sub_1DDA9B64C(a1);
    sub_1DDAD88E8((void *)(a2 + 48), (uint64_t)&v13);
  }
  sub_1DDA9B6D4(a1, &v11);
  if (v11 && DWORD1(v11)) {
    sub_1DDAD88E8((void *)(a2 + 144), (uint64_t)&v11);
  }
  sub_1DDA9B774(a1, &v9);
  if (v9 && DWORD1(v9)) {
    sub_1DDAD88E8((void *)(a2 + 176), (uint64_t)&v9);
  }
  sub_1DDA9B814(a1, &v6);
  sub_1DDAD88E8((void *)(a2 + 216), (uint64_t)&v6);
  if (__p)
  {
    char v8 = __p;
    operator delete(__p);
  }
  sub_1DDA9B8B8(a1, &v6);
  sub_1DDAD88E8((void *)(a2 + 248), (uint64_t)&v6);
  if (__p)
  {
    char v8 = __p;
    operator delete(__p);
  }
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 336))(&v6, a1);
  sub_1DDAD88E8((void *)(a2 + 80), (uint64_t)&v6);
  if (__p)
  {
    char v8 = __p;
    operator delete(__p);
  }
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 344))(&v6, a1);
  sub_1DDAD88E8((void *)(a2 + 112), (uint64_t)&v6);
  if (__p)
  {
    char v8 = __p;
    operator delete(__p);
  }
  sub_1DDA9B95C(a1, (uint64_t)&v6);
  sub_1DDB1198C((_DWORD *)a2, (uint64_t *)&v6);
  if (v6)
  {
    std::string __p = v6;
    operator delete(v6);
  }
  if (*((void *)&v9 + 1))
  {
    uint64_t v10 = *((void *)&v9 + 1);
    operator delete(*((void **)&v9 + 1));
  }
  if (*((void *)&v11 + 1))
  {
    uint64_t v12 = *((void *)&v11 + 1);
    operator delete(*((void **)&v11 + 1));
  }
  if (*((void *)&v13 + 1))
  {
    uint64_t v14 = *((void *)&v13 + 1);
    operator delete(*((void **)&v13 + 1));
  }
  if (*((void *)&v15 + 1))
  {
    uint64_t v16 = *((void *)&v15 + 1);
    operator delete(*((void **)&v15 + 1));
  }
  return 1;
}

void sub_1DDA9B508(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  if (__p) {
    operator delete(__p);
  }
  if (a18) {
    operator delete(a18);
  }
  unsigned int v21 = *(void **)(v19 - 72);
  if (v21)
  {
    *(void *)(v19 - 64) = v21;
    operator delete(v21);
  }
  double v22 = *(void **)(v19 - 40);
  if (v22)
  {
    *(void *)(v19 - 32) = v22;
    operator delete(v22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA9B5C4(uint64_t a1)
{
  uint64_t v2 = a1 + 1816;
  sub_1DDA9BA0C(a1, (uint64_t)__p);
  unsigned int v3 = sub_1DDA2A530(v2, __p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  if ((void **)(a1 + 1824) == v3) {
    return 17;
  }
  else {
    return *((unsigned __int16 *)v3 + 28);
  }
}

void sub_1DDA9B630(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA9B64C(uint64_t a1)
{
  uint64_t v2 = a1 + 1840;
  sub_1DDA9BA0C(a1, (uint64_t)__p);
  unsigned int v3 = sub_1DDA2A530(v2, __p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  if ((void **)(a1 + 1848) == v3) {
    return 21;
  }
  else {
    return *((unsigned __int16 *)v3 + 28);
  }
}

void sub_1DDA9B6B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA9B6D4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = a1 + 1768;
  sub_1DDA9BA0C(a1, (uint64_t)__p);
  double v5 = sub_1DDA2A530(v4, __p);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  if ((void **)(a1 + 1776) == v5) {
    return sub_1DDAD80DC(a2);
  }
  sub_1DDAD80E8(a2, (uint64_t)(v5 + 7));
  return result;
}

void sub_1DDA9B758(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA9B774@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = a1 + 1792;
  sub_1DDA9BA0C(a1, (uint64_t)__p);
  double v5 = sub_1DDA2A530(v4, __p);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  if ((void **)(a1 + 1800) == v5) {
    return sub_1DDAD80DC(a2);
  }
  sub_1DDAD80E8(a2, (uint64_t)(v5 + 7));
  return result;
}

void sub_1DDA9B7F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double *sub_1DDA9B814@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1 + 1672;
  sub_1DDA9BA0C(a1, (uint64_t)__p);
  double v5 = sub_1DDA2A530(v4, __p);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  if ((void **)(a1 + 1680) == v5) {
    return sub_1DDAD849C(*(unsigned __int16 *)(a1 + 1234), (uint64_t)a2);
  }
  else {
    return (double *)sub_1DDAD80E8(a2, (uint64_t)(v5 + 7));
  }
}

void sub_1DDA9B89C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double *sub_1DDA9B8B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1 + 1696;
  sub_1DDA9BA0C(a1, (uint64_t)__p);
  double v5 = sub_1DDA2A530(v4, __p);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  if ((void **)(a1 + 1704) == v5) {
    return sub_1DDAD849C(*(unsigned __int16 *)(a1 + 1234), (uint64_t)a2);
  }
  else {
    return (double *)sub_1DDAD80E8(a2, (uint64_t)(v5 + 7));
  }
}

void sub_1DDA9B940(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1DDA9B95C@<W0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  return sub_1DDA26FFC(a1 + 1864, (void **)(a1 + 1184), (char *)a2);
}

void sub_1DDA9B998(_Unwind_Exception *exception_object)
{
  unsigned int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA9B9B4(uint64_t a1)
{
  uint64_t v2 = sub_1DDA2A530(a1 + 1888, (void **)(a1 + 1184));
  if ((void **)(a1 + 1896) == v2) {
    return 0.0;
  }
  else {
    return *((double *)v2 + 7);
  }
}

uint64_t sub_1DDA9BA04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 1616);
}

void **sub_1DDA9BA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result = (void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 72))(a1);
  if (result
    && (double result = sub_1DDA2A530(a1 + 2240, (void **)(a1 + 1184)), (void **)(a1 + 2248) == result)
    && (v8 = result, double result = sub_1DDA2A530(a1 + 2240, (void **)(a1 + 1208)), v8 != result))
  {
    if ((*(char *)(a1 + 1231) & 0x80000000) == 0)
    {
      *(_OWORD *)a2 = *(_OWORD *)(a1 + 1208);
      uint64_t v5 = *(void *)(a1 + 1224);
      goto LABEL_5;
    }
    char v6 = *(void **)(a1 + 1208);
    unint64_t v7 = *(void *)(a1 + 1216);
  }
  else
  {
    if ((*(char *)(a1 + 1207) & 0x80000000) == 0)
    {
      *(_OWORD *)a2 = *(_OWORD *)(a1 + 1184);
      uint64_t v5 = *(void *)(a1 + 1200);
LABEL_5:
      *(void *)(a2 + 16) = v5;
      return result;
    }
    char v6 = *(void **)(a1 + 1184);
    unint64_t v7 = *(void *)(a1 + 1192);
  }

  return (void **)sub_1DDA2639C((unsigned char *)a2, v6, v7);
}

double *sub_1DDA9BB10@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1DDA2A530(a1 + 1720, (void **)(a1 + 1184));
  if ((void **)(a1 + 1728) == v4)
  {
    unsigned int v6 = *(unsigned __int16 *)(a1 + 1234);
    return sub_1DDAD849C(v6, (uint64_t)a2);
  }
  else
  {
    return (double *)sub_1DDAD80E8(a2, (uint64_t)(v4 + 7));
  }
}

double *sub_1DDA9BB88@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1DDA2A530(a1 + 1744, (void **)(a1 + 1184));
  if ((void **)(a1 + 1752) == v4)
  {
    unsigned int v6 = *(unsigned __int16 *)(a1 + 1234);
    return sub_1DDAD849C(v6, (uint64_t)a2);
  }
  else
  {
    return (double *)sub_1DDAD80E8(a2, (uint64_t)(v4 + 7));
  }
}

uint64_t sub_1DDA9BC00(uint64_t a1)
{
  std::string __p = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  sub_1DDA27D28(a1, &v13);
  uint64_t v2 = v13;
  unsigned int v11 = 10;
  sub_1DDA1B3CC(&v12, &v11);
  BOOL v3 = sub_1DDA1A0CC(v2, &v12, (uint64_t)&__p);
  if (v14) {
    sub_1DDA18310(v14);
  }
  char v4 = HIBYTE(v17);
  if (v3)
  {
    uint64_t v5 = v17 >= 0 ? HIBYTE(v17) : v16;
    if (v5 == 9)
    {
      p_p = (unsigned __int8 *)&__p;
      if (v17 < 0) {
        p_p = (unsigned __int8 *)__p;
      }
      uint64_t v7 = *(void *)p_p;
      int v8 = p_p[8];
      if (v7 == 0x4F6920656C707041 && v8 == 83)
      {
        *(_WORD *)(a1 + 1232) = 257;
        if ((v4 & 0x80) == 0) {
          return 0;
        }
        goto LABEL_15;
      }
    }
  }
  if (v17 < 0) {
LABEL_15:
  }
    operator delete(__p);
  return 0;
}

void sub_1DDA9BCEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1DDA9BD1C(uint64_t a1)
{
  return *(double *)(a1 + 1920);
}

double sub_1DDA9BD24(uint64_t a1)
{
  return *(double *)(a1 + 1912);
}

BOOL sub_1DDA9BD2C(uint64_t a1)
{
  return sub_1DDAA1E48(a1 + 1928, (void **)(a1 + 1184)) != 0;
}

double sub_1DDA9BD58(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 1956)) {
    return 0.0;
  }
  LODWORD(result) = *(_DWORD *)(a1 + 1952);
  return result;
}

BOOL sub_1DDA9BD70@<W0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  return sub_1DDA26FFC(a1 + 1928, (void **)(a1 + 1184), (char *)a2);
}

void sub_1DDA9BDAC(_Unwind_Exception *exception_object)
{
  BOOL v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA9BDC8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_1DDA1A880(&__p, "dng");
  unint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a2) >> 3);
    unint64_t v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - *a2) >> 3);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v8;
    }
    unsigned __int16 v57 = a2 + 2;
    if (v10) {
      unsigned int v11 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v10);
    }
    else {
      unsigned int v11 = 0;
    }
    unsigned int v12 = &v11[24 * v7];
    uint64_t v53 = v11;
    double v54 = v12;
    uint64_t v56 = &v11[24 * v10];
    long long v13 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v12 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unsigned int v12 = v13;
    memset(&__p, 0, sizeof(__p));
    uint64_t v55 = v12 + 24;
    sub_1DDA2A0E8(a2, &v53);
    uint64_t v14 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v53);
    int v15 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v14;
    if (v15 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v6 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v5 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v5 = v6;
    a2[1] = v5 + 24;
  }
  sub_1DDA1A880(&__p, "adobe");
  unint64_t v17 = a2[1];
  unint64_t v16 = a2[2];
  if (v17 >= v16)
  {
    unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *a2) >> 3);
    unint64_t v20 = v19 + 1;
    if (v19 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *a2) >> 3);
    if (2 * v21 > v20) {
      unint64_t v20 = 2 * v21;
    }
    if (v21 >= 0x555555555555555) {
      unint64_t v22 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v22 = v20;
    }
    unsigned __int16 v57 = a2 + 2;
    if (v22) {
      uint64_t v23 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v22);
    }
    else {
      uint64_t v23 = 0;
    }
    double v24 = &v23[24 * v19];
    uint64_t v53 = v23;
    double v54 = v24;
    uint64_t v56 = &v23[24 * v22];
    long long v25 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v24 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)double v24 = v25;
    memset(&__p, 0, sizeof(__p));
    uint64_t v55 = v24 + 24;
    sub_1DDA2A0E8(a2, &v53);
    uint64_t v26 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v53);
    int v27 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v26;
    if (v27 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v18 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v17 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v17 = v18;
    a2[1] = v17 + 24;
  }
  sub_1DDA29D2C(a1, &__p);
  unint64_t v29 = a2[1];
  unint64_t v28 = a2[2];
  if (v29 >= v28)
  {
    unint64_t v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a2) >> 3);
    unint64_t v32 = v31 + 1;
    if (v31 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *a2) >> 3);
    if (2 * v33 > v32) {
      unint64_t v32 = 2 * v33;
    }
    if (v33 >= 0x555555555555555) {
      unint64_t v34 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v34 = v32;
    }
    unsigned __int16 v57 = a2 + 2;
    if (v34) {
      uint64_t v35 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v34);
    }
    else {
      uint64_t v35 = 0;
    }
    uint64_t v36 = &v35[24 * v31];
    uint64_t v53 = v35;
    double v54 = v36;
    uint64_t v56 = &v35[24 * v34];
    long long v37 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((void *)v36 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)uint64_t v36 = v37;
    memset(&__p, 0, sizeof(__p));
    uint64_t v55 = v36 + 24;
    sub_1DDA2A0E8(a2, &v53);
    uint64_t v38 = a2[1];
    sub_1DDA2A2C8((uint64_t)&v53);
    int v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    a2[1] = v38;
    if (v39 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    long long v30 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(void *)(v29 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)unint64_t v29 = v30;
    a2[1] = v29 + 24;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 72))(a1))
  {
    sub_1DDA1A880(&__p, "linear");
    unint64_t v41 = a2[1];
    unint64_t v40 = a2[2];
    if (v41 >= v40)
    {
      unint64_t v43 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v41 - *a2) >> 3);
      unint64_t v44 = v43 + 1;
      if (v43 + 1 > 0xAAAAAAAAAAAAAAALL) {
        sub_1DDA17F78();
      }
      unint64_t v45 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v40 - *a2) >> 3);
      if (2 * v45 > v44) {
        unint64_t v44 = 2 * v45;
      }
      if (v45 >= 0x555555555555555) {
        unint64_t v46 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v46 = v44;
      }
      unsigned __int16 v57 = a2 + 2;
      if (v46) {
        uint64_t v47 = (char *)sub_1DDA2A160((uint64_t)(a2 + 2), v46);
      }
      else {
        uint64_t v47 = 0;
      }
      uint64_t v48 = &v47[24 * v43];
      uint64_t v53 = v47;
      double v54 = v48;
      uint64_t v56 = &v47[24 * v46];
      long long v49 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      *((void *)v48 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
      *(_OWORD *)uint64_t v48 = v49;
      memset(&__p, 0, sizeof(__p));
      uint64_t v55 = v48 + 24;
      sub_1DDA2A0E8(a2, &v53);
      uint64_t v50 = a2[1];
      sub_1DDA2A2C8((uint64_t)&v53);
      int v51 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
      a2[1] = v50;
      if (v51 < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      long long v42 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      *(void *)(v41 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
      *(_OWORD *)unint64_t v41 = v42;
      a2[1] = v41 + 24;
    }
  }
}

void sub_1DDA9C24C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1DDA2A044((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1DDA9C2B4(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  id v7 = a3;
  unint64_t v8 = &v43;
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a1 + 216))(&v43, a1);
  uint64_t v9 = HIBYTE(v44);
  int v10 = SHIBYTE(v44);
  unsigned int v11 = (void *)v43;
  if (v44 < 0)
  {
    uint64_t v9 = *((void *)&v43 + 1);
    unint64_t v8 = (long long *)v43;
  }
  unsigned int v12 = (char *)v8 + v9;
  if (v9 >= 10)
  {
    long long v13 = v8;
    do
    {
      uint64_t v14 = (char *)memchr(v13, 72, v9 - 9);
      if (!v14) {
        break;
      }
      if (*(void *)v14 == 0x6C626C6573736148 && *((_WORD *)v14 + 4) == 25697) {
        goto LABEL_12;
      }
      long long v13 = (long long *)(v14 + 1);
      uint64_t v9 = v12 - (char *)v13;
    }
    while (v12 - (char *)v13 > 9);
  }
  uint64_t v14 = v12;
LABEL_12:
  BOOL v17 = v14 == v12 || v14 - (char *)v8 == -1;
  if (v10 < 0)
  {
    operator delete(v11);
    if (v17)
    {
LABEL_20:
      uint64_t v18 = a2[1];
      *a4 = *a2;
      a4[1] = v18;
      if (v18) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v18 + 8), 1uLL, memory_order_relaxed);
      }
      goto LABEL_45;
    }
  }
  else if (v17)
  {
    goto LABEL_20;
  }
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 440))(a1);
  sub_1DDA97B10(a1, &v43);
  sub_1DDAD8240((uint64_t)v40, 3u, 3u, 0.473895, v20, v21, v22, v23, v24, 0xBFB7DAFF9576F52ALL);
  unsigned int v30 = HIDWORD(v19) - 5585;
  if ((v19 - 7391) >= 0xFFFFFEFF && v30 >= 0xFFFFFEFF)
  {
    sub_1DDAD80E8(&v37, (uint64_t)v40);
    int v31 = sub_1DDAD95A4((unsigned int *)&v43, &v37, 0.0001);
    if (__p)
    {
      int v39 = __p;
      operator delete(__p);
      if (v31)
      {
LABEL_27:
        sub_1DDBE3F6C(@"dng.adobe.HasselbladH3D-39", a4);
        goto LABEL_36;
      }
    }
    else if (v31)
    {
      goto LABEL_27;
    }
  }
  if (v41)
  {
    long long v42 = v41;
    operator delete(v41);
  }
  sub_1DDAD8240((uint64_t)v40, 3u, 3u, 0.806794, v25, v26, v27, v28, v29, 0xBFD2EFAA4766C6DELL);
  if ((v19 - 4225) < 0xFFFFFEFF || v30 < 0xFFFFFEFF) {
    goto LABEL_39;
  }
  sub_1DDAD80E8(&v34, (uint64_t)v40);
  int v32 = sub_1DDAD95A4((unsigned int *)&v43, &v34, 0.0001);
  if (!v35)
  {
    if (v32) {
      goto LABEL_35;
    }
LABEL_39:
    if (v41)
    {
      long long v42 = v41;
      operator delete(v41);
    }
    uint64_t v33 = a2[1];
    *a4 = *a2;
    a4[1] = v33;
    if (v33) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v33 + 8), 1uLL, memory_order_relaxed);
    }
    goto LABEL_43;
  }
  uint64_t v36 = v35;
  operator delete(v35);
  if ((v32 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_35:
  sub_1DDBE3F6C(@"dng.adobe.HasselbladCF", a4);
LABEL_36:
  if (v41)
  {
    long long v42 = v41;
    operator delete(v41);
  }
LABEL_43:
  if (*((void *)&v43 + 1))
  {
    uint64_t v44 = *((void *)&v43 + 1);
    operator delete(*((void **)&v43 + 1));
  }
LABEL_45:
}

void sub_1DDA9C6B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28)
{
  if (__p) {
    operator delete(__p);
  }
  if (a27) {
    operator delete(a27);
  }
  int v31 = *(void **)(v29 - 112);
  if (v31)
  {
    *(void *)(v29 - 104) = v31;
    operator delete(v31);
  }

  _Unwind_Resume(a1);
}

void sub_1DDA9C734(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DDA9AC2C(a1, 9, &v29);
  uint64_t v4 = v29;
  uint64_t v3 = v30;
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (v4 != v3)
  {
    for (unint64_t i = 0; i < (v30 - v29) >> 4; ++i)
    {
      long long v6 = *(const void **)(v4 + 16 * i);
      if (v6)
      {
        id v7 = (char *)__dynamic_cast(v6, (const struct __class_type_info *)&unk_1F395A728, (const struct __class_type_info *)&unk_1F3976FA8, 0);
        if (v7)
        {
          unint64_t v8 = *(std::__shared_weak_count **)(v4 + 16 * i + 8);
          if (v8) {
            atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          goto LABEL_9;
        }
      }
      else
      {
        id v7 = 0;
      }
      unint64_t v8 = 0;
LABEL_9:
      memset(v28, 0, sizeof(v28));
      unsigned int v10 = *((_DWORD *)v7 + 3);
      unsigned int v9 = *((_DWORD *)v7 + 4);
      int v11 = *((_DWORD *)v7 + 6);
      double v12 = (double)(*((_DWORD *)v7 + 5) - v10);
      *(double *)uint64_t v23 = (double)v9;
      *(double *)&v23[1] = (double)v10;
      *(double *)&void v23[2] = (double)(v11 - v9);
      *(double *)&uint64_t v23[3] = v12;
      int8x16_t v24 = vextq_s8(*(int8x16_t *)(v7 + 72), *(int8x16_t *)(v7 + 72), 8uLL);
      int32x2_t v13 = *(int32x2_t *)(v7 + 44);
      int32x2_t v14 = vadd_s32(v13, (int32x2_t)-1);
      v15.i64[0] = v14.u32[0];
      v15.i64[1] = v14.u32[1];
      int8x16_t v16 = (int8x16_t)vmulq_f64(*(float64x2_t *)(v7 + 56), vcvtq_f64_u64(v15));
      v15.i64[0] = v13.u32[0];
      v15.i64[1] = v13.u32[1];
      int8x16_t v17 = (int8x16_t)vcvtq_f64_u64(v15);
      int8x16_t v25 = vextq_s8(v16, v16, 8uLL);
      int8x16_t v26 = vextq_s8(v17, v17, 8uLL);
      int32x4_t v18 = *(int32x4_t *)(v7 + 28);
      int8x16_t v27 = vextq_s8((int8x16_t)vrev64q_s32(v18), (int8x16_t)v18, 8uLL);
      if (v18.i32[1])
      {
        unsigned int v19 = 0;
        do
        {
          sub_1DDB0E124(v7, v19, __p);
          sub_1DDA9C9B8(v28, (uint64_t)__p);
          if (__p[0])
          {
            __p[1] = __p[0];
            operator delete(__p[0]);
          }
          ++v19;
        }
        while (v19 < *((_DWORD *)v7 + 8));
      }
      unint64_t v20 = a2[1];
      if (v20 >= a2[2])
      {
        uint64_t v21 = sub_1DDA9E490(a2, (uint64_t)v23);
      }
      else
      {
        sub_1DDA9E418((uint64_t)a2, (uint64_t)v23);
        uint64_t v21 = v20 + 120;
      }
      a2[1] = v21;
      __p[0] = v28;
      sub_1DDA9E7E4((void ***)__p);
      if (v8) {
        sub_1DDA18310(v8);
      }
      uint64_t v4 = v29;
    }
  }
  v23[0] = (void **)&v29;
  sub_1DDA18270(v23);
}

void sub_1DDA9C95C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1DDA9E7E4((void ***)&__p);
  if (v12) {
    sub_1DDA18310(v12);
  }
  sub_1DDA9EB40((void ***)&a12);
  a12 = v13 - 112;
  sub_1DDA18270((void ***)&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA9C9B8(uint64_t *a1, uint64_t a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  id v7 = *(void **)(result - 8);
  if ((unint64_t)v7 >= v6)
  {
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v7 - *a1) >> 3);
    unint64_t v10 = v9 + 1;
    if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1DDA17F78();
    }
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a1) >> 3);
    if (2 * v11 > v10) {
      unint64_t v10 = 2 * v11;
    }
    if (v11 >= 0x555555555555555) {
      unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v12 = v10;
    }
    void v16[4] = result;
    uint64_t v13 = (char *)sub_1DDA2A160(result, v12);
    int32x2_t v14 = &v13[24 * v9];
    v16[0] = v13;
    v16[1] = v14;
    void v16[3] = &v13[24 * v15];
    *((void *)v14 + 1) = 0;
    *((void *)v14 + 2) = 0;
    *(void *)int32x2_t v14 = 0;
    *(_OWORD *)int32x2_t v14 = *(_OWORD *)a2;
    *((void *)v14 + 2) = *(void *)(a2 + 16);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    v16[2] = v14 + 24;
    sub_1DDA9E1E8(a1, v16);
    unint64_t v8 = (void *)a1[1];
    uint64_t result = sub_1DDA9E384((uint64_t)v16);
  }
  else
  {
    *id v7 = 0;
    v7[1] = 0;
    void v7[2] = 0;
    *(_OWORD *)id v7 = *(_OWORD *)a2;
    void v7[2] = *(void *)(a2 + 16);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    unint64_t v8 = v7 + 3;
    a1[1] = (uint64_t)(v7 + 3);
  }
  a1[1] = (uint64_t)v8;
  return result;
}

void sub_1DDA9CAE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1DDA9E384((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_1DDA9CAF8@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1DDA2A358(a2, a1 + 271, a1 + 274, a1 + 277);
}

BOOL sub_1DDA9CB0C(unsigned char *a1)
{
  return a1[2112] || a1[1972] || a1[1988] != 0;
}

void *sub_1DDA9CB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!*(unsigned char *)(a1 + 1972) && !*(unsigned char *)(a1 + 1988))
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E01C3B90](exception, "RawCameraException");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v4 = (_OWORD *)(a1 + 1992);
  if (!*(unsigned char *)(a1 + 2112))
  {
    if (!*(unsigned char *)(a1 + 1988))
    {
      if (!*(unsigned char *)(a1 + 1972)) {
        goto LABEL_131;
      }
      uint64_t v44 = *(void *)(a1 + 1960);
      LODWORD(v45) = *(_DWORD *)(a1 + 1968);
      sub_1DDA27D28(a1, &v51);
      LODWORD(__src[0]) = sub_1DDA3CE7C((uint64_t)&v44);
      sub_1DDA1B4D8((int *)v72, (int *)__src);
      sub_1DDA1A94C(v73, &v51, (uint64_t)v72, 0);
      if (v52 != 0.0) {
        sub_1DDA18310(*(std::__shared_weak_count **)&v52);
      }
      sub_1DDA27D28(a1, &v51);
      uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
      sub_1DDA29F88(v72, &v51, v10);
      if (v52 != 0.0) {
        sub_1DDA18310(*(std::__shared_weak_count **)&v52);
      }
      LOBYTE(v62) = 0;
      char v63 = 0;
      LOBYTE(v64) = 0;
      char v65 = 0;
      LOBYTE(v66) = 0;
      char v67 = 0;
      LOBYTE(v68) = 0;
      char v69 = 0;
      uint64_t v71 = 0;
      long long v70 = 0uLL;
      sub_1DDA27D28(a1, __src);
      int v11 = sub_1DDA19EC8((uint64_t)__src[0]);
      LODWORD(v51) = v11;
      if (__src[1]) {
        sub_1DDA18310((std::__shared_weak_count *)__src[1]);
      }
      sub_1DDA27D28(a1, __src);
      int v12 = sub_1DDA19EC8((uint64_t)__src[0]);
      HIDWORD(v51) = v12;
      if (__src[1]) {
        sub_1DDA18310((std::__shared_weak_count *)__src[1]);
      }
      sub_1DDA27D28(a1, __src);
      double v52 = sub_1DDA1A030((uint64_t)__src[0]);
      if (__src[1]) {
        sub_1DDA18310((std::__shared_weak_count *)__src[1]);
      }
      sub_1DDA27D28(a1, __src);
      double v53 = sub_1DDA1A030((uint64_t)__src[0]);
      if (__src[1]) {
        sub_1DDA18310((std::__shared_weak_count *)__src[1]);
      }
      sub_1DDA27D28(a1, __src);
      double v54 = sub_1DDA1A030((uint64_t)__src[0]);
      if (__src[1]) {
        sub_1DDA18310((std::__shared_weak_count *)__src[1]);
      }
      sub_1DDA27D28(a1, __src);
      double v55 = sub_1DDA1A030((uint64_t)__src[0]);
      if (__src[1]) {
        sub_1DDA18310((std::__shared_weak_count *)__src[1]);
      }
      sub_1DDA27D28(a1, __src);
      int v13 = sub_1DDA19EC8((uint64_t)__src[0]);
      int v56 = v13;
      if (__src[1]) {
        sub_1DDA18310((std::__shared_weak_count *)__src[1]);
      }
      sub_1DDA27D28(a1, __src);
      float v57 = sub_1DDA1A014((uint64_t)__src[0]);
      if (__src[1]) {
        sub_1DDA18310((std::__shared_weak_count *)__src[1]);
      }
      sub_1DDA27D28(a1, __src);
      float v58 = sub_1DDA1A014((uint64_t)__src[0]);
      if (__src[1]) {
        sub_1DDA18310((std::__shared_weak_count *)__src[1]);
      }
      sub_1DDA27D28(a1, __src);
      float v59 = sub_1DDA1A014((uint64_t)__src[0]);
      if (__src[1]) {
        sub_1DDA18310((std::__shared_weak_count *)__src[1]);
      }
      sub_1DDA27D28(a1, __src);
      float v60 = sub_1DDA1A014((uint64_t)__src[0]);
      if (__src[1]) {
        sub_1DDA18310((std::__shared_weak_count *)__src[1]);
      }
      sub_1DDA27D28(a1, __src);
      float v61 = sub_1DDA1A014((uint64_t)__src[0]);
      if (__src[1]) {
        sub_1DDA18310((std::__shared_weak_count *)__src[1]);
      }
      unint64_t v74 = v12 * v11 * v13;
      if (!*(unsigned char *)(a1 + 1972)) {
        sub_1DDA1D8BC();
      }
      if (*(unsigned int *)(a1 + 1964) - 64 != 4 * v12 * v11 * v13)
      {
        long long v42 = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E01C3B90](v42, "RawCameraException");
        __cxa_throw(v42, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      sub_1DDA27D28(a1, &__p);
      int32x2_t v14 = __p;
      sub_1DDA18500(&v50, &v74);
      sub_1DDA4AF68((uint64_t)v14, (unsigned int *)&v50, (uint64_t *)__src);
      long long v70 = *(_OWORD *)__src;
      uint64_t v71 = v49;
      __src[1] = 0;
      uint64_t v49 = 0;
      __src[0] = 0;
      if (v47) {
        sub_1DDA18310(v47);
      }
      sub_1DDA9D8A0(a1 + 1992, (uint64_t)&v51);
LABEL_124:
      if ((void)v70)
      {
        *((void *)&v70 + 1) = v70;
        operator delete((void *)v70);
      }
      sub_1DDA2A000(v72);
      sub_1DDA1AA18(v73);
      if (*(unsigned char *)(a1 + 2112)) {
        goto LABEL_127;
      }
LABEL_131:
      sub_1DDA1D8BC();
    }
    unint64_t v74 = *(void *)(a1 + 1976);
    int v75 = *(_DWORD *)(a1 + 1984);
    sub_1DDA27D28(a1, &v51);
    LODWORD(__src[0]) = sub_1DDA3CE7C((uint64_t)&v74);
    sub_1DDA1B4D8((int *)v72, (int *)__src);
    sub_1DDA1A94C(v73, &v51, (uint64_t)v72, 0);
    if (v52 != 0.0) {
      sub_1DDA18310(*(std::__shared_weak_count **)&v52);
    }
    sub_1DDA27D28(a1, &v51);
    uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
    sub_1DDA29F88(v72, &v51, v5);
    if (v52 != 0.0) {
      sub_1DDA18310(*(std::__shared_weak_count **)&v52);
    }
    LOBYTE(v62) = 0;
    char v63 = 0;
    LOBYTE(v64) = 0;
    char v65 = 0;
    LOBYTE(v66) = 0;
    char v67 = 0;
    LOBYTE(v68) = 0;
    char v69 = 0;
    uint64_t v71 = 0;
    long long v70 = 0uLL;
    sub_1DDA27D28(a1, __src);
    LODWORD(v51) = sub_1DDA19EC8((uint64_t)__src[0]);
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    HIDWORD(v51) = sub_1DDA19EC8((uint64_t)__src[0]);
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    double v52 = sub_1DDA1A030((uint64_t)__src[0]);
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    double v53 = sub_1DDA1A030((uint64_t)__src[0]);
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    double v54 = sub_1DDA1A030((uint64_t)__src[0]);
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    double v55 = sub_1DDA1A030((uint64_t)__src[0]);
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    int v56 = sub_1DDA19EC8((uint64_t)__src[0]);
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    float v57 = sub_1DDA1A014((uint64_t)__src[0]);
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    float v58 = sub_1DDA1A014((uint64_t)__src[0]);
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    float v59 = sub_1DDA1A014((uint64_t)__src[0]);
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    float v60 = sub_1DDA1A014((uint64_t)__src[0]);
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    float v61 = sub_1DDA1A014((uint64_t)__src[0]);
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    int v62 = sub_1DDA19EC8((uint64_t)__src[0]);
    char v63 = 1;
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    float v64 = sub_1DDA1A014((uint64_t)__src[0]);
    char v65 = 1;
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    float v66 = sub_1DDA1A014((uint64_t)__src[0]);
    char v67 = 1;
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    sub_1DDA27D28(a1, __src);
    float v68 = sub_1DDA1A014((uint64_t)__src[0]);
    char v69 = 1;
    if (__src[1]) {
      sub_1DDA18310((std::__shared_weak_count *)__src[1]);
    }
    if (!v65) {
      sub_1DDA1D8BC();
    }
    if (v64 < 0.25 || v64 > 4.0)
    {
      float v6 = 4.0;
      if (v64 <= 4.0) {
        float v6 = v64;
      }
      if (v64 >= 0.25) {
        float v7 = v6;
      }
      else {
        float v7 = 0.25;
      }
      float v64 = v7;
      char v65 = 1;
    }
    unint64_t v8 = SHIDWORD(v51) * (uint64_t)(int)v51 * v56;
    unint64_t v50 = v8;
    if (!v63) {
      sub_1DDA1D8BC();
    }
    if ((v62 - 1) >= 3) {
      uint64_t v9 = 1;
    }
    else {
      uint64_t v9 = qword_1DDBFAA88[v62 - 1];
    }
    if (!*(unsigned char *)(a1 + 1988)) {
      sub_1DDA1D8BC();
    }
    if (*(unsigned int *)(a1 + 1980) - 80 != v9 * v8)
    {
      unint64_t v41 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E01C3B90](v41, "RawCameraException");
      __cxa_throw(v41, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    if (v62 == 3)
    {
      sub_1DDA27D28(a1, &__p);
      uint64_t v15 = __p;
      sub_1DDA18500(&v44, &v50);
      sub_1DDA4AF68((uint64_t)v15, (unsigned int *)&v44, (uint64_t *)__src);
      if ((void)v70)
      {
        *((void *)&v70 + 1) = v70;
        operator delete((void *)v70);
      }
      long long v70 = *(_OWORD *)__src;
      uint64_t v71 = v49;
      __src[1] = 0;
      uint64_t v49 = 0;
      __src[0] = 0;
      if (v47) {
        sub_1DDA18310(v47);
      }
LABEL_123:
      sub_1DDA9D8A0(a1 + 1992, (uint64_t)&v51);
      goto LABEL_124;
    }
    sub_1DDA4AFFC(__src, v8);
    if (!v67) {
      sub_1DDA1D8BC();
    }
    if (!v69 || !v63) {
      sub_1DDA1D8BC();
    }
    if (v62 == 2)
    {
      sub_1DDA27D28(a1, &v44);
      uint64_t v30 = v44;
      sub_1DDA18500(&v43, &v50);
      sub_1DDA4A598(v30, &v43, (uint64_t *)&__p);
      if (v45) {
        sub_1DDA18310(v45);
      }
      unint64_t v31 = v50;
      unint64_t v20 = (std::__shared_weak_count *)__p;
      if (v50)
      {
        int v32 = (float *)__src[0];
        uint64_t v33 = (unsigned __int16 *)__p;
        do
        {
          unsigned int v34 = *v33++;
          *v32++ = (float)v34;
          --v31;
        }
        while (v31);
        goto LABEL_120;
      }
    }
    else
    {
      float v16 = v66;
      float v17 = v68;
      if (v62 == 1)
      {
        sub_1DDA27D28(a1, &v44);
        uint64_t v24 = v44;
        sub_1DDA18500(&v43, &v50);
        sub_1DDA4A598(v24, &v43, (uint64_t *)&__p);
        if (v45) {
          sub_1DDA18310(v45);
        }
        unint64_t v25 = v50;
        int8x16_t v26 = (char *)__src[0];
        if (v50)
        {
          int8x16_t v27 = (unsigned __int16 *)__p;
          uint64_t v28 = (float *)__src[0];
          do
          {
            unsigned int v29 = *v27++;
            *v28++ = v16 + (float)((float)((float)v29 / 65535.0) * (float)(v17 - v16));
            --v25;
          }
          while (v25);
        }
        sub_1DDA17E28((char *)&v70, v26, (uint64_t)__src[1], ((char *)__src[1] - (char *)v26) >> 2);
        unint64_t v20 = (std::__shared_weak_count *)__p;
      }
      else
      {
        if (v62) {
          goto LABEL_121;
        }
        sub_1DDA27D28(a1, &v44);
        uint64_t v18 = v44;
        sub_1DDA18500(&v43, &v50);
        sub_1DDA3E5D0(v18, &v43, (uint64_t *)&__p);
        if (v45) {
          sub_1DDA18310(v45);
        }
        unint64_t v19 = v50;
        unint64_t v20 = (std::__shared_weak_count *)__p;
        if (v50)
        {
          uint64_t v21 = (float *)__src[0];
          uint64_t v22 = (unsigned __int8 *)__p;
          do
          {
            unsigned int v23 = *v22++;
            *v21++ = v16 + (float)((float)((float)v23 / 255.0) * (float)(v17 - v16));
            --v19;
          }
          while (v19);
LABEL_120:
          uint64_t v47 = v20;
          operator delete(v20);
LABEL_121:
          sub_1DDA17E28((char *)&v70, (char *)__src[0], (uint64_t)__src[1], ((char *)__src[1] - (char *)__src[0]) >> 2);
          if (__src[0])
          {
            __src[1] = __src[0];
            operator delete(__src[0]);
          }
          goto LABEL_123;
        }
      }
    }
    if (!v20) {
      goto LABEL_121;
    }
    goto LABEL_120;
  }
LABEL_127:
  long long v35 = *(_OWORD *)(a1 + 2040);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 2024);
  *(_OWORD *)(a2 + 48) = v35;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 2056);
  *(_OWORD *)(a2 + 77) = *(_OWORD *)(a1 + 2069);
  long long v36 = *(_OWORD *)(a1 + 2008);
  *(_OWORD *)a2 = *v4;
  *(_OWORD *)(a2 + 16) = v36;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  uint64_t v37 = *(const void **)(a1 + 2088);
  uint64_t v38 = *(void *)(a1 + 2096);
  *(void *)(a2 + 96) = 0;
  return sub_1DDA1D984((void *)(a2 + 96), v37, v38, (v38 - (uint64_t)v37) >> 2);
}

void sub_1DDA9D634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (__p) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  uint64_t v24 = *(void **)(v21 + 96);
  if (v24)
  {
    *(void *)(v21 + 104) = v24;
    operator delete(v24);
  }
  sub_1DDA2A000((uint64_t *)(v22 - 144));
  sub_1DDA1AA18((uint64_t *)(v22 - 120));
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA9D8A0(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 120);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v6 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 77) = *(_OWORD *)(a2 + 77);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 32) = v7;
  if (v3)
  {
    if (a1 != a2) {
      sub_1DDA17E28((char *)(a1 + 96), *(char **)(a2 + 96), *(void *)(a2 + 104), (uint64_t)(*(void *)(a2 + 104) - *(void *)(a2 + 96)) >> 2);
    }
  }
  else
  {
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
    *(void *)(a1 + 112) = 0;
    sub_1DDA1D984((void *)(a1 + 96), *(const void **)(a2 + 96), *(void *)(a2 + 104), (uint64_t)(*(void *)(a2 + 104) - *(void *)(a2 + 96)) >> 2);
    *(unsigned char *)(a1 + 120) = 1;
  }
  return a1;
}

BOOL sub_1DDA9D93C(uint64_t a1)
{
  uint64_t v2 = a1 + 2120;
  sub_1DDA9BA0C(a1, (uint64_t)__p);
  int v3 = sub_1DDA2A530(v2, __p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  return a1 + 2128 != (void)v3;
}

void sub_1DDA9D99C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA9D9B8(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1 + 2120;
  sub_1DDA9BA0C(a1, (uint64_t)__p);
  long long v5 = sub_1DDA2A530(v4, __p);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  if ((void **)(a1 + 2128) != v5) {
    sub_1DDA1808C(a2, v5[7], (uint64_t)v5[8], ((unsigned char *)v5[8] - (unsigned char *)v5[7]) >> 3);
  }
}

void sub_1DDA9DA4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DDA9DA68(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1 + 2144;
  sub_1DDA9BA0C(a1, (uint64_t)__p);
  long long v5 = sub_1DDA2A530(v4, __p);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  if ((void **)(a1 + 2152) != v5) {
    sub_1DDA1808C(a2, v5[7], (uint64_t)v5[8], ((unsigned char *)v5[8] - (unsigned char *)v5[7]) >> 3);
  }
}

void sub_1DDA9DAFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA9DB18(uint64_t a1)
{
  uint64_t v2 = a1 + 2240;
  sub_1DDA9BA0C(a1, (uint64_t)__p);
  int v3 = sub_1DDA2A530(v2, __p);
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  if ((void **)(a1 + 2248) != v3) {
    return *((unsigned int *)v3 + 14);
  }
  sub_1DDA48424(a1, 0, v9);
  long long v5 = sub_1DDA2A530(a1 + 512, v9);
  BOOL v6 = (void **)(a1 + 520) != v5 && *((_DWORD *)v5 + 14) == 0;
  if (v10 < 0)
  {
    operator delete(v9[0]);
    if (v6) {
      goto LABEL_10;
    }
    return 0;
  }
  if (!v6) {
    return 0;
  }
LABEL_10:
  sub_1DDA48424(a1, 0, __p);
  char v7 = sub_1DDA2A530(v2, __p);
  if (v3 == v7) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = *((unsigned int *)v7 + 14);
  }
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1DDA9DC28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1DDA9DC5C(uint64_t a1)
{
  sub_1DDA48424(a1, 0, &__p);
  uint64_t v2 = sub_1DDA2A530(a1 + 1576, &__p);
  if (SHIBYTE(v16) < 0) {
    operator delete(__p);
  }
  if ((void **)(a1 + 1584) == v2)
  {
    BOOL v6 = 0;
  }
  else
  {
    std::string __p = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    sub_1DDA1D908(&__p, v2[7], (uint64_t)v2[8], ((unsigned char *)v2[8] - (unsigned char *)v2[7]) >> 1);
    BOOL v6 = sub_1DDA49F48(((char *)v15 - (unsigned char *)__p) >> 1);
    char v7 = (unsigned __int16 *)__p;
    unint64_t v8 = v15;
    if (__p != v15)
    {
      do
      {
        uint64_t v9 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v3, *v7, v4, v5);
        objc_msgSend_addObject_(v6, v10, (uint64_t)v9, v11, v12);

        ++v7;
      }
      while (v7 != v8);
      char v7 = (unsigned __int16 *)__p;
    }
    if (v7)
    {
      uint64_t v15 = v7;
      operator delete(v7);
    }
  }

  return v6;
}

void sub_1DDA9DD70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1DDA9DDD8(uint64_t a1)
{
  sub_1DDA9EBBC(a1);

  JUMPOUT(0x1E01C3DC0);
}

void *sub_1DDA9DE10(size_t a1)
{
  return malloc_type_malloc(a1, 0xB5AF7B64uLL);
}

char *sub_1DDA9DE20(char *result, unsigned int *a2, unsigned int *a3, unint64_t a4)
{
  if (a4)
  {
    BOOL v6 = result;
    uint64_t result = sub_1DDA18108(result, a4);
    char v7 = (double *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      unsigned int v8 = *a2++;
      *v7++ = (double)v8;
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_1DDA9DE7C(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1DDA9DE98(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1DDA9DF10((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1DDA9DF10(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  void v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = (_OWORD *)(a7 - 16);
    do
    {
      long long v9 = *((_OWORD *)a3 - 1);
      a3 -= 2;
      *uint64_t v8 = v9;
      *a3 = 0;
      a3[1] = 0;
      *((void *)&v15 + 1) = v8;
      v7 -= 16;
      --v8;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_1DDA9DFA4((uint64_t)v12);
  return v10;
}

uint64_t sub_1DDA9DFA4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1DDA49854(a1);
  }
  return a1;
}

void sub_1DDA9DFDC(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  long long v9 = *(void **)a1;
  if (a4 > (uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 4)
  {
    sub_1DDA9E130((uint64_t *)a1);
    if (a4 >> 60) {
      sub_1DDA17F78();
    }
    uint64_t v10 = *(void *)(a1 + 16) - *(void *)a1;
    uint64_t v11 = v10 >> 3;
    if (v10 >> 3 <= a4) {
      uint64_t v11 = a4;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    sub_1DDA197F4((void *)a1, v12);
    char v13 = sub_1DDA19870(v8, a2, a3, *(void **)(a1 + 8));
    goto LABEL_11;
  }
  unint64_t v14 = (uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 4;
  if (v14 < a4)
  {
    long long v15 = &a2[2 * v14];
    sub_1DDA9E16C((uint64_t)&v20, a2, v15, v9);
    char v13 = sub_1DDA19870(v8, v15, a3, *(void **)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = v13;
    return;
  }
  sub_1DDA9E16C((uint64_t)&v21, a2, a3, v9);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18 != v16)
  {
    do
    {
      unint64_t v19 = *(std::__shared_weak_count **)(v18 - 8);
      if (v19) {
        sub_1DDA18310(v19);
      }
      v18 -= 16;
    }
    while (v18 != v17);
  }
  *(void *)(a1 + 8) = v17;
}

void sub_1DDA9E120(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1DDA9E128(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1DDA9E130(uint64_t *a1)
{
  if (*a1)
  {
    sub_1DDA182C4(a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t *sub_1DDA9E16C(uint64_t a1, uint64_t *a2, uint64_t *a3, void *a4)
{
  uint64_t v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    uint64_t v8 = *v5;
    uint64_t v7 = v5[1];
    if (v7) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
    }
    long long v9 = (std::__shared_weak_count *)a4[1];
    *a4 = v8;
    a4[1] = v7;
    if (v9) {
      sub_1DDA18310(v9);
    }
    a4 += 2;
    v5 += 2;
  }
  while (v5 != v6);
  return v6;
}

uint64_t sub_1DDA9E1E8(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1DDA9E260((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1DDA9E260(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  void v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_1DDA9E304((uint64_t)v11);
  return v9;
}

uint64_t sub_1DDA9E304(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1DDA9E33C(a1);
  }
  return a1;
}

void sub_1DDA9E33C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    int v3 = *(void **)v1;
    if (*(void *)v1)
    {
      *(void *)(v1 + 8) = v3;
      operator delete(v3);
    }
    v1 += 24;
  }
}

uint64_t sub_1DDA9E384(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1DDA9E3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    uint64_t v5 = *(void **)(v2 - 24);
    *(void *)(a1 + 16) = v2 - 24;
    if (v5)
    {
      *(void *)(v2 - 16) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
}

void *sub_1DDA9E418(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v3 + 80) = v7;
  *(_OWORD *)(v3 + 32) = v5;
  *(_OWORD *)(v3 + 48) = v6;
  *(void *)(v3 + 104) = 0;
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 96) = 0;
  uint64_t result = sub_1DDA9E5CC((void *)(v3 + 96), *(void *)(a2 + 96), *(void *)(a2 + 104), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 104) - *(void *)(a2 + 96)) >> 3));
  *(void *)(a1 + 8) = v3 + 120;
  return result;
}

void sub_1DDA9E488(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1DDA9E490(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xEEEEEEEEEEEEEEEFLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x222222222222222) {
    sub_1DDA17F78();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xEEEEEEEEEEEEEEEFLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x111111111111111) {
    unint64_t v9 = 0x222222222222222;
  }
  else {
    unint64_t v9 = v5;
  }
  char v21 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_1DDA9E908(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = &v10[120 * v4];
  v18[0] = v10;
  v18[1] = v11;
  unint64_t v19 = v11;
  char v20 = &v10[120 * v9];
  long long v12 = *(_OWORD *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 48);
  long long v14 = *(_OWORD *)(a2 + 80);
  *((_OWORD *)v11 + 4) = *(_OWORD *)(a2 + 64);
  *((_OWORD *)v11 + 5) = v14;
  *((_OWORD *)v11 + 2) = v12;
  *((_OWORD *)v11 + 3) = v13;
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a2;
  *((_OWORD *)v11 + 1) = v15;
  *((void *)v11 + 13) = 0;
  *((void *)v11 + 14) = 0;
  *((void *)v11 + 12) = 0;
  sub_1DDA9E5CC((void *)v11 + 12, *(void *)(a2 + 96), *(void *)(a2 + 104), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 104) - *(void *)(a2 + 96)) >> 3));
  unint64_t v19 = (_OWORD *)((char *)v19 + 120);
  sub_1DDA9E890(a1, v18);
  uint64_t v16 = a1[1];
  sub_1DDA9EAB4(v18);
  return v16;
}

void sub_1DDA9E5B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1DDA9EAB4((void **)va);
  _Unwind_Resume(a1);
}

void *sub_1DDA9E5CC(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    sub_1DDA9E654(result, a4);
    uint64_t result = sub_1DDA9E6A8((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1DDA9E634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1DDA9E7E4(&a9);
  _Unwind_Resume(a1);
}

char *sub_1DDA9E654(void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_1DDA17F78();
  }
  uint64_t result = (char *)sub_1DDA2A160((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

void *sub_1DDA9E6A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *uint64_t v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      sub_1DDA1D984(v4, *(const void **)v6, *(void *)(v6 + 8), (uint64_t)(*(void *)(v6 + 8) - *(void *)v6) >> 2);
      uint64_t v4 = v11 + 3;
      v11 += 3;
      v6 += 24;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_1DDA9E75C((uint64_t)v8);
  return v4;
}

void sub_1DDA9E748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1DDA9E75C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1DDA9E794(a1);
  }
  return a1;
}

void sub_1DDA9E794(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  if (v1 != v2)
  {
    uint64_t v3 = **(void **)(a1 + 16);
    do
    {
      unint64_t v5 = *(void **)(v3 - 24);
      v3 -= 24;
      uint64_t v4 = v5;
      if (v5)
      {
        *(void *)(v1 - 16) = v4;
        operator delete(v4);
      }
      uint64_t v1 = v3;
    }
    while (v3 != v2);
  }
}

void sub_1DDA9E7E4(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_1DDA9E838((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_1DDA9E838(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (v2 != *a1)
  {
    uint64_t v4 = a1[1];
    do
    {
      uint64_t v6 = *(void **)(v4 - 24);
      v4 -= 24;
      unint64_t v5 = v6;
      if (v6)
      {
        *(void *)(v2 - 16) = v5;
        operator delete(v5);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

uint64_t sub_1DDA9E890(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1DDA9E950((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_1DDA9E908(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x222222222222223) {
    sub_1DDA18058();
  }
  return operator new(120 * a2);
}

uint64_t sub_1DDA9E950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v17 = a6;
  *((void *)&v17 + 1) = a7;
  long long v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  v14[2] = &v17;
  if (a3 == a5)
  {
    uint64_t v12 = a6;
  }
  else
  {
    do
    {
      long long v8 = *(_OWORD *)(a3 - 120);
      *(_OWORD *)(v7 - 104) = *(_OWORD *)(a3 - 104);
      *(_OWORD *)(v7 - 120) = v8;
      long long v9 = *(_OWORD *)(a3 - 88);
      long long v10 = *(_OWORD *)(a3 - 72);
      long long v11 = *(_OWORD *)(a3 - 56);
      *(_OWORD *)(v7 - 40) = *(_OWORD *)(a3 - 40);
      *(_OWORD *)(v7 - 56) = v11;
      *(_OWORD *)(v7 - 72) = v10;
      *(_OWORD *)(v7 - 88) = v9;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      *(void *)(v7 - 24) = 0;
      *(_OWORD *)(v7 - 24) = *(_OWORD *)(a3 - 24);
      *(void *)(v7 - 8) = *(void *)(a3 - 8);
      *(void *)(a3 - 24) = 0;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      uint64_t v7 = *((void *)&v17 + 1) - 120;
      *((void *)&v17 + 1) -= 120;
      a3 -= 120;
    }
    while (a3 != a5);
    uint64_t v12 = v17;
  }
  char v15 = 1;
  sub_1DDA9EA2C((uint64_t)v14);
  return v12;
}

uint64_t sub_1DDA9EA2C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1DDA9EA64(a1);
  }
  return a1;
}

void sub_1DDA9EA64(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = (void **)(v1 + 96);
    sub_1DDA9E7E4(&v3);
    v1 += 120;
  }
}

void **sub_1DDA9EAB4(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_1DDA9EAE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 120;
    uint64_t v4 = (void **)(i - 24);
    sub_1DDA9E7E4(&v4);
  }
}

void sub_1DDA9EB40(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = v4 - 120;
        uint64_t v7 = (void **)(v4 - 24);
        sub_1DDA9E7E4(&v7);
        uint64_t v4 = v6;
      }
      while (v6 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_1DDA9EBBC(uint64_t a1)
{
  *(void *)a1 = &unk_1F3961310;
  sub_1DDA2A4CC(a1 + 2480, *(char **)(a1 + 2488));
  sub_1DDA2A4CC(a1 + 2456, *(char **)(a1 + 2464));
  sub_1DDA2A418(a1 + 2432, *(void **)(a1 + 2440));
  sub_1DDA49D14(a1 + 2408, *(void **)(a1 + 2416));
  sub_1DDA49D14(a1 + 2384, *(void **)(a1 + 2392));
  sub_1DDA2A4CC(a1 + 2360, *(char **)(a1 + 2368));
  sub_1DDA2A4CC(a1 + 2336, *(char **)(a1 + 2344));
  sub_1DDA2A4CC(a1 + 2312, *(char **)(a1 + 2320));
  sub_1DDA2A4CC(a1 + 2288, *(char **)(a1 + 2296));
  sub_1DDA2A4CC(a1 + 2264, *(char **)(a1 + 2272));
  sub_1DDA2A4CC(a1 + 2240, *(char **)(a1 + 2248));
  for (uint64_t i = 2216; i != 2144; i -= 24)
  {
    uint64_t v7 = (void **)(a1 + i);
    sub_1DDA18270(&v7);
  }
  sub_1DDA2A418(a1 + 2144, *(void **)(a1 + 2152));
  sub_1DDA2A418(a1 + 2120, *(void **)(a1 + 2128));
  if (*(unsigned char *)(a1 + 2112))
  {
    uint64_t v3 = *(void **)(a1 + 2088);
    if (v3)
    {
      *(void *)(a1 + 2096) = v3;
      operator delete(v3);
    }
  }
  sub_1DDA2A418(a1 + 1928, *(void **)(a1 + 1936));
  sub_1DDA2A4CC(a1 + 1888, *(char **)(a1 + 1896));
  sub_1DDA2A418(a1 + 1864, *(void **)(a1 + 1872));
  sub_1DDA2A4CC(a1 + 1840, *(char **)(a1 + 1848));
  sub_1DDA2A4CC(a1 + 1816, *(char **)(a1 + 1824));
  sub_1DDA9EE48(a1 + 1792, *(void **)(a1 + 1800));
  sub_1DDA9EE48(a1 + 1768, *(void **)(a1 + 1776));
  sub_1DDA9EE48(a1 + 1744, *(void **)(a1 + 1752));
  sub_1DDA9EE48(a1 + 1720, *(void **)(a1 + 1728));
  sub_1DDA9EE48(a1 + 1696, *(void **)(a1 + 1704));
  sub_1DDA9EE48(a1 + 1672, *(void **)(a1 + 1680));
  sub_1DDA9EE48(a1 + 1648, *(void **)(a1 + 1656));
  sub_1DDA9EE48(a1 + 1624, *(void **)(a1 + 1632));
  sub_1DDA2A418(a1 + 1576, *(void **)(a1 + 1584));
  sub_1DDA2A418(a1 + 1552, *(void **)(a1 + 1560));
  sub_1DDA2A4CC(a1 + 1528, *(char **)(a1 + 1536));
  sub_1DDA2A4CC(a1 + 1504, *(char **)(a1 + 1512));
  sub_1DDA2A418(a1 + 1480, *(void **)(a1 + 1488));
  sub_1DDA2A4CC(a1 + 1456, *(char **)(a1 + 1464));
  sub_1DDA2A4CC(a1 + 1432, *(char **)(a1 + 1440));
  sub_1DDA2A4CC(a1 + 1408, *(char **)(a1 + 1416));
  sub_1DDA2A4CC(a1 + 1384, *(char **)(a1 + 1392));
  sub_1DDA2A4CC(a1 + 1360, *(char **)(a1 + 1368));
  sub_1DDA2A4CC(a1 + 1336, *(char **)(a1 + 1344));
  sub_1DDA49D14(a1 + 1312, *(void **)(a1 + 1320));
  uint64_t v4 = *(void **)(a1 + 1288);
  if (v4)
  {
    *(void *)(a1 + 1296) = v4;
    operator delete(v4);
  }
  uint64_t v5 = *(void **)(a1 + 1248);
  if (v5)
  {
    *(void *)(a1 + 1256) = v5;
    operator delete(v5);
  }
  if (*(char *)(a1 + 1231) < 0) {
    operator delete(*(void **)(a1 + 1208));
  }
  if (*(char *)(a1 + 1207) < 0) {
    operator delete(*(void **)(a1 + 1184));
  }
  return sub_1DDA49A44(a1);
}

void sub_1DDA9EE48(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1DDA9EE48(a1, *a2);
    sub_1DDA9EE48(a1, a2[1]);
    sub_1DDA9EEA4((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_1DDA9EEA4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2)
  {
    *(void *)(a1 + 40) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

void sub_1DDA9EEFC(void *a1@<X1>, char *a2@<X2>, void **a3@<X3>, void **a4@<X4>, void *a5@<X8>)
{
  long long v10 = operator new(0x9E0uLL);
  sub_1DDA9EF90(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;

  sub_1DDA1AF34((uint64_t)a5, v10 + 4, (uint64_t)(v10 + 3));
}

void sub_1DDA9EF7C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1DDA9EF90(void *a1, void *a2, char *a3, void **a4, void **a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F3961680;
  sub_1DDA8FAE4((uint64_t)(a1 + 3), a2, *a3, *a4, *a5);
  return a1;
}

void sub_1DDA9EFE4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1DDA9EFF8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3961680;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1DDA9F018(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3961680;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1E01C3DC0);
}

uint64_t sub_1DDA9F06C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

uint64_t *sub_1DDA9F094(uint64_t **a1, void **a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (uint64_t **)sub_1DDA4B7C4((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    long long v8 = v6;
    sub_1DDA9F140((uint64_t)a1, a4, (uint64_t)v10);
    sub_1DDA25078(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_1DDA9F220((uint64_t)v10, 0);
  }
  return v7;
}