uint64_t sub_1002750C0(uint64_t a1)
{
  return sub_10028C43C(a1, qword_1004F50B8);
}

uint64_t sub_1002750E4(uint64_t a1)
{
  return sub_10028C4C0(a1, qword_1004F50D0);
}

uint64_t sub_100275108()
{
  uint64_t result = swift_getKeyPath();
  qword_1004F50E8 = result;
  return result;
}

uint64_t sub_100275130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_10002D0A8(&qword_100436CE0);
  v3[23] = swift_task_alloc();
  sub_10002D0A8(&qword_100436CE8);
  v3[24] = swift_task_alloc();
  sub_10002D0A8(&qword_1004371A0);
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_100300D60();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_10002D0A8(&qword_1004371A8);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return _swift_task_switch(sub_1002752F4, 0, 0);
}

uint64_t sub_1002752F4()
{
  sub_100300DA0();
  long long v1 = *(_OWORD *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v0 + 48) = v1;
  v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  unint64_t v3 = sub_100276220();
  void *v2 = v0;
  v2[1] = sub_1002753D8;
  uint64_t v4 = *(void *)(v0 + 256);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v4, v0 + 40, sub_100300BEC, 0, &type metadata for AccessibilityZoomPanningStyleEntity, v3);
}

uint64_t sub_1002753D8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002754D4, 0, 0);
}

uint64_t sub_1002754D4()
{
  sub_100300DA0();
  v0[11] = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  v0[34] = v1;
  v0[35] = v2;
  v0[12] = v1;
  v0[13] = v2;
  sub_100300DA0();
  if (qword_10041F8C0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F50E8;
  v0[36] = qword_1004F50E8;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  uint64_t v5 = sub_100034B8C(&qword_100437178, &qword_100437180);
  *uint64_t v4 = v0;
  v4[1] = sub_10027562C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 39, v3, &type metadata for AXZoomPanStyleAppEnum, v5);
}

uint64_t sub_10027562C()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1003008C8;
  }
  else {
    uint64_t v2 = sub_10027579C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10027579C()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 224);
  sub_100300DA0();
  long long v5 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 112) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 120) = v5;
  uint64_t v6 = sub_100301000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_100301030();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_100274870();
  sub_100276434();
  sub_100300D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v11, v2);
  sub_100300D50();
  sub_100300D70();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100275A14()
{
  uint64_t v0 = sub_10002D0A8(&qword_1004371B0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10041F8C0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100300E70();
  swift_release();
  sub_100276434();
  sub_100034B8C(&qword_1004371B8, &qword_1004371B0);
  sub_100300E60();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100275B7C(uint64_t a1, uint64_t a2)
{
  return sub_10028D0B8(a1, a2, &qword_10041F8C0);
}

unint64_t sub_100275BA4()
{
  unint64_t result = qword_100434D58;
  if (!qword_100434D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434D58);
  }
  return result;
}

unint64_t sub_100275BFC()
{
  unint64_t result = qword_100434D60;
  if (!qword_100434D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434D60);
  }
  return result;
}

uint64_t sub_100275C50()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100275C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028D204(a1, a2, a3, (void (*)(void))sub_100274870);
}

uint64_t sub_100275C9C@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F8B0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1004F50B8, a1);
}

uint64_t sub_100275CD4@<X0>(uint64_t a1@<X8>)
{
  return sub_10028D2B4(&qword_10041F8B8, (uint64_t)qword_1004F50D0, a1);
}

uint64_t sub_100275CF8(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100034BD0;
  return sub_100275130(a1, v5, v4);
}

uint64_t sub_100275DA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002F64F8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100275DCC()
{
  return 0xD000000000000034;
}

unint64_t sub_100275DEC()
{
  unint64_t result = qword_100434D70;
  if (!qword_100434D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434D70);
  }
  return result;
}

uint64_t sub_100275E44(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100275E64, 0, 0);
}

uint64_t sub_100275E64()
{
  uint64_t v1 = *(char **)(v0 + 16);
  id v2 = [self sharedInstance];
  id v3 = [v2 laserZoomPanningStyle];

  if (v3 == (id)2) {
    char v4 = 2;
  }
  else {
    char v4 = v3 == (id)1;
  }
  *uint64_t v1 = v4;
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100275F1C(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100275F40, 0, 0);
}

uint64_t sub_100275F40()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self sharedInstance];
  [v2 setLaserZoomPanningStyle:v1];

  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100275FD8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100275FF8, 0, 0);
}

uint64_t sub_100275FF8()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *uint64_t v1 = sub_1002F68E8();
  v1[1] = v2;
  v1[2] = v3;
  char v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_100276068()
{
  unint64_t result = qword_100434D80;
  if (!qword_100434D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434D80);
  }
  return result;
}

uint64_t sub_1002760BC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100276684();
  *char v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100276170()
{
  unint64_t result = qword_100434D90;
  if (!qword_100434D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434D90);
  }
  return result;
}

unint64_t sub_1002761C8()
{
  unint64_t result = qword_100434D98;
  if (!qword_100434D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434D98);
  }
  return result;
}

unint64_t sub_100276220()
{
  unint64_t result = qword_100434DA0[0];
  if (!qword_100434DA0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100434DA0);
  }
  return result;
}

uint64_t sub_100276274(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100276684();
  *unint64_t v5 = v2;
  v5[1] = sub_1003008E0;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100276328(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100276684();
  *char v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1002763DC()
{
  unint64_t result = qword_100434DB8;
  if (!qword_100434DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434DB8);
  }
  return result;
}

unint64_t sub_100276434()
{
  unint64_t result = qword_100434DC0;
  if (!qword_100434DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434DC0);
  }
  return result;
}

uint64_t sub_100276488()
{
  return sub_10028DC04(&qword_100434DC8, qword_100434DD0, (void (*)(void))sub_100276434);
}

uint64_t sub_1002764C4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100276068();
  *unint64_t v5 = v2;
  v5[1] = sub_100034BD0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10027657C()
{
  unint64_t result = qword_100434DE8;
  if (!qword_100434DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434DE8);
  }
  return result;
}

unint64_t sub_1002765D4()
{
  unint64_t result = qword_100434DF0;
  if (!qword_100434DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434DF0);
  }
  return result;
}

unint64_t sub_10027662C()
{
  unint64_t result = qword_100434DF8;
  if (!qword_100434DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434DF8);
  }
  return result;
}

unint64_t sub_100276684()
{
  unint64_t result = qword_100434E00;
  if (!qword_100434E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434E00);
  }
  return result;
}

uint64_t sub_1002766D8()
{
  uint64_t v0 = qword_100428830;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100276714()
{
  unint64_t result = qword_100434E08;
  if (!qword_100434E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434E08);
  }
  return result;
}

uint64_t sub_100276768(uint64_t a1, uint64_t a2)
{
  return sub_10028DF48(a1, a2, &qword_100437158, &qword_100437160, (void (*)(uint64_t))sub_100276220);
}

unint64_t sub_100276794()
{
  unint64_t result = qword_100434E10;
  if (!qword_100434E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434E10);
  }
  return result;
}

unint64_t sub_1002767EC()
{
  unint64_t result = qword_100434E18;
  if (!qword_100434E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434E18);
  }
  return result;
}

unint64_t sub_100276844()
{
  unint64_t result = qword_100434E20;
  if (!qword_100434E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434E20);
  }
  return result;
}

uint64_t sub_100276898()
{
  sub_1002FC6F8();
  uint64_t v2 = sub_100300F50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100061330(v3, v0, v2, v1);
}

uint64_t sub_10027692C@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F8A8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1004F50A0, a1);
}

uint64_t sub_100276964()
{
  return sub_100034B8C(&qword_100434E30, &qword_100434E38);
}

uint64_t sub_1002769A0(uint64_t a1)
{
  unint64_t v2 = sub_100276220();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1002769F0()
{
  unint64_t result = qword_100434E40;
  if (!qword_100434E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434E40);
  }
  return result;
}

uint64_t sub_100276A48(uint64_t a1)
{
  unint64_t v2 = sub_100276844();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100276A98()
{
  unint64_t result = qword_100434E48;
  if (!qword_100434E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434E48);
  }
  return result;
}

uint64_t sub_100276AEC()
{
  return sub_100034B8C(&qword_100434E50, &qword_100434E58);
}

uint64_t sub_100276B28(uint64_t a1)
{
  return sub_10028BB20(a1, qword_1004F50F0);
}

uint64_t sub_100276B4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v1 = sub_10002D0A8(&qword_100420A80);
  __chkstk_darwin(v1 - 8);
  v65 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v3 - 8);
  v64 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100301150();
  __chkstk_darwin(v5 - 8);
  v66 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100301130();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1003010C0();
  uint64_t v68 = *(void *)(v72 - 8);
  uint64_t v11 = __chkstk_darwin(v72);
  v58 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  v62 = (char *)&v55 - v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v55 - v15;
  uint64_t v17 = sub_100301430();
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  v63 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  v69 = (char *)&v55 - v21;
  __chkstk_darwin(v20);
  uint64_t v22 = sub_1003010D0();
  uint64_t v60 = *(void *)(v22 - 8);
  uint64_t v61 = v22;
  uint64_t v23 = __chkstk_darwin(v22);
  v57 = (char *)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v26 = (char *)&v55 - v25;
  sub_100301420();
  sub_1003010F0();
  id v27 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v28);
  v30 = v29;
  id v31 = [v27 initWithURL:v29];

  v32 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v67 = v7;
  v70 = v32;
  uint64_t v71 = v8 + 8;
  uint64_t result = v32(v10, v7);
  if (!v31)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v34 = [v31 bundleURL];

  sub_100301110();
  v35 = *(void (**)(void))(v68 + 104);
  LODWORD(v68) = enum case for LocalizedStringResource.BundleDescription.atURL(_:);
  v56 = (void (*)(char *, void, uint64_t))v35;
  v35(v16);
  sub_100301140();
  v55 = v26;
  sub_1003010E0();
  sub_100301420();
  sub_1003010F0();
  id v36 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v37);
  v39 = v38;
  id v40 = [v36 initWithURL:v38];

  uint64_t v41 = v67;
  uint64_t result = v70(v10, v67);
  if (!v40)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v42 = [v40 bundleURL];

  v43 = v62;
  sub_100301110();

  v44 = v56;
  v56(v43, v68, v72);
  sub_100301140();
  v45 = v64;
  sub_1003010E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v45, 0, 1, v61);
  v46 = v65;
  sub_100300E80();
  uint64_t v47 = sub_100300E90();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 0, 1, v47);
  sub_100301420();
  sub_1003010F0();
  id v48 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v49);
  v51 = v50;
  id v52 = [v48 initWithURL:v50];

  uint64_t result = v70(v10, v41);
  if (v52)
  {
    id v53 = [v52 bundleURL];

    v54 = v58;
    sub_100301110();

    v44(v54, v68, v72);
    sub_100301140();
    sub_1003010E0();
    return sub_100300EB0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1002772F8(uint64_t a1)
{
  return sub_10028C43C(a1, qword_1004F5108);
}

uint64_t sub_10027731C(uint64_t a1)
{
  return sub_10028C4C0(a1, qword_1004F5120);
}

uint64_t sub_100277340()
{
  uint64_t result = swift_getKeyPath();
  qword_1004F5138 = result;
  return result;
}

uint64_t sub_100277368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_10002D0A8(&qword_100436CE0);
  v3[23] = swift_task_alloc();
  sub_10002D0A8(&qword_100436CE8);
  v3[24] = swift_task_alloc();
  sub_10002D0A8(&qword_100437130);
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_100300D60();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_10002D0A8(&qword_100437138);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return _swift_task_switch(sub_10027752C, 0, 0);
}

uint64_t sub_10027752C()
{
  sub_100300DA0();
  long long v1 = *(_OWORD *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  unint64_t v3 = sub_1002783E4();
  void *v2 = v0;
  v2[1] = sub_100277610;
  uint64_t v4 = *(void *)(v0 + 256);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v4, v0 + 40, sub_100300BF0, 0, &type metadata for AccessibilityZoomAdjustsPointerSizeEnabledEntity, v3);
}

uint64_t sub_100277610()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10027770C, 0, 0);
}

uint64_t sub_10027770C()
{
  sub_100300DA0();
  *(void *)(v0 + 88) = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  *(void *)(v0 + 272) = v1;
  *(void *)(v0 + 280) = v2;
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v2;
  sub_100300DA0();
  *(unsigned char *)(v0 + 312) = *(unsigned char *)(v0 + 313);
  if (qword_10041F8E0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F5138;
  *(void *)(v0 + 288) = qword_1004F5138;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v4;
  uint64_t v5 = sub_100034B8C(&qword_100437110, &qword_100437118);
  *uint64_t v4 = v0;
  v4[1] = sub_10027786C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 312, v3, &type metadata for Bool, v5);
}

uint64_t sub_10027786C()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1003008C8;
  }
  else {
    uint64_t v2 = sub_1002779DC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002779DC()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 224);
  sub_100300DA0();
  long long v5 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 112) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 120) = v5;
  uint64_t v6 = sub_100301000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_100301030();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_100276A98();
  sub_1002785F8();
  sub_100300D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v11, v2);
  sub_100300D50();
  sub_100300D70();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100277C54()
{
  uint64_t v0 = sub_10002D0A8(&qword_100437140);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10041F8E0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100300E70();
  swift_release();
  sub_1002785F8();
  sub_100034B8C(&qword_100437148, &qword_100437140);
  sub_100300E60();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100277DBC(uint64_t a1, uint64_t a2)
{
  return sub_10028D0B8(a1, a2, &qword_10041F8E0);
}

unint64_t sub_100277DE4()
{
  unint64_t result = qword_100434E60;
  if (!qword_100434E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434E60);
  }
  return result;
}

unint64_t sub_100277E3C()
{
  unint64_t result = qword_100434E68;
  if (!qword_100434E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434E68);
  }
  return result;
}

uint64_t sub_100277E90()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100277EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028D204(a1, a2, a3, (void (*)(void))sub_100276A98);
}

uint64_t sub_100277EDC@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F8D0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1004F5108, a1);
}

uint64_t sub_100277F14@<X0>(uint64_t a1@<X8>)
{
  return sub_10028D2B4(&qword_10041F8D8, (uint64_t)qword_1004F5120, a1);
}

uint64_t sub_100277F38(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100034BD0;
  return sub_100277368(a1, v5, v4);
}

uint64_t sub_100277FE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002F6CC4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10027800C()
{
  return 0xD000000000000041;
}

unint64_t sub_10027802C()
{
  unint64_t result = qword_100434E78;
  if (!qword_100434E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434E78);
  }
  return result;
}

uint64_t sub_100278084(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1002780A4, 0, 0);
}

uint64_t sub_1002780A4()
{
  uint64_t v1 = *(BOOL **)(v0 + 16);
  *uint64_t v1 = _AXSPointerScaleWithZoomLevelEnabled() != 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100278114(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100278138, 0, 0);
}

uint64_t sub_100278138()
{
  _AXSPointerScaleWithZoomLevelSetEnabled();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10027819C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1002781BC, 0, 0);
}

uint64_t sub_1002781BC()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *uint64_t v1 = sub_1002F7108();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10027822C()
{
  unint64_t result = qword_100434E88;
  if (!qword_100434E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434E88);
  }
  return result;
}

uint64_t sub_100278280(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100278848();
  *uint64_t v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100278334()
{
  unint64_t result = qword_100434E98;
  if (!qword_100434E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434E98);
  }
  return result;
}

unint64_t sub_10027838C()
{
  unint64_t result = qword_100434EA0;
  if (!qword_100434EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434EA0);
  }
  return result;
}

unint64_t sub_1002783E4()
{
  unint64_t result = qword_100434EA8[0];
  if (!qword_100434EA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100434EA8);
  }
  return result;
}

uint64_t sub_100278438(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100278848();
  *unint64_t v5 = v2;
  v5[1] = sub_1003008E0;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1002784EC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100278848();
  *uint64_t v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1002785A0()
{
  unint64_t result = qword_100434EC0;
  if (!qword_100434EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434EC0);
  }
  return result;
}

unint64_t sub_1002785F8()
{
  unint64_t result = qword_100434EC8;
  if (!qword_100434EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434EC8);
  }
  return result;
}

uint64_t sub_10027864C()
{
  return sub_10028DC04(&qword_100434ED0, qword_100434ED8, (void (*)(void))sub_1002785F8);
}

uint64_t sub_100278688(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10027822C();
  *unint64_t v5 = v2;
  v5[1] = sub_100034BD0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_100278740()
{
  unint64_t result = qword_100434EF0;
  if (!qword_100434EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434EF0);
  }
  return result;
}

unint64_t sub_100278798()
{
  unint64_t result = qword_100434EF8;
  if (!qword_100434EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434EF8);
  }
  return result;
}

unint64_t sub_1002787F0()
{
  unint64_t result = qword_100434F00;
  if (!qword_100434F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434F00);
  }
  return result;
}

unint64_t sub_100278848()
{
  unint64_t result = qword_100434F08;
  if (!qword_100434F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434F08);
  }
  return result;
}

uint64_t sub_10027889C()
{
  uint64_t v0 = qword_100428840;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1002788D8()
{
  unint64_t result = qword_100434F10;
  if (!qword_100434F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434F10);
  }
  return result;
}

uint64_t sub_10027892C(uint64_t a1, uint64_t a2)
{
  return sub_10028DF48(a1, a2, &qword_1004370F0, &qword_1004370F8, (void (*)(uint64_t))sub_1002783E4);
}

unint64_t sub_100278958()
{
  unint64_t result = qword_100434F18;
  if (!qword_100434F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434F18);
  }
  return result;
}

unint64_t sub_1002789B0()
{
  unint64_t result = qword_100434F20;
  if (!qword_100434F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434F20);
  }
  return result;
}

unint64_t sub_100278A08()
{
  unint64_t result = qword_100434F28;
  if (!qword_100434F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434F28);
  }
  return result;
}

uint64_t sub_100278A5C()
{
  sub_1002FC6A4();
  uint64_t v2 = sub_100300F50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100061330(v3, v0, v2, v1);
}

uint64_t sub_100278AF0@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F8C8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1004F50F0, a1);
}

uint64_t sub_100278B28()
{
  return sub_100034B8C(&qword_100434F38, &qword_100434F40);
}

uint64_t sub_100278B64(uint64_t a1)
{
  unint64_t v2 = sub_1002783E4();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100278BB4()
{
  unint64_t result = qword_100434F48;
  if (!qword_100434F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434F48);
  }
  return result;
}

uint64_t sub_100278C0C(uint64_t a1)
{
  unint64_t v2 = sub_100278A08();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100278C5C()
{
  unint64_t result = qword_100434F50;
  if (!qword_100434F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434F50);
  }
  return result;
}

uint64_t sub_100278CB0()
{
  return sub_100034B8C(&qword_100434F58, &qword_100434F60);
}

uint64_t sub_100278CEC(uint64_t a1)
{
  return sub_10028BB20(a1, qword_1004F5140);
}

uint64_t sub_100278D18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v1 = sub_10002D0A8(&qword_100420A80);
  __chkstk_darwin(v1 - 8);
  v64 = (char *)v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v3 - 8);
  v63 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100301150();
  __chkstk_darwin(v5 - 8);
  v65 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100301130();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v70 = v11;
  uint64_t v71 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v57 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v61 = (char *)v56 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v56 - v17;
  uint64_t v19 = sub_100301430();
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  v62 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  v66 = (char *)v56 - v23;
  __chkstk_darwin(v22);
  uint64_t v24 = sub_1003010D0();
  uint64_t v59 = *(void *)(v24 - 8);
  uint64_t v60 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  v56[1] = (char *)v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)v56 - v27;
  sub_100301420();
  sub_1003010F0();
  id v29 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v30);
  v32 = v31;
  id v33 = [v29 initWithURL:v31];

  id v34 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v68 = v8 + 8;
  uint64_t v69 = v7;
  uint64_t v67 = v34;
  uint64_t result = v34(v10, v7);
  if (!v33)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v36 = [v33 bundleURL];

  sub_100301110();
  uint64_t v37 = enum case for LocalizedStringResource.BundleDescription.atURL(_:);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 104);
  v71 += 104;
  v38(v18, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v70);
  sub_100301140();
  v56[0] = v28;
  sub_1003010E0();
  sub_100301420();
  sub_1003010F0();
  id v39 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v40);
  id v42 = v41;
  id v43 = [v39 initWithURL:v41];

  uint64_t result = v67(v10, v69);
  if (!v43)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v44 = [v43 bundleURL];

  v45 = v61;
  sub_100301110();

  v38(v45, v37, v70);
  sub_100301140();
  v46 = v63;
  sub_1003010E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v46, 0, 1, v60);
  uint64_t v47 = v64;
  sub_100300E80();
  uint64_t v48 = sub_100300E90();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  sub_100301420();
  sub_1003010F0();
  id v49 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v50);
  id v52 = v51;
  id v53 = [v49 initWithURL:v51];

  uint64_t result = v67(v10, v69);
  if (v53)
  {
    id v54 = [v53 bundleURL];

    v55 = v57;
    sub_100301110();

    v38(v55, v37, v70);
    sub_100301140();
    sub_1003010E0();
    return sub_100300EB0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1002794AC(uint64_t a1)
{
  return sub_10028C43C(a1, qword_1004F5158);
}

uint64_t sub_1002794D0(uint64_t a1)
{
  return sub_10028C4C0(a1, qword_1004F5170);
}

uint64_t sub_1002794F4()
{
  uint64_t result = swift_getKeyPath();
  qword_1004F5188 = result;
  return result;
}

uint64_t sub_10027951C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_10002D0A8(&qword_100436CE0);
  v3[23] = swift_task_alloc();
  sub_10002D0A8(&qword_100436CE8);
  v3[24] = swift_task_alloc();
  sub_10002D0A8(&qword_1004370C8);
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_100300D60();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_10002D0A8(&qword_1004370D0);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return _swift_task_switch(sub_1002796E0, 0, 0);
}

uint64_t sub_1002796E0()
{
  sub_100300DA0();
  long long v1 = *(_OWORD *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  unint64_t v3 = sub_10027A600();
  void *v2 = v0;
  v2[1] = sub_1002797C4;
  uint64_t v4 = *(void *)(v0 + 256);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v4, v0 + 40, sub_100300BF4, 0, &type metadata for AccessibilityZoomShowControllerEnabledEntity, v3);
}

uint64_t sub_1002797C4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002798C0, 0, 0);
}

uint64_t sub_1002798C0()
{
  sub_100300DA0();
  *(void *)(v0 + 88) = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  *(void *)(v0 + 272) = v1;
  *(void *)(v0 + 280) = v2;
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v2;
  sub_100300DA0();
  *(unsigned char *)(v0 + 312) = *(unsigned char *)(v0 + 313);
  if (qword_10041F900 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F5188;
  *(void *)(v0 + 288) = qword_1004F5188;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v4;
  uint64_t v5 = sub_100034B8C(&qword_1004370A8, &qword_1004370B0);
  *uint64_t v4 = v0;
  v4[1] = sub_100279A20;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 312, v3, &type metadata for Bool, v5);
}

uint64_t sub_100279A20()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1003008C8;
  }
  else {
    uint64_t v2 = sub_100279B90;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100279B90()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 224);
  sub_100300DA0();
  long long v5 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 112) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 120) = v5;
  uint64_t v6 = sub_100301000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_100301030();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_100278C5C();
  sub_10027A814();
  sub_100300D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v11, v2);
  sub_100300D50();
  sub_100300D70();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100279E08()
{
  uint64_t v0 = sub_10002D0A8(&qword_1004370D8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10041F900 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100300E70();
  swift_release();
  sub_10027A814();
  sub_100034B8C(&qword_1004370E0, &qword_1004370D8);
  sub_100300E60();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100279F70(uint64_t a1, uint64_t a2)
{
  return sub_10028D0B8(a1, a2, &qword_10041F900);
}

unint64_t sub_100279F98()
{
  unint64_t result = qword_100434F68;
  if (!qword_100434F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434F68);
  }
  return result;
}

unint64_t sub_100279FF0()
{
  unint64_t result = qword_100434F70;
  if (!qword_100434F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434F70);
  }
  return result;
}

uint64_t sub_10027A044()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10027A078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028D204(a1, a2, a3, (void (*)(void))sub_100278C5C);
}

uint64_t sub_10027A090@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F8F0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1004F5158, a1);
}

uint64_t sub_10027A0C8@<X0>(uint64_t a1@<X8>)
{
  return sub_10028D2B4(&qword_10041F8F8, (uint64_t)qword_1004F5170, a1);
}

uint64_t sub_10027A0EC(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100034BD0;
  return sub_10027951C(a1, v5, v4);
}

uint64_t sub_10027A198@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002F74D4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10027A1C0()
{
  return 0xD00000000000003DLL;
}

unint64_t sub_10027A1E0()
{
  unint64_t result = qword_100434F80;
  if (!qword_100434F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434F80);
  }
  return result;
}

uint64_t sub_10027A238(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10027A258, 0, 0);
}

uint64_t sub_10027A258()
{
  uint64_t v1 = *(unsigned __int8 **)(v0 + 16);
  id v2 = [self sharedInstance];
  unsigned __int8 v3 = [v2 zoomShouldShowSlug];

  *uint64_t v1 = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10027A2FC(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10027A320, 0, 0);
}

uint64_t sub_10027A320()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self sharedInstance];
  [v2 setZoomShouldShowSlug:v1];

  unsigned __int8 v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10027A3B8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10027A3D8, 0, 0);
}

uint64_t sub_10027A3D8()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *uint64_t v1 = sub_1002F7918();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10027A448()
{
  unint64_t result = qword_100434F90;
  if (!qword_100434F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434F90);
  }
  return result;
}

uint64_t sub_10027A49C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10027AA64();
  *uint64_t v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10027A550()
{
  unint64_t result = qword_100434FA0;
  if (!qword_100434FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434FA0);
  }
  return result;
}

unint64_t sub_10027A5A8()
{
  unint64_t result = qword_100434FA8;
  if (!qword_100434FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434FA8);
  }
  return result;
}

unint64_t sub_10027A600()
{
  unint64_t result = qword_100434FB0[0];
  if (!qword_100434FB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100434FB0);
  }
  return result;
}

uint64_t sub_10027A654(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10027AA64();
  *unint64_t v5 = v2;
  v5[1] = sub_1003008E0;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10027A708(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10027AA64();
  *uint64_t v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10027A7BC()
{
  unint64_t result = qword_100434FC8;
  if (!qword_100434FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434FC8);
  }
  return result;
}

unint64_t sub_10027A814()
{
  unint64_t result = qword_100434FD0;
  if (!qword_100434FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434FD0);
  }
  return result;
}

uint64_t sub_10027A868()
{
  return sub_10028DC04(&qword_100434FD8, qword_100434FE0, (void (*)(void))sub_10027A814);
}

uint64_t sub_10027A8A4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10027A448();
  *unint64_t v5 = v2;
  v5[1] = sub_100034BD0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10027A95C()
{
  unint64_t result = qword_100434FF8;
  if (!qword_100434FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100434FF8);
  }
  return result;
}

unint64_t sub_10027A9B4()
{
  unint64_t result = qword_100435000;
  if (!qword_100435000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435000);
  }
  return result;
}

unint64_t sub_10027AA0C()
{
  unint64_t result = qword_100435008;
  if (!qword_100435008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435008);
  }
  return result;
}

unint64_t sub_10027AA64()
{
  unint64_t result = qword_100435010;
  if (!qword_100435010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435010);
  }
  return result;
}

uint64_t sub_10027AAB8()
{
  uint64_t v0 = qword_100428850;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10027AAF4()
{
  unint64_t result = qword_100435018;
  if (!qword_100435018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435018);
  }
  return result;
}

uint64_t sub_10027AB48(uint64_t a1, uint64_t a2)
{
  return sub_10028DF48(a1, a2, &qword_100437088, &qword_100437090, (void (*)(uint64_t))sub_10027A600);
}

unint64_t sub_10027AB74()
{
  unint64_t result = qword_100435020;
  if (!qword_100435020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435020);
  }
  return result;
}

unint64_t sub_10027ABCC()
{
  unint64_t result = qword_100435028;
  if (!qword_100435028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435028);
  }
  return result;
}

unint64_t sub_10027AC24()
{
  unint64_t result = qword_100435030;
  if (!qword_100435030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435030);
  }
  return result;
}

uint64_t sub_10027AC78()
{
  sub_1002FC650();
  uint64_t v2 = sub_100300F50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100061330(v3, v0, v2, v1);
}

uint64_t sub_10027AD0C@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F8E8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1004F5140, a1);
}

uint64_t sub_10027AD44()
{
  return sub_100034B8C(&qword_100435040, &qword_100435048);
}

uint64_t sub_10027AD80(uint64_t a1)
{
  unint64_t v2 = sub_10027A600();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10027ADD0()
{
  unint64_t result = qword_100435050;
  if (!qword_100435050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435050);
  }
  return result;
}

uint64_t sub_10027AE28(uint64_t a1)
{
  unint64_t v2 = sub_10027AC24();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10027AE78()
{
  unint64_t result = qword_100435058;
  if (!qword_100435058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435058);
  }
  return result;
}

uint64_t sub_10027AECC()
{
  return sub_100034B8C(&qword_100435060, &qword_100435068);
}

uint64_t sub_10027AF08(uint64_t a1)
{
  return sub_10028BB20(a1, qword_1004F5190);
}

uint64_t sub_10027AF2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v1 = sub_10002D0A8(&qword_100420A80);
  __chkstk_darwin(v1 - 8);
  v64 = (char *)v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v3 - 8);
  v63 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100301150();
  __chkstk_darwin(v5 - 8);
  v65 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100301130();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v70 = v11;
  uint64_t v71 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v57 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v61 = (char *)v56 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v56 - v17;
  uint64_t v19 = sub_100301430();
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  v62 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  v66 = (char *)v56 - v23;
  __chkstk_darwin(v22);
  uint64_t v24 = sub_1003010D0();
  uint64_t v59 = *(void *)(v24 - 8);
  uint64_t v60 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  v56[1] = (char *)v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)v56 - v27;
  sub_100301420();
  sub_1003010F0();
  id v29 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v30);
  v32 = v31;
  id v33 = [v29 initWithURL:v31];

  id v34 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v68 = v8 + 8;
  uint64_t v69 = v7;
  uint64_t v67 = v34;
  uint64_t result = v34(v10, v7);
  if (!v33)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v36 = [v33 bundleURL];

  sub_100301110();
  uint64_t v37 = enum case for LocalizedStringResource.BundleDescription.atURL(_:);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 104);
  v71 += 104;
  v38(v18, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v70);
  sub_100301140();
  v56[0] = v28;
  sub_1003010E0();
  sub_100301420();
  sub_1003010F0();
  id v39 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v40);
  id v42 = v41;
  id v43 = [v39 initWithURL:v41];

  uint64_t result = v67(v10, v69);
  if (!v43)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v44 = [v43 bundleURL];

  v45 = v61;
  sub_100301110();

  v38(v45, v37, v70);
  sub_100301140();
  v46 = v63;
  sub_1003010E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v46, 0, 1, v60);
  uint64_t v47 = v64;
  sub_100300E80();
  uint64_t v48 = sub_100300E90();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  sub_100301420();
  sub_1003010F0();
  id v49 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v50);
  id v52 = v51;
  id v53 = [v49 initWithURL:v51];

  uint64_t result = v67(v10, v69);
  if (v53)
  {
    id v54 = [v53 bundleURL];

    v55 = v57;
    sub_100301110();

    v38(v55, v37, v70);
    sub_100301140();
    sub_1003010E0();
    return sub_100300EB0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10027B6B4(uint64_t a1)
{
  return sub_10028C43C(a1, qword_1004F51A8);
}

uint64_t sub_10027B6D8(uint64_t a1)
{
  return sub_10028C4C0(a1, qword_1004F51C0);
}

uint64_t sub_10027B6FC()
{
  uint64_t result = swift_getKeyPath();
  qword_1004F51D8 = result;
  return result;
}

uint64_t sub_10027B724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_10002D0A8(&qword_100436CE0);
  v3[23] = swift_task_alloc();
  sub_10002D0A8(&qword_100436CE8);
  v3[24] = swift_task_alloc();
  sub_10002D0A8(&qword_100437060);
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_100300D60();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_10002D0A8(&qword_100437068);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return _swift_task_switch(sub_10027B8E8, 0, 0);
}

uint64_t sub_10027B8E8()
{
  sub_100300DA0();
  long long v1 = *(_OWORD *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  unint64_t v3 = sub_10027C808();
  void *v2 = v0;
  v2[1] = sub_10027B9CC;
  uint64_t v4 = *(void *)(v0 + 256);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v4, v0 + 40, sub_100300BF8, 0, &type metadata for AccessibilityZoomAdjustZoomLevelWithControllerEnabledEntity, v3);
}

uint64_t sub_10027B9CC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10027BAC8, 0, 0);
}

uint64_t sub_10027BAC8()
{
  sub_100300DA0();
  *(void *)(v0 + 88) = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  *(void *)(v0 + 272) = v1;
  *(void *)(v0 + 280) = v2;
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v2;
  sub_100300DA0();
  *(unsigned char *)(v0 + 312) = *(unsigned char *)(v0 + 313);
  if (qword_10041F920 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F51D8;
  *(void *)(v0 + 288) = qword_1004F51D8;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v4;
  uint64_t v5 = sub_100034B8C(&qword_100437040, &qword_100437048);
  *uint64_t v4 = v0;
  v4[1] = sub_10027BC28;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 312, v3, &type metadata for Bool, v5);
}

uint64_t sub_10027BC28()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1003008C8;
  }
  else {
    uint64_t v2 = sub_10027BD98;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10027BD98()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 224);
  sub_100300DA0();
  long long v5 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 112) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 120) = v5;
  uint64_t v6 = sub_100301000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_100301030();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_10027AE78();
  sub_10027CA1C();
  sub_100300D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v11, v2);
  sub_100300D50();
  sub_100300D70();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10027C010()
{
  uint64_t v0 = sub_10002D0A8(&qword_100437070);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10041F920 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100300E70();
  swift_release();
  sub_10027CA1C();
  sub_100034B8C(&qword_100437078, &qword_100437070);
  sub_100300E60();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10027C178(uint64_t a1, uint64_t a2)
{
  return sub_10028D0B8(a1, a2, &qword_10041F920);
}

unint64_t sub_10027C1A0()
{
  unint64_t result = qword_100435070;
  if (!qword_100435070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435070);
  }
  return result;
}

unint64_t sub_10027C1F8()
{
  unint64_t result = qword_100435078;
  if (!qword_100435078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435078);
  }
  return result;
}

uint64_t sub_10027C24C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10027C280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028D204(a1, a2, a3, (void (*)(void))sub_10027AE78);
}

uint64_t sub_10027C298@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F910, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1004F51A8, a1);
}

uint64_t sub_10027C2D0@<X0>(uint64_t a1@<X8>)
{
  return sub_10028D2B4(&qword_10041F918, (uint64_t)qword_1004F51C0, a1);
}

uint64_t sub_10027C2F4(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100034BD0;
  return sub_10027B724(a1, v5, v4);
}

uint64_t sub_10027C3A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002F7CE8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10027C3C8()
{
  return 0xD00000000000004CLL;
}

unint64_t sub_10027C3E8()
{
  unint64_t result = qword_100435088;
  if (!qword_100435088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435088);
  }
  return result;
}

uint64_t sub_10027C440(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10027C460, 0, 0);
}

uint64_t sub_10027C460()
{
  uint64_t v1 = *(unsigned __int8 **)(v0 + 16);
  id v2 = [self sharedInstance];
  unsigned __int8 v3 = [v2 zoomSlugTapAndSlideToAdjustZoomLevelEnabled];

  *uint64_t v1 = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10027C504(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10027C528, 0, 0);
}

uint64_t sub_10027C528()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self sharedInstance];
  [v2 setZoomSlugTapAndSlideToAdjustZoomLevelEnabled:v1];

  unsigned __int8 v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10027C5C0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10027C5E0, 0, 0);
}

uint64_t sub_10027C5E0()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *uint64_t v1 = sub_1002F812C();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10027C650()
{
  unint64_t result = qword_100435098;
  if (!qword_100435098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435098);
  }
  return result;
}

uint64_t sub_10027C6A4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10027CC6C();
  *uint64_t v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10027C758()
{
  unint64_t result = qword_1004350A8;
  if (!qword_1004350A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004350A8);
  }
  return result;
}

unint64_t sub_10027C7B0()
{
  unint64_t result = qword_1004350B0;
  if (!qword_1004350B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004350B0);
  }
  return result;
}

unint64_t sub_10027C808()
{
  unint64_t result = qword_1004350B8[0];
  if (!qword_1004350B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1004350B8);
  }
  return result;
}

uint64_t sub_10027C85C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10027CC6C();
  *unint64_t v5 = v2;
  v5[1] = sub_1003008E0;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10027C910(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10027CC6C();
  *uint64_t v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10027C9C4()
{
  unint64_t result = qword_1004350D0;
  if (!qword_1004350D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004350D0);
  }
  return result;
}

unint64_t sub_10027CA1C()
{
  unint64_t result = qword_1004350D8;
  if (!qword_1004350D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004350D8);
  }
  return result;
}

uint64_t sub_10027CA70()
{
  return sub_10028DC04(&qword_1004350E0, qword_1004350E8, (void (*)(void))sub_10027CA1C);
}

uint64_t sub_10027CAAC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10027C650();
  *unint64_t v5 = v2;
  v5[1] = sub_100034BD0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10027CB64()
{
  unint64_t result = qword_100435100;
  if (!qword_100435100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435100);
  }
  return result;
}

unint64_t sub_10027CBBC()
{
  unint64_t result = qword_100435108;
  if (!qword_100435108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435108);
  }
  return result;
}

unint64_t sub_10027CC14()
{
  unint64_t result = qword_100435110;
  if (!qword_100435110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435110);
  }
  return result;
}

unint64_t sub_10027CC6C()
{
  unint64_t result = qword_100435118;
  if (!qword_100435118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435118);
  }
  return result;
}

uint64_t sub_10027CCC0()
{
  uint64_t v0 = qword_100428860;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10027CCFC()
{
  unint64_t result = qword_100435120;
  if (!qword_100435120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435120);
  }
  return result;
}

uint64_t sub_10027CD50(uint64_t a1, uint64_t a2)
{
  return sub_10028DF48(a1, a2, &qword_100437020, &qword_100437028, (void (*)(uint64_t))sub_10027C808);
}

unint64_t sub_10027CD7C()
{
  unint64_t result = qword_100435128;
  if (!qword_100435128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435128);
  }
  return result;
}

unint64_t sub_10027CDD4()
{
  unint64_t result = qword_100435130;
  if (!qword_100435130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435130);
  }
  return result;
}

unint64_t sub_10027CE2C()
{
  unint64_t result = qword_100435138;
  if (!qword_100435138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435138);
  }
  return result;
}

uint64_t sub_10027CE80()
{
  sub_1002FC5FC();
  uint64_t v2 = sub_100300F50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100061330(v3, v0, v2, v1);
}

uint64_t sub_10027CF14@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F908, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1004F5190, a1);
}

uint64_t sub_10027CF4C()
{
  return sub_100034B8C(&qword_100435148, &qword_100435150);
}

uint64_t sub_10027CF88(uint64_t a1)
{
  unint64_t v2 = sub_10027C808();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10027CFD8()
{
  unint64_t result = qword_100435158;
  if (!qword_100435158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435158);
  }
  return result;
}

uint64_t sub_10027D030(uint64_t a1)
{
  unint64_t v2 = sub_10027CE2C();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10027D080()
{
  unint64_t result = qword_100435160;
  if (!qword_100435160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435160);
  }
  return result;
}

uint64_t sub_10027D0D4()
{
  return sub_100034B8C(&qword_100435168, &qword_100435170);
}

uint64_t sub_10027D110(uint64_t a1)
{
  return sub_10028BB20(a1, qword_1004F51E0);
}

uint64_t sub_10027D134@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v1 = sub_10002D0A8(&qword_100420A80);
  __chkstk_darwin(v1 - 8);
  v64 = (char *)v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v3 - 8);
  v63 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100301150();
  __chkstk_darwin(v5 - 8);
  v65 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100301130();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v70 = v11;
  uint64_t v71 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v57 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v61 = (char *)v56 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v56 - v17;
  uint64_t v19 = sub_100301430();
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  v62 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  v66 = (char *)v56 - v23;
  __chkstk_darwin(v22);
  uint64_t v24 = sub_1003010D0();
  uint64_t v59 = *(void *)(v24 - 8);
  uint64_t v60 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  v56[1] = (char *)v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)v56 - v27;
  sub_100301420();
  sub_1003010F0();
  id v29 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v30);
  v32 = v31;
  id v33 = [v29 initWithURL:v31];

  id v34 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v68 = v8 + 8;
  uint64_t v69 = v7;
  uint64_t v67 = v34;
  uint64_t result = v34(v10, v7);
  if (!v33)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v36 = [v33 bundleURL];

  sub_100301110();
  uint64_t v37 = enum case for LocalizedStringResource.BundleDescription.atURL(_:);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 104);
  v71 += 104;
  v38(v18, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v70);
  sub_100301140();
  v56[0] = v28;
  sub_1003010E0();
  sub_100301420();
  sub_1003010F0();
  id v39 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v40);
  id v42 = v41;
  id v43 = [v39 initWithURL:v41];

  uint64_t result = v67(v10, v69);
  if (!v43)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v44 = [v43 bundleURL];

  v45 = v61;
  sub_100301110();

  v38(v45, v37, v70);
  sub_100301140();
  v46 = v63;
  sub_1003010E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v46, 0, 1, v60);
  uint64_t v47 = v64;
  sub_100300E80();
  uint64_t v48 = sub_100300E90();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  sub_100301420();
  sub_1003010F0();
  id v49 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v50);
  id v52 = v51;
  id v53 = [v49 initWithURL:v51];

  uint64_t result = v67(v10, v69);
  if (v53)
  {
    id v54 = [v53 bundleURL];

    v55 = v57;
    sub_100301110();

    v38(v55, v37, v70);
    sub_100301140();
    sub_1003010E0();
    return sub_100300EB0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10027D8BC(uint64_t a1)
{
  return sub_10028C43C(a1, qword_1004F51F8);
}

uint64_t sub_10027D8E0(uint64_t a1)
{
  return sub_10028C4C0(a1, qword_1004F5210);
}

uint64_t sub_10027D904()
{
  uint64_t result = swift_getKeyPath();
  qword_1004F5228 = result;
  return result;
}

uint64_t sub_10027D92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_10002D0A8(&qword_100436CE0);
  v3[23] = swift_task_alloc();
  sub_10002D0A8(&qword_100436CE8);
  v3[24] = swift_task_alloc();
  sub_10002D0A8(&qword_100436FF8);
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_100300D60();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_10002D0A8(&qword_100437000);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return _swift_task_switch(sub_10027DAF0, 0, 0);
}

uint64_t sub_10027DAF0()
{
  sub_100300DA0();
  long long v1 = *(_OWORD *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  unint64_t v3 = sub_10027EA1C();
  void *v2 = v0;
  v2[1] = sub_10027DBD4;
  uint64_t v4 = *(void *)(v0 + 256);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v4, v0 + 40, sub_100300BFC, 0, &type metadata for AccessibilityZoomControllerSingleTapActionEntity, v3);
}

uint64_t sub_10027DBD4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10027DCD0, 0, 0);
}

uint64_t sub_10027DCD0()
{
  sub_100300DA0();
  v0[11] = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  v0[34] = v1;
  v0[35] = v2;
  v0[12] = v1;
  v0[13] = v2;
  sub_100300DA0();
  if (qword_10041F940 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F5228;
  v0[36] = qword_1004F5228;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  uint64_t v5 = sub_100034B8C(&qword_100436FD8, &qword_100436FE0);
  *uint64_t v4 = v0;
  v4[1] = sub_10027DE28;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 39, v3, &type metadata for AXZoomControllerTapActionAppEnum, v5);
}

uint64_t sub_10027DE28()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1003008C8;
  }
  else {
    uint64_t v2 = sub_10027DF98;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10027DF98()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 224);
  sub_100300DA0();
  long long v5 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 112) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 120) = v5;
  uint64_t v6 = sub_100301000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_100301030();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_10027D080();
  sub_10027EC30();
  sub_100300D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v11, v2);
  sub_100300D50();
  sub_100300D70();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10027E210()
{
  uint64_t v0 = sub_10002D0A8(&qword_100437008);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10041F940 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100300E70();
  swift_release();
  sub_10027EC30();
  sub_100034B8C(&qword_100437010, &qword_100437008);
  sub_100300E60();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10027E378(uint64_t a1, uint64_t a2)
{
  return sub_10028D0B8(a1, a2, &qword_10041F940);
}

unint64_t sub_10027E3A0()
{
  unint64_t result = qword_100435178;
  if (!qword_100435178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435178);
  }
  return result;
}

unint64_t sub_10027E3F8()
{
  unint64_t result = qword_100435180;
  if (!qword_100435180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435180);
  }
  return result;
}

uint64_t sub_10027E44C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10027E480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028D204(a1, a2, a3, (void (*)(void))sub_10027D080);
}

uint64_t sub_10027E498@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F930, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1004F51F8, a1);
}

uint64_t sub_10027E4D0@<X0>(uint64_t a1@<X8>)
{
  return sub_10028D2B4(&qword_10041F938, (uint64_t)qword_1004F5210, a1);
}

uint64_t sub_10027E4F4(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100034BD0;
  return sub_10027D92C(a1, v5, v4);
}

uint64_t sub_10027E5A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002F84F8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10027E5C8()
{
  return 0xD000000000000041;
}

unint64_t sub_10027E5E8()
{
  unint64_t result = qword_100435190;
  if (!qword_100435190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435190);
  }
  return result;
}

uint64_t sub_10027E640(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10027E660, 0, 0);
}

uint64_t sub_10027E660()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self sharedInstance];
  id v3 = [v2 zoomSlugSingleTapAction];

  char v4 = sub_10002D1A4((unint64_t)v3);
  if (v4 == 4) {
    char v5 = 0;
  }
  else {
    char v5 = v4;
  }
  *uint64_t v1 = v5;
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10027E718(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10027E73C, 0, 0);
}

uint64_t sub_10027E73C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self sharedInstance];
  [v2 setZoomSlugSingleTapAction:v1];

  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10027E7D4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10027E7F4, 0, 0);
}

uint64_t sub_10027E7F4()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *uint64_t v1 = sub_1002F88E8();
  v1[1] = v2;
  v1[2] = v3;
  char v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10027E864()
{
  unint64_t result = qword_1004351A0;
  if (!qword_1004351A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004351A0);
  }
  return result;
}

uint64_t sub_10027E8B8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10027EE80();
  *char v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10027E96C()
{
  unint64_t result = qword_1004351B0;
  if (!qword_1004351B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004351B0);
  }
  return result;
}

unint64_t sub_10027E9C4()
{
  unint64_t result = qword_1004351B8;
  if (!qword_1004351B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004351B8);
  }
  return result;
}

unint64_t sub_10027EA1C()
{
  unint64_t result = qword_1004351C0[0];
  if (!qword_1004351C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1004351C0);
  }
  return result;
}

uint64_t sub_10027EA70(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10027EE80();
  *unint64_t v5 = v2;
  v5[1] = sub_1003008E0;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10027EB24(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10027EE80();
  *char v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10027EBD8()
{
  unint64_t result = qword_1004351D8;
  if (!qword_1004351D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004351D8);
  }
  return result;
}

unint64_t sub_10027EC30()
{
  unint64_t result = qword_1004351E0;
  if (!qword_1004351E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004351E0);
  }
  return result;
}

uint64_t sub_10027EC84()
{
  return sub_10028DC04(&qword_1004351E8, qword_1004351F0, (void (*)(void))sub_10027EC30);
}

uint64_t sub_10027ECC0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10027E864();
  *unint64_t v5 = v2;
  v5[1] = sub_100034BD0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10027ED78()
{
  unint64_t result = qword_100435208;
  if (!qword_100435208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435208);
  }
  return result;
}

unint64_t sub_10027EDD0()
{
  unint64_t result = qword_100435210;
  if (!qword_100435210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435210);
  }
  return result;
}

unint64_t sub_10027EE28()
{
  unint64_t result = qword_100435218;
  if (!qword_100435218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435218);
  }
  return result;
}

unint64_t sub_10027EE80()
{
  unint64_t result = qword_100435220;
  if (!qword_100435220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435220);
  }
  return result;
}

uint64_t sub_10027EED4()
{
  uint64_t v0 = qword_100428870;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10027EF10()
{
  unint64_t result = qword_100435228;
  if (!qword_100435228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435228);
  }
  return result;
}

uint64_t sub_10027EF64(uint64_t a1, uint64_t a2)
{
  return sub_10028DF48(a1, a2, &qword_100436FB8, &qword_100436FC0, (void (*)(uint64_t))sub_10027EA1C);
}

unint64_t sub_10027EF90()
{
  unint64_t result = qword_100435230;
  if (!qword_100435230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435230);
  }
  return result;
}

unint64_t sub_10027EFE8()
{
  unint64_t result = qword_100435238;
  if (!qword_100435238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435238);
  }
  return result;
}

unint64_t sub_10027F040()
{
  unint64_t result = qword_100435240;
  if (!qword_100435240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435240);
  }
  return result;
}

uint64_t sub_10027F094()
{
  sub_1002FC5A8();
  uint64_t v2 = sub_100300F50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100061330(v3, v0, v2, v1);
}

uint64_t sub_10027F128@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F928, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1004F51E0, a1);
}

uint64_t sub_10027F160()
{
  return sub_100034B8C(&qword_100435250, &qword_100435258);
}

uint64_t sub_10027F19C(uint64_t a1)
{
  unint64_t v2 = sub_10027EA1C();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10027F1EC()
{
  unint64_t result = qword_100435260;
  if (!qword_100435260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435260);
  }
  return result;
}

uint64_t sub_10027F244(uint64_t a1)
{
  unint64_t v2 = sub_10027F040();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10027F294()
{
  unint64_t result = qword_100435268;
  if (!qword_100435268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435268);
  }
  return result;
}

uint64_t sub_10027F2E8()
{
  return sub_100034B8C(&qword_100435270, &qword_100435278);
}

uint64_t sub_10027F324(uint64_t a1)
{
  return sub_10028BB20(a1, qword_1004F5230);
}

uint64_t sub_10027F348@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v1 = sub_10002D0A8(&qword_100420A80);
  __chkstk_darwin(v1 - 8);
  v64 = (char *)v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v3 - 8);
  v63 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100301150();
  __chkstk_darwin(v5 - 8);
  v65 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100301130();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v70 = v11;
  uint64_t v71 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v57 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v61 = (char *)v56 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v56 - v17;
  uint64_t v19 = sub_100301430();
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  v62 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  v66 = (char *)v56 - v23;
  __chkstk_darwin(v22);
  uint64_t v24 = sub_1003010D0();
  uint64_t v59 = *(void *)(v24 - 8);
  uint64_t v60 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  v56[1] = (char *)v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)v56 - v27;
  sub_100301420();
  sub_1003010F0();
  id v29 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v30);
  v32 = v31;
  id v33 = [v29 initWithURL:v31];

  id v34 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v68 = v8 + 8;
  uint64_t v69 = v7;
  uint64_t v67 = v34;
  uint64_t result = v34(v10, v7);
  if (!v33)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v36 = [v33 bundleURL];

  sub_100301110();
  uint64_t v37 = enum case for LocalizedStringResource.BundleDescription.atURL(_:);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 104);
  v71 += 104;
  v38(v18, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v70);
  sub_100301140();
  v56[0] = v28;
  sub_1003010E0();
  sub_100301420();
  sub_1003010F0();
  id v39 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v40);
  id v42 = v41;
  id v43 = [v39 initWithURL:v41];

  uint64_t result = v67(v10, v69);
  if (!v43)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v44 = [v43 bundleURL];

  v45 = v61;
  sub_100301110();

  v38(v45, v37, v70);
  sub_100301140();
  v46 = v63;
  sub_1003010E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v46, 0, 1, v60);
  uint64_t v47 = v64;
  sub_100300E80();
  uint64_t v48 = sub_100300E90();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  sub_100301420();
  sub_1003010F0();
  id v49 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v50);
  id v52 = v51;
  id v53 = [v49 initWithURL:v51];

  uint64_t result = v67(v10, v69);
  if (v53)
  {
    id v54 = [v53 bundleURL];

    v55 = v57;
    sub_100301110();

    v38(v55, v37, v70);
    sub_100301140();
    sub_1003010E0();
    return sub_100300EB0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10027FAD0(uint64_t a1)
{
  return sub_10028C43C(a1, qword_1004F5248);
}

uint64_t sub_10027FAF4(uint64_t a1)
{
  return sub_10028C4C0(a1, qword_1004F5260);
}

uint64_t sub_10027FB18()
{
  uint64_t result = swift_getKeyPath();
  qword_1004F5278 = result;
  return result;
}

uint64_t sub_10027FB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_10002D0A8(&qword_100436CE0);
  v3[23] = swift_task_alloc();
  sub_10002D0A8(&qword_100436CE8);
  v3[24] = swift_task_alloc();
  sub_10002D0A8(&qword_100436F90);
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_100300D60();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_10002D0A8(&qword_100436F98);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return _swift_task_switch(sub_10027FD04, 0, 0);
}

uint64_t sub_10027FD04()
{
  sub_100300DA0();
  long long v1 = *(_OWORD *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  unint64_t v3 = sub_100280C30();
  void *v2 = v0;
  v2[1] = sub_10027FDE8;
  uint64_t v4 = *(void *)(v0 + 256);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v4, v0 + 40, sub_100300C00, 0, &type metadata for AccessibilityZoomControllerDoubleTapActionEntity, v3);
}

uint64_t sub_10027FDE8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10027FEE4, 0, 0);
}

uint64_t sub_10027FEE4()
{
  sub_100300DA0();
  v0[11] = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  v0[34] = v1;
  v0[35] = v2;
  v0[12] = v1;
  v0[13] = v2;
  sub_100300DA0();
  if (qword_10041F960 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F5278;
  v0[36] = qword_1004F5278;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  uint64_t v5 = sub_100034B8C(&qword_100436F70, &qword_100436F78);
  *uint64_t v4 = v0;
  v4[1] = sub_10028003C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 39, v3, &type metadata for AXZoomControllerTapActionAppEnum, v5);
}

uint64_t sub_10028003C()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1003008C8;
  }
  else {
    uint64_t v2 = sub_1002801AC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002801AC()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 224);
  sub_100300DA0();
  long long v5 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 112) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 120) = v5;
  uint64_t v6 = sub_100301000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_100301030();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_10027F294();
  sub_100280E44();
  sub_100300D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v11, v2);
  sub_100300D50();
  sub_100300D70();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100280424()
{
  uint64_t v0 = sub_10002D0A8(&qword_100436FA0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10041F960 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100300E70();
  swift_release();
  sub_100280E44();
  sub_100034B8C(&qword_100436FA8, &qword_100436FA0);
  sub_100300E60();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10028058C(uint64_t a1, uint64_t a2)
{
  return sub_10028D0B8(a1, a2, &qword_10041F960);
}

unint64_t sub_1002805B4()
{
  unint64_t result = qword_100435280;
  if (!qword_100435280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435280);
  }
  return result;
}

unint64_t sub_10028060C()
{
  unint64_t result = qword_100435288;
  if (!qword_100435288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435288);
  }
  return result;
}

uint64_t sub_100280660()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100280694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028D204(a1, a2, a3, (void (*)(void))sub_10027F294);
}

uint64_t sub_1002806AC@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F950, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1004F5248, a1);
}

uint64_t sub_1002806E4@<X0>(uint64_t a1@<X8>)
{
  return sub_10028D2B4(&qword_10041F958, (uint64_t)qword_1004F5260, a1);
}

uint64_t sub_100280708(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100034BD0;
  return sub_10027FB40(a1, v5, v4);
}

uint64_t sub_1002807B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002F8CC0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1002807DC()
{
  return 0xD000000000000041;
}

unint64_t sub_1002807FC()
{
  unint64_t result = qword_100435298;
  if (!qword_100435298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435298);
  }
  return result;
}

uint64_t sub_100280854(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100280874, 0, 0);
}

uint64_t sub_100280874()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self sharedInstance];
  id v3 = [v2 zoomSlugDoubleTapAction];

  char v4 = sub_10002D1A4((unint64_t)v3);
  if (v4 == 4) {
    char v5 = 0;
  }
  else {
    char v5 = v4;
  }
  *uint64_t v1 = v5;
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10028092C(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100280950, 0, 0);
}

uint64_t sub_100280950()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self sharedInstance];
  [v2 setZoomSlugDoubleTapAction:v1];

  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1002809E8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100280A08, 0, 0);
}

uint64_t sub_100280A08()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *uint64_t v1 = sub_1002F90B0();
  v1[1] = v2;
  v1[2] = v3;
  char v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_100280A78()
{
  unint64_t result = qword_1004352A8;
  if (!qword_1004352A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004352A8);
  }
  return result;
}

uint64_t sub_100280ACC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100281094();
  *char v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100280B80()
{
  unint64_t result = qword_1004352B8;
  if (!qword_1004352B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004352B8);
  }
  return result;
}

unint64_t sub_100280BD8()
{
  unint64_t result = qword_1004352C0;
  if (!qword_1004352C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004352C0);
  }
  return result;
}

unint64_t sub_100280C30()
{
  unint64_t result = qword_1004352C8[0];
  if (!qword_1004352C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1004352C8);
  }
  return result;
}

uint64_t sub_100280C84(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100281094();
  *unint64_t v5 = v2;
  v5[1] = sub_1003008E0;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100280D38(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100281094();
  *char v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100280DEC()
{
  unint64_t result = qword_1004352E0;
  if (!qword_1004352E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004352E0);
  }
  return result;
}

unint64_t sub_100280E44()
{
  unint64_t result = qword_1004352E8;
  if (!qword_1004352E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004352E8);
  }
  return result;
}

uint64_t sub_100280E98()
{
  return sub_10028DC04(&qword_1004352F0, qword_1004352F8, (void (*)(void))sub_100280E44);
}

uint64_t sub_100280ED4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100280A78();
  *unint64_t v5 = v2;
  v5[1] = sub_100034BD0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_100280F8C()
{
  unint64_t result = qword_100435310;
  if (!qword_100435310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435310);
  }
  return result;
}

unint64_t sub_100280FE4()
{
  unint64_t result = qword_100435318;
  if (!qword_100435318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435318);
  }
  return result;
}

unint64_t sub_10028103C()
{
  unint64_t result = qword_100435320;
  if (!qword_100435320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435320);
  }
  return result;
}

unint64_t sub_100281094()
{
  unint64_t result = qword_100435328;
  if (!qword_100435328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435328);
  }
  return result;
}

uint64_t sub_1002810E8()
{
  uint64_t v0 = qword_100428880;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100281124()
{
  unint64_t result = qword_100435330;
  if (!qword_100435330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435330);
  }
  return result;
}

uint64_t sub_100281178(uint64_t a1, uint64_t a2)
{
  return sub_10028DF48(a1, a2, &qword_100436F50, &qword_100436F58, (void (*)(uint64_t))sub_100280C30);
}

unint64_t sub_1002811A4()
{
  unint64_t result = qword_100435338;
  if (!qword_100435338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435338);
  }
  return result;
}

unint64_t sub_1002811FC()
{
  unint64_t result = qword_100435340;
  if (!qword_100435340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435340);
  }
  return result;
}

unint64_t sub_100281254()
{
  unint64_t result = qword_100435348;
  if (!qword_100435348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435348);
  }
  return result;
}

uint64_t sub_1002812A8()
{
  sub_1002FC554();
  uint64_t v2 = sub_100300F50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100061330(v3, v0, v2, v1);
}

uint64_t sub_10028133C@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F948, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1004F5230, a1);
}

uint64_t sub_100281374()
{
  return sub_100034B8C(&qword_100435358, &qword_100435360);
}

uint64_t sub_1002813B0(uint64_t a1)
{
  unint64_t v2 = sub_100280C30();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100281400()
{
  unint64_t result = qword_100435368;
  if (!qword_100435368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435368);
  }
  return result;
}

uint64_t sub_100281458(uint64_t a1)
{
  unint64_t v2 = sub_100281254();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1002814A8()
{
  unint64_t result = qword_100435370;
  if (!qword_100435370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435370);
  }
  return result;
}

uint64_t sub_1002814FC()
{
  return sub_100034B8C(&qword_100435378, &qword_100435380);
}

uint64_t sub_100281538(uint64_t a1)
{
  return sub_10028BB20(a1, qword_1004F5280);
}

uint64_t sub_10028155C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v1 = sub_10002D0A8(&qword_100420A80);
  __chkstk_darwin(v1 - 8);
  v64 = (char *)v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v3 - 8);
  v63 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100301150();
  __chkstk_darwin(v5 - 8);
  v65 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100301130();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v70 = v11;
  uint64_t v71 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v57 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v61 = (char *)v56 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v56 - v17;
  uint64_t v19 = sub_100301430();
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  v62 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  v66 = (char *)v56 - v23;
  __chkstk_darwin(v22);
  uint64_t v24 = sub_1003010D0();
  uint64_t v59 = *(void *)(v24 - 8);
  uint64_t v60 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  v56[1] = (char *)v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)v56 - v27;
  sub_100301420();
  sub_1003010F0();
  id v29 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v30);
  v32 = v31;
  id v33 = [v29 initWithURL:v31];

  id v34 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v68 = v8 + 8;
  uint64_t v69 = v7;
  uint64_t v67 = v34;
  uint64_t result = v34(v10, v7);
  if (!v33)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v36 = [v33 bundleURL];

  sub_100301110();
  uint64_t v37 = enum case for LocalizedStringResource.BundleDescription.atURL(_:);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 104);
  v71 += 104;
  v38(v18, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v70);
  sub_100301140();
  v56[0] = v28;
  sub_1003010E0();
  sub_100301420();
  sub_1003010F0();
  id v39 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v40);
  id v42 = v41;
  id v43 = [v39 initWithURL:v41];

  uint64_t result = v67(v10, v69);
  if (!v43)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v44 = [v43 bundleURL];

  v45 = v61;
  sub_100301110();

  v38(v45, v37, v70);
  sub_100301140();
  v46 = v63;
  sub_1003010E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v46, 0, 1, v60);
  uint64_t v47 = v64;
  sub_100300E80();
  uint64_t v48 = sub_100300E90();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  sub_100301420();
  sub_1003010F0();
  id v49 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v50);
  id v52 = v51;
  id v53 = [v49 initWithURL:v51];

  uint64_t result = v67(v10, v69);
  if (v53)
  {
    id v54 = [v53 bundleURL];

    v55 = v57;
    sub_100301110();

    v38(v55, v37, v70);
    sub_100301140();
    sub_1003010E0();
    return sub_100300EB0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100281CE4(uint64_t a1)
{
  return sub_10028C43C(a1, qword_1004F5298);
}

uint64_t sub_100281D08(uint64_t a1)
{
  return sub_10028C4C0(a1, qword_1004F52B0);
}

uint64_t sub_100281D2C()
{
  uint64_t result = swift_getKeyPath();
  qword_1004F52C8 = result;
  return result;
}

uint64_t sub_100281D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_10002D0A8(&qword_100436CE0);
  v3[23] = swift_task_alloc();
  sub_10002D0A8(&qword_100436CE8);
  v3[24] = swift_task_alloc();
  sub_10002D0A8(&qword_100436F28);
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_100300D60();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_10002D0A8(&qword_100436F30);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return _swift_task_switch(sub_100281F18, 0, 0);
}

uint64_t sub_100281F18()
{
  sub_100300DA0();
  long long v1 = *(_OWORD *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  unint64_t v3 = sub_100282E44();
  void *v2 = v0;
  v2[1] = sub_100281FFC;
  uint64_t v4 = *(void *)(v0 + 256);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v4, v0 + 40, sub_100300C04, 0, &type metadata for AccessibilityZoomControllerTripleTapActionEntity, v3);
}

uint64_t sub_100281FFC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002820F8, 0, 0);
}

uint64_t sub_1002820F8()
{
  sub_100300DA0();
  v0[11] = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  v0[34] = v1;
  v0[35] = v2;
  v0[12] = v1;
  v0[13] = v2;
  sub_100300DA0();
  if (qword_10041F980 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F52C8;
  v0[36] = qword_1004F52C8;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  uint64_t v5 = sub_100034B8C(&qword_100436F00, &qword_100436F08);
  *uint64_t v4 = v0;
  v4[1] = sub_100282250;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 39, v3, &type metadata for AXZoomControllerTapActionAppEnum, v5);
}

uint64_t sub_100282250()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1003008C8;
  }
  else {
    uint64_t v2 = sub_1002823C0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002823C0()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 224);
  sub_100300DA0();
  long long v5 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 112) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 120) = v5;
  uint64_t v6 = sub_100301000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_100301030();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_1002814A8();
  sub_100283058();
  sub_100300D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v11, v2);
  sub_100300D50();
  sub_100300D70();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100282638()
{
  uint64_t v0 = sub_10002D0A8(&qword_100436F38);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10041F980 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100300E70();
  swift_release();
  sub_100283058();
  sub_100034B8C(&qword_100436F40, &qword_100436F38);
  sub_100300E60();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1002827A0(uint64_t a1, uint64_t a2)
{
  return sub_10028D0B8(a1, a2, &qword_10041F980);
}

unint64_t sub_1002827C8()
{
  unint64_t result = qword_100435388;
  if (!qword_100435388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435388);
  }
  return result;
}

unint64_t sub_100282820()
{
  unint64_t result = qword_100435390;
  if (!qword_100435390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435390);
  }
  return result;
}

uint64_t sub_100282874()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1002828A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028D204(a1, a2, a3, (void (*)(void))sub_1002814A8);
}

uint64_t sub_1002828C0@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F970, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1004F5298, a1);
}

uint64_t sub_1002828F8@<X0>(uint64_t a1@<X8>)
{
  return sub_10028D2B4(&qword_10041F978, (uint64_t)qword_1004F52B0, a1);
}

uint64_t sub_10028291C(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100034BD0;
  return sub_100281D54(a1, v5, v4);
}

uint64_t sub_1002829C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002F9488();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1002829F0()
{
  return 0xD000000000000041;
}

unint64_t sub_100282A10()
{
  unint64_t result = qword_1004353A0;
  if (!qword_1004353A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004353A0);
  }
  return result;
}

uint64_t sub_100282A68(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100282A88, 0, 0);
}

uint64_t sub_100282A88()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self sharedInstance];
  id v3 = [v2 zoomSlugTripleTapAction];

  char v4 = sub_10002D1A4((unint64_t)v3);
  if (v4 == 4) {
    char v5 = 0;
  }
  else {
    char v5 = v4;
  }
  *uint64_t v1 = v5;
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100282B40(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100282B64, 0, 0);
}

uint64_t sub_100282B64()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self sharedInstance];
  [v2 setZoomSlugTripleTapAction:v1];

  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100282BFC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100282C1C, 0, 0);
}

uint64_t sub_100282C1C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *uint64_t v1 = sub_1002F9878();
  v1[1] = v2;
  v1[2] = v3;
  char v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_100282C8C()
{
  unint64_t result = qword_1004353B0;
  if (!qword_1004353B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004353B0);
  }
  return result;
}

uint64_t sub_100282CE0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1002832A8();
  *char v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100282D94()
{
  unint64_t result = qword_1004353C0;
  if (!qword_1004353C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004353C0);
  }
  return result;
}

unint64_t sub_100282DEC()
{
  unint64_t result = qword_1004353C8;
  if (!qword_1004353C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004353C8);
  }
  return result;
}

unint64_t sub_100282E44()
{
  unint64_t result = qword_1004353D0[0];
  if (!qword_1004353D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1004353D0);
  }
  return result;
}

uint64_t sub_100282E98(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1002832A8();
  *unint64_t v5 = v2;
  v5[1] = sub_1003008E0;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100282F4C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1002832A8();
  *char v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100283000()
{
  unint64_t result = qword_1004353E8;
  if (!qword_1004353E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004353E8);
  }
  return result;
}

unint64_t sub_100283058()
{
  unint64_t result = qword_1004353F0;
  if (!qword_1004353F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004353F0);
  }
  return result;
}

uint64_t sub_1002830AC()
{
  return sub_10028DC04(&qword_1004353F8, qword_100435400, (void (*)(void))sub_100283058);
}

uint64_t sub_1002830E8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100282C8C();
  *unint64_t v5 = v2;
  v5[1] = sub_100034BD0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_1002831A0()
{
  unint64_t result = qword_100435418;
  if (!qword_100435418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435418);
  }
  return result;
}

unint64_t sub_1002831F8()
{
  unint64_t result = qword_100435420;
  if (!qword_100435420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435420);
  }
  return result;
}

unint64_t sub_100283250()
{
  unint64_t result = qword_100435428;
  if (!qword_100435428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435428);
  }
  return result;
}

unint64_t sub_1002832A8()
{
  unint64_t result = qword_100435430;
  if (!qword_100435430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435430);
  }
  return result;
}

uint64_t sub_1002832FC()
{
  uint64_t v0 = qword_100428890;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100283338()
{
  unint64_t result = qword_100435438;
  if (!qword_100435438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435438);
  }
  return result;
}

uint64_t sub_10028338C(uint64_t a1, uint64_t a2)
{
  return sub_10028DF48(a1, a2, &qword_100436EE0, &qword_100436EE8, (void (*)(uint64_t))sub_100282E44);
}

unint64_t sub_1002833B8()
{
  unint64_t result = qword_100435440;
  if (!qword_100435440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435440);
  }
  return result;
}

unint64_t sub_100283410()
{
  unint64_t result = qword_100435448;
  if (!qword_100435448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435448);
  }
  return result;
}

unint64_t sub_100283468()
{
  unint64_t result = qword_100435450;
  if (!qword_100435450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435450);
  }
  return result;
}

uint64_t sub_1002834BC()
{
  sub_1002FC500();
  uint64_t v2 = sub_100300F50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100061330(v3, v0, v2, v1);
}

uint64_t sub_100283550@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F968, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1004F5280, a1);
}

uint64_t sub_100283588()
{
  return sub_100034B8C(&qword_100435460, &qword_100435468);
}

uint64_t sub_1002835C4(uint64_t a1)
{
  unint64_t v2 = sub_100282E44();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100283614()
{
  unint64_t result = qword_100435470;
  if (!qword_100435470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435470);
  }
  return result;
}

uint64_t sub_10028366C(uint64_t a1)
{
  unint64_t v2 = sub_100283468();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1002836BC()
{
  unint64_t result = qword_100435478;
  if (!qword_100435478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435478);
  }
  return result;
}

uint64_t sub_100283710()
{
  return sub_100034B8C(&qword_100435480, &qword_100435488);
}

uint64_t sub_10028374C(uint64_t a1)
{
  return sub_10028BB20(a1, qword_1004F52D0);
}

uint64_t sub_100283770@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v1 = sub_10002D0A8(&qword_100420A80);
  __chkstk_darwin(v1 - 8);
  v64 = (char *)v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v3 - 8);
  v63 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100301150();
  __chkstk_darwin(v5 - 8);
  v65 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100301130();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v70 = v11;
  uint64_t v71 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v57 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v61 = (char *)v56 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v56 - v17;
  uint64_t v19 = sub_100301430();
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  v62 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  v66 = (char *)v56 - v23;
  __chkstk_darwin(v22);
  uint64_t v24 = sub_1003010D0();
  uint64_t v59 = *(void *)(v24 - 8);
  uint64_t v60 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  v56[1] = (char *)v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)v56 - v27;
  sub_100301420();
  sub_1003010F0();
  id v29 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v30);
  v32 = v31;
  id v33 = [v29 initWithURL:v31];

  id v34 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v68 = v8 + 8;
  uint64_t v69 = v7;
  uint64_t v67 = v34;
  uint64_t result = v34(v10, v7);
  if (!v33)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v36 = [v33 bundleURL];

  sub_100301110();
  uint64_t v37 = enum case for LocalizedStringResource.BundleDescription.atURL(_:);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 104);
  v71 += 104;
  v38(v18, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v70);
  sub_100301140();
  v56[0] = v28;
  sub_1003010E0();
  sub_100301420();
  sub_1003010F0();
  id v39 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v40);
  id v42 = v41;
  id v43 = [v39 initWithURL:v41];

  uint64_t result = v67(v10, v69);
  if (!v43)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v44 = [v43 bundleURL];

  v45 = v61;
  sub_100301110();

  v38(v45, v37, v70);
  sub_100301140();
  v46 = v63;
  sub_1003010E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v46, 0, 1, v60);
  uint64_t v47 = v64;
  sub_100300E80();
  uint64_t v48 = sub_100300E90();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  sub_100301420();
  sub_1003010F0();
  id v49 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v50);
  id v52 = v51;
  id v53 = [v49 initWithURL:v51];

  uint64_t result = v67(v10, v69);
  if (v53)
  {
    id v54 = [v53 bundleURL];

    v55 = v57;
    sub_100301110();

    v38(v55, v37, v70);
    sub_100301140();
    sub_1003010E0();
    return sub_100300EB0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100283EF8(uint64_t a1)
{
  return sub_10028C43C(a1, qword_1004F52E8);
}

uint64_t sub_100283F1C(uint64_t a1)
{
  return sub_10028C4C0(a1, qword_1004F5300);
}

uint64_t sub_100283F40()
{
  uint64_t result = swift_getKeyPath();
  qword_1004F5318 = result;
  return result;
}

uint64_t sub_100283F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_10002D0A8(&qword_100436CE0);
  v3[23] = swift_task_alloc();
  sub_10002D0A8(&qword_100436CE8);
  v3[24] = swift_task_alloc();
  sub_10002D0A8(&qword_100436EB8);
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_100300D60();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_10002D0A8(&qword_100436EC0);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return _swift_task_switch(sub_10028412C, 0, 0);
}

uint64_t sub_10028412C()
{
  sub_100300DA0();
  long long v1 = *(_OWORD *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  unint64_t v3 = sub_100285058();
  void *v2 = v0;
  v2[1] = sub_100284210;
  uint64_t v4 = *(void *)(v0 + 256);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v4, v0 + 40, sub_100300C08, 0, &type metadata for AccessibilityZoomControllerColorEntity, v3);
}

uint64_t sub_100284210()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10028430C, 0, 0);
}

uint64_t sub_10028430C()
{
  sub_100300DA0();
  v0[11] = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  v0[34] = v1;
  v0[35] = v2;
  v0[12] = v1;
  v0[13] = v2;
  sub_100300DA0();
  if (qword_10041F9A0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F5318;
  v0[36] = qword_1004F5318;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  uint64_t v5 = sub_100034B8C(&qword_100436E90, &qword_100436E98);
  *uint64_t v4 = v0;
  v4[1] = sub_100284464;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 39, v3, &type metadata for AXZoomControllerColorAppEnum, v5);
}

uint64_t sub_100284464()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1003008C8;
  }
  else {
    uint64_t v2 = sub_1002845D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002845D4()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 224);
  sub_100300DA0();
  long long v5 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 112) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 120) = v5;
  uint64_t v6 = sub_100301000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_100301030();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_1002836BC();
  sub_10028526C();
  sub_100300D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v11, v2);
  sub_100300D50();
  sub_100300D70();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10028484C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100436EC8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10041F9A0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100300E70();
  swift_release();
  sub_10028526C();
  sub_100034B8C(&qword_100436ED0, &qword_100436EC8);
  sub_100300E60();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1002849B4(uint64_t a1, uint64_t a2)
{
  return sub_10028D0B8(a1, a2, &qword_10041F9A0);
}

unint64_t sub_1002849DC()
{
  unint64_t result = qword_100435490;
  if (!qword_100435490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435490);
  }
  return result;
}

unint64_t sub_100284A34()
{
  unint64_t result = qword_100435498;
  if (!qword_100435498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435498);
  }
  return result;
}

uint64_t sub_100284A88()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100284ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028D204(a1, a2, a3, (void (*)(void))sub_1002836BC);
}

uint64_t sub_100284AD4@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F990, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1004F52E8, a1);
}

uint64_t sub_100284B0C@<X0>(uint64_t a1@<X8>)
{
  return sub_10028D2B4(&qword_10041F998, (uint64_t)qword_1004F5300, a1);
}

uint64_t sub_100284B30(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100034BD0;
  return sub_100283F68(a1, v5, v4);
}

uint64_t sub_100284BDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002F9C50();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100284C04()
{
  return 0xD000000000000037;
}

unint64_t sub_100284C24()
{
  unint64_t result = qword_1004354A8;
  if (!qword_1004354A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004354A8);
  }
  return result;
}

uint64_t sub_100284C7C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100284C9C, 0, 0);
}

uint64_t sub_100284C9C()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self sharedInstance];
  id v3 = [v2 zoomControllerColor];

  char v4 = sub_10002CDB0((unint64_t)v3);
  if (v4 == 6) {
    char v5 = 0;
  }
  else {
    char v5 = v4;
  }
  *uint64_t v1 = v5;
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100284D54(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100284D78, 0, 0);
}

uint64_t sub_100284D78()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self sharedInstance];
  [v2 setZoomControllerColor:v1 + 1];

  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100284E10(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100284E30, 0, 0);
}

uint64_t sub_100284E30()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *uint64_t v1 = sub_1002FA040();
  v1[1] = v2;
  v1[2] = v3;
  char v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_100284EA0()
{
  unint64_t result = qword_1004354B8;
  if (!qword_1004354B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004354B8);
  }
  return result;
}

uint64_t sub_100284EF4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1002854BC();
  *char v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100284FA8()
{
  unint64_t result = qword_1004354C8;
  if (!qword_1004354C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004354C8);
  }
  return result;
}

unint64_t sub_100285000()
{
  unint64_t result = qword_1004354D0;
  if (!qword_1004354D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004354D0);
  }
  return result;
}

unint64_t sub_100285058()
{
  unint64_t result = qword_1004354D8[0];
  if (!qword_1004354D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1004354D8);
  }
  return result;
}

uint64_t sub_1002850AC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1002854BC();
  *unint64_t v5 = v2;
  v5[1] = sub_1003008E0;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100285160(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1002854BC();
  *char v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100285214()
{
  unint64_t result = qword_1004354F0;
  if (!qword_1004354F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004354F0);
  }
  return result;
}

unint64_t sub_10028526C()
{
  unint64_t result = qword_1004354F8;
  if (!qword_1004354F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004354F8);
  }
  return result;
}

uint64_t sub_1002852C0()
{
  return sub_10028DC04(&qword_100435500, qword_100435508, (void (*)(void))sub_10028526C);
}

uint64_t sub_1002852FC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100284EA0();
  *unint64_t v5 = v2;
  v5[1] = sub_100034BD0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_1002853B4()
{
  unint64_t result = qword_100435520;
  if (!qword_100435520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435520);
  }
  return result;
}

unint64_t sub_10028540C()
{
  unint64_t result = qword_100435528;
  if (!qword_100435528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435528);
  }
  return result;
}

unint64_t sub_100285464()
{
  unint64_t result = qword_100435530;
  if (!qword_100435530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435530);
  }
  return result;
}

unint64_t sub_1002854BC()
{
  unint64_t result = qword_100435538;
  if (!qword_100435538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435538);
  }
  return result;
}

uint64_t sub_100285510()
{
  uint64_t v0 = qword_1004288A0;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10028554C()
{
  unint64_t result = qword_100435540;
  if (!qword_100435540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435540);
  }
  return result;
}

uint64_t sub_1002855A0(uint64_t a1, uint64_t a2)
{
  return sub_10028DF48(a1, a2, &qword_100436E70, &qword_100436E78, (void (*)(uint64_t))sub_100285058);
}

unint64_t sub_1002855CC()
{
  unint64_t result = qword_100435548;
  if (!qword_100435548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435548);
  }
  return result;
}

unint64_t sub_100285624()
{
  unint64_t result = qword_100435550;
  if (!qword_100435550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435550);
  }
  return result;
}

unint64_t sub_10028567C()
{
  unint64_t result = qword_100435558;
  if (!qword_100435558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435558);
  }
  return result;
}

uint64_t sub_1002856D0()
{
  sub_1002FC4AC();
  uint64_t v2 = sub_100300F50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100061330(v3, v0, v2, v1);
}

uint64_t sub_100285764@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F988, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1004F52D0, a1);
}

uint64_t sub_10028579C()
{
  return sub_100034B8C(&qword_100435568, &qword_100435570);
}

uint64_t sub_1002857D8(uint64_t a1)
{
  unint64_t v2 = sub_100285058();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100285828()
{
  unint64_t result = qword_100435578;
  if (!qword_100435578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435578);
  }
  return result;
}

uint64_t sub_100285880(uint64_t a1)
{
  unint64_t v2 = sub_10028567C();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1002858D0()
{
  unint64_t result = qword_100435580;
  if (!qword_100435580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435580);
  }
  return result;
}

uint64_t sub_100285924()
{
  return sub_100034B8C(&qword_100435588, &qword_100435590);
}

uint64_t sub_100285960(uint64_t a1)
{
  return sub_10028BB20(a1, qword_1004F5320);
}

uint64_t sub_100285988@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v1 = sub_10002D0A8(&qword_100420A80);
  __chkstk_darwin(v1 - 8);
  v64 = (char *)v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v3 - 8);
  v63 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100301150();
  __chkstk_darwin(v5 - 8);
  v65 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100301130();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v70 = v11;
  uint64_t v71 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v57 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v61 = (char *)v56 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v56 - v17;
  uint64_t v19 = sub_100301430();
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  v62 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  v66 = (char *)v56 - v23;
  __chkstk_darwin(v22);
  uint64_t v24 = sub_1003010D0();
  uint64_t v59 = *(void *)(v24 - 8);
  uint64_t v60 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  v56[1] = (char *)v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)v56 - v27;
  sub_100301420();
  sub_1003010F0();
  id v29 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v30);
  v32 = v31;
  id v33 = [v29 initWithURL:v31];

  id v34 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v68 = v8 + 8;
  uint64_t v69 = v7;
  uint64_t v67 = v34;
  uint64_t result = v34(v10, v7);
  if (!v33)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v36 = [v33 bundleURL];

  sub_100301110();
  uint64_t v37 = enum case for LocalizedStringResource.BundleDescription.atURL(_:);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 104);
  v71 += 104;
  v38(v18, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v70);
  sub_100301140();
  v56[0] = v28;
  sub_1003010E0();
  sub_100301420();
  sub_1003010F0();
  id v39 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v40);
  id v42 = v41;
  id v43 = [v39 initWithURL:v41];

  uint64_t result = v67(v10, v69);
  if (!v43)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v44 = [v43 bundleURL];

  v45 = v61;
  sub_100301110();

  v38(v45, v37, v70);
  sub_100301140();
  v46 = v63;
  sub_1003010E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v46, 0, 1, v60);
  uint64_t v47 = v64;
  sub_100300E80();
  uint64_t v48 = sub_100300E90();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  sub_100301420();
  sub_1003010F0();
  id v49 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v50);
  id v52 = v51;
  id v53 = [v49 initWithURL:v51];

  uint64_t result = v67(v10, v69);
  if (v53)
  {
    id v54 = [v53 bundleURL];

    v55 = v57;
    sub_100301110();

    v38(v55, v37, v70);
    sub_100301140();
    sub_1003010E0();
    return sub_100300EB0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100286118(uint64_t a1)
{
  return sub_10028C43C(a1, qword_1004F5338);
}

uint64_t sub_10028613C(uint64_t a1)
{
  return sub_10028C4C0(a1, qword_1004F5350);
}

uint64_t sub_100286160()
{
  uint64_t result = swift_getKeyPath();
  qword_1004F5368 = result;
  return result;
}

uint64_t sub_100286188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_10002D0A8(&qword_100436CE0);
  v3[23] = swift_task_alloc();
  sub_10002D0A8(&qword_100436CE8);
  v3[24] = swift_task_alloc();
  sub_10002D0A8(&qword_100436E48);
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_100300D60();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_10002D0A8(&qword_100436E50);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return _swift_task_switch(sub_10028634C, 0, 0);
}

uint64_t sub_10028634C()
{
  sub_100300DA0();
  long long v1 = *(_OWORD *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  unint64_t v3 = sub_10028738C();
  void *v2 = v0;
  v2[1] = sub_100286430;
  uint64_t v4 = *(void *)(v0 + 256);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v4, v0 + 40, sub_100300C0C, 0, &type metadata for AccessibilityZoomLensModeEntity, v3);
}

uint64_t sub_100286430()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10028652C, 0, 0);
}

uint64_t sub_10028652C()
{
  sub_100300DA0();
  *(void *)(v0 + 88) = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  *(void *)(v0 + 272) = v1;
  *(void *)(v0 + 280) = v2;
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v2;
  sub_100300DA0();
  *(unsigned char *)(v0 + 312) = *(unsigned char *)(v0 + 313);
  if (qword_10041F9C0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F5368;
  *(void *)(v0 + 288) = qword_1004F5368;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v4;
  uint64_t v5 = sub_100034B8C(&qword_100436E20, &qword_100436E28);
  *uint64_t v4 = v0;
  v4[1] = sub_10028668C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 312, v3, &type metadata for AXZoomLensModeAppEnum, v5);
}

uint64_t sub_10028668C()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1003008C8;
  }
  else {
    uint64_t v2 = sub_1002867FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002867FC()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 224);
  sub_100300DA0();
  long long v5 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 112) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 120) = v5;
  uint64_t v6 = sub_100301000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_100301030();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_1002858D0();
  sub_1002875A0();
  sub_100300D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v11, v2);
  sub_100300D50();
  sub_100300D70();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100286A74()
{
  uint64_t v0 = sub_10002D0A8(&qword_100436E58);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10041F9C0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100300E70();
  swift_release();
  sub_1002875A0();
  sub_100034B8C(&qword_100436E60, &qword_100436E58);
  sub_100300E60();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100286BDC(uint64_t a1, uint64_t a2)
{
  return sub_10028D0B8(a1, a2, &qword_10041F9C0);
}

unint64_t sub_100286C04()
{
  unint64_t result = qword_100435598;
  if (!qword_100435598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435598);
  }
  return result;
}

unint64_t sub_100286C5C()
{
  unint64_t result = qword_1004355A0;
  if (!qword_1004355A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004355A0);
  }
  return result;
}

uint64_t sub_100286CB0()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100286CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028D204(a1, a2, a3, (void (*)(void))sub_1002858D0);
}

uint64_t sub_100286CFC@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F9B0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1004F5338, a1);
}

uint64_t sub_100286D34@<X0>(uint64_t a1@<X8>)
{
  return sub_10028D2B4(&qword_10041F9B8, (uint64_t)qword_1004F5350, a1);
}

uint64_t sub_100286D58(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100034BD0;
  return sub_100286188(a1, v5, v4);
}

uint64_t sub_100286E04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002FA418();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100286E2C()
{
  return 0xD000000000000030;
}

unint64_t sub_100286E4C()
{
  unint64_t result = qword_1004355B0;
  if (!qword_1004355B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004355B0);
  }
  return result;
}

uint64_t sub_100286EA4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100286EC4, 0, 0);
}

uint64_t sub_100286EC4()
{
  id v1 = [self sharedInstance];
  id v2 = [v1 zoomPreferredCurrentLensMode];

  uint64_t v3 = sub_100301450();
  uint64_t v5 = v4;

  v6._rawValue = &off_1004071B8;
  v12._countAndFlagsBits = v3;
  v12._object = v5;
  Swift::Int v7 = sub_100301540(v6, v12);
  swift_bridgeObjectRelease();
  BOOL v8 = 0;
  if (v7) {
    BOOL v8 = v7 == 1;
  }
  **(unsigned char **)(v0 + 16) = v8;
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100286FB8(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100286FDC, 0, 0);
}

id sub_100286FDC()
{
  id v1 = [self sharedInstance];
  NSString v2 = sub_100301440();
  swift_bridgeObjectRelease();
  [v1 setZoomPreferredCurrentLensMode:v2];

  id result = [self sharedInstance];
  if (result)
  {
    uint64_t v4 = result;
    NSString v5 = sub_100301440();
    swift_bridgeObjectRelease();
    [v4 notifyZoomLensModeWasChangedInSettingsTo:v5];

    Swift::OpaquePointer v6 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v6();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100287144(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100287164, 0, 0);
}

uint64_t sub_100287164()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *uint64_t v1 = sub_1002FA808();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_1002871D4()
{
  unint64_t result = qword_1004355C0;
  if (!qword_1004355C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004355C0);
  }
  return result;
}

uint64_t sub_100287228(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1002877F0();
  *uint64_t v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1002872DC()
{
  unint64_t result = qword_1004355D0;
  if (!qword_1004355D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004355D0);
  }
  return result;
}

unint64_t sub_100287334()
{
  unint64_t result = qword_1004355D8;
  if (!qword_1004355D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004355D8);
  }
  return result;
}

unint64_t sub_10028738C()
{
  unint64_t result = qword_1004355E0[0];
  if (!qword_1004355E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1004355E0);
  }
  return result;
}

uint64_t sub_1002873E0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1002877F0();
  *unint64_t v5 = v2;
  v5[1] = sub_1003008E0;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100287494(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1002877F0();
  *uint64_t v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100287548()
{
  unint64_t result = qword_1004355F8;
  if (!qword_1004355F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004355F8);
  }
  return result;
}

unint64_t sub_1002875A0()
{
  unint64_t result = qword_100435600;
  if (!qword_100435600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435600);
  }
  return result;
}

uint64_t sub_1002875F4()
{
  return sub_10028DC04(&qword_100435608, qword_100435610, (void (*)(void))sub_1002875A0);
}

uint64_t sub_100287630(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1002871D4();
  *unint64_t v5 = v2;
  v5[1] = sub_100034BD0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_1002876E8()
{
  unint64_t result = qword_100435628;
  if (!qword_100435628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435628);
  }
  return result;
}

unint64_t sub_100287740()
{
  unint64_t result = qword_100435630;
  if (!qword_100435630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435630);
  }
  return result;
}

unint64_t sub_100287798()
{
  unint64_t result = qword_100435638;
  if (!qword_100435638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435638);
  }
  return result;
}

unint64_t sub_1002877F0()
{
  unint64_t result = qword_100435640;
  if (!qword_100435640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435640);
  }
  return result;
}

uint64_t sub_100287844()
{
  uint64_t v0 = qword_1004288B0;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100287880()
{
  unint64_t result = qword_100435648;
  if (!qword_100435648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435648);
  }
  return result;
}

uint64_t sub_1002878D4(uint64_t a1, uint64_t a2)
{
  return sub_10028DF48(a1, a2, &qword_100436E00, &qword_100436E08, (void (*)(uint64_t))sub_10028738C);
}

unint64_t sub_100287900()
{
  unint64_t result = qword_100435650;
  if (!qword_100435650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435650);
  }
  return result;
}

unint64_t sub_100287958()
{
  unint64_t result = qword_100435658;
  if (!qword_100435658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435658);
  }
  return result;
}

unint64_t sub_1002879B0()
{
  unint64_t result = qword_100435660;
  if (!qword_100435660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435660);
  }
  return result;
}

uint64_t sub_100287A04()
{
  sub_1002FC458();
  uint64_t v2 = sub_100300F50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100061330(v3, v0, v2, v1);
}

uint64_t sub_100287A98@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F9A8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1004F5320, a1);
}

uint64_t sub_100287AD0()
{
  return sub_100034B8C(&qword_100435670, &qword_100435678);
}

uint64_t sub_100287B0C(uint64_t a1)
{
  unint64_t v2 = sub_10028738C();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100287B5C()
{
  unint64_t result = qword_100435680;
  if (!qword_100435680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435680);
  }
  return result;
}

uint64_t sub_100287BB4(uint64_t a1)
{
  unint64_t v2 = sub_1002879B0();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100287C04()
{
  unint64_t result = qword_100435688;
  if (!qword_100435688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435688);
  }
  return result;
}

uint64_t sub_100287C58()
{
  return sub_100034B8C(&qword_100435690, &qword_100435698);
}

uint64_t sub_100287C94(uint64_t a1)
{
  return sub_10028BB20(a1, qword_1004F5370);
}

uint64_t sub_100287CBC(uint64_t a1)
{
  return sub_10028C43C(a1, qword_1004F5388);
}

uint64_t sub_100287CE0(uint64_t a1)
{
  return sub_10028C4C0(a1, qword_1004F53A0);
}

uint64_t sub_100287D04()
{
  uint64_t result = swift_getKeyPath();
  qword_1004F53B8 = result;
  return result;
}

uint64_t sub_100287D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_10002D0A8(&qword_100436CE0);
  v3[23] = swift_task_alloc();
  sub_10002D0A8(&qword_100436CE8);
  v3[24] = swift_task_alloc();
  sub_10002D0A8(&qword_100436DD8);
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_100300D60();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_10002D0A8(&qword_100436DE0);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return _swift_task_switch(sub_100287EF0, 0, 0);
}

uint64_t sub_100287EF0()
{
  sub_100300DA0();
  long long v1 = *(_OWORD *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v0 + 48) = v1;
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  unint64_t v3 = sub_100288EFC();
  void *v2 = v0;
  v2[1] = sub_100287FD4;
  uint64_t v4 = *(void *)(v0 + 256);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v4, v0 + 40, sub_100300C10, 0, &type metadata for AccessibilityZoomLensModeiPadEntity, v3);
}

uint64_t sub_100287FD4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002880D0, 0, 0);
}

uint64_t sub_1002880D0()
{
  sub_100300DA0();
  v0[11] = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  v0[34] = v1;
  v0[35] = v2;
  v0[12] = v1;
  v0[13] = v2;
  sub_100300DA0();
  if (qword_10041F9E0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F53B8;
  v0[36] = qword_1004F53B8;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  uint64_t v5 = sub_100034B8C(&qword_100436DB0, &qword_100436DB8);
  *uint64_t v4 = v0;
  v4[1] = sub_100288228;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 39, v3, &type metadata for AXZoomLensModeiPadAppEnum, v5);
}

uint64_t sub_100288228()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1003008C8;
  }
  else {
    uint64_t v2 = sub_100288398;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100288398()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 224);
  sub_100300DA0();
  long long v5 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 112) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 120) = v5;
  uint64_t v6 = sub_100301000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_100301030();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_100287C04();
  sub_100289110();
  sub_100300D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v11, v2);
  sub_100300D50();
  sub_100300D70();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100288610()
{
  uint64_t v0 = sub_10002D0A8(&qword_100436DE8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10041F9E0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100300E70();
  swift_release();
  sub_100289110();
  sub_100034B8C(&qword_100436DF0, &qword_100436DE8);
  sub_100300E60();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100288778(uint64_t a1, uint64_t a2)
{
  return sub_10028D0B8(a1, a2, &qword_10041F9E0);
}

unint64_t sub_1002887A0()
{
  unint64_t result = qword_1004356A0;
  if (!qword_1004356A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004356A0);
  }
  return result;
}

unint64_t sub_1002887F8()
{
  unint64_t result = qword_1004356A8;
  if (!qword_1004356A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004356A8);
  }
  return result;
}

uint64_t sub_10028884C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100288880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028D204(a1, a2, a3, (void (*)(void))sub_100287C04);
}

uint64_t sub_100288898@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F9D0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1004F5388, a1);
}

uint64_t sub_1002888D0@<X0>(uint64_t a1@<X8>)
{
  return sub_10028D2B4(&qword_10041F9D8, (uint64_t)qword_1004F53A0, a1);
}

uint64_t sub_1002888F4(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100034BD0;
  return sub_100287D2C(a1, v5, v4);
}

uint64_t sub_1002889A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002FABE0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1002889C8()
{
  return 0xD000000000000034;
}

unint64_t sub_1002889E8()
{
  unint64_t result = qword_1004356B8;
  if (!qword_1004356B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004356B8);
  }
  return result;
}

uint64_t sub_100288A40(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100288A60, 0, 0);
}

uint64_t sub_100288A60()
{
  id v1 = [self sharedInstance];
  id v2 = [v1 zoomPreferredCurrentLensMode];

  uint64_t v3 = sub_100301450();
  uint64_t v5 = v4;

  v6._rawValue = &off_100407230;
  v12._countAndFlagsBits = v3;
  v12._object = v5;
  unint64_t v7 = sub_100301540(v6, v12);
  swift_bridgeObjectRelease();
  if (v7 >= 3) {
    char v8 = 1;
  }
  else {
    char v8 = v7;
  }
  **(unsigned char **)(v0 + 16) = v8;
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100288B48(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100288B6C, 0, 0);
}

id sub_100288B6C()
{
  id v1 = [self sharedInstance];
  NSString v2 = sub_100301440();
  swift_bridgeObjectRelease();
  [v1 setZoomPreferredCurrentLensMode:v2];

  id result = [self sharedInstance];
  if (result)
  {
    uint64_t v4 = result;
    NSString v5 = sub_100301440();
    swift_bridgeObjectRelease();
    [v4 notifyZoomLensModeWasChangedInSettingsTo:v5];

    Swift::OpaquePointer v6 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v6();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100288CB4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100288CD4, 0, 0);
}

uint64_t sub_100288CD4()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *uint64_t v1 = sub_1002FAFD0();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_100288D44()
{
  unint64_t result = qword_1004356C8;
  if (!qword_1004356C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004356C8);
  }
  return result;
}

uint64_t sub_100288D98(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100289360();
  *uint64_t v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100288E4C()
{
  unint64_t result = qword_1004356D8;
  if (!qword_1004356D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004356D8);
  }
  return result;
}

unint64_t sub_100288EA4()
{
  unint64_t result = qword_1004356E0;
  if (!qword_1004356E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004356E0);
  }
  return result;
}

unint64_t sub_100288EFC()
{
  unint64_t result = qword_1004356E8[0];
  if (!qword_1004356E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1004356E8);
  }
  return result;
}

uint64_t sub_100288F50(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100289360();
  *unint64_t v5 = v2;
  v5[1] = sub_1003008E0;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100289004(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100289360();
  *uint64_t v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1002890B8()
{
  unint64_t result = qword_100435700;
  if (!qword_100435700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435700);
  }
  return result;
}

unint64_t sub_100289110()
{
  unint64_t result = qword_100435708;
  if (!qword_100435708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435708);
  }
  return result;
}

uint64_t sub_100289164()
{
  return sub_10028DC04(&qword_100435710, qword_100435718, (void (*)(void))sub_100289110);
}

uint64_t sub_1002891A0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100288D44();
  *unint64_t v5 = v2;
  v5[1] = sub_100034BD0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_100289258()
{
  unint64_t result = qword_100435730;
  if (!qword_100435730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435730);
  }
  return result;
}

unint64_t sub_1002892B0()
{
  unint64_t result = qword_100435738;
  if (!qword_100435738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435738);
  }
  return result;
}

unint64_t sub_100289308()
{
  unint64_t result = qword_100435740;
  if (!qword_100435740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435740);
  }
  return result;
}

unint64_t sub_100289360()
{
  unint64_t result = qword_100435748;
  if (!qword_100435748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435748);
  }
  return result;
}

uint64_t sub_1002893B4()
{
  uint64_t v0 = qword_1004288C0;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1002893F0()
{
  unint64_t result = qword_100435750;
  if (!qword_100435750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435750);
  }
  return result;
}

uint64_t sub_100289444(uint64_t a1, uint64_t a2)
{
  return sub_10028DF48(a1, a2, &qword_100436D90, &qword_100436D98, (void (*)(uint64_t))sub_100288EFC);
}

unint64_t sub_100289470()
{
  unint64_t result = qword_100435758;
  if (!qword_100435758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435758);
  }
  return result;
}

unint64_t sub_1002894C8()
{
  unint64_t result = qword_100435760;
  if (!qword_100435760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435760);
  }
  return result;
}

unint64_t sub_100289520()
{
  unint64_t result = qword_100435768;
  if (!qword_100435768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435768);
  }
  return result;
}

uint64_t sub_100289574()
{
  sub_1002FC404();
  uint64_t v2 = sub_100300F50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100061330(v3, v0, v2, v1);
}

uint64_t sub_100289608@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F9C8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1004F5370, a1);
}

uint64_t sub_100289640()
{
  return sub_100034B8C(&qword_100435778, &qword_100435780);
}

uint64_t sub_10028967C(uint64_t a1)
{
  unint64_t v2 = sub_100288EFC();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1002896CC()
{
  unint64_t result = qword_100435788;
  if (!qword_100435788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435788);
  }
  return result;
}

uint64_t sub_100289720(uint64_t a1)
{
  unint64_t v2 = sub_100289520();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100289770()
{
  unint64_t result = qword_100435790;
  if (!qword_100435790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435790);
  }
  return result;
}

uint64_t sub_1002897C4()
{
  return sub_100034B8C(&qword_100435798, &qword_1004357A0);
}

uint64_t sub_100289800(uint64_t a1)
{
  return sub_10028BB20(a1, qword_1004F53C0);
}

uint64_t sub_10028982C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v1 = sub_10002D0A8(&qword_100420A80);
  __chkstk_darwin(v1 - 8);
  v64 = (char *)v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v3 - 8);
  v63 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100301150();
  __chkstk_darwin(v5 - 8);
  v65 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100301130();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v70 = v11;
  uint64_t v71 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v57 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v61 = (char *)v56 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v56 - v17;
  uint64_t v19 = sub_100301430();
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  v62 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  v66 = (char *)v56 - v23;
  __chkstk_darwin(v22);
  uint64_t v24 = sub_1003010D0();
  uint64_t v59 = *(void *)(v24 - 8);
  uint64_t v60 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  v56[1] = (char *)v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)v56 - v27;
  sub_100301420();
  sub_1003010F0();
  id v29 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v30);
  v32 = v31;
  id v33 = [v29 initWithURL:v31];

  id v34 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v68 = v8 + 8;
  uint64_t v69 = v7;
  uint64_t v67 = v34;
  uint64_t result = v34(v10, v7);
  if (!v33)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v36 = [v33 bundleURL];

  sub_100301110();
  uint64_t v37 = enum case for LocalizedStringResource.BundleDescription.atURL(_:);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 104);
  v71 += 104;
  v38(v18, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v70);
  sub_100301140();
  v56[0] = v28;
  sub_1003010E0();
  sub_100301420();
  sub_1003010F0();
  id v39 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v40);
  id v42 = v41;
  id v43 = [v39 initWithURL:v41];

  uint64_t result = v67(v10, v69);
  if (!v43)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v44 = [v43 bundleURL];

  v45 = v61;
  sub_100301110();

  v38(v45, v37, v70);
  sub_100301140();
  v46 = v63;
  sub_1003010E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v46, 0, 1, v60);
  uint64_t v47 = v64;
  sub_100300E80();
  uint64_t v48 = sub_100300E90();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  sub_100301420();
  sub_1003010F0();
  id v49 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v50);
  id v52 = v51;
  id v53 = [v49 initWithURL:v51];

  uint64_t result = v67(v10, v69);
  if (v53)
  {
    id v54 = [v53 bundleURL];

    v55 = v57;
    sub_100301110();

    v38(v55, v37, v70);
    sub_100301140();
    sub_1003010E0();
    return sub_100300EB0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100289FC0(uint64_t a1)
{
  return sub_10028C43C(a1, qword_1004F53D8);
}

uint64_t sub_100289FE4(uint64_t a1)
{
  return sub_10028C4C0(a1, qword_1004F53F0);
}

uint64_t sub_10028A008()
{
  uint64_t result = swift_getKeyPath();
  qword_1004F5408 = result;
  return result;
}

uint64_t sub_10028A030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_10002D0A8(&qword_100436CE0);
  v3[23] = swift_task_alloc();
  sub_10002D0A8(&qword_100436CE8);
  v3[24] = swift_task_alloc();
  sub_10002D0A8(&qword_100436D68);
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_100300D60();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_10002D0A8(&qword_100436D70);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return _swift_task_switch(sub_10028A1F4, 0, 0);
}

uint64_t sub_10028A1F4()
{
  sub_100300DA0();
  long long v1 = *(_OWORD *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  unint64_t v3 = sub_10028B1F0();
  void *v2 = v0;
  v2[1] = sub_10028A2D8;
  uint64_t v4 = *(void *)(v0 + 256);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v4, v0 + 40, sub_100300C14, 0, &type metadata for AccessibilityZoomDockPositionEntity, v3);
}

uint64_t sub_10028A2D8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10028A3D4, 0, 0);
}

uint64_t sub_10028A3D4()
{
  sub_100300DA0();
  v0[11] = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  v0[34] = v1;
  v0[35] = v2;
  v0[12] = v1;
  v0[13] = v2;
  sub_100300DA0();
  if (qword_10041FA00 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F5408;
  v0[36] = qword_1004F5408;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  uint64_t v5 = sub_100034B8C(&qword_100436D40, &qword_100436D48);
  *uint64_t v4 = v0;
  v4[1] = sub_10028A52C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 39, v3, &type metadata for AXZoomDockPositionAppEnum, v5);
}

uint64_t sub_10028A52C()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1003008C8;
  }
  else {
    uint64_t v2 = sub_10028A69C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10028A69C()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 224);
  sub_100300DA0();
  long long v5 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 112) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 120) = v5;
  uint64_t v6 = sub_100301000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_100301030();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_100289770();
  sub_10028B404();
  sub_100300D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v11, v2);
  sub_100300D50();
  sub_100300D70();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10028A914()
{
  uint64_t v0 = sub_10002D0A8(&qword_100436D78);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10041FA00 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100300E70();
  swift_release();
  sub_10028B404();
  sub_100034B8C(&qword_100436D80, &qword_100436D78);
  sub_100300E60();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10028AA7C(uint64_t a1, uint64_t a2)
{
  return sub_10028D0B8(a1, a2, &qword_10041FA00);
}

unint64_t sub_10028AAA4()
{
  unint64_t result = qword_1004357A8;
  if (!qword_1004357A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004357A8);
  }
  return result;
}

unint64_t sub_10028AAFC()
{
  unint64_t result = qword_1004357B0;
  if (!qword_1004357B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004357B0);
  }
  return result;
}

uint64_t sub_10028AB50()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10028AB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028D204(a1, a2, a3, (void (*)(void))sub_100289770);
}

uint64_t sub_10028AB9C@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F9F0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1004F53D8, a1);
}

uint64_t sub_10028ABD4@<X0>(uint64_t a1@<X8>)
{
  return sub_10028D2B4(&qword_10041F9F8, (uint64_t)qword_1004F53F0, a1);
}

uint64_t sub_10028ABF8(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100034BD0;
  return sub_10028A030(a1, v5, v4);
}

uint64_t sub_10028ACA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002FB3A8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10028ACCC()
{
  return 0xD000000000000034;
}

unint64_t sub_10028ACEC()
{
  unint64_t result = qword_1004357C0;
  if (!qword_1004357C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004357C0);
  }
  return result;
}

uint64_t sub_10028AD44(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10028AD64, 0, 0);
}

uint64_t sub_10028AD64()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self sharedInstance];
  id v3 = [v2 zoomPreferredCurrentDockPosition];

  uint64_t v4 = sub_100301450();
  uint64_t v6 = v5;

  char v7 = sub_10002CE24(v4, v6);
  if (v7 == 4) {
    char v8 = 0;
  }
  else {
    char v8 = v7;
  }
  *uint64_t v1 = v8;
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_10028AE3C(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10028AE60, 0, 0);
}

id sub_10028AE60()
{
  id v1 = [self sharedInstance];
  NSString v2 = sub_100301440();
  swift_bridgeObjectRelease();
  [v1 setZoomPreferredCurrentDockPosition:v2];

  id result = [self sharedInstance];
  if (result)
  {
    uint64_t v4 = result;
    NSString v5 = sub_100301440();
    swift_bridgeObjectRelease();
    [v4 notifyZoomDockPositionWasChangedInSettingsTo:v5];

    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v6();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10028AFA8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10028AFC8, 0, 0);
}

uint64_t sub_10028AFC8()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *uint64_t v1 = sub_1002FB798();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10028B038()
{
  unint64_t result = qword_1004357D0;
  if (!qword_1004357D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004357D0);
  }
  return result;
}

uint64_t sub_10028B08C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10028B654();
  *uint64_t v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10028B140()
{
  unint64_t result = qword_1004357E0;
  if (!qword_1004357E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004357E0);
  }
  return result;
}

unint64_t sub_10028B198()
{
  unint64_t result = qword_1004357E8;
  if (!qword_1004357E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004357E8);
  }
  return result;
}

unint64_t sub_10028B1F0()
{
  unint64_t result = qword_1004357F0[0];
  if (!qword_1004357F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1004357F0);
  }
  return result;
}

uint64_t sub_10028B244(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10028B654();
  *unint64_t v5 = v2;
  v5[1] = sub_1003008E0;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10028B2F8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10028B654();
  *uint64_t v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10028B3AC()
{
  unint64_t result = qword_100435808;
  if (!qword_100435808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435808);
  }
  return result;
}

unint64_t sub_10028B404()
{
  unint64_t result = qword_100435810;
  if (!qword_100435810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435810);
  }
  return result;
}

uint64_t sub_10028B458()
{
  return sub_10028DC04(&qword_100435818, qword_100435820, (void (*)(void))sub_10028B404);
}

uint64_t sub_10028B494(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10028B038();
  *unint64_t v5 = v2;
  v5[1] = sub_100034BD0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10028B54C()
{
  unint64_t result = qword_100435838;
  if (!qword_100435838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435838);
  }
  return result;
}

unint64_t sub_10028B5A4()
{
  unint64_t result = qword_100435840;
  if (!qword_100435840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435840);
  }
  return result;
}

unint64_t sub_10028B5FC()
{
  unint64_t result = qword_100435848;
  if (!qword_100435848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435848);
  }
  return result;
}

unint64_t sub_10028B654()
{
  unint64_t result = qword_100435850;
  if (!qword_100435850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435850);
  }
  return result;
}

uint64_t sub_10028B6A8()
{
  uint64_t v0 = qword_1004288D0;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10028B6E4()
{
  unint64_t result = qword_100435858;
  if (!qword_100435858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435858);
  }
  return result;
}

uint64_t sub_10028B738(uint64_t a1, uint64_t a2)
{
  return sub_10028DF48(a1, a2, &qword_100436D20, &qword_100436D28, (void (*)(uint64_t))sub_10028B1F0);
}

unint64_t sub_10028B764()
{
  unint64_t result = qword_100435860;
  if (!qword_100435860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435860);
  }
  return result;
}

unint64_t sub_10028B7BC()
{
  unint64_t result = qword_100435868;
  if (!qword_100435868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435868);
  }
  return result;
}

unint64_t sub_10028B814()
{
  unint64_t result = qword_100435870;
  if (!qword_100435870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435870);
  }
  return result;
}

uint64_t sub_10028B868()
{
  sub_1002FC3B0();
  uint64_t v2 = sub_100300F50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100061330(v3, v0, v2, v1);
}

uint64_t sub_10028B8FC@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041F9E8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1004F53C0, a1);
}

uint64_t sub_10028B934()
{
  return sub_100034B8C(&qword_100435880, &qword_100435888);
}

uint64_t sub_10028B970(uint64_t a1)
{
  unint64_t v2 = sub_10028B1F0();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10028B9C0()
{
  unint64_t result = qword_100435890;
  if (!qword_100435890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435890);
  }
  return result;
}

uint64_t sub_10028BA18(uint64_t a1)
{
  unint64_t v2 = sub_10028B814();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10028BA68()
{
  unint64_t result = qword_100435898;
  if (!qword_100435898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435898);
  }
  return result;
}

uint64_t sub_10028BABC()
{
  return sub_100034B8C(&qword_1004358A0, &qword_1004358A8);
}

uint64_t sub_10028BAF8(uint64_t a1)
{
  return sub_10028BB20(a1, qword_1004F5410);
}

uint64_t sub_10028BB20(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1003010D0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = sub_100301020();
  sub_10002D124(v8, a2);
  sub_10002D0EC(v8, (uint64_t)a2);
  sub_1003010B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  return sub_100301010();
}

uint64_t sub_10028BC88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v1 = sub_10002D0A8(&qword_100420A80);
  __chkstk_darwin(v1 - 8);
  v64 = (char *)v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v3 - 8);
  v63 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100301150();
  __chkstk_darwin(v5 - 8);
  v65 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100301130();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v70 = v11;
  uint64_t v71 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v57 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v61 = (char *)v56 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v56 - v17;
  uint64_t v19 = sub_100301430();
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  v62 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  v66 = (char *)v56 - v23;
  __chkstk_darwin(v22);
  uint64_t v24 = sub_1003010D0();
  uint64_t v59 = *(void *)(v24 - 8);
  uint64_t v60 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  v56[1] = (char *)v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)v56 - v27;
  sub_100301420();
  sub_1003010F0();
  id v29 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v30);
  v32 = v31;
  id v33 = [v29 initWithURL:v31];

  id v34 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v68 = v8 + 8;
  uint64_t v69 = v7;
  uint64_t v67 = v34;
  uint64_t result = v34(v10, v7);
  if (!v33)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v36 = [v33 bundleURL];

  sub_100301110();
  uint64_t v37 = enum case for LocalizedStringResource.BundleDescription.atURL(_:);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 104);
  v71 += 104;
  v38(v18, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v70);
  sub_100301140();
  v56[0] = v28;
  sub_1003010E0();
  sub_100301420();
  sub_1003010F0();
  id v39 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v40);
  id v42 = v41;
  id v43 = [v39 initWithURL:v41];

  uint64_t result = v67(v10, v69);
  if (!v43)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v44 = [v43 bundleURL];

  v45 = v61;
  sub_100301110();

  v38(v45, v37, v70);
  sub_100301140();
  v46 = v63;
  sub_1003010E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v46, 0, 1, v60);
  uint64_t v47 = v64;
  sub_100300E80();
  uint64_t v48 = sub_100300E90();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  sub_100301420();
  sub_1003010F0();
  id v49 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v50);
  id v52 = v51;
  id v53 = [v49 initWithURL:v51];

  uint64_t result = v67(v10, v69);
  if (v53)
  {
    id v54 = [v53 bundleURL];

    v55 = v57;
    sub_100301110();

    v38(v55, v37, v70);
    sub_100301140();
    sub_1003010E0();
    return sub_100300EB0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10028C418(uint64_t a1)
{
  return sub_10028C43C(a1, qword_1004F5428);
}

uint64_t sub_10028C43C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1003010D0();
  sub_10002D124(v3, a2);
  sub_10002D0EC(v3, (uint64_t)a2);
  return sub_1003010B0();
}

uint64_t sub_10028C49C(uint64_t a1)
{
  return sub_10028C4C0(a1, qword_1004F5440);
}

uint64_t sub_10028C4C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10002D0A8(&qword_100436D10);
  sub_10002D124(v3, a2);
  uint64_t v4 = sub_10002D0EC(v3, (uint64_t)a2);
  sub_100300E10();
  uint64_t v5 = sub_100300E20();
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 0, 1, v5);
}

uint64_t sub_10028C574()
{
  uint64_t result = swift_getKeyPath();
  qword_1004F5458 = result;
  return result;
}

uint64_t sub_10028C59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_10002D0A8(&qword_100436CE0);
  v3[23] = swift_task_alloc();
  sub_10002D0A8(&qword_100436CE8);
  v3[24] = swift_task_alloc();
  sub_10002D0A8(&qword_100436CF0);
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_100300D60();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_10002D0A8(&qword_100436CF8);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return _swift_task_switch(sub_10028C760, 0, 0);
}

uint64_t sub_10028C760()
{
  sub_100300DA0();
  long long v1 = *(_OWORD *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  unint64_t v3 = sub_10028D960();
  void *v2 = v0;
  v2[1] = sub_10028C844;
  uint64_t v4 = *(void *)(v0 + 256);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v4, v0 + 40, sub_100300C18, 0, &type metadata for AccessibilityZoomLensEffectEntity, v3);
}

uint64_t sub_10028C844()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10028C940, 0, 0);
}

uint64_t sub_10028C940()
{
  sub_100300DA0();
  v0[11] = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  v0[34] = v1;
  v0[35] = v2;
  v0[12] = v1;
  v0[13] = v2;
  sub_100300DA0();
  if (qword_10041FA20 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F5458;
  v0[36] = qword_1004F5458;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  uint64_t v5 = sub_100034B8C(&qword_100436CB8, &qword_100436CC0);
  *uint64_t v4 = v0;
  v4[1] = sub_10028CA98;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 39, v3, &type metadata for AXZoomFilterAppEnum, v5);
}

uint64_t sub_10028CA98()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1003008C8;
  }
  else {
    uint64_t v2 = sub_10028CC08;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10028CC08()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 224);
  sub_100300DA0();
  long long v5 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 112) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 120) = v5;
  uint64_t v6 = sub_100301000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_100301030();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_10028BA68();
  sub_10028DB74();
  sub_100300D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v11, v2);
  sub_100300D50();
  sub_100300D70();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10028CE80()
{
  uint64_t v0 = sub_10002D0A8(&qword_100436D00);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10041FA20 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100300E70();
  swift_release();
  sub_10028DB74();
  sub_100034B8C(&qword_100436D08, &qword_100436D00);
  sub_100300E60();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

__n128 sub_10028CFE8@<Q0>(uint64_t a1@<X8>)
{
  sub_100300DA0();
  __n128 result = v4;
  *(void *)a1 = v3;
  *(__n128 *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_10028D02C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10028D094(uint64_t a1, uint64_t a2)
{
  return sub_10028D0B8(a1, a2, &qword_10041FA20);
}

uint64_t sub_10028D0B8(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10028D10C()
{
  unint64_t result = qword_1004358B0;
  if (!qword_1004358B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004358B0);
  }
  return result;
}

unint64_t sub_10028D164()
{
  unint64_t result = qword_1004358B8;
  if (!qword_1004358B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004358B8);
  }
  return result;
}

uint64_t sub_10028D1B8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10028D1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028D204(a1, a2, a3, (void (*)(void))sub_10028BA68);
}

uint64_t sub_10028D204(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10028D258@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041FA10, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1004F5428, a1);
}

uint64_t sub_10028D290@<X0>(uint64_t a1@<X8>)
{
  return sub_10028D2B4(&qword_10041FA18, (uint64_t)qword_1004F5440, a1);
}

uint64_t sub_10028D2B4@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10002D0A8(&qword_100436D10);
  uint64_t v6 = sub_10002D0EC(v5, a2);

  return sub_1002FC348(v6, a3);
}

uint64_t sub_10028D31C(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100034BD0;
  return sub_10028C59C(a1, v5, v4);
}

uint64_t sub_10028D3C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002FBB74();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10028D3F0()
{
  return 0xD000000000000032;
}

unint64_t sub_10028D410()
{
  unint64_t result = qword_1004358C8;
  if (!qword_1004358C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004358C8);
  }
  return result;
}

uint64_t sub_10028D468(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10028D488, 0, 0);
}

uint64_t sub_10028D488()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self sharedInstance];
  id v3 = [v2 zoomCurrentLensEffect];

  uint64_t v4 = sub_100301450();
  uint64_t v6 = v5;

  char v7 = sub_10002CE70(v4, v6);
  if (v7 == 6) {
    char v8 = 0;
  }
  else {
    char v8 = v7;
  }
  *uint64_t v1 = v8;
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_10028D560(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10028D584, 0, 0);
}

uint64_t sub_10028D584()
{
  id v1 = [self sharedInstance];
  NSString v2 = sub_100301440();
  swift_bridgeObjectRelease();
  [v1 setZoomCurrentLensEffect:v2];

  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10028D718(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10028D738, 0, 0);
}

uint64_t sub_10028D738()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *uint64_t v1 = sub_1002FBF64();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10028D7A8()
{
  unint64_t result = qword_1004358D8;
  if (!qword_1004358D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004358D8);
  }
  return result;
}

uint64_t sub_10028D7FC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10028DE3C();
  *uint64_t v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10028D8B0()
{
  unint64_t result = qword_1004358E8;
  if (!qword_1004358E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004358E8);
  }
  return result;
}

unint64_t sub_10028D908()
{
  unint64_t result = qword_1004358F0;
  if (!qword_1004358F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004358F0);
  }
  return result;
}

unint64_t sub_10028D960()
{
  unint64_t result = qword_1004358F8[0];
  if (!qword_1004358F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1004358F8);
  }
  return result;
}

uint64_t sub_10028D9B4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10028DE3C();
  *unint64_t v5 = v2;
  v5[1] = sub_1003008E0;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10028DA68(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10028DE3C();
  *uint64_t v4 = v2;
  v4[1] = sub_1003008D0;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10028DB1C()
{
  unint64_t result = qword_100435910;
  if (!qword_100435910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435910);
  }
  return result;
}

unint64_t sub_10028DB74()
{
  unint64_t result = qword_100435918;
  if (!qword_100435918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435918);
  }
  return result;
}

uint64_t sub_10028DBC8()
{
  return sub_10028DC04(&qword_100435920, qword_100435928, (void (*)(void))sub_10028DB74);
}

uint64_t sub_10028DC04(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007084(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10028DC7C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10028D7A8();
  *unint64_t v5 = v2;
  v5[1] = sub_100034BD0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10028DD34()
{
  unint64_t result = qword_100435940;
  if (!qword_100435940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435940);
  }
  return result;
}

unint64_t sub_10028DD8C()
{
  unint64_t result = qword_100435948;
  if (!qword_100435948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435948);
  }
  return result;
}

unint64_t sub_10028DDE4()
{
  unint64_t result = qword_100435950;
  if (!qword_100435950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435950);
  }
  return result;
}

unint64_t sub_10028DE3C()
{
  unint64_t result = qword_100435958;
  if (!qword_100435958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435958);
  }
  return result;
}

uint64_t sub_10028DE90()
{
  uint64_t v0 = qword_1004288E0;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10028DECC()
{
  unint64_t result = qword_100435960;
  if (!qword_100435960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435960);
  }
  return result;
}

uint64_t sub_10028DF20(uint64_t a1, uint64_t a2)
{
  return sub_10028DF48(a1, a2, &qword_100436C98, &qword_100436CA0, (void (*)(uint64_t))sub_10028D960);
}

uint64_t sub_10028DF48(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v7 = sub_10002D0A8(a3);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002D0A8(a4);
  uint64_t v12 = __chkstk_darwin(v11);
  a5(v12);
  sub_100300FE0();
  v15._object = (void *)0x8000000100381770;
  v15._countAndFlagsBits = 0xD000000000000037;
  sub_100300FD0(v15);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for _EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v7);
  sub_100300FC0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  sub_100300FD0(v16);
  return sub_100300FF0();
}

unint64_t sub_10028E10C()
{
  unint64_t result = qword_100435968;
  if (!qword_100435968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435968);
  }
  return result;
}

unint64_t sub_10028E164()
{
  unint64_t result = qword_100435970;
  if (!qword_100435970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435970);
  }
  return result;
}

unint64_t sub_10028E1BC()
{
  unint64_t result = qword_100435978;
  if (!qword_100435978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435978);
  }
  return result;
}

uint64_t sub_10028E210()
{
  sub_100296CD8();
  uint64_t v2 = sub_100300F50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100061330(v3, v0, v2, v1);
}

uint64_t sub_10028E2A4@<X0>(uint64_t a1@<X8>)
{
  return sub_10028E2DC(&qword_10041FA08, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1004F5410, a1);
}

uint64_t sub_10028E2DC@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_10002D0EC(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10028E380()
{
  return sub_100034B8C(&qword_100435988, &qword_100435990);
}

uint64_t sub_10028E3BC(uint64_t a1)
{
  unint64_t v2 = sub_10028D960();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10028E40C()
{
  unint64_t result = qword_100435998;
  if (!qword_100435998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100435998);
  }
  return result;
}

uint64_t sub_10028E464(uint64_t a1)
{
  unint64_t v2 = sub_10028E1BC();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

ValueMetadata *type metadata accessor for AccessibilityZoomLensEffectEntity.AccessibilityZoomLensEffectQuery()
{
  return &type metadata for AccessibilityZoomLensEffectEntity.AccessibilityZoomLensEffectQuery;
}

__n128 initializeWithTake for AccessibilityZoomLensEffectEntity(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityZoomLensEffectEntity()
{
  return &type metadata for AccessibilityZoomLensEffectEntity;
}

__n128 initializeWithTake for AccessibilityZoomLensEffectEntity.UpdateIntent_value(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityZoomLensEffectEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomLensEffectEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomDockPositionEntity.AccessibilityZoomDockPositionQuery()
{
  return &type metadata for AccessibilityZoomDockPositionEntity.AccessibilityZoomDockPositionQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomDockPositionEntity()
{
  return &type metadata for AccessibilityZoomDockPositionEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomDockPositionEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomDockPositionEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomLensModeiPadEntity.AccessibilityZoomLensModeiPadQuery()
{
  return &type metadata for AccessibilityZoomLensModeiPadEntity.AccessibilityZoomLensModeiPadQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomLensModeiPadEntity()
{
  return &type metadata for AccessibilityZoomLensModeiPadEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomLensModeiPadEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomLensModeiPadEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomLensModeEntity.AccessibilityZoomLensModeQuery()
{
  return &type metadata for AccessibilityZoomLensModeEntity.AccessibilityZoomLensModeQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomLensModeEntity()
{
  return &type metadata for AccessibilityZoomLensModeEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomLensModeEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomLensModeEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomControllerColorEntity.AccessibilityZoomControllerColorQuery()
{
  return &type metadata for AccessibilityZoomControllerColorEntity.AccessibilityZoomControllerColorQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomControllerColorEntity()
{
  return &type metadata for AccessibilityZoomControllerColorEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomControllerColorEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomControllerColorEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomControllerTripleTapActionEntity.AccessibilityZoomControllerTripleTapActionQuery()
{
  return &type metadata for AccessibilityZoomControllerTripleTapActionEntity.AccessibilityZoomControllerTripleTapActionQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomControllerTripleTapActionEntity()
{
  return &type metadata for AccessibilityZoomControllerTripleTapActionEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomControllerTripleTapActionEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomControllerTripleTapActionEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomControllerDoubleTapActionEntity.AccessibilityZoomControllerDoubleTapActionQuery()
{
  return &type metadata for AccessibilityZoomControllerDoubleTapActionEntity.AccessibilityZoomControllerDoubleTapActionQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomControllerDoubleTapActionEntity()
{
  return &type metadata for AccessibilityZoomControllerDoubleTapActionEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomControllerDoubleTapActionEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomControllerDoubleTapActionEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomControllerSingleTapActionEntity.AccessibilityZoomControllerSingleTapActionQuery()
{
  return &type metadata for AccessibilityZoomControllerSingleTapActionEntity.AccessibilityZoomControllerSingleTapActionQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomControllerSingleTapActionEntity()
{
  return &type metadata for AccessibilityZoomControllerSingleTapActionEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomControllerSingleTapActionEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomControllerSingleTapActionEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomAdjustZoomLevelWithControllerEnabledEntity.AccessibilityZoomAdjustZoomLevelWithControllerEnabledQuery()
{
  return &type metadata for AccessibilityZoomAdjustZoomLevelWithControllerEnabledEntity.AccessibilityZoomAdjustZoomLevelWithControllerEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomAdjustZoomLevelWithControllerEnabledEntity()
{
  return &type metadata for AccessibilityZoomAdjustZoomLevelWithControllerEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomAdjustZoomLevelWithControllerEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomAdjustZoomLevelWithControllerEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomShowControllerEnabledEntity.AccessibilityZoomShowControllerEnabledQuery()
{
  return &type metadata for AccessibilityZoomShowControllerEnabledEntity.AccessibilityZoomShowControllerEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomShowControllerEnabledEntity()
{
  return &type metadata for AccessibilityZoomShowControllerEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomShowControllerEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomShowControllerEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomAdjustsPointerSizeEnabledEntity.AccessibilityZoomAdjustsPointerSizeEnabledQuery()
{
  return &type metadata for AccessibilityZoomAdjustsPointerSizeEnabledEntity.AccessibilityZoomAdjustsPointerSizeEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomAdjustsPointerSizeEnabledEntity()
{
  return &type metadata for AccessibilityZoomAdjustsPointerSizeEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomAdjustsPointerSizeEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomAdjustsPointerSizeEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomPanningStyleEntity.AccessibilityZoomPanningStyleQuery()
{
  return &type metadata for AccessibilityZoomPanningStyleEntity.AccessibilityZoomPanningStyleQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomPanningStyleEntity()
{
  return &type metadata for AccessibilityZoomPanningStyleEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomPanningStyleEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomPanningStyleEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomTrackpadGestureEnabledEntity.AccessibilityZoomTrackpadGestureEnabledQuery()
{
  return &type metadata for AccessibilityZoomTrackpadGestureEnabledEntity.AccessibilityZoomTrackpadGestureEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomTrackpadGestureEnabledEntity()
{
  return &type metadata for AccessibilityZoomTrackpadGestureEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomTrackpadGestureEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomTrackpadGestureEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomScrollWheelKBShortcutEnabledEntity.AccessibilityZoomScrollWheelKBShortcutEnabledQuery()
{
  return &type metadata for AccessibilityZoomScrollWheelKBShortcutEnabledEntity.AccessibilityZoomScrollWheelKBShortcutEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomScrollWheelKBShortcutEnabledEntity()
{
  return &type metadata for AccessibilityZoomScrollWheelKBShortcutEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomScrollWheelKBShortcutEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomScrollWheelKBShortcutEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomTempToggleZoomKBShortcutEnabledEntity.AccessibilityZoomTempToggleZoomKBShortcutEnabledQuery()
{
  return &type metadata for AccessibilityZoomTempToggleZoomKBShortcutEnabledEntity.AccessibilityZoomTempToggleZoomKBShortcutEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomTempToggleZoomKBShortcutEnabledEntity()
{
  return &type metadata for AccessibilityZoomTempToggleZoomKBShortcutEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomTempToggleZoomKBShortcutEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomTempToggleZoomKBShortcutEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomSwitchZoomModeKBShortcutEnabledEntity.AccessibilityZoomSwitchZoomModeKBShortcutEnabledQuery()
{
  return &type metadata for AccessibilityZoomSwitchZoomModeKBShortcutEnabledEntity.AccessibilityZoomSwitchZoomModeKBShortcutEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomSwitchZoomModeKBShortcutEnabledEntity()
{
  return &type metadata for AccessibilityZoomSwitchZoomModeKBShortcutEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomSwitchZoomModeKBShortcutEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomSwitchZoomModeKBShortcutEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomResizeZoomKBShortcutEnabledEntity.AccessibilityZoomResizeZoomKBShortcutEnabledQuery()
{
  return &type metadata for AccessibilityZoomResizeZoomKBShortcutEnabledEntity.AccessibilityZoomResizeZoomKBShortcutEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomResizeZoomKBShortcutEnabledEntity()
{
  return &type metadata for AccessibilityZoomResizeZoomKBShortcutEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomResizeZoomKBShortcutEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomResizeZoomKBShortcutEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomPanZoomKBShortcutEnabledEntity.AccessibilityZoomPanZoomKBShortcutEnabledQuery()
{
  return &type metadata for AccessibilityZoomPanZoomKBShortcutEnabledEntity.AccessibilityZoomPanZoomKBShortcutEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomPanZoomKBShortcutEnabledEntity()
{
  return &type metadata for AccessibilityZoomPanZoomKBShortcutEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomPanZoomKBShortcutEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomPanZoomKBShortcutEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomToggleZoomKBShortcutEnabledEntity.AccessibilityZoomToggleZoomKBShortcutEnabledQuery()
{
  return &type metadata for AccessibilityZoomToggleZoomKBShortcutEnabledEntity.AccessibilityZoomToggleZoomKBShortcutEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomToggleZoomKBShortcutEnabledEntity()
{
  return &type metadata for AccessibilityZoomToggleZoomKBShortcutEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomToggleZoomKBShortcutEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomToggleZoomKBShortcutEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomAdjustZoomLevelKBShortcutEnabledEntity.AccessibilityZoomAdjustZoomLevelKBShortcutEnabledQuery()
{
  return &type metadata for AccessibilityZoomAdjustZoomLevelKBShortcutEnabledEntity.AccessibilityZoomAdjustZoomLevelKBShortcutEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomAdjustZoomLevelKBShortcutEnabledEntity()
{
  return &type metadata for AccessibilityZoomAdjustZoomLevelKBShortcutEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomAdjustZoomLevelKBShortcutEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomAdjustZoomLevelKBShortcutEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomKeyboardShortcutsEnabledEntity.AccessibilityZoomKeyboardShortcutsEnabledQuery()
{
  return &type metadata for AccessibilityZoomKeyboardShortcutsEnabledEntity.AccessibilityZoomKeyboardShortcutsEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomKeyboardShortcutsEnabledEntity()
{
  return &type metadata for AccessibilityZoomKeyboardShortcutsEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomKeyboardShortcutsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomKeyboardShortcutsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomShowWhileMirroringEnabledEntity.AccessibilityZoomShowWhileMirroringEnabledQuery()
{
  return &type metadata for AccessibilityZoomShowWhileMirroringEnabledEntity.AccessibilityZoomShowWhileMirroringEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomShowWhileMirroringEnabledEntity()
{
  return &type metadata for AccessibilityZoomShowWhileMirroringEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomShowWhileMirroringEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomShowWhileMirroringEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomSmartTypingEnabledEntity.AccessibilityZoomSmartTypingEnabledQuery()
{
  return &type metadata for AccessibilityZoomSmartTypingEnabledEntity.AccessibilityZoomSmartTypingEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomSmartTypingEnabledEntity()
{
  return &type metadata for AccessibilityZoomSmartTypingEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomSmartTypingEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomSmartTypingEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomFollowFocusEnabledEntity.AccessibilityZoomFollowFocusEnabledQuery()
{
  return &type metadata for AccessibilityZoomFollowFocusEnabledEntity.AccessibilityZoomFollowFocusEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomFollowFocusEnabledEntity()
{
  return &type metadata for AccessibilityZoomFollowFocusEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomFollowFocusEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomFollowFocusEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityZoomEnabledEntity.AccessibilityZoomEnabledQuery()
{
  return &type metadata for AccessibilityZoomEnabledEntity.AccessibilityZoomEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityZoomEnabledEntity()
{
  return &type metadata for AccessibilityZoomEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityZoomEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityZoomEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXSpeakHintsEnabledEntity.AXSpeakHintsEnabledQuery()
{
  return &type metadata for AXSpeakHintsEnabledEntity.AXSpeakHintsEnabledQuery;
}

ValueMetadata *type metadata accessor for AXSpeakHintsEnabledEntity()
{
  return &type metadata for AXSpeakHintsEnabledEntity;
}

ValueMetadata *type metadata accessor for AXSpeakHintsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AXSpeakHintsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverDetectLanguagesEnabledEntity.AccessibilityVoiceOverDetectLanguagesEnabledQuery()
{
  return &type metadata for AccessibilityVoiceOverDetectLanguagesEnabledEntity.AccessibilityVoiceOverDetectLanguagesEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverDetectLanguagesEnabledEntity()
{
  return &type metadata for AccessibilityVoiceOverDetectLanguagesEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverDetectLanguagesEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverDetectLanguagesEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverPitchChangeEnabledEntity.AccessibilityVoiceOverPitchChangeEnabledQuery()
{
  return &type metadata for AccessibilityVoiceOverPitchChangeEnabledEntity.AccessibilityVoiceOverPitchChangeEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverPitchChangeEnabledEntity()
{
  return &type metadata for AccessibilityVoiceOverPitchChangeEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverPitchChangeEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverPitchChangeEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverSpeakingRateEntity.AccessibilityVoiceOverSpeakingRateQuery()
{
  return &type metadata for AccessibilityVoiceOverSpeakingRateEntity.AccessibilityVoiceOverSpeakingRateQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverSpeakingRateEntity()
{
  return &type metadata for AccessibilityVoiceOverSpeakingRateEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverSpeakingRateEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverSpeakingRateEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverUseRingerSwitchEntity.AccessibilityVoiceOverUseRingerSwitchQuery()
{
  return &type metadata for AccessibilityVoiceOverUseRingerSwitchEntity.AccessibilityVoiceOverUseRingerSwitchQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverUseRingerSwitchEntity()
{
  return &type metadata for AccessibilityVoiceOverUseRingerSwitchEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverUseRingerSwitchEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverUseRingerSwitchEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverSpeakConfirmationEnabledEntity.AccessibilityVoiceOverSpeakConfirmationEnabledQuery()
{
  return &type metadata for AccessibilityVoiceOverSpeakConfirmationEnabledEntity.AccessibilityVoiceOverSpeakConfirmationEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverSpeakConfirmationEnabledEntity()
{
  return &type metadata for AccessibilityVoiceOverSpeakConfirmationEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverSpeakConfirmationEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverSpeakConfirmationEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverRowColumnEnabledEntity.AccessibilityVoiceOverRowColumnEnabledQuery()
{
  return &type metadata for AccessibilityVoiceOverRowColumnEnabledEntity.AccessibilityVoiceOverRowColumnEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverRowColumnEnabledEntity()
{
  return &type metadata for AccessibilityVoiceOverRowColumnEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverRowColumnEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverRowColumnEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverTableHeadersEnabledEntity.AccessibilityVoiceOverTableHeadersEnabledQuery()
{
  return &type metadata for AccessibilityVoiceOverTableHeadersEnabledEntity.AccessibilityVoiceOverTableHeadersEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverTableHeadersEnabledEntity()
{
  return &type metadata for AccessibilityVoiceOverTableHeadersEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverTableHeadersEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverTableHeadersEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverFlashlightNotificationsEnabledEntity.AccessibilityVoiceOverFlashlightNotificationsEnabledQuery()
{
  return &type metadata for AccessibilityVoiceOverFlashlightNotificationsEnabledEntity.AccessibilityVoiceOverFlashlightNotificationsEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverFlashlightNotificationsEnabledEntity()
{
  return &type metadata for AccessibilityVoiceOverFlashlightNotificationsEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverFlashlightNotificationsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverFlashlightNotificationsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXTypingStyleEntity.AXTypingStyleQuery()
{
  return &type metadata for AXTypingStyleEntity.AXTypingStyleQuery;
}

ValueMetadata *type metadata accessor for AXTypingStyleEntity()
{
  return &type metadata for AXTypingStyleEntity;
}

ValueMetadata *type metadata accessor for AXTypingStyleEntity.UpdateIntent_value()
{
  return &type metadata for AXTypingStyleEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXTypingPhoneticFeedbackEntity.AXTypingPhoneticFeedbackQuery()
{
  return &type metadata for AXTypingPhoneticFeedbackEntity.AXTypingPhoneticFeedbackQuery;
}

ValueMetadata *type metadata accessor for AXTypingPhoneticFeedbackEntity()
{
  return &type metadata for AXTypingPhoneticFeedbackEntity;
}

ValueMetadata *type metadata accessor for AXTypingPhoneticFeedbackEntity.UpdateIntent_value()
{
  return &type metadata for AXTypingPhoneticFeedbackEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverAudioDuckingModeEntity.AccessibilityVoiceOverAudioDuckingModeQuery()
{
  return &type metadata for AccessibilityVoiceOverAudioDuckingModeEntity.AccessibilityVoiceOverAudioDuckingModeQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverAudioDuckingModeEntity()
{
  return &type metadata for AccessibilityVoiceOverAudioDuckingModeEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverAudioDuckingModeEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverAudioDuckingModeEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverLargeCursorEntity.AccessibilityVoiceOverLargeCursorQuery()
{
  return &type metadata for AccessibilityVoiceOverLargeCursorEntity.AccessibilityVoiceOverLargeCursorQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverLargeCursorEntity()
{
  return &type metadata for AccessibilityVoiceOverLargeCursorEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverLargeCursorEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverLargeCursorEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverCaptionPanelEntity.AccessibilityVoiceOverCaptionPanelQuery()
{
  return &type metadata for AccessibilityVoiceOverCaptionPanelEntity.AccessibilityVoiceOverCaptionPanelQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverCaptionPanelEntity()
{
  return &type metadata for AccessibilityVoiceOverCaptionPanelEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverCaptionPanelEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverCaptionPanelEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverAutoSelectSpeakerInCallEntity.AccessibilityVoiceOverAutoSelectSpeakerInCallQuery()
{
  return &type metadata for AccessibilityVoiceOverAutoSelectSpeakerInCallEntity.AccessibilityVoiceOverAutoSelectSpeakerInCallQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverAutoSelectSpeakerInCallEntity()
{
  return &type metadata for AccessibilityVoiceOverAutoSelectSpeakerInCallEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverAutoSelectSpeakerInCallEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverAutoSelectSpeakerInCallEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverAudioSendToHDMIEntity.AccessibilityVoiceOverAudioSendToHDMIQuery()
{
  return &type metadata for AccessibilityVoiceOverAudioSendToHDMIEntity.AccessibilityVoiceOverAudioSendToHDMIQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverAudioSendToHDMIEntity()
{
  return &type metadata for AccessibilityVoiceOverAudioSendToHDMIEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverAudioSendToHDMIEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverAudioSendToHDMIEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverNavigationStyleEntity.AccessibilityVoiceOverNavigationStyleQuery()
{
  return &type metadata for AccessibilityVoiceOverNavigationStyleEntity.AccessibilityVoiceOverNavigationStyleQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverNavigationStyleEntity()
{
  return &type metadata for AccessibilityVoiceOverNavigationStyleEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverNavigationStyleEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverNavigationStyleEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverRotorEditAppsOnHomeScreenEntity.AccessibilityVoiceOverRotorEditAppsOnHomeScreenQuery()
{
  return &type metadata for AccessibilityVoiceOverRotorEditAppsOnHomeScreenEntity.AccessibilityVoiceOverRotorEditAppsOnHomeScreenQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverRotorEditAppsOnHomeScreenEntity()
{
  return &type metadata for AccessibilityVoiceOverRotorEditAppsOnHomeScreenEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverRotorEditAppsOnHomeScreenEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverRotorEditAppsOnHomeScreenEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverRotorChangeRotorWithItemEntity.AccessibilityVoiceOverRotorChangeRotorWithItemQuery()
{
  return &type metadata for AccessibilityVoiceOverRotorChangeRotorWithItemEntity.AccessibilityVoiceOverRotorChangeRotorWithItemQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverRotorChangeRotorWithItemEntity()
{
  return &type metadata for AccessibilityVoiceOverRotorChangeRotorWithItemEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverRotorChangeRotorWithItemEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverRotorChangeRotorWithItemEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXVerbosityEmojiSuffixEnabledEntity.AXVerbosityEmojiSuffixEnabledQuery()
{
  return &type metadata for AXVerbosityEmojiSuffixEnabledEntity.AXVerbosityEmojiSuffixEnabledQuery;
}

ValueMetadata *type metadata accessor for AXVerbosityEmojiSuffixEnabledEntity()
{
  return &type metadata for AXVerbosityEmojiSuffixEnabledEntity;
}

ValueMetadata *type metadata accessor for AXVerbosityEmojiSuffixEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AXVerbosityEmojiSuffixEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXVerbosityNumberFeedbackEntity.AXVerbosityNumberFeedbackQuery()
{
  return &type metadata for AXVerbosityNumberFeedbackEntity.AXVerbosityNumberFeedbackQuery;
}

ValueMetadata *type metadata accessor for AXVerbosityNumberFeedbackEntity()
{
  return &type metadata for AXVerbosityNumberFeedbackEntity;
}

ValueMetadata *type metadata accessor for AXVerbosityNumberFeedbackEntity.UpdateIntent_value()
{
  return &type metadata for AXVerbosityNumberFeedbackEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverImageDescriptionsSensitiveContentOutputEntity.AccessibilityVoiceOverImageDescriptionsSensitiveContentOutputQuery()
{
  return &type metadata for AccessibilityVoiceOverImageDescriptionsSensitiveContentOutputEntity.AccessibilityVoiceOverImageDescriptionsSensitiveContentOutputQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverImageDescriptionsSensitiveContentOutputEntity()
{
  return &type metadata for AccessibilityVoiceOverImageDescriptionsSensitiveContentOutputEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverImageDescriptionsSensitiveContentOutputEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverImageDescriptionsSensitiveContentOutputEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverImageDescriptionsEnabledEntity.AccessibilityVoiceOverImageDescriptionsEnabledQuery()
{
  return &type metadata for AccessibilityVoiceOverImageDescriptionsEnabledEntity.AccessibilityVoiceOverImageDescriptionsEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverImageDescriptionsEnabledEntity()
{
  return &type metadata for AccessibilityVoiceOverImageDescriptionsEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverImageDescriptionsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverImageDescriptionsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXVerbosityDeletingTextEntity.AXVerbosityDeletingTextQuery()
{
  return &type metadata for AXVerbosityDeletingTextEntity.AXVerbosityDeletingTextQuery;
}

ValueMetadata *type metadata accessor for AXVerbosityDeletingTextEntity()
{
  return &type metadata for AXVerbosityDeletingTextEntity;
}

ValueMetadata *type metadata accessor for AXVerbosityDeletingTextEntity.UpdateIntent_value()
{
  return &type metadata for AXVerbosityDeletingTextEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXVerbosityCapitalLettersEntity.AXVerbosityCapitalLettersQuery()
{
  return &type metadata for AXVerbosityCapitalLettersEntity.AXVerbosityCapitalLettersQuery;
}

ValueMetadata *type metadata accessor for AXVerbosityCapitalLettersEntity()
{
  return &type metadata for AXVerbosityCapitalLettersEntity;
}

ValueMetadata *type metadata accessor for AXVerbosityCapitalLettersEntity.UpdateIntent_value()
{
  return &type metadata for AXVerbosityCapitalLettersEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverScreenRecognitionEnabledEntity.AccessibilityVoiceOverScreenRecognitionEnabledQuery()
{
  return &type metadata for AccessibilityVoiceOverScreenRecognitionEnabledEntity.AccessibilityVoiceOverScreenRecognitionEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverScreenRecognitionEnabledEntity()
{
  return &type metadata for AccessibilityVoiceOverScreenRecognitionEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverScreenRecognitionEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverScreenRecognitionEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverNeuralFeedbackStyleEntity.AccessibilityVoiceOverNeuralFeedbackStyleQuery()
{
  return &type metadata for AccessibilityVoiceOverNeuralFeedbackStyleEntity.AccessibilityVoiceOverNeuralFeedbackStyleQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverNeuralFeedbackStyleEntity()
{
  return &type metadata for AccessibilityVoiceOverNeuralFeedbackStyleEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverNeuralFeedbackStyleEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverNeuralFeedbackStyleEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverTextRecognitionEnabledEntity.AccessibilityVoiceOverTextRecognitionEnabledQuery()
{
  return &type metadata for AccessibilityVoiceOverTextRecognitionEnabledEntity.AccessibilityVoiceOverTextRecognitionEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverTextRecognitionEnabledEntity()
{
  return &type metadata for AccessibilityVoiceOverTextRecognitionEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverTextRecognitionEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverTextRecognitionEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverEnabledEntity.AccessibilityVoiceOverEnabledQuery()
{
  return &type metadata for AccessibilityVoiceOverEnabledEntity.AccessibilityVoiceOverEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverEnabledEntity()
{
  return &type metadata for AccessibilityVoiceOverEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlAttentionAwareEntity.AccessibilityVoiceControlAttentionAwareQuery()
{
  return &type metadata for AccessibilityVoiceControlAttentionAwareEntity.AccessibilityVoiceControlAttentionAwareQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlAttentionAwareEntity()
{
  return &type metadata for AccessibilityVoiceControlAttentionAwareEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlAttentionAwareEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceControlAttentionAwareEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlOverlayEntity.AccessibilityVoiceControlOverlayQuery()
{
  return &type metadata for AccessibilityVoiceControlOverlayEntity.AccessibilityVoiceControlOverlayQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlOverlayEntity()
{
  return &type metadata for AccessibilityVoiceControlOverlayEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlOverlayEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceControlOverlayEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlShowHintsEntity.AccessibilityVoiceControlShowHintsQuery()
{
  return &type metadata for AccessibilityVoiceControlShowHintsEntity.AccessibilityVoiceControlShowHintsQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlShowHintsEntity()
{
  return &type metadata for AccessibilityVoiceControlShowHintsEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlShowHintsEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceControlShowHintsEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlPlaySoundEntity.AccessibilityVoiceControlPlaySoundQuery()
{
  return &type metadata for AccessibilityVoiceControlPlaySoundEntity.AccessibilityVoiceControlPlaySoundQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlPlaySoundEntity()
{
  return &type metadata for AccessibilityVoiceControlPlaySoundEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlPlaySoundEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceControlPlaySoundEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlShowConfirmationEntity.AccessibilityVoiceControlShowConfirmationQuery()
{
  return &type metadata for AccessibilityVoiceControlShowConfirmationEntity.AccessibilityVoiceControlShowConfirmationQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlShowConfirmationEntity()
{
  return &type metadata for AccessibilityVoiceControlShowConfirmationEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlShowConfirmationEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceControlShowConfirmationEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlEnabledEntity.AccessibilityVoiceControlEnabledQuery()
{
  return &type metadata for AccessibilityVoiceControlEnabledEntity.AccessibilityVoiceControlEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlEnabledEntity()
{
  return &type metadata for AccessibilityVoiceControlEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceControlEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceControlEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityPreventLockToEndCallEntity.AccessibilityPreventLockToEndCallQuery()
{
  return &type metadata for AccessibilityPreventLockToEndCallEntity.AccessibilityPreventLockToEndCallQuery;
}

ValueMetadata *type metadata accessor for AccessibilityPreventLockToEndCallEntity()
{
  return &type metadata for AccessibilityPreventLockToEndCallEntity;
}

ValueMetadata *type metadata accessor for AccessibilityPreventLockToEndCallEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityPreventLockToEndCallEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVibrationEntity.AccessibilityVibrationQuery()
{
  return &type metadata for AccessibilityVibrationEntity.AccessibilityVibrationQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVibrationEntity()
{
  return &type metadata for AccessibilityVibrationEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVibrationEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVibrationEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityShakeToUndoEntity.AccessibilityShakeToUndoQuery()
{
  return &type metadata for AccessibilityShakeToUndoEntity.AccessibilityShakeToUndoQuery;
}

ValueMetadata *type metadata accessor for AccessibilityShakeToUndoEntity()
{
  return &type metadata for AccessibilityShakeToUndoEntity;
}

ValueMetadata *type metadata accessor for AccessibilityShakeToUndoEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityShakeToUndoEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityTapToWakeEntity.AccessibilityTapToWakeQuery()
{
  return &type metadata for AccessibilityTapToWakeEntity.AccessibilityTapToWakeQuery;
}

ValueMetadata *type metadata accessor for AccessibilityTapToWakeEntity()
{
  return &type metadata for AccessibilityTapToWakeEntity;
}

ValueMetadata *type metadata accessor for AccessibilityTapToWakeEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityTapToWakeEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityHapticTouchDurationEntity.AccessibilityHapticTouchDurationQuery()
{
  return &type metadata for AccessibilityHapticTouchDurationEntity.AccessibilityHapticTouchDurationQuery;
}

ValueMetadata *type metadata accessor for AccessibilityHapticTouchDurationEntity()
{
  return &type metadata for AccessibilityHapticTouchDurationEntity;
}

ValueMetadata *type metadata accessor for AccessibilityHapticTouchDurationEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityHapticTouchDurationEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityReachabilityEntity.AccessibilityReachabilityQuery()
{
  return &type metadata for AccessibilityReachabilityEntity.AccessibilityReachabilityQuery;
}

ValueMetadata *type metadata accessor for AccessibilityReachabilityEntity()
{
  return &type metadata for AccessibilityReachabilityEntity;
}

ValueMetadata *type metadata accessor for AccessibilityReachabilityEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityReachabilityEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityBackTapEntity.AccessibilityBackTapQuery()
{
  return &type metadata for AccessibilityBackTapEntity.AccessibilityBackTapQuery;
}

ValueMetadata *type metadata accessor for AccessibilityBackTapEntity()
{
  return &type metadata for AccessibilityBackTapEntity;
}

uint64_t destroy for AccessibilityBackTapEntity.UpdateIntent_value()
{
  swift_release();

  return swift_release();
}

ValueMetadata *type metadata accessor for AccessibilityBackTapEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityBackTapEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlScanningStyleEntity.AccessibilitySwitchControlScanningStyleQuery()
{
  return &type metadata for AccessibilitySwitchControlScanningStyleEntity.AccessibilitySwitchControlScanningStyleQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlScanningStyleEntity()
{
  return &type metadata for AccessibilitySwitchControlScanningStyleEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlScanningStyleEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySwitchControlScanningStyleEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXSwitchControlCursorColorEntity.AXSwitchControlCursorColorQuery()
{
  return &type metadata for AXSwitchControlCursorColorEntity.AXSwitchControlCursorColorQuery;
}

ValueMetadata *type metadata accessor for AXSwitchControlCursorColorEntity()
{
  return &type metadata for AXSwitchControlCursorColorEntity;
}

ValueMetadata *type metadata accessor for AXSwitchControlCursorColorEntity.UpdateIntent_value()
{
  return &type metadata for AXSwitchControlCursorColorEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlUseHeadTrackingEntity.AccessibilitySwitchControlUseHeadTrackingQuery()
{
  return &type metadata for AccessibilitySwitchControlUseHeadTrackingEntity.AccessibilitySwitchControlUseHeadTrackingQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlUseHeadTrackingEntity()
{
  return &type metadata for AccessibilitySwitchControlUseHeadTrackingEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlUseHeadTrackingEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySwitchControlUseHeadTrackingEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlGlidingCursorSelectionModeEntity.AccessibilitySwitchControlGlidingCursorSelectionModeQuery()
{
  return &type metadata for AccessibilitySwitchControlGlidingCursorSelectionModeEntity.AccessibilitySwitchControlGlidingCursorSelectionModeQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlGlidingCursorSelectionModeEntity()
{
  return &type metadata for AccessibilitySwitchControlGlidingCursorSelectionModeEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlGlidingCursorSelectionModeEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySwitchControlGlidingCursorSelectionModeEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlTapBehaviorEntity.AccessibilitySwitchControlTapBehaviorQuery()
{
  return &type metadata for AccessibilitySwitchControlTapBehaviorEntity.AccessibilitySwitchControlTapBehaviorQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlTapBehaviorEntity()
{
  return &type metadata for AccessibilitySwitchControlTapBehaviorEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlTapBehaviorEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySwitchControlTapBehaviorEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlModeEntity.AccessibilitySwitchControlModeQuery()
{
  return &type metadata for AccessibilitySwitchControlModeEntity.AccessibilitySwitchControlModeQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlModeEntity()
{
  return &type metadata for AccessibilitySwitchControlModeEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlModeEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySwitchControlModeEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlIgnoreInvalidSwitchesEntity.AccessibilitySwitchControlIgnoreInvalidSwitchesQuery()
{
  return &type metadata for AccessibilitySwitchControlIgnoreInvalidSwitchesEntity.AccessibilitySwitchControlIgnoreInvalidSwitchesQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlIgnoreInvalidSwitchesEntity()
{
  return &type metadata for AccessibilitySwitchControlIgnoreInvalidSwitchesEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlIgnoreInvalidSwitchesEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySwitchControlIgnoreInvalidSwitchesEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlLongPressIntervalEntity.AccessibilitySwitchControlLongPressIntervalQuery()
{
  return &type metadata for AccessibilitySwitchControlLongPressIntervalEntity.AccessibilitySwitchControlLongPressIntervalQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlLongPressIntervalEntity()
{
  return &type metadata for AccessibilitySwitchControlLongPressIntervalEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlLongPressIntervalEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySwitchControlLongPressIntervalEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlLongPressEntity.AccessibilitySwitchControlLongPressQuery()
{
  return &type metadata for AccessibilitySwitchControlLongPressEntity.AccessibilitySwitchControlLongPressQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlLongPressEntity()
{
  return &type metadata for AccessibilitySwitchControlLongPressEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlLongPressEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySwitchControlLongPressEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlMoveRepeatIntervalEntity.AccessibilitySwitchControlMoveRepeatIntervalQuery()
{
  return &type metadata for AccessibilitySwitchControlMoveRepeatIntervalEntity.AccessibilitySwitchControlMoveRepeatIntervalQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlMoveRepeatIntervalEntity()
{
  return &type metadata for AccessibilitySwitchControlMoveRepeatIntervalEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlMoveRepeatIntervalEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySwitchControlMoveRepeatIntervalEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlMoveRepeatEntity.AccessibilitySwitchControlMoveRepeatQuery()
{
  return &type metadata for AccessibilitySwitchControlMoveRepeatEntity.AccessibilitySwitchControlMoveRepeatQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlMoveRepeatEntity()
{
  return &type metadata for AccessibilitySwitchControlMoveRepeatEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlMoveRepeatEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySwitchControlMoveRepeatEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlPauseOnFirstItemIntervalEntity.AccessibilitySwitchControlPauseOnFirstItemIntervalQuery()
{
  return &type metadata for AccessibilitySwitchControlPauseOnFirstItemIntervalEntity.AccessibilitySwitchControlPauseOnFirstItemIntervalQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlPauseOnFirstItemIntervalEntity()
{
  return &type metadata for AccessibilitySwitchControlPauseOnFirstItemIntervalEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlPauseOnFirstItemIntervalEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySwitchControlPauseOnFirstItemIntervalEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlPauseOnFirstItemEntity.AccessibilitySwitchControlPauseOnFirstItemQuery()
{
  return &type metadata for AccessibilitySwitchControlPauseOnFirstItemEntity.AccessibilitySwitchControlPauseOnFirstItemQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlPauseOnFirstItemEntity()
{
  return &type metadata for AccessibilitySwitchControlPauseOnFirstItemEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlPauseOnFirstItemEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySwitchControlPauseOnFirstItemEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlAutoScanningTimeEntity.AccessibilitySwitchControlAutoScanningTimeQuery()
{
  return &type metadata for AccessibilitySwitchControlAutoScanningTimeEntity.AccessibilitySwitchControlAutoScanningTimeQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlAutoScanningTimeEntity()
{
  return &type metadata for AccessibilitySwitchControlAutoScanningTimeEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlAutoScanningTimeEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySwitchControlAutoScanningTimeEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlEnabledEntity.AccessibilitySwitchControlEnabledQuery()
{
  return &type metadata for AccessibilitySwitchControlEnabledEntity.AccessibilitySwitchControlEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlEnabledEntity()
{
  return &type metadata for AccessibilitySwitchControlEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySwitchControlEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySwitchControlEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXSubtitlesShowOnSkipBackEntity.AXSubtitlesShowOnSkipBackQuery()
{
  return &type metadata for AXSubtitlesShowOnSkipBackEntity.AXSubtitlesShowOnSkipBackQuery;
}

ValueMetadata *type metadata accessor for AXSubtitlesShowOnSkipBackEntity()
{
  return &type metadata for AXSubtitlesShowOnSkipBackEntity;
}

ValueMetadata *type metadata accessor for AXSubtitlesShowOnSkipBackEntity.UpdateIntent_value()
{
  return &type metadata for AXSubtitlesShowOnSkipBackEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXSubtitlesShowWhenMutedEntity.AXSubtitlesShowWhenMutedQuery()
{
  return &type metadata for AXSubtitlesShowWhenMutedEntity.AXSubtitlesShowWhenMutedQuery;
}

ValueMetadata *type metadata accessor for AXSubtitlesShowWhenMutedEntity()
{
  return &type metadata for AXSubtitlesShowWhenMutedEntity;
}

ValueMetadata *type metadata accessor for AXSubtitlesShowWhenMutedEntity.UpdateIntent_value()
{
  return &type metadata for AXSubtitlesShowWhenMutedEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXSubtitlesShowAudioTranscriptionsEntity.AXSubtitlesShowAudioTranscriptionsQuery()
{
  return &type metadata for AXSubtitlesShowAudioTranscriptionsEntity.AXSubtitlesShowAudioTranscriptionsQuery;
}

ValueMetadata *type metadata accessor for AXSubtitlesShowAudioTranscriptionsEntity()
{
  return &type metadata for AXSubtitlesShowAudioTranscriptionsEntity;
}

ValueMetadata *type metadata accessor for AXSubtitlesShowAudioTranscriptionsEntity.UpdateIntent_value()
{
  return &type metadata for AXSubtitlesShowAudioTranscriptionsEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityClosedCaptionsEnabledEntity.AccessibilityClosedCaptionsEnabledQuery()
{
  return &type metadata for AccessibilityClosedCaptionsEnabledEntity.AccessibilityClosedCaptionsEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityClosedCaptionsEnabledEntity()
{
  return &type metadata for AccessibilityClosedCaptionsEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityClosedCaptionsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityClosedCaptionsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityQuickTypeWordFeedbackEnabledEntity.AccessibilityQuickTypeWordFeedbackEnabledQuery()
{
  return &type metadata for AccessibilityQuickTypeWordFeedbackEnabledEntity.AccessibilityQuickTypeWordFeedbackEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityQuickTypeWordFeedbackEnabledEntity()
{
  return &type metadata for AccessibilityQuickTypeWordFeedbackEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityQuickTypeWordFeedbackEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityQuickTypeWordFeedbackEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySpeakCorrectionsEnabledEntity.AccessibilitySpeakCorrectionsEnabledQuery()
{
  return &type metadata for AccessibilitySpeakCorrectionsEnabledEntity.AccessibilitySpeakCorrectionsEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySpeakCorrectionsEnabledEntity()
{
  return &type metadata for AccessibilitySpeakCorrectionsEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySpeakCorrectionsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySpeakCorrectionsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityWordFeedbackEnabledEntity.AccessibilityWordFeedbackEnabledQuery()
{
  return &type metadata for AccessibilityWordFeedbackEnabledEntity.AccessibilityWordFeedbackEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityWordFeedbackEnabledEntity()
{
  return &type metadata for AccessibilityWordFeedbackEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityWordFeedbackEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityWordFeedbackEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityPhoneticFeedbackEnabledEntity.AccessibilityPhoneticFeedbackEnabledQuery()
{
  return &type metadata for AccessibilityPhoneticFeedbackEnabledEntity.AccessibilityPhoneticFeedbackEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityPhoneticFeedbackEnabledEntity()
{
  return &type metadata for AccessibilityPhoneticFeedbackEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityPhoneticFeedbackEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityPhoneticFeedbackEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityLetterFeedbackEnabledEntity.AccessibilityLetterFeedbackEnabledQuery()
{
  return &type metadata for AccessibilityLetterFeedbackEnabledEntity.AccessibilityLetterFeedbackEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityLetterFeedbackEnabledEntity()
{
  return &type metadata for AccessibilityLetterFeedbackEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityLetterFeedbackEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityLetterFeedbackEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityDetectLanguagesEnabledEntity.AccessibilityDetectLanguagesEnabledQuery()
{
  return &type metadata for AccessibilityDetectLanguagesEnabledEntity.AccessibilityDetectLanguagesEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityDetectLanguagesEnabledEntity()
{
  return &type metadata for AccessibilityDetectLanguagesEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityDetectLanguagesEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityDetectLanguagesEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySpokenContentEnabledEntity.AccessibilitySpokenContentEnabledQuery()
{
  return &type metadata for AccessibilitySpokenContentEnabledEntity.AccessibilitySpokenContentEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySpokenContentEnabledEntity()
{
  return &type metadata for AccessibilitySpokenContentEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySpokenContentEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySpokenContentEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySpeakSelectionEnabledEntity.AccessibilitySpeakSelectionEnabledQuery()
{
  return &type metadata for AccessibilitySpeakSelectionEnabledEntity.AccessibilitySpeakSelectionEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySpeakSelectionEnabledEntity()
{
  return &type metadata for AccessibilitySpeakSelectionEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySpeakSelectionEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySpeakSelectionEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySiriSpokenResponsesEntity.AccessibilitySiriSpokenResponsesQuery()
{
  return &type metadata for AccessibilitySiriSpokenResponsesEntity.AccessibilitySiriSpokenResponsesQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySiriSpokenResponsesEntity()
{
  return &type metadata for AccessibilitySiriSpokenResponsesEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySiriSpokenResponsesEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySiriSpokenResponsesEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySiriCallHangUpEntity.AccessibilitySiriCallHangUpQuery()
{
  return &type metadata for AccessibilitySiriCallHangUpEntity.AccessibilitySiriCallHangUpQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySiriCallHangUpEntity()
{
  return &type metadata for AccessibilitySiriCallHangUpEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySiriCallHangUpEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySiriCallHangUpEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySiriAnnounceNotificationsOnSpeakerEntity.AccessibilitySiriAnnounceNotificationsOnSpeakerQuery()
{
  return &type metadata for AccessibilitySiriAnnounceNotificationsOnSpeakerEntity.AccessibilitySiriAnnounceNotificationsOnSpeakerQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySiriAnnounceNotificationsOnSpeakerEntity()
{
  return &type metadata for AccessibilitySiriAnnounceNotificationsOnSpeakerEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySiriAnnounceNotificationsOnSpeakerEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySiriAnnounceNotificationsOnSpeakerEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySiriShowAppsBehindSiriEntity.AccessibilitySiriShowAppsBehindSiriQuery()
{
  return &type metadata for AccessibilitySiriShowAppsBehindSiriEntity.AccessibilitySiriShowAppsBehindSiriQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySiriShowAppsBehindSiriEntity()
{
  return &type metadata for AccessibilitySiriShowAppsBehindSiriEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySiriShowAppsBehindSiriEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySiriShowAppsBehindSiriEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySiriAlwaysListenForEntity.AccessibilitySiriAlwaysListenForQuery()
{
  return &type metadata for AccessibilitySiriAlwaysListenForEntity.AccessibilitySiriAlwaysListenForQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySiriAlwaysListenForEntity()
{
  return &type metadata for AccessibilitySiriAlwaysListenForEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySiriAlwaysListenForEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySiriAlwaysListenForEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySiriSpeakingRateEntity.AccessibilitySiriSpeakingRateQuery()
{
  return &type metadata for AccessibilitySiriSpeakingRateEntity.AccessibilitySiriSpeakingRateQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySiriSpeakingRateEntity()
{
  return &type metadata for AccessibilitySiriSpeakingRateEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySiriSpeakingRateEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySiriSpeakingRateEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySiriPauseTimeEntity.AccessibilitySiriPauseTimeQuery()
{
  return &type metadata for AccessibilitySiriPauseTimeEntity.AccessibilitySiriPauseTimeQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySiriPauseTimeEntity()
{
  return &type metadata for AccessibilitySiriPauseTimeEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySiriPauseTimeEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySiriPauseTimeEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySiriListenForInterruptionsEntity.AccessibilitySiriListenForInterruptionsQuery()
{
  return &type metadata for AccessibilitySiriListenForInterruptionsEntity.AccessibilitySiriListenForInterruptionsQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySiriListenForInterruptionsEntity()
{
  return &type metadata for AccessibilitySiriListenForInterruptionsEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySiriListenForInterruptionsEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySiriListenForInterruptionsEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySiriListenForAtypicalSpeechEntity.AccessibilitySiriListenForAtypicalSpeechQuery()
{
  return &type metadata for AccessibilitySiriListenForAtypicalSpeechEntity.AccessibilitySiriListenForAtypicalSpeechQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySiriListenForAtypicalSpeechEntity()
{
  return &type metadata for AccessibilitySiriListenForAtypicalSpeechEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySiriListenForAtypicalSpeechEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySiriListenForAtypicalSpeechEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySiriTypeToSiriEntity.AccessibilitySiriTypeToSiriQuery()
{
  return &type metadata for AccessibilitySiriTypeToSiriEntity.AccessibilitySiriTypeToSiriQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySiriTypeToSiriEntity()
{
  return &type metadata for AccessibilitySiriTypeToSiriEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySiriTypeToSiriEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySiriTypeToSiriEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySideButtonClickSpeedEntity.AccessibilitySideButtonClickSpeedQuery()
{
  return &type metadata for AccessibilitySideButtonClickSpeedEntity.AccessibilitySideButtonClickSpeedQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySideButtonClickSpeedEntity()
{
  return &type metadata for AccessibilitySideButtonClickSpeedEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySideButtonClickSpeedEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySideButtonClickSpeedEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysMaximumSpeedEntity.AccessibilityAssistiveTouchMouseKeysMaximumSpeedQuery()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysMaximumSpeedEntity.AccessibilityAssistiveTouchMouseKeysMaximumSpeedQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysMaximumSpeedEntity()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysMaximumSpeedEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysMaximumSpeedEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysMaximumSpeedEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysInitialDelayEntity.AccessibilityAssistiveTouchMouseKeysInitialDelayQuery()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysInitialDelayEntity.AccessibilityAssistiveTouchMouseKeysInitialDelayQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysInitialDelayEntity()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysInitialDelayEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysInitialDelayEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysInitialDelayEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysUsePrimaryKeyboardEnabledEntity.AccessibilityAssistiveTouchMouseKeysUsePrimaryKeyboardEnabledQuery()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysUsePrimaryKeyboardEnabledEntity.AccessibilityAssistiveTouchMouseKeysUsePrimaryKeyboardEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysUsePrimaryKeyboardEnabledEntity()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysUsePrimaryKeyboardEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysUsePrimaryKeyboardEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysUsePrimaryKeyboardEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysOptionKeyEnabledEntity.AccessibilityAssistiveTouchMouseKeysOptionKeyEnabledQuery()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysOptionKeyEnabledEntity.AccessibilityAssistiveTouchMouseKeysOptionKeyEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysOptionKeyEnabledEntity()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysOptionKeyEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysOptionKeyEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysOptionKeyEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysEnabledEntity.AccessibilityAssistiveTouchMouseKeysEnabledQuery()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysEnabledEntity.AccessibilityAssistiveTouchMouseKeysEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysEnabledEntity()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchMouseKeysEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAssistiveTouchMouseKeysEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionLimitFrameRateEnabledEntity.AccessibilityReduceMotionLimitFrameRateEnabledQuery()
{
  return &type metadata for AccessibilityReduceMotionLimitFrameRateEnabledEntity.AccessibilityReduceMotionLimitFrameRateEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionLimitFrameRateEnabledEntity()
{
  return &type metadata for AccessibilityReduceMotionLimitFrameRateEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionLimitFrameRateEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityReduceMotionLimitFrameRateEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionPreferNonBlinkingCursorEnabledEntity.AccessibilityReduceMotionPreferNonBlinkingCursorEnabledQuery()
{
  return &type metadata for AccessibilityReduceMotionPreferNonBlinkingCursorEnabledEntity.AccessibilityReduceMotionPreferNonBlinkingCursorEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionPreferNonBlinkingCursorEnabledEntity()
{
  return &type metadata for AccessibilityReduceMotionPreferNonBlinkingCursorEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionPreferNonBlinkingCursorEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityReduceMotionPreferNonBlinkingCursorEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionAutoPlayVideoPreviewsEnabledEntity.AccessibilityReduceMotionAutoPlayVideoPreviewsEnabledQuery()
{
  return &type metadata for AccessibilityReduceMotionAutoPlayVideoPreviewsEnabledEntity.AccessibilityReduceMotionAutoPlayVideoPreviewsEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionAutoPlayVideoPreviewsEnabledEntity()
{
  return &type metadata for AccessibilityReduceMotionAutoPlayVideoPreviewsEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionAutoPlayVideoPreviewsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityReduceMotionAutoPlayVideoPreviewsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionDimFlashingLightsEnabledEntity.AccessibilityReduceMotionDimFlashingLightsEnabledQuery()
{
  return &type metadata for AccessibilityReduceMotionDimFlashingLightsEnabledEntity.AccessibilityReduceMotionDimFlashingLightsEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionDimFlashingLightsEnabledEntity()
{
  return &type metadata for AccessibilityReduceMotionDimFlashingLightsEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionDimFlashingLightsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityReduceMotionDimFlashingLightsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionAutoPlayAnimatedImagesEnabledEntity.AccessibilityReduceMotionAutoPlayAnimatedImagesEnabledQuery()
{
  return &type metadata for AccessibilityReduceMotionAutoPlayAnimatedImagesEnabledEntity.AccessibilityReduceMotionAutoPlayAnimatedImagesEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionAutoPlayAnimatedImagesEnabledEntity()
{
  return &type metadata for AccessibilityReduceMotionAutoPlayAnimatedImagesEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionAutoPlayAnimatedImagesEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityReduceMotionAutoPlayAnimatedImagesEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionAutoPlayMessageEffectsEnabledEntity.AccessibilityReduceMotionAutoPlayMessageEffectsEnabledQuery()
{
  return &type metadata for AccessibilityReduceMotionAutoPlayMessageEffectsEnabledEntity.AccessibilityReduceMotionAutoPlayMessageEffectsEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionAutoPlayMessageEffectsEnabledEntity()
{
  return &type metadata for AccessibilityReduceMotionAutoPlayMessageEffectsEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionAutoPlayMessageEffectsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityReduceMotionAutoPlayMessageEffectsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionEnabledEntity.AccessibilityReduceMotionEnabledQuery()
{
  return &type metadata for AccessibilityReduceMotionEnabledEntity.AccessibilityReduceMotionEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionEnabledEntity()
{
  return &type metadata for AccessibilityReduceMotionEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityReduceMotionEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityMotionCuesEnabledEntity.AccessibilityMotionCuesEnabledQuery()
{
  return &type metadata for AccessibilityMotionCuesEnabledEntity.AccessibilityMotionCuesEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityMotionCuesEnabledEntity()
{
  return &type metadata for AccessibilityMotionCuesEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityMotionCuesEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityMotionCuesEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityLiveSpeechEnabledEntity.AccessibilityLiveSpeechEnabledQuery()
{
  return &type metadata for AccessibilityLiveSpeechEnabledEntity.AccessibilityLiveSpeechEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityLiveSpeechEnabledEntity()
{
  return &type metadata for AccessibilityLiveSpeechEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityLiveSpeechEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityLiveSpeechEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityLiveCaptionsInFaceTimeEnabledEntity.AccessibilityLiveCaptionsInFaceTimeEnabledQuery()
{
  return &type metadata for AccessibilityLiveCaptionsInFaceTimeEnabledEntity.AccessibilityLiveCaptionsInFaceTimeEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityLiveCaptionsInFaceTimeEnabledEntity()
{
  return &type metadata for AccessibilityLiveCaptionsInFaceTimeEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityLiveCaptionsInFaceTimeEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityLiveCaptionsInFaceTimeEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityLiveCaptionsEnabledEntity.AccessibilityLiveCaptionsEnabledQuery()
{
  return &type metadata for AccessibilityLiveCaptionsEnabledEntity.AccessibilityLiveCaptionsEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityLiveCaptionsEnabledEntity()
{
  return &type metadata for AccessibilityLiveCaptionsEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityLiveCaptionsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityLiveCaptionsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityLEDFlashForAlertsFlashInSilentModeEnabledEntity.AccessibilityLEDFlashForAlertsFlashInSilentModeEnabledQuery()
{
  return &type metadata for AccessibilityLEDFlashForAlertsFlashInSilentModeEnabledEntity.AccessibilityLEDFlashForAlertsFlashInSilentModeEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityLEDFlashForAlertsFlashInSilentModeEnabledEntity()
{
  return &type metadata for AccessibilityLEDFlashForAlertsFlashInSilentModeEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityLEDFlashForAlertsFlashInSilentModeEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityLEDFlashForAlertsFlashInSilentModeEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityLEDFlashForAlertsFlashWhileUnlockedEnabledEntity.AccessibilityLEDFlashForAlertsFlashWhileUnlockedEnabledQuery()
{
  return &type metadata for AccessibilityLEDFlashForAlertsFlashWhileUnlockedEnabledEntity.AccessibilityLEDFlashForAlertsFlashWhileUnlockedEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityLEDFlashForAlertsFlashWhileUnlockedEnabledEntity()
{
  return &type metadata for AccessibilityLEDFlashForAlertsFlashWhileUnlockedEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityLEDFlashForAlertsFlashWhileUnlockedEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityLEDFlashForAlertsFlashWhileUnlockedEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityLEDFlashForAlertsEnabledEntity.AccessibilityLEDFlashForAlertsEnabledQuery()
{
  return &type metadata for AccessibilityLEDFlashForAlertsEnabledEntity.AccessibilityLEDFlashForAlertsEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityLEDFlashForAlertsEnabledEntity()
{
  return &type metadata for AccessibilityLEDFlashForAlertsEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityLEDFlashForAlertsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityLEDFlashForAlertsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityHoverTypingEntity.AccessibilityHoverTypingQuery()
{
  return &type metadata for AccessibilityHoverTypingEntity.AccessibilityHoverTypingQuery;
}

ValueMetadata *type metadata accessor for AccessibilityHoverTypingEntity()
{
  return &type metadata for AccessibilityHoverTypingEntity;
}

ValueMetadata *type metadata accessor for AccessibilityHoverTypingEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityHoverTypingEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityLowercaseKeyboardDisplayEnabledEntity.AccessibilityLowercaseKeyboardDisplayEnabledQuery()
{
  return &type metadata for AccessibilityLowercaseKeyboardDisplayEnabledEntity.AccessibilityLowercaseKeyboardDisplayEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityLowercaseKeyboardDisplayEnabledEntity()
{
  return &type metadata for AccessibilityLowercaseKeyboardDisplayEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityLowercaseKeyboardDisplayEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityLowercaseKeyboardDisplayEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySlowKeysEnabledEntity.AccessibilitySlowKeysEnabledQuery()
{
  return &type metadata for AccessibilitySlowKeysEnabledEntity.AccessibilitySlowKeysEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySlowKeysEnabledEntity()
{
  return &type metadata for AccessibilitySlowKeysEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySlowKeysEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySlowKeysEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityKeyRepeatEnabledEntity.AccessibilityKeyRepeatEnabledQuery()
{
  return &type metadata for AccessibilityKeyRepeatEnabledEntity.AccessibilityKeyRepeatEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityKeyRepeatEnabledEntity()
{
  return &type metadata for AccessibilityKeyRepeatEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityKeyRepeatEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityKeyRepeatEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXStickyKeysBeepEnabledEntity.AXStickyKeysBeepEnabledQuery()
{
  return &type metadata for AXStickyKeysBeepEnabledEntity.AXStickyKeysBeepEnabledQuery;
}

ValueMetadata *type metadata accessor for AXStickyKeysBeepEnabledEntity()
{
  return &type metadata for AXStickyKeysBeepEnabledEntity;
}

ValueMetadata *type metadata accessor for AXStickyKeysBeepEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AXStickyKeysBeepEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXStickyKeysShiftToggleEnabledEntity.AXStickyKeysShiftToggleEnabledQuery()
{
  return &type metadata for AXStickyKeysShiftToggleEnabledEntity.AXStickyKeysShiftToggleEnabledQuery;
}

ValueMetadata *type metadata accessor for AXStickyKeysShiftToggleEnabledEntity()
{
  return &type metadata for AXStickyKeysShiftToggleEnabledEntity;
}

ValueMetadata *type metadata accessor for AXStickyKeysShiftToggleEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AXStickyKeysShiftToggleEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityStickyKeysEnabledEntity.AccessibilityStickyKeysEnabledQuery()
{
  return &type metadata for AccessibilityStickyKeysEnabledEntity.AccessibilityStickyKeysEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityStickyKeysEnabledEntity()
{
  return &type metadata for AccessibilityStickyKeysEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityStickyKeysEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityStickyKeysEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessFocusRingColorEntity.AXFullKeyboardAccessFocusRingColorQuery()
{
  return &type metadata for AXFullKeyboardAccessFocusRingColorEntity.AXFullKeyboardAccessFocusRingColorQuery;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessFocusRingColorEntity()
{
  return &type metadata for AXFullKeyboardAccessFocusRingColorEntity;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessFocusRingColorEntity.UpdateIntent_value()
{
  return &type metadata for AXFullKeyboardAccessFocusRingColorEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessFocusRingHighContrastEnabledEntity.AXFullKeyboardAccessFocusRingHighContrastEnabledQuery()
{
  return &type metadata for AXFullKeyboardAccessFocusRingHighContrastEnabledEntity.AXFullKeyboardAccessFocusRingHighContrastEnabledQuery;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessFocusRingHighContrastEnabledEntity()
{
  return &type metadata for AXFullKeyboardAccessFocusRingHighContrastEnabledEntity;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessFocusRingHighContrastEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AXFullKeyboardAccessFocusRingHighContrastEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessLargeFocusRingEnabledEntity.AXFullKeyboardAccessLargeFocusRingEnabledQuery()
{
  return &type metadata for AXFullKeyboardAccessLargeFocusRingEnabledEntity.AXFullKeyboardAccessLargeFocusRingEnabledQuery;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessLargeFocusRingEnabledEntity()
{
  return &type metadata for AXFullKeyboardAccessLargeFocusRingEnabledEntity;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessLargeFocusRingEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AXFullKeyboardAccessLargeFocusRingEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessFocusRingTimeoutEntity.AXFullKeyboardAccessFocusRingTimeoutQuery()
{
  return &type metadata for AXFullKeyboardAccessFocusRingTimeoutEntity.AXFullKeyboardAccessFocusRingTimeoutQuery;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessFocusRingTimeoutEntity()
{
  return &type metadata for AXFullKeyboardAccessFocusRingTimeoutEntity;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessFocusRingTimeoutEntity.UpdateIntent_value()
{
  return &type metadata for AXFullKeyboardAccessFocusRingTimeoutEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessFocusRingTimeoutEnabledEntity.AXFullKeyboardAccessFocusRingTimeoutEnabledQuery()
{
  return &type metadata for AXFullKeyboardAccessFocusRingTimeoutEnabledEntity.AXFullKeyboardAccessFocusRingTimeoutEnabledQuery;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessFocusRingTimeoutEnabledEntity()
{
  return &type metadata for AXFullKeyboardAccessFocusRingTimeoutEnabledEntity;
}

ValueMetadata *type metadata accessor for AXFullKeyboardAccessFocusRingTimeoutEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AXFullKeyboardAccessFocusRingTimeoutEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityFullKeyboardAccessEnabledEntity.AccessibilityFullKeyboardAccessEnabledQuery()
{
  return &type metadata for AccessibilityFullKeyboardAccessEnabledEntity.AccessibilityFullKeyboardAccessEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityFullKeyboardAccessEnabledEntity()
{
  return &type metadata for AccessibilityFullKeyboardAccessEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityFullKeyboardAccessEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityFullKeyboardAccessEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityHoverTextEnabledEntity.AccessibilityHoverTextEnabledQuery()
{
  return &type metadata for AccessibilityHoverTextEnabledEntity.AccessibilityHoverTextEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityHoverTextEnabledEntity()
{
  return &type metadata for AccessibilityHoverTextEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityHoverTextEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityHoverTextEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityLeftRightBalanceEnabledEntity.AccessibilityLeftRightBalanceEnabledQuery()
{
  return &type metadata for AccessibilityLeftRightBalanceEnabledEntity.AccessibilityLeftRightBalanceEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityLeftRightBalanceEnabledEntity()
{
  return &type metadata for AccessibilityLeftRightBalanceEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityLeftRightBalanceEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityLeftRightBalanceEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityHearingAidCompatibilityEnabledEntity.AccessibilityHearingAidCompatibilityEnabledQuery()
{
  return &type metadata for AccessibilityHearingAidCompatibilityEnabledEntity.AccessibilityHearingAidCompatibilityEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityHearingAidCompatibilityEnabledEntity()
{
  return &type metadata for AccessibilityHearingAidCompatibilityEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityHearingAidCompatibilityEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityHearingAidCompatibilityEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for HardwareTTYEnabledEntity.HardwareTTYEnabledQuery()
{
  return &type metadata for HardwareTTYEnabledEntity.HardwareTTYEnabledQuery;
}

ValueMetadata *type metadata accessor for HardwareTTYEnabledEntity()
{
  return &type metadata for HardwareTTYEnabledEntity;
}

ValueMetadata *type metadata accessor for HardwareTTYEnabledEntity.UpdateIntent_value()
{
  return &type metadata for HardwareTTYEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for SoftwareRTTEnabledEntity.SoftwareRTTEnabledQuery()
{
  return &type metadata for SoftwareRTTEnabledEntity.SoftwareRTTEnabledQuery;
}

ValueMetadata *type metadata accessor for SoftwareRTTEnabledEntity()
{
  return &type metadata for SoftwareRTTEnabledEntity;
}

ValueMetadata *type metadata accessor for SoftwareRTTEnabledEntity.UpdateIntent_value()
{
  return &type metadata for SoftwareRTTEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for StartupSoundsEnabledEntity.StartupSoundsEnabledQuery()
{
  return &type metadata for StartupSoundsEnabledEntity.StartupSoundsEnabledQuery;
}

ValueMetadata *type metadata accessor for StartupSoundsEnabledEntity()
{
  return &type metadata for StartupSoundsEnabledEntity;
}

ValueMetadata *type metadata accessor for StartupSoundsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for StartupSoundsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AlwaysShowVolumeControlEntity.AlwaysShowVolumeControlQuery()
{
  return &type metadata for AlwaysShowVolumeControlEntity.AlwaysShowVolumeControlQuery;
}

ValueMetadata *type metadata accessor for AlwaysShowVolumeControlEntity()
{
  return &type metadata for AlwaysShowVolumeControlEntity;
}

ValueMetadata *type metadata accessor for AlwaysShowVolumeControlEntity.UpdateIntent_value()
{
  return &type metadata for AlwaysShowVolumeControlEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for MonoAudioEnabledEntity.MonoAudioEnabledQuery()
{
  return &type metadata for MonoAudioEnabledEntity.MonoAudioEnabledQuery;
}

ValueMetadata *type metadata accessor for MonoAudioEnabledEntity()
{
  return &type metadata for MonoAudioEnabledEntity;
}

ValueMetadata *type metadata accessor for MonoAudioEnabledEntity.UpdateIntent_value()
{
  return &type metadata for MonoAudioEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for MusicHapticsEnabledEntity.MusicHapticsEnabledQuery()
{
  return &type metadata for MusicHapticsEnabledEntity.MusicHapticsEnabledQuery;
}

ValueMetadata *type metadata accessor for MusicHapticsEnabledEntity()
{
  return &type metadata for MusicHapticsEnabledEntity;
}

ValueMetadata *type metadata accessor for MusicHapticsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for MusicHapticsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityHeadphoneAccommodationsEnabledEntity.AccessibilityHeadphoneAccommodationsEnabledQuery()
{
  return &type metadata for AccessibilityHeadphoneAccommodationsEnabledEntity.AccessibilityHeadphoneAccommodationsEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityHeadphoneAccommodationsEnabledEntity()
{
  return &type metadata for AccessibilityHeadphoneAccommodationsEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityHeadphoneAccommodationsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityHeadphoneAccommodationsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityGuidedAccessEnabledEntity.AccessibilityGuidedAccessEnabledQuery()
{
  return &type metadata for AccessibilityGuidedAccessEnabledEntity.AccessibilityGuidedAccessEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityGuidedAccessEnabledEntity()
{
  return &type metadata for AccessibilityGuidedAccessEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityGuidedAccessEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityGuidedAccessEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityHapticOnSuccessfulAuthenticationForFaceIDEnabledEntity.AccessibilityHapticOnSuccessfulAuthenticationForFaceIDEnabledQuery()
{
  return &type metadata for AccessibilityHapticOnSuccessfulAuthenticationForFaceIDEnabledEntity.AccessibilityHapticOnSuccessfulAuthenticationForFaceIDEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityHapticOnSuccessfulAuthenticationForFaceIDEnabledEntity()
{
  return &type metadata for AccessibilityHapticOnSuccessfulAuthenticationForFaceIDEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityHapticOnSuccessfulAuthenticationForFaceIDEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityHapticOnSuccessfulAuthenticationForFaceIDEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityOnDeviceEyeTrackingEnabledEntity.AccessibilityOnDeviceEyeTrackingEnabledQuery()
{
  return &type metadata for AccessibilityOnDeviceEyeTrackingEnabledEntity.AccessibilityOnDeviceEyeTrackingEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityOnDeviceEyeTrackingEnabledEntity()
{
  return &type metadata for AccessibilityOnDeviceEyeTrackingEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityOnDeviceEyeTrackingEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityOnDeviceEyeTrackingEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityColorFiltersPickerEntity.AccessibilityColorFiltersPickerQuery()
{
  return &type metadata for AccessibilityColorFiltersPickerEntity.AccessibilityColorFiltersPickerQuery;
}

ValueMetadata *type metadata accessor for AccessibilityColorFiltersPickerEntity()
{
  return &type metadata for AccessibilityColorFiltersPickerEntity;
}

ValueMetadata *type metadata accessor for AccessibilityColorFiltersPickerEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityColorFiltersPickerEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityColorFiltersEnabledEntity.AccessibilityColorFiltersEnabledQuery()
{
  return &type metadata for AccessibilityColorFiltersEnabledEntity.AccessibilityColorFiltersEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityColorFiltersEnabledEntity()
{
  return &type metadata for AccessibilityColorFiltersEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityColorFiltersEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityColorFiltersEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityReduceWhitePointEnabledEntity.AccessibilityReduceWhitePointEnabledQuery()
{
  return &type metadata for AccessibilityReduceWhitePointEnabledEntity.AccessibilityReduceWhitePointEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityReduceWhitePointEnabledEntity()
{
  return &type metadata for AccessibilityReduceWhitePointEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityReduceWhitePointEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityReduceWhitePointEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAutoBrightnessEnabledEntity.AccessibilityAutoBrightnessEnabledQuery()
{
  return &type metadata for AccessibilityAutoBrightnessEnabledEntity.AccessibilityAutoBrightnessEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAutoBrightnessEnabledEntity()
{
  return &type metadata for AccessibilityAutoBrightnessEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAutoBrightnessEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAutoBrightnessEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityClassicInvertEnabledEntity.AccessibilityClassicInvertEnabledQuery()
{
  return &type metadata for AccessibilityClassicInvertEnabledEntity.AccessibilityClassicInvertEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityClassicInvertEnabledEntity()
{
  return &type metadata for AccessibilityClassicInvertEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityClassicInvertEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityClassicInvertEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilitySmartInvertEnabledEntity.AccessibilitySmartInvertEnabledQuery()
{
  return &type metadata for AccessibilitySmartInvertEnabledEntity.AccessibilitySmartInvertEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilitySmartInvertEnabledEntity()
{
  return &type metadata for AccessibilitySmartInvertEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilitySmartInvertEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilitySmartInvertEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityPreferHorizontalTextEnabledEntity.AccessibilityPreferHorizontalTextEnabledQuery()
{
  return &type metadata for AccessibilityPreferHorizontalTextEnabledEntity.AccessibilityPreferHorizontalTextEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityPreferHorizontalTextEnabledEntity()
{
  return &type metadata for AccessibilityPreferHorizontalTextEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityPreferHorizontalTextEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityPreferHorizontalTextEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityDifferentiateWithoutColorEnabledEntity.AccessibilityDifferentiateWithoutColorEnabledQuery()
{
  return &type metadata for AccessibilityDifferentiateWithoutColorEnabledEntity.AccessibilityDifferentiateWithoutColorEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityDifferentiateWithoutColorEnabledEntity()
{
  return &type metadata for AccessibilityDifferentiateWithoutColorEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityDifferentiateWithoutColorEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityDifferentiateWithoutColorEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityIncreaseContrastEnabledEntity.AccessibilityIncreaseContrastEnabledQuery()
{
  return &type metadata for AccessibilityIncreaseContrastEnabledEntity.AccessibilityIncreaseContrastEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityIncreaseContrastEnabledEntity()
{
  return &type metadata for AccessibilityIncreaseContrastEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityIncreaseContrastEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityIncreaseContrastEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityReduceTransparencyEnabledEntity.AccessibilityReduceTransparencyEnabledQuery()
{
  return &type metadata for AccessibilityReduceTransparencyEnabledEntity.AccessibilityReduceTransparencyEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityReduceTransparencyEnabledEntity()
{
  return &type metadata for AccessibilityReduceTransparencyEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityReduceTransparencyEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityReduceTransparencyEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityOnOffLabelsEnabledEntity.AccessibilityOnOffLabelsEnabledQuery()
{
  return &type metadata for AccessibilityOnOffLabelsEnabledEntity.AccessibilityOnOffLabelsEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityOnOffLabelsEnabledEntity()
{
  return &type metadata for AccessibilityOnOffLabelsEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityOnOffLabelsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityOnOffLabelsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityButtonShapesEnabledEntity.AccessibilityButtonShapesEnabledQuery()
{
  return &type metadata for AccessibilityButtonShapesEnabledEntity.AccessibilityButtonShapesEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityButtonShapesEnabledEntity()
{
  return &type metadata for AccessibilityButtonShapesEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityButtonShapesEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityButtonShapesEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityBoldTextEnabledEntity.AccessibilityBoldTextEnabledQuery()
{
  return &type metadata for AccessibilityBoldTextEnabledEntity.AccessibilityBoldTextEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityBoldTextEnabledEntity()
{
  return &type metadata for AccessibilityBoldTextEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityBoldTextEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityBoldTextEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleAlertMessagesShowUntilDismissedEntity.AccessibilityVoiceOverBrailleBrailleAlertMessagesShowUntilDismissedQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleAlertMessagesShowUntilDismissedEntity.AccessibilityVoiceOverBrailleBrailleAlertMessagesShowUntilDismissedQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleAlertMessagesShowUntilDismissedEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleAlertMessagesShowUntilDismissedEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleAlertMessagesShowUntilDismissedEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleAlertMessagesShowUntilDismissedEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleAlertMessagesEntity.AccessibilityVoiceOverBrailleBrailleAlertMessagesQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleAlertMessagesEntity.AccessibilityVoiceOverBrailleBrailleAlertMessagesQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleAlertMessagesEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleAlertMessagesEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleAlertMessagesEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleAlertMessagesEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputKeepActiveAfterSelectionEntity.AccessibilityVoiceOverBrailleBrailleScreenInputKeepActiveAfterSelectionQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputKeepActiveAfterSelectionEntity.AccessibilityVoiceOverBrailleBrailleScreenInputKeepActiveAfterSelectionQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputKeepActiveAfterSelectionEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputKeepActiveAfterSelectionEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputKeepActiveAfterSelectionEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputKeepActiveAfterSelectionEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputModeAnnouncementsEntity.AccessibilityVoiceOverBrailleBrailleScreenInputModeAnnouncementsQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputModeAnnouncementsEntity.AccessibilityVoiceOverBrailleBrailleScreenInputModeAnnouncementsQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputModeAnnouncementsEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputModeAnnouncementsEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputModeAnnouncementsEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputModeAnnouncementsEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputHapticFeedbackEntity.AccessibilityVoiceOverBrailleBrailleScreenInputHapticFeedbackQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputHapticFeedbackEntity.AccessibilityVoiceOverBrailleBrailleScreenInputHapticFeedbackQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputHapticFeedbackEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputHapticFeedbackEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputHapticFeedbackEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputHapticFeedbackEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputTypingSoundFeedbackEntity.AccessibilityVoiceOverBrailleBrailleScreenInputTypingSoundFeedbackQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputTypingSoundFeedbackEntity.AccessibilityVoiceOverBrailleBrailleScreenInputTypingSoundFeedbackQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputTypingSoundFeedbackEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputTypingSoundFeedbackEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputTypingSoundFeedbackEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputTypingSoundFeedbackEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputVisualTextFeedbackEntity.AccessibilityVoiceOverBrailleBrailleScreenInputVisualTextFeedbackQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputVisualTextFeedbackEntity.AccessibilityVoiceOverBrailleBrailleScreenInputVisualTextFeedbackQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputVisualTextFeedbackEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputVisualTextFeedbackEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputVisualTextFeedbackEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputVisualTextFeedbackEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputStartAutomaticallyWhenEditingTextEntity.AccessibilityVoiceOverBrailleBrailleScreenInputStartAutomaticallyWhenEditingTextQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputStartAutomaticallyWhenEditingTextEntity.AccessibilityVoiceOverBrailleBrailleScreenInputStartAutomaticallyWhenEditingTextQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputStartAutomaticallyWhenEditingTextEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputStartAutomaticallyWhenEditingTextEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputStartAutomaticallyWhenEditingTextEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputStartAutomaticallyWhenEditingTextEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputReverseDotPositionsEntity.AccessibilityVoiceOverBrailleBrailleScreenInputReverseDotPositionsQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputReverseDotPositionsEntity.AccessibilityVoiceOverBrailleBrailleScreenInputReverseDotPositionsQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputReverseDotPositionsEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputReverseDotPositionsEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleBrailleScreenInputReverseDotPositionsEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleBrailleScreenInputReverseDotPositionsEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleEnableBluetoothOnStartEntity.AccessibilityVoiceOverBrailleEnableBluetoothOnStartQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleEnableBluetoothOnStartEntity.AccessibilityVoiceOverBrailleEnableBluetoothOnStartQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleEnableBluetoothOnStartEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleEnableBluetoothOnStartEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleEnableBluetoothOnStartEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleEnableBluetoothOnStartEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleSoundCurtainEntity.AccessibilityVoiceOverBrailleSoundCurtainQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleSoundCurtainEntity.AccessibilityVoiceOverBrailleSoundCurtainQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleSoundCurtainEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleSoundCurtainEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleSoundCurtainEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleSoundCurtainEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleEnterBrailleChordsOnKeyboardEntity.AccessibilityVoiceOverBrailleEnterBrailleChordsOnKeyboardQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleEnterBrailleChordsOnKeyboardEntity.AccessibilityVoiceOverBrailleEnterBrailleChordsOnKeyboardQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleEnterBrailleChordsOnKeyboardEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleEnterBrailleChordsOnKeyboardEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleEnterBrailleChordsOnKeyboardEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleEnterBrailleChordsOnKeyboardEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleTextFormattingEntity.AccessibilityVoiceOverBrailleTextFormattingQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleTextFormattingEntity.AccessibilityVoiceOverBrailleTextFormattingQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleTextFormattingEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleTextFormattingEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleTextFormattingEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleTextFormattingEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleWordWrapEntity.AccessibilityVoiceOverBrailleWordWrapQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleWordWrapEntity.AccessibilityVoiceOverBrailleWordWrapQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleWordWrapEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleWordWrapEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleWordWrapEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleWordWrapEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleTurnPagesWhenPanningEntity.AccessibilityVoiceOverBrailleTurnPagesWhenPanningQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleTurnPagesWhenPanningEntity.AccessibilityVoiceOverBrailleTurnPagesWhenPanningQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleTurnPagesWhenPanningEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleTurnPagesWhenPanningEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleTurnPagesWhenPanningEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleTurnPagesWhenPanningEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleShowOnscreenKeyboardEntity.AccessibilityVoiceOverBrailleShowOnscreenKeyboardQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleShowOnscreenKeyboardEntity.AccessibilityVoiceOverBrailleShowOnscreenKeyboardQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleShowOnscreenKeyboardEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleShowOnscreenKeyboardEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleShowOnscreenKeyboardEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleShowOnscreenKeyboardEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleEquationsUseNemethCodeEntity.AccessibilityVoiceOverBrailleEquationsUseNemethCodeQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleEquationsUseNemethCodeEntity.AccessibilityVoiceOverBrailleEquationsUseNemethCodeQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleEquationsUseNemethCodeEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleEquationsUseNemethCodeEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleEquationsUseNemethCodeEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleEquationsUseNemethCodeEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleStatusCellsShowTextStatusEntity.AccessibilityVoiceOverBrailleStatusCellsShowTextStatusQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleStatusCellsShowTextStatusEntity.AccessibilityVoiceOverBrailleStatusCellsShowTextStatusQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleStatusCellsShowTextStatusEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleStatusCellsShowTextStatusEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleStatusCellsShowTextStatusEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleStatusCellsShowTextStatusEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleStatusCellsShowGeneralStatusEntity.AccessibilityVoiceOverBrailleStatusCellsShowGeneralStatusQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleStatusCellsShowGeneralStatusEntity.AccessibilityVoiceOverBrailleStatusCellsShowGeneralStatusQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleStatusCellsShowGeneralStatusEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleStatusCellsShowGeneralStatusEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleStatusCellsShowGeneralStatusEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleStatusCellsShowGeneralStatusEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleStatusCellsPositionEntity.AccessibilityVoiceOverBrailleStatusCellsPositionQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleStatusCellsPositionEntity.AccessibilityVoiceOverBrailleStatusCellsPositionQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleStatusCellsPositionEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleStatusCellsPositionEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleStatusCellsPositionEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleStatusCellsPositionEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleAutomaticTranslationEntity.AccessibilityVoiceOverBrailleAutomaticTranslationQuery()
{
  return &type metadata for AccessibilityVoiceOverBrailleAutomaticTranslationEntity.AccessibilityVoiceOverBrailleAutomaticTranslationQuery;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleAutomaticTranslationEntity()
{
  return &type metadata for AccessibilityVoiceOverBrailleAutomaticTranslationEntity;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverBrailleAutomaticTranslationEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityVoiceOverBrailleAutomaticTranslationEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsVolumeEntity.AccessibilityBackgroundSoundsVolumeQuery()
{
  return &type metadata for AccessibilityBackgroundSoundsVolumeEntity.AccessibilityBackgroundSoundsVolumeQuery;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsVolumeEntity()
{
  return &type metadata for AccessibilityBackgroundSoundsVolumeEntity;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsVolumeEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityBackgroundSoundsVolumeEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsStopSoundsWhenLockedEnabledEntity.AccessibilityBackgroundSoundsStopSoundsWhenLockedEnabledQuery()
{
  return &type metadata for AccessibilityBackgroundSoundsStopSoundsWhenLockedEnabledEntity.AccessibilityBackgroundSoundsStopSoundsWhenLockedEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsStopSoundsWhenLockedEnabledEntity()
{
  return &type metadata for AccessibilityBackgroundSoundsStopSoundsWhenLockedEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsStopSoundsWhenLockedEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityBackgroundSoundsStopSoundsWhenLockedEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsUseWhenMediaIsPlayingEnabledEntity.AccessibilityBackgroundSoundsUseWhenMediaIsPlayingEnabledQuery()
{
  return &type metadata for AccessibilityBackgroundSoundsUseWhenMediaIsPlayingEnabledEntity.AccessibilityBackgroundSoundsUseWhenMediaIsPlayingEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsUseWhenMediaIsPlayingEnabledEntity()
{
  return &type metadata for AccessibilityBackgroundSoundsUseWhenMediaIsPlayingEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsUseWhenMediaIsPlayingEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityBackgroundSoundsUseWhenMediaIsPlayingEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsSoundSelectorEntity.AccessibilityBackgroundSoundsSoundSelectorQuery()
{
  return &type metadata for AccessibilityBackgroundSoundsSoundSelectorEntity.AccessibilityBackgroundSoundsSoundSelectorQuery;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsSoundSelectorEntity()
{
  return &type metadata for AccessibilityBackgroundSoundsSoundSelectorEntity;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsSoundSelectorEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityBackgroundSoundsSoundSelectorEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsEnabledEntity.AccessibilityBackgroundSoundsEnabledQuery()
{
  return &type metadata for AccessibilityBackgroundSoundsEnabledEntity.AccessibilityBackgroundSoundsEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsEnabledEntity()
{
  return &type metadata for AccessibilityBackgroundSoundsEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityBackgroundSoundsEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityBackgroundSoundsEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAudioDescriptionsEntity.AccessibilityAudioDescriptionsQuery()
{
  return &type metadata for AccessibilityAudioDescriptionsEntity.AccessibilityAudioDescriptionsQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAudioDescriptionsEntity()
{
  return &type metadata for AccessibilityAudioDescriptionsEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAudioDescriptionsEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAudioDescriptionsEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchSoundOnMouseClickEntity.AccessibilityAssistiveTouchSoundOnMouseClickQuery()
{
  return &type metadata for AccessibilityAssistiveTouchSoundOnMouseClickEntity.AccessibilityAssistiveTouchSoundOnMouseClickQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchSoundOnMouseClickEntity()
{
  return &type metadata for AccessibilityAssistiveTouchSoundOnMouseClickEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchSoundOnMouseClickEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAssistiveTouchSoundOnMouseClickEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchExtendedPredictionsEntity.AccessibilityAssistiveTouchExtendedPredictionsQuery()
{
  return &type metadata for AccessibilityAssistiveTouchExtendedPredictionsEntity.AccessibilityAssistiveTouchExtendedPredictionsQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchExtendedPredictionsEntity()
{
  return &type metadata for AccessibilityAssistiveTouchExtendedPredictionsEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchExtendedPredictionsEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAssistiveTouchExtendedPredictionsEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchTrackingSensitivityEntity.AccessibilityAssistiveTouchTrackingSensitivityQuery()
{
  return &type metadata for AccessibilityAssistiveTouchTrackingSensitivityEntity.AccessibilityAssistiveTouchTrackingSensitivityQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchTrackingSensitivityEntity()
{
  return &type metadata for AccessibilityAssistiveTouchTrackingSensitivityEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchTrackingSensitivityEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAssistiveTouchTrackingSensitivityEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchDwellControlEnabledEntity.AccessibilityAssistiveTouchDwellControlEnabledQuery()
{
  return &type metadata for AccessibilityAssistiveTouchDwellControlEnabledEntity.AccessibilityAssistiveTouchDwellControlEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchDwellControlEnabledEntity()
{
  return &type metadata for AccessibilityAssistiveTouchDwellControlEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchDwellControlEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAssistiveTouchDwellControlEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchGameControllerModeEnabledEntity.AccessibilityAssistiveTouchGameControllerModeEnabledQuery()
{
  return &type metadata for AccessibilityAssistiveTouchGameControllerModeEnabledEntity.AccessibilityAssistiveTouchGameControllerModeEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchGameControllerModeEnabledEntity()
{
  return &type metadata for AccessibilityAssistiveTouchGameControllerModeEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchGameControllerModeEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAssistiveTouchGameControllerModeEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchPerformTouchGesturesEnabledEntity.AccessibilityAssistiveTouchPerformTouchGesturesEnabledQuery()
{
  return &type metadata for AccessibilityAssistiveTouchPerformTouchGesturesEnabledEntity.AccessibilityAssistiveTouchPerformTouchGesturesEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchPerformTouchGesturesEnabledEntity()
{
  return &type metadata for AccessibilityAssistiveTouchPerformTouchGesturesEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchPerformTouchGesturesEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAssistiveTouchPerformTouchGesturesEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchShowOnscreenKeyboardEnabledEntity.AccessibilityAssistiveTouchShowOnscreenKeyboardEnabledQuery()
{
  return &type metadata for AccessibilityAssistiveTouchShowOnscreenKeyboardEnabledEntity.AccessibilityAssistiveTouchShowOnscreenKeyboardEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchShowOnscreenKeyboardEnabledEntity()
{
  return &type metadata for AccessibilityAssistiveTouchShowOnscreenKeyboardEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchShowOnscreenKeyboardEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAssistiveTouchShowOnscreenKeyboardEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchOpacityEntity.AccessibilityAssistiveTouchOpacityQuery()
{
  return &type metadata for AccessibilityAssistiveTouchOpacityEntity.AccessibilityAssistiveTouchOpacityQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchOpacityEntity()
{
  return &type metadata for AccessibilityAssistiveTouchOpacityEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchOpacityEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAssistiveTouchOpacityEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchEnabledEntity.AccessibilityAssistiveTouchEnabledQuery()
{
  return &type metadata for AccessibilityAssistiveTouchEnabledEntity.AccessibilityAssistiveTouchEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchEnabledEntity()
{
  return &type metadata for AccessibilityAssistiveTouchEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAssistiveTouchEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAssistiveTouchEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AccessibilityAppleWatchRemoteScreenEnabledEntity.AccessibilityAppleWatchRemoteScreenEnabledQuery()
{
  return &type metadata for AccessibilityAppleWatchRemoteScreenEnabledEntity.AccessibilityAppleWatchRemoteScreenEnabledQuery;
}

ValueMetadata *type metadata accessor for AccessibilityAppleWatchRemoteScreenEnabledEntity()
{
  return &type metadata for AccessibilityAppleWatchRemoteScreenEnabledEntity;
}

ValueMetadata *type metadata accessor for AccessibilityAppleWatchRemoteScreenEnabledEntity.UpdateIntent_value()
{
  return &type metadata for AccessibilityAppleWatchRemoteScreenEnabledEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AppleTVRemoteLiveTVButtonsEntity.AppleTVRemoteLiveTVButtonsQuery()
{
  return &type metadata for AppleTVRemoteLiveTVButtonsEntity.AppleTVRemoteLiveTVButtonsQuery;
}

ValueMetadata *type metadata accessor for AppleTVRemoteLiveTVButtonsEntity()
{
  return &type metadata for AppleTVRemoteLiveTVButtonsEntity;
}

ValueMetadata *type metadata accessor for AppleTVRemoteLiveTVButtonsEntity.UpdateIntent_value()
{
  return &type metadata for AppleTVRemoteLiveTVButtonsEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AppleTVRemoteDirectionalButtonsEntity.AppleTVRemoteDirectionalButtonsQuery()
{
  return &type metadata for AppleTVRemoteDirectionalButtonsEntity.AppleTVRemoteDirectionalButtonsQuery;
}

uint64_t _s30AccessibilityControlsExtension33AccessibilityZoomLensEffectEntityVwxx_0()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s30AccessibilityControlsExtension33AccessibilityZoomLensEffectEntityVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *_s30AccessibilityControlsExtension33AccessibilityZoomLensEffectEntityVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s30AccessibilityControlsExtension33AccessibilityZoomLensEffectEntityVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t _s30AccessibilityControlsExtension33AccessibilityZoomLensEffectEntityVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100290C6C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleTVRemoteDirectionalButtonsEntity()
{
  return &type metadata for AppleTVRemoteDirectionalButtonsEntity;
}

void *_s30AccessibilityControlsExtension33AccessibilityZoomLensEffectEntityV18UpdateIntent_valueVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *_s30AccessibilityControlsExtension33AccessibilityZoomLensEffectEntityV18UpdateIntent_valueVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s30AccessibilityControlsExtension33AccessibilityZoomLensEffectEntityV18UpdateIntent_valueVwta_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s30AccessibilityControlsExtension33AccessibilityZoomLensEffectEntityV18UpdateIntent_valueVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100290DDC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleTVRemoteDirectionalButtonsEntity.UpdateIntent_value()
{
  return &type metadata for AppleTVRemoteDirectionalButtonsEntity.UpdateIntent_value;
}

uint64_t sub_100290E28()
{
  return sub_100034B8C(&qword_1004359A0, &qword_1004359A8);
}

uint64_t sub_100290E64()
{
  return sub_100034B8C(&qword_1004359B0, &qword_1004359A8);
}

uint64_t sub_100290EA0()
{
  return sub_100034B8C(&qword_1004359B8, &qword_1004359C0);
}

uint64_t sub_100290EDC()
{
  return sub_100034B8C(&qword_1004359C8, &qword_1004359C0);
}

uint64_t sub_100290F18()
{
  return sub_100034B8C(&qword_1004359D0, &qword_1004359D8);
}

uint64_t sub_100290F54()
{
  return sub_100034B8C(&qword_1004359E0, &qword_1004359D8);
}

uint64_t sub_100290F90()
{
  return sub_100034B8C(&qword_1004359E8, &qword_1004359F0);
}

uint64_t sub_100290FCC()
{
  return sub_100034B8C(&qword_1004359F8, &qword_1004359F0);
}

uint64_t sub_100291008()
{
  return sub_100034B8C(&qword_100435A00, &qword_100435A08);
}

uint64_t sub_100291044()
{
  return sub_100034B8C(&qword_100435A10, &qword_100435A08);
}

uint64_t sub_100291080()
{
  return sub_100034B8C(&qword_100435A18, &qword_100435A20);
}

uint64_t sub_1002910BC()
{
  return sub_100034B8C(&qword_100435A28, &qword_100435A20);
}

uint64_t sub_1002910F8()
{
  return sub_100034B8C(&qword_100435A30, &qword_100435A38);
}

uint64_t sub_100291134()
{
  return sub_100034B8C(&qword_100435A40, &qword_100435A38);
}

uint64_t sub_100291170()
{
  return sub_100034B8C(&qword_100435A48, &qword_100435A50);
}

uint64_t sub_1002911AC()
{
  return sub_100034B8C(&qword_100435A58, &qword_100435A50);
}

uint64_t sub_1002911E8()
{
  return sub_100034B8C(&qword_100435A60, &qword_100435A68);
}

uint64_t sub_100291224()
{
  return sub_100034B8C(&qword_100435A70, &qword_100435A68);
}

uint64_t sub_100291260()
{
  return sub_100034B8C(&qword_100435A78, &qword_100435A80);
}

uint64_t sub_10029129C()
{
  return sub_100034B8C(&qword_100435A88, &qword_100435A80);
}

uint64_t sub_1002912D8()
{
  return sub_100034B8C(&qword_100435A90, &qword_100435A98);
}

uint64_t sub_100291314()
{
  return sub_100034B8C(&qword_100435AA0, &qword_100435A98);
}

uint64_t sub_100291350()
{
  return sub_100034B8C(&qword_100435AA8, &qword_100435AB0);
}

uint64_t sub_10029138C()
{
  return sub_100034B8C(&qword_100435AB8, &qword_100435AB0);
}

uint64_t sub_1002913C8()
{
  return sub_100034B8C(&qword_100435AC0, &qword_100435AC8);
}

uint64_t sub_100291404()
{
  return sub_100034B8C(&qword_100435AD0, &qword_100435AC8);
}

uint64_t sub_100291440()
{
  return sub_100034B8C(&qword_100435AD8, &qword_100435AE0);
}

uint64_t sub_10029147C()
{
  return sub_100034B8C(&qword_100435AE8, &qword_100435AE0);
}

uint64_t sub_1002914B8()
{
  return sub_100034B8C(&qword_100435AF0, &qword_100435AF8);
}

uint64_t sub_1002914F4()
{
  return sub_100034B8C(&qword_100435B00, &qword_100435AF8);
}

uint64_t sub_100291530()
{
  return sub_100034B8C(&qword_100435B08, &qword_100435B10);
}

uint64_t sub_10029156C()
{
  return sub_100034B8C(&qword_100435B18, &qword_100435B10);
}

uint64_t sub_1002915A8()
{
  return sub_100034B8C(&qword_100435B20, &qword_100435B28);
}

uint64_t sub_1002915E4()
{
  return sub_100034B8C(&qword_100435B30, &qword_100435B28);
}

uint64_t sub_100291620()
{
  return sub_100034B8C(&qword_100435B38, &qword_100435B40);
}

uint64_t sub_10029165C()
{
  return sub_100034B8C(&qword_100435B48, &qword_100435B40);
}

uint64_t sub_100291698()
{
  return sub_100034B8C(&qword_100435B50, &qword_100435B58);
}

uint64_t sub_1002916D4()
{
  return sub_100034B8C(&qword_100435B60, &qword_100435B58);
}

uint64_t sub_100291710()
{
  return sub_100034B8C(&qword_100435B68, &qword_100435B70);
}

uint64_t sub_10029174C()
{
  return sub_100034B8C(&qword_100435B78, &qword_100435B70);
}

uint64_t sub_100291788()
{
  return sub_100034B8C(&qword_100435B80, &qword_100435B88);
}

uint64_t sub_1002917C4()
{
  return sub_100034B8C(&qword_100435B90, &qword_100435B88);
}

uint64_t sub_100291800()
{
  return sub_100034B8C(&qword_100435B98, &qword_100435BA0);
}

uint64_t sub_10029183C()
{
  return sub_100034B8C(&qword_100435BA8, &qword_100435BA0);
}

uint64_t sub_100291878()
{
  return sub_100034B8C(&qword_100435BB0, &qword_100435BB8);
}

uint64_t sub_1002918B4()
{
  return sub_100034B8C(&qword_100435BC0, &qword_100435BB8);
}

uint64_t sub_1002918F0()
{
  return sub_100034B8C(&qword_100435BC8, &qword_100435BD0);
}

uint64_t sub_10029192C()
{
  return sub_100034B8C(&qword_100435BD8, &qword_100435BD0);
}

uint64_t sub_100291968()
{
  return sub_100034B8C(&qword_100435BE0, &qword_100435BE8);
}

uint64_t sub_1002919A4()
{
  return sub_100034B8C(&qword_100435BF0, &qword_100435BE8);
}

uint64_t sub_1002919E0()
{
  return sub_100034B8C(&qword_100435BF8, &qword_100435C00);
}

uint64_t sub_100291A1C()
{
  return sub_100034B8C(&qword_100435C08, &qword_100435C00);
}

uint64_t sub_100291A58()
{
  return sub_100034B8C(&qword_100435C10, &qword_100435C18);
}

uint64_t sub_100291A94()
{
  return sub_100034B8C(&qword_100435C20, &qword_100435C18);
}

uint64_t sub_100291AD0()
{
  return sub_100034B8C(&qword_100435C28, &qword_100435C30);
}

uint64_t sub_100291B0C()
{
  return sub_100034B8C(&qword_100435C38, &qword_100435C30);
}

uint64_t sub_100291B48()
{
  return sub_100034B8C(&qword_100435C40, &qword_100435C48);
}

uint64_t sub_100291B84()
{
  return sub_100034B8C(&qword_100435C50, &qword_100435C48);
}

uint64_t sub_100291BC0()
{
  return sub_100034B8C(&qword_100435C58, &qword_100435C60);
}

uint64_t sub_100291BFC()
{
  return sub_100034B8C(&qword_100435C68, &qword_100435C60);
}

uint64_t sub_100291C38()
{
  return sub_100034B8C(&qword_100435C70, &qword_100435C78);
}

uint64_t sub_100291C74()
{
  return sub_100034B8C(&qword_100435C80, &qword_100435C78);
}

uint64_t sub_100291CB0()
{
  return sub_100034B8C(&qword_100435C88, &qword_100435C90);
}

uint64_t sub_100291CEC()
{
  return sub_100034B8C(&qword_100435C98, &qword_100435C90);
}

uint64_t sub_100291D28()
{
  return sub_100034B8C(&qword_100435CA0, &qword_100435CA8);
}

uint64_t sub_100291D64()
{
  return sub_100034B8C(&qword_100435CB0, &qword_100435CA8);
}

uint64_t sub_100291DA0()
{
  return sub_100034B8C(&qword_100435CB8, &qword_100435CC0);
}

uint64_t sub_100291DDC()
{
  return sub_100034B8C(&qword_100435CC8, &qword_100435CC0);
}

uint64_t sub_100291E18()
{
  return sub_100034B8C(&qword_100435CD0, &qword_100435CD8);
}

uint64_t sub_100291E54()
{
  return sub_100034B8C(&qword_100435CE0, &qword_100435CD8);
}

uint64_t sub_100291E90()
{
  return sub_100034B8C(&qword_100435CE8, &qword_100435CF0);
}

uint64_t sub_100291ECC()
{
  return sub_100034B8C(&qword_100435CF8, &qword_100435CF0);
}

uint64_t sub_100291F08()
{
  return sub_100034B8C(&qword_100435D00, &qword_100435D08);
}

uint64_t sub_100291F44()
{
  return sub_100034B8C(&qword_100435D10, &qword_100435D08);
}

uint64_t sub_100291F80()
{
  return sub_100034B8C(&qword_100435D18, &qword_100435D20);
}

uint64_t sub_100291FBC()
{
  return sub_100034B8C(&qword_100435D28, &qword_100435D20);
}

uint64_t sub_100291FF8()
{
  return sub_100034B8C(&qword_100435D30, &qword_100435D38);
}

uint64_t sub_100292034()
{
  return sub_100034B8C(&qword_100435D40, &qword_100435D38);
}

uint64_t sub_100292070()
{
  return sub_100034B8C(&qword_100435D48, &qword_100435D50);
}

uint64_t sub_1002920AC()
{
  return sub_100034B8C(&qword_100435D58, &qword_100435D50);
}

uint64_t sub_1002920E8()
{
  return sub_100034B8C(&qword_100435D60, &qword_100435D68);
}

uint64_t sub_100292124()
{
  return sub_100034B8C(&qword_100435D70, &qword_100435D68);
}

uint64_t sub_100292160()
{
  return sub_100034B8C(&qword_100435D78, &qword_100435D80);
}

uint64_t sub_10029219C()
{
  return sub_100034B8C(&qword_100435D88, &qword_100435D80);
}

uint64_t sub_1002921D8()
{
  return sub_100034B8C(&qword_100435D90, &qword_100435D98);
}

uint64_t sub_100292214()
{
  return sub_100034B8C(&qword_100435DA0, &qword_100435D98);
}

uint64_t sub_100292250()
{
  return sub_100034B8C(&qword_100435DA8, &qword_100435DB0);
}

uint64_t sub_10029228C()
{
  return sub_100034B8C(&qword_100435DB8, &qword_100435DB0);
}

uint64_t sub_1002922C8()
{
  return sub_100034B8C(&qword_100435DC0, &qword_100435DC8);
}

uint64_t sub_100292304()
{
  return sub_100034B8C(&qword_100435DD0, &qword_100435DC8);
}

uint64_t sub_100292340()
{
  return sub_100034B8C(&qword_100435DD8, &qword_100435DE0);
}

uint64_t sub_10029237C()
{
  return sub_100034B8C(&qword_100435DE8, &qword_100435DE0);
}

uint64_t sub_1002923B8()
{
  return sub_100034B8C(&qword_100435DF0, &qword_100435DF8);
}

uint64_t sub_1002923F4()
{
  return sub_100034B8C(&qword_100435E00, &qword_100435DF8);
}

uint64_t sub_100292430()
{
  return sub_100034B8C(&qword_100435E08, &qword_100435E10);
}

uint64_t sub_10029246C()
{
  return sub_100034B8C(&qword_100435E18, &qword_100435E10);
}

uint64_t sub_1002924A8()
{
  return sub_100034B8C(&qword_100435E20, &qword_100435E28);
}

uint64_t sub_1002924E4()
{
  return sub_100034B8C(&qword_100435E30, &qword_100435E28);
}

uint64_t sub_100292520()
{
  return sub_100034B8C(&qword_100435E38, &qword_100435E40);
}

uint64_t sub_10029255C()
{
  return sub_100034B8C(&qword_100435E48, &qword_100435E40);
}

uint64_t sub_100292598()
{
  return sub_100034B8C(&qword_100435E50, &qword_100435E58);
}

uint64_t sub_1002925D4()
{
  return sub_100034B8C(&qword_100435E60, &qword_100435E58);
}

uint64_t sub_100292610()
{
  return sub_100034B8C(&qword_100435E68, &qword_100435E70);
}

uint64_t sub_10029264C()
{
  return sub_100034B8C(&qword_100435E78, &qword_100435E70);
}

uint64_t sub_100292688()
{
  return sub_100034B8C(&qword_100435E80, &qword_100435E88);
}

uint64_t sub_1002926C4()
{
  return sub_100034B8C(&qword_100435E90, &qword_100435E88);
}

uint64_t sub_100292700()
{
  return sub_100034B8C(&qword_100435E98, &qword_100435EA0);
}

uint64_t sub_10029273C()
{
  return sub_100034B8C(&qword_100435EA8, &qword_100435EA0);
}

uint64_t sub_100292778()
{
  return sub_100034B8C(&qword_100435EB0, &qword_100435EB8);
}

uint64_t sub_1002927B4()
{
  return sub_100034B8C(&qword_100435EC0, &qword_100435EB8);
}

uint64_t sub_1002927F0()
{
  return sub_100034B8C(&qword_100435EC8, &qword_100435ED0);
}

uint64_t sub_10029282C()
{
  return sub_100034B8C(&qword_100435ED8, &qword_100435ED0);
}

uint64_t sub_100292868()
{
  return sub_100034B8C(&qword_100435EE0, &qword_100435EE8);
}

uint64_t sub_1002928A4()
{
  return sub_100034B8C(&qword_100435EF0, &qword_100435EE8);
}

uint64_t sub_1002928E0()
{
  return sub_100034B8C(&qword_100435EF8, &qword_100435F00);
}

uint64_t sub_10029291C()
{
  return sub_100034B8C(&qword_100435F08, &qword_100435F00);
}

uint64_t sub_100292958()
{
  return sub_100034B8C(&qword_100435F10, &qword_100435F18);
}

uint64_t sub_100292994()
{
  return sub_100034B8C(&qword_100435F20, &qword_100435F18);
}

uint64_t sub_1002929D0()
{
  return sub_100034B8C(&qword_100435F28, &qword_100435F30);
}

uint64_t sub_100292A0C()
{
  return sub_100034B8C(&qword_100435F38, &qword_100435F30);
}

uint64_t sub_100292A48()
{
  return sub_100034B8C(&qword_100435F40, &qword_100435F48);
}

uint64_t sub_100292A84()
{
  return sub_100034B8C(&qword_100435F50, &qword_100435F48);
}

uint64_t sub_100292AC0()
{
  return sub_100034B8C(&qword_100435F58, &qword_100435F60);
}

uint64_t sub_100292AFC()
{
  return sub_100034B8C(&qword_100435F68, &qword_100435F60);
}

uint64_t sub_100292B38()
{
  return sub_100034B8C(&qword_100435F70, &qword_100435F78);
}

uint64_t sub_100292B74()
{
  return sub_100034B8C(&qword_100435F80, &qword_100435F78);
}

uint64_t sub_100292BB0()
{
  return sub_100034B8C(&qword_100435F88, &qword_100435F90);
}

uint64_t sub_100292BEC()
{
  return sub_100034B8C(&qword_100435F98, &qword_100435F90);
}

uint64_t sub_100292C28()
{
  return sub_100034B8C(&qword_100435FA0, &qword_100435FA8);
}

uint64_t sub_100292C64()
{
  return sub_100034B8C(&qword_100435FB0, &qword_100435FA8);
}

uint64_t sub_100292CA0()
{
  return sub_100034B8C(&qword_100435FB8, &qword_100435FC0);
}

uint64_t sub_100292CDC()
{
  return sub_100034B8C(&qword_100435FC8, &qword_100435FC0);
}

uint64_t sub_100292D18()
{
  return sub_100034B8C(&qword_100435FD0, &qword_100435FD8);
}

uint64_t sub_100292D54()
{
  return sub_100034B8C(&qword_100435FE0, &qword_100435FD8);
}

uint64_t sub_100292D90()
{
  return sub_100034B8C(&qword_100435FE8, &qword_100435FF0);
}

uint64_t sub_100292DCC()
{
  return sub_100034B8C(&qword_100435FF8, &qword_100435FF0);
}

uint64_t sub_100292E08()
{
  return sub_100034B8C(&qword_100436000, &qword_100436008);
}

uint64_t sub_100292E44()
{
  return sub_100034B8C(&qword_100436010, &qword_100436008);
}

uint64_t sub_100292E80()
{
  return sub_100034B8C(&qword_100436018, &qword_100436020);
}

uint64_t sub_100292EBC()
{
  return sub_100034B8C(&qword_100436028, &qword_100436020);
}

uint64_t sub_100292EF8()
{
  return sub_100034B8C(&qword_100436030, &qword_100436038);
}

uint64_t sub_100292F34()
{
  return sub_100034B8C(&qword_100436040, &qword_100436038);
}

uint64_t sub_100292F70()
{
  return sub_100034B8C(&qword_100436048, &qword_100436050);
}

uint64_t sub_100292FAC()
{
  return sub_100034B8C(&qword_100436058, &qword_100436050);
}

uint64_t sub_100292FE8()
{
  return sub_100034B8C(&qword_100436060, &qword_100436068);
}

uint64_t sub_100293024()
{
  return sub_100034B8C(&qword_100436070, &qword_100436068);
}

uint64_t sub_100293060()
{
  return sub_100034B8C(&qword_100436078, &qword_100436080);
}

uint64_t sub_10029309C()
{
  return sub_100034B8C(&qword_100436088, &qword_100436080);
}

uint64_t sub_1002930D8()
{
  return sub_100034B8C(&qword_100436090, &qword_100436098);
}

uint64_t sub_100293114()
{
  return sub_100034B8C(&qword_1004360A0, &qword_100436098);
}

uint64_t sub_100293150()
{
  return sub_100034B8C(&qword_1004360A8, &qword_1004360B0);
}

uint64_t sub_10029318C()
{
  return sub_100034B8C(&qword_1004360B8, &qword_1004360B0);
}

uint64_t sub_1002931C8()
{
  return sub_100034B8C(&qword_1004360C0, &qword_1004360C8);
}

uint64_t sub_100293204()
{
  return sub_100034B8C(&qword_1004360D0, &qword_1004360C8);
}

uint64_t sub_100293240()
{
  return sub_100034B8C(&qword_1004360D8, &qword_1004360E0);
}

uint64_t sub_10029327C()
{
  return sub_100034B8C(&qword_1004360E8, &qword_1004360E0);
}

uint64_t sub_1002932B8()
{
  return sub_100034B8C(&qword_1004360F0, &qword_1004360F8);
}

uint64_t sub_1002932F4()
{
  return sub_100034B8C(&qword_100436100, &qword_1004360F8);
}

uint64_t sub_100293330()
{
  return sub_100034B8C(&qword_100436108, &qword_100436110);
}

uint64_t sub_10029336C()
{
  return sub_100034B8C(&qword_100436118, &qword_100436110);
}

uint64_t sub_1002933A8()
{
  return sub_100034B8C(&qword_100436120, &qword_100436128);
}

uint64_t sub_1002933E4()
{
  return sub_100034B8C(&qword_100436130, &qword_100436128);
}

uint64_t sub_100293420()
{
  return sub_100034B8C(&qword_100436138, &qword_100436140);
}

uint64_t sub_10029345C()
{
  return sub_100034B8C(&qword_100436148, &qword_100436140);
}

uint64_t sub_100293498()
{
  return sub_100034B8C(&qword_100436150, &qword_100436158);
}

uint64_t sub_1002934D4()
{
  return sub_100034B8C(&qword_100436160, &qword_100436158);
}

uint64_t sub_100293510()
{
  return sub_100034B8C(&qword_100436168, &qword_100436170);
}

uint64_t sub_10029354C()
{
  return sub_100034B8C(&qword_100436178, &qword_100436170);
}

uint64_t sub_100293588()
{
  return sub_100034B8C(&qword_100436180, &qword_100436188);
}

uint64_t sub_1002935C4()
{
  return sub_100034B8C(&qword_100436190, &qword_100436188);
}

uint64_t sub_100293600()
{
  return sub_100034B8C(&qword_100436198, &qword_1004361A0);
}

uint64_t sub_10029363C()
{
  return sub_100034B8C(&qword_1004361A8, &qword_1004361A0);
}

uint64_t sub_100293678()
{
  return sub_100034B8C(&qword_1004361B0, &qword_1004361B8);
}

uint64_t sub_1002936B4()
{
  return sub_100034B8C(&qword_1004361C0, &qword_1004361B8);
}

uint64_t sub_1002936F0()
{
  return sub_100034B8C(&qword_1004361C8, &qword_1004361D0);
}

uint64_t sub_10029372C()
{
  return sub_100034B8C(&qword_1004361D8, &qword_1004361D0);
}

uint64_t sub_100293768()
{
  return sub_100034B8C(&qword_1004361E0, &qword_1004361E8);
}

uint64_t sub_1002937A4()
{
  return sub_100034B8C(&qword_1004361F0, &qword_1004361E8);
}

uint64_t sub_1002937E0()
{
  return sub_100034B8C(&qword_1004361F8, &qword_100436200);
}

uint64_t sub_10029381C()
{
  return sub_100034B8C(&qword_100436208, &qword_100436200);
}

uint64_t sub_100293858()
{
  return sub_100034B8C(&qword_100436210, &qword_100436218);
}

uint64_t sub_100293894()
{
  return sub_100034B8C(&qword_100436220, &qword_100436218);
}

uint64_t sub_1002938D0()
{
  return sub_100034B8C(&qword_100436228, &qword_100436230);
}

uint64_t sub_10029390C()
{
  return sub_100034B8C(&qword_100436238, &qword_100436230);
}

uint64_t sub_100293948()
{
  return sub_100034B8C(&qword_100436240, &qword_100436248);
}

uint64_t sub_100293984()
{
  return sub_100034B8C(&qword_100436250, &qword_100436248);
}

uint64_t sub_1002939C0()
{
  return sub_100034B8C(&qword_100436258, &qword_100436260);
}

uint64_t sub_1002939FC()
{
  return sub_100034B8C(&qword_100436268, &qword_100436260);
}

uint64_t sub_100293A38()
{
  return sub_100034B8C(&qword_100436270, &qword_100436278);
}

uint64_t sub_100293A74()
{
  return sub_100034B8C(&qword_100436280, &qword_100436278);
}

uint64_t sub_100293AB0()
{
  return sub_100034B8C(&qword_100436288, &qword_100436290);
}

uint64_t sub_100293AEC()
{
  return sub_100034B8C(&qword_100436298, &qword_100436290);
}

uint64_t sub_100293B28()
{
  return sub_100034B8C(&qword_1004362A0, &qword_1004362A8);
}

uint64_t sub_100293B64()
{
  return sub_100034B8C(&qword_1004362B0, &qword_1004362A8);
}

uint64_t sub_100293BA0()
{
  return sub_100034B8C(&qword_1004362B8, &qword_1004362C0);
}

uint64_t sub_100293BDC()
{
  return sub_100034B8C(&qword_1004362C8, &qword_1004362C0);
}

uint64_t sub_100293C18()
{
  return sub_100034B8C(&qword_1004362D0, &qword_1004362D8);
}

uint64_t sub_100293C54()
{
  return sub_100034B8C(&qword_1004362E0, &qword_1004362D8);
}

uint64_t sub_100293C90()
{
  return sub_100034B8C(&qword_1004362E8, &qword_1004362F0);
}

uint64_t sub_100293CCC()
{
  return sub_100034B8C(&qword_1004362F8, &qword_1004362F0);
}

uint64_t sub_100293D08()
{
  return sub_100034B8C(&qword_100436300, &qword_100436308);
}

uint64_t sub_100293D44()
{
  return sub_100034B8C(&qword_100436310, &qword_100436308);
}

uint64_t sub_100293D80()
{
  return sub_100034B8C(&qword_100436318, &qword_100436320);
}

uint64_t sub_100293DBC()
{
  return sub_100034B8C(&qword_100436328, &qword_100436320);
}

uint64_t sub_100293DF8()
{
  return sub_100034B8C(&qword_100436330, &qword_100436338);
}

uint64_t sub_100293E34()
{
  return sub_100034B8C(&qword_100436340, &qword_100436338);
}

uint64_t sub_100293E70()
{
  return sub_100034B8C(&qword_100436348, &qword_100436350);
}

uint64_t sub_100293EAC()
{
  return sub_100034B8C(&qword_100436358, &qword_100436350);
}

uint64_t sub_100293EE8()
{
  return sub_100034B8C(&qword_100436360, &qword_100436368);
}

uint64_t sub_100293F24()
{
  return sub_100034B8C(&qword_100436370, &qword_100436368);
}

uint64_t sub_100293F60()
{
  return sub_100034B8C(&qword_100436378, &qword_100436380);
}

uint64_t sub_100293F9C()
{
  return sub_100034B8C(&qword_100436388, &qword_100436380);
}

uint64_t sub_100293FD8()
{
  return sub_100034B8C(&qword_100436390, &qword_100436398);
}

uint64_t sub_100294014()
{
  return sub_100034B8C(&qword_1004363A0, &qword_100436398);
}

uint64_t sub_100294050()
{
  return sub_100034B8C(&qword_1004363A8, &qword_1004363B0);
}

uint64_t sub_10029408C()
{
  return sub_100034B8C(&qword_1004363B8, &qword_1004363B0);
}

uint64_t sub_1002940C8()
{
  return sub_100034B8C(&qword_1004363C0, &qword_1004363C8);
}

uint64_t sub_100294104()
{
  return sub_100034B8C(&qword_1004363D0, &qword_1004363C8);
}

uint64_t sub_100294140()
{
  return sub_100034B8C(&qword_1004363D8, &qword_1004363E0);
}

uint64_t sub_10029417C()
{
  return sub_100034B8C(&qword_1004363E8, &qword_1004363E0);
}

uint64_t sub_1002941B8()
{
  return sub_100034B8C(&qword_1004363F0, &qword_1004363F8);
}

uint64_t sub_1002941F4()
{
  return sub_100034B8C(&qword_100436400, &qword_1004363F8);
}

uint64_t sub_100294230()
{
  return sub_100034B8C(&qword_100436408, &qword_100436410);
}

uint64_t sub_10029426C()
{
  return sub_100034B8C(&qword_100436418, &qword_100436410);
}

uint64_t sub_1002942A8()
{
  return sub_100034B8C(&qword_100436420, &qword_100436428);
}

uint64_t sub_1002942E4()
{
  return sub_100034B8C(&qword_100436430, &qword_100436428);
}

uint64_t sub_100294320()
{
  return sub_100034B8C(&qword_100436438, &qword_100436440);
}

uint64_t sub_10029435C()
{
  return sub_100034B8C(&qword_100436448, &qword_100436440);
}

uint64_t sub_100294398()
{
  return sub_100034B8C(&qword_100436450, &qword_100436458);
}

uint64_t sub_1002943D4()
{
  return sub_100034B8C(&qword_100436460, &qword_100436458);
}

uint64_t sub_100294410()
{
  return sub_100034B8C(&qword_100436468, &qword_100436470);
}

uint64_t sub_10029444C()
{
  return sub_100034B8C(&qword_100436478, &qword_100436470);
}

uint64_t sub_100294488()
{
  return sub_100034B8C(&qword_100436480, &qword_100436488);
}

uint64_t sub_1002944C4()
{
  return sub_100034B8C(&qword_100436490, &qword_100436488);
}

uint64_t sub_100294500()
{
  return sub_100034B8C(&qword_100436498, &qword_1004364A0);
}

uint64_t sub_10029453C()
{
  return sub_100034B8C(&qword_1004364A8, &qword_1004364A0);
}

uint64_t sub_100294578()
{
  return sub_100034B8C(&qword_1004364B0, &qword_1004364B8);
}

uint64_t sub_1002945B4()
{
  return sub_100034B8C(&qword_1004364C0, &qword_1004364B8);
}

uint64_t sub_1002945F0()
{
  return sub_100034B8C(&qword_1004364C8, &qword_1004364D0);
}

uint64_t sub_10029462C()
{
  return sub_100034B8C(&qword_1004364D8, &qword_1004364D0);
}

uint64_t sub_100294668()
{
  return sub_100034B8C(&qword_1004364E0, &qword_1004364E8);
}

uint64_t sub_1002946A4()
{
  return sub_100034B8C(&qword_1004364F0, &qword_1004364E8);
}

uint64_t sub_1002946E0()
{
  return sub_100034B8C(&qword_1004364F8, &qword_100436500);
}

uint64_t sub_10029471C()
{
  return sub_100034B8C(&qword_100436508, &qword_100436500);
}

uint64_t sub_100294758()
{
  return sub_100034B8C(&qword_100436510, &qword_100436518);
}

uint64_t sub_100294794()
{
  return sub_100034B8C(&qword_100436520, &qword_100436518);
}

uint64_t sub_1002947D0()
{
  return sub_100034B8C(&qword_100436528, &qword_100436530);
}

uint64_t sub_10029480C()
{
  return sub_100034B8C(&qword_100436538, &qword_100436530);
}

uint64_t sub_100294848()
{
  return sub_100034B8C(&qword_100436540, &qword_100436548);
}

uint64_t sub_100294884()
{
  return sub_100034B8C(&qword_100436550, &qword_100436548);
}

uint64_t sub_1002948C0()
{
  return sub_100034B8C(&qword_100436558, &qword_100436560);
}

uint64_t sub_1002948FC()
{
  return sub_100034B8C(&qword_100436568, &qword_100436560);
}

uint64_t sub_100294938()
{
  return sub_100034B8C(&qword_100436570, &qword_100436578);
}

uint64_t sub_100294974()
{
  return sub_100034B8C(&qword_100436580, &qword_100436578);
}

uint64_t sub_1002949B0()
{
  return sub_100034B8C(&qword_100436588, &qword_100436590);
}

uint64_t sub_1002949EC()
{
  return sub_100034B8C(&qword_100436598, &qword_100436590);
}

uint64_t sub_100294A28()
{
  return sub_100034B8C(&qword_1004365A0, &qword_1004365A8);
}

uint64_t sub_100294A64()
{
  return sub_100034B8C(&qword_1004365B0, &qword_1004365A8);
}

uint64_t sub_100294AA0()
{
  return sub_100034B8C(&qword_1004365B8, &qword_1004365C0);
}

uint64_t sub_100294ADC()
{
  return sub_100034B8C(&qword_1004365C8, &qword_1004365C0);
}

uint64_t sub_100294B18()
{
  return sub_100034B8C(&qword_1004365D0, &qword_1004365D8);
}

uint64_t sub_100294B54()
{
  return sub_100034B8C(&qword_1004365E0, &qword_1004365D8);
}

uint64_t sub_100294B90()
{
  return sub_100034B8C(&qword_1004365E8, &qword_1004365F0);
}

uint64_t sub_100294BCC()
{
  return sub_100034B8C(&qword_1004365F8, &qword_1004365F0);
}

uint64_t sub_100294C08()
{
  return sub_100034B8C(&qword_100436600, &qword_100436608);
}

uint64_t sub_100294C44()
{
  return sub_100034B8C(&qword_100436610, &qword_100436608);
}

uint64_t sub_100294C80()
{
  return sub_100034B8C(&qword_100436618, &qword_100436620);
}

uint64_t sub_100294CBC()
{
  return sub_100034B8C(&qword_100436628, &qword_100436620);
}

uint64_t sub_100294CF8()
{
  return sub_100034B8C(&qword_100436630, &qword_100436638);
}

uint64_t sub_100294D34()
{
  return sub_100034B8C(&qword_100436640, &qword_100436638);
}

uint64_t sub_100294D70()
{
  return sub_100034B8C(&qword_100436648, &qword_100436650);
}

uint64_t sub_100294DAC()
{
  return sub_100034B8C(&qword_100436658, &qword_100436650);
}

uint64_t sub_100294DE8()
{
  return sub_100034B8C(&qword_100436660, &qword_100436668);
}

uint64_t sub_100294E24()
{
  return sub_100034B8C(&qword_100436670, &qword_100436668);
}

uint64_t sub_100294E60()
{
  return sub_100034B8C(&qword_100436678, &qword_100436680);
}

uint64_t sub_100294E9C()
{
  return sub_100034B8C(&qword_100436688, &qword_100436680);
}

uint64_t sub_100294ED8()
{
  return sub_100034B8C(&qword_100436690, &qword_100436698);
}

uint64_t sub_100294F14()
{
  return sub_100034B8C(&qword_1004366A0, &qword_100436698);
}

uint64_t sub_100294F50()
{
  return sub_100034B8C(&qword_1004366A8, &qword_1004366B0);
}

uint64_t sub_100294F8C()
{
  return sub_100034B8C(&qword_1004366B8, &qword_1004366B0);
}

uint64_t sub_100294FC8()
{
  return sub_100034B8C(&qword_1004366C0, &qword_1004366C8);
}

uint64_t sub_100295004()
{
  return sub_100034B8C(&qword_1004366D0, &qword_1004366C8);
}

uint64_t sub_100295040()
{
  return sub_100034B8C(&qword_1004366D8, &qword_1004366E0);
}

uint64_t sub_10029507C()
{
  return sub_100034B8C(&qword_1004366E8, &qword_1004366E0);
}

uint64_t sub_1002950B8()
{
  return sub_100034B8C(&qword_1004366F0, &qword_1004366F8);
}

uint64_t sub_1002950F4()
{
  return sub_100034B8C(&qword_100436700, &qword_1004366F8);
}

uint64_t sub_100295130()
{
  return sub_100034B8C(&qword_100436708, &qword_100436710);
}

uint64_t sub_10029516C()
{
  return sub_100034B8C(&qword_100436718, &qword_100436710);
}

uint64_t sub_1002951A8()
{
  return sub_100034B8C(&qword_100436720, &qword_100436728);
}

uint64_t sub_1002951E4()
{
  return sub_100034B8C(&qword_100436730, &qword_100436728);
}

uint64_t sub_100295220()
{
  return sub_100034B8C(&qword_100436738, &qword_100436740);
}

uint64_t sub_10029525C()
{
  return sub_100034B8C(&qword_100436748, &qword_100436740);
}

uint64_t sub_100295298()
{
  return sub_100034B8C(&qword_100436750, &qword_100436758);
}

uint64_t sub_1002952D4()
{
  return sub_100034B8C(&qword_100436760, &qword_100436758);
}

uint64_t sub_100295310()
{
  return sub_100034B8C(&qword_100436768, &qword_100436770);
}

uint64_t sub_10029534C()
{
  return sub_100034B8C(&qword_100436778, &qword_100436770);
}

uint64_t sub_100295388()
{
  return sub_100034B8C(&qword_100436780, &qword_100436788);
}

uint64_t sub_1002953C4()
{
  return sub_100034B8C(&qword_100436790, &qword_100436788);
}

uint64_t sub_100295400()
{
  return sub_100034B8C(&qword_100436798, &qword_1004367A0);
}

uint64_t sub_10029543C()
{
  return sub_100034B8C(&qword_1004367A8, &qword_1004367A0);
}

uint64_t sub_100295478()
{
  return sub_100034B8C(&qword_1004367B0, &qword_1004367B8);
}

uint64_t sub_1002954B4()
{
  return sub_100034B8C(&qword_1004367C0, &qword_1004367B8);
}

uint64_t sub_1002954F0()
{
  return sub_100034B8C(&qword_1004367C8, &qword_1004367D0);
}

uint64_t sub_10029552C()
{
  return sub_100034B8C(&qword_1004367D8, &qword_1004367D0);
}

uint64_t sub_100295568()
{
  return sub_100034B8C(&qword_1004367E0, &qword_1004367E8);
}

uint64_t sub_1002955A4()
{
  return sub_100034B8C(&qword_1004367F0, &qword_1004367E8);
}

uint64_t sub_1002955E0()
{
  return sub_100034B8C(&qword_1004367F8, &qword_100436800);
}

uint64_t sub_10029561C()
{
  return sub_100034B8C(&qword_100436808, &qword_100436800);
}

uint64_t sub_100295658()
{
  return sub_100034B8C(&qword_100436810, &qword_100436818);
}

uint64_t sub_100295694()
{
  return sub_100034B8C(&qword_100436820, &qword_100436818);
}

uint64_t sub_1002956D0()
{
  return sub_100034B8C(&qword_100436828, &qword_100436830);
}

uint64_t sub_10029570C()
{
  return sub_100034B8C(&qword_100436838, &qword_100436830);
}

uint64_t sub_100295748()
{
  return sub_100034B8C(&qword_100436840, &qword_100436848);
}

uint64_t sub_100295784()
{
  return sub_100034B8C(&qword_100436850, &qword_100436848);
}

uint64_t sub_1002957C0()
{
  return sub_100034B8C(&qword_100436858, &qword_100436860);
}

uint64_t sub_1002957FC()
{
  return sub_100034B8C(&qword_100436868, &qword_100436860);
}

uint64_t sub_100295838()
{
  return sub_100034B8C(&qword_100436870, &qword_100436878);
}

uint64_t sub_100295874()
{
  return sub_100034B8C(&qword_100436880, &qword_100436878);
}

uint64_t sub_1002958B0()
{
  return sub_100034B8C(&qword_100436888, &qword_100436890);
}

uint64_t sub_1002958EC()
{
  return sub_100034B8C(&qword_100436898, &qword_100436890);
}

uint64_t sub_100295928()
{
  return sub_100034B8C(&qword_1004368A0, &qword_1004368A8);
}

uint64_t sub_100295964()
{
  return sub_100034B8C(&qword_1004368B0, &qword_1004368A8);
}

uint64_t sub_1002959A0()
{
  return sub_100034B8C(&qword_1004368B8, &qword_1004368C0);
}

uint64_t sub_1002959DC()
{
  return sub_100034B8C(&qword_1004368C8, &qword_1004368C0);
}

uint64_t sub_100295A18()
{
  return sub_100034B8C(&qword_1004368D0, &qword_1004368D8);
}

uint64_t sub_100295A54()
{
  return sub_100034B8C(&qword_1004368E0, &qword_1004368D8);
}

uint64_t sub_100295A90()
{
  return sub_100034B8C(&qword_1004368E8, &qword_1004368F0);
}

uint64_t sub_100295ACC()
{
  return sub_100034B8C(&qword_1004368F8, &qword_1004368F0);
}

uint64_t sub_100295B08()
{
  return sub_100034B8C(&qword_100436900, &qword_100436908);
}

uint64_t sub_100295B44()
{
  return sub_100034B8C(&qword_100436910, &qword_100436908);
}

uint64_t sub_100295B80()
{
  return sub_100034B8C(&qword_100436918, &qword_100436920);
}

uint64_t sub_100295BBC()
{
  return sub_100034B8C(&qword_100436928, &qword_100436920);
}

uint64_t sub_100295BF8()
{
  return sub_100034B8C(&qword_100436930, &qword_100436938);
}

uint64_t sub_100295C34()
{
  return sub_100034B8C(&qword_100436940, &qword_100436938);
}

uint64_t sub_100295C70()
{
  return sub_100034B8C(&qword_100436948, &qword_100436950);
}

uint64_t sub_100295CAC()
{
  return sub_100034B8C(&qword_100436958, &qword_100436950);
}

uint64_t sub_100295CE8()
{
  return sub_100034B8C(&qword_100436960, &qword_100436968);
}

uint64_t sub_100295D24()
{
  return sub_100034B8C(&qword_100436970, &qword_100436968);
}

uint64_t sub_100295D60()
{
  return sub_100034B8C(&qword_100436978, &qword_100436980);
}

uint64_t sub_100295D9C()
{
  return sub_100034B8C(&qword_100436988, &qword_100436980);
}

uint64_t sub_100295DD8()
{
  return sub_100034B8C(&qword_100436990, &qword_100436998);
}

uint64_t sub_100295E14()
{
  return sub_100034B8C(&qword_1004369A0, &qword_100436998);
}

uint64_t sub_100295E50()
{
  return sub_100034B8C(&qword_1004369A8, &qword_1004369B0);
}

uint64_t sub_100295E8C()
{
  return sub_100034B8C(&qword_1004369B8, &qword_1004369B0);
}

uint64_t sub_100295EC8()
{
  return sub_100034B8C(&qword_1004369C0, &qword_1004369C8);
}

uint64_t sub_100295F04()
{
  return sub_100034B8C(&qword_1004369D0, &qword_1004369C8);
}

uint64_t sub_100295F40()
{
  return sub_100034B8C(&qword_1004369D8, &qword_1004369E0);
}

uint64_t sub_100295F7C()
{
  return sub_100034B8C(&qword_1004369E8, &qword_1004369E0);
}

uint64_t sub_100295FB8()
{
  return sub_100034B8C(&qword_1004369F0, &qword_1004369F8);
}

uint64_t sub_100295FF4()
{
  return sub_100034B8C(&qword_100436A00, &qword_1004369F8);
}

uint64_t sub_100296030()
{
  return sub_100034B8C(&qword_100436A08, &qword_100436A10);
}

uint64_t sub_10029606C()
{
  return sub_100034B8C(&qword_100436A18, &qword_100436A10);
}

uint64_t sub_1002960A8()
{
  return sub_100034B8C(&qword_100436A20, &qword_100436A28);
}

uint64_t sub_1002960E4()
{
  return sub_100034B8C(&qword_100436A30, &qword_100436A28);
}

uint64_t sub_100296120()
{
  return sub_100034B8C(&qword_100436A38, &qword_100436A40);
}

uint64_t sub_10029615C()
{
  return sub_100034B8C(&qword_100436A48, &qword_100436A40);
}

uint64_t sub_100296198()
{
  return sub_100034B8C(&qword_100436A50, &qword_100436A58);
}

uint64_t sub_1002961D4()
{
  return sub_100034B8C(&qword_100436A60, &qword_100436A58);
}

uint64_t sub_100296210()
{
  return sub_100034B8C(&qword_100436A68, &qword_100436A70);
}

uint64_t sub_10029624C()
{
  return sub_100034B8C(&qword_100436A78, &qword_100436A70);
}

uint64_t sub_100296288()
{
  return sub_100034B8C(&qword_100436A80, &qword_100436A88);
}

uint64_t sub_1002962C4()
{
  return sub_100034B8C(&qword_100436A90, &qword_100436A88);
}

uint64_t sub_100296300()
{
  return sub_100034B8C(&qword_100436A98, &qword_100436AA0);
}

uint64_t sub_10029633C()
{
  return sub_100034B8C(&qword_100436AA8, &qword_100436AA0);
}

uint64_t sub_100296378()
{
  return sub_100034B8C(&qword_100436AB0, &qword_100436AB8);
}

uint64_t sub_1002963B4()
{
  return sub_100034B8C(&qword_100436AC0, &qword_100436AB8);
}

uint64_t sub_1002963F0()
{
  return sub_100034B8C(&qword_100436AC8, &qword_100436AD0);
}

uint64_t sub_10029642C()
{
  return sub_100034B8C(&qword_100436AD8, &qword_100436AD0);
}

uint64_t sub_100296468()
{
  return sub_100034B8C(&qword_100436AE0, &qword_100436AE8);
}

uint64_t sub_1002964A4()
{
  return sub_100034B8C(&qword_100436AF0, &qword_100436AE8);
}

uint64_t sub_1002964E0()
{
  return sub_100034B8C(&qword_100436AF8, &qword_100436B00);
}

uint64_t sub_10029651C()
{
  return sub_100034B8C(&qword_100436B08, &qword_100436B00);
}

uint64_t sub_100296558()
{
  return sub_100034B8C(&qword_100436B10, &qword_100436B18);
}

uint64_t sub_100296594()
{
  return sub_100034B8C(&qword_100436B20, &qword_100436B18);
}

uint64_t sub_1002965D0()
{
  return sub_100034B8C(&qword_100436B28, &qword_100436B30);
}

uint64_t sub_10029660C()
{
  return sub_100034B8C(&qword_100436B38, &qword_100436B30);
}

uint64_t sub_100296648()
{
  return sub_100034B8C(&qword_100436B40, &qword_100436B48);
}

uint64_t sub_100296684()
{
  return sub_100034B8C(&qword_100436B50, &qword_100436B48);
}

uint64_t sub_1002966C0()
{
  return sub_100034B8C(&qword_100436B58, &qword_100436B60);
}

uint64_t sub_1002966FC()
{
  return sub_100034B8C(&qword_100436B68, &qword_100436B60);
}

uint64_t sub_100296738()
{
  return sub_100034B8C(&qword_100436B70, &qword_100436B78);
}

uint64_t sub_100296774()
{
  return sub_100034B8C(&qword_100436B80, &qword_100436B78);
}

uint64_t sub_1002967B0()
{
  return sub_100034B8C(&qword_100436B88, &qword_100436B90);
}

uint64_t sub_1002967EC()
{
  return sub_100034B8C(&qword_100436B98, &qword_100436B90);
}

uint64_t sub_100296828()
{
  return sub_100034B8C(&qword_100436BA0, &qword_100436BA8);
}

uint64_t sub_100296864()
{
  return sub_100034B8C(&qword_100436BB0, &qword_100436BA8);
}

uint64_t sub_1002968A0()
{
  return sub_100034B8C(&qword_100436BB8, &qword_100436BC0);
}

uint64_t sub_1002968DC()
{
  return sub_100034B8C(&qword_100436BC8, &qword_100436BC0);
}

uint64_t sub_100296918()
{
  return sub_100034B8C(&qword_100436BD0, &qword_100436BD8);
}

uint64_t sub_100296954()
{
  return sub_100034B8C(&qword_100436BE0, &qword_100436BD8);
}

uint64_t sub_100296990()
{
  return sub_100034B8C(&qword_100436BE8, &qword_100436BF0);
}

uint64_t sub_1002969CC()
{
  return sub_100034B8C(&qword_100436BF8, &qword_100436BF0);
}

uint64_t sub_100296A08()
{
  return sub_100034B8C(&qword_100436C00, &qword_100436C08);
}

uint64_t sub_100296A44()
{
  return sub_100034B8C(&qword_100436C10, &qword_100436C08);
}

uint64_t sub_100296A80()
{
  return sub_100034B8C(&qword_100436C18, &qword_100436C20);
}

uint64_t sub_100296ABC()
{
  return sub_100034B8C(&qword_100436C28, &qword_100436C20);
}

uint64_t sub_100296AF8()
{
  return sub_100034B8C(&qword_100436C30, &qword_100436C38);
}

uint64_t sub_100296B34()
{
  return sub_100034B8C(&qword_100436C40, &qword_100436C38);
}

uint64_t sub_100296B70()
{
  return sub_100034B8C(&qword_100436C48, &qword_100436C50);
}

uint64_t sub_100296BAC()
{
  return sub_100034B8C(&qword_100436C58, &qword_100436C50);
}

uint64_t sub_100296BE8()
{
  return sub_100034B8C(&qword_100436C60, &qword_100436C68);
}

uint64_t sub_100296C24()
{
  return sub_100034B8C(&qword_100436C70, &qword_100436C68);
}

uint64_t sub_100296C60()
{
  return sub_100034B8C(&qword_100436C78, &qword_100436C80);
}

uint64_t sub_100296C9C()
{
  return sub_100034B8C(&qword_100436C88, &qword_100436C80);
}

unint64_t sub_100296CD8()
{
  unint64_t result = qword_100436C90;
  if (!qword_100436C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100436C90);
  }
  return result;
}

uint64_t sub_100296D2C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  id v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043BF98);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000E6110();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_100297170()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100428900);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043BF88, &qword_10043BF90);
    sub_100301060();
    return 0xD000000000000025;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10029753C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  id v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043BF30);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000E8390();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_100297980()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100428A08);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043BF20, &qword_10043BF28);
    sub_100301060();
    return 0xD000000000000024;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100297D50()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  id v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043BEC8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000EA53C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_100298194()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1003010C0();
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  v17[1] = 0x8000000100373BD0;
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100428B10);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v18);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043BEB8, &qword_10043BEC0);
    sub_100301060();
    return 0xD000000000000019;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100298558()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  id v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043BE60);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000EC774();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_10029899C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100428C18);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043BE50, &qword_10043BE58);
    sub_100301060();
    return 0xD000000000000046;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100298D6C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100437878);
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)v21 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1003010D0();
  uint64_t v26 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10002D0A8(&qword_10043BDF8);
  sub_1003010B0();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v25(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v23 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  v21[1] = v2 + 104;
  uint64_t v22 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000EE9D8();
  uint64_t v19 = sub_100300DD0();
  sub_10002D0A8(&qword_100437888);
  sub_1003010B0();
  v25(v13, 1, 1, v26);
  uint64_t v31 = 0;
  LOBYTE(v32) = 1;
  v17(v10, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for IntentParameter.DoubleControlStyle.stepper<A>(_:), v29);
  v22(v4, v23, v30);
  sub_100300DF0();
  return v19;
}

uint64_t sub_1002991D8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100428D20);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043BDE8, &qword_10043BDF0);
    sub_100301070();
    return 0xD000000000000034;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002995A4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043BD90);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000F0BE0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002999E8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100428E30);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043BD80, &qword_10043BD88);
    sub_100301060();
    return 0xD000000000000043;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100299DB4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v31 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100300F40();
  uint64_t v2 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v30 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v25 = sub_10002D0A8(&qword_10043BD28);
  sub_1003010B0();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v29(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v33 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v24 = v10;
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v28 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v26 = v2 + 104;
  uint64_t v27 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000F2DE8();
  uint64_t v19 = v23;
  uint64_t v25 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v29(v19, 1, 1, v30);
  LOBYTE(v33) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v31, 1, 1, v20);
  v17(v24, 1, 1, v16);
  v27(v4, v28, v32);
  sub_100300DE0();
  return v25;
}

uint64_t sub_10029A20C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100428F38);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043BD18, &qword_10043BD20);
    sub_100301060();
    return 0xD00000000000003FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10029A5D8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043BCC0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000F4FF0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_10029AA1C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429040);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043BCB0, &qword_10043BCB8);
    sub_100301060();
    return 0xD000000000000054;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10029ADE8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043BC58);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000F720C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_10029B22C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429148);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043BC48, &qword_10043BC50);
    sub_100301060();
    return 0xD00000000000003ELL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10029B5FC()
{
  uint64_t v0 = sub_10002D0A8(&qword_100437878);
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)v21 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1003010D0();
  uint64_t v26 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10002D0A8(&qword_10043BBF0);
  sub_1003010B0();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v25(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v23 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  v21[1] = v2 + 104;
  uint64_t v22 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000F9460();
  uint64_t v19 = sub_100300DD0();
  sub_10002D0A8(&qword_100437888);
  sub_1003010B0();
  v25(v13, 1, 1, v26);
  uint64_t v31 = 0;
  LOBYTE(v32) = 1;
  v17(v10, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for IntentParameter.DoubleControlStyle.stepper<A>(_:), v29);
  v22(v4, v23, v30);
  sub_100300DF0();
  return v19;
}

uint64_t sub_10029BA68()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429250);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043BBE0, &qword_10043BBE8);
    sub_100301070();
    return 0xD000000000000033;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10029BE34()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043BB88);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000FB668();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_10029C278()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429360);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043BB78, &qword_10043BB80);
    sub_100301060();
    return 0xD00000000000004ALL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10029C644()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043BB20);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000FD870();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_10029CA88()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429468);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043BB10, &qword_10043BB18);
    sub_100301060();
    return 0xD000000000000037;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10029CE54()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043BAB8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000FFAB8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_10029D298()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429570);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043BAA8, &qword_10043BAB0);
    sub_100301060();
    return 0xD00000000000002BLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10029D664()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043BA50);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100101CE0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_10029DAA8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429678);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043BA40, &qword_10043BA48);
    sub_100301060();
    return 0xD000000000000039;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10029DE78()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_10043B9E0);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  uint64_t v18 = v27;
  v17(v27);
  sub_100103FA8();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_10043B9E8);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 6;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100021BC8();
  sub_100300DC0();
  return v23;
}

uint64_t sub_10029E268()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429780);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B9D0, &qword_10043B9D8);
    sub_100021BC8();
    sub_100301050();
    return 0xD00000000000003ALL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10029E640()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B978);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001061B0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_10029EA84()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429888);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B968, &qword_10043B970);
    sub_100301060();
    return 0xD000000000000040;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10029EE50()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B910);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001083B8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_10029F294()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429990);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B900, &qword_10043B908);
    sub_100301060();
    return 0xD000000000000044;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10029F660()
{
  uint64_t v0 = sub_10002D0A8(&qword_100437878);
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)v21 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1003010D0();
  uint64_t v26 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10002D0A8(&qword_10043B8A8);
  sub_1003010B0();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v25(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v23 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  v21[1] = v2 + 104;
  unsigned int v22 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10010A60C();
  uint64_t v19 = sub_100300DD0();
  sub_10002D0A8(&qword_100437888);
  sub_1003010B0();
  v25(v13, 1, 1, v26);
  uint64_t v31 = 0;
  LOBYTE(v32) = 1;
  v17(v10, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for IntentParameter.DoubleControlStyle.stepper<A>(_:), v29);
  v22(v4, v23, v30);
  sub_100300DF0();
  return v19;
}

uint64_t sub_10029FACC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429A98);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B898, &qword_10043B8A0);
    sub_100301070();
    return 0xD00000000000003ALL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10029FE98()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B840);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10010C814();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A02DC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429BA8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B830, &qword_10043B838);
    sub_100301060();
    return 0xD00000000000002DLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A06A8()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_10043B7D0);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  uint64_t v18 = v27;
  v17(v27);
  sub_10010EA28();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_10043B7D8);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_10001D62C();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002A0A98()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429CB0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B7C0, &qword_10043B7C8);
    sub_10001D62C();
    sub_100301050();
    return 0xD000000000000038;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A0E70()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B768);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100110C30();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A12B4()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429DB8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B758, &qword_10043B760);
    sub_100301060();
    return 0xD000000000000035;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A1680()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B700);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100112E38();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A1AC4()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429EC0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B6F0, &qword_10043B6F8);
    sub_100301060();
    return 0xD000000000000037;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A1E90()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B698);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100115040();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A22D4()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100429FC8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B688, &qword_10043B690);
    sub_100301060();
    return 0xD000000000000029;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A26A0()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v31 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100300F40();
  uint64_t v2 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v30 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v25 = sub_10002D0A8(&qword_10043B630);
  sub_1003010B0();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v29(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v33 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v24 = v10;
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v28 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v26 = v2 + 104;
  uint64_t v27 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100117248();
  uint64_t v19 = v23;
  uint64_t v25 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v29(v19, 1, 1, v30);
  LOBYTE(v33) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v31, 1, 1, v20);
  v17(v24, 1, 1, v16);
  v27(v4, v28, v32);
  sub_100300DE0();
  return v25;
}

uint64_t sub_1002A2AF8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042A0D0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B620, &qword_10043B628);
    sub_100301060();
    return 0xD000000000000028;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A2EC4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B5C8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100119450();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A3308()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042A1D8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B5B8, &qword_10043B5C0);
    sub_100301060();
    return 0xD000000000000027;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A36D4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B560);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10011B65C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A3B18()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042A2E0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B550, &qword_10043B558);
    sub_100301060();
    return 0xD000000000000021;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A3EE0()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B4F8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10011D864();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A4324()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042A3E8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B4E8, &qword_10043B4F0);
    sub_100301060();
    return 0xD00000000000002ALL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A46F0()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B490);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10011FA6C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A4B34()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042A4F0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B480, &qword_10043B488);
    sub_100301060();
    return 0xD000000000000038;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A4F00()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B428);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100121C88();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A5344()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042A5F8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B418, &qword_10043B420);
    sub_100301060();
    return 0xD000000000000025;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A5714()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B3C0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100123E90();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A5B58()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042A700);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B3B0, &qword_10043B3B8);
    sub_100301060();
    return 0xD000000000000036;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A5F24()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B358);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100126098();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A6368()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042A808);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B348, &qword_10043B350);
    sub_100301060();
    return 0xD000000000000040;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A6734()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B2F0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001282A0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A6B78()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042A910);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B2E0, &qword_10043B2E8);
    sub_100301060();
    return 0xD000000000000049;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A6F44()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B288);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10012A4A8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A7388()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042AA18);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B278, &qword_10043B280);
    sub_100301060();
    return 0xD000000000000041;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A7754()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B220);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10012C6B0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A7B98()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042AB20);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B210, &qword_10043B218);
    sub_100301060();
    return 0xD000000000000046;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A7F64()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B1B8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10012E8B8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A83A8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042AC28);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B1A8, &qword_10043B1B0);
    sub_100301060();
    return 0xD000000000000040;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A8774()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_10043B148);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  uint64_t v18 = v27;
  v17(v27);
  sub_100130AF4();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_10043B150);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_10001E9C0();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002A8B64()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042AD30);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B138, &qword_10043B140);
    sub_10001E9C0();
    sub_100301050();
    return 0xD000000000000039;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A8F3C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043B0E0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100132D24();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002A9380()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042AE38);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B0D0, &qword_10043B0D8);
    sub_100301060();
    return 0xD000000000000051;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A974C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v31 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100300F40();
  uint64_t v2 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v30 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v25 = sub_10002D0A8(&qword_10043B078);
  sub_1003010B0();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v29(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v33 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v24 = v10;
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v28 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v26 = v2 + 104;
  uint64_t v27 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100134F2C();
  uint64_t v19 = v23;
  uint64_t v25 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v29(v19, 1, 1, v30);
  LOBYTE(v33) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v31, 1, 1, v20);
  v17(v24, 1, 1, v16);
  v27(v4, v28, v32);
  sub_100300DE0();
  return v25;
}

uint64_t sub_1002A9BA4()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042AF40);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B068, &qword_10043B070);
    sub_100301060();
    return 0xD000000000000061;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A9F70()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v31 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100300F40();
  uint64_t v2 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v30 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v25 = sub_10002D0A8(&qword_10043B010);
  sub_1003010B0();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v29(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v33 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v24 = v10;
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v28 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v26 = v2 + 104;
  uint64_t v27 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001369AC();
  uint64_t v19 = v23;
  uint64_t v25 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v29(v19, 1, 1, v30);
  LOBYTE(v33) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v31, 1, 1, v20);
  v17(v24, 1, 1, v16);
  v27(v4, v28, v32);
  sub_100300DE0();
  return v25;
}

uint64_t sub_1002AA3C8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042B048);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043B000, &qword_10043B008);
    sub_100301060();
    return 0xD000000000000061;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002AA794()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043AFA8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100138BB4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002AABD8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042B150);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043AF98, &qword_10043AFA0);
    sub_100301060();
    return 0xD000000000000028;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002AAFA0()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043AF40);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10013ADD0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002AB3E4()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042B258);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043AF30, &qword_10043AF38);
    sub_100301060();
    return 0xD00000000000001ELL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002AB7B4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043AED8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10013CFE4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002ABBF8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042B360);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043AEC8, &qword_10043AED0);
    sub_100301060();
    return 0xD00000000000001CLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002ABFC4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043AE70);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10013F218();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002AC408()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042B468);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043AE60, &qword_10043AE68);
    sub_100301060();
    return 0xD000000000000024;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002AC7D4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043AE08);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001413E4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002ACC18()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042B570);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043ADF8, &qword_10043AE00);
    sub_100301060();
    return 0xD000000000000023;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002ACFE4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043ADA0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100143584();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002AD428()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042B678);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043AD90, &qword_10043AD98);
    sub_100301060();
    return 0xD00000000000002CLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002AD7F4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v31 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100300F40();
  uint64_t v2 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v30 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v25 = sub_10002D0A8(&qword_10043AD38);
  sub_1003010B0();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v29(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v33 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v24 = v10;
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v28 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v26 = v2 + 104;
  uint64_t v27 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100145724();
  uint64_t v19 = v23;
  uint64_t v25 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v29(v19, 1, 1, v30);
  LOBYTE(v33) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v31, 1, 1, v20);
  v17(v24, 1, 1, v16);
  v27(v4, v28, v32);
  sub_100300DE0();
  return v25;
}

uint64_t sub_1002ADC4C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042B780);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043AD28, &qword_10043AD30);
    sub_100301060();
    return 0xD000000000000027;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002AE018()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043ACD0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001478FC();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002AE45C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042B888);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043ACC0, &qword_10043ACC8);
    sub_100301060();
    return 0xD00000000000001DLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002AE828()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043AC68);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100149B44();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002AEC6C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042B990);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043AC58, &qword_10043AC60);
    sub_100301060();
    return 0xD00000000000001FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002AF03C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043AC00);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10014BDA4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002AF480()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042BA98);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043ABF0, &qword_10043ABF8);
    sub_100301060();
    return 0xD000000000000020;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002AF850()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043AB98);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10014DF70();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002AFC94()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042BBA0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043AB88, &qword_10043AB90);
    sub_100301060();
    return 0xD00000000000001CLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B0060()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043AB30);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100150150();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B04A4()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042BCA8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043AB20, &qword_10043AB28);
    sub_100301060();
    return 0xD00000000000003ALL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B0874()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_10043AAC0);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  uint64_t v18 = v27;
  v17(v27);
  sub_100152318();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_10043AAC8);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 5;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_1000201DC();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002B0C64()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042BDB0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043AAB0, &qword_10043AAB8);
    sub_1000201DC();
    sub_100301050();
    return 0xD00000000000003ALL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B1040()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043AA58);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001545D8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B1484()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042BEB8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043AA48, &qword_10043AA50);
    sub_100301060();
    return 0xD000000000000037;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B1850()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A9F0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100156778();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B1C94()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042BFC0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A9E0, &qword_10043A9E8);
    sub_100301060();
    return 0xD00000000000001ALL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B2060()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A988);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100158958();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B24A4()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042C0C8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A978, &qword_10043A980);
    sub_100301060();
    return 0xD000000000000026;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B2874()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A920);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10015AB90();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B2CB8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042C1D0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A910, &qword_10043A918);
    sub_100301060();
    return 0xD000000000000023;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B3084()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A8B8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10015CD44();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B34C8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042C2D8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A8A8, &qword_10043A8B0);
    sub_100301060();
    return 0xD000000000000018;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B3898()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A850);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10015EEE8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B3CDC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042C3E0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A840, &qword_10043A848);
    sub_100301060();
    return 0xD000000000000021;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B40A4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A7E8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100161088();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B44E8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042C4E8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A7D8, &qword_10043A7E0);
    sub_100301060();
    return 0xD000000000000034;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B48B4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A780);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001632A4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B4CF8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042C5F0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A770, &qword_10043A778);
    sub_100301060();
    return 0xD00000000000001FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B50C8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A718);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100164D34();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B550C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1003010D0();
  __chkstk_darwin(v1 - 8);
  v19[0] = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100301130();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1003010C0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100301430();
  __chkstk_darwin(v11 - 8);
  sub_100301420();
  sub_1003010F0();
  id v12 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v13);
  uint64_t v15 = v14;
  id v16 = [v12 initWithURL:v14];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v16)
  {
    sub_10002D0A8(&qword_10042C6F8);
    id v18 = [v16 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v7);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A708, &qword_10043A710);
    sub_100301060();
    return 0x545F575323545452;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B58E0()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A6B0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100166FA4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B5D24()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1003010D0();
  __chkstk_darwin(v1 - 8);
  v19[0] = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100301130();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1003010C0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100301430();
  __chkstk_darwin(v11 - 8);
  sub_100301420();
  sub_1003010F0();
  id v12 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v13);
  uint64_t v15 = v14;
  id v16 = [v12 initWithURL:v14];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v16)
  {
    sub_10002D0A8(&qword_10042C800);
    id v18 = [v16 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v7);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A6A0, &qword_10043A6A8);
    sub_100301060();
    return 0x545F574823545452;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B60F8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A648);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100169184();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B653C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042C908);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A638, &qword_10043A640);
    sub_100301060();
    return 0xD000000000000028;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B6908()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A5E0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10016B398();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B6D4C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042CA10);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A5D0, &qword_10043A5D8);
    sub_100301060();
    return 0xD000000000000023;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B7118()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A578);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10016D53C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B755C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1003010D0();
  __chkstk_darwin(v1 - 8);
  v19[0] = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100301130();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1003010C0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100301430();
  __chkstk_darwin(v11 - 8);
  sub_100301420();
  sub_1003010F0();
  id v12 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v13);
  uint64_t v15 = v14;
  id v16 = [v12 initWithURL:v14];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v16)
  {
    sub_10002D0A8(&qword_10042CB18);
    id v18 = [v16 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v7);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A568, &qword_10043A570);
    sub_100301060();
    return 0x5845545245564F48;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B7934()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A510);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10016F6F4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B7D78()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042CC20);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A500, &qword_10043A508);
    sub_100301060();
    return 0xD00000000000002FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B8144()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A4A8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100171174();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B8588()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042CD28);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A498, &qword_10043A4A0);
    sub_100301060();
    return 0xD000000000000046;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B8954()
{
  uint64_t v0 = sub_10002D0A8(&qword_100437878);
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)v21 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1003010D0();
  uint64_t v26 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10002D0A8(&qword_10043A440);
  sub_1003010B0();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v25(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v23 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  v21[1] = v2 + 104;
  unsigned int v22 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001733C8();
  uint64_t v19 = sub_100300DD0();
  sub_10002D0A8(&qword_100437888);
  sub_1003010B0();
  v25(v13, 1, 1, v26);
  uint64_t v31 = 0;
  LOBYTE(v32) = 1;
  v17(v10, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for IntentParameter.DoubleControlStyle.stepper<A>(_:), v29);
  v22(v4, v23, v30);
  sub_100300DF0();
  return v19;
}

uint64_t sub_1002B8DC0()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042CE30);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A430, &qword_10043A438);
    sub_100301070();
    return 0xD000000000000046;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B918C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A3D8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001755CC();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B95D0()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042CF40);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A3C8, &qword_10043A3D0);
    sub_100301060();
    return 0xD000000000000037;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B999C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A370);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001777E8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002B9DE0()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042D048);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A360, &qword_10043A368);
    sub_100301060();
    return 0xD00000000000003ELL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BA1B0()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_10043A308);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_100179A60();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100438930);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 8;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100010834();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002BA5A0()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042D150);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A2F8, &qword_10043A300);
    sub_100010834();
    sub_100301050();
    return 0xD000000000000042;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BA974()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A2A0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10017BC74();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002BADB8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042D258);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A290, &qword_10043A298);
    sub_100301060();
    return 0xD00000000000001DLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BB184()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A238);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10017DE7C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002BB5C8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042D360);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A228, &qword_10043A230);
    sub_100301060();
    return 0xD000000000000021;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BB994()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A1D0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10017F8F8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002BBDDC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042D468);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A1C0, &qword_10043A1C8);
    sub_100301060();
    return 0xD00000000000001BLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BC19C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A168);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100181AD8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002BC5E0()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042D570);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A158, &qword_10043A160);
    sub_100301060();
    return 0xD000000000000025;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BC9A8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A100);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100183C7C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002BCDEC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042D678);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A0F0, &qword_10043A0F8);
    sub_100301060();
    return 0xD000000000000039;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BD1B4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A098);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100185E1C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002BD5F8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042D780);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A088, &qword_10043A090);
    sub_100301060();
    return 0xD00000000000001CLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BD9C4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_10043A030);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100188030();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002BDE08()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042D888);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_10043A020, &qword_10043A028);
    sub_100301060();
    return 0xD000000000000016;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BE1D4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439FC8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10018A1D0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002BE618()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042D990);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439FB8, &qword_100439FC0);
    sub_100301060();
    return 0xD000000000000026;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BE9E4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439F60);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10018C3FC();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002BEE28()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042DA98);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439F50, &qword_100439F58);
    sub_100301060();
    return 0xD000000000000035;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BF1F4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439EF8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10018E628();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002BF638()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042DBA0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439EE8, &qword_100439EF0);
    sub_100301060();
    return 0xD000000000000036;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BFA04()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439E90);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001907D4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002BFE48()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042DCA8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439E80, &qword_100439E88);
    sub_100301060();
    return 0xD00000000000002BLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C0214()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439E28);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100192974();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C0658()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042DDB0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439E18, &qword_100439E20);
    sub_100301060();
    return 0xD000000000000025;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C0A24()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439DC0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100194BFC();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C0E68()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042DEB8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439DB0, &qword_100439DB8);
    sub_100301060();
    return 0xD000000000000011;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C1234()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439D58);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100196E48();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C1678()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042DFC0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439D48, &qword_100439D50);
    sub_100301060();
    return 0xD000000000000017;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C1A44()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439CF0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100199028();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C1E88()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042E0C8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439CE0, &qword_100439CE8);
    sub_100301060();
    return 0xD00000000000001ALL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C2258()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439C88);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10019B1EC();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C269C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042E1D0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439C78, &qword_100439C80);
    sub_100301060();
    return 0xD000000000000034;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C2A68()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439C20);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10019D3B0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C2EAC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042E2D8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439C10, &qword_100439C18);
    sub_100301060();
    return 0xD000000000000033;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C3278()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439BB8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10019F550();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C36BC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042E3E0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439BA8, &qword_100439BB0);
    sub_100301060();
    return 0xD000000000000026;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C3A88()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439B50);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001A16F0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C3ECC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042E4E8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439B40, &qword_100439B48);
    sub_100301060();
    return 0xD000000000000032;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C4298()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439AE8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001A3890();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C46DC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042E5F0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439AD8, &qword_100439AE0);
    sub_100301060();
    return 0xD000000000000026;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C4AA8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439A80);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001A5AA4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C4EEC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042E6F8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439A70, &qword_100439A78);
    sub_100301060();
    return 0xD000000000000019;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C52B8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439A18);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001A7CB0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C56FC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042E800);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439A08, &qword_100439A10);
    sub_100301060();
    return 0xD000000000000051;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C5AC4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004399B0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001A9EB8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C5F08()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042E908);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004399A0, &qword_1004399A8);
    sub_100301060();
    return 0xD000000000000050;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C62D4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439948);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001AC0C0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C6718()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042EA10);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439938, &qword_100439940);
    sub_100301060();
    return 0xD000000000000053;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C6AE4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100439868);
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)v21 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1003010D0();
  uint64_t v26 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10002D0A8(&qword_1004398E0);
  sub_1003010B0();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v25(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v23 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  v21[1] = v2 + 104;
  unsigned int v22 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001AE39C();
  uint64_t v19 = sub_100300DD0();
  sub_10002D0A8(&qword_100439878);
  sub_1003010B0();
  v25(v13, 1, 1, v26);
  uint64_t v31 = 0;
  LOBYTE(v32) = 1;
  v17(v10, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for IntentParameter.IntControlStyle.stepper<A>(_:), v29);
  v22(v4, v23, v30);
  sub_100300E00();
  return v19;
}

uint64_t sub_1002C6F50()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042EB18);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004398D0, &qword_1004398D8);
    sub_100301080();
    return 0xD00000000000004DLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C7320()
{
  uint64_t v0 = sub_10002D0A8(&qword_100439868);
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)v21 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1003010D0();
  uint64_t v26 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10002D0A8(&qword_100439870);
  sub_1003010B0();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v25(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v23 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  v21[1] = v2 + 104;
  unsigned int v22 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001B0604();
  uint64_t v19 = sub_100300DD0();
  sub_10002D0A8(&qword_100439878);
  sub_1003010B0();
  v25(v13, 1, 1, v26);
  uint64_t v31 = 0;
  LOBYTE(v32) = 1;
  v17(v10, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for IntentParameter.IntControlStyle.stepper<A>(_:), v29);
  v22(v4, v23, v30);
  sub_100300E00();
  return v19;
}

uint64_t sub_1002C778C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042EC28);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439858, &qword_100439860);
    sub_100301080();
    return 0xD00000000000004DLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C7B5C()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_1004397F8);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_1001B2854();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100439800);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100022F1C();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002C7F4C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042ED38);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004397E8, &qword_1004397F0);
    sub_100022F1C();
    sub_100301050();
    return 0xD000000000000022;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C8324()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439790);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001B49F8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C8768()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042EE40);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439780, &qword_100439788);
    sub_100301060();
    return 0xD00000000000002ELL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C8B34()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439728);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001B6C00();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C8F78()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042EF48);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439718, &qword_100439720);
    sub_100301060();
    return 0xD000000000000028;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C9344()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004396C0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001B8D98();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002C9788()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042F050);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004396B0, &qword_1004396B8);
    sub_100301060();
    return 0xD00000000000001ELL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C9B54()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100439650);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_1001BB034();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100439658);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_1000294B8();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002C9F44()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042F158);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439640, &qword_100439648);
    sub_1000294B8();
    sub_100301050();
    return 0xD00000000000001ELL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002CA320()
{
  uint64_t v0 = sub_10002D0A8(&qword_100437878);
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)v21 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1003010D0();
  uint64_t v26 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10002D0A8(&qword_1004395E8);
  sub_1003010B0();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v25(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v23 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  v21[1] = v2 + 104;
  unsigned int v22 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001BD410();
  uint64_t v19 = sub_100300DD0();
  sub_10002D0A8(&qword_100437888);
  sub_1003010B0();
  v25(v13, 1, 1, v26);
  uint64_t v31 = 0;
  LOBYTE(v32) = 1;
  v17(v10, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for IntentParameter.DoubleControlStyle.stepper<A>(_:), v29);
  v22(v4, v23, v30);
  sub_100300DF0();
  return v19;
}

uint64_t sub_1002CA78C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042F260);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004395D8, &qword_1004395E0);
    sub_100301070();
    return 0xD00000000000001FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002CAB58()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439580);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001BF618();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002CAF9C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042F370);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439570, &qword_100439578);
    sub_100301060();
    return 0xD00000000000003FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002CB368()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439518);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001C1820();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002CB7AC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042F478);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439508, &qword_100439510);
    sub_100301060();
    return 0xD00000000000003FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002CBB78()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004394B0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001C3A28();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002CBFBC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042F580);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004394A0, &qword_1004394A8);
    sub_100301060();
    return 0xD00000000000003ELL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002CC388()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439448);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001C5BCC();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002CC7CC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042F688);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439438, &qword_100439440);
    sub_100301060();
    return 0xD00000000000003ELL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002CCB98()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_1004393D8);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_1001C7DF4();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_1004393E0);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_10002A914();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002CCF88()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042F790);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004393C8, &qword_1004393D0);
    sub_10002A914();
    sub_100301050();
    return 0xD00000000000002BLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002CD364()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439370);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001C9FA8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002CD7A8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042F898);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439360, &qword_100439368);
    sub_100301060();
    return 0xD00000000000001ELL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002CDB78()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439308);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001CC180();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002CDFBC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042F9A0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004392F8, &qword_100439300);
    sub_100301060();
    return 0xD00000000000001DLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002CE388()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004392A0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001CE388();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002CE7CC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042FAA8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439290, &qword_100439298);
    sub_100301060();
    return 0xD00000000000003CLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002CEB98()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439238);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001D0594();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002CEFDC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042FBB0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439228, &qword_100439230);
    sub_100301060();
    return 0xD000000000000022;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002CF3A4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004391D0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001D27B0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002CF7E8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042FCB8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004391C0, &qword_1004391C8);
    sub_100301060();
    return 0xD00000000000002CLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002CFBB8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439168);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001D49C4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002CFFFC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042FDC0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439158, &qword_100439160);
    sub_100301060();
    return 0xD000000000000029;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D03C8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439100);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001D6BE0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002D080C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042FEC8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004390F0, &qword_1004390F8);
    sub_100301060();
    return 0xD000000000000031;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D0BDC()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439098);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001D8DE8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002D1020()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_10042FFD0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439088, &qword_100439090);
    sub_100301060();
    return 0xD000000000000033;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D13EC()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100439030);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001DAF88();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002D1830()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004300D8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100439020, &qword_100439028);
    sub_100301060();
    return 0xD00000000000001FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D1BFC()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438FC8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001DD128();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002D2040()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004301E0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438FB8, &qword_100438FC0);
    sub_100301060();
    return 0xD00000000000002ELL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D240C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438F60);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001DF2DC();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002D2850()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004302E8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438F50, &qword_100438F58);
    sub_100301060();
    return 0xD000000000000024;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D2C20()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438EF8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001E147C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002D3064()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004303F0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438EE8, &qword_100438EF0);
    sub_100301060();
    return 0xD000000000000026;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D3430()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438E90);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001E365C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002D3874()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004304F8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438E80, &qword_100438E88);
    sub_100301060();
    return 0xD00000000000001FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D3C44()
{
  uint64_t v0 = sub_10002D0A8(&qword_100437878);
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)v21 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1003010D0();
  uint64_t v26 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10002D0A8(&qword_100438E28);
  sub_1003010B0();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v25(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v23 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  v21[1] = v2 + 104;
  unsigned int v22 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001E58B0();
  uint64_t v19 = sub_100300DD0();
  sub_10002D0A8(&qword_100437888);
  sub_1003010B0();
  v25(v13, 1, 1, v26);
  uint64_t v31 = 0;
  LOBYTE(v32) = 1;
  v17(v10, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for IntentParameter.DoubleControlStyle.stepper<A>(_:), v29);
  v22(v4, v23, v30);
  sub_100300DF0();
  return v19;
}

uint64_t sub_1002D40B0()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100430600);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438E18, &qword_100438E20);
    sub_100301070();
    return 0xD000000000000053;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D447C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438DC0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001E7AB8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002D48C0()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100430710);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438DB0, &qword_100438DB8);
    sub_100301060();
    return 0xD000000000000046;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D4C8C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100437878);
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)v21 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1003010D0();
  uint64_t v26 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10002D0A8(&qword_100438D58);
  sub_1003010B0();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v25(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v23 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  v21[1] = v2 + 104;
  unsigned int v22 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001E9584();
  uint64_t v19 = sub_100300DD0();
  sub_10002D0A8(&qword_100437888);
  sub_1003010B0();
  v25(v13, 1, 1, v26);
  uint64_t v31 = 0;
  LOBYTE(v32) = 1;
  v17(v10, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for IntentParameter.DoubleControlStyle.stepper<A>(_:), v29);
  v22(v4, v23, v30);
  sub_100300DF0();
  return v19;
}

uint64_t sub_1002D50F8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100430818);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438D48, &qword_100438D50);
    sub_100301070();
    return 0xD000000000000052;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D54C4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438CF0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001EB794();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002D5908()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100430928);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438CE0, &qword_100438CE8);
    sub_100301060();
    return 0xD000000000000040;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D5CD4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100437878);
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)v21 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1003010D0();
  uint64_t v26 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10002D0A8(&qword_100438C88);
  sub_1003010B0();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v25(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v23 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  v21[1] = v2 + 104;
  unsigned int v22 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001ED264();
  uint64_t v19 = sub_100300DD0();
  sub_10002D0A8(&qword_100437888);
  sub_1003010B0();
  v25(v13, 1, 1, v26);
  uint64_t v31 = 0;
  LOBYTE(v32) = 1;
  v17(v10, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for IntentParameter.DoubleControlStyle.stepper<A>(_:), v29);
  v22(v4, v23, v30);
  sub_100300DF0();
  return v19;
}

uint64_t sub_1002D6140()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100430A30);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438C78, &qword_100438C80);
    sub_100301070();
    return 0xD00000000000004FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D650C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438C20);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001EF46C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002D6950()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100430B40);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438C10, &qword_100438C18);
    sub_100301060();
    return 0xD00000000000003ALL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D6D18()
{
  uint64_t v0 = sub_10002D0A8(&qword_100437878);
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)v21 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1003010D0();
  uint64_t v26 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10002D0A8(&qword_100438BB8);
  sub_1003010B0();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v25(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v23 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  v21[1] = v2 + 104;
  unsigned int v22 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001F0F38();
  uint64_t v19 = sub_100300DD0();
  sub_10002D0A8(&qword_100437888);
  sub_1003010B0();
  v25(v13, 1, 1, v26);
  uint64_t v31 = 0;
  LOBYTE(v32) = 1;
  v17(v10, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for IntentParameter.DoubleControlStyle.stepper<A>(_:), v29);
  v22(v4, v23, v30);
  sub_100300DF0();
  return v19;
}

uint64_t sub_1002D7184()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100430C48);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438BA8, &qword_100438BB0);
    sub_100301070();
    return 0xD00000000000004CLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D754C()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438B50);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001F313C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002D7990()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100430D58);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438B40, &qword_100438B48);
    sub_100301060();
    return 0xD00000000000003FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D7D5C()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100438AE0);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_1001F5358();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100438AE8);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100024420();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002D814C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100430E60);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438AD0, &qword_100438AD8);
    sub_100024420();
    sub_100301050();
    return 0xD000000000000034;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D8524()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100438A70);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_1001F7578();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100438A78);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100025774();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002D8914()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100430F68);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438A60, &qword_100438A68);
    sub_100025774();
    sub_100301050();
    return 0xD000000000000028;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D8CEC()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100438A00);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_1001F97A8();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100438A08);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100026CA8();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002D90DC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100431070);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004389F0, &qword_1004389F8);
    sub_100026CA8();
    sub_100301050();
    return 0xD00000000000003ALL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D94B8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438998);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001FB9C4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002D98FC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100431178);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438988, &qword_100438990);
    sub_100301060();
    return 0xD000000000000044;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D9CCC()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100438928);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_1001FDC44();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100438930);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 8;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100010834();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002DA0BC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100431280);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438918, &qword_100438920);
    sub_100010834();
    sub_100301050();
    return 0xD00000000000003ELL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DA494()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_1004388B8);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_1001FFE6C();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_1004388C0);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100028078();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002DA884()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100431388);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004388A8, &qword_1004388B0);
    sub_100028078();
    sub_100301050();
    return 0xD00000000000002ALL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DAC60()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438850);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10020194C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002DB0A4()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100431490);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438840, &qword_100438848);
    sub_100301060();
    return 0xD000000000000028;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DB468()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004387E8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100203C60();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002DB8AC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100431598);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004387D8, &qword_1004387E0);
    sub_100301060();
    return 0xD000000000000025;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DBC78()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100438778);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_100205E6C();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100438780);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100011C3C();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002DC068()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004316A0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438768, &qword_100438770);
    sub_100011C3C();
    sub_100301050();
    return 0xD00000000000002FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DC444()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438710);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1002081C0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002DC888()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004317A8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438700, &qword_100438708);
    sub_100301060();
    return 0xD00000000000002ALL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DCC54()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004386A8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10020A37C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002DD098()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004318B0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438698, &qword_1004386A0);
    sub_100301060();
    return 0xD000000000000026;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DD468()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438640);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10020C528();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002DD8AC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004319B8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438630, &qword_100438638);
    sub_100301060();
    return 0xD000000000000022;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DDC74()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004385D8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10020E6D0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002DE0B8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100431AC0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004385C8, &qword_1004385D0);
    sub_100301060();
    return 0xD000000000000029;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DE484()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438570);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1002108B0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002DE8C8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100431BC8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438560, &qword_100438568);
    sub_100301060();
    return 0xD000000000000016;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DEC98()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438508);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100212B18();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002DF0DC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100431CD0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004384F8, &qword_100438500);
    sub_100301060();
    return 0xD00000000000002FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DF4A8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004384A0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100214D84();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002DF8EC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100431DD8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438490, &qword_100438498);
    sub_100301060();
    return 0xD000000000000030;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002DFCB4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438438);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100216FF0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002E00F8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100431EE0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438428, &qword_100438430);
    sub_100301060();
    return 0xD000000000000032;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E04C0()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_1004383C8);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_100218ACC();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_1004383D0);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 4;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_10002BFC0();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002E08B0()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100431FE8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004383B8, &qword_1004383C0);
    sub_10002BFC0();
    sub_100301050();
    return 0xD00000000000003ELL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E0C80()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438360);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10021AD88();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002E10C4()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004320F0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438350, &qword_100438358);
    sub_100301060();
    return 0xD00000000000002DLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E1494()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004382F8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10021CF58();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002E18D8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004321F8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004382E8, &qword_1004382F0);
    sub_100301060();
    return 0xD000000000000025;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E1CA0()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v31 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100300F40();
  uint64_t v2 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v30 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v25 = sub_10002D0A8(&qword_100438290);
  sub_1003010B0();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v29(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v33 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v24 = v10;
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v28 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v26 = v2 + 104;
  uint64_t v27 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10021F168();
  uint64_t v19 = v23;
  uint64_t v25 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v29(v19, 1, 1, v30);
  LOBYTE(v33) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v31, 1, 1, v20);
  v17(v24, 1, 1, v16);
  v27(v4, v28, v32);
  sub_100300DE0();
  return v25;
}

uint64_t sub_1002E20F8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100432300);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438280, &qword_100438288);
    sub_100301060();
    return 0xD000000000000026;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E24B8()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100438220);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_100221424();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100438228);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_1000125D4();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002E28A8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100432408);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438210, &qword_100438218);
    sub_1000125D4();
    sub_100301050();
    return 0xD000000000000037;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E2C80()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004381B8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10022362C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002E30C4()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100432510);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004381A8, &qword_1004381B0);
    sub_100301060();
    return 0xD00000000000004BLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E3490()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100438148);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_1002258B4();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100438150);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 4;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100013B50();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002E3880()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100432618);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438138, &qword_100438140);
    sub_100013B50();
    sub_100301050();
    return 0xD000000000000057;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E3C5C()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_1004380D8);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_100227B28();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_1004380E0);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 4;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_1000150D0();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002E404C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100432720);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004380C8, &qword_1004380D0);
    sub_1000150D0();
    sub_100301050();
    return 0xD00000000000004DLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E4424()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100438070);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100229D30();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002E4868()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100432828);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100438060, &qword_100438068);
    sub_100301060();
    return 0xD00000000000004BLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E4C34()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100438000);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_10022BFA4();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100438008);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100016478();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002E5024()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100432930);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437FF0, &qword_100437FF8);
    sub_100016478();
    sub_100301050();
    return 0xD00000000000004BLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E53FC()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100437F90);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_10022E230();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100437F98);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 2;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_1000176B8();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002E57EC()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100432A38);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437F80, &qword_100437F88);
    sub_1000176B8();
    sub_100301050();
    return 0xD000000000000049;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E5BC8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437F28);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100230444();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002E600C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100432B40);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437F18, &qword_100437F20);
    sub_100301060();
    return 0xD000000000000026;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E63D8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437EC0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10023264C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002E681C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100432C48);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437EB0, &qword_100437EB8);
    sub_100301060();
    return 0xD00000000000002FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E6BE8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437E58);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100234878();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002E702C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100432D50);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437E48, &qword_100437E50);
    sub_100301060();
    return 0xD000000000000025;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E73F8()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100437DE8);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_100236AE8();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100437DF0);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 2;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_10001AF7C();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002E77E8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100432E58);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437DD8, &qword_100437DE0);
    sub_10001AF7C();
    sub_100301050();
    return 0xD00000000000002FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E7BC0()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437D80);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100238CFC();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002E8004()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100432F60);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437D70, &qword_100437D78);
    sub_100301060();
    return 0xD000000000000023;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E83D0()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437D18);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10023AE9C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002E8814()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100433068);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437D08, &qword_100437D10);
    sub_100301060();
    return 0xD000000000000026;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E8BE0()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437CB0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10023D0B8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002E9024()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100433170);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437CA0, &qword_100437CA8);
    sub_100301060();
    return 0xD00000000000001CLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E93F4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437C48);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10023F2CC();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002E9838()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100433278);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437C38, &qword_100437C40);
    sub_100301060();
    return 0xD00000000000001BLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E9C04()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100437BD8);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_100241554();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100437BE0);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_10001C2D8();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002E9FF4()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100433380);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437BC8, &qword_100437BD0);
    sub_10001C2D8();
    sub_100301050();
    return 0xD000000000000023;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EA3D0()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100437B68);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_1002437C8();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100437B70);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100019D7C();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002EA7C0()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100433488);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437B58, &qword_100437B60);
    sub_100019D7C();
    sub_100301050();
    return 0xD00000000000003DLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EAB98()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100437AF8);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_100245A48();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100437B00);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100018A10();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002EAF88()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100433590);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437AE8, &qword_100437AF0);
    sub_100018A10();
    sub_100301050();
    return 0xD000000000000041;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EB360()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437A90);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100247C74();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002EB7A4()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100433698);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437A80, &qword_100437A88);
    sub_100301060();
    return 0xD000000000000069;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EBB70()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437A28);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100249E90();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002EBFB4()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004337A0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437A18, &qword_100437A20);
    sub_100301060();
    return 0xD000000000000027;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EC384()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004379C0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10024C098();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002EC7C8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004338A8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004379B0, &qword_1004379B8);
    sub_100301060();
    return 0xD00000000000002ALL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002ECB94()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437958);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10024E2A0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002ECFD8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004339B0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437948, &qword_100437950);
    sub_100301060();
    return 0xD00000000000002DLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002ED3A4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004378F0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1002504A8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002ED7E8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100433AB8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004378E0, &qword_1004378E8);
    sub_100301060();
    return 0xD00000000000004CLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EDBB4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100437878);
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)v21 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1003010D0();
  uint64_t v26 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10002D0A8(&qword_100437880);
  sub_1003010B0();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v25(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v23 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  v21[1] = v2 + 104;
  unsigned int v22 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100252714();
  uint64_t v19 = sub_100300DD0();
  sub_10002D0A8(&qword_100437888);
  sub_1003010B0();
  v25(v13, 1, 1, v26);
  uint64_t v31 = 0;
  LOBYTE(v32) = 1;
  v17(v10, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for IntentParameter.DoubleControlStyle.stepper<A>(_:), v29);
  v22(v4, v23, v30);
  sub_100300DF0();
  return v19;
}

uint64_t sub_1002EE020()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100433BC0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437868, &qword_100437870);
    sub_100301070();
    return 0xD000000000000022;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EE3F0()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437810);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100254928();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002EE834()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100433CD0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437800, &qword_100437808);
    sub_100301060();
    return 0xD00000000000002ALL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EEC00()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004377A8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1002563A8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002EF044()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100433DD8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437798, &qword_1004377A0);
    sub_100301060();
    return 0xD000000000000029;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EF410()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437740);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1002585B8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002EF854()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100433EE0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437730, &qword_100437738);
    sub_100301060();
    return 0xD000000000000025;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EFC20()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004376D8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10025A774();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F0068()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100433FE8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004376C8, &qword_1004376D0);
    sub_100301060();
    return 0xD00000000000001BLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F0424()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437670);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10025C988();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F0868()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004340F0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437660, &qword_100437668);
    sub_100301060();
    return 0xD000000000000020;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F0C34()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437608);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10025EB9C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F1078()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004341F8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004375F8, &qword_100437600);
    sub_100301060();
    return 0xD00000000000002BLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F1444()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004375A0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100260DA4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F1888()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100434300);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437590, &qword_100437598);
    sub_100301060();
    return 0xD000000000000021;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F1C54()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437538);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100262FAC();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F2098()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100434408);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437528, &qword_100437530);
    sub_100301060();
    return 0xD00000000000003CLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F2464()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004374D0);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1002651B4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F28A8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100434510);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004374C0, &qword_1004374C8);
    sub_100301060();
    return 0xD000000000000044;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F2C74()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437468);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1002673C8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F30B8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100434618);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437458, &qword_100437460);
    sub_100301060();
    return 0xD00000000000003FLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F3484()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437400);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1002695D0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F38C8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100434720);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004373F0, &qword_1004373F8);
    sub_100301060();
    return 0xD00000000000003CLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F3C94()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437398);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10026B7D8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F40D8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100434828);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437388, &qword_100437390);
    sub_100301060();
    return 0xD000000000000045;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F44A4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437330);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10026D9E0();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F48E8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100434930);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437320, &qword_100437328);
    sub_100301060();
    return 0xD000000000000043;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F4CB4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004372C8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10026FBE8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F50F8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100434A38);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004372B8, &qword_1004372C0);
    sub_100301060();
    return 0xD000000000000043;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F54C4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v31 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100300F40();
  uint64_t v2 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v30 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v25 = sub_10002D0A8(&qword_100437260);
  sub_1003010B0();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v29(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v33 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v24 = v10;
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v28 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v26 = v2 + 104;
  uint64_t v27 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100271DF0();
  uint64_t v19 = v23;
  uint64_t v25 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v29(v19, 1, 1, v30);
  LOBYTE(v33) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v31, 1, 1, v20);
  v17(v24, 1, 1, v16);
  v27(v4, v28, v32);
  sub_100300DE0();
  return v25;
}

uint64_t sub_1002F591C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100434B40);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437250, &qword_100437258);
    sub_100301060();
    return 0xD000000000000040;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F5CE8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004371F8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100273FF8();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F612C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100434C48);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004371E8, &qword_1004371F0);
    sub_100301060();
    return 0xD00000000000001BLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F64F8()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100437188);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_100276220();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100437190);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_10000E898();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002F68E8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100434D50);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437178, &qword_100437180);
    sub_10000E898();
    sub_100301050();
    return 0xD00000000000001BLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F6CC4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437120);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1002783E4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F7108()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100434E58);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437110, &qword_100437118);
    sub_100301060();
    return 0xD000000000000020;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F74D4()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_1004370B8);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10027A600();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F7918()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100434F60);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_1004370A8, &qword_1004370B0);
    sub_100301060();
    return 0xD000000000000028;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F7CE8()
{
  uint64_t v0 = sub_10002D0A8(&qword_100420FC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100300F40();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = sub_1003010D0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_10002D0A8(&qword_100437050);
  sub_1003010B0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_100300D60();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10027C808();
  uint64_t v19 = v22;
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100420FC8);
  sub_1003010B0();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_100301490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_100300DE0();
  return v23;
}

uint64_t sub_1002F812C()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100435068);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100437040, &qword_100437048);
    sub_100301060();
    return 0xD00000000000003BLL;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F84F8()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100436FE8);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_10027EA1C();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100436F18);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 4;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100006E9C();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002F88E8()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100435170);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100436FD8, &qword_100436FE0);
    sub_100006E9C();
    sub_100301050();
    return 0xD000000000000057;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F8CC0()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100436F80);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_100280C30();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100436F18);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 4;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100006E9C();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002F90B0()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100435278);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100436F70, &qword_100436F78);
    sub_100006E9C();
    sub_100301050();
    return 0xD000000000000057;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F9488()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100436F10);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_100282E44();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100436F18);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 4;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100006E9C();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002F9878()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100435380);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100436F00, &qword_100436F08);
    sub_100006E9C();
    sub_100301050();
    return 0xD000000000000057;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F9C50()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100436EA0);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_100285058();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100436EA8);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 6;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_1000088F0();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002FA040()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100435488);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100436E90, &qword_100436E98);
    sub_1000088F0();
    sub_100301050();
    return 0xD000000000000035;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002FA418()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100436E30);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_10028738C();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100436E38);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 2;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100009704();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002FA808()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100435590);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100436E20, &qword_100436E28);
    sub_100009704();
    sub_100301050();
    return 0xD000000000000024;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002FABE0()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100436DC0);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_100288EFC();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100436DC8);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 3;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_10000A74C();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002FAFD0()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_100435698);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100436DB0, &qword_100436DB8);
    sub_10000A74C();
    sub_100301050();
    return 0xD000000000000024;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002FB3A8()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100436D50);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_10028B1F0();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100436D58);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 4;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_10000B9C8();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002FB798()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004357A0);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100436D40, &qword_100436D48);
    sub_10000B9C8();
    sub_100301050();
    return 0xD000000000000024;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002FBB74()
{
  uint64_t v28 = sub_100300F40();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002D0A8(&qword_100420FB8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10002D0A8(&qword_100420A88);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003010D0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_10002D0A8(&qword_100436CC8);
  sub_1003010B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_100300D60();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  id v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  id v18 = v27;
  v17(v27);
  sub_10028D960();
  uint64_t v23 = sub_100300DD0();
  sub_10002D0A8(&qword_100436CD0);
  sub_1003010B0();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 6;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_10000D534();
  sub_100300DC0();
  return v23;
}

uint64_t sub_1002FBF64()
{
  uint64_t v0 = sub_100301150();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100301130();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1003010C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100301430();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1003010D0();
  __chkstk_darwin(v9 - 8);
  sub_100301420();
  sub_1003010F0();
  id v10 = objc_allocWithZone((Class)NSBundle);
  sub_100301100(v11);
  uint64_t v13 = v12;
  id v14 = [v10 initWithURL:v12];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v14)
  {
    sub_10002D0A8(&qword_1004358A8);
    id v16 = [v14 bundleURL];

    sub_100301110();
    (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.atURL(_:), v17[0]);
    sub_100301140();
    sub_1003010E0();
    sub_100034B8C(&qword_100436CB8, &qword_100436CC0);
    sub_10000D534();
    sub_100301050();
    return 0xD000000000000020;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002FC33C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_retain();
}

uint64_t sub_1002FC348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002D0A8(&qword_100436D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002FC3B0()
{
  unint64_t result = qword_100436D18;
  if (!qword_100436D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100436D18);
  }
  return result;
}

unint64_t sub_1002FC404()
{
  unint64_t result = qword_100436D88;
  if (!qword_100436D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100436D88);
  }
  return result;
}

unint64_t sub_1002FC458()
{
  unint64_t result = qword_100436DF8;
  if (!qword_100436DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100436DF8);
  }
  return result;
}

unint64_t sub_1002FC4AC()
{
  unint64_t result = qword_100436E68;
  if (!qword_100436E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100436E68);
  }
  return result;
}

unint64_t sub_1002FC500()
{
  unint64_t result = qword_100436ED8;
  if (!qword_100436ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100436ED8);
  }
  return result;
}

unint64_t sub_1002FC554()
{
  unint64_t result = qword_100436F48;
  if (!qword_100436F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100436F48);
  }
  return result;
}

unint64_t sub_1002FC5A8()
{
  unint64_t result = qword_100436FB0;
  if (!qword_100436FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100436FB0);
  }
  return result;
}

unint64_t sub_1002FC5FC()
{
  unint64_t result = qword_100437018;
  if (!qword_100437018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437018);
  }
  return result;
}

unint64_t sub_1002FC650()
{
  unint64_t result = qword_100437080;
  if (!qword_100437080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437080);
  }
  return result;
}

unint64_t sub_1002FC6A4()
{
  unint64_t result = qword_1004370E8;
  if (!qword_1004370E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004370E8);
  }
  return result;
}

unint64_t sub_1002FC6F8()
{
  unint64_t result = qword_100437150;
  if (!qword_100437150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437150);
  }
  return result;
}

unint64_t sub_1002FC74C()
{
  unint64_t result = qword_1004371C0;
  if (!qword_1004371C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004371C0);
  }
  return result;
}

unint64_t sub_1002FC7A0()
{
  unint64_t result = qword_100437228;
  if (!qword_100437228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437228);
  }
  return result;
}

unint64_t sub_1002FC7F4()
{
  unint64_t result = qword_100437290;
  if (!qword_100437290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437290);
  }
  return result;
}

unint64_t sub_1002FC848()
{
  unint64_t result = qword_1004372F8;
  if (!qword_1004372F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004372F8);
  }
  return result;
}

unint64_t sub_1002FC89C()
{
  unint64_t result = qword_100437360;
  if (!qword_100437360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437360);
  }
  return result;
}

unint64_t sub_1002FC8F0()
{
  unint64_t result = qword_1004373C8;
  if (!qword_1004373C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004373C8);
  }
  return result;
}

unint64_t sub_1002FC944()
{
  unint64_t result = qword_100437430;
  if (!qword_100437430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437430);
  }
  return result;
}

unint64_t sub_1002FC998()
{
  unint64_t result = qword_100437498;
  if (!qword_100437498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437498);
  }
  return result;
}

unint64_t sub_1002FC9EC()
{
  unint64_t result = qword_100437500;
  if (!qword_100437500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437500);
  }
  return result;
}

unint64_t sub_1002FCA40()
{
  unint64_t result = qword_100437568;
  if (!qword_100437568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437568);
  }
  return result;
}

unint64_t sub_1002FCA94()
{
  unint64_t result = qword_1004375D0;
  if (!qword_1004375D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004375D0);
  }
  return result;
}

unint64_t sub_1002FCAE8()
{
  unint64_t result = qword_100437638;
  if (!qword_100437638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437638);
  }
  return result;
}

unint64_t sub_1002FCB3C()
{
  unint64_t result = qword_1004376A0;
  if (!qword_1004376A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004376A0);
  }
  return result;
}

unint64_t sub_1002FCB90()
{
  unint64_t result = qword_100437708;
  if (!qword_100437708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437708);
  }
  return result;
}

unint64_t sub_1002FCBE4()
{
  unint64_t result = qword_100437770;
  if (!qword_100437770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437770);
  }
  return result;
}

unint64_t sub_1002FCC38()
{
  unint64_t result = qword_1004377D8;
  if (!qword_1004377D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004377D8);
  }
  return result;
}

unint64_t sub_1002FCC8C()
{
  unint64_t result = qword_100437840;
  if (!qword_100437840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437840);
  }
  return result;
}

unint64_t sub_1002FCCE0()
{
  unint64_t result = qword_1004378B8;
  if (!qword_1004378B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004378B8);
  }
  return result;
}

unint64_t sub_1002FCD34()
{
  unint64_t result = qword_100437920;
  if (!qword_100437920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437920);
  }
  return result;
}

unint64_t sub_1002FCD88()
{
  unint64_t result = qword_100437988;
  if (!qword_100437988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437988);
  }
  return result;
}

unint64_t sub_1002FCDDC()
{
  unint64_t result = qword_1004379F0;
  if (!qword_1004379F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004379F0);
  }
  return result;
}

unint64_t sub_1002FCE30()
{
  unint64_t result = qword_100437A58;
  if (!qword_100437A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437A58);
  }
  return result;
}

unint64_t sub_1002FCE84()
{
  unint64_t result = qword_100437AC0;
  if (!qword_100437AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437AC0);
  }
  return result;
}

unint64_t sub_1002FCED8()
{
  unint64_t result = qword_100437B30;
  if (!qword_100437B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437B30);
  }
  return result;
}

unint64_t sub_1002FCF2C()
{
  unint64_t result = qword_100437BA0;
  if (!qword_100437BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437BA0);
  }
  return result;
}

unint64_t sub_1002FCF80()
{
  unint64_t result = qword_100437C10;
  if (!qword_100437C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437C10);
  }
  return result;
}

unint64_t sub_1002FCFD4()
{
  unint64_t result = qword_100437C78;
  if (!qword_100437C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437C78);
  }
  return result;
}

unint64_t sub_1002FD028()
{
  unint64_t result = qword_100437CE0;
  if (!qword_100437CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437CE0);
  }
  return result;
}

unint64_t sub_1002FD07C()
{
  unint64_t result = qword_100437D48;
  if (!qword_100437D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437D48);
  }
  return result;
}

unint64_t sub_1002FD0D0()
{
  unint64_t result = qword_100437DB0;
  if (!qword_100437DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437DB0);
  }
  return result;
}

unint64_t sub_1002FD124()
{
  unint64_t result = qword_100437E20;
  if (!qword_100437E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437E20);
  }
  return result;
}

unint64_t sub_1002FD178()
{
  unint64_t result = qword_100437E88;
  if (!qword_100437E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437E88);
  }
  return result;
}

unint64_t sub_1002FD1CC()
{
  unint64_t result = qword_100437EF0;
  if (!qword_100437EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437EF0);
  }
  return result;
}

unint64_t sub_1002FD220()
{
  unint64_t result = qword_100437F58;
  if (!qword_100437F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437F58);
  }
  return result;
}

unint64_t sub_1002FD274()
{
  unint64_t result = qword_100437FC8;
  if (!qword_100437FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100437FC8);
  }
  return result;
}

unint64_t sub_1002FD2C8()
{
  unint64_t result = qword_100438038;
  if (!qword_100438038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438038);
  }
  return result;
}

unint64_t sub_1002FD31C()
{
  unint64_t result = qword_1004380A0;
  if (!qword_1004380A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004380A0);
  }
  return result;
}

unint64_t sub_1002FD370()
{
  unint64_t result = qword_100438110;
  if (!qword_100438110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438110);
  }
  return result;
}

unint64_t sub_1002FD3C4()
{
  unint64_t result = qword_100438180;
  if (!qword_100438180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438180);
  }
  return result;
}

unint64_t sub_1002FD418()
{
  unint64_t result = qword_1004381E8;
  if (!qword_1004381E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004381E8);
  }
  return result;
}

unint64_t sub_1002FD46C()
{
  unint64_t result = qword_100438258;
  if (!qword_100438258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438258);
  }
  return result;
}

unint64_t sub_1002FD4C0()
{
  unint64_t result = qword_1004382C0;
  if (!qword_1004382C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004382C0);
  }
  return result;
}

unint64_t sub_1002FD514()
{
  unint64_t result = qword_100438328;
  if (!qword_100438328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438328);
  }
  return result;
}

unint64_t sub_1002FD568()
{
  unint64_t result = qword_100438390;
  if (!qword_100438390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438390);
  }
  return result;
}

unint64_t sub_1002FD5BC()
{
  unint64_t result = qword_100438400;
  if (!qword_100438400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438400);
  }
  return result;
}

unint64_t sub_1002FD610()
{
  unint64_t result = qword_100438468;
  if (!qword_100438468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438468);
  }
  return result;
}

unint64_t sub_1002FD664()
{
  unint64_t result = qword_1004384D0;
  if (!qword_1004384D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004384D0);
  }
  return result;
}

unint64_t sub_1002FD6B8()
{
  unint64_t result = qword_100438538;
  if (!qword_100438538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438538);
  }
  return result;
}

unint64_t sub_1002FD70C()
{
  unint64_t result = qword_1004385A0;
  if (!qword_1004385A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004385A0);
  }
  return result;
}

unint64_t sub_1002FD760()
{
  unint64_t result = qword_100438608;
  if (!qword_100438608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438608);
  }
  return result;
}

unint64_t sub_1002FD7B4()
{
  unint64_t result = qword_100438670;
  if (!qword_100438670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438670);
  }
  return result;
}

unint64_t sub_1002FD808()
{
  unint64_t result = qword_1004386D8;
  if (!qword_1004386D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004386D8);
  }
  return result;
}

unint64_t sub_1002FD85C()
{
  unint64_t result = qword_100438740;
  if (!qword_100438740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438740);
  }
  return result;
}

unint64_t sub_1002FD8B0()
{
  unint64_t result = qword_1004387B0;
  if (!qword_1004387B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004387B0);
  }
  return result;
}

unint64_t sub_1002FD904()
{
  unint64_t result = qword_100438818;
  if (!qword_100438818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438818);
  }
  return result;
}

unint64_t sub_1002FD958()
{
  unint64_t result = qword_100438880;
  if (!qword_100438880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438880);
  }
  return result;
}

unint64_t sub_1002FD9AC()
{
  unint64_t result = qword_1004388F0;
  if (!qword_1004388F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004388F0);
  }
  return result;
}

unint64_t sub_1002FDA00()
{
  unint64_t result = qword_100438960;
  if (!qword_100438960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438960);
  }
  return result;
}

unint64_t sub_1002FDA54()
{
  unint64_t result = qword_1004389C8;
  if (!qword_1004389C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004389C8);
  }
  return result;
}

unint64_t sub_1002FDAA8()
{
  unint64_t result = qword_100438A38;
  if (!qword_100438A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438A38);
  }
  return result;
}

unint64_t sub_1002FDAFC()
{
  unint64_t result = qword_100438AA8;
  if (!qword_100438AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438AA8);
  }
  return result;
}

unint64_t sub_1002FDB50()
{
  unint64_t result = qword_100438B18;
  if (!qword_100438B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438B18);
  }
  return result;
}

unint64_t sub_1002FDBA4()
{
  unint64_t result = qword_100438B80;
  if (!qword_100438B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438B80);
  }
  return result;
}

unint64_t sub_1002FDBF8()
{
  unint64_t result = qword_100438BE8;
  if (!qword_100438BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438BE8);
  }
  return result;
}

unint64_t sub_1002FDC4C()
{
  unint64_t result = qword_100438C50;
  if (!qword_100438C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438C50);
  }
  return result;
}

unint64_t sub_1002FDCA0()
{
  unint64_t result = qword_100438CB8;
  if (!qword_100438CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438CB8);
  }
  return result;
}

unint64_t sub_1002FDCF4()
{
  unint64_t result = qword_100438D20;
  if (!qword_100438D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438D20);
  }
  return result;
}

unint64_t sub_1002FDD48()
{
  unint64_t result = qword_100438D88;
  if (!qword_100438D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438D88);
  }
  return result;
}

unint64_t sub_1002FDD9C()
{
  unint64_t result = qword_100438DF0;
  if (!qword_100438DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438DF0);
  }
  return result;
}

unint64_t sub_1002FDDF0()
{
  unint64_t result = qword_100438E58;
  if (!qword_100438E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438E58);
  }
  return result;
}

unint64_t sub_1002FDE44()
{
  unint64_t result = qword_100438EC0;
  if (!qword_100438EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438EC0);
  }
  return result;
}

unint64_t sub_1002FDE98()
{
  unint64_t result = qword_100438F28;
  if (!qword_100438F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438F28);
  }
  return result;
}

unint64_t sub_1002FDEEC()
{
  unint64_t result = qword_100438F90;
  if (!qword_100438F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438F90);
  }
  return result;
}

unint64_t sub_1002FDF40()
{
  unint64_t result = qword_100438FF8;
  if (!qword_100438FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100438FF8);
  }
  return result;
}

unint64_t sub_1002FDF94()
{
  unint64_t result = qword_100439060;
  if (!qword_100439060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439060);
  }
  return result;
}

unint64_t sub_1002FDFE8()
{
  unint64_t result = qword_1004390C8;
  if (!qword_1004390C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004390C8);
  }
  return result;
}

unint64_t sub_1002FE03C()
{
  unint64_t result = qword_100439130;
  if (!qword_100439130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439130);
  }
  return result;
}

unint64_t sub_1002FE090()
{
  unint64_t result = qword_100439198;
  if (!qword_100439198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439198);
  }
  return result;
}

unint64_t sub_1002FE0E4()
{
  unint64_t result = qword_100439200;
  if (!qword_100439200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439200);
  }
  return result;
}

unint64_t sub_1002FE138()
{
  unint64_t result = qword_100439268;
  if (!qword_100439268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439268);
  }
  return result;
}

unint64_t sub_1002FE18C()
{
  unint64_t result = qword_1004392D0;
  if (!qword_1004392D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004392D0);
  }
  return result;
}

unint64_t sub_1002FE1E0()
{
  unint64_t result = qword_100439338;
  if (!qword_100439338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439338);
  }
  return result;
}

unint64_t sub_1002FE234()
{
  unint64_t result = qword_1004393A0;
  if (!qword_1004393A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004393A0);
  }
  return result;
}

unint64_t sub_1002FE288()
{
  unint64_t result = qword_100439410;
  if (!qword_100439410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439410);
  }
  return result;
}

unint64_t sub_1002FE2DC()
{
  unint64_t result = qword_100439478;
  if (!qword_100439478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439478);
  }
  return result;
}

unint64_t sub_1002FE330()
{
  unint64_t result = qword_1004394E0;
  if (!qword_1004394E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004394E0);
  }
  return result;
}

unint64_t sub_1002FE384()
{
  unint64_t result = qword_100439548;
  if (!qword_100439548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439548);
  }
  return result;
}

unint64_t sub_1002FE3D8()
{
  unint64_t result = qword_1004395B0;
  if (!qword_1004395B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004395B0);
  }
  return result;
}

unint64_t sub_1002FE42C()
{
  unint64_t result = qword_100439618;
  if (!qword_100439618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439618);
  }
  return result;
}

unint64_t sub_1002FE480()
{
  unint64_t result = qword_100439688;
  if (!qword_100439688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439688);
  }
  return result;
}

unint64_t sub_1002FE4D4()
{
  unint64_t result = qword_1004396F0;
  if (!qword_1004396F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004396F0);
  }
  return result;
}

unint64_t sub_1002FE528()
{
  unint64_t result = qword_100439758;
  if (!qword_100439758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439758);
  }
  return result;
}

unint64_t sub_1002FE57C()
{
  unint64_t result = qword_1004397C0;
  if (!qword_1004397C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004397C0);
  }
  return result;
}

unint64_t sub_1002FE5D0()
{
  unint64_t result = qword_100439830;
  if (!qword_100439830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439830);
  }
  return result;
}

unint64_t sub_1002FE624()
{
  unint64_t result = qword_1004398A8;
  if (!qword_1004398A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004398A8);
  }
  return result;
}

unint64_t sub_1002FE678()
{
  unint64_t result = qword_100439910;
  if (!qword_100439910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439910);
  }
  return result;
}

unint64_t sub_1002FE6CC()
{
  unint64_t result = qword_100439978;
  if (!qword_100439978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439978);
  }
  return result;
}

unint64_t sub_1002FE720()
{
  unint64_t result = qword_1004399E0;
  if (!qword_1004399E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004399E0);
  }
  return result;
}

unint64_t sub_1002FE774()
{
  unint64_t result = qword_100439A48;
  if (!qword_100439A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439A48);
  }
  return result;
}

unint64_t sub_1002FE7C8()
{
  unint64_t result = qword_100439AB0;
  if (!qword_100439AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439AB0);
  }
  return result;
}

unint64_t sub_1002FE81C()
{
  unint64_t result = qword_100439B18;
  if (!qword_100439B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439B18);
  }
  return result;
}

unint64_t sub_1002FE870()
{
  unint64_t result = qword_100439B80;
  if (!qword_100439B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439B80);
  }
  return result;
}

unint64_t sub_1002FE8C4()
{
  unint64_t result = qword_100439BE8;
  if (!qword_100439BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439BE8);
  }
  return result;
}

unint64_t sub_1002FE918()
{
  unint64_t result = qword_100439C50;
  if (!qword_100439C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439C50);
  }
  return result;
}

unint64_t sub_1002FE96C()
{
  unint64_t result = qword_100439CB8;
  if (!qword_100439CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439CB8);
  }
  return result;
}

unint64_t sub_1002FE9C0()
{
  unint64_t result = qword_100439D20;
  if (!qword_100439D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439D20);
  }
  return result;
}

unint64_t sub_1002FEA14()
{
  unint64_t result = qword_100439D88;
  if (!qword_100439D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439D88);
  }
  return result;
}

unint64_t sub_1002FEA68()
{
  unint64_t result = qword_100439DF0;
  if (!qword_100439DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439DF0);
  }
  return result;
}

unint64_t sub_1002FEABC()
{
  unint64_t result = qword_100439E58;
  if (!qword_100439E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439E58);
  }
  return result;
}

unint64_t sub_1002FEB10()
{
  unint64_t result = qword_100439EC0;
  if (!qword_100439EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439EC0);
  }
  return result;
}

unint64_t sub_1002FEB64()
{
  unint64_t result = qword_100439F28;
  if (!qword_100439F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439F28);
  }
  return result;
}

unint64_t sub_1002FEBB8()
{
  unint64_t result = qword_100439F90;
  if (!qword_100439F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439F90);
  }
  return result;
}

unint64_t sub_1002FEC0C()
{
  unint64_t result = qword_100439FF8;
  if (!qword_100439FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439FF8);
  }
  return result;
}

unint64_t sub_1002FEC60()
{
  unint64_t result = qword_10043A060;
  if (!qword_10043A060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A060);
  }
  return result;
}

unint64_t sub_1002FECB4()
{
  unint64_t result = qword_10043A0C8;
  if (!qword_10043A0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A0C8);
  }
  return result;
}

unint64_t sub_1002FED08()
{
  unint64_t result = qword_10043A130;
  if (!qword_10043A130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A130);
  }
  return result;
}

unint64_t sub_1002FED5C()
{
  unint64_t result = qword_10043A198;
  if (!qword_10043A198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A198);
  }
  return result;
}

unint64_t sub_1002FEDB0()
{
  unint64_t result = qword_10043A200;
  if (!qword_10043A200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A200);
  }
  return result;
}

unint64_t sub_1002FEE04()
{
  unint64_t result = qword_10043A268;
  if (!qword_10043A268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A268);
  }
  return result;
}

unint64_t sub_1002FEE58()
{
  unint64_t result = qword_10043A2D0;
  if (!qword_10043A2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A2D0);
  }
  return result;
}

unint64_t sub_1002FEEAC()
{
  unint64_t result = qword_10043A338;
  if (!qword_10043A338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A338);
  }
  return result;
}

unint64_t sub_1002FEF00()
{
  unint64_t result = qword_10043A3A0;
  if (!qword_10043A3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A3A0);
  }
  return result;
}

unint64_t sub_1002FEF54()
{
  unint64_t result = qword_10043A408;
  if (!qword_10043A408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A408);
  }
  return result;
}

unint64_t sub_1002FEFA8()
{
  unint64_t result = qword_10043A470;
  if (!qword_10043A470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A470);
  }
  return result;
}

unint64_t sub_1002FEFFC()
{
  unint64_t result = qword_10043A4D8;
  if (!qword_10043A4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A4D8);
  }
  return result;
}

unint64_t sub_1002FF050()
{
  unint64_t result = qword_10043A540;
  if (!qword_10043A540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A540);
  }
  return result;
}

unint64_t sub_1002FF0A4()
{
  unint64_t result = qword_10043A5A8;
  if (!qword_10043A5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A5A8);
  }
  return result;
}

unint64_t sub_1002FF0F8()
{
  unint64_t result = qword_10043A610;
  if (!qword_10043A610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A610);
  }
  return result;
}

unint64_t sub_1002FF14C()
{
  unint64_t result = qword_10043A678;
  if (!qword_10043A678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A678);
  }
  return result;
}

unint64_t sub_1002FF1A0()
{
  unint64_t result = qword_10043A6E0;
  if (!qword_10043A6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A6E0);
  }
  return result;
}

unint64_t sub_1002FF1F4()
{
  unint64_t result = qword_10043A748;
  if (!qword_10043A748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A748);
  }
  return result;
}

unint64_t sub_1002FF248()
{
  unint64_t result = qword_10043A7B0;
  if (!qword_10043A7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A7B0);
  }
  return result;
}

unint64_t sub_1002FF29C()
{
  unint64_t result = qword_10043A818;
  if (!qword_10043A818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A818);
  }
  return result;
}

unint64_t sub_1002FF2F0()
{
  unint64_t result = qword_10043A880;
  if (!qword_10043A880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A880);
  }
  return result;
}

unint64_t sub_1002FF344()
{
  unint64_t result = qword_10043A8E8;
  if (!qword_10043A8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A8E8);
  }
  return result;
}

unint64_t sub_1002FF398()
{
  unint64_t result = qword_10043A950;
  if (!qword_10043A950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A950);
  }
  return result;
}

unint64_t sub_1002FF3EC()
{
  unint64_t result = qword_10043A9B8;
  if (!qword_10043A9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043A9B8);
  }
  return result;
}

unint64_t sub_1002FF440()
{
  unint64_t result = qword_10043AA20;
  if (!qword_10043AA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043AA20);
  }
  return result;
}

unint64_t sub_1002FF494()
{
  unint64_t result = qword_10043AA88;
  if (!qword_10043AA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043AA88);
  }
  return result;
}

unint64_t sub_1002FF4E8()
{
  unint64_t result = qword_10043AAF8;
  if (!qword_10043AAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043AAF8);
  }
  return result;
}

unint64_t sub_1002FF53C()
{
  unint64_t result = qword_10043AB60;
  if (!qword_10043AB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043AB60);
  }
  return result;
}

unint64_t sub_1002FF590()
{
  unint64_t result = qword_10043ABC8;
  if (!qword_10043ABC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ABC8);
  }
  return result;
}

unint64_t sub_1002FF5E4()
{
  unint64_t result = qword_10043AC30;
  if (!qword_10043AC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043AC30);
  }
  return result;
}

unint64_t sub_1002FF638()
{
  unint64_t result = qword_10043AC98;
  if (!qword_10043AC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043AC98);
  }
  return result;
}

unint64_t sub_1002FF68C()
{
  unint64_t result = qword_10043AD00;
  if (!qword_10043AD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043AD00);
  }
  return result;
}

unint64_t sub_1002FF6E0()
{
  unint64_t result = qword_10043AD68;
  if (!qword_10043AD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043AD68);
  }
  return result;
}

unint64_t sub_1002FF734()
{
  unint64_t result = qword_10043ADD0;
  if (!qword_10043ADD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ADD0);
  }
  return result;
}

unint64_t sub_1002FF788()
{
  unint64_t result = qword_10043AE38;
  if (!qword_10043AE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043AE38);
  }
  return result;
}

unint64_t sub_1002FF7DC()
{
  unint64_t result = qword_10043AEA0;
  if (!qword_10043AEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043AEA0);
  }
  return result;
}

unint64_t sub_1002FF830()
{
  unint64_t result = qword_10043AF08;
  if (!qword_10043AF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043AF08);
  }
  return result;
}

unint64_t sub_1002FF884()
{
  unint64_t result = qword_10043AF70;
  if (!qword_10043AF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043AF70);
  }
  return result;
}

unint64_t sub_1002FF8D8()
{
  unint64_t result = qword_10043AFD8;
  if (!qword_10043AFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043AFD8);
  }
  return result;
}

unint64_t sub_1002FF92C()
{
  unint64_t result = qword_10043B040;
  if (!qword_10043B040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B040);
  }
  return result;
}

unint64_t sub_1002FF980()
{
  unint64_t result = qword_10043B0A8;
  if (!qword_10043B0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B0A8);
  }
  return result;
}

unint64_t sub_1002FF9D4()
{
  unint64_t result = qword_10043B110;
  if (!qword_10043B110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B110);
  }
  return result;
}

unint64_t sub_1002FFA28()
{
  unint64_t result = qword_10043B180;
  if (!qword_10043B180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B180);
  }
  return result;
}

unint64_t sub_1002FFA7C()
{
  unint64_t result = qword_10043B1E8;
  if (!qword_10043B1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B1E8);
  }
  return result;
}

unint64_t sub_1002FFAD0()
{
  unint64_t result = qword_10043B250;
  if (!qword_10043B250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B250);
  }
  return result;
}

unint64_t sub_1002FFB24()
{
  unint64_t result = qword_10043B2B8;
  if (!qword_10043B2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B2B8);
  }
  return result;
}

unint64_t sub_1002FFB78()
{
  unint64_t result = qword_10043B320;
  if (!qword_10043B320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B320);
  }
  return result;
}

unint64_t sub_1002FFBCC()
{
  unint64_t result = qword_10043B388;
  if (!qword_10043B388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B388);
  }
  return result;
}

unint64_t sub_1002FFC20()
{
  unint64_t result = qword_10043B3F0;
  if (!qword_10043B3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B3F0);
  }
  return result;
}

unint64_t sub_1002FFC74()
{
  unint64_t result = qword_10043B458;
  if (!qword_10043B458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B458);
  }
  return result;
}

unint64_t sub_1002FFCC8()
{
  unint64_t result = qword_10043B4C0;
  if (!qword_10043B4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B4C0);
  }
  return result;
}

unint64_t sub_1002FFD1C()
{
  unint64_t result = qword_10043B528;
  if (!qword_10043B528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B528);
  }
  return result;
}

unint64_t sub_1002FFD70()
{
  unint64_t result = qword_10043B590;
  if (!qword_10043B590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B590);
  }
  return result;
}

unint64_t sub_1002FFDC4()
{
  unint64_t result = qword_10043B5F8;
  if (!qword_10043B5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B5F8);
  }
  return result;
}

unint64_t sub_1002FFE18()
{
  unint64_t result = qword_10043B660;
  if (!qword_10043B660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B660);
  }
  return result;
}

unint64_t sub_1002FFE6C()
{
  unint64_t result = qword_10043B6C8;
  if (!qword_10043B6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B6C8);
  }
  return result;
}

unint64_t sub_1002FFEC0()
{
  unint64_t result = qword_10043B730;
  if (!qword_10043B730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B730);
  }
  return result;
}

unint64_t sub_1002FFF14()
{
  unint64_t result = qword_10043B798;
  if (!qword_10043B798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B798);
  }
  return result;
}

unint64_t sub_1002FFF68()
{
  unint64_t result = qword_10043B808;
  if (!qword_10043B808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B808);
  }
  return result;
}

unint64_t sub_1002FFFBC()
{
  unint64_t result = qword_10043B870;
  if (!qword_10043B870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B870);
  }
  return result;
}

unint64_t sub_100300010()
{
  unint64_t result = qword_10043B8D8;
  if (!qword_10043B8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B8D8);
  }
  return result;
}

unint64_t sub_100300064()
{
  unint64_t result = qword_10043B940;
  if (!qword_10043B940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B940);
  }
  return result;
}

unint64_t sub_1003000B8()
{
  unint64_t result = qword_10043B9A8;
  if (!qword_10043B9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043B9A8);
  }
  return result;
}

unint64_t sub_10030010C()
{
  unint64_t result = qword_10043BA18;
  if (!qword_10043BA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043BA18);
  }
  return result;
}

unint64_t sub_100300160()
{
  unint64_t result = qword_10043BA80;
  if (!qword_10043BA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043BA80);
  }
  return result;
}

unint64_t sub_1003001B4()
{
  unint64_t result = qword_10043BAE8;
  if (!qword_10043BAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043BAE8);
  }
  return result;
}

unint64_t sub_100300208()
{
  unint64_t result = qword_10043BB50;
  if (!qword_10043BB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043BB50);
  }
  return result;
}

unint64_t sub_10030025C()
{
  unint64_t result = qword_10043BBB8;
  if (!qword_10043BBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043BBB8);
  }
  return result;
}

unint64_t sub_1003002B0()
{
  unint64_t result = qword_10043BC20;
  if (!qword_10043BC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043BC20);
  }
  return result;
}

unint64_t sub_100300304()
{
  unint64_t result = qword_10043BC88;
  if (!qword_10043BC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043BC88);
  }
  return result;
}

unint64_t sub_100300358()
{
  unint64_t result = qword_10043BCF0;
  if (!qword_10043BCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043BCF0);
  }
  return result;
}

unint64_t sub_1003003AC()
{
  unint64_t result = qword_10043BD58;
  if (!qword_10043BD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043BD58);
  }
  return result;
}

unint64_t sub_100300400()
{
  unint64_t result = qword_10043BDC0;
  if (!qword_10043BDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043BDC0);
  }
  return result;
}

unint64_t sub_100300454()
{
  unint64_t result = qword_10043BE28;
  if (!qword_10043BE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043BE28);
  }
  return result;
}

unint64_t sub_1003004A8()
{
  unint64_t result = qword_10043BE90;
  if (!qword_10043BE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043BE90);
  }
  return result;
}

unint64_t sub_1003004FC()
{
  unint64_t result = qword_10043BEF8;
  if (!qword_10043BEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043BEF8);
  }
  return result;
}

unint64_t sub_100300550()
{
  unint64_t result = qword_10043BF60;
  if (!qword_10043BF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043BF60);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_100300C48()
{
}

uint64_t sub_100300C70()
{
  return static AppIntentInternal.sideEffect.getter();
}

uint64_t sub_100300C80()
{
  return static AppIntentInternal.shortcutsMetadata.getter();
}

uint64_t sub_100300CC0()
{
  return static AppIntent.openAppWhenRun.getter();
}

uint64_t sub_100300CD0()
{
  return static AppIntent.description.getter();
}

uint64_t sub_100300CE0()
{
  return static AppIntent.isDiscoverable.getter();
}

uint64_t sub_100300CF0()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t sub_100300D00()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t sub_100300D30()
{
  return IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)();
}

uint64_t sub_100300D50()
{
  return IntentDialog.init<A, B>(from:capturedContent:)();
}

uint64_t sub_100300D60()
{
  return type metadata accessor for IntentDialog();
}

uint64_t sub_100300D70()
{
  return static IntentResult.result<A>(value:dialog:)();
}

uint64_t sub_100300D80()
{
  return static IntentResult.result<>()();
}

uint64_t sub_100300D90()
{
  return IntentParameter.wrappedValue.modify();
}

uint64_t sub_100300DA0()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100300DB0()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_100300DC0()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t sub_100300DD0()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t sub_100300DE0()
{
  return IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t sub_100300DF0()
{
  return IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t sub_100300E00()
{
  return IntentParameter<>.init(title:description:default:controlStyle:inclusiveRange:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t sub_100300E10()
{
  return IntentDescription.init(stringLiteral:)();
}

uint64_t sub_100300E20()
{
  return type metadata accessor for IntentDescription();
}

uint64_t sub_100300E60()
{
  return static _DialogBuilderEntity.buildBlock<A>(_:)();
}

uint64_t sub_100300E70()
{
  return static _DialogBuilderEntity.buildExpression<A, B>(_:)();
}

uint64_t sub_100300E80()
{
  return DisplayRepresentation.Image.init(utTypeIdentifier:)();
}

uint64_t sub_100300E90()
{
  return type metadata accessor for DisplayRepresentation.Image();
}

uint64_t sub_100300EA0()
{
  return DisplayRepresentation.title.getter();
}

uint64_t sub_100300EB0()
{
  return DisplayRepresentation.init(title:subtitle:image:synonyms:descriptionText:)();
}

uint64_t sub_100300EC0()
{
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t sub_100300ED0()
{
  return type metadata accessor for DisplayRepresentation();
}

uint64_t sub_100300EE0()
{
  return static EnumerableEntityQuery.findIntentDescription.getter();
}

uint64_t sub_100300EF0()
{
  return _URLRepresentableEnum.urlRepresentationParameter.getter();
}

uint64_t sub_100300F10()
{
  return static DynamicOptionsProvider.useForParameterResolution.getter();
}

uint64_t sub_100300F20()
{
  return _EnumURLRepresentation.EnumSingleURLRepresentation.init(stringLiteral:)();
}

uint64_t sub_100300F30()
{
  return _EnumURLRepresentation.init(_:)();
}

uint64_t sub_100300F40()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t sub_100300F50()
{
  return _URLRepresentableEntity.urlRepresentationParameter.getter();
}

uint64_t sub_100300FB0()
{
  return static PersistentlyIdentifiable.persistentIdentifier.getter();
}

uint64_t sub_100300FC0()
{
  return _EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)();
}

void sub_100300FD0(Swift::String a1)
{
}

uint64_t sub_100300FE0()
{
  return _EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_100300FF0()
{
  return _EntityURLRepresentation.init(stringInterpolation:)();
}

uint64_t sub_100301000()
{
  return type metadata accessor for _GeneratedContentOptions();
}

uint64_t sub_100301010()
{
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_100301020()
{
  return type metadata accessor for TypeDisplayRepresentation();
}

uint64_t sub_100301030()
{
  return type metadata accessor for _GeneratedContentFallback();
}

uint64_t sub_100301050()
{
  return _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
}

uint64_t sub_100301060()
{
  return _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
}

uint64_t sub_100301070()
{
  return _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
}

uint64_t sub_100301080()
{
  return _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
}

uint64_t sub_100301090(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  return NSLocalizedString(_:tableName:bundle:value:comment:)(_, tableName, bundle, value, comment)._countAndFlagsBits;
}

uint64_t sub_1003010A0()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_1003010B0()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1003010C0()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t sub_1003010D0()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_1003010E0()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_1003010F0()
{
  return URL.init(fileURLWithPath:isDirectory:)();
}

void sub_100301100(NSURL *retstr@<X8>)
{
}

uint64_t sub_100301110()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100301120()
{
  return URL.init(string:)();
}

uint64_t sub_100301130()
{
  return type metadata accessor for URL();
}

uint64_t sub_100301140()
{
  return static Locale.current.getter();
}

uint64_t sub_100301150()
{
  return type metadata accessor for Locale();
}

uint64_t sub_100301160()
{
  return Selector.init(_:)();
}

uint64_t sub_100301170()
{
  return Logger.logObject.getter();
}

uint64_t sub_100301180()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100301190()
{
  return type metadata accessor for Logger();
}

uint64_t sub_1003011A0()
{
  return TupleWidget.init(_:)();
}

uint64_t sub_1003011B0()
{
  return static WidgetBundle.main()();
}

uint64_t sub_1003011C0()
{
  return static ContentTransition.symbolEffect<A>(_:options:)();
}

uint64_t sub_1003011D0()
{
  return type metadata accessor for ContentTransition();
}

uint64_t sub_1003011E0()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_1003011F0()
{
  return EnvironmentValues.contentTransition.setter();
}

uint64_t sub_100301200()
{
  return WidgetConfiguration.description<A>(_:)();
}

uint64_t sub_100301210()
{
  return WidgetConfiguration.hiddenControl()();
}

uint64_t sub_100301220()
{
  return WidgetConfiguration.showsInSystemSpaces()();
}

uint64_t sub_100301230()
{
  return WidgetConfiguration.configurationDisplayName<A>(_:)();
}

uint64_t sub_100301240()
{
  return WidgetConfiguration.disablesControlStateCaching()();
}

uint64_t sub_100301250()
{
  return WidgetConfiguration.enabled(_:)();
}

uint64_t sub_100301260()
{
  return ControlWidgetTemplate.tint(_:)();
}

uint64_t sub_100301270()
{
  return _ControlWidgetAdaptor.init(_:)();
}

uint64_t sub_100301280()
{
  return ControlWidgetConfiguration.description(_:)();
}

uint64_t sub_100301290()
{
  return ControlWidgetConfiguration.displayName(_:)();
}

uint64_t sub_1003012A0()
{
  return ControlWidgetConfiguration.showsInSystemSpaces()();
}

uint64_t sub_1003012B0()
{
  return ControlWidgetConfiguration.enabled(_:)();
}

uint64_t sub_1003012C0()
{
  return Text.init(_:)();
}

uint64_t sub_1003012D0()
{
  return Text.init<A>(_:)();
}

uint64_t sub_1003012E0()
{
  return View.controlWidgetStatus(_:)();
}

uint64_t sub_1003012F0()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_100301300()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_100301310()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100301320()
{
  return Color.init(_:)();
}

uint64_t sub_100301330()
{
  return Image.init(_internalSystemName:)();
}

uint64_t sub_100301340()
{
  return Label.init(title:icon:)();
}

uint64_t sub_100301350()
{
  return static SymbolEffectOptions.default.getter();
}

uint64_t sub_100301360()
{
  return type metadata accessor for SymbolEffectOptions();
}

uint64_t sub_100301370()
{
  return AutomaticSymbolEffect.init()();
}

uint64_t sub_100301380()
{
  return type metadata accessor for AutomaticSymbolEffect();
}

uint64_t sub_100301390()
{
  return ControlWidgetToggle.init<>(isOn:action:label:valueLabel:)();
}

uint64_t sub_1003013A0()
{
  return static ControlSize._1x1.getter();
}

uint64_t sub_1003013B0()
{
  return type metadata accessor for ControlSize();
}

uint64_t sub_1003013C0()
{
  return ControlButton.init<A>(kind:intent:displayName:preferredSize:title:affordances:)();
}

uint64_t sub_1003013D0()
{
  return type metadata accessor for ControlButton();
}

uint64_t sub_1003013E0()
{
  return ControlPicker.init<A, B, C, D, E, F, G>(kind:displayName:preferredSize:intentUpdatableProperty:title:value:affordances:)();
}

uint64_t sub_1003013F0()
{
  return ControlToggle.init<A, B, C, D, E, F>(kind:intentUpdatableProperty:content:value:)();
}

uint64_t sub_100301400()
{
  return StaticControlConfiguration.init<A>(kind:provider:content:)();
}

NSDictionary sub_100301410()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_100301420()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_100301430()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString sub_100301440()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100301450()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100301460()
{
  return String.init(localized:)();
}

uint64_t sub_100301470()
{
  return String.hash(into:)();
}

void sub_100301480(Swift::String a1)
{
}

uint64_t sub_100301490()
{
  return type metadata accessor for Bool.IntentDisplayName();
}

uint64_t sub_1003014A0()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_1003014B0()
{
  return static MainActor.shared.getter();
}

uint64_t sub_1003014C0()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_1003014D0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_1003014E0()
{
  return type metadata accessor for Optional();
}

uint64_t sub_1003014F0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_100301500(Swift::Int a1)
{
}

uint64_t sub_100301510()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_100301520()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_100301530()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_100301540(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_100301550()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100301560()
{
  return Hasher.init(_seed:)();
}

void sub_100301570(Swift::UInt a1)
{
}

Swift::Int sub_100301580()
{
  return Hasher._finalize()();
}

uint64_t AFPreferencesSetTypeToSiriEnabled()
{
  return _AFPreferencesSetTypeToSiriEnabled();
}

uint64_t AFPreferencesTypeToSiriEnabled()
{
  return _AFPreferencesTypeToSiriEnabled();
}

uint64_t AXDeviceIsPad()
{
  return _AXDeviceIsPad();
}

uint64_t AXDeviceSupportsPhotosensitiveMitigation()
{
  return _AXDeviceSupportsPhotosensitiveMitigation();
}

uint64_t AXGetSiriCallHangUpValue()
{
  return _AXGetSiriCallHangUpValue();
}

uint64_t AXGetSiriRequireSiriForInterruptionsInValue()
{
  return _AXGetSiriRequireSiriForInterruptionsInValue();
}

uint64_t AXHACHearingAidComplianceEnabled()
{
  return _AXHACHearingAidComplianceEnabled();
}

uint64_t AXHACHearingAidComplianceSetEnabled()
{
  return _AXHACHearingAidComplianceSetEnabled();
}

uint64_t AXHasCapability()
{
  return _AXHasCapability();
}

uint64_t AXSetSiriCallHangUpValue()
{
  return _AXSetSiriCallHangUpValue();
}

uint64_t AXSetSiriRequireSiriForInterruptionsInValue()
{
  return _AXSetSiriRequireSiriForInterruptionsInValue();
}

uint64_t BKSDisplayBrightnessSetAutoBrightnessEnabled()
{
  return _BKSDisplayBrightnessSetAutoBrightnessEnabled();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return _CFBooleanGetValue(BOOLean);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

uint64_t MAAudibleMediaPrefCopyPreferDescriptiveVideo()
{
  return _MAAudibleMediaPrefCopyPreferDescriptiveVideo();
}

uint64_t MAAudibleMediaPrefSetPreferDescriptiveVideo()
{
  return _MAAudibleMediaPrefSetPreferDescriptiveVideo();
}

uint64_t MADisplayFilterPrefGetType()
{
  return _MADisplayFilterPrefGetType();
}

uint64_t MADisplayFilterPrefSetCategoryEnabled()
{
  return _MADisplayFilterPrefSetCategoryEnabled();
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

uint64_t _AXDarkenSystemColors()
{
  return __AXDarkenSystemColors();
}

uint64_t _AXSAlwaysShowVolumeControlEnabled()
{
  return __AXSAlwaysShowVolumeControlEnabled();
}

uint64_t _AXSAlwaysShowVolumeControlSetEnabled()
{
  return __AXSAlwaysShowVolumeControlSetEnabled();
}

uint64_t _AXSAppleTVRemoteForceLiveTVButtons()
{
  return __AXSAppleTVRemoteForceLiveTVButtons();
}

uint64_t _AXSAppleTVRemoteUsesSimpleGestures()
{
  return __AXSAppleTVRemoteUsesSimpleGestures();
}

uint64_t _AXSAssistiveTouchEnabled()
{
  return __AXSAssistiveTouchEnabled();
}

uint64_t _AXSAssistiveTouchScannerEnabled()
{
  return __AXSAssistiveTouchScannerEnabled();
}

uint64_t _AXSAssistiveTouchScannerSetEnabled()
{
  return __AXSAssistiveTouchScannerSetEnabled();
}

uint64_t _AXSAssistiveTouchSetEnabled()
{
  return __AXSAssistiveTouchSetEnabled();
}

uint64_t _AXSAssistiveTouchSetUIEnabled()
{
  return __AXSAssistiveTouchSetUIEnabled();
}

uint64_t _AXSAutoBrightnessEnabled()
{
  return __AXSAutoBrightnessEnabled();
}

uint64_t _AXSAutomaticSubtitlesShowOnSkipBack()
{
  return __AXSAutomaticSubtitlesShowOnSkipBack();
}

uint64_t _AXSAutomaticSubtitlesShowWhenMuted()
{
  return __AXSAutomaticSubtitlesShowWhenMuted();
}

uint64_t _AXSBackTapEnabled()
{
  return __AXSBackTapEnabled();
}

uint64_t _AXSBackTapSetEnabled()
{
  return __AXSBackTapSetEnabled();
}

uint64_t _AXSClarityUIEnabled()
{
  return __AXSClarityUIEnabled();
}

uint64_t _AXSClosedCaptionsEnabled()
{
  return __AXSClosedCaptionsEnabled();
}

uint64_t _AXSClosedCaptionsSetEnabled()
{
  return __AXSClosedCaptionsSetEnabled();
}

uint64_t _AXSCommandAndControlEnabled()
{
  return __AXSCommandAndControlEnabled();
}

uint64_t _AXSCommandAndControlSetEnabled()
{
  return __AXSCommandAndControlSetEnabled();
}

uint64_t _AXSDifferentiateWithoutColorEnabled()
{
  return __AXSDifferentiateWithoutColorEnabled();
}

uint64_t _AXSDisplayFilterColorEnabled()
{
  return __AXSDisplayFilterColorEnabled();
}

uint64_t _AXSDisplayFilterColorSetEnabled()
{
  return __AXSDisplayFilterColorSetEnabled();
}

uint64_t _AXSFaceTimeCaptionsEnabled()
{
  return __AXSFaceTimeCaptionsEnabled();
}

uint64_t _AXSForceTouchTimeDuration()
{
  return __AXSForceTouchTimeDuration();
}

uint64_t _AXSFullKeyboardAccessEnabled()
{
  return __AXSFullKeyboardAccessEnabled();
}

uint64_t _AXSFullKeyboardAccessSetEnabled()
{
  return __AXSFullKeyboardAccessSetEnabled();
}

uint64_t _AXSGuidedAccessEnabled()
{
  return __AXSGuidedAccessEnabled();
}

uint64_t _AXSGuidedAccessSetEnabled()
{
  return __AXSGuidedAccessSetEnabled();
}

uint64_t _AXSHapticMusicEnabled()
{
  return __AXSHapticMusicEnabled();
}

uint64_t _AXSHoverTextEnabled()
{
  return __AXSHoverTextEnabled();
}

uint64_t _AXSHoverTextSetEnabled()
{
  return __AXSHoverTextSetEnabled();
}

uint64_t _AXSInvertColorsEnabledGlobal()
{
  return __AXSInvertColorsEnabledGlobal();
}

uint64_t _AXSInvertColorsSetEnabled()
{
  return __AXSInvertColorsSetEnabled();
}

uint64_t _AXSKeyRepeatEnabled()
{
  return __AXSKeyRepeatEnabled();
}

uint64_t _AXSLiveTranscriptionEnabled()
{
  return __AXSLiveTranscriptionEnabled();
}

uint64_t _AXSLiveTranscriptionSetEnabled()
{
  return __AXSLiveTranscriptionSetEnabled();
}

uint64_t _AXSLowercaseKeyboardDisplayEnabled()
{
  return __AXSLowercaseKeyboardDisplayEnabled();
}

uint64_t _AXSMonoAudioEnabled()
{
  return __AXSMonoAudioEnabled();
}

uint64_t _AXSMonoAudioSetEnabled()
{
  return __AXSMonoAudioSetEnabled();
}

uint64_t _AXSMotionCuesEnabled()
{
  return __AXSMotionCuesEnabled();
}

uint64_t _AXSPearlAuthenticationHapticsEnabled()
{
  return __AXSPearlAuthenticationHapticsEnabled();
}

uint64_t _AXSPhoneLockToEndCallEnabled()
{
  return __AXSPhoneLockToEndCallEnabled();
}

uint64_t _AXSPhoneLockToEndCallSetEnabled()
{
  return __AXSPhoneLockToEndCallSetEnabled();
}

uint64_t _AXSPhotosensitiveMitigationEnabled()
{
  return __AXSPhotosensitiveMitigationEnabled();
}

uint64_t _AXSPhotosensitiveMitigationSetEnabled()
{
  return __AXSPhotosensitiveMitigationSetEnabled();
}

uint64_t _AXSPointerScaleWithZoomLevelEnabled()
{
  return __AXSPointerScaleWithZoomLevelEnabled();
}

uint64_t _AXSPointerScaleWithZoomLevelSetEnabled()
{
  return __AXSPointerScaleWithZoomLevelSetEnabled();
}

uint64_t _AXSPrefersHorizontalTextLayout()
{
  return __AXSPrefersHorizontalTextLayout();
}

uint64_t _AXSPrefersNonBlinkingCursorIndicatorGlobal()
{
  return __AXSPrefersNonBlinkingCursorIndicatorGlobal();
}

uint64_t _AXSQuickSpeakEnabled()
{
  return __AXSQuickSpeakEnabled();
}

uint64_t _AXSQuickSpeakSetEnabled()
{
  return __AXSQuickSpeakSetEnabled();
}

uint64_t _AXSReduceMotionAutoplayAnimatedImagesEnabled()
{
  return __AXSReduceMotionAutoplayAnimatedImagesEnabled();
}

uint64_t _AXSReduceMotionAutoplayMessagesEffectsEnabled()
{
  return __AXSReduceMotionAutoplayMessagesEffectsEnabled();
}

uint64_t _AXSReduceMotionAutoplayVideoPreviewsEnabled()
{
  return __AXSReduceMotionAutoplayVideoPreviewsEnabled();
}

uint64_t _AXSReduceMotionEnabled()
{
  return __AXSReduceMotionEnabled();
}

uint64_t _AXSReduceWhitePointEnabled()
{
  return __AXSReduceWhitePointEnabled();
}

uint64_t _AXSSetAppleTVRemoteForceLiveTVButtons()
{
  return __AXSSetAppleTVRemoteForceLiveTVButtons();
}

uint64_t _AXSSetAppleTVRemoteUsesSimpleGestures()
{
  return __AXSSetAppleTVRemoteUsesSimpleGestures();
}

uint64_t _AXSSetAutomaticSubtitlesShowOnSkipBack()
{
  return __AXSSetAutomaticSubtitlesShowOnSkipBack();
}

uint64_t _AXSSetAutomaticSubtitlesShowWhenMuted()
{
  return __AXSSetAutomaticSubtitlesShowWhenMuted();
}

uint64_t _AXSSetDarkenSystemColors()
{
  return __AXSSetDarkenSystemColors();
}

uint64_t _AXSSetDifferentiateWithoutColorEnabled()
{
  return __AXSSetDifferentiateWithoutColorEnabled();
}

uint64_t _AXSSetFaceTimeCaptionsEnabled()
{
  return __AXSSetFaceTimeCaptionsEnabled();
}

uint64_t _AXSSetForceTouchTimeDuration()
{
  return __AXSSetForceTouchTimeDuration();
}

uint64_t _AXSSetHapticMusicEnabled()
{
  return __AXSSetHapticMusicEnabled();
}

uint64_t _AXSSetKeyRepeatEnabled()
{
  return __AXSSetKeyRepeatEnabled();
}

uint64_t _AXSSetLowercaseKeyboardDisplayEnabled()
{
  return __AXSSetLowercaseKeyboardDisplayEnabled();
}

uint64_t _AXSSetMotionCuesEnabled()
{
  return __AXSSetMotionCuesEnabled();
}

uint64_t _AXSSetMotionCuesMode()
{
  return __AXSSetMotionCuesMode();
}

uint64_t _AXSSetPearlAuthenticationHapticsEnabled()
{
  return __AXSSetPearlAuthenticationHapticsEnabled();
}

uint64_t _AXSSetPrefersHorizontalTextLayout()
{
  return __AXSSetPrefersHorizontalTextLayout();
}

uint64_t _AXSSetPrefersNonBlinkingCursorIndicator()
{
  return __AXSSetPrefersNonBlinkingCursorIndicator();
}

uint64_t _AXSSetReduceMotionAutoplayAnimatedImagesEnabled()
{
  return __AXSSetReduceMotionAutoplayAnimatedImagesEnabled();
}

uint64_t _AXSSetReduceMotionAutoplayMessagesEffectsEnabled()
{
  return __AXSSetReduceMotionAutoplayMessagesEffectsEnabled();
}

uint64_t _AXSSetReduceMotionAutoplayVideoPreviewsEnabled()
{
  return __AXSSetReduceMotionAutoplayVideoPreviewsEnabled();
}

uint64_t _AXSSetReduceMotionEnabled()
{
  return __AXSSetReduceMotionEnabled();
}

uint64_t _AXSSetReduceWhitePointEnabled()
{
  return __AXSSetReduceWhitePointEnabled();
}

uint64_t _AXSSetShakeToUndoDisabled()
{
  return __AXSSetShakeToUndoDisabled();
}

uint64_t _AXSSetShowAudioTranscriptions()
{
  return __AXSSetShowAudioTranscriptions();
}

uint64_t _AXSSetSideButtonClickSpeed()
{
  return __AXSSetSideButtonClickSpeed();
}

uint64_t _AXSSetSlowKeysEnabled()
{
  return __AXSSetSlowKeysEnabled();
}

uint64_t _AXSSetSpeakThisEnabled()
{
  return __AXSSetSpeakThisEnabled();
}

uint64_t _AXSSetVibrationDisabled()
{
  return __AXSSetVibrationDisabled();
}

uint64_t _AXSShakeToUndoDisabled()
{
  return __AXSShakeToUndoDisabled();
}

uint64_t _AXSShowAudioTranscriptions()
{
  return __AXSShowAudioTranscriptions();
}

uint64_t _AXSSideButtonClickSpeed()
{
  return __AXSSideButtonClickSpeed();
}

uint64_t _AXSSlowKeysEnabled()
{
  return __AXSSlowKeysEnabled();
}

uint64_t _AXSSpeakThisEnabled()
{
  return __AXSSpeakThisEnabled();
}

uint64_t _AXSSpeakThisEnabledNoCaching()
{
  return __AXSSpeakThisEnabledNoCaching();
}

uint64_t _AXSTripleClickAddOption()
{
  return __AXSTripleClickAddOption();
}

uint64_t _AXSTripleClickContainsOption()
{
  return __AXSTripleClickContainsOption();
}

uint64_t _AXSTripleClickCopyOptions()
{
  return __AXSTripleClickCopyOptions();
}

uint64_t _AXSTripleClickRemoveOption()
{
  return __AXSTripleClickRemoveOption();
}

uint64_t _AXSTwiceRemoteScreenEnabled()
{
  return __AXSTwiceRemoteScreenEnabled();
}

uint64_t _AXSTwiceRemoteScreenSetEnabled()
{
  return __AXSTwiceRemoteScreenSetEnabled();
}

uint64_t _AXSVibrationDisabled()
{
  return __AXSVibrationDisabled();
}

uint64_t _AXSVisualAlertEnabled()
{
  return __AXSVisualAlertEnabled();
}

uint64_t _AXSVisualAlertSetEnabled()
{
  return __AXSVisualAlertSetEnabled();
}

uint64_t _AXSVoiceOverTouchBrailleMasterStatusCellIndex()
{
  return __AXSVoiceOverTouchBrailleMasterStatusCellIndex();
}

uint64_t _AXSVoiceOverTouchBrailleVirtualStatusAlignment()
{
  return __AXSVoiceOverTouchBrailleVirtualStatusAlignment();
}

uint64_t _AXSVoiceOverTouchEnabled()
{
  return __AXSVoiceOverTouchEnabled();
}

uint64_t _AXSVoiceOverTouchSetBrailleMasterStatusCellIndex()
{
  return __AXSVoiceOverTouchSetBrailleMasterStatusCellIndex();
}

uint64_t _AXSVoiceOverTouchSetBrailleVirtualStatusAlignment()
{
  return __AXSVoiceOverTouchSetBrailleVirtualStatusAlignment();
}

uint64_t _AXSVoiceOverTouchSetEnabled()
{
  return __AXSVoiceOverTouchSetEnabled();
}

uint64_t _AXSVoiceOverTouchSetShouldRouteToSpeakerWithProximity()
{
  return __AXSVoiceOverTouchSetShouldRouteToSpeakerWithProximity();
}

uint64_t _AXSVoiceOverTouchShouldRouteToSpeakerWithProximity()
{
  return __AXSVoiceOverTouchShouldRouteToSpeakerWithProximity();
}

uint64_t _AXSZoomTouchEnabled()
{
  return __AXSZoomTouchEnabled();
}

uint64_t _AXSZoomTouchSetEnabled()
{
  return __AXSZoomTouchSetEnabled();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t abort_report_np()
{
  return _abort_report_np();
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_storeStrong(id *location, id obj)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStaticObject()
{
  return _swift_initStaticObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

id objc_msgSend_alwaysShowOverlayType(void *a1, const char *a2, ...)
{
  return _[a1 alwaysShowOverlayType];
}

id objc_msgSend_attentionAwareAction(void *a1, const char *a2, ...)
{
  return _[a1 attentionAwareAction];
}

id objc_msgSend_cacPrefs(void *a1, const char *a2, ...)
{
  return _[a1 cacPrefs];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_playSoundUponRecognition(void *a1, const char *a2, ...)
{
  return _[a1 playSoundUponRecognition];
}

id objc_msgSend_setAlwaysShowOverlayType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysShowOverlayType:");
}

id objc_msgSend_setAttentionAwareAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttentionAwareAction:");
}

id objc_msgSend_setPlaySoundUponRecognition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaySoundUponRecognition:");
}

id objc_msgSend_setShowTextResponseUponRecognition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowTextResponseUponRecognition:");
}

id objc_msgSend_setUserHintsFeatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserHintsFeatures:");
}

id objc_msgSend_sharedPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedPreferences];
}

id objc_msgSend_showTextResponseUponRecognition(void *a1, const char *a2, ...)
{
  return _[a1 showTextResponseUponRecognition];
}

id objc_msgSend_userHintsFeatures(void *a1, const char *a2, ...)
{
  return _[a1 userHintsFeatures];
}