id PLBatteryUIDetailQueryEnumToStringByDay(void *a1)
{
  _UNKNOWN **v1;
  void *v2;
  _UNKNOWN **v3;
  void *v4;
  void *v5;
  uint64_t vars8;

  v1 = a1;
  if ([v1 intValue])
  {
    v2 = BatteryUILocalization(@"USAGE_FOR_%@_DAYS");
    v3 = v1;
  }
  else
  {
    v2 = BatteryUILocalization(@"USAGE_FOR_%@_HOURS");
    v3 = &off_C93F8;
  }
  v4 = +[NSNumberFormatter localizedStringFromNumber:v3 numberStyle:0];
  v5 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v2, v4);

  return v5;
}

id sub_3C30(uint64_t a1, uint64_t a2, void *a3)
{
  v5 = *(void **)(a1 + 32);
  id v6 = a3;
  v7 = [v5 getSortValueForKey:a2];
  v8 = [*(id *)(a1 + 32) getSortValueForKey:v6];

  id v9 = [v7 compare:v8];
  return v9;
}

id sub_491C(void *a1)
{
  v1 = [a1 description];
  v2 = +[NSCharacterSet URLHostAllowedCharacterSet];
  v3 = [v1 stringByAddingPercentEncodingWithAllowedCharacters:v2];

  return v3;
}

void sub_4FBC(uint64_t a1)
{
  ADClientAddValueForScalarKey();
  v2 = objc_opt_new();
  [v2 setObject:@"disabled" forKeyedSubscript:@"action"];
  v4 = v2;
  id v3 = v2;
  AnalyticsSendEventLazy();
  [*(id *)(a1 + 32) userDidDisable];
}

id sub_508C(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_5094(uint64_t a1)
{
  ADClientAddValueForScalarKey();
  v2 = objc_opt_new();
  [v2 setObject:@"leftOn" forKeyedSubscript:@"action"];
  v4 = v2;
  id v3 = v2;
  AnalyticsSendEventLazy();
  [*(id *)(a1 + 32) userDidLeaveOn];
}

id sub_5164(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_5950(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setUpModelingView:a2];
  id v3 = [*(id *)(a1 + 32) activityIndicator];
  [v3 stopAnimating];
}

void sub_7E70(uint64_t a1, double a2)
{
  LODWORD(a2) = -1.0;
  [*(id *)(a1 + 32) setActivationPercent:a2];
  usleep(0x7A120u);
  switch(*(_DWORD *)(a1 + 56))
  {
    case 0:
      BKSDisplayBrightnessSetAutoBrightnessEnabled();
      id v28 = +[NSString stringWithFormat:@"%@_ENABLED_TEXT", @"AUTOBRIGHTNESS"];
      if (!+[BatteryUIResourceClass inDemoMode]
        || (+[BatteryUIResourceClass containerPath],
            (id v3 = (void *)_CFPreferencesCopyValueWithContainer()) == 0))
      {
        id v3 = BatteryUILocalization(v28);
      }
      [*(id *)(a1 + 32) setInfoText:v3];

      v5 = 0;
      id v6 = 0;
      id v7 = 0;
      CFStringRef v8 = @"autobrightness";
      break;
    case 1:
      id v9 = +[MCProfileConnection sharedConnection];
      v10 = +[NSNumber numberWithInt:30];
      [v9 setValue:v10 forSetting:MCFeatureAutoLockTime];

      id v28 = +[NSString stringWithFormat:@"%@_ENABLED_TEXT", @"AUTOLOCK"];
      if (!+[BatteryUIResourceClass inDemoMode]
        || (+[BatteryUIResourceClass containerPath],
            (v11 = (void *)_CFPreferencesCopyValueWithContainer()) == 0))
      {
        v11 = BatteryUILocalization(v28);
      }
      [*(id *)(a1 + 32) setInfoText:v11];

      v5 = 0;
      id v6 = 0;
      id v7 = 0;
      CFStringRef v8 = @"autolock";
      break;
    case 2:
      BKSDisplayBrightnessGetCurrent();
      BKSDisplayBrightnessSet();
      id v28 = +[NSString stringWithFormat:@"%@_ENABLED_TEXT", @"REDUCEBRIGHTNESS"];
      if (!+[BatteryUIResourceClass inDemoMode]
        || (+[BatteryUIResourceClass containerPath],
            (v12 = (void *)_CFPreferencesCopyValueWithContainer()) == 0))
      {
        v12 = BatteryUILocalization(v28);
      }
      [*(id *)(a1 + 32) setInfoText:v12];

      v5 = 0;
      id v6 = 0;
      id v7 = 0;
      CFStringRef v8 = @"reducebrightness";
      break;
    case 6:
      v13 = *(void **)(a1 + 48);
      v14 = [*(id *)(a1 + 40) identifier];
      id v6 = [v13 objectForKey:v14];

      v15 = [*(id *)(a1 + 40) dataDict];
      v5 = [v15 objectForKeyedSubscript:@"PLBatteryUIInsightAppNameKey"];

      +[CLLocationManager setEntityAuthorization:2 forLocationDictionary:v6];
      v16 = [v6 objectForKeyedSubscript:@"BundleId"];
      unsigned int v17 = [v16 isEqualToString:@"com.apple.Maps"];

      if (v17)
      {
        DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
        CFNotificationCenterPostNotification(DarwinNotifyCenter, @"com.apple.Maps.LocationAuthorizationChangedNotification", 0, 0, 1u);
      }
      id v28 = +[NSString stringWithFormat:@"%@_ENABLED_TEXT", @"BACKGROUNDLOCATION"];
      if (!+[BatteryUIResourceClass inDemoMode]
        || (+[BatteryUIResourceClass containerPath],
            (v19 = (void *)_CFPreferencesCopyValueWithContainer()) == 0))
      {
        v19 = BatteryUILocalization(v28);
      }
      v20 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v19, v5);
      [*(id *)(a1 + 32) setInfoText:v20];

      id v7 = 0;
      CFStringRef v8 = @"bglocation";
      break;
    case 7:
      v21 = [*(id *)(a1 + 40) dataDict];
      v5 = [v21 objectForKeyedSubscript:@"PLBatteryUIInsightAppNameKey"];

      v22 = (void *)CFPreferencesCopyAppValue(@"KeepAppsUpToDateAppList", @"com.apple.mt");
      id v7 = [v22 mutableCopy];

      if (!v7) {
        id v7 = (id)objc_opt_new();
      }
      v23 = [*(id *)(a1 + 40) identifier];
      [v7 setObject:&__kCFBooleanFalse forKey:v23];

      CFPreferencesSetAppValue(@"KeepAppsUpToDateAppList", v7, @"com.apple.mt");
      CFPreferencesAppSynchronize(@"com.apple.mt");
      v24 = CFNotificationCenterGetDarwinNotifyCenter();
      CFNotificationCenterPostNotification(v24, @"kKeepAppsUpToDateEnabledChangedNotification", 0, 0, 1u);
      id v28 = +[NSString stringWithFormat:@"%@_ENABLED_TEXT", @"BACKGROUNDCPU"];
      if (!+[BatteryUIResourceClass inDemoMode]
        || (+[BatteryUIResourceClass containerPath],
            (v25 = (void *)_CFPreferencesCopyValueWithContainer()) == 0))
      {
        v25 = BatteryUILocalization(v28);
      }
      v26 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v25, v5);
      [*(id *)(a1 + 32) setInfoText:v26];

      id v6 = 0;
      CFStringRef v8 = @"bgprocessing";
      break;
    default:
      [*(id *)(a1 + 32) setInfoText:@"Enabled"];
      CFStringRef v8 = 0;
      v5 = 0;
      id v6 = 0;
      id v7 = 0;
      id v28 = 0;
      break;
  }
  LODWORD(v4) = 1.0;
  [*(id *)(a1 + 32) setActivationPercent:v4];
  v27 = [@"com.apple.batteryui.suggestions." stringByAppendingString:v8];
  [v27 stringByAppendingString:@".action"];
  ADClientAddValueForScalarKey();
}

void sub_8BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

uint64_t sub_8BD4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_8BE4(uint64_t a1)
{
}

intptr_t sub_8BEC(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) backend];

  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    double v4 = [v3 backend];
    [v4 runQuery];

    v5 = [*(id *)(a1 + 32) backend];
    [v5 queryResult];
  }
  else
  {
    v5 = [v3 functionName];
    PLBatteryUsageUIQuery();
  uint64_t v6 = };
  uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8);
  CFStringRef v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  id v9 = *(NSObject **)(a1 + 48);

  return dispatch_semaphore_signal(v9);
}

uint64_t sub_8C9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 32) + 8) + 16))();
}

void sub_8E44(id a1)
{
  qword_D7378 = objc_alloc_init(BatteryUsageQueryModule);

  _objc_release_x1();
}

void sub_A924(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = [a1[4] queryPayload];
  CFStringRef v8 = [v7 objectForKeyedSubscript:v5];

  id v9 = BUILogCommon();
  id v10 = v9;
  if (!v8)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_8A958();
    }
    goto LABEL_50;
  }
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
    sub_8AC10();
  }

  v11 = BUILogCommon();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
    sub_8ABA4();
  }

  v12 = BUILogCommon();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
    sub_8AB38();
  }

  v13 = [v8 objectForKeyedSubscript:@"enum"];
  int v14 = [v13 intValue];

  v15 = [v8 objectForKeyedSubscript:@"start"];
  [v15 doubleValue];
  double v17 = v16;

  v18 = [v8 objectForKeyedSubscript:@"end"];
  [v18 doubleValue];
  double v20 = v19;

  double v21 = v20 - v17;
  v22 = BUILogCommon();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG)) {
    sub_8AAB0(v14, v22, v21);
  }

  if (v14 == 9)
  {
    v26 = BUILogCommon();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      uint64_t v43 = 9;
      _os_log_impl(&dword_0, v26, OS_LOG_TYPE_DEFAULT, "paused charging state, type=%ld", buf, 0xCu);
    }

    [a1[5] setObject:v6 forKeyedSubscript:@"PLBatteryUIPausedChargingKey"];
  }
  else if (v14 == 5)
  {
    v23 = BUILogCommon();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_0, v23, OS_LOG_TYPE_DEFAULT, "Last charge level!", buf, 2u);
    }

    id v24 = a1[5];
    CFStringRef v25 = @"PLBatteryUILastChargeKey";
    goto LABEL_15;
  }
  if (v21 != 86400.0)
  {
    if (v14 == 6)
    {
      id v10 = v6;
      v32 = BUILogCommon();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEBUG)) {
        sub_8AA38(v10);
      }

      v38[0] = _NSConcreteStackBlock;
      v38[1] = 3221225472;
      v38[2] = sub_B050;
      v38[3] = &unk_BE740;
      id v39 = a1[7];
      [v10 enumerateObjectsUsingBlock:v38];
      v31 = v39;
    }
    else
    {
      if (v14 != 8) {
        goto LABEL_51;
      }
      id v10 = [v6 objectForKeyedSubscript:@"PLBatteryUIGraphByBucket"];
      v30 = BUILogCommon();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEBUG)) {
        sub_8A9C0(v10);
      }

      v40[0] = _NSConcreteStackBlock;
      v40[1] = 3221225472;
      v40[2] = sub_AFAC;
      v40[3] = &unk_BE718;
      id v41 = a1[7];
      [v10 enumerateObjectsUsingBlock:v40];
      v31 = v41;
    }

    goto LABEL_50;
  }
  if (v14 > 7)
  {
    if (v14 != 8)
    {
      if (v14 != 10) {
        goto LABEL_51;
      }
      id v24 = a1[6];
      CFStringRef v25 = @"PLBatteryUIChargingStateIntervalsDictKey";
      goto LABEL_15;
    }
    v33 = BUILogCommon();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_0, v33, OS_LOG_TYPE_DEFAULT, "24 hour usage times", buf, 2u);
    }

    id v10 = +[NSMutableDictionary dictionary];
    v34 = [v6 objectForKeyedSubscript:@"PLBatteryUIGraphByBucket"];
    v35 = BUILogCommon();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
    {
      id v36 = [v34 count];
      *(_DWORD *)buf = 134217984;
      uint64_t v43 = (uint64_t)v36;
      _os_log_impl(&dword_0, v35, OS_LOG_TYPE_DEFAULT, "Got %lu screen on times", buf, 0xCu);
    }

    v37 = BUILogCommon();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      uint64_t v43 = (uint64_t)v34;
      _os_log_impl(&dword_0, v37, OS_LOG_TYPE_DEFAULT, " %@", buf, 0xCu);
    }

    [v10 setObject:v34 forKeyedSubscript:@"PLBatteryUIGraphHourly"];
    [a1[6] setObject:v10 forKeyedSubscript:@"PLBatteryUIScreenOnTimeKey"];

LABEL_50:
    goto LABEL_51;
  }
  if (v14)
  {
    if (v14 != 7) {
      goto LABEL_51;
    }
    id v10 = v6;
    v27 = BUILogCommon();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      id v28 = [v10 count];
      *(_DWORD *)buf = 134217984;
      uint64_t v43 = (uint64_t)v28;
      _os_log_impl(&dword_0, v27, OS_LOG_TYPE_DEFAULT, "got %lu UISoC levels", buf, 0xCu);
    }

    v29 = BUILogCommon();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      uint64_t v43 = (uint64_t)v10;
      _os_log_impl(&dword_0, v29, OS_LOG_TYPE_DEFAULT, " %@", buf, 0xCu);
    }

    [a1[6] setObject:v10 forKeyedSubscript:@"PLBatteryUIBatteryLevelsKey"];
    goto LABEL_50;
  }
  id v24 = a1[6];
  CFStringRef v25 = @"PLBatteryUIChargingIntervalsKey";
LABEL_15:
  [v24 setObject:v6 forKeyedSubscript:v25];
LABEL_51:
}

void sub_AFAC(uint64_t a1, void *a2, uint64_t a3)
{
  double v4 = *(void **)(a1 + 32);
  id v5 = a2;
  id v7 = [v4 objectAtIndex:a3];
  id v6 = +[NSMutableDictionary dictionary];
  [v6 setObject:v5 forKeyedSubscript:@"PLBatteryUIGraphTotal"];

  [v7 setObject:v6 forKeyedSubscript:@"PLBatteryUIScreenOnTimeKey"];
}

void sub_B050(uint64_t a1, void *a2, uint64_t a3)
{
  double v4 = *(void **)(a1 + 32);
  id v5 = a2;
  id v7 = [v4 objectAtIndex:a3];
  id v6 = [v5 objectForKeyedSubscript:@"PLBatteryUIEnergyKey"];

  [v7 setObject:v6 forKeyedSubscript:@"PLBatteryUIEnergyKey"];
}

void sub_C000(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_C01C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_C03C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_C064(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void sub_C08C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_C0A8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 8u);
}

void sub_DFB4(id a1, BOOL a2)
{
  if (a2) {
    AnalyticsSendEventLazy();
  }
}

NSDictionary *__cdecl sub_DFD0(id a1)
{
  return (NSDictionary *)&off_C9E58;
}

id sub_E6F8(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) interactionAnalyticsDictionary];
  id v3 = [v2 copy];

  double v4 = objc_opt_new();
  [*(id *)(a1 + 32) setInteractionAnalyticsDictionary:v4];

  return v3;
}

id sub_E770(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSpecifiers];
}

void sub_ED84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_EDC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setAsRecommended];
}

void sub_EE00(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained closeRCLCard];
}

id sub_EF34(uint64_t a1)
{
  v5[0] = @"value";
  [*(id *)(a1 + 32) getSegmentedControlValue];
  v2 = +[NSNumber numberWithInt:(int)v1];
  v5[1] = @"action";
  v6[0] = v2;
  v6[1] = @"xTapped";
  id v3 = +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:2];

  return v3;
}

uint64_t sub_FE98(uint64_t a1)
{
  [*(id *)(a1 + 32) setChargeLimit:100];

  return AnalyticsSendEventLazy();
}

NSDictionary *__cdecl sub_FED8(id a1)
{
  v3[0] = @"disableTapped";
  v3[1] = @"action";
  v4[0] = &off_C94B8;
  v4[1] = @"disabled";
  float v1 = +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:2];

  return (NSDictionary *)v1;
}

uint64_t sub_FF74(uint64_t a1)
{
  float v1 = *(void **)(a1 + 32);
  [v1 getSegmentedControlValue];
  [v1 moveToValue:(unint64_t)v2];

  return AnalyticsSendEventLazy();
}

NSDictionary *__cdecl sub_FFC8(id a1)
{
  v3[0] = @"cancelTapped";
  v3[1] = @"action";
  v4[0] = &off_C94B8;
  v4[1] = @"cancelled";
  float v1 = +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:2];

  return (NSDictionary *)v1;
}

void sub_10064(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_initWeak(&location, *(id *)(a1 + 32));
  double v4 = [*(id *)(a1 + 32) defaults];
  [*(id *)(a1 + 32) getSegmentedControlValue];
  [v4 setDouble:@"PRIOR_MCL_LIMIT_KEY" forKey:v5];

  id v6 = [*(id *)(a1 + 32) chargingClient];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1019C;
  v7[3] = &unk_BE8A0;
  objc_copyWeak(&v8, &location);
  [v6 temporarilyDisableMCLWithHandler:v7];

  AnalyticsSendEventLazy();
  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);
}

void sub_10174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1019C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if (v5 || (a2 & 1) == 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v7 = [WeakRetained BHUILog];

    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_8B5D8();
    }
  }
  dispatch_time_t v8 = dispatch_time(0, 100000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_102A8;
  block[3] = &unk_BE838;
  objc_copyWeak(&v10, (id *)(a1 + 32));
  dispatch_after(v8, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v10);
}

void sub_102A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadSpecifiers];
}

NSDictionary *__cdecl sub_102E8(id a1)
{
  v3[0] = @"tempDisableTapped";
  v3[1] = @"action";
  v4[0] = &off_C94B8;
  v4[1] = @"temporarilyDisabled";
  float v1 = +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:2];

  return (NSDictionary *)v1;
}

id sub_104FC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_106C8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void sub_106E4(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x12u);
}

id sub_111FC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) caSuggestionsAndInsightsEventDictionaryForType:@"insight" category:@"backgroundLocationUsage" action:@"shown"];
}

id sub_121AC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) caSuggestionsAndInsightsEventDictionaryForType:@"insight" category:@"backgroundLocationUsage" action:@"removed"];
}

void sub_121CC(uint64_t a1)
{
  float v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) suggestionHeaderSpecifier];
  [v1 refreshCellContentsWithSpecifier:v2];
}

CFStringRef batteryGraphErrorString(int a1)
{
  CFStringRef v1 = @"Not Enough Data Points";
  if (a1 != 2) {
    CFStringRef v1 = 0;
  }
  if (a1 == 1) {
    return @"Negative Power Value";
  }
  else {
    return v1;
  }
}

int64_t sub_131AC(id a1, id a2, id a3)
{
  id v4 = a3;
  id v5 = [a2 objectAtIndexedSubscript:0];
  id v6 = [v4 objectAtIndexedSubscript:0];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

void sub_14428(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) BHUILog];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_8B798();
  }

  id v3 = [*(id *)(a1 + 32) chargingClient];
  id v8 = 0;
  unsigned int v4 = [v3 disableSmartCharging:&v8];
  id v5 = v8;

  id v6 = *(void **)(a1 + 32);
  if (!v4 || v5)
  {
    id v7 = [v6 BHUILog];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_8B730();
    }
  }
  else
  {
    [v6 setState:2];
  }
  AnalyticsSendEventLazy();
  [*(id *)(a1 + 32) reloadSpecifiers];
}

NSDictionary *__cdecl sub_14520(id a1)
{
  return (NSDictionary *)&off_C9E80;
}

NSDictionary *__cdecl sub_1452C(id a1)
{
  return (NSDictionary *)&off_C9EA8;
}

id sub_14538(uint64_t a1)
{
  if (os_log_type_enabled(*(os_log_t *)(a1 + 32), OS_LOG_TYPE_DEBUG)) {
    sub_8B7CC();
  }
  AnalyticsSendEventLazy();
  [*(id *)(a1 + 40) setState:0];
  return [*(id *)(a1 + 40) reloadSpecifiers];
}

NSDictionary *__cdecl sub_145A0(id a1)
{
  return (NSDictionary *)&off_C9ED0;
}

void sub_145AC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) BHUILog];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_8B800();
  }

  id v3 = [*(id *)(a1 + 32) chargingClient];
  id v8 = 0;
  unsigned int v4 = [v3 temporarilyDisableSmartCharging:&v8];
  id v5 = v8;

  id v6 = *(void **)(a1 + 32);
  if (!v4 || v5)
  {
    id v7 = [v6 BHUILog];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_8AF00();
    }
  }
  else
  {
    [v6 setState:2];
  }
  AnalyticsSendEventLazy();
  [*(id *)(a1 + 32) reloadSpecifiers];
}

NSDictionary *__cdecl sub_146A4(id a1)
{
  return (NSDictionary *)&off_C9EF8;
}

NSDictionary *__cdecl sub_146B0(id a1)
{
  return (NSDictionary *)&off_C9F20;
}

NSDictionary *__cdecl sub_14E70(id a1)
{
  return (NSDictionary *)&off_C9F48;
}

void sub_14FA8(id a1, BOOL a2)
{
  if (a2) {
    AnalyticsSendEventLazy();
  }
}

NSDictionary *__cdecl sub_14FC4(id a1)
{
  return (NSDictionary *)&off_C9F70;
}

void sub_15668(id a1, BOOL a2)
{
  if (a2) {
    AnalyticsSendEventLazy();
  }
}

NSDictionary *__cdecl sub_15684(id a1)
{
  return (NSDictionary *)&off_C9F98;
}

void sub_15BD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = *(NSObject **)(a1 + 32);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "User disabled clean energy charging", buf, 2u);
  }
  id v5 = *(void **)(a1 + 40);
  id v12 = 0;
  unsigned int v6 = [v5 disableCEC:&v12];
  id v7 = v12;
  id v8 = v7;
  uint64_t v9 = *(NSObject **)(a1 + 32);
  if (v6) {
    BOOL v10 = v7 == 0;
  }
  else {
    BOOL v10 = 0;
  }
  if (v10)
  {
    if (os_log_type_enabled(*(os_log_t *)(a1 + 32), OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_0, v9, OS_LOG_TYPE_DEFAULT, "Clean energy charging disabled", v11, 2u);
    }
  }
  else if (os_log_type_enabled(*(os_log_t *)(a1 + 32), OS_LOG_TYPE_ERROR))
  {
    sub_8AF68();
  }
  [*(id *)(a1 + 48) reloadSpecifiers];
}

id sub_15CEC(uint64_t a1)
{
  id v2 = *(NSObject **)(a1 + 32);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unsigned int v4 = 0;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "User left clean energy charging on", v4, 2u);
  }
  return [*(id *)(a1 + 40) reloadSpecifiers];
}

void sub_15D58(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = *(NSObject **)(a1 + 32);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "User temporarily disabled clean energy charging", buf, 2u);
  }
  id v5 = *(void **)(a1 + 40);
  id v10 = 0;
  unsigned int v6 = [v5 temporarilyDisableCEC:&v10];
  id v7 = v10;
  [*(id *)(a1 + 48) reloadSpecifiers];
  id v8 = *(NSObject **)(a1 + 32);
  if (!v6 || v7)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_8BBAC();
    }
  }
  else if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "Clean energy charging temporarily disabled", v9, 2u);
  }
}

NSDictionary *__cdecl sub_16A54(id a1)
{
  return (NSDictionary *)&off_C9FC0;
}

id sub_16FE4(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

NSDictionary *__cdecl sub_17374(id a1)
{
  return (NSDictionary *)&off_C9FE8;
}

id sub_17380(uint64_t a1)
{
  CFStringRef v4 = @"state";
  CFStringRef v1 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 32)];
  id v5 = v1;
  id v2 = +[NSDictionary dictionaryWithObjects:&v5 forKeys:&v4 count:1];

  return v2;
}

NSDictionary *__cdecl sub_17804(id a1)
{
  return (NSDictionary *)&off_CA010;
}

NSDictionary *__cdecl sub_17810(id a1)
{
  return (NSDictionary *)&off_CA038;
}

id sub_1781C(uint64_t a1)
{
  CFStringRef v4 = @"state";
  CFStringRef v1 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [*(id *)(a1 + 32) batteryHealthServiceState]);
  id v5 = v1;
  id v2 = +[NSDictionary dictionaryWithObjects:&v5 forKeys:&v4 count:1];

  return v2;
}

void sub_17A44(id a1, BOOL a2)
{
  if (a2)
  {
    ADClientAddValueForScalarKey();
    AnalyticsSendEventLazy();
  }
}

NSDictionary *__cdecl sub_17A90(id a1)
{
  return (NSDictionary *)&off_CA060;
}

void sub_17B48(id a1, BOOL a2, NSError *a3)
{
  ADClientAddValueForScalarKey();

  AnalyticsSendEventLazy();
}

NSDictionary *__cdecl sub_17B8C(id a1)
{
  return (NSDictionary *)&off_CA088;
}

void sub_17C94(id a1, BOOL a2)
{
  if (a2)
  {
    ADClientAddValueForScalarKey();
    AnalyticsSendEventLazy();
  }
}

NSDictionary *__cdecl sub_17CE0(id a1)
{
  return (NSDictionary *)&off_CA0B0;
}

NSDictionary *__cdecl sub_17D64(id a1)
{
  return (NSDictionary *)&off_CA0D8;
}

void sub_18E80(id a1, BOOL a2, NSError *a3)
{
  ADClientAddValueForScalarKey();

  AnalyticsSendEventLazy();
}

NSDictionary *__cdecl sub_18EC4(id a1)
{
  return (NSDictionary *)&off_CA100;
}

void sub_190D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  objc_destroyWeak(v24);
  _Block_object_dispose(&a24, 8);
  objc_destroyWeak((id *)(v27 - 88));
  _Unwind_Resume(a1);
}

void sub_19120(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    CFStringRef v1 = *(void **)(a1 + 32);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [v1 startSpinnerInCell:WeakRetained];
  }
}

void sub_19194(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_192C8;
  block[3] = &unk_BECC0;
  void block[4] = *(void *)(a1 + 32);
  objc_copyWeak(&v7, (id *)(a1 + 40));
  objc_copyWeak(&v8, (id *)(a1 + 48));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  if (v3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v5 = [WeakRetained BHUILog];

    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_8C2A4();
    }
  }
  objc_destroyWeak(&v8);
  objc_destroyWeak(&v7);
}

void sub_192AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_192C8(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained stopSpinnerInCell:v2];
}

NSDictionary *__cdecl sub_1933C(id a1)
{
  return (NSDictionary *)&off_CA128;
}

void sub_19D00(id a1, BOOL a2, NSError *a3)
{
  ADClientAddValueForScalarKey();

  AnalyticsSendEventLazy();
}

NSDictionary *__cdecl sub_19D44(id a1)
{
  return (NSDictionary *)&off_CA150;
}

void sub_1B0A4(id a1, BOOL a2)
{
  if (a2) {
    AnalyticsSendEventLazy();
  }
}

NSDictionary *__cdecl sub_1B0C0(id a1)
{
  return (NSDictionary *)&off_CA178;
}

NSDictionary *__cdecl sub_1B998(id a1)
{
  return (NSDictionary *)&off_CA1A0;
}

NSDictionary *__cdecl sub_1B9A4(id a1)
{
  return (NSDictionary *)&off_CA1C8;
}

NSDictionary *__cdecl sub_1B9B0(id a1)
{
  return (NSDictionary *)&off_CA1F0;
}

NSDictionary *__cdecl sub_1B9BC(id a1)
{
  return (NSDictionary *)&off_CA218;
}

id sub_1B9C8(uint64_t a1)
{
  CFStringRef v4 = @"state";
  CFStringRef v1 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [*(id *)(a1 + 32) perfManagementState]);
  id v5 = v1;
  id v2 = +[NSDictionary dictionaryWithObjects:&v5 forKeys:&v4 count:1];

  return v2;
}

void sub_1CE94(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) presentingViewController];
  [v1 dismissViewControllerAnimated:1 completion:0];
}

void sub_1D3D4(id a1, BOOL a2)
{
  if (a2) {
    AnalyticsSendEventLazy();
  }
}

NSDictionary *__cdecl sub_1D3F0(id a1)
{
  return (NSDictionary *)&off_CA240;
}

void sub_1DA68(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_D7388;
  qword_D7388 = v1;

  [(id)qword_D7388 setFormattingContext:2];
  [(id)qword_D7388 setLocalizedDateFormatFromTemplate:@"MMMM yyyy"];
  id v3 = +[NSTimeZone timeZoneWithName:@"UTC"];
  [(id)qword_D7388 setTimeZone:v3];
}

void sub_1E4BC(id a1, BOOL a2)
{
  if (a2) {
    AnalyticsSendEventLazy();
  }
}

NSDictionary *__cdecl sub_1E4D8(id a1)
{
  return (NSDictionary *)&off_CA268;
}

id sub_1E700(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) isAuthSpinner];
  id v3 = [*(id *)(a1 + 32) BHUILog];
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG);
  if (v2)
  {
    if (v4) {
      sub_8CB4C();
    }

    ADClientAddValueForScalarKey();
    AnalyticsSendEventLazy();
  }
  else
  {
    if (v4) {
      sub_8CB80();
    }
  }
  return [*(id *)(a1 + 32) reloadSpecifiersFromSpinner];
}

NSDictionary *__cdecl sub_1E7A8(id a1)
{
  return (NSDictionary *)&off_CA290;
}

NSDictionary *__cdecl sub_1EA10(id a1)
{
  return (NSDictionary *)&off_CA2B8;
}

NSDictionary *__cdecl sub_1EA1C(id a1)
{
  return (NSDictionary *)&off_CA2E0;
}

id sub_1EA28(uint64_t a1)
{
  CFStringRef v4 = @"time";
  uint64_t v1 = +[NSNumber numberWithUnsignedLongLong:*(void *)(a1 + 32)];
  id v5 = v1;
  unsigned int v2 = +[NSDictionary dictionaryWithObjects:&v5 forKeys:&v4 count:1];

  return v2;
}

id sub_1EED4(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) BHUILog];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_8CDD4();
  }

  id result = (id)+[BatteryUIResourceClass getManagementStateWithSync:1];
  if (result != 3)
  {
    CFStringRef v4 = [*(id *)(a1 + 32) BHUILog];
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_8CD60();
    }

    [*(id *)(a1 + 32) setPerfManagementState:1];
    return [*(id *)(a1 + 32) reloadSpecifiers];
  }
  return result;
}

NSDictionary *__cdecl sub_20640(id a1)
{
  return (NSDictionary *)&off_CA308;
}

NSDictionary *__cdecl sub_2064C(id a1)
{
  return (NSDictionary *)&off_CA330;
}

void sub_20658(uint64_t a1, void *a2)
{
  id v3 = a2;
  CFStringRef v4 = *(NSObject **)(a1 + 32);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "User disabled smart charging", buf, 2u);
  }
  id v5 = *(void **)(a1 + 40);
  id v12 = 0;
  unsigned int v6 = [v5 disableSmartCharging:&v12];
  id v7 = v12;
  id v8 = v7;
  uint64_t v9 = *(NSObject **)(a1 + 32);
  if (v6) {
    BOOL v10 = v7 == 0;
  }
  else {
    BOOL v10 = 0;
  }
  if (v10)
  {
    if (os_log_type_enabled(*(os_log_t *)(a1 + 32), OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_0, v9, OS_LOG_TYPE_DEFAULT, "Smart charging disabled", v11, 2u);
    }
    ADClientAddValueForScalarKey();
    ADClientSetValueForScalarKey();
  }
  else
  {
    if (os_log_type_enabled(*(os_log_t *)(a1 + 32), OS_LOG_TYPE_ERROR)) {
      sub_8AF68();
    }
    ADClientAddValueForScalarKey();
  }
  AnalyticsSendEventLazy();
  [*(id *)(a1 + 48) reloadSpecifiers];
}

NSDictionary *__cdecl sub_207BC(id a1)
{
  return (NSDictionary *)&off_CA358;
}

NSDictionary *__cdecl sub_207C8(id a1)
{
  return (NSDictionary *)&off_CA380;
}

id sub_207D4(uint64_t a1)
{
  unsigned int v2 = *(NSObject **)(a1 + 32);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)CFStringRef v4 = 0;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "User left smart charging on", v4, 2u);
  }
  ADClientAddValueForScalarKey();
  AnalyticsSendEventLazy();
  return [*(id *)(a1 + 40) reloadSpecifiers];
}

NSDictionary *__cdecl sub_20864(id a1)
{
  return (NSDictionary *)&off_CA3A8;
}

void sub_20870(uint64_t a1, void *a2)
{
  id v3 = a2;
  CFStringRef v4 = *(NSObject **)(a1 + 32);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "User temporarily disabled smart charging", buf, 2u);
  }
  id v5 = *(void **)(a1 + 40);
  id v10 = 0;
  unsigned int v6 = [v5 temporarilyDisableSmartCharging:&v10];
  id v7 = v10;
  [*(id *)(a1 + 48) reloadSpecifiers];
  id v8 = *(NSObject **)(a1 + 32);
  if (!v6 || v7)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_8AF00();
    }
    ADClientAddValueForScalarKey();
  }
  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "Smart charging temporarily disabled", v9, 2u);
    }
    ADClientAddValueForScalarKey();
    ADClientSetValueForScalarKey();
  }
  AnalyticsSendEventLazy();
}

NSDictionary *__cdecl sub_209C8(id a1)
{
  return (NSDictionary *)&off_CA3D0;
}

NSDictionary *__cdecl sub_209D4(id a1)
{
  return (NSDictionary *)&off_CA3F8;
}

void sub_210A0(id a1, BOOL a2)
{
  if (a2) {
    AnalyticsSendEventLazy();
  }
}

NSDictionary *__cdecl sub_210BC(id a1)
{
  return (NSDictionary *)&off_CA420;
}

void sub_2161C(uint64_t a1, void *a2)
{
  id v3 = a2;
  CFStringRef v4 = *(NSObject **)(a1 + 32);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "User disabled clean energy charging", buf, 2u);
  }
  id v5 = *(void **)(a1 + 40);
  id v12 = 0;
  unsigned int v6 = [v5 disableCEC:&v12];
  id v7 = v12;
  id v8 = v7;
  uint64_t v9 = *(NSObject **)(a1 + 32);
  if (v6) {
    BOOL v10 = v7 == 0;
  }
  else {
    BOOL v10 = 0;
  }
  if (v10)
  {
    if (os_log_type_enabled(*(os_log_t *)(a1 + 32), OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_0, v9, OS_LOG_TYPE_DEFAULT, "Clean energy charging disabled", v11, 2u);
    }
  }
  else if (os_log_type_enabled(*(os_log_t *)(a1 + 32), OS_LOG_TYPE_ERROR))
  {
    sub_8AF68();
  }
  [*(id *)(a1 + 48) reloadSpecifiers];
}

id sub_21730(uint64_t a1)
{
  unsigned int v2 = *(NSObject **)(a1 + 32);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)CFStringRef v4 = 0;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "User left clean energy charging on", v4, 2u);
  }
  return [*(id *)(a1 + 40) reloadSpecifiers];
}

void sub_2179C(uint64_t a1, void *a2)
{
  id v3 = a2;
  CFStringRef v4 = *(NSObject **)(a1 + 32);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "User temporarily disabled clean energy charging", buf, 2u);
  }
  id v5 = *(void **)(a1 + 40);
  id v10 = 0;
  unsigned int v6 = [v5 temporarilyDisableCEC:&v10];
  id v7 = v10;
  [*(id *)(a1 + 48) reloadSpecifiers];
  id v8 = *(NSObject **)(a1 + 32);
  if (!v6 || v7)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_8BBAC();
    }
  }
  else if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "Clean energy charging temporarily disabled", v9, 2u);
  }
}

void sub_21C40(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_21C68(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 8u);
}

id sub_21C8C()
{
  return [v0 batteryHealthServiceState];
}

void sub_22400(uint64_t a1, void *a2, void *a3)
{
  id v13 = a2;
  id v5 = a3;
  unsigned int v6 = [v5 textColor];
  id v7 = +[UIColor systemGreenColor];

  if (v6 == v7)
  {
    [v13 floatValue];
    float v9 = v8;
    id v10 = [*(id *)(a1 + 32) slider];
    [v10 rtlConsideredValue];
    if (v9 == v11) {
      +[UIColor labelColor];
    }
    else {
    id v12 = +[UIColor systemGrayColor];
    }
    [v5 setTextColor:v12];
  }
}

void sub_23184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v9 - 216));
  _Unwind_Resume(a1);
}

void sub_231C4(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained currentTickColor];
  id v4 = objc_loadWeakRetained(v1);
  [v4 setTickColor:v3];

  id v5 = objc_loadWeakRetained(v1);
  [v5 refreshView];
}

void sub_23334(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"PLSegmentedLabelSliderCellForceRemoveHighlightKey"];
  id v3 = v2;
  if (v2 && [v2 BOOLValue])
  {
    [*(id *)(a1 + 32) setProperty:&__kCFBooleanFalse forKey:@"PLSegmentedLabelSliderCellForceRemoveHighlightKey"];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [WeakRetained removeHighlight:1];
  }
  id v5 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"PLSegmentedLabelSliderCellMoveToValueKey"];
  unsigned int v6 = v5;
  if (v5)
  {
    [v5 floatValue];
    int v8 = v7;
    [*(id *)(a1 + 32) setProperty:0 forKey:@"PLSegmentedLabelSliderCellMoveToValueKey"];
    id v9 = objc_loadWeakRetained((id *)(a1 + 48));
    LODWORD(v10) = v8;
    [v9 sliderValueChanged:v10];
  }
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(unsigned __int8 *)(a1 + 56);
  v13.receiver = *(id *)(a1 + 40);
  v13.super_class = (Class)PLSegmentedLabelSliderCell;
  objc_msgSendSuper2(&v13, "reloadWithSpecifier:animated:", v11, v12);
}

void sub_235F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23614(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = [a3 text];
  id v5 = +[UIFont _preferredFontForTextStyle:UIFontTextStyleFootnote weight:UIFontWeightSemibold];
  [v4 sizeWithFont:v5];
  float v7 = v6;

  uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8);
  float v9 = *(float *)(v8 + 24);
  if (v9 < v7) {
    float v9 = v7;
  }
  *(float *)(v8 + 24) = v9;
}

void sub_236B0(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  unsigned int v6 = [v8 intValue];
  if (v6 != [*(id *)(a1 + 32) minValue])
  {
    unsigned int v7 = [v8 intValue];
    if (v7 != [*(id *)(a1 + 32) maxValue]) {
      [v5 setHidden:*(unsigned __int8 *)(a1 + 40)];
    }
  }
}

void sub_24250(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = +[BatteryUIResourceClass get_log_handle_bui];
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
      sub_8D174(a1, v3, v4, v5, v6, v7, v8, v9);
    }
  }
}

id sub_25AD4(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

NSDictionary *__cdecl sub_25ADC(id a1)
{
  return (NSDictionary *)&off_CA448;
}

NSDictionary *__cdecl sub_25AE8(id a1)
{
  return (NSDictionary *)&off_CA470;
}

NSDictionary *__cdecl sub_25AF4(id a1)
{
  return (NSDictionary *)&off_CA498;
}

NSDictionary *__cdecl sub_25B00(id a1)
{
  return (NSDictionary *)&off_CA4C0;
}

NSDictionary *__cdecl sub_25B0C(id a1)
{
  return (NSDictionary *)&off_CA4E8;
}

NSDictionary *__cdecl sub_25B18(id a1)
{
  return (NSDictionary *)&off_CA510;
}

NSDictionary *__cdecl sub_25B24(id a1)
{
  return (NSDictionary *)&off_CA538;
}

NSDictionary *__cdecl sub_25B30(id a1)
{
  return (NSDictionary *)&off_CA560;
}

NSDictionary *__cdecl sub_25B3C(id a1)
{
  return (NSDictionary *)&off_CA588;
}

NSDictionary *__cdecl sub_25B48(id a1)
{
  return (NSDictionary *)&off_CA5B0;
}

NSDictionary *__cdecl sub_25B54(id a1)
{
  return (NSDictionary *)&off_CA5D8;
}

NSDictionary *__cdecl sub_25B60(id a1)
{
  return (NSDictionary *)&off_CA600;
}

NSDictionary *__cdecl sub_25B6C(id a1)
{
  return (NSDictionary *)&off_CA628;
}

void sub_26C10(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(unsigned char *)(*(void *)(a1 + 32) + 120) = 0;
  id v10 = v3;
  uint64_t v4 = [v3 objectForKeyedSubscript:@"ModelData"];

  if (v4)
  {
    uint64_t v5 = [v10 objectForKeyedSubscript:@"ModelData"];
    uint64_t v6 = [v5 objectAtIndexedSubscript:0];
    uint64_t v7 = [v6 objectForKeyedSubscript:@"ModelGraphArray"];
    [*(id *)(a1 + 32) setGraphArray:v7];
  }
  uint64_t v8 = [*(id *)(a1 + 32) activityIndicator];
  [v8 stopAnimating];

  uint64_t v9 = [*(id *)(a1 + 32) activityIndicator];
  [v9 removeFromSuperview];
}

id createFollowUpTitle()
{
  id v0 = objc_alloc_init((Class)UILabel);
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setNumberOfLines:0];
  [v0 setLineBreakMode:0];
  uint64_t v1 = +[UIFont preferredFontForTextStyle:UIFontTextStyleHeadline];
  [v0 setFont:v1];

  unsigned int v2 = +[PSListController appearance];
  id v3 = [v2 textColor];
  if (v3)
  {
    [v0 setTextColor:v3];
  }
  else
  {
    uint64_t v4 = +[UIColor blackColor];
    [v0 setTextColor:v4];
  }
  LODWORD(v5) = 1144750080;
  [v0 setContentCompressionResistancePriority:0 forAxis:v5];

  return v0;
}

id createFollowUpSubtitle()
{
  id v0 = objc_alloc_init((Class)UILabel);
  uint64_t v1 = +[PSListController appearance];
  unsigned int v2 = [v1 textColor];
  if (v2)
  {
    [v0 setTextColor:v2];
  }
  else
  {
    id v3 = +[UIColor blackColor];
    [v0 setTextColor:v3];
  }
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setNumberOfLines:0];
  [v0 setLineBreakMode:0];
  uint64_t v4 = +[UIFont preferredFontForTextStyle:UIFontTextStyleSubheadline];
  [v0 setFont:v4];

  LODWORD(v5) = 1144750080;
  [v0 setContentCompressionResistancePriority:0 forAxis:v5];

  return v0;
}

id createFollowUpTitleInformation()
{
  id v0 = objc_alloc_init((Class)UILabel);
  uint64_t v1 = +[UIColor _secondaryLabelColor];
  [v0 setTextColor:v1];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setNumberOfLines:0];
  [v0 setLineBreakMode:0];
  unsigned int v2 = +[UIFont preferredFontForTextStyle:UIFontTextStyleBody];
  [v0 setFont:v2];

  LODWORD(v3) = 1144750080;
  [v0 setContentCompressionResistancePriority:0 forAxis:v3];

  return v0;
}

NSString *PSTimeFormatter(double a1)
{
  return +[NSString stringWithFormat:@"%d hr, %d min", ((int)a1 / 3600), (int)(((__int16)((34953 * ((int)a1 % 3600)) >> 16) >> 5)+ ((((int)a1 % 3600 + ((-30583 * ((int)a1 % 3600)) >> 16)) & 0x8000) >> 15))];
}

NSString *PSFormattedEnergyString(float a1)
{
  return +[NSString stringWithFormat:@"%d mWh", (int)a1];
}

void sub_29770(uint64_t a1, void *a2)
{
  id v9 = a2;
  double v3 = [v9 objectForKeyedSubscript:@"ModelData"];

  if (v3)
  {
    uint64_t v4 = [v9 objectForKeyedSubscript:@"ModelData"];
    double v5 = [v4 objectAtIndexedSubscript:0];
    uint64_t v6 = [v5 objectForKeyedSubscript:@"ModelGraphArray"];
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void **)(v7 + 312);
    *(void *)(v7 + 312) = v6;
  }
}

void sub_29830(uint64_t a1)
{
  unsigned int v2 = +[NSProcessInfo processInfo];
  double v3 = [v2 environment];

  uint64_t v4 = [v3 objectForKeyedSubscript:@"BUI_UNIT_TEST_PATH"];
  double v5 = +[BatteryUIResourceClass get_log_handle_bui];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    int v21 = 138412290;
    v22 = v4;
    _os_log_impl(&dword_0, v5, OS_LOG_TYPE_INFO, "Reading from sample plist: %@", (uint8_t *)&v21, 0xCu);
  }

  uint64_t v6 = +[NSURL fileURLWithPath:v4];
  uint64_t v7 = +[NSDictionary dictionaryWithContentsOfURL:v6];

  uint64_t v8 = [*(id *)(a1 + 32) currentDictionary];
  if (!v8
    || (id v9 = (void *)v8,
        [*(id *)(a1 + 32) currentGraphDictionary],
        id v10 = objc_claimAutoreleasedReturnValue(),
        v10,
        v9,
        !v10))
  {
    [*(id *)(a1 + 32) setUpBatteryUIDictionary:v7];
    uint64_t v11 = *(void **)(a1 + 32);
    uint64_t v12 = [v11 currentDictionary];
    uint64_t v13 = [v11 generateBatteryEntrySpecifiers:v12];
    uint64_t v14 = *(void *)(a1 + 32);
    v15 = *(void **)(v14 + 272);
    *(void *)(v14 + 272) = v13;

    double v16 = *(void **)(a1 + 32);
    double v17 = [v16 currentDictionary];
    v18 = [v17 objectForKeyedSubscript:@"PLBatteryUISuggestionArrayKey"];
    [v16 generateSuggestionsEntryObjects:v18];

    [*(id *)(a1 + 32) removeSpinnerSpecifers];
    double v19 = +[NSMutableDictionary dictionary];
    [*(id *)(a1 + 32) setTableCellHeights:v19];

    double v20 = +[NSMutableDictionary dictionary];
    [*(id *)(a1 + 32) setTableCellHeightEstimated:v20];

    [*(id *)(a1 + 32) reloadSpecifiers];
    [*(id *)(a1 + 32) setWaitingForResponse:0];
  }
}

void sub_29A8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = dispatch_get_global_queue(2, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_29B4C;
  block[3] = &unk_BF308;
  uint64_t v5 = *(void *)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v8 = v3;
  uint64_t v9 = v5;
  id v6 = v3;
  dispatch_async(v4, block);
}

void sub_29B4C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) currentDictionary];
  if (!v2
    || (id v3 = (void *)v2,
        [*(id *)(a1 + 32) currentGraphDictionary],
        uint64_t v4 = objc_claimAutoreleasedReturnValue(),
        v4,
        v3,
        !v4))
  {
    uint64_t v5 = [*(id *)(a1 + 40) objectForKeyedSubscript:@"PLBatteryUIXPCVersionKey"];
    id v6 = +[BatteryUIResourceClass get_log_handle_bui];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = [*(id *)(a1 + 40) allKeys];
      *(_DWORD *)buf = 134217984;
      id v34 = [v7 count];
      _os_log_impl(&dword_0, v6, OS_LOG_TYPE_INFO, "Keys count in battery breakdown response: %lu", buf, 0xCu);
    }
    if (v5)
    {
      [v5 doubleValue];
      if (v8 == 1.0)
      {
        uint64_t v10 = mach_absolute_time();
        uint64_t v11 = +[BatteryUIResourceClass get_log_handle_bui];
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          uint64_t v12 = [*(id *)(a1 + 40) objectForKeyedSubscript:@"Graph"];
          uint64_t v13 = [v12 objectForKeyedSubscript:@"PLBatteryUIGraphEndDate"];
          *(_DWORD *)buf = 138412290;
          id v34 = v13;
          _os_log_impl(&dword_0, v11, OS_LOG_TYPE_INFO, "End date: %@", buf, 0xCu);
        }
        [*(id *)(a1 + 32) setUpBatteryUIDictionary:*(void *)(a1 + 40)];
        uint64_t v14 = *(void **)(a1 + 32);
        v15 = [v14 currentDictionary];
        uint64_t v16 = [v14 generateBatteryEntrySpecifiers:v15];
        uint64_t v17 = *(void *)(a1 + 32);
        v18 = *(void **)(v17 + 272);
        *(void *)(v17 + 272) = v16;

        double v19 = [*(id *)(a1 + 32) currentDictionary];
        uint64_t v9 = [v19 objectForKeyedSubscript:@"PLBatteryUISuggestionArrayKey"];

        [*(id *)(a1 + 32) generateSuggestionsEntryObjects:v9];
        +[BatteryUIResourceClass containerPath];
        double v20 = (void *)_CFPreferencesCopyValueWithContainer();
        if (_os_feature_enabled_impl()
          && +[PLModelingUtilities internalBuild]
          && v20
          && [v20 BOOLValue])
        {
          int v21 = [*(id *)(a1 + 32) currentDictionary];
          v22 = [v21 objectForKeyedSubscript:@"PLBatteryUIUrsaIssuesKey"];

          [*(id *)(a1 + 32) generateSuggestionsWithIssues:v22];
        }
        +[BatteryUIResourceClass millisecondsFromMachTime:v10];
        double v24 = v23;
        +[BatteryUIResourceClass millisecondsFromMachTime:*(void *)(a1 + 48)];
        unint64_t v26 = (unint64_t)(v24 - v25);
        uint64_t v27 = BUILogCommon();
        if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 134217984;
          id v34 = (id)v26;
          _os_log_impl(&dword_0, v27, OS_LOG_TYPE_DEFAULT, "Time taken to get the xpc response: %llu", buf, 0xCu);
        }

        ADClientPushValueForDistributionKey();
        id v28 = objc_opt_new();
        v29 = +[NSNumber numberWithUnsignedLongLong:v26];
        [v28 setObject:v29 forKeyedSubscript:@"elapsedTime"];

        v31[5] = _NSConcreteStackBlock;
        v31[6] = 3221225472;
        v31[7] = sub_2A028;
        v31[8] = &unk_BE5D0;
        id v32 = v28;
        id v30 = v28;
        AnalyticsSendEventLazy();
        v31[0] = _NSConcreteStackBlock;
        v31[1] = 3221225472;
        v31[2] = sub_2A030;
        v31[3] = &unk_BE810;
        v31[4] = *(void *)(a1 + 32);
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v31);
      }
      else
      {
        uint64_t v9 = +[BatteryUIResourceClass get_log_handle_bui];
        if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_0, v9, OS_LOG_TYPE_INFO, "Battery UI Version Mismatch...", buf, 2u);
        }
      }
    }
  }
}

id sub_2A028(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_2A030(uint64_t a1)
{
  [*(id *)(a1 + 32) removeSpinnerSpecifers];
  uint64_t v2 = +[NSMutableDictionary dictionary];
  [*(id *)(a1 + 32) setTableCellHeights:v2];

  id v3 = +[NSMutableDictionary dictionary];
  [*(id *)(a1 + 32) setTableCellHeightEstimated:v3];

  [*(id *)(a1 + 32) reloadSpecifiers];
  uint64_t v4 = BUILogLoadTimes();
  if (os_signpost_enabled(v4))
  {
    *(_WORD *)id v6 = 0;
    _os_signpost_emit_with_name_impl(&dword_0, v4, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "BUILoadTime", "BUI Specifiers loaded", v6, 2u);
  }

  [*(id *)(a1 + 32) setWaitingForResponse:0];
  uint64_t v5 = +[NSDate now];
  [*(id *)(a1 + 32) setLastBatteryBreakdownQueryTime:v5];
}

uint64_t sub_2B740(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = [v5 propertyForKey:@"PLBatteryUIAppEnergyValueKey"];
  double v8 = [v6 propertyForKey:@"PLBatteryUIAppEnergyValueKey"];
  uint64_t v9 = (uint64_t)[v8 compare:v7];
  if (!v9)
  {
    uint64_t v10 = *(void **)(a1 + 32);
    uint64_t v11 = [v5 propertyForKey:@"PLBatteryUIAppQualifiersKey"];
    unsigned int v12 = [v10 appQualifiers:v11 containsQualifier:11];

    uint64_t v13 = *(void **)(a1 + 32);
    uint64_t v14 = [v6 propertyForKey:@"PLBatteryUIAppQualifiersKey"];
    unsigned int v15 = [v13 appQualifiers:v14 containsQualifier:11];

    if (!v12 || v15)
    {
      if ((v12 | v15 ^ 1) == 1)
      {
        uint64_t v16 = [v5 propertyForKey:@"PLBatteryUIAppForegroundRuntimeKey"];
        [v16 doubleValue];
        double v18 = v17;
        double v19 = [v5 propertyForKey:@"PLBatteryUIAppBackgroundRuntimeKey"];
        [v19 doubleValue];
        int v21 = +[NSNumber numberWithDouble:v18 + v20];

        v22 = [v6 propertyForKey:@"PLBatteryUIAppForegroundRuntimeKey"];
        [v22 doubleValue];
        double v24 = v23;
        double v25 = [v6 propertyForKey:@"PLBatteryUIAppBackgroundRuntimeKey"];
        [v25 doubleValue];
        uint64_t v27 = +[NSNumber numberWithDouble:v24 + v26];

        uint64_t v9 = (uint64_t)[v27 compare:v21];
      }
      else
      {
        uint64_t v9 = -1;
      }
    }
    else
    {
      uint64_t v9 = 1;
    }
  }

  return v9;
}

id sub_2C338(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_2C548(uint64_t a1)
{
  uint64_t v2 = +[BatteryUIResourceClass get_log_handle_bui];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_8E134(a1, v2, v3);
  }

  uint64_t v4 = objc_msgSend(*(id *)(a1 + 40), "specifierAtIndex:", objc_msgSend(*(id *)(a1 + 40), "indexOfSpecifierID:", @"LOW_POWER_MODE_IDENTIFIER"));
  id v5 = *(void **)(a1 + 40);
  id v6 = [v5 getBatterySaverMode:v4];
  objc_msgSend(v5, "animateSwitchSpecifier:toState:", v4, objc_msgSend(v6, "BOOLValue"));

  [*(id *)(a1 + 40) reloadSpecifierID:@"LOW_POWER_MODE_IDENTIFIER" animated:0];
}

id sub_2CF0C(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_2CF14(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_2FB60(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_2FB68(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_312CC(uint64_t a1, void *a2)
{
  return [a2 reloadUI];
}

void sub_31C00(uint64_t a1, void *a2)
{
  id v9 = a2;
  uint64_t v3 = [v9 objectForKeyedSubscript:@"ModelData"];

  if (v3)
  {
    uint64_t v4 = [v9 objectForKeyedSubscript:@"ModelData"];
    id v5 = [v4 objectAtIndexedSubscript:0];
    uint64_t v6 = [v5 objectForKeyedSubscript:@"ModelGraphArray"];
    uint64_t v7 = *(void *)(a1 + 32);
    double v8 = *(void **)(v7 + 312);
    *(void *)(v7 + 312) = v6;
  }
}

void sub_323D0(id a1)
{
  +[BatteryUIResourceClass containerPath];
  qword_D73A0 = _CFPreferencesCopyValueWithContainer();

  _objc_release_x1();
}

void sub_324AC(id a1)
{
  +[BatteryUIResourceClass containerPath];
  qword_D73B0 = _CFPreferencesCopyValueWithContainer();

  _objc_release_x1();
}

void sub_32680(id a1)
{
  +[BatteryUIResourceClass containerPath];
  qword_D73C0 = _CFPreferencesCopyValueWithContainer();

  _objc_release_x1();
}

void sub_32748(id a1)
{
  +[BatteryUIResourceClass containerPath];
  qword_D73D0 = _CFPreferencesCopyValueWithContainer();

  _objc_release_x1();
}

id sub_32B24(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_32C24(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_32D14(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_32E4C(id a1)
{
  uint64_t v1 = (void *)MKBUserTypeDeviceMode();
  if (v1)
  {
    id v5 = v1;
    uint64_t v2 = [v1 objectForKeyedSubscript:kMKBDeviceModeKey];
    uint64_t v3 = [v5 objectForKeyedSubscript:kMKBUserTypeKey];
    unsigned int v4 = [v2 isEqualToString:kMKBDeviceModeMultiUser];
    if (v4) {
      LOBYTE(v4) = [v3 isEqualToString:kMKBUserTypeEphemeral];
    }
    byte_D73D8 = v4;

    uint64_t v1 = v5;
  }
}

NSDictionary *__cdecl sub_330BC(id a1)
{
  return (NSDictionary *)&off_CA650;
}

NSDictionary *__cdecl sub_330C8(id a1)
{
  return (NSDictionary *)&off_CA678;
}

void sub_33570(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

id sub_33E9C()
{
  id v0 = objc_alloc_init((Class)NSDateComponentsFormatter);
  uint64_t v1 = (void *)qword_D73F0;
  qword_D73F0 = (uint64_t)v0;

  objc_msgSend((id)qword_D73F0, "setUnitsStyle:", objc_msgSend((id)objc_opt_class(), "localizedDateComponentsUnitsStyle"));
  [(id)qword_D73F0 setIncludesApproximationPhrase:0];
  [(id)qword_D73F0 setIncludesTimeRemainingPhrase:0];
  uint64_t v2 = (void *)qword_D73F0;

  return [v2 setAllowedUnits:32];
}

id sub_33FE0()
{
  id v0 = objc_alloc_init((Class)NSDateComponentsFormatter);
  uint64_t v1 = (void *)qword_D7400;
  qword_D7400 = (uint64_t)v0;

  objc_msgSend((id)qword_D7400, "setUnitsStyle:", objc_msgSend((id)objc_opt_class(), "localizedDateComponentsUnitsStyle"));
  [(id)qword_D7400 setIncludesApproximationPhrase:0];
  [(id)qword_D7400 setIncludesTimeRemainingPhrase:0];
  uint64_t v2 = (void *)qword_D7400;

  return [v2 setAllowedUnits:64];
}

void sub_34D40(id a1)
{
  uint64_t v1 = +[NSProcessInfo processInfo];
  id v3 = [v1 environment];

  uint64_t v2 = [v3 objectForKeyedSubscript:@"BUI_UNIT_TEST"];
  byte_D7408 = [v2 BOOLValue];
}

id sub_36D88(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_36F68(uint64_t a1)
{
  id v1 = *(id *)(a1 + 32);
  AnalyticsSendEventLazy();
}

id sub_36FEC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id BatteryUILocalizationHeySiri(void *a1)
{
  id v1 = a1;
  uint64_t v2 = BatteryUIResourceBundle();
  id v3 = [v2 localizedStringForKey:v1 value:&stru_C3A18 table:@"HeySiri-BatteryUI"];

  return v3;
}

CFStringRef QualifierStringForEnum(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x12) {
    return @"APPQUALIFIER_UNKNOWN";
  }
  else {
    return off_BF5B8[a1 - 1];
  }
}

__CFString *BatteryUIPrintQualifierString(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    if ([v1 count])
    {
      id v3 = 0;
      unsigned int v4 = &stru_C3A18;
      do
      {
        uint64_t v5 = [v2 objectAtIndexedSubscript:v3];
        uint64_t v6 = QualifierStringForEnum((int)[v5 intValue]);

        uint64_t v7 = BatteryUILocalization(v6);
        double v8 = [(__CFString *)v4 stringByAppendingString:v7];

        if ((char *)[v2 count] - 1 > v3)
        {
          id v9 = BatteryUILocalization(@"APPQUALIFIER_SEPARATOR");
          uint64_t v10 = [(__CFString *)v8 stringByAppendingString:v9];

          double v8 = (__CFString *)v10;
        }

        ++v3;
        unsigned int v4 = v8;
      }
      while ([v2 count] > v3);
    }
    else
    {
      double v8 = &stru_C3A18;
    }
  }
  else
  {
    double v8 = 0;
  }

  return v8;
}

id BatteryUISuggestionQueryEnumToString(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      id v1 = @"AUTOBRIGHTNESS";
      goto LABEL_8;
    case 1:
      id v1 = @"ENABLE_AUTOLOCK";
      goto LABEL_8;
    case 2:
      id v1 = @"REDUCEBRIGHTNESS";
      goto LABEL_8;
    case 3:
      id v3 = LocalizableGTStringKeyForKey();
      uint64_t v2 = BatteryUILocalization(v3);

      break;
    case 4:
      id v1 = @"LTE";
LABEL_8:
      uint64_t v2 = BatteryUILocalization(v1);
      break;
    default:
      uint64_t v2 = 0;
      break;
  }

  return v2;
}

id BatteryUIAppTypeToString(unint64_t a1)
{
  if (a1 > 5)
  {
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = BatteryUILocalization(off_BF650[a1]);
  }
  return v2;
}

id BatteryUIGetImage(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppTypeKey"];
  unsigned int v3 = [v2 intValue];

  if (v3 != 4)
  {
    if (v3 == 1)
    {
      uint64_t v16 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppBundleIDKey"];
      id v6 = +[PLBatteryUIUtilities iconUTTypeIdentifierForNonApp:v16];

      id v7 = [objc_alloc((Class)ISIcon) initWithType:v6];
      id v9 = +[ISImageDescriptor imageDescriptorNamed:kISImageDescriptorTableUIName];
      double v17 = +[UIScreen mainScreen];
      [v17 scale];
      objc_msgSend(v9, "setScale:");

      uint64_t v13 = [v7 imageForDescriptor:v9];
      unsigned __int8 v18 = [v13 placeholder];
      id v11 = objc_alloc((Class)UIImage);
      if (v18)
      {
        double v19 = [v7 prepareImageForDescriptor:v9];
        id v15 = objc_msgSend(v11, "initWithCGImage:", objc_msgSend(v19, "CGImage"));

LABEL_12:
LABEL_14:

        goto LABEL_15;
      }
      unsigned int v12 = v13;
    }
    else
    {
      if (v3)
      {
        PSBlankIconImage();
        id v15 = (id)objc_claimAutoreleasedReturnValue();
        goto LABEL_16;
      }
      id v4 = objc_alloc((Class)ISIcon);
      uint64_t v5 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppBundleIDKey"];
      id v6 = [v4 initWithBundleIdentifier:v5];

      id v7 = +[ISImageDescriptor imageDescriptorNamed:kISImageDescriptorTableUIName];
      double v8 = +[UIScreen mainScreen];
      [v8 scale];
      objc_msgSend(v7, "setScale:");

      id v9 = [v6 imageForDescriptor:v7];
      unsigned __int8 v10 = [v9 placeholder];
      id v11 = objc_alloc((Class)UIImage);
      if ((v10 & 1) == 0)
      {
        id v15 = objc_msgSend(v11, "initWithCGImage:", objc_msgSend(v9, "CGImage"));
        goto LABEL_14;
      }
      unsigned int v12 = [v6 prepareImageForDescriptor:v7];
      uint64_t v13 = v12;
    }
    id v15 = objc_msgSend(v11, "initWithCGImage:", objc_msgSend(v12, "CGImage"));
    goto LABEL_12;
  }
  uint64_t v14 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppBundleIDKey"];
  id v6 = +[UIWebClip webClipWithIdentifier:v14];

  id v7 = +[UIScreen mainScreen];
  [v7 scale];
  objc_msgSend(v6, "generateIconImageForFormat:scale:", 0);
  id v15 = (id)objc_claimAutoreleasedReturnValue();
LABEL_15:

LABEL_16:

  return v15;
}

id convertRootNodeIdToString(void *a1)
{
  id v1 = a1;
  if (qword_D7418 != -1) {
    dispatch_once(&qword_D7418, &stru_BF4B8);
  }
  uint64_t v2 = [(id)qword_D7420 objectForKey:v1];

  if (v2)
  {
    uint64_t v2 = [(id)qword_D7420 objectForKeyedSubscript:v1];
  }

  return v2;
}

void sub_376E4(id a1)
{
  id v1 = (void *)qword_D7420;
  qword_D7420 = (uint64_t)&off_CA6A0;
}

id BatteryUIGetDisplayName(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppTypeKey"];
  unsigned int v3 = [v2 intValue];

  switch(v3)
  {
    case 0u:
      id v4 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppBundleIDKey"];
      uint64_t v5 = (void *)SBSCopyLocalizedApplicationNameForDisplayIdentifier();

      id v6 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppBundleIDKey"];
      LODWORD(v4) = [v6 isEqualToString:@"com.apple.NanoUniverse.AegirProxyApp"];

      if (v4)
      {
        id v23 = 0;
        id v7 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:@"com.apple.NanoUniverse.AegirProxyApp" allowPlaceholder:1 error:&v23];
        id v8 = v23;
        if (v7)
        {
          id v9 = [v7 localizedName];
        }
        else
        {
          id v9 = 0;
        }

        double v19 = +[BatteryUIResourceClass get_log_handle_bui];
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412802;
          id v25 = v7;
          __int16 v26 = 2112;
          uint64_t v27 = v9;
          __int16 v28 = 2112;
          id v29 = v8;
          _os_log_debug_impl(&dword_0, v19, OS_LOG_TYPE_DEBUG, "appRecord=%@, localizedName=%@, error=%@", buf, 0x20u);
        }
      }
      else
      {
        id v9 = v5;
      }
      double v20 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppNameKey"];
      unsigned int v21 = [v20 isEqualToString:@"Apple Watch"];

      if (v21)
      {
        unsigned __int8 v10 = @"APPLE_WATCH_APP";
        goto LABEL_20;
      }
      if (v9)
      {
        id v16 = v9;
      }
      else
      {
        id v16 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppNameKey"];
      }
      goto LABEL_21;
    case 1u:
      unsigned __int8 v10 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppBundleIDKey"];
      id v9 = v10;
LABEL_20:
      BatteryUILocalization(v10);
      id v16 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_21;
    case 3u:
      unsigned int v12 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppNameKey"];
      uint64_t v13 = BatteryUILocalization(@"DELETED_APP");
      uint64_t v14 = +[NSString stringWithFormat:@" (%@)", v13];
      id v11 = [v12 stringByAppendingString:v14];

      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_24;
    case 4u:
      id v15 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppBundleIDKey"];
      id v9 = +[UIWebClip webClipWithIdentifier:v15];

      id v16 = [v9 title];
LABEL_21:
      id v11 = v16;
      goto LABEL_22;
    case 5u:
      id v11 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppBundleIDKey"];
      double v17 = convertRootNodeIdToString(v11);
      id v9 = v17;
      if (v17)
      {
        id v18 = v17;

        id v11 = v18;
      }
LABEL_22:

      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_24;
    default:
      id v11 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppBundleIDKey"];
      if (!v11)
      {
LABEL_23:
        id v11 = [v1 objectForKeyedSubscript:@"PLBatteryUIAppBundleIDKey"];
      }
LABEL_24:

      return v11;
  }
}

void sub_37B1C(id a1)
{
  id v1 = (void *)container_create_or_lookup_system_group_paths();
  if (v1)
  {
    uint64_t v2 = (void *)_CFXPCCreateCFObjectFromXPCObject();
    uint64_t v3 = [v2 objectForKeyedSubscript:@"systemgroup.com.apple.powerlog"];
    id v4 = (void *)qword_D7428;
    qword_D7428 = v3;
  }
  else
  {
    NSLog(@"Error fetching group containers for %@ : %llu", @"com.apple.systemcontainer", 1);
  }
}

void sub_37BF4(id a1)
{
  +[BatteryUIResourceClass containerPath];
  id v1 = (id)_CFPreferencesCopyValueWithContainer();
  byte_D7440 = [v1 BOOLValue];
}

void sub_38380(id a1)
{
  mach_timebase_info info = 0;
  if (mach_timebase_info(&info))
  {
    _os_assumes_log();
    double v1 = 1.0;
  }
  else
  {
    double v1 = (double)(info.numer / info.denom);
  }
  qword_D7450 = *(void *)&v1;
}

void sub_38740(id a1)
{
  os_log_t v1 = os_log_create("com.apple.batteryui", "graph");
  if (!v1)
  {
    os_log_t v1 = (os_log_t)&_os_log_default;
    id v2 = &_os_log_default;
  }
  uint64_t v3 = (void *)qword_D7458;
  qword_D7458 = (uint64_t)v1;
}

void sub_387F4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.batteryui", "");
  if (!v1)
  {
    os_log_t v1 = (os_log_t)&_os_log_default;
    id v2 = &_os_log_default;
  }
  uint64_t v3 = (void *)qword_D7468;
  qword_D7468 = (uint64_t)v1;
}

void sub_388A8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.batteryui.health", "");
  if (!v1)
  {
    os_log_t v1 = (os_log_t)&_os_log_default;
    id v2 = &_os_log_default;
  }
  uint64_t v3 = (void *)qword_D7478;
  qword_D7478 = (uint64_t)v1;
}

void sub_38A0C(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateComponentsFormatter);
  id v2 = (void *)qword_D7490;
  qword_D7490 = (uint64_t)v1;

  [(id)qword_D7490 setUnitsStyle:1];
  [(id)qword_D7490 setIncludesApproximationPhrase:0];
  [(id)qword_D7490 setIncludesTimeRemainingPhrase:0];
  uint64_t v3 = (void *)qword_D7490;

  [v3 setAllowedUnits:32];
}

void sub_38E24(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 8u);
}

void sub_3A630(uint64_t a1, void *a2)
{
  id v15 = a2;
  uint64_t v3 = +[NSString stringWithFormat:@"%@/%@.daemons.plist", @"Library/Logs/BatteryUIDemos", *(void *)(a1 + 32)];
  id v4 = +[NSString stringWithFormat:@"%@/%@.plist", @"Library/Logs/BatteryUIDemos", *(void *)(a1 + 32)];
  int v5 = *(_DWORD *)(a1 + 48);
  id v6 = [*(id *)(a1 + 40) currentDictionary];
  id v7 = v6;
  if (v5 == 2)
  {
    unsigned int v8 = [v6 writeToFile:v3 atomically:1];

    id v9 = v4;
  }
  else
  {
    unsigned int v8 = [v6 writeToFile:v4 atomically:1];

    id v9 = v3;
  }
  if (v15) {
    v8 &= [v15 writeToFile:v9 atomically:1];
  }
  uint64_t v10 = objc_msgSend(*(id *)(a1 + 40), "activityIndicator", v9);
  [v10 stopAnimating];

  id v11 = [*(id *)(a1 + 40) activityIndicator];
  [v11 removeFromSuperview];

  id v12 = objc_alloc((Class)UIAlertView);
  if (v8) {
    CFStringRef v13 = @"Success!";
  }
  else {
    CFStringRef v13 = @"Failed to create demo";
  }
  id v14 = [v12 initWithTitle:0 message:v13 delegate:0 cancelButtonTitle:@"OK" otherButtonTitles:0];
  [v14 show];
}

NSBundle *BatteryUIResourceBundle()
{
  uint64_t v0 = objc_opt_class();

  return +[NSBundle bundleForClass:v0];
}

id BatteryUILocalization(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle bundleForClass:objc_opt_class()];
  uint64_t v3 = [v2 localizedStringForKey:v1 value:&stru_C3A18 table:@"BatteryUI-longbeach"];

  if ([v3 isEqualToString:v1])
  {
    id v4 = +[NSBundle bundleForClass:objc_opt_class()];
    int v5 = [v4 localizedStringForKey:v1 value:&stru_C3A18 table:@"BatteryUI-lotx"];

    if ([v5 isEqualToString:v1])
    {
      id v6 = +[NSBundle bundleForClass:objc_opt_class()];
      id v7 = [v6 localizedStringForKey:v1 value:&stru_C3A18 table:@"BatteryUI"];

      goto LABEL_7;
    }
    id v8 = v5;
  }
  else
  {
    id v8 = v3;
  }
  id v7 = v8;
  int v5 = v8;
LABEL_7:

  return v7;
}

id BUILogCommon()
{
  if (qword_D74D0 != -1) {
    dispatch_once(&qword_D74D0, &stru_BF718);
  }
  uint64_t v0 = (void *)qword_D74C8;

  return v0;
}

void sub_3ABE8(id a1)
{
  mach_timebase_info info = 0;
  if (mach_timebase_info(&info))
  {
    _os_assumes_log();
    double v1 = 1.0;
  }
  else
  {
    double v1 = (double)(info.numer / info.denom);
  }
  qword_D74A0 = *(void *)&v1;
}

void sub_3ACE8(id a1)
{
  uint64_t v5 = 1;
  double v1 = (void *)container_create_or_lookup_system_group_paths();
  if (v1)
  {
    id v2 = _CFXPCCreateCFObjectFromXPCObject();
    uint64_t v3 = [v2 objectForKeyedSubscript:@"systemgroup.com.apple.powerlog"];
    id v4 = (void *)qword_D74A8;
    qword_D74A8 = v3;
  }
  else
  {
    id v2 = BUILogCommon();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
      sub_8EEB0(&v5, v2);
    }
  }
}

void sub_3ADCC(id a1)
{
  id v1 = +[PLBatteryUIUtilities getDefaultValueForKey:@"BUI_DEMO_MODE"];
  byte_D74C0 = [v1 BOOLValue];
}

void sub_3B3E4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.batteryui", "");
  id v2 = (void *)qword_D74C8;
  qword_D74C8 = (uint64_t)v1;

  if (!qword_D74C8)
  {
    objc_storeStrong((id *)&qword_D74C8, &_os_log_default);
  }
}

id BUILogCharts()
{
  if (qword_D74E0 != -1) {
    dispatch_once(&qword_D74E0, &stru_BF738);
  }
  uint64_t v0 = (void *)qword_D74D8;

  return v0;
}

void sub_3B4AC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.batteryui", "charts");
  id v2 = (void *)qword_D74D8;
  qword_D74D8 = (uint64_t)v1;

  if (!qword_D74D8)
  {
    objc_storeStrong((id *)&qword_D74D8, &_os_log_default);
  }
}

id BUILogLoadTimes()
{
  if (qword_D74F0 != -1) {
    dispatch_once(&qword_D74F0, &stru_BF758);
  }
  uint64_t v0 = (void *)qword_D74E8;

  return v0;
}

void sub_3B574(id a1)
{
  os_log_t v1 = os_log_create("com.apple.batteryui", "BUILoadTime");
  id v2 = (void *)qword_D74E8;
  qword_D74E8 = (uint64_t)v1;

  if (!qword_D74E8)
  {
    objc_storeStrong((id *)&qword_D74E8, &_os_log_default);
  }
}

void sub_3B714(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_D74F8;
  qword_D74F8 = (uint64_t)v1;

  uint64_t v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_D74F8 setLocale:v3];

  id v4 = +[NSCalendar autoupdatingCurrentCalendar];
  [(id)qword_D74F8 setCalendar:v4];

  uint64_t v5 = (void *)qword_D74F8;

  [v5 setLocalizedDateFormatFromTemplate:@"j"];
}

void sub_3B84C(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_D7508;
  qword_D7508 = (uint64_t)v1;

  uint64_t v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_D7508 setLocale:v3];

  id v4 = +[NSCalendar autoupdatingCurrentCalendar];
  [(id)qword_D7508 setCalendar:v4];

  uint64_t v5 = (void *)qword_D7508;

  [v5 setLocalizedDateFormatFromTemplate:@"jm"];
}

void sub_3B984(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_D7518;
  qword_D7518 = (uint64_t)v1;

  uint64_t v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_D7518 setLocale:v3];

  id v4 = +[NSCalendar autoupdatingCurrentCalendar];
  [(id)qword_D7518 setCalendar:v4];

  uint64_t v5 = (void *)qword_D7518;

  [v5 setLocalizedDateFormatFromTemplate:@"MMMM d"];
}

void sub_3BABC(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_D7528;
  qword_D7528 = (uint64_t)v1;

  uint64_t v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_D7528 setLocale:v3];

  id v4 = +[NSCalendar autoupdatingCurrentCalendar];
  [(id)qword_D7528 setCalendar:v4];

  uint64_t v5 = (void *)qword_D7528;

  [v5 setLocalizedDateFormatFromTemplate:@"MMMM d jm"];
}

void sub_3BBE8(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateComponentsFormatter);
  id v2 = (void *)qword_D7538;
  qword_D7538 = (uint64_t)v1;

  [(id)qword_D7538 setAllowedUnits:96];
  [(id)qword_D7538 setUnitsStyle:3];
  id v3 = +[NSCalendar autoupdatingCurrentCalendar];
  [(id)qword_D7538 setCalendar:v3];
}

CFStringRef moveableBatteryGraphErrorString(int a1)
{
  CFStringRef v1 = @"Not Enough Data Points";
  if (a1 != 2) {
    CFStringRef v1 = 0;
  }
  if (a1 == 1) {
    return @"Negative Power Value";
  }
  else {
    return v1;
  }
}

int64_t sub_3C684(id a1, id a2, id a3)
{
  id v4 = a3;
  uint64_t v5 = [a2 objectAtIndexedSubscript:0];
  id v6 = [v4 objectAtIndexedSubscript:0];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

uint64_t internalBuild()
{
  if (qword_D7550 != -1) {
    dispatch_once(&qword_D7550, &stru_BF838);
  }
  return byte_D7548;
}

void sub_3DC38(id a1)
{
  CFBooleanRef v1 = (const __CFBoolean *)MGCopyAnswer();
  byte_D7548 = CFBooleanGetValue(v1) != 0;

  CFRelease(v1);
}

BOOL isTapToRadarEnabled()
{
  CFPreferencesAppSynchronize(@"com.apple.TapToRadar");
  Boolean keyExistsAndHasValidFormat = 0;
  if (CFPreferencesGetAppBooleanValue(@"SBIconVisibility", @"com.apple.TapToRadar", &keyExistsAndHasValidFormat))
  {
    BOOL v0 = keyExistsAndHasValidFormat == 0;
  }
  else
  {
    BOOL v0 = 1;
  }
  return !v0;
}

uint64_t sub_3E258(char a1)
{
  id v1 = objc_msgSend(self, *off_BFEA0[a1]);

  return sub_8FD60();
}

BOOL sub_3E2B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_3E2C4()
{
  Swift::UInt v1 = *v0;
  sub_905D0();
  sub_905E0(v1);
  return sub_905F0();
}

void sub_3E30C()
{
  sub_905E0(*v0);
}

Swift::Int sub_3E338()
{
  Swift::UInt v1 = *v0;
  sub_905D0();
  sub_905E0(v1);
  return sub_905F0();
}

double sub_3E37C@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_4293C(&qword_D52A0, (void (*)(uint64_t))type metadata accessor for ChargingStatusViewModel);
  sub_8F240();
  swift_release();
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 64);
  char v4 = *(unsigned char *)(v1 + 72);
  char v5 = *(unsigned char *)(v1 + 73);
  double result = *(double *)(v1 + 80);
  char v7 = *(unsigned char *)(v1 + 88);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 56);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 17) = v5;
  *(double *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 32) = v7;
  return result;
}

double sub_3E460@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_4293C(&qword_D52A0, (void (*)(uint64_t))type metadata accessor for ChargingStatusViewModel);
  sub_8F240();
  swift_release();
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 64);
  char v5 = *(unsigned char *)(v3 + 72);
  char v6 = *(unsigned char *)(v3 + 73);
  double result = *(double *)(v3 + 80);
  char v8 = *(unsigned char *)(v3 + 88);
  *(unsigned char *)a2 = *(unsigned char *)(v3 + 56);
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 17) = v6;
  *(double *)(a2 + 24) = result;
  *(unsigned char *)(a2 + 32) = v8;
  return result;
}

uint64_t sub_3E544()
{
  return swift_release();
}

uint64_t type metadata accessor for ChargingStatusViewModel()
{
  uint64_t result = qword_D7700;
  if (!qword_D7700) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3E66C()
{
  swift_getKeyPath();
  sub_4293C(&qword_D52A0, (void (*)(uint64_t))type metadata accessor for ChargingStatusViewModel);
  sub_8F240();
  swift_release();
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_3E730@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_4293C(&qword_D52A0, (void (*)(uint64_t))type metadata accessor for ChargingStatusViewModel);
  sub_8F240();
  swift_release();
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 104);
  *a2 = *(void *)(v3 + 96);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_3E7F0()
{
  return swift_release();
}

uint64_t sub_3E8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_3E938()
{
  return sub_3E8D4(v0[2], v0[3], v0[4]);
}

void *sub_3E968()
{
  swift_getKeyPath();
  sub_4293C(&qword_D52A0, (void (*)(uint64_t))type metadata accessor for ChargingStatusViewModel);
  sub_8F240();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 112);
  id v2 = v1;
  return v1;
}

id sub_3EA10@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_4293C(&qword_D52A0, (void (*)(uint64_t))type metadata accessor for ChargingStatusViewModel);
  sub_8F240();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 112);
  *a2 = v4;

  return v4;
}

uint64_t sub_3EAC8(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_4293C(&qword_D52A0, (void (*)(uint64_t))type metadata accessor for ChargingStatusViewModel);
  id v2 = v1;
  sub_8F230();

  return swift_release();
}

uint64_t sub_3EBA4(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_3EBE4(a1);
  return v2;
}

uint64_t sub_3EBE4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_3ED90(&qword_D52A8);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v1 + 56) = 1;
  *(void *)(v1 + 64) = 0;
  *(_WORD *)(v1 + 72) = 0;
  *(void *)(v1 + 80) = 0;
  *(unsigned char *)(v1 + 88) = 0;
  *(void *)(v1 + 96) = 0;
  *(void *)(v1 + 104) = 0xE000000000000000;
  *(void *)(v1 + 112) = 0;
  sub_8F250();
  char v7 = (void *)(v1 + 16);
  sub_3EDD4(a1, (uint64_t)v7);
  uint64_t v8 = *(void *)(v2 + 40);
  uint64_t v9 = *(void *)(v2 + 48);
  sub_3EE38(v7, v8);
  uint64_t v10 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 8);
  uint64_t v11 = swift_retain();
  v10(v11, &off_BF998, v8, v9);
  swift_release();
  uint64_t v12 = sub_901B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  CFStringRef v13 = (void *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = v2;
  swift_retain();
  sub_3F5C4((uint64_t)v6, (uint64_t)&unk_D52B8, (uint64_t)v13);
  swift_release();
  sub_3F768(a1);
  return v2;
}

uint64_t sub_3ED90(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_3EDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_3EE38(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_3EE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[2] = a4;
  sub_3ED90(&qword_D52A8);
  v4[3] = swift_task_alloc();
  v4[4] = sub_90190();
  v4[5] = sub_90180();
  uint64_t v6 = sub_90170();
  return _swift_task_switch(sub_3EF48, v6, v5);
}

uint64_t sub_3EF48()
{
  uint64_t v1 = v0[3];
  swift_release();
  uint64_t v2 = sub_901B0();
  v0[6] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v0[7] = v4;
  v0[8] = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v4(v1, 1, 1, v2);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v6 = sub_90180();
  char v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  void v7[4] = v5;
  swift_release();
  sub_3F5C4(v1, (uint64_t)&unk_D5460, (uint64_t)v7);
  swift_release();
  return _swift_task_switch(sub_3F094, 0, 0);
}

uint64_t sub_3F094()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[7];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[3];
  v1(v3, 1, 1, v2);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = 0;
  v5[3] = 0;
  v5[4] = v4;
  sub_3F5C4(v3, (uint64_t)&unk_D5468, (uint64_t)v5);
  swift_release();
  v1(v3, 1, 1, v2);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  char v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  void v7[4] = v6;
  sub_3F5C4(v3, (uint64_t)&unk_D5470, (uint64_t)v7);
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_3F208()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_3F234()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_3F2C8;
  return sub_3EE7C((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_3F2C8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_3F3BC()
{
  v1[2] = v0;
  sub_3ED90(&qword_D52A8);
  v1[3] = swift_task_alloc();
  v1[4] = sub_90190();
  v1[5] = sub_90180();
  uint64_t v3 = sub_90170();
  return _swift_task_switch(sub_3F488, v3, v2);
}

uint64_t sub_3F488()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  uint64_t v2 = sub_901B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v4 = sub_90180();
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = &protocol witness table for MainActor;
  v5[4] = v3;
  swift_release();
  sub_3F5C4(v1, (uint64_t)&unk_D52D0, (uint64_t)v5);
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_3F5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_901B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_901A0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_41F54(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_90170();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_3F768(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_3F7B8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_3F7F0()
{
  if (*(void *)(v0 + 8) == 100) {
    return 0x684320796C6C7546;
  }
  else {
    return sub_41CF8(*(unsigned char *)v0);
  }
}

uint64_t sub_3F844()
{
  if (*(void *)(v0 + 8) == 100)
  {
    id v1 = [self systemGreenColor];
    return sub_8FD60();
  }
  else
  {
    char v3 = *(unsigned char *)v0;
    return sub_3E258(v3);
  }
}

uint64_t sub_3F8B0()
{
  if (*(unsigned char *)(v0 + 32))
  {
    id v1 = [self systemYellowColor];
  }
  else
  {
    if (*(uint64_t *)(v0 + 8) >= 21)
    {
      return static Color.primary.getter();
    }
    id v1 = [self systemRedColor];
  }
  id v2 = v1;

  return sub_8FD60();
}

uint64_t sub_3F940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 88) = a4;
  sub_90190();
  *(void *)(v4 + 96) = sub_90180();
  uint64_t v6 = sub_90170();
  return _swift_task_switch(sub_3F9D8, v6, v5);
}

uint64_t sub_3F9D8()
{
  swift_release();
  swift_beginAccess();
  Strong = (void *)swift_weakLoadStrong();
  if (Strong)
  {
    id v2 = Strong;
    char v3 = Strong + 2;
    uint64_t v4 = Strong[5];
    uint64_t v5 = Strong[6];
    sub_3EE38(Strong + 2, v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    uint64_t v7 = v2[5];
    uint64_t v8 = v2[6];
    sub_3EE38(v3, v7);
    unsigned __int8 v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
    uint64_t v10 = v2[5];
    uint64_t v11 = v2[6];
    sub_3EE38(v3, v10);
    char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
    uint64_t v13 = v2[5];
    uint64_t v14 = v2[6];
    sub_3EE38(v3, v13);
    int v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 56))(v13, v14) & 1;
    uint64_t v16 = v2[5];
    uint64_t v17 = v2[6];
    sub_3EE38(v3, v16);
    double v18 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 48))(v16, v17));
    if (v19)
    {
      char v22 = 0;
      double v20 = 0.0;
    }
    else
    {
      double v20 = v18;
      if (((v18 != 0.0) & v9) == 1)
      {
        if (v18 < 15.0)
        {
          if (v15) {
            double v21 = 7.5;
          }
          else {
            double v21 = 5.0;
          }
          uint64_t v24 = v0 + 16;
          char v23 = v18 > v21;
          char v22 = 1;
          goto LABEL_11;
        }
        char v22 = 1;
        char v23 = 2;
LABEL_10:
        uint64_t v24 = v0 + 16;
LABEL_11:
        *(unsigned char *)(v0 + 16) = v23;
        *(void *)(v0 + 24) = v6;
        *(unsigned char *)(v0 + 32) = v22;
        *(unsigned char *)(v0 + 33) = v15;
        *(double *)(v0 + 40) = v20;
        *(unsigned char *)(v0 + 48) = v12 & 1;
        swift_getKeyPath();
        uint64_t v25 = swift_task_alloc();
        *(void *)(v25 + 16) = v2;
        *(void *)(v25 + 24) = v24;
        *(void *)(v0 + 80) = v2;
        sub_4293C(&qword_D52A0, (void (*)(uint64_t))type metadata accessor for ChargingStatusViewModel);
        sub_8F230();
        swift_release();
        swift_release();
        swift_task_dealloc();
        goto LABEL_12;
      }
      char v22 = 0;
    }
    char v23 = 1;
    goto LABEL_10;
  }
LABEL_12:
  __int16 v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_3FCE0()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_3FD0C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_42D84;
  return sub_3F940((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_3FDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[19] = a4;
  uint64_t v5 = sub_8FF10();
  v4[20] = v5;
  v4[21] = *(void *)(v5 - 8);
  v4[22] = swift_task_alloc();
  uint64_t v6 = sub_8FF30();
  v4[23] = v6;
  v4[24] = *(void *)(v6 - 8);
  v4[25] = swift_task_alloc();
  return _swift_task_switch(sub_3FEBC, 0, 0);
}

uint64_t sub_3FEBC()
{
  swift_beginAccess();
  Strong = (void *)swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = Strong[5];
    uint64_t v4 = Strong[6];
    sub_3EE38(Strong + 2, v3);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 72))(v3, v4);
    uint64_t v23 = v0[24];
    uint64_t v24 = v0[25];
    uint64_t v9 = v0[22];
    uint64_t v10 = v0[20];
    uint64_t v21 = v0[21];
    uint64_t v22 = v0[23];
    if (v6)
    {
      uint64_t v11 = v5;
      char v12 = v6;
      uint64_t v13 = v7;
      uint64_t v14 = v8;
      sub_903D0(22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v26._countAndFlagsBits = v11;
      v26._object = v12;
      sub_90060(v26);
      swift_bridgeObjectRelease();
      v27._countAndFlagsBits = 8250;
      v27._object = (void *)0xE200000000000000;
      sub_90060(v27);
      swift_bridgeObjectRetain();
      v28._countAndFlagsBits = v13;
      v28._object = v14;
      sub_90060(v28);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_4282C();
      int v15 = (void *)sub_90280();
      uint64_t v16 = (void *)swift_allocObject();
      v16[2] = v2;
      v16[3] = 0xD000000000000010;
      v16[4] = 0x80000000000A3440;
      v0[13] = v16;
      v0[12] = sub_42A54;
      v0[8] = _NSConcreteStackBlock;
      v0[9] = 1107296256;
      v0[10] = sub_402AC;
      v0[11] = &unk_BFDD8;
      uint64_t v17 = _Block_copy(v0 + 8);
      swift_retain();
      uint64_t v18 = v24;
      sub_8FF20();
      v0[18] = &_swiftEmptyArrayStorage;
    }
    else
    {
      sub_4282C();
      int v15 = (void *)sub_90280();
      v0[7] = v2;
      v0[6] = sub_4286C;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_402AC;
      v0[5] = &unk_BFD88;
      uint64_t v17 = _Block_copy(v0 + 2);
      swift_retain();
      uint64_t v18 = v24;
      sub_8FF20();
      v0[17] = &_swiftEmptyArrayStorage;
    }
    sub_4293C(&qword_D5440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_3ED90(&qword_D5448);
    sub_42984();
    sub_90390();
    sub_90290();
    _Block_release(v17);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v18, v22);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  char v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_402AC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_402F0()
{
  uint64_t v1 = v0;
  sub_4AFAC((uint64_t (*)(void))sub_40530);
  uint64_t v2 = self;
  aBlock[4] = sub_41E3C;
  aBlock[5] = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_40990;
  aBlock[3] = &unk_BF8D0;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v4 = [v2 scheduledTimerWithTimeInterval:1 repeats:v3 block:1.0];
  _Block_release(v3);
  swift_getKeyPath();
  aBlock[0] = v1;
  sub_4293C(&qword_D52A0, (void (*)(uint64_t))type metadata accessor for ChargingStatusViewModel);
  sub_8F230();

  swift_release();
  swift_getKeyPath();
  aBlock[0] = v1;
  sub_8F240();
  swift_release();
  uint64_t v5 = *(void **)(v1 + 112);
  if (v5)
  {
    uint64_t v6 = self;
    id v7 = v5;
    id v8 = [v6 mainRunLoop];
    [v8 addTimer:v7 forMode:NSRunLoopCommonModes];
  }
}

unint64_t sub_40530()
{
  return 0xD000000000000017;
}

uint64_t sub_4054C(uint64_t a1)
{
  sub_3ED90(&qword_D52A8);
  __chkstk_darwin();
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_901B0();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  void v6[2] = 0;
  v6[3] = 0;
  v6[4] = a1;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  swift_retain();
  if (v7 == 1)
  {
    sub_41F54((uint64_t)v3);
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  else
  {
    sub_901A0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v8 = sub_90170();
      uint64_t v9 = v10;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v9 = 0;
    }
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = &unk_D5410;
  *(void *)(v11 + 24) = v6;
  if (v9 | v8)
  {
    v13[0] = 0;
    v13[1] = 0;
    v13[2] = v8;
    v13[3] = v9;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_40788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[2] = a4;
  sub_3ED90(&qword_D52A8);
  v4[3] = swift_task_alloc();
  v4[4] = sub_90190();
  v4[5] = sub_90180();
  uint64_t v6 = sub_90170();
  return _swift_task_switch(sub_40854, v6, v5);
}

uint64_t sub_40854()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  uint64_t v2 = sub_901B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v4 = sub_90180();
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = &protocol witness table for MainActor;
  v5[4] = v3;
  swift_release();
  sub_3F5C4(v1, (uint64_t)&unk_D5420, (uint64_t)v5);
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

void sub_40990(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

unint64_t sub_409F8()
{
  return 0xD000000000000017;
}

uint64_t sub_40A14()
{
  sub_3F768((uint64_t)(v0 + 2));
  swift_bridgeObjectRelease();

  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC14BatteryUsageUI23ChargingStatusViewModel___observationRegistrar;
  uint64_t v2 = sub_8F260();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *((unsigned int *)*v0 + 12);
  uint64_t v4 = *((unsigned __int16 *)*v0 + 26);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_40ACC()
{
  sub_3ED90(&qword_D52A8);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v6 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_901B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)swift_allocObject();
  void v4[2] = 0;
  v4[3] = 0;
  v4[4] = v3;
  sub_3F5C4((uint64_t)v1, (uint64_t)&unk_D53F0, (uint64_t)v4);
  return swift_release();
}

uint64_t sub_40BE0()
{
  return sub_40C80((uint64_t)&unk_BF908, (uint64_t)&unk_BF930, (uint64_t)&unk_D52F0);
}

uint64_t sub_40C30()
{
  return sub_40C80((uint64_t)&unk_BF958, (uint64_t)&unk_BF980, (uint64_t)&unk_D5310);
}

uint64_t sub_40C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  sub_3ED90(&qword_D52A8);
  __chkstk_darwin();
  int v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_901B0();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v5;
  int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  swift_retain();
  if (v11 == 1)
  {
    sub_41F54((uint64_t)v7);
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  else
  {
    sub_901A0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (v10[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_90170();
      uint64_t v13 = v14;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v13 = 0;
    }
  }
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = v10;
  if (v13 | v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    v17[2] = v12;
    v17[3] = v13;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_40EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 88) = a4;
  sub_3ED90(&qword_D52A8);
  *(void *)(v4 + 96) = swift_task_alloc();
  return _swift_task_switch(sub_40F40, 0, 0);
}

uint64_t sub_40F40()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[13] = Strong;
  if (Strong)
  {
    v0[14] = sub_90190();
    v0[15] = sub_90180();
    uint64_t v3 = sub_90170();
    return _swift_task_switch(sub_4103C, v3, v2);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_4103C()
{
  uint64_t v1 = v0[12];
  swift_release();
  uint64_t v2 = sub_901B0();
  v0[16] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v0[17] = v4;
  v0[18] = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v4(v1, 1, 1, v2);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v6 = sub_90180();
  int v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  void v7[4] = v5;
  swift_release();
  sub_3F5C4(v1, (uint64_t)&unk_D5428, (uint64_t)v7);
  swift_release();
  return _swift_task_switch(sub_41188, 0, 0);
}

uint64_t sub_41188()
{
  *(void *)(v0 + 152) = sub_90180();
  uint64_t v2 = sub_90170();
  return _swift_task_switch(sub_41214, v2, v1);
}

uint64_t sub_41214()
{
  uint64_t v1 = v0[13];
  swift_release();
  swift_getKeyPath();
  v0[8] = v1;
  sub_4293C(&qword_D52A0, (void (*)(uint64_t))type metadata accessor for ChargingStatusViewModel);
  sub_8F240();
  swift_release();
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 72) == 1)
  {
    sub_402F0();
  }
  else
  {
    uint64_t v2 = v0[13];
    sub_4AFAC((uint64_t (*)(void))sub_409F8);
    swift_getKeyPath();
    v0[9] = v2;
    sub_8F240();
    swift_release();
    [*(id *)(v2 + 112) invalidate];
    swift_getKeyPath();
    uint64_t v3 = swift_task_alloc();
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = 0;
    v0[10] = v2;
    sub_8F230();
    swift_release();
    swift_task_dealloc();
  }
  return _swift_task_switch(sub_41404, 0, 0);
}

uint64_t sub_41404()
{
  uint64_t v1 = *(void *)(v0 + 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 136))(v1, 1, 1, *(void *)(v0 + 128));
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = (void *)swift_allocObject();
  void v3[2] = 0;
  v3[3] = 0;
  v3[4] = v2;
  sub_3F5C4(v1, (uint64_t)&unk_D5430, (uint64_t)v3);
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_41630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[2] = a4;
  sub_3ED90(&qword_D52A8);
  v4[3] = swift_task_alloc();
  v4[4] = sub_90190();
  v4[5] = sub_90180();
  uint64_t v6 = sub_90170();
  return _swift_task_switch(sub_416FC, v6, v5);
}

uint64_t sub_416FC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  uint64_t v2 = sub_901B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v4 = sub_90180();
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = &protocol witness table for MainActor;
  v5[4] = v3;
  swift_release();
  sub_3F5C4(v1, (uint64_t)&unk_D5400, (uint64_t)v5);
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_41874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[2] = a4;
  sub_3ED90(&qword_D52A8);
  v4[3] = swift_task_alloc();
  v4[4] = sub_90190();
  v4[5] = sub_90180();
  uint64_t v6 = sub_90170();
  return _swift_task_switch(sub_41940, v6, v5);
}

uint64_t sub_41940()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  uint64_t v2 = sub_901B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v4 = sub_90180();
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = &protocol witness table for MainActor;
  v5[4] = v3;
  swift_release();
  sub_3F5C4(v1, (uint64_t)&unk_D53F8, (uint64_t)v5);
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_41AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  sub_40C80(a3, a4, a5);

  return swift_release();
}

uint64_t sub_41B24(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_41C00;
  return v6(a1);
}

uint64_t sub_41C00()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_41CF8(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      v4._countAndFlagsBits = 0x676E696772616843;
      v4._object = (void *)0xEB00000000202D20;
      goto LABEL_6;
    case 2:
      sub_903D0(19);
      uint64_t v3 = "Fast Charging - ";
      goto LABEL_5;
    case 3:
      return result;
    default:
      sub_903D0(19);
      uint64_t v3 = "Slow Charging - ";
LABEL_5:
      v4._object = (void *)((unint64_t)(v3 - 32) | 0x8000000000000000);
      v4._countAndFlagsBits = 0xD000000000000010;
LABEL_6:
      sub_90060(v4);
      sub_901D0();
      v5._countAndFlagsBits = 87;
      v5._object = (void *)0xE100000000000000;
      sub_90060(v5);
      return 0;
  }
}

uint64_t sub_41E3C()
{
  return sub_4054C(v0);
}

uint64_t sub_41E44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_41E54()
{
  return swift_release();
}

void sub_41E5C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v1 + 112);
  *(void *)(v1 + 112) = v2;
  id v4 = v2;
}

uint64_t sub_41E94()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_41EC0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_42D84;
  return sub_41630((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_41F54(uint64_t a1)
{
  uint64_t v2 = sub_3ED90(&qword_D52A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_41FB4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_42D84;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_D52F8 + dword_D52F8);
  return v6(a1, v4);
}

uint64_t sub_4206C()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_42098()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_42D84;
  return sub_41874((uint64_t)v3, v4, v5, v2);
}

unint64_t sub_42130()
{
  unint64_t result = qword_D5320;
  if (!qword_D5320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5320);
  }
  return result;
}

uint64_t sub_42184()
{
  return type metadata accessor for ChargingStatusViewModel();
}

uint64_t sub_4218C()
{
  uint64_t result = sub_8F260();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for ChargingStatusViewModel.ChargingRateType(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ChargingStatusViewModel.ChargingRateType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ChargingStatusViewModel.ChargingRateType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x423B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_423D8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_423E4(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ChargingStatusViewModel.ChargingRateType()
{
  return &type metadata for ChargingStatusViewModel.ChargingRateType;
}

ValueMetadata *type metadata accessor for ChargingStatusViewModel.ChargingRateType.Constants()
{
  return &type metadata for ChargingStatusViewModel.ChargingRateType.Constants;
}

ValueMetadata *type metadata accessor for ChargingStatusViewModel.Constants()
{
  return &type metadata for ChargingStatusViewModel.Constants;
}

uint64_t initializeBufferWithCopyOfBuffer for ChargingStatusViewModel.ChargingStatusViewData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithCopy for ChargingStatusViewModel.ChargingStatusViewData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ChargingStatusViewModel.ChargingStatusViewData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ChargingStatusViewModel.ChargingStatusViewData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChargingStatusViewModel.ChargingStatusViewData()
{
  return &type metadata for ChargingStatusViewModel.ChargingStatusViewData;
}

uint64_t sub_42510()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_4253C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unsigned int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_42D84;
  return sub_40EAC((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_425D0()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_425FC()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_42628()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_42654()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_42680()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unsigned int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_42D84;
  return sub_40788((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_42714()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_42740()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_4276C()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_42798()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unsigned int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_42D84;
  return sub_3FDA0((uint64_t)v3, v4, v5, v2);
}

unint64_t sub_4282C()
{
  unint64_t result = qword_D5438;
  if (!qword_D5438)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_D5438);
  }
  return result;
}

uint64_t sub_4286C()
{
  return swift_release();
}

uint64_t sub_4293C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_42984()
{
  unint64_t result = qword_D5450;
  if (!qword_D5450)
  {
    sub_429E0(&qword_D5448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5450);
  }
  return result;
}

uint64_t sub_429E0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_42A28()
{
  return sub_42CCC((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_42A54()
{
  return swift_bridgeObjectRelease();
}

double sub_42B40()
{
  *(void *)&double result = sub_42D24().n128_u64[0];
  return result;
}

uint64_t sub_42B58()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_42B90(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_3F2C8;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_D52F8 + dword_D52F8);
  return v6(a1, v4);
}

uint64_t sub_42C48()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_42C74()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_42CA0()
{
  return sub_42CCC((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_42CCC(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 32));

  return _swift_deallocObject(v2, 40, 7);
}

__n128 sub_42D24()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  __n128 result = *(__n128 *)v1;
  long long v4 = *(_OWORD *)(v1 + 16);
  *(unsigned char *)(v2 + 88) = *(unsigned char *)(v1 + 32);
  *(_OWORD *)(v2 + 72) = v4;
  *(__n128 *)(v2 + 56) = result;
  return result;
}

void sub_42DA4()
{
}

uint64_t sub_42DBC()
{
  return sub_3E938();
}

double sub_42DD4()
{
  sub_8FB40();
  sub_8FB10();
  sub_8FB30();
  sub_8FB20();
  sub_8FB20();
  sub_8FB20();
  sub_8FB30();
  sub_8FB30();
  sub_8FB20();
  sub_8FB20();
  sub_8FB30();
  sub_8FB20();
  sub_8FB20();
  sub_8FB20();
  sub_8FB30();
  sub_8FB30();
  sub_8FB20();
  sub_8FB20();
  sub_8FB00();
  v22[0] = v19;
  v22[1] = v20;
  char v23 = v21;
  sub_431DC((uint64_t)v22, (uint64_t)v25);
  sub_43250((uint64_t)v25, (void (*)(void, void, void, void, void))sub_431C4);
  sub_8FAF0();
  CGFloat v1 = v0;
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  sub_43250((uint64_t)v22, (void (*)(void, void, void, void, void))sub_43238);
  sub_8FB40();
  CGAffineTransformMakeScale(&v24, 1.0, 1.0);
  long long v13 = *(_OWORD *)&v24.c;
  long long v14 = *(_OWORD *)&v24.a;
  CGFloat tx = v24.tx;
  CGFloat ty = v24.ty;
  sub_43250((uint64_t)v25, (void (*)(void, void, void, void, void))sub_431C4);
  v26.origin.x = v1;
  v26.origin.y = v3;
  v26.size.width = v5;
  v26.size.height = v7;
  CGFloat v10 = -CGRectGetMidX(v26);
  v27.origin.x = v1;
  v27.origin.y = v3;
  v27.size.width = v5;
  v27.size.height = v7;
  CGFloat MidY = CGRectGetMidY(v27);
  *(_OWORD *)&v24.a = v14;
  *(_OWORD *)&v24.c = v13;
  v24.CGFloat tx = tx;
  v24.CGFloat ty = ty;
  CGAffineTransformTranslate(&v15, &v24, v10, -MidY);
  CGAffineTransform v24 = v15;
  sub_8FAC0();
  sub_43250((uint64_t)v22, (void (*)(void, void, void, void, void))sub_43238);
  sub_43250((uint64_t)v22, (void (*)(void, void, void, void, void))sub_43238);
  double result = *(double *)&v16;
  xmmword_DA580 = v16;
  *(_OWORD *)&qword_DA590 = v17;
  byte_DA5A0 = v18;
  return result;
}

uint64_t sub_431C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_431DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_43238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_release();
  }
  return result;
}

uint64_t sub_43250(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

double sub_43290@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_8FB40();
  if (qword_D7710 != -1) {
    swift_once();
  }
  swift_beginAccess();
  v16[0] = xmmword_DA580;
  v16[1] = *(_OWORD *)&qword_DA590;
  char v17 = byte_DA5A0;
  sub_431DC((uint64_t)v16, (uint64_t)v19);
  sub_43250((uint64_t)v19, (void (*)(void, void, void, void, void))sub_431C4);
  v20.origin.x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  CGFloat MidX = CGRectGetMidX(v20);
  v21.origin.x = a2;
  v21.origin.y = a3;
  v21.size.width = a4;
  v21.size.height = a5;
  CGFloat MidY = CGRectGetMidY(v21);
  CGAffineTransformMakeTranslation(&v18, MidX, MidY);
  sub_8FAC0();
  sub_43250((uint64_t)v16, (void (*)(void, void, void, void, void))sub_43238);
  double result = *(double *)&v13;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v14;
  *(unsigned char *)(a1 + 32) = v15;
  return result;
}

uint64_t (*sub_4340C(void *a1))()
{
  double v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_8F6D0();
  return sub_4347C;
}

uint64_t sub_43484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_44F94();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_434E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_44F94();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_4354C()
{
  return sub_8FCB0();
}

uint64_t sub_43568(uint64_t a1)
{
  unint64_t v2 = sub_44F94();

  return Shape.body.getter(a1, v2);
}

double sub_435B4()
{
  return 0.0;
}

uint64_t sub_435C8()
{
  if (qword_D7710 != -1) {
    swift_once();
  }
  swift_beginAccess();
  xmmword_DA5A8 = xmmword_DA580;
  qword_DA5B8 = qword_DA590;
  unk_DA5C0 = qword_DA598;
  byte_DA5C8 = byte_DA5A0;
  return sub_431C4(xmmword_DA580, *((uint64_t *)&xmmword_DA580 + 1), qword_DA590, qword_DA598, byte_DA5A0);
}

double sub_4365C@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_44860((uint64_t)v8, a2, a3, a4, a5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_436A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_44FEC();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_43704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_44FEC();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_43768(uint64_t a1)
{
  unint64_t v2 = sub_44FEC();

  return Shape.body.getter(a1, v2);
}

double sub_437B4()
{
  sub_8FB40();
  sub_8FB10();
  sub_8FB20();
  sub_8FAE0();
  sub_8FAE0();
  sub_8FB20();
  sub_8FAE0();
  sub_8FAE0();
  sub_8FB20();
  sub_8FAE0();
  sub_8FAE0();
  sub_8FB20();
  sub_8FAE0();
  sub_8FAE0();
  sub_8FB00();
  sub_8FB10();
  sub_8FB20();
  sub_8FAE0();
  sub_8FAE0();
  sub_8FB20();
  sub_8FAE0();
  sub_8FAE0();
  sub_8FB20();
  sub_8FAE0();
  sub_8FAE0();
  sub_8FB20();
  sub_8FAE0();
  sub_8FAE0();
  sub_8FB00();
  v22[0] = v19;
  v22[1] = v20;
  char v23 = v21;
  sub_431DC((uint64_t)v22, (uint64_t)v25);
  sub_43250((uint64_t)v25, (void (*)(void, void, void, void, void))sub_431C4);
  sub_8FAF0();
  CGFloat v1 = v0;
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  sub_43250((uint64_t)v22, (void (*)(void, void, void, void, void))sub_43238);
  sub_8FB40();
  CGAffineTransformMakeScale(&v24, 0.692, 0.692);
  long long v13 = *(_OWORD *)&v24.c;
  long long v14 = *(_OWORD *)&v24.a;
  CGFloat tx = v24.tx;
  CGFloat ty = v24.ty;
  sub_43250((uint64_t)v25, (void (*)(void, void, void, void, void))sub_431C4);
  v26.origin.x = v1;
  v26.origin.y = v3;
  v26.size.width = v5;
  v26.size.height = v7;
  CGFloat v10 = -CGRectGetMidX(v26);
  v27.origin.x = v1;
  v27.origin.y = v3;
  v27.size.width = v5;
  v27.size.height = v7;
  CGFloat MidY = CGRectGetMidY(v27);
  *(_OWORD *)&v24.a = v14;
  *(_OWORD *)&v24.c = v13;
  v24.CGFloat tx = tx;
  v24.CGFloat ty = ty;
  CGAffineTransformTranslate(&v15, &v24, v10, -MidY);
  CGAffineTransform v24 = v15;
  sub_8FAC0();
  sub_43250((uint64_t)v22, (void (*)(void, void, void, void, void))sub_43238);
  sub_43250((uint64_t)v22, (void (*)(void, void, void, void, void))sub_43238);
  double result = *(double *)&v16;
  xmmword_DA5D0 = v16;
  *(_OWORD *)&qword_DA5E0 = v17;
  byte_DA5F0 = v18;
  return result;
}

double sub_43C50@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_8FB40();
  if (qword_D7720 != -1) {
    swift_once();
  }
  swift_beginAccess();
  v16[0] = xmmword_DA5D0;
  v16[1] = *(_OWORD *)&qword_DA5E0;
  char v17 = byte_DA5F0;
  sub_431DC((uint64_t)v16, (uint64_t)v19);
  sub_43250((uint64_t)v19, (void (*)(void, void, void, void, void))sub_431C4);
  v20.origin.x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  CGFloat MidX = CGRectGetMidX(v20);
  v21.origin.x = a2;
  v21.origin.y = a3;
  v21.size.width = a4;
  v21.size.height = a5;
  CGFloat MidY = CGRectGetMidY(v21);
  CGAffineTransformMakeTranslation(&v18, MidX, MidY);
  sub_8FAC0();
  sub_43250((uint64_t)v16, (void (*)(void, void, void, void, void))sub_43238);
  double result = *(double *)&v13;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v14;
  *(unsigned char *)(a1 + 32) = v15;
  return result;
}

uint64_t sub_43DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_451F4();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_43E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_451F4();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_43E88(uint64_t a1)
{
  unint64_t v2 = sub_451F4();

  return Shape.body.getter(a1, v2);
}

uint64_t sub_43ED4()
{
  if (qword_D7720 != -1) {
    swift_once();
  }
  swift_beginAccess();
  xmmword_DA5F8 = xmmword_DA5D0;
  qword_DA608 = qword_DA5E0;
  unk_DA610 = qword_DA5E8;
  byte_DA618 = byte_DA5F0;
  return sub_431C4(xmmword_DA5D0, *((uint64_t *)&xmmword_DA5D0 + 1), qword_DA5E0, qword_DA5E8, byte_DA5F0);
}

double sub_43F68@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_44A60((uint64_t)v8, a2, a3, a4, a5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_43FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_4524C();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_44010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_4524C();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_44074(uint64_t a1)
{
  unint64_t v2 = sub_4524C();

  return Shape.body.getter(a1, v2);
}

double sub_440C0()
{
  sub_8FB40();
  sub_8FB10();
  sub_8FAE0();
  sub_8FAE0();
  sub_8FB20();
  sub_8FAE0();
  sub_8FAE0();
  sub_8FB20();
  sub_8FAE0();
  sub_8FAE0();
  sub_8FB20();
  sub_8FAE0();
  sub_8FAE0();
  v17[0] = v14;
  v17[1] = v15;
  char v18 = v16;
  sub_431DC((uint64_t)v17, (uint64_t)v20);
  sub_43250((uint64_t)v20, (void (*)(void, void, void, void, void))sub_431C4);
  sub_8FAF0();
  CGFloat v1 = v0;
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  sub_43250((uint64_t)v17, (void (*)(void, void, void, void, void))sub_43238);
  sub_8FB40();
  sub_43250((uint64_t)v20, (void (*)(void, void, void, void, void))sub_431C4);
  v21.origin.x = v1;
  v21.origin.y = v3;
  v21.size.width = v5;
  v21.size.height = v7;
  CGFloat v8 = -CGRectGetMidX(v21);
  v22.origin.x = v1;
  v22.origin.y = v3;
  v22.size.width = v5;
  v22.size.height = v7;
  CGFloat MidY = CGRectGetMidY(v22);
  CGAffineTransformMakeTranslation(&v19, v8, -MidY);
  sub_8FAC0();
  sub_43250((uint64_t)v17, (void (*)(void, void, void, void, void))sub_43238);
  sub_43250((uint64_t)v17, (void (*)(void, void, void, void, void))sub_43238);
  double result = *(double *)&v11;
  xmmword_DA620 = v11;
  *(_OWORD *)&qword_DA630 = v12;
  byte_DA640 = v13;
  return result;
}

double sub_44390@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_8FB40();
  if (qword_D7730 != -1) {
    swift_once();
  }
  swift_beginAccess();
  v16[0] = xmmword_DA620;
  v16[1] = *(_OWORD *)&qword_DA630;
  char v17 = byte_DA640;
  sub_431DC((uint64_t)v16, (uint64_t)v19);
  sub_43250((uint64_t)v19, (void (*)(void, void, void, void, void))sub_431C4);
  v20.origin.x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  CGFloat MidX = CGRectGetMidX(v20);
  v21.origin.x = a2;
  v21.origin.y = a3;
  v21.size.width = a4;
  v21.size.height = a5;
  CGFloat MidY = CGRectGetMidY(v21);
  CGAffineTransformMakeTranslation(&v18, MidX, MidY);
  sub_8FAC0();
  sub_43250((uint64_t)v16, (void (*)(void, void, void, void, void))sub_43238);
  double result = *(double *)&v13;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v14;
  *(unsigned char *)(a1 + 32) = v15;
  return result;
}

uint64_t sub_44500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_4542C();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_44564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_4542C();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_445C8(uint64_t a1)
{
  unint64_t v2 = sub_4542C();

  return Shape.body.getter(a1, v2);
}

uint64_t sub_44614()
{
  if (qword_D7730 != -1) {
    swift_once();
  }
  swift_beginAccess();
  xmmword_DA648 = xmmword_DA620;
  qword_DA658 = qword_DA630;
  unk_DA660 = qword_DA638;
  byte_DA668 = byte_DA640;
  return sub_431C4(xmmword_DA620, *((uint64_t *)&xmmword_DA620 + 1), qword_DA630, qword_DA638, byte_DA640);
}

double sub_446A8@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_44C60((uint64_t)v8, a2, a3, a4, a5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_446EC()
{
  return Shape.sizeThatFits(_:)();
}

void sub_44704(void *a1)
{
  CGFloat v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_4474C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_454AC();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_447B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_454AC();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_44814(uint64_t a1)
{
  unint64_t v2 = sub_454AC();

  return Shape.body.getter(a1, v2);
}

double sub_44860@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_8FB40();
  if (qword_D7718 != -1) {
    swift_once();
  }
  swift_beginAccess();
  v23[0] = xmmword_DA5A8;
  v23[1] = *(_OWORD *)&qword_DA5B8;
  char v24 = byte_DA5C8;
  sub_431DC((uint64_t)v23, (uint64_t)v26);
  sub_43250((uint64_t)v26, (void (*)(void, void, void, void, void))sub_431C4);
  v28.origin.x = a2;
  v28.origin.y = a3;
  v28.size.width = a4;
  v28.size.height = a5;
  CGFloat MidX = CGRectGetMidX(v28);
  v29.origin.x = a2;
  v29.origin.y = a3;
  v29.size.width = a4;
  v29.size.height = a5;
  CGFloat MidY = CGRectGetMidY(v29);
  CGAffineTransformMakeTranslation(&v25, MidX, MidY);
  sub_8FAC0();
  sub_43250((uint64_t)v23, (void (*)(void, void, void, void, void))sub_43238);
  v21[0] = v14;
  v21[1] = v15;
  char v22 = v16;
  sub_431DC((uint64_t)v21, (uint64_t)v27);
  sub_43250((uint64_t)v27, (void (*)(void, void, void, void, void))sub_431C4);
  sub_8F710();
  sub_8FAD0();
  sub_45688((uint64_t)v17);
  sub_43250((uint64_t)v21, (void (*)(void, void, void, void, void))sub_43238);
  sub_43250((uint64_t)v21, (void (*)(void, void, void, void, void))sub_43238);
  double result = *(double *)&v18;
  long long v13 = v19;
  *(_OWORD *)a1 = v18;
  *(_OWORD *)(a1 + 16) = v13;
  *(unsigned char *)(a1 + 32) = v20;
  return result;
}

double sub_44A60@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_8FB40();
  if (qword_D7728 != -1) {
    swift_once();
  }
  swift_beginAccess();
  v23[0] = xmmword_DA5F8;
  v23[1] = *(_OWORD *)&qword_DA608;
  char v24 = byte_DA618;
  sub_431DC((uint64_t)v23, (uint64_t)v26);
  sub_43250((uint64_t)v26, (void (*)(void, void, void, void, void))sub_431C4);
  v28.origin.x = a2;
  v28.origin.y = a3;
  v28.size.width = a4;
  v28.size.height = a5;
  CGFloat MidX = CGRectGetMidX(v28);
  v29.origin.x = a2;
  v29.origin.y = a3;
  v29.size.width = a4;
  v29.size.height = a5;
  CGFloat MidY = CGRectGetMidY(v29);
  CGAffineTransformMakeTranslation(&v25, MidX, MidY);
  sub_8FAC0();
  sub_43250((uint64_t)v23, (void (*)(void, void, void, void, void))sub_43238);
  v21[0] = v14;
  v21[1] = v15;
  char v22 = v16;
  sub_431DC((uint64_t)v21, (uint64_t)v27);
  sub_43250((uint64_t)v27, (void (*)(void, void, void, void, void))sub_431C4);
  sub_8F710();
  sub_8FAD0();
  sub_45688((uint64_t)v17);
  sub_43250((uint64_t)v21, (void (*)(void, void, void, void, void))sub_43238);
  sub_43250((uint64_t)v21, (void (*)(void, void, void, void, void))sub_43238);
  double result = *(double *)&v18;
  long long v13 = v19;
  *(_OWORD *)a1 = v18;
  *(_OWORD *)(a1 + 16) = v13;
  *(unsigned char *)(a1 + 32) = v20;
  return result;
}

double sub_44C60@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_8FB40();
  if (qword_D7738 != -1) {
    swift_once();
  }
  swift_beginAccess();
  v23[0] = xmmword_DA648;
  v23[1] = *(_OWORD *)&qword_DA658;
  char v24 = byte_DA668;
  sub_431DC((uint64_t)v23, (uint64_t)v26);
  sub_43250((uint64_t)v26, (void (*)(void, void, void, void, void))sub_431C4);
  v28.origin.x = a2;
  v28.origin.y = a3;
  v28.size.width = a4;
  v28.size.height = a5;
  CGFloat MidX = CGRectGetMidX(v28);
  v29.origin.x = a2;
  v29.origin.y = a3;
  v29.size.width = a4;
  v29.size.height = a5;
  CGFloat MidY = CGRectGetMidY(v29);
  CGAffineTransformMakeTranslation(&v25, MidX, MidY);
  sub_8FAC0();
  sub_43250((uint64_t)v23, (void (*)(void, void, void, void, void))sub_43238);
  v21[0] = v14;
  v21[1] = v15;
  char v22 = v16;
  sub_431DC((uint64_t)v21, (uint64_t)v27);
  sub_43250((uint64_t)v27, (void (*)(void, void, void, void, void))sub_431C4);
  sub_8F710();
  sub_8FAD0();
  sub_45688((uint64_t)v17);
  sub_43250((uint64_t)v21, (void (*)(void, void, void, void, void))sub_43238);
  sub_43250((uint64_t)v21, (void (*)(void, void, void, void, void))sub_43238);
  double result = *(double *)&v18;
  long long v13 = v19;
  *(_OWORD *)a1 = v18;
  *(_OWORD *)(a1 + 16) = v13;
  *(unsigned char *)(a1 + 32) = v20;
  return result;
}

unint64_t sub_44E64()
{
  unint64_t result = qword_D5478;
  if (!qword_D5478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5478);
  }
  return result;
}

unint64_t sub_44EBC()
{
  unint64_t result = qword_D5480;
  if (!qword_D5480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5480);
  }
  return result;
}

unint64_t sub_44F14()
{
  unint64_t result = qword_D5488;
  if (!qword_D5488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5488);
  }
  return result;
}

uint64_t sub_44F68()
{
  return sub_455D8(&qword_D5490, &qword_D5498);
}

unint64_t sub_44F94()
{
  unint64_t result = qword_D54A0;
  if (!qword_D54A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D54A0);
  }
  return result;
}

unint64_t sub_44FEC()
{
  unint64_t result = qword_D54A8;
  if (!qword_D54A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D54A8);
  }
  return result;
}

unint64_t sub_45044()
{
  unint64_t result = qword_D54B0;
  if (!qword_D54B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D54B0);
  }
  return result;
}

unint64_t sub_4509C()
{
  unint64_t result = qword_D54B8;
  if (!qword_D54B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D54B8);
  }
  return result;
}

uint64_t sub_450F0()
{
  return sub_455D8(&qword_D54C0, &qword_D54C8);
}

unint64_t sub_4511C()
{
  unint64_t result = qword_D54D0;
  if (!qword_D54D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D54D0);
  }
  return result;
}

unint64_t sub_45174()
{
  unint64_t result = qword_D54D8;
  if (!qword_D54D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D54D8);
  }
  return result;
}

uint64_t sub_451C8()
{
  return sub_455D8(&qword_D54E0, &qword_D54E8);
}

unint64_t sub_451F4()
{
  unint64_t result = qword_D54F0;
  if (!qword_D54F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D54F0);
  }
  return result;
}

unint64_t sub_4524C()
{
  unint64_t result = qword_D54F8;
  if (!qword_D54F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D54F8);
  }
  return result;
}

unint64_t sub_452A4()
{
  unint64_t result = qword_D5500;
  if (!qword_D5500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5500);
  }
  return result;
}

unint64_t sub_452FC()
{
  unint64_t result = qword_D5508;
  if (!qword_D5508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5508);
  }
  return result;
}

uint64_t sub_45350()
{
  return sub_455D8(&qword_D5510, &qword_D5518);
}

unint64_t sub_4537C()
{
  unint64_t result = qword_D5520;
  if (!qword_D5520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5520);
  }
  return result;
}

unint64_t sub_453D4()
{
  unint64_t result = qword_D5528;
  if (!qword_D5528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5528);
  }
  return result;
}

unint64_t sub_4542C()
{
  unint64_t result = qword_D5530;
  if (!qword_D5530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5530);
  }
  return result;
}

uint64_t sub_45480()
{
  return sub_455D8(&qword_D5538, &qword_D5540);
}

unint64_t sub_454AC()
{
  unint64_t result = qword_D5548;
  if (!qword_D5548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5548);
  }
  return result;
}

unint64_t sub_45504()
{
  unint64_t result = qword_D5550;
  if (!qword_D5550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5550);
  }
  return result;
}

unint64_t sub_4555C()
{
  unint64_t result = qword_D5558;
  if (!qword_D5558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5558);
  }
  return result;
}

uint64_t sub_455B0()
{
  return sub_455D8(&qword_D5560, &qword_D5568);
}

uint64_t sub_455D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_429E0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for BoltSymbol()
{
  return &type metadata for BoltSymbol;
}

ValueMetadata *type metadata accessor for StrokedBoltSymbol()
{
  return &type metadata for StrokedBoltSymbol;
}

ValueMetadata *type metadata accessor for PauseSymbol()
{
  return &type metadata for PauseSymbol;
}

ValueMetadata *type metadata accessor for StrokedPauseSymbol()
{
  return &type metadata for StrokedPauseSymbol;
}

ValueMetadata *type metadata accessor for StopSymbol()
{
  return &type metadata for StopSymbol;
}

ValueMetadata *type metadata accessor for StrokedStopSymbol()
{
  return &type metadata for StrokedStopSymbol;
}

uint64_t sub_45688(uint64_t a1)
{
  return a1;
}

uint64_t sub_456B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8FEC0();
  uint64_t v8 = v7;
  uint64_t v9 = sub_8F910();
  sub_3ED90(&qword_D5570);
  sub_8FE00();
  uint64_t v10 = sub_8FD10();
  char v11 = sub_8F9B0();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v8;
  *(void *)(a3 + 16) = v9;
  *(void *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 32) = 1;
  *(void *)(a3 + 40) = v14;
  *(_OWORD *)(a3 + 48) = v15;
  *(void *)(a3 + 64) = 0;
  *(unsigned char *)(a3 + 72) = 1;
  *(void *)(a3 + 80) = v10;
  *(unsigned char *)(a3 + 88) = v11;
  *(void *)(a3 + 96) = sub_4592C;
  *(void *)(a3 + 104) = v12;
  *(void *)(a3 + 112) = 0;
  *(void *)(a3 + 120) = 0;
  swift_retain();
  return swift_retain();
}

uint64_t sub_457C8(uint64_t a1, uint64_t a2)
{
  sub_3ED90(&qword_D52A8);
  __chkstk_darwin();
  CGFloat v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_901B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_90190();
  swift_retain();
  swift_retain();
  uint64_t v7 = sub_90180();
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = a1;
  v8[5] = a2;
  sub_3F5C4((uint64_t)v5, (uint64_t)&unk_D5930, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_458EC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_4592C()
{
  return sub_457C8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_45934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  sub_90190();
  v5[7] = sub_90180();
  uint64_t v7 = sub_90170();
  v5[8] = v7;
  v5[9] = v6;
  return _swift_task_switch(sub_459CC, v7, v6);
}

uint64_t sub_459CC()
{
  uint64_t v1 = v0[6];
  v0[2] = v0[5];
  v0[3] = v1;
  sub_3ED90(&qword_D5570);
  sub_8FDF0();
  v0[10] = v0[4];
  unint64_t v2 = (void *)swift_task_alloc();
  v0[11] = v2;
  void *v2 = v0;
  v2[1] = sub_45A8C;
  return sub_3F3BC();
}

uint64_t sub_45A8C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_45BD0, v3, v2);
}

uint64_t sub_45BD0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_45C30()
{
  type metadata accessor for ChargingStatusViewModel();
  v1[3] = type metadata accessor for ChargingStatusService();
  v1[4] = &off_C13E8;
  v1[0] = sub_89088();
  sub_3EBA4((uint64_t)v1);
  sub_8FDE0();
  return v1[0];
}

uint64_t sub_45CAC@<X0>(uint64_t a1@<X8>)
{
  return sub_456B8(*v1, v1[1], a1);
}

uint64_t sub_45CB4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v72 = a1;
  uint64_t v73 = a2;
  uint64_t v78 = a4;
  uint64_t v77 = sub_3ED90(&qword_D5580) - 8;
  __chkstk_darwin(v77);
  uint64_t v76 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_8F7B0() - 8;
  __chkstk_darwin(v74);
  v71 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_3ED90(&qword_D5588) - 8;
  __chkstk_darwin(v75);
  uint64_t v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_3ED90(&qword_D5590);
  __chkstk_darwin(v9 - 8);
  char v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_3ED90(&qword_D5598);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  long long v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_3ED90(&qword_D55A0);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  long long v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_3ED90(&qword_D55A8);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  char v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v11 = sub_8F910();
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  uint64_t v24 = sub_3ED90(&qword_D55B0);
  sub_461BC(v72, v73, a3, (uint64_t)&v11[*(int *)(v24 + 44)]);
  LOBYTE(a3) = sub_8F9A0();
  sub_8F6F0();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_4ACE8((uint64_t)v11, (uint64_t)v15, &qword_D5590);
  v33 = &v15[*(int *)(v13 + 44)];
  char *v33 = a3;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_4AE2C((uint64_t)v11, &qword_D5590);
  LOBYTE(v13) = sub_8F9C0();
  sub_8F6F0();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  sub_4ACE8((uint64_t)v15, (uint64_t)v19, &qword_D5598);
  v42 = &v19[*(int *)(v17 + 44)];
  char *v42 = v13;
  *((void *)v42 + 1) = v35;
  *((void *)v42 + 2) = v37;
  *((void *)v42 + 3) = v39;
  *((void *)v42 + 4) = v41;
  v42[40] = 0;
  sub_4AE2C((uint64_t)v15, &qword_D5598);
  LOBYTE(v13) = sub_8F9D0();
  sub_8F6F0();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  sub_4ACE8((uint64_t)v19, (uint64_t)v23, &qword_D55A0);
  v51 = &v23[*(int *)(v21 + 44)];
  char *v51 = v13;
  *((void *)v51 + 1) = v44;
  *((void *)v51 + 2) = v46;
  *((void *)v51 + 3) = v48;
  *((void *)v51 + 4) = v50;
  v51[40] = 0;
  sub_4AE2C((uint64_t)v19, &qword_D55A0);
  uint64_t v52 = sub_8FD10();
  v53 = v71;
  v54 = &v71[*(int *)(v74 + 28)];
  uint64_t v55 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v56 = sub_8F900();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 104))(v54, v55, v56);
  __asm { FMOV            V0.2D, #12.0 }
  _OWORD *v53 = _Q0;
  uint64_t v62 = v76;
  sub_46498((uint64_t)v53, v76);
  *(_WORD *)(v62 + *(int *)(v77 + 44)) = 256;
  sub_4ACE8(v62, (uint64_t)&v8[*(int *)(v75 + 44)], &qword_D5580);
  *(void *)uint64_t v8 = v52;
  *((_WORD *)v8 + 4) = 256;
  swift_retain();
  sub_4AE2C(v62, &qword_D5580);
  sub_464FC((uint64_t)v53);
  swift_release();
  uint64_t v63 = sub_8FEC0();
  uint64_t v65 = v64;
  uint64_t v66 = sub_3ED90(&qword_D55B8);
  uint64_t v67 = v78;
  uint64_t v68 = v78 + *(int *)(v66 + 36);
  sub_4ACE8((uint64_t)v8, v68, &qword_D5588);
  v69 = (uint64_t *)(v68 + *(int *)(sub_3ED90(&qword_D55C0) + 36));
  uint64_t *v69 = v63;
  v69[1] = v65;
  sub_4ACE8((uint64_t)v23, v67, &qword_D55A8);
  sub_4AE2C((uint64_t)v8, &qword_D5588);
  return sub_4AE2C((uint64_t)v23, &qword_D55A8);
}

uint64_t sub_461BC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_3ED90(&qword_D58F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_3ED90(&qword_D58F8);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  long long v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v35 = sub_8F890();
  sub_46558(a1, a2, a3, (uint64_t)&v36);
  uint64_t v28 = v37;
  uint64_t v29 = v36;
  char v18 = v38;
  uint64_t v30 = v40;
  uint64_t v31 = v39;
  int v34 = v41;
  uint64_t v33 = v42;
  int v32 = v43;
  *(void *)uint64_t v10 = sub_8F910();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v19 = sub_3ED90(&qword_D5900);
  sub_468C0(a1, a2, a3, (uint64_t)&v10[*(int *)(v19 + 44)]);
  uint64_t v20 = sub_8FF00();
  unint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  sub_3ED90(&qword_D5578);
  sub_8FE20();
  sub_3E37C((uint64_t)&v36);
  swift_release();
  LOBYTE(a3) = v38;
  sub_4ACE8((uint64_t)v10, (uint64_t)v15, &qword_D58F0);
  uint64_t v21 = &v15[*(int *)(v12 + 44)];
  *(void *)uint64_t v21 = v20;
  v21[8] = a3;
  sub_4AE2C((uint64_t)v10, &qword_D58F0);
  sub_4AC84((uint64_t)v15, (uint64_t)v17, &qword_D58F8);
  sub_4ACE8((uint64_t)v17, (uint64_t)v15, &qword_D58F8);
  *(void *)a4 = v35;
  *(void *)(a4 + 8) = 0;
  *(unsigned char *)(a4 + 16) = 1;
  uint64_t v23 = v28;
  uint64_t v22 = v29;
  *(void *)(a4 + 24) = v29;
  *(void *)(a4 + 32) = v23;
  *(unsigned char *)(a4 + 40) = v18;
  uint64_t v24 = v30;
  *(void *)(a4 + 48) = v31;
  *(void *)(a4 + 56) = v24;
  *(unsigned char *)(a4 + 64) = v34;
  *(void *)(a4 + 72) = v33;
  *(unsigned char *)(a4 + 80) = v32;
  uint64_t v25 = sub_3ED90(&qword_D5908);
  sub_4ACE8((uint64_t)v15, a4 + *(int *)(v25 + 48), &qword_D58F8);
  sub_4AB90(v22, v23, v18);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_4AE2C((uint64_t)v17, &qword_D58F8);
  sub_4AE2C((uint64_t)v15, &qword_D58F8);
  sub_4AB80(v22, v23, v18);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_46498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8F7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_464FC(uint64_t a1)
{
  uint64_t v2 = sub_8F7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_46558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a3;
  sub_8F8D0();
  __chkstk_darwin();
  sub_8F8C0();
  v42._countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  sub_8F8B0(v42);
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v40 = v4;
  sub_3ED90(&qword_D5578);
  sub_8FE20();
  sub_3E37C((uint64_t)v35);
  swift_release();
  uint64_t v38 = v36;
  sub_8F8A0();
  v43._countAndFlagsBits = 37;
  v43._object = (void *)0xE100000000000000;
  sub_8F8B0(v43);
  sub_8F8F0();
  uint64_t v7 = sub_8FBF0();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  sub_8FA20();
  uint64_t v12 = sub_8FBE0();
  uint64_t v14 = v13;
  char v16 = v15;
  swift_release();
  sub_4AB80(v7, v9, v11);
  swift_bridgeObjectRelease();
  sub_8FA70();
  uint64_t v17 = sub_8FB60();
  uint64_t v19 = v18;
  LOBYTE(v4) = v20 & 1;
  sub_4AB80(v12, v14, v16 & 1);
  swift_bridgeObjectRelease();
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  sub_8FE20();
  sub_3E37C((uint64_t)v37);
  swift_release();
  sub_3F8B0();
  uint64_t v21 = sub_8FBB0();
  uint64_t v23 = v22;
  char v25 = v24;
  uint64_t v27 = v26;
  swift_release();
  sub_4AB80(v17, v19, v4);
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_8FEF0();
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  sub_8FE20();
  sub_3E37C((uint64_t)&v38);
  swift_release();
  char v29 = v41;
  *(void *)a4 = v21;
  *(void *)(a4 + 8) = v23;
  *(unsigned char *)(a4 + 16) = v25 & 1;
  *(void *)(a4 + 24) = v27;
  *(void *)(a4 + 32) = v28;
  *(unsigned char *)(a4 + 40) = v29;
  *(void *)(a4 + 48) = 0;
  *(unsigned char *)(a4 + 56) = 1;
  sub_4AB90(v21, v23, v25 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_4AB80(v21, v23, v25 & 1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_468C0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v37 = a4;
  uint64_t v7 = sub_3ED90(&qword_D5910);
  __chkstk_darwin(v7);
  uint64_t v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_3ED90(&qword_D55D8);
  __chkstk_darwin(v10);
  uint64_t v12 = &v35[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_3ED90(&qword_D5918);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v38 = &v35[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v39 = &v35[-v16];
  v43[0] = a1;
  v43[1] = a2;
  v43[2] = a3;
  sub_3ED90(&qword_D5578);
  sub_8FE20();
  sub_3E37C((uint64_t)&v44);
  swift_release();
  if (v45)
  {
    sub_46D2C(a1, a2, a3, (uint64_t)v12);
    sub_4ACE8((uint64_t)v12, (uint64_t)v9, &qword_D55D8);
    swift_storeEnumTagMultiPayload();
    sub_3ED90(&qword_D56B0);
    sub_4A1A0();
    sub_4A8FC(&qword_D56A8, &qword_D56B0, (void (*)(void))sub_4A2E0);
    sub_8F950();
    sub_4AE2C((uint64_t)v12, &qword_D55D8);
  }
  else
  {
    sub_46F9C(a1, a2, a3, (uint64_t)v43);
    memcpy(v9, v43, 0x108uLL);
    swift_storeEnumTagMultiPayload();
    sub_3ED90(&qword_D56B0);
    sub_4A1A0();
    sub_4A8FC(&qword_D56A8, &qword_D56B0, (void (*)(void))sub_4A2E0);
    sub_8F950();
  }
  unint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  sub_8FE40();
  uint64_t v17 = v43[0];
  uint64_t v18 = v43[1];
  uint64_t v19 = v43[2];
  int v36 = sub_8F9C0();
  sub_8F6F0();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v28 = sub_8FEF0();
  v43[0] = a1;
  v43[1] = a2;
  v43[2] = a3;
  sub_8FE20();
  sub_3E37C((uint64_t)v43);
  swift_release();
  uint64_t v29 = sub_3F844();
  uint64_t v31 = v38;
  uint64_t v30 = v39;
  sub_4ACE8((uint64_t)v39, (uint64_t)v38, &qword_D5918);
  uint64_t v32 = v37;
  sub_4ACE8((uint64_t)v31, v37, &qword_D5918);
  uint64_t v33 = v32 + *(int *)(sub_3ED90(&qword_D5920) + 48);
  *(void *)uint64_t v33 = v17;
  *(void *)(v33 + 8) = v18;
  *(void *)(v33 + 16) = v19;
  *(unsigned char *)(v33 + 24) = v36;
  *(void *)(v33 + 32) = v21;
  *(void *)(v33 + 40) = v23;
  *(void *)(v33 + 48) = v25;
  *(void *)(v33 + 56) = v27;
  *(unsigned char *)(v33 + 64) = 0;
  *(void *)(v33 + 72) = v28;
  *(void *)(v33 + 80) = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_4AE2C((uint64_t)v30, &qword_D5918);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_4AE2C((uint64_t)v31, &qword_D5918);
}

uint64_t sub_46D2C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a4;
  uint64_t v7 = sub_3ED90(&qword_D55C8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_3ED90(&qword_D55D0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_3ED90(&qword_D55D8);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = sub_8F910();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v18 = sub_3ED90(&qword_D55E0);
  sub_473E8(a1, a2, a3, (uint64_t)&v9[*(int *)(v18 + 44)]);
  unint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  sub_3ED90(&qword_D5578);
  sub_8FE20();
  sub_3E37C((uint64_t)&v25);
  swift_release();
  if (v26) {
    double v19 = 1.0;
  }
  else {
    double v19 = 0.0;
  }
  sub_4ACE8((uint64_t)v9, (uint64_t)v13, &qword_D55C8);
  *(double *)&v13[*(int *)(v11 + 44)] = v19;
  sub_4AE2C((uint64_t)v9, &qword_D55C8);
  uint64_t v20 = sub_8FEF0();
  unint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  sub_8FE20();
  sub_3E37C((uint64_t)&v27);
  swift_release();
  char v21 = v29;
  sub_4ACE8((uint64_t)v13, (uint64_t)v17, &qword_D55D0);
  uint64_t v22 = &v17[*(int *)(v15 + 44)];
  *(void *)uint64_t v22 = v20;
  v22[8] = v21;
  sub_4AE2C((uint64_t)v13, &qword_D55D0);
  return sub_4AC84((uint64_t)v17, v24, &qword_D55D8);
}

double sub_46F9C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v58 = sub_8F890();
  sub_3ED90(&qword_D5578);
  sub_8FE20();
  sub_3E66C();
  swift_release();
  sub_4AB2C();
  uint64_t v5 = sub_8FC00();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  sub_8FAA0();
  uint64_t v10 = sub_8FBE0();
  uint64_t v12 = v11;
  char v14 = v13;
  swift_release();
  sub_4AB80(v5, v7, v9);
  swift_bridgeObjectRelease();
  sub_8FA70();
  uint64_t v15 = sub_8FB60();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_4AB80(v10, v12, v14 & 1);
  swift_bridgeObjectRelease();
  sub_8FD50();
  uint64_t v20 = sub_8FBB0();
  uint64_t v60 = v21;
  uint64_t v61 = v20;
  char v23 = v22;
  uint64_t v59 = v24;
  swift_release();
  sub_4AB80(v15, v17, v19);
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_8FEF0();
  sub_8FE20();
  uint64_t v57 = sub_3E66C();
  uint64_t v27 = v26;
  swift_release();
  LOBYTE(v65) = 1;
  sub_4AB90(v61, v60, v23 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_4AB80(v61, v60, v23 & 1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  char v28 = v23 & 1;
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  uint64_t v69 = a3;
  sub_3ED90(&qword_D5578);
  sub_8FE20();
  sub_3E37C((uint64_t)v64);
  swift_release();
  double v29 = 0.0;
  if ((v64[16] & 1) == 0) {
    double v29 = 1.0;
  }
  double v53 = v29;
  uint64_t v52 = sub_8FEF0();
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  uint64_t v69 = a3;
  sub_8FE20();
  sub_3E37C((uint64_t)&v65);
  swift_release();
  char v30 = v66;
  char v31 = sub_8F9E0();
  sub_8F6F0();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  char v40 = sub_8F9C0();
  sub_8F6F0();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  sub_8FEC0();
  sub_8F750();
  uint64_t v49 = v67;
  uint64_t v50 = v69;
  char v63 = v68;
  char v62 = v70;
  *(void *)a4 = v58;
  *(void *)(a4 + 8) = 0;
  *(unsigned char *)(a4 + 16) = 1;
  *(void *)(a4 + 24) = v61;
  *(void *)(a4 + 32) = v60;
  *(unsigned char *)(a4 + 40) = v28;
  *(void *)(a4 + 48) = v59;
  *(void *)(a4 + 56) = v25;
  *(void *)(a4 + 64) = v57;
  *(void *)(a4 + 72) = v27;
  *(void *)(a4 + 80) = 0;
  *(unsigned char *)(a4 + 88) = 1;
  *(double *)(a4 + 96) = v53;
  *(void *)(a4 + 104) = v52;
  *(unsigned char *)(a4 + 112) = v30;
  *(unsigned char *)(a4 + 120) = v31;
  *(void *)(a4 + 128) = v33;
  *(void *)(a4 + 136) = v35;
  *(void *)(a4 + 144) = v37;
  *(void *)(a4 + 152) = v39;
  *(unsigned char *)(a4 + 160) = 0;
  *(unsigned char *)(a4 + 168) = v40;
  *(void *)(a4 + 176) = v42;
  *(void *)(a4 + 184) = v44;
  *(void *)(a4 + 192) = v46;
  *(void *)(a4 + 200) = v48;
  *(unsigned char *)(a4 + 208) = 0;
  *(void *)(a4 + 216) = v49;
  *(unsigned char *)(a4 + 224) = v63;
  *(void *)(a4 + 232) = v50;
  *(unsigned char *)(a4 + 240) = v62;
  double result = v71[0];
  *(_OWORD *)(a4 + 248) = *(_OWORD *)v71;
  return result;
}

uint64_t sub_473E8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v37 = a4;
  uint64_t v7 = sub_3ED90(&qword_D5888);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_3ED90(&qword_D5890);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  char v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_3ED90(&qword_D5898);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v9 = sub_8F890();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  uint64_t v18 = sub_3ED90(&qword_D58A0);
  sub_476A8(a1, a2, a3, (uint64_t)&v9[*(int *)(v18 + 44)]);
  char v19 = sub_8F9C0();
  sub_8F6F0();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_4ACE8((uint64_t)v9, (uint64_t)v13, &qword_D5888);
  char v28 = &v13[*(int *)(v11 + 44)];
  *char v28 = v19;
  *((void *)v28 + 1) = v21;
  *((void *)v28 + 2) = v23;
  *((void *)v28 + 3) = v25;
  *((void *)v28 + 4) = v27;
  v28[40] = 0;
  sub_4AE2C((uint64_t)v9, &qword_D5888);
  sub_8FEC0();
  sub_8F750();
  sub_4ACE8((uint64_t)v13, (uint64_t)v17, &qword_D5890);
  double v29 = &v17[*(int *)(v15 + 44)];
  long long v30 = v39;
  *(_OWORD *)double v29 = v38;
  *((_OWORD *)v29 + 1) = v30;
  *((_OWORD *)v29 + 2) = v40;
  sub_4AE2C((uint64_t)v13, &qword_D5890);
  uint64_t v31 = sub_8FEF0();
  v41[0] = a1;
  v41[1] = a2;
  v41[2] = a3;
  sub_3ED90(&qword_D5578);
  sub_8FE20();
  sub_3E37C((uint64_t)v41);
  swift_release();
  uint64_t v32 = sub_3F844();
  uint64_t v33 = v37;
  sub_4ACE8((uint64_t)v17, v37, &qword_D5898);
  uint64_t v34 = (uint64_t *)(v33 + *(int *)(sub_3ED90(&qword_D58A8) + 36));
  uint64_t *v34 = v31;
  v34[1] = v32;
  return sub_4AE2C((uint64_t)v17, &qword_D5898);
}

uint64_t sub_476A8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v65 = a3;
  uint64_t v64 = a2;
  unint64_t v63 = a1;
  uint64_t v62 = a4;
  uint64_t v61 = sub_3ED90(&qword_D58B0);
  uint64_t v4 = *(void *)(v61 - 8);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_3ED90(&qword_D58B8) - 8;
  ((void (*)(void))__chkstk_darwin)();
  char v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_3ED90(&qword_D58C0) - 8;
  uint64_t v10 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v66 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v68 = (uint64_t)&v59 - v12;
  uint64_t v13 = sub_8FD70();
  uint64_t v14 = sub_8FAA0();
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v72 = v13;
  uint64_t v73 = KeyPath;
  uint64_t v74 = v14;
  sub_8FA50();
  sub_3ED90(&qword_D58C8);
  sub_4ABA0();
  sub_8FC90();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v16 = v63;
  uint64_t v17 = v64;
  unint64_t v72 = v63;
  uint64_t v73 = v64;
  uint64_t v18 = v65;
  uint64_t v74 = v65;
  uint64_t v67 = sub_3ED90(&qword_D5578);
  sub_8FE20();
  sub_3E37C((uint64_t)v70);
  swift_release();
  uint64_t v19 = sub_3F844();
  uint64_t v20 = swift_getKeyPath();
  uint64_t v21 = v61;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v61);
  uint64_t v22 = (uint64_t *)&v9[*(int *)(v7 + 44)];
  uint64_t *v22 = v20;
  v22[1] = v19;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v21);
  LOBYTE(v19) = sub_8FA00();
  sub_8F6F0();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v31 = v66;
  sub_4ACE8((uint64_t)v9, v66, &qword_D58B8);
  uint64_t v32 = v31 + *(int *)(v60 + 44);
  *(unsigned char *)uint64_t v32 = v19;
  *(void *)(v32 + 8) = v24;
  *(void *)(v32 + 16) = v26;
  *(void *)(v32 + 24) = v28;
  *(void *)(v32 + 32) = v30;
  *(unsigned char *)(v32 + 40) = 0;
  sub_4AE2C((uint64_t)v9, &qword_D58B8);
  sub_4AC84(v31, v68, &qword_D58C0);
  unint64_t v72 = v16;
  uint64_t v73 = v17;
  uint64_t v74 = v18;
  sub_8FE20();
  sub_3E37C((uint64_t)v71);
  swift_release();
  unint64_t v72 = sub_3F7F0();
  uint64_t v73 = v33;
  sub_4AB2C();
  uint64_t v34 = sub_8FC00();
  uint64_t v36 = v35;
  LOBYTE(v18) = v37 & 1;
  sub_8FAA0();
  uint64_t v38 = sub_8FBE0();
  uint64_t v40 = v39;
  LOBYTE(v16) = v41;
  swift_release();
  sub_4AB80(v34, v36, v18);
  swift_bridgeObjectRelease();
  sub_8FA50();
  uint64_t v42 = sub_8FB60();
  uint64_t v44 = v43;
  LOBYTE(v17) = v45 & 1;
  sub_4AB80(v38, v40, v16 & 1);
  swift_bridgeObjectRelease();
  unint64_t v72 = v63;
  uint64_t v73 = v64;
  uint64_t v74 = v65;
  sub_8FE20();
  sub_3E37C((uint64_t)&v72);
  swift_release();
  uint64_t v69 = sub_3F844();
  uint64_t v46 = sub_8FBC0();
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  LOBYTE(v40) = v51 & 1;
  sub_4AB80(v42, v44, v17);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v52 = v68;
  uint64_t v53 = v66;
  sub_4ACE8(v68, v66, &qword_D58C0);
  uint64_t v54 = v62;
  sub_4ACE8(v53, v62, &qword_D58C0);
  uint64_t v55 = sub_3ED90(&qword_D58E8);
  uint64_t v56 = v54 + *(int *)(v55 + 48);
  *(void *)uint64_t v56 = v46;
  *(void *)(v56 + 8) = v48;
  *(unsigned char *)(v56 + 16) = v40;
  *(void *)(v56 + 24) = v50;
  uint64_t v57 = v54 + *(int *)(v55 + 64);
  *(void *)uint64_t v57 = 0;
  *(unsigned char *)(v57 + 8) = 1;
  sub_4AB90(v46, v48, v40);
  swift_bridgeObjectRetain();
  sub_4AE2C(v52, &qword_D58C0);
  sub_4AB80(v46, v48, v40);
  swift_bridgeObjectRelease();
  return sub_4AE2C(v53, &qword_D58C0);
}

uint64_t sub_47CA4@<X0>(uint64_t a1@<X8>)
{
  return sub_45CB4(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), a1);
}

uint64_t sub_47CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = a2;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  sub_3ED90(&qword_D5578);
  sub_8FE20();
  sub_3E37C((uint64_t)v34);
  swift_release();
  uint64_t v8 = sub_3F844();
  uint64_t v36 = a1;
  uint64_t v37 = v5;
  uint64_t v38 = a3;
  sub_8FE20();
  sub_3E37C((uint64_t)v35);
  swift_release();
  uint64_t v9 = v35[1];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  *(void *)(v10 + 24) = v9;
  swift_retain();
  sub_8FEC0();
  sub_8F750();
  uint64_t v11 = v36;
  char v12 = v37;
  uint64_t v13 = v38;
  char v14 = v39;
  uint64_t v15 = v40;
  uint64_t v33 = v41;
  LOBYTE(v9) = sub_8F9E0();
  sub_8F6F0();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  LOBYTE(v5) = sub_8FA00();
  sub_8F6F0();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t result = swift_release();
  char v42 = 0;
  *(void *)a4 = sub_47ED8;
  *(void *)(a4 + 8) = v10;
  *(void *)(a4 + 16) = v11;
  *(unsigned char *)(a4 + 24) = v12;
  *(void *)(a4 + 32) = v13;
  *(unsigned char *)(a4 + 40) = v14;
  *(void *)(a4 + 48) = v15;
  *(void *)(a4 + 56) = v33;
  *(unsigned char *)(a4 + 64) = v9;
  *(void *)(a4 + 72) = v17;
  *(void *)(a4 + 80) = v19;
  *(void *)(a4 + 88) = v21;
  *(void *)(a4 + 96) = v23;
  *(unsigned char *)(a4 + 104) = 0;
  *(unsigned char *)(a4 + 112) = v5;
  *(void *)(a4 + 120) = v25;
  *(void *)(a4 + 128) = v27;
  *(void *)(a4 + 136) = v29;
  *(void *)(a4 + 144) = v31;
  *(unsigned char *)(a4 + 152) = v42;
  return result;
}

uint64_t sub_47EA0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_47ED8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  *(void *)a1 = sub_8F890();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v5 = sub_3ED90(&qword_D5810);
  return sub_47F38(v4, v3, a1 + *(int *)(v5 + 44));
}

uint64_t sub_47F38@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_3ED90(&qword_D5818);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (uint64_t *)((char *)&v18 - v10);
  uint64_t *v11 = sub_8FED0();
  v11[1] = v12;
  uint64_t v13 = sub_3ED90(&qword_D5820);
  sub_4809C(a1, a2, (uint64_t)v11 + *(int *)(v13 + 44));
  swift_retain();
  sub_8F760();
  double v15 = v14 * 0.2;
  sub_4ACE8((uint64_t)v11, (uint64_t)v9, &qword_D5818);
  sub_4ACE8((uint64_t)v9, a3, &qword_D5818);
  uint64_t v16 = a3 + *(int *)(sub_3ED90(&qword_D5828) + 48);
  *(void *)uint64_t v16 = a2;
  *(void *)(v16 + 8) = a1;
  *(double *)(v16 + 16) = v15;
  swift_retain();
  sub_4AE2C((uint64_t)v11, &qword_D5818);
  swift_release();
  return sub_4AE2C((uint64_t)v9, &qword_D5818);
}

uint64_t sub_4809C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v5 = sub_3ED90(&qword_D5830);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_3ED90(&qword_D5838);
  uint64_t v9 = v8 - 8;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  double v14 = (char *)&v28 - v13;
  uint64_t v15 = sub_3ED90(&qword_D5840);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v28 - v19;
  *(void *)uint64_t v20 = sub_8F890();
  *((void *)v20 + 1) = 0;
  v20[16] = 0;
  uint64_t v21 = sub_3ED90(&qword_D5848);
  sub_48344(a1, a2, (uint64_t)&v20[*(int *)(v21 + 44)]);
  *(void *)uint64_t v7 = sub_8F890();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v22 = sub_3ED90(&qword_D5850);
  sub_488B0(a2, a1, (uint64_t)&v7[*(int *)(v22 + 44)]);
  uint64_t v23 = sub_8FF00();
  sub_4ACE8((uint64_t)v7, (uint64_t)v12, &qword_D5830);
  uint64_t v24 = (uint64_t *)&v12[*(int *)(v9 + 44)];
  uint64_t *v24 = v23;
  v24[1] = a2;
  sub_4AE2C((uint64_t)v7, &qword_D5830);
  sub_4AC84((uint64_t)v12, (uint64_t)v14, &qword_D5838);
  sub_4ACE8((uint64_t)v20, (uint64_t)v18, &qword_D5840);
  sub_4ACE8((uint64_t)v14, (uint64_t)v12, &qword_D5838);
  uint64_t v25 = v29;
  sub_4ACE8((uint64_t)v18, v29, &qword_D5840);
  uint64_t v26 = sub_3ED90(&qword_D5858);
  sub_4ACE8((uint64_t)v12, v25 + *(int *)(v26 + 48), &qword_D5838);
  sub_4AE2C((uint64_t)v14, &qword_D5838);
  sub_4AE2C((uint64_t)v20, &qword_D5840);
  sub_4AE2C((uint64_t)v12, &qword_D5838);
  return sub_4AE2C((uint64_t)v18, &qword_D5840);
}

uint64_t sub_48344@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v69 = a1;
  uint64_t v62 = a3;
  uint64_t v3 = sub_3ED90(&qword_D5580);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_8F7B0();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (int64x2_t *)((char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_3ED90(&qword_D5870);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v52 - v16;
  sub_8F760();
  sub_8FEC0();
  sub_8F750();
  uint64_t v67 = v108;
  unsigned int v66 = v109;
  uint64_t v65 = v110;
  LODWORD(v64) = v111;
  unint64_t v63 = (char *)v112;
  uint64_t v61 = v113;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = &v10->i8[*(int *)(v8 + 28)];
  uint64_t v20 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v21 = sub_8F900();
  (*(void (**)(__int8 *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  int64x2_t *v10 = vdupq_n_s64(0x4044000000000000uLL);
  sub_46498((uint64_t)v10, (uint64_t)v6);
  *(_WORD *)&v6[*(int *)(v4 + 44)] = 256;
  sub_4ACE8((uint64_t)v6, (uint64_t)&v15[*(int *)(v12 + 44)], &qword_D5580);
  *(void *)uint64_t v15 = v67;
  v15[8] = v66;
  *((void *)v15 + 2) = v65;
  v15[24] = v64;
  uint64_t v22 = v61;
  *((void *)v15 + 4) = v63;
  *((void *)v15 + 5) = v22;
  *((void *)v15 + 6) = 0x3FD999999999999ALL;
  *((void *)v15 + 7) = KeyPath;
  *((void *)v15 + 8) = v69;
  swift_retain();
  swift_retain();
  sub_4AE2C((uint64_t)v6, &qword_D5580);
  sub_464FC((uint64_t)v10);
  swift_release();
  unint64_t v63 = v17;
  sub_4AC84((uint64_t)v15, (uint64_t)v17, &qword_D5870);
  sub_8F710();
  uint64_t v23 = v114;
  unsigned int v66 = v116;
  LODWORD(v67) = v115;
  uint64_t v24 = v117;
  uint64_t v61 = v118;
  uint64_t v25 = v119;
  swift_retain();
  uint64_t v60 = sub_8FEC0();
  uint64_t v65 = v26;
  if (v68 >= 80)
  {
    uint64_t v27 = v69;
    swift_retain();
  }
  else
  {
    uint64_t v27 = sub_8FD10();
  }
  uint64_t v54 = v27;
  uint64_t v64 = sub_8FEC0();
  uint64_t v59 = v28;
  sub_8FEC0();
  sub_8F750();
  uint64_t v29 = v120;
  char v30 = v121;
  uint64_t v31 = v122;
  uint64_t v56 = v122;
  uint64_t v57 = v120;
  unsigned __int8 v32 = v123;
  unint64_t v33 = v125;
  uint64_t v53 = v124;
  unint64_t v55 = v125;
  char v71 = v121;
  unsigned __int8 v70 = v123;
  int v58 = v123;
  uint64_t v52 = sub_8FEE0();
  sub_4ACE8((uint64_t)v63, (uint64_t)v15, &qword_D5870);
  uint64_t v34 = v62;
  sub_4ACE8((uint64_t)v15, v62, &qword_D5870);
  uint64_t v35 = v34 + *(int *)(sub_3ED90(&qword_D5878) + 48);
  *(void *)&long long v72 = v27;
  WORD4(v72) = 256;
  *(void *)&long long v73 = v23;
  *((void *)&v73 + 1) = __PAIR64__(v66, v67);
  *(void *)&long long v74 = v24;
  uint64_t v36 = v60;
  uint64_t v37 = v61;
  *((void *)&v74 + 1) = v61;
  *(void *)&long long v75 = v25;
  *((void *)&v75 + 1) = v69;
  LOWORD(v76) = 256;
  *((void *)&v76 + 1) = v60;
  *(void *)&long long v77 = v65;
  uint64_t v38 = v59;
  *((void *)&v77 + 1) = v64;
  *(void *)&long long v78 = v59;
  *((void *)&v78 + 1) = v29;
  LOBYTE(v79) = v30;
  *((void *)&v79 + 1) = v31;
  LOBYTE(v80) = v32;
  uint64_t v39 = v53;
  *((void *)&v80 + 1) = v53;
  long long v81 = v33;
  *(void *)&long long v82 = 0;
  uint64_t v40 = v52;
  uint64_t v41 = v68;
  *((void *)&v82 + 1) = v52;
  uint64_t v83 = v68;
  long long v42 = v76;
  long long v43 = v77;
  long long v44 = v79;
  *(_OWORD *)(v35 + 96) = v78;
  *(_OWORD *)(v35 + 112) = v44;
  *(_OWORD *)(v35 + 64) = v42;
  *(_OWORD *)(v35 + 80) = v43;
  long long v45 = v80;
  long long v46 = v81;
  long long v47 = v82;
  *(void *)(v35 + 176) = v41;
  *(_OWORD *)(v35 + 144) = v46;
  *(_OWORD *)(v35 + 160) = v47;
  *(_OWORD *)(v35 + 128) = v45;
  long long v48 = v72;
  long long v49 = v73;
  long long v50 = v75;
  *(_OWORD *)(v35 + 32) = v74;
  *(_OWORD *)(v35 + 48) = v50;
  *(_OWORD *)uint64_t v35 = v48;
  *(_OWORD *)(v35 + 16) = v49;
  sub_4A9CC((uint64_t)&v72);
  sub_4AE2C((uint64_t)v63, &qword_D5870);
  uint64_t v84 = v54;
  __int16 v85 = 256;
  uint64_t v86 = v23;
  int v87 = v67;
  unsigned int v88 = v66;
  uint64_t v89 = v24;
  uint64_t v90 = v37;
  uint64_t v91 = v25;
  uint64_t v92 = v69;
  __int16 v93 = 256;
  uint64_t v94 = v36;
  uint64_t v95 = v65;
  uint64_t v96 = v64;
  uint64_t v97 = v38;
  uint64_t v98 = v57;
  char v99 = v30;
  uint64_t v100 = v56;
  char v101 = v58;
  uint64_t v102 = v39;
  unint64_t v103 = v55;
  uint64_t v104 = 0;
  uint64_t v105 = 0;
  uint64_t v106 = v40;
  uint64_t v107 = v41;
  sub_4AA24((uint64_t)&v84);
  return sub_4AE2C((uint64_t)v15, &qword_D5870);
}

uint64_t sub_488B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v3 = sub_3ED90(&qword_D5580);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_8F7B0();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (int64x2_t *)((char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_3ED90(&qword_D5860);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v50 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v42 - v16;
  __chkstk_darwin(v15);
  uint64_t v49 = (uint64_t)&v42 - v18;
  sub_8F760();
  sub_8F760();
  sub_8FEC0();
  sub_8F750();
  uint64_t v19 = v51;
  char v20 = v52;
  uint64_t v45 = v53;
  int v44 = v54;
  uint64_t v43 = v55;
  uint64_t v42 = v56;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = &v10->i8[*(int *)(v8 + 28)];
  uint64_t v23 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v24 = sub_8F900();
  (*(void (**)(__int8 *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v22, v23, v24);
  int64x2_t *v10 = vdupq_n_s64(0x4044000000000000uLL);
  sub_46498((uint64_t)v10, (uint64_t)v6);
  *(_WORD *)&v6[*(int *)(v4 + 44)] = 256;
  sub_4ACE8((uint64_t)v6, (uint64_t)&v17[*(int *)(v12 + 44)], &qword_D5580);
  *(void *)uint64_t v17 = v19;
  v17[8] = v20;
  *((void *)v17 + 2) = v45;
  v17[24] = v44;
  uint64_t v25 = v42;
  *((void *)v17 + 4) = v43;
  *((void *)v17 + 5) = v25;
  uint64_t v26 = v47;
  *((void *)v17 + 6) = KeyPath;
  *((void *)v17 + 7) = v26;
  swift_retain();
  swift_retain();
  sub_4AE2C((uint64_t)v6, &qword_D5580);
  sub_464FC((uint64_t)v10);
  swift_release();
  uint64_t v27 = v49;
  sub_4AC84((uint64_t)v17, v49, &qword_D5860);
  sub_8FEC0();
  sub_8F750();
  uint64_t v28 = v57;
  char v29 = v58;
  uint64_t v30 = v59;
  char v31 = v60;
  uint64_t v32 = v61;
  uint64_t v33 = v62;
  uint64_t v34 = swift_getKeyPath();
  if (v46 >= 80) {
    double v35 = 0.0;
  }
  else {
    double v35 = 1.0;
  }
  uint64_t v36 = v27;
  uint64_t v37 = v50;
  sub_4ACE8(v36, v50, &qword_D5860);
  uint64_t v38 = v37;
  uint64_t v39 = v48;
  sub_4ACE8(v38, v48, &qword_D5860);
  uint64_t v40 = v39 + *(int *)(sub_3ED90(&qword_D5868) + 48);
  *(void *)uint64_t v40 = v28;
  *(unsigned char *)(v40 + 8) = v29;
  *(void *)(v40 + 16) = v30;
  *(unsigned char *)(v40 + 24) = v31;
  *(void *)(v40 + 32) = v32;
  *(void *)(v40 + 40) = v33;
  *(void *)(v40 + 48) = v34;
  *(void *)(v40 + 56) = v26;
  *(_OWORD *)(v40 + 64) = xmmword_9C270;
  *(double *)(v40 + 80) = v35;
  swift_retain_n();
  swift_retain();
  sub_4AE2C(v49, &qword_D5860);
  swift_release();
  swift_release();
  return sub_4AE2C(v50, &qword_D5860);
}

uint64_t sub_48CD4@<X0>(uint64_t a1@<X8>)
{
  return sub_47CB0(*v1, v1[1], v1[2], a1);
}

uint64_t sub_48CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(void *)&long long v52 = a3;
  uint64_t v65 = sub_3ED90(&qword_D5760);
  uint64_t v7 = *(void *)(v65 - 8);
  uint64_t v8 = __chkstk_darwin(v65);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v45 - v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  *(double *)(v13 + 32) = a4;
  swift_retain();
  sub_3ED90(&qword_D5768);
  sub_4A664();
  uint64_t v57 = v12;
  sub_8FE80();
  uint64_t v64 = a2;
  uint64_t v63 = sub_8FD30();
  sub_8F710();
  uint64_t v14 = v102;
  unsigned int v56 = v103;
  unsigned int v62 = v104;
  uint64_t v15 = v105;
  uint64_t v51 = v106;
  uint64_t v16 = v107;
  uint64_t v17 = sub_8FEC0();
  uint64_t v60 = v18;
  uint64_t v61 = v17;
  uint64_t v53 = a1;
  if (a1 >= 100) {
    swift_retain();
  }
  else {
    uint64_t v64 = sub_8FD10();
  }
  uint64_t v19 = sub_8FEC0();
  uint64_t v58 = v20;
  uint64_t v59 = v19;
  sub_8FEC0();
  sub_8F750();
  unsigned __int8 v21 = v109;
  unsigned __int8 v22 = v111;
  uint64_t v54 = v112;
  uint64_t v55 = v108;
  uint64_t v46 = v110;
  uint64_t v47 = v113;
  unsigned __int8 v67 = v109;
  int v48 = v111;
  int v49 = v109;
  unsigned __int8 v66 = v111;
  uint64_t v23 = sub_8FEE0();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v50 = v10;
  uint64_t v25 = v65;
  v24(v10, v57, v65);
  uint64_t v26 = v52;
  v24((char *)v52, v10, v25);
  uint64_t v27 = v26 + *(int *)(sub_3ED90(&qword_D5808) + 48);
  *(void *)&long long v68 = v64;
  WORD4(v68) = 256;
  *(void *)&long long v69 = v14;
  *((void *)&v69 + 1) = __PAIR64__(v62, v56);
  *(void *)&long long v70 = v15;
  uint64_t v28 = v51;
  *((void *)&v70 + 1) = v51;
  *(void *)&long long v71 = v16;
  *((void *)&v71 + 1) = v63;
  LOWORD(v72) = 256;
  *((void *)&v72 + 1) = v61;
  *(void *)&long long v73 = v60;
  *((void *)&v73 + 1) = v59;
  *(void *)&long long v74 = v58;
  *((void *)&v74 + 1) = v55;
  LOBYTE(v75) = v21;
  uint64_t v29 = v46;
  uint64_t v30 = v47;
  *((void *)&v75 + 1) = v46;
  LOBYTE(v76) = v22;
  uint64_t v31 = v53;
  *((void *)&v76 + 1) = v54;
  *(void *)&v77[0] = v47;
  long long v52 = xmmword_9C280;
  *(_OWORD *)((char *)v77 + 8) = xmmword_9C280;
  *((void *)&v77[1] + 1) = v23;
  uint64_t v78 = v53;
  uint64_t v32 = v64;
  long long v33 = v72;
  long long v34 = v73;
  long long v35 = v75;
  *(_OWORD *)(v27 + 96) = v74;
  *(_OWORD *)(v27 + 112) = v35;
  *(_OWORD *)(v27 + 64) = v33;
  *(_OWORD *)(v27 + 80) = v34;
  long long v36 = v76;
  long long v37 = v77[0];
  long long v38 = v77[1];
  *(void *)(v27 + 176) = v31;
  *(_OWORD *)(v27 + 144) = v37;
  *(_OWORD *)(v27 + 160) = v38;
  *(_OWORD *)(v27 + 128) = v36;
  long long v39 = v68;
  long long v40 = v69;
  long long v41 = v71;
  *(_OWORD *)(v27 + 32) = v70;
  *(_OWORD *)(v27 + 48) = v41;
  *(_OWORD *)uint64_t v27 = v39;
  *(_OWORD *)(v27 + 16) = v40;
  sub_4A9CC((uint64_t)&v68);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v43 = v65;
  v42(v57, v65);
  uint64_t v79 = v32;
  __int16 v80 = 256;
  uint64_t v81 = v14;
  unsigned int v82 = v56;
  unsigned int v83 = v62;
  uint64_t v84 = v15;
  uint64_t v85 = v28;
  uint64_t v86 = v16;
  uint64_t v87 = v63;
  __int16 v88 = 256;
  uint64_t v89 = v61;
  uint64_t v90 = v60;
  uint64_t v91 = v59;
  uint64_t v92 = v58;
  uint64_t v93 = v55;
  char v94 = v49;
  uint64_t v95 = v29;
  char v96 = v48;
  uint64_t v97 = v54;
  uint64_t v98 = v30;
  long long v99 = v52;
  uint64_t v100 = v23;
  uint64_t v101 = v31;
  sub_4AA24((uint64_t)&v79);
  return ((uint64_t (*)(char *, uint64_t))v42)(v50, v43);
}

uint64_t sub_49130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v66 = sub_3ED90(&qword_D5580);
  __chkstk_darwin(v66);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_8F7B0();
  __chkstk_darwin(v10);
  uint64_t v12 = (int64x2_t *)((char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = sub_3ED90(&qword_D57A0);
  __chkstk_darwin(v65);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_3ED90(&qword_D5790);
  __chkstk_darwin(v67);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_3ED90(&qword_D5780);
  __chkstk_darwin(v68);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_3ED90(&qword_D5768);
  uint64_t result = __chkstk_darwin(v19);
  if (__OFSUB__(a2, 80))
  {
    __break(1u);
  }
  else if (a1 + 0x4000000000000000 >= 0)
  {
    uint64_t v60 = a1;
    uint64_t v63 = (uint64_t)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v64 = result;
    sub_8FEC0();
    sub_8F750();
    uint64_t v59 = v69;
    int v58 = v70;
    uint64_t v57 = v71;
    int v56 = v72;
    uint64_t v61 = a2;
    uint64_t v62 = a4;
    uint64_t v22 = v73;
    uint64_t v55 = v74;
    uint64_t v23 = qword_9C290[a2 - 80 > 2 * a1];
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v25 = &v12->i8[*(int *)(v10 + 20)];
    uint64_t v26 = a3;
    uint64_t v27 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v28 = sub_8F900();
    (*(void (**)(__int8 *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v25, v27, v28);
    int64x2_t *v12 = vdupq_n_s64(0x4044000000000000uLL);
    sub_46498((uint64_t)v12, (uint64_t)v9);
    *(_WORD *)&v9[*(int *)(v66 + 36)] = 256;
    sub_4ACE8((uint64_t)v9, (uint64_t)&v14[*(int *)(v65 + 36)], &qword_D5580);
    *(void *)uint64_t v14 = v59;
    v14[8] = v58;
    *((void *)v14 + 2) = v57;
    v14[24] = v56;
    uint64_t v29 = v55;
    *((void *)v14 + 4) = v22;
    *((void *)v14 + 5) = v29;
    *((void *)v14 + 6) = v23;
    *((void *)v14 + 7) = KeyPath;
    *((void *)v14 + 8) = v26;
    swift_retain();
    swift_retain();
    sub_4AE2C((uint64_t)v9, &qword_D5580);
    sub_464FC((uint64_t)v12);
    swift_release();
    char v30 = sub_8FA00();
    sub_8F6F0();
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    sub_4ACE8((uint64_t)v14, (uint64_t)v16, &qword_D57A0);
    long long v39 = &v16[*(int *)(v67 + 36)];
    *long long v39 = v30;
    *((void *)v39 + 1) = v32;
    *((void *)v39 + 2) = v34;
    *((void *)v39 + 3) = v36;
    *((void *)v39 + 4) = v38;
    v39[40] = 0;
    sub_4AE2C((uint64_t)v14, &qword_D57A0);
    char v40 = sub_8F9E0();
    sub_8F6F0();
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    sub_4ACE8((uint64_t)v16, (uint64_t)v18, &qword_D5790);
    int v49 = &v18[*(int *)(v68 + 36)];
    *int v49 = v40;
    *((void *)v49 + 1) = v42;
    *((void *)v49 + 2) = v44;
    *((void *)v49 + 3) = v46;
    *((void *)v49 + 4) = v48;
    v49[40] = 0;
    sub_4AE2C((uint64_t)v16, &qword_D5790);
    uint64_t v50 = sub_8FEE0();
    uint64_t v51 = v63;
    sub_4ACE8((uint64_t)v18, v63, &qword_D5780);
    long long v52 = (uint64_t *)(v51 + *(int *)(v64 + 36));
    uint64_t v53 = v61;
    *long long v52 = v50;
    v52[1] = v53;
    sub_4AE2C((uint64_t)v18, &qword_D5780);
    return sub_4AC84(v51, v62, &qword_D5768);
  }
  __break(1u);
  return result;
}

uint64_t sub_4963C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  double v5 = *((double *)v1 + 2);
  *(void *)a1 = sub_8F890();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v6 = sub_3ED90(&qword_D55E8);
  return sub_48CE0(v3, v4, a1 + *(int *)(v6 + 44), v5);
}

uint64_t sub_496A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_496C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_496DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_496F8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_49718()
{
  unint64_t result = qword_D55F0;
  if (!qword_D55F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D55F0);
  }
  return result;
}

unint64_t sub_49770()
{
  unint64_t result = qword_D55F8;
  if (!qword_D55F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D55F8);
  }
  return result;
}

double sub_497C4@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_8FB40();
  sub_8FB10();
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetWidth(v14);
  sub_8FB20();
  double result = *(double *)&v11;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v13;
  return result;
}

void (*sub_49854(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_8F6D0();
  return sub_44704;
}

uint64_t sub_498C4()
{
  return sub_4AC40(&qword_D5600, &qword_D5608);
}

uint64_t sub_49900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_4A5D0();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_49964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_4A5D0();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_499C8(uint64_t a1)
{
  unint64_t v2 = sub_4A5D0();

  return Shape.body.getter(a1, v2);
}

uint64_t destroy for ChargingStatusContainerView()
{
  swift_release();

  return swift_release();
}

void *_s14BatteryUsageUI27ChargingStatusContainerViewVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ChargingStatusContainerView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ChargingStatusContainerView(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for ChargingStatusContainerView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ChargingStatusContainerView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChargingStatusContainerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChargingStatusContainerView()
{
  return &type metadata for ChargingStatusContainerView;
}

__n128 initializeWithTake for ChargingStatusView(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ChargingStatusView()
{
  return &type metadata for ChargingStatusView;
}

uint64_t _s14BatteryUsageUI18ChargingStatusViewVwxx_0()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s14BatteryUsageUI18ChargingStatusViewVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *_s14BatteryUsageUI18ChargingStatusViewVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s14BatteryUsageUI18ChargingStatusViewVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ProgressLineView()
{
  return &type metadata for ProgressLineView;
}

uint64_t destroy for SegmentedProgressLine()
{
  return swift_release();
}

void *_s14BatteryUsageUI21SegmentedProgressLineVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  return a1;
}

void *assignWithCopy for SegmentedProgressLine(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for SegmentedProgressLine(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  a1[2] = a2[2];
  return a1;
}

uint64_t _s14BatteryUsageUI18ChargingStatusViewVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_49E98(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SegmentedProgressLine()
{
  return &type metadata for SegmentedProgressLine;
}

ValueMetadata *type metadata accessor for Line()
{
  return &type metadata for Line;
}

uint64_t sub_49EF8()
{
  return sub_4A8FC(&qword_D5610, &qword_D5618, (void (*)(void))sub_49F3C);
}

unint64_t sub_49F3C()
{
  unint64_t result = qword_D5620;
  if (!qword_D5620)
  {
    sub_429E0(&qword_D5628);
    sub_4AC40(&qword_D5630, &qword_D5638);
    sub_4AC40(&qword_D5640, &qword_D5648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5620);
  }
  return result;
}

unint64_t sub_4A004()
{
  unint64_t result = qword_D5650;
  if (!qword_D5650)
  {
    sub_429E0(&qword_D55B8);
    sub_4A8FC(&qword_D5658, &qword_D55A8, (void (*)(void))sub_4A0D0);
    sub_4AC40(&qword_D5678, &qword_D55C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5650);
  }
  return result;
}

uint64_t sub_4A0D0()
{
  return sub_4A8FC(&qword_D5660, &qword_D55A0, (void (*)(void))sub_4A100);
}

unint64_t sub_4A100()
{
  unint64_t result = qword_D5668;
  if (!qword_D5668)
  {
    sub_429E0(&qword_D5598);
    sub_4AC40(&qword_D5670, &qword_D5590);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5668);
  }
  return result;
}

unint64_t sub_4A1A0()
{
  unint64_t result = qword_D5680;
  if (!qword_D5680)
  {
    sub_429E0(&qword_D55D8);
    sub_4A240();
    sub_4AC40(&qword_D5698, &qword_D56A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5680);
  }
  return result;
}

unint64_t sub_4A240()
{
  unint64_t result = qword_D5688;
  if (!qword_D5688)
  {
    sub_429E0(&qword_D55D0);
    sub_4AC40(&qword_D5690, &qword_D55C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5688);
  }
  return result;
}

uint64_t sub_4A2E0()
{
  return sub_4A8FC(&qword_D56B8, &qword_D56C0, (void (*)(void))sub_4A310);
}

uint64_t sub_4A310()
{
  return sub_4A8FC(&qword_D56C8, &qword_D56D0, (void (*)(void))sub_4A340);
}

unint64_t sub_4A340()
{
  unint64_t result = qword_D56D8;
  if (!qword_D56D8)
  {
    sub_429E0(&qword_D56E0);
    sub_4A3E0();
    sub_4AC40(&qword_D5698, &qword_D56A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D56D8);
  }
  return result;
}

unint64_t sub_4A3E0()
{
  unint64_t result = qword_D56E8;
  if (!qword_D56E8)
  {
    sub_429E0(&qword_D56F0);
    sub_4AC40(&qword_D56F8, &qword_D5700);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D56E8);
  }
  return result;
}

uint64_t sub_4A480()
{
  return sub_4A8FC(&qword_D5708, &qword_D5710, (void (*)(void))sub_4A4C4);
}

uint64_t sub_4A4C4()
{
  return sub_4A8FC(&qword_D5718, &qword_D5720, (void (*)(void))sub_4A4F4);
}

unint64_t sub_4A4F4()
{
  unint64_t result = qword_D5728;
  if (!qword_D5728)
  {
    sub_429E0(&qword_D5730);
    sub_4AC40(&qword_D5738, &qword_D5740);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5728);
  }
  return result;
}

uint64_t sub_4A594()
{
  return sub_4AC40(&qword_D5748, &qword_D5750);
}

unint64_t sub_4A5D0()
{
  unint64_t result = qword_D5758;
  if (!qword_D5758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5758);
  }
  return result;
}

uint64_t sub_4A624()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_4A65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_49130(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_4A664()
{
  unint64_t result = qword_D5770;
  if (!qword_D5770)
  {
    sub_429E0(&qword_D5768);
    sub_4A8FC(&qword_D5778, &qword_D5780, (void (*)(void))sub_4A730);
    sub_4AC40(&qword_D57F8, &qword_D5800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5770);
  }
  return result;
}

uint64_t sub_4A730()
{
  return sub_4A8FC(&qword_D5788, &qword_D5790, (void (*)(void))sub_4A760);
}

unint64_t sub_4A760()
{
  unint64_t result = qword_D5798;
  if (!qword_D5798)
  {
    sub_429E0(&qword_D57A0);
    sub_4A800();
    sub_4AC40(&qword_D57F0, &qword_D5580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5798);
  }
  return result;
}

unint64_t sub_4A800()
{
  unint64_t result = qword_D57A8;
  if (!qword_D57A8)
  {
    sub_429E0(&qword_D57B0);
    sub_4A8FC(&qword_D57B8, &qword_D57C0, (void (*)(void))sub_4A8CC);
    sub_4AC40(&qword_D57E0, &qword_D57E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D57A8);
  }
  return result;
}

uint64_t sub_4A8CC()
{
  return sub_4A8FC(&qword_D57C8, &qword_D57D0, (void (*)(void))sub_4A978);
}

uint64_t sub_4A8FC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_429E0(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_4A978()
{
  unint64_t result = qword_D57D8;
  if (!qword_D57D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D57D8);
  }
  return result;
}

uint64_t sub_4A9CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_4AA24(uint64_t a1)
{
  return a1;
}

uint64_t sub_4AA7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_8F810();
  *a1 = result;
  return result;
}

uint64_t sub_4AAA8()
{
  return sub_8F820();
}

uint64_t sub_4AAD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_8F7F0();
  *a1 = result;
  return result;
}

uint64_t sub_4AB00()
{
  return sub_8F800();
}

unint64_t sub_4AB2C()
{
  unint64_t result = qword_D5880;
  if (!qword_D5880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5880);
  }
  return result;
}

uint64_t sub_4AB80(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_4AB90(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

unint64_t sub_4ABA0()
{
  unint64_t result = qword_D58D0;
  if (!qword_D58D0)
  {
    sub_429E0(&qword_D58C8);
    sub_4AC40(&qword_D58D8, &qword_D58E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D58D0);
  }
  return result;
}

uint64_t sub_4AC40(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_429E0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_4AC84(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_3ED90(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_4ACE8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_3ED90(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_4AD4C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_4AD94()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_3F2C8;
  return sub_45934((uint64_t)v4, v5, v6, v2, v3);
}

uint64_t sub_4AE2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_3ED90(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_4AE88()
{
  qword_DA670 = 0x737472616863;
  *(void *)algn_DA678 = 0xE600000000000000;
}

uint64_t sub_4AEA8()
{
  uint64_t v0 = sub_8F2A0();
  sub_4BA50(v0, qword_DA680);
  sub_4AF74(v0, (uint64_t)qword_DA680);
  sub_4BAB4();
  if (qword_D86D0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_90310();
  return sub_8F2B0();
}

uint64_t sub_4AF74(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void sub_4AFAC(uint64_t (*a1)(void))
{
  os_log_type_t v2 = sub_90220();
  sub_4B814(v2, a1);
}

void sub_4AFE0(uint64_t (*a1)(void))
{
  os_log_type_t v2 = sub_90210();
  sub_4B814(v2, a1);
}

void sub_4B014(uint64_t (*a1)(void))
{
  os_log_type_t v2 = sub_90230();
  sub_4B814(v2, a1);
}

void *sub_4B048()
{
  return &unk_9C5C0;
}

void *sub_4B054()
{
  return &unk_9C5C8;
}

void sub_4B060()
{
  qword_DA698 = 0x4030000000000000;
}

uint64_t *sub_4B070()
{
  if (qword_D86E0 != -1) {
    swift_once();
  }
  return &qword_DA698;
}

void sub_4B0BC()
{
  qword_DA6A0 = 0x4008000000000000;
}

uint64_t *sub_4B0CC()
{
  if (qword_D86E8 != -1) {
    swift_once();
  }
  return &qword_DA6A0;
}

void sub_4B118()
{
  qword_DA6A8 = 0x4000000000000000;
}

uint64_t *sub_4B128()
{
  if (qword_D86F0 != -1) {
    swift_once();
  }
  return &qword_DA6A8;
}

void *sub_4B174()
{
  return &unk_9C5D0;
}

void *sub_4B180()
{
  return &unk_9C5D8;
}

void *sub_4B18C()
{
  return &unk_9C5E0;
}

void *sub_4B198()
{
  return &unk_9C5E8;
}

void *sub_4B1A4()
{
  return &unk_9C5F0;
}

void *sub_4B1B0()
{
  return &unk_9C5F8;
}

uint64_t sub_4B1BC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_4B290(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_4B9F0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_4B9F0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_3F768((uint64_t)v12);
  return v7;
}

uint64_t sub_4B290(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_90350();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_4B44C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_90410();
  if (!v8)
  {
    sub_904B0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_90530();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_4B44C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_4B4E4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_4B6C4(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_4B6C4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_4B4E4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_4B65C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_903E0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_904B0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_90070();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_90530();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_904B0();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_4B65C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_3ED90(&qword_D5938);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  void v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_4B6C4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_3ED90(&qword_D5938);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  char v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_90530();
  __break(1u);
  return result;
}

void sub_4B814(os_log_type_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2();
  unint64_t v5 = v4;
  if (qword_D86D8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_8F2A0();
  sub_4AF74(v6, (uint64_t)qword_DA680);
  swift_bridgeObjectRetain();
  int64_t v7 = sub_8F290();
  os_log_type_t v8 = a1;
  if (os_log_type_enabled(v7, a1))
  {
    int64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)int64_t v9 = 136446210;
    swift_bridgeObjectRetain();
    sub_4B1BC(v3, v5, &v10);
    sub_90340();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v7, v8, "%{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

ValueMetadata *type metadata accessor for BUILog()
{
  return &type metadata for BUILog;
}

ValueMetadata *type metadata accessor for BUIConstant()
{
  return &type metadata for BUIConstant;
}

ValueMetadata *type metadata accessor for BUIInterval()
{
  return &type metadata for BUIInterval;
}

uint64_t sub_4B9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t *sub_4BA50(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_4BAB4()
{
  unint64_t result = qword_D5940;
  if (!qword_D5940)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_D5940);
  }
  return result;
}

id sub_4BB5C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChargingStatusViewFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_4BB90()
{
  uint64_t v6 = sub_45C30();
  uint64_t v7 = v0;
  id v1 = objc_allocWithZone((Class)sub_3ED90(&qword_D5970));
  swift_retain();
  swift_retain();
  objc_super v2 = (void *)sub_8F940();
  id result = objc_msgSend(v2, "view", v6, v7);
  if (result)
  {
    unint64_t v4 = result;
    id v5 = [self clearColor];
    [v4 setBackgroundColor:v5];

    swift_release();
    swift_release();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ChargingStatusViewFactory()
{
  return self;
}

id sub_4BE38()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClosableActionCardViewFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_4BE6C()
{
  qword_D8708 = 0x402E000000000000;
}

void sub_4BE7C()
{
  qword_D8718 = 0x4032000000000000;
}

void sub_4BE8C()
{
  qword_D8728 = 0x402E000000000000;
}

void sub_4BE9C()
{
  qword_D8738 = 0x4020000000000000;
}

void sub_4BEAC()
{
  qword_D8748 = 0x4024000000000000;
}

uint64_t sub_4BEBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v85 = sub_8F920();
  sub_4AB2C();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_8FC00();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  sub_8FA30();
  uint64_t v8 = sub_8FBE0();
  uint64_t v10 = v9;
  char v12 = v11;
  swift_release();
  sub_4AB80(v3, v5, v7);
  swift_bridgeObjectRelease();
  sub_8FA70();
  uint64_t v92 = sub_8FB60();
  uint64_t v93 = v13;
  char v86 = v14;
  uint64_t v77 = v15;
  sub_4AB80(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v88 = v1;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_8FC00();
  uint64_t v18 = v17;
  LOBYTE(v3) = v19 & 1;
  sub_8FA30();
  uint64_t v20 = sub_8FBE0();
  uint64_t v22 = v21;
  LOBYTE(v5) = v23;
  swift_release();
  char v24 = v5 & 1;
  sub_4AB80(v16, v18, v3);
  swift_bridgeObjectRelease();
  id v25 = [self systemGrayColor];
  *(void *)uint64_t v95 = sub_8FD60();
  uint64_t v90 = sub_8FBC0();
  uint64_t v91 = v26;
  uint64_t v28 = v27;
  char v30 = v29;
  sub_4AB80(v20, v22, v24);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v31 = swift_getKeyPath();
  if (qword_D8720 != -1) {
    swift_once();
  }
  char v32 = v86 & 1;
  uint64_t v81 = qword_D8728;
  uint64_t v82 = *(void *)(v88 + 32);
  long long v87 = *(_OWORD *)(v88 + 40);
  uint64_t v33 = *(void *)(v88 + 56);
  char v104 = v32;
  v94[0] = v30 & 1;
  char v108 = 1;
  char v106 = 0;
  v101[0] = *(_DWORD *)v95;
  *(_DWORD *)((char *)v101 + 3) = *(_DWORD *)&v95[3];
  *(_DWORD *)((char *)v100 + 3) = *(_DWORD *)((char *)v96 + 3);
  v100[0] = v96[0];
  *(_DWORD *)((char *)v99 + 3) = *(_DWORD *)((char *)v109 + 3);
  v99[0] = v109[0];
  char v79 = v32;
  *(_DWORD *)((char *)v98 + 3) = *(_DWORD *)((char *)v107 + 3);
  v98[0] = v107[0];
  *(_DWORD *)((char *)v97 + 3) = *(_DWORD *)((char *)v105 + 3);
  v97[0] = v105[0];
  sub_4AB90(v92, v93, v32);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_4AB90(v90, v28, v30 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v83 = v33;
  swift_retain();
  char v80 = v30 & 1;
  sub_4AB80(v90, v28, v30 & 1);
  swift_bridgeObjectRelease();
  uint64_t v84 = v31;
  swift_release();
  sub_4AB80(v92, v93, v104);
  swift_bridgeObjectRelease();
  swift_release();
  v109[0] = v101[0];
  *(_DWORD *)((char *)v109 + 3) = *(_DWORD *)&v95[3];
  v107[0] = v96[0];
  *(_DWORD *)((char *)v107 + 3) = *(_DWORD *)((char *)v100 + 3);
  *(_DWORD *)((char *)v105 + 3) = *(_DWORD *)((char *)v99 + 3);
  v105[0] = v99[0];
  *(_DWORD *)((char *)v103 + 3) = *(_DWORD *)((char *)v98 + 3);
  v103[0] = v98[0];
  *(_DWORD *)((char *)v102 + 3) = *(_DWORD *)((char *)v97 + 3);
  v102[0] = v97[0];
  unsigned __int8 v34 = sub_8F9E0();
  unsigned __int8 v35 = sub_8FA00();
  char v36 = sub_8F9F0();
  sub_8F9F0();
  if (sub_8F9F0() != v34) {
    char v36 = sub_8F9F0();
  }
  sub_8F9F0();
  if (sub_8F9F0() != v35) {
    char v36 = sub_8F9F0();
  }
  if (qword_D8710 != -1) {
    swift_once();
  }
  sub_8F6F0();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  unsigned __int8 v45 = sub_8F9C0();
  unsigned __int8 v46 = sub_8F9D0();
  char v47 = sub_8F9F0();
  sub_8F9F0();
  if (sub_8F9F0() != v45) {
    char v47 = sub_8F9F0();
  }
  sub_8F9F0();
  if (sub_8F9F0() != v46) {
    char v47 = sub_8F9F0();
  }
  uint64_t v48 = v88;
  if (qword_D8700 != -1) {
    swift_once();
  }
  sub_8F6F0();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v89 = sub_8FEC0();
  uint64_t v78 = v57;
  uint64_t v58 = sub_8FEC0();
  uint64_t v60 = v59;
  uint64_t v62 = *(void *)(v48 + 64);
  uint64_t v61 = *(void *)(v48 + 72);
  swift_retain();
  uint64_t v63 = sub_8FEA0();
  sub_4C7EC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v96, 0.0, 1, INFINITY, 0, v63, v64, v58, v60, v62, v61);
  swift_release();
  LOBYTE(v61) = sub_8F9C0();
  unsigned __int8 v65 = sub_8FA00();
  char v66 = sub_8F9F0();
  sub_8F9F0();
  if (sub_8F9F0() != v61) {
    char v66 = sub_8F9F0();
  }
  sub_8F9F0();
  if (sub_8F9F0() != v65) {
    char v66 = sub_8F9F0();
  }
  char v104 = 0;
  char v106 = 0;
  if (qword_D8740 != -1) {
    swift_once();
  }
  uint64_t result = sub_8F6F0();
  *(_OWORD *)&v95[87] = v96[5];
  *(_OWORD *)&v95[103] = v96[6];
  *(_OWORD *)&v95[119] = v96[7];
  *(_OWORD *)&v95[135] = v96[8];
  *(_OWORD *)&v95[23] = v96[1];
  *(_OWORD *)&v95[39] = v96[2];
  *(_OWORD *)&v95[55] = v96[3];
  *(_OWORD *)&v95[71] = v96[4];
  char v68 = v106;
  *(_OWORD *)&v95[7] = v96[0];
  *(void *)a1 = v85;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(_DWORD *)(a1 + 17) = v101[0];
  *(_DWORD *)(a1 + 20) = *(_DWORD *)((char *)v101 + 3);
  *(void *)(a1 + 24) = v92;
  *(void *)(a1 + 32) = v93;
  *(unsigned char *)(a1 + 40) = v79;
  *(_DWORD *)(a1 + 41) = v109[0];
  *(_DWORD *)(a1 + 44) = *(_DWORD *)((char *)v109 + 3);
  *(void *)(a1 + 48) = v77;
  *(void *)(a1 + 56) = KeyPath;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 1;
  int v69 = v107[0];
  *(_DWORD *)(a1 + 76) = *(_DWORD *)((char *)v107 + 3);
  *(_DWORD *)(a1 + 73) = v69;
  *(void *)(a1 + 80) = v90;
  *(void *)(a1 + 88) = v28;
  *(unsigned char *)(a1 + 96) = v80;
  *(_DWORD *)(a1 + 97) = v105[0];
  *(_DWORD *)(a1 + 100) = *(_DWORD *)((char *)v105 + 3);
  *(void *)(a1 + 104) = v91;
  *(void *)(a1 + 112) = v84;
  *(void *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 128) = 1;
  *(_DWORD *)(a1 + 129) = v103[0];
  *(_DWORD *)(a1 + 132) = *(_DWORD *)((char *)v103 + 3);
  *(void *)(a1 + 136) = v81;
  *(unsigned char *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 148) = *(_DWORD *)((char *)v102 + 3);
  *(_DWORD *)(a1 + 145) = v102[0];
  *(void *)(a1 + 152) = v82;
  *(_OWORD *)(a1 + 160) = v87;
  *(void *)(a1 + 176) = v83;
  *(unsigned char *)(a1 + 184) = v36;
  *(_DWORD *)(a1 + 188) = *(_DWORD *)((char *)v100 + 3);
  *(_DWORD *)(a1 + 185) = v100[0];
  *(void *)(a1 + 192) = v38;
  *(void *)(a1 + 200) = v40;
  *(void *)(a1 + 208) = v42;
  *(void *)(a1 + 216) = v44;
  *(unsigned char *)(a1 + 224) = 0;
  int v70 = v99[0];
  *(_DWORD *)(a1 + 228) = *(_DWORD *)((char *)v99 + 3);
  *(_DWORD *)(a1 + 225) = v70;
  *(unsigned char *)(a1 + 232) = v47;
  int v71 = v98[0];
  *(_DWORD *)(a1 + 236) = *(_DWORD *)((char *)v98 + 3);
  *(_DWORD *)(a1 + 233) = v71;
  *(void *)(a1 + 240) = v50;
  *(void *)(a1 + 248) = v52;
  *(void *)(a1 + 256) = v54;
  *(void *)(a1 + 264) = v56;
  *(unsigned char *)(a1 + 272) = v68;
  *(_OWORD *)(a1 + 273) = *(_OWORD *)v95;
  *(_OWORD *)(a1 + 289) = *(_OWORD *)&v95[16];
  *(_OWORD *)(a1 + 337) = *(_OWORD *)&v95[64];
  *(_OWORD *)(a1 + 353) = *(_OWORD *)&v95[80];
  *(_OWORD *)(a1 + 305) = *(_OWORD *)&v95[32];
  *(_OWORD *)(a1 + 321) = *(_OWORD *)&v95[48];
  *(void *)(a1 + 416) = *(void *)&v95[143];
  *(_OWORD *)(a1 + 385) = *(_OWORD *)&v95[112];
  *(_OWORD *)(a1 + 401) = *(_OWORD *)&v95[128];
  *(_OWORD *)(a1 + 369) = *(_OWORD *)&v95[96];
  *(unsigned char *)(a1 + 424) = v66;
  *(_DWORD *)(a1 + 425) = v97[0];
  *(_DWORD *)(a1 + 428) = *(_DWORD *)((char *)v97 + 3);
  *(void *)(a1 + 432) = v72;
  *(void *)(a1 + 440) = v73;
  *(void *)(a1 + 448) = v74;
  *(void *)(a1 + 456) = v75;
  *(unsigned char *)(a1 + 464) = 0;
  *(_DWORD *)(a1 + 465) = *(_DWORD *)v94;
  *(_DWORD *)(a1 + 468) = *(_DWORD *)&v94[3];
  *(void *)(a1 + 472) = v89;
  *(void *)(a1 + 480) = v78;
  return result;
}

uint64_t sub_4C7EC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v20 = a18;
  uint64_t v22 = a16;
  uint64_t v21 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  int v25 = a8 & 1;
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (v25) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_90240();
    char v32 = (void *)sub_8F990();
    sub_8F280();

    uint64_t v20 = a18;
    uint64_t v21 = a17;
    uint64_t v22 = a16;
  }
  sub_8F7C0();
  *(void *)a9 = v22;
  *(void *)(a9 + 8) = v21;
  *(void *)(a9 + 16) = v20;
  *(void *)(a9 + 24) = a19;
  *(_OWORD *)(a9 + 96) = v38;
  *(_OWORD *)(a9 + 112) = v39;
  *(_OWORD *)(a9 + 128) = v40;
  *(_OWORD *)(a9 + 32) = v34;
  *(_OWORD *)(a9 + 48) = v35;
  *(_OWORD *)(a9 + 64) = v36;
  *(_OWORD *)(a9 + 80) = v37;

  return swift_retain();
}

uint64_t sub_4C9C4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_90240();
    char v23 = (void *)sub_8F990();
    sub_8F280();
  }
  sub_8F7C0();
  long long v24 = v13[5];
  a9[4] = v13[4];
  a9[5] = v24;
  *(_OWORD *)((char *)a9 + 89) = *(_OWORD *)((char *)v13 + 89);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  long long v26 = v13[3];
  a9[2] = v13[2];
  a9[3] = v26;
  a9[7] = v28;
  a9[8] = v29;
  a9[12] = v33;
  a9[13] = v34;
  a9[10] = v31;
  a9[11] = v32;
  a9[9] = v30;

  return sub_4E5E8((uint64_t)v13);
}

uint64_t sub_4CB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = sub_8FE50();
  __chkstk_darwin(v6 - 8);
  uint64_t v56 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_3ED90(&qword_D5AC8);
  __chkstk_darwin(v55);
  uint64_t v54 = (uint64_t)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_3ED90(&qword_D59F8);
  __chkstk_darwin(v53);
  uint64_t v57 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v73 = a1;
  *((void *)&v73 + 1) = a2;
  sub_4AB2C();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_8FC00();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  sub_8FAB0();
  uint64_t v15 = sub_8FBE0();
  uint64_t v51 = v16;
  uint64_t v52 = v15;
  char v18 = v17;
  uint64_t v50 = v19;
  swift_release();
  sub_4AB80(v10, v12, v14);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = sub_8FD20();
  char v22 = sub_8FA10();
  if (qword_D8730 != -1) {
    swift_once();
  }
  sub_8F6F0();
  uint64_t v23 = v51;
  uint64_t v24 = v52;
  uint64_t v59 = v52;
  uint64_t v60 = v51;
  char v61 = v18 & 1;
  uint64_t v62 = v50;
  uint64_t v63 = KeyPath;
  uint64_t v64 = 0;
  uint64_t v49 = KeyPath;
  char v65 = 1;
  uint64_t v66 = v21;
  char v67 = v22;
  uint64_t v68 = v25;
  uint64_t v69 = v26;
  uint64_t v70 = v27;
  uint64_t v71 = v28;
  char v72 = 0;
  sub_8FEC0();
  sub_4C9C4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v58, 0.0, 1, 0.0, 1);
  sub_4AB80(v24, v23, v18 & 1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  long long v83 = v58[10];
  long long v84 = v58[11];
  long long v85 = v58[12];
  long long v86 = v58[13];
  long long v79 = v58[6];
  long long v80 = v58[7];
  long long v81 = v58[8];
  long long v82 = v58[9];
  long long v75 = v58[2];
  long long v76 = v58[3];
  long long v77 = v58[4];
  long long v78 = v58[5];
  long long v73 = v58[0];
  long long v74 = v58[1];
  uint64_t v29 = sub_8FEC0();
  uint64_t v31 = v30;
  uint64_t v32 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v33 = sub_8F900();
  uint64_t v34 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v56, v32, v33);
  uint64_t v35 = sub_8FD00();
  uint64_t v36 = v54;
  sub_4E3F8(v34, v54);
  uint64_t v37 = v55;
  *(void *)(v36 + *(int *)(v55 + 52)) = v35;
  *(_WORD *)(v36 + *(int *)(v37 + 56)) = 256;
  sub_4E45C(v34);
  uint64_t v38 = v57;
  sub_4E4B8(v36, v57);
  long long v39 = (uint64_t *)(v38 + *(int *)(v53 + 36));
  *long long v39 = v29;
  v39[1] = v31;
  uint64_t v40 = sub_3ED90(&qword_D5980);
  sub_4E520(v38, (uint64_t)a3 + *(int *)(v40 + 36));
  long long v41 = v84;
  a3[10] = v83;
  a3[11] = v41;
  long long v42 = v86;
  a3[12] = v85;
  a3[13] = v42;
  long long v43 = v80;
  a3[6] = v79;
  a3[7] = v43;
  long long v44 = v82;
  a3[8] = v81;
  a3[9] = v44;
  long long v45 = v76;
  a3[2] = v75;
  a3[3] = v45;
  long long v46 = v78;
  a3[4] = v77;
  a3[5] = v46;
  long long v47 = v74;
  *a3 = v73;
  a3[1] = v47;
  return sub_4E588(v38);
}

uint64_t sub_4CFA8()
{
  uint64_t v1 = sub_3ED90(&qword_D5978);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = *v0;
  uint64_t v5 = v0[1];
  uint64_t v8 = v0[2];
  uint64_t v7 = v0[3];
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v6;
  v9[3] = v5;
  v9[4] = v8;
  v9[5] = v7;
  uint64_t v12 = v6;
  uint64_t v13 = v5;
  uint64_t v14 = v8;
  uint64_t v15 = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_3ED90(&qword_D5980);
  sub_4D6D0();
  sub_8FE10();
  sub_4AC40(&qword_D5A00, &qword_D5978);
  sub_8FCC0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_4D16C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_3ED90(&qword_D58B0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_8FD70();
  uint64_t v7 = sub_8FA30();
  uint64_t KeyPath = swift_getKeyPath();
  v12[1] = v6;
  v12[2] = KeyPath;
  uint64_t v12[3] = v7;
  sub_8FA70();
  sub_3ED90(&qword_D58C8);
  sub_4ABA0();
  sub_8FC90();
  swift_release();
  swift_release();
  swift_release();
  id v9 = [self systemGray4Color];
  uint64_t v10 = sub_8FD60();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  *(void *)(a1 + *(int *)(sub_3ED90(&qword_D5A10) + 36)) = v10;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_4D32C()
{
  uint64_t v1 = sub_3ED90(&qword_D5A08);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  uint64_t v5 = v0[1];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  swift_retain();
  sub_3ED90(&qword_D5A10);
  sub_4D934();
  sub_8FE10();
  sub_4AC40(&qword_D5A20, &qword_D5A08);
  sub_8FCC0();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_4D4CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_8F870();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_4D500()
{
  return sub_8F880();
}

id sub_4D530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v10 = objc_allocWithZone((Class)sub_3ED90(&qword_D5AD0));
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain_n();
  uint64_t v11 = (void *)sub_8F940();
  id result = objc_msgSend(v11, "view", a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  if (result)
  {
    uint64_t v13 = result;
    id v14 = [self clearColor];
    [v13 setBackgroundColor:v14];

    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ClosableActionCardViewFactory()
{
  return self;
}

uint64_t sub_4D6A0()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_4D6C8@<X0>(_OWORD *a1@<X8>)
{
  return sub_4CB90(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_4D6D0()
{
  unint64_t result = qword_D5988;
  if (!qword_D5988)
  {
    sub_429E0(&qword_D5980);
    sub_4E0B4(&qword_D5990, &qword_D5998, (void (*)(void))sub_4D79C);
    sub_4AC40(&qword_D59F0, &qword_D59F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5988);
  }
  return result;
}

uint64_t sub_4D79C()
{
  return sub_4E0B4(&qword_D59A0, &qword_D59A8, (void (*)(void))sub_4D7CC);
}

unint64_t sub_4D7CC()
{
  unint64_t result = qword_D59B0;
  if (!qword_D59B0)
  {
    sub_429E0(&qword_D59B8);
    sub_4D86C();
    sub_4AC40(&qword_D59E0, &qword_D59E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D59B0);
  }
  return result;
}

unint64_t sub_4D86C()
{
  unint64_t result = qword_D59C0;
  if (!qword_D59C0)
  {
    sub_429E0(&qword_D59C8);
    sub_4AC40(&qword_D59D0, &qword_D59D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D59C0);
  }
  return result;
}

uint64_t sub_4D90C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_4D934()
{
  unint64_t result = qword_D5A18;
  if (!qword_D5A18)
  {
    sub_429E0(&qword_D5A10);
    sub_429E0(&qword_D58C8);
    sub_4ABA0();
    swift_getOpaqueTypeConformance2();
    sub_4AC40(&qword_D59E0, &qword_D59E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5A18);
  }
  return result;
}

uint64_t sub_4DA08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_4DA24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_4DA40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ClosableActionCardView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ClosableActionCardView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ClosableActionCardView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[7];
  a1[6] = a2[6];
  a1[7] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[9];
  a1[8] = a2[8];
  a1[9] = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ClosableActionCardView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for ClosableActionCardView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClosableActionCardView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClosableActionCardView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClosableActionCardView()
{
  return &type metadata for ClosableActionCardView;
}

uint64_t destroy for ActionButton()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for ActionButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ActionButton(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ActionButton(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for ActionButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionButton()
{
  return &type metadata for ActionButton;
}

void *initializeBufferWithCopyOfBuffer for CloseButton(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for CloseButton(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CloseButton(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CloseButton()
{
  return &type metadata for CloseButton;
}

unint64_t sub_4DFE8()
{
  unint64_t result = qword_D5A50;
  if (!qword_D5A50)
  {
    sub_429E0(&qword_D5A58);
    sub_4E0B4(&qword_D5A60, &qword_D5A68, (void (*)(void))sub_4E130);
    sub_4AC40(&qword_D5A90, &qword_D5A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5A50);
  }
  return result;
}

uint64_t sub_4E0B4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_429E0(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_4E130()
{
  unint64_t result = qword_D5A70;
  if (!qword_D5A70)
  {
    sub_429E0(&qword_D5A78);
    sub_4AC40(&qword_D5A80, &qword_D5A88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5A70);
  }
  return result;
}

uint64_t sub_4E1D0()
{
  return sub_4E208(&qword_D5AA0, &qword_D5AA8, &qword_D5A00, &qword_D5978);
}

uint64_t sub_4E208(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_429E0(a2);
    sub_4AC40(a3, a4);
    sub_4E2A4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_4E2A4()
{
  unint64_t result = qword_D5AB0;
  if (!qword_D5AB0)
  {
    sub_8F980();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5AB0);
  }
  return result;
}

uint64_t sub_4E2FC()
{
  return sub_4E208(&qword_D5AB8, &qword_D5AC0, &qword_D5A20, &qword_D5A08);
}

uint64_t sub_4E334()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_4E36C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_4E37C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_4E3B8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_4E3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8FE50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_4E45C(uint64_t a1)
{
  uint64_t v2 = sub_8FE50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_4E4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3ED90(&qword_D5AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_4E520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3ED90(&qword_D59F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_4E588(uint64_t a1)
{
  uint64_t v2 = sub_3ED90(&qword_D59F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_4E5E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_4E660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return swift_release();
}

void *sub_4E740(uint64_t a1)
{
  uint64_t v16 = sub_3ED90(&qword_D5B58);
  uint64_t v2 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_3ED90(&qword_D5B38);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  id v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    char v17 = _swiftEmptyArrayStorage;
    sub_500B0(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v12 = *(void *)(v2 + 72);
    id v10 = v17;
    do
    {
      sub_4ACE8(v11, (uint64_t)v4, &qword_D5B58);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_500B0(0, v10[2] + 1, 1);
        id v10 = v17;
      }
      unint64_t v14 = v10[2];
      unint64_t v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_500B0(v13 > 1, v14 + 1, 1);
        id v10 = v17;
      }
      v10[2] = v14 + 1;
      sub_50048((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_4E97C(uint64_t a1)
{
  return a1;
}

uint64_t sub_4E9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v6 = sub_8F2E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = __chkstk_darwin(v6);
  id v10 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, a1, v6, v9);
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v18 = *(void *)(a2 + 40);
  uint64_t v19 = v11;
  unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v13 = (v8 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v12, v10, v6);
  uint64_t v15 = (_OWORD *)(v14 + v13);
  long long v16 = *(_OWORD *)(a2 + 16);
  _OWORD *v15 = *(_OWORD *)a2;
  v15[1] = v16;
  v15[2] = *(_OWORD *)(a2 + 32);
  *a3 = sub_4FCDC;
  a3[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v14;
  swift_retain();
  sub_4E97C((uint64_t)&v19);
  swift_retain();
  return sub_4EB3C((uint64_t)&v18);
}

uint64_t sub_4EB34@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  return sub_4E9A8(a1, v2 + 16, a2);
}

uint64_t sub_4EB3C(uint64_t a1)
{
  return a1;
}

uint64_t sub_4EB68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_4EB84@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v5 = sub_8F960();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  uint64_t v26 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_8F2E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  sub_8F2C0();
  type metadata accessor for CGRect(0);
  sub_8F770();
  swift_release();
  uint64_t v12 = v28;
  uint64_t v13 = v29;
  long long v14 = v30;
  uint64_t v15 = sub_8FD10();
  sub_8FB50();
  uint64_t v28 = v15;
  LOWORD(v29) = 256;
  long long v30 = v34;
  long long v31 = v35;
  char v32 = v36;
  char v33 = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  uint64_t v16 = *(void *)(a2 + 8);
  uint64_t v37 = *(void *)(a2 + 40);
  uint64_t v38 = v16;
  unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v12;
  *(void *)(v18 + 24) = v13;
  *(_OWORD *)(v18 + 32) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v17, (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  uint64_t v19 = (_OWORD *)(v18 + ((v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  long long v20 = *(_OWORD *)(a2 + 16);
  _OWORD *v19 = *(_OWORD *)a2;
  v19[1] = v20;
  v19[2] = *(_OWORD *)(a2 + 32);
  swift_retain();
  sub_4E97C((uint64_t)&v38);
  swift_retain();
  sub_4EB3C((uint64_t)&v37);
  sub_8F970();
  sub_3ED90(&qword_D5B08);
  sub_4FF00();
  uint64_t v21 = v25;
  sub_8FCA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v21);
  long long v22 = v30;
  long long v23 = v31;
  LOBYTE(a2) = v32;
  swift_release();
  return sub_43238(v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), a2);
}

void sub_4EEB8(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_3ED90(&qword_D5B38);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = ((uint64_t (*)(uint64_t))__chkstk_darwin)(v13);
  long long v84 = (void **)((char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v68 - v17;
  uint64_t v19 = sub_3ED90(&qword_D5B40);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (void **)((char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = sub_3ED90(&qword_D5B48);
  uint64_t v23 = ((uint64_t (*)(uint64_t))__chkstk_darwin)(v22 - 8);
  uint64_t v25 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v68 - v26;
  uint64_t v28 = sub_8F150();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = ((uint64_t (*)(uint64_t))__chkstk_darwin)(v28);
  long long v77 = (char *)&v68 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = ((uint64_t (*)(uint64_t))__chkstk_darwin)(v30);
  long long v83 = (char *)&v68 - v33;
  __chkstk_darwin(v32);
  long long v85 = (char *)&v68 - v34;
  v92.origin.x = a2;
  v92.origin.y = a3;
  v92.size.width = a4;
  v92.size.height = a5;
  double MinX = CGRectGetMinX(v92);
  v93.origin.x = a2;
  v93.origin.y = a3;
  v93.size.width = a4;
  v93.size.height = a5;
  double MaxX = CGRectGetMaxX(v93);
  if (MinX > MaxX)
  {
    __break(1u);
    return;
  }
  if (MinX <= a1 && MaxX > a1)
  {
    v94.origin.x = a2;
    v94.origin.y = a3;
    v94.size.width = a4;
    v94.size.height = a5;
    CGRectGetMinX(v94);
    sub_8F2D0();
    uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
    uint64_t v76 = v29 + 48;
    long long v75 = v37;
    if (v37((uint64_t)v27, 1, v28) == 1)
    {
      sub_4AE2C((uint64_t)v27, &qword_D5B48);
      return;
    }
    uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 32);
    uint64_t v74 = v29 + 32;
    long long v73 = v38;
    v38(v85, (uint64_t)v27, v28);
    uint64_t v39 = *(void *)(a7 + 40);
    uint64_t v91 = v39;
    uint64_t v40 = *(void *)(v39 + 16);
    if (!v40)
    {
      swift_bridgeObjectRetain();
      uint64_t v62 = 1;
      goto LABEL_18;
    }
    char v72 = v25;
    uint64_t v68 = v21;
    uint64_t v71 = a7;
    uint64_t v41 = v39 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    long long v82 = (void (**)(char *, char *, uint64_t))(v29 + 16);
    uint64_t v70 = v29;
    long long v79 = (void (**)(char *, uint64_t))(v29 + 8);
    uint64_t v69 = v14;
    uint64_t v78 = *(void *)(v14 + 72);
    swift_bridgeObjectRetain();
    long long v42 = &qword_D5B38;
    long long v80 = v18;
    uint64_t v81 = v13;
    while (1)
    {
      uint64_t v86 = v40;
      sub_4ACE8(v41, (uint64_t)v18, v42);
      long long v43 = &v18[*(int *)(v13 + 48)];
      sub_4FFC4();
      long long v44 = v18;
      uint64_t v45 = v28;
      long long v46 = v85;
      int v87 = sub_8FFC0();
      uint64_t v47 = (uint64_t)v84;
      uint64_t v48 = (char *)v84 + *(int *)(v13 + 48);
      uint64_t v49 = *(int *)(v13 + 64);
      uint64_t v50 = (uint64_t)v84 + v49;
      uint64_t v51 = (uint64_t)&v18[v49];
      *long long v84 = *v44;
      uint64_t v52 = v42;
      uint64_t v53 = *v82;
      (*v82)(v48, v43, v45);
      sub_4ACE8(v51, v50, &qword_D5B48);
      uint64_t v54 = v83;
      uint64_t v55 = v46;
      uint64_t v28 = v45;
      v53(v83, v55, v45);
      if (v87)
      {
        sub_4AE2C(v47, v42);
        (*v79)(v54, v45);
        uint64_t v18 = v80;
        uint64_t v13 = v81;
      }
      else
      {
        uint64_t v56 = v47;
        uint64_t v57 = (uint64_t)v72;
        sub_4ACE8(v50, (uint64_t)v72, &qword_D5B48);
        if (v75(v57, 1, v45) == 1)
        {
          sub_4AE2C(v56, &qword_D5B38);
          (*v79)(v54, v45);
          uint64_t v18 = v80;
          uint64_t v13 = v81;
LABEL_17:
          uint64_t v21 = v68;
          sub_50048((uint64_t)v18, (uint64_t)v68);
          uint64_t v62 = 0;
          a7 = v71;
          uint64_t v29 = v70;
          uint64_t v14 = v69;
LABEL_18:
          (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v21, v62, 1, v13);
          sub_5001C((uint64_t)&v91);
          int v63 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48))(v21, 1, v13);
          if (v63 == 1)
          {
            sub_4AE2C((uint64_t)v21, &qword_D5B40);
            uint64_t v64 = 0;
          }
          else
          {
            uint64_t v64 = *v21;
            char v65 = (char *)v21 + *(int *)(v13 + 48);
            sub_4AE2C((uint64_t)v21 + *(int *)(v13 + 64), &qword_D5B48);
            (*(void (**)(char *, uint64_t))(v29 + 8))(v65, v28);
          }
          v88[0] = *(_OWORD *)(a7 + 8);
          *(_OWORD *)((char *)v88 + 9) = *(_OWORD *)(a7 + 17);
          sub_3ED90(&qword_D5AD8);
          sub_8FE20();
          char v66 = v90;
          if (v63 == 1)
          {
            if (!v90)
            {
LABEL_29:
              char v67 = 1;
LABEL_30:
              v88[0] = *(_OWORD *)(a7 + 8);
              *(_OWORD *)((char *)v88 + 9) = *(_OWORD *)(a7 + 17);
              uint64_t v89 = v64;
              char v90 = v67;
              sub_8FE30();
              (*(void (**)(char *, uint64_t))(v29 + 8))(v85, v28);
              return;
            }
          }
          else
          {
            if (v64 != v89) {
              char v66 = 1;
            }
            if (v66)
            {
              char v67 = 0;
              goto LABEL_30;
            }
          }
          uint64_t v64 = 0;
          goto LABEL_29;
        }
        uint64_t v58 = v77;
        v73(v77, v57, v45);
        char v59 = sub_8F0E0();
        uint64_t v60 = *v79;
        (*v79)(v58, v28);
        uint64_t v61 = v56;
        long long v42 = v52;
        sub_4AE2C(v61, v52);
        v60(v54, v28);
        uint64_t v18 = v80;
        uint64_t v13 = v81;
        if (v59) {
          goto LABEL_17;
        }
      }
      sub_4AE2C((uint64_t)v18, v42);
      v41 += v78;
      uint64_t v40 = v86 - 1;
      if (v86 == 1)
      {
        uint64_t v62 = 1;
        a7 = v71;
        uint64_t v29 = v70;
        uint64_t v14 = v69;
        uint64_t v21 = v68;
        goto LABEL_18;
      }
    }
  }
}

uint64_t sub_4F694()
{
  return sub_8F740();
}

uint64_t sub_4F6B0()
{
  uint64_t v1 = *v0;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[5];
  uint64_t v8 = v0[1];
  uint64_t v2 = v8;
  uint64_t v9 = v4;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  *(void *)(v5 + 24) = v2;
  uint64_t v6 = v0[3];
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v6;
  *(unsigned char *)(v5 + 48) = *((unsigned char *)v0 + 32);
  *(_DWORD *)(v5 + 49) = *(_DWORD *)((char *)v0 + 33);
  *(_DWORD *)(v5 + 52) = *((_DWORD *)v0 + 9);
  *(void *)(v5 + 56) = v4;
  swift_retain();
  sub_4E97C((uint64_t)&v8);
  swift_retain();
  sub_4EB3C((uint64_t)&v9);
  sub_8FEC0();
  sub_3ED90(&qword_D5AE0);
  sub_3ED90(&qword_D5AE8);
  sub_4AC40(&qword_D5AF0, &qword_D5AE0);
  sub_4AC40(&qword_D5AF8, &qword_D5AE8);
  sub_8FC50();
  return swift_release();
}

uint64_t destroy for BatteryChartInteractivityModifier()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BatteryChartInteractivityModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BatteryChartInteractivityModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for BatteryChartInteractivityModifier(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BatteryChartInteractivityModifier(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BatteryChartInteractivityModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BatteryChartInteractivityModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BatteryChartInteractivityModifier()
{
  return &type metadata for BatteryChartInteractivityModifier;
}

unint64_t sub_4FAAC()
{
  unint64_t result = qword_D5B00;
  if (!qword_D5B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5B00);
  }
  return result;
}

uint64_t sub_4FB00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_4FBCC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_4FC1C()
{
  uint64_t v1 = sub_8F2E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 48;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_4FCDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_8F2E0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);

  return sub_4EB84(v1 + v4, v5, a1);
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t sub_4FD9C()
{
  uint64_t v1 = sub_8F2E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 48;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

void sub_4FE5C(double a1)
{
  uint64_t v3 = *(void *)(sub_8F2E0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  CGFloat v5 = v1[2];
  CGFloat v6 = v1[3];
  CGFloat v7 = v1[4];
  CGFloat v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);

  sub_4EEB8(a1, v5, v6, v7, v8, (uint64_t)v1 + v4, v9);
}

unint64_t sub_4FF00()
{
  unint64_t result = qword_D5B10;
  if (!qword_D5B10)
  {
    sub_429E0(&qword_D5B08);
    sub_4AC40(&qword_D5B18, &qword_D5B20);
    sub_4AC40(&qword_D5B28, &qword_D5B30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5B10);
  }
  return result;
}

unint64_t sub_4FFC4()
{
  unint64_t result = qword_D5B50;
  if (!qword_D5B50)
  {
    sub_8F150();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5B50);
  }
  return result;
}

uint64_t sub_5001C(uint64_t a1)
{
  return a1;
}

uint64_t sub_50048(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3ED90(&qword_D5B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

size_t sub_500B0(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_500D0(a1, a2, a3, (void *)*v3);
  size_t *v3 = result;
  return result;
}

size_t sub_500D0(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_3ED90(&qword_D5B60);
  uint64_t v10 = *(void *)(sub_3ED90(&qword_D5B38) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_3ED90(&qword_D5B38) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_502AC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_502CC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)size_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

uint64_t sub_502F8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_50318(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)size_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_50368(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_503BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  unint64_t v6 = sub_54628();
  swift_beginAccess();
  uint64_t v7 = *v6;
  type metadata accessor for BUIChartViewModel(0);
  sub_51BBC(&qword_D5B80, (void (*)(uint64_t))type metadata accessor for BUIChartViewModel);
  swift_retain();
  uint64_t result = sub_8F780();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v9;
  *(double *)(a2 + 16) = a3;
  *(void *)(a2 + 24) = a1;
  *(void *)(a2 + 32) = v7;
  return result;
}

void sub_5048C(uint64_t a1@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v46 = sub_3ED90(&qword_D5B88);
  __chkstk_darwin(v46);
  uint64_t v2 = (uint64_t *)((char *)&v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_3ED90(&qword_D5B90);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_3ED90(&qword_D5B98);
  __chkstk_darwin(v45);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_3ED90(&qword_D5BA0);
  __chkstk_darwin(v47);
  uint64_t v49 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_3ED90(&qword_D5BA8);
  __chkstk_darwin(v48);
  uint64_t v51 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = sub_90010();
  id v11 = BatteryUILocalization(v10);

  if (v11)
  {
    uint64_t v12 = sub_90020();
    uint64_t v14 = v13;

    uint64_t v53 = v12;
    uint64_t v54 = v14;
    sub_4AB2C();
    uint64_t v15 = sub_8FC00();
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    char v21 = v20 & 1;
    uint64_t v22 = enum case for Text.Case.uppercase(_:);
    uint64_t v23 = sub_8FBD0();
    uint64_t v24 = *(void *)(v23 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 104))(v5, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v5, 0, 1, v23);
    uint64_t KeyPath = swift_getKeyPath();
    sub_4ACE8((uint64_t)v5, (uint64_t)v2 + *(int *)(v46 + 28), &qword_D5B90);
    uint64_t *v2 = KeyPath;
    sub_4ACE8((uint64_t)v2, (uint64_t)&v7[*(int *)(v45 + 36)], &qword_D5B88);
    *(void *)uint64_t v7 = v15;
    *((void *)v7 + 1) = v17;
    v7[16] = v21;
    *((void *)v7 + 3) = v19;
    sub_4AB90(v15, v17, v21);
    swift_bridgeObjectRetain();
    sub_4AE2C((uint64_t)v2, &qword_D5B88);
    sub_4AE2C((uint64_t)v5, &qword_D5B90);
    sub_4AB80(v15, v17, v21);
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(v50 + 32);
    uint64_t v27 = *(void *)(v26 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_titleColor);
    uint64_t v28 = swift_getKeyPath();
    uint64_t v29 = v49;
    sub_4ACE8((uint64_t)v7, v49, &qword_D5B98);
    uint64_t v30 = (uint64_t *)(v29 + *(int *)(v47 + 36));
    uint64_t *v30 = v28;
    v30[1] = v27;
    swift_retain();
    sub_4AE2C((uint64_t)v7, &qword_D5B98);
    uint64_t v31 = *(void *)(v26 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_titleFont);
    uint64_t v32 = swift_getKeyPath();
    uint64_t v33 = v51;
    sub_4ACE8(v29, v51, &qword_D5BA0);
    uint64_t v34 = (uint64_t *)(v33 + *(int *)(v48 + 36));
    uint64_t *v34 = v32;
    v34[1] = v31;
    swift_retain();
    sub_4AE2C(v29, &qword_D5BA0);
    LOBYTE(v31) = sub_8F9D0();
    sub_8F6F0();
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    uint64_t v43 = v52;
    sub_4ACE8(v33, v52, &qword_D5BA8);
    uint64_t v44 = v43 + *(int *)(sub_3ED90(&qword_D5BB0) + 36);
    *(unsigned char *)uint64_t v44 = v31;
    *(void *)(v44 + 8) = v36;
    *(void *)(v44 + 16) = v38;
    *(void *)(v44 + 24) = v40;
    *(void *)(v44 + 32) = v42;
    *(unsigned char *)(v44 + 40) = 0;
    sub_4AE2C(v33, &qword_D5BA8);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_50958@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v44 = sub_3ED90(&qword_D5BB8);
  __chkstk_darwin(v44);
  uint64_t v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_3ED90(&qword_D5BC0);
  uint64_t v4 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_3ED90(&qword_D5BC8);
  __chkstk_darwin(v45);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_3ED90(&qword_D5BD0);
  __chkstk_darwin(v47);
  NSString v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v3 = sub_8F920();
  *((void *)v3 + 1) = 0;
  v3[16] = 0;
  uint64_t v11 = sub_3ED90(&qword_D5BD8);
  sub_50DD8(v1, (uint64_t)&v3[*(int *)(v11 + 44)]);
  long long v49 = *(_OWORD *)v1;
  uint64_t v12 = (void *)*((void *)v1 + 3);
  uint64_t v13 = swift_allocObject();
  long long v14 = *((_OWORD *)v1 + 1);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v13 + 32) = v14;
  *(double *)(v13 + 48) = v1[4];
  sub_51AE4((uint64_t)&v49);
  id v15 = v12;
  swift_retain();
  sub_3ED90(&qword_D5BE0);
  sub_4AC40(&qword_D5BE8, &qword_D5BB8);
  sub_51E74(&qword_D5BF0, &qword_D5BE0, (void (*)(void))sub_51B10);
  sub_8FC60();
  swift_release();
  sub_4AE2C((uint64_t)v3, &qword_D5BB8);
  unsigned __int8 v16 = sub_8F9E0();
  unsigned __int8 v17 = sub_8FA00();
  char v18 = sub_8F9F0();
  sub_8F9F0();
  if (sub_8F9F0() != v16) {
    char v18 = sub_8F9F0();
  }
  sub_8F9F0();
  if (sub_8F9F0() != v17) {
    char v18 = sub_8F9F0();
  }
  uint64_t v19 = *((void *)&v49 + 1);
  sub_4B070();
  sub_8F6F0();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v28 = v46;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v6, v46);
  uint64_t v29 = &v8[*(int *)(v45 + 36)];
  char *v29 = v18;
  *((void *)v29 + 1) = v21;
  *((void *)v29 + 2) = v23;
  *((void *)v29 + 3) = v25;
  *((void *)v29 + 4) = v27;
  v29[40] = 0;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v28);
  char v30 = sub_8F9C0();
  uint64_t v31 = *(void (**)(uint64_t))(*(void *)v19 + 288);
  uint64_t v32 = swift_retain();
  v31(v32);
  sub_51C04((uint64_t)&v49);
  sub_8F6F0();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  sub_4ACE8((uint64_t)v8, (uint64_t)v10, &qword_D5BC8);
  uint64_t v41 = &v10[*(int *)(v47 + 36)];
  *uint64_t v41 = v30;
  *((void *)v41 + 1) = v34;
  *((void *)v41 + 2) = v36;
  *((void *)v41 + 3) = v38;
  *((void *)v41 + 4) = v40;
  v41[40] = 0;
  sub_4AE2C((uint64_t)v8, &qword_D5BC8);
  return sub_4AC84((uint64_t)v10, v48, &qword_D5BD0);
}

uint64_t sub_50DD8@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v89 = sub_3ED90(&qword_D5C20);
  __chkstk_darwin(v89);
  uint64_t v83 = (uint64_t)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TenDayBatteryActivityChart(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v81 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v82 = (uint64_t)&v77 - v7;
  uint64_t v8 = type metadata accessor for TenDayBatteryUsageChart(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v80 = (uint64_t)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v85 = (uint64_t)&v77 - v11;
  uint64_t v86 = sub_3ED90(&qword_D5C28);
  __chkstk_darwin(v86);
  uint64_t v88 = (uint64_t)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_3ED90(&qword_D5C30);
  __chkstk_darwin(v87);
  long long v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Battery24HrActivityChart(0);
  __chkstk_darwin(v15 - 8);
  uint64_t v78 = (uint64_t)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v79 = (uint64_t)&v77 - v18;
  uint64_t v84 = sub_3ED90(&qword_D5C38);
  __chkstk_darwin(v84);
  uint64_t v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v91 = (uint64_t)&v77 - v22;
  uint64_t v23 = type metadata accessor for Battery24HrBatteryLevelChart(0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v77 - v27;
  uint64_t v29 = sub_3ED90(&qword_D5BB0);
  __chkstk_darwin(v29 - 8);
  uint64_t v31 = (char *)&v77 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v92 = (uint64_t)&v77 - v33;
  long long v93 = *(_OWORD *)a1;
  uint64_t v34 = *(uint64_t (**)(uint64_t))(**((void **)&v93 + 1) + 192);
  uint64_t v35 = swift_retain();
  char v36 = v34(v35);
  sub_51C04((uint64_t)&v93);
  if (v36)
  {
    uint64_t v55 = v92;
    sub_5048C(v92);
    double v56 = a1[2];
    uint64_t v57 = swift_retain();
    uint64_t v58 = v85;
    sub_61290(v57, v85, v56);
    sub_5048C((uint64_t)v31);
    char v59 = sub_8F9C0();
    sub_8F6F0();
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    uint64_t v67 = v66;
    sub_4ACE8((uint64_t)v31, (uint64_t)v20, &qword_D5BB0);
    uint64_t v68 = &v20[*(int *)(v84 + 36)];
    *uint64_t v68 = v59;
    *((void *)v68 + 1) = v61;
    *((void *)v68 + 2) = v63;
    *((void *)v68 + 3) = v65;
    *((void *)v68 + 4) = v67;
    v68[40] = 0;
    sub_4AE2C((uint64_t)v31, &qword_D5BB0);
    uint64_t v69 = v91;
    sub_4AC84((uint64_t)v20, v91, &qword_D5C38);
    uint64_t v70 = swift_retain();
    uint64_t v71 = v82;
    sub_64164(v70, v82, v56);
    sub_4ACE8(v55, (uint64_t)v31, &qword_D5BB0);
    uint64_t v72 = v80;
    sub_52054(v58, v80, type metadata accessor for TenDayBatteryUsageChart);
    sub_4ACE8(v69, (uint64_t)v20, &qword_D5C38);
    uint64_t v73 = v81;
    sub_52054(v71, v81, type metadata accessor for TenDayBatteryActivityChart);
    uint64_t v74 = v83;
    sub_4ACE8((uint64_t)v31, v83, &qword_D5BB0);
    long long v75 = (int *)sub_3ED90(&qword_D5C40);
    sub_52054(v72, v74 + v75[12], type metadata accessor for TenDayBatteryUsageChart);
    sub_4ACE8((uint64_t)v20, v74 + v75[16], &qword_D5C38);
    sub_52054(v73, v74 + v75[20], type metadata accessor for TenDayBatteryActivityChart);
    sub_520BC(v73, type metadata accessor for TenDayBatteryActivityChart);
    sub_4AE2C((uint64_t)v20, &qword_D5C38);
    sub_520BC(v72, type metadata accessor for TenDayBatteryUsageChart);
    sub_4AE2C((uint64_t)v31, &qword_D5BB0);
    sub_4ACE8(v74, v88, &qword_D5C20);
    swift_storeEnumTagMultiPayload();
    sub_4AC40(&qword_D5C48, &qword_D5C30);
    sub_4AC40(&qword_D5C50, &qword_D5C20);
    sub_8F950();
    sub_4AE2C(v74, &qword_D5C20);
    sub_520BC(v71, type metadata accessor for TenDayBatteryActivityChart);
    sub_4AE2C(v91, &qword_D5C38);
    uint64_t v53 = v85;
    uint64_t v54 = type metadata accessor for TenDayBatteryUsageChart;
  }
  else
  {
    sub_5048C(v92);
    double v37 = a1[2];
    swift_retain();
    long long v77 = v28;
    sub_72A0C((uint64_t)v28, v37);
    sub_5048C((uint64_t)v31);
    char v38 = sub_8F9C0();
    sub_8F6F0();
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    sub_4ACE8((uint64_t)v31, (uint64_t)v20, &qword_D5BB0);
    uint64_t v47 = &v20[*(int *)(v84 + 36)];
    *uint64_t v47 = v38;
    *((void *)v47 + 1) = v40;
    *((void *)v47 + 2) = v42;
    *((void *)v47 + 3) = v44;
    *((void *)v47 + 4) = v46;
    v47[40] = 0;
    sub_4AE2C((uint64_t)v31, &qword_D5BB0);
    uint64_t v48 = (uint64_t)v25;
    uint64_t v49 = v91;
    sub_4AC84((uint64_t)v20, v91, &qword_D5C38);
    swift_retain();
    uint64_t v50 = v79;
    sub_795D8(v79, v37);
    sub_4ACE8(v92, (uint64_t)v31, &qword_D5BB0);
    sub_52054((uint64_t)v28, v48, type metadata accessor for Battery24HrBatteryLevelChart);
    sub_4ACE8(v49, (uint64_t)v20, &qword_D5C38);
    uint64_t v51 = v78;
    sub_52054(v50, v78, type metadata accessor for Battery24HrActivityChart);
    sub_4ACE8((uint64_t)v31, (uint64_t)v14, &qword_D5BB0);
    uint64_t v52 = (int *)sub_3ED90(&qword_D5C58);
    sub_52054(v48, (uint64_t)&v14[v52[12]], type metadata accessor for Battery24HrBatteryLevelChart);
    sub_4ACE8((uint64_t)v20, (uint64_t)&v14[v52[16]], &qword_D5C38);
    sub_52054(v51, (uint64_t)&v14[v52[20]], type metadata accessor for Battery24HrActivityChart);
    sub_520BC(v51, type metadata accessor for Battery24HrActivityChart);
    sub_4AE2C((uint64_t)v20, &qword_D5C38);
    sub_520BC(v48, type metadata accessor for Battery24HrBatteryLevelChart);
    sub_4AE2C((uint64_t)v31, &qword_D5BB0);
    sub_4ACE8((uint64_t)v14, v88, &qword_D5C30);
    swift_storeEnumTagMultiPayload();
    sub_4AC40(&qword_D5C48, &qword_D5C30);
    sub_4AC40(&qword_D5C50, &qword_D5C20);
    sub_8F950();
    sub_4AE2C((uint64_t)v14, &qword_D5C30);
    sub_520BC(v50, type metadata accessor for Battery24HrActivityChart);
    sub_4AE2C(v91, &qword_D5C38);
    uint64_t v53 = (uint64_t)v77;
    uint64_t v54 = type metadata accessor for Battery24HrBatteryLevelChart;
  }
  sub_520BC(v53, v54);
  return sub_4AE2C(v92, &qword_D5BB0);
}

uint64_t sub_51830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_3ED90(&qword_D5C00);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8FEC0();
  sub_8F750();
  uint64_t v8 = sub_8F4A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, a1, v8);
  uint64_t v9 = &v7[*(int *)(v5 + 44)];
  long long v10 = v21[1];
  *(_OWORD *)uint64_t v9 = v21[0];
  *((_OWORD *)v9 + 1) = v10;
  *((_OWORD *)v9 + 2) = v21[2];
  LOBYTE(v5) = sub_8F9D0();
  sub_8F6F0();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  sub_4ACE8((uint64_t)v7, a2, &qword_D5C00);
  uint64_t v19 = a2 + *(int *)(sub_3ED90(&qword_D5BE0) + 36);
  *(unsigned char *)uint64_t v19 = v5;
  *(void *)(v19 + 8) = v12;
  *(void *)(v19 + 16) = v14;
  *(void *)(v19 + 24) = v16;
  *(void *)(v19 + 32) = v18;
  *(unsigned char *)(v19 + 40) = 0;
  return sub_4AE2C((uint64_t)v7, &qword_D5C00);
}

uint64_t sub_519DC()
{
  return sub_8F830();
}

uint64_t sub_51A00(uint64_t a1)
{
  uint64_t v2 = sub_3ED90(&qword_D5B90);
  __chkstk_darwin(v2 - 8);
  sub_4ACE8(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_D5B90);
  return sub_8F840();
}

uint64_t sub_51A94()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_51ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_51830(a1, a2);
}

uint64_t sub_51AE4(uint64_t a1)
{
  return a1;
}

unint64_t sub_51B10()
{
  unint64_t result = qword_D5BF8;
  if (!qword_D5BF8)
  {
    sub_429E0(&qword_D5C00);
    sub_51BBC(&qword_D5C08, (void (*)(uint64_t))&type metadata accessor for ChartPlotContent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5BF8);
  }
  return result;
}

uint64_t sub_51BBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_51C04(uint64_t a1)
{
  return a1;
}

uint64_t sub_51C30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for BUIChartViewContent(uint64_t a1)
{
  swift_release();

  return swift_release();
}

void *initializeWithCopy for BUIChartViewContent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  id v5 = v4;
  swift_retain();
  return a1;
}

void *assignWithCopy for BUIChartViewContent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  uint64_t v4 = (void *)a2[3];
  id v5 = (void *)a1[3];
  a1[3] = v4;
  id v6 = v4;

  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for BUIChartViewContent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BUIChartViewContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BUIChartViewContent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BUIChartViewContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BUIChartViewContent()
{
  return &type metadata for BUIChartViewContent;
}

uint64_t sub_51E74(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_429E0(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_51EF4()
{
  return sub_51E74(&qword_D5C10, &qword_D5BD0, (void (*)(void))sub_51F30);
}

unint64_t sub_51F30()
{
  unint64_t result = qword_D5C18;
  if (!qword_D5C18)
  {
    sub_429E0(&qword_D5BC8);
    sub_429E0(&qword_D5BB8);
    sub_429E0(&qword_D5BE0);
    sub_4AC40(&qword_D5BE8, &qword_D5BB8);
    sub_51E74(&qword_D5BF0, &qword_D5BE0, (void (*)(void))sub_51B10);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5C18);
  }
  return result;
}

uint64_t sub_52054(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_520BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_5211C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_titleHeight;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_52164(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_titleHeight);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t (*sub_521B8())()
{
  return j__swift_endAccess;
}

id sub_52218()
{
  uint64_t v1 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig____lazy_storage___formatterForPercent;
  unint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig____lazy_storage___formatterForPercent);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig____lazy_storage___formatterForPercent);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = [objc_allocWithZone((Class)type metadata accessor for BUIChartViewConfig.CachedNumberFormatter()) init];
    Class isa = sub_8F170().super.isa;
    [v5 setLocale:isa];

    sub_60788(0, &qword_D5C80);
    id v7 = v5;
    Class v8 = sub_902E0(1).super.super.isa;
    [v7 setMultiplier:v8];

    [v7 setNumberStyle:3];
    uint64_t v9 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    unint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

uint64_t sub_52324(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig____lazy_storage___formatterForPercent) = a1;
  return _objc_release_x1();
}

void (*sub_52338(id *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = sub_52218();
  return sub_52380;
}

void sub_52380(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig____lazy_storage___formatterForPercent);
  *(void *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig____lazy_storage___formatterForPercent) = v2;
}

id sub_52398(uint64_t a1)
{
  id v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtCC14BatteryUsageUI18BUIChartViewConfig19DateNumberFormatter__formatter] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, "init");
}

uint64_t type metadata accessor for BUIChartViewConfig.DateNumberFormatter()
{
  return self;
}

uint64_t sub_52468(uint64_t a1)
{
  sub_4ACE8(a1, (uint64_t)v9, &qword_D5C78);
  if (!v10)
  {
    sub_4AE2C((uint64_t)v9, &qword_D5C78);
    return 0;
  }
  sub_60788(0, &qword_D5C80);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  [v8 doubleValue];
  double v3 = v2;

  id v4 = [*(id *)(v1 + OBJC_IVAR____TtCC14BatteryUsageUI18BUIChartViewConfig19DateNumberFormatter__formatter) stringFromTimeInterval:v3];
  if (!v4) {
    return 0;
  }
  objc_super v5 = v4;
  uint64_t v6 = sub_90020();

  return v6;
}

void sub_52650()
{
}

id sub_52660()
{
  return sub_53304(type metadata accessor for BUIChartViewConfig.DateNumberFormatter);
}

uint64_t sub_52688()
{
  return sub_52A18();
}

uint64_t sub_52694(uint64_t a1)
{
  return sub_52A6C(a1, &OBJC_IVAR____TtCC14BatteryUsageUI18BUIChartViewConfig21CachedNumberFormatter_cache);
}

uint64_t (*sub_526A0())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_526FC(uint64_t a1)
{
  uint64_t v2 = sub_3ED90(&qword_D6348);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  objc_super v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_3ED90(&qword_D6330);
  uint64_t v6 = sub_90520();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_4ACE8(v12, (uint64_t)v5, &qword_D6348);
    unint64_t result = sub_5E8CC((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_8F150();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = (void *)(v7[7] + 16 * v16);
    uint64_t v20 = *((void *)v9 + 1);
    void *v19 = *(void *)v9;
    v19[1] = v20;
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_528F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_3ED90(&qword_D6328);
  uint64_t v2 = (void *)sub_90520();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    objc_super v5 = (void *)*(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v5;
    unint64_t result = sub_5E974((uint64_t)v8);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v8;
    unint64_t v11 = (void *)(v2[7] + 16 * result);
    void *v11 = v6;
    v11[1] = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_52A0C()
{
  return sub_52A18();
}

uint64_t sub_52A18()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_52A60(uint64_t a1)
{
  return sub_52A6C(a1, &OBJC_IVAR____TtCC14BatteryUsageUI18BUIChartViewConfig19CachedDateFormatter_cache);
}

uint64_t sub_52A6C(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  void *v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_52ABC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_52B18(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_8F150();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (*(uint64_t (**)(__n128))((char *)&stru_20.maxprot + (swift_isaMask & *v1)))(v6);
  if (*(void *)(v9 + 16) && (unint64_t v10 = sub_5E8CC(a1), (v11 & 1) != 0))
  {
    uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 16 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    Class isa = sub_8F0C0().super.isa;
    uint64_t v14 = (objc_class *)type metadata accessor for BUIChartViewConfig.CachedDateFormatter();
    v27.receiver = v2;
    v27.super_class = v14;
    id v15 = objc_msgSendSuper2(&v27, "stringFromDate:", isa);

    uint64_t v12 = sub_90020();
    uint64_t v17 = v16;

    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    uint64_t v18 = *(uint64_t (**)(unsigned char *))&stru_68.sectname[swift_isaMask & *v2];
    swift_bridgeObjectRetain();
    uint64_t v19 = (void (*)(unsigned char *, void))v18(v26);
    uint64_t v21 = v20;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v21;
    uint64_t *v21 = 0x8000000000000000;
    sub_5F380(v12, v17, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
    uint64_t *v21 = v25;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v19(v26, 0);
  }
  return v12;
}

id sub_52EFC()
{
  return sub_53304(type metadata accessor for BUIChartViewConfig.CachedDateFormatter);
}

uint64_t sub_52F24(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(uint64_t (**)(void))((char *)&stru_20.maxprot + (swift_isaMask & *v1));
  id v4 = a1;
  uint64_t v5 = v3();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_5E974((uint64_t)v4), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 16 * v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();

    v22.receiver = v2;
    v22.super_class = (Class)type metadata accessor for BUIChartViewConfig.CachedNumberFormatter();
    id v9 = objc_msgSendSuper2(&v22, "stringFromNumber:", v4);
    if (v9)
    {
      unint64_t v10 = v9;
      uint64_t v8 = sub_90020();
      uint64_t v12 = v11;
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v12 = 0;
    }
    BOOL v13 = *(uint64_t (**)(unsigned char *))&stru_68.sectname[swift_isaMask & *v2];
    swift_bridgeObjectRetain();
    id v14 = v4;
    id v15 = (void (*)(unsigned char *, void))v13(v21);
    uint64_t v17 = v16;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v17;
    *uint64_t v17 = 0x8000000000000000;
    sub_5F55C(v8, v12, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v17 = v20;
    swift_bridgeObjectRelease();

    v15(v21, 0);
  }
  return v8;
}

id sub_531A0(char *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void *), uint64_t (*a5)(void))
{
  uint64_t v8 = *a3;
  id v9 = a1;
  *(void *)&a1[v8] = a4(&_swiftEmptyArrayStorage);

  v11.receiver = v9;
  v11.super_class = (Class)a5();
  return objc_msgSendSuper2(&v11, "init");
}

id sub_53254(char *a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t (*a5)(void *), uint64_t (*a6)(void))
{
  uint64_t v9 = *a4;
  id v10 = a3;
  objc_super v11 = a1;
  *(void *)&a1[v9] = a5(&_swiftEmptyArrayStorage);

  v14.receiver = v11;
  v14.super_class = (Class)a6();
  id v12 = objc_msgSendSuper2(&v14, "initWithCoder:", v10);

  return v12;
}

id sub_532EC()
{
  return sub_53304(type metadata accessor for BUIChartViewConfig.CachedNumberFormatter);
}

id sub_53304(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

id sub_5334C()
{
  uint64_t v0 = sub_8F210();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  objc_super v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_8F190();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [objc_allocWithZone((Class)type metadata accessor for BUIChartViewConfig.CachedDateFormatter()) init];
  sub_8F180();
  Class isa = sub_8F170().super.isa;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  [v8 setLocale:isa];

  id v10 = v8;
  sub_8F1C0();
  Class v11 = sub_8F1B0().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v10 setCalendar:v11];

  [self is24HourClock];
  id v12 = v10;
  NSString v13 = sub_90010();
  [v12 setDateFormat:v13];

  return v12;
}

id sub_53588()
{
  uint64_t v0 = sub_8F210();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  objc_super v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_8F190();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [objc_allocWithZone((Class)type metadata accessor for BUIChartViewConfig.CachedDateFormatter()) init];
  sub_8F180();
  Class isa = sub_8F170().super.isa;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  [v8 setLocale:isa];

  id v10 = v8;
  sub_8F1C0();
  Class v11 = sub_8F1B0().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v10 setCalendar:v11];

  NSString v12 = sub_90010();
  [v10 setLocalizedDateFormatFromTemplate:v12];

  return v10;
}

void *sub_5379C()
{
  return &unk_C0808;
}

void *sub_537A8()
{
  return &unk_C0818;
}

void *sub_537B4()
{
  return &unk_C0828;
}

uint64_t sub_537C0()
{
  uint64_t v0 = swift_allocObject();
  sub_537F8();
  return v0;
}

void sub_537F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_3ED90(&qword_D5C98);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_8FBA0();
  uint64_t v120 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v119 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_8F210();
  uint64_t v116 = *(void *)(v7 - 8);
  uint64_t v117 = v7;
  __chkstk_darwin(v7);
  int v115 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_3ED90(&qword_D5C68);
  __chkstk_darwin(v9 - 8);
  Class v11 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8F180();
  sub_8F1C0();
  *(void *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_gridLineWidth) = 0x3FE0000000000000;
  *(void *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_barWidthRatioFor10Days) = 0x3FE3333333333333;
  *(void *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_barRadiusRatioFor10Days) = 0x3FC999999999999ALL;
  *(void *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_barWidthRatioFor24Hrs) = 0x3FE599999999999ALL;
  *(void *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_barRadiusRatioFor24Hrs) = 0x3FC999999999999ALL;
  uint64_t v12 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_titleFont;
  *(void *)(v0 + v12) = sub_8FAA0();
  uint64_t v13 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_labelFont;
  uint64_t v14 = sub_8FA40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
  sub_8FA80();
  sub_4AE2C((uint64_t)v11, &qword_D5C68);
  sub_8FA60();
  uint64_t v15 = sub_8FA90();
  swift_release();
  uint64_t v118 = v13;
  *(void *)(v1 + v13) = v15;
  uint64_t v16 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_titleColor;
  uint64_t v17 = self;
  id v18 = [v17 secondaryLabelColor];
  *(void *)(v1 + v16) = sub_8FD60();
  uint64_t v19 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_labelColor;
  id v20 = [v17 tertiaryLabelColor];
  *(void *)(v1 + v19) = sub_8FD60();
  uint64_t v21 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_intervalColor;
  id v22 = [v17 systemGreenColor];
  *(void *)(v1 + v21) = sub_8FD60();
  uint64_t v23 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_intervalShadeColor;
  id v24 = [v17 systemGreenColor];
  sub_8FD60();
  uint64_t v25 = sub_8FD30();
  swift_release();
  *(void *)(v1 + v23) = v25;
  uint64_t v26 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_slowChargingColor;
  id v27 = [v17 systemOrangeColor];
  *(void *)(v1 + v26) = sub_8FD60();
  uint64_t v28 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_slowChargingIntervalBackgroundColor;
  id v29 = [v17 systemOrangeColor];
  sub_8FD60();
  uint64_t v30 = sub_8FD30();
  swift_release();
  *(void *)(v1 + v28) = v30;
  uint64_t v31 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_gridColor;
  id v32 = [v17 tertiaryLabelColor];
  *(void *)(v1 + v31) = sub_8FD60();
  uint64_t v33 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_batteryLevelHighColor;
  id v34 = [v17 systemGreenColor];
  *(void *)(v1 + v33) = sub_8FD60();
  uint64_t v35 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_batteryLevelMediumColor;
  id v36 = [v17 systemYellowColor];
  *(void *)(v1 + v35) = sub_8FD60();
  uint64_t v37 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_batteryLevelLowColor;
  id v38 = [v17 systemRedColor];
  *(void *)(v1 + v37) = sub_8FD60();
  uint64_t v39 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_energyUsageColor;
  id v40 = [v17 systemGreenColor];
  *(void *)(v1 + v39) = sub_8FD60();
  uint64_t v41 = self;
  if (![v41 screenOffColor])
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v114 = v5;
  uint64_t v42 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_screenOffColor;
  *(void *)(v1 + v42) = sub_8FD60();
  if (![v41 screenOnColor])
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v113 = v4;
  uint64_t v43 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_screenOnColor;
  *(void *)(v1 + v43) = sub_8FD60();
  id v44 = [v17 systemGreenColor];
  sub_8FD60();
  sub_60788(0, &qword_D5C60);
  swift_retain();
  uint64_t v45 = (void *)sub_902D0();
  id v46 = [v45 dynamicGrayScaleColor];

  if (!v46)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v47 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_batteryLevelGrayColor;
  uint64_t v48 = sub_8FD60();
  swift_release();
  *(void *)(v1 + v47) = v48;
  id v49 = [v17 systemGreenColor];
  sub_8FD60();
  swift_retain();
  uint64_t v50 = (void *)sub_902D0();
  id v51 = [v50 dynamicGrayScaleColor];

  if (!v51)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v52 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_intervalGrayColor;
  uint64_t v53 = sub_8FD60();
  swift_release();
  *(void *)(v1 + v52) = v53;
  id v54 = [v17 systemGreenColor];
  sub_8FD60();
  sub_8FD30();
  swift_release();
  swift_retain();
  uint64_t v55 = (void *)sub_902D0();
  id v56 = [v55 dynamicGrayScaleColor];

  if (!v56)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v57 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_intervalShadeGrayColor;
  uint64_t v58 = sub_8FD60();
  swift_release();
  *(void *)(v1 + v57) = v58;
  id v59 = [v17 systemGreenColor];
  sub_8FD60();
  swift_retain();
  uint64_t v60 = (void *)sub_902D0();
  id v61 = [v60 dynamicGrayScaleColor];

  if (!v61)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v62 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_energyUsageGrayColor;
  uint64_t v63 = sub_8FD60();
  swift_release();
  *(void *)(v1 + v62) = v63;
  if (![v41 screenOffColor])
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_8FD60();
  swift_retain();
  uint64_t v64 = (void *)sub_902D0();
  id v65 = [v64 dynamicGrayScaleColor];

  if (!v65)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v66 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_screenOffGrayColor;
  uint64_t v67 = sub_8FD60();
  swift_release();
  *(void *)(v1 + v66) = v67;
  if (![v41 screenOnColor])
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_8FD60();
  swift_retain();
  uint64_t v68 = (void *)sub_902D0();
  id v69 = [v68 dynamicGrayScaleColor];

  if (v69)
  {
    uint64_t v70 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_screenOnGrayColor;
    uint64_t v71 = sub_8FD60();
    swift_release();
    *(void *)(v1 + v70) = v71;
    *(void *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_plotHeight) = 0x4056800000000000;
    *(void *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_titlePaddingBottom) = 0x4010000000000000;
    *(void *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_chartGap) = 0x4030000000000000;
    *(void *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_intervalHeight) = 0x4010000000000000;
    uint64_t v111 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_xLabelSpacing;
    *(void *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_xLabelSpacing) = 0x4018000000000000;
    uint64_t v112 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_xLabelAdditionalOffset;
    *(void *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_xLabelAdditionalOffset) = 0x4000000000000000;
    *(void *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig____lazy_storage___formatterForPercent) = 0;
    uint64_t v72 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForMinutes;
    id v73 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
    uint64_t v74 = v115;
    sub_8F1C0();
    Class isa = sub_8F1B0().super.isa;
    uint64_t v76 = v117;
    long long v77 = *(void (**)(char *, uint64_t))(v116 + 8);
    v77(v74, v117);
    [v73 setCalendar:isa];

    [v73 setAllowedUnits:64];
    [v73 setUnitsStyle:1];
    uint64_t v78 = (objc_class *)type metadata accessor for BUIChartViewConfig.DateNumberFormatter();
    uint64_t v79 = (char *)objc_allocWithZone(v78);
    *(void *)&v79[OBJC_IVAR____TtCC14BatteryUsageUI18BUIChartViewConfig19DateNumberFormatter__formatter] = v73;
    v122.receiver = v79;
    v122.super_class = v78;
    *(void *)(v1 + v72) = objc_msgSendSuper2(&v122, "init");
    uint64_t v80 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForHourMinutes;
    id v81 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
    sub_8F1C0();
    Class v82 = sub_8F1B0().super.isa;
    v77(v74, v76);
    [v81 setCalendar:v82];

    [v81 setAllowedUnits:96];
    [v81 setUnitsStyle:1];
    uint64_t v83 = (char *)objc_allocWithZone(v78);
    *(void *)&v83[OBJC_IVAR____TtCC14BatteryUsageUI18BUIChartViewConfig19DateNumberFormatter__formatter] = v81;
    v121.receiver = v83;
    v121.super_class = v78;
    *(void *)(v1 + v80) = objc_msgSendSuper2(&v121, "init");
    uint64_t v84 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForHourShort;
    *(void *)(v1 + v84) = sub_5334C();
    uint64_t v85 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForHour;
    *(void *)(v1 + v85) = sub_53588();
    uint64_t v86 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForDate;
    *(void *)(v1 + v86) = sub_53588();
    uint64_t v87 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForDay;
    *(void *)(v1 + v87) = sub_53588();
    uint64_t v88 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForChargingInterval;
    id v89 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
    [v89 setAllowedUnits:96];
    [v89 setUnitsStyle:3];
    sub_8F1C0();
    Class v90 = sub_8F1B0().super.isa;
    v77(v74, v76);
    [v89 setCalendar:v90];

    *(void *)(v1 + v88) = v89;
    uint64_t v91 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForChargingTime;
    *(void *)(v1 + v91) = sub_53588();
    uint64_t v92 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForHour;
    *(void *)(v1 + v92) = sub_53588();
    uint64_t v93 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForDate;
    *(void *)(v1 + v93) = sub_53588();
    sub_8F8E0();
    uint64_t v94 = sub_8FBF0();
    uint64_t v96 = v95;
    LOBYTE(v74) = v97 & 1;
    swift_retain();
    uint64_t v98 = sub_8FBE0();
    uint64_t v100 = v99;
    LOBYTE(v76) = v101;
    swift_release();
    sub_4AB80(v94, v96, (char)v74);
    swift_bridgeObjectRelease();
    double v102 = *(double *)(v1 + v111);
    unsigned int v103 = v119;
    sub_8FB90();
    uint64_t v104 = sub_8FB70();
    uint64_t v105 = (uint64_t)v113;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v113, 1, 1, v104);
    sub_8FB80();
    double v107 = v106;
    sub_4AE2C(v105, &qword_D5C98);
    (*(void (**)(char *, uint64_t))(v120 + 8))(v103, v114);
    *(double *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_naturalLabelHeight) = v102 + v107;
    *(double *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_boltOffset) = (v102 + v107) * 0.5
                                                                                      + *(double *)(v1 + v112) * 0.5;
    *(double *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axisLabelPadding) = v102 + v107;
    id v108 = [self preferredFontForTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:0];
    [v108 lineHeight];
    uint64_t v110 = v109;
    sub_4AB80(v98, v100, v76 & 1);
    swift_bridgeObjectRelease();

    *(void *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_titleHeight) = v110;
    return;
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_54530(uint64_t a1)
{
  id v2 = [self preferredFontForTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:a1];
  [v2 lineHeight];
  unint64_t v4 = v3;

  uint64_t v5 = *(uint64_t (**)(__n128))(*(void *)v1 + 480);
  v6.n128_u64[0] = v4;

  return v5(v6);
}

void sub_545E8()
{
  type metadata accessor for BUIChartViewConfig(0);
  uint64_t v0 = swift_allocObject();
  sub_537F8();
  qword_DA6B0 = v0;
}

uint64_t *sub_54628()
{
  if (qword_D8A00 != -1) {
    swift_once();
  }
  return &qword_DA6B0;
}

uint64_t sub_54674()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_locale;
  uint64_t v2 = sub_8F190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_calendar;
  uint64_t v4 = sub_8F210();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_5491C()
{
  sub_54674();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_54974()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_8F690();
  swift_release();

  return swift_release();
}

uint64_t sub_549EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 136))();
}

uint64_t sub_54A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v4 - 8);
  __n128 v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_60230(a1, (uint64_t)v6, type metadata accessor for BUIChartViewData);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 144))(v6);
}

uint64_t sub_54AF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_60230(a1, (uint64_t)v4, type metadata accessor for BUIChartViewData);
  swift_retain();
  sub_8F6A0();
  return sub_60298(a1, type metadata accessor for BUIChartViewData);
}

uint64_t (*sub_54BD4(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_8F680();
  return sub_54C60;
}

uint64_t sub_54C64()
{
  return sub_5636C((uint64_t)&OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__data, &qword_D5CA0);
}

uint64_t sub_54C78(uint64_t a1)
{
  return sub_563F0(a1, &qword_D5CA8, (uint64_t)&OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__data, &qword_D5CA0);
}

uint64_t (*sub_54C94(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_3ED90(&qword_D5CA8);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__data;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_3ED90(&qword_D5CA0);
  sub_8F660();
  swift_endAccess();
  return sub_54DA4;
}

uint64_t sub_54DA8(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_54DE8(a1);
  return v2;
}

uint64_t sub_54DE8(uint64_t a1)
{
  uint64_t v38 = a1;
  uint64_t v37 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v37);
  uint64_t v36 = (uint64_t)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v35 = (uint64_t)&v29 - v4;
  uint64_t v5 = sub_3ED90(&qword_D5CB0);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  __chkstk_darwin(v5);
  id v32 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_3ED90(&qword_D5CB8);
  uint64_t v7 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_3ED90(&qword_D5CC0);
  uint64_t v10 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_3ED90(&qword_D5CC8);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel_cfg;
  if (qword_D8A00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *(void *)(v1 + v17) = qword_DA6B0;
  uint64_t v18 = v1 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__activeChart;
  LOBYTE(v39) = 0;
  swift_retain();
  sub_8F650();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v18, v16, v13);
  uint64_t v19 = v1 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__selectedIndex;
  id v39 = 0;
  char v40 = 1;
  sub_3ED90(&qword_D5CD0);
  sub_8F650();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v19, v12, v30);
  uint64_t v20 = v1 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__topMargin;
  id v39 = 0;
  sub_8F650();
  uint64_t v21 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  uint64_t v22 = v31;
  v21(v20, v9, v31);
  uint64_t v23 = v1 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__bottomMargin;
  id v39 = 0;
  sub_8F650();
  v21(v23, v9, v22);
  uint64_t v24 = v1 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__containerBackgroundColor;
  id v39 = [self systemBackgroundColor];
  sub_60788(0, &qword_D5C60);
  uint64_t v25 = v32;
  sub_8F650();
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v24, v25, v34);
  uint64_t v26 = v38;
  uint64_t v27 = v35;
  sub_60230(v38, v35, type metadata accessor for BUIChartViewData);
  swift_beginAccess();
  sub_60230(v27, v36, type metadata accessor for BUIChartViewData);
  sub_8F650();
  sub_60298(v27, type metadata accessor for BUIChartViewData);
  swift_endAccess();
  sub_60298(v26, type metadata accessor for BUIChartViewData);
  return v1;
}

BOOL sub_55310(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_55328()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_8F690();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_5539C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 192))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_553EC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 200))(*a1);
}

uint64_t sub_55434()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_8F6A0();
  return (*(uint64_t (**)(void, uint64_t))(*(void *)v0 + 248))(0, 1);
}

uint64_t (*sub_554D0(uint64_t a1))(uint64_t *a1)
{
  *(void *)a1 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_8F690();
  swift_release();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_55570;
}

uint64_t sub_55570(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  *((unsigned char *)a1 + 9) = v3;
  swift_retain();
  sub_8F6A0();
  return (*(uint64_t (**)(void, uint64_t))(*(void *)v2 + 248))(0, 1);
}

uint64_t sub_55614()
{
  return sub_5636C((uint64_t)&OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__activeChart, &qword_D5CC8);
}

uint64_t sub_55628(uint64_t a1)
{
  return sub_563F0(a1, &qword_D5CD8, (uint64_t)&OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__activeChart, &qword_D5CC8);
}

uint64_t (*sub_55644(void *a1))()
{
  char v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_3ED90(&qword_D5CD8);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__activeChart;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_3ED90(&qword_D5CC8);
  sub_8F660();
  swift_endAccess();
  return sub_54DA4;
}

uint64_t sub_55754()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_8F690();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_557CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 240))();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_55820(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void))(**(void **)a2 + 248))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_55874()
{
  return sub_8F6A0();
}

uint64_t (*sub_558F8(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_8F680();
  return sub_54C60;
}

uint64_t sub_55984()
{
  return sub_5636C((uint64_t)&OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__selectedIndex, &qword_D5CC0);
}

uint64_t sub_55998(uint64_t a1)
{
  return sub_563F0(a1, &qword_D5CE0, (uint64_t)&OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__selectedIndex, &qword_D5CC0);
}

uint64_t (*sub_559B4(void *a1))()
{
  char v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_3ED90(&qword_D5CE0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__selectedIndex;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_3ED90(&qword_D5CC0);
  sub_8F660();
  swift_endAccess();
  return sub_54DA4;
}

double sub_55AC4()
{
  return sub_55D70();
}

void sub_55AD8(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 288))();
}

uint64_t sub_55B2C(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 296))(*a1);
}

uint64_t sub_55B7C()
{
  return sub_55E94();
}

uint64_t (*sub_55B90(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_8F680();
  return sub_54C60;
}

uint64_t sub_55C1C()
{
  return sub_5636C((uint64_t)&OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__topMargin, &qword_D5CB8);
}

uint64_t sub_55C30(uint64_t a1)
{
  return sub_563F0(a1, &qword_D5CE8, (uint64_t)&OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__topMargin, &qword_D5CB8);
}

uint64_t (*sub_55C4C(void *a1))()
{
  char v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_3ED90(&qword_D5CE8);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__topMargin;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_3ED90(&qword_D5CB8);
  sub_8F660();
  swift_endAccess();
  return sub_54DA4;
}

double sub_55D5C()
{
  return sub_55D70();
}

double sub_55D70()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_8F690();
  swift_release();
  swift_release();
  return v1;
}

void sub_55DDC(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 336))();
}

uint64_t sub_55E30(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 344))(*a1);
}

uint64_t sub_55E80()
{
  return sub_55E94();
}

uint64_t sub_55E94()
{
  return sub_8F6A0();
}

uint64_t (*sub_55F04(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_8F680();
  return sub_54C60;
}

uint64_t sub_55F90()
{
  return sub_5636C((uint64_t)&OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__bottomMargin, &qword_D5CB8);
}

uint64_t sub_55FA4(uint64_t a1)
{
  return sub_563F0(a1, &qword_D5CE8, (uint64_t)&OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__bottomMargin, &qword_D5CB8);
}

uint64_t (*sub_55FC0(void *a1))()
{
  char v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_3ED90(&qword_D5CE8);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__bottomMargin;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_3ED90(&qword_D5CB8);
  sub_8F660();
  swift_endAccess();
  return sub_54DA4;
}

uint64_t sub_560D0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_8F690();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_56144@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 384))();
  *a2 = result;
  return result;
}

uint64_t sub_56198(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(void **)a2 + 392))(*a1);
}

uint64_t sub_561F4()
{
  return sub_8F6A0();
}

uint64_t (*sub_56264(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_8F680();
  return sub_54C60;
}

void sub_562F0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_56358()
{
  return sub_5636C((uint64_t)&OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__containerBackgroundColor, &qword_D5CB0);
}

uint64_t sub_5636C(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t sub_563D4(uint64_t a1)
{
  return sub_563F0(a1, &qword_D5CF0, (uint64_t)&OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__containerBackgroundColor, &qword_D5CB0);
}

uint64_t sub_563F0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_3ED90(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v8);
  swift_beginAccess();
  sub_3ED90(a4);
  sub_8F670();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*sub_56520(void *a1))()
{
  char v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_3ED90(&qword_D5CF0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__containerBackgroundColor;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_3ED90(&qword_D5CB0);
  sub_8F660();
  swift_endAccess();
  return sub_54DA4;
}

void sub_56630(uint64_t a1, char a2)
{
  char v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_8F670();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_8F670();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

double sub_567A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3ED90(&qword_D5C98);
  __chkstk_darwin(v4 - 8);
  uint64_t v26 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_8FBA0();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8FB90();
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  sub_4AB2C();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_8FC00();
  uint64_t v11 = v10;
  char v13 = v12;
  if (qword_D8A00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_retain();
  uint64_t v14 = sub_8FBE0();
  uint64_t v16 = v15;
  char v18 = v17;
  swift_release();
  sub_4AB80(v9, v11, v13 & 1);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_8FB70();
  uint64_t v20 = (uint64_t)v26;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v26, 1, 1, v19);
  sub_8FB80();
  double v22 = v21;
  sub_4AB80(v14, v16, v18 & 1);
  swift_bridgeObjectRelease();
  sub_4AE2C(v20, &qword_D5C98);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v25);
  return v22;
}

void sub_56A54()
{
  uint64_t v1 = v0;
  id v2 = [self mainScreen];
  [v2 scale];

  sub_4AFE0(sub_5F6E0);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel_cfg);
  uint64_t v4 = (void *)(*(uint64_t (**)(void))(*(void *)v3 + 496))();
  uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v1 + 464))();
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  double v7 = *(double *)(v5 + 32);
  uint64_t v8 = v6 - 1;
  if (v8)
  {
    uint64_t v9 = (double *)(v5 + 40);
    do
    {
      double v10 = *v9++;
      double v11 = v10;
      if (v7 < v10) {
        double v7 = v11;
      }
      --v8;
    }
    while (v8);
  }
  swift_bridgeObjectRelease();
  id v12 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v7];
  id v13 = [v4 stringFromNumber:v12];

  if (!v13) {
    goto LABEL_17;
  }
  uint64_t v14 = sub_90020();
  uint64_t v16 = v15;

  char v17 = *(uint64_t (**)(void))(*(void *)v1 + 472);
  id v18 = *(id *)(v3 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForHourMinutes);
  uint64_t v19 = v17();
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_19;
  }
  double v21 = *(double *)(v19 + 32);
  uint64_t v22 = v20 - 1;
  if (v22)
  {
    uint64_t v23 = (double *)(v19 + 40);
    do
    {
      double v24 = *v23++;
      double v25 = v24;
      if (v21 < v24) {
        double v21 = v25;
      }
      --v22;
    }
    while (v22);
  }
  swift_bridgeObjectRelease();
  id v26 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v21];
  id v27 = [v18 stringFromNumber:v26];

  if (v27)
  {
    uint64_t v28 = sub_90020();
    uint64_t v30 = v29;

    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 432);
    v31(v14, v16);
    swift_bridgeObjectRelease();
    v31(v28, v30);
    swift_bridgeObjectRelease();
    sub_4B070();
    id v32 = sub_4B128();
    __chkstk_darwin(v32);
    sub_4AFE0(sub_5F7BC);
    return;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_56E0C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_3ED90(&qword_D5B48);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = sub_8F150();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = __chkstk_darwin(v14);
  char v17 = (char *)&v30 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18)
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
    v20(v9, 1, 1, v10, v15);
    goto LABEL_5;
  }
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v37 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v11 + 16);
  uint64_t v38 = v11 + 16;
  v37(v9, a1 + v19, v10, v15);
  uint64_t v32 = a1;
  id v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v39)(v9, 0, 1, v10);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v36 = v11 + 48;
  if (v35(v9, 1, v10) == 1)
  {
    uint64_t v20 = v39;
LABEL_5:
    sub_4AE2C((uint64_t)v9, &qword_D5B48);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v20)(a2, 1, 1, v10);
  }
  uint64_t v31 = a2;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v34(v17, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v22 = v18 - 1;
  if (v22)
  {
    uint64_t v24 = *(void *)(v11 + 72);
    double v25 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v33 = v24;
    unint64_t v26 = v32 + v24 + v19;
    id v27 = v34;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v37)(v6, v26, v10);
      ((void (*)(char *, void, uint64_t, uint64_t))v39)(v6, 0, 1, v10);
      if (v35(v6, 1, v10) == 1) {
        break;
      }
      v27(v13, v6, v10);
      sub_61134((unint64_t *)&qword_D5B50);
      char v28 = sub_8FFC0();
      uint64_t v29 = *v25;
      if (v28)
      {
        v29(v17, v10);
        v27(v17, v13, v10);
      }
      else
      {
        v29(v13, v10);
      }
      v26 += v33;
      if (!--v22) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v39)(v6, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_4AE2C((uint64_t)v6, &qword_D5B48);
  uint64_t v23 = v31;
  v34(v31, v17, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v39)(v23, 0, 1, v10);
}

double sub_5721C(double a1)
{
  BOOL v1 = a1 <= 500.0;
  double v2 = a1 / 96.0;
  if (v1) {
    double v3 = v2 * 0.25;
  }
  else {
    double v3 = v2 / 5.0;
  }
  return v3 * 3.0;
}

uint64_t sub_5725C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v120 = a2;
  uint64_t v98 = a1;
  uint64_t v91 = sub_90550();
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v95 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v101 = *(void **)(a4 - 8);
  __chkstk_darwin(v9);
  uint64_t v93 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v94 = (char *)&v86 - v12;
  __chkstk_darwin(v13);
  __n128 v15 = (char *)&v86 - v14;
  __chkstk_darwin(v16);
  uint64_t v96 = (char *)&v86 - v17;
  __chkstk_darwin(v18);
  objc_super v121 = (char *)&v86 - v19;
  uint64_t v97 = a5;
  uint64_t v92 = *(void *)(a5 + 16);
  uint64_t v119 = *(void *)(*(void *)(v92 + 24) + 8);
  uint64_t v123 = sub_8FFF0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v21 = sub_90320();
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v86 - v22;
  uint64_t v24 = *(void *)(TupleTypeMetadata3 - 8);
  __chkstk_darwin(v25);
  uint64_t v117 = (char *)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v129 = (char *)&v86 - v28;
  __chkstk_darwin(v29);
  uint64_t v112 = (char *)&v86 - v30;
  uint64_t v87 = v31;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v86 - v33;
  uint64_t v122 = a3;
  uint64_t v130 = a3;
  sub_90150();
  swift_getWitnessTable();
  sub_8FFA0();
  uint64_t v126 = v24;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, TupleTypeMetadata3);
  if (result == 1)
  {
LABEL_18:
    __break(1u);
  }
  else
  {
    id v89 = v15;
    uint64_t v36 = *(int *)(TupleTypeMetadata3 + 48);
    uint64_t v37 = &v23[v36];
    uint64_t v38 = *(int *)(TupleTypeMetadata3 + 64);
    id v39 = &v23[v38];
    char v40 = &v34[v36];
    uint64_t v41 = &v34[v38];
    uint64_t v42 = v101 + 4;
    uint64_t v43 = (void (*)(char *, char *, uint64_t))v101[4];
    v43(v34, v23, a4);
    uint64_t v99 = v40;
    int v115 = v43;
    uint64_t v116 = v42;
    v43(v40, v37, a4);
    uint64_t v44 = *(void *)(v123 - 8);
    uint64_t v113 = *(void (**)(char *, char *))(v44 + 32);
    uint64_t v114 = v44 + 32;
    v113(v41, v39);
    uint64_t v45 = v122;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_90140();
    uint64_t v100 = v34;
    uint64_t v118 = TupleTypeMetadata3;
    if (v46)
    {
      uint64_t v88 = v41;
      uint64_t v47 = 0;
      uint64_t v48 = v112;
      uint64_t v110 = &v112[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v109 = &v112[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v111 = (void (**)(char *, uint64_t *, uint64_t))(v126 + 16);
      unint64_t v108 = (unint64_t)(v101 + 2);
      double v107 = (void (**)(char *, char *, uint64_t))(v44 + 16);
      uint64_t v86 = v44;
      double v106 = (void (**)(char *, uint64_t))(v44 + 8);
      uint64_t v105 = (void (**)(char *, uint64_t))(v101 + 1);
      double v102 = (void (**)(char *, uint64_t))(v126 + 8);
      id v49 = v129;
      while (1)
      {
        BOOL v50 = sub_90110();
        sub_900F0();
        if (v50)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v126 + 16))(v48, v45+ ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80))+ *(void *)(v126 + 72) * v47, TupleTypeMetadata3);
          uint64_t v51 = v123;
          uint64_t v52 = v47 + 1;
          if (__OFADD__(v47, 1)) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t result = sub_903F0();
          uint64_t v51 = v123;
          if (v87 != 8)
          {
            __break(1u);
            goto LABEL_18;
          }
          uint64_t v130 = result;
          (*v111)(v48, &v130, TupleTypeMetadata3);
          swift_unknownObjectRelease();
          uint64_t v52 = v47 + 1;
          if (__OFADD__(v47, 1))
          {
LABEL_12:
            __break(1u);
            goto LABEL_13;
          }
        }
        uint64_t v127 = v47;
        uint64_t v128 = v52;
        uint64_t v41 = &v49[*(int *)(TupleTypeMetadata3 + 48)];
        uint64_t v53 = &v49[*(int *)(TupleTypeMetadata3 + 64)];
        id v54 = v115;
        v115(v49, v48, a4);
        v54(v41, v110, a4);
        ((void (*)(char *, char *, uint64_t))v113)(v53, v109, v51);
        uint64_t v55 = a4;
        id v56 = v117;
        uint64_t v57 = v51;
        v129 = &v117[*(int *)(TupleTypeMetadata3 + 48)];
        uint64_t v58 = v129;
        id v59 = &v117[*(int *)(TupleTypeMetadata3 + 64)];
        uint64_t v60 = *(void (**)(char *, char *, uint64_t))v108;
        unint64_t v124 = v108 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v60(v117, v49, v55);
        unsigned int v103 = v41;
        v60(v58, v41, v55);
        id v61 = *v107;
        uint64_t v104 = v53;
        v61(v59, v53, v57);
        uint64_t v62 = &v59[*(int *)(v57 + 36)];
        uint64_t v63 = v49;
        uint64_t v64 = v121;
        unint64_t v125 = v60;
        v60(v121, v62, v55);
        (*v106)(v59, v57);
        LOBYTE(v58) = sub_8FFD0();
        id v65 = *v105;
        (*v105)(v64, v55);
        a4 = v55;
        v65(v129, v55);
        v65(v56, v55);
        if (v58) {
          break;
        }
        TupleTypeMetadata3 = v118;
        (*v102)(v63, v118);
        uint64_t v45 = v122;
        uint64_t v66 = sub_90140();
        uint64_t v47 = v127 + 1;
        id v49 = v63;
        uint64_t v48 = v112;
        if (v128 == v66)
        {
          swift_bridgeObjectRelease();
          uint64_t v74 = v91;
          uint64_t v75 = v90;
          uint64_t v41 = v88;
LABEL_15:
          unint64_t v68 = v124;
          uint64_t v67 = v125;
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
      id v69 = v117;
      uint64_t v70 = &v117[*(int *)(v118 + 48)];
      uint64_t v71 = &v117[*(int *)(v118 + 64)];
      uint64_t v72 = v115;
      v115(v117, v63, a4);
      v72(v70, v103, a4);
      ((void (*)(char *, char *, uint64_t))v113)(v71, v104, v123);
      id v73 = (void (*)(char *, char *, uint64_t))v101[5];
      v73(v100, v69, a4);
      v73(v99, v70, a4);
      uint64_t v41 = v88;
      (*(void (**)(void))(v86 + 40))();
      uint64_t v74 = v91;
      uint64_t v75 = v90;
      goto LABEL_15;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v67 = (void (*)(char *, char *, uint64_t))v101[2];
    unint64_t v68 = (unint64_t)(v101 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v74 = v91;
    uint64_t v75 = v90;
LABEL_16:
    uint64_t v76 = v96;
    unint64_t v124 = v68;
    unint64_t v125 = v67;
    v67(v96, v41, a4);
    long long v77 = v93;
    uint64_t v78 = v99;
    sub_8FF70();
    uint64_t v79 = v95;
    (*(void (**)(char *, void, uint64_t))(v75 + 104))(v95, enum case for FloatingPointRoundingRule.up(_:), v74);
    uint64_t v80 = v94;
    sub_8FF80();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v79, v74);
    id v81 = (void (*)(char *, uint64_t))v101[1];
    v81(v77, a4);
    Class v82 = v89;
    sub_901E0();
    v81(v80, a4);
    uint64_t v83 = (uint64_t)v121;
    sub_905B0();
    v81(v82, a4);
    v81(v76, a4);
    uint64_t v84 = (uint64_t)v100;
    uint64_t v85 = sub_57D84((uint64_t)v100, v83, a4);
    v81((char *)v83, a4);
    v125(v98, v78, a4);
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v84, v118);
    return v85;
  }
  return result;
}

uint64_t sub_57D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v13 = *(void *)(a3 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v13 - v9;
  uint64_t v14 = sub_90100();
  swift_getAssociatedConformanceWitness();
  sub_90590();
  sub_90560();
  if (sub_8FFD0())
  {
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    do
    {
      v11(v7, v10, a3);
      sub_90150();
      sub_90130();
      sub_904D0();
    }
    while ((sub_8FFD0() & 1) != 0);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v10, a3);
  return v14;
}

double sub_57FDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BUIChartViewData.BatteryUsageElement(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BUIChartViewData(0);
  uint64_t v11 = v10 - 8;
  __n128 v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))(*(void *)v0 + 136))(v12);
  sub_60230((uint64_t)&v14[*(int *)(v11 + 28)], (uint64_t)v9, type metadata accessor for BUIChartViewData.DataFor10Days);
  sub_60298((uint64_t)v14, type metadata accessor for BUIChartViewData);
  uint64_t v15 = *(void *)&v9[*(int *)(v7 + 28)];
  swift_bridgeObjectRetain();
  sub_60298((uint64_t)v9, type metadata accessor for BUIChartViewData.DataFor10Days);
  int64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    double v33 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
    sub_5FDA0(0, v16, 0);
    uint64_t v17 = v15 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v18 = *(void *)(v3 + 72);
    double v19 = v33;
    do
    {
      sub_60230(v17, (uint64_t)v5, type metadata accessor for BUIChartViewData.BatteryUsageElement);
      uint64_t v20 = *(void *)&v5[*(int *)(v2 + 24)];
      sub_60298((uint64_t)v5, type metadata accessor for BUIChartViewData.BatteryUsageElement);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_5FDA0(0, *(void *)(*(void *)&v19 + 16) + 1, 1);
        double v19 = v33;
      }
      unint64_t v22 = *(void *)(*(void *)&v19 + 16);
      unint64_t v21 = *(void *)(*(void *)&v19 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_5FDA0((char *)(v21 > 1), v22 + 1, 1);
        double v19 = v33;
      }
      *(void *)(*(void *)&v19 + 16) = v22 + 1;
      *(void *)(*(void *)&v19 + 8 * v22 + 32) = v20;
      v17 += v18;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(*(void *)&v19 + 16);
    if (v23) {
      goto LABEL_9;
    }
LABEL_16:
    double v24 = 100.0;
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  double v19 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
  uint64_t v23 = _swiftEmptyArrayStorage[2];
  if (!v23) {
    goto LABEL_16;
  }
LABEL_9:
  double v24 = *(double *)(*(void *)&v19 + 32);
  uint64_t v25 = v23 - 1;
  if (v25)
  {
    uint64_t v26 = (double *)(*(void *)&v19 + 40);
    do
    {
      double v27 = *v26++;
      double v28 = v27;
      if (v24 < v27) {
        double v24 = v28;
      }
      --v25;
    }
    while (v25);
  }
LABEL_17:
  swift_bridgeObjectRelease();
  double v32 = v24;
  uint64_t v29 = *(void (**)(double *, double *, _UNKNOWN **, void *, unint64_t))(*(void *)v1 + 456);
  unint64_t v30 = sub_60188();
  v29(&v33, &v32, &off_C0838, &type metadata for Double, v30);
  return v33;
}

void *sub_58360(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_5FDA0(0, v1, 0);
    uint64_t v3 = type metadata accessor for BUIChartViewData.BatteryLevelsElement(0);
    uint64_t v4 = a1
       + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
    uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 72);
    do
    {
      uint64_t v6 = *(void *)(v4 + *(int *)(v3 + 24));
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_5FDA0((char *)(v7 > 1), v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      _swiftEmptyArrayStorage[v8 + 4] = v6;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

double *sub_58490()
{
  uint64_t v1 = type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BUIChartViewData(0);
  uint64_t v10 = v9 - 8;
  __n128 v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))(*(void *)v0 + 136))(v11);
  sub_60230((uint64_t)&v13[*(int *)(v10 + 28)], (uint64_t)v8, type metadata accessor for BUIChartViewData.DataFor10Days);
  sub_60298((uint64_t)v13, type metadata accessor for BUIChartViewData);
  uint64_t v14 = *(void *)&v8[*(int *)(v6 + 32)];
  swift_bridgeObjectRetain();
  sub_60298((uint64_t)v8, type metadata accessor for BUIChartViewData.DataFor10Days);
  int64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    char v40 = (double *)_swiftEmptyArrayStorage;
    sub_5FDA0(0, v15, 0);
    uint64_t v16 = v14 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v17 = *(void *)(v2 + 72);
    uint64_t v18 = v40;
    do
    {
      sub_60230(v16, (uint64_t)v4, type metadata accessor for BUIChartViewData.ScreenUsageElement);
      double v19 = sub_69B80();
      sub_60298((uint64_t)v4, type metadata accessor for BUIChartViewData.ScreenUsageElement);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_5FDA0(0, *((void *)v18 + 2) + 1, 1);
        uint64_t v18 = v40;
      }
      unint64_t v21 = *((void *)v18 + 2);
      unint64_t v20 = *((void *)v18 + 3);
      if (v21 >= v20 >> 1)
      {
        sub_5FDA0((char *)(v20 > 1), v21 + 1, 1);
        uint64_t v18 = v40;
      }
      *((void *)v18 + 2) = v21 + 1;
      v18[v21 + 4] = v19;
      v16 += v17;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    uint64_t v22 = *((void *)v18 + 2);
    if (v22) {
      goto LABEL_9;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    double v23 = *(double *)sub_4B18C();
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = (double *)_swiftEmptyArrayStorage;
  uint64_t v22 = _swiftEmptyArrayStorage[2];
  if (!v22) {
    goto LABEL_16;
  }
LABEL_9:
  double v23 = v18[4];
  uint64_t v24 = v22 - 1;
  if (v24)
  {
    for (uint64_t i = 0; i != v24; ++i)
    {
      uint64_t v26 = &v18[i];
      if (v23 < v26[5]) {
        double v23 = v26[5];
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_17:
  double v27 = (double *)sub_4B18C();
  double v39 = ceil(v23 / *v27);
  double v28 = *(uint64_t (**)(double **, double *, _UNKNOWN **, void *, unint64_t))(*(void *)v0 + 456);
  unint64_t v29 = sub_60188();
  uint64_t v30 = v28(&v40, &v39, &off_C08F8, &type metadata for Double, v29);
  int64_t v31 = *(void *)(v30 + 16);
  if (v31)
  {
    char v40 = (double *)_swiftEmptyArrayStorage;
    sub_5FDA0(0, v31, 0);
    uint64_t v32 = 0;
    double v33 = v40;
    unint64_t v34 = *((void *)v40 + 2);
    do
    {
      double v35 = *(double *)(v30 + 8 * v32 + 32);
      double v36 = *v27;
      char v40 = v33;
      unint64_t v37 = *((void *)v33 + 3);
      if (v34 >= v37 >> 1)
      {
        sub_5FDA0((char *)(v37 > 1), v34 + 1, 1);
        double v33 = v40;
      }
      ++v32;
      *((void *)v33 + 2) = v34 + 1;
      v33[v34++ + 4] = v35 * v36;
    }
    while (v31 != v32);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (double *)_swiftEmptyArrayStorage;
  }
  return v33;
}

BOOL sub_58900(double a1)
{
  return (*(double (**)(void))(*(void *)v1 + 432))() <= a1 * 0.125 + -4.0;
}

uint64_t sub_58960(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_3ED90(&qword_D5D00);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_3ED90(&qword_D5D08);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_8F050();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_3ED90(&qword_D5B48);
  __chkstk_darwin(v14 - 8);
  uint64_t v53 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v40 - v17;
  uint64_t v19 = *(void *)((char *)v1 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel_cfg)
      + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_calendar;
  uint64_t v20 = sub_8F210();
  uint64_t v21 = *(void *)(v20 - 8);
  id v49 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 56);
  uint64_t v50 = v20;
  uint64_t v48 = v21 + 56;
  v49(v9, 1, 1);
  uint64_t v22 = sub_8F220();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  uint64_t v46 = v23 + 56;
  uint64_t v47 = v24;
  v24(v6, 1, 1, v22);
  uint64_t v52 = v9;
  id v56 = v6;
  sub_8F040();
  uint64_t v51 = v19;
  sub_8F1D0();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v54 = v11 + 8;
  uint64_t v55 = v10;
  v25(v13, v10);
  uint64_t v26 = sub_8F150();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  uint64_t result = v45(v18, 1, v26);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v29 = *(uint64_t (**)(char *))(*v1 + 520);
    uint64_t v43 = *v1 + 520;
    uint64_t v44 = v29;
    uint64_t v30 = v29(v18);
    uint64_t v32 = v31;
    uint64_t v42 = *(void (**)(char *, uint64_t))(v27 + 8);
    v42(v18, v26);
    double v33 = (uint64_t (**)(uint64_t, uint64_t, double))(*v2 + 480);
    uint64_t v41 = *v33;
    LOBYTE(v30) = v41(v30, v32, a1);
    swift_bridgeObjectRelease();
    char v34 = 1;
    if ((v30 & 1) == 0) {
      return v34 & 1;
    }
    char v40 = v33;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v49)(v52, 1, 1, v50);
    v47(v56, 1, 1, v22);
    sub_8F040();
    double v35 = v53;
    sub_8F1D0();
    v25(v13, v55);
    uint64_t result = v45(v35, 1, v26);
    if (result != 1)
    {
      uint64_t v36 = v44(v35);
      uint64_t v38 = v37;
      v42(v35, v26);
      char v39 = v41(v36, v38, a1);
      swift_bridgeObjectRelease();
      char v34 = v39 ^ 1;
      return v34 & 1;
    }
  }
  __break(1u);
  return result;
}

double sub_58F4C(double a1)
{
  return *(double *)sub_4B198() / a1 * 18.0;
}

BOOL sub_58F80()
{
  uint64_t v0 = sub_8F1F0();
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))(v4, enum case for Calendar.Component.hour(_:), v0, v2);
  uint64_t v5 = sub_8F200();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5 == 0;
}

BOOL sub_5909C()
{
  uint64_t v0 = sub_8F1F0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v4 = CalWeekStartForDisplay();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Calendar.Component.weekday(_:), v0);
  uint64_t v5 = sub_8F200();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5 == v4 + 1;
}

uint64_t sub_591C8()
{
  id v1 = objc_retain(*(id *)(*(void *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel_cfg)
                         + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForHour));
  Class isa = sub_8F0C0().super.isa;
  id v3 = [v1 stringFromDate:isa];

  uint64_t v4 = sub_90020();
  uint64_t v5 = sub_8F160();
  if (v6)
  {
    if (v5 == 28261 && v6 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v8 = sub_90570();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0) {
        return v4;
      }
    }
    sub_4AB2C();
    sub_90360();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_90360();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_59394(uint64_t a1, uint64_t a2, int a3, double a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  int v56 = a3;
  uint64_t v12 = sub_8F150();
  uint64_t v55 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v53 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v54 = (char *)v51 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v51 - v17;
  uint64_t v19 = sub_8F1F0();
  uint64_t v20 = *(void *)(v19 - 8);
  __n128 v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = *(void *)(v6 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel_cfg);
  (*(void (**)(char *, void, uint64_t, __n128))(v20 + 104))(v23, enum case for Calendar.Component.hour(_:), v19, v21);
  uint64_t v24 = sub_8F200();
  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v19);
  if (v24 % 12 == 3)
  {
    if (((*(uint64_t (**)(uint64_t, double))(*(void *)v7 + 488))(v25, a4) & 1) != 0 && (v56 & 1) == 0)
    {
      uint64_t v26 = 0;
      unint64_t v28 = 0xE000000000000000;
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if (v24 % 12)
  {
LABEL_9:
    id v29 = *(id *)(v57 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForHourShort);
    Class isa = sub_8F0C0().super.isa;
    id v31 = [v29 stringFromDate:isa];

    uint64_t v26 = sub_90020();
    unint64_t v28 = v32;

    goto LABEL_10;
  }
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 520))(a1);
  unint64_t v28 = v27;
  if (a2 == 7 && ((*(uint64_t (**)(double))(*(void *)v7 + 488))(a4) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
LABEL_10:
  if (a6)
  {
    uint64_t v52 = v26;
    double v33 = (uint64_t (**)(uint64_t))(*(void *)v7 + 504);
    char v34 = *v33;
    char v35 = (*v33)(a1);
    uint64_t v36 = v55;
    uint64_t v37 = *(void (**)(char *))(v55 + 16);
    v51[1] = a1;
    v37(v18);
    if (v35)
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v18, v12);
      uint64_t v26 = v52;
    }
    else
    {
      uint64_t v44 = v54;
      ((void (*)(char *, char *, uint64_t))v37)(v54, v18, v12);
      if ((v56 & 1) == 0)
      {
        id v49 = *(void (**)(char *, uint64_t))(v36 + 8);
        v49(v44, v12);
        v49(v18, v12);
        return v52;
      }
      sub_4B18C();
      uint64_t v45 = v53;
      uint64_t v46 = v44;
      sub_8F140();
      char v47 = v34((uint64_t)v45);
      uint64_t v48 = *(void (**)(char *, uint64_t))(v36 + 8);
      v48(v45, v12);
      v48(v46, v12);
      v48(v18, v12);
      uint64_t v26 = v52;
      if (v47) {
        return v26;
      }
    }
    id v38 = *(id *)(v57 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForDate);
    Class v39 = sub_8F0C0().super.isa;
    id v40 = [v38 stringFromDate:v39];

    uint64_t v41 = sub_90020();
    uint64_t v43 = v42;

    uint64_t v58 = v26;
    unint64_t v59 = v28;
    swift_bridgeObjectRetain();
    v60._countAndFlagsBits = 10;
    v60._object = (void *)0xE100000000000000;
    sub_90060(v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v61._countAndFlagsBits = v41;
    v61._object = v43;
    sub_90060(v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v58;
  }
  return v26;
}

uint64_t sub_5991C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v5 = v4;
  int v43 = a4;
  int v46 = a3;
  uint64_t v47 = a2;
  uint64_t v7 = sub_8F150();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v45 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  id v49 = &v42[-v11];
  __chkstk_darwin(v12);
  uint64_t v14 = &v42[-v13];
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = &v42[-v17];
  uint64_t v50 = v8;
  uint64_t v19 = *(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v19(&v42[-v17], a1, v7, v16);
  uint64_t v44 = *(void *)(v5 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel_cfg);
  id v20 = *(id *)(v44 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForDay);
  Class isa = sub_8F0C0().super.isa;
  id v22 = [v20 stringFromDate:isa];

  uint64_t v51 = sub_90020();
  uint64_t v24 = v23;

  uint64_t v25 = *(uint64_t (**)(unsigned char *))(*(void *)v5 + 512);
  LOBYTE(isa) = v25(v18);
  uint64_t v48 = v18;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v19)(v14, v18, v7);
  if (isa)
  {
    uint64_t v26 = *(void (**)(unsigned char *, uint64_t))(v50 + 8);
    v26(v14, v7);
    if (v47 != 9)
    {
      unint64_t v27 = v48;
LABEL_7:
      id v36 = *(id *)(v44 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForDate);
      Class v37 = sub_8F0C0().super.isa;
      id v38 = [v36 stringFromDate:v37];

      uint64_t v34 = sub_90020();
      char v35 = v39;

      goto LABEL_11;
    }
    goto LABEL_9;
  }
  unint64_t v28 = v45;
  uint64_t v29 = v50;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v19)(v49, v14, v7);
  if ((v46 & 1) == 0)
  {
    uint64_t v26 = *(void (**)(unsigned char *, uint64_t))(v29 + 8);
    v26(v49, v7);
    v26(v14, v7);
    if ((v43 & 1) == 0)
    {
      unint64_t v27 = v48;
      uint64_t v40 = v51;
      goto LABEL_12;
    }
LABEL_9:
    uint64_t v34 = 0;
    char v35 = (void *)0xE000000000000000;
    goto LABEL_10;
  }
  sub_4B198();
  uint64_t v30 = v28;
  id v31 = v49;
  sub_8F140();
  char v32 = v25(v28);
  double v33 = v30;
  uint64_t v26 = *(void (**)(unsigned char *, uint64_t))(v29 + 8);
  v26(v33, v7);
  v26(v31, v7);
  v26(v14, v7);
  uint64_t v34 = 0;
  char v35 = (void *)0xE000000000000000;
  if (v32)
  {
LABEL_10:
    unint64_t v27 = v48;
    goto LABEL_11;
  }
  unint64_t v27 = v48;
  if (v47 != 9) {
    goto LABEL_7;
  }
LABEL_11:
  uint64_t v52 = v51;
  uint64_t v53 = v24;
  swift_bridgeObjectRetain();
  v54._countAndFlagsBits = 10;
  v54._object = (void *)0xE100000000000000;
  sub_90060(v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v55._countAndFlagsBits = v34;
  v55._object = v35;
  sub_90060(v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v40 = v52;
LABEL_12:
  v26(v27, v7);
  return v40;
}

void sub_59D5C()
{
  uint64_t v1 = sub_8F150();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel_cfg);
  uint64_t v6 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForHour;
  id v7 = *(id *)(v5 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForHour);
  Class isa = sub_8F0C0().super.isa;
  id v9 = [v7 stringFromDate:isa];

  uint64_t v10 = sub_90020();
  uint64_t v12 = v11;

  id v13 = *(id *)(v5 + v6);
  sub_8F140();
  Class v14 = sub_8F0C0().super.isa;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  id v15 = [v13 stringFromDate:v14];

  uint64_t v16 = sub_90020();
  uint64_t v18 = v17;

  NSString v19 = sub_90010();
  id v20 = BatteryUILocalization(v19);

  if (v20)
  {
    sub_90020();

    sub_3ED90(&qword_D5D10);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_9C980;
    *(void *)(v21 + 56) = &type metadata for String;
    unint64_t v22 = sub_601DC();
    *(void *)(v21 + 32) = v10;
    *(void *)(v21 + 40) = v12;
    *(void *)(v21 + 96) = &type metadata for String;
    *(void *)(v21 + 104) = v22;
    *(void *)(v21 + 64) = v22;
    *(void *)(v21 + 72) = v16;
    *(void *)(v21 + 80) = v18;
    sub_90030();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_59FC8()
{
  id v1 = objc_retain(*(id *)(*(void *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel_cfg)
                         + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForDate));
  Class isa = sub_8F0C0().super.isa;
  id v3 = [v1 stringFromDate:isa];

  uint64_t v4 = sub_90020();
  return v4;
}

void sub_5A060(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  v152[0] = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v165 = (uint64_t)v152 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v164 = (uint64_t)v152 - v5;
  uint64_t v157 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  __chkstk_darwin(v157);
  uint64_t v156 = (uint64_t)v152 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v7 - 8);
  v155 = (char *)v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = type metadata accessor for BUIChartViewData.BatteryLevelsElement(0);
  id v9 = *(unsigned __int8 **)(v168 - 8);
  __chkstk_darwin(v168);
  uint64_t v11 = (char *)v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_3ED90(&qword_D5B48);
  __chkstk_darwin(v12 - 8);
  v154 = (char *)v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v161 = (char *)v152 - v15;
  uint64_t v16 = sub_8F150();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v163 = (char *)v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v159 = (char *)v152 - v20;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v152 - v22;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v152 - v25;
  int64_t v27 = *(void *)(a1 + 16);
  unint64_t v28 = _swiftEmptyArrayStorage;
  uint64_t v169 = v29;
  uint64_t v167 = v17;
  v162 = (char *)v152 - v25;
  uint64_t v158 = a1;
  v152[1] = v2;
  if (v27)
  {
    v171 = _swiftEmptyArrayStorage;
    sub_5FDFC(0, v27, 0);
    uint64_t v30 = a1 + ((v9[80] + 32) & ~(unint64_t)v9[80]);
    v153 = v9;
    v166 = (void (*)(char *, char *, uint64_t))*((void *)v9 + 9);
    int64_t v31 = v27;
    do
    {
      sub_60230(v30, (uint64_t)v11, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v23, &v11[*(int *)(v168 + 20)], v16);
      sub_60298((uint64_t)v11, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
      unint64_t v28 = v171;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_5FDFC(0, v28[2] + 1, 1);
        unint64_t v28 = v171;
      }
      unint64_t v33 = v28[2];
      unint64_t v32 = v28[3];
      if (v33 >= v32 >> 1)
      {
        sub_5FDFC(v32 > 1, v33 + 1, 1);
        unint64_t v28 = v171;
      }
      v28[2] = v33 + 1;
      uint64_t v16 = v169;
      (*(void (**)(unint64_t, char *, uint64_t))(v167 + 32))((unint64_t)v28+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(void *)(v167 + 72) * v33, v23, v169);
      v171 = v28;
      v30 += (uint64_t)v166;
      --v31;
    }
    while (v31);
    uint64_t v17 = v167;
    uint64_t v26 = v162;
    id v9 = v153;
  }
  uint64_t v34 = v161;
  sub_5B2D8((uint64_t)v28, v161);
  swift_bridgeObjectRelease();
  v153 = *(unsigned __int8 **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v153)(v34, 1, v16) == 1) {
    goto LABEL_20;
  }
  v166 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v166(v26, v34, v16);
  char v35 = (char *)_swiftEmptyArrayStorage;
  if (v27)
  {
    v161 = (char *)(v17 + 48);
    v171 = _swiftEmptyArrayStorage;
    sub_5FDFC(0, v27, 0);
    uint64_t v36 = v158 + ((v9[80] + 32) & ~(unint64_t)v9[80]);
    uint64_t v37 = *((void *)v9 + 9);
    char v35 = (char *)v171;
    do
    {
      sub_60230(v36, (uint64_t)v11, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
      sub_4B180();
      sub_8F140();
      sub_60298((uint64_t)v11, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_5FDFC(0, *((void *)v35 + 2) + 1, 1);
        char v35 = (char *)v171;
      }
      unint64_t v39 = *((void *)v35 + 2);
      unint64_t v38 = *((void *)v35 + 3);
      if (v39 >= v38 >> 1)
      {
        sub_5FDFC(v38 > 1, v39 + 1, 1);
        char v35 = (char *)v171;
      }
      *((void *)v35 + 2) = v39 + 1;
      uint64_t v16 = v169;
      v166(&v35[((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v39], v163, v169);
      v171 = v35;
      v36 += v37;
      --v27;
    }
    while (v27);
    uint64_t v26 = v162;
  }
  uint64_t v34 = v154;
  sub_56E0C((uint64_t)v35, v154);
  swift_bridgeObjectRelease();
  unsigned int v40 = ((uint64_t (*)(char *, uint64_t, uint64_t))v153)(v34, 1, v16);
  uint64_t v41 = v159;
  if (v40 == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v16);
LABEL_20:
    sub_4AE2C((uint64_t)v34, &qword_D5B48);
    NSString v42 = sub_90010();
    id v43 = BatteryUILocalization(v42);

    if (v43)
    {
      sub_90020();

      return;
    }
    __break(1u);
    goto LABEL_94;
  }
  uint64_t v44 = ((uint64_t (*)(char *, char *, uint64_t))v166)(v159, v34, v16);
  uint64_t v45 = *(void (**)(uint64_t))(*(void *)v160 + 136);
  uint64_t v46 = (uint64_t)v155;
  v45(v44);
  uint64_t v47 = v156;
  sub_60230(v46, v156, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  sub_60298(v46, type metadata accessor for BUIChartViewData);
  uint64_t v48 = *(void *)(v47 + *(int *)(v157 + 24));
  swift_bridgeObjectRetain();
  sub_60298(v47, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  uint64_t v49 = *(void *)(v48 + 16);
  if (v49)
  {
    uint64_t v168 = (uint64_t)v45;
    uint64_t v50 = v48
        + ((*(unsigned __int8 *)(v152[0] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152[0] + 80));
    uint64_t v51 = *(void *)(v152[0] + 72);
    double v52 = 0.0;
    uint64_t v53 = v164;
    do
    {
      sub_60230(v50, v53, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
      sub_8F110();
      double v55 = v54;
      sub_8F110();
      double v57 = v56;
      sub_8F110();
      if (v55 <= v58) {
        double v55 = v58;
      }
      sub_8F110();
      if (v59 < v55) {
        double v55 = v59;
      }
      sub_8F110();
      if (v57 <= v60) {
        double v57 = v60;
      }
      sub_8F110();
      uint64_t v53 = v164;
      if (v61 < v57) {
        double v57 = v61;
      }
      sub_60298(v164, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
      double v52 = v52 + v57 - v55;
      v50 += v51;
      --v49;
    }
    while (v49);
    uint64_t v62 = swift_bridgeObjectRelease();
    uint64_t v45 = (void (*)(uint64_t))v168;
    uint64_t v16 = v169;
  }
  else
  {
    uint64_t v62 = swift_bridgeObjectRelease();
    double v52 = 0.0;
  }
  uint64_t v63 = (uint64_t)v155;
  v45(v62);
  uint64_t v64 = v156;
  sub_60230(v63, v156, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  sub_60298(v63, type metadata accessor for BUIChartViewData);
  uint64_t v65 = *(void *)(v64 + *(int *)(v157 + 28));
  swift_bridgeObjectRetain();
  sub_60298(v64, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  uint64_t v66 = *(void *)(v65 + 16);
  uint64_t v67 = v167;
  if (v66)
  {
    uint64_t v68 = v65
        + ((*(unsigned __int8 *)(v152[0] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152[0] + 80));
    uint64_t v69 = *(void *)(v152[0] + 72);
    double v70 = 0.0;
    uint64_t v71 = v165;
    do
    {
      sub_60230(v68, v71, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
      sub_8F110();
      double v73 = v72;
      sub_8F110();
      double v75 = v74;
      sub_8F110();
      if (v73 <= v76) {
        double v73 = v76;
      }
      sub_8F110();
      if (v77 < v73) {
        double v73 = v77;
      }
      sub_8F110();
      if (v75 <= v78) {
        double v75 = v78;
      }
      sub_8F110();
      uint64_t v71 = v165;
      if (v79 < v75) {
        double v75 = v79;
      }
      sub_60298(v165, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
      double v70 = v70 + v75 - v73;
      v68 += v69;
      --v66;
    }
    while (v66);
    swift_bridgeObjectRelease();
    uint64_t v67 = v167;
  }
  else
  {
    swift_bridgeObjectRelease();
    double v70 = 0.0;
  }
  uint64_t v80 = swift_bridgeObjectRetain();
  id v81 = sub_60438(v80);
  swift_bridgeObjectRelease();
  Class v82 = (double *)sub_58360((uint64_t)v81);
  swift_bridgeObjectRelease();
  uint64_t v83 = *((void *)v82 + 2);
  if (!v83)
  {
    swift_bridgeObjectRelease();
    NSString v87 = sub_90010();
    id v88 = BatteryUILocalization(v87);

    if (v88)
    {
      sub_90020();

      id v89 = *(void (**)(char *, uint64_t))(v67 + 8);
      v89(v41, v16);
      v89(v26, v16);
      return;
    }
    goto LABEL_95;
  }
  double v84 = v82[4];
  uint64_t v85 = v83 - 1;
  if (v85)
  {
    uint64_t v90 = v82 + 5;
    uint64_t v91 = v85;
    double v86 = v82[4];
    do
    {
      double v92 = *v90++;
      double v93 = v92;
      if (v92 < v86) {
        double v86 = v93;
      }
      --v91;
    }
    while (v91);
    uint64_t v94 = v82 + 5;
    do
    {
      double v95 = *v94++;
      double v96 = v95;
      if (v84 < v95) {
        double v84 = v96;
      }
      --v85;
    }
    while (v85);
  }
  else
  {
    double v86 = v82[4];
  }
  uint64_t v97 = swift_bridgeObjectRelease();
  uint64_t v98 = *(void **)(v160 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel_cfg);
  uint64_t v99 = (uint64_t (**)(void))(*v98 + 496);
  uint64_t v100 = *v99;
  char v101 = (void *)((uint64_t (*)(uint64_t))*v99)(v97);
  id v102 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v86];
  id v103 = [v101 stringFromNumber:v102];

  if (v103)
  {
    uint64_t v104 = sub_90020();
    unint64_t v106 = v105;
  }
  else
  {
    uint64_t v104 = 0;
    unint64_t v106 = 0xE000000000000000;
  }
  double v107 = (void *)v100();
  id v108 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v84];
  id v109 = [v107 stringFromNumber:v108];

  if (v109)
  {
    uint64_t v110 = sub_90020();
    unint64_t v112 = v111;
  }
  else
  {
    uint64_t v110 = 0;
    unint64_t v112 = 0xE000000000000000;
  }
  uint64_t v113 = v169;
  uint64_t v114 = v162;
  int v115 = v159;
  if (v104 == v110 && v106 == v112 || (sub_90570() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    NSString v116 = sub_90010();
    id v117 = BatteryUILocalization(v116);

    if (!v117)
    {
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
    sub_90020();

    sub_3ED90(&qword_D5D10);
    uint64_t v118 = swift_allocObject();
    *(_OWORD *)(v118 + 16) = xmmword_9C990;
    *(void *)(v118 + 56) = &type metadata for String;
    *(void *)(v118 + 64) = sub_601DC();
    *(void *)(v118 + 32) = v104;
    *(void *)(v118 + 40) = v106;
    uint64_t v119 = sub_90030();
    uint64_t v121 = v120;
LABEL_74:
    swift_bridgeObjectRelease();
    v171 = (void *)v119;
    uint64_t v172 = v121;
    if (v52 <= 0.0) {
      goto LABEL_82;
    }
    if (v52 < *(double *)sub_4B174())
    {
      NSString v128 = sub_90010();
      id v129 = BatteryUILocalization(v128);

      if (v129) {
        goto LABEL_79;
      }
      __break(1u);
    }
    id v129 = objc_msgSend(*(id *)((char *)v98 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForChargingInterval), "stringFromTimeInterval:", v52, v152[0]);
    if (!v129)
    {
      uint64_t v130 = 0;
      unint64_t v132 = 0xE000000000000000;
      goto LABEL_80;
    }
LABEL_79:
    uint64_t v130 = sub_90020();
    unint64_t v132 = v131;

LABEL_80:
    NSString v133 = sub_90010();
    id v134 = BatteryUILocalization(v133);

    if (!v134)
    {
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    sub_90020();

    sub_3ED90(&qword_D5D10);
    uint64_t v135 = swift_allocObject();
    *(_OWORD *)(v135 + 16) = xmmword_9C990;
    *(void *)(v135 + 56) = &type metadata for String;
    *(void *)(v135 + 64) = sub_601DC();
    *(void *)(v135 + 32) = v130;
    *(void *)(v135 + 40) = v132;
    uint64_t v136 = sub_90030();
    v138 = v137;
    swift_bridgeObjectRelease();
    v170._countAndFlagsBits = 8236;
    v170._object = (void *)0xE200000000000000;
    v173._countAndFlagsBits = v136;
    v173._object = v138;
    sub_90060(v173);
    swift_bridgeObjectRelease();
    sub_90060(v170);
    swift_bridgeObjectRelease();
LABEL_82:
    uint64_t v139 = v167;
    if (v70 <= 0.0) {
      goto LABEL_90;
    }
    if (v70 < *(double *)sub_4B174())
    {
      uint64_t v98 = sub_90010();
      id v140 = BatteryUILocalization(v98);

      if (v140) {
        goto LABEL_87;
      }
      __break(1u);
    }
    id v140 = objc_msgSend(*(id *)((char *)v98 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForChargingInterval), "stringFromTimeInterval:", v70, v152[0]);
    if (!v140)
    {
      uint64_t v141 = 0;
      unint64_t v143 = 0xE000000000000000;
      goto LABEL_88;
    }
LABEL_87:
    uint64_t v141 = sub_90020();
    unint64_t v143 = v142;

LABEL_88:
    NSString v144 = sub_90010();
    id v145 = BatteryUILocalization(v144);

    if (!v145)
    {
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    sub_90020();

    sub_3ED90(&qword_D5D10);
    uint64_t v146 = swift_allocObject();
    *(_OWORD *)(v146 + 16) = xmmword_9C990;
    *(void *)(v146 + 56) = &type metadata for String;
    *(void *)(v146 + 64) = sub_601DC();
    *(void *)(v146 + 32) = v141;
    *(void *)(v146 + 40) = v143;
    uint64_t v147 = sub_90030();
    v149 = v148;
    swift_bridgeObjectRelease();
    v170._countAndFlagsBits = 8236;
    v170._object = (void *)0xE200000000000000;
    v174._countAndFlagsBits = v147;
    v174._object = v149;
    sub_90060(v174);
    swift_bridgeObjectRelease();
    sub_90060(v170);
    swift_bridgeObjectRelease();
LABEL_90:
    v150 = (double *)sub_4B18C();
    v175._countAndFlagsBits = (*(uint64_t (**)(char *, double))(*(void *)v160 + 544))(v114, *v150);
    v170._countAndFlagsBits = 8236;
    v170._object = (void *)0xE200000000000000;
    sub_90060(v175);
    swift_bridgeObjectRelease();
    sub_90060(v170);
    swift_bridgeObjectRelease();
    v151 = *(void (**)(char *, uint64_t))(v139 + 8);
    v151(v115, v113);
    v151(v114, v113);
    return;
  }
  uint64_t v122 = v114;
  NSString v123 = sub_90010();
  id v124 = BatteryUILocalization(v123);

  if (v124)
  {
    sub_90020();

    sub_3ED90(&qword_D5D10);
    uint64_t v125 = swift_allocObject();
    *(_OWORD *)(v125 + 16) = xmmword_9C980;
    *(void *)(v125 + 56) = &type metadata for String;
    unint64_t v126 = sub_601DC();
    *(void *)(v125 + 32) = v104;
    *(void *)(v125 + 40) = v106;
    *(void *)(v125 + 96) = &type metadata for String;
    *(void *)(v125 + 104) = v126;
    *(void *)(v125 + 64) = v126;
    *(void *)(v125 + 72) = v110;
    *(void *)(v125 + 80) = v112;
    uint64_t v119 = sub_90030();
    uint64_t v121 = v127;
    uint64_t v113 = v169;
    uint64_t v114 = v122;
    int v115 = v159;
    goto LABEL_74;
  }
LABEL_98:
  __break(1u);
}

uint64_t sub_5B2D8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_3ED90(&qword_D5B48);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v9 = (char *)&v30 - v8;
  uint64_t v10 = sub_8F150();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18)
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
    v20(v9, 1, 1, v10, v15);
    goto LABEL_5;
  }
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v37 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v11 + 16);
  uint64_t v38 = v11 + 16;
  v37(v9, a1 + v19, v10, v15);
  uint64_t v32 = a1;
  unint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v39)(v9, 0, 1, v10);
  char v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v36 = v11 + 48;
  if (v35(v9, 1, v10) == 1)
  {
    uint64_t v20 = v39;
LABEL_5:
    sub_4AE2C((uint64_t)v9, &qword_D5B48);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v20)(a2, 1, 1, v10);
  }
  int64_t v31 = a2;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v34(v17, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v22 = v18 - 1;
  if (v22)
  {
    uint64_t v24 = *(void *)(v11 + 72);
    uint64_t v25 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v33 = v24;
    unint64_t v26 = v32 + v24 + v19;
    int64_t v27 = v34;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v37)(v6, v26, v10);
      ((void (*)(char *, void, uint64_t, uint64_t))v39)(v6, 0, 1, v10);
      if (v35(v6, 1, v10) == 1) {
        break;
      }
      v27(v13, v6, v10);
      sub_61134((unint64_t *)&qword_D5B50);
      char v28 = sub_8FFC0();
      uint64_t v29 = *v25;
      if (v28)
      {
        v29(v17, v10);
        v27(v17, v13, v10);
      }
      else
      {
        v29(v13, v10);
      }
      v26 += v33;
      if (!--v22) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v39)(v6, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_4AE2C((uint64_t)v6, &qword_D5B48);
  uint64_t v23 = v31;
  v34(v31, v17, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v39)(v23, 0, 1, v10);
}

void sub_5B6E8()
{
  uint64_t v1 = v0;
  NSString v2 = sub_90010();
  id v3 = BatteryUILocalization(v2);

  if (!v3)
  {
    __break(1u);
    goto LABEL_13;
  }
  sub_90020();

  type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  sub_60664();
  sub_900B0();
  sub_900B0();
  if (v30 == v28 && v31 == v29)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_6;
  }
  char v4 = sub_90570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    NSString v5 = sub_90010();
    id v6 = BatteryUILocalization(v5);

    if (v6)
    {
      sub_90020();

      goto LABEL_8;
    }
LABEL_13:
    __break(1u);
    return;
  }
LABEL_8:
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel_cfg);
  uint64_t v8 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForChargingTime;
  id v9 = *(id *)(v7 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForChargingTime);
  Class isa = sub_8F0C0().super.isa;
  id v11 = [v9 stringFromDate:isa];

  uint64_t v12 = sub_90020();
  uint64_t v14 = v13;

  id v15 = *(id *)(v7 + v8);
  Class v16 = sub_8F0C0().super.isa;
  id v17 = [v15 stringFromDate:v16];

  uint64_t v18 = sub_90020();
  uint64_t v20 = v19;

  id v21 = *(id *)(v7 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForChargingInterval);
  id v22 = [v21 stringFromTimeInterval:sub_6A334()];

  if (v22)
  {
    uint64_t v23 = sub_90020();
    unint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    unint64_t v25 = 0xE000000000000000;
  }
  sub_3ED90(&qword_D5D10);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_9C9A0;
  *(void *)(v26 + 56) = &type metadata for String;
  unint64_t v27 = sub_601DC();
  *(void *)(v26 + 32) = v12;
  *(void *)(v26 + 40) = v14;
  *(void *)(v26 + 96) = &type metadata for String;
  *(void *)(v26 + 104) = v27;
  *(void *)(v26 + 64) = v27;
  *(void *)(v26 + 72) = v18;
  *(void *)(v26 + 80) = v20;
  *(void *)(v26 + 136) = &type metadata for String;
  *(void *)(v26 + 144) = v27;
  *(void *)(v26 + 112) = v23;
  *(void *)(v26 + 120) = v25;
  sub_90030();
  swift_bridgeObjectRelease();
}

void sub_5BA24(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_3ED90(&qword_D5D28);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  uint64_t v8 = *((void *)v7 - 1);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ACE8(a1, (uint64_t)v6, &qword_D5D28);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_4AE2C((uint64_t)v6, &qword_D5D28);
LABEL_8:
    NSString v17 = sub_90010();
    id v18 = BatteryUILocalization(v17);

    if (v18)
    {
      sub_90020();

      return;
    }
    __break(1u);
    goto LABEL_23;
  }
  sub_606EC((uint64_t)v6, (uint64_t)v10, type metadata accessor for BUIChartViewData.ScreenUsageElement);
  if (v10[v7[8]] != 1)
  {
    sub_60298((uint64_t)v10, type metadata accessor for BUIChartViewData.ScreenUsageElement);
    goto LABEL_8;
  }
  if (sub_69B80() > 0.0)
  {
    uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel_cfg);
    uint64_t v12 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForChargingInterval;
    id v13 = *(id *)(v11 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForChargingInterval);
    id v14 = [v13 stringFromTimeInterval:sub_69B80()];

    if (v14)
    {
      uint64_t v15 = sub_90020();
      unint64_t v49 = v16;
      uint64_t v50 = v15;
    }
    else
    {
      unint64_t v49 = 0xE000000000000000;
      uint64_t v50 = 0;
    }
    id v24 = [*(id *)(v11 + v12) stringFromTimeInterval:*(double *)&v10[v7[6]]];
    if (v24)
    {
      unint64_t v25 = v24;
      uint64_t v48 = sub_90020();
      unint64_t v27 = v26;
    }
    else
    {
      uint64_t v48 = 0;
      unint64_t v27 = 0xE000000000000000;
    }
    id v28 = [*(id *)(v11 + v12) stringFromTimeInterval:*(double *)&v10[v7[7]]];
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = sub_90020();
      unint64_t v32 = v31;
    }
    else
    {
      uint64_t v30 = 0;
      unint64_t v32 = 0xE000000000000000;
    }
    NSString v33 = sub_90010();
    id v34 = BatteryUILocalization(v33);

    if (!v34) {
      goto LABEL_24;
    }
    sub_90020();

    sub_3ED90(&qword_D5D10);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_9C9A0;
    *(void *)(v35 + 56) = &type metadata for String;
    unint64_t v36 = sub_601DC();
    unint64_t v37 = v49;
    *(void *)(v35 + 32) = v50;
    *(void *)(v35 + 40) = v37;
    *(void *)(v35 + 96) = &type metadata for String;
    *(void *)(v35 + 104) = v36;
    uint64_t v38 = v48;
    *(void *)(v35 + 64) = v36;
    *(void *)(v35 + 72) = v38;
    *(void *)(v35 + 80) = v27;
    *(void *)(v35 + 136) = &type metadata for String;
    *(void *)(v35 + 144) = v36;
    *(void *)(v35 + 112) = v30;
    *(void *)(v35 + 120) = v32;
    uint64_t v21 = sub_90030();
    uint64_t v23 = v39;
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v52 = v21;
    uint64_t v53 = v23;
    unsigned int v40 = &v10[v7[5]];
    v41.n128_u64[0] = *(void *)sub_4B18C();
    v54._uint64_t countAndFlagsBits = (*(uint64_t (**)(char *, __n128))(*(void *)v2 + 544))(v40, v41);
    v51._uint64_t countAndFlagsBits = 8236;
    v51._object = (void *)0xE200000000000000;
    sub_90060(v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v55._uint64_t countAndFlagsBits = 8236;
    v55._object = (void *)0xE200000000000000;
    sub_90060(v55);
    swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = v51._countAndFlagsBits;
    object = v51._object;
    uint64_t v44 = (*(uint64_t (**)(char *))(*(void *)v2 + 552))(v40);
    uint64_t v46 = v45;
    v51._uint64_t countAndFlagsBits = countAndFlagsBits;
    v51._object = object;
    swift_bridgeObjectRetain();
    v56._uint64_t countAndFlagsBits = v44;
    v56._object = v46;
    sub_90060(v56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_90060(v51);
    swift_bridgeObjectRelease();
    sub_60298((uint64_t)v10, type metadata accessor for BUIChartViewData.ScreenUsageElement);
    return;
  }
  NSString v19 = sub_90010();
  id v20 = BatteryUILocalization(v19);

  if (v20)
  {
    uint64_t v21 = sub_90020();
    uint64_t v23 = v22;

    goto LABEL_21;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_5BF8C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_3ED90(&qword_D5D30);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for BUIChartViewData.BatteryUsageElement(0);
  uint64_t v8 = *((void *)v7 - 1);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ACE8(a1, (uint64_t)v6, &qword_D5D30);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_4AE2C((uint64_t)v6, &qword_D5D30);
LABEL_8:
    NSString v19 = sub_90010();
    id v20 = BatteryUILocalization(v19);

    if (v20)
    {
      sub_90020();

      return;
    }
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v11 = sub_606EC((uint64_t)v6, (uint64_t)v10, type metadata accessor for BUIChartViewData.BatteryUsageElement);
  if (v10[v7[7]] != 1)
  {
    sub_60298((uint64_t)v10, type metadata accessor for BUIChartViewData.BatteryUsageElement);
    goto LABEL_8;
  }
  double v12 = *(double *)&v10[v7[6]];
  if (v12 > 0.0)
  {
    id v13 = (void *)(*(uint64_t (**)(uint64_t))(**(void **)(v2
                                                                   + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel_cfg)
                                                     + 496))(v11);
    id v14 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v12];
    id v15 = [v13 stringFromNumber:v14];

    if (v15)
    {
      uint64_t v16 = sub_90020();
      unint64_t v18 = v17;
    }
    else
    {
      uint64_t v16 = 0;
      unint64_t v18 = 0xE000000000000000;
    }
    NSString v26 = sub_90010();
    id v27 = BatteryUILocalization(v26);

    if (!v27) {
      goto LABEL_18;
    }
    sub_90020();

    sub_3ED90(&qword_D5D10);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_9C990;
    *(void *)(v28 + 56) = &type metadata for String;
    *(void *)(v28 + 64) = sub_601DC();
    *(void *)(v28 + 32) = v16;
    *(void *)(v28 + 40) = v18;
    uint64_t v23 = sub_90030();
    uint64_t v25 = v29;
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v31 = v23;
    uint64_t v32 = v25;
    v33._uint64_t countAndFlagsBits = (*(uint64_t (**)(char *))(*(void *)v2 + 552))(&v10[v7[5]]);
    v30._uint64_t countAndFlagsBits = 8236;
    v30._object = (void *)0xE200000000000000;
    sub_90060(v33);
    swift_bridgeObjectRelease();
    sub_90060(v30);
    swift_bridgeObjectRelease();
    sub_60298((uint64_t)v10, type metadata accessor for BUIChartViewData.BatteryUsageElement);
    return;
  }
  NSString v21 = sub_90010();
  id v22 = BatteryUILocalization(v21);

  if (v22)
  {
    uint64_t v23 = sub_90020();
    uint64_t v25 = v24;

    goto LABEL_15;
  }
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
}

void sub_5C3E4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_3ED90(&qword_D5D28);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  uint64_t v8 = *((void *)v7 - 1);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4ACE8(a1, (uint64_t)v6, &qword_D5D28);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_4AE2C((uint64_t)v6, &qword_D5D28);
LABEL_8:
    NSString v17 = sub_90010();
    id v18 = BatteryUILocalization(v17);

    if (v18)
    {
      sub_90020();

      return;
    }
    __break(1u);
    goto LABEL_23;
  }
  sub_606EC((uint64_t)v6, (uint64_t)v10, type metadata accessor for BUIChartViewData.ScreenUsageElement);
  if (v10[v7[8]] != 1)
  {
    sub_60298((uint64_t)v10, type metadata accessor for BUIChartViewData.ScreenUsageElement);
    goto LABEL_8;
  }
  if (sub_69B80() > 0.0)
  {
    uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel_cfg);
    uint64_t v12 = OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForChargingInterval;
    id v13 = *(id *)(v11 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForChargingInterval);
    id v14 = [v13 stringFromTimeInterval:sub_69B80()];

    if (v14)
    {
      uint64_t v15 = sub_90020();
      unint64_t v42 = v16;
      uint64_t v43 = v15;
    }
    else
    {
      unint64_t v42 = 0xE000000000000000;
      uint64_t v43 = 0;
    }
    id v24 = [*(id *)(v11 + v12) stringFromTimeInterval:*(double *)&v10[v7[6]]];
    if (v24)
    {
      uint64_t v25 = v24;
      uint64_t v41 = sub_90020();
      unint64_t v27 = v26;
    }
    else
    {
      uint64_t v41 = 0;
      unint64_t v27 = 0xE000000000000000;
    }
    id v28 = [*(id *)(v11 + v12) stringFromTimeInterval:*(double *)&v10[v7[7]]];
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = sub_90020();
      unint64_t v32 = v31;
    }
    else
    {
      uint64_t v30 = 0;
      unint64_t v32 = 0xE000000000000000;
    }
    NSString v33 = sub_90010();
    id v34 = BatteryUILocalization(v33);

    if (!v34) {
      goto LABEL_24;
    }
    sub_90020();

    sub_3ED90(&qword_D5D10);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_9C9A0;
    *(void *)(v35 + 56) = &type metadata for String;
    unint64_t v36 = sub_601DC();
    unint64_t v37 = v42;
    *(void *)(v35 + 32) = v43;
    *(void *)(v35 + 40) = v37;
    *(void *)(v35 + 96) = &type metadata for String;
    *(void *)(v35 + 104) = v36;
    uint64_t v38 = v41;
    *(void *)(v35 + 64) = v36;
    *(void *)(v35 + 72) = v38;
    *(void *)(v35 + 80) = v27;
    *(void *)(v35 + 136) = &type metadata for String;
    *(void *)(v35 + 144) = v36;
    *(void *)(v35 + 112) = v30;
    *(void *)(v35 + 120) = v32;
    uint64_t v21 = sub_90030();
    uint64_t v23 = v39;
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v45 = v21;
    uint64_t v46 = v23;
    v47._uint64_t countAndFlagsBits = (*(uint64_t (**)(char *))(*(void *)v2 + 552))(&v10[v7[5]]);
    v44._uint64_t countAndFlagsBits = 8236;
    v44._object = (void *)0xE200000000000000;
    sub_90060(v47);
    swift_bridgeObjectRelease();
    sub_90060(v44);
    swift_bridgeObjectRelease();
    sub_60298((uint64_t)v10, type metadata accessor for BUIChartViewData.ScreenUsageElement);
    return;
  }
  NSString v19 = sub_90010();
  id v20 = BatteryUILocalization(v19);

  if (v20)
  {
    uint64_t v21 = sub_90020();
    uint64_t v23 = v22;

    goto LABEL_21;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

uint64_t sub_5C898(uint64_t a1)
{
  uint64_t v41 = a1;
  uint64_t v2 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  uint64_t v39 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v40 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BUIChartViewData(0);
  __n128 v11 = __chkstk_darwin(v10);
  id v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = (*(uint64_t (**)(__n128))(*(void *)v1 + 192))(v11);
  unint64_t v15 = (*(uint64_t (**)(void))(*(void *)v1 + 240))();
  char v17 = v16;
  (*(void (**)(void))(*(void *)v1 + 136))();
  if ((v14 & 1) == 0)
  {
    sub_60230((uint64_t)v13, (uint64_t)v9, type metadata accessor for BUIChartViewData.DataFor24Hrs);
    sub_60298((uint64_t)v13, type metadata accessor for BUIChartViewData);
    id v13 = *(char **)&v9[*(int *)(v7 + 36)];
    swift_bridgeObjectRetain();
    uint64_t result = sub_60298((uint64_t)v9, type metadata accessor for BUIChartViewData.DataFor24Hrs);
    if (v17)
    {
      swift_retain();
      id v20 = sub_602F8((uint64_t)v13);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v21 = v20[2];
      if (v21)
      {
        if (v21 == 1)
        {
          uint64_t v22 = 0;
          double v23 = 0.0;
        }
        else
        {
          uint64_t v22 = v21 & 0x7FFFFFFFFFFFFFFELL;
          id v28 = (double *)(v20 + 5);
          double v23 = 0.0;
          uint64_t v29 = v21 & 0x7FFFFFFFFFFFFFFELL;
          do
          {
            double v23 = v23 + *(v28 - 1) + *v28;
            v28 += 2;
            v29 -= 2;
          }
          while (v29);
          if (v21 == v22) {
            return swift_bridgeObjectRelease();
          }
        }
        uint64_t v30 = v21 - v22;
        unint64_t v31 = (double *)&v20[v22 + 4];
        do
        {
          double v32 = *v31++;
          double v23 = v23 + v32;
          --v30;
        }
        while (v30);
      }
      return swift_bridgeObjectRelease();
    }
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v15 < *((void *)v13 + 2))
    {
LABEL_9:
      uint64_t v19 = v40;
      sub_60230((uint64_t)&v13[((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v15], v40, type metadata accessor for BUIChartViewData.ScreenUsageElement);
      swift_bridgeObjectRelease();
      swift_getAtKeyPath();
      return sub_60298(v19, type metadata accessor for BUIChartViewData.ScreenUsageElement);
    }
    __break(1u);
  }
  sub_60230((uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t)v4, type metadata accessor for BUIChartViewData.DataFor10Days);
  sub_60298((uint64_t)v13, type metadata accessor for BUIChartViewData);
  id v13 = *(char **)&v4[*(int *)(v2 + 24)];
  swift_bridgeObjectRetain();
  uint64_t result = sub_60298((uint64_t)v4, type metadata accessor for BUIChartViewData.DataFor10Days);
  if (v17)
  {
    swift_retain();
    id v24 = sub_602F8((uint64_t)v13);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v25 = v24[2];
    if (v25)
    {
      if (v25 == 1)
      {
        uint64_t v26 = 0;
        double v27 = 0.0;
      }
      else
      {
        uint64_t v26 = v25 & 0x7FFFFFFFFFFFFFFELL;
        NSString v33 = (double *)(v24 + 5);
        double v27 = 0.0;
        uint64_t v34 = v25 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v27 = v27 + *(v33 - 1) + *v33;
          v33 += 2;
          v34 -= 2;
        }
        while (v34);
        if (v25 == v26) {
          return swift_bridgeObjectRelease();
        }
      }
      uint64_t v35 = v25 - v26;
      unint64_t v36 = (double *)&v24[v26 + 4];
      do
      {
        double v37 = *v36++;
        double v27 = v27 + v37;
        --v35;
      }
      while (v35);
    }
    return swift_bridgeObjectRelease();
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    if (v15 < *((void *)v13 + 2)) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_5CD8C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__data;
  uint64_t v2 = sub_3ED90(&qword_D5CA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__activeChart;
  uint64_t v4 = sub_3ED90(&qword_D5CC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__selectedIndex;
  uint64_t v6 = sub_3ED90(&qword_D5CC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__topMargin;
  uint64_t v8 = sub_3ED90(&qword_D5CB8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__bottomMargin, v8);
  uint64_t v10 = v0 + OBJC_IVAR____TtC14BatteryUsageUI17BUIChartViewModel__containerBackgroundColor;
  uint64_t v11 = sub_3ED90(&qword_D5CB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v13 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v12, v13);
}

uint64_t sub_5CF90@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for BUIChartViewModel(0);
  uint64_t result = sub_8F640();
  *a1 = result;
  return result;
}

void sub_5CFD0()
{
}

void sub_5D004()
{
  uint64_t v1 = type metadata accessor for BUIChartViewData.BatteryLevelsElement(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  double v37 = (void *)((char *)v34 - v6);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v34 - v8;
  sub_8F0B0();
  double v11 = v10;
  NSString v12 = sub_90010();
  id v13 = BatteryUILocalization(v12);

  if (!v13)
  {
LABEL_20:
    __break(1u);
    return;
  }
  v34[0] = sub_90020();
  v34[1] = v14;

  uint64_t v15 = *(void *)(v0 + *(int *)(type metadata accessor for BUIChartViewData.DataFor24Hrs(0) + 20));
  uint64_t v38 = _swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(v15 + 16);
  swift_bridgeObjectRetain();
  if (v16)
  {
    unint64_t v17 = 0;
    id v18 = _swiftEmptyArrayStorage;
    uint64_t v35 = v16;
    uint64_t v36 = v1;
    while (v17 < *(void *)(v15 + 16))
    {
      unint64_t v19 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      uint64_t v20 = *(void *)(v2 + 72);
      sub_60230(v15 + v19 + v20 * v17, (uint64_t)v9, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
      if (v9[*(int *)(v1 + 32)] == 1)
      {
        uint64_t v21 = v2;
        sub_606EC((uint64_t)v9, (uint64_t)v37, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_5FDC0(0, v18[2] + 1, 1);
        }
        id v18 = v38;
        unint64_t v23 = v38[2];
        unint64_t v22 = v38[3];
        if (v23 >= v22 >> 1)
        {
          sub_5FDC0(v22 > 1, v23 + 1, 1);
          id v18 = v38;
        }
        v18[2] = v23 + 1;
        sub_606EC((uint64_t)v37, (uint64_t)v18 + v19 + v23 * v20, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
        uint64_t v2 = v21;
        uint64_t v16 = v35;
        uint64_t v1 = v36;
      }
      else
      {
        sub_60298((uint64_t)v9, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
      }
      if (v16 == ++v17)
      {
        id v24 = v38;
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_20;
  }
  id v24 = _swiftEmptyArrayStorage;
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v25 = v24[2];
  if (v25)
  {
    uint64_t v38 = _swiftEmptyArrayStorage;
    sub_90450();
    sub_60788(0, &qword_D5D40);
    uint64_t v26 = *(unsigned __int8 *)(v2 + 80);
    double v37 = v24;
    uint64_t v27 = (uint64_t)v24 + ((v26 + 32) & ~v26);
    uint64_t v28 = *(void *)(v2 + 72);
    do
    {
      sub_60230(v27, (uint64_t)v4, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
      sub_8F0B0();
      v39.value = *(Swift::Double *)&v4[*(int *)(v1 + 24)];
      v39.is_nil = 0;
      v30._rawValue = _swiftEmptyArrayStorage;
      v40.value._uint64_t countAndFlagsBits = 0;
      v40.value._object = 0;
      sub_901F0(v29 - v11, v39, v30, v40);
      sub_60298((uint64_t)v4, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
      sub_90420();
      sub_90460();
      sub_90470();
      sub_90430();
      v27 += v28;
      --v25;
    }
    while (v25);
  }
  swift_release();
  id v31 = objc_allocWithZone((Class)AXDataSeriesDescriptor);
  NSString v32 = sub_90010();
  swift_bridgeObjectRelease();
  sub_60788(0, &qword_D5D40);
  Class isa = sub_900C0().super.isa;
  swift_bridgeObjectRelease();
  [v31 initWithName:v32 isContinuous:1 dataPoints:isa];
}

void sub_5D46C()
{
  uint64_t v1 = type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  uint64_t v38 = *(void *)(v1 - 8);
  uint64_t v39 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (uint64_t)v35 - v5;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v35 - v7;
  sub_8F0B0();
  double v10 = v9;
  NSString v11 = sub_90010();
  id v12 = BatteryUILocalization(v11);

  if (!v12)
  {
LABEL_20:
    __break(1u);
    return;
  }
  v35[1] = sub_90020();
  v35[2] = v13;

  uint64_t v14 = *(void *)(v0 + *(int *)(type metadata accessor for BUIChartViewData.DataFor24Hrs(0) + 36));
  uint64_t v15 = _swiftEmptyArrayStorage;
  Swift::String_optional v40 = _swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(v14 + 16);
  swift_bridgeObjectRetain();
  uint64_t v17 = v39;
  if (v16)
  {
    unint64_t v18 = 0;
    unint64_t v19 = _swiftEmptyArrayStorage;
    uint64_t v36 = v16;
    while (v18 < *(void *)(v14 + 16))
    {
      uint64_t v20 = v15;
      unint64_t v21 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      uint64_t v22 = *(void *)(v38 + 72);
      sub_60230(v14 + v21 + v22 * v18, (uint64_t)v8, type metadata accessor for BUIChartViewData.ScreenUsageElement);
      if (v8[*(int *)(v17 + 32)] == 1)
      {
        sub_606EC((uint64_t)v8, v37, type metadata accessor for BUIChartViewData.ScreenUsageElement);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_5FE38(0, v19[2] + 1, 1);
        }
        unint64_t v19 = v40;
        unint64_t v24 = v40[2];
        unint64_t v23 = v40[3];
        if (v24 >= v23 >> 1)
        {
          sub_5FE38(v23 > 1, v24 + 1, 1);
          unint64_t v19 = v40;
        }
        v19[2] = v24 + 1;
        sub_606EC(v37, (uint64_t)v19 + v21 + v24 * v22, type metadata accessor for BUIChartViewData.ScreenUsageElement);
        uint64_t v17 = v39;
        uint64_t v16 = v36;
      }
      else
      {
        sub_60298((uint64_t)v8, type metadata accessor for BUIChartViewData.ScreenUsageElement);
      }
      ++v18;
      uint64_t v15 = v20;
      if (v16 == v18)
      {
        uint64_t v25 = v40;
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v25 = _swiftEmptyArrayStorage;
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v26 = v25[2];
  if (v26)
  {
    Swift::String_optional v40 = v15;
    sub_90450();
    sub_60788(0, &qword_D5D40);
    uint64_t v27 = (uint64_t)v25 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
    uint64_t v28 = *(void *)(v38 + 72);
    do
    {
      sub_60230(v27, (uint64_t)v3, type metadata accessor for BUIChartViewData.ScreenUsageElement);
      sub_8F0B0();
      Swift::Double v30 = v29 - v10;
      v41.value = sub_69B80();
      v41.is_nil = 0;
      v31._rawValue = v15;
      v42.value._uint64_t countAndFlagsBits = 0;
      v42.value._object = 0;
      sub_901F0(v30, v41, v31, v42);
      sub_60298((uint64_t)v3, type metadata accessor for BUIChartViewData.ScreenUsageElement);
      sub_90420();
      sub_90460();
      sub_90470();
      sub_90430();
      v27 += v28;
      --v26;
    }
    while (v26);
  }
  swift_release();
  id v32 = objc_allocWithZone((Class)AXDataSeriesDescriptor);
  NSString v33 = sub_90010();
  swift_bridgeObjectRelease();
  sub_60788(0, &qword_D5D40);
  Class isa = sub_900C0().super.isa;
  swift_bridgeObjectRelease();
  [v32 initWithName:v33 isContinuous:0 dataPoints:isa];
}

void sub_5D8E4()
{
}

void sub_5D918(uint64_t (*a1)(void))
{
  sub_8F0B0();
  uint64_t v3 = v2;
  NSString v4 = sub_90010();
  id v5 = BatteryUILocalization(v4);

  if (v5)
  {
    sub_60788(0, &qword_D5D38);
    sub_90020();

    if (*(double *)a1() >= 0.0)
    {
      *(void *)(swift_allocObject() + 16) = v3;
      sub_902A0();
      return;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_5DA24(void *a1)
{
  uint64_t v2 = sub_8F150();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8F0A0();
  if (qword_D8A00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v6 = *(id *)(qword_DA6B0 + *a1);
  Class isa = sub_8F0C0().super.isa;
  id v8 = [v6 stringFromDate:isa];

  uint64_t v9 = sub_90020();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

void sub_5DBB4()
{
  uint64_t v1 = type metadata accessor for BUIChartViewData.BatteryUsageElement(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v37 = (void *)((char *)v34 - v6);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v34 - v8;
  sub_8F0B0();
  double v11 = v10;
  NSString v12 = sub_90010();
  id v13 = BatteryUILocalization(v12);

  if (!v13)
  {
LABEL_20:
    __break(1u);
    return;
  }
  v34[0] = sub_90020();
  v34[1] = v14;

  uint64_t v15 = *(void *)(v0 + *(int *)(type metadata accessor for BUIChartViewData.DataFor10Days(0) + 20));
  uint64_t v38 = _swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(v15 + 16);
  swift_bridgeObjectRetain();
  if (v16)
  {
    unint64_t v17 = 0;
    unint64_t v18 = _swiftEmptyArrayStorage;
    uint64_t v35 = v16;
    uint64_t v36 = v1;
    while (v17 < *(void *)(v15 + 16))
    {
      unint64_t v19 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      uint64_t v20 = *(void *)(v2 + 72);
      sub_60230(v15 + v19 + v20 * v17, (uint64_t)v9, type metadata accessor for BUIChartViewData.BatteryUsageElement);
      if (v9[*(int *)(v1 + 28)] == 1)
      {
        uint64_t v21 = v2;
        sub_606EC((uint64_t)v9, (uint64_t)v37, type metadata accessor for BUIChartViewData.BatteryUsageElement);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_5FE74(0, v18[2] + 1, 1);
        }
        unint64_t v18 = v38;
        unint64_t v23 = v38[2];
        unint64_t v22 = v38[3];
        if (v23 >= v22 >> 1)
        {
          sub_5FE74(v22 > 1, v23 + 1, 1);
          unint64_t v18 = v38;
        }
        v18[2] = v23 + 1;
        sub_606EC((uint64_t)v37, (uint64_t)v18 + v19 + v23 * v20, type metadata accessor for BUIChartViewData.BatteryUsageElement);
        uint64_t v2 = v21;
        uint64_t v16 = v35;
        uint64_t v1 = v36;
      }
      else
      {
        sub_60298((uint64_t)v9, type metadata accessor for BUIChartViewData.BatteryUsageElement);
      }
      if (v16 == ++v17)
      {
        unint64_t v24 = v38;
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v24 = _swiftEmptyArrayStorage;
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v25 = v24[2];
  if (v25)
  {
    uint64_t v38 = _swiftEmptyArrayStorage;
    sub_90450();
    sub_60788(0, &qword_D5D40);
    uint64_t v26 = *(unsigned __int8 *)(v2 + 80);
    uint64_t v37 = v24;
    uint64_t v27 = (uint64_t)v24 + ((v26 + 32) & ~v26);
    uint64_t v28 = *(void *)(v2 + 72);
    do
    {
      sub_60230(v27, (uint64_t)v4, type metadata accessor for BUIChartViewData.BatteryUsageElement);
      sub_8F0B0();
      v39.value = *(Swift::Double *)&v4[*(int *)(v1 + 24)];
      v39.is_nil = 0;
      v30._rawValue = _swiftEmptyArrayStorage;
      v40.value._uint64_t countAndFlagsBits = 0;
      v40.value._object = 0;
      sub_901F0(v29 - v11, v39, v30, v40);
      sub_60298((uint64_t)v4, type metadata accessor for BUIChartViewData.BatteryUsageElement);
      sub_90420();
      sub_90460();
      sub_90470();
      sub_90430();
      v27 += v28;
      --v25;
    }
    while (v25);
  }
  swift_release();
  id v31 = objc_allocWithZone((Class)AXDataSeriesDescriptor);
  NSString v32 = sub_90010();
  swift_bridgeObjectRelease();
  sub_60788(0, &qword_D5D40);
  Class isa = sub_900C0().super.isa;
  swift_bridgeObjectRelease();
  [v31 initWithName:v32 isContinuous:0 dataPoints:isa];
}

void sub_5E01C()
{
  uint64_t v1 = type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  uint64_t v38 = *(void *)(v1 - 8);
  uint64_t v39 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (uint64_t)v35 - v5;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v35 - v7;
  sub_8F0B0();
  double v10 = v9;
  NSString v11 = sub_90010();
  id v12 = BatteryUILocalization(v11);

  if (!v12)
  {
LABEL_20:
    __break(1u);
    return;
  }
  v35[1] = sub_90020();
  v35[2] = v13;

  uint64_t v14 = *(void *)(v0 + *(int *)(type metadata accessor for BUIChartViewData.DataFor10Days(0) + 24));
  uint64_t v15 = _swiftEmptyArrayStorage;
  Swift::String_optional v40 = _swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(v14 + 16);
  swift_bridgeObjectRetain();
  uint64_t v17 = v39;
  if (v16)
  {
    unint64_t v18 = 0;
    unint64_t v19 = _swiftEmptyArrayStorage;
    uint64_t v36 = v16;
    while (v18 < *(void *)(v14 + 16))
    {
      uint64_t v20 = v15;
      unint64_t v21 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      uint64_t v22 = *(void *)(v38 + 72);
      sub_60230(v14 + v21 + v22 * v18, (uint64_t)v8, type metadata accessor for BUIChartViewData.ScreenUsageElement);
      if (v8[*(int *)(v17 + 32)] == 1)
      {
        sub_606EC((uint64_t)v8, v37, type metadata accessor for BUIChartViewData.ScreenUsageElement);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_5FE38(0, v19[2] + 1, 1);
        }
        unint64_t v19 = v40;
        unint64_t v24 = v40[2];
        unint64_t v23 = v40[3];
        if (v24 >= v23 >> 1)
        {
          sub_5FE38(v23 > 1, v24 + 1, 1);
          unint64_t v19 = v40;
        }
        v19[2] = v24 + 1;
        sub_606EC(v37, (uint64_t)v19 + v21 + v24 * v22, type metadata accessor for BUIChartViewData.ScreenUsageElement);
        uint64_t v17 = v39;
        uint64_t v16 = v36;
      }
      else
      {
        sub_60298((uint64_t)v8, type metadata accessor for BUIChartViewData.ScreenUsageElement);
      }
      ++v18;
      uint64_t v15 = v20;
      if (v16 == v18)
      {
        uint64_t v25 = v40;
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v25 = _swiftEmptyArrayStorage;
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v26 = v25[2];
  if (v26)
  {
    Swift::String_optional v40 = v15;
    sub_90450();
    sub_60788(0, &qword_D5D40);
    uint64_t v27 = (uint64_t)v25 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
    uint64_t v28 = *(void *)(v38 + 72);
    do
    {
      sub_60230(v27, (uint64_t)v3, type metadata accessor for BUIChartViewData.ScreenUsageElement);
      sub_8F0B0();
      Swift::Double v30 = v29 - v10;
      v41.value = sub_69B80();
      v41.is_nil = 0;
      v31._rawValue = v15;
      v42.value._uint64_t countAndFlagsBits = 0;
      v42.value._object = 0;
      sub_901F0(v30, v41, v31, v42);
      sub_60298((uint64_t)v3, type metadata accessor for BUIChartViewData.ScreenUsageElement);
      sub_90420();
      sub_90460();
      sub_90470();
      sub_90430();
      v27 += v28;
      --v26;
    }
    while (v26);
  }
  swift_release();
  id v32 = objc_allocWithZone((Class)AXDataSeriesDescriptor);
  NSString v33 = sub_90010();
  swift_bridgeObjectRelease();
  sub_60788(0, &qword_D5D40);
  Class isa = sub_900C0().super.isa;
  swift_bridgeObjectRelease();
  [v32 initWithName:v33 isContinuous:0 dataPoints:isa];
}

void sub_5E494(void *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = (void *)a2();
  sub_90260();
  sub_90270();
  id v4 = [v3 yAxis];
  [a1 setYAxis:v4];

  Class v5 = (Class)[v3 series];
  if (!v5)
  {
    sub_60788(0, &qword_D5D48);
    sub_900D0();
    Class isa = sub_900C0().super.isa;
    swift_bridgeObjectRelease();
    Class v5 = isa;
  }
  Class v7 = v5;
  objc_msgSend(a1, "setSeries:");
}

uint64_t sub_5E5A4()
{
  return (*v0)();
}

void sub_5E5CC(void *a1)
{
  sub_5E494(a1, *v1);
}

double sub_5E5D4()
{
  if (qword_D8A00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_DA6B0;
  uint64_t v1 = *(double (**)(uint64_t))(*(void *)qword_DA6B0 + 472);
  uint64_t v2 = swift_retain();
  double v3 = v1(v2);
  double v4 = *(double *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_titlePaddingBottom);
  double v5 = *(double *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_plotHeight);
  double v6 = *(double *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_naturalLabelHeight)
     + *(double *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_naturalLabelHeight);
  double v7 = *(double *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_chartGap);
  swift_release();
  return v6 + v5 + v4 + v3 + v6 + v3 + v4 + v5 + v7;
}

double sub_5E708@<D0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F760();
  double v15 = (*(double (**)(uint64_t))(*(void *)a1 + 440))(v6);
  sub_4AFE0(sub_610A8);
  swift_retain();
  sub_503BC((uint64_t)a2, (uint64_t)v16, v15);
  uint64_t v7 = v16[0];
  uint64_t v8 = v16[1];
  uint64_t v9 = v16[2];
  sub_8F760();
  sub_8F760();
  sub_8FE90();
  sub_8F750();
  uint64_t v10 = v18;
  char v11 = v19;
  uint64_t v12 = v20;
  char v13 = v21;
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v8;
  *(void *)(a3 + 16) = v9;
  *(_OWORD *)(a3 + 24) = v17;
  *(void *)(a3 + 40) = v10;
  *(unsigned char *)(a3 + 48) = v11;
  *(void *)(a3 + 56) = v12;
  *(unsigned char *)(a3 + 64) = v13;
  double result = *(double *)&v22;
  *(_OWORD *)(a3 + 72) = v22;
  return result;
}

id sub_5E848@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  id v6 = (id)v1[1];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v6;
  *a1 = sub_6117C;
  a1[1] = v4;
  swift_retain();

  return v6;
}

unint64_t sub_5E8CC(uint64_t a1)
{
  sub_8F150();
  sub_61134((unint64_t *)&qword_D6338);
  uint64_t v2 = sub_8FF90();

  return sub_5E9B8(a1, v2);
}

uint64_t type metadata accessor for BUIChartViewConfig.CachedDateFormatter()
{
  return self;
}

unint64_t sub_5E974(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_902F0(*(void *)(v2 + 40));

  return sub_5EB64(a1, v4);
}

unint64_t sub_5E9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = sub_8F150();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v19 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v12 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    do
    {
      v12(v8, *(void *)(v21 + 48) + v15 * v10, v4, v6);
      sub_61134(&qword_D6340);
      char v16 = sub_90000();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v8, v4);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v19 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_5EB64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_60788(0, &qword_D5C80);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_90300();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_90300();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_5EC80(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_8F150();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_3ED90(&qword_D6330);
  int v47 = a2;
  uint64_t v10 = sub_90510();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  unint64_t v49 = v8;
  uint64_t v50 = v5;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  Swift::Double_optional v41 = v2;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  Swift::String v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42) {
      break;
    }
    unint64_t v24 = v43;
    unint64_t v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v25 = v43[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v42) {
              goto LABEL_34;
            }
            unint64_t v25 = v43[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v47)
    {
      (*v48)(v49, v28, v50);
      double v29 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
    }
    else
    {
      (*v44)(v49, v28, v50);
      id v32 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v32;
      uint64_t v30 = v32[1];
      swift_bridgeObjectRetain();
    }
    sub_61134((unint64_t *)&qword_D6338);
    uint64_t result = sub_8FF90();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v6 = v46;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      uint64_t v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v27 * v19, v49, v50);
    uint64_t v20 = (void *)(*(void *)(v11 + 56) + 16 * v19);
    void *v20 = v31;
    v20[1] = v30;
    ++*(void *)(v11 + 16);
    uint64_t v9 = v45;
  }
  swift_release();
  uint64_t v3 = v41;
  unint64_t v24 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_5F0AC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_3ED90(&qword_D6328);
  uint64_t v6 = sub_90510();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    id v32 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v21 = v20 | (v15 << 6);
      }
      else
      {
        int64_t v22 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v12) {
          goto LABEL_33;
        }
        unint64_t v23 = v9[v22];
        ++v15;
        if (!v23)
        {
          int64_t v15 = v22 + 1;
          if (v22 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v23 = v9[v15];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v12)
            {
LABEL_33:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v32;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v31;
              }
              uint64_t v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v23 = v9[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v15 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v15 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v23 = v9[v15];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v15 = v24;
          }
        }
LABEL_30:
        unint64_t v11 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v15 << 6);
      }
      double v29 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
      long long v33 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v21);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        id v30 = v29;
      }
      uint64_t result = sub_902F0(*(void *)(v7 + 40));
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v18 == v26;
          if (v18 == v26) {
            unint64_t v18 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v18);
        }
        while (v28 == -1);
        unint64_t v19 = __clz(__rbit64(~v28)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(void *)(*(void *)(v7 + 48) + 8 * v19) = v29;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v19) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_5F380(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v28 = a2;
  uint64_t v9 = sub_8F150();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v4;
  unint64_t v15 = sub_5E8CC(a3);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v21 = *v5;
    if (v19)
    {
LABEL_8:
      int64_t v22 = (uint64_t *)(v21[7] + 16 * v15);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v24 = v28;
      uint64_t *v22 = a1;
      v22[1] = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_5F918();
    goto LABEL_7;
  }
  sub_5EC80(v18, a4 & 1);
  unint64_t v25 = sub_5E8CC(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    uint64_t result = sub_905C0();
    __break(1u);
    return result;
  }
  unint64_t v15 = v25;
  unint64_t v21 = *v5;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_5F858(v15, (uint64_t)v12, a1, v28, v21);
}

uint64_t type metadata accessor for BUIChartViewConfig.CachedNumberFormatter()
{
  return self;
}

id sub_5F55C(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *v4;
  unint64_t v11 = sub_5E974((uint64_t)a3);
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v15 = v10;
  uint64_t v16 = *(void *)(v9 + 24);
  if (v16 >= v14 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_5FBF0();
LABEL_7:
    BOOL v17 = (void *)*v5;
    if (v15)
    {
LABEL_8:
      uint64_t v18 = (void *)(v17[7] + 16 * v11);
      id result = (id)swift_bridgeObjectRelease();
      void *v18 = a1;
      v18[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_5F0AC(v14, a4 & 1);
  unint64_t v20 = sub_5E974((uint64_t)a3);
  if ((v15 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_60788(0, &qword_D5C80);
    id result = (id)sub_905C0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v20;
  BOOL v17 = (void *)*v5;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  v17[(v11 >> 6) + 8] |= 1 << v11;
  *(void *)(v17[6] + 8 * v11) = a3;
  int64_t v22 = (void *)(v17[7] + 16 * v11);
  void *v22 = a1;
  v22[1] = a2;
  uint64_t v23 = v17[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v17[2] = v25;

  return a3;
}

uint64_t sub_5F6E0()
{
  sub_903D0(53);
  v1._uint64_t countAndFlagsBits = 0xD000000000000020;
  v1._object = (void *)0x80000000000A41D0;
  sub_90060(v1);
  v2._uint64_t countAndFlagsBits = sub_901C0();
  sub_90060(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0x80000000000A4200;
  v3._uint64_t countAndFlagsBits = 0xD000000000000011;
  sub_90060(v3);
  v4._uint64_t countAndFlagsBits = sub_901C0();
  sub_90060(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  sub_90060(v5);
  return 0;
}

uint64_t sub_5F7BC()
{
  sub_903D0(31);
  v1._object = (void *)0x80000000000A41B0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  sub_90060(v1);
  v2._uint64_t countAndFlagsBits = sub_901C0();
  sub_90060(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  sub_90060(v3);
  return 0;
}

uint64_t sub_5F858(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6];
  uint64_t v11 = sub_8F150();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  BOOL v13 = (void *)(a5[7] + 16 * a1);
  void *v13 = a3;
  v13[1] = a4;
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

void *sub_5F918()
{
  uint64_t v38 = sub_8F150();
  uint64_t v1 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  unint64_t v37 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3ED90(&qword_D6330);
  id v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_90500();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v40 = v4;
  if (!v5)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v30 = v40;
    double v29 = v32;
LABEL_25:
    uint64_t *v29 = v30;
    return result;
  }
  uint64_t v6 = v4;
  uint64_t result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v40;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v39 = v3;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v35 = v1 + 32;
  uint64_t v36 = v1 + 16;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v15 = v40;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v9 << 6);
      uint64_t v18 = v39;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v18 = v39;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v17 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v14, *(void *)(v18 + 48) + v19, v13);
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v21 = 16 * v17;
    int64_t v22 = (uint64_t *)(v20 + 16 * v17);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v15 + 48) + v19, v14, v13);
    uint64_t v25 = (void *)(*(void *)(v15 + 56) + v21);
    void *v25 = v23;
    v25[1] = v24;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    double v29 = v32;
    uint64_t v30 = v40;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_5FBF0()
{
  uint64_t v1 = v0;
  sub_3ED90(&qword_D6328);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_90500();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    swift_bridgeObjectRetain();
    id result = v17;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_5FDA0(char *a1, int64_t a2, char a3)
{
  id result = sub_5FEB0(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

size_t sub_5FDC0(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_5FFAC(a1, a2, a3, (void *)*v3, &qword_D6310, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
  size_t *v3 = result;
  return result;
}

size_t sub_5FDFC(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_5FFAC(a1, a2, a3, (void *)*v3, &qword_D6318, (uint64_t (*)(void))&type metadata accessor for Date);
  size_t *v3 = result;
  return result;
}

size_t sub_5FE38(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_5FFAC(a1, a2, a3, (void *)*v3, &qword_D6308, type metadata accessor for BUIChartViewData.ScreenUsageElement);
  size_t *v3 = result;
  return result;
}

size_t sub_5FE74(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_5FFAC(a1, a2, a3, (void *)*v3, &qword_D6300, type metadata accessor for BUIChartViewData.BatteryUsageElement);
  size_t *v3 = result;
  return result;
}

char *sub_5FEB0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_3ED90(&qword_D6320);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  int64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

size_t sub_5FFAC(size_t result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  char v8 = result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_3ED90(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_29;
  }
  _OWORD v16[2] = v11;
  void v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  uint64_t v18 = *(void *)(a6(0) - 8);
  if (v8)
  {
    if (v16 < a4
      || (unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(void *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v16;
}

unint64_t sub_60188()
{
  unint64_t result = qword_D5CF8;
  if (!qword_D5CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5CF8);
  }
  return result;
}

unint64_t sub_601DC()
{
  unint64_t result = qword_D5D18;
  if (!qword_D5D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5D18);
  }
  return result;
}

uint64_t sub_60230(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_60298(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_602F8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_5FDA0(0, v1, 0);
    uint64_t v3 = *(void *)(type metadata accessor for BUIChartViewData.ScreenUsageElement(0) - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      swift_getAtKeyPath();
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1) {
        sub_5FDA0((char *)(v6 > 1), v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      _swiftEmptyArrayStorage[v7 + 4] = v9;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_60438(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BUIChartViewData.BatteryLevelsElement(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - v8;
  unint64_t result = _swiftEmptyArrayStorage;
  unint64_t v19 = _swiftEmptyArrayStorage;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v17 = v1;
    uint64_t v12 = *(void *)(v7 + 72);
    unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v13 = a1 + v18;
    uint64_t v14 = _swiftEmptyArrayStorage;
    do
    {
      sub_60230(v13, (uint64_t)v9, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
      if (v9[*(int *)(v3 + 32)] == 1)
      {
        sub_606EC((uint64_t)v9, (uint64_t)v5, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_5FDC0(0, v14[2] + 1, 1);
        }
        uint64_t v14 = v19;
        unint64_t v16 = v19[2];
        unint64_t v15 = v19[3];
        if (v16 >= v15 >> 1)
        {
          sub_5FDC0(v15 > 1, v16 + 1, 1);
          uint64_t v14 = v19;
        }
        v14[2] = v16 + 1;
        sub_606EC((uint64_t)v5, (uint64_t)v14 + v18 + v16 * v12, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
      }
      else
      {
        sub_60298((uint64_t)v9, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
      }
      v13 += v12;
      --v11;
    }
    while (v11);
    return v19;
  }
  return result;
}

unint64_t sub_60664()
{
  unint64_t result = qword_D5D20;
  if (!qword_D5D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5D20);
  }
  return result;
}

uint64_t sub_606B8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_606C8()
{
  return sub_5DA24(&OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForHour);
}

uint64_t sub_606EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_60754()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_60764()
{
  return sub_5DA24(&OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axFormatterForDate);
}

uint64_t sub_60788(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

double sub_607C4@<D0>(uint64_t a1@<X8>)
{
  return sub_5E708(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

unint64_t sub_607D0()
{
  unint64_t result = qword_D5D50;
  if (!qword_D5D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D5D50);
  }
  return result;
}

void *sub_60824()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_60830()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_6084C()
{
  return type metadata accessor for BUIChartViewConfig(0);
}

uint64_t type metadata accessor for BUIChartViewConfig(uint64_t a1)
{
  return sub_609EC(a1, (uint64_t *)&unk_D8D20);
}

uint64_t sub_60874()
{
  uint64_t result = sub_8F190();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_8F210();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_609C4()
{
  return type metadata accessor for BUIChartViewModel(0);
}

uint64_t type metadata accessor for BUIChartViewModel(uint64_t a1)
{
  return sub_609EC(a1, qword_D8D30);
}

uint64_t sub_609EC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_60A24()
{
  sub_60BCC();
  if (v0 <= 0x3F)
  {
    sub_60C80(319, &qword_D6058);
    if (v1 <= 0x3F)
    {
      sub_60C24();
      if (v2 <= 0x3F)
      {
        sub_60C80(319, &qword_D6068);
        if (v3 <= 0x3F)
        {
          sub_60CC8();
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

void sub_60BCC()
{
  if (!qword_D6050)
  {
    type metadata accessor for BUIChartViewData(255);
    unint64_t v0 = sub_8F6B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_D6050);
    }
  }
}

void sub_60C24()
{
  if (!qword_D6060)
  {
    sub_429E0(&qword_D5CD0);
    unint64_t v0 = sub_8F6B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_D6060);
    }
  }
}

void sub_60C80(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_8F6B0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_60CC8()
{
  if (!qword_D6070)
  {
    sub_60788(255, &qword_D5C60);
    unint64_t v0 = sub_8F6B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_D6070);
    }
  }
}

uint64_t getEnumTagSinglePayload for BUIChartViewModel.ChartType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BUIChartViewModel.ChartType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x60E8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_60EB4(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BUIChartViewModel.ChartType()
{
  return &type metadata for BUIChartViewModel.ChartType;
}

ValueMetadata *type metadata accessor for BUIAXChartDescriptorRepresentable()
{
  return &type metadata for BUIAXChartDescriptorRepresentable;
}

void *initializeBufferWithCopyOfBuffer for BUIChartView(void *a1, void *a2)
{
  int v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  id v4 = v3;
  return a1;
}

void destroy for BUIChartView(uint64_t a1)
{
  swift_release();
  int v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for BUIChartView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  id v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for BUIChartView(uint64_t a1, _OWORD *a2)
{
  swift_release();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for BUIChartView()
{
  return &type metadata for BUIChartView;
}

unint64_t sub_61008()
{
  unint64_t result = qword_D62F0;
  if (!qword_D62F0)
  {
    sub_429E0(&qword_D62F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D62F0);
  }
  return result;
}

uint64_t sub_61068()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_610A8()
{
  v1._uint64_t countAndFlagsBits = 0x74646957746F6C70;
  v1._object = (void *)0xEC000000203D2068;
  sub_90060(v1);
  v2._uint64_t countAndFlagsBits = sub_901C0();
  sub_90060(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  sub_90060(v3);
  return 0;
}

uint64_t sub_61134(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_8F150();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for TenDayBatteryUsageChart(uint64_t a1)
{
  return sub_609EC(a1, (uint64_t *)&unk_D8E50);
}

uint64_t sub_611A4()
{
  return sub_8F850();
}

uint64_t sub_611C8(uint64_t a1)
{
  uint64_t v2 = sub_8F220();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_8F860();
}

uint64_t sub_61290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_3ED90(&qword_D6360);
  __chkstk_darwin(v6);
  int v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_54628();
  swift_beginAccess();
  *(void *)(a2 + 16) = *v9;
  uint64_t v10 = type metadata accessor for TenDayBatteryUsageChart(0);
  uint64_t v11 = (uint64_t *)(a2 + *(int *)(v10 + 40));
  uint64_t *v11 = swift_getKeyPath();
  sub_3ED90(&qword_D6358);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for BUIChartViewModel(0);
  sub_68A90(&qword_D5B80, (void (*)(uint64_t))type metadata accessor for BUIChartViewModel);
  swift_retain();
  swift_retain();
  *(void *)a2 = sub_8F780();
  *(void *)(a2 + 8) = v12;
  *(double *)(a2 + 24) = a3;
  uint64_t v13 = swift_retain();
  *(void *)(a2 + 32) = nullsub_2(v13);
  uint64_t v14 = (*(uint64_t (**)(void))(*(void *)a1 + 464))();
  double v16 = v15;
  *(void *)(a2 + 40) = v14;
  swift_bridgeObjectRetain();
  sub_8612C();
  uint64_t v17 = a2 + *(int *)(v10 + 36);
  sub_4AC40(&qword_D6368, &qword_D6360);
  sub_8230C(v14, (uint64_t)v8, v6, v17, v16);
  return swift_release();
}

uint64_t sub_614B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_61514@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v110 = a1;
  uint64_t v3 = sub_3ED90(&qword_D6370);
  __chkstk_darwin(v3 - 8);
  double v93 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TenDayBatteryUsageChart(0);
  uint64_t v111 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v111 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_3ED90(&qword_D6378);
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  unint64_t v112 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_3ED90(&qword_D6380);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v90 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_3ED90(&qword_D6388);
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v94 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_3ED90(&qword_D6390);
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v97 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_3ED90(&qword_D6398);
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v100 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_3ED90(&qword_D63A0);
  __chkstk_darwin(v104);
  unint64_t v105 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_3ED90(&qword_D63A8);
  __chkstk_darwin(v19 - 8);
  id v103 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v21 = *(void (**)(uint64_t))(**(void **)(v1 + 8) + 136);
  uint64_t v22 = swift_retain();
  v21(v22);
  swift_release();
  uint64_t v106 = v10;
  sub_633AC((uint64_t)&v12[*(int *)(v10 + 20)], (uint64_t)v9, type metadata accessor for BUIChartViewData.DataFor10Days);
  double v107 = v12;
  sub_614B4((uint64_t)v12, type metadata accessor for BUIChartViewData);
  uint64_t v109 = v7;
  uint64_t v23 = *(void *)&v9[*(int *)(v7 + 20)];
  swift_bridgeObjectRetain();
  id v108 = v9;
  sub_614B4((uint64_t)v9, type metadata accessor for BUIChartViewData.DataFor10Days);
  uint64_t v113 = v23;
  sub_633AC(v2, (uint64_t)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TenDayBatteryUsageChart);
  unint64_t v24 = (*(unsigned __int8 *)(v111 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);
  uint64_t v25 = swift_allocObject();
  sub_66084((uint64_t)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24, type metadata accessor for TenDayBatteryUsageChart);
  sub_3ED90(&qword_D63B0);
  sub_3ED90(&qword_D63B8);
  sub_4AC40(&qword_D63C0, &qword_D63B0);
  uint64_t v26 = sub_429E0(&qword_D63C8);
  uint64_t v27 = sub_429E0(&qword_D63D0);
  uint64_t v28 = sub_429E0(&qword_D63D8);
  uint64_t v29 = sub_429E0(&qword_D63E0);
  uint64_t v30 = sub_8F550();
  unint64_t v31 = sub_4AB2C();
  *(void *)&long long v117 = v30;
  *((void *)&v117 + 1) = &type metadata for String;
  id v32 = v112;
  *(void *)&long long v118 = &protocol witness table for BarMark;
  *((void *)&v118 + 1) = v31;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v117 = v29;
  *((void *)&v117 + 1) = OpaqueTypeConformance2;
  uint64_t v34 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v117 = v28;
  *((void *)&v117 + 1) = v34;
  uint64_t v35 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v117 = v27;
  *((void *)&v117 + 1) = &type metadata for Color;
  *(void *)&long long v118 = v35;
  *((void *)&v118 + 1) = &protocol witness table for Color;
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v117 = v26;
  *((void *)&v117 + 1) = v36;
  swift_getOpaqueTypeConformance2();
  sub_68A90(&qword_D63E8, (void (*)(uint64_t))type metadata accessor for BUIChartViewData.BatteryUsageElement);
  uint64_t result = sub_8F530();
  uint64_t v38 = *(void *)(v2 + 40);
  uint64_t v39 = *(void *)(v38 + 16);
  if (v39)
  {
    double v40 = *(double *)(v38 + 32);
    uint64_t v41 = v39 - 1;
    if (v41)
    {
      int64_t v42 = (double *)(v38 + 40);
      do
      {
        double v43 = *v42++;
        double v44 = v43;
        if (v40 < v43) {
          double v40 = v44;
        }
        --v41;
      }
      while (v41);
    }
    if (v40 >= 0.0)
    {
      *(void *)&long long v117 = 0;
      *((double *)&v117 + 1) = v40;
      uint64_t v45 = sub_8F620();
      uint64_t v46 = (uint64_t)v93;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v93, 1, 1, v45);
      uint64_t v47 = sub_3ED90(&qword_D63F0);
      uint64_t v48 = sub_4AC40(&qword_D63F8, &qword_D6378);
      unint64_t v49 = sub_635D8();
      uint64_t v50 = v90;
      uint64_t v51 = v89;
      sub_8FC40();
      sub_4AE2C(v46, &qword_D6370);
      uint64_t v52 = (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v32, v51);
      __chkstk_darwin(v52);
      *(&v88 - 2) = v2;
      uint64_t v53 = sub_3ED90(&qword_D6408);
      *(void *)&long long v117 = v51;
      *((void *)&v117 + 1) = v47;
      *(void *)&long long v118 = v48;
      *((void *)&v118 + 1) = v49;
      uint64_t v54 = swift_getOpaqueTypeConformance2();
      uint64_t v55 = swift_getOpaqueTypeConformance2();
      Swift::String v56 = v94;
      uint64_t v57 = v92;
      sub_8FC10();
      uint64_t v58 = (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v50, v57);
      __chkstk_darwin(v58);
      *(&v88 - 2) = v2;
      uint64_t v59 = sub_3ED90(&qword_D6410);
      *(void *)&long long v117 = v57;
      *((void *)&v117 + 1) = v53;
      *(void *)&long long v118 = v54;
      *((void *)&v118 + 1) = v55;
      uint64_t v60 = swift_getOpaqueTypeConformance2();
      uint64_t v61 = sub_429E0(&qword_D6360);
      uint64_t v62 = sub_4AC40(&qword_D6368, &qword_D6360);
      *(void *)&long long v117 = v61;
      *((void *)&v117 + 1) = v62;
      uint64_t v63 = swift_getOpaqueTypeConformance2();
      uint64_t v64 = v97;
      uint64_t v65 = v96;
      sub_8FC20();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v56, v65);
      sub_6368C();
      uint64_t v113 = v66;
      uint64_t v114 = v67;
      *(void *)&long long v117 = v65;
      *((void *)&v117 + 1) = v59;
      *(void *)&long long v118 = v60;
      *((void *)&v118 + 1) = v63;
      swift_getOpaqueTypeConformance2();
      sub_63AF4();
      uint64_t v68 = v100;
      uint64_t v69 = v99;
      sub_8FCD0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v64, v69);
      sub_8FEB0();
      sub_8F750();
      uint64_t v70 = v101;
      uint64_t v71 = (uint64_t)v105;
      uint64_t v72 = v102;
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v105, v68, v102);
      double v73 = (_OWORD *)(v71 + *(int *)(v104 + 36));
      long long v74 = v118;
      *double v73 = v117;
      v73[1] = v74;
      v73[2] = v119;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v72);
      type metadata accessor for BUIChartViewModel(0);
      sub_68A90(&qword_D5B80, (void (*)(uint64_t))type metadata accessor for BUIChartViewModel);
      sub_8F790();
      swift_getKeyPath();
      sub_8F7A0();
      swift_release();
      swift_release();
      uint64_t v75 = v113;
      uint64_t v76 = v114;
      uint64_t v77 = v115;
      uint64_t v78 = v116;
      double v79 = *(void (**)(uint64_t))(**(void **)(v2 + 8) + 136);
      uint64_t v80 = swift_retain();
      uint64_t v81 = (uint64_t)v107;
      v79(v80);
      swift_release();
      uint64_t v82 = (uint64_t)v108;
      sub_633AC(v81 + *(int *)(v106 + 20), (uint64_t)v108, type metadata accessor for BUIChartViewData.DataFor10Days);
      sub_614B4(v81, type metadata accessor for BUIChartViewData);
      uint64_t v83 = *(void *)(v82 + *(int *)(v109 + 20));
      swift_bridgeObjectRetain();
      sub_614B4(v82, type metadata accessor for BUIChartViewData.DataFor10Days);
      uint64_t v84 = type metadata accessor for BUIChartViewData.BatteryUsageElement(0);
      uint64_t v85 = sub_68E8C(v83, v84, (uint64_t)&off_C0D18);
      swift_bridgeObjectRelease();
      double v86 = sub_63B48((uint64_t)v85);
      swift_bridgeObjectRelease();
      sub_63D8C();
      uint64_t v87 = (uint64_t)v103;
      sub_4E660(v75, v76, v77, v78, (uint64_t)v86);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_4AE2C(v71, &qword_D63A0);
      return sub_4AC84(v87, v110, &qword_D63A8);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_623C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v132 = a3;
  uint64_t v5 = sub_8F900();
  uint64_t v133 = *(void *)(v5 - 8);
  uint64_t v134 = v5;
  __chkstk_darwin(v5);
  unint64_t v131 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_3ED90(&qword_D5D30);
  __chkstk_darwin(v7 - 8);
  uint64_t v129 = (uint64_t)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_3ED90(&qword_D6660);
  __chkstk_darwin(v9 - 8);
  long long v119 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_3ED90(&qword_D6638);
  __chkstk_darwin(v139);
  uint64_t v111 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v112 = (char *)&v98 - v13;
  uint64_t v14 = sub_8F150();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v136 = v14;
  uint64_t v137 = v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v135 = (char *)&v98 - v19;
  uint64_t v108 = sub_3ED90(&qword_D6640);
  __chkstk_darwin(v108);
  uint64_t v109 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v110 = (uint64_t)&v98 - v22;
  uint64_t v23 = sub_3ED90(&qword_D6668);
  __chkstk_darwin(v23 - 8);
  uint64_t v113 = (char *)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_8F550();
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v114 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_3ED90(&qword_D63E0);
  uint64_t v118 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  long long v117 = (char *)&v98 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_3ED90(&qword_D63D8);
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v120 = (char *)&v98 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_3ED90(&qword_D63D0);
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v122 = (char *)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_3ED90(&qword_D63C8);
  uint64_t v128 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v127 = (char *)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for BUIChartViewData.BatteryUsageElement(0);
  uint64_t v107 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  id v32 = (uint64_t *)((char *)&v98 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = type metadata accessor for TenDayBatteryUsageChart(0);
  __chkstk_darwin(v33 - 8);
  uint64_t v35 = (char *)&v98 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = *(void (**)(uint64_t))(**(void **)(a2 + 8) + 240);
  uint64_t v37 = swift_retain();
  v36(v37);
  char v39 = v38;
  swift_release();
  sub_633AC(a2, (uint64_t)v35, type metadata accessor for TenDayBatteryUsageChart);
  sub_633AC(a1, (uint64_t)v32, type metadata accessor for BUIChartViewData.BatteryUsageElement);
  if (v39)
  {
    sub_614B4((uint64_t)v32, type metadata accessor for BUIChartViewData.BatteryUsageElement);
    sub_614B4((uint64_t)v35, type metadata accessor for TenDayBatteryUsageChart);
    uint64_t v46 = v136;
    uint64_t v47 = v17;
    goto LABEL_6;
  }
  double v40 = *(uint64_t (**)(uint64_t))(**((void **)v35 + 1) + 240);
  uint64_t v41 = swift_retain();
  uint64_t v42 = v40(v41);
  LOBYTE(v40) = v43;
  swift_release();
  sub_614B4((uint64_t)v35, type metadata accessor for TenDayBatteryUsageChart);
  uint64_t v44 = *v32;
  sub_614B4((uint64_t)v32, type metadata accessor for BUIChartViewData.BatteryUsageElement);
  uint64_t v45 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_energyUsageGrayColor;
  if (v40)
  {
    uint64_t v46 = v136;
    uint64_t v47 = v17;
    goto LABEL_7;
  }
  uint64_t v46 = v136;
  uint64_t v47 = v17;
  if (v42 == v44) {
LABEL_6:
  }
    uint64_t v45 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_energyUsageColor;
LABEL_7:
  uint64_t v136 = *(void *)(*(void *)(a2 + 16) + *v45);
  swift_retain();
  uint64_t v104 = sub_8F8E0();
  uint64_t v106 = v48;
  int v103 = v49;
  uint64_t v105 = v50;
  uint64_t v51 = a1 + *(int *)(v30 + 20);
  uint64_t v52 = a1;
  uint64_t v53 = v137;
  uint64_t v54 = v30;
  uint64_t v55 = v135;
  uint64_t v101 = *(void (**)(char *, uint64_t, uint64_t))(v137 + 16);
  v101(v135, v51, v46);
  sub_4B198();
  sub_8F140();
  uint64_t v102 = sub_68A90((unint64_t *)&qword_D5B50, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t result = sub_8FFD0();
  if (result)
  {
    uint64_t v57 = v47;
    uint64_t v58 = v111;
    uint64_t v138 = a2;
    uint64_t v59 = *(int *)(v139 + 48);
    uint64_t v60 = v139;
    uint64_t v100 = v52;
    uint64_t v61 = v112;
    uint64_t v62 = &v112[v59];
    uint64_t v99 = v54;
    uint64_t v63 = v55;
    uint64_t v64 = v46;
    uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
    v65(v112, v63, v64);
    uint64_t v98 = v62;
    v65(v62, v57, v64);
    uint64_t v66 = &v58[*(int *)(v60 + 48)];
    uint64_t v67 = (void (*)(char *, char *, uint64_t))v101;
    v101(v58, (uint64_t)v61, v64);
    v67(v66, v62, v64);
    uint64_t v68 = (uint64_t)v109;
    v65(v109, v58, v64);
    uint64_t v69 = *(void (**)(char *, uint64_t))(v53 + 8);
    v69(v66, v64);
    uint64_t v70 = &v58[*(int *)(v139 + 48)];
    v65(v58, v61, v64);
    v65(v70, v98, v64);
    v65((char *)(v68 + *(int *)(v108 + 36)), v70, v64);
    v69(v58, v64);
    uint64_t v71 = v110;
    sub_4AC84(v68, v110, &qword_D6640);
    sub_8F460();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_4AE2C(v71, &qword_D6640);
    sub_8F8E0();
    uint64_t v72 = v99;
    uint64_t v73 = v100;
    uint64_t v141 = *(void *)(v100 + *(int *)(v99 + 24));
    sub_8F470();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v74 = v138;
    uint64_t v75 = v114;
    sub_8F540();
    uint64_t v76 = *(void *)(v74 + 8);
    uint64_t v77 = v129;
    sub_633AC(v73, v129, type metadata accessor for BUIChartViewData.BatteryUsageElement);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v107 + 56))(v77, 0, 1, v72);
    uint64_t v78 = *(uint64_t (**)(uint64_t))(*(void *)v76 + 584);
    swift_retain();
    uint64_t v79 = v78(v77);
    uint64_t v81 = v80;
    swift_release();
    sub_4AE2C(v77, &qword_D5D30);
    uint64_t v141 = v79;
    unint64_t v142 = v81;
    unint64_t v82 = sub_4AB2C();
    uint64_t v83 = v117;
    uint64_t v84 = v116;
    sub_8F370();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v115 + 8))(v75, v84);
    sub_8F8E0();
    uint64_t v141 = v84;
    unint64_t v142 = &type metadata for String;
    unint64_t v143 = &protocol witness table for BarMark;
    NSString v144 = (void *)v82;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    double v86 = v120;
    uint64_t v87 = v121;
    sub_8F380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v118 + 8))(v83, v87);
    sub_537B4();
    swift_bridgeObjectRetain();
    uint64_t v141 = v87;
    unint64_t v142 = (void *)OpaqueTypeConformance2;
    uint64_t v88 = swift_getOpaqueTypeConformance2();
    uint64_t v89 = v122;
    uint64_t v90 = v124;
    sub_8F3A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v123 + 8))(v86, v90);
    uint64_t v140 = v136;
    uint64_t v141 = v90;
    unint64_t v142 = (void *)v88;
    uint64_t v91 = swift_getOpaqueTypeConformance2();
    uint64_t v93 = v126;
    uint64_t v92 = v127;
    sub_8F360();
    (*(void (**)(char *, uint64_t))(v125 + 8))(v89, v93);
    uint64_t v95 = v133;
    uint64_t v94 = v134;
    uint64_t v96 = v131;
    (*(void (**)(char *, void, uint64_t))(v133 + 104))(v131, enum case for RoundedCornerStyle.continuous(_:), v134);
    uint64_t v141 = v93;
    unint64_t v142 = &type metadata for Color;
    unint64_t v143 = (void *)v91;
    NSString v144 = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2();
    uint64_t v97 = v130;
    sub_8F350();
    swift_release();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v94);
    return (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v92, v97);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_633AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_63414()
{
  uint64_t v1 = (int *)(type metadata accessor for TenDayBatteryUsageChart(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[11];
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(sub_3ED90(&qword_D6350) + 40);
  uint64_t v7 = sub_3ED90(&qword_D6360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v0 + v3 + v1[12];
  sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_8F220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_635AC(uint64_t a1)
{
  return sub_66118(a1, type metadata accessor for TenDayBatteryUsageChart, (uint64_t (*)(uint64_t, uint64_t))sub_623C0);
}

unint64_t sub_635D8()
{
  unint64_t result = qword_D6400;
  if (!qword_D6400)
  {
    sub_429E0(&qword_D63F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6400);
  }
  return result;
}

uint64_t sub_63644()
{
  type metadata accessor for TenDayBatteryUsageChart(0);
  uint64_t v0 = sub_3ED90(&qword_D6350);
  return sub_823B0(v0);
}

void sub_6368C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void (**)(uint64_t))(**(void **)(v0 + 8) + 136);
  uint64_t v9 = swift_retain();
  v8(v9);
  swift_release();
  sub_633AC((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v4, type metadata accessor for BUIChartViewData.DataFor10Days);
  sub_614B4((uint64_t)v7, type metadata accessor for BUIChartViewData);
  sub_5D8E4();
  uint64_t v11 = v10;
  sub_614B4((uint64_t)v4, type metadata accessor for BUIChartViewData.DataFor10Days);
  NSString v12 = sub_90010();
  id v13 = BatteryUILocalization(v12);

  if (!v13) {
    goto LABEL_16;
  }
  sub_90020();

  uint64_t v14 = *(void *)(v1 + 40);
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    double v16 = *(double *)(v14 + 32);
    uint64_t v17 = v15 - 1;
    if (v17)
    {
      uint64_t v18 = (double *)(v14 + 40);
      do
      {
        double v19 = *v18++;
        double v20 = v19;
        if (v16 < v19) {
          double v16 = v20;
        }
        --v17;
      }
      while (v17);
    }
    sub_60788(0, &qword_D5D38);
    if (v16 >= 0.0) {
      goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  sub_60788(0, &qword_D5D38);
LABEL_11:
  swift_bridgeObjectRetain();
  uint64_t v21 = (void *)sub_902A0();
  NSString v22 = sub_90010();
  id v23 = BatteryUILocalization(v22);

  if (v23)
  {
    uint64_t v24 = sub_90020();
    uint64_t v34 = v25;
    uint64_t v35 = v24;
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v35 = 0;
  }
  uint64_t v36 = sub_60788(0, &qword_D6428);
  sub_3ED90(&qword_D6430);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_9CD60;
  uint64_t v27 = *(void (**)(uint64_t))(**(void **)(v1 + 8) + 136);
  id v28 = v11;
  id v29 = v21;
  uint64_t v30 = swift_retain();
  v27(v30);
  swift_release();
  sub_633AC((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v4, type metadata accessor for BUIChartViewData.DataFor10Days);
  sub_614B4((uint64_t)v7, type metadata accessor for BUIChartViewData);
  sub_5DBB4();
  uint64_t v32 = v31;
  sub_614B4((uint64_t)v4, type metadata accessor for BUIChartViewData.DataFor10Days);
  *(void *)(v26 + 32) = v32;
  uint64_t v37 = v26;
  sub_900E0();
  uint64_t v33 = sub_90250();
  *(void *)(swift_allocObject() + 16) = v33;
  nullsub_2(sub_68DAC);
}

unint64_t sub_63AF4()
{
  unint64_t result = qword_D6418;
  if (!qword_D6418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6418);
  }
  return result;
}

void *sub_63B48(uint64_t a1)
{
  uint64_t v16 = sub_3ED90(&qword_D5B38);
  uint64_t v2 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_3ED90(&qword_D5B58);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_68BA8(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v12 = *(void *)(v2 + 72);
    uint64_t v10 = v17;
    do
    {
      sub_4ACE8(v11, (uint64_t)v4, &qword_D5B38);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_68BA8(0, v10[2] + 1, 1);
        uint64_t v10 = v17;
      }
      unint64_t v14 = v10[2];
      unint64_t v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_68BA8(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v17;
      }
      v10[2] = v14 + 1;
      sub_4AC84((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, &qword_D5B58);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

unint64_t sub_63D8C()
{
  unint64_t result = qword_D6420;
  if (!qword_D6420)
  {
    sub_429E0(&qword_D63A0);
    sub_429E0(&qword_D6390);
    sub_429E0(&qword_D6388);
    sub_429E0(&qword_D6410);
    sub_429E0(&qword_D6380);
    sub_429E0(&qword_D6408);
    sub_429E0(&qword_D6378);
    sub_429E0(&qword_D63F0);
    sub_4AC40(&qword_D63F8, &qword_D6378);
    sub_635D8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_429E0(&qword_D6360);
    sub_4AC40(&qword_D6368, &qword_D6360);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_63AF4();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6420);
  }
  return result;
}

uint64_t sub_63FF4(double a1)
{
  uint64_t v2 = sub_54628();
  swift_beginAccess();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(*(void *)*v2 + 496);
  uint64_t v4 = swift_retain();
  uint64_t v5 = (void *)v3(v4);
  swift_release();
  id v6 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a1];
  id v7 = [v5 stringFromNumber:v6];

  if (!v7) {
    return 0;
  }
  uint64_t v8 = sub_90020();

  return v8;
}

uint64_t sub_64108()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t type metadata accessor for TenDayBatteryActivityChart(uint64_t a1)
{
  return sub_609EC(a1, qword_D8E60);
}

double sub_64164@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  id v6 = sub_54628();
  swift_beginAccess();
  *(void *)(a2 + 16) = *v6;
  id v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for TenDayBatteryActivityChart(0) + 40));
  uint64_t *v7 = swift_getKeyPath();
  sub_3ED90(&qword_D6358);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for BUIChartViewModel(0);
  sub_68A90(&qword_D5B80, (void (*)(uint64_t))type metadata accessor for BUIChartViewModel);
  swift_retain();
  swift_retain();
  *(void *)a2 = sub_8F780();
  *(void *)(a2 + 8) = v8;
  *(double *)(a2 + 24) = a3;
  uint64_t v9 = swift_retain();
  *(void *)(a2 + 32) = nullsub_2(v9);
  uint64_t v10 = (*(uint64_t (**)(void))(*(void *)a1 + 472))();
  double v12 = v11;
  *(void *)(a2 + 40) = v10;
  uint64_t v13 = swift_bridgeObjectRetain();
  nullsub_2(v13);
  sub_64304();
  sub_8230C(v10, v14, (uint64_t)&type metadata for PLBUIHourMinutesFormatStyle, (uint64_t)v16, v12);
  swift_release();
  double result = *(double *)&v16[1];
  *(void *)(a2 + 48) = v16[0];
  *(double *)(a2 + 56) = result;
  return result;
}

unint64_t sub_64304()
{
  unint64_t result = qword_D6438;
  if (!qword_D6438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6438);
  }
  return result;
}

uint64_t sub_64358@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v116 = a1;
  uint64_t v3 = sub_3ED90(&qword_D6370);
  __chkstk_darwin(v3 - 8);
  uint64_t v96 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TenDayBatteryActivityChart(0);
  uint64_t v118 = *(uint64_t **)(v5 - 8);
  uint64_t v6 = v118[8];
  __chkstk_darwin(v5 - 8);
  uint64_t v117 = (uint64_t)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v10);
  double v12 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_3ED90(&qword_D6440);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v14 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_3ED90(&qword_D6448);
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v93 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_3ED90(&qword_D6450);
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v97 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_3ED90(&qword_D6458);
  uint64_t v101 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v98 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_3ED90(&qword_D6460);
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v102 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_3ED90(&qword_D6468);
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v106 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_3ED90(&qword_D6470);
  __chkstk_darwin(v110);
  uint64_t v111 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_3ED90(&qword_D6478);
  __chkstk_darwin(v21 - 8);
  uint64_t v109 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = *(void (**)(uint64_t))(**(void **)(v1 + 8) + 136);
  uint64_t v24 = swift_retain();
  v23(v24);
  swift_release();
  uint64_t v112 = v10;
  uint64_t v25 = *(int *)(v10 + 20);
  uint64_t v26 = v14;
  sub_633AC((uint64_t)&v12[v25], (uint64_t)v9, type metadata accessor for BUIChartViewData.DataFor10Days);
  uint64_t v113 = v12;
  sub_614B4((uint64_t)v12, type metadata accessor for BUIChartViewData);
  uint64_t v115 = v7;
  uint64_t v27 = *(void *)&v9[*(int *)(v7 + 24)];
  swift_bridgeObjectRetain();
  uint64_t v114 = v9;
  sub_614B4((uint64_t)v9, type metadata accessor for BUIChartViewData.DataFor10Days);
  uint64_t v127 = v27;
  uint64_t v28 = v117;
  sub_633AC(v2, v117, type metadata accessor for TenDayBatteryActivityChart);
  unint64_t v29 = (*((unsigned __int8 *)v118 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v118 + 80);
  uint64_t v30 = swift_allocObject();
  sub_66084(v28, v30 + v29, type metadata accessor for TenDayBatteryActivityChart);
  sub_3ED90(&qword_D6480);
  sub_3ED90(&qword_D6488);
  sub_4AC40(&qword_D6490, &qword_D6480);
  uint64_t v31 = sub_429E0(&qword_D6498);
  uint64_t v32 = sub_429E0(&qword_D64A0);
  uint64_t v33 = sub_429E0(&qword_D64A8);
  uint64_t v34 = sub_4AC40(&qword_D64B0, &qword_D64A8);
  *(void *)&long long v128 = v33;
  *((void *)&v128 + 1) = v34;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v36 = sub_4AB2C();
  *(void *)&long long v128 = v32;
  *((void *)&v128 + 1) = &type metadata for String;
  *(void *)&long long v129 = OpaqueTypeConformance2;
  *((void *)&v129 + 1) = v36;
  uint64_t v37 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v128 = v31;
  *((void *)&v128 + 1) = v37;
  swift_getOpaqueTypeConformance2();
  sub_68A90(&qword_D64B8, (void (*)(uint64_t))type metadata accessor for BUIChartViewData.ScreenUsageElement);
  uint64_t result = sub_8F530();
  uint64_t v39 = *(void *)(v2 + 40);
  uint64_t v40 = *(void *)(v39 + 16);
  if (v40)
  {
    double v41 = *(double *)(v39 + 32);
    uint64_t v42 = v40 - 1;
    if (v42)
    {
      char v43 = (double *)(v39 + 40);
      do
      {
        double v44 = *v43++;
        double v45 = v44;
        if (v41 < v44) {
          double v41 = v45;
        }
        --v42;
      }
      while (v42);
    }
    if (v41 >= 0.0)
    {
      uint64_t v125 = 0;
      double v126 = v41;
      uint64_t v46 = sub_8F620();
      uint64_t v47 = (uint64_t)v96;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v96, 1, 1, v46);
      uint64_t v48 = sub_3ED90(&qword_D63F0);
      uint64_t v49 = sub_4AC40(&qword_D64C0, &qword_D6440);
      unint64_t v50 = sub_635D8();
      uint64_t v51 = v93;
      uint64_t v52 = v92;
      sub_8FC40();
      sub_4AE2C(v47, &qword_D6370);
      uint64_t v53 = (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v26, v52);
      uint64_t v118 = &v91;
      __chkstk_darwin(v53);
      *(&v91 - 2) = v2;
      uint64_t v54 = sub_3ED90(&qword_D6408);
      *(void *)&long long v128 = v52;
      *((void *)&v128 + 1) = v48;
      *(void *)&long long v129 = v49;
      *((void *)&v129 + 1) = v50;
      uint64_t v55 = swift_getOpaqueTypeConformance2();
      uint64_t v56 = swift_getOpaqueTypeConformance2();
      uint64_t v57 = v97;
      uint64_t v58 = v95;
      sub_8FC10();
      uint64_t v59 = (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v51, v58);
      __chkstk_darwin(v59);
      *(&v91 - 2) = v2;
      uint64_t v60 = sub_3ED90(&qword_D64C8);
      *(void *)&long long v128 = v58;
      *((void *)&v128 + 1) = v54;
      *(void *)&long long v129 = v55;
      *((void *)&v129 + 1) = v56;
      uint64_t v61 = swift_getOpaqueTypeConformance2();
      unint64_t v62 = sub_64304();
      *(void *)&long long v128 = &type metadata for PLBUIHourMinutesFormatStyle;
      *((void *)&v128 + 1) = v62;
      uint64_t v63 = swift_getOpaqueTypeConformance2();
      uint64_t v64 = v98;
      uint64_t v65 = v100;
      sub_8FC20();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v57, v65);
      *(void *)&long long v128 = v65;
      *((void *)&v128 + 1) = v60;
      *(void *)&long long v129 = v61;
      *((void *)&v129 + 1) = v63;
      uint64_t v66 = swift_getOpaqueTypeConformance2();
      uint64_t v67 = v102;
      uint64_t v68 = v103;
      sub_8FC30();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v64, v68);
      sub_66A60();
      uint64_t v123 = v69;
      uint64_t v124 = v70;
      *(void *)&long long v128 = v68;
      *((void *)&v128 + 1) = v66;
      swift_getOpaqueTypeConformance2();
      sub_63AF4();
      uint64_t v71 = v106;
      uint64_t v72 = v105;
      sub_8FCD0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v67, v72);
      sub_8FEB0();
      sub_8F750();
      uint64_t v73 = v107;
      uint64_t v74 = (uint64_t)v111;
      uint64_t v75 = v108;
      (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v111, v71, v108);
      uint64_t v76 = (_OWORD *)(v74 + *(int *)(v110 + 36));
      long long v77 = v129;
      *uint64_t v76 = v128;
      v76[1] = v77;
      v76[2] = v130;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v75);
      type metadata accessor for BUIChartViewModel(0);
      sub_68A90(&qword_D5B80, (void (*)(uint64_t))type metadata accessor for BUIChartViewModel);
      sub_8F790();
      swift_getKeyPath();
      sub_8F7A0();
      swift_release();
      swift_release();
      uint64_t v78 = v119;
      uint64_t v79 = v120;
      uint64_t v80 = v121;
      uint64_t v81 = v122;
      unint64_t v82 = *(void (**)(uint64_t))(**(void **)(v2 + 8) + 136);
      uint64_t v83 = swift_retain();
      uint64_t v84 = (uint64_t)v113;
      v82(v83);
      swift_release();
      uint64_t v85 = (uint64_t)v114;
      sub_633AC(v84 + *(int *)(v112 + 20), (uint64_t)v114, type metadata accessor for BUIChartViewData.DataFor10Days);
      sub_614B4(v84, type metadata accessor for BUIChartViewData);
      uint64_t v86 = *(void *)(v85 + *(int *)(v115 + 24));
      swift_bridgeObjectRetain();
      sub_614B4(v85, type metadata accessor for BUIChartViewData.DataFor10Days);
      uint64_t v87 = type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
      uint64_t v88 = sub_68E8C(v86, v87, (uint64_t)&off_C0CF8);
      swift_bridgeObjectRelease();
      uint64_t v89 = sub_63B48((uint64_t)v88);
      swift_bridgeObjectRelease();
      sub_66EA4();
      uint64_t v90 = (uint64_t)v109;
      sub_4E660(v78, v79, v80, v81, (uint64_t)v89);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_4AE2C(v74, &qword_D6470);
      return sub_4AC84(v90, v116, &qword_D6478);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_652AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v105 = a1;
  uint64_t v92 = a3;
  uint64_t v4 = sub_3ED90(&qword_D5D28);
  __chkstk_darwin(v4 - 8);
  uint64_t v95 = (uint64_t)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_8F900();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v86 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_3ED90(&qword_D64A8);
  uint64_t v85 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v84 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_3ED90(&qword_D64A0);
  uint64_t v93 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v90 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_3ED90(&qword_D6498);
  uint64_t v100 = *(void *)(v9 - 8);
  uint64_t v101 = v9;
  __chkstk_darwin(v9);
  uint64_t v98 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_3ED90(&qword_D6488);
  uint64_t v96 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v94 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = (uint64_t *)sub_3ED90(&qword_D6638);
  __chkstk_darwin(v103);
  uint64_t v80 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v76 - v14;
  uint64_t v102 = sub_8F150();
  uint64_t v16 = *(void **)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v76 - v20;
  uint64_t v81 = sub_3ED90(&qword_D6640);
  __chkstk_darwin(v81);
  unint64_t v82 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v104 = (uint64_t)&v76 - v24;
  uint64_t v106 = type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  uint64_t v83 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v26 = (uint64_t *)((char *)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = type metadata accessor for TenDayBatteryActivityChart(0);
  __chkstk_darwin(v27 - 8);
  unint64_t v29 = (char *)&v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void (**)(uint64_t))(**(void **)(a2 + 8) + 240);
  uint64_t v31 = swift_retain();
  v30(v31);
  LOBYTE(v30) = v32;
  swift_release();
  uint64_t v89 = a2;
  sub_633AC(a2, (uint64_t)v29, type metadata accessor for TenDayBatteryActivityChart);
  uint64_t v33 = v105;
  sub_633AC(v105, (uint64_t)v26, type metadata accessor for BUIChartViewData.ScreenUsageElement);
  if (v30)
  {
    sub_614B4((uint64_t)v26, type metadata accessor for BUIChartViewData.ScreenUsageElement);
    sub_614B4((uint64_t)v29, type metadata accessor for TenDayBatteryActivityChart);
    int v79 = 0;
  }
  else
  {
    uint64_t v34 = *(uint64_t (**)(uint64_t))(**((void **)v29 + 1) + 240);
    uint64_t v35 = swift_retain();
    uint64_t v36 = v34(v35);
    int v38 = v37;
    swift_release();
    sub_614B4((uint64_t)v29, type metadata accessor for TenDayBatteryActivityChart);
    uint64_t v39 = *v26;
    sub_614B4((uint64_t)v26, type metadata accessor for BUIChartViewData.ScreenUsageElement);
    int v79 = v38 | (v36 != v39);
  }
  uint64_t v40 = v33 + *(int *)(v106 + 20);
  uint64_t v41 = v102;
  uint64_t v78 = (void (*)(char *, uint64_t, uint64_t))v16[2];
  v78(v21, v40, v102);
  sub_4B198();
  sub_8F140();
  sub_68A90((unint64_t *)&qword_D5B50, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t result = sub_8FFD0();
  if (result)
  {
    char v43 = v21;
    double v44 = v80;
    double v45 = v103;
    uint64_t v46 = &v15[*((int *)v103 + 12)];
    uint64_t v47 = (void (*)(char *, char *, uint64_t))v16[4];
    v47(v15, v43, v41);
    long long v77 = v46;
    v47(v46, v18, v41);
    uint64_t v48 = &v44[*((int *)v45 + 12)];
    uint64_t v49 = (void (*)(char *, char *, uint64_t))v78;
    v78(v44, (uint64_t)v15, v41);
    v49(v48, v46, v41);
    uint64_t v50 = (uint64_t)v82;
    v47(v82, v44, v41);
    uint64_t v51 = (void (*)(char *, uint64_t))v16[1];
    v51(v48, v41);
    uint64_t v52 = &v44[*((int *)v103 + 12)];
    v47(v44, v15, v41);
    v47(v52, v77, v41);
    v47((char *)(v50 + *(int *)(v81 + 36)), v52, v41);
    v51(v44, v41);
    uint64_t v53 = v104;
    uint64_t v54 = sub_4AC84(v50, v104, &qword_D6640);
    uint64_t v103 = &v76;
    __chkstk_darwin(v54);
    uint64_t v55 = v105;
    *(&v76 - 4) = v53;
    *(&v76 - 3) = v55;
    uint64_t v56 = v89;
    *(&v76 - 2) = v89;
    *((unsigned char *)&v76 - 8) = v79 & 1;
    sub_3ED90(&qword_D6648);
    sub_68AE8();
    uint64_t v57 = v84;
    sub_8F510();
    uint64_t v58 = v87;
    uint64_t v59 = v86;
    uint64_t v60 = v88;
    (*(void (**)(char *, void, uint64_t))(v87 + 104))(v86, enum case for RoundedCornerStyle.continuous(_:), v88);
    uint64_t v61 = sub_4AC40(&qword_D64B0, &qword_D64A8);
    unint64_t v62 = v90;
    uint64_t v63 = v91;
    sub_8F350();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v57, v63);
    uint64_t v64 = *(void *)(v56 + 8);
    uint64_t v65 = v95;
    sub_633AC(v55, v95, type metadata accessor for BUIChartViewData.ScreenUsageElement);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56))(v65, 0, 1, v106);
    uint64_t v66 = *(uint64_t (**)(uint64_t))(*(void *)v64 + 592);
    swift_retain();
    uint64_t v67 = v66(v65);
    uint64_t v69 = v68;
    swift_release();
    sub_4AE2C(v65, &qword_D5D28);
    uint64_t v111 = v67;
    uint64_t v112 = v69;
    uint64_t v107 = v63;
    uint64_t v108 = (void *)v61;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    unint64_t v71 = sub_4AB2C();
    uint64_t v72 = v97;
    uint64_t v73 = v98;
    sub_8F370();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v62, v72);
    sub_8F8E0();
    uint64_t v107 = v72;
    uint64_t v108 = &type metadata for String;
    uint64_t v109 = OpaqueTypeConformance2;
    unint64_t v110 = v71;
    swift_getOpaqueTypeConformance2();
    uint64_t v74 = v94;
    uint64_t v75 = v101;
    sub_8F380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v73, v75);
    (*(void (**)(uint64_t, char *, uint64_t))(v96 + 32))(v92, v74, v99);
    return sub_4AE2C(v104, &qword_D6640);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_65F4C()
{
  uint64_t v1 = (int *)(type metadata accessor for TenDayBatteryActivityChart(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[12];
  sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_8F220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_66084(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_660EC(uint64_t a1)
{
  return sub_66118(a1, type metadata accessor for TenDayBatteryActivityChart, (uint64_t (*)(uint64_t, uint64_t))sub_652AC);
}

uint64_t sub_66118(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

uint64_t sub_661B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  LODWORD(v58) = a4;
  uint64_t v69 = a3;
  uint64_t v72 = a2;
  uint64_t v66 = a1;
  uint64_t v64 = a5;
  uint64_t v63 = sub_3ED90(&qword_D6658) - 8;
  __chkstk_darwin(v63);
  unint64_t v62 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3ED90(&qword_D6660);
  __chkstk_darwin(v6 - 8);
  uint64_t v57 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_3ED90(&qword_D6668);
  __chkstk_darwin(v8 - 8);
  uint64_t v68 = sub_8F550();
  uint64_t v73 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v60 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v52 - v11;
  uint64_t v54 = sub_3ED90(&qword_D6670);
  uint64_t v67 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v61 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v71 = (char *)&v52 - v15;
  __chkstk_darwin(v16);
  uint64_t v59 = (char *)&v52 - v17;
  __chkstk_darwin(v18);
  uint64_t v70 = (char *)&v52 - v19;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v52 - v21;
  __chkstk_darwin(v23);
  uint64_t v65 = (char *)&v52 - v24;
  sub_8F8E0();
  sub_8F150();
  uint64_t v56 = sub_68A90((unint64_t *)&qword_D5B50, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_8F460();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_8F8E0();
  uint64_t v55 = type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  uint64_t v74 = *(void *)(v72 + *(int *)(v55 + 24));
  sub_8F470();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v69 + 16);
  sub_8F540();
  uint64_t v26 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_screenOffGrayColor;
  uint64_t v27 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_screenOnColor;
  if (v58) {
    uint64_t v27 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_screenOffGrayColor;
  }
  uint64_t v28 = *(void *)(v25 + *v27);
  if ((v58 & 1) == 0) {
    uint64_t v26 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_screenOffColor;
  }
  uint64_t v58 = v26;
  swift_retain();
  uint64_t v74 = v28;
  uint64_t v29 = v68;
  sub_8F360();
  swift_release();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v73 + 8);
  v73 += 8;
  uint64_t v53 = v30;
  v30(v12, v29);
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
  uint64_t v31 = v65;
  uint64_t v32 = v54;
  v52(v65, v22, v54);
  sub_8F8E0();
  sub_8F460();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_8F8E0();
  uint64_t v74 = *(void *)(v72 + *(int *)(v55 + 28));
  sub_8F470();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(v69 + 16);
  uint64_t v34 = v60;
  sub_8F540();
  uint64_t v35 = *(void *)(v33 + *v58);
  swift_retain();
  uint64_t v74 = v35;
  uint64_t v36 = v59;
  uint64_t v37 = v68;
  sub_8F360();
  swift_release();
  v53(v34, v37);
  int v38 = v70;
  uint64_t v39 = v32;
  uint64_t v40 = v32;
  uint64_t v41 = (void (*)(uint64_t, char *, uint64_t))v52;
  v52(v70, v36, v40);
  uint64_t v42 = v67;
  char v43 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  double v44 = v71;
  v43(v71, v31, v39);
  double v45 = v61;
  v43(v61, v38, v39);
  uint64_t v46 = v62;
  v43(v62, v44, v39);
  uint64_t v47 = v63;
  uint64_t v48 = &v46[*(int *)(v63 + 56)];
  v43(v48, v45, v39);
  uint64_t v49 = v64;
  v41(v64, v46, v39);
  v41(v49 + *(int *)(v47 + 56), v48, v39);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v42 + 8);
  v50(v70, v39);
  v50(v65, v39);
  v50(v45, v39);
  return ((uint64_t (*)(char *, uint64_t))v50)(v71, v39);
}

double *sub_66A00()
{
  return sub_83878();
}

uint64_t sub_66A0C()
{
  uint64_t v0 = sub_3ED90(&qword_D6630);
  return sub_823B0(v0);
}

void sub_66A60()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void (**)(uint64_t))(**(void **)(v0 + 8) + 136);
  uint64_t v9 = swift_retain();
  v8(v9);
  swift_release();
  sub_633AC((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v4, type metadata accessor for BUIChartViewData.DataFor10Days);
  sub_614B4((uint64_t)v7, type metadata accessor for BUIChartViewData);
  sub_5D8E4();
  uint64_t v11 = v10;
  sub_614B4((uint64_t)v4, type metadata accessor for BUIChartViewData.DataFor10Days);
  NSString v12 = sub_90010();
  id v13 = BatteryUILocalization(v12);

  if (!v13) {
    goto LABEL_16;
  }
  sub_90020();

  uint64_t v14 = *(void *)(v1 + 40);
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    double v16 = *(double *)(v14 + 32);
    uint64_t v17 = v15 - 1;
    if (v17)
    {
      uint64_t v18 = (double *)(v14 + 40);
      do
      {
        double v19 = *v18++;
        double v20 = v19;
        if (v16 < v19) {
          double v16 = v20;
        }
        --v17;
      }
      while (v17);
    }
  }
  else
  {
    double v16 = *(double *)sub_4B18C();
  }
  sub_60788(0, &qword_D5D38);
  if (v16 < 0.0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = (void *)sub_902A0();
  NSString v22 = sub_90010();
  id v23 = BatteryUILocalization(v22);

  if (v23)
  {
    uint64_t v24 = sub_90020();
    uint64_t v34 = v25;
    uint64_t v35 = v24;
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v35 = 0;
  }
  uint64_t v36 = sub_60788(0, &qword_D6428);
  sub_3ED90(&qword_D6430);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_9CD60;
  uint64_t v27 = *(void (**)(uint64_t))(**(void **)(v1 + 8) + 136);
  id v28 = v11;
  id v29 = v21;
  uint64_t v30 = swift_retain();
  v27(v30);
  swift_release();
  sub_633AC((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v4, type metadata accessor for BUIChartViewData.DataFor10Days);
  sub_614B4((uint64_t)v7, type metadata accessor for BUIChartViewData);
  sub_5E01C();
  uint64_t v32 = v31;
  sub_614B4((uint64_t)v4, type metadata accessor for BUIChartViewData.DataFor10Days);
  *(void *)(v26 + 32) = v32;
  uint64_t v37 = v26;
  sub_900E0();
  uint64_t v33 = sub_90250();
  *(void *)(swift_allocObject() + 16) = v33;
  nullsub_2(sub_671FC);
}

unint64_t sub_66EA4()
{
  unint64_t result = qword_D64D0;
  if (!qword_D64D0)
  {
    sub_429E0(&qword_D6470);
    sub_429E0(&qword_D6460);
    sub_429E0(&qword_D6458);
    sub_429E0(&qword_D6450);
    sub_429E0(&qword_D64C8);
    sub_429E0(&qword_D6448);
    sub_429E0(&qword_D6408);
    sub_429E0(&qword_D6440);
    sub_429E0(&qword_D63F0);
    sub_4AC40(&qword_D64C0, &qword_D6440);
    sub_635D8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_64304();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_63AF4();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D64D0);
  }
  return result;
}

uint64_t sub_67114(double a1)
{
  uint64_t v2 = sub_54628();
  swift_beginAccess();
  uint64_t v3 = *(void **)(*v2 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForHourMinutes);
  id v4 = objc_allocWithZone((Class)NSNumber);
  id v5 = v3;
  id v6 = [v4 initWithDouble:a1];
  id v7 = [v5 stringFromNumber:v6];

  if (!v7) {
    return 0;
  }
  uint64_t v8 = sub_90020();

  return v8;
}

id sub_671FC()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_67204()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_67220()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_67240(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = *(int *)(a3 + 36);
    uint64_t v11 = (uint64_t *)((char *)a1 + v10);
    NSString v12 = (char *)a2 + v10;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v10);
    uint64_t v13 = *(uint64_t *)((char *)a2 + v10 + 8);
    void *v11 = v14;
    v11[1] = v13;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = *(int *)(sub_3ED90(&qword_D6350) + 40);
    double v16 = (char *)v11 + v15;
    uint64_t v17 = &v12[v15];
    uint64_t v18 = sub_3ED90(&qword_D6360);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = *(int *)(a3 + 40);
    double v20 = (uint64_t *)((char *)a1 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    sub_3ED90(&qword_D6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_8F220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      void *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_6741C(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(sub_3ED90(&qword_D6350) + 40);
  uint64_t v6 = sub_3ED90(&qword_D6360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_8F220();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

void *sub_67558(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v13 = *(void *)((char *)a2 + v9);
  uint64_t v12 = *(void *)((char *)a2 + v9 + 8);
  void *v10 = v13;
  v10[1] = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = *(int *)(sub_3ED90(&qword_D6350) + 40);
  uint64_t v15 = (char *)v10 + v14;
  double v16 = &v11[v14];
  uint64_t v17 = sub_3ED90(&qword_D6360);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 40);
  uint64_t v19 = (void *)((char *)a1 + v18);
  double v20 = (void *)((char *)a2 + v18);
  sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_8F220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    void *v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_676DC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 1) = *((void *)v8 + 1);
  uint64_t v9 = *(int *)(sub_3ED90(&qword_D6350) + 40);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_3ED90(&qword_D6360);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 40);
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    sub_4AE2C((uint64_t)a1 + v13, &qword_D6358);
    sub_3ED90(&qword_D6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_8F220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      void *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_678B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  uint64_t v9 = *(int *)(sub_3ED90(&qword_D6350) + 40);
  uint64_t v10 = v7 + v9;
  uint64_t v11 = v8 + v9;
  uint64_t v12 = sub_3ED90(&qword_D6360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_8F220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  return a1;
}

void *sub_67A1C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_bridgeObjectRelease();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  uint64_t v10 = *(int *)(sub_3ED90(&qword_D6350) + 40);
  uint64_t v11 = &v8[v10];
  uint64_t v12 = &v9[v10];
  uint64_t v13 = sub_3ED90(&qword_D6360);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = *(int *)(a3 + 40);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    sub_4AE2C((uint64_t)a1 + v14, &qword_D6358);
    uint64_t v17 = sub_3ED90(&qword_D6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_8F220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_67BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_67BE8);
}

uint64_t sub_67BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_3ED90(&qword_D6350);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_3ED90(&qword_D64D8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_67D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_67D30);
}

uint64_t sub_67D30(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_3ED90(&qword_D6350);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_3ED90(&qword_D64D8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_67E64()
{
  sub_67F64();
  if (v0 <= 0x3F)
  {
    sub_67FF8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_67F64()
{
  if (!qword_D6538)
  {
    sub_429E0(&qword_D6360);
    sub_4AC40(&qword_D6368, &qword_D6360);
    unint64_t v0 = type metadata accessor for BatteryYAxis();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_D6538);
    }
  }
}

void sub_67FF8()
{
  if (!qword_D6540)
  {
    sub_8F220();
    unint64_t v0 = sub_8F700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_D6540);
    }
  }
}

uint64_t *sub_68050(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = (uint64_t *)((char *)a2 + v9);
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    a1[6] = a2[6];
    a1[7] = v8;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_3ED90(&qword_D6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_8F220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v10, v12);
    }
    else
    {
      void *v11 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_681B8(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_8F220();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void *sub_68290(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (void *)((char *)a2 + v8);
  uint64_t v10 = (void *)((char *)a1 + v8);
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_8F220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v9, v11);
  }
  else
  {
    void *v10 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_683A0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 40);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_4AE2C((uint64_t)a1 + v6, &qword_D6358);
    sub_3ED90(&qword_D6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_8F220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_6850C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v4 = *(int *)(a3 + 40);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_8F220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *sub_68600(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 40);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_4AE2C((uint64_t)a1 + v7, &qword_D6358);
    uint64_t v10 = sub_3ED90(&qword_D6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_8F220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_6874C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_68760);
}

uint64_t sub_68760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_3ED90(&qword_D64D8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_68814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_68828);
}

uint64_t sub_68828(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_3ED90(&qword_D64D8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_688D4()
{
  sub_67FF8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_68998()
{
  return sub_68A10(&qword_D6620, &qword_D63A8, (void (*)(void))sub_63D8C);
}

uint64_t sub_689D4()
{
  return sub_68A10(&qword_D6628, &qword_D6478, (void (*)(void))sub_66EA4);
}

uint64_t sub_68A10(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_429E0(a2);
    a3();
    sub_4FAAC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_68A90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_68AD8@<X0>(uint64_t a1@<X8>)
{
  return sub_661B0(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), a1);
}

unint64_t sub_68AE8()
{
  unint64_t result = qword_D6650;
  if (!qword_D6650)
  {
    sub_429E0(&qword_D6648);
    sub_8F550();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6650);
  }
  return result;
}

size_t sub_68BA8(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_68BC8(a1, a2, a3, (void *)*v3);
  size_t *v3 = result;
  return result;
}

size_t sub_68BC8(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_3ED90(&qword_D6678);
  uint64_t v10 = *(void *)(sub_3ED90(&qword_D5B58) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_3ED90(&qword_D5B58) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_68DB0()
{
  return 1;
}

Swift::Int sub_68DB8()
{
  return sub_905F0();
}

void sub_68DFC()
{
}

Swift::Int sub_68E24()
{
  return sub_905F0();
}

const char *sub_68E64()
{
  return "PerfPowerServices";
}

const char *sub_68E78()
{
  return "bui_graph_intervals_iOS";
}

void *sub_68E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&long long v22 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  sub_90150();
  swift_getWitnessTable();
  size_t result = (void *)sub_8FFB0();
  if (BYTE8(v24)) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v8 = v24;
  if ((v24 & 0x8000000000000000) == 0)
  {
    *(void *)&long long v24 = 0;
    *((void *)&v24 + 1) = v8;
    sub_3ED90(&qword_D6680);
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_8FFE0();
    long long v17 = v22;
    long long v20 = v22;
    long long v21 = v23;
    sub_90380();
    swift_getWitnessTable();
    sub_900A0();
    uint64_t v9 = swift_unknownObjectRelease();
    long long v22 = v24;
    long long v23 = v25;
    __chkstk_darwin(v9);
    v16[8] = a2;
    v16[9] = a3;
    v16[10] = a1;
    __chkstk_darwin(v10);
    void v16[2] = a2;
    void v16[3] = a3;
    v16[4] = sub_69354;
    v16[5] = v11;
    uint64_t v12 = sub_904E0();
    uint64_t v13 = (char *)sub_3ED90(&qword_D5B38);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v7 = sub_69400((void (*)(char *, char *))sub_69360, (uint64_t)v16, v12, v13, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v15);
    swift_unknownObjectRelease();
    return (void *)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_6911C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 24))(*(void *)(v0 + 16)) & 1;
}

uint64_t sub_69164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v22 = a2;
  uint64_t v10 = *(void *)(a6 - 8);
  __n128 v11 = __chkstk_darwin(a1);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v15, v14, v11);
  unint64_t v16 = *(void (**)(uint64_t, uint64_t))(a7 + 16);
  v16(a6, a7);
  uint64_t result = sub_90120();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    if (result - 1 <= a3)
    {
      uint64_t v20 = sub_8F150();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v22, 1, 1, v20);
    }
    else
    {
      sub_90160();
      uint64_t v18 = v22;
      v16(a6, a7);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a6);
      uint64_t v19 = sub_8F150();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
    }
    return v21;
  }
  return result;
}

uint64_t sub_69354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_69164(a1, a2, a3, a4, v4[4], v4[2], v4[3]);
}

uint64_t sub_69360@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4 = *(uint64_t (**)(char *, char *, uint64_t, char *))(v2 + 32);
  uint64_t v5 = *a1;
  unint64_t v6 = (char *)a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v7 = sub_3ED90(&qword_D5B38);
  uint64_t result = v4((char *)a2 + *(int *)(v7 + 48), (char *)a2 + *(int *)(v7 + 64), v5, v6);
  *a2 = result;
  return result;
}

uint64_t sub_69400(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  uint64_t v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v55 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_90320();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  __chkstk_darwin(v18);
  uint64_t v51 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v40 - v21;
  __chkstk_darwin(v23);
  uint64_t v40 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v50 = *((void *)v15 - 1);
  __chkstk_darwin(v26);
  id v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v30 = (char *)&v40 - v29;
  Swift::Int v31 = sub_90090();
  uint64_t v61 = sub_90490();
  uint64_t v56 = sub_904A0();
  sub_90440(v31);
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  uint64_t v59 = v30;
  uint64_t result = sub_90080();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_90330();
      uint64_t result = (*v33)(v22, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v22, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v22, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v22, AssociatedTypeWitness);
      sub_90480();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_90330();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    int v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_90480();
      sub_90330();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t type metadata accessor for BUIChartViewData.BatteryLevelsElement(uint64_t a1)
{
  return sub_609EC(a1, (uint64_t *)&unk_D9A80);
}

uint64_t sub_69B1C()
{
  return (*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BUIChartViewData.BatteryLevelsElement(0) + 28)) >> 1) & 1;
}

uint64_t sub_69B44()
{
  return (*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BUIChartViewData.BatteryLevelsElement(0) + 28)) >> 2) & 1;
}

BOOL sub_69B6C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

double sub_69B80()
{
  uint64_t v1 = type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  return *(double *)(v0 + *(int *)(v1 + 24)) + *(double *)(v0 + *(int *)(v1 + 28));
}

uint64_t sub_69BAC()
{
  return *(void *)v0;
}

uint64_t sub_69BB8(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_69BC8(char *a1, char *a2)
{
  return sub_69D20(*a1, *a2);
}

uint64_t sub_69BD4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6843646573756170;
    }
    else {
      uint64_t v3 = 0x43646570706F7473;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEE00676E69677261;
    }
    else {
      unint64_t v4 = 0xEF676E6967726168;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6843646573756170;
      }
      else {
        uint64_t v6 = 0x43646570706F7473;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEE00676E69677261;
      }
      else {
        unint64_t v7 = 0xEF676E6967726168;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x676E696772616863;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x676E696772616863)
  {
LABEL_21:
    char v8 = sub_90570();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_69D20(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x664F6E6565726373;
  }
  else {
    uint64_t v3 = 0x6E4F6E6565726373;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000066;
  }
  if (a2) {
    uint64_t v5 = 0x664F6E6565726373;
  }
  else {
    uint64_t v5 = 0x6E4F6E6565726373;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000066;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_90570();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

Swift::Int sub_69DCC()
{
  return sub_905F0();
}

uint64_t sub_69E54()
{
  sub_90050();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_69EC8()
{
  return sub_905F0();
}

uint64_t sub_69F4C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._uint64_t countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_C0C40;
  v8._object = v3;
  Swift::Int v5 = sub_90540(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_69FAC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E4F6E6565726373;
  if (*v1) {
    uint64_t v2 = 0x664F6E6565726373;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000066;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_69FF4(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_6A000(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_69BD4(*a1, *a2);
}

Swift::Int sub_6A00C()
{
  return sub_905F0();
}

uint64_t sub_6A0C8()
{
  sub_90050();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_6A170()
{
  return sub_905F0();
}

uint64_t sub_6A228@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_6E7D4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_6A258(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0xEE00676E69677261;
  uint64_t v5 = 0x6843646573756170;
  if (v2 != 1)
  {
    uint64_t v5 = 0x43646570706F7473;
    unint64_t v4 = 0xEF676E6967726168;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x676E696772616863;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_6A2D0()
{
  sub_8F110();
  type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  sub_8F110();

  return sub_8F100();
}

double sub_6A334()
{
  type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  sub_8F110();
  double v1 = v0;
  sub_8F110();
  return v1 - v2;
}

uint64_t sub_6A380()
{
  sub_903D0(22);
  swift_bridgeObjectRelease();
  type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  uint64_t v0 = sub_90040();
  double v2 = v1;
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = v0;
  v4._object = v2;
  sub_90060(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x41565245544E495FLL;
  v5._object = (void *)0xEE004E4F43495F4CLL;
  sub_90060(v5);
  return 0x5F5452414843;
}

uint64_t sub_6A4B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_8F150();
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_6A520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_8F150();
  BOOL v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_6A590(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_6A5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for BUIChartViewData.BatteryLevelsElement(0);
  __chkstk_darwin(v4);
  BOOL v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v19 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v17 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      while (1)
      {
        uint64_t v15 = v14;
        sub_6E8A0(a1 + v12, (uint64_t)v10, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
        sub_6E8A0(a2 + v12, (uint64_t)v6, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
        if (*v10 != *v6
          || (sub_8F120() & 1) == 0
          || *(double *)((char *)v10 + v4[6]) != *(double *)((char *)v6 + v4[6])
          || *(void *)((char *)v10 + v4[7]) != *(void *)((char *)v6 + v4[7])
          || *((unsigned __int8 *)v10 + v4[8]) != *((unsigned __int8 *)v6 + v4[8]))
        {
          break;
        }
        char v16 = *((unsigned char *)v10 + v4[9]) ^ *((unsigned char *)v6 + v4[9]);
        sub_6EF70((uint64_t)v6, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
        sub_6EF70((uint64_t)v10, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
        if ((v16 & 1) == 0)
        {
          uint64_t v14 = v15 - 1;
          v12 += v13;
          if (v15) {
            continue;
          }
        }
        char v17 = v16 ^ 1;
        return v17 & 1;
      }
      sub_6EF70((uint64_t)v6, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
      sub_6EF70((uint64_t)v10, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
      char v17 = 0;
    }
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_6A7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  __chkstk_darwin(v4);
  BOOL v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (v11 && a1 != a2)
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v25 = *(void *)(v8 + 72);
      uint64_t v13 = v11 - 1;
      while (1)
      {
        uint64_t v14 = v13;
        sub_6E8A0(a1 + v12, (uint64_t)v10, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
        sub_6E8A0(a2 + v12, (uint64_t)v6, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
        if ((sub_8F120() & 1) == 0 || (sub_8F120() & 1) == 0)
        {
LABEL_27:
          sub_6EF70((uint64_t)v6, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
          sub_6EF70((uint64_t)v10, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
          char v22 = 0;
          return v22 & 1;
        }
        uint64_t v15 = *(int *)(v4 + 24);
        if (v10[v15])
        {
          if (v10[v15] == 1)
          {
            uint64_t v16 = 0x6843646573756170;
            unint64_t v17 = 0xEE00676E69677261;
            int v18 = v6[v15];
            if (!v18) {
              goto LABEL_16;
            }
          }
          else
          {
            uint64_t v16 = 0x43646570706F7473;
            unint64_t v17 = 0xEF676E6967726168;
            int v18 = v6[v15];
            if (!v18)
            {
LABEL_16:
              unint64_t v19 = 0xE800000000000000;
              if (v16 != 0x676E696772616863) {
                goto LABEL_21;
              }
              goto LABEL_19;
            }
          }
        }
        else
        {
          unint64_t v17 = 0xE800000000000000;
          uint64_t v16 = 0x676E696772616863;
          int v18 = v6[v15];
          if (!v18) {
            goto LABEL_16;
          }
        }
        if (v18 == 1)
        {
          unint64_t v19 = 0xEE00676E69677261;
          if (v16 != 0x6843646573756170) {
            goto LABEL_21;
          }
        }
        else
        {
          unint64_t v19 = 0xEF676E6967726168;
          if (v16 != 0x43646570706F7473) {
            goto LABEL_21;
          }
        }
LABEL_19:
        if (v17 == v19)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_22;
        }
LABEL_21:
        char v20 = sub_90570();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0) {
          goto LABEL_27;
        }
LABEL_22:
        char v21 = v10[*(int *)(v4 + 28)] ^ v6[*(int *)(v4 + 28)];
        sub_6EF70((uint64_t)v6, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
        sub_6EF70((uint64_t)v10, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
        if ((v21 & 1) == 0)
        {
          uint64_t v13 = v14 - 1;
          v12 += v25;
          if (v14) {
            continue;
          }
        }
        char v22 = v21 ^ 1;
        return v22 & 1;
      }
    }
    char v22 = 1;
  }
  else
  {
    char v22 = 0;
  }
  return v22 & 1;
}

uint64_t sub_6AB40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  __chkstk_darwin(v4);
  BOOL v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v19 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v17 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      while (1)
      {
        uint64_t v15 = v14;
        sub_6E8A0(a1 + v12, (uint64_t)v10, type metadata accessor for BUIChartViewData.ScreenUsageElement);
        sub_6E8A0(a2 + v12, (uint64_t)v6, type metadata accessor for BUIChartViewData.ScreenUsageElement);
        if (*v10 != *v6
          || (sub_8F120() & 1) == 0
          || *(double *)((char *)v10 + v4[6]) != *(double *)((char *)v6 + v4[6])
          || *(double *)((char *)v10 + v4[7]) != *(double *)((char *)v6 + v4[7]))
        {
          break;
        }
        char v16 = *((unsigned char *)v10 + v4[8]) ^ *((unsigned char *)v6 + v4[8]);
        sub_6EF70((uint64_t)v6, type metadata accessor for BUIChartViewData.ScreenUsageElement);
        sub_6EF70((uint64_t)v10, type metadata accessor for BUIChartViewData.ScreenUsageElement);
        if ((v16 & 1) == 0)
        {
          uint64_t v14 = v15 - 1;
          v12 += v13;
          if (v15) {
            continue;
          }
        }
        char v17 = v16 ^ 1;
        return v17 & 1;
      }
      sub_6EF70((uint64_t)v6, type metadata accessor for BUIChartViewData.ScreenUsageElement);
      sub_6EF70((uint64_t)v10, type metadata accessor for BUIChartViewData.ScreenUsageElement);
      char v17 = 0;
    }
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_6AD74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BUIChartViewData.BatteryUsageElement(0);
  __chkstk_darwin(v4);
  BOOL v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v19 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v17 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      while (1)
      {
        uint64_t v15 = v14;
        sub_6E8A0(a1 + v12, (uint64_t)v10, type metadata accessor for BUIChartViewData.BatteryUsageElement);
        sub_6E8A0(a2 + v12, (uint64_t)v6, type metadata accessor for BUIChartViewData.BatteryUsageElement);
        if (*v10 != *v6
          || (sub_8F120() & 1) == 0
          || *(double *)((char *)v10 + *(int *)(v4 + 24)) != *(double *)((char *)v6 + *(int *)(v4 + 24)))
        {
          break;
        }
        char v16 = *((unsigned char *)v10 + *(int *)(v4 + 28)) ^ *((unsigned char *)v6 + *(int *)(v4 + 28));
        sub_6EF70((uint64_t)v6, type metadata accessor for BUIChartViewData.BatteryUsageElement);
        sub_6EF70((uint64_t)v10, type metadata accessor for BUIChartViewData.BatteryUsageElement);
        if ((v16 & 1) == 0)
        {
          uint64_t v14 = v15 - 1;
          v12 += v13;
          if (v15) {
            continue;
          }
        }
        char v17 = v16 ^ 1;
        return v17 & 1;
      }
      sub_6EF70((uint64_t)v6, type metadata accessor for BUIChartViewData.BatteryUsageElement);
      sub_6EF70((uint64_t)v10, type metadata accessor for BUIChartViewData.BatteryUsageElement);
      char v17 = 0;
    }
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_6AF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_8F120() & 1) == 0
    || (sub_6AD74(*(void *)(a1 + *(int *)(a3 + 20)), *(void *)(a2 + *(int *)(a3 + 20))) & 1) == 0)
  {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a2 + v6);

  return sub_6AB40(v7, v8);
}

id sub_6B014(void *a1, uint64_t a2, uint64_t a3, void *a4, unint64_t *a5)
{
  *(void *)&v11[0] = a2;
  *((void *)&v11[0] + 1) = a3;
  swift_bridgeObjectRetain_n();
  id v7 = objc_msgSend(a1, "__swift_objectForKeyedSubscript:", sub_905A0());
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_90370();
    swift_unknownObjectRelease();
    sub_6E928(v11, v12);
    swift_bridgeObjectRelease();
    sub_6E928(v12, v11);
    sub_60788(0, a5);
    if (swift_dynamicCast())
    {
      id result = v10;
      if (v10) {
        return result;
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  return a4;
}

id sub_6B150(void *a1, uint64_t a2, void *a3)
{
  if ((uint64_t)[a1 count] <= a2
    || (id v5 = [a1 objectAtIndexedSubscript:a2],
        sub_90370(),
        swift_unknownObjectRelease(),
        sub_60788(0, &qword_D6688),
        (swift_dynamicCast() & 1) == 0)
    || (id result = v8) == 0)
  {
    return a3;
  }
  return result;
}

int *sub_6B22C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  Swift::String v175 = (char *)a2;
  v152 = a3;
  uint64_t v162 = type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  uint64_t v161 = *(void *)(v162 - 8);
  __chkstk_darwin(v162);
  uint64_t v173 = (uint64_t)&v145 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v172 = (uint64_t *)((char *)&v145 - v6);
  uint64_t v160 = type metadata accessor for BUIChartViewData.BatteryLevelsElement(0);
  uint64_t v159 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v169 = (uint64_t)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v168 = (uint64_t *)((char *)&v145 - v9);
  uint64_t v181 = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  uint64_t v156 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  uint64_t v11 = (char *)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v145 - v13;
  uint64_t v191 = sub_8F150();
  uint64_t v15 = *(void *)(v191 - 8);
  __chkstk_darwin(v191);
  v171 = (char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v167 = (char *)&v145 - v18;
  __chkstk_darwin(v19);
  char v21 = (char *)&v145 - v20;
  __chkstk_darwin(v22);
  v163 = (char *)&v145 - v23;
  __chkstk_darwin(v24);
  v190 = (char *)&v145 - v25;
  v199 = _swiftEmptyArrayStorage;
  v200 = _swiftEmptyArrayStorage;
  *(void *)&long long v197 = 0xD000000000000028;
  *((void *)&v197 + 1) = 0x80000000000A4280;
  uint64_t v26 = sub_905A0();
  id v153 = a1;
  id v27 = objc_msgSend(a1, "__swift_objectForKeyedSubscript:", v26);
  swift_unknownObjectRelease();
  if (v27)
  {
    sub_90370();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v197 = 0u;
    long long v198 = 0u;
  }
  sub_6E938((uint64_t)&v197, (uint64_t)&v194);
  id v28 = &type metadata for Any;
  if (v195)
  {
    sub_60788(0, &qword_D6688);
    if (swift_dynamicCast())
    {
      uint64_t v29 = v193;
      goto LABEL_9;
    }
  }
  else
  {
    sub_6E9A0((uint64_t)&v194);
  }
  sub_60788(0, &qword_D6688);
  uint64_t v29 = (void *)sub_90200();
LABEL_9:
  *(void *)&long long v197 = 0xD000000000000024;
  *((void *)&v197 + 1) = 0x80000000000A42B0;
  uint64_t v30 = sub_905A0();
  id v154 = v29;
  id v31 = objc_msgSend(v29, "__swift_objectForKeyedSubscript:", v30);
  swift_unknownObjectRelease();
  if (v31)
  {
    sub_90370();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v197 = 0u;
    long long v198 = 0u;
  }
  id v32 = v154;
  sub_6E938((uint64_t)&v197, (uint64_t)&v194);
  if (v195)
  {
    sub_60788(0, &qword_D6690);
    if (swift_dynamicCast())
    {
      uint64_t v33 = v193;
      goto LABEL_17;
    }
  }
  else
  {
    sub_6E9A0((uint64_t)&v194);
  }
  sub_60788(0, &qword_D6690);
  uint64_t v33 = (void *)sub_902B0();
LABEL_17:
  id v151 = v33;
  uint64_t v34 = sub_6EA00((uint64_t)v33, 0, 1, (uint64_t)v175);
  *(void *)&long long v197 = 0xD000000000000029;
  *((void *)&v197 + 1) = 0x80000000000A42E0;
  id v35 = objc_msgSend(v32, "__swift_objectForKeyedSubscript:", sub_905A0());
  swift_unknownObjectRelease();
  if (v35)
  {
    sub_90370();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v197 = 0u;
    long long v198 = 0u;
  }
  id v36 = v154;
  sub_6E938((uint64_t)&v197, (uint64_t)&v194);
  if (v195)
  {
    sub_60788(0, &qword_D6690);
    if (swift_dynamicCast())
    {
      uint64_t v37 = v193;
      goto LABEL_25;
    }
  }
  else
  {
    sub_6E9A0((uint64_t)&v194);
  }
  sub_60788(0, &qword_D6690);
  uint64_t v37 = (void *)sub_902B0();
LABEL_25:
  id v150 = v37;
  int v38 = sub_6EA00((uint64_t)v37, 1, 1, (uint64_t)v175);
  *(void *)&long long v197 = 0xD00000000000002ALL;
  *((void *)&v197 + 1) = 0x80000000000A4310;
  id v39 = objc_msgSend(v36, "__swift_objectForKeyedSubscript:", sub_905A0());
  swift_unknownObjectRelease();
  if (v39)
  {
    sub_90370();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v197 = 0u;
    long long v198 = 0u;
  }
  sub_6E938((uint64_t)&v197, (uint64_t)&v194);
  if (v195)
  {
    sub_60788(0, &qword_D6690);
    if (swift_dynamicCast())
    {
      uint64_t v40 = v193;
      goto LABEL_33;
    }
  }
  else
  {
    sub_6E9A0((uint64_t)&v194);
  }
  sub_60788(0, &qword_D6690);
  uint64_t v40 = (void *)sub_902B0();
LABEL_33:
  id v149 = v40;
  uint64_t v41 = sub_6EA00((uint64_t)v40, 2, 1, (uint64_t)v175);
  v194 = v34;
  swift_bridgeObjectRetain();
  size_t v42 = swift_bridgeObjectRetain();
  sub_6DF8C(v42);
  size_t v43 = swift_bridgeObjectRetain();
  uint64_t v146 = v41;
  sub_6DF8C(v43);
  uint64_t v165 = v194;
  *(void *)&long long v197 = 0xD00000000000001BLL;
  *((void *)&v197 + 1) = 0x80000000000A4340;
  id v44 = objc_msgSend(v153, "__swift_objectForKeyedSubscript:", sub_905A0());
  swift_unknownObjectRelease();
  if (v44)
  {
    sub_90370();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v197 = 0u;
    long long v198 = 0u;
  }
  uint64_t v45 = v163;
  sub_6E938((uint64_t)&v197, (uint64_t)&v194);
  id v184 = v11;
  v183 = v21;
  v148 = v34;
  uint64_t v147 = v38;
  if (!v195)
  {
    sub_6E9A0((uint64_t)&v194);
    goto LABEL_40;
  }
  uint64_t v46 = sub_60788(0, &qword_D6690);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_40:
    uint64_t v46 = sub_60788(0, &qword_D6690);
    uint64_t v47 = (void *)sub_902B0();
    goto LABEL_41;
  }
  uint64_t v47 = v193;
LABEL_41:
  sub_60788(0, &qword_D6690);
  uint64_t v48 = sub_60788(0, &qword_D5C80);
  uint64_t v49 = 0;
  uint64_t v50 = v165[2];
  unint64_t v187 = v15 + 16;
  v186 = (void (**)(char *, uint64_t))(v15 + 8);
  Swift::String v170 = (void **)(v15 + 32);
  uint64_t v51 = _swiftEmptyArrayStorage;
  v155 = (char *)&type metadata for Any + 8;
  uint64_t v179 = v48;
  uint64_t v164 = v46;
  uint64_t v158 = v50;
  id v157 = v47;
  do
  {
    uint64_t v52 = (void *)sub_902B0();
    id v53 = [v47 count];
    Swift::String v174 = v51;
    if (v49 < (uint64_t)v53)
    {
      id v54 = [v47 objectAtIndexedSubscript:v49];
      sub_90370();
      swift_unknownObjectRelease();
      if (swift_dynamicCast())
      {
        uint64_t v55 = (void *)v197;
        if ((void)v197)
        {

          uint64_t v52 = v55;
        }
      }
      uint64_t v51 = v174;
    }
    Class isa = sub_902E0(0).super.super.isa;
    if ((uint64_t)[v52 count] >= 1)
    {
      id v56 = [v52 objectAtIndexedSubscript:0];
      sub_90370();
      swift_unknownObjectRelease();
      if (swift_dynamicCast())
      {
        uint64_t v57 = (objc_class *)v197;
        if ((void)v197)
        {

          Class isa = v57;
        }
      }
    }
    Class v177 = sub_902E0(0).super.super.isa;
    if ((uint64_t)[v52 count] > 1)
    {
      id v58 = [v52 objectAtIndexedSubscript:1];
      sub_90370();
      swift_unknownObjectRelease();
      if (swift_dynamicCast())
      {
        uint64_t v59 = (objc_class *)v197;
        if ((void)v197)
        {

          Class v177 = v59;
        }
      }
    }
    v185 = (void (*)(char *, char *, uint64_t))sub_4B1B0();
    uint64_t v178 = v49;
    sub_8F140();
    unint64_t v60 = v187 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    id v166 = v52;
    if (v50)
    {
      unint64_t v176 = v187 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v61 = v156;
      uint64_t v62 = (uint64_t)v165
          + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
      swift_bridgeObjectRetain();
      LODWORD(v189) = 0;
      uint64_t v182 = *(void *)(v61 + 72);
      uint64_t v63 = v50;
      uint64_t v64 = (uint64_t)v184;
      uint64_t v65 = v183;
      do
      {
        sub_6E8A0(v62, (uint64_t)v14, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
        uint64_t v67 = v190;
        sub_8F0F0();
        char v68 = sub_8F0E0();
        sub_6E8A0((uint64_t)v14, v64, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
        uint64_t v69 = v191;
        v188 = *(void (**)(char *, char *, uint64_t))v187;
        v188(v65, v67, v191);
        if (v68)
        {
          int v70 = sub_8F0D0();
          unint64_t v71 = v65;
          int v72 = v70;
          uint64_t v73 = *v186;
          (*v186)(v71, v69);
          sub_6EF70(v64, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
          v73(v45, v69);
          sub_6EF70((uint64_t)v14, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
          LODWORD(v189) = v72 | v189;
        }
        else
        {
          uint64_t v66 = *v186;
          (*v186)(v65, v69);
          sub_6EF70(v64, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
          v66(v45, v69);
          sub_6EF70((uint64_t)v14, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
        }
        v62 += v182;
        --v63;
        uint64_t v64 = (uint64_t)v184;
        uint64_t v65 = v183;
      }
      while (v63);
      swift_bridgeObjectRelease();
      id v28 = &type metadata for Any;
      id v74 = v157;
      uint64_t v51 = v174;
      unint64_t v60 = v176;
      uint64_t v75 = v188;
    }
    else
    {
      id v74 = v47;
      LODWORD(v189) = 0;
      uint64_t v75 = *(void (**)(char *, char *, uint64_t))v187;
    }
    uint64_t v76 = v51;
    long long v77 = v28;
    unint64_t v176 = v60;
    v188 = v75;
    v75(v167, v190, v191);
    Class v78 = isa;
    [(objc_class *)isa doubleValue];
    double v79 = 0.0;
    if (v80 >= 0.0)
    {
      [(objc_class *)v78 doubleValue];
      if (v81 <= 100.0) {
        double v79 = v81;
      }
      else {
        double v79 = 100.0;
      }
    }
    Class v82 = v177;
    id v83 = [(objc_class *)v177 integerValue];
    [(objc_class *)v78 doubleValue];
    BOOL v85 = v84 >= 0.0;
    uint64_t v86 = v168;
    *uint64_t v168 = v178;
    uint64_t v87 = (int *)v160;
    uint64_t v88 = (char *)v86 + *(int *)(v160 + 20);
    v185 = (void (*)(char *, char *, uint64_t))*v170;
    v185(v88, v167, v191);
    *(double *)((char *)v86 + v87[6]) = v79;
    *(uint64_t *)((char *)v86 + v87[7]) = (uint64_t)v83;
    *((unsigned char *)v86 + v87[8]) = v85;
    *((unsigned char *)v86 + v87[9]) = v189 & 1;
    sub_6E8A0((uint64_t)v86, v169, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
    uint64_t v51 = v76;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v51 = (void *)sub_6DDB0(0, v76[2] + 1, 1, v76, &qword_D6310, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
    }
    unint64_t v90 = v51[2];
    unint64_t v89 = v51[3];
    id v28 = v77;
    uint64_t v91 = v178;
    if (v90 >= v89 >> 1) {
      uint64_t v51 = (void *)sub_6DDB0(v89 > 1, v90 + 1, 1, v51, &qword_D6310, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
    }
    uint64_t v47 = v74;
    uint64_t v49 = v91 + 1;
    void v51[2] = v90 + 1;
    sub_6EFD0(v169, (uint64_t)v51+ ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80))+ *(void *)(v159 + 72) * v90, type metadata accessor for BUIChartViewData.BatteryLevelsElement);

    sub_6EF70((uint64_t)v168, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
    (*v186)(v190, v191);
    uint64_t v45 = v163;
    uint64_t v50 = v158;
  }
  while (v49 != 96);
  swift_bridgeObjectRelease();
  uint64_t v92 = (void *)sub_902B0();
  v195 = &type metadata for PerfPowerServices;
  unint64_t v196 = sub_6F038();
  char v93 = sub_8F270();
  sub_3F768((uint64_t)&v194);
  *(void *)&long long v197 = 0xD00000000000001FLL;
  *((void *)&v197 + 1) = 0x80000000000A4360;
  if (v93) {
    id v94 = objc_msgSend(v154, "__swift_objectForKeyedSubscript:", sub_905A0());
  }
  else {
    id v94 = objc_msgSend(v153, "__swift_objectForKeyedSubscript:", sub_905A0());
  }
  id v95 = v94;
  swift_unknownObjectRelease();
  if (v95)
  {
    sub_90370();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v197 = 0u;
    long long v198 = 0u;
  }
  sub_6E938((uint64_t)&v197, (uint64_t)&v194);
  if (v195)
  {
    if (swift_dynamicCast())
    {
      uint64_t v96 = (char *)v193;
      goto LABEL_83;
    }
  }
  else
  {
    sub_6E9A0((uint64_t)&v194);
  }
  uint64_t v96 = (char *)sub_902B0();
LABEL_83:

  id v97 = v154;
  v200 = sub_6EA00((uint64_t)v96, 0, 0, (uint64_t)v175);
  sub_6DF8C((size_t)v148);
  *(void *)&long long v197 = 0xD000000000000025;
  *((void *)&v197 + 1) = 0x80000000000A4380;
  id v98 = objc_msgSend(v97, "__swift_objectForKeyedSubscript:", sub_905A0());
  swift_unknownObjectRelease();
  if (v98)
  {
    sub_90370();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v197 = 0u;
    long long v198 = 0u;
  }
  id v99 = v154;
  sub_6E938((uint64_t)&v197, (uint64_t)&v194);
  if (v195)
  {
    if (swift_dynamicCast())
    {
      uint64_t v100 = v193;
      goto LABEL_91;
    }
  }
  else
  {
    sub_6E9A0((uint64_t)&v194);
  }
  uint64_t v100 = (void *)sub_902B0();
LABEL_91:
  id v189 = v100;
  v199 = sub_6EA00((uint64_t)v100, 1, 0, (uint64_t)v175);
  sub_6DF8C((size_t)v147);
  v193 = _swiftEmptyArrayStorage;
  *(void *)&long long v197 = 0xD000000000000026;
  *((void *)&v197 + 1) = 0x80000000000A43B0;
  id v101 = objc_msgSend(v99, "__swift_objectForKeyedSubscript:", sub_905A0());
  swift_unknownObjectRelease();
  if (v101)
  {
    sub_90370();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v197 = 0u;
    long long v198 = 0u;
  }
  size_t v102 = (size_t)v146;
  sub_6E938((uint64_t)&v197, (uint64_t)&v194);
  if (v195)
  {
    if (swift_dynamicCast())
    {
      int64_t v103 = (int64_t)v192;
      goto LABEL_99;
    }
  }
  else
  {
    sub_6E9A0((uint64_t)&v194);
  }
  int64_t v103 = sub_902B0();
LABEL_99:
  v193 = sub_6EA00(v103, 2, 0, (uint64_t)v175);
  sub_6DF8C(v102);
  *(void *)&long long v197 = 0xD00000000000001ALL;
  *((void *)&v197 + 1) = 0x80000000000A43E0;
  id v104 = objc_msgSend(v153, "__swift_objectForKeyedSubscript:", sub_905A0());
  swift_unknownObjectRelease();
  if (v104)
  {
    sub_90370();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v197 = 0u;
    long long v198 = 0u;
  }
  sub_6E938((uint64_t)&v197, (uint64_t)&v194);
  unint64_t v187 = v103;
  if (v195)
  {
    sub_60788(0, &qword_D6688);
    if (swift_dynamicCast())
    {
      uint64_t v105 = v192;
      goto LABEL_107;
    }
  }
  else
  {
    sub_6E9A0((uint64_t)&v194);
  }
  sub_60788(0, &qword_D6688);
  uint64_t v105 = (void *)sub_90200();
LABEL_107:
  *(void *)&long long v197 = 0xD000000000000016;
  *((void *)&v197 + 1) = 0x80000000000A4400;
  id v106 = objc_msgSend(v105, "__swift_objectForKeyedSubscript:", sub_905A0());
  swift_unknownObjectRelease();
  if (v106)
  {
    sub_90370();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v197 = 0u;
    long long v198 = 0u;
  }
  sub_6E938((uint64_t)&v197, (uint64_t)&v194);
  if (v195)
  {
    if (swift_dynamicCast())
    {
      uint64_t v107 = v192;
      goto LABEL_115;
    }
  }
  else
  {
    sub_6E9A0((uint64_t)&v194);
  }
  uint64_t v107 = (void *)sub_902B0();
LABEL_115:
  *(void *)&long long v197 = 0xD00000000000001BLL;
  *((void *)&v197 + 1) = 0x80000000000A4420;
  id v108 = objc_msgSend(v153, "__swift_objectForKeyedSubscript:", sub_905A0());
  swift_unknownObjectRelease();
  if (v108)
  {
    sub_90370();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v197 = 0u;
    long long v198 = 0u;
  }
  sub_6E938((uint64_t)&v197, (uint64_t)&v194);
  if (v195)
  {
    sub_60788(0, &qword_D6688);
    if (swift_dynamicCast())
    {
      uint64_t v109 = v192;
      goto LABEL_123;
    }
  }
  else
  {
    sub_6E9A0((uint64_t)&v194);
  }
  sub_60788(0, &qword_D6688);
  uint64_t v109 = (void *)sub_90200();
LABEL_123:
  *(void *)&long long v197 = 0xD000000000000016;
  *((void *)&v197 + 1) = 0x80000000000A4400;
  uint64_t v110 = sub_905A0();
  id v184 = v109;
  id v111 = objc_msgSend(v109, "__swift_objectForKeyedSubscript:", v110);
  swift_unknownObjectRelease();
  if (v111)
  {
    sub_90370();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v197 = 0u;
    long long v198 = 0u;
  }
  sub_6E938((uint64_t)&v197, (uint64_t)&v194);
  Swift::String v174 = v51;
  v190 = v96;
  v186 = (void (**)(char *, uint64_t))v105;
  if (!v195)
  {
    sub_6E9A0((uint64_t)&v194);
    goto LABEL_130;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_130:
    uint64_t v112 = (void *)sub_902B0();
    goto LABEL_131;
  }
  uint64_t v112 = v192;
LABEL_131:
  uint64_t v113 = 0;
  uint64_t v114 = _swiftEmptyArrayStorage;
  do
  {
    v115.super.super.Class isa = sub_902E0(-1).super.super.isa;
    if (v113 < (uint64_t)[v107 count])
    {
      id v116 = [v107 objectAtIndexedSubscript:v113];
      sub_90370();
      swift_unknownObjectRelease();
      if (swift_dynamicCast())
      {
        uint64_t v117 = (objc_class *)v197;
        if ((void)v197)
        {

          v115.super.super.Class isa = v117;
        }
      }
    }
    v118.super.super.Class isa = sub_902E0(-1).super.super.isa;
    if (v113 < (uint64_t)[v112 count])
    {
      id v119 = [v112 objectAtIndexedSubscript:v113];
      sub_90370();
      swift_unknownObjectRelease();
      if (swift_dynamicCast())
      {
        uint64_t v120 = (objc_class *)v197;
        if ((void)v197)
        {

          v118.super.super.Class isa = v120;
        }
      }
    }
    [(objc_class *)v115.super.super.isa doubleValue];
    double v121 = 0.0;
    double v122 = 0.0;
    if (v123 >= 0.0)
    {
      [(objc_class *)v115.super.super.isa doubleValue];
      double v122 = v124;
    }
    [(objc_class *)v118.super.super.isa doubleValue];
    if (v125 >= 0.0)
    {
      [(objc_class *)v118.super.super.isa doubleValue];
      double v121 = v126;
    }
    uint64_t v127 = (double *)sub_4B18C();
    double v128 = *v127;
    if (*v127 >= v122) {
      double v129 = v122;
    }
    else {
      double v129 = *v127;
    }
    if (v129 < 0.0) {
      double v130 = 0.0;
    }
    else {
      double v130 = v129;
    }
    double v131 = v128 - v130;
    if (v128 - v130 >= v121) {
      double v131 = v121;
    }
    if (v131 < 0.0) {
      double v132 = 0.0;
    }
    else {
      double v132 = v131;
    }
    sub_8F140();
    [(objc_class *)v115.super.super.isa doubleValue];
    if (v133 >= 0.0)
    {
      BOOL v135 = 1;
    }
    else
    {
      [(objc_class *)v118.super.super.isa doubleValue];
      BOOL v135 = v134 >= 0.0;
    }
    uint64_t v136 = v172;
    *uint64_t v172 = v113;
    uint64_t v137 = (int *)v162;
    v185((char *)v136 + *(int *)(v162 + 20), v171, v191);
    *(double *)((char *)v136 + v137[6]) = v130;
    *(double *)((char *)v136 + v137[7]) = v132;
    *((unsigned char *)v136 + v137[8]) = v135;
    sub_6E8A0((uint64_t)v136, v173, type metadata accessor for BUIChartViewData.ScreenUsageElement);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v114 = (void *)sub_6DDB0(0, v114[2] + 1, 1, v114, &qword_D6308, type metadata accessor for BUIChartViewData.ScreenUsageElement);
    }
    unint64_t v139 = v114[2];
    unint64_t v138 = v114[3];
    if (v139 >= v138 >> 1) {
      uint64_t v114 = (void *)sub_6DDB0(v138 > 1, v139 + 1, 1, v114, &qword_D6308, type metadata accessor for BUIChartViewData.ScreenUsageElement);
    }
    ++v113;
    v114[2] = v139 + 1;
    sub_6EFD0(v173, (uint64_t)v114+ ((*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80))+ *(void *)(v161 + 72) * v139, type metadata accessor for BUIChartViewData.ScreenUsageElement);

    sub_6EF70((uint64_t)v172, type metadata accessor for BUIChartViewData.ScreenUsageElement);
  }
  while (v113 != 24);

  uint64_t v140 = v152;
  v188(v152, v175, v191);
  unint64_t v142 = v199;
  uint64_t v141 = v200;
  unint64_t v143 = v193;
  id result = (int *)type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  *(void *)&v140[result[5]] = v174;
  *(void *)&v140[result[6]] = v141;
  *(void *)&v140[result[7]] = v142;
  *(void *)&v140[result[8]] = v143;
  *(void *)&v140[result[9]] = v114;
  return result;
}

uint64_t sub_6CF04@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v76 = a1;
  uint64_t v77 = a2;
  uint64_t v62 = a3;
  uint64_t v75 = type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  unint64_t v89 = (uint64_t *)((char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v73 = type metadata accessor for BUIChartViewData.BatteryUsageElement(0);
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v88 = (uint64_t *)((char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_8F150();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v87 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v86 = (char *)&v62 - v9;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v62 - v11;
  double v84 = (double *)sub_4B198();
  uint64_t v71 = sub_60788(0, &qword_D6688);
  uint64_t v70 = sub_60788(0, &qword_D5C80);
  uint64_t v13 = 0;
  unint64_t v90 = (void (**)(char *, char *))(v6 + 16);
  char v68 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v14 = _swiftEmptyArrayStorage;
  uint64_t v67 = 0x80000000000A4440;
  uint64_t v66 = 0x80000000000A43E0;
  uint64_t v65 = 0x80000000000A4420;
  uint64_t v64 = 0x80000000000A4460;
  uint64_t v92 = _swiftEmptyArrayStorage;
  BOOL v85 = v12;
  uint64_t v69 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v63 = v5;
  do
  {
    Class v82 = v14;
    sub_8F140();
    uint64_t v15 = (void *)sub_90200();
    uint64_t v80 = v13;
    id v16 = sub_6B150(v76, v13, v15);

    Class isa = sub_902E0(0).super.super.isa;
    id v91 = sub_6B014(v16, 0xD000000000000014, v67, isa, &qword_D5C80);

    uint64_t v18 = (void *)sub_90200();
    id v19 = sub_6B014(v16, 0xD00000000000001ALL, v66, v18, &qword_D6688);

    uint64_t v20 = (void *)sub_90200();
    id v81 = v16;
    id v21 = sub_6B014(v16, 0xD00000000000001BLL, v65, v20, &qword_D6688);

    Class v22 = sub_902E0(0).super.super.isa;
    id v79 = v19;
    uint64_t v23 = v64;
    id v24 = sub_6B014(v19, 0xD000000000000015, v64, v22, &qword_D5C80);

    Class v25 = sub_902E0(0).super.super.isa;
    id v78 = v21;
    uint64_t v26 = v23;
    id v27 = v90;
    id v28 = v91;
    id v29 = sub_6B014(v21, 0xD000000000000015, v26, v25, &qword_D5C80);

    uint64_t v30 = v63;
    id v83 = *v27;
    v83(v86, v12);
    [v28 doubleValue];
    uint64_t v31 = 0;
    if (v32 >= 0.0)
    {
      [v28 doubleValue];
      uint64_t v31 = v33;
    }
    objc_msgSend(v28, "doubleValue", v62);
    BOOL v35 = v34 >= 0.0;
    id v36 = (char *)v88;
    uint64_t v37 = v80;
    *uint64_t v88 = v80;
    uint64_t v38 = v73;
    id v39 = *v69;
    (*v69)(&v36[*(int *)(v73 + 20)], v86, v30);
    *(void *)&v36[*(int *)(v38 + 24)] = v31;
    v36[*(int *)(v38 + 28)] = v35;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v92 = (void *)sub_6DDB0(0, v92[2] + 1, 1, v92, &qword_D6300, type metadata accessor for BUIChartViewData.BatteryUsageElement);
    }
    unint64_t v41 = v92[2];
    unint64_t v40 = v92[3];
    if (v41 >= v40 >> 1) {
      uint64_t v92 = (void *)sub_6DDB0(v40 > 1, v41 + 1, 1, v92, &qword_D6300, type metadata accessor for BUIChartViewData.BatteryUsageElement);
    }
    size_t v42 = v92;
    v92[2] = v41 + 1;
    sub_6EFD0((uint64_t)v88, (uint64_t)v42+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(void *)(v72 + 72) * v41, type metadata accessor for BUIChartViewData.BatteryUsageElement);
    [v24 doubleValue];
    double v43 = 0.0;
    double v44 = 0.0;
    if (v45 >= 0.0)
    {
      [v24 doubleValue];
      double v44 = v46;
    }
    [v29 doubleValue];
    if (v47 >= 0.0)
    {
      [v29 doubleValue];
      double v43 = v48;
    }
    if (*v84 >= v44) {
      double v49 = v44;
    }
    else {
      double v49 = *v84;
    }
    if (v49 < 0.0) {
      double v50 = 0.0;
    }
    else {
      double v50 = v49;
    }
    double v51 = *v84 - v50;
    if (v51 >= v43) {
      double v51 = v43;
    }
    if (v51 < 0.0) {
      double v52 = 0.0;
    }
    else {
      double v52 = v51;
    }
    ((void (*)(char *, char *, uint64_t))v83)(v87, v85, v30);
    [v24 doubleValue];
    if (v53 >= 0.0)
    {
      BOOL v55 = 1;
    }
    else
    {
      [v29 doubleValue];
      BOOL v55 = v54 >= 0.0;
    }
    id v56 = v89;
    *unint64_t v89 = v37;
    uint64_t v57 = (int *)v75;
    v39((char *)v56 + *(int *)(v75 + 20), v87, v30);
    *(double *)((char *)v56 + v57[6]) = v50;
    *(double *)((char *)v56 + v57[7]) = v52;
    *((unsigned char *)v56 + v57[8]) = v55;
    uint64_t v14 = v82;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = (void *)sub_6DDB0(0, v14[2] + 1, 1, v14, &qword_D6308, type metadata accessor for BUIChartViewData.ScreenUsageElement);
    }
    unint64_t v59 = v14[2];
    unint64_t v58 = v14[3];
    if (v59 >= v58 >> 1) {
      uint64_t v14 = (void *)sub_6DDB0(v58 > 1, v59 + 1, 1, v14, &qword_D6308, type metadata accessor for BUIChartViewData.ScreenUsageElement);
    }
    uint64_t v12 = v85;
    uint64_t v13 = v37 + 1;
    v14[2] = v59 + 1;
    sub_6EFD0((uint64_t)v89, (uint64_t)v14+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(void *)(v74 + 72) * v59, type metadata accessor for BUIChartViewData.ScreenUsageElement);

    (*v68)(v12, v30);
  }
  while (v13 != 10);
  uint64_t v60 = v62;
  ((void (*)(uint64_t, uint64_t, uint64_t))v83)(v62, v77, v30);
  uint64_t result = type metadata accessor for BUIChartViewData.DataFor10Days(0);
  *(void *)(v60 + *(int *)(result + 20)) = v92;
  *(void *)(v60 + *(int *)(result + 24)) = v14;
  return result;
}

uint64_t sub_6D7F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v39 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_8F210();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_8F150();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v35 - v13;
  __chkstk_darwin(v15);
  uint64_t v38 = (char *)&v35 - v16;
  __chkstk_darwin(v17);
  id v19 = (char *)&v35 - v18;
  uint64_t v20 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  __chkstk_darwin(v20 - 8);
  Class v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v43 = 0xD000000000000015;
  *((void *)&v43 + 1) = 0x80000000000A4480;
  uint64_t v23 = sub_905A0();
  id v41 = a1;
  id v24 = objc_msgSend(a1, "__swift_objectForKeyedSubscript:", v23);
  swift_unknownObjectRelease();
  if (v24)
  {
    sub_90370();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
  }
  sub_6E938((uint64_t)&v43, (uint64_t)v45);
  if (v46)
  {
    sub_60788(0, &qword_D6688);
    if (swift_dynamicCast())
    {
      Class v25 = v42;
      goto LABEL_9;
    }
  }
  else
  {
    sub_6E9A0((uint64_t)v45);
  }
  sub_60788(0, &qword_D6688);
  Class v25 = (void *)sub_90200();
LABEL_9:
  sub_4B198();
  sub_8F100();
  id v35 = v25;
  sub_6B22C(v25, (uint64_t)v19, v22);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v9 + 8);
  v26(v19, v8);
  uint64_t v27 = (uint64_t)v22;
  uint64_t v28 = v40;
  sub_6EFD0(v27, v40, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  *(void *)&long long v43 = 0xD000000000000014;
  *((void *)&v43 + 1) = 0x80000000000A44A0;
  id v29 = objc_msgSend(v41, "__swift_objectForKeyedSubscript:", sub_905A0());
  swift_unknownObjectRelease();
  if (v29)
  {
    sub_90370();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
  }
  sub_6E938((uint64_t)&v43, (uint64_t)v45);
  if (!v46)
  {
    sub_6E9A0((uint64_t)v45);
    goto LABEL_16;
  }
  sub_60788(0, &qword_D6690);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    sub_60788(0, &qword_D6690);
    uint64_t v30 = (void *)sub_902B0();
    goto LABEL_17;
  }
  uint64_t v30 = v42;
LABEL_17:
  sub_8F100();
  sub_8F1E0();
  sub_8F1A0();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v37);
  sub_8F120();
  uint64_t v31 = (uint64_t)v38;
  sub_8F140();
  uint64_t v32 = v39;
  sub_6CF04(v30, v31, v39);

  v26(v11, v8);
  v26(v14, v8);
  v26((char *)v31, v8);
  uint64_t v33 = type metadata accessor for BUIChartViewData(0);
  return sub_6EFD0(v32, v28 + *(int *)(v33 + 20), type metadata accessor for BUIChartViewData.DataFor10Days);
}

size_t sub_6DDB0(size_t result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  char v8 = result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_3ED90(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_29;
  }
  void v16[2] = v11;
  void v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  uint64_t v18 = *(void *)(a6(0) - 8);
  if (v8)
  {
    if (v16 < a4
      || (unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(void *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v16;
}

size_t sub_6DF8C(size_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = sub_6DDB0(result, v11, 1, v3, &qword_D6B18, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
  uint64_t v3 = (void *)result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = (v3[3] >> 1) - v3[2];
  uint64_t result = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  if (v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = v3[2];
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    void v3[2] = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_6E0D0(void *a1, void *a2)
{
  if (*a1 == *a2
    && (int64_t v4 = (int *)type metadata accessor for BUIChartViewData.ScreenUsageLongFormElement(0), (sub_8F120() & 1) != 0)
    && *(double *)((char *)a1 + v4[6]) == *(double *)((char *)a2 + v4[6]))
  {
    uint64_t v5 = v4[7];
    int v6 = *((unsigned __int8 *)a1 + v5);
    int v7 = *((unsigned __int8 *)a2 + v5);
    if (v6) {
      uint64_t v8 = 0x664F6E6565726373;
    }
    else {
      uint64_t v8 = 0x6E4F6E6565726373;
    }
    if (v6) {
      unint64_t v9 = 0xE900000000000066;
    }
    else {
      unint64_t v9 = 0xE800000000000000;
    }
    if (v7) {
      uint64_t v10 = 0x664F6E6565726373;
    }
    else {
      uint64_t v10 = 0x6E4F6E6565726373;
    }
    if (v7) {
      unint64_t v11 = 0xE900000000000066;
    }
    else {
      unint64_t v11 = 0xE800000000000000;
    }
    if (v8 == v10 && v9 == v11)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v13 = sub_90570();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v14 = 0;
      if ((v13 & 1) == 0) {
        return v14 & 1;
      }
    }
    char v14 = *((unsigned char *)a1 + v4[8]) ^ *((unsigned char *)a2 + v4[8]) ^ 1;
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_6E208(void *a1, void *a2)
{
  if (*a1 == *a2
    && (int64_t v4 = (int *)type metadata accessor for BUIChartViewData.ScreenUsageElement(0), (sub_8F120() & 1) != 0)
    && *(double *)((char *)a1 + v4[6]) == *(double *)((char *)a2 + v4[6])
    && *(double *)((char *)a1 + v4[7]) == *(double *)((char *)a2 + v4[7]))
  {
    char v5 = *((unsigned char *)a1 + v4[8]) ^ *((unsigned char *)a2 + v4[8]) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_6E2B4(void *a1, void *a2)
{
  if (*a1 == *a2
    && (int64_t v4 = (int *)type metadata accessor for BUIChartViewData.BatteryLevelsElement(0), (sub_8F120() & 1) != 0)
    && *(double *)((char *)a1 + v4[6]) == *(double *)((char *)a2 + v4[6])
    && *(void *)((char *)a1 + v4[7]) == *(void *)((char *)a2 + v4[7])
    && *((unsigned __int8 *)a1 + v4[8]) == *((unsigned __int8 *)a2 + v4[8]))
  {
    char v5 = *((unsigned char *)a1 + v4[9]) ^ *((unsigned char *)a2 + v4[9]) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t type metadata accessor for BUIChartViewData.ScreenUsageElement(uint64_t a1)
{
  return sub_609EC(a1, (uint64_t *)&unk_D9A90);
}

uint64_t type metadata accessor for BUIChartViewData.ScreenUsageLongFormElement(uint64_t a1)
{
  return sub_609EC(a1, (uint64_t *)&unk_D9AA0);
}

uint64_t sub_6E3B4(uint64_t a1, uint64_t a2)
{
  if ((sub_8F120() & 1) == 0) {
    return 0;
  }
  int64_t v4 = (int *)type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  if ((sub_6A5A0(*(void *)(a1 + v4[5]), *(void *)(a2 + v4[5])) & 1) == 0
    || (sub_6A7E8(*(void *)(a1 + v4[6]), *(void *)(a2 + v4[6])) & 1) == 0
    || (sub_6A7E8(*(void *)(a1 + v4[7]), *(void *)(a2 + v4[7])) & 1) == 0
    || (sub_6A7E8(*(void *)(a1 + v4[8]), *(void *)(a2 + v4[8])) & 1) == 0)
  {
    return 0;
  }
  uint64_t v5 = v4[9];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a2 + v5);

  return sub_6AB40(v6, v7);
}

uint64_t sub_6E474(void *a1, void *a2)
{
  if (*a1 == *a2
    && (uint64_t v4 = type metadata accessor for BUIChartViewData.BatteryUsageElement(0), (sub_8F120() & 1) != 0)
    && *(double *)((char *)a1 + *(int *)(v4 + 24)) == *(double *)((char *)a2 + *(int *)(v4 + 24)))
  {
    char v5 = *((unsigned char *)a1 + *(int *)(v4 + 28)) ^ *((unsigned char *)a2 + *(int *)(v4 + 28)) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_6E50C(uint64_t a1, uint64_t a2)
{
  if ((sub_8F120() & 1) == 0
    || (uint64_t v4 = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0), (sub_8F120() & 1) == 0))
  {
    char v11 = 0;
    return v11 & 1;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  int v6 = *(unsigned __int8 *)(a1 + v5);
  int v7 = *(unsigned __int8 *)(a2 + v5);
  if (!v6)
  {
    unint64_t v9 = 0xE800000000000000;
    uint64_t v8 = 0x676E696772616863;
    if (!v7) {
      goto LABEL_13;
    }
LABEL_6:
    if (v7 == 1)
    {
      unint64_t v10 = 0xEE00676E69677261;
      if (v8 != 0x6843646573756170) {
        goto LABEL_18;
      }
    }
    else
    {
      unint64_t v10 = 0xEF676E6967726168;
      if (v8 != 0x43646570706F7473) {
        goto LABEL_18;
      }
    }
LABEL_16:
    if (v9 == v10)
    {
      swift_bridgeObjectRelease_n();
LABEL_19:
      char v11 = *(unsigned char *)(a1 + *(int *)(v4 + 28)) ^ *(unsigned char *)(a2 + *(int *)(v4 + 28)) ^ 1;
      return v11 & 1;
    }
    goto LABEL_18;
  }
  if (v6 != 1)
  {
    uint64_t v8 = 0x43646570706F7473;
    unint64_t v9 = 0xEF676E6967726168;
    if (!v7) {
      goto LABEL_13;
    }
    goto LABEL_6;
  }
  uint64_t v8 = 0x6843646573756170;
  unint64_t v9 = 0xEE00676E69677261;
  if (v7) {
    goto LABEL_6;
  }
LABEL_13:
  unint64_t v10 = 0xE800000000000000;
  if (v8 == 0x676E696772616863) {
    goto LABEL_16;
  }
LABEL_18:
  char v12 = sub_90570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v11 = 0;
  if (v12) {
    goto LABEL_19;
  }
  return v11 & 1;
}

BOOL sub_6E6CC(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (sub_8F120())
  {
    uint64_t v4 = (int *)type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
    if ((sub_6A5A0(*(void *)(a1 + v4[5]), *(void *)(a2 + v4[5])) & 1) != 0
      && (sub_6A7E8(*(void *)(a1 + v4[6]), *(void *)(a2 + v4[6])) & 1) != 0
      && (sub_6A7E8(*(void *)(a1 + v4[7]), *(void *)(a2 + v4[7])) & 1) != 0
      && (sub_6A7E8(*(void *)(a1 + v4[8]), *(void *)(a2 + v4[8])) & 1) != 0
      && (sub_6AB40(*(void *)(a1 + v4[9]), *(void *)(a2 + v4[9])) & 1) != 0)
    {
      uint64_t v5 = *(int *)(type metadata accessor for BUIChartViewData(0) + 20);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      if (sub_8F120())
      {
        uint64_t v8 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
        if ((sub_6AD74(*(void *)(v6 + *(int *)(v8 + 20)), *(void *)(v7 + *(int *)(v8 + 20))) & 1) != 0
          && (sub_6AB40(*(void *)(v6 + *(int *)(v8 + 24)), *(void *)(v7 + *(int *)(v8 + 24))) & 1) != 0)
        {
          return 1;
        }
      }
    }
  }
  return result;
}

uint64_t sub_6E7D4(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_C0C90;
  v6._object = a2;
  unint64_t v4 = sub_90540(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t type metadata accessor for BUIChartViewData.ChargingIntervalElement(uint64_t a1)
{
  return sub_609EC(a1, (uint64_t *)&unk_D9AB0);
}

uint64_t type metadata accessor for BUIChartViewData.BatteryUsageElement(uint64_t a1)
{
  return sub_609EC(a1, (uint64_t *)&unk_D9AC0);
}

uint64_t type metadata accessor for BUIChartViewData.DataFor24Hrs(uint64_t a1)
{
  return sub_609EC(a1, (uint64_t *)&unk_D9AD0);
}

uint64_t type metadata accessor for BUIChartViewData.DataFor10Days(uint64_t a1)
{
  return sub_609EC(a1, qword_D9AE0);
}

uint64_t sub_6E8A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for BUIChartViewData(uint64_t a1)
{
  return sub_609EC(a1, (uint64_t *)&unk_D9A70);
}

_OWORD *sub_6E928(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_6E938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3ED90(&qword_D5C78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_6E9A0(uint64_t a1)
{
  uint64_t v2 = sub_3ED90(&qword_D5C78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_6EA00(uint64_t a1, int a2, char a3, uint64_t a4)
{
  uint64_t v42 = a4;
  int v41 = a2;
  uint64_t v40 = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  uint64_t v5 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = sub_8F090();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_902C0();
  sub_8F080();
  if (v47)
  {
    uint64_t v32 = v5;
    int v36 = a3 & 1;
    unint64_t v15 = _swiftEmptyArrayStorage;
    do
    {
      while (1)
      {
        sub_6E928(&v46, &v45);
        sub_60788(0, &qword_D6690);
        if (swift_dynamicCast()) {
          break;
        }
        sub_8F080();
        if (!v47) {
          goto LABEL_26;
        }
      }
      uint64_t v37 = v12;
      uint64_t v38 = v11;
      uint64_t v16 = v44;
      sub_60788(0, &qword_D5C80);
      Class isa = sub_902E0(0).super.super.isa;
      id v17 = [v16 count];
      double v34 = v7;
      if ((uint64_t)v17 >= 1)
      {
        id v18 = [v16 objectAtIndexedSubscript:0];
        sub_90370();
        swift_unknownObjectRelease();
        if (swift_dynamicCast())
        {
          unint64_t v19 = v16;
          uint64_t v20 = (objc_class *)v44;
          if (v44)
          {

            Class isa = v20;
          }
          uint64_t v16 = v19;
        }
      }
      v21.super.super.Class isa = sub_902E0(0).super.super.isa;
      id v22 = [v16 count];
      id v35 = v16;
      uint64_t v33 = v15;
      if ((uint64_t)v22 > 1
        && (id v23 = [v16 objectAtIndexedSubscript:1],
            sub_90370(),
            swift_unknownObjectRelease(),
            swift_dynamicCast())
        && (id v24 = (objc_class *)v44) != 0)
      {

        Class v39 = v24;
      }
      else
      {
        Class v39 = v21.super.super.isa;
      }
      Class v25 = isa;
      [(objc_class *)isa doubleValue];
      sub_8F140();
      Class v26 = v39;
      [(objc_class *)v39 doubleValue];
      uint64_t v27 = v40;
      sub_8F140();
      v10[*(int *)(v27 + 24)] = v41;
      v10[*(int *)(v27 + 28)] = v36;
      if (sub_8F0D0())
      {
        uint64_t v7 = v34;
        sub_6E8A0((uint64_t)v10, (uint64_t)v34, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
        unint64_t v15 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v15 = (void *)sub_6DDB0(0, v15[2] + 1, 1, v15, &qword_D6B18, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
        }
        Class v28 = v39;
        unint64_t v30 = v15[2];
        unint64_t v29 = v15[3];
        if (v30 >= v29 >> 1) {
          unint64_t v15 = (void *)sub_6DDB0(v29 > 1, v30 + 1, 1, v15, &qword_D6B18, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
        }
        v15[2] = v30 + 1;
        sub_6EFD0((uint64_t)v7, (uint64_t)v15+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v30, type metadata accessor for BUIChartViewData.ChargingIntervalElement);

        sub_6EF70((uint64_t)v10, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
      }
      else
      {
        sub_6EF70((uint64_t)v10, type metadata accessor for BUIChartViewData.ChargingIntervalElement);

        unint64_t v15 = v33;
        uint64_t v7 = v34;
      }
      sub_8F080();
      uint64_t v12 = v37;
      uint64_t v11 = v38;
    }
    while (v47);
  }
  else
  {
    unint64_t v15 = _swiftEmptyArrayStorage;
  }
LABEL_26:
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v15;
}

uint64_t sub_6EF70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_6EFD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_6F038()
{
  unint64_t result = qword_D6698;
  if (!qword_D6698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6698);
  }
  return result;
}

unint64_t sub_6F090()
{
  unint64_t result = qword_D66A0;
  if (!qword_D66A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D66A0);
  }
  return result;
}

void *sub_6F0E4()
{
  return &protocol witness table for Int;
}

unint64_t sub_6F0F4()
{
  unint64_t result = qword_D66A8;
  if (!qword_D66A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D66A8);
  }
  return result;
}

unint64_t sub_6F14C()
{
  unint64_t result = qword_D66B0;
  if (!qword_D66B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D66B0);
  }
  return result;
}

unint64_t sub_6F1A4()
{
  unint64_t result = qword_D66B8;
  if (!qword_D66B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D66B8);
  }
  return result;
}

unint64_t sub_6F1FC()
{
  unint64_t result = qword_D6338;
  if (!qword_D6338)
  {
    sub_8F150();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6338);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PerfPowerServices(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for PerfPowerServices(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x6F344);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t variable initialization expression of PLBUIChartViewController.isUpdating()
{
  return 0;
}

ValueMetadata *type metadata accessor for PerfPowerServices()
{
  return &type metadata for PerfPowerServices;
}

char *sub_6F384(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_8F150();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = (int *)type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
    *(void *)&a1[v9[5]] = *(uint64_t *)((char *)a2 + v9[5]);
    *(void *)&a1[v9[6]] = *(uint64_t *)((char *)a2 + v9[6]);
    *(void *)&a1[v9[7]] = *(uint64_t *)((char *)a2 + v9[7]);
    *(void *)&a1[v9[8]] = *(uint64_t *)((char *)a2 + v9[8]);
    *(void *)&a1[v9[9]] = *(uint64_t *)((char *)a2 + v9[9]);
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = (char *)a2 + v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8(v11, v12, v7);
    uint64_t v13 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
    *(void *)&v11[*(int *)(v13 + 20)] = *(void *)&v12[*(int *)(v13 + 20)];
    *(void *)&v11[*(int *)(v13 + 24)] = *(void *)&v12[*(int *)(v13 + 24)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_6F520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8F150();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(a1 + *(int *)(a2 + 20), v4);
  type metadata accessor for BUIChartViewData.DataFor10Days(0);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_6F624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  *(void *)(a1 + v8[5]) = *(void *)(a2 + v8[5]);
  *(void *)(a1 + v8[6]) = *(void *)(a2 + v8[6]);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  *(void *)(a1 + v8[9]) = *(void *)(a2 + v8[9]);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v10, v11, v6);
  uint64_t v12 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(v10 + *(int *)(v12 + 24)) = *(void *)(v11 + *(int *)(v12 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_6F770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  *(void *)(a1 + v8[5]) = *(void *)(a2 + v8[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[6]) = *(void *)(a2 + v8[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[9]) = *(void *)(a2 + v8[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, v11, v6);
  uint64_t v12 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + *(int *)(v12 + 24)) = *(void *)(v11 + *(int *)(v12 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_6F8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  *(void *)(a1 + v8[5]) = *(void *)(a2 + v8[5]);
  *(void *)(a1 + v8[6]) = *(void *)(a2 + v8[6]);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  *(void *)(a1 + v8[9]) = *(void *)(a2 + v8[9]);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, v11, v6);
  uint64_t v12 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  *(void *)(v10 + *(int *)(v12 + 24)) = *(void *)(v11 + *(int *)(v12 + 24));
  return a1;
}

uint64_t sub_6F9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  *(void *)(a1 + v8[5]) = *(void *)(a2 + v8[5]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[6]) = *(void *)(a2 + v8[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[9]) = *(void *)(a2 + v8[9]);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, v11, v6);
  uint64_t v12 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
  *(void *)(v10 + *(int *)(v12 + 20)) = *(void *)(v11 + *(int *)(v12 + 20));
  swift_bridgeObjectRelease();
  *(void *)(v10 + *(int *)(v12 + 24)) = *(void *)(v11 + *(int *)(v12 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_6FB44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_6FB58);
}

uint64_t sub_6FB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_6FC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6FC64);
}

uint64_t sub_6FC64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for BUIChartViewData.DataFor10Days(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_6FD68()
{
  uint64_t result = type metadata accessor for BUIChartViewData.DataFor24Hrs(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for BUIChartViewData.DataFor10Days(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_6FE30(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_8F150();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *(void *)((char *)v4 + v11) = *(void *)((char *)a2 + v11);
    uint64_t v12 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)v4 + v12) = *((unsigned char *)a2 + v12);
  }
  return v4;
}

void *sub_6FF38(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

void *sub_6FFEC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

void *sub_700A8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

void *sub_7015C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

uint64_t sub_70210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_70224);
}

uint64_t sub_70228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7023C);
}

uint64_t sub_70240()
{
  uint64_t result = sub_8F150();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_702EC(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_8F150();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *(void *)((char *)v4 + v11) = *(void *)((char *)a2 + v11);
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return v4;
}

void *sub_703E8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_70494(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_70544(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_705F0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_7069C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_706B0);
}

uint64_t sub_706B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_70788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7079C);
}

uint64_t sub_707A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_8F150();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 32)) = a2 + 1;
  }
  return result;
}

uint64_t sub_70860()
{
  return sub_70DD4();
}

void *sub_70870(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_8F150();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)v4 + v11) = *((unsigned char *)a2 + v11);
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return v4;
}

void *sub_7096C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_70A18(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_70AC8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_70B74(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_70C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_70C34);
}

uint64_t sub_70C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 2) {
      return v12 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_70CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_70D08);
}

uint64_t sub_70D08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_8F150();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

uint64_t sub_70DC8()
{
  return sub_70DD4();
}

uint64_t sub_70DD4()
{
  uint64_t result = sub_8F150();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for BUIChartViewData.ScreenUsageLongFormElement.Kind()
{
  return &type metadata for BUIChartViewData.ScreenUsageLongFormElement.Kind;
}

void *sub_70EA0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_8F150();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  }
  return a1;
}

uint64_t sub_70F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8F150();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);

  return v7(v5, v4);
}

uint64_t sub_7103C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_710E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_71198(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_71244(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_712F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_71304);
}

uint64_t sub_71304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_713C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_713D4);
}

uint64_t sub_713D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_8F150();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

uint64_t sub_71490()
{
  uint64_t result = sub_8F150();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BUIChartViewData.ChargingIntervalElement.IntervalType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BUIChartViewData.ChargingIntervalElement.IntervalType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x7168CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BUIChartViewData.ChargingIntervalElement.IntervalType()
{
  return &type metadata for BUIChartViewData.ChargingIntervalElement.IntervalType;
}

unsigned char *_s14BatteryUsageUI16BUIChartViewDataV23ChargingIntervalElementV13ChargingSpeedOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x71790);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BUIChartViewData.ChargingIntervalElement.ChargingSpeed()
{
  return &type metadata for BUIChartViewData.ChargingIntervalElement.ChargingSpeed;
}

void *sub_717C8(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    void *v4 = *a2;
    unsigned int v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_8F150();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)v4 + v11) = *((unsigned char *)a2 + v11);
  }
  return v4;
}

uint64_t sub_718B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_8F150();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_71920(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  int v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  return a1;
}

void *sub_719C0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  int v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *sub_71A64(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  int v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  return a1;
}

void *sub_71B04(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  int v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F150();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  return a1;
}

uint64_t sub_71BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_71BB8);
}

uint64_t sub_71BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_71C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_71CA0);
}

uint64_t sub_71CA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_8F150();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

uint64_t sub_71D60()
{
  uint64_t result = sub_8F150();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_71E08(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_8F150();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_71F28(uint64_t a1)
{
  uint64_t v2 = sub_8F150();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_71FCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_7209C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_72198(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_7223C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_72310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_72324);
}

uint64_t sub_72328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7233C);
}

uint64_t sub_72340()
{
  uint64_t result = sub_8F150();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_723E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_8F150();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_724C0(uint64_t a1)
{
  uint64_t v2 = sub_8F150();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_72540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_725D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_72678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_726FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_72794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_727A8);
}

uint64_t sub_727AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_7286C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_72880);
}

uint64_t sub_72884(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_8F150();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_72940()
{
  uint64_t result = sub_8F150();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Battery24HrBatteryLevelChart(uint64_t a1)
{
  return sub_609EC(a1, (uint64_t *)&unk_D9E90);
}

uint64_t sub_72A0C@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = sub_3ED90(&qword_D6360);
  __chkstk_darwin(v4);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_54628();
  swift_beginAccess();
  *(void *)(a1 + 24) = *v7;
  uint64_t v8 = (int *)type metadata accessor for Battery24HrBatteryLevelChart(0);
  uint64_t v9 = (uint64_t *)(a1 + v8[7]);
  *uint64_t v9 = swift_getKeyPath();
  sub_3ED90(&qword_D6358);
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a1 + v8[8]) = 0;
  *(void *)(a1 + v8[10]) = &off_C0F78;
  *(void *)(a1 + v8[11]) = 0x4049000000000000;
  type metadata accessor for BUIChartViewModel(0);
  sub_7D8A0(&qword_D5B80, (void (*)(uint64_t))type metadata accessor for BUIChartViewModel);
  swift_retain();
  swift_retain();
  *(void *)a1 = sub_8F780();
  *(void *)(a1 + 8) = v10;
  *(double *)(a1 + 16) = a2;
  double v11 = *(double *)(*(void *)(a1 + 24) + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_naturalLabelHeight);
  uint64_t v12 = swift_retain();
  sub_85F04(v12, 0, (uint64_t)v18, a2, v11);
  uint64_t v13 = a1 + v8[9];
  long long v14 = v18[1];
  *(_OWORD *)uint64_t v13 = v18[0];
  *(_OWORD *)(v13 + 16) = v14;
  *(unsigned char *)(v13 + 32) = v19;
  sub_8612C();
  uint64_t v15 = a1 + v8[12];
  sub_4AC40(&qword_D6368, &qword_D6360);
  sub_8230C((uint64_t)&off_C0F78, (uint64_t)v6, v4, v15, 50.0);
  return swift_release();
}

uint64_t sub_72C48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3ED90(&qword_D6B78);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_3ED90(&qword_D6B20);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v19 - v14;
  sub_72EC0((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_4AE2C((uint64_t)v8, &qword_D6B78);
    char v16 = 1;
  }
  else
  {
    sub_4AC84((uint64_t)v8, (uint64_t)v15, &qword_D6B20);
    char v17 = sub_8F0E0();
    sub_7C49C(a2, (uint64_t)v5, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
    sub_4ACE8((uint64_t)v15, (uint64_t)v12, &qword_D6B20);
    if (v17) {
      char v16 = sub_8F0D0();
    }
    else {
      char v16 = 0;
    }
    sub_4AE2C((uint64_t)v12, &qword_D6B20);
    sub_7C43C((uint64_t)v5, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
    sub_4AE2C((uint64_t)v15, &qword_D6B20);
  }
  return v16 & 1;
}

uint64_t sub_72EC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v51 = sub_3ED90(&qword_D6638);
  __chkstk_darwin(v51);
  double v52 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  double v49 = (char *)&v44 - v4;
  uint64_t v5 = sub_3ED90(&qword_D6B20);
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  __chkstk_darwin(v5);
  double v50 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_8F150();
  uint64_t v14 = *(void **)(v13 - 8);
  __chkstk_darwin(v13);
  char v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v44 - v18;
  uint64_t v20 = *(void *)(v1 + 8);
  NSNumber v21 = *(void (**)(uint64_t))(*(void *)v20 + 240);
  uint64_t v22 = swift_retain();
  v21(v22);
  char v24 = v23;
  swift_release();
  if (v24)
  {
    uint64_t v41 = v54;
    uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
    uint64_t v43 = v55;
    return v42(v43, 1, 1, v41);
  }
  else
  {
    Class v25 = *(void (**)(uint64_t))(*(void *)v20 + 136);
    uint64_t v26 = swift_retain();
    v25(v26);
    swift_release();
    sub_7C49C((uint64_t)v12, (uint64_t)v9, type metadata accessor for BUIChartViewData.DataFor24Hrs);
    sub_7C43C((uint64_t)v12, type metadata accessor for BUIChartViewData);
    double v48 = (void (*)(char *, char *, uint64_t))v14[2];
    v48(v16, v9, v13);
    sub_7C43C((uint64_t)v9, type metadata accessor for BUIChartViewData.DataFor24Hrs);
    sub_4B18C();
    sub_8F140();
    uint64_t v27 = (void (*)(char *, uint64_t))v14[1];
    v27(v16, v13);
    sub_8F140();
    sub_7D8A0((unint64_t *)&qword_D5B50, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = sub_8FFD0();
    if (result)
    {
      long long v46 = v14 + 1;
      uint64_t v47 = v27;
      uint64_t v29 = v51;
      unint64_t v30 = v49;
      uint64_t v31 = &v49[*(int *)(v51 + 48)];
      uint64_t v32 = (void (*)(char *, char *, uint64_t))v14[4];
      v32(v49, v19, v13);
      long long v45 = v31;
      v32(v31, v16, v13);
      uint64_t v33 = v52;
      double v34 = &v52[*(int *)(v29 + 48)];
      id v35 = v48;
      v48(v52, v30, v13);
      v35(v34, v31, v13);
      uint64_t v36 = (uint64_t)v50;
      v32(v50, v33, v13);
      uint64_t v37 = v47;
      v47(v34, v13);
      uint64_t v38 = &v33[*(int *)(v29 + 48)];
      v32(v33, v30, v13);
      v32(v38, v45, v13);
      uint64_t v39 = v54;
      v32((char *)(v36 + *(int *)(v54 + 36)), v38, v13);
      v37(v33, v13);
      uint64_t v40 = v55;
      sub_4AC84(v36, v55, &qword_D6B20);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v40, 0, 1, v39);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_73468(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  if (*(unsigned char *)(a1 + *(int *)(v3 + 24)))
  {
    BOOL v4 = sub_69B6C(*(unsigned __int8 *)(a1 + *(int *)(v3 + 28)), 1);
    uint64_t v5 = *(void *)(v1 + 24);
    if (v4) {
      uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_slowChargingIntervalBackgroundColor);
    }
    else {
      uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_intervalShadeColor);
    }
  }
  else
  {
    if (sub_69B6C(*(unsigned __int8 *)(a1 + *(int *)(v3 + 28)), 1)) {
      uint64_t v7 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_slowChargingColor;
    }
    else {
      uint64_t v7 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_intervalColor;
    }
    uint64_t v6 = *(void *)(*(void *)(v1 + 24) + *v7);
  }
  swift_retain();
  swift_retain();
  return v6;
}

uint64_t sub_73548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  uint64_t v5 = type metadata accessor for Battery24HrBatteryLevelChart(0);
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v23 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(uint64_t))(**(void **)(v2 + 8) + 136);
  uint64_t v15 = swift_retain();
  v14(v15);
  swift_release();
  sub_7C49C((uint64_t)v9, (uint64_t)v13, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  sub_7C43C((uint64_t)v9, type metadata accessor for BUIChartViewData);
  uint64_t v16 = *(void *)&v13[*(int *)(v11 + 32)];
  swift_bridgeObjectRetain();
  sub_7C43C((uint64_t)v13, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  uint64_t v29 = v16;
  sub_7C49C(v3, (uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Battery24HrBatteryLevelChart);
  unint64_t v17 = (*(unsigned __int8 *)(v23 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  sub_7D7B8((uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for Battery24HrBatteryLevelChart);
  swift_retain();
  sub_3ED90(&qword_D6B28);
  sub_8F150();
  sub_3ED90(&qword_D6B30);
  sub_4AC40(&qword_D6B38, &qword_D6B28);
  uint64_t v19 = sub_429E0(&qword_D6B40);
  uint64_t v25 = sub_8F3E0();
  uint64_t v26 = &type metadata for Color;
  uint64_t v27 = &protocol witness table for RectangleMark;
  Class v28 = &protocol witness table for Color;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v25 = v19;
  uint64_t v26 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_7D8A0(&qword_D6B48, (void (*)(uint64_t))type metadata accessor for BUIChartViewData.ChargingIntervalElement);
  return sub_8FE60();
}

uint64_t sub_738FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v76 = sub_3ED90(&qword_D6638);
  __chkstk_darwin(v76);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v65 = (char *)&v62 - v10;
  uint64_t v11 = sub_8F150();
  uint64_t v12 = *(void **)(v11 - 8);
  __chkstk_darwin(v11);
  id v78 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v77 = (char *)&v62 - v15;
  uint64_t v63 = sub_3ED90(&qword_D6B20);
  __chkstk_darwin(v63);
  unint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v62 - v19;
  uint64_t v21 = sub_8F3E0();
  uint64_t v68 = *(void *)(v21 - 8);
  uint64_t v69 = v21;
  __chkstk_darwin(v21);
  uint64_t v67 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_3ED90(&qword_D6B40);
  uint64_t v71 = *(void *)(v23 - 8);
  uint64_t v72 = v23;
  __chkstk_darwin(v23);
  uint64_t v70 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  BOOL v26 = sub_69B6C(*(unsigned __int8 *)(a1 + *(int *)(v25 + 28)), 1);
  uint64_t v73 = a3;
  uint64_t v74 = a4;
  uint64_t v66 = v20;
  uint64_t v64 = v17;
  if (v26)
  {
    uint64_t v27 = *(void *)(a3 + 24);
    swift_retain();
    char v28 = sub_8FCF0();
    swift_release();
    uint64_t v29 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_slowChargingIntervalBackgroundColor;
    if ((v28 & 1) == 0) {
      uint64_t v29 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_intervalShadeGrayColor;
    }
    uint64_t v30 = *(void *)(v27 + *v29);
    uint64_t v31 = (void (*)(char *, uint64_t, uint64_t))v12[2];
    v31(v77, a1, v11);
    v31(v78, a1 + *(int *)(v25 + 20), v11);
    sub_7D8A0((unint64_t *)&qword_D5B50, (void (*)(uint64_t))&type metadata accessor for Date);
    swift_retain();
    uint64_t result = sub_8FFD0();
    if (result)
    {
      uint64_t v75 = v30;
      uint64_t v33 = v8;
      uint64_t v34 = v76;
      id v35 = v65;
      uint64_t v36 = &v65[*(int *)(v76 + 48)];
      uint64_t v37 = (void (*)(char *, char *, uint64_t))v12[4];
      v37(v65, v77, v11);
      uint64_t v62 = v36;
      v37(v36, v78, v11);
      uint64_t v38 = &v33[*(int *)(v34 + 48)];
      v31(v33, (uint64_t)v35, v11);
      v31(v38, (uint64_t)v36, v11);
      uint64_t v39 = (uint64_t)v64;
      v37(v64, v33, v11);
      uint64_t v40 = (void (*)(char *, uint64_t))v12[1];
      v40(v38, v11);
      uint64_t v41 = &v33[*(int *)(v76 + 48)];
      v37(v33, v35, v11);
      v37(v41, v62, v11);
      v37((char *)(v39 + *(int *)(v63 + 36)), v41, v11);
      v40(v33, v11);
      uint64_t v42 = (uint64_t)v66;
      sub_4AC84(v39, (uint64_t)v66, &qword_D6B20);
      uint64_t v43 = v67;
      sub_741C8();
      sub_4AE2C(v42, &qword_D6B20);
      uint64_t v79 = v75;
      uint64_t v45 = v69;
      uint64_t v44 = v70;
      sub_8F360();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v43, v45);
      uint64_t v79 = v45;
      uint64_t v80 = &type metadata for Color;
      id v81 = &protocol witness table for RectangleMark;
      Class v82 = &protocol witness table for Color;
      swift_getOpaqueTypeConformance2();
      uint64_t v46 = v72;
      sub_8F390();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v44, v46);
    }
    __break(1u);
  }
  else
  {
    uint64_t v47 = (void (*)(char *, uint64_t, uint64_t))v12[2];
    v47(v77, a1, v11);
    v47(v78, a1 + *(int *)(v25 + 20), v11);
    sub_7D8A0((unint64_t *)&qword_D5B50, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = sub_8FFD0();
    if (result)
    {
      double v48 = v8;
      uint64_t v49 = v76;
      double v50 = v65;
      uint64_t v51 = (void (*)(char *, char *, uint64_t))v47;
      double v52 = &v65[*(int *)(v76 + 48)];
      uint64_t v53 = (void (*)(char *, char *, uint64_t))v12[4];
      v53(v65, v77, v11);
      uint64_t v62 = v52;
      v53(v52, v78, v11);
      uint64_t v54 = &v48[*(int *)(v49 + 48)];
      v51(v48, v50, v11);
      v51(v54, v52, v11);
      uint64_t v55 = (uint64_t)v64;
      v53(v64, v48, v11);
      id v56 = (void (*)(char *, uint64_t))v12[1];
      v56(v54, v11);
      uint64_t v57 = v56;
      unint64_t v58 = &v48[*(int *)(v76 + 48)];
      v53(v48, v50, v11);
      v53(v58, v62, v11);
      v53((char *)(v55 + *(int *)(v63 + 36)), v58, v11);
      v57(v48, v11);
      uint64_t v59 = (uint64_t)v66;
      sub_4AC84(v55, (uint64_t)v66, &qword_D6B20);
      uint64_t v60 = v67;
      sub_741C8();
      sub_4AE2C(v59, &qword_D6B20);
      uint64_t v79 = v75;
      uint64_t v61 = v69;
      uint64_t v44 = v70;
      sub_8F360();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v60, v61);
      uint64_t v79 = v61;
      uint64_t v80 = &type metadata for Color;
      id v81 = &protocol witness table for RectangleMark;
      Class v82 = &protocol witness table for Color;
      swift_getOpaqueTypeConformance2();
      uint64_t v46 = v72;
      sub_8F390();
      return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v44, v46);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_741C8()
{
  uint64_t v0 = sub_3ED90(&qword_D6668);
  __chkstk_darwin(v0 - 8);
  __chkstk_darwin(v1);
  sub_8F8E0();
  sub_8F150();
  sub_8F470();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_8F8E0();
  sub_3ED90(&qword_D6B20);
  sub_8F470();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_8F3D0();
}

uint64_t sub_7439C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v55 = sub_3ED90(&qword_D6B50);
  __chkstk_darwin(v55);
  uint64_t v54 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_3ED90(&qword_D6B58);
  __chkstk_darwin(v3 - 8);
  uint64_t v57 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_3ED90(&qword_D6B60);
  uint64_t v62 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v61 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v58 = (char *)&v48 - v7;
  uint64_t v8 = sub_3ED90(&qword_D6B68);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_3ED90(&qword_D6B70);
  uint64_t v65 = *(void **)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v59 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v64 = (char *)&v48 - v14;
  uint64_t v15 = sub_3ED90(&qword_D6B78);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_3ED90(&qword_D6B20);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_72EC0((uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_4AE2C((uint64_t)v17, &qword_D6B78);
    uint64_t v22 = swift_retain();
    sub_73548(v22, (uint64_t)v11);
    swift_release();
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v63, v11, v8);
    sub_3ED90(&qword_D6B80);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    sub_4AC84((uint64_t)v17, (uint64_t)v21, &qword_D6B20);
    uint64_t v24 = swift_retain();
    sub_73548(v24, (uint64_t)v11);
    uint64_t v25 = swift_release();
    __chkstk_darwin(v25);
    *(&v48 - 2) = v1;
    *(&v48 - 1) = (uint64_t)v21;
    BOOL v26 = v21;
    double v52 = v21;
    sub_8F3E0();
    sub_7C770();
    uint64_t v27 = v59;
    sub_8F3B0();
    char v28 = *(void (**)(char *, uint64_t))(v9 + 8);
    v28(v11, v8);
    uint64_t v29 = (void (*)(char *, char *, uint64_t))v65[4];
    double v50 = v65 + 4;
    uint64_t v51 = v29;
    v29(v64, v27, v60);
    uint64_t v30 = swift_retain();
    sub_73548(v30, (uint64_t)v11);
    uint64_t v31 = swift_release();
    uint64_t v53 = &v48;
    __chkstk_darwin(v31);
    *(&v48 - 2) = v1;
    *(&v48 - 1) = (uint64_t)v26;
    sub_3ED90(&qword_D6B90);
    sub_4AC40(&qword_D6B98, &qword_D6B90);
    uint64_t v32 = v61;
    sub_8F3B0();
    v28(v11, v8);
    uint64_t v33 = v62;
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
    uint64_t v34 = v58;
    uint64_t v35 = v56;
    v49(v58, v32, v56);
    uint64_t v36 = (void (*)(char *, char *, uint64_t))v65[2];
    uint64_t v37 = v60;
    v36(v27, v64, v60);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v38(v32, v34, v35);
    uint64_t v39 = v54;
    uint64_t v40 = v27;
    uint64_t v41 = v37;
    v36(v54, v40, v37);
    uint64_t v42 = v55;
    uint64_t v43 = &v39[*(int *)(v55 + 48)];
    uint64_t v44 = v61;
    v38(v43, v61, v35);
    uint64_t v45 = (uint64_t)v57;
    v51(v57, v39, v41);
    v49((char *)(v45 + *(int *)(v42 + 48)), v43, v35);
    uint64_t v46 = *(void (**)(char *, uint64_t))(v62 + 8);
    v46(v44, v35);
    uint64_t v47 = (void (*)(char *, uint64_t))v65[1];
    v47(v59, v41);
    sub_4ACE8(v45, v63, &qword_D6B58);
    sub_3ED90(&qword_D6B80);
    swift_storeEnumTagMultiPayload();
    sub_4AE2C(v45, &qword_D6B58);
    v46(v58, v35);
    v47(v64, v41);
    return sub_4AE2C((uint64_t)v52, &qword_D6B20);
  }
}

uint64_t sub_74B84@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  id v111 = a2;
  uint64_t v96 = a3;
  uint64_t v95 = sub_3ED90(&qword_D6F48);
  __chkstk_darwin(v95);
  id v94 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_3ED90(&qword_D6638);
  __chkstk_darwin(v5);
  uint64_t v109 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v88 - v8;
  uint64_t v10 = sub_8F150();
  uint64_t v116 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v99 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v88 - v13;
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v88 - v16;
  uint64_t v18 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_3ED90(&qword_D6B20);
  __chkstk_darwin(v103);
  id v104 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v105 = (uint64_t)&v88 - v26;
  uint64_t v27 = sub_8F3E0();
  uint64_t v107 = *(void *)(v27 - 8);
  uint64_t v108 = v27;
  __chkstk_darwin(v27);
  char v93 = (char *)&v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v92 = (char *)&v88 - v30;
  __chkstk_darwin(v31);
  id v106 = (char *)&v88 - v32;
  __chkstk_darwin(v33);
  uint64_t v112 = (char *)&v88 - v34;
  uint64_t v110 = a1;
  uint64_t v35 = *(void (**)(uint64_t))(**(void **)(a1 + 8) + 136);
  uint64_t v36 = swift_retain();
  v35(v36);
  swift_release();
  sub_7C49C((uint64_t)v20, (uint64_t)v23, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  id v98 = v20;
  uint64_t v37 = (uint64_t)v20;
  uint64_t v38 = v116;
  sub_7C43C(v37, type metadata accessor for BUIChartViewData);
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v39(v17, v23, v10);
  id v97 = v23;
  sub_7C43C((uint64_t)v23, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  uint64_t v113 = v39;
  v39(v14, v111, v10);
  uint64_t v40 = sub_7D8A0((unint64_t *)&qword_D5B50, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v114 = v17;
  NSNumber v115 = v14;
  uint64_t result = sub_8FFD0();
  if (result)
  {
    uint64_t v42 = &v9[*(int *)(v5 + 48)];
    uint64_t v91 = v40;
    uint64_t v43 = v9;
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    v44(v9, v114, v10);
    uint64_t v45 = v42;
    uint64_t v100 = v42;
    v44(v42, v115, v10);
    uint64_t v46 = v109;
    uint64_t v47 = &v109[*(int *)(v5 + 48)];
    uint64_t v48 = v113;
    v113(v109, v43, v10);
    v48(v47, v45, v10);
    uint64_t v102 = v38 + 16;
    uint64_t v49 = (uint64_t)v104;
    v44(v104, v46, v10);
    uint64_t v51 = v116 + 8;
    double v50 = *(void (**)(char *, uint64_t))(v116 + 8);
    v50(v47, v10);
    id v101 = v50;
    uint64_t v90 = v5;
    double v52 = &v46[*(int *)(v5 + 48)];
    unint64_t v89 = v43;
    v44(v46, v43, v10);
    v44(v52, v100, v10);
    uint64_t v53 = v49 + *(int *)(v103 + 36);
    uint64_t v88 = v44;
    v44((char *)v53, v52, v10);
    v50(v46, v10);
    uint64_t v54 = v105;
    sub_4AC84(v49, v105, &qword_D6B20);
    uint64_t v55 = v106;
    uint64_t v56 = v110;
    sub_741C8();
    sub_4AE2C(v54, &qword_D6B20);
    uint64_t v57 = (char *)(v107 + 32);
    uint64_t v100 = *(char **)(v107 + 32);
    ((void (*)(char *, char *, uint64_t))v100)(v112, v55, v108);
    unint64_t v58 = (void (*)(char *, uint64_t, uint64_t))v113;
    v113(v114, v111, v10);
    uint64_t v59 = *(void (**)(uint64_t))(**(void **)(v56 + 8) + 136);
    uint64_t v60 = swift_retain();
    uint64_t v61 = (uint64_t)v98;
    v59(v60);
    swift_release();
    uint64_t v62 = (uint64_t)v97;
    sub_7C49C(v61, (uint64_t)v97, type metadata accessor for BUIChartViewData.DataFor24Hrs);
    sub_7C43C(v61, type metadata accessor for BUIChartViewData);
    uint64_t v63 = v99;
    v58(v99, v62, v10);
    sub_7C43C(v62, type metadata accessor for BUIChartViewData.DataFor24Hrs);
    sub_4B198();
    sub_8F140();
    uint64_t v116 = v51;
    v101(v63, v10);
    uint64_t result = sub_8FFD0();
    if (result)
    {
      uint64_t v64 = v90;
      uint64_t v65 = *(int *)(v90 + 48);
      id v111 = v57;
      uint64_t v66 = v89;
      uint64_t v67 = &v89[v65];
      uint64_t v68 = v88;
      v88(v89, v114, v10);
      id v99 = v67;
      v68(v67, v115, v10);
      uint64_t v69 = v109;
      uint64_t v70 = &v109[*(int *)(v64 + 48)];
      uint64_t v71 = v113;
      v113(v109, v66, v10);
      v71(v70, v67, v10);
      uint64_t v72 = (uint64_t)v104;
      v68(v104, v69, v10);
      uint64_t v73 = v101;
      v101(v70, v10);
      uint64_t v74 = &v69[*(int *)(v64 + 48)];
      v68(v69, v66, v10);
      v68(v74, v99, v10);
      v68((char *)(v72 + *(int *)(v103 + 36)), v74, v10);
      v73(v69, v10);
      uint64_t v75 = v105;
      sub_4AC84(v72, v105, &qword_D6B20);
      uint64_t v76 = v92;
      sub_741C8();
      sub_4AE2C(v75, &qword_D6B20);
      uint64_t v77 = v106;
      uint64_t v78 = v108;
      ((void (*)(char *, char *, uint64_t))v100)(v106, v76, v108);
      uint64_t v79 = v107;
      uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
      v80(v76, v112, v78);
      id v81 = v93;
      v80(v93, v77, v78);
      Class v82 = v94;
      v80(v94, v76, v78);
      uint64_t v83 = v95;
      double v84 = &v82[*(int *)(v95 + 48)];
      v80(v84, v81, v78);
      uint64_t v85 = v96;
      uint64_t v86 = v100;
      ((void (*)(uint64_t, char *, uint64_t))v100)(v96, v82, v78);
      ((void (*)(uint64_t, char *, uint64_t))v86)(v85 + *(int *)(v83 + 48), v84, v78);
      uint64_t v87 = *(void (**)(char *, uint64_t))(v79 + 8);
      v87(v77, v78);
      v87(v112, v78);
      v87(v81, v78);
      return ((uint64_t (*)(char *, uint64_t))v87)(v76, v78);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_75634@<X0>(uint64_t a1@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v63 = sub_3ED90(&qword_D6BA0) - 8;
  __chkstk_darwin(v63);
  uint64_t v62 = (uint64_t)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Battery24HrBatteryLevelChart(0);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v56 = *(void *)(v57 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v55 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_3ED90(&qword_D6BA8);
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v61 = v5;
  __chkstk_darwin(v5);
  uint64_t v59 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v58 = (char *)&v51 - v8;
  uint64_t v9 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  uint64_t v13 = (int *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v53 = (uint64_t)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v51 - v16;
  uint64_t v18 = sub_3ED90(&qword_D6BB0);
  __chkstk_darwin(v18 - 8);
  uint64_t v65 = (uint64_t)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v54 = (uint64_t)&v51 - v21;
  sub_7439C((uint64_t)&v51 - v21);
  uint64_t v22 = *(void *)(v1 + 8);
  uint64_t v52 = v1;
  uint64_t v23 = *(void (**)(uint64_t))(*(void *)v22 + 136);
  uint64_t v24 = swift_retain();
  v23(v24);
  swift_release();
  uint64_t v51 = type metadata accessor for BUIChartViewData.DataFor24Hrs;
  sub_7C49C((uint64_t)v11, (uint64_t)v17, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  sub_7C43C((uint64_t)v11, type metadata accessor for BUIChartViewData);
  uint64_t v25 = *(void *)&v17[v13[8]];
  swift_bridgeObjectRetain();
  sub_7C43C((uint64_t)v17, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  uint64_t v26 = *(void (**)(uint64_t))(**(void **)(v1 + 8) + 136);
  uint64_t v27 = swift_retain();
  v26(v27);
  swift_release();
  uint64_t v28 = v53;
  uint64_t v29 = v51;
  sub_7C49C((uint64_t)v11, v53, v51);
  sub_7C43C((uint64_t)v11, type metadata accessor for BUIChartViewData);
  size_t v30 = *(void *)(v28 + v13[9]);
  swift_bridgeObjectRetain();
  sub_7C43C(v28, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  uint64_t v66 = v25;
  sub_6DF8C(v30);
  uint64_t v53 = v66;
  uint64_t v31 = v52;
  uint64_t v32 = *(void (**)(uint64_t))(**(void **)(v52 + 8) + 136);
  uint64_t v33 = swift_retain();
  v32(v33);
  swift_release();
  sub_7C49C((uint64_t)v11, (uint64_t)v17, v29);
  sub_7C43C((uint64_t)v11, type metadata accessor for BUIChartViewData);
  size_t v34 = *(void *)&v17[v13[10]];
  swift_bridgeObjectRetain();
  sub_7C43C((uint64_t)v17, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  uint64_t v66 = v53;
  sub_6DF8C(v34);
  uint64_t v35 = v55;
  sub_7C49C(v31, v55, type metadata accessor for Battery24HrBatteryLevelChart);
  unint64_t v36 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  uint64_t v37 = swift_allocObject();
  sub_7D7B8(v35, v37 + v36, type metadata accessor for Battery24HrBatteryLevelChart);
  sub_3ED90(&qword_D6B28);
  sub_8F150();
  sub_3ED90(&qword_D6BB8);
  sub_4AC40(&qword_D6B38, &qword_D6B28);
  sub_7C94C();
  sub_7D8A0(&qword_D6B48, (void (*)(uint64_t))type metadata accessor for BUIChartViewData.ChargingIntervalElement);
  uint64_t v38 = v58;
  sub_8FE60();
  uint64_t v39 = v54;
  uint64_t v40 = v65;
  sub_4ACE8(v54, v65, &qword_D6BB0);
  uint64_t v41 = v59;
  uint64_t v42 = v60;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  uint64_t v44 = v61;
  v43(v59, v38, v61);
  sub_7CB70();
  uint64_t v45 = v62;
  sub_4ACE8(v40, v62, &qword_D6BB0);
  sub_7CD20(&qword_D6C00, &qword_D6BA8, (void (*)(void))sub_7C94C);
  uint64_t v46 = v63;
  uint64_t v47 = v45 + *(int *)(v63 + 56);
  v43((char *)v47, v41, v44);
  uint64_t v48 = v64;
  sub_4AC84(v45, v64, &qword_D6BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v48 + *(int *)(v46 + 56), v47, v44);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v42 + 8);
  v49(v38, v44);
  sub_4AE2C(v39, &qword_D6BB0);
  v49(v41, v44);
  return sub_4AE2C(v65, &qword_D6BB0);
}

uint64_t sub_75D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v96 = a3;
  uint64_t v95 = sub_3ED90(&qword_D6F28);
  __chkstk_darwin(v95);
  id v94 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  __chkstk_darwin(v79);
  uint64_t v73 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_3ED90(&qword_D6BE0);
  __chkstk_darwin(v7 - 8);
  uint64_t v93 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v72 - v10;
  uint64_t v89 = sub_8F900();
  uint64_t v88 = *(void (***)(char *, void, uint64_t))(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v85 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_3ED90(&qword_D6668);
  __chkstk_darwin(v12 - 8);
  uint64_t v75 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v77 = sub_8F3E0();
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_3ED90(&qword_D6B40);
  uint64_t v78 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v74 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_3ED90(&qword_D6BD0);
  uint64_t v82 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v80 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_3ED90(&qword_D6BC8);
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v83 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_3ED90(&qword_D6F30);
  uint64_t v102 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v101 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v100 = (char *)&v72 - v23;
  char v24 = sub_72C48(a2, a1);
  uint64_t v90 = v20;
  uint64_t v91 = a2;
  if (v24)
  {
    uint64_t v25 = sub_73468(a1);
    uint64_t v98 = v26;
    uint64_t v99 = v25;
  }
  else
  {
    uint64_t v98 = swift_retain_n();
    uint64_t v99 = v98;
  }
  sub_8F8E0();
  sub_8F150();
  uint64_t v97 = a1;
  sub_8F470();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_8F8E0();
  sub_8F470();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_8F3D0();
  uint64_t v105 = v99;
  uint64_t v27 = v74;
  uint64_t v28 = v77;
  sub_8F360();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v16, v28);
  uint64_t v29 = v88;
  size_t v30 = v85;
  uint64_t v31 = v89;
  v88[13](v85, enum case for RoundedCornerStyle.continuous(_:), v89);
  uint64_t v105 = v28;
  id v106 = &type metadata for Color;
  uint64_t v107 = &protocol witness table for RectangleMark;
  uint64_t v108 = &protocol witness table for Color;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v33 = v80;
  uint64_t v34 = v81;
  sub_8F350();
  ((void (*)(char *, uint64_t))v29[1])(v30, v31);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v27, v34);
  uint64_t v35 = v91;
  unint64_t v36 = *(uint64_t (**)(uint64_t))(**(void **)(v91 + 8) + 568);
  swift_retain();
  uint64_t v37 = v36(v97);
  uint64_t v39 = v38;
  swift_release();
  uint64_t v105 = v37;
  id v106 = v39;
  uint64_t v103 = v34;
  uint64_t v104 = OpaqueTypeConformance2;
  uint64_t v40 = swift_getOpaqueTypeConformance2();
  unint64_t v41 = sub_4AB2C();
  uint64_t v42 = v83;
  uint64_t v43 = v84;
  sub_8F370();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v33, v43);
  sub_8F8E0();
  uint64_t v105 = v43;
  id v106 = &type metadata for String;
  uint64_t v107 = (void *)v40;
  uint64_t v108 = (void *)v41;
  swift_getOpaqueTypeConformance2();
  uint64_t v44 = v101;
  uint64_t v45 = v87;
  sub_8F380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v42, v45);
  uint64_t v46 = *(void (***)(char *, void, uint64_t))(v102 + 32);
  uint64_t v47 = v90;
  uint64_t v89 = v102 + 32;
  uint64_t v88 = v46;
  ((void (*)(char *, char *, uint64_t))v46)(v100, v44, v90);
  uint64_t v48 = v97;
  double v49 = sub_6A334();
  uint64_t v50 = *(void *)(v35 + 8);
  double v51 = *(double *)(v35 + 16);
  uint64_t v52 = *(double (**)(uint64_t, double))(*(void *)v50 + 496);
  uint64_t v53 = swift_retain();
  double v54 = v52(v53, v51);
  swift_release();
  if (v54 >= v49)
  {
    uint64_t v59 = type metadata accessor for BUIChartIconMark();
    uint64_t v57 = v92;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v92, 1, 1, v59);
  }
  else
  {
    uint64_t v55 = v73;
    sub_7C49C(v48, v73, type metadata accessor for BUIChartViewData.ChargingIntervalElement);
    swift_retain();
    uint64_t v56 = v98;
    swift_retain();
    uint64_t v57 = v92;
    uint64_t v98 = v56;
    sub_8775C(v55, v50, v56, v92);
    uint64_t v58 = type metadata accessor for BUIChartIconMark();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 0, 1, v58);
  }
  uint64_t v60 = v101;
  uint64_t v61 = v102;
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v102 + 16);
  uint64_t v63 = v100;
  v62(v101, v100, v47);
  uint64_t v64 = v93;
  sub_4ACE8(v57, v93, &qword_D6BE0);
  uint64_t v65 = v94;
  v62(v94, v60, v47);
  sub_7CACC();
  uint64_t v66 = v47;
  uint64_t v67 = v95;
  uint64_t v68 = (uint64_t)&v65[*(int *)(v95 + 48)];
  sub_4ACE8(v64, v68, &qword_D6BE0);
  uint64_t v69 = v96;
  ((void (*)(uint64_t, char *, uint64_t))v88)(v96, v65, v66);
  sub_4AC84(v68, v69 + *(int *)(v67 + 48), &qword_D6BE0);
  swift_release();
  swift_release();
  sub_4AE2C(v57, &qword_D6BE0);
  uint64_t v70 = *(void (**)(char *, uint64_t))(v61 + 8);
  v70(v63, v66);
  sub_4AE2C(v64, &qword_D6BE0);
  return ((uint64_t (*)(char *, uint64_t))v70)(v60, v66);
}

uint64_t sub_7697C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v2 + 8);
  uint64_t v12 = *(void (**)(uint64_t))(*(void *)v11 + 136);
  uint64_t v13 = swift_retain();
  v12(v13);
  swift_release();
  sub_7C49C((uint64_t)v7, (uint64_t)v10, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  sub_7C43C((uint64_t)v7, type metadata accessor for BUIChartViewData);
  uint64_t v14 = *(void *)&v10[*(int *)(v8 + 20)];
  swift_bridgeObjectRetain();
  sub_7C43C((uint64_t)v10, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  uint64_t v15 = *(void *)(v14 + 16);
  swift_bridgeObjectRelease();
  if ((a1 & 0x8000000000000000) != 0 || v15 <= (uint64_t)a1)
  {
    uint64_t v22 = type metadata accessor for BUIChartViewData.BatteryLevelsElement(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 1, 1, v22);
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t))(*(void *)v11 + 136);
    uint64_t v17 = swift_retain();
    v16(v17);
    swift_release();
    sub_7C49C((uint64_t)v7, (uint64_t)v10, type metadata accessor for BUIChartViewData.DataFor24Hrs);
    sub_7C43C((uint64_t)v7, type metadata accessor for BUIChartViewData);
    uint64_t v18 = *(void *)&v10[*(int *)(v8 + 20)];
    swift_bridgeObjectRetain();
    uint64_t result = sub_7C43C((uint64_t)v10, type metadata accessor for BUIChartViewData.DataFor24Hrs);
    if (*(void *)(v18 + 16) <= a1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v20 = type metadata accessor for BUIChartViewData.BatteryLevelsElement(0);
      uint64_t v21 = *(void *)(v20 - 8);
      sub_7C49C(v18+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * a1, a2, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(a2, 0, 1, v20);
    }
  }
  return result;
}

void *sub_76CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = *(void *)(v2 + 8);
  uint64_t v15 = *(void (**)(uint64_t))(*(void *)v14 + 136);
  uint64_t v16 = swift_retain();
  v15(v16);
  swift_release();
  sub_7C49C((uint64_t)v7, (uint64_t)v13, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  sub_7C43C((uint64_t)v7, type metadata accessor for BUIChartViewData);
  uint64_t v17 = *(void *)&v13[*(int *)(v8 + 20)];
  swift_bridgeObjectRetain();
  sub_7C43C((uint64_t)v13, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  uint64_t v18 = *(void *)(v17 + 16);
  swift_bridgeObjectRelease();
  if (v18 <= a1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v37 = a1 & ~(a1 >> 63);
  uint64_t v19 = *(void (**)(uint64_t))(*(void *)v14 + 136);
  uint64_t v20 = swift_retain();
  v19(v20);
  swift_release();
  sub_7C49C((uint64_t)v7, (uint64_t)v13, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  sub_7C43C((uint64_t)v7, type metadata accessor for BUIChartViewData);
  uint64_t v21 = *(void *)&v13[*(int *)(v8 + 20)];
  swift_bridgeObjectRetain();
  sub_7C43C((uint64_t)v13, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  uint64_t v22 = *(void *)(v21 + 16);
  swift_bridgeObjectRelease();
  if (v22 - 1 < a2) {
    a2 = v22 - 1;
  }
  uint64_t v23 = *(void (**)(uint64_t))(*(void *)v14 + 136);
  uint64_t v24 = swift_retain();
  v23(v24);
  swift_release();
  sub_7C49C((uint64_t)v7, (uint64_t)v10, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  sub_7C43C((uint64_t)v7, type metadata accessor for BUIChartViewData);
  uint64_t v25 = *(void *)&v10[*(int *)(v8 + 20)];
  swift_bridgeObjectRetain();
  uint64_t v26 = (uint64_t)v10;
  uint64_t v27 = v37;
  sub_7C43C(v26, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  if (a2 < v27)
  {
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void *)(type metadata accessor for BUIChartViewData.BatteryLevelsElement(0) - 8);
    sub_7C010(v25, v25 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80)), v27, (2 * a2) | 1);
    uint64_t v32 = v35;
    goto LABEL_14;
  }
  unint64_t v28 = *(void *)(v25 + 16);
  if (v28 < v27 || (uint64_t)v28 < a2) {
    goto LABEL_18;
  }
  sub_90580();
  swift_unknownObjectRetain_n();
  size_t v30 = (void *)swift_dynamicCastClass();
  if (!v30)
  {
    swift_bridgeObjectRelease();
    size_t v30 = _swiftEmptyArrayStorage;
  }
  uint64_t v31 = v30[2];
  swift_release();
  if (v31 != a2 - v27) {
    goto LABEL_19;
  }
  uint64_t v32 = (void *)swift_dynamicCastClass();
  swift_bridgeObjectRelease();
  if (!v32)
  {
    uint64_t v32 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRelease();
  }
  return v32;
}

uint64_t sub_7709C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_3ED90(&qword_D6C38);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_3ED90(&qword_D6C30);
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v32 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_3ED90(&qword_D6C28);
  uint64_t v33 = *(void *)(v13 - 8);
  uint64_t v34 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  uint64_t v35 = a2;
  uint64_t v36 = v16;
  sub_3ED90(&qword_D6F00);
  sub_7CD20(&qword_D6F08, &qword_D6F00, (void (*)(void))sub_7FC24);
  sub_8F510();
  uint64_t v17 = *(void *)(a2 + 8);
  swift_retain();
  uint64_t v18 = *(void *)sub_4B054();
  uint64_t result = v16 * v18;
  if ((unsigned __int128)(v16 * (__int128)v18) >> 64 != (v16 * v18) >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v20 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v21 = v20 * v18;
  if ((unsigned __int128)(v20 * (__int128)v18) >> 64 != (v20 * v18) >> 63)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v21 >= result)
  {
    sub_76CA4(result, v21);
    uint64_t v22 = (*(uint64_t (**)(void))(*(void *)v17 + 560))();
    uint64_t v24 = v23;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v37 = v22;
    uint64_t v38 = v24;
    uint64_t v25 = sub_4AC40(&qword_D6C40, &qword_D6C38);
    unint64_t v26 = sub_4AB2C();
    v30[1] = a3;
    sub_8F370();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_8F8E0();
    uint64_t v37 = v6;
    uint64_t v38 = &type metadata for String;
    uint64_t v39 = v25;
    unint64_t v40 = v26;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v28 = v32;
    sub_8F380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v28);
    sub_5379C();
    swift_bridgeObjectRetain();
    uint64_t v37 = v28;
    uint64_t v38 = (void *)OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    uint64_t v29 = v34;
    sub_8F3A0();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v15, v29);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t *sub_774FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Battery24HrBatteryLevelChart(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t result = (uint64_t *)sub_4B054();
  uint64_t v8 = *result;
  if (*result < 0)
  {
    __break(1u);
  }
  else
  {
    v11[0] = 0;
    v11[1] = v8;
    swift_getKeyPath();
    sub_7C49C(a1, (uint64_t)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Battery24HrBatteryLevelChart);
    unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v10 = swift_allocObject();
    sub_7D7B8((uint64_t)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, type metadata accessor for Battery24HrBatteryLevelChart);
    *(void *)(v10 + ((v6 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
    sub_3ED90(&qword_D6C08);
    sub_3ED90(&qword_D6F18);
    sub_7CF50();
    sub_7FC24();
    return (uint64_t *)sub_8FE70();
  }
  return result;
}

unint64_t sub_776BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v85 = a2;
  uint64_t v7 = sub_3ED90(&qword_D6660);
  __chkstk_darwin(v7 - 8);
  uint64_t v81 = (char *)v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_3ED90(&qword_D6638);
  __chkstk_darwin(v82);
  uint64_t v74 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v71 = (char *)v63 - v11;
  uint64_t v12 = sub_8F150();
  uint64_t v13 = *(void **)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_3ED90(&qword_D6640);
  __chkstk_darwin(v72);
  uint64_t v73 = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v75 = (uint64_t)v63 - v18;
  uint64_t v19 = sub_3ED90(&qword_D6668);
  __chkstk_darwin(v19 - 8);
  uint64_t v76 = (char *)v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_8F550();
  uint64_t v79 = *(void *)(v21 - 8);
  uint64_t v80 = v21;
  __chkstk_darwin(v21);
  uint64_t v78 = (char *)v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_3ED90(&qword_D6670);
  uint64_t v83 = *(void *)(v23 - 8);
  uint64_t v84 = v23;
  __chkstk_darwin(v23);
  uint64_t v77 = (char *)v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_3ED90(&qword_D6F20);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for BUIChartViewData.BatteryLevelsElement(0);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)v63 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *a1;
  unint64_t result = (unint64_t)sub_4B054();
  uint64_t v34 = a3 * *(void *)result;
  if ((unsigned __int128)(a3 * (__int128)*(uint64_t *)result) >> 64 != v34 >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  unint64_t result = v34 + v32;
  if (__OFADD__(v34, v32))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_7697C(result, (uint64_t)v27);
  uint64_t v35 = v28;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_4AE2C((uint64_t)v27, &qword_D6F20);
    uint64_t v36 = 1;
    uint64_t v38 = v83;
    uint64_t v37 = v84;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(a4, v36, 1, v37);
  }
  sub_7D7B8((uint64_t)v27, (uint64_t)v31, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
  uint64_t v69 = sub_8F8E0();
  uint64_t v70 = v39;
  uint64_t v41 = v40;
  int v68 = v42;
  uint64_t v43 = &v31[*(int *)(v35 + 20)];
  sub_4B180();
  sub_8F140();
  uint64_t v67 = sub_7D8A0((unint64_t *)&qword_D5B50, (void (*)(uint64_t))&type metadata accessor for Date);
  unint64_t result = sub_8FFD0();
  if (result)
  {
    uint64_t v65 = v31;
    uint64_t v44 = *(int *)(v82 + 48);
    v63[0] = v15;
    uint64_t v45 = v82;
    v63[1] = v41;
    uint64_t v46 = v71;
    uint64_t v47 = &v71[v44];
    uint64_t v64 = v35;
    uint64_t v66 = a4;
    uint64_t v48 = (void (*)(char *, char *, uint64_t))v13[2];
    v48(v71, v43, v12);
    uint64_t v49 = v12;
    uint64_t v50 = (void (*)(char *, char *, uint64_t))v13[4];
    v50(v47, (char *)v63[0], v12);
    double v51 = v74;
    uint64_t v52 = &v74[*(int *)(v45 + 48)];
    v48(v74, v46, v49);
    v48(v52, v47, v49);
    uint64_t v53 = (uint64_t)v73;
    v50(v73, v51, v49);
    double v54 = (void (*)(char *, uint64_t))v13[1];
    v54(v52, v49);
    uint64_t v55 = &v51[*(int *)(v82 + 48)];
    v50(v51, v46, v49);
    v50(v55, v47, v49);
    v50((char *)(v53 + *(int *)(v72 + 36)), v55, v49);
    v54(v51, v49);
    uint64_t v56 = v75;
    sub_4AC84(v53, v75, &qword_D6640);
    sub_8F460();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_4AE2C(v56, &qword_D6640);
    sub_8F8E0();
    uint64_t v57 = (uint64_t)v65;
    uint64_t v86 = *(void *)&v65[*(int *)(v64 + 24)];
    sub_8F470();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v58 = *(double *)(v85 + 16);
    uint64_t v59 = *(void (**)(uint64_t, double))(**(void **)(v85 + 8) + 448);
    uint64_t v60 = swift_retain();
    v59(v60, v58);
    swift_release();
    uint64_t v61 = v78;
    sub_8F540();
    uint64_t v86 = sub_7C1A8(v57);
    uint64_t v62 = v80;
    sub_8F360();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v61, v62);
    sub_7C43C(v57, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
    uint64_t v38 = v83;
    uint64_t v37 = v84;
    a4 = v66;
    (*(void (**)(void))(v83 + 32))();
    uint64_t v36 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(a4, v36, 1, v37);
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_77FBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v73 = a1;
  uint64_t v3 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v71 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0) - 8;
  __chkstk_darwin(v72);
  uint64_t v70 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3ED90(&qword_D6370);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_3ED90(&qword_D6C48);
  uint64_t v58 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_3ED90(&qword_D6C50);
  uint64_t v59 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_3ED90(&qword_D6C58);
  uint64_t v63 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v57 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_3ED90(&qword_D6C60);
  uint64_t v66 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v60 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_3ED90(&qword_D6C68);
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v61 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_3ED90(&qword_D6C70);
  __chkstk_darwin(v67);
  uint64_t v64 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = v1;
  sub_3ED90(&qword_D6C78);
  sub_7D028();
  sub_8F520();
  long long v83 = xmmword_9D4C0;
  uint64_t v19 = sub_8F620();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 1, 1, v19);
  uint64_t v20 = sub_3ED90(&qword_D6680);
  uint64_t v21 = sub_4AC40(&qword_D6CA8, &qword_D6C48);
  uint64_t v22 = sub_7D8E8(&qword_D6CB0, &qword_D6680);
  sub_8FC40();
  sub_4AE2C((uint64_t)v8, &qword_D6370);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v11, v9);
  uint64_t v75 = v1;
  uint64_t v23 = sub_3ED90(&qword_D6CB8);
  *(void *)&long long v84 = v9;
  *((void *)&v84 + 1) = v20;
  *(void *)&long long v85 = v21;
  *((void *)&v85 + 1) = v22;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v25 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = v57;
  sub_8FC10();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v12);
  uint64_t v74 = v1;
  uint64_t v27 = sub_3ED90(&qword_D6410);
  *(void *)&long long v84 = v12;
  *((void *)&v84 + 1) = v23;
  *(void *)&long long v85 = OpaqueTypeConformance2;
  *((void *)&v85 + 1) = v25;
  uint64_t v28 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = sub_429E0(&qword_D6360);
  uint64_t v30 = sub_4AC40(&qword_D6368, &qword_D6360);
  *(void *)&long long v84 = v29;
  *((void *)&v84 + 1) = v30;
  uint64_t v31 = swift_getOpaqueTypeConformance2();
  uint64_t v32 = v60;
  uint64_t v33 = v62;
  sub_8FC20();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v26, v33);
  sub_78F44();
  uint64_t v81 = v34;
  uint64_t v82 = v35;
  *(void *)&long long v84 = v33;
  *((void *)&v84 + 1) = v27;
  *(void *)&long long v85 = v28;
  *((void *)&v85 + 1) = v31;
  swift_getOpaqueTypeConformance2();
  sub_63AF4();
  uint64_t v36 = v61;
  uint64_t v37 = v65;
  sub_8FCD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v32, v37);
  sub_8FEB0();
  sub_8F750();
  uint64_t v38 = v68;
  uint64_t v39 = (uint64_t)v64;
  uint64_t v40 = v69;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v64, v36, v69);
  uint64_t v41 = (_OWORD *)(v39 + *(int *)(v67 + 36));
  long long v42 = v85;
  *uint64_t v41 = v84;
  v41[1] = v42;
  v41[2] = v86;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v40);
  type metadata accessor for BUIChartViewModel(0);
  sub_7D8A0(&qword_D5B80, (void (*)(uint64_t))type metadata accessor for BUIChartViewModel);
  sub_8F790();
  swift_getKeyPath();
  sub_8F7A0();
  swift_release();
  swift_release();
  uint64_t v43 = v77;
  uint64_t v44 = v78;
  uint64_t v45 = v79;
  uint64_t v46 = v80;
  uint64_t v47 = *(void (**)(uint64_t))(**(void **)(v2 + 8) + 136);
  uint64_t v48 = swift_retain();
  uint64_t v49 = (uint64_t)v71;
  v47(v48);
  swift_release();
  uint64_t v50 = v70;
  sub_7C49C(v49, v70, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  sub_7C43C(v49, type metadata accessor for BUIChartViewData);
  uint64_t v51 = *(void *)(v50 + *(int *)(v72 + 44));
  swift_bridgeObjectRetain();
  sub_7C43C(v50, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  uint64_t v52 = type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  uint64_t v53 = sub_68E8C(v51, v52, (uint64_t)&off_C0CF8);
  swift_bridgeObjectRelease();
  double v54 = sub_63B48((uint64_t)v53);
  swift_bridgeObjectRelease();
  sub_7D34C();
  sub_4E660(v43, v44, v45, v46, (uint64_t)v54);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_4AE2C(v39, &qword_D6C70);
}

uint64_t *sub_78A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_3ED90(&qword_D6EF8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Battery24HrBatteryLevelChart(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = sub_3ED90(&qword_D6CA0);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v49 = (char *)v41 - v14;
  uint64_t v15 = sub_3ED90(&qword_D6C90);
  __chkstk_darwin(v15 - 8);
  uint64_t v48 = (uint64_t)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v41 - v18;
  sub_75634((uint64_t)v41 - v18);
  unint64_t result = (uint64_t *)sub_4B048();
  uint64_t v21 = *result;
  if (*result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v54 = 0;
    uint64_t v55 = v21;
    uint64_t KeyPath = swift_getKeyPath();
    sub_7C49C(a1, (uint64_t)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Battery24HrBatteryLevelChart);
    unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v23 = swift_allocObject();
    sub_7D7B8((uint64_t)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, type metadata accessor for Battery24HrBatteryLevelChart);
    v41[3] = sub_3ED90(&qword_D6C08);
    v41[2] = sub_3ED90(&qword_D6C10);
    v41[1] = sub_7CF50();
    uint64_t v24 = sub_429E0(&qword_D6C28);
    uint64_t v25 = sub_429E0(&qword_D6C30);
    long long v42 = v6;
    uint64_t v43 = v4;
    uint64_t v44 = a2;
    uint64_t v26 = sub_429E0(&qword_D6C38);
    uint64_t v27 = sub_4AC40(&qword_D6C40, &qword_D6C38);
    unint64_t v28 = sub_4AB2C();
    uint64_t v50 = v26;
    uint64_t v51 = &type metadata for String;
    uint64_t v52 = v27;
    unint64_t v53 = v28;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v50 = v25;
    uint64_t v51 = (void *)OpaqueTypeConformance2;
    uint64_t v30 = swift_getOpaqueTypeConformance2();
    uint64_t v50 = v24;
    uint64_t v51 = (void *)v30;
    swift_getOpaqueTypeConformance2();
    uint64_t v31 = v49;
    sub_8FE70();
    v41[0] = (uint64_t)v19;
    uint64_t v32 = v48;
    sub_4ACE8((uint64_t)v19, v48, &qword_D6C90);
    uint64_t v33 = v46;
    uint64_t v34 = v47;
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
    v35(v12, v31, v47);
    sub_7D0AC();
    uint64_t v36 = (uint64_t)v42;
    sub_4ACE8(v32, (uint64_t)v42, &qword_D6C90);
    sub_7D154();
    uint64_t v37 = v43;
    uint64_t v38 = v36 + *(int *)(v43 + 48);
    v35((char *)v38, v12, v34);
    uint64_t v39 = v44;
    sub_4AC84(v36, v44, &qword_D6C90);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v39 + *(int *)(v37 + 48), v38, v34);
    uint64_t v40 = *(void (**)(char *, uint64_t))(v33 + 8);
    v40(v31, v34);
    sub_4AE2C(v41[0], &qword_D6C90);
    v40(v12, v34);
    return (uint64_t *)sub_4AE2C(v32, &qword_D6C90);
  }
  return result;
}

void sub_78F44()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void (**)(uint64_t))(**(void **)(v0 + 8) + 136);
  uint64_t v9 = swift_retain();
  v8(v9);
  swift_release();
  sub_7C49C((uint64_t)v7, (uint64_t)v4, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  sub_7C43C((uint64_t)v7, type metadata accessor for BUIChartViewData);
  sub_5CFD0();
  uint64_t v11 = v10;
  sub_7C43C((uint64_t)v4, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  NSString v12 = sub_90010();
  id v13 = BatteryUILocalization(v12);

  if (v13)
  {
    sub_60788(0, &qword_D5D38);
    sub_90020();

    uint64_t v14 = (void *)sub_902A0();
    NSString v15 = sub_90010();
    id v16 = BatteryUILocalization(v15);

    if (v16)
    {
      uint64_t v17 = sub_90020();
      uint64_t v28 = v18;
      uint64_t v29 = v17;
    }
    else
    {
      uint64_t v28 = 0;
      uint64_t v29 = 0;
    }
    sub_60788(0, &qword_D6428);
    sub_3ED90(&qword_D6430);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_9CD60;
    uint64_t v20 = *(void (**)(uint64_t))(**(void **)(v1 + 8) + 136);
    id v21 = v11;
    id v22 = v14;
    uint64_t v23 = swift_retain();
    v20(v23);
    swift_release();
    sub_7C49C((uint64_t)v7, (uint64_t)v4, type metadata accessor for BUIChartViewData.DataFor24Hrs);
    sub_7C43C((uint64_t)v7, type metadata accessor for BUIChartViewData);
    sub_5D004();
    uint64_t v25 = v24;
    sub_7C43C((uint64_t)v4, type metadata accessor for BUIChartViewData.DataFor24Hrs);
    *(void *)(v19 + 32) = v25;
    uint64_t v30 = v19;
    sub_900E0();
    uint64_t v26 = sub_90250();
    *(void *)(swift_allocObject() + 16) = v26;
    nullsub_2(sub_671FC);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_79338()
{
  return 0;
}

uint64_t sub_79344@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_79374()
{
  return 0;
}

void sub_79380(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_7938C(uint64_t a1)
{
  unint64_t v2 = sub_7D6EC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_793C8(uint64_t a1)
{
  unint64_t v2 = sub_7D6EC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_79404@<X0>(double *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_7D604(*a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_79434(uint64_t a1)
{
  return sub_3F768(a1);
}

uint64_t sub_7945C(void *a1)
{
  uint64_t v2 = sub_3ED90(&qword_D6CC8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3EE38(a1, a1[3]);
  sub_7D6EC();
  sub_90600();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

Swift::Int sub_7956C()
{
  return sub_905F0();
}

Swift::Int sub_795A4()
{
  return sub_905F0();
}

double sub_795D8@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = sub_54628();
  swift_beginAccess();
  *(void *)(a1 + 24) = *v4;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  sub_3ED90(&qword_D6320);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_9D4D0;
  *(void *)(v5 + 32) = 0;
  swift_retain();
  double v6 = *(double *)sub_4B18C();
  *(double *)(v5 + 40) = v6 * 0.25;
  *(double *)(v5 + 48) = v6 * 0.5;
  *(double *)(v5 + 56) = v6 * 0.25 * 3.0;
  *(double *)(v5 + 64) = v6;
  *(void *)(a1 + 88) = v5;
  *(double *)(a1 + 96) = v6 * 0.5;
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(type metadata accessor for Battery24HrActivityChart(0) + 52));
  uint64_t *v7 = swift_getKeyPath();
  sub_3ED90(&qword_D6358);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for BUIChartViewModel(0);
  sub_7D8A0(&qword_D5B80, (void (*)(uint64_t))type metadata accessor for BUIChartViewModel);
  swift_retain();
  *(void *)a1 = sub_8F780();
  *(void *)(a1 + 8) = v8;
  *(double *)(a1 + 16) = a2;
  double v9 = *(double *)(a1 + 32);
  LOBYTE(v7) = *(unsigned char *)(a1 + 40);
  uint64_t v10 = swift_retain();
  sub_85F04(v10, (char)v7, (uint64_t)v17, a2, v9);
  long long v11 = v17[1];
  *(_OWORD *)(a1 + 48) = v17[0];
  *(_OWORD *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 80) = v18;
  double v12 = *(double *)(a1 + 96);
  sub_7D760();
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_8230C(v13, v14, (uint64_t)&type metadata for PLBUIMinuteFormatStyle, (uint64_t)v16, v12);
  swift_release();
  double result = *(double *)&v16[1];
  *(void *)(a1 + 104) = v16[0];
  *(double *)(a1 + 112) = result;
  return result;
}

double *sub_797C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v98 = a1;
  uint64_t v3 = sub_3ED90(&qword_D6370);
  __chkstk_darwin(v3 - 8);
  long long v83 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Battery24HrActivityChart(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_3ED90(&qword_D6CD8);
  uint64_t v78 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v99 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_3ED90(&qword_D6CE0);
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  unsigned __int8 v80 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_3ED90(&qword_D6CE8);
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  long long v84 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_3ED90(&qword_D6CF0);
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v87 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_3ED90(&qword_D6CF8);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v90 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_3ED90(&qword_D6D00);
  __chkstk_darwin(v93);
  id v94 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void (**)(uint64_t))(**(void **)(v1 + 8) + 136);
  uint64_t v21 = swift_retain();
  v20(v21);
  swift_release();
  sub_7C49C((uint64_t)v10, (uint64_t)v13, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  uint64_t v97 = v10;
  sub_7C43C((uint64_t)v10, type metadata accessor for BUIChartViewData);
  uint64_t v96 = v11;
  uint64_t v22 = *(void *)&v13[*(int *)(v11 + 36)];
  swift_bridgeObjectRetain();
  uint64_t v95 = v13;
  sub_7C43C((uint64_t)v13, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  uint64_t v108 = v22;
  sub_7C49C(v2, (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Battery24HrActivityChart);
  unint64_t v23 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v24 = swift_allocObject();
  sub_7D7B8((uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23, type metadata accessor for Battery24HrActivityChart);
  sub_3ED90(&qword_D6480);
  sub_3ED90(&qword_D6D08);
  sub_4AC40(&qword_D6490, &qword_D6480);
  uint64_t v25 = sub_429E0(&qword_D6D10);
  uint64_t v26 = sub_429E0(&qword_D6D18);
  uint64_t v27 = sub_429E0(&qword_D6D20);
  uint64_t v28 = sub_429E0(&qword_D6D28);
  uint64_t v29 = sub_4AC40(&qword_D6D30, &qword_D6D28);
  *(void *)&long long v109 = v28;
  *((void *)&v109 + 1) = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v109 = v27;
  *((void *)&v109 + 1) = OpaqueTypeConformance2;
  uint64_t v31 = v99;
  uint64_t v32 = swift_getOpaqueTypeConformance2();
  unint64_t v33 = sub_4AB2C();
  *(void *)&long long v109 = v26;
  *((void *)&v109 + 1) = &type metadata for String;
  *(void *)&long long v110 = v32;
  *((void *)&v110 + 1) = v33;
  uint64_t v34 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v109 = v25;
  *((void *)&v109 + 1) = v34;
  swift_getOpaqueTypeConformance2();
  sub_7D8A0(&qword_D64B8, (void (*)(uint64_t))type metadata accessor for BUIChartViewData.ScreenUsageElement);
  sub_8F530();
  double result = (double *)sub_4B18C();
  double v36 = *result;
  if (*result < 0.0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v106 = 0;
    double v107 = v36;
    uint64_t v37 = sub_8F620();
    uint64_t v38 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v83, 1, 1, v37);
    uint64_t v39 = sub_3ED90(&qword_D63F0);
    uint64_t v40 = sub_4AC40(&qword_D6D38, &qword_D6CD8);
    uint64_t v41 = sub_7D8E8((unint64_t *)&qword_D6400, &qword_D63F0);
    long long v42 = v80;
    uint64_t v43 = v79;
    sub_8FC40();
    sub_4AE2C(v38, &qword_D6370);
    uint64_t v44 = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v31, v43);
    uint64_t v99 = (char *)&v78;
    __chkstk_darwin(v44);
    *(&v78 - 2) = v2;
    uint64_t v45 = sub_3ED90(&qword_D6CB8);
    *(void *)&long long v109 = v43;
    *((void *)&v109 + 1) = v39;
    *(void *)&long long v110 = v40;
    *((void *)&v110 + 1) = v41;
    uint64_t v46 = swift_getOpaqueTypeConformance2();
    uint64_t v47 = swift_getOpaqueTypeConformance2();
    uint64_t v48 = v84;
    uint64_t v49 = v82;
    sub_8FC10();
    uint64_t v50 = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v42, v49);
    __chkstk_darwin(v50);
    *(&v78 - 2) = v2;
    uint64_t v51 = sub_3ED90(&qword_D6D40);
    *(void *)&long long v109 = v49;
    *((void *)&v109 + 1) = v45;
    *(void *)&long long v110 = v46;
    *((void *)&v110 + 1) = v47;
    uint64_t v52 = swift_getOpaqueTypeConformance2();
    unint64_t v53 = sub_7D760();
    *(void *)&long long v109 = &type metadata for PLBUIMinuteFormatStyle;
    *((void *)&v109 + 1) = v53;
    uint64_t v54 = swift_getOpaqueTypeConformance2();
    uint64_t v55 = v87;
    uint64_t v56 = v86;
    sub_8FC20();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v48, v56);
    sub_7BB30();
    uint64_t v104 = v57;
    uint64_t v105 = v58;
    *(void *)&long long v109 = v56;
    *((void *)&v109 + 1) = v51;
    *(void *)&long long v110 = v52;
    *((void *)&v110 + 1) = v54;
    swift_getOpaqueTypeConformance2();
    sub_63AF4();
    uint64_t v59 = v90;
    uint64_t v60 = v89;
    sub_8FCD0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v55, v60);
    sub_8FEB0();
    sub_8F750();
    uint64_t v61 = v91;
    uint64_t v62 = (uint64_t)v94;
    uint64_t v63 = v92;
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v94, v59, v92);
    uint64_t v64 = (_OWORD *)(v62 + *(int *)(v93 + 36));
    long long v65 = v110;
    *uint64_t v64 = v109;
    v64[1] = v65;
    v64[2] = v111;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v59, v63);
    type metadata accessor for BUIChartViewModel(0);
    sub_7D8A0(&qword_D5B80, (void (*)(uint64_t))type metadata accessor for BUIChartViewModel);
    sub_8F790();
    swift_getKeyPath();
    sub_8F7A0();
    swift_release();
    swift_release();
    uint64_t v66 = v100;
    uint64_t v67 = v101;
    uint64_t v68 = v102;
    uint64_t v69 = v103;
    uint64_t v70 = *(void (**)(uint64_t))(**(void **)(v2 + 8) + 136);
    uint64_t v71 = swift_retain();
    uint64_t v72 = (uint64_t)v97;
    v70(v71);
    swift_release();
    uint64_t v73 = (uint64_t)v95;
    sub_7C49C(v72, (uint64_t)v95, type metadata accessor for BUIChartViewData.DataFor24Hrs);
    sub_7C43C(v72, type metadata accessor for BUIChartViewData);
    uint64_t v74 = *(void *)(v73 + *(int *)(v96 + 36));
    swift_bridgeObjectRetain();
    sub_7C43C(v73, type metadata accessor for BUIChartViewData.DataFor24Hrs);
    uint64_t v75 = type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
    uint64_t v76 = sub_68E8C(v74, v75, (uint64_t)&off_C0CF8);
    swift_bridgeObjectRelease();
    uint64_t v77 = sub_63B48((uint64_t)v76);
    swift_bridgeObjectRelease();
    sub_7D9E0();
    sub_4E660(v66, v67, v68, v69, (uint64_t)v77);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return (double *)sub_4AE2C(v62, &qword_D6D00);
  }
  return result;
}

uint64_t sub_7A59C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v64 = a3;
  uint64_t v5 = sub_3ED90(&qword_D5D28);
  __chkstk_darwin(v5 - 8);
  uint64_t v63 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_8F900();
  uint64_t v52 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_3ED90(&qword_D6D28);
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_3ED90(&qword_D6D20);
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_3ED90(&qword_D6D18);
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v56 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_3ED90(&qword_D6D10);
  uint64_t v61 = *(void *)(v14 - 8);
  uint64_t v62 = v14;
  __chkstk_darwin(v14);
  uint64_t v59 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  uint64_t v49 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Battery24HrActivityChart(0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void (**)(uint64_t))(**(void **)(a2 + 8) + 240);
  uint64_t v22 = swift_retain();
  v21(v22);
  char v24 = v23;
  swift_release();
  sub_7C49C(a2, (uint64_t)v20, type metadata accessor for Battery24HrActivityChart);
  sub_7C49C(a1, (uint64_t)v17, type metadata accessor for BUIChartViewData.ScreenUsageElement);
  if (v24)
  {
    sub_7C43C((uint64_t)v17, type metadata accessor for BUIChartViewData.ScreenUsageElement);
    uint64_t v27 = sub_7C43C((uint64_t)v20, type metadata accessor for Battery24HrActivityChart);
  }
  else
  {
    uint64_t v25 = *(void (**)(uint64_t))(**((void **)v20 + 1) + 240);
    uint64_t v26 = swift_retain();
    v25(v26);
    swift_release();
    sub_7C43C((uint64_t)v20, type metadata accessor for Battery24HrActivityChart);
    uint64_t v27 = sub_7C43C((uint64_t)v17, type metadata accessor for BUIChartViewData.ScreenUsageElement);
  }
  uint64_t v48 = (uint64_t)&v48;
  __chkstk_darwin(v27);
  *(&v48 - 4) = a1;
  *(&v48 - 3) = a2;
  *((unsigned char *)&v48 - 16) = v28 & 1;
  sub_3ED90(&qword_D6ED8);
  sub_7FAA0();
  sub_8F510();
  uint64_t v29 = v52;
  uint64_t v30 = v54;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v8, enum case for RoundedCornerStyle.continuous(_:), v54);
  uint64_t v31 = sub_4AC40(&qword_D6D30, &qword_D6D28);
  uint64_t v32 = v53;
  sub_8F350();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v32);
  sub_8F8E0();
  uint64_t v65 = v32;
  uint64_t v66 = (void *)v31;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = v56;
  uint64_t v34 = v57;
  sub_8F380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v12, v34);
  uint64_t v36 = *(void *)(a2 + 8);
  uint64_t v37 = v63;
  sub_7C49C(a1, v63, type metadata accessor for BUIChartViewData.ScreenUsageElement);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v37, 0, 1, v50);
  uint64_t v38 = *(uint64_t (**)(uint64_t))(*(void *)v36 + 576);
  swift_retain();
  uint64_t v39 = v38(v37);
  uint64_t v41 = v40;
  swift_release();
  sub_4AE2C(v37, &qword_D5D28);
  uint64_t v69 = v39;
  uint64_t v70 = v41;
  uint64_t v65 = v34;
  uint64_t v66 = (void *)OpaqueTypeConformance2;
  uint64_t v42 = swift_getOpaqueTypeConformance2();
  unint64_t v43 = sub_4AB2C();
  uint64_t v45 = v59;
  uint64_t v44 = v60;
  sub_8F370();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v44);
  sub_537A8();
  swift_bridgeObjectRetain();
  uint64_t v65 = v44;
  uint64_t v66 = &type metadata for String;
  uint64_t v67 = v42;
  unint64_t v68 = v43;
  swift_getOpaqueTypeConformance2();
  uint64_t v46 = v62;
  sub_8F3A0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v45, v46);
}

uint64_t sub_7AE78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  LODWORD(v95) = a3;
  uint64_t v108 = a2;
  uint64_t v102 = a4;
  uint64_t v101 = sub_3ED90(&qword_D6EE8) - 8;
  __chkstk_darwin(v101);
  uint64_t v100 = (char *)v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3ED90(&qword_D6660);
  __chkstk_darwin(v6 - 8);
  uint64_t v105 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_3ED90(&qword_D5D08);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_8F1F0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_3ED90(&qword_D6668);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_8F550();
  uint64_t v112 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v98 = (char *)v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t OpaqueTypeConformance2 = (char *)v75 - v20;
  uint64_t v107 = sub_3ED90(&qword_D6670);
  uint64_t v113 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v97 = (char *)v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v90 = (char *)v75 - v23;
  uint64_t v106 = sub_3ED90(&qword_D6EF0);
  uint64_t v110 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v99 = (char *)v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  long long v111 = (char *)v75 - v26;
  __chkstk_darwin(v27);
  uint64_t v96 = (char *)v75 - v28;
  __chkstk_darwin(v29);
  long long v109 = (char *)v75 - v30;
  __chkstk_darwin(v31);
  uint64_t v88 = (char *)v75 - v32;
  __chkstk_darwin(v33);
  uint64_t v104 = (char *)v75 - v34;
  long long v83 = (void (*)(char *, uint64_t))sub_8F8E0();
  unsigned __int8 v103 = (int *)type metadata accessor for BUIChartViewData.ScreenUsageElement(0);
  uint64_t v35 = v103[5];
  uint64_t v81 = a1;
  uint64_t v86 = a1 + v35;
  unsigned int v93 = enum case for Calendar.Component.hour(_:);
  uint64_t v36 = *(void (**)(void))(v12 + 104);
  uint64_t v91 = v12 + 104;
  uint64_t v92 = (void (*)(char *, void, uint64_t))v36;
  uint64_t v77 = v11;
  v36(v14);
  uint64_t v85 = sub_8F210();
  uint64_t v37 = *(void *)(v85 - 8);
  long long v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  uint64_t v87 = v37 + 56;
  v84(v10, 1, 1, v85);
  v75[1] = v17;
  uint64_t v78 = v10;
  sub_8F450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_4AE2C((uint64_t)v10, &qword_D5D08);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v82 = v12 + 8;
  long long v83 = v38;
  v38(v14, v11);
  sub_8F8E0();
  uint64_t v114 = *(void *)(a1 + v103[6]);
  sub_8F470();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(v108 + 24);
  uint64_t v80 = sub_8F150();
  uint64_t v40 = OpaqueTypeConformance2;
  sub_8F540();
  uint64_t v41 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_screenOffGrayColor;
  uint64_t v42 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_screenOnColor;
  if (v95) {
    uint64_t v42 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_screenOffGrayColor;
  }
  uint64_t v43 = *(void *)(v39 + *v42);
  if ((v95 & 1) == 0) {
    uint64_t v41 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_screenOffColor;
  }
  uint64_t v95 = v41;
  swift_retain();
  uint64_t v114 = v43;
  uint64_t v44 = v90;
  uint64_t v45 = v94;
  sub_8F360();
  swift_release();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v112 + 8);
  v112 += 8;
  uint64_t v79 = v46;
  v46(v40, v45);
  sub_8F8E0();
  uint64_t v114 = v45;
  NSNumber v115 = &type metadata for Color;
  uint64_t v116 = &protocol witness table for BarMark;
  uint64_t v117 = &protocol witness table for Color;
  uint64_t OpaqueTypeConformance2 = (char *)swift_getOpaqueTypeConformance2();
  uint64_t v47 = v88;
  uint64_t v48 = v107;
  sub_8F380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v113 + 8);
  v113 += 8;
  uint64_t v76 = v49;
  v49(v44, v48);
  uint64_t v50 = *(char **)(v110 + 32);
  v75[2] = v110 + 32;
  uint64_t v90 = v50;
  uint64_t v51 = v104;
  ((void (*)(char *, char *, uint64_t))v50)(v104, v47, v106);
  sub_8F8E0();
  uint64_t v52 = v77;
  v92(v14, v93, v77);
  uint64_t v53 = (uint64_t)v78;
  v84(v78, 1, 1, v85);
  sub_8F450();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_4AE2C(v53, &qword_D5D08);
  v83(v14, v52);
  sub_8F8E0();
  uint64_t v114 = *(void *)(v81 + v103[7]);
  sub_8F470();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v54 = *(void *)(v108 + 24);
  uint64_t v55 = v98;
  sub_8F540();
  uint64_t v56 = *(void *)(v54 + *v95);
  swift_retain();
  uint64_t v114 = v56;
  uint64_t v57 = v97;
  sub_8F360();
  swift_release();
  v79(v55, v45);
  sub_8F8E0();
  uint64_t v58 = v96;
  uint64_t v59 = v107;
  sub_8F380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v76(v57, v59);
  uint64_t v60 = v109;
  uint64_t v61 = v58;
  uint64_t v62 = v106;
  uint64_t v63 = (void (*)(uint64_t, char *, uint64_t))v90;
  ((void (*)(char *, char *, uint64_t))v90)(v109, v61, v106);
  uint64_t v65 = v110;
  uint64_t v64 = v111;
  uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
  v66(v111, v51, v62);
  uint64_t v67 = v99;
  uint64_t v68 = v62;
  v66(v99, v60, v62);
  uint64_t v69 = v100;
  v66(v100, v64, v68);
  uint64_t v70 = v101;
  uint64_t v71 = &v69[*(int *)(v101 + 56)];
  v66(v71, v67, v68);
  uint64_t v72 = v102;
  v63(v102, v69, v68);
  v63(v72 + *(int *)(v70 + 56), v71, v68);
  uint64_t v73 = *(void (**)(char *, uint64_t))(v65 + 8);
  v73(v109, v68);
  v73(v104, v68);
  v73(v67, v68);
  return ((uint64_t (*)(char *, uint64_t))v73)(v111, v68);
}

void sub_7BB30()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Battery24HrActivityChart(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BUIChartViewData.DataFor24Hrs(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(uint64_t))(**(void **)(v0 + 8) + 136);
  uint64_t v12 = swift_retain();
  v11(v12);
  swift_release();
  sub_7C49C((uint64_t)v7, (uint64_t)v10, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  sub_7C43C((uint64_t)v7, type metadata accessor for BUIChartViewData);
  sub_5CFD0();
  uint64_t v34 = v13;
  sub_7C43C((uint64_t)v10, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  NSString v14 = sub_90010();
  id v15 = BatteryUILocalization(v14);

  if (!v15) {
    goto LABEL_8;
  }
  sub_60788(0, &qword_D5D38);
  sub_90020();

  if (*(double *)sub_4B18C() < 0.0)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  sub_7C49C(v1, (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Battery24HrActivityChart);
  unint64_t v16 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v17 = swift_allocObject();
  sub_7D7B8((uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, type metadata accessor for Battery24HrActivityChart);
  swift_bridgeObjectRetain();
  uint64_t v18 = (void *)sub_902A0();
  NSString v19 = sub_90010();
  id v20 = BatteryUILocalization(v19);

  if (v20)
  {
    uint64_t v21 = sub_90020();
    uint64_t v32 = v22;
    uint64_t v33 = v21;
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v33 = 0;
  }
  uint64_t v23 = v34;
  sub_60788(0, &qword_D6428);
  sub_3ED90(&qword_D6430);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_9CD60;
  uint64_t v25 = *(void (**)(uint64_t))(**(void **)(v1 + 8) + 136);
  id v26 = v23;
  id v27 = v18;
  uint64_t v28 = swift_retain();
  v25(v28);
  swift_release();
  sub_7C49C((uint64_t)v7, (uint64_t)v10, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  sub_7C43C((uint64_t)v7, type metadata accessor for BUIChartViewData);
  sub_5D46C();
  uint64_t v30 = v29;
  sub_7C43C((uint64_t)v10, type metadata accessor for BUIChartViewData.DataFor24Hrs);
  *(void *)(v24 + 32) = v30;
  uint64_t v35 = v24;
  sub_900E0();
  uint64_t v31 = sub_90250();
  *(void *)(swift_allocObject() + 16) = v31;
  nullsub_2(sub_68DAC);
}

void sub_7C010(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_14;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_3ED90(&qword_D6310);
      uint64_t v7 = *(void *)(type metadata accessor for BUIChartViewData.BatteryLevelsElement(0) - 8);
      uint64_t v8 = *(void *)(v7 + 72);
      unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      if (!v8)
      {
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        return;
      }
      if (v11 - v9 == 0x8000000000000000 && v8 == -1) {
        goto LABEL_16;
      }
      v10[2] = v5;
      v10[3] = 2 * ((uint64_t)(v11 - v9) / v8);
      if (v4 != a3)
      {
LABEL_10:
        type metadata accessor for BUIChartViewData.BatteryLevelsElement(0);
        swift_arrayInitWithCopy();
        return;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
}

uint64_t sub_7C1A8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Battery24HrBatteryLevelChart(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BUIChartViewData.BatteryLevelsElement(0);
  __chkstk_darwin(v7);
  unint64_t v9 = (uint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void (**)(uint64_t))(**(void **)(v1 + 8) + 240);
  uint64_t v11 = swift_retain();
  v10(v11);
  LOBYTE(v10) = v12;
  swift_release();
  sub_7C49C(a1, (uint64_t)v9, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
  sub_7C49C(v1, (uint64_t)v6, type metadata accessor for Battery24HrBatteryLevelChart);
  if (v10)
  {
    sub_7C43C((uint64_t)v6, type metadata accessor for Battery24HrBatteryLevelChart);
    sub_7C43C((uint64_t)v9, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
LABEL_9:
    if (sub_69B1C())
    {
      id v20 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_batteryLevelLowColor;
    }
    else if (sub_69B44())
    {
      id v20 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_batteryLevelMediumColor;
    }
    else if (*(unsigned char *)(a1 + *(int *)(v7 + 36)))
    {
      id v20 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_slowChargingColor;
    }
    else
    {
      id v20 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_batteryLevelHighColor;
    }
    return *(void *)(*(void *)(v2 + 24) + *v20);
  }
  uint64_t v13 = *v9;
  NSString v14 = *(uint64_t (**)(uint64_t))(**((void **)v6 + 1) + 240);
  uint64_t v15 = swift_retain();
  uint64_t v16 = v14(v15);
  char v18 = v17;
  swift_release();
  sub_7C43C((uint64_t)v6, type metadata accessor for Battery24HrBatteryLevelChart);
  sub_7C43C((uint64_t)v9, type metadata accessor for BUIChartViewData.BatteryLevelsElement);
  if (v13 >= 0) {
    uint64_t v19 = v13;
  }
  else {
    uint64_t v19 = v13 + 3;
  }
  id v20 = &OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_batteryLevelGrayColor;
  if ((v18 & 1) == 0 && v19 >> 2 == v16) {
    goto LABEL_9;
  }
  return *(void *)(*(void *)(v2 + 24) + *v20);
}

uint64_t sub_7C43C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_7C49C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_7C504()
{
  uint64_t v1 = type metadata accessor for Battery24HrBatteryLevelChart(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 28);
  sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_8F220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 48);
  swift_bridgeObjectRelease();
  uint64_t v8 = v7 + *(int *)(sub_3ED90(&qword_D6350) + 40);
  uint64_t v9 = sub_3ED90(&qword_D6360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_7C6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for Battery24HrBatteryLevelChart(0) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_738FC(a1, v6, v7, a2);
}

uint64_t sub_7C748()
{
  return sub_741C8();
}

unint64_t sub_7C770()
{
  unint64_t result = qword_D6B88;
  if (!qword_D6B88)
  {
    sub_429E0(&qword_D6B68);
    sub_429E0(&qword_D6B40);
    sub_8F3E0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6B88);
  }
  return result;
}

uint64_t sub_7C85C()
{
  return sub_8F510();
}

uint64_t sub_7C8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for Battery24HrBatteryLevelChart(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_75D60(a1, v6, a2);
}

unint64_t sub_7C94C()
{
  unint64_t result = qword_D6BC0;
  if (!qword_D6BC0)
  {
    sub_429E0(&qword_D6BB8);
    sub_429E0(&qword_D6BC8);
    sub_429E0(&qword_D6BD0);
    sub_429E0(&qword_D6B40);
    sub_8F3E0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_4AB2C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_7CACC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6BC0);
  }
  return result;
}

unint64_t sub_7CACC()
{
  unint64_t result = qword_D6BD8;
  if (!qword_D6BD8)
  {
    sub_429E0(&qword_D6BE0);
    sub_7D8A0(&qword_D6BE8, (void (*)(uint64_t))type metadata accessor for BUIChartIconMark);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6BD8);
  }
  return result;
}

unint64_t sub_7CB70()
{
  unint64_t result = qword_D6BF0;
  if (!qword_D6BF0)
  {
    sub_429E0(&qword_D6BB0);
    sub_7CBEC();
    sub_7C770();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6BF0);
  }
  return result;
}

unint64_t sub_7CBEC()
{
  unint64_t result = qword_D6BF8;
  if (!qword_D6BF8)
  {
    sub_429E0(&qword_D6B58);
    sub_429E0(&qword_D6B68);
    sub_8F3E0();
    sub_7C770();
    swift_getOpaqueTypeConformance2();
    sub_429E0(&qword_D6B90);
    sub_4AC40(&qword_D6B98, &qword_D6B90);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6BF8);
  }
  return result;
}

uint64_t sub_7CD20(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_429E0(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_7CD98()
{
  uint64_t v1 = type metadata accessor for Battery24HrBatteryLevelChart(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 28);
  sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_8F220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 48);
  swift_bridgeObjectRelease();
  uint64_t v8 = v7 + *(int *)(sub_3ED90(&qword_D6350) + 40);
  uint64_t v9 = sub_3ED90(&qword_D6360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

unint64_t sub_7CF50()
{
  unint64_t result = qword_D6C18;
  if (!qword_D6C18)
  {
    sub_429E0(&qword_D6C08);
    sub_7CFCC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6C18);
  }
  return result;
}

unint64_t sub_7CFCC()
{
  unint64_t result = qword_D6C20;
  if (!qword_D6C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6C20);
  }
  return result;
}

uint64_t *sub_7D020@<X0>(uint64_t a1@<X8>)
{
  return sub_78A4C(*(void *)(v1 + 16), a1);
}

unint64_t sub_7D028()
{
  unint64_t result = qword_D6C80;
  if (!qword_D6C80)
  {
    sub_429E0(&qword_D6C78);
    sub_7D0AC();
    sub_7D154();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6C80);
  }
  return result;
}

unint64_t sub_7D0AC()
{
  unint64_t result = qword_D6C88;
  if (!qword_D6C88)
  {
    sub_429E0(&qword_D6C90);
    sub_7CB70();
    sub_7CD20(&qword_D6C00, &qword_D6BA8, (void (*)(void))sub_7C94C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6C88);
  }
  return result;
}

unint64_t sub_7D154()
{
  unint64_t result = qword_D6C98;
  if (!qword_D6C98)
  {
    sub_429E0(&qword_D6CA0);
    sub_429E0(&qword_D6C28);
    sub_429E0(&qword_D6C30);
    sub_429E0(&qword_D6C38);
    sub_4AC40(&qword_D6C40, &qword_D6C38);
    sub_4AB2C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6C98);
  }
  return result;
}

double *sub_7D2AC()
{
  return sub_84818();
}

uint64_t sub_7D304()
{
  type metadata accessor for Battery24HrBatteryLevelChart(0);
  uint64_t v0 = sub_3ED90(&qword_D6350);
  return sub_823B0(v0);
}

unint64_t sub_7D34C()
{
  unint64_t result = qword_D6CC0;
  if (!qword_D6CC0)
  {
    sub_429E0(&qword_D6C70);
    sub_429E0(&qword_D6C60);
    sub_429E0(&qword_D6C58);
    sub_429E0(&qword_D6410);
    sub_429E0(&qword_D6C50);
    sub_429E0(&qword_D6CB8);
    sub_429E0(&qword_D6C48);
    sub_429E0(&qword_D6680);
    sub_4AC40(&qword_D6CA8, &qword_D6C48);
    sub_7D8E8(&qword_D6CB0, &qword_D6680);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_429E0(&qword_D6360);
    sub_4AC40(&qword_D6368, &qword_D6360);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_63AF4();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6CC0);
  }
  return result;
}

uint64_t sub_7D5CC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_7D604(double a1)
{
  uint64_t v2 = sub_54628();
  swift_beginAccess();
  uint64_t v3 = *(void **)(*v2 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForMinutes);
  id v4 = objc_allocWithZone((Class)NSNumber);
  id v5 = v3;
  id v6 = [v4 initWithDouble:a1];
  id v7 = [v5 stringFromNumber:v6];

  if (!v7) {
    return 0;
  }
  uint64_t v8 = sub_90020();

  return v8;
}

unint64_t sub_7D6EC()
{
  unint64_t result = qword_D9B08[0];
  if (!qword_D9B08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_D9B08);
  }
  return result;
}

uint64_t type metadata accessor for Battery24HrActivityChart(uint64_t a1)
{
  return sub_609EC(a1, qword_D9EA0);
}

unint64_t sub_7D760()
{
  unint64_t result = qword_D6CD0;
  if (!qword_D6CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6CD0);
  }
  return result;
}

uint64_t sub_7D7B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_7D820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for Battery24HrActivityChart(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_7A59C(a1, v6, a2);
}

uint64_t sub_7D8A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_7D8E8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_429E0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double *sub_7D94C()
{
  return sub_84818();
}

uint64_t sub_7D98C()
{
  uint64_t v0 = sub_3ED90(&qword_D6ED0);
  return sub_823B0(v0);
}

unint64_t sub_7D9E0()
{
  unint64_t result = qword_D6D48;
  if (!qword_D6D48)
  {
    sub_429E0(&qword_D6D00);
    sub_429E0(&qword_D6CF0);
    sub_429E0(&qword_D6CE8);
    sub_429E0(&qword_D6D40);
    sub_429E0(&qword_D6CE0);
    sub_429E0(&qword_D6CB8);
    sub_429E0(&qword_D6CD8);
    sub_429E0(&qword_D63F0);
    sub_4AC40(&qword_D6D38, &qword_D6CD8);
    sub_7D8E8((unint64_t *)&qword_D6400, &qword_D63F0);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_7D760();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_63AF4();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6D48);
  }
  return result;
}

uint64_t sub_7DC38()
{
  uint64_t v1 = (int *)(type metadata accessor for Battery24HrActivityChart(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[15];
  sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_8F220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_7DD78(double a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Battery24HrActivityChart(0) - 8);
  uint64_t v4 = *(void **)(*(void *)(v1
                            + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
                            + 24)
                + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForHourMinutes);
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
    id v5 = v4;
LABEL_5:

    return 0;
  }
  id v6 = objc_allocWithZone((Class)NSNumber);
  id v7 = v4;
  id v8 = [v6 initWithDouble:a1];
  id v9 = [v7 stringFromNumber:v8];

  if (!v9) {
    goto LABEL_5;
  }
  uint64_t v10 = sub_90020();

  return v10;
}

uint64_t sub_7DE98()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_7DEB8()
{
  unint64_t result = qword_D6D50;
  if (!qword_D6D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6D50);
  }
  return result;
}

unint64_t sub_7DF10()
{
  unint64_t result = qword_D6D58;
  if (!qword_D6D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6D58);
  }
  return result;
}

unint64_t sub_7DF68()
{
  unint64_t result = qword_D6D60;
  if (!qword_D6D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6D60);
  }
  return result;
}

unint64_t sub_7DFC0()
{
  unint64_t result = qword_D6D68;
  if (!qword_D6D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6D68);
  }
  return result;
}

uint64_t sub_7E014()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_7E030(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[7];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    swift_retain();
    swift_retain();
    sub_3ED90(&qword_D6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_8F220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    *((_OWORD *)v15 + 1) = *((_OWORD *)v16 + 1);
    v15[32] = v16[32];
    uint64_t v18 = a3[11];
    *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
    uint64_t v19 = a3[12];
    id v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v23 = *(void *)((char *)a2 + v19);
    uint64_t v22 = *((void *)v21 + 1);
    void *v20 = v23;
    v20[1] = v22;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v24 = *(int *)(sub_3ED90(&qword_D6350) + 40);
    uint64_t v25 = (char *)v20 + v24;
    id v26 = &v21[v24];
    uint64_t v27 = sub_3ED90(&qword_D6360);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t sub_7E230(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_8F220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(sub_3ED90(&qword_D6350) + 40);
  uint64_t v8 = sub_3ED90(&qword_D6360);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

void *sub_7E368(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  swift_retain();
  swift_retain();
  sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_8F220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
  v13[32] = v14[32];
  uint64_t v16 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v21 = *(void *)((char *)a2 + v17);
  uint64_t v20 = *((void *)v19 + 1);
  void *v18 = v21;
  v18[1] = v20;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = *(int *)(sub_3ED90(&qword_D6350) + 40);
  uint64_t v23 = (char *)v18 + v22;
  uint64_t v24 = &v19[v22];
  uint64_t v25 = sub_3ED90(&qword_D6360);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  return a1;
}

void *sub_7E518(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[7];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_4AE2C((uint64_t)a1 + v6, &qword_D6358);
    sub_3ED90(&qword_D6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_8F220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v10 = a3[9];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_retain();
  swift_release();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_retain();
  swift_release();
  *((void *)v11 + 2) = *((void *)v12 + 2);
  *((void *)v11 + 3) = *((void *)v12 + 3);
  v11[32] = v12[32];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  uint64_t v13 = a3[12];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v14 + 1) = *((void *)v15 + 1);
  uint64_t v16 = *(int *)(sub_3ED90(&qword_D6350) + 40);
  uint64_t v17 = &v14[v16];
  uint64_t v18 = &v15[v16];
  uint64_t v19 = sub_3ED90(&qword_D6360);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t sub_7E748(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_8F220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  uint64_t v16 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[12];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  uint64_t v20 = *(int *)(sub_3ED90(&qword_D6350) + 40);
  uint64_t v21 = v18 + v20;
  uint64_t v22 = v19 + v20;
  uint64_t v23 = sub_3ED90(&qword_D6360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

void *sub_7E8D8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[7];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_4AE2C((uint64_t)a1 + v7, &qword_D6358);
    uint64_t v10 = sub_3ED90(&qword_D6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_8F220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v12 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  swift_release();
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_release();
  *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
  v13[32] = v14[32];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_bridgeObjectRelease();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  uint64_t v18 = *(int *)(sub_3ED90(&qword_D6350) + 40);
  uint64_t v19 = &v16[v18];
  uint64_t v20 = &v17[v18];
  uint64_t v21 = sub_3ED90(&qword_D6360);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t sub_7EAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7EAE4);
}

uint64_t sub_7EAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_3ED90(&qword_D64D8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_3ED90(&qword_D6350);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 48);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_7EC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7EC2C);
}

uint64_t sub_7EC2C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_3ED90(&qword_D64D8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_3ED90(&qword_D6350);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 48);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_7ED60()
{
  sub_67FF8();
  if (v0 <= 0x3F)
  {
    sub_67F64();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for PLBUIMinuteFormatStyle()
{
  return &type metadata for PLBUIMinuteFormatStyle;
}

uint64_t sub_7EE84(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v7;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v8 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v8;
    uint64_t v9 = a2[14];
    uint64_t v10 = *(int *)(a3 + 52);
    uint64_t v11 = (uint64_t *)((char *)a2 + v10);
    uint64_t v12 = (void *)(a1 + v10);
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v9;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_3ED90(&qword_D6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_8F220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v12, v11, v13);
    }
    else
    {
      void *v12 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_7F01C(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_8F220();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_7F0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  uint64_t v8 = *(void *)(a2 + 112);
  uint64_t v9 = *(int *)(a3 + 52);
  uint64_t v10 = (void *)(a2 + v9);
  uint64_t v11 = (void *)(a1 + v9);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_8F220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v10, v12);
  }
  else
  {
    void *v11 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_7F23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 52);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_4AE2C(a1 + v6, &qword_D6358);
    sub_3ED90(&qword_D6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_8F220();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_7F3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v6 = *(int *)(a3 + 52);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v9 = sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_8F220();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_7F4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 52);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_4AE2C(a1 + v7, &qword_D6358);
    uint64_t v10 = sub_3ED90(&qword_D6358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_8F220();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_7F678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7F68C);
}

uint64_t sub_7F68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_3ED90(&qword_D64D8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_7F740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7F754);
}

uint64_t sub_7F754(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_3ED90(&qword_D64D8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 52);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_7F800()
{
  sub_67FF8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_7F8DC()
{
  return sub_7F918(&qword_D6EB0, &qword_D6EB8, (void (*)(void))sub_7D34C);
}

uint64_t sub_7F918(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_429E0(a2);
    a3();
    sub_4FAAC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_7F998()
{
  return sub_7F918(&qword_D6EC0, &qword_D6EC8, (void (*)(void))sub_7D9E0);
}

ValueMetadata *type metadata accessor for PLBUIMinuteFormatStyle.CodingKeys()
{
  return &type metadata for PLBUIMinuteFormatStyle.CodingKeys;
}

unint64_t sub_7F9E8()
{
  unint64_t result = qword_D9FB0;
  if (!qword_D9FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D9FB0);
  }
  return result;
}

unint64_t sub_7FA40()
{
  unint64_t result = qword_D9FB8[0];
  if (!qword_D9FB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_D9FB8);
  }
  return result;
}

uint64_t sub_7FA94@<X0>(uint64_t a1@<X8>)
{
  return sub_7AE78(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

unint64_t sub_7FAA0()
{
  unint64_t result = qword_D6EE0;
  if (!qword_D6EE0)
  {
    sub_429E0(&qword_D6ED8);
    sub_429E0(&qword_D6670);
    sub_8F550();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6EE0);
  }
  return result;
}

uint64_t sub_7FB9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for Battery24HrBatteryLevelChart(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_7709C(a1, v6, a2);
}

uint64_t *sub_7FC1C()
{
  return sub_774FC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_7FC24()
{
  unint64_t result = qword_D6F10;
  if (!qword_D6F10)
  {
    sub_429E0(&qword_D6F18);
    sub_8F550();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6F10);
  }
  return result;
}

uint64_t sub_7FCDC()
{
  uint64_t v1 = type metadata accessor for Battery24HrBatteryLevelChart(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 28);
  sub_3ED90(&qword_D6358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_8F220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 48);
  swift_bridgeObjectRelease();
  uint64_t v8 = v7 + *(int *)(sub_3ED90(&qword_D6350) + 40);
  uint64_t v9 = sub_3ED90(&qword_D6360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

unint64_t sub_7FEA0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for Battery24HrBatteryLevelChart(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_776BC(a1, v2 + v6, v7, a2);
}

uint64_t sub_7FF4C@<X0>(uint64_t a1@<X8>)
{
  return sub_74B84(*(void *)(v1 + 16), *(char **)(v1 + 24), a1);
}

unint64_t sub_7FF54()
{
  unint64_t result = qword_D6F40;
  if (!qword_D6F40)
  {
    sub_429E0(&qword_D6F38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6F40);
  }
  return result;
}

double static PLBUIChartViewController.graphHeight(traitCollection:)(uint64_t a1)
{
  uint64_t v2 = sub_54628();
  swift_beginAccess();
  uint64_t v3 = *(void (**)(uint64_t))(*(void *)*v2 + 528);
  swift_retain();
  v3(a1);
  swift_release();
  return sub_5E5D4();
}

unint64_t static PLBUIChartViewController.chartIdentifier24Hrs.getter()
{
  return 0xD000000000000014;
}

unint64_t static PLBUIChartViewController.chartIdentifier10Days.getter()
{
  return 0xD000000000000015;
}

uint64_t variable initialization expression of PLBUIChartViewController.delegate()
{
  return 0;
}

uint64_t PLBUIChartViewController.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t PLBUIChartViewController.delegate.setter()
{
  return swift_unknownObjectRelease();
}

void (*PLBUIChartViewController.delegate.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_delegate;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_803C4;
}

void sub_803C4(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

void *sub_80444()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_hostingController);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_80494(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_hostingController);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = a1;
}

uint64_t (*sub_804E8())()
{
  return j__swift_endAccess;
}

uint64_t sub_80544()
{
  return swift_retain();
}

uint64_t sub_80590(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_model);
  swift_beginAccess();
  void *v3 = a1;
  return swift_release();
}

uint64_t (*sub_805E4())()
{
  return j_j__swift_endAccess;
}

double variable initialization expression of PLBUIChartViewController.receiver@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_8064C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_receiver;
  swift_beginAccess();
  return sub_806A0(v3, a1);
}

uint64_t sub_806A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3ED90(&qword_D5C78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_80708(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_receiver;
  swift_beginAccess();
  sub_80764(a1, v3);
  return swift_endAccess();
}

uint64_t sub_80764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3ED90(&qword_D5C78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_807CC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_80828()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_isUpdating);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_80870(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_isUpdating);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*sub_808BC())()
{
  return j_j__swift_endAccess;
}

uint64_t static PLBUIChartViewController.reloadLocale()()
{
  uint64_t v0 = sub_54628();
  type metadata accessor for BUIChartViewConfig(0);
  uint64_t v1 = sub_537C0();
  swift_beginAccess();
  uint64_t *v0 = v1;
  return swift_release();
}

Swift::Void __swiftcall PLBUIChartViewController.beginUpdate()()
{
  (*(void (**)(uint64_t))((char *)&stru_B8.size + (swift_isaMask & *v0)))(1);
}

Swift::Void __swiftcall PLBUIChartViewController.endUpdate()()
{
  (*(void (**)(void))((char *)&stru_B8.size + (swift_isaMask & *v0)))(0);
  uint64_t v1 = *(void (**)(void))&stru_108.segname[(swift_isaMask & *v0) + 16];

  v1();
}

Swift::Void __swiftcall PLBUIChartViewController.setActiveChart(_:)(Swift::String a1)
{
  if (a1._countAndFlagsBits == 0xD000000000000014 && a1._object == (void *)0x80000000000A44D0) {
    char v2 = 0;
  }
  else {
    char v2 = sub_90570() ^ 1;
  }
  uint64_t v3 = *(uint64_t (**)(void))((char *)&stru_68.flags + (swift_isaMask & *v1));
  uint64_t v4 = v3();
  if (!v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  (*(void (**)(uint64_t))(*(void *)v4 + 192))(v4);
  swift_release();
  sub_607D0();
  if (sub_90000()) {
    return;
  }
  uint64_t v5 = v3();
  if (!v5)
  {
LABEL_11:
    __break(1u);
    return;
  }
  (*(void (**)(void))(*(void *)v5 + 200))(v2 & 1);
  swift_release();
}

Swift::Void __swiftcall PLBUIChartViewController.setTappedIndex(_:)(NSNumber_optional a1)
{
  if (!a1.value.super.super.isa
    || (unint64_t v2 = (unint64_t)[(objc_class *)a1.value.super.super.isa integerValue],
        (v2 & 0x8000000000000000) != 0))
  {
    unint64_t v3 = 0;
    uint64_t v4 = 1;
  }
  else
  {
    unint64_t v3 = v2;
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(uint64_t (**)(void))((char *)&stru_68.flags + (swift_isaMask & *v1));
  uint64_t v6 = v5();
  if (!v6)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 240))(v6);
  char v9 = v8;
  uint64_t v10 = swift_release();
  if (v9)
  {
    if (v4) {
      return;
    }
LABEL_13:
    uint64_t v12 = ((uint64_t (*)(uint64_t))v5)(v10);
    if (v12)
    {
      (*(void (**)(unint64_t, uint64_t))(*(void *)v12 + 248))(v3, v4);
      swift_release();
      return;
    }
LABEL_18:
    __break(1u);
    return;
  }
  if (v7 == v3) {
    char v11 = v4;
  }
  else {
    char v11 = 1;
  }
  if (v11) {
    goto LABEL_13;
  }
}

uint64_t PLBUIChartViewController.setDataset(_:endOfDay:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_3ED90(&qword_D5CE0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BUIChartViewData(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v26 - v12;
  id v14 = a1;
  sub_8F110();
  uint64_t v15 = sub_6D7F8(v14, (uint64_t)v13);
  uint64_t v16 = *(uint64_t (**)(uint64_t))((char *)&stru_68.flags + (swift_isaMask & *v2));
  uint64_t v17 = v16(v15);
  uint64_t v18 = swift_release();
  if (!v17)
  {
    type metadata accessor for BUIChartViewModel(0);
    sub_8144C((uint64_t)v13, (uint64_t)v10);
    uint64_t v23 = sub_54DA8((uint64_t)v10);
    uint64_t v24 = (*(uint64_t (**)(uint64_t))((char *)&stru_68.reserved2 + (swift_isaMask & *v2)))(v23);
    uint64_t result = v16(v24);
    if (result)
    {
      (*(void (**)(uint64_t))(*(void *)result + 264))(result);
      swift_release();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_81614();
      uint64_t v25 = sub_8F6C0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v26[3] = sub_8F630();
      v26[0] = v25;
      (*(void (**)(void *))&stru_B8.segname[swift_isaMask & *v2])(v26);
      return sub_813F0((uint64_t)v13);
    }
    goto LABEL_10;
  }
  uint64_t result = v16(v18);
  if (!result)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  (*(void (**)(uint64_t))(*(void *)result + 136))(result);
  swift_release();
  sub_81398();
  char v20 = sub_90000();
  uint64_t v21 = sub_813F0((uint64_t)v10);
  if (v20) {
    return sub_813F0((uint64_t)v13);
  }
  uint64_t result = v16(v21);
  if (result)
  {
    uint64_t v22 = result;
    sub_8144C((uint64_t)v13, (uint64_t)v10);
    (*(void (**)(char *))(*(void *)v22 + 144))(v10);
    swift_release();
    return sub_813F0((uint64_t)v13);
  }
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_81398()
{
  unint64_t result = qword_D6F78;
  if (!qword_D6F78)
  {
    type metadata accessor for BUIChartViewData(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6F78);
  }
  return result;
}

uint64_t sub_813F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BUIChartViewData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_8144C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BUIChartViewData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_814B0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_814E8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  int v2 = *((unsigned __int8 *)a1 + 8);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    if (((*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *Strong) + 16])() & 1) == 0)
    {
      uint64_t v5 = (void *)(*(uint64_t (**)(void))&stru_68.segname[swift_isaMask & *v4])();
      uint64_t v6 = v5;
      if (v2)
      {
        if (v5)
        {
          [v5 graphOnSelectAt:0];
LABEL_8:
          swift_unknownObjectRelease();
        }
      }
      else if (v5)
      {
        id v7 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v1];
        [v6 graphOnSelectAt:v7];

        goto LABEL_8;
      }
    }
  }
}

unint64_t sub_81614()
{
  unint64_t result = qword_D6F80;
  if (!qword_D6F80)
  {
    sub_429E0(&qword_D5CE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6F80);
  }
  return result;
}

uint64_t PLBUIChartViewController.setMargin(top:bottom:)(double a1, double a2)
{
  uint64_t v5 = *(uint64_t (**)(void))((char *)&stru_68.flags + (swift_isaMask & *v2));
  uint64_t result = v5();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  (*(void (**)(uint64_t, double))(*(void *)result + 296))(result, a1);
  uint64_t v7 = swift_release();
  uint64_t result = ((uint64_t (*)(uint64_t))v5)(v7);
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  (*(void (**)(uint64_t, double))(*(void *)result + 344))(result, a2);

  return swift_release();
}

Swift::Void __swiftcall PLBUIChartViewController.setContainerBackgroundColor(_:)(UIColor a1)
{
  uint64_t v3 = (*(uint64_t (**)(void))((char *)&stru_68.flags + (swift_isaMask & *v1)))();
  if (v3)
  {
    (*(void (**)(Class))(*(void *)v3 + 392))(a1.super.isa);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_81B18()
{
  uint64_t v1 = v0;
  int v2 = *(uint64_t (**)(void))((char *)&stru_68.flags + (swift_isaMask & *v0));
  uint64_t v3 = v2();
  uint64_t v4 = swift_release();
  if (v3)
  {
    uint64_t v5 = *(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & *v1));
    uint64_t v6 = (void *)((uint64_t (*)(uint64_t))v5)(v4);

    if (!v6)
    {
      uint64_t v7 = v2();
      if (v7)
      {
        uint64_t v8 = v7;
        if (BatteryUIResourceBundle())
        {
          uint64_t v49 = nullsub_2(v8);
          uint64_t v50 = v9;
          id v10 = objc_allocWithZone((Class)sub_3ED90(&qword_D6F88));
          uint64_t v11 = sub_8F940();
          uint64_t v12 = (*(uint64_t (**)(uint64_t))((char *)&stru_68.offset + (swift_isaMask & *v1)))(v11);
          uint64_t v13 = ((uint64_t (*)(uint64_t))v5)(v12);
          if (v13)
          {
            id v14 = (void *)v13;
            objc_msgSend(v1, "addChildViewController:", v13, v49, v50);

            uint64_t v15 = (void *)v5();
            if (v15)
            {
              uint64_t v16 = v15;
              id v17 = [v15 view];

              if (v17)
              {
                id v18 = [v1 view];
                if (v18)
                {
                  uint64_t v19 = v18;
                  [v18 bounds];
                  double v21 = v20;
                  double v23 = v22;
                  double v25 = v24;
                  double v27 = v26;

                  objc_msgSend(v17, "setFrame:", v21, v23, v25, v27);
                  uint64_t v28 = (void *)v5();
                  if (v28)
                  {
                    uint64_t v29 = v28;
                    id v30 = [v28 view];

                    if (v30)
                    {
                      [v30 setTranslatesAutoresizingMaskIntoConstraints:1];

                      uint64_t v31 = (void *)v5();
                      if (v31)
                      {
                        uint64_t v32 = v31;
                        id v33 = [v31 view];

                        if (v33)
                        {
                          [v33 setAutoresizingMask:18];

                          uint64_t v34 = (void *)v5();
                          if (v34)
                          {
                            uint64_t v35 = v34;
                            id v36 = [v34 view];

                            if (v36)
                            {
                              uint64_t v37 = self;
                              id v38 = [v37 clearColor];
                              [v36 setBackgroundColor:v38];

                              id v39 = [v1 view];
                              if (v39)
                              {
                                uint64_t v40 = v39;
                                id v41 = [v37 clearColor];
                                [v40 setBackgroundColor:v41];

                                id v42 = [v1 view];
                                if (v42)
                                {
                                  uint64_t v43 = v42;
                                  uint64_t v44 = (void *)v5();
                                  if (v44)
                                  {
                                    uint64_t v45 = v44;
                                    id v46 = [v44 view];

                                    if (v46)
                                    {
                                      [v43 addSubview:v46];

                                      uint64_t v47 = v5();
                                      if (v47)
                                      {
                                        uint64_t v48 = (void *)v47;
                                        sub_8F930();

                                        return;
                                      }
LABEL_38:
                                      __break(1u);
                                      return;
                                    }
LABEL_37:
                                    __break(1u);
                                    goto LABEL_38;
                                  }
LABEL_36:
                                  __break(1u);
                                  goto LABEL_37;
                                }
LABEL_35:
                                __break(1u);
                                goto LABEL_36;
                              }
LABEL_34:
                              __break(1u);
                              goto LABEL_35;
                            }
LABEL_33:
                            __break(1u);
                            goto LABEL_34;
                          }
LABEL_32:
                          __break(1u);
                          goto LABEL_33;
                        }
LABEL_31:
                        __break(1u);
                        goto LABEL_32;
                      }
LABEL_30:
                      __break(1u);
                      goto LABEL_31;
                    }
LABEL_29:
                    __break(1u);
                    goto LABEL_30;
                  }
LABEL_28:
                  __break(1u);
                  goto LABEL_29;
                }
LABEL_27:
                __break(1u);
                goto LABEL_28;
              }
LABEL_26:
              __break(1u);
              goto LABEL_27;
            }
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_24;
    }
  }
}

id PLBUIChartViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    NSString v6 = sub_90010();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithNibName:v6 bundle:a3];

  return v7;
}

id PLBUIChartViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_hostingController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_model] = 0;
  NSString v6 = &v3[OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_receiver];
  *NSString v6 = 0u;
  v6[1] = 0u;
  v3[OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_isUpdating] = 0;
  if (a2)
  {
    NSString v7 = sub_90010();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for PLBUIChartViewController();
  id v8 = objc_msgSendSuper2(&v10, "initWithNibName:bundle:", v7, a3);

  return v8;
}

id PLBUIChartViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

id PLBUIChartViewController.init(coder:)(void *a1)
{
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_hostingController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_model] = 0;
  id v3 = &v1[OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_receiver];
  _OWORD *v3 = 0u;
  v3[1] = 0u;
  v1[OBJC_IVAR____TtC14BatteryUsageUI24PLBUIChartViewController_isUpdating] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for PLBUIChartViewController();
  id v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id PLBUIChartViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PLBUIChartViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PLBUIChartViewController()
{
  return self;
}

uint64_t sub_822E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_8230C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  *(void *)a4 = a1;
  *(double *)(a4 + 8) = a5;
  uint64_t v7 = a4 + *(int *)(type metadata accessor for BatteryYAxis() + 40);
  id v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);

  return v8(v7, a2, a3);
}

uint64_t type metadata accessor for BatteryYAxis()
{
  return sub_876E0();
}

uint64_t sub_823B0(uint64_t a1)
{
  uint64_t v3 = sub_8F490();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_8F400();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v8 = __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1, v8);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = *(_OWORD *)(a1 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  *(void *)(v10 + ((v6 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0x4014000000000000;
  swift_bridgeObjectRetain();
  sub_8F3F0();
  sub_8F480();
  sub_3ED90(&qword_D6FB8);
  sub_83248();
  return sub_8F5B0();
}

uint64_t sub_825E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v64 = a3;
  uint64_t v73 = a4;
  uint64_t v72 = sub_3ED90(&qword_D7100);
  __chkstk_darwin(v72);
  uint64_t v67 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_8F300();
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v68 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_3ED90(&qword_D70A8);
  uint64_t v66 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  unint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v71 = (char *)&v55 - v11;
  uint64_t v12 = sub_8F4D0();
  __chkstk_darwin(v12 - 8);
  uint64_t v58 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_8F500();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = a2;
  uint64_t v57 = *(void *)(a2 - 8);
  __chkstk_darwin(v16);
  id v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_3ED90(&qword_D6FE0);
  uint64_t v59 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  double v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_3ED90(&qword_D6FD8);
  uint64_t v63 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v61 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = (void (*)(char *, char *, uint64_t))sub_3ED90(&qword_D7108);
  uint64_t v23 = *((void *)v74 - 1);
  __chkstk_darwin(v74);
  uint64_t v60 = (char *)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_3ED90(&qword_D6FD0);
  __chkstk_darwin(v25 - 8);
  uint64_t v75 = (uint64_t)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v76 = (uint64_t)&v55 - v28;
  uint64_t result = sub_8F5C0();
  if (BYTE8(v81)) {
    goto LABEL_22;
  }
  if ((~(void)v81 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (*(double *)&v81 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(double *)&v81 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  double v30 = *(double *)(a1 + 8);
  if ((~*(void *)&v30 & 0x7FF0000000000000) == 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v30 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v31 = (uint64_t)v30;
  if (!(uint64_t)v30)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }
  if ((uint64_t)*(double *)&v81 == 0x8000000000000000 && v31 == -1) {
    goto LABEL_21;
  }
  uint64_t v32 = 1;
  if (!((uint64_t)*(double *)&v81 % v31))
  {
    uint64_t v56 = v21;
    uint64_t v33 = type metadata accessor for BatteryYAxis();
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v18, a1 + *(int *)(v33 + 40), v15);
    sub_4B128();
    sub_8F4F0();
    sub_8F4C0();
    sub_8F430();
    uint64_t v34 = sub_54628();
    swift_beginAccess();
    *(void *)&long long v81 = *(void *)(*v34 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_labelColor);
    uint64_t v35 = sub_4AC40(&qword_D6FE8, &qword_D6FE0);
    id v36 = v61;
    uint64_t v37 = v62;
    sub_8F560();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v20, v37);
    swift_beginAccess();
    swift_retain();
    *(void *)&long long v81 = v37;
    *((void *)&v81 + 1) = &type metadata for Color;
    *(void *)&long long v82 = v35;
    *((void *)&v82 + 1) = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2();
    id v38 = v60;
    uint64_t v39 = v56;
    sub_8F570();
    swift_release();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v36, v39);
    (*(void (**)(uint64_t, char *, void *))(v23 + 32))(v76, v38, v74);
    uint64_t v32 = 0;
  }
  uint64_t v40 = v76;
  (*(void (**)(uint64_t, uint64_t, uint64_t, void (*)(char *, char *, uint64_t)))(v23 + 56))(v76, v32, 1, v74);
  sub_8F710();
  long long v81 = v78;
  long long v82 = v79;
  uint64_t v83 = v80;
  id v41 = v68;
  sub_8F2F0();
  id v42 = sub_54628();
  swift_beginAccess();
  uint64_t v77 = *(void *)(*v42 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_gridColor);
  uint64_t v43 = v70;
  sub_8F560();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v43);
  uint64_t v44 = v66;
  uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
  uint64_t v45 = v71;
  uint64_t v46 = v65;
  v74(v71, v9, v65);
  uint64_t v47 = v75;
  sub_4ACE8(v40, v75, &qword_D6FD0);
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  v48(v9, v45, v46);
  sub_83310();
  uint64_t v49 = v67;
  sub_4ACE8(v47, v67, &qword_D6FD0);
  uint64_t v50 = v9;
  uint64_t v51 = v72;
  uint64_t v52 = v49 + *(int *)(v72 + 48);
  v48((char *)v52, v50, v46);
  uint64_t v53 = v73;
  sub_4AC84(v49, v73, &qword_D6FD0);
  v74((char *)(v53 + *(int *)(v51 + 48)), (char *)v52, v46);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v44 + 8);
  v54(v45, v46);
  sub_4AE2C(v76, &qword_D6FD0);
  v54(v50, v46);
  return sub_4AE2C(v75, &qword_D6FD0);
}

uint64_t sub_83084()
{
  uint64_t v1 = *(void *)(v0 + 16);
  objc_super v2 = (int *)(type metadata accessor for BatteryYAxis() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(*(void *)v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v7 = v0 + v4;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v7 + v2[12], v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_83180@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for BatteryYAxis() - 8);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_825E8(v6, v3, v4, a1);
}

unint64_t sub_83248()
{
  unint64_t result = qword_D6FC0;
  if (!qword_D6FC0)
  {
    sub_429E0(&qword_D6FB8);
    sub_83310();
    sub_8F300();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6FC0);
  }
  return result;
}

unint64_t sub_83310()
{
  unint64_t result = qword_D6FC8;
  if (!qword_D6FC8)
  {
    sub_429E0(&qword_D6FD0);
    sub_429E0(&qword_D6FD8);
    sub_429E0(&qword_D6FE0);
    sub_4AC40(&qword_D6FE8, &qword_D6FE0);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6FC8);
  }
  return result;
}

uint64_t sub_8342C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_3ED90(&qword_D70F8);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_3ED90(&qword_D70A0);
  sub_8F590();
  uint64_t v9 = *a1;
  uint64_t v20 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v7, v9, v8);
  uint64_t v11 = sub_3ED90(&qword_D7008);
  sub_4AC40(&qword_D7000, &qword_D7008);
  uint64_t v12 = &v7[*(int *)(v5 + 56)];
  uint64_t v13 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v12, a1[1], v11);
  uint64_t v14 = sub_3ED90(&qword_D70A8);
  sub_8F300();
  uint64_t v15 = &v7[*(int *)(v5 + 72)];
  uint64_t v16 = a1[2];
  uint64_t v17 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, v16, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, v20);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2 + *(int *)(v5 + 56), v12, v11);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2 + *(int *)(v5 + 72), v15, v14);
}

uint64_t sub_83680@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_3ED90(&qword_D70E0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_3ED90(&qword_D70B0);
  sub_4AC40(&qword_D7030, &qword_D7028);
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, void, uint64_t))(v9 + 16))(v7, *a1, v8);
  uint64_t v10 = sub_3ED90(&qword_D70A8);
  sub_8F300();
  uint64_t v11 = &v7[*(int *)(v5 + 56)];
  uint64_t v12 = *(void *)(v10 - 8);
  (*(void (**)(char *, void, uint64_t))(v12 + 16))(v11, a1[1], v10);
  sub_85E4C();
  uint64_t v13 = (uint64_t)&v7[*(int *)(v5 + 72)];
  sub_4ACE8(a1[2], v13, &qword_D7040);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2 + *(int *)(v5 + 56), v11, v10);
  return sub_4AC84(v13, a2 + *(int *)(v5 + 72), &qword_D7040);
}

double *sub_83878()
{
  uint64_t v0 = sub_8F490();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_8F400();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_3ED90(&qword_D5D08);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_8F1F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_8F420();
  __n128 v10 = __chkstk_darwin(v9 - 8);
  (*(void (**)(char *, void, uint64_t, __n128))(v6 + 104))(v8, enum case for Calendar.Component.second(_:), v5, v10);
  unint64_t result = (double *)sub_4B198();
  double v12 = *result;
  if ((~*(void *)result & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v12 < 9.22337204e18)
  {
    uint64_t v13 = sub_8F210();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
    sub_8F410();
    sub_4AE2C((uint64_t)v4, &qword_D5D08);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_retain();
    sub_8F3F0();
    sub_8F480();
    sub_3ED90(&qword_D6FF0);
    sub_846F4();
    return (double *)sub_8F5A0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_83BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&long long v99 = a2;
  uint64_t v96 = a3;
  uint64_t v4 = sub_8F300();
  uint64_t v92 = *(void *)(v4 - 8);
  uint64_t v93 = v4;
  __chkstk_darwin(v4);
  uint64_t v91 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3ED90(&qword_D70A8);
  uint64_t v97 = *(void *)(v6 - 8);
  uint64_t v98 = v6;
  __chkstk_darwin(v6);
  uint64_t v95 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v94 = (char *)&v78 - v9;
  uint64_t v10 = sub_8F4D0();
  __chkstk_darwin(v10 - 8);
  uint64_t v89 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_8F500();
  __chkstk_darwin(v12 - 8);
  uint64_t v88 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_3ED90(&qword_D7008);
  uint64_t v90 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v105 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v104 = (char *)&v78 - v16;
  uint64_t v17 = sub_8F590();
  uint64_t v86 = *(void *)(v17 - 8);
  uint64_t v87 = v17;
  __chkstk_darwin(v17);
  uint64_t v85 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_3ED90(&qword_D70A0);
  uint64_t v103 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v102 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v101 = (char *)&v78 - v21;
  uint64_t v22 = sub_8F5F0();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_3ED90(&qword_D5B48);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_8F150();
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  sub_8F5C0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29);
  if (result == 1) {
    goto LABEL_10;
  }
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  uint64_t v100 = v32;
  uint64_t v83 = v29;
  v35(v32, v28, v29);
  uint64_t v36 = sub_8F5E0();
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  uint64_t v84 = v33;
  v37(v25, v33, v22);
  if (v36)
  {
    sub_8F5E0();
    uint64_t v38 = sub_8F5D0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    uint64_t v39 = v99;
    if (!__OFSUB__(v38, 1)) {
      goto LABEL_6;
    }
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  uint64_t v39 = v99;
LABEL_6:
  char v40 = (*(uint64_t (**)(char *))(*(void *)v39 + 512))(v100);
  uint64_t v82 = v30;
  if ((v40 & 1) == 0)
  {
    sub_3ED90(&qword_D70D8);
    uint64_t v41 = swift_allocObject();
    __asm { FMOV            V1.2D, #2.0 }
    *(_OWORD *)(v41 + 16) = xmmword_9C980;
    *(_OWORD *)(v41 + 32) = _Q1;
  }
  uint64_t v47 = sub_54628();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_8F710();
  long long v99 = v109;
  long long v81 = v110;
  uint64_t v80 = v111;
  swift_beginAccess();
  sub_8F710();
  long long v78 = v113;
  long long v79 = v112;
  uint64_t v48 = v114;
  swift_beginAccess();
  long long v118 = v79;
  long long v119 = v78;
  uint64_t v120 = v48;
  uint64_t v49 = v85;
  sub_8F580();
  swift_beginAccess();
  *(void *)&long long v115 = *(void *)(*v47 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_gridColor);
  uint64_t v50 = (uint64_t)v102;
  uint64_t v51 = v87;
  sub_8F560();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v49, v51);
  (*(void (**)(char *, uint64_t, uint64_t))(v103 + 32))(v101, v50, v107);
  sub_8F4E0();
  sub_4B0CC();
  uint64_t v52 = swift_beginAccess();
  double v53 = *(double *)(*v47 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_xLabelSpacing) * 0.5
      + *(double *)(*v47 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_xLabelAdditionalOffset);
  __chkstk_darwin(v52);
  sub_8F4C0();
  uint64_t v76 = sub_3ED90(&qword_D70E8);
  unint64_t v77 = sub_87640();
  uint64_t v74 = sub_87454;
  uint64_t v75 = &v72;
  char v73 = 0;
  double v72 = v53;
  uint64_t v54 = v104;
  sub_8F440();
  long long v115 = v99;
  long long v116 = v81;
  uint64_t v117 = v80;
  uint64_t v55 = v91;
  sub_8F2F0();
  swift_beginAccess();
  v108[0] = *(void *)(*v47 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_gridColor);
  uint64_t v56 = (uint64_t)v95;
  uint64_t v57 = v93;
  sub_8F560();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v55, v57);
  uint64_t v59 = v97;
  uint64_t v58 = v98;
  uint64_t v60 = v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v97 + 32))(v94, v56, v98);
  uint64_t v61 = v103;
  uint64_t v62 = v101;
  (*(void (**)(uint64_t, char *, uint64_t))(v103 + 16))(v50, v101, v107);
  v108[0] = v50;
  uint64_t v63 = v90;
  uint64_t v64 = (uint64_t)v105;
  uint64_t v65 = v54;
  uint64_t v66 = v106;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v105, v65, v106);
  v108[1] = v64;
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v56, v60, v58);
  v108[2] = v56;
  sub_8342C(v108, v96);
  uint64_t v67 = *(void (**)(char *, uint64_t))(v59 + 8);
  v67(v60, v58);
  uint64_t v68 = *(void (**)(char *, uint64_t))(v63 + 8);
  v68(v104, v66);
  uint64_t v69 = *(void (**)(char *, uint64_t))(v61 + 8);
  uint64_t v70 = v62;
  uint64_t v71 = v107;
  v69(v70, v107);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v100, v83);
  v67((char *)v56, v58);
  v68(v105, v106);
  return ((uint64_t (*)(char *, uint64_t))v69)(v102, v71);
}

uint64_t sub_846EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_83BA4(a1, v2, a2);
}

unint64_t sub_846F4()
{
  unint64_t result = qword_D6FF8;
  if (!qword_D6FF8)
  {
    sub_429E0(&qword_D6FF0);
    sub_8F590();
    swift_getOpaqueTypeConformance2();
    sub_4AC40(&qword_D7000, &qword_D7008);
    sub_8F300();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D6FF8);
  }
  return result;
}

double *sub_84818()
{
  uint64_t v1 = sub_8F490();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_8F400();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_3ED90(&qword_D5D08);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_8F1F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_8F420();
  __n128 v11 = __chkstk_darwin(v10 - 8);
  (*(void (**)(char *, void, uint64_t, __n128))(v7 + 104))(v9, enum case for Calendar.Component.second(_:), v6, v11);
  unint64_t result = (double *)sub_4B18C();
  double v13 = *result;
  if ((~*(void *)result & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((unsigned __int128)((uint64_t)v13 * (__int128)3) >> 64 == (3 * (uint64_t)v13) >> 63)
  {
    uint64_t v14 = sub_8F210();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 1, 1, v14);
    sub_8F410();
    sub_4AE2C((uint64_t)v5, &qword_D5D08);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v15 = swift_allocObject();
    long long v16 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v15 + 16) = *(_OWORD *)v0;
    *(_OWORD *)(v15 + 32) = v16;
    *(unsigned char *)(v15 + 48) = *(unsigned char *)(v0 + 32);
    swift_retain();
    swift_retain();
    sub_8F3F0();
    sub_8F480();
    sub_3ED90(&qword_D7010);
    sub_85CE8();
    return (double *)sub_8F5A0();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_84B8C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v152 = a1;
  uint64_t v140 = a2;
  uint64_t v116 = sub_8F590();
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v114 = &v110[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v123 = sub_3ED90(&qword_D70A0);
  uint64_t v122 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  long long v113 = &v110[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  long long v112 = &v110[-v5];
  uint64_t v6 = sub_3ED90(&qword_D7040);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v110[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  __n128 v11 = &v110[-v10];
  uint64_t v136 = sub_8F1F0();
  uint64_t v135 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  double v134 = &v110[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v133 = sub_8F300();
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  double v131 = &v110[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v139 = sub_3ED90(&qword_D70A8);
  uint64_t v151 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  unint64_t v138 = &v110[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  double v130 = &v110[-v16];
  __chkstk_darwin(v17);
  id v150 = &v110[-v18];
  uint64_t v19 = sub_8F4D0();
  __chkstk_darwin(v19 - 8);
  double v125 = &v110[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_8F500();
  __chkstk_darwin(v21 - 8);
  uint64_t v146 = &v110[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v127 = sub_3ED90(&qword_D7028);
  uint64_t v126 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v24 = &v110[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v129 = sub_3ED90(&qword_D7020);
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v26 = &v110[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v149 = sub_3ED90(&qword_D70B0);
  uint64_t v148 = *(void *)(v149 - 8);
  __chkstk_darwin(v149);
  uint64_t v137 = &v110[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v28);
  double v124 = &v110[-v29];
  __chkstk_darwin(v30);
  uint64_t v147 = &v110[-v31];
  uint64_t v32 = sub_3ED90(&qword_D5B48);
  __chkstk_darwin(v32 - 8);
  uint64_t v34 = &v110[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v35 = sub_8F150();
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = &v110[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_8F5C0();
  uint64_t v39 = v35;
  uint64_t v40 = v36;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v39);
  if (result == 1) {
    goto LABEL_17;
  }
  id v42 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v36 + 32);
  uint64_t v121 = v39;
  v42(v38, v34, v39);
  uint64_t v43 = sub_8F5E0();
  uint64_t v44 = sub_8F5E0();
  uint64_t result = sub_8F5D0();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
  uint64_t v119 = v40;
  uint64_t v117 = v11;
  uint64_t v120 = v8;
  uint64_t v143 = v43;
  uint64_t v142 = v44;
  uint64_t v141 = result - 1;
  BOOL v45 = v44 == result - 1;
  uint64_t v46 = v152;
  uint64_t v47 = *(void *)(v152 + 8);
  int v144 = (*(uint64_t (**)(unsigned char *))(*(void *)v47 + 504))(v38);
  uint64_t v48 = sub_8F5E0();
  uint64_t v49 = *(unsigned __int8 *)(v46 + 32);
  double v50 = *(double *)(v46 + 16);
  uint64_t v51 = *(void (**)(unsigned char *, uint64_t, BOOL, BOOL, uint64_t, double))(*(void *)v47 + 528);
  uint64_t v145 = v38;
  uint64_t v118 = v47;
  v51(v38, v48, v43 == 0, v45, v49, v50);
  sub_8F4E0();
  uint64_t v52 = sub_4B0CC();
  uint64_t v53 = *(void *)v46;
  double v54 = *(double *)(*(void *)v46 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_xLabelSpacing);
  double v55 = *(double *)(*(void *)v46 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_xLabelAdditionalOffset);
  double v56 = 0.0;
  int v111 = v49;
  if ((v49 & 1) == 0) {
    double v56 = *(double *)(v53 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_axisLabelPadding);
  }
  double v57 = v54 * 0.5 + v55 + v56;
  __chkstk_darwin(v52);
  sub_8F4C0();
  uint64_t v108 = sub_3ED90(&qword_D70B8);
  unint64_t v109 = sub_873B4();
  uint64_t v106 = sub_87300;
  uint64_t v107 = &v104;
  char v105 = 0;
  double v104 = v57;
  sub_8F440();
  swift_bridgeObjectRelease();
  *(void *)&long long v163 = *(void *)(v53 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_labelColor);
  uint64_t v58 = sub_4AC40(&qword_D7030, &qword_D7028);
  uint64_t v59 = v127;
  sub_8F560();
  (*(void (**)(unsigned char *, uint64_t))(v126 + 8))(v24, v59);
  *(void *)&long long v163 = v59;
  *((void *)&v163 + 1) = &type metadata for Color;
  *(void *)&long long v164 = v58;
  *((void *)&v164 + 1) = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  uint64_t v60 = v124;
  uint64_t v61 = v129;
  sub_8F570();
  (*(void (**)(unsigned char *, uint64_t))(v128 + 8))(v26, v61);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v148 + 32))(v147, v60, v149);
  if ((v144 & 1) == 0)
  {
    sub_3ED90(&qword_D70D8);
    uint64_t v62 = swift_allocObject();
    __asm { FMOV            V1.2D, #2.0 }
    *(_OWORD *)(v62 + 16) = xmmword_9C980;
    *(_OWORD *)(v62 + 32) = _Q1;
  }
  uint64_t v68 = v139;
  uint64_t v69 = v151;
  uint64_t v70 = v136;
  uint64_t v71 = v135;
  double v72 = v134;
  uint64_t v73 = v133;
  sub_8F710();
  long long v163 = v154;
  long long v164 = v155;
  uint64_t v165 = v156;
  uint64_t v74 = v131;
  sub_8F2F0();
  uint64_t v146 = *(unsigned char **)(v53 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_gridColor);
  *(void *)&long long v160 = v146;
  uint64_t v75 = v130;
  sub_8F560();
  (*(void (**)(unsigned char *, uint64_t))(v132 + 8))(v74, v73);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v69 + 32))(v150, v75, v68);
  (*(void (**)(unsigned char *, void, uint64_t))(v71 + 104))(v72, enum case for Calendar.Component.hour(_:), v70);
  uint64_t v76 = sub_8F200();
  uint64_t v77 = (*(uint64_t (**)(unsigned char *, uint64_t))(v71 + 8))(v72, v70);
  uint64_t v78 = v118;
  if (v76 % 12 == 3
    && ((*(uint64_t (**)(uint64_t, double))(*(void *)v118 + 488))(v77, v50) & 1) != 0
    && v143
    && v142 != v141)
  {
    uint64_t v79 = v68;
    uint64_t v80 = 1;
    uint64_t v81 = v123;
    uint64_t v82 = v122;
    uint64_t v83 = (uint64_t)v117;
  }
  else
  {
    char v84 = v144;
    sub_862C4(v53, v78, v111, v143 == 0, v144 & 1, v142 == v141, v50);
    uint64_t v79 = v68;
    if ((v84 & 1) == 0)
    {
      sub_3ED90(&qword_D70D8);
      uint64_t v85 = swift_allocObject();
      __asm { FMOV            V1.2D, #2.0 }
      *(_OWORD *)(v85 + 16) = xmmword_9C980;
      *(_OWORD *)(v85 + 32) = _Q1;
    }
    uint64_t v81 = v123;
    uint64_t v82 = v122;
    uint64_t v83 = (uint64_t)v117;
    uint64_t v87 = v146;
    sub_8F710();
    long long v160 = v157;
    long long v161 = v158;
    uint64_t v162 = v159;
    uint64_t v88 = v114;
    sub_8F580();
    v153[0] = v87;
    uint64_t v89 = v113;
    uint64_t v90 = v116;
    sub_8F560();
    (*(void (**)(unsigned char *, uint64_t))(v115 + 8))(v88, v90);
    uint64_t v91 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v82 + 32);
    uint64_t v92 = v112;
    v91(v112, v89, v81);
    v91((unsigned char *)v83, v92, v81);
    uint64_t v80 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v83, v80, 1, v81);
  uint64_t v93 = v148;
  uint64_t v94 = v137;
  uint64_t v95 = v147;
  uint64_t v96 = v149;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v148 + 16))(v137, v147, v149);
  v153[0] = v94;
  uint64_t v97 = v83;
  uint64_t v98 = v151;
  long long v99 = v138;
  uint64_t v100 = v150;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v151 + 16))(v138, v150, v79);
  v153[1] = v99;
  uint64_t v101 = (uint64_t)v120;
  sub_4ACE8(v97, (uint64_t)v120, &qword_D7040);
  v153[2] = v101;
  sub_83680(v153, v140);
  sub_4AE2C(v97, &qword_D7040);
  uint64_t v102 = *(void (**)(unsigned char *, uint64_t))(v98 + 8);
  v102(v100, v79);
  uint64_t v103 = *(void (**)(unsigned char *, uint64_t))(v93 + 8);
  v103(v95, v96);
  (*(void (**)(unsigned char *, uint64_t))(v119 + 8))(v145, v121);
  sub_4AE2C(v101, &qword_D7040);
  v102(v99, v79);
  return ((uint64_t (*)(unsigned char *, uint64_t))v103)(v94, v96);
}

uint64_t sub_85CA0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_85CE0@<X0>(uint64_t a1@<X8>)
{
  return sub_84B8C(v1 + 16, a1);
}

unint64_t sub_85CE8()
{
  unint64_t result = qword_D7018;
  if (!qword_D7018)
  {
    sub_429E0(&qword_D7010);
    sub_429E0(&qword_D7020);
    sub_429E0(&qword_D7028);
    sub_4AC40(&qword_D7030, &qword_D7028);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_8F300();
    swift_getOpaqueTypeConformance2();
    sub_85E4C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7018);
  }
  return result;
}

unint64_t sub_85E4C()
{
  unint64_t result = qword_D7038;
  if (!qword_D7038)
  {
    sub_429E0(&qword_D7040);
    sub_8F590();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7038);
  }
  return result;
}

uint64_t sub_85F04@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10 = sub_54628();
  swift_beginAccess();
  *(void *)a3 = *v10;
  *(void *)(a3 + 8) = a1;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  *(unsigned char *)(a3 + 32) = a2;
  return swift_retain();
}

uint64_t sub_85F78(uint64_t a1)
{
  unint64_t v2 = sub_86514();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_85FB4(uint64_t a1)
{
  unint64_t v2 = sub_86514();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_85FF0@<X0>(double *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_67114(*a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_8601C(void *a1)
{
  uint64_t v2 = sub_3ED90(&qword_D7048);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3EE38(a1, a1[3]);
  sub_86514();
  sub_90600();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_8612C()
{
  uint64_t v0 = sub_8F190();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_3ED90(&qword_D6360);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8F180();
  sub_60188();
  sub_8F070();
  sub_8F060();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_86270@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_8F7D0();
  *a1 = v3;
  return result;
}

uint64_t sub_8629C()
{
  return sub_8F7E0();
}

void sub_862C4(uint64_t a1, uint64_t a2, char a3, char a4, char a5, char a6, double a7)
{
  uint64_t v14 = sub_8F150();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a4 & 1 | ((a3 & 1) == 0) | a5 & 1) && (a6 & 1) != 0)
  {
    sub_4B18C();
    sub_8F140();
    if ((*(uint64_t (**)(char *))(*(void *)a2 + 504))(v17))
    {
      uint64_t v18 = *(void **)(a1 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_formatterForDate);
      Class isa = sub_8F0C0().super.isa;
      id v20 = [v18 stringFromDate:isa];

      uint64_t v21 = sub_90020();
      uint64_t v23 = v22;

      (*(void (**)(uint64_t, uint64_t, double))(*(void *)a2 + 480))(v21, v23, a7);
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

unint64_t sub_86514()
{
  unint64_t result = qword_DA040[0];
  if (!qword_DA040[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_DA040);
  }
  return result;
}

unint64_t sub_8656C()
{
  unint64_t result = qword_D7050;
  if (!qword_D7050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7050);
  }
  return result;
}

unint64_t sub_865C4()
{
  unint64_t result = qword_D7058;
  if (!qword_D7058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7058);
  }
  return result;
}

unint64_t sub_8661C()
{
  unint64_t result = qword_D7060;
  if (!qword_D7060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7060);
  }
  return result;
}

unint64_t sub_86674()
{
  unint64_t result = qword_D7068;
  if (!qword_D7068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7068);
  }
  return result;
}

uint64_t sub_866C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_866D0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_8677C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 16) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v12 = *v13;
    uint64_t v14 = ((unint64_t)v12 + v6 + 8) & ~v6;
    uint64_t v15 = ((unint64_t)v13 + v6 + 8) & ~v6;
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v16(v14, v15, v4);
  }
  return a1;
}

uint64_t sub_86894(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 15;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = ((v3 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_8690C(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  unint64_t v4 = (unint64_t)a2 + 15;
  *a1 = v5;
  unint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *(void *)(v4 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void *)(a3 + 16);
  int v8 = *(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v10 = ((unint64_t)v6 + v9 + 8) & ~v9;
  unint64_t v11 = (v9 + 8 + (v4 & 0xFFFFFFFFFFFFFFF8)) & ~v9;
  swift_bridgeObjectRetain();
  v8(v10, v11, v7);
  return a1;
}

void *sub_869B0(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  unint64_t v6 = (unint64_t)a1 + 15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v6 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(unsigned __int8 *)(v7 + 80) + 8 + (v6 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 8 + (v5 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

void *sub_86A5C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_86AE0(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  unint64_t v6 = (unint64_t)a1 + 15;
  swift_bridgeObjectRelease();
  *(void *)(v6 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(unsigned __int8 *)(v7 + 80) + 8 + (v6 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 8 + (v5 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_86B7C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 8) & ~v6);
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_86D24(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 16) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x86F88);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9;
          id v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

ValueMetadata *type metadata accessor for Battery10DayXAxis()
{
  return &type metadata for Battery10DayXAxis;
}

uint64_t initializeWithCopy for Battery24HrXAxis(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Battery24HrXAxis(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for Battery24HrXAxis(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for Battery24HrXAxis(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Battery24HrXAxis(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Battery24HrXAxis()
{
  return &type metadata for Battery24HrXAxis;
}

ValueMetadata *type metadata accessor for Battery24HrXAxis.Constant()
{
  return &type metadata for Battery24HrXAxis.Constant;
}

ValueMetadata *type metadata accessor for PLBUIHourMinutesFormatStyle()
{
  return &type metadata for PLBUIHourMinutesFormatStyle;
}

uint64_t sub_8718C()
{
  return sub_4AC40(&qword_D7070, &qword_D7078);
}

uint64_t sub_871C8()
{
  return sub_4AC40(&qword_D7080, &qword_D7088);
}

uint64_t sub_87204()
{
  return sub_4AC40(&qword_D7090, &qword_D7098);
}

ValueMetadata *type metadata accessor for PLBUIHourMinutesFormatStyle.CodingKeys()
{
  return &type metadata for PLBUIHourMinutesFormatStyle.CodingKeys;
}

unint64_t sub_87254()
{
  unint64_t result = qword_DA450;
  if (!qword_DA450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_DA450);
  }
  return result;
}

unint64_t sub_872AC()
{
  unint64_t result = qword_DA458[0];
  if (!qword_DA458[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_DA458);
  }
  return result;
}

uint64_t sub_87300@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 32);
  sub_4AB2C();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_8FC00();
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(*v3 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_xLabelSpacing);
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v8 & 1;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v11;
  return result;
}

unint64_t sub_873B4()
{
  unint64_t result = qword_D70C0;
  if (!qword_D70C0)
  {
    sub_429E0(&qword_D70B8);
    sub_4AC40(&qword_D70C8, &qword_D70D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D70C0);
  }
  return result;
}

uint64_t sub_87454@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = sub_8F5E0();
  uint64_t v6 = sub_8F5E0();
  uint64_t v7 = sub_8F5E0();
  uint64_t result = sub_8F5D0();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, BOOL, BOOL))(*(void *)v3 + 536))(v4, v5, v6 == 0, v7 == result - 1);
    sub_4AB2C();
    uint64_t v9 = sub_8FC00();
    uint64_t v11 = v10;
    char v13 = v12 & 1;
    unsigned int v14 = sub_54628();
    swift_beginAccess();
    swift_retain();
    uint64_t v15 = sub_8FBE0();
    uint64_t v17 = v16;
    char v19 = v18;
    uint64_t v24 = v20;
    swift_release();
    sub_4AB80(v9, v11, v13);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v21 = *(void *)(*v14 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_xLabelSpacing);
    uint64_t KeyPath = swift_getKeyPath();
    swift_beginAccess();
    uint64_t v23 = *(void *)(*v14 + OBJC_IVAR____TtC14BatteryUsageUI18BUIChartViewConfig_labelColor);
    *(void *)a1 = v15;
    *(void *)(a1 + 8) = v17;
    *(unsigned char *)(a1 + 16) = v19 & 1;
    *(void *)(a1 + 24) = v24;
    *(void *)(a1 + 32) = KeyPath;
    *(void *)(a1 + 40) = v21;
    *(void *)(a1 + 48) = v23;
    return swift_retain();
  }
  return result;
}

unint64_t sub_87640()
{
  unint64_t result = qword_D70F0;
  if (!qword_D70F0)
  {
    sub_429E0(&qword_D70E8);
    sub_873B4();
    sub_4AC40(&qword_D59E0, &qword_D59E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D70F0);
  }
  return result;
}

uint64_t sub_876E0()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for BUIChartIconMark()
{
  uint64_t result = qword_DA570;
  if (!qword_DA570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_8775C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v8 = (int *)type metadata accessor for BUIChartIconMark();
  uint64_t v9 = v8[7];
  uint64_t v10 = sub_54628();
  swift_beginAccess();
  *(void *)(a4 + v9) = *v10;
  sub_877FC(a1, a4);
  *(void *)(a4 + v8[6]) = a2;
  *(void *)(a4 + v8[5]) = a3;
  return swift_retain();
}

uint64_t sub_877FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_87860@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_3ED90(&qword_D7110);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_3ED90(&qword_D7118);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_3ED90(&qword_D7120);
  uint64_t v11 = *(void **)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v42 = (char *)&v38 - v15;
  __chkstk_darwin(v16);
  char v18 = (char *)&v38 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v38 - v20;
  sub_87D00(v2, (uint64_t)&v44);
  if (*((void *)&v45 + 1))
  {
    v52[0] = v44;
    v52[1] = v45;
    uint64_t v53 = v46;
    v50[0] = v47;
    v50[1] = v48;
    uint64_t v51 = v49;
    uint64_t v22 = type metadata accessor for BUIChartIconMark();
    uint64_t v43 = v13;
    uint64_t v23 = v22;
    uint64_t v24 = *(int *)(v22 + 24);
    uint64_t v41 = a1;
    (*(void (**)(void))(**(void **)(v2 + v24) + 384))();
    uint64_t v25 = sub_8FD60();
    uint64_t v40 = v9;
    uint64_t v39 = v4;
    sub_87E90(v2, (uint64_t)v50, v25, (uint64_t)v21);
    swift_release();
    sub_87E90(v2, (uint64_t)v52, *(void *)(v2 + *(int *)(v23 + 20)), (uint64_t)v18);
    uint64_t v26 = (void (*)(char *, char *, uint64_t))v11[2];
    uint64_t v27 = v42;
    v26(v42, v21, v10);
    uint64_t v28 = v43;
    v26(v43, v18, v10);
    sub_8F610();
    sub_88344();
    v26(v6, v27, v10);
    uint64_t v38 = v21;
    uint64_t v29 = v18;
    uint64_t v30 = v39;
    uint64_t v31 = &v6[*(int *)(v39 + 48)];
    v26(v31, v28, v10);
    uint64_t v32 = (void (*)(char *, char *, uint64_t))v11[4];
    uint64_t v33 = (uint64_t)v40;
    v32(v40, v6, v10);
    v32((char *)(v33 + *(int *)(v30 + 48)), v31, v10);
    uint64_t v34 = (void (*)(char *, uint64_t))v11[1];
    v34(v29, v10);
    v34(v38, v10);
    sub_88398((uint64_t)v50);
    sub_88398((uint64_t)v52);
    v34(v43, v10);
    v34(v27, v10);
    uint64_t v35 = sub_3ED90(&qword_D7130);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v33, 0, 1, v35);
    return sub_883EC(v33, v41);
  }
  else
  {
    sub_87E30((uint64_t)&v44);
    uint64_t v37 = sub_3ED90(&qword_D7130);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(a1, 1, 1, v37);
  }
}

double sub_87D00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  if (*(unsigned char *)(a1 + *(int *)(v4 + 24)))
  {
    if (*(unsigned char *)(a1 + *(int *)(v4 + 24)) == 1)
    {
      nullsub_2(v4);
      *((void *)&v10 + 1) = &type metadata for PauseSymbol;
      unint64_t v11 = sub_884FC();
      uint64_t v5 = sub_8F4B0();
      nullsub_2(v5);
      sub_88550();
    }
    else
    {
      nullsub_2(v4);
      *((void *)&v10 + 1) = &type metadata for StopSymbol;
      unint64_t v11 = sub_88454();
      uint64_t v7 = sub_8F4B0();
      nullsub_2(v7);
      sub_884A8();
    }
  }
  else
  {
    nullsub_2(v4);
    *((void *)&v10 + 1) = &type metadata for BoltSymbol;
    unint64_t v11 = sub_885A4();
    uint64_t v6 = sub_8F4B0();
    nullsub_2(v6);
    sub_885F8();
  }
  sub_8F4B0();
  *(_OWORD *)a2 = v12;
  *(_OWORD *)(a2 + 16) = v13;
  *(void *)(a2 + 32) = v14;
  double result = *(double *)&v9;
  *(_OWORD *)(a2 + 40) = v9;
  *(_OWORD *)(a2 + 56) = v10;
  *(void *)(a2 + 72) = v11;
  return result;
}

uint64_t sub_87E30(uint64_t a1)
{
  uint64_t v2 = sub_3ED90(&qword_D7128);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_87E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v36 = a1;
  uint64_t v4 = sub_8F150();
  uint64_t v27 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_3ED90(&qword_D6668);
  __chkstk_darwin(v7 - 8);
  uint64_t v25 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_8F610();
  uint64_t v28 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_3ED90(&qword_D7140);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v29 = v12;
  uint64_t v30 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_3ED90(&qword_D7138);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v31 = v16;
  uint64_t v32 = v17;
  __chkstk_darwin(v16);
  uint64_t v26 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8F8E0();
  sub_6A2D0();
  sub_8F470();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v4);
  type metadata accessor for BUIChartIconMark();
  sub_8F600();
  unint64_t v19 = sub_88344();
  sub_8F3C0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
  uint64_t v40 = (void *)v19;
  uint64_t v41 = v34;
  uint64_t v37 = v9;
  uint64_t v38 = &type metadata for AnyChartSymbolShape;
  uint64_t v39 = &protocol witness table for PointMark;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = v26;
  uint64_t v22 = v29;
  sub_8F360();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v22);
  sub_6A380();
  uint64_t v37 = v22;
  uint64_t v38 = &type metadata for Color;
  uint64_t v39 = (void *)OpaqueTypeConformance2;
  uint64_t v40 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  uint64_t v23 = v31;
  sub_8F3A0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v21, v23);
}

unint64_t sub_88344()
{
  unint64_t result = qword_D7148;
  if (!qword_D7148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7148);
  }
  return result;
}

uint64_t sub_88398(uint64_t a1)
{
  return a1;
}

uint64_t sub_883EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3ED90(&qword_D7118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_88454()
{
  unint64_t result = qword_D7150;
  if (!qword_D7150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7150);
  }
  return result;
}

unint64_t sub_884A8()
{
  unint64_t result = qword_D7158;
  if (!qword_D7158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7158);
  }
  return result;
}

unint64_t sub_884FC()
{
  unint64_t result = qword_D7160;
  if (!qword_D7160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7160);
  }
  return result;
}

unint64_t sub_88550()
{
  unint64_t result = qword_D7168;
  if (!qword_D7168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7168);
  }
  return result;
}

unint64_t sub_885A4()
{
  unint64_t result = qword_D7170;
  if (!qword_D7170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7170);
  }
  return result;
}

unint64_t sub_885F8()
{
  unint64_t result = qword_D7178;
  if (!qword_D7178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7178);
  }
  return result;
}

uint64_t sub_8864C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_88678()
{
  return sub_8F320();
}

void *sub_88694(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_8F150();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(v4, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
    v8((void *)((char *)v4 + v9[5]), (void *)((char *)a2 + v9[5]), v7);
    *((unsigned char *)v4 + v9[6]) = *((unsigned char *)a2 + v9[6]);
    *((unsigned char *)v4 + v9[7]) = *((unsigned char *)a2 + v9[7]);
    uint64_t v10 = a3[6];
    *(void *)((char *)v4 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *(void *)((char *)v4 + v10) = *(void *)((char *)a2 + v10);
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_887D8(uint64_t a1)
{
  uint64_t v2 = sub_8F150();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(a1, v2);
  uint64_t v4 = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  v3(a1 + *(int *)(v4 + 20), v2);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_88898(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  v7(a1 + v8[5], a2 + v8[5], v6);
  *(unsigned char *)(a1 + v8[6]) = *(unsigned char *)(a2 + v8[6]);
  *(unsigned char *)(a1 + v8[7]) = *(unsigned char *)(a2 + v8[7]);
  uint64_t v9 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_88990(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  v7(a1 + v8[5], a2 + v8[5], v6);
  *(unsigned char *)(a1 + v8[6]) = *(unsigned char *)(a2 + v8[6]);
  *(unsigned char *)(a1 + v8[7]) = *(unsigned char *)(a2 + v8[7]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_88AA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  v7(a1 + v8[5], a2 + v8[5], v6);
  *(unsigned char *)(a1 + v8[6]) = *(unsigned char *)(a2 + v8[6]);
  *(unsigned char *)(a1 + v8[7]) = *(unsigned char *)(a2 + v8[7]);
  uint64_t v9 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_88B8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F150();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  v7(a1 + v8[5], a2 + v8[5], v6);
  *(unsigned char *)(a1 + v8[6]) = *(unsigned char *)(a2 + v8[6]);
  *(unsigned char *)(a1 + v8[7]) = *(unsigned char *)(a2 + v8[7]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_88C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_88CA0);
}

uint64_t sub_88CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_88D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_88D74);
}

uint64_t sub_88D74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for BUIChartViewData.ChargingIntervalElement(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_88E30()
{
  uint64_t result = type metadata accessor for BUIChartViewData.ChargingIntervalElement(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_88ED0()
{
  unint64_t result = qword_D7208;
  if (!qword_D7208)
  {
    sub_429E0(&qword_D7118);
    sub_88F44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7208);
  }
  return result;
}

unint64_t sub_88F44()
{
  unint64_t result = qword_D7210;
  if (!qword_D7210)
  {
    sub_429E0(&qword_D7130);
    sub_429E0(&qword_D7138);
    sub_429E0(&qword_D7140);
    sub_8F610();
    sub_88344();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_D7210);
  }
  return result;
}

uint64_t sub_89088()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 24) = [self weakObjectsHashTable];
  *(void *)(v0 + 16) = [objc_allocWithZone((Class)PLBatteryUIBackendModel) init];
  sub_89100();
  return v0;
}

void sub_89100()
{
  uint64_t v1 = v0;
  int out_token = 0;
  sub_60788(0, (unint64_t *)&qword_D5438);
  uint64_t v2 = sub_90280();
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = sub_89388;
  uint64_t v15 = v3;
  aBlock = _NSConcreteStackBlock;
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_89394;
  uint64_t v13 = &unk_C1398;
  uint64_t v4 = _Block_copy(&aBlock);
  swift_release();
  notify_register_dispatch("com.apple.system.powersources.source", &out_token, v2, v4);
  _Block_release(v4);

  int v9 = 0;
  int v5 = sub_90280();
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = sub_89400;
  uint64_t v15 = v6;
  aBlock = _NSConcreteStackBlock;
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_89394;
  uint64_t v13 = &unk_C13C0;
  uint64_t v7 = _Block_copy(&aBlock);
  swift_release();
  notify_register_dispatch("com.apple.system.powersources.percent", &v9, v5, v7);
  _Block_release(v7);

  id v8 = [self defaultCenter];
  [v8 addObserver:v1 selector:"handleLPMChangedForAllObserversWithSelector:" name:NSProcessInfoPowerStateDidChangeNotification object:0];
}

uint64_t sub_89350()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_89388(uint64_t a1)
{
}

uint64_t sub_89394(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_893E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_893F8()
{
  return swift_release();
}

void sub_89400(uint64_t a1)
{
}

void sub_8940C(uint64_t a1, SEL *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v4 = [*(id *)(Strong + 24) allObjects];
    unint64_t v5 = sub_900D0();

    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_904F0();
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFFF8));
      if (v6)
      {
LABEL_4:
        if (v6 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v6; ++i)
        {
          if ((v5 & 0xC000000000000001) != 0)
          {
            id v8 = (void *)sub_90400();
          }
          else
          {
            id v8 = *(void **)(v5 + 8 * i + 32);
            swift_unknownObjectRetain();
          }
          [v8 *a2];
          swift_unknownObjectRelease();
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
}

unint64_t sub_89594()
{
  return 0xD00000000000001ALL;
}

void sub_895B0()
{
  uint64_t v1 = sub_8F150();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = sub_3ED90(&qword_D5B48);
  *(void *)&double v9 = __chkstk_darwin(v8 - 8).n128_u64[0];
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(v0 + 16);
  objc_msgSend(v12, "resetQuery", v9);
  [v12 addSkipPlistWriteKey];
  id v13 = [v12 endOfHour];
  if (v13)
  {
    uint64_t v14 = v13;
    sub_8F130();

    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v11, v7, v1);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v11, 0, 1, v1);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v11, 1, v1) == 1)
    {
      Class isa = 0;
    }
    else
    {
      Class isa = sub_8F0C0().super.isa;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v11, 1, 1, v1);
    Class isa = 0;
  }

  [v12 runQuery];
  id v16 = [v12 queryResult];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_8FF50();
  }
  else
  {
    unint64_t v19 = sub_89C30((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v18 = v19;
  }
  __chkstk_darwin(v19);
  *(&v35 - 2) = v18;
  sub_4AFE0(sub_8A3D4);
  uint64_t v36 = (void *)0xD000000000000018;
  unint64_t v37 = 0x80000000000A4700;
  sub_903C0();
  if (*(void *)(v18 + 16) && (unint64_t v20 = sub_89EE8((uint64_t)v38), (v21 & 1) != 0))
  {
    sub_4B9F0(*(void *)(v18 + 56) + 32 * v20, (uint64_t)&v39);
  }
  else
  {
    long long v39 = 0u;
    long long v40 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_8A484((uint64_t)v38);
  if (*((void *)&v40 + 1))
  {
    sub_3ED90(&qword_D7218);
    if (swift_dynamicCast())
    {
      uint64_t v22 = v36;
      uint64_t v36 = (void *)0xD000000000000013;
      unint64_t v37 = 0x80000000000A4720;
      sub_903C0();
      if (v22[2] && (unint64_t v23 = sub_89EE8((uint64_t)v38), (v24 & 1) != 0))
      {
        sub_4B9F0(v22[7] + 32 * v23, (uint64_t)&v39);
      }
      else
      {
        long long v39 = 0u;
        long long v40 = 0u;
      }
      sub_8A484((uint64_t)v38);
      if (*((void *)&v40 + 1))
      {
        sub_60788(0, &qword_D5C80);
        if (swift_dynamicCast())
        {
          id v25 = v36;
          uint64_t v26 = self;
          [v25 doubleValue];
          id v27 = objc_msgSend(v26, "localizedStringWithPercentage:");
          if (!v27)
          {
            __break(1u);
LABEL_37:
            __break(1u);
            return;
          }
          uint64_t v28 = v27;
          sub_90020();
        }
      }
      else
      {
        sub_6E9A0((uint64_t)&v39);
      }
      uint64_t v36 = (void *)0xD000000000000017;
      unint64_t v37 = 0x80000000000A4740;
      sub_903C0();
      if (v22[2] && (unint64_t v29 = sub_89EE8((uint64_t)v38), (v30 & 1) != 0))
      {
        sub_4B9F0(v22[7] + 32 * v29, (uint64_t)&v39);
      }
      else
      {
        long long v39 = 0u;
        long long v40 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_8A484((uint64_t)v38);
      if (*((void *)&v40 + 1))
      {
        sub_60788(0, &qword_D5C80);
        if (swift_dynamicCast())
        {
          id v31 = v36;
          [v36 doubleValue];
          sub_8F100();
          uint64_t v32 = self;
          Class v33 = sub_8F0C0().super.isa;
          id v34 = [v32 getRelativeDateStringForDate:v33];

          if (v34)
          {
            sub_90020();

            (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
            return;
          }
          goto LABEL_37;
        }
      }
      else
      {
        sub_6E9A0((uint64_t)&v39);
      }
    }
  }
  else
  {
    sub_6E9A0((uint64_t)&v39);
  }
}

unint64_t sub_89C30(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_3ED90(&qword_D72C8);
  uint64_t v2 = sub_90520();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_8A69C(v6, (uint64_t)v15);
    unint64_t result = sub_89EE8((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_6E928(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    void v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_89D60()
{
  return _swift_deallocClassInstance(v0, 32, 7);
}

id sub_89DA0(uint64_t a1)
{
  return [*(id *)(*(void *)v1 + 24) addObject:a1];
}

id sub_89DB8(uint64_t a1)
{
  return [*(id *)(*(void *)v1 + 24) removeObject:a1];
}

uint64_t sub_89DD0()
{
  return 0;
}

uint64_t sub_89E30()
{
  return IOPSDrawingUnlimitedPower();
}

id sub_89E48()
{
  id v0 = [self processInfo];
  id v1 = [v0 isLowPowerModeEnabled];

  return v1;
}

uint64_t sub_89EA0()
{
  return sub_8A1F4();
}

void sub_89EC4()
{
}

unint64_t sub_89EE8(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_903A0(*(void *)(v2 + 40));

  return sub_89F2C(a1, v4);
}

unint64_t sub_89F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_8A640(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_903B0();
      sub_8A484((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

void sub_89FF4()
{
  id v1 = [*(id *)(v0 + 24) allObjects];
  unint64_t v2 = sub_900D0();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_904F0();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = (void *)sub_90400();
    }
    else
    {
      uint64_t v5 = *(void **)(v2 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    [v5 handlePercentChangedNotification];
    swift_unknownObjectRelease();
  }
LABEL_10:

  swift_bridgeObjectRelease();
}

uint64_t sub_8A10C()
{
  CFDictionaryRef v0 = IOPSCopyExternalPowerAdapterDetails();
  if (v0)
  {
    v0;
    uint64_t result = sub_8FF40();
    __break(1u);
  }
  else
  {
    sub_4B014((uint64_t (*)(void))sub_89594);
    return 0;
  }
  return result;
}

uint64_t sub_8A1F4()
{
  uint64_t result = sub_8A10C();
  if (result)
  {
    uint64_t v1 = result;
    sub_903C0();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_89EE8((uint64_t)v4), (v3 & 1) != 0))
    {
      sub_4B9F0(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v5);
    }
    else
    {
      long long v5 = 0u;
      long long v6 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_8A484((uint64_t)v4);
    if (*((void *)&v6 + 1))
    {
      if (swift_dynamicCast()) {
        return 0x7374746157;
      }
    }
    else
    {
      sub_6E9A0((uint64_t)&v5);
    }
    return 0;
  }
  return result;
}

uint64_t sub_8A2E0()
{
  uint64_t v0 = sub_8A10C();
  if (v0)
  {
    uint64_t v1 = v0;
    sub_903C0();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_89EE8((uint64_t)v5), (v3 & 1) != 0))
    {
      sub_4B9F0(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v6);
    }
    else
    {
      long long v6 = 0u;
      long long v7 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_8A484((uint64_t)v5);
    if (*((void *)&v7 + 1))
    {
      if (swift_dynamicCast()) {
        return 0;
      }
    }
    else
    {
      sub_6E9A0((uint64_t)&v6);
    }
  }
  return 2;
}

uint64_t sub_8A3D4()
{
  sub_903D0(42);
  v1._object = (void *)0x80000000000A47D0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000028;
  sub_90060(v1);
  v2._uint64_t countAndFlagsBits = sub_8FF60();
  sub_90060(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  sub_90060(v3);
  return 0;
}

uint64_t sub_8A484(uint64_t a1)
{
  return a1;
}

uint64_t destroy for LastChargeInfoResponse()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for LastChargeInfoResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LastChargeInfoResponse(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for LastChargeInfoResponse(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LastChargeInfoResponse()
{
  return &type metadata for LastChargeInfoResponse;
}

uint64_t type metadata accessor for ChargingStatusService()
{
  return self;
}

uint64_t sub_8A640(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_8A69C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3ED90(&qword_D72D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_8A704()
{
  sub_903D0(23);
  v4._object = (void *)0x80000000000A4800;
  v4._uint64_t countAndFlagsBits = 0xD000000000000015;
  sub_90060(v4);
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_8FF60();
  Swift::String v2 = v1;
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = v0;
  v5._object = v2;
  sub_90060(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  sub_90060(v6);
  return 0;
}

uint64_t sub_8A7DC()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_8A810(NSObject *a1)
{
  objc_opt_class();
  sub_BFF4();
  id v3 = v2;
  _os_log_error_impl(&dword_0, a1, OS_LOG_TYPE_ERROR, "err: failed to init %@", v4, 0xCu);
}

void sub_8A8AC()
{
  sub_C058();
  sub_C03C(&dword_0, v0, v1, "query failed: empty payload", v2, v3, v4, v5, v6);
}

void sub_8A8E0(void *a1)
{
  [a1 count];
  sub_BFF4();
  sub_C01C(&dword_0, v1, v2, "populated last10 with %lu items", v3, v4, v5, v6, v7);
}

void sub_8A958()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Couldn't find response key in query: %@", v2, v3, v4, v5, v6);
}

void sub_8A9C0(void *a1)
{
  [a1 count];
  sub_BFF4();
  sub_C01C(&dword_0, v1, v2, "Got %lu 10d usage times", v3, v4, v5, v6, v7);
}

void sub_8AA38(void *a1)
{
  [a1 count];
  sub_BFF4();
  sub_C01C(&dword_0, v1, v2, "Got %lu 10d UISoC", v3, v4, v5, v6, v7);
}

void sub_8AAB0(int a1, NSObject *a2, double a3)
{
  int v3 = 134218240;
  double v4 = a3;
  __int16 v5 = 2048;
  uint64_t v6 = a1;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "range:%f type:%ld", (uint8_t *)&v3, 0x16u);
}

void sub_8AB38()
{
  sub_BFF4();
  sub_C064(&dword_0, v0, v1, "Found res: %@", v2);
}

void sub_8ABA4()
{
  sub_BFF4();
  sub_C064(&dword_0, v0, v1, "Found key: %@", v2);
}

void sub_8AC10()
{
  sub_BFF4();
  sub_C064(&dword_0, v0, v1, "Found configuration: %@", v2);
}

void sub_8AC7C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "demo mode: nil svc, skipping", v2, v3, v4, v5, v6);
}

void sub_8ACB0()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "demo mode: nil ncc, skipping", v2, v3, v4, v5, v6);
}

void sub_8ACE4()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "demo mode: nil uisoc, skipping", v2, v3, v4, v5, v6);
}

void sub_8AD18()
{
  sub_BFF4();
  sub_C064(&dword_0, v0, v1, "Got smart charging state: %lu", v2);
}

void sub_8AD84()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Failed to query current smart charging state: %@", v2, v3, v4, v5, v6);
}

void sub_8ADEC(void *a1)
{
  [a1 smartChargingState];
  sub_BFF4();
  sub_C01C(&dword_0, v1, v2, "Smart charging state: %lu", v3, v4, v5, v6, v7);
}

void sub_8AE64()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Checking if smart charging is temp disabled", v2, v3, v4, v5, v6);
}

void sub_8AE98()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Failed to enable smart charging: %@", v2, v3, v4, v5, v6);
}

void sub_8AF00()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Failed to temporarily disable smart charging: %@", v2, v3, v4, v5, v6);
}

void sub_8AF68()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Failed to disable smart charging: %@", v2, v3, v4, v5, v6);
}

void sub_8AFD0()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Error trying to get OBC state: %@", v2, v3, v4, v5, v6);
}

void sub_8B038()
{
  sub_C07C();
  sub_C0A8(&dword_0, v0, v1, "Supported Device: %d", v2, v3, v4, v5, v6);
}

void sub_8B0A0()
{
  sub_C07C();
  sub_C0A8(&dword_0, v0, v1, "Show Health UI Controller: %d", v2, v3, v4, v5, v6);
}

void sub_8B108()
{
  sub_C07C();
  sub_C0A8(&dword_0, v0, v1, "Fixed Charge Supported: %d", v2, v3, v4, v5, v6);
}

void sub_8B170()
{
  sub_C07C();
  sub_C0A8(&dword_0, v0, v1, "Show Charging Controller: %d", v2, v3, v4, v5, v6);
}

void sub_8B1D8(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "err querying uisoc:%d", (uint8_t *)v2, 8u);
}

void sub_8B250()
{
  sub_C058();
  sub_C03C(&dword_0, v0, v1, "error querying battery data", v2, v3, v4, v5, v6);
}

void sub_8B284()
{
  sub_C058();
  sub_C03C(&dword_0, v0, v1, "failed to query ncc from IOPS dict", v2, v3, v4, v5, v6);
}

void sub_8B2B8()
{
  sub_C058();
  sub_C03C(&dword_0, v0, v1, "failed to query svc from IOPS dict", v2, v3, v4, v5, v6);
}

void sub_8B2EC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_8B358()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Error getting MCL limit: %@", v2, v3, v4, v5, v6);
}

void sub_8B3C0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_8B434()
{
  sub_106B0();
  sub_106E4(&dword_0, v0, v1, "Failed to set charge limit to %d with error: %@");
}

void sub_8B49C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_8B508()
{
  sub_106B0();
  sub_106E4(&dword_0, v0, v1, "Failed to get recommended charge limit; got %d with error: %@");
}

void sub_8B570()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Failed to get smart charging state: %@", v2, v3, v4, v5, v6);
}

void sub_8B5D8()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Failed to temporarily disable MCL: %@", v2, v3, v4, v5, v6);
}

void sub_8B640(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl(&dword_0, log, OS_LOG_TYPE_DEBUG, "Generating the suggestion entries", v1, 2u);
}

void sub_8B684(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl(&dword_0, log, OS_LOG_TYPE_DEBUG, "Generating ursa issue suggestion entries", v1, 2u);
}

void sub_8B6C8()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Failed to query current clean energy charging state: %@", v2, v3, v4, v5, v6);
}

void sub_8B730()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Smart charging failure: %@", v2, v3, v4, v5, v6);
}

void sub_8B798()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "User disabled optimized charging", v2, v3, v4, v5, v6);
}

void sub_8B7CC()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "User left smart charging on", v2, v3, v4, v5, v6);
}

void sub_8B800()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "User temporarily disabled smart charging", v2, v3, v4, v5, v6);
}

void sub_8B834()
{
  sub_BFF4();
  _os_log_debug_impl(&dword_0, v0, OS_LOG_TYPE_DEBUG, "FOOTER: %@", v1, 0xCu);
}

void sub_8B8A8()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Clicked OBC", v2, v3, v4, v5, v6);
}

void sub_8B8DC()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Clicked Fixed", v2, v3, v4, v5, v6);
}

void sub_8B910()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Show OBC to Off", v2, v3, v4, v5, v6);
}

void sub_8B944()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Disabling error", v2, v3, v4, v5, v6);
}

void sub_8B978()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Clicked Off", v2, v3, v4, v5, v6);
}

void sub_8B9AC(void *a1)
{
  [a1 row];
  sub_BFF4();
  sub_C01C(&dword_0, v1, v2, "Table View Chosen row: %lu", v3, v4, v5, v6, v7);
}

void sub_8BA24(void *a1)
{
  [a1 section];
  sub_BFF4();
  sub_C01C(&dword_0, v1, v2, "Clicked invalid section: %ld", v3, v4, v5, v6, v7);
}

void sub_8BA9C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Clean Energy Charging not supported", v2, v3, v4, v5, v6);
}

void sub_8BAD0()
{
  sub_BFF4();
  _os_log_debug_impl(&dword_0, v0, OS_LOG_TYPE_DEBUG, "Clean Energy Charging URL: %@", v1, 0xCu);
}

void sub_8BB44()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Failed to enable clean energy charging: %@", v2, v3, v4, v5, v6);
}

void sub_8BBAC()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Failed to temporarily disable clean energy charging: %@", v2, v3, v4, v5, v6);
}

void sub_8BC14()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Optimized Charging", v2, v3, v4, v5, v6);
}

void sub_8BC48()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Manual/Optimized Charging off", v2, v3, v4, v5, v6);
}

void sub_8BC7C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Manual Charging", v2, v3, v4, v5, v6);
}

void sub_8BCB0(void *a1, NSObject *a2)
{
  int v4 = 134218240;
  id v5 = [a1 manualChargingState];
  __int16 v6 = 2048;
  id v7 = [a1 smartChargingState];
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "Charging States: manual: %lu, smart: %lu", (uint8_t *)&v4, 0x16u);
}

void sub_8BD60()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Loading Charging Options Specifiers", v2, v3, v4, v5, v6);
}

void sub_8BD94()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Maximum Charge Capacity from UI not known", v2, v3, v4, v5, v6);
}

void sub_8BDC8()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Maximum Charge Capacity from UI not shown due to BCDC", v2, v3, v4, v5, v6);
}

void sub_8BDFC(int a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a2 + a1);
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_debug_impl(&dword_0, log, OS_LOG_TYPE_DEBUG, "Updated maximum capacity: %@", (uint8_t *)&v4, 0xCu);
}

void sub_8BE7C()
{
  sub_21C80();
  sub_21C68(&dword_0, v0, (uint64_t)v0, "Updated perfManagementState: %d", v1);
}

void sub_8BEF0()
{
  sub_21C80();
  sub_21C68(&dword_0, v0, v1, "Updated batteryHealthServiceState: %d", v2);
}

void sub_8BF60()
{
  sub_21C80();
  sub_21C68(&dword_0, v0, v1, "Updated batteryHealthServiceFlag: %d", v2);
}

void sub_8BFD0()
{
  sub_21C80();
  sub_21C68(&dword_0, v0, v1, "Updated auth: %d", v2);
}

void sub_8C040()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "CEC is supported", v2, v3, v4, v5, v6);
}

void sub_8C074()
{
  sub_BFF4();
  sub_21C40(&dword_0, v0, v1, "About Batteries URL: %@", v2, v3, v4, v5, v6);
}

void sub_8C0DC()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Maximum Charge Capacity from UI not shown due to service state", v2, v3, v4, v5, v6);
}

void sub_8C110(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a2;
  [v2 intValue];
  sub_21C5C();
  sub_21C68(&dword_0, v3, v4, "Maximum Charge Capacity from UI %d", v5);
}

void sub_8C1A0()
{
  sub_C058();
  sub_C03C(&dword_0, v0, v1, "Maximum Charge Capacity from UI could not be fetched", v2, v3, v4, v5, v6);
}

void sub_8C1D4()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "About Batteries Specifiers set", v2, v3, v4, v5, v6);
}

void sub_8C208()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Non genuine battery header set", v2, v3, v4, v5, v6);
}

void sub_8C23C()
{
  sub_BFF4();
  sub_21C40(&dword_0, v0, v1, "Nongenuine URL: %@", v2, v3, v4, v5, v6);
}

void sub_8C2A4()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Error when launching battery service booking flow: %@", v2, v3, v4, v5, v6);
}

void sub_8C30C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Service header set", v2, v3, v4, v5, v6);
}

void sub_8C340()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Recalibration header set", v2, v3, v4, v5, v6);
}

void sub_8C374()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Unknown Health header set", v2, v3, v4, v5, v6);
}

void sub_8C3A8(void *a1)
{
  id v2 = a1;
  sub_21C8C();
  sub_21C5C();
  _os_log_fault_impl(&dword_0, v1, OS_LOG_TYPE_FAULT, "Unhandled Service State: %d", v3, 8u);
}

void sub_8C438(void *a1)
{
  id v2 = a1;
  sub_21C8C();
  sub_21C5C();
  sub_21C68(&dword_0, v1, v3, "Current service recommended option from UI %d", v4);
}

void sub_8C4C0(void *a1)
{
  id v2 = a1;
  sub_21C8C();
  sub_21C5C();
  _os_log_error_impl(&dword_0, v1, OS_LOG_TYPE_ERROR, "error: unexpected service state %d found", v3, 8u);
}

void sub_8C550()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Charge Capacity Specifiers set", v2, v3, v4, v5, v6);
}

void sub_8C584()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Peak Power Specifier set", v2, v3, v4, v5, v6);
}

void sub_8C5B8()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Health State Specifiers set", v2, v3, v4, v5, v6);
}

void sub_8C5EC()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Cycle Count Specifiers set", v2, v3, v4, v5, v6);
}

void sub_8C620()
{
  sub_BFF4();
  sub_21C40(&dword_0, v0, v1, "Cycle Count URL: %@", v2, v3, v4, v5, v6);
}

void sub_8C688()
{
  sub_C058();
  sub_C03C(&dword_0, v0, v1, "Failed to retrieve battery date of first use.", v2, v3, v4, v5, v6);
}

void sub_8C6BC()
{
  sub_C058();
  sub_C03C(&dword_0, v0, v1, "Failed to retrieve battery cycle count.", v2, v3, v4, v5, v6);
}

void sub_8C6F0()
{
  sub_C058();
  sub_C03C(&dword_0, v0, v1, "Failed to retrieve battery date of manufacture.", v2, v3, v4, v5, v6);
}

void sub_8C724()
{
  sub_C058();
  sub_C03C(&dword_0, v0, v1, "Failed to retrieve power source description.", v2, v3, v4, v5, v6);
}

void sub_8C758()
{
  sub_C058();
  sub_C03C(&dword_0, v0, v1, "Failed to retrieve power sources list.", v2, v3, v4, v5, v6);
}

void sub_8C78C()
{
  sub_C058();
  sub_C03C(&dword_0, v0, v1, "Failed to retrieve power sources info (kIOPSSourceInternal).", v2, v3, v4, v5, v6);
}

void sub_8C7C0()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Getting battery information", v2, v3, v4, v5, v6);
}

void sub_8C7F4()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Battery Information Specifiers set", v2, v3, v4, v5, v6);
}

void sub_8C828()
{
  sub_C058();
  _os_log_fault_impl(&dword_0, v0, OS_LOG_TYPE_FAULT, "Unsupported device", v1, 2u);
}

void sub_8C868()
{
  sub_C058();
  _os_log_fault_impl(&dword_0, v0, OS_LOG_TYPE_FAULT, "Manual limit not supported", v1, 2u);
}

void sub_8C8A8()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Loading Manual Charging Specifiers", v2, v3, v4, v5, v6);
}

void sub_8C8DC()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Getting manual charge switch state", v2, v3, v4, v5, v6);
}

void sub_8C910()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Manual charging enabled", v2, v3, v4, v5, v6);
}

void sub_8C944()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Failed to enable manual charging: %@", v2, v3, v4, v5, v6);
}

void sub_8C9AC()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "User enabled manual charging", v2, v3, v4, v5, v6);
}

void sub_8C9E0()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Manual charging disabled", v2, v3, v4, v5, v6);
}

void sub_8CA14()
{
  sub_BFF4();
  sub_C000(&dword_0, v0, v1, "Failed to disable manual charging: %@", v2, v3, v4, v5, v6);
}

void sub_8CA7C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "User disabled manual charging", v2, v3, v4, v5, v6);
}

void sub_8CAB0()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Setting manual charge limit state", v2, v3, v4, v5, v6);
}

void sub_8CAE4()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Adding auth spinner", v2, v3, v4, v5, v6);
}

void sub_8CB18()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Adding spinner", v2, v3, v4, v5, v6);
}

void sub_8CB4C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Auth spinner tick", v2, v3, v4, v5, v6);
}

void sub_8CB80()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Spinner tick", v2, v3, v4, v5, v6);
}

void sub_8CBB4()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Clearing auth spinner", v2, v3, v4, v5, v6);
}

void sub_8CBE8()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Clearing spinner", v2, v3, v4, v5, v6);
}

void sub_8CC1C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Did not reload specifiers from spinner", v2, v3, v4, v5, v6);
}

void sub_8CC50()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Loading Health specifier", v2, v3, v4, v5, v6);
}

void sub_8CC84()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Legacy BHUI format", v2, v3, v4, v5, v6);
}

void sub_8CCB8()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Loading specifiers", v2, v3, v4, v5, v6);
}

void sub_8CCEC()
{
  sub_21C5C();
  _os_log_error_impl(&dword_0, v0, OS_LOG_TYPE_ERROR, "notify_post failed %d", v1, 8u);
}

void sub_8CD60()
{
  sub_21C5C();
  _os_log_error_impl(&dword_0, v0, OS_LOG_TYPE_ERROR, "Resync returned state %d, reloading", v1, 8u);
}

void sub_8CDD4()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Resync timer fire", v2, v3, v4, v5, v6);
}

void sub_8CE08()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Smart Charging", v2, v3, v4, v5, v6);
}

void sub_8CE3C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "No manual/smart charging", v2, v3, v4, v5, v6);
}

void sub_8CE70()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Manual Charging", v2, v3, v4, v5, v6);
}

void sub_8CEA4()
{
  sub_BFF4();
  __int16 v3 = 2048;
  uint64_t v4 = v0;
  _os_log_debug_impl(&dword_0, v1, OS_LOG_TYPE_DEBUG, "Getting Charging states: manual: %lu, smart: %lu", v2, 0x16u);
}

void sub_8CF28()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Manual limit not supported", v2, v3, v4, v5, v6);
}

void sub_8CF5C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Getting charging mode for charging options", v2, v3, v4, v5, v6);
}

void sub_8CF90(void *a1)
{
  [a1 curChargingMode];
  sub_BFF4();
  sub_C01C(&dword_0, v1, v2, "Set Cur Charging mode: %lu", v3, v4, v5, v6, v7);
}

void sub_8D008()
{
  sub_BFF4();
  sub_21C40(&dword_0, v0, v1, "Setting Charging mode: %@", v2, v3, v4, v5, v6);
}

void sub_8D070()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Setting up Charging Options", v2, v3, v4, v5, v6);
}

void sub_8D0A4()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Clean Energy Charging not supported", v2, v3, v4, v5, v6);
}

void sub_8D0D8()
{
  sub_BFF4();
  sub_21C40(&dword_0, v0, v1, "Clean Energy Charging URL: %@", v2, v3, v4, v5, v6);
}

void sub_8D140()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Info Symbol Tapped", v2, v3, v4, v5, v6);
}

void sub_8D174(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_8D1E4()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Default", v2, v3, v4, v5, v6);
}

void sub_8D218()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Charging State: Slow Charging", v2, v3, v4, v5, v6);
}

void sub_8D24C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging Normal", v2, v3, v4, v5, v6);
}

void sub_8D280()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging with past OBC", v2, v3, v4, v5, v6);
}

void sub_8D2B4()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging with past TLC", v2, v3, v4, v5, v6);
}

void sub_8D2E8()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Fixed Limit", v2, v3, v4, v5, v6);
}

void sub_8D31C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Fixed Limit While Discharging", v2, v3, v4, v5, v6);
}

void sub_8D350()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging with past CEC", v2, v3, v4, v5, v6);
}

void sub_8D384()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging paused due to OBC", v2, v3, v4, v5, v6);
}

void sub_8D3B8()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging paused due to TLC", v2, v3, v4, v5, v6);
}

void sub_8D3EC()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging paused due to CEC", v2, v3, v4, v5, v6);
}

void sub_8D420()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging terminated with past OBC", v2, v3, v4, v5, v6);
}

void sub_8D454()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging terminated with past TLC", v2, v3, v4, v5, v6);
}

void sub_8D488()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging terminated with past camera streaming", v2, v3, v4, v5, v6);
}

void sub_8D4BC()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging terminated with past CEC", v2, v3, v4, v5, v6);
}

void sub_8D4F0()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging Completed Connected", v2, v3, v4, v5, v6);
}

void sub_8D524()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging Terminated Normally", v2, v3, v4, v5, v6);
}

void sub_8D558()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging Complete", v2, v3, v4, v5, v6);
}

void sub_8D58C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging Terminated Past Fixed Limit", v2, v3, v4, v5, v6);
}

void sub_8D5C0()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Charging Terminated Past Fixed Limit While Discharging", v2, v3, v4, v5, v6);
}

void sub_8D5F4()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused Charging State: Unknown", v2, v3, v4, v5, v6);
}

void sub_8D628()
{
  sub_BFF4();
  sub_21C40(&dword_0, v0, v1, "Fixed Limit Localized with Percent: %@", v2, v3, v4, v5, v6);
}

void sub_8D690()
{
  sub_BFF4();
  sub_21C40(&dword_0, v0, v1, "Localized camera streaming string: %@", v2, v3, v4, v5, v6);
}

void sub_8D6F8()
{
  sub_BFF4();
  sub_21C40(&dword_0, v0, v1, "Paused Schedule Date after localization: %@", v2, v3, v4, v5, v6);
}

void sub_8D760()
{
  sub_BFF4();
  sub_21C40(&dword_0, v0, v1, "Paused Charging scheduled finish: %@", v2, v3, v4, v5, v6);
}

void sub_8D7C8()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Paused charging data exists", v2, v3, v4, v5, v6);
}

void sub_8D7FC()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Populating Paused Charging State in Last Charge Specifier", v2, v3, v4, v5, v6);
}

void sub_8D830()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "\"bui_last_charge_iOS\" feature flag is enabled", v2, v3, v4, v5, v6);
}

void sub_8D864()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "\"bui_last_charge_iOS\" feature flag is disabled. Not adding Paused Charging strings.", v2, v3, v4, v5, v6);
}

void sub_8D898(void *a1)
{
  uint64_t v1 = [a1 table];
  [v1 contentSize];
  sub_C01C(&dword_0, v2, v3, "content size height: %f", v4, v5, v6, v7, 0);
}

void sub_8D924(uint64_t *a1, uint64_t *a2, NSObject *a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  int v5 = 134218240;
  uint64_t v6 = v3;
  __int16 v7 = 2048;
  uint64_t v8 = v4;
  sub_33570(&dword_0, a3, (uint64_t)a3, "Content offset inside reload x:%f,y:%f", (uint8_t *)&v5);
}

void sub_8D9AC(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 table];
  [v4 contentOffset];
  int v5 = [a1 table];
  [v5 contentOffset];
  sub_33588();
  sub_33570(&dword_0, a2, v6, "New content offset after adjustment: x:%f,y:%f", v7);
}

void sub_8DA6C(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 view];
  [v4 frame];
  uint64_t v6 = v5;
  __int16 v7 = [a1 view];
  uint64_t v8 = [v7 window];
  [v8 frame];
  int v11 = 134218240;
  uint64_t v12 = v6;
  __int16 v13 = 2048;
  uint64_t v14 = v9;
  sub_33570(&dword_0, a2, v10, "View height: %f, window height: %f", (uint8_t *)&v11);
}

void sub_8DB4C(void *a1)
{
  uint64_t v1 = [a1 table];
  [v1 contentSize];
  sub_C01C(&dword_0, v2, v3, "new content size height: %f", v4, v5, v6, v7, 0);
}

void sub_8DBD8(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 table];
  [v4 contentOffset];
  uint64_t v5 = [a1 table];
  [v5 contentOffset];
  sub_33588();
  sub_33570(&dword_0, a2, v6, "New content offset x:%f,y:%f", v7);
}

void sub_8DC98(uint64_t a1, NSObject *a2)
{
  int v2 = *(_DWORD *)(a1 + 344);
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "tapIndex: %d", (uint8_t *)v3, 8u);
}

void sub_8DD1C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "View did layout subviews", v2, v3, v4, v5, v6);
}

void sub_8DD50(NSObject *a1, double a2, uint64_t a3, uint64_t a4)
{
  int v4 = 134217984;
  double v5 = a2;
  sub_C064(&dword_0, a1, a4, "Table bottom inset adjusted as: %f", (uint8_t *)&v4);
}

void sub_8DDC4(void *a1)
{
  uint64_t v1 = [a1 table];
  [v1 contentOffset];
  sub_C01C(&dword_0, v2, v3, "Scroll View Current Offset: %f", v4, v5, v6, v7, 0);
}

void sub_8DE50()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Battery group specifier set", v2, v3, v4, v5, v6);
}

void sub_8DE84()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Spinner specifier set", v2, v3, v4, v5, v6);
}

void sub_8DEB8()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Removed spinner specifier", v2, v3, v4, v5, v6);
}

void sub_8DEEC(void *a1)
{
  uint64_t v1 = [a1 currentGraphDictionary];
  sub_BFF4();
  sub_C01C(&dword_0, v2, v3, "GraphData: %@", v4, v5, v6, v7, v8);
}

void sub_8DF70(void *a1)
{
  uint64_t v1 = [a1 currentDictionary];
  sub_BFF4();
  sub_C01C(&dword_0, v2, v3, "BatteryBreakdown: %@", v4, v5, v6, v7, v8);
}

void sub_8DFF4()
{
  sub_BFF4();
  sub_C064(&dword_0, v0, v1, "BatteryBreakdown xpc response: %@\n", v2);
}

void sub_8E060()
{
  sub_BFF4();
  sub_C064(&dword_0, v0, v1, "Errorcode: %@", v2);
}

void sub_8E0CC()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Setting the Battery Entries", v2, v3, v4, v5, v6);
}

void sub_8E100()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Rebuilding list", v2, v3, v4, v5, v6);
}

void sub_8E134(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138412290;
  uint64_t v5 = v3;
  sub_C064(&dword_0, a2, a3, "note=%@", (uint8_t *)&v4);
}

void sub_8E1A8()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Calling dealloc for BatteryUIController", v2, v3, v4, v5, v6);
}

void sub_8E1DC(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_fault_impl(&dword_0, a2, OS_LOG_TYPE_FAULT, "Unhandled Service State: %d", (uint8_t *)v2, 8u);
}

void sub_8E254(os_log_t log)
{
  v1[0] = 67109120;
  v1[1] = 8;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "error: unexpected service state %d found", (uint8_t *)v1, 8u);
}

void sub_8E2D4(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "Service State: %d", (uint8_t *)v2, 8u);
}

void sub_8E34C()
{
  sub_BFF4();
  sub_C064(&dword_0, v0, v1, "%@", v2);
}

void sub_8E3B8()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Setting Up Health Group", v2, v3, v4, v5, v6);
}

void sub_8E3EC()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Setting Up Health Specifiers", v2, v3, v4, v5, v6);
}

void sub_8E420()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Smart Charging", v2, v3, v4, v5, v6);
}

void sub_8E454()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "No manual/smart charging", v2, v3, v4, v5, v6);
}

void sub_8E488()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Manual Charging", v2, v3, v4, v5, v6);
}

void sub_8E4BC()
{
  sub_BFF4();
  __int16 v3 = 2048;
  uint64_t v4 = v0;
  sub_33570(&dword_0, v1, (uint64_t)v1, "Getting Charging states: manual: %lu, smart: %lu", v2);
}

void sub_8E538()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Getting charging mode for charging options", v2, v3, v4, v5, v6);
}

void sub_8E56C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "State set in child controller", v2, v3, v4, v5, v6);
}

void sub_8E5A0()
{
  sub_BFF4();
  sub_C064(&dword_0, v0, v1, "Setting Charging mode: %@", v2);
}

void sub_8E60C()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Setting Up Charging Specifiers", v2, v3, v4, v5, v6);
}

void sub_8E640()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Battery level graph specifier set (Core Chart version)", v2, v3, v4, v5, v6);
}

void sub_8E674()
{
  sub_BFF4();
  sub_C064(&dword_0, v0, v1, "preferenceValue=%@", v2);
}

void sub_8E6E0()
{
  sub_BFF4();
  __int16 v3 = 1024;
  int v4 = v0;
  _os_log_debug_impl(&dword_0, v1, OS_LOG_TYPE_DEBUG, "animating specifier=%@ toState=%d", v2, 0x12u);
}

void sub_8E768(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_fault_impl(&dword_0, a2, OS_LOG_TYPE_FAULT, "Unhandled icon uttype identifier for suggestion type %d", (uint8_t *)v2, 8u);
}

void sub_8E7E0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl(&dword_0, a2, OS_LOG_TYPE_FAULT, "Unhandled icon for non app entity %@", (uint8_t *)&v2, 0xCu);
}

void sub_8E858(void *a1)
{
  [a1 intValue];
  sub_21C5C();
  sub_38E24(&dword_0, v1, v2, "Overriding Service State in Demo mode: %d", v3, v4, v5, v6, v7);
}

void sub_8E8D0(void *a1)
{
  [a1 intValue];
  sub_21C5C();
  sub_38E24(&dword_0, v1, v2, "Overriding Service Flag in Demo mode: %d", v3, v4, v5, v6, v7);
}

void sub_8E948(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_8E9B8()
{
  sub_21C5C();
  sub_C0A8(&dword_0, v0, v1, "Service State: %d", v2, v3, v4, v5, v6);
}

void sub_8EA20()
{
  sub_21C5C();
  sub_C0A8(&dword_0, v0, v1, "Service Flag: %d", v2, v3, v4, v5, v6);
}

void sub_8EA88()
{
  sub_C058();
  sub_C03C(&dword_0, v0, v1, "Could not fetch max capacity", v2, v3, v4, v5, v6);
}

void sub_8EABC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Invalid override dictionary at %@", (uint8_t *)&v2, 0xCu);
}

void sub_8EB34(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "override battery data %@", (uint8_t *)&v2, 0xCu);
}

void sub_8EBAC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_8EC1C()
{
  sub_C058();
  sub_C03C(&dword_0, v0, v1, "Unknown current state", v2, v3, v4, v5, v6);
}

void sub_8EC50()
{
  sub_21C5C();
  _os_log_error_impl(&dword_0, v0, OS_LOG_TYPE_ERROR, "notify_get_state failed %d", v1, 8u);
}

void sub_8ECC4()
{
  sub_21C5C();
  _os_log_error_impl(&dword_0, v0, OS_LOG_TYPE_ERROR, "notify_register_check failed %d", v1, 8u);
}

void sub_8ED38()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Checking notifyd for current state", v2, v3, v4, v5, v6);
}

void sub_8ED6C()
{
  sub_C058();
  sub_C03C(&dword_0, v0, v1, "nil state from defaults", v2, v3, v4, v5, v6);
}

void sub_8EDA0()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Checking defaults for current state", v2, v3, v4, v5, v6);
}

void sub_8EDD4()
{
  sub_C058();
  sub_C08C(&dword_0, v0, v1, "Checking for current state", v2, v3, v4, v5, v6);
}

void sub_8EE08(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_8EE40(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_8EE78(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_8EEB0(uint64_t *a1, NSObject *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138412546;
  CFStringRef v4 = @"com.apple.systemcontainer";
  __int16 v5 = 2048;
  uint64_t v6 = v2;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Error fetching group containers for %@ : %llu", (uint8_t *)&v3, 0x16u);
}

void sub_8EF40(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "result=%@", (uint8_t *)&v2, 0xCu);
}

void sub_8EFB8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "date=%@", (uint8_t *)&v2, 0xCu);
}

uint64_t sub_8F030()
{
  return FormatStyle.locale(_:)();
}

uint64_t sub_8F040()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t sub_8F050()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_8F060()
{
  return FloatingPointFormatStyle.Percent.scale(_:)();
}

uint64_t sub_8F070()
{
  return FloatingPointFormatStyle.Percent.init(locale:)();
}

uint64_t sub_8F080()
{
  return NSFastEnumerationIterator.next()();
}

uint64_t sub_8F090()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t sub_8F0A0()
{
  return Date.init(timeIntervalSinceReferenceDate:)();
}

uint64_t sub_8F0B0()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

NSDate sub_8F0C0()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_8F0D0()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_8F0E0()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_8F0F0()
{
  return static Date.+ infix(_:_:)();
}

uint64_t sub_8F100()
{
  return Date.init(timeIntervalSince1970:)();
}

uint64_t sub_8F110()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t sub_8F120()
{
  return static Date.== infix(_:_:)();
}

uint64_t sub_8F130()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_8F140()
{
  return Date.advanced(by:)();
}

uint64_t sub_8F150()
{
  return type metadata accessor for Date();
}

uint64_t sub_8F160()
{
  return Locale.languageCode.getter();
}

NSLocale sub_8F170()
{
  return Locale._bridgeToObjectiveC()();
}

uint64_t sub_8F180()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t sub_8F190()
{
  return type metadata accessor for Locale();
}

uint64_t sub_8F1A0()
{
  return Calendar.startOfDay(for:)();
}

NSCalendar sub_8F1B0()
{
  return Calendar._bridgeToObjectiveC()();
}

uint64_t sub_8F1C0()
{
  return static Calendar.autoupdatingCurrent.getter();
}

uint64_t sub_8F1D0()
{
  return Calendar.date(from:)();
}

uint64_t sub_8F1E0()
{
  return static Calendar.current.getter();
}

uint64_t sub_8F1F0()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_8F200()
{
  return Calendar.component(_:from:)();
}

uint64_t sub_8F210()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_8F220()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_8F230()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_8F240()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t sub_8F250()
{
  return ObservationRegistrar.init()();
}

uint64_t sub_8F260()
{
  return type metadata accessor for ObservationRegistrar();
}

uint64_t sub_8F270()
{
  return isFeatureEnabled(_:)();
}

uint64_t sub_8F280()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_8F290()
{
  return Logger.logObject.getter();
}

uint64_t sub_8F2A0()
{
  return type metadata accessor for Logger();
}

uint64_t sub_8F2B0()
{
  return Logger.init(_:)();
}

uint64_t sub_8F2C0()
{
  return ChartProxy.plotAreaFrame.getter();
}

uint64_t sub_8F2D0()
{
  return ChartProxy.value<A>(atX:as:)();
}

uint64_t sub_8F2E0()
{
  return type metadata accessor for ChartProxy();
}

uint64_t sub_8F2F0()
{
  return AxisGridLine.init(centered:stroke:)();
}

uint64_t sub_8F300()
{
  return type metadata accessor for AxisGridLine();
}

uint64_t sub_8F310()
{
  return static ChartContent._makeChartContent(content:inputs:)();
}

uint64_t sub_8F320()
{
  return static ChartContent._chartContentCount(inputs:)();
}

uint64_t sub_8F330()
{
  return static ChartContent._layoutChartContent(_:_:)();
}

uint64_t sub_8F340()
{
  return static ChartContent._renderChartContent(_:_:)();
}

uint64_t sub_8F350()
{
  return ChartContent.cornerRadius(_:style:)();
}

uint64_t sub_8F360()
{
  return ChartContent.foregroundStyle<A>(_:)();
}

uint64_t sub_8F370()
{
  return ChartContent.accessibilityLabel<A>(_:)();
}

uint64_t sub_8F380()
{
  return ChartContent.accessibilityValue(_:)();
}

uint64_t sub_8F390()
{
  return ChartContent.accessibilityHidden(_:)();
}

uint64_t sub_8F3A0()
{
  return ChartContent.accessibilityIdentifier(_:)();
}

uint64_t sub_8F3B0()
{
  return ChartContent.mask<A>(content:)();
}

uint64_t sub_8F3C0()
{
  return ChartContent.symbol<A>(_:)();
}

uint64_t sub_8F3D0()
{
  return RectangleMark.init<A>(xStart:xEnd:yStart:yEnd:)();
}

uint64_t sub_8F3E0()
{
  return type metadata accessor for RectangleMark();
}

uint64_t sub_8F3F0()
{
  return static AxisMarkPreset.automatic.getter();
}

uint64_t sub_8F400()
{
  return type metadata accessor for AxisMarkPreset();
}

uint64_t sub_8F410()
{
  return static AxisMarkValues.stride(by:count:roundLowerBound:roundUpperBound:calendar:)();
}

uint64_t sub_8F420()
{
  return type metadata accessor for AxisMarkValues();
}

uint64_t sub_8F430()
{
  return AxisValueLabel.init<A>(format:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
}

uint64_t sub_8F440()
{
  return AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
}

uint64_t sub_8F450()
{
  return static PlottableValue.value<>(_:_:unit:calendar:)();
}

uint64_t sub_8F460()
{
  return static PlottableValue.value<>(_:_:)();
}

uint64_t sub_8F470()
{
  return static PlottableValue.value(_:_:)();
}

uint64_t sub_8F480()
{
  return static AxisMarkPosition.automatic.getter();
}

uint64_t sub_8F490()
{
  return type metadata accessor for AxisMarkPosition();
}

uint64_t sub_8F4A0()
{
  return type metadata accessor for ChartPlotContent();
}

uint64_t sub_8F4B0()
{
  return AnyChartSymbolShape.init(_:)();
}

uint64_t sub_8F4C0()
{
  return static AxisValueLabelOrientation.automatic.getter();
}

uint64_t sub_8F4D0()
{
  return type metadata accessor for AxisValueLabelOrientation();
}

uint64_t sub_8F4E0()
{
  return static AxisValueLabelCollisionResolution.disabled.getter();
}

uint64_t sub_8F4F0()
{
  return static AxisValueLabelCollisionResolution.automatic.getter();
}

uint64_t sub_8F500()
{
  return type metadata accessor for AxisValueLabelCollisionResolution();
}

uint64_t sub_8F510()
{
  return Plot.init(content:)();
}

uint64_t sub_8F520()
{
  return Chart.init(content:)();
}

uint64_t sub_8F530()
{
  return Chart.init<A, B>(_:content:)();
}

uint64_t sub_8F540()
{
  return BarMark.init<A, B>(x:y:width:height:stacking:)();
}

uint64_t sub_8F550()
{
  return type metadata accessor for BarMark();
}

uint64_t sub_8F560()
{
  return AxisMark.foregroundStyle<A>(_:)();
}

uint64_t sub_8F570()
{
  return AxisMark.font(_:)();
}

uint64_t sub_8F580()
{
  return AxisTick.init(centered:length:stroke:)();
}

uint64_t sub_8F590()
{
  return type metadata accessor for AxisTick();
}

uint64_t sub_8F5A0()
{
  return AxisMarks.init(preset:position:values:content:)();
}

uint64_t sub_8F5B0()
{
  return AxisMarks.init<A>(preset:position:values:content:)();
}

uint64_t sub_8F5C0()
{
  return AxisValue.as<A>(_:)();
}

uint64_t sub_8F5D0()
{
  return AxisValue.count.getter();
}

uint64_t sub_8F5E0()
{
  return AxisValue.index.getter();
}

uint64_t sub_8F5F0()
{
  return type metadata accessor for AxisValue();
}

uint64_t sub_8F600()
{
  return PointMark.init<A>(x:y:)();
}

uint64_t sub_8F610()
{
  return type metadata accessor for PointMark();
}

uint64_t sub_8F620()
{
  return type metadata accessor for ScaleType();
}

uint64_t sub_8F630()
{
  return type metadata accessor for AnyCancellable();
}

uint64_t sub_8F640()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t sub_8F650()
{
  return Published.init(initialValue:)();
}

uint64_t sub_8F660()
{
  return Published.projectedValue.getter();
}

uint64_t sub_8F670()
{
  return Published.projectedValue.setter();
}

uint64_t sub_8F680()
{
  return static Published.subscript.modify();
}

uint64_t sub_8F690()
{
  return static Published.subscript.getter();
}

uint64_t sub_8F6A0()
{
  return static Published.subscript.setter();
}

uint64_t sub_8F6B0()
{
  return type metadata accessor for Published();
}

uint64_t sub_8F6C0()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t sub_8F6D0()
{
  return Animatable<>.animatableData.modify();
}

uint64_t sub_8F6E0()
{
  return static Animatable<>._makeAnimatable(value:inputs:)();
}

uint64_t sub_8F6F0()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_8F700()
{
  return type metadata accessor for Environment.Content();
}

uint64_t sub_8F710()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t sub_8F720()
{
  return static ViewModifier._makeView(modifier:inputs:body:)();
}

uint64_t sub_8F730()
{
  return static ViewModifier._makeViewList(modifier:inputs:body:)();
}

uint64_t sub_8F740()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_8F750()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_8F760()
{
  return GeometryProxy.size.getter();
}

uint64_t sub_8F770()
{
  return GeometryProxy.subscript.getter();
}

uint64_t sub_8F780()
{
  return ObservedObject.init(wrappedValue:)();
}

uint64_t sub_8F790()
{
  return ObservedObject.projectedValue.getter();
}

uint64_t sub_8F7A0()
{
  return ObservedObject.Wrapper.subscript.getter();
}

uint64_t sub_8F7B0()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t sub_8F7C0()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_8F7D0()
{
  return EnvironmentValues.lineSpacing.getter();
}

uint64_t sub_8F7E0()
{
  return EnvironmentValues.lineSpacing.setter();
}

uint64_t sub_8F7F0()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t sub_8F800()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_8F810()
{
  return EnvironmentValues.font.getter();
}

uint64_t sub_8F820()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_8F830()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_8F840()
{
  return EnvironmentValues.textCase.setter();
}

uint64_t sub_8F850()
{
  return EnvironmentValues.timeZone.getter();
}

uint64_t sub_8F860()
{
  return EnvironmentValues.timeZone.setter();
}

uint64_t sub_8F870()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t sub_8F880()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_8F890()
{
  return static VerticalAlignment.center.getter();
}

uint64_t sub_8F8A0()
{
  return LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

void sub_8F8B0(Swift::String a1)
{
}

uint64_t sub_8F8C0()
{
  return LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_8F8D0()
{
  return type metadata accessor for LocalizedStringKey.StringInterpolation();
}

uint64_t sub_8F8E0()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_8F8F0()
{
  return LocalizedStringKey.init(stringInterpolation:)();
}

uint64_t sub_8F900()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t sub_8F910()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_8F920()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_8F930()
{
  return dispatch thunk of UIHostingController.sizeThatFits(in:)();
}

uint64_t sub_8F940()
{
  return UIHostingController.init(rootView:)();
}

uint64_t sub_8F950()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_8F960()
{
  return type metadata accessor for LocalCoordinateSpace();
}

uint64_t sub_8F970()
{
  return static CoordinateSpaceProtocol<>.local.getter();
}

uint64_t sub_8F980()
{
  return type metadata accessor for AccessibilityAttachmentModifier();
}

uint64_t sub_8F990()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_8F9A0()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t sub_8F9B0()
{
  return static Edge.Set.all.getter();
}

uint64_t sub_8F9C0()
{
  return static Edge.Set.top.getter();
}

uint64_t sub_8F9D0()
{
  return static Edge.Set.bottom.getter();
}

uint64_t sub_8F9E0()
{
  return static Edge.Set.leading.getter();
}

uint64_t sub_8F9F0()
{
  return Edge.Set.init(rawValue:)();
}

uint64_t sub_8FA00()
{
  return static Edge.Set.trailing.getter();
}

uint64_t sub_8FA10()
{
  return static Edge.Set.vertical.getter();
}

uint64_t sub_8FA20()
{
  return static Font.largeTitle.getter();
}

uint64_t sub_8FA30()
{
  return static Font.subheadline.getter();
}

uint64_t sub_8FA40()
{
  return type metadata accessor for Font.Design();
}

uint64_t sub_8FA50()
{
  return static Font.Weight.bold.getter();
}

uint64_t sub_8FA60()
{
  return static Font.Weight.medium.getter();
}

uint64_t sub_8FA70()
{
  return static Font.Weight.semibold.getter();
}

uint64_t sub_8FA80()
{
  return static Font.system(size:weight:design:)();
}

uint64_t sub_8FA90()
{
  return Font.weight(_:)();
}

uint64_t sub_8FAA0()
{
  return static Font.footnote.getter();
}

uint64_t sub_8FAB0()
{
  return static Font.headline.getter();
}

uint64_t sub_8FAC0()
{
  return Path.addPath(_:transform:)();
}

uint64_t sub_8FAD0()
{
  return Path.strokedPath(_:)();
}

uint64_t sub_8FAE0()
{
  return Path.addQuadCurve(to:control:)();
}

uint64_t sub_8FAF0()
{
  return Path.boundingRect.getter();
}

void sub_8FB00()
{
}

uint64_t sub_8FB10()
{
  return Path.move(to:)();
}

uint64_t sub_8FB20()
{
  return Path.addLine(to:)();
}

uint64_t sub_8FB30()
{
  return Path.addCurve(to:control1:control2:)();
}

uint64_t sub_8FB40()
{
  return Path.init()();
}

uint64_t sub_8FB50()
{
  return Path.init(_:)();
}

uint64_t sub_8FB60()
{
  return Text.fontWeight(_:)();
}

uint64_t sub_8FB70()
{
  return type metadata accessor for Text.WritingMode();
}

uint64_t sub_8FB80()
{
  return Text.Measurements.size(of:in:writingMode:)();
}

uint64_t sub_8FB90()
{
  return Text.Measurements.init()();
}

uint64_t sub_8FBA0()
{
  return type metadata accessor for Text.Measurements();
}

uint64_t sub_8FBB0()
{
  return Text.foregroundColor(_:)();
}

uint64_t sub_8FBC0()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t sub_8FBD0()
{
  return type metadata accessor for Text.Case();
}

uint64_t sub_8FBE0()
{
  return Text.font(_:)();
}

uint64_t sub_8FBF0()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_8FC00()
{
  return Text.init<A>(_:)();
}

uint64_t sub_8FC10()
{
  return View.chartXAxis<A>(content:)();
}

uint64_t sub_8FC20()
{
  return View.chartYAxis<A>(content:)();
}

uint64_t sub_8FC30()
{
  return View.chartLegend(_:)();
}

uint64_t sub_8FC40()
{
  return View.chartYScale<A>(domain:type:)();
}

uint64_t sub_8FC50()
{
  return View.chartOverlay<A>(alignment:content:)();
}

uint64_t sub_8FC60()
{
  return View.chartPlotStyle<A>(content:)();
}

uint64_t sub_8FC70()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_8FC80()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_8FC90()
{
  return View.fontWeight(_:)();
}

uint64_t sub_8FCA0()
{
  return View.onTapGesture<A>(count:coordinateSpace:perform:)();
}

uint64_t sub_8FCB0()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_8FCC0()
{
  return View.accessibilityIdentifier(_:)();
}

uint64_t sub_8FCD0()
{
  return View.accessibilityChartDescriptor<A>(_:)();
}

uint64_t sub_8FCE0()
{
  return View.modifier<A>(_:)();
}

uint64_t sub_8FCF0()
{
  return static Color.== infix(_:_:)();
}

uint64_t sub_8FD00()
{
  return static Color.blue.getter();
}

uint64_t sub_8FD10()
{
  return static Color.clear.getter();
}

uint64_t sub_8FD20()
{
  return static Color.white.getter();
}

uint64_t sub_8FD30()
{
  return Color.opacity(_:)();
}

uint64_t sub_8FD50()
{
  return static Color.secondary.getter();
}

uint64_t sub_8FD60()
{
  return Color.init(_:)();
}

uint64_t sub_8FD70()
{
  return Image.init(systemName:)();
}

uint64_t sub_8FDA0()
{
  return Shape.layoutDirectionBehavior.getter();
}

uint64_t sub_8FDC0()
{
  return static Shape.role.getter();
}

uint64_t sub_8FDE0()
{
  return State.init(wrappedValue:)();
}

uint64_t sub_8FDF0()
{
  return State.wrappedValue.getter();
}

uint64_t sub_8FE00()
{
  return State.projectedValue.getter();
}

uint64_t sub_8FE10()
{
  return Button.init(action:label:)();
}

uint64_t sub_8FE20()
{
  return Binding.wrappedValue.getter();
}

uint64_t sub_8FE30()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_8FE40()
{
  return Binding.projectedValue.getter();
}

uint64_t sub_8FE50()
{
  return type metadata accessor for Capsule();
}

uint64_t sub_8FE60()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_8FE70()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_8FE80()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_8FE90()
{
  return static Alignment.topLeading.getter();
}

uint64_t sub_8FEA0()
{
  return static Alignment.topTrailing.getter();
}

uint64_t sub_8FEB0()
{
  return static Alignment.top.getter();
}

uint64_t sub_8FEC0()
{
  return static Alignment.center.getter();
}

uint64_t sub_8FED0()
{
  return static Alignment.leading.getter();
}

uint64_t sub_8FEE0()
{
  return static Animation.linear.getter();
}

uint64_t sub_8FEF0()
{
  return static Animation.easeInOut(duration:)();
}

uint64_t sub_8FF00()
{
  return static Animation.easeInOut.getter();
}

uint64_t sub_8FF10()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_8FF20()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_8FF30()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_8FF40()
{
  return static Dictionary._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_8FF50()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_8FF60()
{
  return Dictionary.description.getter();
}

uint64_t sub_8FF70()
{
  return dispatch thunk of static FloatingPoint./ infix(_:_:)();
}

uint64_t sub_8FF80()
{
  return dispatch thunk of FloatingPoint.rounded(_:)();
}

uint64_t sub_8FF90()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_8FFA0()
{
  return BidirectionalCollection.last.getter();
}

uint64_t sub_8FFB0()
{
  return BidirectionalCollection.lastIndex(where:)();
}

uint64_t sub_8FFC0()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_8FFD0()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t sub_8FFE0()
{
  return MutableCollection.subscript.getter();
}

uint64_t sub_8FFF0()
{
  return type metadata accessor for ClosedRange();
}

uint64_t sub_90000()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_90010()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_90020()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_90030()
{
  return String.init(format:_:)();
}

uint64_t sub_90040()
{
  return String.uppercased()()._countAndFlagsBits;
}

uint64_t sub_90050()
{
  return String.hash(into:)();
}

void sub_90060(Swift::String a1)
{
}

Swift::Int sub_90070()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_90080()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t sub_90090()
{
  return dispatch thunk of Sequence.underestimatedCount.getter();
}

uint64_t sub_900A0()
{
  return Sequence.enumerated()();
}

uint64_t sub_900B0()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

NSArray sub_900C0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_900D0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_900E0()
{
  return specialized Array._endMutation()();
}

uint64_t sub_900F0()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

uint64_t sub_90100()
{
  return static Array._allocateUninitialized(_:)();
}

BOOL sub_90110()
{
  return Array._hoistableIsNativeTypeChecked()();
}

uint64_t sub_90120()
{
  return Array.count.getter();
}

uint64_t sub_90130()
{
  return Array.append(_:)();
}

uint64_t sub_90140()
{
  return Array.endIndex.getter();
}

uint64_t sub_90150()
{
  return type metadata accessor for Array();
}

uint64_t sub_90160()
{
  return Array.subscript.getter();
}

uint64_t sub_90170()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_90180()
{
  return static MainActor.shared.getter();
}

uint64_t sub_90190()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_901A0()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_901B0()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_901C0()
{
  return Double.description.getter();
}

uint64_t sub_901D0()
{
  return Double.write<A>(to:)();
}

uint64_t sub_901E0()
{
  return dispatch thunk of static Numeric.* infix(_:_:)();
}

AXDataPoint sub_901F0(Swift::Double x, Swift::Double_optional y, Swift::OpaquePointer additionalValues, Swift::String_optional label)
{
  return AXDataPoint.init(x:y:additionalValues:label:)(x, y, additionalValues, label);
}

uint64_t sub_90200()
{
  return NSDictionary.init(dictionaryLiteral:)();
}

uint64_t sub_90210()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_90220()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_90230()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_90240()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_90250()
{
  return AXChartDescriptor.init(title:summary:xAxis:yAxis:additionalAxes:series:)();
}

uint64_t sub_90260()
{
  return AXChartDescriptor.xAxis.getter();
}

uint64_t sub_90270()
{
  return AXChartDescriptor.xAxis.setter();
}

uint64_t sub_90280()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_90290()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_902A0()
{
  return AXNumericDataAxisDescriptor.init(title:range:gridlinePositions:valueDescriptionProvider:)();
}

uint64_t sub_902B0()
{
  return NSArray.init(arrayLiteral:)();
}

uint64_t sub_902C0()
{
  return NSArray.makeIterator()();
}

uint64_t sub_902D0()
{
  return UIColor.init(_:)();
}

NSNumber sub_902E0(Swift::Int integerLiteral)
{
  return NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int sub_902F0(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_90300()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_90310()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t sub_90320()
{
  return type metadata accessor for Optional();
}

uint64_t sub_90330()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t sub_90340()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_90350()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_90360()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_90370()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_90380()
{
  return type metadata accessor for ArraySlice();
}

uint64_t sub_90390()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

Swift::Int sub_903A0(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_903B0()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_903C0()
{
  return AnyHashable.init<A>(_:)();
}

void sub_903D0(Swift::Int a1)
{
}

uint64_t sub_903E0()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_903F0()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_90400()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_90410()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_90420()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_90430()
{
  return specialized ContiguousArray._endMutation()();
}

void sub_90440(Swift::Int a1)
{
}

uint64_t sub_90450()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_90460()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_90470()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_90480()
{
  return ContiguousArray.append(_:)();
}

uint64_t sub_90490()
{
  return ContiguousArray.init()();
}

uint64_t sub_904A0()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t sub_904B0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_904C0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_904D0()
{
  return dispatch thunk of static AdditiveArithmetic.+= infix(_:_:)();
}

uint64_t sub_904E0()
{
  return type metadata accessor for EnumeratedSequence();
}

uint64_t sub_904F0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_90500()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_90510()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_90520()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_90530()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_90540(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_90550()
{
  return type metadata accessor for FloatingPointRoundingRule();
}

uint64_t sub_90560()
{
  return dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
}

uint64_t sub_90570()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_90580()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t sub_90590()
{
  return dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
}

uint64_t sub_905A0()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t sub_905B0()
{
  return max<A>(_:_:)();
}

uint64_t sub_905C0()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_905D0()
{
  return Hasher.init(_seed:)();
}

void sub_905E0(Swift::UInt a1)
{
}

Swift::Int sub_905F0()
{
  return Hasher._finalize()();
}

uint64_t sub_90600()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t ADClientAddValueForScalarKey()
{
  return _ADClientAddValueForScalarKey();
}

uint64_t ADClientPushValueForDistributionKey()
{
  return _ADClientPushValueForDistributionKey();
}

uint64_t ADClientSetValueForScalarKey()
{
  return _ADClientSetValueForScalarKey();
}

uint64_t AnalyticsSendEventLazy()
{
  return _AnalyticsSendEventLazy();
}

uint64_t BKSDisplayBrightnessGetCurrent()
{
  return _BKSDisplayBrightnessGetCurrent();
}

uint64_t BKSDisplayBrightnessSet()
{
  return _BKSDisplayBrightnessSet();
}

uint64_t BKSDisplayBrightnessSetAutoBrightnessEnabled()
{
  return _BKSDisplayBrightnessSetAutoBrightnessEnabled();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return _CFBooleanGetValue(BOOLean);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return _CFPreferencesAppSynchronize(applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return _CFPreferencesCopyAppValue(key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFRelease(CFTypeRef cf)
{
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformMakeTranslation(retstr, tx, ty);
}

CGAffineTransform *__cdecl CGAffineTransformTranslate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformTranslate(retstr, t, tx, ty);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return _CGBitmapContextCreate(data, width, height, bitsPerComponent, bytesPerRow, space, bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return _CGBitmapContextCreateImage(context);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return _CGColorGetComponents(color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceGray(void)
{
  return _CGColorSpaceCreateDeviceGray();
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return _CGColorSpaceCreateDeviceRGB();
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
}

void CGContextAddLineToPoint(CGContextRef c, CGFloat x, CGFloat y)
{
}

void CGContextBeginPath(CGContextRef c)
{
}

void CGContextClip(CGContextRef c)
{
}

void CGContextClosePath(CGContextRef c)
{
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
}

void CGContextDrawLinearGradient(CGContextRef c, CGGradientRef gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextMoveToPoint(CGContextRef c, CGFloat x, CGFloat y)
{
}

void CGContextRelease(CGContextRef c)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetLineDash(CGContextRef c, CGFloat phase, const CGFloat *lengths, size_t count)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextStrokePath(CGContextRef c)
{
}

CGGradientRef CGGradientCreateWithColorComponents(CGColorSpaceRef space, const CGFloat *components, const CGFloat *locations, size_t count)
{
  return _CGGradientCreateWithColorComponents(space, components, locations, count);
}

void CGGradientRelease(CGGradientRef gradient)
{
}

void CGImageRelease(CGImageRef image)
{
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectIntegral(CGRect rect)
{
  return _CGRectIntegral(rect);
}

uint64_t CPFSSizeStrings()
{
  return _CPFSSizeStrings();
}

uint64_t CalWeekStartForDisplay()
{
  return _CalWeekStartForDisplay();
}

CFDictionaryRef IOPSCopyExternalPowerAdapterDetails(void)
{
  return _IOPSCopyExternalPowerAdapterDetails();
}

uint64_t IOPSCopyPowerSourcesByType()
{
  return _IOPSCopyPowerSourcesByType();
}

uint64_t IOPSCopyPowerSourcesByTypePrecise()
{
  return _IOPSCopyPowerSourcesByTypePrecise();
}

CFTypeRef IOPSCopyPowerSourcesInfo(void)
{
  return _IOPSCopyPowerSourcesInfo();
}

CFArrayRef IOPSCopyPowerSourcesList(CFTypeRef blob)
{
  return _IOPSCopyPowerSourcesList(blob);
}

uint64_t IOPSDrawingUnlimitedPower()
{
  return _IOPSDrawingUnlimitedPower();
}

uint64_t IOPSGetPercentRemaining()
{
  return _IOPSGetPercentRemaining();
}

CFDictionaryRef IOPSGetPowerSourceDescription(CFTypeRef blob, CFTypeRef ps)
{
  return _IOPSGetPowerSourceDescription(blob, ps);
}

kern_return_t IORegistryEntryCreateCFProperties(io_registry_entry_t entry, CFMutableDictionaryRef *properties, CFAllocatorRef allocator, IOOptionBits options)
{
  return _IORegistryEntryCreateCFProperties(entry, properties, allocator, options);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return _IOServiceGetMatchingService(mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return _IOServiceMatching(name);
}

uint64_t LocalizableGTStringKeyForKey()
{
  return _LocalizableGTStringKeyForKey();
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MGIsDeviceOneOfType()
{
  return _MGIsDeviceOneOfType();
}

uint64_t MKBUserTypeDeviceMode()
{
  return _MKBUserTypeDeviceMode();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

void NSLog(NSString *format, ...)
{
}

NSString *NSOpenStepRootDirectory(void)
{
  return _NSOpenStepRootDirectory();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return _NSStringFromRange(range);
}

uint64_t PLBatteryUsageUIConfiguration()
{
  return _PLBatteryUsageUIConfiguration();
}

uint64_t PLBatteryUsageUIKeyForRequest()
{
  return _PLBatteryUsageUIKeyForRequest();
}

uint64_t PLBatteryUsageUIQuery()
{
  return _PLBatteryUsageUIQuery();
}

uint64_t PLCalculateEndOfDay()
{
  return _PLCalculateEndOfDay();
}

uint64_t PLCalculateEndOfHour()
{
  return _PLCalculateEndOfHour();
}

uint64_t PLLogRegisteredEvent()
{
  return _PLLogRegisteredEvent();
}

uint64_t PLQueryRegistered()
{
  return _PLQueryRegistered();
}

uint64_t PSAbbreviatedFormattedTimeString()
{
  return _PSAbbreviatedFormattedTimeString();
}

uint64_t PSBlankIconImage()
{
  return _PSBlankIconImage();
}

uint64_t PSFormattedTimeString()
{
  return _PSFormattedTimeString();
}

uint64_t PSIsiPad()
{
  return _PSIsiPad();
}

uint64_t PSLocaleUses24HourClock()
{
  return _PSLocaleUses24HourClock();
}

uint64_t PSRoundToPixel()
{
  return _PSRoundToPixel();
}

uint64_t PSShouldInsetListView()
{
  return _PSShouldInsetListView();
}

uint64_t PreferencesTableViewCellLeftPad()
{
  return _PreferencesTableViewCellLeftPad();
}

uint64_t PreferencesTableViewHeaderColor()
{
  return _PreferencesTableViewHeaderColor();
}

uint64_t PreferencesTableViewHeaderFont()
{
  return _PreferencesTableViewHeaderFont();
}

uint64_t SBSCopyLocalizedApplicationNameForDisplayIdentifier()
{
  return _SBSCopyLocalizedApplicationNameForDisplayIdentifier();
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFPreferencesCopyAppValueWithContainer()
{
  return __CFPreferencesCopyAppValueWithContainer();
}

uint64_t _CFPreferencesCopyValueWithContainer()
{
  return __CFPreferencesCopyValueWithContainer();
}

uint64_t _CFPreferencesSetAppValueWithContainer()
{
  return __CFPreferencesSetAppValueWithContainer();
}

uint64_t _CFPreferencesSetValueWithContainer()
{
  return __CFPreferencesSetValueWithContainer();
}

uint64_t _CFXPCCreateCFObjectFromXPCObject()
{
  return __CFXPCCreateCFObjectFromXPCObject();
}

NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, id firstValue, ...)
{
  return __NSDictionaryOfVariableBindings(commaSeparatedKeysString, firstValue);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t _os_assumes_log()
{
  return __os_assumes_log();
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

uint64_t container_create_or_lookup_system_group_paths()
{
  return _container_create_or_lookup_system_group_paths();
}

long double cos(long double __x)
{
  return _cos(__x);
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return _dlopen(__path, __mode);
}

void free(void *a1)
{
}

uint64_t mach_absolute_time(void)
{
  return _mach_absolute_time();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return _mach_timebase_info(info);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return _notify_get_state(token, state64);
}

uint32_t notify_post(const char *name)
{
  return _notify_post(name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return _notify_register_check(name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return _swift_getTupleTypeMetadata3();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

int usleep(useconds_t a1)
{
  return _usleep(a1);
}

id objc_msgSend_BHUILog(void *a1, const char *a2, ...)
{
  return _[a1 BHUILog];
}

id objc_msgSend_BUI_MODE(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BUI_MODE");
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _[a1 CGImage];
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_URLHostAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 URLHostAllowedCharacterSet];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend__backgroundInset(void *a1, const char *a2, ...)
{
  return _[a1 _backgroundInset];
}

id objc_msgSend__batteryGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 _batteryGroupSpecifier];
}

id objc_msgSend__defaultFontForTableViewStyle_isSectionHeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultFontForTableViewStyle:isSectionHeader:");
}

id objc_msgSend__defaultTextColorForTableViewStyle_isSectionHeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultTextColorForTableViewStyle:isSectionHeader:");
}

id objc_msgSend__dynamicColorWithColorsByTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dynamicColorWithColorsByTraitCollection:");
}

id objc_msgSend__getBatteryHealthServiceState(void *a1, const char *a2, ...)
{
  return _[a1 _getBatteryHealthServiceState];
}

id objc_msgSend__getCurrentStateOfCharge(void *a1, const char *a2, ...)
{
  return _[a1 _getCurrentStateOfCharge];
}

id objc_msgSend__getMaximumCapacity(void *a1, const char *a2, ...)
{
  return _[a1 _getMaximumCapacity];
}

id objc_msgSend__labelColor(void *a1, const char *a2, ...)
{
  return _[a1 _labelColor];
}

id objc_msgSend__luminance(void *a1, const char *a2, ...)
{
  return _[a1 _luminance];
}

id objc_msgSend__maxTrackView(void *a1, const char *a2, ...)
{
  return _[a1 _maxTrackView];
}

id objc_msgSend__minTrackView(void *a1, const char *a2, ...)
{
  return _[a1 _minTrackView];
}

id objc_msgSend__preferredFontForTextStyle_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredFontForTextStyle:weight:");
}

id objc_msgSend__secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 _secondaryLabelColor];
}

id objc_msgSend__spinnerSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 _spinnerSpecifier];
}

id objc_msgSend__spinnerSpecifierGroup(void *a1, const char *a2, ...)
{
  return _[a1 _spinnerSpecifierGroup];
}

id objc_msgSend__suggestionEntries(void *a1, const char *a2, ...)
{
  return _[a1 _suggestionEntries];
}

id objc_msgSend__suggestionGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 _suggestionGroupSpecifier];
}

id objc_msgSend_aboutBatteriesGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 aboutBatteriesGroupSpecifier];
}

id objc_msgSend_actionWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithHandler:");
}

id objc_msgSend_actionWithLabel_url_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithLabel:url:");
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:style:handler:");
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateConstraints:");
}

id objc_msgSend_activityIndicator(void *a1, const char *a2, ...)
{
  return _[a1 activityIndicator];
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAction:");
}

id objc_msgSend_addArrangedSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addArrangedSubview:");
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addClip(void *a1, const char *a2, ...)
{
  return _[a1 addClip];
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGestureRecognizer:");
}

id objc_msgSend_addLineToPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLineToPoint:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_addQueryType_withEndDate_withRange_withBucketSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addQueryType:withEndDate:withRange:withBucketSize:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_addSuggestionsToSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSuggestionsToSpecifiers:");
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:forControlEvents:");
}

id objc_msgSend_adjustTableBottomInset(void *a1, const char *a2, ...)
{
  return _[a1 adjustTableBottomInset];
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertControllerWithTitle:message:preferredStyle:");
}

id objc_msgSend_alertViewStyle(void *a1, const char *a2, ...)
{
  return _[a1 alertViewStyle];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_alsCurveHigherThanDefault(void *a1, const char *a2, ...)
{
  return _[a1 alsCurveHigherThanDefault];
}

id objc_msgSend_animateSwitchSpecifier_toState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateSwitchSpecifier:toState:");
}

id objc_msgSend_appEnergyValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appEnergyValue:");
}

id objc_msgSend_appFGBGValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appFGBGValue:");
}

id objc_msgSend_appQualifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appQualifiers:");
}

id objc_msgSend_appQualifiers_containsQualifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appQualifiers:containsQualifier:");
}

id objc_msgSend_appearance(void *a1, const char *a2, ...)
{
  return _[a1 appearance];
}

id objc_msgSend_appendPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendPath:");
}

id objc_msgSend_arrangedSubviews(void *a1, const char *a2, ...)
{
  return _[a1 arrangedSubviews];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_attributedStringWithAttachment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedStringWithAttachment:");
}

id objc_msgSend_authorizationStatusForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorizationStatusForBundleIdentifier:");
}

id objc_msgSend_autoBrightnessEnabled(void *a1, const char *a2, ...)
{
  return _[a1 autoBrightnessEnabled];
}

id objc_msgSend_autoupdatingCurrentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 autoupdatingCurrentCalendar];
}

id objc_msgSend_autoupdatingCurrentLocale(void *a1, const char *a2, ...)
{
  return _[a1 autoupdatingCurrentLocale];
}

id objc_msgSend_backend(void *a1, const char *a2, ...)
{
  return _[a1 backend];
}

id objc_msgSend_backgroundAppUsageInsightToRemove(void *a1, const char *a2, ...)
{
  return _[a1 backgroundAppUsageInsightToRemove];
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 backgroundColor];
}

id objc_msgSend_batteryCycleCount(void *a1, const char *a2, ...)
{
  return _[a1 batteryCycleCount];
}

id objc_msgSend_batteryDataUnavailable(void *a1, const char *a2, ...)
{
  return _[a1 batteryDataUnavailable];
}

id objc_msgSend_batteryDateOfFirstUse(void *a1, const char *a2, ...)
{
  return _[a1 batteryDateOfFirstUse];
}

id objc_msgSend_batteryDateOfManufacture(void *a1, const char *a2, ...)
{
  return _[a1 batteryDateOfManufacture];
}

id objc_msgSend_batteryGraphSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 batteryGraphSpecifier];
}

id objc_msgSend_batteryHealthServiceState(void *a1, const char *a2, ...)
{
  return _[a1 batteryHealthServiceState];
}

id objc_msgSend_batteryInfoGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 batteryInfoGroupSpecifier];
}

id objc_msgSend_batteryServiceBookingCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 batteryServiceBookingCoordinator];
}

id objc_msgSend_batteryUIDeviceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 batteryUIDeviceOrientation];
}

id objc_msgSend_batteryUIQueryRangeKey(void *a1, const char *a2, ...)
{
  return _[a1 batteryUIQueryRangeKey];
}

id objc_msgSend_batteryUIQueryType(void *a1, const char *a2, ...)
{
  return _[a1 batteryUIQueryType];
}

id objc_msgSend_batteryUITextLabel(void *a1, const char *a2, ...)
{
  return _[a1 batteryUITextLabel];
}

id objc_msgSend_batteryUIType(void *a1, const char *a2, ...)
{
  return _[a1 batteryUIType];
}

id objc_msgSend_batteryUsageGraphsSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 batteryUsageGraphsSpecifier];
}

id objc_msgSend_beginGeneratingDeviceOrientationNotifications(void *a1, const char *a2, ...)
{
  return _[a1 beginGeneratingDeviceOrientationNotifications];
}

id objc_msgSend_beginUpdate(void *a1, const char *a2, ...)
{
  return _[a1 beginUpdate];
}

id objc_msgSend_bezierPathWithOvalInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithOvalInRect:");
}

id objc_msgSend_bezierPathWithRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithRect:");
}

id objc_msgSend_bezierPathWithRoundedRect_cornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithRoundedRect:cornerRadius:");
}

id objc_msgSend_bhuiDateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 bhuiDateFormatter];
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _[a1 blackColor];
}

id objc_msgSend_blueColor(void *a1, const char *a2, ...)
{
  return _[a1 blueColor];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _[a1 bottomAnchor];
}

id objc_msgSend_bottomMarginConstraints(void *a1, const char *a2, ...)
{
  return _[a1 bottomMarginConstraints];
}

id objc_msgSend_boundingRectWithSize_options_attributes_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundingRectWithSize:options:attributes:context:");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_breakdownTitleLabel(void *a1, const char *a2, ...)
{
  return _[a1 breakdownTitleLabel];
}

id objc_msgSend_breakdownToggleButton(void *a1, const char *a2, ...)
{
  return _[a1 breakdownToggleButton];
}

id objc_msgSend_bringSubviewToFront_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bringSubviewToFront:");
}

id objc_msgSend_buiViewController(void *a1, const char *a2, ...)
{
  return _[a1 buiViewController];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleURL(void *a1, const char *a2, ...)
{
  return _[a1 bundleURL];
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithType:");
}

id objc_msgSend_cachedCellForSpecifierID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedCellForSpecifierID:");
}

id objc_msgSend_capitalizedString(void *a1, const char *a2, ...)
{
  return _[a1 capitalizedString];
}

id objc_msgSend_cardView(void *a1, const char *a2, ...)
{
  return _[a1 cardView];
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return _[a1 center];
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerYAnchor];
}

id objc_msgSend_changeTickColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeTickColor:");
}

id objc_msgSend_chargeCapacityGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 chargeCapacityGroupSpecifier];
}

id objc_msgSend_chargingClient(void *a1, const char *a2, ...)
{
  return _[a1 chargingClient];
}

id objc_msgSend_chargingLimitGroup(void *a1, const char *a2, ...)
{
  return _[a1 chargingLimitGroup];
}

id objc_msgSend_chargingLimitSlider(void *a1, const char *a2, ...)
{
  return _[a1 chargingLimitSlider];
}

id objc_msgSend_chartIdentifier10Days(void *a1, const char *a2, ...)
{
  return _[a1 chartIdentifier10Days];
}

id objc_msgSend_chartIdentifier24Hrs(void *a1, const char *a2, ...)
{
  return _[a1 chartIdentifier24Hrs];
}

id objc_msgSend_checkIfFontFits_withSegment1_andSegment2_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkIfFontFits:withSegment1:andSegment2:");
}

id objc_msgSend_child(void *a1, const char *a2, ...)
{
  return _[a1 child];
}

id objc_msgSend_cleanChargingState(void *a1, const char *a2, ...)
{
  return _[a1 cleanChargingState];
}

id objc_msgSend_cleanEnergyChargingGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 cleanEnergyChargingGroupSpecifier];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_clearGraph(void *a1, const char *a2, ...)
{
  return _[a1 clearGraph];
}

id objc_msgSend_clearSpinner(void *a1, const char *a2, ...)
{
  return _[a1 clearSpinner];
}

id objc_msgSend_closeRCLCard(void *a1, const char *a2, ...)
{
  return _[a1 closeRCLCard];
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithWhite:alpha:");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_component_fromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "component:fromDate:");
}

id objc_msgSend_components_fromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:");
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:constant:");
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:");
}

id objc_msgSend_constraintsAdded(void *a1, const char *a2, ...)
{
  return _[a1 constraintsAdded];
}

id objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintsWithVisualFormat:options:metrics:views:");
}

id objc_msgSend_containerPath(void *a1, const char *a2, ...)
{
  return _[a1 containerPath];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_contentInset(void *a1, const char *a2, ...)
{
  return _[a1 contentInset];
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return _[a1 contentOffset];
}

id objc_msgSend_contentScrollView(void *a1, const char *a2, ...)
{
  return _[a1 contentScrollView];
}

id objc_msgSend_contentSize(void *a1, const char *a2, ...)
{
  return _[a1 contentSize];
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _[a1 contentView];
}

id objc_msgSend_control(void *a1, const char *a2, ...)
{
  return _[a1 control];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_create(void *a1, const char *a2, ...)
{
  return _[a1 create];
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createLabelStack(void *a1, const char *a2, ...)
{
  return _[a1 createLabelStack];
}

id objc_msgSend_createSlider(void *a1, const char *a2, ...)
{
  return _[a1 createSlider];
}

id objc_msgSend_createWithTitle_subtitle_actionTitle_action_close_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createWithTitle:subtitle:actionTitle:action:close:");
}

id objc_msgSend_curChargingMode(void *a1, const char *a2, ...)
{
  return _[a1 curChargingMode];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 currentCalendar];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentDictionary(void *a1, const char *a2, ...)
{
  return _[a1 currentDictionary];
}

id objc_msgSend_currentGraphDictionary(void *a1, const char *a2, ...)
{
  return _[a1 currentGraphDictionary];
}

id objc_msgSend_currentLastChargeDictionary(void *a1, const char *a2, ...)
{
  return _[a1 currentLastChargeDictionary];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _[a1 currentLocale];
}

id objc_msgSend_currentPausedChargingDictionary(void *a1, const char *a2, ...)
{
  return _[a1 currentPausedChargingDictionary];
}

id objc_msgSend_currentRecommendedChargeLimitWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentRecommendedChargeLimitWithError:");
}

id objc_msgSend_currentTickColor(void *a1, const char *a2, ...)
{
  return _[a1 currentTickColor];
}

id objc_msgSend_currentTraitCollection(void *a1, const char *a2, ...)
{
  return _[a1 currentTraitCollection];
}

id objc_msgSend_cycleCountGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 cycleCountGroupSpecifier];
}

id objc_msgSend_darkenValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "darkenValue:");
}

id objc_msgSend_dataDict(void *a1, const char *a2, ...)
{
  return _[a1 dataDict];
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfFile:");
}

id objc_msgSend_dataWithJSONObject_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithJSONObject:options:error:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingTimeInterval:");
}

id objc_msgSend_dateFromComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFromComponents:");
}

id objc_msgSend_dateWithTimeInterval_sinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeInterval:sinceDate:");
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSince1970:");
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateConstraints:");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_defaults(void *a1, const char *a2, ...)
{
  return _[a1 defaults];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_detailTextLabel(void *a1, const char *a2, ...)
{
  return _[a1 detailTextLabel];
}

id objc_msgSend_determineBatteryBreakDownHeaderStringLength(void *a1, const char *a2, ...)
{
  return _[a1 determineBatteryBreakDownHeaderStringLength];
}

id objc_msgSend_deviceSupportsCPMS(void *a1, const char *a2, ...)
{
  return _[a1 deviceSupportsCPMS];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfFile:");
}

id objc_msgSend_dictionaryWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfURL:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didPushBatteryButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didPushBatteryButton:");
}

id objc_msgSend_didPushButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didPushButton:");
}

id objc_msgSend_didTapShowAllButton(void *a1, const char *a2, ...)
{
  return _[a1 didTapShowAllButton];
}

id objc_msgSend_didTappedBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didTappedBar:");
}

id objc_msgSend_disableCEC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableCEC:");
}

id objc_msgSend_disableDEoC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableDEoC:");
}

id objc_msgSend_disableMCL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableMCL:");
}

id objc_msgSend_disableSmartCharging_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableSmartCharging:");
}

id objc_msgSend_discoverabilitySignal(void *a1, const char *a2, ...)
{
  return _[a1 discoverabilitySignal];
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_displayRange(void *a1, const char *a2, ...)
{
  return _[a1 displayRange];
}

id objc_msgSend_displaySize(void *a1, const char *a2, ...)
{
  return _[a1 displaySize];
}

id objc_msgSend_doubleForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleForKey:");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_drawDayLines_andRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawDayLines:andRect:");
}

id objc_msgSend_drawFill_andRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawFill:andRect:");
}

id objc_msgSend_drawGrid_andRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawGrid:andRect:");
}

id objc_msgSend_drawHighLightForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawHighLightForValue:");
}

id objc_msgSend_drawInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawInRect:");
}

id objc_msgSend_drawInRect_withAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawInRect:withAttributes:");
}

id objc_msgSend_drawTickAtX_withColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawTickAtX:withColor:");
}

id objc_msgSend_effectiveValueForSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveValueForSetting:");
}

id objc_msgSend_enableCEC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableCEC:");
}

id objc_msgSend_enableMCL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableMCL:");
}

id objc_msgSend_enableSmartCharging_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableSmartCharging:");
}

id objc_msgSend_endDate(void *a1, const char *a2, ...)
{
  return _[a1 endDate];
}

id objc_msgSend_endGeneratingDeviceOrientationNotifications(void *a1, const char *a2, ...)
{
  return _[a1 endGeneratingDeviceOrientationNotifications];
}

id objc_msgSend_endOfDay(void *a1, const char *a2, ...)
{
  return _[a1 endOfDay];
}

id objc_msgSend_endOfHour(void *a1, const char *a2, ...)
{
  return _[a1 endOfHour];
}

id objc_msgSend_endUpdate(void *a1, const char *a2, ...)
{
  return _[a1 endUpdate];
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_environment(void *a1, const char *a2, ...)
{
  return _[a1 environment];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:isDirectory:");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fill(void *a1, const char *a2, ...)
{
  return _[a1 fill];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_fitSize(void *a1, const char *a2, ...)
{
  return _[a1 fitSize];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _[a1 font];
}

id objc_msgSend_fontWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithSize:");
}

id objc_msgSend_forceRemoveHighLight(void *a1, const char *a2, ...)
{
  return _[a1 forceRemoveHighLight];
}

id objc_msgSend_foregroundColor(void *a1, const char *a2, ...)
{
  return _[a1 foregroundColor];
}

id objc_msgSend_formatUsageStringInMin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formatUsageStringInMin:");
}

id objc_msgSend_formatUsageStringInMinOrHr_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formatUsageStringInMinOrHr:");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_functionName(void *a1, const char *a2, ...)
{
  return _[a1 functionName];
}

id objc_msgSend_generateBatteryEntrySpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateBatteryEntrySpecifiers:");
}

id objc_msgSend_generateGraphs(void *a1, const char *a2, ...)
{
  return _[a1 generateGraphs];
}

id objc_msgSend_generateIconImageForFormat_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateIconImageForFormat:scale:");
}

id objc_msgSend_generateSuggestionsEntryObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateSuggestionsEntryObjects:");
}

id objc_msgSend_generateSuggestionsWithIssues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateSuggestionsWithIssues:");
}

id objc_msgSend_genuineBatteryStatus(void *a1, const char *a2, ...)
{
  return _[a1 genuineBatteryStatus];
}

id objc_msgSend_getAuthData(void *a1, const char *a2, ...)
{
  return _[a1 getAuthData];
}

id objc_msgSend_getBatteryHealthServiceFlags(void *a1, const char *a2, ...)
{
  return _[a1 getBatteryHealthServiceFlags];
}

id objc_msgSend_getBatteryHealthServiceState(void *a1, const char *a2, ...)
{
  return _[a1 getBatteryHealthServiceState];
}

id objc_msgSend_getBatteryInformation(void *a1, const char *a2, ...)
{
  return _[a1 getBatteryInformation];
}

id objc_msgSend_getBatteryMaximumCapacityPercentWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBatteryMaximumCapacityPercentWithError:");
}

id objc_msgSend_getBatterySaverMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBatterySaverMode:");
}

id objc_msgSend_getBatteryServiceSuggestion(void *a1, const char *a2, ...)
{
  return _[a1 getBatteryServiceSuggestion];
}

id objc_msgSend_getDefaultValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDefaultValueForKey:");
}

id objc_msgSend_getDeviceOrientationFromCurrentDevice(void *a1, const char *a2, ...)
{
  return _[a1 getDeviceOrientationFromCurrentDevice];
}

id objc_msgSend_getHighlightValue(void *a1, const char *a2, ...)
{
  return _[a1 getHighlightValue];
}

id objc_msgSend_getInitializedSuggestionHeaderCellSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 getInitializedSuggestionHeaderCellSpecifier];
}

id objc_msgSend_getLabelTextForSlowCharger(void *a1, const char *a2, ...)
{
  return _[a1 getLabelTextForSlowCharger];
}

id objc_msgSend_getLabelWithTitle_withRGB_withFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLabelWithTitle:withRGB:withFont:");
}

id objc_msgSend_getLabelWithTitle_withRGB_withFont_andTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLabelWithTitle:withRGB:withFont:andTextAlignment:");
}

id objc_msgSend_getLocalizedTimeStringFromFutureDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLocalizedTimeStringFromFutureDate:");
}

id objc_msgSend_getLoczlizedHourMinuteStringFromSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLoczlizedHourMinuteStringFromSeconds:");
}

id objc_msgSend_getMCLLimitWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getMCLLimitWithError:");
}

id objc_msgSend_getManagementState(void *a1, const char *a2, ...)
{
  return _[a1 getManagementState];
}

id objc_msgSend_getManagementStateWithSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getManagementStateWithSync:");
}

id objc_msgSend_getMaxChargeCapacityPercentage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getMaxChargeCapacityPercentage:");
}

id objc_msgSend_getNumOfBreakdownEntriesAtTapIndex_fromBreakdownData_queryRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getNumOfBreakdownEntriesAtTapIndex:fromBreakdownData:queryRange:");
}

id objc_msgSend_getOneLineWidthOfText_withFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOneLineWidthOfText:withFont:");
}

id objc_msgSend_getRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRed:green:blue:alpha:");
}

id objc_msgSend_getRelativeDateStringForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRelativeDateStringForDate:");
}

id objc_msgSend_getRequeryTimeThreshold(void *a1, const char *a2, ...)
{
  return _[a1 getRequeryTimeThreshold];
}

id objc_msgSend_getScreenOnOffSecsAtTapIndex_fromGraphData_queryRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getScreenOnOffSecsAtTapIndex:fromGraphData:queryRange:");
}

id objc_msgSend_getSegmentedControlValue(void *a1, const char *a2, ...)
{
  return _[a1 getSegmentedControlValue];
}

id objc_msgSend_getSortValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSortValueForKey:");
}

id objc_msgSend_getStringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStringFromDate:");
}

id objc_msgSend_getSuggestionHeaderSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 getSuggestionHeaderSpecifier];
}

id objc_msgSend_getSuggestionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 getSuggestionIdentifier];
}

id objc_msgSend_getSuggestionInfoSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 getSuggestionInfoSpecifier];
}

id objc_msgSend_getSuggestionObjectWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSuggestionObjectWithType:");
}

id objc_msgSend_getSuggestionType(void *a1, const char *a2, ...)
{
  return _[a1 getSuggestionType];
}

id objc_msgSend_getTappedTimeDurationStringForTappedIndex_isUpperCase_isFooterString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getTappedTimeDurationStringForTappedIndex:isUpperCase:isFooterString:");
}

id objc_msgSend_get_log_handle_bhui(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "get_log_handle_bhui");
}

id objc_msgSend_get_log_handle_bui(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "get_log_handle_bui");
}

id objc_msgSend_get_log_handle_bui_graph(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "get_log_handle_bui_graph");
}

id objc_msgSend_graphArray(void *a1, const char *a2, ...)
{
  return _[a1 graphArray];
}

id objc_msgSend_graphBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 graphBackgroundColor];
}

id objc_msgSend_graphHeight(void *a1, const char *a2, ...)
{
  return _[a1 graphHeight];
}

id objc_msgSend_graphHeightWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "graphHeightWithTraitCollection:");
}

id objc_msgSend_graphNames(void *a1, const char *a2, ...)
{
  return _[a1 graphNames];
}

id objc_msgSend_graphType(void *a1, const char *a2, ...)
{
  return _[a1 graphType];
}

id objc_msgSend_graphView(void *a1, const char *a2, ...)
{
  return _[a1 graphView];
}

id objc_msgSend_grayColor(void *a1, const char *a2, ...)
{
  return _[a1 grayColor];
}

id objc_msgSend_grayScaleColorWithMin_andMax_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "grayScaleColorWithMin:andMax:");
}

id objc_msgSend_gridColor(void *a1, const char *a2, ...)
{
  return _[a1 gridColor];
}

id objc_msgSend_groupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 groupSpecifier];
}

id objc_msgSend_groupSpecifierWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupSpecifierWithID:");
}

id objc_msgSend_groupSpecifierWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupSpecifierWithName:");
}

id objc_msgSend_handleAction_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAction:completion:");
}

id objc_msgSend_handlerWithItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlerWithItem:");
}

id objc_msgSend_hasAOD(void *a1, const char *a2, ...)
{
  return _[a1 hasAOD];
}

id objc_msgSend_hasBatteryLevelDataAtTapIndex_fromGraphData_queryRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasBatteryLevelDataAtTapIndex:fromGraphData:queryRange:");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasRadarCompose(void *a1, const char *a2, ...)
{
  return _[a1 hasRadarCompose];
}

id objc_msgSend_headerShowAllButton(void *a1, const char *a2, ...)
{
  return _[a1 headerShowAllButton];
}

id objc_msgSend_headerSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 headerSpecifiers];
}

id objc_msgSend_headerTitleLabel(void *a1, const char *a2, ...)
{
  return _[a1 headerTitleLabel];
}

id objc_msgSend_headerView(void *a1, const char *a2, ...)
{
  return _[a1 headerView];
}

id objc_msgSend_healthStateGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 healthStateGroupSpecifier];
}

id objc_msgSend_hideLabelsIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 hideLabelsIfNecessary];
}

id objc_msgSend_highlightColor(void *a1, const char *a2, ...)
{
  return _[a1 highlightColor];
}

id objc_msgSend_highlightPath(void *a1, const char *a2, ...)
{
  return _[a1 highlightPath];
}

id objc_msgSend_highlightValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightValue:");
}

id objc_msgSend_hour(void *a1, const char *a2, ...)
{
  return _[a1 hour];
}

id objc_msgSend_iconUTTypeIdentifierForNonApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconUTTypeIdentifierForNonApp:");
}

id objc_msgSend_iconUTTypeIdentifierForSuggestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconUTTypeIdentifierForSuggestion:");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_imageDescriptorNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageDescriptorNamed:");
}

id objc_msgSend_imageForDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForDescriptor:");
}

id objc_msgSend_imageNamed_inBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:inBundle:");
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _[a1 imageView];
}

id objc_msgSend_imageWithCGImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithCGImage:");
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithRenderingMode:");
}

id objc_msgSend_imageWithTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithTintColor:");
}

id objc_msgSend_inDemoMode(void *a1, const char *a2, ...)
{
  return _[a1 inDemoMode];
}

id objc_msgSend_indexOfSpecifierID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfSpecifierID:");
}

id objc_msgSend_infoSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 infoSpecifier];
}

id objc_msgSend_infoText(void *a1, const char *a2, ...)
{
  return _[a1 infoText];
}

id objc_msgSend_informativeText(void *a1, const char *a2, ...)
{
  return _[a1 informativeText];
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_initGraphAttributes(void *a1, const char *a2, ...)
{
  return _[a1 initGraphAttributes];
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityIndicatorStyle:");
}

id objc_msgSend_initWithBarButtonSystemItem_primaryAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBarButtonSystemItem:primaryAction:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_initWithCGImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCGImage:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithClientName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientName:");
}

id objc_msgSend_initWithColors_tickColor_highlightColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithColors:tickColor:highlightColor:");
}

id objc_msgSend_initWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCompletion:");
}

id objc_msgSend_initWithController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithController:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithFrame_andData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:andData:");
}

id objc_msgSend_initWithIdentifier_bundleID_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:bundleID:context:");
}

id objc_msgSend_initWithImage_style_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:style:target:action:");
}

id objc_msgSend_initWithIssue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIssue:");
}

id objc_msgSend_initWithKey_table_locale_bundleURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:table:locale:bundleURL:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOptions:");
}

id objc_msgSend_initWithParentView_andDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithParentView:andDictionary:");
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRootViewController:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:attributes:");
}

id objc_msgSend_initWithSuggestionType_andData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuggestionType:andData:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:action:");
}

id objc_msgSend_initWithTitle_detailText_symbolName_contentLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:detailText:symbolName:contentLayout:");
}

id objc_msgSend_initWithTitle_message_delegate_cancelButtonTitle_otherButtonTitles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_inputData(void *a1, const char *a2, ...)
{
  return _[a1 inputData];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interactionAnalyticsDictionary(void *a1, const char *a2, ...)
{
  return _[a1 interactionAnalyticsDictionary];
}

id objc_msgSend_internalBuild(void *a1, const char *a2, ...)
{
  return _[a1 internalBuild];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_is24HourClock(void *a1, const char *a2, ...)
{
  return _[a1 is24HourClock];
}

id objc_msgSend_isAuthSpinner(void *a1, const char *a2, ...)
{
  return _[a1 isAuthSpinner];
}

id objc_msgSend_isBatterySaverModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isBatterySaverModeEnabled];
}

id objc_msgSend_isBatteryUnverified(void *a1, const char *a2, ...)
{
  return _[a1 isBatteryUnverified];
}

id objc_msgSend_isBatteryUnverifiedWithStatus_state_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBatteryUnverifiedWithStatus:state:");
}

id objc_msgSend_isCECCurrentlyEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCECCurrentlyEnabled:");
}

id objc_msgSend_isCECSupported(void *a1, const char *a2, ...)
{
  return _[a1 isCECSupported];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _[a1 isCancelled];
}

id objc_msgSend_isDate_inSameDayAsDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDate:inSameDayAsDate:");
}

id objc_msgSend_isDateMidnight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDateMidnight:");
}

id objc_msgSend_isDeviceLayoutRTL(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceLayoutRTL];
}

id objc_msgSend_isEduMode(void *a1, const char *a2, ...)
{
  return _[a1 isEduMode];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isHeySiriAlwaysOn(void *a1, const char *a2, ...)
{
  return _[a1 isHeySiriAlwaysOn];
}

id objc_msgSend_isImprovedServiceHandoffEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isImprovedServiceHandoffEnabled];
}

id objc_msgSend_isInBUIDemoMode(void *a1, const char *a2, ...)
{
  return _[a1 isInBUIDemoMode];
}

id objc_msgSend_isInUnitTest(void *a1, const char *a2, ...)
{
  return _[a1 isInUnitTest];
}

id objc_msgSend_isKnownServiceState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isKnownServiceState:");
}

id objc_msgSend_isLowPowerModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isLowPowerModeEnabled];
}

id objc_msgSend_isLowPowerModeSupported(void *a1, const char *a2, ...)
{
  return _[a1 isLowPowerModeSupported];
}

id objc_msgSend_isMCLCurrentlyEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMCLCurrentlyEnabled:");
}

id objc_msgSend_isMCLSupported(void *a1, const char *a2, ...)
{
  return _[a1 isMCLSupported];
}

id objc_msgSend_isNarrowScreen(void *a1, const char *a2, ...)
{
  return _[a1 isNarrowScreen];
}

id objc_msgSend_isOBCEngagedAsDesktopDevice_chargingOverrideAllowed_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOBCEngagedAsDesktopDevice:chargingOverrideAllowed:withError:");
}

id objc_msgSend_isPercentageSupported(void *a1, const char *a2, ...)
{
  return _[a1 isPercentageSupported];
}

id objc_msgSend_isQMaxUnknown(void *a1, const char *a2, ...)
{
  return _[a1 isQMaxUnknown];
}

id objc_msgSend_isSegmented(void *a1, const char *a2, ...)
{
  return _[a1 isSegmented];
}

id objc_msgSend_isServiceState(void *a1, const char *a2, ...)
{
  return _[a1 isServiceState];
}

id objc_msgSend_isSmartChargingCurrentlyEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSmartChargingCurrentlyEnabled:");
}

id objc_msgSend_isSquished(void *a1, const char *a2, ...)
{
  return _[a1 isSquished];
}

id objc_msgSend_isTappedIntervalCurrentBucket_withQueryRange_andEndTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTappedIntervalCurrentBucket:withQueryRange:andEndTime:");
}

id objc_msgSend_isTracking(void *a1, const char *a2, ...)
{
  return _[a1 isTracking];
}

id objc_msgSend_isiPad(void *a1, const char *a2, ...)
{
  return _[a1 isiPad];
}

id objc_msgSend_isiPhone(void *a1, const char *a2, ...)
{
  return _[a1 isiPhone];
}

id objc_msgSend_isiPod(void *a1, const char *a2, ...)
{
  return _[a1 isiPod];
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return _[a1 label];
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _[a1 labelColor];
}

id objc_msgSend_labelMap(void *a1, const char *a2, ...)
{
  return _[a1 labelMap];
}

id objc_msgSend_labelStack(void *a1, const char *a2, ...)
{
  return _[a1 labelStack];
}

id objc_msgSend_lastBatteryBreakdownQueryTime(void *a1, const char *a2, ...)
{
  return _[a1 lastBatteryBreakdownQueryTime];
}

id objc_msgSend_lastChargeTitleLabel(void *a1, const char *a2, ...)
{
  return _[a1 lastChargeTitleLabel];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_launchBatteryServiceBookingFlowWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchBatteryServiceBookingFlowWithCompletionHandler:");
}

id objc_msgSend_layoutMarginsGuide(void *a1, const char *a2, ...)
{
  return _[a1 layoutMarginsGuide];
}

id objc_msgSend_layoutSubviews(void *a1, const char *a2, ...)
{
  return _[a1 layoutSubviews];
}

id objc_msgSend_lazyLoadBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lazyLoadBundle:");
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leadingAnchor];
}

id objc_msgSend_leftAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leftAnchor];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_lightGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 lightGrayColor];
}

id objc_msgSend_lineColor(void *a1, const char *a2, ...)
{
  return _[a1 lineColor];
}

id objc_msgSend_localizedAttributedStringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedAttributedStringWithFormat:");
}

id objc_msgSend_localizedDateComponentsUnitsStyle(void *a1, const char *a2, ...)
{
  return _[a1 localizedDateComponentsUnitsStyle];
}

id objc_msgSend_localizedLeftTextAlignment(void *a1, const char *a2, ...)
{
  return _[a1 localizedLeftTextAlignment];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedObcFooter(void *a1, const char *a2, ...)
{
  return _[a1 localizedObcFooter];
}

id objc_msgSend_localizedRightTextAlignment(void *a1, const char *a2, ...)
{
  return _[a1 localizedRightTextAlignment];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringFromDate_dateStyle_timeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringFromDate:dateStyle:timeStyle:");
}

id objc_msgSend_localizedStringFromNumber_numberStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringFromNumber:numberStyle:");
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithFormat:");
}

id objc_msgSend_localizedStringWithHour_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithHour:");
}

id objc_msgSend_localizedStringWithPercentage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithPercentage:");
}

id objc_msgSend_localizedUppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 localizedUppercaseString];
}

id objc_msgSend_locationOfTouch_inView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationOfTouch:inView:");
}

id objc_msgSend_logBatteryStatusAndStates(void *a1, const char *a2, ...)
{
  return _[a1 logBatteryStatusAndStates];
}

id objc_msgSend_logRecommendationAnalytics(void *a1, const char *a2, ...)
{
  return _[a1 logRecommendationAnalytics];
}

id objc_msgSend_logViewDidLoadEvents(void *a1, const char *a2, ...)
{
  return _[a1 logViewDidLoadEvents];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_manualChargingGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 manualChargingGroupSpecifier];
}

id objc_msgSend_manualChargingState(void *a1, const char *a2, ...)
{
  return _[a1 manualChargingState];
}

id objc_msgSend_manualFileName(void *a1, const char *a2, ...)
{
  return _[a1 manualFileName];
}

id objc_msgSend_maxValue(void *a1, const char *a2, ...)
{
  return _[a1 maxValue];
}

id objc_msgSend_maximumValue(void *a1, const char *a2, ...)
{
  return _[a1 maximumValue];
}

id objc_msgSend_millisecondsFromMachTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "millisecondsFromMachTime:");
}

id objc_msgSend_minValue(void *a1, const char *a2, ...)
{
  return _[a1 minValue];
}

id objc_msgSend_minimumValue(void *a1, const char *a2, ...)
{
  return _[a1 minimumValue];
}

id objc_msgSend_minute(void *a1, const char *a2, ...)
{
  return _[a1 minute];
}

id objc_msgSend_modelSpecificLocalizedStringKeyForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modelSpecificLocalizedStringKeyForKey:");
}

id objc_msgSend_moveToPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveToPoint:");
}

id objc_msgSend_moveToValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveToValue:");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _[a1 navigationBar];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _[a1 navigationItem];
}

id objc_msgSend_nonGenuineBatteryGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 nonGenuineBatteryGroupSpecifier];
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_numberOfTicks(void *a1, const char *a2, ...)
{
  return _[a1 numberOfTicks];
}

id objc_msgSend_numberOfTouches(void *a1, const char *a2, ...)
{
  return _[a1 numberOfTouches];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_obcToggleGroup(void *a1, const char *a2, ...)
{
  return _[a1 obcToggleGroup];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_offsetBetweenTicksForNumberOfTicks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "offsetBetweenTicksForNumberOfTicks:");
}

id objc_msgSend_openURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:");
}

id objc_msgSend_openURL_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:options:completionHandler:");
}

id objc_msgSend_orientation(void *a1, const char *a2, ...)
{
  return _[a1 orientation];
}

id objc_msgSend_overrideBatteryData_withPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideBatteryData:withPath:");
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathForResource:ofType:");
}

id objc_msgSend_pe_emitNavigationEventForSystemSettingsWithGraphicIconIdentifier_title_localizedNavigationComponents_deepLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pe_emitNavigationEventForSystemSettingsWithGraphicIconIdentifier:title:localizedNavigationComponents:deepLink:");
}

id objc_msgSend_peakPowerCapacityGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 peakPowerCapacityGroupSpecifier];
}

id objc_msgSend_percentLabel(void *a1, const char *a2, ...)
{
  return _[a1 percentLabel];
}

id objc_msgSend_perfManagementState(void *a1, const char *a2, ...)
{
  return _[a1 perfManagementState];
}

id objc_msgSend_placeholder(void *a1, const char *a2, ...)
{
  return _[a1 placeholder];
}

id objc_msgSend_pointSize(void *a1, const char *a2, ...)
{
  return _[a1 pointSize];
}

id objc_msgSend_populateBatteryModelsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateBatteryModelsWithCompletion:");
}

id objc_msgSend_populateBatteryUsageWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateBatteryUsageWithCompletion:");
}

id objc_msgSend_populatePausedChargingStrings_percentLabel_lastChargeText_lastChargeDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populatePausedChargingStrings:percentLabel:lastChargeText:lastChargeDate:");
}

id objc_msgSend_preferenceSpecifierNamed_target_set_get_detail_cell_edit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferenceSpecifierNamed:target:set:get:detail:cell:edit:");
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 preferredContentSizeCategory];
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:");
}

id objc_msgSend_preferredLanguages(void *a1, const char *a2, ...)
{
  return _[a1 preferredLanguages];
}

id objc_msgSend_prepareImageForDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareImageForDescriptor:");
}

id objc_msgSend_presentModalViewController_withTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentModalViewController:withTransition:");
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:animated:completion:");
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentingViewController];
}

id objc_msgSend_previousBreakdownNotAvailable(void *a1, const char *a2, ...)
{
  return _[a1 previousBreakdownNotAvailable];
}

id objc_msgSend_priorLimit(void *a1, const char *a2, ...)
{
  return _[a1 priorLimit];
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_propertyForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyForKey:");
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushViewController:animated:");
}

id objc_msgSend_queryBackend_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryBackend:withCompletion:");
}

id objc_msgSend_queryForBatteryBreakdown(void *a1, const char *a2, ...)
{
  return _[a1 queryForBatteryBreakdown];
}

id objc_msgSend_queryPayload(void *a1, const char *a2, ...)
{
  return _[a1 queryPayload];
}

id objc_msgSend_queryResult(void *a1, const char *a2, ...)
{
  return _[a1 queryResult];
}

id objc_msgSend_queryType(void *a1, const char *a2, ...)
{
  return _[a1 queryType];
}

id objc_msgSend_radarController(void *a1, const char *a2, ...)
{
  return _[a1 radarController];
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_readPreferenceValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readPreferenceValue:");
}

id objc_msgSend_rebuildList(void *a1, const char *a2, ...)
{
  return _[a1 rebuildList];
}

id objc_msgSend_recalibrationHeaderSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 recalibrationHeaderSpecifier];
}

id objc_msgSend_recommendationAnalyticsDictionary(void *a1, const char *a2, ...)
{
  return _[a1 recommendationAnalyticsDictionary];
}

id objc_msgSend_recommendedChargingLimitCard(void *a1, const char *a2, ...)
{
  return _[a1 recommendedChargingLimitCard];
}

id objc_msgSend_refreshCellContentsWithSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshCellContentsWithSpecifier:");
}

id objc_msgSend_refreshView(void *a1, const char *a2, ...)
{
  return _[a1 refreshView];
}

id objc_msgSend_registerForTraitChanges_withHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForTraitChanges:withHandler:");
}

id objc_msgSend_reloadLocale(void *a1, const char *a2, ...)
{
  return _[a1 reloadLocale];
}

id objc_msgSend_reloadSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadSpecifier:");
}

id objc_msgSend_reloadSpecifierID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadSpecifierID:");
}

id objc_msgSend_reloadSpecifierID_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadSpecifierID:animated:");
}

id objc_msgSend_reloadSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 reloadSpecifiers];
}

id objc_msgSend_reloadSpecifiersFromSpinner(void *a1, const char *a2, ...)
{
  return _[a1 reloadSpecifiersFromSpinner];
}

id objc_msgSend_reloadUI(void *a1, const char *a2, ...)
{
  return _[a1 reloadUI];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConstraint:");
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperview];
}

id objc_msgSend_removeHighlight(void *a1, const char *a2, ...)
{
  return _[a1 removeHighlight];
}

id objc_msgSend_removeHighlight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHighlight:");
}

id objc_msgSend_removeHighlightShouldRedraw_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHighlightShouldRedraw:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeRCLCard(void *a1, const char *a2, ...)
{
  return _[a1 removeRCLCard];
}

id objc_msgSend_removeSpecifier_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSpecifier:animated:");
}

id objc_msgSend_removeSpecifierID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSpecifierID:");
}

id objc_msgSend_removeSpecifierID_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSpecifierID:animated:");
}

id objc_msgSend_removeSpinnerSpecifers(void *a1, const char *a2, ...)
{
  return _[a1 removeSpinnerSpecifers];
}

id objc_msgSend_removeSuggestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSuggestion:");
}

id objc_msgSend_replaceWithUnBreakableSpace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceWithUnBreakableSpace:");
}

id objc_msgSend_requiresTopSeparator(void *a1, const char *a2, ...)
{
  return _[a1 requiresTopSeparator];
}

id objc_msgSend_resetQuery(void *a1, const char *a2, ...)
{
  return _[a1 resetQuery];
}

id objc_msgSend_resolvedColorWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvedColorWithTraitCollection:");
}

id objc_msgSend_rightAnchor(void *a1, const char *a2, ...)
{
  return _[a1 rightAnchor];
}

id objc_msgSend_rootScrollView(void *a1, const char *a2, ...)
{
  return _[a1 rootScrollView];
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _[a1 row];
}

id objc_msgSend_rtlConsideredValue(void *a1, const char *a2, ...)
{
  return _[a1 rtlConsideredValue];
}

id objc_msgSend_rtlConsideredValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rtlConsideredValue:");
}

id objc_msgSend_runQuery(void *a1, const char *a2, ...)
{
  return _[a1 runQuery];
}

id objc_msgSend_savePList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "savePList:");
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scaledScreenOn_screenOff_andMaxTotalTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaledScreenOn:screenOff:andMaxTotalTime:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_screenLock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenLock:");
}

id objc_msgSend_screenOffColor(void *a1, const char *a2, ...)
{
  return _[a1 screenOffColor];
}

id objc_msgSend_screenOnColor(void *a1, const char *a2, ...)
{
  return _[a1 screenOnColor];
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return _[a1 scrollView];
}

id objc_msgSend_second(void *a1, const char *a2, ...)
{
  return _[a1 second];
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _[a1 section];
}

id objc_msgSend_segmentCount(void *a1, const char *a2, ...)
{
  return _[a1 segmentCount];
}

id objc_msgSend_segments(void *a1, const char *a2, ...)
{
  return _[a1 segments];
}

id objc_msgSend_sendEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEvent:");
}

id objc_msgSend_separatorColor(void *a1, const char *a2, ...)
{
  return _[a1 separatorColor];
}

id objc_msgSend_serviceHeaderSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 serviceHeaderSpecifier];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAccessibilityElements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityElements:");
}

id objc_msgSend_setAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityIdentifier:");
}

id objc_msgSend_setAccessibilityLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityLabel:");
}

id objc_msgSend_setAccessoryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessoryView:");
}

id objc_msgSend_setActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActions:");
}

id objc_msgSend_setActivationPercent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivationPercent:");
}

id objc_msgSend_setActiveChart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveChart:");
}

id objc_msgSend_setAdjustsFontForContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontForContentSizeCategory:");
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontSizeToFitWidth:");
}

id objc_msgSend_setAggdKeysForNoBreakdownOnTap(void *a1, const char *a2, ...)
{
  return _[a1 setAggdKeysForNoBreakdownOnTap];
}

id objc_msgSend_setAlertViewStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertViewStyle:");
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlignment:");
}

id objc_msgSend_setAllowedUnits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedUnits:");
}

id objc_msgSend_setAsRecommended(void *a1, const char *a2, ...)
{
  return _[a1 setAsRecommended];
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedText:");
}

id objc_msgSend_setAttributedTitle_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedTitle:forState:");
}

id objc_msgSend_setAutolockTitlesAndValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutolockTitlesAndValues:");
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizingMask:");
}

id objc_msgSend_setAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAxis:");
}

id objc_msgSend_setBUI_MODE_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBUI_MODE:");
}

id objc_msgSend_setBackend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackend:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBatteryCycleCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBatteryCycleCount:");
}

id objc_msgSend_setBatteryDateOfFirstUse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBatteryDateOfFirstUse:");
}

id objc_msgSend_setBatteryDateOfManufacture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBatteryDateOfManufacture:");
}

id objc_msgSend_setBatteryUIDeviceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBatteryUIDeviceOrientation:");
}

id objc_msgSend_setBatteryUIQueryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBatteryUIQueryType:");
}

id objc_msgSend_setBatteryUITextLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBatteryUITextLabel:");
}

id objc_msgSend_setBatteryUIType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBatteryUIType:");
}

id objc_msgSend_setBottomMarginConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBottomMarginConstraints:");
}

id objc_msgSend_setBreakdownTitleLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBreakdownTitleLabel:");
}

id objc_msgSend_setBreakdownToggleButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBreakdownToggleButton:");
}

id objc_msgSend_setButtonAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonAction:");
}

id objc_msgSend_setCalendar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCalendar:");
}

id objc_msgSend_setCardView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardView:");
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenter:");
}

id objc_msgSend_setChargeLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChargeLimit:");
}

id objc_msgSend_setChargingOptionsSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChargingOptionsSpecifier:");
}

id objc_msgSend_setChild_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChild:");
}

id objc_msgSend_setCleanChargingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCleanChargingState:");
}

id objc_msgSend_setClearGraph_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClearGraph:");
}

id objc_msgSend_setColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColor:");
}

id objc_msgSend_setConstraintsAdded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConstraintsAdded:");
}

id objc_msgSend_setContainerBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainerBackgroundColor:");
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentCompressionResistancePriority:forAxis:");
}

id objc_msgSend_setContentConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentConfiguration:");
}

id objc_msgSend_setContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInset:");
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentMode:");
}

id objc_msgSend_setContentOffset_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentOffset:animated:");
}

id objc_msgSend_setContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentSize:");
}

id objc_msgSend_setContinuous_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContinuous:");
}

id objc_msgSend_setCurChargingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurChargingMode:");
}

id objc_msgSend_setCurrentDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentDictionary:");
}

id objc_msgSend_setCurrentGraphDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentGraphDictionary:");
}

id objc_msgSend_setCurrentLastChargeDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentLastChargeDictionary:");
}

id objc_msgSend_setCurrentPausedChargingDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPausedChargingDictionary:");
}

id objc_msgSend_setCurrentValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentValue:");
}

id objc_msgSend_setCycle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCycle:");
}

id objc_msgSend_setDataset_endOfDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataset:endOfDay:");
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateFormat:");
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateStyle:");
}

id objc_msgSend_setDefaultRange(void *a1, const char *a2, ...)
{
  return _[a1 setDefaultRange];
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDetailControllerClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailControllerClass:");
}

id objc_msgSend_setDisplayRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayRange:");
}

id objc_msgSend_setDisplaySize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplaySize:");
}

id objc_msgSend_setDistribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistribution:");
}

id objc_msgSend_setDoesRelativeDateFormatting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDoesRelativeDateFormatting:");
}

id objc_msgSend_setDouble_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDouble:forKey:");
}

id objc_msgSend_setEditable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditable:");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setEntityAuthorization_forLocationDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntityAuthorization:forLocationDictionary:");
}

id objc_msgSend_setFill(void *a1, const char *a2, ...)
{
  return _[a1 setFill];
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setForceRemoveHighLight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForceRemoveHighLight:");
}

id objc_msgSend_setFormattingContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFormattingContext:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setFunctionName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFunctionName:");
}

id objc_msgSend_setGraphArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGraphArray:");
}

id objc_msgSend_setGraphBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGraphBackgroundColor:");
}

id objc_msgSend_setGraphNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGraphNames:");
}

id objc_msgSend_setGraphType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGraphType:");
}

id objc_msgSend_setGridRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGridRange:");
}

id objc_msgSend_setGroupSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupSpecifier:");
}

id objc_msgSend_setHeaderShowAllButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeaderShowAllButton:");
}

id objc_msgSend_setHeaderTitleLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeaderTitleLabel:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setHidesWhenStopped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesWhenStopped:");
}

id objc_msgSend_setHighlightColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightColor:");
}

id objc_msgSend_setHighlightPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightPath:");
}

id objc_msgSend_setHour_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHour:");
}

id objc_msgSend_setIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIcon:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:");
}

id objc_msgSend_setIncludesApproximationPhrase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludesApproximationPhrase:");
}

id objc_msgSend_setIncludesTimeRemainingPhrase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludesTimeRemainingPhrase:");
}

id objc_msgSend_setInfoText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInfoText:");
}

id objc_msgSend_setInformativeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInformativeText:");
}

id objc_msgSend_setInputData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInputData:");
}

id objc_msgSend_setInteractionAnalyticsDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteractionAnalyticsDictionary:");
}

id objc_msgSend_setIsAuthSpinner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAuthSpinner:");
}

id objc_msgSend_setLabelColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelColor:");
}

id objc_msgSend_setLabelMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelMap:");
}

id objc_msgSend_setLabelStack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelStack:");
}

id objc_msgSend_setLastBatteryBreakdownQueryTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastBatteryBreakdownQueryTime:");
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineBreakMode:");
}

id objc_msgSend_setLineColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineColor:");
}

id objc_msgSend_setLineWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineWidth:");
}

id objc_msgSend_setLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocale:");
}

id objc_msgSend_setLocalizedDateFormatFromTemplate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedDateFormatFromTemplate:");
}

id objc_msgSend_setMCLLimit_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMCLLimit:error:");
}

id objc_msgSend_setManualChargingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManualChargingState:");
}

id objc_msgSend_setManualFileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManualFileName:");
}

id objc_msgSend_setMarginWithTop_bottom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMarginWithTop:bottom:");
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxConcurrentOperationCount:");
}

id objc_msgSend_setMaxValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxValue:");
}

id objc_msgSend_setMaximumValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumValue:");
}

id objc_msgSend_setMinValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinValue:");
}

id objc_msgSend_setMinimumValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumValue:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNeedsDisplay(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsDisplay];
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsLayout];
}

id objc_msgSend_setNeedsUpdateConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsUpdateConfiguration];
}

id objc_msgSend_setNeedsUpdateConstraints(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsUpdateConstraints];
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLines:");
}

id objc_msgSend_setNumberOfTapsRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfTapsRequired:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setOn_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOn:animated:");
}

id objc_msgSend_setParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParentViewController:");
}

id objc_msgSend_setPerfManagementState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerfManagementState:");
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaceholder:");
}

id objc_msgSend_setPowerMode_fromSource_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPowerMode:fromSource:withCompletion:");
}

id objc_msgSend_setPreferredAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredAction:");
}

id objc_msgSend_setPreviousBreakdownNotAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousBreakdownNotAvailable:");
}

id objc_msgSend_setPriorLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriorLimit:");
}

id objc_msgSend_setProperty_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProperty:forKey:");
}

id objc_msgSend_setQueryResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueryResult:");
}

id objc_msgSend_setQueryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueryType:");
}

id objc_msgSend_setRadarController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRadarController:");
}

id objc_msgSend_setRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRange:");
}

id objc_msgSend_setRecommendationAnalyticsDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecommendationAnalyticsDictionary:");
}

id objc_msgSend_setRequiresTopSeparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiresTopSeparator:");
}

id objc_msgSend_setReusesCells_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReusesCells:");
}

id objc_msgSend_setRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItem:");
}

id objc_msgSend_setRootScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRootScrollView:");
}

id objc_msgSend_setScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScale:");
}

id objc_msgSend_setScrollEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollEnabled:");
}

id objc_msgSend_setSecondaryAttributedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecondaryAttributedText:");
}

id objc_msgSend_setSegmentCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSegmentCount:");
}

id objc_msgSend_setSegmented_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSegmented:");
}

id objc_msgSend_setSegmentedControlValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSegmentedControlValue:");
}

id objc_msgSend_setSegments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSegments:");
}

id objc_msgSend_setSelectionStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionStyle:");
}

id objc_msgSend_setSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSemanticContentAttribute:");
}

id objc_msgSend_setSeparatorInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorInset:");
}

id objc_msgSend_setSeparatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorStyle:");
}

id objc_msgSend_setSetTempFooter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetTempFooter:");
}

id objc_msgSend_setShowAll_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowAll:");
}

id objc_msgSend_setSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSize:");
}

id objc_msgSend_setSlider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSlider:");
}

id objc_msgSend_setSmartChargingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSmartChargingState:");
}

id objc_msgSend_setSnapsToSegment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSnapsToSegment:");
}

id objc_msgSend_setSpinnerCanReloadUI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpinnerCanReloadUI:");
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:");
}

id objc_msgSend_setSuggestionHeaderSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuggestionHeaderSpecifier:");
}

id objc_msgSend_setSuggestionTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuggestionTitle:");
}

id objc_msgSend_setSuggestionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuggestionType:");
}

id objc_msgSend_setTableCellHeightEstimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableCellHeightEstimated:");
}

id objc_msgSend_setTableCellHeights_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableCellHeights:");
}

id objc_msgSend_setTappedIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTappedIndex:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextAlignment:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setTickColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTickColor:");
}

id objc_msgSend_setTickLocationMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTickLocationMap:");
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeStyle:");
}

id objc_msgSend_setTimeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeZone:");
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTintColor:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setTopSeparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTopSeparator:");
}

id objc_msgSend_setTrackColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackColor:");
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setUnitsStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnitsStyle:");
}

id objc_msgSend_setUpBatteryGraphSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 setUpBatteryGraphSpecifiers];
}

id objc_msgSend_setUpBatteryHealthGroup(void *a1, const char *a2, ...)
{
  return _[a1 setUpBatteryHealthGroup];
}

id objc_msgSend_setUpBatteryHealthSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 setUpBatteryHealthSpecifier];
}

id objc_msgSend_setUpBatterySpecifersWithInsufficientData(void *a1, const char *a2, ...)
{
  return _[a1 setUpBatterySpecifersWithInsufficientData];
}

id objc_msgSend_setUpBatterySpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 setUpBatterySpecifiers];
}

id objc_msgSend_setUpBatteryUIDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpBatteryUIDictionary:");
}

id objc_msgSend_setUpBatteryUsageHeaderSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 setUpBatteryUsageHeaderSpecifier];
}

id objc_msgSend_setUpChargingOptionsSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 setUpChargingOptionsSpecifiers];
}

id objc_msgSend_setUpChargingSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 setUpChargingSpecifier];
}

id objc_msgSend_setUpChargingStatusSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 setUpChargingStatusSpecifier];
}

id objc_msgSend_setUpGraphGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 setUpGraphGroupSpecifier];
}

id objc_msgSend_setUpGraphLastChargeSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 setUpGraphLastChargeSpecifier];
}

id objc_msgSend_setUpInternalAppSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 setUpInternalAppSpecifiers];
}

id objc_msgSend_setUpInternalSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 setUpInternalSpecifiers];
}

id objc_msgSend_setUpModelingView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpModelingView:");
}

id objc_msgSend_setUpSpinnerSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 setUpSpinnerSpecifiers];
}

id objc_msgSend_setUpToggleForUsageTimeSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 setUpToggleForUsageTimeSpecifier];
}

id objc_msgSend_setUpUsageTimeValuesSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 setUpUsageTimeValuesSpecifier];
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInteractionEnabled:");
}

id objc_msgSend_setValue_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:animated:");
}

id objc_msgSend_setValue_forSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forSetting:");
}

id objc_msgSend_setValues_titles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValues:titles:");
}

id objc_msgSend_setValues_titles_shortTitles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValues:titles:shortTitles:");
}

id objc_msgSend_setWaitingForResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitingForResponse:");
}

id objc_msgSend_setWidthConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWidthConstraint:");
}

id objc_msgSend_sf_inRetailKioskMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sf_inRetailKioskMode");
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplication];
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnection];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedModule(void *a1, const char *a2, ...)
{
  return _[a1 sharedModule];
}

id objc_msgSend_shouldAutoCycle(void *a1, const char *a2, ...)
{
  return _[a1 shouldAutoCycle];
}

id objc_msgSend_shouldDisplayBugSignatures(void *a1, const char *a2, ...)
{
  return _[a1 shouldDisplayBugSignatures];
}

id objc_msgSend_shouldEstimateCellHeightFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldEstimateCellHeightFor:");
}

id objc_msgSend_shouldShowBatteryGraphs(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowBatteryGraphs];
}

id objc_msgSend_shouldShowChargingController(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowChargingController];
}

id objc_msgSend_shouldShowHighLight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowHighLight:");
}

id objc_msgSend_shouldShowModifiedHealthController(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowModifiedHealthController];
}

id objc_msgSend_shouldShowRCLCard(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowRCLCard];
}

id objc_msgSend_show(void *a1, const char *a2, ...)
{
  return _[a1 show];
}

id objc_msgSend_showAll(void *a1, const char *a2, ...)
{
  return _[a1 showAll];
}

id objc_msgSend_showLimitToFullAlert(void *a1, const char *a2, ...)
{
  return _[a1 showLimitToFullAlert];
}

id objc_msgSend_showOBCToOffAlert(void *a1, const char *a2, ...)
{
  return _[a1 showOBCToOffAlert];
}

id objc_msgSend_showPerfMitigationAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPerfMitigationAlert:");
}

id objc_msgSend_showRadarComposeAlert(void *a1, const char *a2, ...)
{
  return _[a1 showRadarComposeAlert];
}

id objc_msgSend_showRootNodesInInternal(void *a1, const char *a2, ...)
{
  return _[a1 showRootNodesInInternal];
}

id objc_msgSend_showSaveDemoButtonInInternal(void *a1, const char *a2, ...)
{
  return _[a1 showSaveDemoButtonInInternal];
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _[a1 size];
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFits:");
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _[a1 sizeToFit];
}

id objc_msgSend_sizeWithAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeWithAttributes:");
}

id objc_msgSend_sizeWithFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeWithFont:");
}

id objc_msgSend_sleepForTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sleepForTimeInterval:");
}

id objc_msgSend_slider(void *a1, const char *a2, ...)
{
  return _[a1 slider];
}

id objc_msgSend_sliderValueChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sliderValueChanged:");
}

id objc_msgSend_smallSystemFontSize(void *a1, const char *a2, ...)
{
  return _[a1 smallSystemFontSize];
}

id objc_msgSend_smartChargingClient(void *a1, const char *a2, ...)
{
  return _[a1 smartChargingClient];
}

id objc_msgSend_smartChargingGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 smartChargingGroupSpecifier];
}

id objc_msgSend_smartChargingState(void *a1, const char *a2, ...)
{
  return _[a1 smartChargingState];
}

id objc_msgSend_snapshotFromIOEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotFromIOEntry:");
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingComparator:");
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _[a1 source];
}

id objc_msgSend_specifier(void *a1, const char *a2, ...)
{
  return _[a1 specifier];
}

id objc_msgSend_specifierAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierAtIndex:");
}

id objc_msgSend_specifierForBatteryEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierForBatteryEntry:");
}

id objc_msgSend_specifierForID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierForID:");
}

id objc_msgSend_spinnerCanReloadUI(void *a1, const char *a2, ...)
{
  return _[a1 spinnerCanReloadUI];
}

id objc_msgSend_spinnerSpecifierGroup(void *a1, const char *a2, ...)
{
  return _[a1 spinnerSpecifierGroup];
}

id objc_msgSend_startAnimating(void *a1, const char *a2, ...)
{
  return _[a1 startAnimating];
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return _[a1 startDate];
}

id objc_msgSend_startOfDayForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startOfDayForDate:");
}

id objc_msgSend_startRepeatingTimer(void *a1, const char *a2, ...)
{
  return _[a1 startRepeatingTimer];
}

id objc_msgSend_startSpinner(void *a1, const char *a2, ...)
{
  return _[a1 startSpinner];
}

id objc_msgSend_startSpinnerInCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSpinnerInCell:");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stopAnimating(void *a1, const char *a2, ...)
{
  return _[a1 stopAnimating];
}

id objc_msgSend_stopRepeatingTimer(void *a1, const char *a2, ...)
{
  return _[a1 stopRepeatingTimer];
}

id objc_msgSend_stopSpinnerInCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSpinnerInCell:");
}

id objc_msgSend_stringByAddingPercentEncodingWithAllowedCharacters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAddingPercentEncodingWithAllowedCharacters:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringFromTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromTimeInterval:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stroke(void *a1, const char *a2, ...)
{
  return _[a1 stroke];
}

id objc_msgSend_subHeaderLabel(void *a1, const char *a2, ...)
{
  return _[a1 subHeaderLabel];
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _[a1 subviews];
}

id objc_msgSend_suggestionHeaderSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 suggestionHeaderSpecifier];
}

id objc_msgSend_suggestionTitle(void *a1, const char *a2, ...)
{
  return _[a1 suggestionTitle];
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _[a1 superview];
}

id objc_msgSend_supportsChargingFixedLimit(void *a1, const char *a2, ...)
{
  return _[a1 supportsChargingFixedLimit];
}

id objc_msgSend_supportsSlowCharging(void *a1, const char *a2, ...)
{
  return _[a1 supportsSlowCharging];
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBlueColor];
}

id objc_msgSend_systemCyanColor(void *a1, const char *a2, ...)
{
  return _[a1 systemCyanColor];
}

id objc_msgSend_systemFillColor(void *a1, const char *a2, ...)
{
  return _[a1 systemFillColor];
}

id objc_msgSend_systemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:");
}

id objc_msgSend_systemGray3Color(void *a1, const char *a2, ...)
{
  return _[a1 systemGray3Color];
}

id objc_msgSend_systemGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGrayColor];
}

id objc_msgSend_systemGreenColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGreenColor];
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:");
}

id objc_msgSend_systemOrangeColor(void *a1, const char *a2, ...)
{
  return _[a1 systemOrangeColor];
}

id objc_msgSend_table(void *a1, const char *a2, ...)
{
  return _[a1 table];
}

id objc_msgSend_tableCellBlueTextColor(void *a1, const char *a2, ...)
{
  return _[a1 tableCellBlueTextColor];
}

id objc_msgSend_tableCellHeightEstimated(void *a1, const char *a2, ...)
{
  return _[a1 tableCellHeightEstimated];
}

id objc_msgSend_tableCellHeights(void *a1, const char *a2, ...)
{
  return _[a1 tableCellHeights];
}

id objc_msgSend_temporarilyDisableCEC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "temporarilyDisableCEC:");
}

id objc_msgSend_temporarilyDisableMCLWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "temporarilyDisableMCLWithHandler:");
}

id objc_msgSend_temporarilyDisableSmartCharging_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "temporarilyDisableSmartCharging:");
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return _[a1 textColor];
}

id objc_msgSend_textFieldAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textFieldAtIndex:");
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _[a1 textLabel];
}

id objc_msgSend_tickColor(void *a1, const char *a2, ...)
{
  return _[a1 tickColor];
}

id objc_msgSend_tickLocationMap(void *a1, const char *a2, ...)
{
  return _[a1 tickLocationMap];
}

id objc_msgSend_tickWidth(void *a1, const char *a2, ...)
{
  return _[a1 tickWidth];
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSince1970];
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_timeStrLabel(void *a1, const char *a2, ...)
{
  return _[a1 timeStrLabel];
}

id objc_msgSend_timeZoneWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeZoneWithName:");
}

id objc_msgSend_timerFiredWithValue_forResolution_comparedToNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timerFiredWithValue:forResolution:comparedToNow:");
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _[a1 titleLabel];
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _[a1 topAnchor];
}

id objc_msgSend_topSeparator(void *a1, const char *a2, ...)
{
  return _[a1 topSeparator];
}

id objc_msgSend_trackColor(void *a1, const char *a2, ...)
{
  return _[a1 trackColor];
}

id objc_msgSend_trackRectForBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackRectForBounds:");
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 trailingAnchor];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _[a1 traitCollection];
}

id objc_msgSend_traitCollectionWithUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollectionWithUserInterfaceStyle:");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIdentifier];
}

id objc_msgSend_unknownHeaderSpeciifer(void *a1, const char *a2, ...)
{
  return _[a1 unknownHeaderSpeciifer];
}

id objc_msgSend_unknownString(void *a1, const char *a2, ...)
{
  return _[a1 unknownString];
}

id objc_msgSend_unsignedLongValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedLongValue];
}

id objc_msgSend_updateBatteryHealthServiceFlag(void *a1, const char *a2, ...)
{
  return _[a1 updateBatteryHealthServiceFlag];
}

id objc_msgSend_updateBatteryHealthServiceState(void *a1, const char *a2, ...)
{
  return _[a1 updateBatteryHealthServiceState];
}

id objc_msgSend_updateButton(void *a1, const char *a2, ...)
{
  return _[a1 updateButton];
}

id objc_msgSend_updateCleanEnergyChargingState(void *a1, const char *a2, ...)
{
  return _[a1 updateCleanEnergyChargingState];
}

id objc_msgSend_updateData(void *a1, const char *a2, ...)
{
  return _[a1 updateData];
}

id objc_msgSend_updateGenuineBatteryStatus(void *a1, const char *a2, ...)
{
  return _[a1 updateGenuineBatteryStatus];
}

id objc_msgSend_updateMaximumCapacity(void *a1, const char *a2, ...)
{
  return _[a1 updateMaximumCapacity];
}

id objc_msgSend_updatePerfManagementState(void *a1, const char *a2, ...)
{
  return _[a1 updatePerfManagementState];
}

id objc_msgSend_updateSmartChargingState(void *a1, const char *a2, ...)
{
  return _[a1 updateSmartChargingState];
}

id objc_msgSend_updateSuggestionsSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 updateSuggestionsSpecifiers];
}

id objc_msgSend_updatedConfigurationForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedConfigurationForState:");
}

id objc_msgSend_urlEncodedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlEncodedString:");
}

id objc_msgSend_userDidDisable(void *a1, const char *a2, ...)
{
  return _[a1 userDidDisable];
}

id objc_msgSend_userDidLeaveOn(void *a1, const char *a2, ...)
{
  return _[a1 userDidLeaveOn];
}

id objc_msgSend_userInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceLayoutDirection];
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceStyle];
}

id objc_msgSend_validateDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateDictionary:");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueAtTickNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueAtTickNumber:");
}

id objc_msgSend_valueCellConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 valueCellConfiguration];
}

id objc_msgSend_valueForDefaultKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForDefaultKey:");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueWithNonretainedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithNonretainedObject:");
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_waitingForResponse(void *a1, const char *a2, ...)
{
  return _[a1 waitingForResponse];
}

id objc_msgSend_webClipWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webClipWithIdentifier:");
}

id objc_msgSend_weekday(void *a1, const char *a2, ...)
{
  return _[a1 weekday];
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _[a1 whiteColor];
}

id objc_msgSend_widthConstraint(void *a1, const char *a2, ...)
{
  return _[a1 widthConstraint];
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}

id objc_msgSend_writeToFile_atomically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToFile:atomically:");
}