void sub_34B8(id a1)
{
  uint64_t vars8;

  qword_A4B68 = objc_alloc_init(StorageSettingsWrapper);

  _objc_release_x1();
}

id sub_3790(uint64_t a1)
{
  return _[*(id *)(a1 + 32) loadPlugins];
}

void sub_3E1C(uint64_t a1)
{
  v43 = +[NSMutableDictionary dictionaryWithCapacity:10];
  v1 = +[NSMutableDictionary dictionaryWithCapacity:4];
  v2 = +[NSMutableDictionary dictionaryWithCapacity:4];
  v3 = +[NSFileManager defaultManager];
  v39 = +[NSURL fileURLWithPath:@"/System/Library/PreferenceBundles/StoragePlugins/" isDirectory:1];
  v40 = v3;
  objc_msgSend(v3, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:");
  long long v58 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  id v4 = [obj countByEnumeratingWithState:&v58 objects:v68 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v59;
    v7 = &_s7SwiftUI17EnvironmentValuesV15foregroundColorAA0F0VSgvg_ptr_0;
    uint64_t v42 = *(void *)v59;
    do
    {
      uint64_t v8 = 0;
      id v44 = v5;
      do
      {
        if (*(void *)v59 != v6) {
          objc_enumerationMutation(obj);
        }
        uint64_t v48 = v8;
        v9 = *(void **)(*((void *)&v58 + 1) + 8 * v8);
        v10 = [v7[146] bundleWithURL:v9];
        v11 = [v10 bundleIdentifier];
        unsigned __int8 v12 = [v11 isEqualToString:@"com.apple.UsageStorageBundle"];

        v13 = v10;
        if ((v12 & 1) == 0)
        {
          id v57 = 0;
          unsigned __int8 v14 = [v10 loadAndReturnError:&v57];
          id v15 = v57;
          if (v14)
          {
            v16 = (objc_class *)[v13 principalClass];
            if (!v16)
            {
              if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
              {
                v18 = [v9 lastPathComponent];
                *(_DWORD *)buf = 138543362;
                v65 = v18;
                _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%{public}@: No plugin class found", buf, 0xCu);
                goto LABEL_41;
              }
              goto LABEL_42;
            }
            id v17 = objc_alloc_init(v16);
            v18 = v17;
            if (v17)
            {
              v19 = [v17 identifier];
              [v43 setObject:v18 forKey:v19];

              id v45 = v15;
              v46 = v13;
              if (objc_opt_respondsToSelector())
              {
                v20 = [v18 documentAppIdentifiers];
                long long v53 = 0u;
                long long v54 = 0u;
                long long v55 = 0u;
                long long v56 = 0u;
                id v21 = [v20 countByEnumeratingWithState:&v53 objects:v63 count:16];
                if (v21)
                {
                  id v22 = v21;
                  uint64_t v23 = *(void *)v54;
                  do
                  {
                    for (i = 0; i != v22; i = (char *)i + 1)
                    {
                      if (*(void *)v54 != v23) {
                        objc_enumerationMutation(v20);
                      }
                      uint64_t v25 = *(void *)(*((void *)&v53 + 1) + 8 * i);
                      v26 = [v1 objectForKey:v25];
                      v27 = v26;
                      if (v26)
                      {
                        [v26 addObject:v18];
                      }
                      else
                      {
                        v28 = +[NSMutableArray arrayWithObject:v18];
                        [v1 setObject:v28 forKey:v25];
                      }
                    }
                    id v22 = [v20 countByEnumeratingWithState:&v53 objects:v63 count:16];
                  }
                  while (v22);
                }

                uint64_t v6 = v42;
                id v5 = v44;
                id v15 = v45;
                v7 = &_s7SwiftUI17EnvironmentValuesV15foregroundColorAA0F0VSgvg_ptr_0;
                v13 = v46;
              }
              if (objc_opt_respondsToSelector())
              {
                v29 = [v18 externDataSizeAppIdentifiers];
                long long v49 = 0u;
                long long v50 = 0u;
                long long v51 = 0u;
                long long v52 = 0u;
                id v30 = [v29 countByEnumeratingWithState:&v49 objects:v62 count:16];
                if (v30)
                {
                  id v31 = v30;
                  uint64_t v32 = *(void *)v50;
                  do
                  {
                    for (j = 0; j != v31; j = (char *)j + 1)
                    {
                      if (*(void *)v50 != v32) {
                        objc_enumerationMutation(v29);
                      }
                      uint64_t v34 = *(void *)(*((void *)&v49 + 1) + 8 * (void)j);
                      v35 = [v2 objectForKey:v34];
                      v36 = v35;
                      if (v35)
                      {
                        [v35 addObject:v18];
                      }
                      else
                      {
                        v37 = +[NSMutableArray arrayWithObject:v18];
                        [v2 setObject:v37 forKey:v34];
                      }
                    }
                    id v31 = [v29 countByEnumeratingWithState:&v49 objects:v62 count:16];
                  }
                  while (v31);
                }

                uint64_t v6 = v42;
                id v5 = v44;
                id v15 = v45;
                v7 = &_s7SwiftUI17EnvironmentValuesV15foregroundColorAA0F0VSgvg_ptr_0;
                v13 = v46;
              }
LABEL_41:

LABEL_42:
              goto LABEL_43;
            }
            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO)) {
              goto LABEL_41;
            }
            v38 = [v9 lastPathComponent];
            *(_DWORD *)buf = 138543362;
            v65 = v38;
            _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "\x10\x10%{public}@: Could not load plugin object", buf, 0xCu);
          }
          else
          {
            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_42;
            }
            v18 = [v9 lastPathComponent];
            v38 = [v15 localizedDescription];
            *(_DWORD *)buf = 138543618;
            v65 = v18;
            __int16 v66 = 2114;
            v67 = v38;
            _os_log_error_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "%{public}@: %{public}@", buf, 0x16u);
          }

          goto LABEL_41;
        }
LABEL_43:

        uint64_t v8 = v48 + 1;
      }
      while ((id)(v48 + 1) != v5);
      id v5 = [obj countByEnumeratingWithState:&v58 objects:v68 count:16];
    }
    while (v5);
  }
  [*(id *)(a1 + 32) setPluginsByID:v43];
  [*(id *)(a1 + 32) setDocPluginsByID:v1];
  [*(id *)(a1 + 32) setExternDataPluginsByID:v2];
}

id sub_4434(uint64_t a1)
{
  return _[*(id *)(a1 + 32) reloadAllTips];
}

void sub_44F4(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) tips];
  if ([v2 count])
  {
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    unsigned __int8 v14 = v2;
    id v3 = v2;
    id v4 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v16;
      do
      {
        for (i = 0; i != v5; i = (char *)i + 1)
        {
          if (*(void *)v16 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = *(void **)(*((void *)&v15 + 1) + 8 * i);
          [v8 setUiDelegate:*(void *)(a1 + 40)];
          v9 = [*(id *)(a1 + 32) identifier];
          [v8 setProperty:v9 forKey:@"_stPluginID"];

          v10 = [v8 propertyForKey:@"_stTipID"];

          if (!v10)
          {
            v11 = [v8 title];
            [v8 setProperty:v11 forKey:@"_stTipID"];
          }
          unsigned __int8 v12 = [v8 propertyForKey:@"_stTipID"];
          v13 = [*(id *)(a1 + 40) tipsByID];
          [v13 setObject:v8 forKey:v12];
        }
        id v5 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v5);
    }

    v2 = v14;
  }
}

id sub_47C0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _reloadAllTips];
}

void sub_48B0(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) pluginsByID];
  id v3 = [v2 allValues];

  id v4 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", (char *)[v3 count] + 1);
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v12;
    do
    {
      v9 = 0;
      do
      {
        if (*(void *)v12 != v8) {
          objc_enumerationMutation(v5);
        }
        v10 = objc_msgSend(*(id *)(a1 + 32), "loadTipsOperation:", *(void *)(*((void *)&v11 + 1) + 8 * (void)v9), (void)v11);
        [v4 addObject:v10];

        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v7);
  }

  [*(id *)(*(void *)(a1 + 32) + 16) addOperations:v4 waitUntilFinished:1];
}

id sub_4A20(uint64_t a1)
{
  return _[*(id *)(a1 + 32) notifyTipsChanged];
}

id sub_4AE8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) notifyTipsChanged];
}

void sub_4FD4(uint64_t a1)
{
  v2 = *(void **)(a1 + 32);
  if (v2)
  {
    id v3 = [v2 delegate];
    [v3 enableOptionForTip:*(void *)(a1 + 32)];
  }
}

id sub_50F8(uint64_t a1)
{
  v2 = *(void **)(a1 + 40);
  id v3 = *(void **)(*(void *)(a1 + 32) + 64);
  id v4 = [v2 propertyForKey:@"_stTipID"];
  [v3 setObject:v2 forKeyedSubscript:v4];

  id v5 = *(void **)(a1 + 32);

  return _[v5 notifyTipsChanged];
}

id sub_647C(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) storageApp];
  [v2 refreshAppState];

  id v3 = *(void **)(a1 + 32);

  return [v3 syncUI];
}

id sub_681C(id result)
{
  uint64_t v1 = *((void *)result + 4);
  int v2 = *((_DWORD *)result + 10);
  if (*(_DWORD *)(v1 + 200) != v2)
  {
    *(_DWORD *)(v1 + 200) = v2;
    return _[*((id *)result + 4) reloadSpecifiers];
  }
  return result;
}

void sub_6A40(uint64_t a1)
{
  STLog();
  id v2 = objc_alloc_init((Class)IXUninstallOptions);
  [v2 setRequestUserConfirmation:1];
  [v2 setShowDemotionOption:0];
  [v2 setShowArchiveOption:0];
  [v2 setWaitForDeletion:0];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_6B38;
  v6[3] = &unk_96358;
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(id *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  id v7 = v4;
  uint64_t v8 = v5;
  +[IXAppInstallCoordinator uninstallAppWithIdentity:v3 options:v2 completion:v6];
}

void sub_6B38(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_759F8(a1, v5);
    }
  }
  else if (a2 == 1)
  {
    [*(id *)(a1 + 40) setUIState:0];
  }
  else
  {
    dispatch_time_t v6 = dispatch_time(0, 1000000000);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_6C34;
    block[3] = &unk_962A8;
    block[4] = *(void *)(a1 + 40);
    dispatch_after(v6, (dispatch_queue_t)&_dispatch_main_q, block);
  }
  *(unsigned char *)(*(void *)(a1 + 40) + 292) = 0;
}

void sub_6C34(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) parentViewController];
  uint64_t v1 = [v3 navigationController];
  id v2 = [v1 popViewControllerAnimated:1];
}

void sub_6EE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_759F8(a1, v3);
    }
  }
  else
  {
    id v4 = (id *)(a1 + 32);
    [*(id *)(a1 + 32) refreshAppState];
    if (([*(id *)(a1 + 32) isDemoted] & 1) == 0)
    {
      do
      {
        usleep(0x7A120u);
        [*v4 refreshAppState];
      }
      while (![*v4 isDemoted]);
    }
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG)) {
      sub_75B84((id *)(a1 + 32));
    }
  }
  *(unsigned char *)(*(void *)(a1 + 40) + 292) = 0;
}

void sub_7454(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    [*(id *)(a1 + 32) setUIState:*(unsigned int *)(a1 + 48)];
    [*(id *)(a1 + 32) showAlertForFailedInstallation];
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_75D24(v3);
    }
  }
  else
  {
    id v4 = (id *)(a1 + 40);
    [*(id *)(a1 + 40) refreshAppState];
    if ([*(id *)(a1 + 40) isDemoted])
    {
      do
      {
        usleep(0x7A120u);
        [*v4 refreshAppState];
      }
      while (([*v4 isDemoted] & 1) != 0);
    }
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG)) {
      sub_75C98((id *)(a1 + 40));
    }
  }
  [*(id *)(a1 + 32) syncUI];
  *(unsigned char *)(*(void *)(a1 + 32) + 292) = 0;
}

uint64_t sub_7530(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_75B8(uint64_t a1)
{
  id v2 = STLocalizedString(@"“%@” could not be reinstalled properly.");
  id v3 = [*(id *)(a1 + 32) storageApp];
  id v4 = [v3 name];
  +[NSString stringWithFormat:](NSString, "stringWithFormat:", v2, v4);
  id v9 = (id)objc_claimAutoreleasedReturnValue();

  id v5 = STLocalizedString(@"Installation failed");
  dispatch_time_t v6 = +[UIAlertController alertControllerWithTitle:v5 message:v9 preferredStyle:1];

  id v7 = STLocalizedString(@"OK");
  uint64_t v8 = +[UIAlertAction actionWithTitle:v7 style:1 handler:0];

  [v6 addAction:v8];
  [*(id *)(a1 + 32) presentViewController:v6 animated:1 completion:0];
}

uint64_t sub_7E60(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 consumedDate];

  uint64_t v5 = 32;
  if (!v4) {
    uint64_t v5 = 40;
  }
  [*(id *)(a1 + v5) addObject:v3];

  return 1;
}

int64_t sub_7EC4(id a1, CacheManagementAsset *a2, CacheManagementAsset *a3)
{
  id v4 = a2;
  uint64_t v5 = a3;
  uint64_t v6 = [(CacheManagementAsset *)v4 lastViewedDate];
  if (v6)
  {
    id v7 = (void *)v6;
    uint64_t v8 = [(CacheManagementAsset *)v5 lastViewedDate];

    if (!v8) {
      goto LABEL_6;
    }
  }
  uint64_t v9 = [(CacheManagementAsset *)v5 lastViewedDate];
  if (v9)
  {
    v10 = (void *)v9;
    long long v11 = [(CacheManagementAsset *)v4 lastViewedDate];

    if (!v11)
    {
LABEL_8:
      int64_t v13 = 1;
      goto LABEL_10;
    }
  }
  id v12 = [(CacheManagementAsset *)v4 size];
  if ((uint64_t)v12 <= (uint64_t)[(CacheManagementAsset *)v5 size])
  {
    id v14 = [(CacheManagementAsset *)v4 size];
    if ((uint64_t)v14 >= (uint64_t)[(CacheManagementAsset *)v5 size])
    {
      long long v15 = [(CacheManagementAsset *)v4 displayName];
      long long v16 = [(CacheManagementAsset *)v5 displayName];
      int64_t v13 = (int64_t)[v15 localizedCaseInsensitiveCompare:v16];

      goto LABEL_10;
    }
    goto LABEL_8;
  }
LABEL_6:
  int64_t v13 = -1;
LABEL_10:

  return v13;
}

int64_t sub_7FF0(id a1, CacheManagementAsset *a2, CacheManagementAsset *a3)
{
  id v4 = a2;
  uint64_t v5 = a3;
  id v6 = [(CacheManagementAsset *)v4 size];
  if ((uint64_t)v6 <= (uint64_t)[(CacheManagementAsset *)v5 size])
  {
    id v8 = [(CacheManagementAsset *)v4 size];
    if ((uint64_t)v8 >= (uint64_t)[(CacheManagementAsset *)v5 size])
    {
      uint64_t v9 = [(CacheManagementAsset *)v4 displayName];
      v10 = [(CacheManagementAsset *)v5 displayName];
      int64_t v7 = (int64_t)[v9 localizedCaseInsensitiveCompare:v10];
    }
    else
    {
      int64_t v7 = 1;
    }
  }
  else
  {
    int64_t v7 = -1;
  }

  return v7;
}

void sub_814C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) hlsSpecifiers];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 300);
  *(void *)(v3 + 300) = v2;

  dispatch_time_t v5 = dispatch_time(0, 10000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_8204;
  block[3] = &unk_962A8;
  block[4] = *(void *)(a1 + 32);
  dispatch_after(v5, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_8204(uint64_t a1)
{
  return _[*(id *)(a1 + 32) reloadSpecifiers];
}

void sub_84C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_84E0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_84F0(uint64_t a1)
{
}

intptr_t sub_84F8(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 UIImage];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  dispatch_time_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = *(NSObject **)(a1 + 32);

  return dispatch_semaphore_signal(v6);
}

void sub_8640(uint64_t a1)
{
  STStorageDeviceKey();
  id v56 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v2 = STLocalizedString(@"This will reinstall the app and place back all the app data and documents that are still present on this device.");
  uint64_t v3 = STLocalizedString(@"This will reinstall the Health app and allow you to view and manage all of the Health data and documents on this device.");
  uint64_t v4 = STLocalizedString(@"This will delete all remaining data and documents for this app from this device. This action can’t be undone.");
  dispatch_time_t v5 = STLocalizedString(@"This will delete the app clip and all related data from this device. This action can’t be undone.");
  id v6 = STLocalizedString(@"This will delete all remaining data and documents for this app from this device. This action can’t be undone.");
  if ([v56 isEqualToString:@"PHONE"])
  {
    long long v53 = v6;
    int64_t v7 = v5;
    id v8 = v4;
    uint64_t v9 = (void *)v3;
    v10 = @"This will delete all remaining data and documents for this app from this iPhone. This action can’t be undone.";
    long long v11 = @"This will delete the app clip and all related data from this iPhone. This action can’t be undone.";
    id v12 = @"This will delete the app and all related data from this iPhone. This action can’t be undone.";
    int64_t v13 = @"This will reinstall the Health app and allow you to view and manage all of the Health data and documents on this iPhone.";
    id v14 = @"This will reinstall the app and place back all the app data and documents that are still present on this iPhone.";
LABEL_7:
    uint64_t v15 = STLocalizedString(v14);

    uint64_t v16 = STLocalizedString(v13);

    uint64_t v4 = STLocalizedString(v12);

    dispatch_time_t v5 = STLocalizedString(v11);

    id v6 = STLocalizedString(v10);

    uint64_t v54 = v16;
    uint64_t v2 = (void *)v15;
    objc_msgSend(*(id *)(a1 + 32), "spinnerSpecifier", v54);
    goto LABEL_8;
  }
  if ([v56 isEqualToString:@"PAD"])
  {
    long long v53 = v6;
    int64_t v7 = v5;
    id v8 = v4;
    uint64_t v9 = (void *)v3;
    v10 = @"This will delete all remaining data and documents for this app from this iPad. This action can’t be undone.";
    long long v11 = @"This will delete the app clip and all related data from this iPad. This action can’t be undone.";
    id v12 = @"This will delete the app and all related data from this iPad. This action can’t be undone.";
    int64_t v13 = @"This will reinstall the Health app and allow you to view and manage all of the Health data and documents on this iPad.";
    id v14 = @"This will reinstall the app and place back all the app data and documents that are still present on this iPad.";
    goto LABEL_7;
  }
  if ([v56 isEqualToString:@"IPOD"])
  {
    long long v53 = v6;
    int64_t v7 = v5;
    id v8 = v4;
    uint64_t v9 = (void *)v3;
    v10 = @"This will delete all remaining data and documents for this app from this iPod touch. This action can’t be undone.";
    long long v11 = @"This will delete the app clip and all related data from this iPod touch. This action can’t be undone.";
    id v12 = @"This will delete the app and all related data from this iPod touch. This action can’t be undone.";
    int64_t v13 = @"This will reinstall the Health app and allow you to view and manage all of the Health data and documents on this device.";
    id v14 = @"This will reinstall the app and place back all the app data and documents that are still present on this iPod touch.";
    goto LABEL_7;
  }
  objc_msgSend(*(id *)(a1 + 32), "spinnerSpecifier", v3);
  uint64_t v17 = LABEL_8:;
  long long v18 = (void *)qword_A4B78;
  qword_A4B78 = v17;

  v19 = STLocalizedString(@"Offload App");
  uint64_t v20 = +[PSSpecifier deleteButtonSpecifierWithName:v19 target:*(void *)(a1 + 32) action:"confirmDemoteApp"];
  id v21 = (void *)qword_A4B80;
  qword_A4B80 = v20;

  id v22 = STLocalizedString(@"Reinstall App");
  uint64_t v23 = +[PSSpecifier deleteButtonSpecifierWithName:v22 target:*(void *)(a1 + 32) action:"reinstallApp"];
  v24 = (void *)qword_A4B88;
  qword_A4B88 = v23;

  uint64_t v25 = STLocalizedString(@"Reinstall Health App");
  uint64_t v26 = +[PSSpecifier deleteButtonSpecifierWithName:v25 target:*(void *)(a1 + 32) action:"reinstallApp"];
  v27 = (void *)qword_A4B90;
  qword_A4B90 = v26;

  v28 = STLocalizedString(@"Delete App");
  uint64_t v29 = +[PSSpecifier deleteButtonSpecifierWithName:v28 target:*(void *)(a1 + 32) action:"deleteApp"];
  id v30 = (void *)qword_A4B98;
  qword_A4B98 = v29;

  id v31 = STLocalizedString(@"Delete Data");
  uint64_t v32 = +[PSSpecifier deleteButtonSpecifierWithName:v31 target:*(void *)(a1 + 32) action:"deleteApp"];
  v33 = (void *)qword_A4BA0;
  qword_A4BA0 = v32;

  uint64_t v34 = STLocalizedString(@"Delete App Clip");
  uint64_t v35 = +[PSSpecifier deleteButtonSpecifierWithName:v34 target:*(void *)(a1 + 32) action:"deleteApp"];
  v36 = (void *)qword_A4BA8;
  qword_A4BA8 = v35;

  uint64_t v37 = +[PSSpecifier emptyGroupSpecifier];
  v38 = (void *)qword_A4BB0;
  qword_A4BB0 = v37;

  v39 = (void *)qword_A4BB0;
  v40 = STLocalizedString(@"This will free up storage used by the app, but keep its documents and data. Reinstalling the app will place back your data if the app is still available for download.");
  uint64_t v41 = PSFooterTextGroupKey;
  [v39 setProperty:v40 forKey:PSFooterTextGroupKey];

  uint64_t v42 = +[PSSpecifier emptyGroupSpecifier];
  v43 = (void *)qword_A4BB8;
  qword_A4BB8 = v42;

  [(id)qword_A4BB8 setProperty:v2 forKey:v41];
  uint64_t v44 = +[PSSpecifier emptyGroupSpecifier];
  id v45 = (void *)qword_A4BC0;
  qword_A4BC0 = v44;

  [(id)qword_A4BC0 setProperty:v55 forKey:v41];
  uint64_t v46 = +[PSSpecifier emptyGroupSpecifier];
  v47 = (void *)qword_A4BC8;
  qword_A4BC8 = v46;

  [(id)qword_A4BC8 setProperty:v4 forKey:v41];
  uint64_t v48 = +[PSSpecifier emptyGroupSpecifier];
  long long v49 = (void *)qword_A4BD0;
  qword_A4BD0 = v48;

  [(id)qword_A4BD0 setProperty:v5 forKey:v41];
  uint64_t v50 = +[PSSpecifier emptyGroupSpecifier];
  long long v51 = (void *)qword_A4BD8;
  qword_A4BD8 = v50;

  [(id)qword_A4BD8 setProperty:v6 forKey:v41];
  long long v52 = +[UIColor systemBlueColor];
  [(id)qword_A4B88 setProperty:v52 forKey:@"buttonColor"];
  [(id)qword_A4B90 setProperty:v52 forKey:@"buttonColor"];
  [(id)qword_A4B80 setProperty:v52 forKey:@"buttonColor"];
}

void sub_8D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_8DA8(uint64_t a1, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_A6A4(uint64_t a1)
{
  +[NSObject cancelPreviousPerformRequestsWithTarget:*(void *)(a1 + 32) selector:"_syncUI:" object:0];
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 performSelector:"_syncUI:" withObject:0];
}

id sub_A810(uint64_t a1)
{
  return _[*(id *)(a1 + 32) reloadSpecifiers];
}

void sub_AB28(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_75DB8(v3);
    }
  }
  else
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_ABDC;
    v4[3] = &unk_962D0;
    long long v5 = *(_OWORD *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
  }
}

id sub_ABDC(uint64_t a1)
{
  [*(id *)(a1 + 32) removeSpecifier:*(void *)(a1 + 40) animated:1];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 updateHLSSpecs];
}

void sub_AE00(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v7 = 0;
  [v2 removeItemAtURL:v3 error:&v7];
  id v4 = v7;
  if (v4)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_75E4C(v4);
    }
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_AECC;
    block[3] = &unk_962D0;
    long long v6 = *(_OWORD *)(a1 + 48);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

id sub_AECC(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeSpecifier:*(void *)(a1 + 40) animated:1];
}

void sub_B110(uint64_t a1)
{
  uint64_t v2 = +[MPMediaLibrary defaultMediaLibrary];
  unsigned int v3 = [v2 removeItems:*(void *)(a1 + 32)];

  if (v3)
  {
    id v7 = _NSConcreteStackBlock;
    uint64_t v8 = 3221225472;
    uint64_t v9 = sub_B1F0;
    v10 = &unk_962D0;
    id v4 = *(id *)(a1 + 40);
    uint64_t v5 = *(void *)(a1 + 48);
    id v11 = v4;
    uint64_t v12 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, &v7);
    long long v6 = +[STMediaCache sharedCache];
    [v6 reload];
  }
}

void sub_B1F0(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      long long v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(a1 + 40), "removeSpecifier:animated:", *(void *)(*((void *)&v7 + 1) + 8 * (void)v6), 1, (void)v7);
        long long v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

id sub_BA78(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeSpecifier:*(void *)(a1 + 40) animated:1];
}

void sub_BDF8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_BE50(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x12u);
}

uint64_t sub_BE78()
{
  return v0;
}

id _UIApplicationIconImageForBundleIdentifier(uint64_t a1, uint64_t a2)
{
  return +[UIImage _applicationIconImageForBundleIdentifier:format:scale:](UIImage, "_applicationIconImageForBundleIdentifier:format:scale:", a1, a2);
}

id usageBundleForAppIdentifier(void *a1)
{
  id v1 = a1;
  id v2 = +[StorageSettingsWrapper recommendationsShared];
  id v3 = [v2 usageBundleForIdentifier:v1];

  return v3;
}

id STLocalizedString(void *a1)
{
  uint64_t v1 = qword_A4BE8;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&qword_A4BE8, &stru_96540);
  }
  id v3 = [(id)qword_A4BE0 localizedStringForKey:v2 value:v2 table:0];

  return v3;
}

void sub_D0CC(id a1)
{
  qword_A4BE0 = +[NSBundle bundleForClass:objc_opt_class()];

  _objc_release_x1();
}

id STShouldDisplayUnfoundApps()
{
  uint64_t v0 = (void *)CFPreferencesCopyValue(@"displayUnfoundApps", @"com.apple.settings.storage", kCFPreferencesCurrentUser, kCFPreferencesCurrentHost);
  id v1 = [v0 BOOLValue];

  return v1;
}

id localizedDeviceName()
{
  uint64_t v0 = (void *)MGGetStringAnswer();

  return v0;
}

id sub_D320(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a2;
  long long v7 = [v5 objectForKey:a3];
  long long v8 = [*(id *)(a1 + 32) objectForKey:v6];

  id v9 = [v7 compare:v8];
  return v9;
}

int64_t sub_D3A0(id a1, id a2, id a3)
{
  return (int64_t)[a3 compare:a2];
}

int64_t sub_D3AC(id a1, id a2, id a3)
{
  uint64_t v4 = MPMediaItemPropertyFileSize;
  id v5 = a2;
  uint64_t v6 = [a3 valueForProperty:v4];
  long long v7 = (void *)v6;
  if (v6) {
    long long v8 = (_UNKNOWN **)v6;
  }
  else {
    long long v8 = &off_9A5A0;
  }
  id v9 = v8;

  long long v10 = [v5 valueForProperty:v4];

  if (v10) {
    id v11 = v10;
  }
  else {
    id v11 = &off_9A5A0;
  }
  uint64_t v12 = v11;

  id v13 = [v9 compare:v12];
  return (int64_t)v13;
}

void sub_D5E4(id a1)
{
  qword_A4BF0 = objc_alloc_init(STMediaCache);

  _objc_release_x1();
}

void sub_D69C(id a1)
{
  v11[0] = comAppleiTunesU;
  v10[0] = UsageMediaAudioCourses;
  v10[1] = UsageMediaVideoCourses;
  id v1 = +[NSArray arrayWithObjects:v10 count:2];
  v12[0] = v1;
  v11[1] = comApplePodcasts;
  v9[0] = UsageMediaAudioPodcasts;
  v9[1] = UsageMediaVideoPodcasts;
  id v2 = +[NSArray arrayWithObjects:v9 count:2];
  v12[1] = v2;
  v11[2] = comAppleBooks;
  uint64_t v8 = UsageMediaAudioBooks;
  id v3 = +[NSArray arrayWithObjects:&v8 count:1];
  v12[2] = v3;
  v11[3] = comAppleTV;
  uint64_t v7 = UsageMediaTVShows;
  uint64_t v4 = +[NSArray arrayWithObjects:&v7 count:1];
  v12[3] = v4;
  uint64_t v5 = +[NSDictionary dictionaryWithObjects:v12 forKeys:v11 count:4];
  uint64_t v6 = (void *)qword_A4C00;
  qword_A4C00 = v5;
}

uint64_t sub_E908(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a3;
  uint64_t v7 = [v5 mediaCollectionForKey:a2];
  uint64_t v8 = [*(id *)(a1 + 32) mediaCollectionForKey:v6];

  if (v7) {
    BOOL v9 = v8 == 0;
  }
  else {
    BOOL v9 = 1;
  }
  if (v9)
  {
    if (v7) {
      uint64_t v11 = -1;
    }
    else {
      uint64_t v11 = v8 != 0;
    }
  }
  else
  {
    id v10 = [v7 totalSize];
    uint64_t v11 = (uint64_t)v10 < (uint64_t)[v8 totalSize];
  }

  return v11;
}

void sub_F148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_F174(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_F254;
  block[3] = &unk_96640;
  id v9 = a3;
  id v6 = v9;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v10 = v5;
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v11);
}

void sub_F254(uint64_t a1)
{
  if (*(void *)(a1 + 32)
    || ([*(id *)(a1 + 40) UIImage],
        id v3 = objc_claimAutoreleasedReturnValue(),
        v3,
        !v3))
  {
    uint64_t v2 = PSBlankIconImage();
  }
  else
  {
    uint64_t v2 = [*(id *)(a1 + 40) UIImage];
  }
  id v5 = (id)v2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained setIcon:v5];
}

uint64_t sub_FAC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 identifier];
  if (![v4 length])
  {
LABEL_7:
    [*(id *)(a1 + 40) addObject:v3];
    goto LABEL_8;
  }
  if (([v4 isEqualToString:@"com.apple.news"] & 1) == 0)
  {
    id v5 = [*(id *)(a1 + 32) objectForKey:v4];
    id v6 = v5;
    if (v5)
    {
      [v5 addObject:v3];
    }
    else
    {
      id v7 = *(void **)(a1 + 32);
      uint64_t v8 = +[NSMutableArray arrayWithObject:v3];
      [v7 setValue:v8 forKey:v4];
    }
    goto LABEL_7;
  }
LABEL_8:

  return 1;
}

int64_t sub_FB9C(id a1, LSApplicationRecord *a2, LSApplicationRecord *a3)
{
  uint64_t v4 = a3;
  id v5 = [(LSApplicationRecord *)a2 localizedName];
  id v6 = [(LSApplicationRecord *)v4 localizedName];

  id v7 = [v5 localizedCaseInsensitiveCompare:v6];
  return (int64_t)v7;
}

int64_t sub_FC0C(id a1, CacheManagementAsset *a2, CacheManagementAsset *a3)
{
  uint64_t v4 = a2;
  id v5 = a3;
  id v7 = [(CacheManagementAsset *)v4 consumedDate];
  uint64_t v8 = [(CacheManagementAsset *)v5 consumedDate];
  id v9 = (void *)v8;
  if (!v7 || v8)
  {
    if (!v8 || v7)
    {
      uint64_t v11 = [(CacheManagementAsset *)v4 lastViewedDate];

      uint64_t v12 = [(CacheManagementAsset *)v5 lastViewedDate];

      if (!v11 || v12)
      {
        if (!v12 || v11)
        {
          id v13 = [(CacheManagementAsset *)v4 size];
          id v14 = [(CacheManagementAsset *)v5 size];
          if ((uint64_t)v13 <= (uint64_t)v14)
          {
            if ((uint64_t)v13 < (uint64_t)v14)
            {
              int64_t v10 = 1;
            }
            else
            {
              uint64_t v15 = [(CacheManagementAsset *)v4 displayName];
              uint64_t v16 = [(CacheManagementAsset *)v5 displayName];
              int64_t v10 = (int64_t)[v15 localizedCaseInsensitiveCompare:v16];
            }
          }
          else
          {
            int64_t v10 = -1;
          }
          id v7 = (void *)v11;
        }
        else
        {
          id v7 = 0;
          int64_t v10 = 1;
        }
        id v9 = (void *)v12;
      }
      else
      {
        id v9 = 0;
        int64_t v10 = -1;
        id v7 = (void *)v11;
      }
    }
    else
    {
      int64_t v10 = 1;
    }
  }
  else
  {
    int64_t v10 = -1;
  }

  return v10;
}

int64_t sub_FD7C(id a1, CacheManagementAsset *a2, CacheManagementAsset *a3)
{
  uint64_t v4 = a2;
  id v5 = a3;
  id v7 = [(CacheManagementAsset *)v4 consumedDate];
  uint64_t v8 = [(CacheManagementAsset *)v5 consumedDate];
  id v9 = (void *)v8;
  if (!v7 || v8)
  {
    if (!v8 || v7)
    {
      uint64_t v11 = [(CacheManagementAsset *)v4 lastViewedDate];

      uint64_t v12 = [(CacheManagementAsset *)v5 lastViewedDate];

      if (!v11 || v12)
      {
        if (!v12 || v11)
        {
          id v13 = [(CacheManagementAsset *)v4 size];
          id v14 = [(CacheManagementAsset *)v5 size];
          if ((uint64_t)v13 <= (uint64_t)v14)
          {
            if ((uint64_t)v13 < (uint64_t)v14)
            {
              int64_t v10 = 1;
            }
            else
            {
              uint64_t v15 = [(CacheManagementAsset *)v4 displayName];
              uint64_t v16 = [(CacheManagementAsset *)v5 displayName];
              int64_t v10 = (int64_t)[v15 localizedCaseInsensitiveCompare:v16];
            }
          }
          else
          {
            int64_t v10 = -1;
          }
          id v7 = (void *)v11;
        }
        else
        {
          id v7 = 0;
          int64_t v10 = 1;
        }
        id v9 = (void *)v12;
      }
      else
      {
        id v9 = 0;
        int64_t v10 = -1;
        id v7 = (void *)v11;
      }
    }
    else
    {
      int64_t v10 = 1;
    }
  }
  else
  {
    int64_t v10 = -1;
  }

  return v10;
}

void sub_FFAC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) hlsSpecifiers];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 192);
  *(void *)(v3 + 192) = v2;

  dispatch_time_t v5 = dispatch_time(0, 10000000);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1006C;
  v6[3] = &unk_96710;
  char v7 = *(unsigned char *)(a1 + 40);
  void v6[4] = *(void *)(a1 + 32);
  dispatch_after(v5, (dispatch_queue_t)&_dispatch_main_q, v6);
}

id sub_1006C(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v2 = *(void **)(a1 + 32);
  if (v1) {
    return _[v2 setSpecifiers:v2[24]];
  }
  else {
    return _objc_msgSend(v2, "updateSpecifiers:withSpecifiers:", *(void *)((char *)v2 + OBJC_IVAR___PSListController__specifiers));
  }
}

void sub_10310(uint64_t a1)
{
  int v1 = [*(id *)(a1 + 32) propertyForKey:@"stCacheAsset"];
  if (v1) {
    CacheManagementRemove();
  }
}

void sub_103B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (v3)
  {
    id v5 = [v3 code];
    id v6 = [v4 description];
    NSLog(@"Error %d removing video asset: %@", v5, v6);
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10488;
    block[3] = &unk_962D0;
    long long v8 = *(_OWORD *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

id sub_10488(uint64_t a1)
{
  [*(id *)(a1 + 32) removeSpecifier:*(void *)(a1 + 40) animated:1];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 updateHLSSpecs];
}

void sub_10B00(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) thumbnailData];
  if (v2
    && (+[UIImage imageWithData:v2],
        (uint64_t v3 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    uint64_t v4 = (void *)v3;
    id v5 = 0;
  }
  else
  {
    uint64_t v4 = +[UIImage systemImageNamed:@"film"];
    id v5 = +[UIColor systemGray3Color];
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10C20;
  block[3] = &unk_96520;
  void block[4] = *(void *)(a1 + 40);
  id v9 = v5;
  id v10 = v4;
  id v6 = v4;
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10C20(uint64_t a1)
{
  [*(id *)(a1 + 32) setTintColor:*(void *)(a1 + 40)];
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void **)(a1 + 32);

  return [v3 setIcon:v2];
}

void sub_10C60(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) size];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10CEC;
  v3[3] = &unk_96740;
  v3[4] = *(void *)(a1 + 40);
  v3[5] = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

id sub_10CEC(uint64_t a1)
{
  return [*(id *)(a1 + 32) setSize:*(void *)(a1 + 40)];
}

void sub_11494(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) artwork];
  uint64_t v3 = v2;
  if (v2 && (objc_msgSend(v2, "imageWithSize:", 56.0, 56.0), (uint64_t v4 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    id v5 = 0;
  }
  else
  {
    unsigned __int16 v6 = (unsigned __int16)[*(id *)(a1 + 32) mediaType];
    CFStringRef v7 = @"book";
    if ((v6 & 4) == 0) {
      CFStringRef v7 = @"music";
    }
    CFStringRef v8 = @"podcasts";
    if ((v6 & 0xA) != 0) {
      CFStringRef v7 = @"podcasts";
    }
    if (!(_BYTE)v6) {
      CFStringRef v7 = 0;
    }
    if ((v6 & 0x1400) == 0) {
      CFStringRef v8 = @"film";
    }
    if ((v6 & 0xFF00) != 0) {
      CFStringRef v9 = v8;
    }
    else {
      CFStringRef v9 = v7;
    }
    id v5 = +[UIColor systemGray3Color];
    uint64_t v4 = +[UIImage _systemImageNamed:v9];
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_11608;
  block[3] = &unk_96520;
  void block[4] = *(void *)(a1 + 40);
  id v13 = v5;
  id v14 = v4;
  id v10 = v4;
  id v11 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_11608(uint64_t a1)
{
  [*(id *)(a1 + 32) setTintColor:*(void *)(a1 + 40)];
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void **)(a1 + 32);

  return [v3 setIcon:v2];
}

void sub_11648(id a1)
{
  qword_A4C10 = STLocalizedString(@"Last accessed: %@");

  _objc_release_x1();
}

void sub_11F78(id a1)
{
  int v1 = NSStringFromSelector("documentSize");
  uint64_t v2 = +[NSSortDescriptor sortDescriptorWithKey:v1 ascending:0];
  uint64_t v3 = NSStringFromSelector("displayName");
  uint64_t v4 = +[NSSortDescriptor sortDescriptorWithKey:ascending:selector:](NSSortDescriptor, "sortDescriptorWithKey:ascending:selector:", v3, 1, "localizedCaseInsensitiveCompare:", v2);
  v9[1] = v4;
  id v5 = NSStringFromSelector("itemIdentifier");
  unsigned __int16 v6 = +[NSSortDescriptor sortDescriptorWithKey:v5 ascending:1];
  void v9[2] = v6;
  uint64_t v7 = +[NSArray arrayWithObjects:v9 count:3];
  CFStringRef v8 = (void *)qword_A4C28;
  qword_A4C28 = v7;
}

id sub_12510(uint64_t a1)
{
  +[NSObject cancelPreviousPerformRequestsWithTarget:*(void *)(a1 + 32) selector:"reloadSpecifiers" object:0];
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 performSelector:"reloadSpecifiers" withObject:0 afterDelay:1.0];
}

void sub_12E60(uint64_t a1)
{
  id v3 = +[FPItemManager defaultManager];
  id v2 = [objc_alloc((Class)FPDeleteOperation) initWithItems:*(void *)(a1 + 32)];
  [v3 scheduleAction:v2];
}

void type metadata accessor for FPProviderDomainID(uint64_t a1)
{
}

uint64_t sub_1378C()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = sub_14F50(&qword_A2D78);
  __chkstk_darwin(v2);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_14F50(&qword_A2D80);
  __chkstk_darwin(v5);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*v0)
  {
    CFStringRef v8 = (unsigned __int8 *)*v0;
    uint64_t v9 = *(void *)(sub_28814() + 16);
    swift_bridgeObjectRelease();
    if (v9)
    {
      int v10 = v8[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_recommendationsDidUpdateOnce];

      if (v10 == 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        id v11 = v8;
        sub_76240();

        swift_release();
        swift_release();
        uint64_t v12 = v16;
        swift_bridgeObjectRelease();
        if (!v12)
        {
          *(void *)uint64_t v7 = sub_764E0();
          *((void *)v7 + 1) = 0;
          v7[16] = 1;
          uint64_t v13 = sub_14F50(&qword_A2D98);
          sub_13A74(v1, &v7[*(int *)(v13 + 44)]);
          sub_15144((uint64_t)v7, (uint64_t)v4, &qword_A2D80);
          swift_storeEnumTagMultiPayload();
          sub_1508C(&qword_A2D90, &qword_A2D80);
          sub_76570();
          return sub_151A8((uint64_t)v7, &qword_A2D80);
        }
      }
    }
    else
    {
    }
    swift_storeEnumTagMultiPayload();
    sub_1508C(&qword_A2D90, &qword_A2D80);
    return sub_76570();
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_14BE4((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
    uint64_t result = sub_76380();
    __break(1u);
  }
  return result;
}

uint64_t sub_13A74@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v35 = a2;
  uint64_t v2 = sub_76360();
  uint64_t v34 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_14F50(&qword_A2DA0);
  uint64_t v31 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_14F50(&qword_A2DA8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  uint64_t v33 = v9;
  __chkstk_darwin(v8);
  id v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_14F50(&qword_A2DB0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v30 - v16;
  NSString v18 = sub_76BE0();
  NSString v19 = sub_76BE0();
  id v20 = STLocalizedString(v18);

  uint64_t v21 = sub_76C10();
  uint64_t v23 = v22;

  uint64_t v42 = v21;
  uint64_t v43 = v23;
  long long v40 = *(_OWORD *)(v30 + 16);
  char v41 = *(unsigned char *)(v30 + 32);
  sub_14F50(&qword_A2DB8);
  sub_76950();
  sub_14F50(&qword_A2DC0);
  sub_14FE4();
  sub_1508C(&qword_A2DD0, &qword_A2DC0);
  sub_15038();
  sub_76920();
  sub_76350();
  uint64_t v24 = sub_1508C(&qword_A2DE0, &qword_A2DA0);
  sub_76740();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v5);
  uint64_t v36 = v5;
  uint64_t v37 = v2;
  uint64_t v38 = v24;
  v39 = &protocol witness table for MenuPickerStyle;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = v32;
  sub_767B0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v25);
  sub_150E0((uint64_t)v15, (uint64_t)v17, &qword_A2DB0);
  sub_15144((uint64_t)v17, (uint64_t)v15, &qword_A2DB0);
  uint64_t v26 = v35;
  void *v35 = 0;
  *((unsigned char *)v26 + 8) = 1;
  v27 = v26;
  uint64_t v28 = sub_14F50(&qword_A2DE8);
  sub_15144((uint64_t)v15, (uint64_t)v27 + *(int *)(v28 + 48), &qword_A2DB0);
  sub_151A8((uint64_t)v17, &qword_A2DB0);
  return sub_151A8((uint64_t)v15, &qword_A2DB0);
}

uint64_t sub_13F54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v70 = a1;
  uint64_t v71 = sub_14F50(&qword_A2DF0) - 8;
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v2 = (char *)&v62 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_14F50(&qword_A2DF8);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_14F50(&qword_A2E00) - 8;
  uint64_t v5 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v69 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v68 = (uint64_t)&v62 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v67 = (uint64_t)&v62 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v66 = (uint64_t)&v62 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v62 - v14;
  __chkstk_darwin(v13);
  uint64_t v73 = (uint64_t)&v62 - v16;
  NSString v17 = sub_76BE0();
  unint64_t v65 = 0xD000000000000022;
  NSString v18 = sub_76BE0();
  id v19 = STLocalizedString(v17);

  uint64_t v20 = sub_76C10();
  uint64_t v22 = v21;

  uint64_t v74 = v20;
  uint64_t v75 = v22;
  unint64_t v64 = sub_15038();
  uint64_t v23 = sub_766D0();
  uint64_t v25 = v24;
  uint64_t v74 = v23;
  uint64_t v75 = v24;
  char v27 = v26 & 1;
  char v76 = v26 & 1;
  uint64_t v77 = v28;
  sub_767B0();
  sub_150D0(v23, v25, v27);
  swift_bridgeObjectRelease();
  sub_15144((uint64_t)v4, (uint64_t)v2, &qword_A2DF8);
  uint64_t v29 = v71;
  v2[*(int *)(v71 + 44)] = 0;
  sub_15144((uint64_t)v2, (uint64_t)v15, &qword_A2DF0);
  v15[*(int *)(v72 + 44)] = 0;
  v63 = v15;
  sub_151A8((uint64_t)v2, &qword_A2DF0);
  sub_151A8((uint64_t)v4, &qword_A2DF8);
  sub_150E0((uint64_t)v15, v73, &qword_A2E00);
  NSString v30 = sub_76BE0();
  NSString v31 = sub_76BE0();
  id v32 = STLocalizedString(v30);

  uint64_t v33 = sub_76C10();
  uint64_t v35 = v34;

  uint64_t v74 = v33;
  uint64_t v75 = v35;
  uint64_t v36 = sub_766D0();
  uint64_t v38 = v37;
  uint64_t v74 = v36;
  uint64_t v75 = v37;
  LOBYTE(v25) = v39 & 1;
  char v76 = v39 & 1;
  uint64_t v77 = v40;
  sub_767B0();
  sub_150D0(v36, v38, v25);
  swift_bridgeObjectRelease();
  sub_15144((uint64_t)v4, (uint64_t)v2, &qword_A2DF8);
  v2[*(int *)(v29 + 44)] = 1;
  uint64_t v41 = v66;
  sub_15144((uint64_t)v2, v66, &qword_A2DF0);
  uint64_t v42 = v72;
  *(unsigned char *)(v41 + *(int *)(v72 + 44)) = 1;
  sub_151A8((uint64_t)v2, &qword_A2DF0);
  sub_151A8((uint64_t)v4, &qword_A2DF8);
  uint64_t v43 = (uint64_t)v63;
  sub_150E0(v41, (uint64_t)v63, &qword_A2E00);
  NSString v44 = sub_76BE0();
  NSString v45 = sub_76BE0();
  id v46 = STLocalizedString(v44);

  uint64_t v47 = sub_76C10();
  uint64_t v49 = v48;

  uint64_t v74 = v47;
  uint64_t v75 = v49;
  uint64_t v50 = sub_766D0();
  uint64_t v52 = v51;
  uint64_t v74 = v50;
  uint64_t v75 = v51;
  LOBYTE(v25) = v53 & 1;
  char v76 = v53 & 1;
  uint64_t v77 = v54;
  sub_767B0();
  sub_150D0(v50, v52, v25);
  swift_bridgeObjectRelease();
  sub_15144((uint64_t)v4, (uint64_t)v2, &qword_A2DF8);
  v2[*(int *)(v71 + 44)] = 2;
  uint64_t v55 = v67;
  sub_15144((uint64_t)v2, v67, &qword_A2DF0);
  *(unsigned char *)(v55 + *(int *)(v42 + 44)) = 2;
  sub_151A8((uint64_t)v2, &qword_A2DF0);
  sub_151A8((uint64_t)v4, &qword_A2DF8);
  sub_150E0(v55, v41, &qword_A2E00);
  uint64_t v56 = v73;
  sub_15144(v73, v55, &qword_A2E00);
  uint64_t v57 = v68;
  sub_15144(v43, v68, &qword_A2E00);
  uint64_t v58 = v69;
  sub_15144(v41, v69, &qword_A2E00);
  uint64_t v59 = v70;
  sub_15144(v55, v70, &qword_A2E00);
  uint64_t v60 = sub_14F50(&qword_A2E08);
  sub_15144(v57, v59 + *(int *)(v60 + 48), &qword_A2E00);
  sub_15144(v58, v59 + *(int *)(v60 + 64), &qword_A2E00);
  sub_151A8(v41, &qword_A2E00);
  sub_151A8(v43, &qword_A2E00);
  sub_151A8(v56, &qword_A2E00);
  sub_151A8(v58, &qword_A2E00);
  sub_151A8(v57, &qword_A2E00);
  return sub_151A8(v55, &qword_A2E00);
}

uint64_t sub_14658()
{
  return sub_76770();
}

uint64_t sub_14674()
{
  return sub_1378C();
}

void sub_146B0(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_146BC(uint64_t a1, uint64_t a2)
{
  return sub_147B4(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_146D4()
{
  sub_76C10();
  sub_76C40();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_14728()
{
  sub_76C10();
  sub_770C0();
  sub_76C40();
  Swift::Int v0 = sub_77100();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1479C(uint64_t a1, uint64_t a2)
{
  return sub_147B4(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_147B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_76C10();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_147F8(uint64_t a1, id *a2)
{
  uint64_t result = sub_76BF0();
  *a2 = 0;
  return result;
}

uint64_t sub_14870(uint64_t a1, id *a2)
{
  char v3 = sub_76C00();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_148F0@<X0>(void *a1@<X8>)
{
  sub_76C10();
  NSString v2 = sub_76BE0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_14934(void *a1, void *a2)
{
  return *a1 == *a2;
}

BOOL sub_14948(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void sub_1495C(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_14964()
{
  uint64_t v0 = sub_76C10();
  uint64_t v2 = v1;
  if (v0 == sub_76C10() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_77050();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void *sub_149F0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_14A00(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_14A0C(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_14A18@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_14A24@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_76BE0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_14A6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_76C10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_14A98(uint64_t a1)
{
  uint64_t v2 = sub_14BE4(&qword_A2D60, type metadata accessor for FPProviderDomainID);
  uint64_t v3 = sub_14BE4(&qword_A2D68, type metadata accessor for FPProviderDomainID);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_14B54()
{
  return sub_14BE4(&qword_A2D48, type metadata accessor for FPProviderDomainID);
}

uint64_t sub_14B9C()
{
  return sub_14BE4(&qword_A2D50, type metadata accessor for FPProviderDomainID);
}

uint64_t sub_14BE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_14C2C()
{
  return sub_14BE4(&qword_A2D58, type metadata accessor for FPProviderDomainID);
}

void type metadata accessor for MPMediaType(uint64_t a1)
{
}

void sub_14C88(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for Icon(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for AppsListHeaderView(id *a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for AppsListHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  id v6 = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AppsListHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for Recommendation.Confirmation(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AppsListHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for Recommendation.Confirmation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Recommendation.Confirmation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppsListHeaderView()
{
  return &type metadata for AppsListHeaderView;
}

uint64_t sub_14F34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_14F50(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_14F94(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_14FE4()
{
  unint64_t result = qword_A2DC8;
  if (!qword_A2DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A2DC8);
  }
  return result;
}

unint64_t sub_15038()
{
  unint64_t result = qword_A2DD8;
  if (!qword_A2DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A2DD8);
  }
  return result;
}

uint64_t sub_1508C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_14F94(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_150D0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_150E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_14F50(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_15144(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_14F50(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_151A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_14F50(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_15208()
{
  unint64_t result = qword_A2E10;
  if (!qword_A2E10)
  {
    sub_14F94(&qword_A2E18);
    sub_1508C(&qword_A2D90, &qword_A2D80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A2E10);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for VolumeView(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

void destroy for VolumeView(id *a1)
{
}

uint64_t assignWithCopy for VolumeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

__n128 initializeBufferWithCopyOfBuffer for ApplicationSize(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t assignWithTake for VolumeView(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for VolumeView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for VolumeView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VolumeView()
{
  return &type metadata for VolumeView;
}

uint64_t sub_1543C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_15458(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_76510();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = sub_14F50(&qword_A2E80);
  sub_154B8(a1, (void *)(a2 + *(int *)(v4 + 44)));
}

void sub_154B8(void *a1@<X0>, void *a2@<X8>)
{
  NSString v45 = a2;
  uint64_t v3 = sub_76A80();
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v46 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  NSString v44 = (char *)&v40 - v6;
  uint64_t v7 = (int *)sub_76B10();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v13 = sub_76AA0();
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v43 = (uint64_t)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  NSString v18 = (char *)&v40 - v17;
  __chkstk_darwin(v16);
  uint64_t v42 = (uint64_t)&v40 - v19;
  type metadata accessor for StorageShared();
  sub_164D0();
  uint64_t v20 = sub_76390();
  uint64_t v40 = v21;
  uint64_t v41 = (void *)v20;
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v22 = a1;
    sub_76240();

    swift_release();
    swift_release();
    sub_16604((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for Volume);
    swift_getKeyPath();
    swift_getKeyPath();
    id v23 = v22;
    sub_76240();

    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    id v24 = v23;
    sub_76240();

    swift_release();
    swift_release();
    uint64_t v25 = *(void *)&v10[v7[7]];
    uint64_t v26 = *(void *)&v10[v7[8]];
    BOOL v27 = __OFSUB__(v25, v26);
    uint64_t v28 = v25 - v26;
    if (v27)
    {
      __break(1u);
    }
    else if (!__OFSUB__(v28, *(void *)&v10[v7[9]]))
    {
      sub_16604((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for Volume);
      sub_76A90();
      uint64_t v29 = v42;
      sub_16538((uint64_t)v18, v42);
      swift_getKeyPath();
      swift_getKeyPath();
      id v30 = v24;
      sub_76240();

      swift_release();
      swift_release();
      sub_16604((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for Volume);
      swift_getKeyPath();
      swift_getKeyPath();
      id v31 = v30;
      sub_76240();

      swift_release();
      swift_release();
      uint64_t v32 = (uint64_t)v44;
      sub_76A70();
      uint64_t v33 = v43;
      sub_1659C(v29, v43, (uint64_t (*)(void))&type metadata accessor for StorageGaugeView);
      uint64_t v34 = v46;
      sub_1659C(v32, v46, (uint64_t (*)(void))&type metadata accessor for StorageGaugeLegendView);
      uint64_t v35 = v45;
      uint64_t v36 = v40;
      uint64_t v37 = v41;
      *NSString v45 = v41;
      v35[1] = v36;
      uint64_t v38 = sub_14F50(&qword_A2E88);
      sub_1659C(v33, (uint64_t)v35 + *(int *)(v38 + 48), (uint64_t (*)(void))&type metadata accessor for StorageGaugeView);
      sub_1659C(v34, (uint64_t)v35 + *(int *)(v38 + 64), (uint64_t (*)(void))&type metadata accessor for StorageGaugeLegendView);
      id v39 = v37;
      sub_16604(v32, (uint64_t (*)(void))&type metadata accessor for StorageGaugeLegendView);
      sub_16604(v29, (uint64_t (*)(void))&type metadata accessor for StorageGaugeView);

      sub_16604(v34, (uint64_t (*)(void))&type metadata accessor for StorageGaugeLegendView);
      sub_16604(v33, (uint64_t (*)(void))&type metadata accessor for StorageGaugeView);

      return;
    }
    __break(1u);
  }
  sub_76380();
  __break(1u);
}

uint64_t sub_159F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_14F50(&qword_A2E50);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_14F50(&qword_A2E58);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v22 - v10;
  uint64_t v12 = sub_14F50(&qword_A2E40);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (_IsInternalInstall(v13))
  {
    *(void *)uint64_t v15 = sub_764E0();
    *((void *)v15 + 1) = 0;
    v15[16] = 1;
    uint64_t v16 = *(int *)(sub_14F50(&qword_A2E60) + 44);
    v22[1] = a1;
    uint64_t v17 = &v15[v16];
    sub_764F0();
    sub_768F0();
    v22[0] = v2;
    NSString v18 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v18(v9, v11, v5);
    *(void *)uint64_t v17 = 0;
    v17[8] = 1;
    uint64_t v19 = sub_14F50(&qword_A2E68);
    v18(&v17[*(int *)(v19 + 48)], v9, v5);
    uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
    v20(v11, v5);
    v20(v9, v5);
    sub_16230((uint64_t)v15, (uint64_t)v4);
    swift_storeEnumTagMultiPayload();
    sub_1508C(&qword_A2E38, &qword_A2E40);
    sub_76570();
    return sub_16298((uint64_t)v15);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_1508C(&qword_A2E38, &qword_A2E40);
    return sub_76570();
  }
}

uint64_t sub_15D34()
{
  uint64_t v0 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_76D70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_76D40();
  uint64_t v4 = sub_76D30();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = &protocol witness table for MainActor;
  sub_52508((uint64_t)v2, (uint64_t)&unk_A2E78, v5);
  return swift_release();
}

uint64_t sub_15E34()
{
  v0[2] = sub_76D40();
  v0[3] = sub_76D30();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_15EE0;
  return sub_56CB0(0, 1);
}

uint64_t sub_15EE0()
{
  swift_task_dealloc();
  uint64_t v1 = sub_76D10();
  return _swift_task_switch(sub_1601C, v1, v0);
}

uint64_t sub_1601C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1607C()
{
  uint64_t v1 = sub_14F50(&qword_A2E20);
  __chkstk_darwin(v1);
  long long v5 = *v0;
  sub_159F4((uint64_t)&v4[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_14F50(&qword_A2E28);
  sub_16190();
  sub_1508C(&qword_A2E48, &qword_A2E28);
  return sub_76990();
}

void sub_16188(uint64_t a1@<X8>)
{
  sub_15458(*(void **)(v1 + 16), a1);
}

unint64_t sub_16190()
{
  unint64_t result = qword_A2E30;
  if (!qword_A2E30)
  {
    sub_14F94(&qword_A2E20);
    sub_1508C(&qword_A2E38, &qword_A2E40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A2E30);
  }
  return result;
}

uint64_t sub_16230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A2E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_16298(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A2E40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_162F8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_16330()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_163DC;
  return sub_15E34();
}

uint64_t sub_163DC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_164D0()
{
  unint64_t result = qword_A2D88;
  if (!qword_A2D88)
  {
    type metadata accessor for StorageShared();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A2D88);
  }
  return result;
}

uint64_t sub_16538(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_76AA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1659C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_16604(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_16668()
{
  unint64_t result = qword_A2E90;
  if (!qword_A2E90)
  {
    sub_14F94(&qword_A2E98);
    sub_16190();
    sub_1508C(&qword_A2E48, &qword_A2E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A2E90);
  }
  return result;
}

uint64_t destroy for DetailSizeListView()
{
  return swift_bridgeObjectRelease();
}

void *_s17StorageSettingsUI18DetailSizeListViewVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DetailSizeListView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

__n128 initializeWithTake for DetailSizeListView(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for DetailSizeListView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for DetailSizeListView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetailSizeListView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetailSizeListView()
{
  return &type metadata for DetailSizeListView;
}

uint64_t sub_168A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_168BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_14F50(&qword_A2EA0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_14F50(&qword_A2EA8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    *(void *)uint64_t v8 = sub_764E0();
    *((void *)v8 + 1) = 0;
    v8[16] = 1;
    uint64_t v12 = sub_14F50(&qword_A2EB0);
    sub_16AB8(a1, a2, a3, (uint64_t)&v8[*(int *)(v12 + 44)]);
    sub_15144((uint64_t)v8, (uint64_t)v11, &qword_A2EA0);
    swift_storeEnumTagMultiPayload();
    sub_1508C(&qword_A2EB8, &qword_A2EA0);
    sub_76570();
    return sub_151A8((uint64_t)v8, &qword_A2EA0);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_1508C(&qword_A2EB8, &qword_A2EA0);
    return sub_76570();
  }
}

uint64_t sub_16AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v34 = sub_14F50(&qword_A2EC0);
  __chkstk_darwin(v34);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_14F50(&qword_A2EC8);
  uint64_t v9 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_14F50(&qword_A2ED0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  sub_15038();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_766D0();
  uint64_t v20 = v19;
  int v33 = v21;
  uint64_t v23 = v22;
  if (v32 == 0x8000000000000000)
  {
    sub_762D0();
    uint64_t v24 = v35;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v8, v11, v35);
    swift_storeEnumTagMultiPayload();
    sub_1508C(&qword_A2ED8, &qword_A2EC8);
    sub_76570();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v24);
  }
  else
  {
    uint64_t v36 = sub_770B0();
    uint64_t v37 = v25;
    *(void *)uint64_t v8 = sub_766D0();
    *((void *)v8 + 1) = v26;
    v8[16] = v27 & 1;
    *((void *)v8 + 3) = v28;
    swift_storeEnumTagMultiPayload();
    sub_1508C(&qword_A2ED8, &qword_A2EC8);
    sub_76570();
  }
  char v29 = v33 & 1;
  sub_15144((uint64_t)v17, (uint64_t)v15, &qword_A2ED0);
  *(void *)a4 = v18;
  *(void *)(a4 + 8) = v20;
  *(unsigned char *)(a4 + 16) = v29;
  *(void *)(a4 + 24) = v23;
  *(void *)(a4 + 32) = 0;
  *(unsigned char *)(a4 + 40) = 1;
  uint64_t v30 = sub_14F50(&qword_A2EE0);
  sub_15144((uint64_t)v15, a4 + *(int *)(v30 + 64), &qword_A2ED0);
  sub_16E5C(v18, v20, v29);
  swift_bridgeObjectRetain();
  sub_151A8((uint64_t)v17, &qword_A2ED0);
  sub_151A8((uint64_t)v15, &qword_A2ED0);
  sub_150D0(v18, v20, v29);
  return swift_bridgeObjectRelease();
}

uint64_t sub_16E50()
{
  return sub_168BC(*v0, v0[1], v0[2]);
}

uint64_t sub_16E5C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

unint64_t sub_16E70()
{
  unint64_t result = qword_A2EE8;
  if (!qword_A2EE8)
  {
    sub_14F94((uint64_t *)&unk_A2EF0);
    sub_1508C(&qword_A2EB8, &qword_A2EA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A2EE8);
  }
  return result;
}

uint64_t sub_16F10(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  BOOL v3 = a3 < 2u || a3 == 3;
  if (v3 || a3 == 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for Recommendation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_16FDC(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 192))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_16FDC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  BOOL v3 = a3 < 2u || a3 == 3;
  if (v3 || a3 == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for Recommendation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_16F10(v7, v8, v9);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = v9;
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v12 = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v13;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v12;
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  }
  uint64_t v15 = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v16 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v16;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  swift_bridgeObjectRetain();
  if (v15)
  {
    uint64_t v17 = *(void *)(a2 + 200);
    *(void *)(a1 + 192) = v15;
    *(void *)(a1 + 200) = v17;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  }
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  return a1;
}

uint64_t assignWithCopy for Recommendation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 64);
  sub_16F10(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v6;
  sub_16FDC(v7, v8, v9);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v10 = (_OWORD *)(a1 + 112);
  uint64_t v11 = (_OWORD *)(a2 + 112);
  uint64_t v12 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136))
  {
    if (v12)
    {
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    }
    else
    {
      sub_173C0(a1 + 112);
      char v13 = *(unsigned char *)(a2 + 144);
      long long v14 = *(_OWORD *)(a2 + 128);
      _OWORD *v10 = *v11;
      *(_OWORD *)(a1 + 128) = v14;
      *(unsigned char *)(a1 + 144) = v13;
    }
  }
  else if (v12)
  {
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *v11;
    long long v16 = *(_OWORD *)(a2 + 128);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    _OWORD *v10 = v15;
    *(_OWORD *)(a1 + 128) = v16;
  }
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 176);
  uint64_t v18 = *(void *)(a1 + 192);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v17;
  uint64_t v19 = *(void *)(a2 + 192);
  if (!v18)
  {
    if (v19)
    {
      uint64_t v21 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = v19;
      *(void *)(a1 + 200) = v21;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    goto LABEL_15;
  }
  if (!v19)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v20 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = v19;
  *(void *)(a1 + 200) = v20;
  swift_retain();
  swift_release();
LABEL_15:
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  return a1;
}

uint64_t sub_173C0(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for Recommendation(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for Recommendation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  char v7 = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v7;
  sub_16FDC(v8, v9, v10);
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  if (*(void *)(a1 + 136))
  {
    uint64_t v13 = *(void *)(a2 + 136);
    if (v13)
    {
      uint64_t v14 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v14;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v13;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      goto LABEL_6;
    }
    sub_173C0(a1 + 112);
  }
  long long v15 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v15;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
LABEL_6:
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 192);
  uint64_t v17 = *(void *)(a1 + 192);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  if (!v17)
  {
    if (v16)
    {
      uint64_t v19 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = v16;
      *(void *)(a1 + 200) = v19;
      goto LABEL_13;
    }
LABEL_12:
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    goto LABEL_13;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_12;
  }
  uint64_t v18 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = v16;
  *(void *)(a1 + 200) = v18;
  swift_release();
LABEL_13:
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  return a1;
}

uint64_t getEnumTagSinglePayload for Recommendation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 209)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Recommendation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 208) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 209) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 209) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Recommendation()
{
  return &type metadata for Recommendation;
}

uint64_t destroy for Recommendation.Confirmation()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Recommendation.Confirmation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Recommendation.Confirmation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for Recommendation.Confirmation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for Recommendation.Confirmation()
{
  return &type metadata for Recommendation.Confirmation;
}

unint64_t sub_177EC()
{
  unint64_t result = qword_A2F00;
  if (!qword_A2F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A2F00);
  }
  return result;
}

void sub_17840(uint64_t a1, Swift::UInt64 a2, char a3)
{
  if (a3)
  {
    if (a2)
    {
      if (a2 == 1) {
        Swift::UInt v5 = 2;
      }
      else {
        Swift::UInt v5 = 3;
      }
    }
    else
    {
      Swift::UInt v5 = 0;
    }
    sub_770D0(v5);
  }
  else
  {
    sub_770D0(1uLL);
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v4 = a2;
    }
    else {
      Swift::UInt64 v4 = 0;
    }
    sub_770F0(v4);
  }
}

Swift::Int sub_178A4(Swift::UInt64 a1, char a2)
{
  sub_770C0();
  if (a2)
  {
    if (a1)
    {
      if (a1 == 1) {
        Swift::UInt v5 = 2;
      }
      else {
        Swift::UInt v5 = 3;
      }
    }
    else
    {
      Swift::UInt v5 = 0;
    }
    sub_770D0(v5);
  }
  else
  {
    sub_770D0(1uLL);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v4 = a1;
    }
    else {
      Swift::UInt64 v4 = 0;
    }
    sub_770F0(v4);
  }
  return sub_77100();
}

BOOL sub_17930(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if (*(unsigned char *)(a1 + 8) != 1)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return v2 == *(double *)a2;
    }
    return 0;
  }
  if (v2 == 0.0)
  {
    BOOL v4 = *(void *)&v3 == 0;
  }
  else
  {
    if (*(void *)&v2 != 1)
    {
      if (*(void *)&v3 > 1uLL) {
        int v7 = *(unsigned __int8 *)(a2 + 8);
      }
      else {
        int v7 = 0;
      }
      return v7 == 1;
    }
    BOOL v4 = *(void *)&v3 == 1;
  }
  if (v4) {
    char v6 = *(unsigned char *)(a2 + 8);
  }
  else {
    char v6 = 0;
  }
  return (v6 & 1) != 0;
}

Swift::Int sub_179A4()
{
  return sub_178A4(*(void *)v0, *(unsigned char *)(v0 + 8));
}

void sub_179B0(uint64_t a1)
{
  sub_17840(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

Swift::Int sub_179BC()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  sub_770C0();
  if (v2 == 1)
  {
    if (v1)
    {
      if (v1 == 1) {
        Swift::UInt v3 = 2;
      }
      else {
        Swift::UInt v3 = 3;
      }
    }
    else
    {
      Swift::UInt v3 = 0;
    }
    sub_770D0(v3);
  }
  else
  {
    sub_770D0(1uLL);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v4 = v1;
    }
    else {
      Swift::UInt64 v4 = 0;
    }
    sub_770F0(v4);
  }
  return sub_77100();
}

uint64_t sub_17A48()
{
  if ((uint64_t)v0[13] < 1001
    || (*v0 == 0x722D6F742D706174 ? (BOOL v1 = v0[1] == 0xEC00000072616461) : (BOOL v1 = 0), v1 || (sub_77050() & 1) != 0))
  {
    uint64_t v2 = v0[11];
    swift_bridgeObjectRetain();
  }
  else
  {
    NSString v4 = sub_76BE0();
    NSString v5 = sub_76BE0();
    id v6 = STLocalizedString(v4);

    sub_76C10();
    sub_14F50(&qword_A2FF0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_7CA00;
    uint64_t v8 = sub_770B0();
    uint64_t v10 = v9;
    *(void *)(v7 + 56) = &type metadata for String;
    unint64_t v11 = sub_1B654();
    *(void *)(v7 + 64) = v11;
    *(void *)(v7 + 32) = v8;
    *(void *)(v7 + 40) = v10;
    uint64_t v12 = sub_76C20();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_7CA10;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = v11;
    *(void *)(v15 + 32) = v12;
    *(void *)(v15 + 40) = v14;
    uint64_t v17 = v0[11];
    uint64_t v16 = v0[12];
    *(void *)(v15 + 96) = &type metadata for String;
    *(void *)(v15 + 104) = v11;
    *(void *)(v15 + 72) = v17;
    *(void *)(v15 + 80) = v16;
    swift_bridgeObjectRetain();
    return sub_76C20();
  }
  return v2;
}

uint64_t sub_17C48@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)(v1 + 152))
  {
    id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    self;
    uint64_t v4 = swift_dynamicCastObjCClass();
    if (v4)
    {
      NSString v5 = (void *)v4;
      NSString v6 = sub_76BE0();
      id v7 = usageBundleForAppIdentifier(v6);

      if (v7)
      {
        id v8 = [objc_allocWithZone((Class)PSSpecifier) init];
        sub_14F50(&qword_A2FE0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_7CA00;
        sub_76C10();
        sub_76F30();
        *(void *)(inited + 96) = sub_1B618(0, &qword_A2FE8);
        *(void *)(inited + 72) = v7;
        id v10 = v7;
        sub_27468(inited);
        Class isa = sub_76B50().super.isa;
        swift_bridgeObjectRelease();
        [v8 setProperties:isa];

        [v5 setSpecifier:v8];
      }
      sub_14F50(&qword_A2FD8);
      if (sub_76C30() == 0xD000000000000024 && v12 == 0x8000000000085D20)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v16 = sub_77050();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
        {
          id v17 = [v5 navigationItem];
          NSString v18 = sub_76BE0();
          [v17 setTitle:v18];
        }
      }
      sub_76130();
      uint64_t v19 = sub_76140();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a1, 0, 1, v19);
    }
  }
  uint64_t v13 = sub_76140();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);

  return v14(a1, 1, 1, v13);
}

void sub_17F70()
{
  swift_bridgeObjectRetain();
  sub_76C40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_76C40();
  swift_bridgeObjectRelease();
  sub_198F8((uint64_t *)(v0 + 176), (uint64_t)v4);
  sub_198F8(v4, (uint64_t)&v5);
  Swift::UInt64 v1 = v5;
  if (v6 == 1)
  {
    if (v5)
    {
      if (v5 == 1) {
        Swift::UInt v2 = 2;
      }
      else {
        Swift::UInt v2 = 3;
      }
    }
    else
    {
      Swift::UInt v2 = 0;
    }
    sub_770D0(v2);
  }
  else
  {
    sub_770D0(1uLL);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v3 = v1;
    }
    else {
      Swift::UInt64 v3 = 0;
    }
    sub_770F0(v3);
  }
  sub_770E0(*(unsigned char *)(v0 + 208) & 1);
}

uint64_t sub_1805C(uint64_t a1)
{
  Swift::UInt64 v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_180F4;
  return sub_56CB0(a1, 0);
}

uint64_t sub_180F4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void, uint64_t))(v3 + 8);
  return v1(0, 1);
}

void sub_181F0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_14F50(&qword_A2F18);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1A450;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1842C;
  aBlock[3] = &unk_96D88;
  unint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [a2 startWithCompletionBlock:v11];
  _Block_release(v11);
}

uint64_t sub_183AC(int a1, id a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    id v5 = [a2 purgeableSize];
    swift_beginAccess();
    *(void *)(a4 + 16) = v5;
  }
  sub_14F50(&qword_A2F18);
  return sub_76D20();
}

void sub_1842C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = *(void (**)(uint64_t, void *, void *))(a1 + 32);
  swift_retain();
  id v9 = a3;
  id v8 = a4;
  v7(a2, a3, a4);
  swift_release();
}

uint64_t sub_184C0()
{
  return _swift_task_switch(sub_184DC, 0, 0);
}

uint64_t sub_184DC()
{
  *(void *)(v0 + 32) = self;
  sub_76D40();
  *(void *)(v0 + 40) = sub_76D30();
  uint64_t v2 = sub_76D10();
  return _swift_task_switch(sub_18580, v2, v1);
}

uint64_t sub_18580()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_release();
  *(unsigned char *)(v0 + 25) = [v1 isRunningInStoreDemoMode];
  return _swift_task_switch(sub_185FC, 0, 0);
}

uint64_t sub_185FC()
{
  char v1 = *(unsigned char *)(v0 + 25);
  id v2 = [objc_allocWithZone((Class)ASDPushCacheDeleteUpdateRequest) init];
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1871C;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000016, 0x8000000000085920, sub_1A4F8, v3, &type metadata for RecommendationStatus);
}

uint64_t sub_1871C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_18834, 0, 0);
}

uint64_t sub_18834()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v1, v2);
}

void sub_1889C(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = sub_14F50((uint64_t *)&unk_A2F20);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1A598;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18CD0;
  aBlock[3] = &unk_96DD8;
  unint64_t v11 = _Block_copy(aBlock);
  swift_release();
  [a2 startWithCompletionHandler:v11];
  _Block_release(v11);
}

uint64_t sub_18A4C(uint64_t a1, uint64_t a2, char a3)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_A2C20 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_76200();
    sub_1A620(v3, (uint64_t)qword_A6A58);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v4 = sub_761F0();
    os_log_type_t v5 = sub_76DC0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412290;
      swift_errorRetain();
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_76E20();
      *uint64_t v7 = v12;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v4, v5, "Unable to enable auto-offload with error %@", v6, 0xCu);
      sub_14F50(&qword_A3650);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else if ((a3 & 1) == 0)
  {
    uint64_t v8 = (__CFString *)sub_76BE0();
    CFBooleanRef v9 = kCFBooleanTrue;
    uint64_t v10 = (__CFString *)sub_76BE0();
    CFPreferencesSetAppValue(v8, v9, v10);
  }
  sub_14F50((uint64_t *)&unk_A2F20);
  return sub_76D20();
}

void sub_18CD0(uint64_t a1, uint64_t a2, void *a3)
{
  os_log_type_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_18D48(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return _swift_task_switch(sub_18D68, 0, 0);
}

uint64_t sub_18D68()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  void *v3 = v0;
  v3[1] = sub_18E6C;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0x287069547370616DLL, 0xEE00293A6D6F7266, sub_1B368, v2, &type metadata for RecommendationStatus);
}

uint64_t sub_18E6C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_18F84, 0, 0);
}

uint64_t sub_18F84()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

void sub_18FA0(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_14F50((uint64_t *)&unk_A2F20);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1B404;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19368;
  aBlock[3] = &unk_96E78;
  CFBooleanRef v9 = _Block_copy(aBlock);
  swift_release();
  [a2 enableWithCompletionHandler:v9];
  _Block_release(v9);
}

uint64_t sub_19148(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_A2C20 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_76200();
    sub_1A620(v1, (uint64_t)qword_A6A58);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v2 = sub_761F0();
    os_log_type_t v3 = sub_76DC0();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      swift_errorRetain();
      uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
      sub_76E20();
      *uint64_t v5 = v7;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v2, v3, "Unable to enable messages recommendation with error %@", v4, 0xCu);
      sub_14F50(&qword_A3650);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    sub_14F50((uint64_t *)&unk_A2F20);
    sub_76D20();
    return swift_errorRelease();
  }
  else
  {
    sub_14F50((uint64_t *)&unk_A2F20);
    return sub_76D20();
  }
}

void sub_19368(uint64_t a1, void *a2)
{
  os_log_type_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_193D4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_193E0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 176);
  v15[10] = *(_OWORD *)(a1 + 160);
  v15[11] = v2;
  v15[12] = *(_OWORD *)(a1 + 192);
  char v16 = *(unsigned char *)(a1 + 208);
  long long v3 = *(_OWORD *)(a1 + 112);
  v15[6] = *(_OWORD *)(a1 + 96);
  v15[7] = v3;
  long long v4 = *(_OWORD *)(a1 + 144);
  unsigned char v15[8] = *(_OWORD *)(a1 + 128);
  v15[9] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  v15[2] = *(_OWORD *)(a1 + 32);
  v15[3] = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  v15[4] = *(_OWORD *)(a1 + 64);
  v15[5] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  v15[0] = *(_OWORD *)a1;
  v15[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 176);
  v17[10] = *(_OWORD *)(a2 + 160);
  v17[11] = v8;
  v17[12] = *(_OWORD *)(a2 + 192);
  char v18 = *(unsigned char *)(a2 + 208);
  long long v9 = *(_OWORD *)(a2 + 112);
  v17[6] = *(_OWORD *)(a2 + 96);
  v17[7] = v9;
  long long v10 = *(_OWORD *)(a2 + 144);
  v17[8] = *(_OWORD *)(a2 + 128);
  v17[9] = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  v17[2] = *(_OWORD *)(a2 + 32);
  v17[3] = v11;
  long long v12 = *(_OWORD *)(a2 + 80);
  v17[4] = *(_OWORD *)(a2 + 64);
  v17[5] = v12;
  long long v13 = *(_OWORD *)(a2 + 16);
  v17[0] = *(_OWORD *)a2;
  v17[1] = v13;
  return sub_1978C((uint64_t)v15, (uint64_t)v17) & 1;
}

Swift::Int sub_19494()
{
  return sub_77100();
}

void sub_1951C()
{
}

Swift::Int sub_19588()
{
  return sub_77100();
}

void *sub_1960C()
{
  return &protocol witness table for String;
}

uint64_t sub_19618(uint64_t result, unsigned char **a2)
{
  long long v2 = *a2;
  unsigned char *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_19628(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_19664(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1969C(uint64_t (*a1)(void))
{
  return a1();
}

unsigned char **sub_196C4(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  long long v4 = *result;
  *long long v4 = a4;
  *unint64_t result = v4 + 1;
  return result;
}

void sub_196D4(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  long long v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_76E20();
  *a1 = v7;
  long long v8 = *a2;
  if (*a2)
  {
    *long long v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_1978C(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_77050(), v6 = 0, (v5 & 1) != 0))
  {
    sub_198F8((uint64_t *)(a1 + 176), (uint64_t)v10);
    sub_198F8((uint64_t *)(a2 + 176), (uint64_t)v9);
    sub_198F8(v10, (uint64_t)&v11);
    if (v12 == 1)
    {
      if (v11 == 0.0)
      {
        sub_198F8(v9, (uint64_t)&v13);
        char v6 = 0;
        if (v14 == 1 && v13 == 0.0) {
          goto LABEL_20;
        }
      }
      else
      {
        if (*(void *)&v11 == 1)
        {
          sub_198F8(v9, (uint64_t)&v13);
          char v6 = 0;
          if (v14 != 1 || *(void *)&v13 != 1) {
            return v6 & 1;
          }
LABEL_20:
          if (*(void *)(a1 + 104) == *(void *)(a2 + 104)) {
            char v6 = ((*(unsigned char *)(a1 + 208) & 1) == 0) ^ *(unsigned char *)(a2 + 208);
          }
          else {
            char v6 = 0;
          }
          return v6 & 1;
        }
        sub_198F8(v9, (uint64_t)&v13);
        char v6 = 0;
        if (v14 == 1 && *(void *)&v13 >= 2uLL) {
          goto LABEL_20;
        }
      }
    }
    else
    {
      double v7 = v11;
      sub_198F8(v9, (uint64_t)&v13);
      char v6 = 0;
      if ((v14 & 1) == 0 && v7 == v13) {
        goto LABEL_20;
      }
    }
  }
  return v6 & 1;
}

uint64_t sub_198F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

double sub_19910@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_76F70(17);
  uint64_t v4 = sub_770B0();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 0x7473797320666F20;
  v12._object = (void *)0xEF61746164206D65;
  sub_76C50(v12);
  uint64_t v7 = v6;
  sub_76F70(36);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = sub_770B0();
  sub_76C50(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0xD000000000000019;
  v14._object = (void *)0x8000000000085AD0;
  sub_76C50(v14);
  if (a1 <= 20000000000) {
    uint64_t v8 = 0x7265776F6CLL;
  }
  else {
    uint64_t v8 = 0x726568676968;
  }
  if (a1 <= 20000000000) {
    long long v9 = (void *)0xE500000000000000;
  }
  else {
    long long v9 = (void *)0xE600000000000000;
  }
  swift_bridgeObjectRetain();
  v15._countAndFlagsBits = v8;
  v15._object = v9;
  sub_76C50(v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = 0xD000000000000024;
  v16._object = (void *)0x8000000000085AF0;
  sub_76C50(v16);
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  strcpy((char *)a2, "tap-to-radar");
  *(unsigned char *)(a2 + 13) = 0;
  *(_WORD *)(a2 + 14) = -5120;
  *(void *)(a2 + 16) = 0xD000000000000014;
  *(void *)(a2 + 24) = 0x8000000000085B20;
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = 0xD000000000000014;
  *(void *)(a2 + 56) = 0x8000000000085B20;
  *(unsigned char *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0xD000000000000014;
  *(void *)(a2 + 80) = 0x8000000000085B20;
  *(void *)(a2 + 88) = 0x6576616820756F59;
  *(void *)(a2 + 96) = 0xE900000000000020;
  *(void *)(a2 + 104) = 0x7FFFFFFFFFFFFFFFLL;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(unsigned char *)(a2 + 144) = 0;
  *(_OWORD *)(a2 + 152) = xmmword_7CA20;
  double result = -1.68324421e212;
  *(_OWORD *)(a2 + 168) = xmmword_7CA30;
  *(unsigned char *)(a2 + 184) = 1;
  *(void *)(a2 + 192) = &unk_A2F40;
  *(void *)(a2 + 200) = v10;
  *(unsigned char *)(a2 + 208) = 0;
  return result;
}

uint64_t sub_19B84(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return _swift_task_switch(sub_19BA4, 0, 0);
}

uint64_t sub_19BA4()
{
  uint64_t v1 = swift_allocObject();
  v0[6] = v1;
  *(void *)(v1 + 16) = 50;
  id v2 = objc_allocWithZone((Class)ASDPurgeableAppRequestOptions);
  NSString v3 = sub_76BE0();
  id v4 = [v2 initWithVolume:v3 urgency:3];
  v0[7] = v4;

  if (v4)
  {
    id v5 = [objc_allocWithZone((Class)ASDPurgeableAppRequest) initWithOptions:v4];
    v0[8] = v5;
    uint64_t v6 = swift_task_alloc();
    v0[9] = v6;
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[10] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_19FB0;
    return withCheckedContinuation<A>(isolation:function:_:)(v7, 0, 0, 0xD000000000000016, 0x8000000000085920, sub_1A378, v6, (char *)&type metadata for () + 8);
  }
  else
  {
    uint64_t v9 = v0[5];
    uint64_t v8 = v0[6];
    NSString v10 = sub_76BE0();
    NSString v11 = sub_76BE0();
    id v12 = STLocalizedString(v10);

    uint64_t v30 = sub_76C10();
    uint64_t v14 = v13;

    NSString v15 = sub_76BE0();
    NSString v16 = sub_76BE0();
    id v17 = STLocalizedString(v15);

    uint64_t v18 = sub_76C10();
    uint64_t v20 = v19;

    swift_beginAccess();
    uint64_t v21 = *(void *)(v8 + 16);
    NSString v22 = sub_76BE0();
    NSString v23 = sub_76BE0();
    id v24 = STLocalizedString(v22);

    uint64_t v25 = sub_76C10();
    uint64_t v27 = v26;

    swift_release();
    strcpy((char *)v9, "autoUnloadApps");
    *(unsigned char *)(v9 + 15) = -18;
    *(void *)(v9 + 16) = 0xD000000000000012;
    *(void *)(v9 + 24) = 0x8000000000085810;
    *(void *)(v9 + 32) = v30;
    *(void *)(v9 + 40) = v14;
    *(void *)(v9 + 48) = 0xD000000000000012;
    *(void *)(v9 + 56) = 0x8000000000085810;
    *(unsigned char *)(v9 + 64) = 0;
    *(void *)(v9 + 72) = 0xD000000000000012;
    *(void *)(v9 + 80) = 0x8000000000085810;
    *(void *)(v9 + 88) = v18;
    *(void *)(v9 + 96) = v20;
    *(void *)(v9 + 104) = v21;
    *(_OWORD *)(v9 + 112) = 0u;
    *(_OWORD *)(v9 + 128) = 0u;
    *(unsigned char *)(v9 + 144) = 0;
    *(void *)(v9 + 152) = 0;
    *(void *)(v9 + 160) = v25;
    *(void *)(v9 + 168) = v27;
    *(void *)(v9 + 176) = 0;
    *(unsigned char *)(v9 + 184) = 1;
    *(void *)(v9 + 192) = &unk_A2F10;
    *(void *)(v9 + 200) = 0;
    *(unsigned char *)(v9 + 208) = 0;
    uint64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_19FB0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1A0C8, 0, 0);
}

uint64_t sub_1A0C8()
{
  uint64_t v1 = *(void **)(v0 + 64);

  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  NSString v4 = sub_76BE0();
  NSString v5 = sub_76BE0();
  id v6 = STLocalizedString(v4);

  uint64_t v24 = sub_76C10();
  uint64_t v8 = v7;

  NSString v9 = sub_76BE0();
  NSString v10 = sub_76BE0();
  id v11 = STLocalizedString(v9);

  uint64_t v12 = sub_76C10();
  uint64_t v14 = v13;

  swift_beginAccess();
  uint64_t v15 = *(void *)(v2 + 16);
  NSString v16 = sub_76BE0();
  NSString v17 = sub_76BE0();
  id v18 = STLocalizedString(v16);

  uint64_t v19 = sub_76C10();
  uint64_t v21 = v20;

  swift_release();
  strcpy((char *)v3, "autoUnloadApps");
  *(unsigned char *)(v3 + 15) = -18;
  *(void *)(v3 + 16) = 0xD000000000000012;
  *(void *)(v3 + 24) = 0x8000000000085810;
  *(void *)(v3 + 32) = v24;
  *(void *)(v3 + 40) = v8;
  *(void *)(v3 + 48) = 0xD000000000000012;
  *(void *)(v3 + 56) = 0x8000000000085810;
  *(unsigned char *)(v3 + 64) = 0;
  *(void *)(v3 + 72) = 0xD000000000000012;
  *(void *)(v3 + 80) = 0x8000000000085810;
  *(void *)(v3 + 88) = v12;
  *(void *)(v3 + 96) = v14;
  *(void *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(unsigned char *)(v3 + 144) = 0;
  *(void *)(v3 + 152) = 0;
  *(void *)(v3 + 160) = v19;
  *(void *)(v3 + 168) = v21;
  *(void *)(v3 + 176) = 0;
  *(unsigned char *)(v3 + 184) = 1;
  *(void *)(v3 + 192) = &unk_A2F10;
  *(void *)(v3 + 200) = 0;
  *(unsigned char *)(v3 + 208) = 0;
  NSString v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1A368()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1A378(uint64_t a1)
{
  sub_181F0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1A380()
{
  uint64_t v1 = sub_14F50(&qword_A2F18);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1A450(int a1, void *a2, uint64_t a3)
{
  sub_14F50(&qword_A2F18);
  uint64_t v7 = *(void *)(v3 + 16);

  return sub_183AC(a1, a2, a3, v7);
}

uint64_t sub_1A4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A4F0()
{
  return swift_release();
}

void sub_1A4F8(uint64_t a1)
{
  sub_1889C(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1A504()
{
  uint64_t v1 = sub_14F50((uint64_t *)&unk_A2F20);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 17) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1A598(uint64_t a1, uint64_t a2)
{
  sub_14F50((uint64_t *)&unk_A2F20);
  char v5 = *(unsigned char *)(v2 + 16);

  return sub_18A4C(a1, a2, v5);
}

uint64_t sub_1A620(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

double sub_1A658@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  NSString v4 = sub_76BE0();
  NSString v5 = sub_76BE0();
  id v6 = STLocalizedString(v4);

  uint64_t v7 = sub_76C10();
  uint64_t v9 = v8;

  NSString v10 = sub_76BE0();
  NSString v11 = sub_76BE0();
  id v12 = STLocalizedString(v10);

  uint64_t v13 = sub_76C10();
  uint64_t v15 = v14;

  uint64_t v16 = sub_1B618(0, &qword_A2F30);
  *(void *)a2 = 0x616964654D736C68;
  *(void *)(a2 + 8) = 0xE800000000000000;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0xE000000000000000;
  *(void *)(a2 + 32) = v7;
  *(void *)(a2 + 40) = v9;
  *(_OWORD *)(a2 + 48) = xmmword_7CA40;
  *(unsigned char *)(a2 + 64) = 1;
  *(void *)(a2 + 72) = 0x616964654D736C68;
  *(void *)(a2 + 80) = 0xE800000000000000;
  *(void *)(a2 + 88) = v13;
  *(void *)(a2 + 96) = v15;
  *(void *)(a2 + 104) = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(unsigned char *)(a2 + 144) = 0;
  *(void *)(a2 + 152) = v16;
  *(void *)(a2 + 160) = 0;
  *(void *)(a2 + 168) = 0;
  *(void *)(a2 + 176) = 0;
  *(unsigned char *)(a2 + 184) = 1;
  *(void *)(a2 + 192) = 0;
  *(void *)(a2 + 200) = 0;
  *(unsigned char *)(a2 + 208) = 0;
  return result;
}

uint64_t sub_1A804()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1A814()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1A8A8;
  return sub_1805C(v2);
}

uint64_t sub_1A8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t sub_1A9AC@<X0>(uint64_t a1@<X8>)
{
  id v2 = objc_allocWithZone((Class)NSBundle);
  NSString v3 = sub_76BE0();
  NSString v4 = [v2 initWithPath:v3];

  if (v4
    && [v4 principalClass]
    && (swift_getObjCClassMetadata(), sub_1B618(0, &qword_A2F68), swift_dynamicCastMetatype())
    && (id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init]) != 0)
  {
    id v6 = v5;
    uint64_t v7 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (!v7) {
  }
    }
  else
  {
    uint64_t v7 = 0;
  }
  id v8 = usageBundleForAppIdentifier(comAppleTV);
  if (!v7
    || ([v7 respondsToSelector:"usageDetailControllerClassForUsageBundleApp:"] & 1) == 0
    || (id v9 = [(id)swift_unknownObjectRetain() usageDetailControllerClassForUsageBundleApp:v8],
        swift_unknownObjectRelease(),
        !v9)
    || ((swift_getObjCClassMetadata(),
         sub_1B618(0, (unint64_t *)&qword_A2F60),
         (uint64_t v10 = swift_dynamicCastMetatype()) != 0)
      ? (BOOL v11 = v8 == 0)
      : (BOOL v11 = 1),
        v11))
  {
    if (qword_A2C20 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_76200();
    sub_1A620(v12, (uint64_t)qword_A6A58);
    uint64_t v13 = sub_761F0();
    os_log_type_t v14 = sub_76DC0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_0, v13, v14, "Could not load TV usageBundle properly", v15, 2u);
      swift_slowDealloc();
      uint64_t v16 = v4;
    }
    else
    {
      uint64_t v16 = v13;
      uint64_t v13 = v4;
    }

    swift_unknownObjectRelease();
    goto LABEL_22;
  }
  uint64_t v18 = v10;
  [v8 totalSize];
  float v20 = v19;
  if ((~LODWORD(v19) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v19 <= -9.2234e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v19 >= 9.2234e18)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    swift_once();
LABEL_29:
    uint64_t v21 = sub_76200();
    sub_1A620(v21, (uint64_t)qword_A6A58);
    NSString v22 = sub_761F0();
    os_log_type_t v23 = sub_76DB0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 134217984;
      v73[0] = v20;
      sub_76E20();
      _os_log_impl(&dword_0, v22, v23, "Skipping TV recommendation with size %f", v24, 0xCu);
      swift_slowDealloc();

      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
LABEL_22:
    sub_1B478((uint64_t)v49);
    goto LABEL_23;
  }
  if ((uint64_t)v19 < 1000)
  {
    if (qword_A2C20 == -1) {
      goto LABEL_29;
    }
    goto LABEL_38;
  }
  uint64_t v47 = (uint64_t)v19;
  NSString v25 = sub_76BE0();
  char v26 = MGGetBoolAnswer();

  uint64_t v48 = v18;
  if ((v26 & 1) == 0)
  {
    NSString v27 = sub_76BE0();
    MGGetBoolAnswer();
  }
  NSString v28 = sub_76BE0();
  NSString v29 = sub_76BE0();
  id v30 = STLocalizedString(v28);

  uint64_t v31 = sub_76C10();
  uint64_t v45 = v32;
  uint64_t v46 = v31;

  NSString v33 = sub_76BE0();
  NSString v34 = sub_76BE0();
  id v35 = STLocalizedString(v33);

  uint64_t v36 = sub_76C10();
  uint64_t v38 = v37;

  uint64_t v39 = sub_76C10();
  uint64_t v41 = v40;
  uint64_t v42 = sub_76C10();
  uint64_t v44 = v43;

  swift_unknownObjectRelease();
  strcpy((char *)v49, "iTunesVideos");
  HIBYTE(v49[6]) = 0;
  v49[7] = -5120;
  uint64_t v50 = v39;
  uint64_t v51 = v41;
  uint64_t v52 = v46;
  uint64_t v53 = v45;
  uint64_t v54 = v42;
  uint64_t v55 = v44;
  char v56 = 0;
  uint64_t v57 = v42;
  uint64_t v58 = v44;
  uint64_t v59 = v36;
  uint64_t v60 = v38;
  uint64_t v61 = v47;
  long long v62 = 0u;
  long long v63 = 0u;
  char v64 = 0;
  uint64_t v65 = v48;
  uint64_t v66 = 0;
  uint64_t v67 = 0;
  uint64_t v68 = 0;
  char v69 = 1;
  uint64_t v70 = 0;
  uint64_t v71 = 0;
  char v72 = 0;
  nullsub_1(v49);
  swift_bridgeObjectRetain();
LABEL_23:
  sub_1B4A0((uint64_t)v49, (uint64_t)v73);
  return sub_1B4A0((uint64_t)v73, a1);
}

id sub_1B064@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [a1 representedApp];
  uint64_t v4 = sub_76C10();
  uint64_t v27 = v5;
  uint64_t v28 = v4;

  id v6 = [a1 title];
  uint64_t v26 = sub_76C10();
  uint64_t v8 = v7;

  id v9 = [a1 representedApp];
  uint64_t v10 = sub_76C10();
  uint64_t v12 = v11;

  swift_bridgeObjectRetain();
  id v13 = [a1 message];
  uint64_t v14 = sub_76C10();
  uint64_t v16 = v15;

  id v17 = [a1 expectedSize];
  NSString v18 = sub_76BE0();
  NSString v19 = sub_76BE0();
  id v20 = STLocalizedString(v18);

  uint64_t v21 = sub_76C10();
  uint64_t v23 = v22;

  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a1;
  *(void *)a2 = 1936744813;
  *(void *)(a2 + 8) = 0xE400000000000000;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v27;
  *(void *)(a2 + 32) = v26;
  *(void *)(a2 + 40) = v8;
  *(void *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = v12;
  *(unsigned char *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = v10;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = v14;
  *(void *)(a2 + 96) = v16;
  *(void *)(a2 + 104) = v17;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(unsigned char *)(a2 + 144) = 0;
  *(void *)(a2 + 152) = 0;
  *(void *)(a2 + 160) = v21;
  *(void *)(a2 + 168) = v23;
  *(void *)(a2 + 176) = 0;
  *(unsigned char *)(a2 + 184) = 1;
  *(void *)(a2 + 192) = &unk_A2F50;
  *(void *)(a2 + 200) = v24;
  *(unsigned char *)(a2 + 208) = 0;

  return a1;
}

uint64_t sub_1B284()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1B2BC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1B6BC;
  v3[4] = v2;
  return _swift_task_switch(sub_18D68, 0, 0);
}

void sub_1B368(uint64_t a1)
{
  sub_18FA0(a1, *(void **)(v1 + 16));
}

uint64_t sub_1B370()
{
  uint64_t v1 = sub_14F50((uint64_t *)&unk_A2F20);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1B404(uint64_t a1)
{
  sub_14F50((uint64_t *)&unk_A2F20);

  return sub_19148(a1);
}

double sub_1B478(uint64_t a1)
{
  *(unsigned char *)(a1 + 208) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_1B4A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A2F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for RecommendationStatus(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)double result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for RecommendationStatus(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RecommendationStatus(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)double result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)double result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1B574(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B590(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)double result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationStatus()
{
  return &type metadata for RecommendationStatus;
}

unint64_t sub_1B5C4()
{
  unint64_t result = qword_A2FD0;
  if (!qword_A2FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A2FD0);
  }
  return result;
}

uint64_t sub_1B618(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1B654()
{
  unint64_t result = qword_A2FF8;
  if (!qword_A2FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A2FF8);
  }
  return result;
}

uint64_t sub_1B6C0(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *(void *)a1 = *a2;
    a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v11 = (void *)a2[9];
    uint64_t v10 = a2[10];
    *(void *)(a1 + 72) = v11;
    uint64_t v12 = a2[11];
    unsigned __int8 v13 = *((unsigned char *)a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v11;
    sub_16F10(v10, v12, v13);
    *(void *)(a1 + 80) = v10;
    *(void *)(a1 + 88) = v12;
    *(unsigned char *)(a1 + 96) = v13;
    uint64_t v15 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v15;
    *(void *)(a1 + 120) = a2[15];
    *(_DWORD *)(a1 + 128) = *((_DWORD *)a2 + 32);
    *(_WORD *)(a1 + 132) = *((_WORD *)a2 + 66);
    uint64_t v16 = a3[18];
    __dst = (void *)(a1 + v16);
    id v17 = (char *)a2 + v16;
    uint64_t v18 = sub_76070();
    uint64_t v19 = *(void *)(v18 - 8);
    id v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20(v17, 1, v18))
    {
      uint64_t v21 = sub_14F50(&qword_A3000);
      memcpy(__dst, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v19 + 16))(__dst, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    uint64_t v23 = a3[19];
    uint64_t v24 = a3[20];
    NSString v25 = (void *)(a1 + v23);
    uint64_t v26 = (uint64_t *)((char *)a2 + v23);
    uint64_t v27 = v26[1];
    *NSString v25 = *v26;
    v25[1] = v27;
    *(void *)(a1 + v24) = *(uint64_t *)((char *)a2 + v24);
    *(void *)(a1 + a3[21]) = *(uint64_t *)((char *)a2 + a3[21]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1B910(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_16FDC(*(void *)(a1 + 80), *(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 72);
  uint64_t v5 = sub_76070();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v10 = *(void **)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(a2 + 88);
  unsigned __int8 v12 = *(unsigned char *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v10;
  sub_16F10(v9, v11, v12);
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 96) = v12;
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v14;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_WORD *)(a1 + 132) = *(_WORD *)(a2 + 132);
  uint64_t v15 = a3[18];
  __dst = (void *)(a1 + v15);
  uint64_t v16 = (const void *)(a2 + v15);
  uint64_t v17 = sub_76070();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = sub_14F50(&qword_A3000);
    memcpy(__dst, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(__dst, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
  }
  uint64_t v21 = a3[19];
  uint64_t v22 = a3[20];
  uint64_t v23 = (void *)(a1 + v21);
  uint64_t v24 = (void *)(a2 + v21);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC24(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void **)(a1 + 72);
  uint64_t v7 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v7;
  id v8 = v7;

  uint64_t v9 = *(void *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 88);
  unsigned __int8 v11 = *(unsigned char *)(a2 + 96);
  sub_16F10(v9, v10, v11);
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 88);
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v10;
  unsigned __int8 v14 = *(unsigned char *)(a1 + 96);
  *(unsigned char *)(a1 + 96) = v11;
  sub_16FDC(v12, v13, v14);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  *(unsigned char *)(a1 + 131) = *(unsigned char *)(a2 + 131);
  *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
  *(unsigned char *)(a1 + 133) = *(unsigned char *)(a2 + 133);
  uint64_t v15 = a3[18];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = sub_76070();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    uint64_t v23 = sub_14F50(&qword_A3000);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_7:
  uint64_t v24 = a3[19];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BF18(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_WORD *)(a1 + 132) = *(_WORD *)(a2 + 132);
  uint64_t v10 = a3[18];
  unsigned __int8 v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_76070();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_14F50(&qword_A3000);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_1C094(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v9 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  char v10 = *(unsigned char *)(a2 + 96);
  uint64_t v11 = *(void *)(a1 + 80);
  uint64_t v12 = *(void *)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  unsigned __int8 v13 = *(unsigned char *)(a1 + 96);
  *(unsigned char *)(a1 + 96) = v10;
  sub_16FDC(v11, v12, v13);
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  *(unsigned char *)(a1 + 131) = *(unsigned char *)(a2 + 131);
  *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
  *(unsigned char *)(a1 + 133) = *(unsigned char *)(a2 + 133);
  uint64_t v15 = a3[18];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = sub_76070();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v16, v17, v18);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    uint64_t v23 = sub_14F50(&qword_A3000);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_7:
  uint64_t v24 = a3[19];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[21];
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1C31C);
}

uint64_t sub_1C31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_14F50(&qword_A3000);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 72);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1C3E4);
}

uint64_t sub_1C3E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_14F50(&qword_A3000);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 72);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for Application()
{
  uint64_t result = qword_A3060;
  if (!qword_A3060) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C4DC()
{
  sub_1C5D4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1C5D4()
{
  if (!qword_A3070)
  {
    sub_76070();
    unint64_t v0 = sub_76E10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_A3070);
    }
  }
}

BOOL sub_1C62C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_1C644()
{
  sub_770D0(*v0);
}

Swift::Int sub_1C674()
{
  Swift::UInt v1 = *v0;
  sub_770C0();
  sub_770D0(v1);
  return sub_77100();
}

Swift::Int sub_1C6BC()
{
  Swift::UInt v1 = *v0;
  sub_770C0();
  sub_770D0(v1);
  return sub_77100();
}

unint64_t sub_1C700()
{
  sub_14F50(&qword_A30E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_7CA00;
  *(void *)(inited + 32) = 0xD00000000000002DLL;
  *(void *)(inited + 40) = 0x8000000000085DA0;
  NSString v1 = sub_76BE0();
  NSString v2 = sub_76BE0();
  id v3 = STLocalizedString(v1);

  uint64_t v4 = sub_76C10();
  uint64_t v6 = v5;

  *(void *)(inited + 48) = v4;
  *(void *)(inited + 56) = v6;
  unint64_t result = sub_275AC(inited);
  qword_A6A48 = result;
  return result;
}

uint64_t sub_1C7F8@<X0>(uint64_t a1@<X8>)
{
  NSString v2 = v1;
  v39[1] = a1;
  uint64_t v3 = type metadata accessor for Application();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)v39 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)v39 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v39 - v13;
  if (qword_A2C38 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_A6AC0;
  if (*(void *)(qword_A6AC0 + 16))
  {
    uint64_t v16 = *v2;
    uint64_t v17 = v2[1];
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_4BC5C(v16, v17);
    if (v19)
    {
      uint64_t v20 = (long long *)(*(void *)(v15 + 56) + 144 * v18);
      long long v21 = v20[7];
      long long v46 = v20[6];
      long long v47 = v21;
      long long v48 = v20[8];
      long long v22 = v20[3];
      long long v42 = v20[2];
      long long v43 = v22;
      long long v23 = v20[5];
      long long v44 = v20[4];
      long long v45 = v23;
      long long v24 = v20[1];
      long long v40 = *v20;
      long long v41 = v24;
      swift_bridgeObjectRelease();
      v50[6] = v46;
      v50[7] = v47;
      v50[8] = v48;
      v50[2] = v42;
      v50[3] = v43;
      v50[4] = v44;
      v50[5] = v45;
      v50[0] = v40;
      v50[1] = v41;
      nullsub_1(v50);
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
  }
  sub_23578(v50);
LABEL_8:
  sub_23594((uint64_t)v50, (uint64_t)v51);
  sub_22680((uint64_t)v2, (uint64_t)v14);
  sub_23594((uint64_t)v51, (uint64_t)v50);
  if (sub_235FC((uint64_t)v50) != 1)
  {
    sub_226E4((uint64_t)v14);
    sub_22680((uint64_t)v2, (uint64_t)v12);
    goto LABEL_13;
  }
  uint64_t v25 = *(void *)(*((void *)v14 + 15) + 16);
  sub_226E4((uint64_t)v14);
  sub_22680((uint64_t)v2, (uint64_t)v12);
  if (v25)
  {
LABEL_13:
    sub_226E4((uint64_t)v12);
    sub_22680((uint64_t)v2, (uint64_t)v9);
    goto LABEL_14;
  }
  uint64_t v26 = v12[133];
  sub_226E4((uint64_t)v12);
  sub_22680((uint64_t)v2, (uint64_t)v9);
  if ((v26 & 1) == 0)
  {
    sub_226E4((uint64_t)v9);
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v27 = *(void *)&v9[*(int *)(v3 + 80)];
  sub_226E4((uint64_t)v9);
  if (!v27)
  {
    sub_22680((uint64_t)v2, (uint64_t)v6);
    uint64_t v32 = (objc_class *)type metadata accessor for AppDetailViewWrapper();
    id v33 = objc_allocWithZone(v32);
    sub_22680((uint64_t)v6, (uint64_t)v33 + OBJC_IVAR____TtC17StorageSettingsUI20AppDetailViewWrapper_model);
    v49.receiver = v33;
    v49.super_class = v32;
    objc_msgSendSuper2(&v49, "initWithNibName:bundle:", 0, 0);
    sub_226E4((uint64_t)v6);
    return sub_76130();
  }
LABEL_15:
  uint64_t v28 = (void *)v2[9];
  uint64_t v29 = v2[6];
  uint64_t v30 = v2[7];
  if (*(uint64_t *)((char *)v2 + *(int *)(v3 + 80))) {
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  }
  else {
    ObjCClassFromMetadata = (objc_class *)STStorageAppDetailController;
  }
  id v34 = objc_allocWithZone(ObjCClassFromMetadata);
  id v35 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v36 = sub_76BE0();
  swift_bridgeObjectRelease();
  NSString v37 = sub_76BE0();
  swift_bridgeObjectRelease();
  [v34 initWithAppRecord:v35 bundleIdentifier:v36 name:v37 appSize:v29 dataSize:v30];

  return sub_76130();
}

BOOL sub_1CBB8()
{
  return sub_76E60() == -1;
}

BOOL sub_1CC18(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 48);
  uint64_t v3 = *(void *)(result + 56);
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  if (v2 == v4 && v3 == v5)
  {
    sub_15038();
    return sub_76E60() == -1;
  }
  else
  {
    BOOL v7 = __OFADD__(v4, v5);
    uint64_t v8 = v4 + v5;
    if (v7)
    {
      __break(1u);
    }
    else
    {
      BOOL v7 = __OFADD__(v2, v3);
      uint64_t v9 = v2 + v3;
      if (!v7) {
        return v8 < v9;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1CCB0(void *a1, void *a2)
{
  uint64_t v4 = sub_76070();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v61 = &v57[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __chkstk_darwin(v6);
  char v64 = &v57[-v9];
  __chkstk_darwin(v8);
  long long v62 = &v57[-v10];
  uint64_t v11 = sub_14F50(&qword_A3148);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = &v57[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_14F50(&qword_A3000);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  long long v63 = &v57[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v68 = &v57[-v19];
  uint64_t v20 = __chkstk_darwin(v18);
  long long v22 = &v57[-v21];
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = &v57[-v24];
  __chkstk_darwin(v23);
  uint64_t v27 = &v57[-v26];
  uint64_t v28 = type metadata accessor for Application();
  uint64_t v29 = *(int *)(v28 + 72);
  uint64_t v65 = a1;
  uint64_t v67 = (uint64_t)a1 + v29;
  sub_23614((uint64_t)a1 + v29, (uint64_t)v27);
  uint64_t v30 = *(int *)(v28 + 72);
  uint64_t v66 = a2;
  uint64_t v31 = (uint64_t)a2 + v30;
  sub_23614((uint64_t)a2 + v30, (uint64_t)v25);
  uint64_t v32 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_23614((uint64_t)v27, (uint64_t)v14);
  sub_23614((uint64_t)v25, v32);
  id v33 = (unsigned int (*)(unsigned char *, uint64_t, uint64_t))v5[6];
  if (v33(v14, 1, v4) != 1)
  {
    sub_23614((uint64_t)v14, (uint64_t)v22);
    if (v33((unsigned char *)v32, 1, v4) != 1)
    {
      id v35 = (void (*)(unsigned char *, uint64_t, uint64_t))v5[4];
      uint64_t v59 = v31;
      NSString v36 = v62;
      v35(v62, v32, v4);
      sub_2367C(&qword_A3150, (void (*)(uint64_t))&type metadata accessor for Date);
      int v58 = sub_76B80();
      uint64_t v60 = v5;
      NSString v37 = (void (*)(unsigned char *, uint64_t))v5[1];
      uint64_t v38 = v36;
      uint64_t v31 = v59;
      v37(v38, v4);
      sub_151A8((uint64_t)v25, &qword_A3000);
      sub_151A8((uint64_t)v27, &qword_A3000);
      v37(v22, v4);
      uint64_t result = sub_151A8((uint64_t)v14, &qword_A3000);
      if (v58) {
        goto LABEL_8;
      }
LABEL_11:
      long long v46 = v68;
      sub_23614(v67, (uint64_t)v68);
      if (v33(v46, 1, v4) == 1)
      {
        sub_151A8((uint64_t)v46, &qword_A3000);
        char v45 = 0;
      }
      else
      {
        long long v47 = v60;
        long long v48 = (void (*)(unsigned char *, unsigned char *, uint64_t))v60[4];
        objc_super v49 = v64;
        v48(v64, v46, v4);
        uint64_t v50 = v31;
        uint64_t v51 = v63;
        sub_23614(v50, (uint64_t)v63);
        if (v33(v51, 1, v4) == 1)
        {
          ((void (*)(unsigned char *, uint64_t))v47[1])(v49, v4);
          sub_151A8((uint64_t)v51, &qword_A3000);
          char v45 = 1;
        }
        else
        {
          uint64_t v55 = v61;
          v48(v61, v51, v4);
          char v45 = sub_76030();
          char v56 = (void (*)(unsigned char *, uint64_t))v47[1];
          v56(v55, v4);
          v56(v49, v4);
        }
      }
      return v45 & 1;
    }
    sub_151A8((uint64_t)v25, &qword_A3000);
    sub_151A8((uint64_t)v27, &qword_A3000);
    ((void (*)(unsigned char *, uint64_t))v5[1])(v22, v4);
LABEL_6:
    uint64_t v60 = v5;
    sub_151A8((uint64_t)v14, &qword_A3148);
    goto LABEL_11;
  }
  sub_151A8((uint64_t)v25, &qword_A3000);
  sub_151A8((uint64_t)v27, &qword_A3000);
  if (v33((unsigned char *)v32, 1, v4) != 1) {
    goto LABEL_6;
  }
  uint64_t result = sub_151A8((uint64_t)v14, &qword_A3000);
LABEL_8:
  uint64_t v39 = v65[6];
  uint64_t v40 = v65[7];
  uint64_t v41 = v66[6];
  uint64_t v42 = v66[7];
  if (v39 == v41 && v40 == v42)
  {
    uint64_t v43 = v65[3];
    uint64_t v71 = v65[2];
    uint64_t v72 = v43;
    uint64_t v44 = v66[3];
    uint64_t v69 = v66[2];
    uint64_t v70 = v44;
    sub_15038();
    char v45 = sub_76E60() == -1;
    return v45 & 1;
  }
  BOOL v52 = __OFADD__(v41, v42);
  uint64_t v53 = v41 + v42;
  if (v52)
  {
    __break(1u);
  }
  else
  {
    BOOL v52 = __OFADD__(v39, v40);
    uint64_t v54 = v39 + v40;
    if (!v52)
    {
      char v45 = v53 < v54;
      return v45 & 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  *(unsigned char *)(v5 + 193) = a5;
  *(unsigned char *)(v5 + 192) = a4;
  *(void *)(v5 + 48) = a2;
  *(void *)(v5 + 56) = a3;
  *(void *)(v5 + 40) = a1;
  uint64_t v6 = sub_76B90();
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 72) = *(void *)(v6 - 8);
  *(void *)(v5 + 80) = swift_task_alloc();
  sub_14F50(&qword_A3530);
  *(void *)(v5 + 88) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Application();
  *(void *)(v5 + 96) = v7;
  *(void *)(v5 + 104) = *(void *)(v7 - 8);
  *(void *)(v5 + 112) = swift_task_alloc();
  *(void *)(v5 + 120) = swift_task_alloc();
  *(void *)(v5 + 128) = swift_task_alloc();
  *(void *)(v5 + 136) = swift_task_alloc();
  return _swift_task_switch(sub_1D448, 0, 0);
}

uint64_t sub_1D448()
{
  uint64_t v117 = v0;
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_4C0D0(v1);
  swift_bridgeObjectRelease();
  v116 = v2;
  sub_21468((uint64_t *)&v116);
  uint64_t v3 = v116;
  *(void *)(v0 + 144) = v116;
  uint64_t v4 = v3[2];
  *(void *)(v0 + 152) = v4;
  if (v4)
  {
    *(void *)(v0 + 160) = 0;
    *(void *)(v0 + 168) = _swiftEmptyArrayStorage;
    uint64_t v6 = v3[4];
    uint64_t v5 = v3[5];
    *(void *)(v0 + 176) = v5;
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_task_alloc();
    *(void *)(v0 + 184) = v7;
    *(void *)uint64_t v7 = v0;
    *(void *)(v7 + 8) = sub_1DF04;
    uint64_t v8 = *(void *)(v0 + 88);
    uint64_t v9 = *(void *)(v0 + 56);
    *(_WORD *)(v7 + 336) = *(_WORD *)(v0 + 192);
    *(void *)(v7 + 192) = v5;
    *(void *)(v7 + 200) = v9;
    *(void *)(v7 + 176) = v8;
    *(void *)(v7 + 184) = v6;
    uint64_t v10 = sub_1EB98;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    return _swift_task_switch(v10, v11, v12);
  }
  swift_release();
  int64_t v13 = _swiftEmptyArrayStorage[2];
  if (!v13) {
    goto LABEL_15;
  }
  uint64_t v14 = *(void *)(v0 + 120);
  uint64_t v15 = *(void *)(v0 + 104);
  v116 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  sub_36430(0, v13, 0);
  uint64_t v16 = (char *)_swiftEmptyArrayStorage
      + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v110 = v0;
  id v111 = *(id *)(v15 + 72);
  uint64_t v17 = v116;
  uint64_t v108 = (uint64_t)v16;
  do
  {
    uint64_t v18 = *(void *)(v0 + 120);
    sub_22680((uint64_t)v16, v18);
    uint64_t v19 = *(void *)(v14 + 80);
    uint64_t v20 = *(void *)(v14 + 88);
    unsigned __int8 v21 = *(unsigned char *)(v14 + 96);
    uint64_t v22 = *(void *)(v14 + 112);
    uint64_t v114 = *(void *)(v14 + 104);
    sub_16F10(v19, v20, v21);
    swift_bridgeObjectRetain();
    sub_226E4(v18);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_36430(0, v17[2] + 1, 1);
      uint64_t v24 = v116;
    }
    unint64_t v26 = v24[2];
    unint64_t v25 = v24[3];
    if (v26 >= v25 >> 1)
    {
      sub_36430(v25 > 1, v26 + 1, 1);
      uint64_t v24 = v116;
    }
    v24[2] = v26 + 1;
    uint64_t v27 = &v24[5 * v26];
    v27[4] = v19;
    v27[5] = v20;
    *((unsigned char *)v27 + 48) = v21;
    v27[7] = v114;
    v27[8] = v22;
    uint64_t v0 = v110;
    uint64_t v16 = (char *)v111 + (void)v16;
    --v13;
    uint64_t v17 = v24;
  }
  while (v13);
  v115 = v24;
  swift_bridgeObjectRelease();
  int64_t v28 = _swiftEmptyArrayStorage[2];
  if (v28)
  {
    if (v28 != 1)
    {
      uint64_t v38 = *(void *)(v110 + 120);
      v116 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_36410(0, v28, 0);
      uint64_t v39 = v116;
      uint64_t v40 = v108;
      do
      {
        uint64_t v41 = *(uint64_t **)(v110 + 120);
        sub_22680(v40, (uint64_t)v41);
        uint64_t v42 = *v41;
        uint64_t v43 = *(void *)(v38 + 8);
        swift_bridgeObjectRetain();
        sub_226E4((uint64_t)v41);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_36410(0, v39[2] + 1, 1);
          uint64_t v39 = v116;
        }
        unint64_t v45 = v39[2];
        unint64_t v44 = v39[3];
        if (v45 >= v44 >> 1)
        {
          sub_36410(v44 > 1, v45 + 1, 1);
          uint64_t v39 = v116;
        }
        void v39[2] = v45 + 1;
        long long v46 = &v39[2 * v45];
        v46[4] = v42;
        v46[5] = v43;
        v40 += (uint64_t)v111;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
      uint64_t v47 = _swiftEmptyArrayStorage[2];
      if (v47)
      {
        uint64_t v48 = *(void *)(v110 + 112);
        objc_super v49 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain_n();
        uint64_t v50 = v108;
        do
        {
          sub_22680(v50, *(void *)(v110 + 112));
          uint64_t v52 = *(void *)(v48 + 32);
          unint64_t v51 = *(void *)(v48 + 40);
          uint64_t v53 = HIBYTE(v51) & 0xF;
          if ((v51 & 0x2000000000000000) == 0) {
            uint64_t v53 = v52 & 0xFFFFFFFFFFFFLL;
          }
          uint64_t v54 = *(void *)(v110 + 112);
          if (v53)
          {
            swift_bridgeObjectRetain();
            sub_226E4(v54);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              objc_super v49 = sub_4B54C(0, v49[2] + 1, 1, v49);
            }
            unint64_t v56 = v49[2];
            unint64_t v55 = v49[3];
            if (v56 >= v55 >> 1) {
              objc_super v49 = sub_4B54C((void *)(v55 > 1), v56 + 1, 1, v49);
            }
            v49[2] = v56 + 1;
            uint64_t v57 = &v49[2 * v56];
            v57[4] = v52;
            v57[5] = v51;
          }
          else
          {
            sub_226E4(*(void *)(v110 + 112));
          }
          v50 += (uint64_t)v111;
          --v47;
        }
        while (v47);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        objc_super v49 = _swiftEmptyArrayStorage;
      }
      uint64_t v59 = *(void *)(v110 + 72);
      uint64_t v58 = *(void *)(v110 + 80);
      uint64_t v60 = *(void *)(v110 + 64);
      uint64_t v61 = sub_22D04((uint64_t)v49);
      swift_bridgeObjectRelease();
      *(void *)(v110 + 16) = v61;
      sub_75FA0();
      sub_14F50(&qword_A30F8);
      sub_1508C(&qword_A3100, &qword_A30F8);
      sub_2367C(&qword_A3108, (void (*)(uint64_t))&type metadata accessor for String.Comparator);
      sub_76C80();
      v103 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
      v103(v58, v60);
      swift_bridgeObjectRelease();
      int64_t v62 = _swiftEmptyArrayStorage[2];
      if (v62)
      {
        uint64_t v63 = *(void *)(v110 + 120);
        v116 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_36410(0, v62, 0);
        uint64_t v64 = v108;
        do
        {
          uint64_t v65 = *(void *)(v110 + 120);
          sub_22680(v64, v65);
          uint64_t v67 = *(void *)(v63 + 16);
          uint64_t v66 = *(void *)(v63 + 24);
          swift_bridgeObjectRetain();
          sub_226E4(v65);
          uint64_t v68 = v116;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_36410(0, v68[2] + 1, 1);
            uint64_t v68 = v116;
          }
          unint64_t v70 = v68[2];
          unint64_t v69 = v68[3];
          if (v70 >= v69 >> 1)
          {
            sub_36410(v69 > 1, v70 + 1, 1);
            uint64_t v68 = v116;
          }
          v68[2] = v70 + 1;
          uint64_t v71 = &v68[2 * v70];
          v71[4] = v67;
          v71[5] = v66;
          v64 += (uint64_t)v111;
          --v62;
        }
        while (v62);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v68 = _swiftEmptyArrayStorage;
      }
      uint64_t v72 = *(void *)(v110 + 80);
      uint64_t v73 = *(void *)(v110 + 64);
      id v112 = *(id *)(v110 + 56);
      uint64_t v74 = sub_22D04((uint64_t)v68);
      swift_bridgeObjectRelease();
      *(void *)(v110 + 24) = v74;
      sub_75FA0();
      sub_76C80();
      v103(v72, v73);
      swift_bridgeObjectRelease();
      uint64_t v75 = self;
      Class isa = sub_76CB0().super.isa;
      swift_bridgeObjectRelease();
      id v77 = [v75 localizedStringByJoiningStrings:isa];

      uint64_t v78 = sub_76C10();
      v80 = v79;

      Class v81 = sub_76CB0().super.isa;
      swift_bridgeObjectRelease();
      id v82 = [v75 localizedStringByJoiningStrings:v81];

      uint64_t v109 = sub_76C10();
      uint64_t v106 = v83;

      *(void *)(v110 + 32) = v39;
      sub_14F50(&qword_A3110);
      sub_1508C((unint64_t *)&qword_A3118, &qword_A3110);
      uint64_t v84 = sub_76B70();
      uint64_t v86 = v85;
      swift_release();
      uint64_t v10 = (uint64_t (*)())[v112 fixedSize];
      if (((unint64_t)v10 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v87 = v10;
        id v113 = v80;
        uint64_t v107 = v78;
        uint64_t v10 = (uint64_t (*)())[*(id *)(v110 + 56) dataSize];
        if (((unint64_t)v10 & 0x8000000000000000) == 0)
        {
          v88 = v10;
          v90 = *(int **)(v110 + 96);
          uint64_t v89 = *(void *)(v110 + 104);
          char v105 = *(unsigned char *)(v110 + 193);
          char v104 = *(unsigned char *)(v110 + 192);
          uint64_t v91 = *(void *)(v110 + 40);
          uint64_t v92 = v91 + v90[18];
          uint64_t v93 = sub_76070();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v92, 1, 1, v93);
          swift_bridgeObjectRetain();
          NSString v94 = sub_76BE0();
          NSString v95 = sub_76BE0();
          id v96 = STLocalizedString(v94);

          uint64_t v97 = sub_76C10();
          uint64_t v99 = v98;

          *(void *)uint64_t v91 = v84;
          *(void *)(v91 + 8) = v86;
          *(void *)(v91 + 16) = v107;
          *(void *)(v91 + 24) = v113;
          *(void *)(v91 + 32) = v109;
          *(void *)(v91 + 40) = v106;
          *(void *)(v91 + 48) = v87;
          *(void *)(v91 + 56) = v88;
          *(unsigned char *)(v91 + 64) = 0;
          *(void *)(v91 + 72) = 0;
          *(void *)(v91 + 80) = v115;
          *(void *)(v91 + 88) = 0;
          *(unsigned char *)(v91 + 96) = 2;
          *(void *)(v91 + 104) = v84;
          *(void *)(v91 + 112) = v86;
          *(void *)(v91 + 120) = _swiftEmptyArrayStorage;
          *(_WORD *)(v91 + 128) = 0;
          *(unsigned char *)(v91 + 130) = v104;
          *(unsigned char *)(v91 + 131) = v105;
          *(_WORD *)(v91 + 132) = 0;
          v100 = (uint64_t *)(v91 + v90[19]);
          uint64_t *v100 = v97;
          v100[1] = v99;
          uint64_t v0 = v110;
          *(void *)(v91 + v90[20]) = 0;
          *(void *)(v91 + v90[21]) = _swiftEmptyArrayStorage;
          uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v89 + 56);
          uint64_t v33 = v91;
          uint64_t v34 = 0;
          NSString v37 = v90;
          goto LABEL_49;
        }
      }
      __break(1u);
      return _swift_task_switch(v10, v11, v12);
    }
    uint64_t v29 = *(int **)(v110 + 96);
    uint64_t v30 = *(void *)(v110 + 104);
    uint64_t v31 = *(void *)(v110 + 40);
    sub_22680(v108, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v30 + 56);
    uint64_t v33 = v31;
    uint64_t v34 = 0;
  }
  else
  {
LABEL_15:
    uint64_t v29 = *(int **)(v0 + 96);
    uint64_t v35 = *(void *)(v0 + 104);
    uint64_t v36 = *(void *)(v0 + 40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v35 + 56);
    uint64_t v33 = v36;
    uint64_t v34 = 1;
  }
  NSString v37 = v29;
LABEL_49:
  v32(v33, v34, 1, v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v101 = *(uint64_t (**)(void))(v0 + 8);
  return v101();
}

uint64_t sub_1DF04()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1E01C, 0, 0);
}

uint64_t sub_1E01C()
{
  uint64_t v1 = *(void *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 104) + 48))(v1, 1, *(void *)(v0 + 96)) == 1)
  {
    sub_151A8(v1, &qword_A3530);
    unint64_t v2 = *(void *)(v0 + 168);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v3 = *(void *)(v0 + 136);
    sub_22D9C(v1, v3);
    sub_22680(v3, v4);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v2 = *(void *)(v0 + 168);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v2 = sub_4B528(0, *(void *)(v2 + 16) + 1, 1, *(void *)(v0 + 168));
    }
    unint64_t v7 = *(void *)(v2 + 16);
    unint64_t v6 = *(void *)(v2 + 24);
    if (v7 >= v6 >> 1) {
      unint64_t v2 = sub_4B528(v6 > 1, v7 + 1, 1, v2);
    }
    uint64_t v8 = *(void *)(v0 + 128);
    uint64_t v9 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 104);
    *(void *)(v2 + 16) = v7 + 1;
    sub_22D9C(v8, v2+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v7);
    sub_226E4(v9);
  }
  uint64_t v11 = *(void *)(v0 + 160) + 1;
  if (v11 != *(void *)(v0 + 152))
  {
    *(void *)(v0 + 160) = v11;
    *(void *)(v0 + 168) = v2;
    uint64_t v27 = *(void *)(v0 + 144) + 16 * v11;
    uint64_t v29 = *(void *)(v27 + 32);
    uint64_t v28 = *(void *)(v27 + 40);
    *(void *)(v0 + 176) = v28;
    swift_bridgeObjectRetain();
    uint64_t v30 = swift_task_alloc();
    *(void *)(v0 + 184) = v30;
    *(void *)uint64_t v30 = v0;
    *(void *)(v30 + 8) = sub_1DF04;
    uint64_t v31 = *(void *)(v0 + 88);
    uint64_t v32 = *(void *)(v0 + 56);
    *(_WORD *)(v30 + 336) = *(_WORD *)(v0 + 192);
    *(void *)(v30 + 192) = v28;
    *(void *)(v30 + 200) = v32;
    *(void *)(v30 + 176) = v31;
    *(void *)(v30 + 184) = v29;
    uint64_t v33 = sub_1EB98;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    return _swift_task_switch(v33, v34, v35);
  }
  swift_release();
  int64_t v12 = *(void *)(v2 + 16);
  if (!v12) {
    goto LABEL_23;
  }
  uint64_t v13 = *(void *)(v0 + 120);
  uint64_t v14 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  sub_36430(0, v12, 0);
  unint64_t v117 = v2;
  uint64_t v118 = v0;
  uint64_t v15 = v2 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  id v119 = *(id *)(v14 + 72);
  uint64_t v16 = _swiftEmptyArrayStorage;
  uint64_t v115 = v15;
  do
  {
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)(v0 + 120);
    sub_22680(v15, v18);
    uint64_t v19 = *(void *)(v13 + 80);
    uint64_t v20 = *(void *)(v13 + 88);
    unsigned __int8 v21 = *(unsigned char *)(v13 + 96);
    uint64_t v22 = *(void *)(v13 + 112);
    uint64_t v122 = *(void *)(v13 + 104);
    sub_16F10(v19, v20, v21);
    swift_bridgeObjectRetain();
    uint64_t v23 = v18;
    uint64_t v16 = v17;
    sub_226E4(v23);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_36430(0, v17[2] + 1, 1);
      uint64_t v16 = _swiftEmptyArrayStorage;
    }
    unint64_t v25 = v16[2];
    unint64_t v24 = v16[3];
    if (v25 >= v24 >> 1)
    {
      sub_36430(v24 > 1, v25 + 1, 1);
      uint64_t v16 = _swiftEmptyArrayStorage;
    }
    v16[2] = v25 + 1;
    unint64_t v26 = &v16[5 * v25];
    v26[4] = v19;
    v26[5] = v20;
    *((unsigned char *)v26 + 48) = v21;
    v26[7] = v122;
    v26[8] = v22;
    uint64_t v0 = v118;
    v15 += (uint64_t)v119;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  int64_t v36 = *(void *)(v117 + 16);
  if (!v36)
  {
LABEL_23:
    NSString v37 = *(int **)(v0 + 96);
    uint64_t v43 = *(void *)(v0 + 104);
    uint64_t v44 = *(void *)(v0 + 40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v43 + 56);
    uint64_t v41 = v44;
    uint64_t v42 = 1;
    goto LABEL_24;
  }
  v123 = v16;
  if (v36 != 1)
  {
    uint64_t v46 = *(void *)(v118 + 120);
    swift_bridgeObjectRetain();
    sub_36410(0, v36, 0);
    uint64_t v47 = v115;
    do
    {
      uint64_t v48 = *(uint64_t **)(v118 + 120);
      sub_22680(v47, (uint64_t)v48);
      uint64_t v49 = *v48;
      uint64_t v50 = *(void *)(v46 + 8);
      swift_bridgeObjectRetain();
      sub_226E4((uint64_t)v48);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_36410(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v52 = _swiftEmptyArrayStorage[2];
      unint64_t v51 = _swiftEmptyArrayStorage[3];
      if (v52 >= v51 >> 1) {
        sub_36410(v51 > 1, v52 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v52 + 1;
      uint64_t v53 = &_swiftEmptyArrayStorage[2 * v52];
      v53[4] = v49;
      v53[5] = v50;
      v47 += (uint64_t)v119;
      --v36;
    }
    while (v36);
    unint64_t v54 = v117;
    swift_bridgeObjectRelease();
    uint64_t v55 = *(void *)(v117 + 16);
    if (v55)
    {
      uint64_t v56 = *(void *)(v118 + 112);
      swift_bridgeObjectRetain_n();
      uint64_t v57 = _swiftEmptyArrayStorage;
      uint64_t v58 = v115;
      do
      {
        sub_22680(v58, *(void *)(v118 + 112));
        uint64_t v60 = *(void *)(v56 + 32);
        unint64_t v59 = *(void *)(v56 + 40);
        uint64_t v61 = HIBYTE(v59) & 0xF;
        if ((v59 & 0x2000000000000000) == 0) {
          uint64_t v61 = v60 & 0xFFFFFFFFFFFFLL;
        }
        uint64_t v62 = *(void *)(v118 + 112);
        if (v61)
        {
          swift_bridgeObjectRetain();
          sub_226E4(v62);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v57 = sub_4B54C(0, v57[2] + 1, 1, v57);
          }
          unint64_t v64 = v57[2];
          unint64_t v63 = v57[3];
          if (v64 >= v63 >> 1) {
            uint64_t v57 = sub_4B54C((void *)(v63 > 1), v64 + 1, 1, v57);
          }
          v57[2] = v64 + 1;
          uint64_t v65 = &v57[2 * v64];
          v65[4] = v60;
          v65[5] = v59;
        }
        else
        {
          sub_226E4(*(void *)(v118 + 112));
        }
        v58 += (uint64_t)v119;
        --v55;
      }
      while (v55);
      unint64_t v54 = v117;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v57 = _swiftEmptyArrayStorage;
    }
    uint64_t v67 = *(void *)(v118 + 72);
    uint64_t v66 = *(void *)(v118 + 80);
    uint64_t v68 = *(void *)(v118 + 64);
    uint64_t v69 = sub_22D04((uint64_t)v57);
    swift_bridgeObjectRelease();
    *(void *)(v118 + 16) = v69;
    sub_75FA0();
    sub_14F50(&qword_A30F8);
    sub_1508C(&qword_A3100, &qword_A30F8);
    sub_2367C(&qword_A3108, (void (*)(uint64_t))&type metadata accessor for String.Comparator);
    sub_76C80();
    uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    v110(v66, v68);
    swift_bridgeObjectRelease();
    int64_t v70 = *(void *)(v54 + 16);
    if (v70)
    {
      uint64_t v71 = *(void *)(v118 + 120);
      swift_bridgeObjectRetain();
      sub_36410(0, v70, 0);
      uint64_t v72 = v115;
      do
      {
        uint64_t v73 = *(void *)(v118 + 120);
        sub_22680(v72, v73);
        uint64_t v75 = *(void *)(v71 + 16);
        uint64_t v74 = *(void *)(v71 + 24);
        swift_bridgeObjectRetain();
        sub_226E4(v73);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_36410(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v77 = _swiftEmptyArrayStorage[2];
        unint64_t v76 = _swiftEmptyArrayStorage[3];
        if (v77 >= v76 >> 1) {
          sub_36410(v76 > 1, v77 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v77 + 1;
        uint64_t v78 = &_swiftEmptyArrayStorage[2 * v77];
        v78[4] = v75;
        v78[5] = v74;
        v72 += (uint64_t)v119;
        --v70;
      }
      while (v70);
      swift_bridgeObjectRelease();
    }
    uint64_t v79 = *(void *)(v118 + 80);
    uint64_t v80 = *(void *)(v118 + 64);
    id v120 = *(id *)(v118 + 56);
    uint64_t v81 = sub_22D04((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    *(void *)(v118 + 24) = v81;
    sub_75FA0();
    sub_76C80();
    v110(v79, v80);
    swift_bridgeObjectRelease();
    id v82 = self;
    Class isa = sub_76CB0().super.isa;
    swift_bridgeObjectRelease();
    id v84 = [v82 localizedStringByJoiningStrings:isa];

    uint64_t v85 = sub_76C10();
    v87 = v86;

    Class v88 = sub_76CB0().super.isa;
    swift_bridgeObjectRelease();
    id v89 = [v82 localizedStringByJoiningStrings:v88];

    uint64_t v116 = sub_76C10();
    uint64_t v113 = v90;

    *(void *)(v118 + 32) = _swiftEmptyArrayStorage;
    sub_14F50(&qword_A3110);
    sub_1508C((unint64_t *)&qword_A3118, &qword_A3110);
    uint64_t v91 = sub_76B70();
    uint64_t v93 = v92;
    swift_release();
    uint64_t v33 = (uint64_t (*)())[v120 fixedSize];
    if (((unint64_t)v33 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      NSString v94 = v33;
      id v121 = v87;
      uint64_t v114 = v85;
      uint64_t v33 = (uint64_t (*)())[*(id *)(v118 + 56) dataSize];
      if (((unint64_t)v33 & 0x8000000000000000) == 0)
      {
        NSString v95 = v33;
        uint64_t v97 = *(int **)(v118 + 96);
        uint64_t v96 = *(void *)(v118 + 104);
        char v112 = *(unsigned char *)(v118 + 193);
        char v111 = *(unsigned char *)(v118 + 192);
        uint64_t v98 = *(void *)(v118 + 40);
        uint64_t v99 = v98 + v97[18];
        uint64_t v100 = sub_76070();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v99, 1, 1, v100);
        swift_bridgeObjectRetain();
        NSString v101 = sub_76BE0();
        NSString v102 = sub_76BE0();
        id v103 = STLocalizedString(v101);

        uint64_t v104 = sub_76C10();
        uint64_t v106 = v105;

        *(void *)uint64_t v98 = v91;
        *(void *)(v98 + 8) = v93;
        *(void *)(v98 + 16) = v114;
        *(void *)(v98 + 24) = v121;
        *(void *)(v98 + 32) = v116;
        *(void *)(v98 + 40) = v113;
        *(void *)(v98 + 48) = v94;
        *(void *)(v98 + 56) = v95;
        *(unsigned char *)(v98 + 64) = 0;
        *(void *)(v98 + 72) = 0;
        *(void *)(v98 + 80) = v123;
        *(void *)(v98 + 88) = 0;
        *(unsigned char *)(v98 + 96) = 2;
        *(void *)(v98 + 104) = v91;
        *(void *)(v98 + 112) = v93;
        uint64_t v0 = v118;
        *(void *)(v98 + 120) = v117;
        *(_WORD *)(v98 + 128) = 0;
        *(unsigned char *)(v98 + 130) = v111;
        *(unsigned char *)(v98 + 131) = v112;
        *(_WORD *)(v98 + 132) = 0;
        uint64_t v107 = (uint64_t *)(v98 + v97[19]);
        *uint64_t v107 = v104;
        v107[1] = v106;
        *(void *)(v98 + v97[20]) = 0;
        *(void *)(v98 + v97[21]) = _swiftEmptyArrayStorage;
        uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v96 + 56);
        uint64_t v41 = v98;
        uint64_t v42 = 0;
        unint64_t v45 = v97;
        goto LABEL_56;
      }
    }
    __break(1u);
    return _swift_task_switch(v33, v34, v35);
  }
  NSString v37 = *(int **)(v118 + 96);
  uint64_t v38 = *(void *)(v118 + 104);
  uint64_t v39 = *(void *)(v118 + 40);
  sub_22680(v115, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v38 + 56);
  uint64_t v41 = v39;
  uint64_t v42 = 0;
LABEL_24:
  unint64_t v45 = v37;
LABEL_56:
  v40(v41, v42, 1, v45);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v108 = *(uint64_t (**)(void))(v0 + 8);
  return v108();
}

uint64_t sub_1EB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  *(unsigned char *)(v6 + 337) = a6;
  *(unsigned char *)(v6 + 336) = a5;
  *(void *)(v6 + 192) = a3;
  *(void *)(v6 + 200) = a4;
  *(void *)(v6 + 176) = a1;
  *(void *)(v6 + 184) = a2;
  return _swift_task_switch(sub_1EB98, 0, 0);
}

uint64_t sub_1EB98()
{
  unint64_t v1 = sub_729A0(*(id *)(v0 + 200));
  uint64_t v3 = v2;
  *(void *)(v0 + 208) = v1;
  *(void *)(v0 + 216) = v2;
  if (qword_A2C38 != -1) {
    swift_once();
  }
  uint64_t v4 = (char *)(v0 + 336);
  uint64_t v5 = qword_A6AC0;
  if (*(void *)(qword_A6AC0 + 16))
  {
    uint64_t v7 = *(void *)(v0 + 184);
    uint64_t v6 = *(void *)(v0 + 192);
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_4BC5C(v7, v6);
    uint64_t v9 = *(void *)(v0 + 192);
    if (v10)
    {
      uint64_t v11 = *(void *)(v0 + 184);
      int64_t v12 = (_OWORD *)(*(void *)(v5 + 56) + 144 * v8);
      *(_OWORD *)(v0 + 16) = *v12;
      long long v13 = v12[4];
      long long v15 = v12[1];
      long long v14 = v12[2];
      *(_OWORD *)(v0 + 64) = v12[3];
      *(_OWORD *)(v0 + 80) = v13;
      *(_OWORD *)(v0 + 32) = v15;
      *(_OWORD *)(v0 + 48) = v14;
      long long v16 = v12[8];
      long long v18 = v12[5];
      long long v17 = v12[6];
      *(_OWORD *)(v0 + 128) = v12[7];
      *(_OWORD *)(v0 + 144) = v16;
      *(_OWORD *)(v0 + 96) = v18;
      *(_OWORD *)(v0 + 112) = v17;
      sub_22E04(v0 + 16);
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(v0 + 32);
      uint64_t v19 = *(void *)(v0 + 40);
      if (sub_76C10() == v11 && v21 == v9
        || (char v22 = sub_77050(), swift_bridgeObjectRetain(), swift_bridgeObjectRelease(), (v22 & 1) != 0))
      {
        swift_bridgeObjectRelease();
        *(void *)(v0 + 224) = sub_76D40();
        *(void *)(v0 + 232) = sub_76D30();
        uint64_t v24 = sub_76D10();
        return _swift_task_switch(sub_1F490, v24, v23);
      }
      uint64_t v76 = *(void *)(v0 + 208);
      uint64_t v77 = *(void *)(v0 + 216);
      char v79 = *v4;
      char v81 = *(unsigned char *)(v0 + 337);
      uint64_t v46 = *(void *)(v0 + 192);
      uint64_t v47 = *(void *)(v0 + 176);
      uint64_t v73 = *(void *)(v0 + 184);
      uint64_t v74 = *(void *)(v0 + 120);
      uint64_t v65 = *(void *)(v0 + 128);
      uint64_t v67 = *(void *)(v0 + 72);
      uint64_t v68 = *(void *)(v0 + 64);
      uint64_t v75 = *(void *)(v0 + 88);
      uint64_t v69 = *(void *)(v0 + 96);
      uint64_t v72 = v20;
      unsigned __int8 v48 = *(unsigned char *)(v0 + 80);
      uint64_t v49 = (int *)type metadata accessor for Application();
      uint64_t v50 = v47 + v49[18];
      uint64_t v51 = sub_76070();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 1, 1, v51);
      uint64_t v66 = *(void *)(v0 + 56);
      uint64_t v70 = *(void *)(v0 + 48);
      uint64_t v71 = *(void *)(v0 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_16F10(v68, v67, v48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22EC4(v0 + 16);
      *(void *)uint64_t v47 = v73;
      *(void *)(v47 + 8) = v46;
      *(void *)(v47 + 16) = v72;
      *(void *)(v47 + 24) = v19;
      *(void *)(v47 + 32) = v74;
      *(void *)(v47 + 40) = v65;
      *(void *)(v47 + 48) = v76;
      *(void *)(v47 + 56) = v77;
      *(unsigned char *)(v47 + 64) = 0;
      *(void *)(v47 + 72) = 0;
      *(void *)(v47 + 80) = v68;
      *(void *)(v47 + 88) = v67;
      *(unsigned char *)(v47 + 96) = v48;
      *(void *)(v47 + 104) = v75;
      *(void *)(v47 + 112) = v69;
      *(void *)(v47 + 120) = _swiftEmptyArrayStorage;
      *(_WORD *)(v47 + 128) = 0;
      *(unsigned char *)(v47 + 130) = v79;
      *(unsigned char *)(v47 + 131) = v81;
      *(_WORD *)(v47 + 132) = 0;
      unint64_t v52 = (void *)(v47 + v49[19]);
      *unint64_t v52 = v70;
      v52[1] = v66;
      *(void *)(v47 + v49[20]) = v71;
      *(void *)(v47 + v49[21]) = _swiftEmptyArrayStorage;
      (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v49 - 1) + 56))(v47, 0, 1, v49);
      goto LABEL_24;
    }
    swift_bridgeObjectRelease();
  }
  id v25 = sub_22740(*(void *)(v0 + 184), *(void *)(v0 + 192));
  *(void *)(v0 + 280) = v25;
  if (!v25)
  {
    id v31 = STShouldDisplayUnfoundApps();
    if (v31 && _IsInternalInstall(v31))
    {
      char v78 = *v4;
      char v80 = *(unsigned char *)(v0 + 337);
      uint64_t v33 = *(void *)(v0 + 184);
      uint64_t v32 = *(void **)(v0 + 192);
      uint64_t v34 = *(void *)(v0 + 176);
      swift_bridgeObjectRetain();
      v84._countAndFlagsBits = v33;
      v84._object = v32;
      sub_76C50(v84);
      v85._countAndFlagsBits = 41;
      v85._object = (void *)0xE100000000000000;
      sub_76C50(v85);
      v86._countAndFlagsBits = v33;
      v86._object = v32;
      sub_76C50(v86);
      v87._countAndFlagsBits = 41;
      v87._object = (void *)0xE100000000000000;
      sub_76C50(v87);
      uint64_t v35 = (int *)type metadata accessor for Application();
      uint64_t v36 = v34 + v35[18];
      uint64_t v37 = sub_76070();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 1, 1, v37);
      *(void *)uint64_t v34 = v33;
      *(void *)(v34 + 8) = v32;
      *(void *)(v34 + 16) = 0x28208FB8EFA09AE2;
      *(void *)(v34 + 24) = 0xA800000000000000;
      *(void *)(v34 + 32) = 40;
      *(void *)(v34 + 40) = 0xE100000000000000;
      *(void *)(v34 + 48) = v1;
      *(void *)(v34 + 56) = v3;
      *(unsigned char *)(v34 + 64) = 0;
      *(void *)(v34 + 72) = 0;
      *(void *)(v34 + 80) = v33;
      *(void *)(v34 + 88) = v32;
      *(unsigned char *)(v34 + 96) = 0;
      *(void *)(v34 + 104) = v33;
      *(void *)(v34 + 112) = v32;
      *(void *)(v34 + 120) = _swiftEmptyArrayStorage;
      *(_WORD *)(v34 + 128) = 0;
      *(unsigned char *)(v34 + 130) = v78;
      *(unsigned char *)(v34 + 131) = v80;
      *(_WORD *)(v34 + 132) = 0;
      uint64_t v38 = (void *)(v34 + v35[19]);
      void *v38 = 0;
      v38[1] = 0;
      *(void *)(v34 + v35[20]) = 0;
      *(void *)(v34 + v35[21]) = _swiftEmptyArrayStorage;
      (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v35 - 1) + 56))(v34, 0, 1, v35);
      swift_bridgeObjectRetain_n();
    }
    else
    {
      uint64_t v44 = *(void *)(v0 + 176);
      uint64_t v45 = type metadata accessor for Application();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
    }
LABEL_24:
    uint64_t v53 = *(uint64_t (**)(void))(v0 + 8);
    return v53();
  }
  unint64_t v26 = v25;
  swift_bridgeObjectRetain_n();
  id v27 = [v26 iTunesMetadata];
  *(void *)(v0 + 288) = v27;
  if ([v26 developerType] == 1) {
    goto LABEL_14;
  }
  id v39 = [v27 artistName];
  if (v39)
  {
    uint64_t v40 = v39;
    uint64_t v41 = sub_76C10();
    uint64_t v43 = v42;

    if (v41 == 0x656C707041 && v43 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v54 = sub_77050();
      swift_bridgeObjectRelease();
      if ((v54 & 1) == 0) {
        goto LABEL_29;
      }
    }
    if (sub_1FF74())
    {
LABEL_14:
      NSString v28 = sub_76BE0();
      NSString v29 = sub_76BE0();
      id v30 = STLocalizedString(v28);

      goto LABEL_30;
    }
  }
LABEL_29:
  id v30 = [v27 artistName];
  if (!v30) {
    goto LABEL_40;
  }
LABEL_30:
  uint64_t v55 = sub_76C10();
  unint64_t v57 = v56;

  while (1)
  {
    *(void *)(v0 + 296) = v55;
    *(void *)(v0 + 304) = v57;
    id v58 = [v26 applicationState];
    *(void *)(v0 + 312) = v58;
    if (([v58 isInstalled] & 1) != 0 || objc_msgSend(v58, "isPlaceholder")) {
      break;
    }
    id v27 = [v27 itemName];
    if (v27) {
      goto LABEL_34;
    }
    id v63 = [v26 compatibilityObject];
    id v27 = [v63 localizedName];

    if (v27) {
      goto LABEL_34;
    }
    __break(1u);
LABEL_40:
    uint64_t v55 = 0;
    unint64_t v57 = 0xE000000000000000;
  }
  id v27 = [v26 localizedName];
LABEL_34:
  uint64_t v59 = sub_76C10();
  uint64_t v61 = v60;

  *(void *)(v0 + 160) = v59;
  *(void *)(v0 + 168) = v61;
  *(void *)(v0 + 320) = v61;
  *(unsigned char *)(v0 + 338) = [v26 isManagedAppDistributor];
  *(unsigned char *)(v0 + 339) = sub_22C14(v26);
  id v82 = (uint64_t (*)(void *))((char *)&dword_A44B0 + dword_A44B0);
  uint64_t v62 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v62;
  *uint64_t v62 = v0;
  v62[1] = sub_1F950;
  return v82(v26);
}

uint64_t sub_1F490()
{
  swift_release();
  if (qword_A2C28 != -1) {
    swift_once();
  }
  return _swift_task_switch(sub_1F528, 0, 0);
}

uint64_t sub_1F528()
{
  *(void *)(v0 + 240) = sub_76D30();
  uint64_t v2 = sub_76D10();
  return _swift_task_switch(sub_1F5B4, v2, v1);
}

uint64_t sub_1F5B4()
{
  swift_release();
  *(void *)(v0 + 248) = qword_A6A70;
  return _swift_task_switch(sub_1F628, 0, 0);
}

uint64_t sub_1F628()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 248) + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_softwareUpdateController);
  *(void *)(v0 + 256) = v1;
  swift_retain();
  return _swift_task_switch(sub_1F6AC, v1, 0);
}

uint64_t sub_1F6AC()
{
  sub_529BC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  swift_release();
  *(void *)(v0 + 264) = v2;
  *(void *)(v0 + 272) = v4;
  return _swift_task_switch(sub_1F730, 0, 0);
}

uint64_t sub_1F730()
{
  long long v20 = *(_OWORD *)(v0 + 264);
  uint64_t v21 = *(void *)(v0 + 208);
  uint64_t v22 = *(void *)(v0 + 216);
  char v24 = *(unsigned char *)(v0 + 337);
  char v23 = *(unsigned char *)(v0 + 336);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v17 = *(void *)(v0 + 184);
  uint64_t v18 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v19 = *(void *)(v0 + 88);
  unsigned __int8 v7 = *(unsigned char *)(v0 + 80);
  unint64_t v8 = (int *)type metadata accessor for Application();
  uint64_t v9 = v2 + v8[18];
  uint64_t v10 = sub_76070();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v15 = *(void *)(v0 + 48);
  uint64_t v16 = *(void *)(v0 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_16F10(v4, v5, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22EC4(v0 + 16);
  *(void *)uint64_t v2 = v17;
  *(void *)(v2 + 8) = v1;
  *(_OWORD *)(v2 + 16) = v20;
  *(void *)(v2 + 32) = v18;
  *(void *)(v2 + 40) = v3;
  *(void *)(v2 + 48) = v21;
  *(void *)(v2 + 56) = v22;
  *(unsigned char *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = v4;
  *(void *)(v2 + 88) = v5;
  *(unsigned char *)(v2 + 96) = v7;
  *(void *)(v2 + 104) = v19;
  *(void *)(v2 + 112) = v6;
  *(void *)(v2 + 120) = _swiftEmptyArrayStorage;
  *(_WORD *)(v2 + 128) = 0;
  *(unsigned char *)(v2 + 130) = v23;
  *(unsigned char *)(v2 + 131) = v24;
  *(_WORD *)(v2 + 132) = 0;
  int64_t v12 = (void *)(v2 + v8[19]);
  *int64_t v12 = v15;
  v12[1] = v11;
  *(void *)(v2 + v8[20]) = v16;
  *(void *)(v2 + v8[21]) = _swiftEmptyArrayStorage;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v8 - 1) + 56))(v2, 0, 1, v8);
  long long v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1F950(char a1)
{
  *(unsigned char *)(*(void *)v1 + 340) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1FA50, 0, 0);
}

uint64_t sub_1FA50()
{
  char v1 = *(unsigned char *)(v0 + 340);
  int v2 = *(unsigned __int8 *)(v0 + 339);
  char v3 = *(unsigned char *)(v0 + 338);
  if (*(unsigned char *)(v0 + 339))
  {
    char v41 = *(unsigned char *)(v0 + 340);
    char v43 = *(unsigned char *)(v0 + 338);
    if (*(void *)(v0 + 184) == 0xD000000000000010 && *(void *)(v0 + 192) == 0x8000000000085F40
      || (sub_77050() & 1) != 0)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      NSString v4 = sub_76BE0();
      NSString v5 = sub_76BE0();
      id v6 = STLocalizedString(v4);
      char v28 = 0;
      unint64_t v7 = 0xD000000000000022;
      unint64_t v8 = 0xD000000000000027;
      unint64_t v9 = 0x80000000000860C0;
      uint64_t v10 = "com.apple.graphic-icon.health-data";
LABEL_6:
      unint64_t v11 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      char v12 = 3;
LABEL_7:
      unint64_t v29 = v9;
      unint64_t v30 = v8;
      unint64_t v31 = v11;
      unint64_t v32 = v7;
      char v34 = v12;

      uint64_t v35 = sub_76C10();
      uint64_t v36 = v13;

      unint64_t v14 = *(void *)(v0 + 192);
      unint64_t v33 = *(void *)(v0 + 184);
      char v1 = v41;
      char v3 = v43;
      goto LABEL_10;
    }
    if (*(void *)(v0 + 184) == 0x6C7070612E6D6F63 && *(void *)(v0 + 192) == 0xEE007370614D2E65
      || (sub_77050() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      NSString v4 = sub_76BE0();
      NSString v5 = sub_76BE0();
      id v6 = STLocalizedString(v4);
      char v12 = 0;
      char v28 = *(unsigned char *)(v0 + 340);
      unint64_t v8 = *(void *)(v0 + 184);
      unint64_t v9 = *(void *)(v0 + 192);
      unint64_t v7 = v8;
      unint64_t v11 = v9;
      goto LABEL_7;
    }
    if (*(void *)(v0 + 184) == 0xD000000000000019 && *(void *)(v0 + 192) == 0x8000000000085F60
      || (sub_77050() & 1) != 0)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      NSString v4 = sub_76BE0();
      NSString v5 = sub_76BE0();
      id v6 = STLocalizedString(v4);
      char v28 = *(unsigned char *)(v0 + 340);
      unint64_t v7 = 0xD000000000000024;
      unint64_t v8 = 0xD000000000000029;
      unint64_t v9 = 0x8000000000085FF0;
      uint64_t v10 = "com.apple.graphic-icon.photo-library";
      goto LABEL_6;
    }
    char v34 = 0;
    char v28 = *(unsigned char *)(v0 + 340);
    uint64_t v35 = *(void *)(v0 + 160);
    uint64_t v36 = *(void *)(v0 + 320);
  }
  else
  {
    char v34 = 0;
    uint64_t v35 = *(void *)(v0 + 160);
    uint64_t v36 = *(void *)(v0 + 320);
    char v28 = *(unsigned char *)(v0 + 340);
  }
  unint64_t v14 = *(void *)(v0 + 192);
  unint64_t v31 = v14;
  unint64_t v32 = *(void *)(v0 + 184);
  unint64_t v33 = v32;
  unint64_t v29 = v14;
  unint64_t v30 = v32;
LABEL_10:
  char v38 = *(unsigned char *)(v0 + 339);
  if (v2 == 1) {
    char v15 = 0;
  }
  else {
    char v15 = v1;
  }
  char v42 = v15 & (v3 ^ 1);
  char v44 = *(unsigned char *)(v0 + 338);
  uint64_t v16 = *(void **)(v0 + 312);
  long long v37 = *(_OWORD *)(v0 + 296);
  uint64_t v17 = *(void *)(v0 + 280);
  uint64_t v18 = *(void **)(v0 + 288);
  uint64_t v19 = *(void *)(v0 + 208);
  uint64_t v20 = *(void *)(v0 + 216);
  char v39 = *(unsigned char *)(v0 + 336);
  char v40 = *(unsigned char *)(v0 + 337);
  uint64_t v21 = *(void *)(v0 + 176);
  uint64_t v22 = (int *)type metadata accessor for Application();
  uint64_t v23 = v21 + v22[18];
  uint64_t v24 = sub_76070();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  swift_bridgeObjectRetain();

  *(void *)uint64_t v21 = v33;
  *(void *)(v21 + 8) = v14;
  *(void *)(v21 + 16) = v35;
  *(void *)(v21 + 24) = v36;
  *(_OWORD *)(v21 + 32) = v37;
  *(void *)(v21 + 48) = v19;
  *(void *)(v21 + 56) = v20;
  *(unsigned char *)(v21 + 64) = v38;
  *(void *)(v21 + 72) = v17;
  *(void *)(v21 + 80) = v32;
  *(void *)(v21 + 88) = v31;
  *(unsigned char *)(v21 + 96) = v34;
  *(void *)(v21 + 104) = v30;
  *(void *)(v21 + 112) = v29;
  *(void *)(v21 + 120) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v21 + 128) = v28;
  *(unsigned char *)(v21 + 129) = v42;
  *(unsigned char *)(v21 + 130) = v39;
  *(unsigned char *)(v21 + 131) = v40;
  *(unsigned char *)(v21 + 132) = 0;
  *(unsigned char *)(v21 + 133) = v44;
  uint64_t v25 = (void *)(v21 + v22[19]);
  *uint64_t v25 = 0;
  v25[1] = 0;
  *(void *)(v21 + v22[20]) = 0;
  *(void *)(v21 + v22[21]) = _swiftEmptyArrayStorage;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v22 - 1) + 56))(v21, 0, 1, v22);
  unint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_1FF74()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_76C60();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    do
    {
      uint64_t v6 = sub_76C60();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v4 = sub_77050();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      uint64_t v2 = sub_76C60();
      uint64_t v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_76C60();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  BOOL v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_200DC()
{
  NSString v0 = sub_76BE0();
  NSString v1 = sub_76BE0();
  id v2 = STLocalizedString(v0);

  uint64_t v3 = sub_76C10();
  return v3;
}

uint64_t sub_201B8()
{
  sub_76AB0();
  NSString v0 = sub_76BE0();
  NSString v1 = sub_76BE0();
  id v2 = STLocalizedString(v0);

  sub_76C10();
  sub_15038();
  return sub_766D0();
}

id sub_20830(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = sub_76BE0();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_75FC0();

    swift_willThrow();
  }
  return v6;
}

id sub_2090C()
{
  NSString v1 = sub_76BE0();
  swift_bridgeObjectRelease();
  id v6 = 0;
  id v2 = [v0 initWithBundleIdentifierOfSystemPlaceholder:v1 error:&v6];

  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    sub_75FC0();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_209D8(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_770C0();
  swift_bridgeObjectRetain();
  sub_76C40();
  Swift::Int v8 = sub_77100();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    char v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_77050() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_77050() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_20E68(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_20B88()
{
  NSString v1 = v0;
  uint64_t v2 = *v0;
  sub_14F50(&qword_A3120);
  uint64_t v3 = sub_76F50();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                NSString v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_770C0();
      sub_76C40();
      uint64_t result = sub_77100();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

Swift::Int sub_20E68(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_20B88();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_21004();
      goto LABEL_22;
    }
    sub_211B8();
  }
  uint64_t v11 = *v4;
  sub_770C0();
  sub_76C40();
  uint64_t result = sub_77100();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_77050(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_77070();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_77050();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_21004()
{
  NSString v1 = v0;
  sub_14F50(&qword_A3120);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_76F40();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_211B8()
{
  NSString v1 = v0;
  uint64_t v2 = *v0;
  sub_14F50(&qword_A3120);
  uint64_t v3 = sub_76F50();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_770C0();
    swift_bridgeObjectRetain();
    sub_76C40();
    uint64_t result = sub_77100();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    NSString v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

Swift::Int sub_21468(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22308(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_214D4(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_214D4(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_77020(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_21BC0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v105 = result;
  NSString v102 = a1;
  if (v3 < 2)
  {
    unint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      int64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      NSString v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_21C90((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_222F4((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          NSString v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v104[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_76CE0();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  int64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_77050();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      unint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_77050()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v11 = sub_21F2C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      int64_t v11 = sub_21F2C((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    char v42 = v11 + 32;
    char v43 = &v11[16 * v41 + 32];
    *(void *)char v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          unint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            char v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        Swift::String v85 = v11;
        Swift::String v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        Class v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_21C90((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)Swift::String v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        int64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        char v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v106;
    if (v9 >= v106)
    {
      unint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    Swift::Int v32 = v3;
  }
  else {
    Swift::Int v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      unint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        char v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        Swift::Int v37 = v13;
        char v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_77050() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)char v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      Swift::Int v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = sub_76FA0();
  __break(1u);
  return result;
}

uint64_t sub_21BC0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
    Swift::Int result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (Swift::Int result = sub_77050(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      Swift::Int result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21C90(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  Swift::Int v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      unint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      Swift::Int v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        int64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          Swift::Int v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_77050() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)int64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)int64_t v18 = *(_OWORD *)v19;
            }
            Swift::Int v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    unint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_77050() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      Swift::Int v27 = v7;
    }
LABEL_50:
    sub_22028((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

char *sub_21F2C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_14F50(&qword_A3128);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_22028(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_76FF0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_220E4(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -216)
  {
    uint64_t result = (char *)sub_76FF0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 216 * (v4 / 216);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

uint64_t sub_221B4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for Application();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_76FF0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_222F4(uint64_t a1)
{
  return sub_21F2C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_22308(uint64_t a1)
{
  return sub_364B0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2231C(uint64_t a1)
{
  return sub_36924(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_22330(void *a1)
{
  return sub_36AA4(0, a1[2], 0, a1);
}

uint64_t sub_22344(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Application();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v42 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v41 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  BOOL v15 = (char *)&v41 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  int64_t v18 = (char *)&v41 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v41 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  unint64_t v24 = (char *)&v41 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v41 - v25;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_22680((uint64_t)a1, (uint64_t)&v41 - v25);
    sub_22680((uint64_t)a2, (uint64_t)v24);
  }
  else
  {
    char v27 = sub_77050();
    sub_22680((uint64_t)a1, (uint64_t)v26);
    sub_22680((uint64_t)a2, (uint64_t)v24);
    if ((v27 & 1) == 0)
    {
      sub_226E4((uint64_t)v24);
      sub_226E4((uint64_t)v26);
      sub_22680((uint64_t)a1, (uint64_t)v21);
      sub_22680((uint64_t)a2, (uint64_t)v18);
      goto LABEL_11;
    }
  }
  int v28 = v26[64];
  sub_226E4((uint64_t)v26);
  int v29 = v24[64];
  sub_226E4((uint64_t)v24);
  sub_22680((uint64_t)a1, (uint64_t)v21);
  sub_22680((uint64_t)a2, (uint64_t)v18);
  if (v28 != v29)
  {
LABEL_11:
    sub_226E4((uint64_t)v18);
    sub_226E4((uint64_t)v21);
    goto LABEL_12;
  }
  uint64_t v31 = *((void *)v21 + 6);
  uint64_t v30 = *((void *)v21 + 7);
  sub_226E4((uint64_t)v21);
  uint64_t v33 = *((void *)v18 + 6);
  uint64_t v32 = *((void *)v18 + 7);
  sub_226E4((uint64_t)v18);
  if (v31 != v33)
  {
LABEL_12:
    sub_22680((uint64_t)a1, (uint64_t)v15);
    sub_22680((uint64_t)a2, (uint64_t)v12);
    goto LABEL_13;
  }
  sub_22680((uint64_t)a1, (uint64_t)v15);
  sub_22680((uint64_t)a2, (uint64_t)v12);
  if (v30 != v32)
  {
LABEL_13:
    sub_226E4((uint64_t)v12);
    sub_226E4((uint64_t)v15);
    sub_22680((uint64_t)a1, (uint64_t)v9);
    uint64_t v36 = v42;
    sub_22680((uint64_t)a2, v42);
    goto LABEL_14;
  }
  int v34 = v15[130];
  sub_226E4((uint64_t)v15);
  int v35 = v12[130];
  sub_226E4((uint64_t)v12);
  sub_22680((uint64_t)a1, (uint64_t)v9);
  uint64_t v36 = v42;
  sub_22680((uint64_t)a2, v42);
  if (v34 != v35)
  {
LABEL_14:
    sub_226E4(v36);
    sub_226E4((uint64_t)v9);
    char v39 = 0;
    return v39 & 1;
  }
  char v37 = v9[131];
  sub_226E4((uint64_t)v9);
  char v38 = *(unsigned char *)(v36 + 131);
  sub_226E4(v36);
  char v39 = v37 ^ v38 ^ 1;
  return v39 & 1;
}

uint64_t sub_22680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Application();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_226E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Application();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_22740(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  return sub_20830(a1, a2, 1);
}

uint64_t sub_22C14(void *a1)
{
  id v2 = [a1 applicationState];
  if (([a1 isWebAppPlaceholder] & 1) == 0
    && (([v2 isPlaceholder] & 1) != 0
     || [a1 isSystemPlaceholder]
     || [v2 isDowngraded]))
  {

    return 1;
  }
  else if ([a1 isWebAppPlaceholder] {
         || ([v2 isInstalled] & 1) == 0)
  }
  {

    return 2;
  }
  else
  {
    unsigned int v3 = [v2 isValid];

    if (v3) {
      return 0;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_22D04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_76D90();
  uint64_t v8 = result;
  if (v2)
  {
    id v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_209D8(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_22D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Application();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22E04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_16F10(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22EC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_16FDC(v2, v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *initializeBufferWithCopyOfBuffer for AppState(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ApplicationSortingOrder(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ApplicationSortingOrder(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x230ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_23114(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2311C(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ApplicationSortingOrder()
{
  return &type metadata for ApplicationSortingOrder;
}

uint64_t destroy for Application.SizeDetail()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Application.SizeDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Application.SizeDetail(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for Icon(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Application.SizeDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Application.SizeDetail(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Application.SizeDetail(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Application.SizeDetail()
{
  return &type metadata for Application.SizeDetail;
}

uint64_t getEnumTagSinglePayload for AppState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23490);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppState()
{
  return &type metadata for AppState;
}

unint64_t sub_234CC()
{
  unint64_t result = qword_A3130;
  if (!qword_A3130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3130);
  }
  return result;
}

unint64_t sub_23524()
{
  unint64_t result = qword_A3138;
  if (!qword_A3138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3138);
  }
  return result;
}

double sub_23578(_OWORD *a1)
{
  double result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_23594(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A3140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_235FC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_23614(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A3000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2367C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236D4()
{
  type metadata accessor for PinnedFilesController();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_27890((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v0 + 24) = sub_279A0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t result = sub_760D0();
  qword_A6A50 = v0;
  return result;
}

uint64_t sub_23740()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_237C8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_24BCC();
  sub_760A0();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23858()
{
  return swift_release();
}

uint64_t sub_23908(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23970()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_239F8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_24BCC();
  sub_760A0();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A88()
{
  return swift_release();
}

uint64_t sub_23B38(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_23BA0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v6 - 8);
  int v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v27 = v3;
  sub_24BCC();
  id v9 = a1;
  sub_760A0();
  swift_release();
  swift_beginAccess();
  uint64_t v10 = *(void *)(v3 + 16);
  if (!*(void *)(v10 + 16)) {
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_4BD18((uint64_t)v9);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 16 * v11 + 8);
  swift_bridgeObjectRelease();

  uint64_t v14 = v13 - a2;
  if (__OFSUB__(v13, a2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  if (v14 < 0)
  {
    BOOL v15 = __OFSUB__(0, v14);
    uint64_t v14 = a2 - v13;
    if (v15) {
      goto LABEL_16;
    }
  }
  if (v14 < 10000000) {
    return;
  }
LABEL_10:
  swift_getKeyPath();
  uint64_t v26 = v3;
  id v16 = v9;
  sub_760A0();
  swift_release();
  swift_beginAccess();
  if (!*(void *)(*(void *)(v3 + 24) + 16))
  {

    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  sub_4BD18((uint64_t)v16);
  char v18 = v17;
  swift_bridgeObjectRelease();

  if ((v18 & 1) == 0)
  {
LABEL_14:
    uint64_t v19 = sub_76D70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 1, 1, v19);
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = v16;
    v20[5] = v3;
    v20[6] = a2;
    id v21 = v16;
    swift_retain();
    uint64_t v22 = sub_2483C((uint64_t)v8, (uint64_t)&unk_A32B0, (uint64_t)v20);
    sub_24D3C((uint64_t)v8);
    swift_getKeyPath();
    uint64_t v25 = v3;
    sub_760A0();
    swift_release();
    uint64_t v25 = v3;
    swift_getKeyPath();
    sub_760C0();
    swift_release();
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *(void *)(v3 + 24);
    *(void *)(v3 + 24) = 0x8000000000000000;
    sub_373FC(v22, v21, isUniquelyReferenced_nonNull_native);
    *(void *)(v3 + 24) = v24;
    swift_bridgeObjectRelease();

    swift_endAccess();
    uint64_t v25 = v3;
    swift_getKeyPath();
    sub_760B0();
    swift_release();
  }
}

uint64_t sub_23F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[17] = a5;
  v6[18] = a6;
  v6[16] = a4;
  sub_14F50(&qword_A3500);
  v6[19] = swift_task_alloc();
  return _swift_task_switch(sub_23FBC, 0, 0);
}

uint64_t sub_23FBC()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = self;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_240D4;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_24480;
  v0[13] = &unk_97128;
  v0[14] = v3;
  [v2 accumulatedSizeOfPinnedItemsInDomain:v1 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_240D4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_24328;
  }
  else {
    uint64_t v2 = sub_241E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_241E4()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v5 = v0[15];
  uint64_t v4 = (void *)v0[16];
  BOOL v6 = v0[20] != 0;
  uint64_t v7 = sub_76D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v1, 1, 1, v7);
  sub_76D40();
  swift_retain();
  id v8 = v4;
  uint64_t v9 = sub_76D30();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = &protocol witness table for MainActor;
  *(void *)(v10 + 32) = v2;
  *(void *)(v10 + 40) = v8;
  *(void *)(v10 + 48) = v5;
  *(unsigned char *)(v10 + 56) = v6;
  *(void *)(v10 + 64) = v3;
  sub_52508(v1, (uint64_t)&unk_A32C8, v10);
  swift_release();
  swift_task_dealloc();
  unint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_24328()
{
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v4 = (void *)v0[16];
  BOOL v5 = v0[20] != 0;
  uint64_t v6 = sub_76D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v1, 1, 1, v6);
  sub_76D40();
  swift_retain();
  id v7 = v4;
  uint64_t v8 = sub_76D30();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = &protocol witness table for MainActor;
  *(void *)(v9 + 32) = v2;
  *(void *)(v9 + 40) = v7;
  *(void *)(v9 + 48) = 0;
  *(unsigned char *)(v9 + 56) = v5;
  *(void *)(v9 + 64) = v3;
  sub_52508(v1, (uint64_t)&unk_A32C8, v9);
  swift_release();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_24480(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_14F50(&qword_A32D0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    **(void **)(*(void *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_24534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 80) = a7;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 64) = a8;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a5;
  sub_76D40();
  *(void *)(v8 + 72) = sub_76D30();
  uint64_t v10 = sub_76D10();
  return _swift_task_switch(sub_245D4, v10, v9);
}

uint64_t sub_245D4()
{
  char v1 = *(unsigned char *)(v0 + 80);
  uint64_t v11 = *(void *)(v0 + 64);
  uint64_t v3 = *(void **)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 40);
  swift_release();
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v2;
  }
  swift_getKeyPath();
  *(void *)(v0 + 16) = v4;
  sub_24BCC();
  id v6 = v3;
  sub_760A0();
  swift_release();
  *(void *)(v0 + 16) = v4;
  swift_getKeyPath();
  sub_760C0();
  swift_release();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *(void *)(v4 + 16);
  *(void *)(v4 + 16) = 0x8000000000000000;
  sub_3752C(v5, v11, v6, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + 16) = v12;

  swift_bridgeObjectRelease();
  swift_endAccess();
  *(void *)(v0 + 16) = v4;
  swift_getKeyPath();
  sub_760B0();
  swift_release();
  swift_getKeyPath();
  *(void *)(v0 + 16) = v4;
  id v8 = v6;
  sub_760A0();
  swift_release();
  *(void *)(v0 + 16) = v4;
  swift_getKeyPath();
  sub_760C0();
  swift_release();
  swift_beginAccess();
  sub_36EDC((uint64_t)v8);
  swift_endAccess();

  swift_release();
  *(void *)(v0 + 16) = v4;
  swift_getKeyPath();
  sub_760B0();
  swift_release();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_2483C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D9C(a1, (uint64_t)v8);
  uint64_t v9 = sub_76D70();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24D3C((uint64_t)v8);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_76D10();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_76D60();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_24A20()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC17StorageSettingsUI21PinnedFilesController___observationRegistrar;
  uint64_t v2 = sub_760E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_24AD0()
{
  return type metadata accessor for PinnedFilesController();
}

uint64_t type metadata accessor for PinnedFilesController()
{
  uint64_t result = qword_A3188;
  if (!qword_A3188) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24B24()
{
  uint64_t result = sub_760E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_24BCC()
{
  unint64_t result = qword_A32A0;
  if (!qword_A32A0)
  {
    type metadata accessor for PinnedFilesController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_A32A0);
  }
  return result;
}

uint64_t sub_24C2C()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_24C74(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_163DC;
  return sub_23F24(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_24D3C(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A3500);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A3500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E04()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_24E3C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_163DC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_A4050 + dword_A4050);
  return v6(a1, v4);
}

uint64_t sub_24EF4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_24F3C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_25054;
  return sub_24534(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_2501C()
{
  return sub_23B38(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_25038()
{
  return sub_23908(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_25058(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_14F50(&qword_A3530);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Application();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  BOOL v15 = (uint64_t *)((char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  char v17 = (char *)&v50 - v16;
  uint64_t result = (uint64_t)[self isRunningInStoreDemoMode];
  if ((result & 1) == 0)
  {
    uint64_t v54 = v11;
    uint64_t v51 = v7;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v52 = v2;
    sub_76240();
    swift_release();
    swift_release();
    uint64_t v19 = *(void *)(v55[0] + 16);
    if (v19)
    {
      uint64_t v53 = v17;
      uint64_t v20 = v55[0] + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
      uint64_t v21 = *(void *)(v12 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_22680(v20, (uint64_t)v15);
        BOOL v22 = *v15 == a1 && v15[1] == a2;
        if (v22 || (sub_77050() & 1) != 0) {
          break;
        }
        sub_226E4((uint64_t)v15);
        v20 += v21;
        if (!--v19)
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = 1;
          char v17 = v53;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      sub_22D9C((uint64_t)v15, (uint64_t)v10);
      uint64_t v23 = 0;
      char v17 = v53;
    }
    else
    {
      uint64_t v23 = 1;
    }
LABEL_13:
    uint64_t v24 = v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v23, 1, v54);
    swift_bridgeObjectRelease();
    uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v25(v10, 1, v24) == 1) {
      return sub_151A8((uint64_t)v10, &qword_A3530);
    }
    sub_22D9C((uint64_t)v10, (uint64_t)v17);
    id v26 = objc_allocWithZone((Class)IXApplicationIdentity);
    swift_bridgeObjectRetain();
    NSString v27 = sub_76BE0();
    swift_bridgeObjectRelease();
    id v28 = [v26 initWithBundleIdentifier:v27];

    if (v28)
    {
      id v29 = [objc_allocWithZone((Class)IXUninstallOptions) init];
      if (v29)
      {
        uint64_t v30 = v29;
        uint64_t v53 = v17;
        [v29 setWaitForDeletion:1];
        [v30 setShowArchiveOption:0];
        [v30 setRequestUserConfirmation:1];
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_28814();
        uint64_t v31 = sub_46C4C(v55, a1, a2);
        uint64_t v33 = v32;
        if (!v25(v32, 1, v24)) {
          v33[64] = 4;
        }
        ((void (*)(uint64_t *, void))v31)(v55, 0);
        swift_bridgeObjectRelease();
        sub_28BF4(v56);
        uint64_t v34 = (uint64_t)v51;
        sub_76D50();
        uint64_t v35 = sub_76D70();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
        uint64_t v36 = swift_allocObject();
        swift_unknownObjectWeakInit();
        char v37 = (void *)swift_allocObject();
        v37[2] = 0;
        v37[3] = 0;
        v37[4] = v28;
        v37[5] = v30;
        v37[6] = a1;
        v37[7] = a2;
        v37[8] = v36;
        swift_bridgeObjectRetain();
        id v38 = v28;
        id v39 = v30;
        sub_2483C(v34, (uint64_t)&unk_A32E0, (uint64_t)v37);

        swift_release();
        sub_151A8(v34, &qword_A3500);
        goto LABEL_28;
      }
      if (qword_A2C20 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_76200();
      sub_1A620(v46, (uint64_t)qword_A6A58);
      swift_bridgeObjectRetain_n();
      uint64_t v41 = sub_761F0();
      os_log_type_t v47 = sub_76DC0();
      if (os_log_type_enabled(v41, v47))
      {
        uint64_t v48 = swift_slowAlloc();
        uint64_t v53 = v17;
        uint64_t v49 = (uint8_t *)v48;
        v55[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_35DB8(a1, a2, v55);
        sub_76E20();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v41, v47, "Unable to create uninstall options for %s", v49, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

LABEL_28:
        uint64_t v45 = (uint64_t)v53;
        return sub_226E4(v45);
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      if (qword_A2C20 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_76200();
      sub_1A620(v40, (uint64_t)qword_A6A58);
      swift_bridgeObjectRetain_n();
      uint64_t v41 = sub_761F0();
      os_log_type_t v42 = sub_76DC0();
      if (os_log_type_enabled(v41, v42))
      {
        char v43 = v17;
        unint64_t v44 = (uint8_t *)swift_slowAlloc();
        v55[0] = swift_slowAlloc();
        *(_DWORD *)unint64_t v44 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_35DB8(a1, a2, v55);
        sub_76E20();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v41, v42, "Unable to create app identity for %s", v44, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v45 = (uint64_t)v43;
        return sub_226E4(v45);
      }
      swift_bridgeObjectRelease_n();
    }

    uint64_t v45 = (uint64_t)v17;
    return sub_226E4(v45);
  }
  return result;
}

uint64_t sub_25864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[28] = a7;
  v8[29] = a8;
  v8[26] = a5;
  v8[27] = a6;
  v8[25] = a4;
  sub_14F50(&qword_A3530);
  v8[30] = swift_task_alloc();
  return _swift_task_switch(sub_25900, 0, 0);
}

uint64_t sub_25900()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = self;
  v0[2] = v0;
  v0[7] = v0 + 22;
  v0[3] = sub_25A1C;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_24480;
  v0[13] = &unk_971B8;
  v0[14] = v4;
  [v3 uninstallAppWithIdentity:v2 options:v1 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_25A1C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 248) = v1;
  if (v1) {
    uint64_t v2 = sub_25DC4;
  }
  else {
    uint64_t v2 = sub_25B2C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_25B2C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[32] = Strong;
  if (Strong)
  {
    sub_76D40();
    v0[33] = sub_76D30();
    uint64_t v3 = sub_76D10();
    return _swift_task_switch(sub_25C24, v3, v2);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_25C24()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[28];
  swift_release();
  id v3 = sub_22740(v1, v2);
  uint64_t v4 = (void *)v0[32];
  if (v3)
  {
    uint64_t v5 = v3;
    uint64_t v7 = v0[27];
    uint64_t v6 = v0[28];
    char v8 = sub_22C14(v3);
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_28814();
    uint64_t v9 = sub_46C4C(v0 + 15, v7, v6);
    uint64_t v11 = v10;
    uint64_t v12 = type metadata accessor for Application();
    int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12);
    uint64_t v14 = (void *)v0[32];
    if (!v13) {
      *(unsigned char *)(v11 + 64) = v8;
    }
    ((void (*)(void *, void))v9)(v0 + 15, 0);
    swift_bridgeObjectRelease();
    sub_28BF4(v20);
  }
  else
  {
    uint64_t v15 = v0[30];
    uint64_t v17 = v0[27];
    uint64_t v16 = v0[28];
    uint64_t v21 = sub_28814();
    sub_36CE4(v17, v16, v15);
    sub_151A8(v15, &qword_A3530);
    sub_28BF4(v21);
  }
  swift_task_dealloc();
  char v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_25DC4()
{
  uint64_t v16 = v0;
  swift_willThrow();
  if (qword_A2C20 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_76200();
  sub_1A620(v1, (uint64_t)qword_A6A58);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = sub_761F0();
  os_log_type_t v3 = sub_76DC0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[28];
  if (v4)
  {
    uint64_t v14 = v0[27];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_bridgeObjectRetain();
    v0[23] = sub_35DB8(v14, v5, &v15);
    sub_76E20();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2112;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[24] = v8;
    sub_76E20();
    *uint64_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v2, v3, "Error while uninstalling %s : %@", (uint8_t *)v6, 0x16u);
    sub_14F50(&qword_A3650);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[32] = Strong;
  if (Strong)
  {
    sub_76D40();
    v0[33] = sub_76D30();
    uint64_t v11 = sub_76D10();
    return _swift_task_switch(sub_25C24, v11, v10);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_26140(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_14F50(&qword_A3530);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for Application();
  uint64_t v11 = *(void *)(v46 - 8);
  uint64_t v12 = __chkstk_darwin(v46);
  uint64_t v14 = (uint64_t *)((char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v42 - v15;
  uint64_t result = (uint64_t)[self isRunningInStoreDemoMode];
  if ((result & 1) == 0)
  {
    char v43 = v7;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v44 = v2;
    sub_76240();
    swift_release();
    swift_release();
    uint64_t v18 = *(void *)(v47[0] + 16);
    uint64_t v45 = v16;
    if (v18)
    {
      uint64_t v19 = v47[0] + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      uint64_t v20 = *(void *)(v11 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_22680(v19, (uint64_t)v14);
        BOOL v21 = *v14 == a1 && v14[1] == a2;
        if (v21 || (sub_77050() & 1) != 0) {
          break;
        }
        sub_226E4((uint64_t)v14);
        v19 += v20;
        if (!--v18)
        {
          swift_bridgeObjectRelease();
          uint64_t v22 = 1;
          uint64_t v16 = v45;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      sub_22D9C((uint64_t)v14, (uint64_t)v10);
      uint64_t v22 = 0;
      uint64_t v16 = v45;
    }
    else
    {
      uint64_t v22 = 1;
    }
LABEL_13:
    uint64_t v23 = v46;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v10, v22, 1, v46);
    swift_bridgeObjectRelease();
    uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    if (v24((uint64_t)v10, 1, v23) == 1)
    {
      return sub_151A8((uint64_t)v10, &qword_A3530);
    }
    else
    {
      sub_22D9C((uint64_t)v10, (uint64_t)v16);
      id v25 = objc_allocWithZone((Class)IXApplicationIdentity);
      swift_bridgeObjectRetain();
      NSString v26 = sub_76BE0();
      swift_bridgeObjectRelease();
      id v27 = [v25 initWithBundleIdentifier:v26];

      if (v27)
      {
        swift_bridgeObjectRetain();
        uint64_t v48 = sub_28814();
        id v28 = sub_46C4C(v47, a1, a2);
        uint64_t v30 = v29;
        if (!v24(v29, 1, v23)) {
          *(unsigned char *)(v30 + 64) = 5;
        }
        ((void (*)(uint64_t *, void))v28)(v47, 0);
        swift_bridgeObjectRelease();
        sub_28BF4(v48);
        uint64_t v31 = (uint64_t)v43;
        sub_76D50();
        uint64_t v32 = sub_76D70();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
        uint64_t v33 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v34 = (void *)swift_allocObject();
        v34[2] = 0;
        v34[3] = 0;
        v34[4] = v27;
        v34[5] = a1;
        v34[6] = a2;
        v34[7] = v33;
        swift_bridgeObjectRetain();
        id v35 = v27;
        sub_2483C(v31, (uint64_t)&unk_A32F0, (uint64_t)v34);

        swift_release();
        sub_151A8(v31, &qword_A3500);
        uint64_t v36 = (uint64_t)v45;
      }
      else
      {
        if (qword_A2C20 != -1) {
          swift_once();
        }
        uint64_t v37 = sub_76200();
        sub_1A620(v37, (uint64_t)qword_A6A58);
        swift_bridgeObjectRetain_n();
        id v38 = sub_761F0();
        os_log_type_t v39 = sub_76DC0();
        if (os_log_type_enabled(v38, v39))
        {
          uint64_t v40 = v16;
          uint64_t v41 = (uint8_t *)swift_slowAlloc();
          v47[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v41 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v48 = sub_35DB8(a1, a2, v47);
          sub_76E20();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_0, v38, v39, "Unable to create app identity for %s", v41, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v36 = (uint64_t)v40;
        }
        else
        {
          swift_bridgeObjectRelease_n();

          uint64_t v36 = (uint64_t)v16;
        }
      }
      return sub_226E4(v36);
    }
  }
  return result;
}

uint64_t sub_26768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[26] = a6;
  v7[27] = a7;
  v7[24] = a4;
  v7[25] = a5;
  sub_14F50(&qword_A3530);
  v7[28] = swift_task_alloc();
  return _swift_task_switch(sub_26800, 0, 0);
}

uint64_t sub_26800()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = self;
  v0[2] = v0;
  v0[3] = sub_26914;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_27038;
  v0[13] = &unk_971F8;
  v0[14] = v3;
  [v2 demoteAppToPlaceholderWithApplicationIdentity:v1 forReason:2 waitForDeletion:1 ignoreRemovability:1 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_26914()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 232) = v1;
  if (v1) {
    uint64_t v2 = sub_26CBC;
  }
  else {
    uint64_t v2 = sub_26A24;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_26A24()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[30] = Strong;
  if (Strong)
  {
    sub_76D40();
    v0[31] = sub_76D30();
    uint64_t v3 = sub_76D10();
    return _swift_task_switch(sub_26B1C, v3, v2);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_26B1C()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  swift_release();
  id v3 = sub_22740(v1, v2);
  uint64_t v4 = (void *)v0[30];
  if (v3)
  {
    uint64_t v5 = v3;
    uint64_t v7 = v0[25];
    uint64_t v6 = v0[26];
    char v8 = sub_22C14(v3);
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_28814();
    uint64_t v9 = sub_46C4C(v0 + 15, v7, v6);
    uint64_t v11 = v10;
    uint64_t v12 = type metadata accessor for Application();
    int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12);
    uint64_t v14 = (void *)v0[30];
    if (!v13) {
      *(unsigned char *)(v11 + 64) = v8;
    }
    ((void (*)(void *, void))v9)(v0 + 15, 0);
    swift_bridgeObjectRelease();
    sub_28BF4(v20);
  }
  else
  {
    uint64_t v15 = v0[28];
    uint64_t v17 = v0[25];
    uint64_t v16 = v0[26];
    uint64_t v21 = sub_28814();
    sub_36CE4(v17, v16, v15);
    sub_151A8(v15, &qword_A3530);
    sub_28BF4(v21);
  }
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_26CBC()
{
  uint64_t v16 = v0;
  swift_willThrow();
  if (qword_A2C20 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_76200();
  sub_1A620(v1, (uint64_t)qword_A6A58);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = sub_761F0();
  os_log_type_t v3 = sub_76DC0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[26];
  if (v4)
  {
    uint64_t v14 = v0[25];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_bridgeObjectRetain();
    v0[22] = sub_35DB8(v14, v5, &v15);
    sub_76E20();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2112;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[23] = v8;
    sub_76E20();
    *uint64_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v2, v3, "Error while demoting %s : %@", (uint8_t *)v6, 0x16u);
    sub_14F50(&qword_A3650);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[30] = Strong;
  if (Strong)
  {
    sub_76D40();
    v0[31] = sub_76D30();
    uint64_t v11 = sub_76D10();
    return _swift_task_switch(sub_26B1C, v11, v10);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_27038(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_14F50(&qword_A32D0);
    uint64_t v4 = swift_allocError();
    *unint64_t v5 = a2;
    id v6 = a2;
    return _swift_continuation_throwingResumeWithError(v2, v4);
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_270D8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_27110()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_27168(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_25054;
  return sub_25864(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_27244()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_27294(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_163DC;
  return sub_26768(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_27368()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_273DC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();

  return swift_release();
}

uint64_t sub_27454()
{
  return sub_29CB0();
}

unint64_t sub_27468(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    os_log_type_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_14F50(&qword_A3718);
  uint64_t v2 = sub_76FE0();
  os_log_type_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_15144(v6, (uint64_t)v15, (uint64_t *)&unk_A3720);
    unint64_t result = sub_4BCD4((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_3A138(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_275AC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_14F50(&qword_A3590);
  uint64_t v2 = (void *)sub_76FE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_4BC5C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_276D0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_11;
  }
  sub_14F50(&qword_A35D0);
  uint64_t v2 = (void *)sub_76FE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  long long v4 = *(_OWORD *)(a1 + 144);
  long long v39 = *(_OWORD *)(a1 + 128);
  long long v40 = v4;
  long long v5 = *(_OWORD *)(a1 + 176);
  long long v41 = *(_OWORD *)(a1 + 160);
  long long v42 = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  long long v35 = *(_OWORD *)(a1 + 64);
  long long v36 = v6;
  long long v7 = *(_OWORD *)(a1 + 112);
  long long v37 = *(_OWORD *)(a1 + 96);
  long long v38 = v7;
  long long v8 = *(_OWORD *)(a1 + 48);
  long long v33 = *(_OWORD *)(a1 + 32);
  long long v34 = v8;
  uint64_t v10 = *((void *)&v33 + 1);
  uint64_t v9 = v33;
  sub_393E0((uint64_t)&v33);
  unint64_t result = sub_4BC5C(v9, v10);
  if (v12)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  uint64_t v13 = 192;
  while (1)
  {
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v14 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v14 = v9;
    v14[1] = v10;
    uint64_t v15 = (_OWORD *)(v2[7] + 144 * result);
    *uint64_t v15 = v34;
    long long v16 = v35;
    long long v17 = v36;
    long long v18 = v38;
    v15[3] = v37;
    v15[4] = v18;
    v15[1] = v16;
    _OWORD v15[2] = v17;
    long long v19 = v39;
    long long v20 = v40;
    long long v21 = v42;
    v15[7] = v41;
    unsigned char v15[8] = v21;
    v15[5] = v19;
    v15[6] = v20;
    uint64_t v22 = v2[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      break;
    }
    v2[2] = v24;
    if (!--v3) {
      goto LABEL_9;
    }
    uint64_t v25 = v13 + 160;
    NSString v26 = (long long *)(a1 + v13);
    long long v27 = v26[7];
    long long v39 = v26[6];
    long long v40 = v27;
    long long v28 = v26[9];
    long long v41 = v26[8];
    long long v42 = v28;
    long long v29 = v26[3];
    long long v35 = v26[2];
    long long v36 = v29;
    long long v30 = v26[5];
    long long v37 = v26[4];
    long long v38 = v30;
    long long v31 = v26[1];
    long long v33 = *v26;
    long long v34 = v31;
    uint64_t v10 = *((void *)&v33 + 1);
    uint64_t v9 = v33;
    sub_393E0((uint64_t)&v33);
    unint64_t result = sub_4BC5C(v9, v10);
    uint64_t v13 = v25;
    if (v32) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_27890(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_14F50(&qword_A3708);
  uint64_t v2 = (void *)sub_76FE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  long long v4 = (_OWORD *)(a1 + 40);
  while (1)
  {
    long long v11 = *v4;
    id v5 = *((id *)v4 - 1);
    unint64_t result = sub_4BD18((uint64_t)v5);
    if (v7) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v11;
    uint64_t v8 = v2[2];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      goto LABEL_11;
    }
    v2[2] = v10;
    long long v4 = (_OWORD *)((char *)v4 + 24);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_279A0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_14F50(&qword_A3700);
  uint64_t v2 = (void *)sub_76FE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  long long v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_retain();
    unint64_t result = sub_4BD18((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_27AAC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_11;
  }
  sub_14F50(&qword_A36D8);
  uint64_t v2 = (void *)sub_76FE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  long long v4 = *(_OWORD *)(a1 + 240);
  long long v53 = *(_OWORD *)(a1 + 224);
  long long v54 = v4;
  char v55 = *(unsigned char *)(a1 + 256);
  long long v5 = *(_OWORD *)(a1 + 176);
  long long v49 = *(_OWORD *)(a1 + 160);
  long long v50 = v5;
  long long v6 = *(_OWORD *)(a1 + 208);
  long long v51 = *(_OWORD *)(a1 + 192);
  long long v52 = v6;
  long long v7 = *(_OWORD *)(a1 + 112);
  long long v45 = *(_OWORD *)(a1 + 96);
  long long v46 = v7;
  long long v8 = *(_OWORD *)(a1 + 144);
  long long v47 = *(_OWORD *)(a1 + 128);
  long long v48 = v8;
  long long v9 = *(_OWORD *)(a1 + 48);
  long long v41 = *(_OWORD *)(a1 + 32);
  long long v42 = v9;
  long long v10 = *(_OWORD *)(a1 + 80);
  long long v43 = *(_OWORD *)(a1 + 64);
  long long v44 = v10;
  uint64_t v12 = *((void *)&v41 + 1);
  uint64_t v11 = v41;
  sub_39FE0((uint64_t)&v41);
  unint64_t result = sub_4BC5C(v11, v12);
  if (v14)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  uint64_t v15 = 264;
  while (1)
  {
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v16 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v16 = v11;
    v16[1] = v12;
    uint64_t v17 = v2[7] + 216 * result;
    long long v18 = v43;
    *(_OWORD *)uint64_t v17 = v42;
    *(_OWORD *)(v17 + 16) = v18;
    long long v19 = v44;
    long long v20 = v45;
    long long v21 = v47;
    *(_OWORD *)(v17 + 64) = v46;
    *(_OWORD *)(v17 + 80) = v21;
    *(_OWORD *)(v17 + 32) = v19;
    *(_OWORD *)(v17 + 48) = v20;
    long long v22 = v48;
    long long v23 = v49;
    long long v24 = v51;
    *(_OWORD *)(v17 + 128) = v50;
    *(_OWORD *)(v17 + 144) = v24;
    *(_OWORD *)(v17 + 96) = v22;
    *(_OWORD *)(v17 + 112) = v23;
    long long v25 = v52;
    long long v26 = v53;
    long long v27 = v54;
    *(unsigned char *)(v17 + 208) = v55;
    *(_OWORD *)(v17 + 176) = v26;
    *(_OWORD *)(v17 + 192) = v27;
    *(_OWORD *)(v17 + 160) = v25;
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      break;
    }
    v2[2] = v30;
    if (!--v3) {
      goto LABEL_9;
    }
    uint64_t v31 = v15 + 232;
    char v32 = (long long *)(a1 + v15);
    long long v33 = v32[13];
    long long v53 = v32[12];
    long long v54 = v33;
    char v55 = *((unsigned char *)v32 + 224);
    long long v34 = v32[9];
    long long v49 = v32[8];
    long long v50 = v34;
    long long v35 = v32[11];
    long long v51 = v32[10];
    long long v52 = v35;
    long long v36 = v32[5];
    long long v45 = v32[4];
    long long v46 = v36;
    long long v37 = v32[7];
    long long v47 = v32[6];
    long long v48 = v37;
    long long v38 = v32[1];
    long long v41 = *v32;
    long long v42 = v38;
    long long v39 = v32[3];
    long long v43 = v32[2];
    long long v44 = v39;
    uint64_t v12 = *((void *)&v41 + 1);
    uint64_t v11 = v41;
    sub_39FE0((uint64_t)&v41);
    unint64_t result = sub_4BC5C(v11, v12);
    uint64_t v15 = v31;
    if (v40) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_27CB4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_14F50(&qword_A36F0);
  uint64_t v2 = (void *)sub_76FE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  long long v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_4BC5C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_27DC8(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A36E0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_14F50(&qword_A36E8);
  uint64_t v6 = sub_76FE0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_15144(v12, (uint64_t)v5, &qword_A36E0);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_4BC5C(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v19 = (uint64_t *)(v7[6] + 16 * result);
    uint64_t *v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_76070();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_27FC8(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A35D8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_14F50(&qword_A35E0);
  uint64_t v6 = sub_76FE0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_15144(v12, (uint64_t)v5, &qword_A35D8);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_4BC5C(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v19 = (uint64_t *)(v7[6] + 16 * result);
    uint64_t *v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for Application();
    unint64_t result = sub_39C28(v9, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, (uint64_t (*)(void))type metadata accessor for Application);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_281C4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return;
  }
  uint64_t v2 = a1;
  sub_36450(0, v1, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  uint64_t v5 = sub_37B8C(v2);
  uint64_t v6 = 0;
  uint64_t v7 = v2 + 64;
  char v8 = *(unsigned char *)(v2 + 32);
  uint64_t v34 = v2 + 80;
  int64_t v35 = v1;
  uint64_t v37 = v2 + 64;
  uint64_t v38 = v2;
  int v36 = v4;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << v8)
  {
    unint64_t v11 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_34;
    }
    if (*(_DWORD *)(v2 + 36) != v4) {
      goto LABEL_35;
    }
    uint64_t v39 = v6;
    uint64_t v12 = v3;
    uint64_t v13 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v5);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    long long v16 = *(void **)(*(void *)(v2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
    id v17 = v16;
    id v18 = [v17 longLongValue];
    if ((uint64_t)v18 >= 0) {
      unint64_t v19 = (unint64_t)v18;
    }
    else {
      unint64_t v19 = 0x8000000000000000;
    }
    if (qword_A2C10 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_A6A48;
    unint64_t v40 = v19;
    uint64_t v41 = v14;
    if (*(void *)(qword_A6A48 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v21 = sub_4BC5C(v14, v15);
      if (v22)
      {
        BOOL v23 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v21);
        uint64_t v25 = *v23;
        uint64_t v24 = v23[1];
        swift_bridgeObjectRetain();

        swift_bridgeObjectRelease();
        goto LABEL_20;
      }

      swift_bridgeObjectRelease();
    }
    else
    {
    }
    uint64_t v25 = 0;
    uint64_t v24 = 0;
LABEL_20:
    uint64_t v3 = v12;
    long long v42 = v12;
    unint64_t v26 = v12[2];
    unint64_t v27 = v3[3];
    if (v26 >= v27 >> 1)
    {
      sub_36450(v27 > 1, v26 + 1, 1);
      uint64_t v3 = v42;
    }
    v3[2] = v26 + 1;
    uint64_t v28 = &v3[5 * v26];
    v28[4] = v41;
    v28[5] = v15;
    v28[6] = v40;
    v28[7] = v25;
    v28[8] = v24;
    uint64_t v2 = v38;
    char v8 = *(unsigned char *)(v38 + 32);
    unint64_t v9 = 1 << v8;
    if (v5 >= 1 << v8) {
      goto LABEL_36;
    }
    uint64_t v7 = v37;
    uint64_t v29 = *(void *)(v37 + 8 * v11);
    if ((v29 & (1 << v5)) == 0) {
      goto LABEL_37;
    }
    int v4 = v36;
    if (*(_DWORD *)(v38 + 36) != v36) {
      goto LABEL_38;
    }
    unint64_t v30 = v29 & (-2 << (v5 & 0x3F));
    if (v30)
    {
      unint64_t v9 = __clz(__rbit64(v30)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v35;
    }
    else
    {
      unint64_t v31 = v11 + 1;
      unint64_t v32 = (v9 + 63) >> 6;
      int64_t v10 = v35;
      if (v11 + 1 < v32)
      {
        unint64_t v33 = *(void *)(v37 + 8 * v31);
        if (v33)
        {
LABEL_31:
          unint64_t v9 = __clz(__rbit64(v33)) + (v31 << 6);
        }
        else
        {
          while (v32 - 2 != v11)
          {
            unint64_t v33 = *(void *)(v34 + 8 * v11++);
            if (v33)
            {
              unint64_t v31 = v11 + 1;
              goto LABEL_31;
            }
          }
        }
      }
    }
    uint64_t v6 = v39 + 1;
    uint64_t v5 = v9;
    if (v39 + 1 == v10) {
      return;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_284B8(uint64_t a1)
{
  uint64_t result = sub_377E8(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_517C0(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

void *sub_28538(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  int v3 = _swiftEmptyArrayStorage;
  uint64_t v4 = 48;
  do
  {
    uint64_t v5 = *(void *)(a1 + v4);
    if (v5 != 0x8000000000000000)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v3 = sub_4B780(0, v3[2] + 1, 1, v3);
      }
      unint64_t v7 = v3[2];
      unint64_t v6 = v3[3];
      if (v7 >= v6 >> 1) {
        int v3 = sub_4B780((void *)(v6 > 1), v7 + 1, 1, v3);
      }
      v3[2] = v7 + 1;
      v3[v7 + 4] = v5;
    }
    v4 += 40;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_28638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_14F50(&qword_A3000);
  __chkstk_darwin(v8 - 8);
  int64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_76070();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_151A8(a1, &qword_A3000);
    sub_36FA4(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_151A8((uint64_t)v10, &qword_A3000);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_37668((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_28814()
{
  uint64_t v0 = type metadata accessor for Application();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  unint64_t v6 = (uint64_t *)((char *)&v28 - v5);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();
  swift_release();
  sub_46DA4((uint64_t)v30);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();
  swift_release();
  sub_46DA4((uint64_t)v30);
  uint64_t v7 = *(void *)(v31 + 16);
  if (!v7)
  {
    swift_bridgeObjectRetain();
    int64_t v10 = &_swiftEmptyDictionarySingleton;
LABEL_18:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v10;
  }
  uint64_t v8 = v31 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v9 = *(void *)(v1 + 72);
  uint64_t v28 = v31;
  swift_bridgeObjectRetain_n();
  int64_t v10 = &_swiftEmptyDictionarySingleton;
  uint64_t v29 = v6;
  while (1)
  {
    sub_391B0(v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Application);
    uint64_t v12 = *v6;
    uint64_t v11 = v6[1];
    uint64_t v13 = v4;
    sub_391B0((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for Application);
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v30 = v10;
    unint64_t v16 = sub_4BC5C(v12, v11);
    uint64_t v17 = v10[2];
    BOOL v18 = (v15 & 1) == 0;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18)) {
      break;
    }
    char v20 = v15;
    if (v10[3] >= v19)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v4 = v13;
        if (v15) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_4ECF8();
        int64_t v10 = v30;
        uint64_t v4 = v13;
        if (v20) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_4C90C(v19, isUniquelyReferenced_nonNull_native);
      int64_t v10 = v30;
      unint64_t v21 = sub_4BC5C(v12, v11);
      if ((v20 & 1) != (v22 & 1)) {
        goto LABEL_21;
      }
      unint64_t v16 = v21;
      uint64_t v4 = v13;
      if (v20)
      {
LABEL_3:
        sub_38D78((uint64_t)v4, v10[7] + v16 * v9);
        goto LABEL_4;
      }
    }
    v10[(v16 >> 6) + 8] |= 1 << v16;
    BOOL v23 = (uint64_t *)(v10[6] + 16 * v16);
    *BOOL v23 = v12;
    v23[1] = v11;
    sub_39C28((uint64_t)v4, v10[7] + v16 * v9, (uint64_t (*)(void))type metadata accessor for Application);
    uint64_t v24 = v10[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_20;
    }
    uint64_t v10[2] = v26;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v6 = v29;
    sub_3A0D8((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for Application);
    v8 += v9;
    if (!--v7)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_77080();
  __break(1u);
  return result;
}

uint64_t sub_28BF4(uint64_t a1)
{
  uint64_t v3 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v3 - 8);
  unint64_t v96 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_14F50(&qword_A3530);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  int64_t v10 = (char *)&v95 - v9;
  uint64_t v11 = type metadata accessor for Application();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v112 = (uint64_t)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v111 = (uint64_t)&v95 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v95 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v113 = (uint64_t)&v95 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v105 = (uint64_t)&v95 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v107 = (uint64_t)&v95 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v104 = (uint64_t)&v95 - v28;
  __chkstk_darwin(v27);
  uint64_t v108 = (uint64_t)&v95 - v30;
  id v97 = v1;
  uint64_t v31 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_systemBundleIDs] + 16);
  uint64_t v118 = v12;
  uint64_t v114 = v19;
  if (!v31)
  {
    uint64_t v110 = _swiftEmptyArrayStorage;
    if (*(void *)(a1 + 16)) {
      goto LABEL_27;
    }
    goto LABEL_64;
  }
  uint64_t v102 = v29;
  unint64_t v117 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  Swift::Int v106 = (uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v110 = _swiftEmptyArrayStorage;
  uint64_t v95 = v32;
  unint64_t v33 = (unint64_t *)(v32 + 40);
  *(void *)&long long v34 = 136315650;
  long long v99 = v34;
  uint64_t v98 = (char *)&type metadata for Any + 8;
  uint64_t v109 = v11;
  uint64_t v35 = v108;
  uint64_t v100 = v8;
  uint64_t v103 = v10;
  do
  {
    uint64_t v37 = *(v33 - 1);
    unint64_t v38 = *v33;
    if (!*(void *)(a1 + 16))
    {
      uint64_t v116 = *v117;
      v116(v10, 1, 1, v11);
      swift_bridgeObjectRetain();
LABEL_11:
      sub_151A8((uint64_t)v10, &qword_A3530);
      goto LABEL_22;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v115 = v37;
    unint64_t v39 = sub_4BC5C(v37, v38);
    if (v40)
    {
      sub_391B0(*(void *)(a1 + 56) + *(void *)(v12 + 72) * v39, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Application);
      uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      long long v42 = v10;
      uint64_t v43 = 0;
    }
    else
    {
      uint64_t v41 = *v117;
      long long v42 = v10;
      uint64_t v43 = 1;
    }
    uint64_t v116 = v41;
    v41(v42, v43, 1, v11);
    swift_bridgeObjectRelease();
    int v44 = (*v106)(v10, 1, v11);
    uint64_t v37 = v115;
    if (v44 == 1) {
      goto LABEL_11;
    }
    sub_39C28((uint64_t)v10, v35, (uint64_t (*)(void))type metadata accessor for Application);
    if (qword_A2C20 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_76200();
    sub_1A620(v45, (uint64_t)qword_A6A58);
    uint64_t v46 = v104;
    sub_391B0(v35, v104, (uint64_t (*)(void))type metadata accessor for Application);
    uint64_t v47 = v35;
    uint64_t v48 = v102;
    sub_391B0(v47, v102, (uint64_t (*)(void))type metadata accessor for Application);
    swift_bridgeObjectRetain_n();
    long long v49 = sub_761F0();
    os_log_type_t v50 = sub_76DB0();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v101 = swift_slowAlloc();
      v119[0] = v101;
      *(_DWORD *)uint64_t v51 = v99;
      swift_bridgeObjectRetain();
      *(void *)(v51 + 4) = sub_35DB8(v115, v38, v119);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v51 + 12) = 2080;
      uint64_t v52 = sub_770B0();
      *(void *)(v51 + 14) = sub_35DB8(v52, v53, v119);
      swift_bridgeObjectRelease();
      sub_3A0D8(v46, (uint64_t (*)(void))type metadata accessor for Application);
      *(_WORD *)(v51 + 22) = 2080;
      uint64_t v54 = sub_770B0();
      *(void *)(v51 + 24) = sub_35DB8(v54, v55, v119);
      uint64_t v12 = v118;
      swift_bridgeObjectRelease();
      sub_3A0D8(v48, (uint64_t (*)(void))type metadata accessor for Application);
      _os_log_impl(&dword_0, v49, v50, "Updating %s with fixed size %s and data size %s", (uint8_t *)v51, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v8 = v100;
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_3A0D8(v46, (uint64_t (*)(void))type metadata accessor for Application);
      sub_3A0D8(v48, (uint64_t (*)(void))type metadata accessor for Application);
    }

    uint64_t v35 = v108;
    sub_391B0(v108, v107, (uint64_t (*)(void))type metadata accessor for Application);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v110 = (void *)sub_4B528(0, v110[2] + 1, 1, (unint64_t)v110);
    }
    unint64_t v57 = v110[2];
    unint64_t v56 = v110[3];
    if (v57 >= v56 >> 1) {
      uint64_t v110 = (void *)sub_4B528(v56 > 1, v57 + 1, 1, (unint64_t)v110);
    }
    uint64_t v58 = v110;
    v110[2] = v57 + 1;
    sub_39C28(v107, (uint64_t)v58+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v57, (uint64_t (*)(void))type metadata accessor for Application);
    sub_3A0D8(v35, (uint64_t (*)(void))type metadata accessor for Application);
    int64_t v10 = v103;
    uint64_t v37 = v115;
LABEL_22:
    swift_bridgeObjectRetain();
    unint64_t v59 = sub_4BC5C(v37, v38);
    char v61 = v60;
    swift_bridgeObjectRelease();
    if (v61)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v119[0] = a1;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_4ECF8();
        a1 = v119[0];
      }
      swift_bridgeObjectRelease();
      uint64_t v63 = v105;
      sub_39C28(*(void *)(a1 + 56) + *(void *)(v12 + 72) * v59, v105, (uint64_t (*)(void))type metadata accessor for Application);
      sub_4E474(v59, a1);
      swift_bridgeObjectRelease();
      sub_39C28(v63, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Application);
      uint64_t v36 = 0;
      uint64_t v35 = v108;
    }
    else
    {
      uint64_t v36 = 1;
    }
    v33 += 2;
    uint64_t v11 = v109;
    v116(v8, v36, 1, v109);
    sub_151A8((uint64_t)v8, &qword_A3530);
    swift_bridgeObjectRelease();
    --v31;
  }
  while (v31);
  swift_bridgeObjectRelease();
  uint64_t v19 = v114;
  if (*(void *)(a1 + 16))
  {
LABEL_27:
    uint64_t v64 = a1 + 64;
    uint64_t v65 = 1 << *(unsigned char *)(a1 + 32);
    uint64_t v66 = -1;
    if (v65 < 64) {
      uint64_t v66 = ~(-1 << v65);
    }
    unint64_t v67 = v66 & *(void *)(a1 + 64);
    int64_t v68 = (unint64_t)(v65 + 63) >> 6;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v70 = 0;
    uint64_t v71 = _swiftEmptyArrayStorage;
    BOOL v72 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (v67)
      {
        unint64_t v75 = __clz(__rbit64(v67));
        v67 &= v67 - 1;
        unint64_t v76 = v75 | (v70 << 6);
      }
      else
      {
        int64_t v77 = v70 + 1;
        if (__OFADD__(v70, 1))
        {
          __break(1u);
LABEL_70:
          __break(1u);
          return result;
        }
        if (v77 >= v68) {
          goto LABEL_60;
        }
        unint64_t v78 = *(void *)(v64 + 8 * v77);
        ++v70;
        if (!v78)
        {
          int64_t v70 = v77 + 1;
          if (v77 + 1 >= v68) {
            goto LABEL_60;
          }
          unint64_t v78 = *(void *)(v64 + 8 * v70);
          if (!v78)
          {
            int64_t v70 = v77 + 2;
            if (v77 + 2 >= v68) {
              goto LABEL_60;
            }
            unint64_t v78 = *(void *)(v64 + 8 * v70);
            if (!v78)
            {
              int64_t v70 = v77 + 3;
              if (v77 + 3 >= v68) {
                goto LABEL_60;
              }
              unint64_t v78 = *(void *)(v64 + 8 * v70);
              if (!v78)
              {
                int64_t v79 = v77 + 4;
                if (v79 >= v68)
                {
LABEL_60:
                  swift_release();
                  swift_getKeyPath();
                  swift_getKeyPath();
                  v119[0] = (uint64_t)v110;
                  id v86 = v97;
                  sub_76250();
                  swift_getKeyPath();
                  swift_getKeyPath();
                  v119[0] = (uint64_t)v71;
                  uint64_t v87 = (char *)v86;
                  sub_76250();
                  if (!v72[2]
                    && (swift_getKeyPath(),
                        swift_getKeyPath(),
                        sub_76240(),
                        swift_release(),
                        swift_release(),
                        uint64_t v94 = *(void *)(v119[0] + 16),
                        swift_bridgeObjectRelease(),
                        v94)
                    && *(void *)(*(void *)&v87[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_hiddenBundleIDs]
                                 + 16))
                  {
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    swift_getKeyPath();
                    swift_getKeyPath();
                    v119[0] = (uint64_t)v72;
                    Class v88 = v87;
                    sub_76250();
                  }
                  uint64_t v89 = (uint64_t)v96;
                  sub_29E90();
                  uint64_t v90 = sub_76D70();
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v89, 1, 1, v90);
                  sub_76D40();
                  uint64_t v91 = v87;
                  uint64_t v92 = sub_76D30();
                  unint64_t v93 = (void *)swift_allocObject();
                  v93[2] = v92;
                  v93[3] = &protocol witness table for MainActor;
                  v93[4] = v91;
                  sub_52508(v89, (uint64_t)&unk_A35B0, (uint64_t)v93);
                  swift_release();
                  return swift_bridgeObjectRelease();
                }
                unint64_t v78 = *(void *)(v64 + 8 * v79);
                if (!v78)
                {
                  while (1)
                  {
                    int64_t v70 = v79 + 1;
                    if (__OFADD__(v79, 1)) {
                      goto LABEL_70;
                    }
                    if (v70 >= v68) {
                      goto LABEL_60;
                    }
                    unint64_t v78 = *(void *)(v64 + 8 * v70);
                    ++v79;
                    if (v78) {
                      goto LABEL_49;
                    }
                  }
                }
                int64_t v70 = v79;
              }
            }
          }
        }
LABEL_49:
        unint64_t v67 = (v78 - 1) & v78;
        unint64_t v76 = __clz(__rbit64(v78)) + (v70 << 6);
      }
      uint64_t v80 = *(void *)(v118 + 72);
      uint64_t v81 = v113;
      sub_391B0(*(void *)(a1 + 56) + v80 * v76, v113, (uint64_t (*)(void))type metadata accessor for Application);
      sub_39C28(v81, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for Application);
      if (v19[131] == 1)
      {
        sub_391B0((uint64_t)v19, v111, (uint64_t (*)(void))type metadata accessor for Application);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v72 = (void *)sub_4B528(0, v72[2] + 1, 1, (unint64_t)v72);
        }
        unint64_t v83 = v72[2];
        unint64_t v82 = v72[3];
        unint64_t v84 = v83 + 1;
        if (v83 >= v82 >> 1)
        {
          uint64_t v73 = sub_4B528(v82 > 1, v83 + 1, 1, (unint64_t)v72);
          uint64_t v74 = v111;
          BOOL v72 = (void *)v73;
        }
        else
        {
          uint64_t v73 = (uint64_t)v72;
          uint64_t v74 = v111;
        }
      }
      else
      {
        sub_391B0((uint64_t)v19, v112, (uint64_t (*)(void))type metadata accessor for Application);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v71 = (void *)sub_4B528(0, v71[2] + 1, 1, (unint64_t)v71);
        }
        unint64_t v83 = v71[2];
        unint64_t v85 = v71[3];
        unint64_t v84 = v83 + 1;
        if (v83 < v85 >> 1)
        {
          uint64_t v73 = (uint64_t)v71;
          uint64_t v74 = v112;
        }
        else
        {
          uint64_t v73 = sub_4B528(v85 > 1, v83 + 1, 1, (unint64_t)v71);
          uint64_t v74 = v112;
          uint64_t v71 = (void *)v73;
        }
      }
      *(void *)(v73 + 16) = v84;
      sub_39C28(v74, v73+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ v83 * v80, (uint64_t (*)(void))type metadata accessor for Application);
      uint64_t v19 = v114;
      uint64_t result = sub_3A0D8((uint64_t)v114, (uint64_t (*)(void))type metadata accessor for Application);
    }
  }
LABEL_64:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_29960()
{
  return sub_29CB0();
}

uint64_t sub_29974()
{
  uint64_t v0 = sub_76200();
  sub_38C74(v0, qword_A6A58);
  uint64_t v1 = sub_1A620(v0, (uint64_t)qword_A6A58);
  uint64_t v2 = sub_761E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_29A00()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for StorageShared()) init];
  qword_A6A70 = (uint64_t)result;
  return result;
}

uint64_t sub_29A34()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();

  return swift_release();
}

uint64_t sub_29AB0(uint64_t a1, void **a2)
{
  uint64_t v4 = sub_76B10();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_391B0(a1, (uint64_t)&v13 - v8, (uint64_t (*)(void))&type metadata accessor for Volume);
  int64_t v10 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_391B0((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for Volume);
  id v11 = v10;
  sub_76250();
  return sub_3A0D8((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for Volume);
}

uint64_t sub_29BD8@<X0>(void *a1@<X8>)
{
  return sub_35B80(a1);
}

uint64_t sub_29BEC(uint64_t a1, void **a2)
{
  return sub_35CA4(a1, a2);
}

uint64_t sub_29C00()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_29C74()
{
  return sub_29CB0();
}

uint64_t sub_29C88()
{
  return sub_29CB0();
}

uint64_t sub_29C9C()
{
  return sub_29CB0();
}

uint64_t sub_29CB0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();
  swift_release();
  return v1;
}

double sub_29D1C@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_29D9C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return sub_76250();
}

uint64_t sub_29E1C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_29E90()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for Application();
  uint64_t v66 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v65 = (uint64_t)&v60 - v7;
  uint64_t v8 = sub_76B10();
  __chkstk_darwin(v8);
  int64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(sub_28814() + 16);
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t v12 = sub_28814();
    uint64_t v13 = *(void *)(v12 + 64);
    uint64_t v60 = v12 + 64;
    uint64_t v14 = 1 << *(unsigned char *)(v12 + 32);
    uint64_t v15 = -1;
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    unint64_t v16 = v15 & v13;
    int64_t v61 = (unint64_t)(v14 + 63) >> 6;
    uint64_t v67 = v12;
    swift_bridgeObjectRetain();
    int64_t v17 = 0;
    uint64_t v18 = &_swiftEmptyDictionarySingleton;
    uint64_t v64 = v2;
    uint64_t v63 = v6;
    while (1)
    {
      if (v16)
      {
        unint64_t v23 = __clz(__rbit64(v16));
        uint64_t v24 = (v16 - 1) & v16;
        unint64_t v25 = v23 | (v17 << 6);
      }
      else
      {
        int64_t v26 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_49;
        }
        if (v26 >= v61)
        {
LABEL_43:
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v11 = (uint64_t)sub_4C1B8((uint64_t)v18);
          swift_bridgeObjectRelease();
          goto LABEL_46;
        }
        unint64_t v27 = *(void *)(v60 + 8 * v26);
        ++v17;
        if (!v27)
        {
          int64_t v17 = v26 + 1;
          if (v26 + 1 >= v61) {
            goto LABEL_43;
          }
          unint64_t v27 = *(void *)(v60 + 8 * v17);
          if (!v27)
          {
            int64_t v17 = v26 + 2;
            if (v26 + 2 >= v61) {
              goto LABEL_43;
            }
            unint64_t v27 = *(void *)(v60 + 8 * v17);
            if (!v27)
            {
              int64_t v17 = v26 + 3;
              if (v26 + 3 >= v61) {
                goto LABEL_43;
              }
              unint64_t v27 = *(void *)(v60 + 8 * v17);
              if (!v27)
              {
                int64_t v17 = v26 + 4;
                if (v26 + 4 >= v61) {
                  goto LABEL_43;
                }
                unint64_t v27 = *(void *)(v60 + 8 * v17);
                if (!v27)
                {
                  int64_t v28 = v26 + 5;
                  if (v28 >= v61) {
                    goto LABEL_43;
                  }
                  unint64_t v27 = *(void *)(v60 + 8 * v28);
                  if (!v27)
                  {
                    while (1)
                    {
                      int64_t v17 = v28 + 1;
                      if (__OFADD__(v28, 1)) {
                        goto LABEL_51;
                      }
                      if (v17 >= v61) {
                        goto LABEL_43;
                      }
                      unint64_t v27 = *(void *)(v60 + 8 * v17);
                      ++v28;
                      if (v27) {
                        goto LABEL_26;
                      }
                    }
                  }
                  int64_t v17 = v28;
                }
              }
            }
          }
        }
LABEL_26:
        uint64_t v24 = (v27 - 1) & v27;
        unint64_t v25 = __clz(__rbit64(v27)) + (v17 << 6);
      }
      uint64_t v11 = v65;
      sub_391B0(*(void *)(v67 + 56) + *(void *)(v66 + 72) * v25, v65, (uint64_t (*)(void))type metadata accessor for Application);
      sub_39C28(v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Application);
      sub_5F6AC(v6, (uint64_t)&v76);
      uint64_t v29 = *((void *)&v76 + 1);
      uint64_t v2 = (void *)v76;
      uint64_t v1 = *((void *)&v77 + 1);
      uint64_t v30 = *((void *)&v78 + 1);
      uint64_t v72 = v77;
      uint64_t v73 = v78;
      uint64_t v31 = v18[2];
      uint64_t v74 = *((void *)&v80 + 1);
      swift_retain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v31)
      {
        uint64_t v32 = (uint64_t)v2;
        unint64_t v33 = sub_4BC5C((uint64_t)v2, v29);
        if (v34)
        {
          uint64_t v35 = *(void *)(v18[7] + 88 * v33 + 32);
          BOOL v36 = __OFADD__(v73, v35);
          uint64_t v37 = v73 + v35;
          if (v36) {
            goto LABEL_50;
          }
          uint64_t v73 = v37;
        }
      }
      else
      {
        uint64_t v32 = (uint64_t)v2;
      }
      unint64_t v68 = v24;
      int64_t v69 = v17;
      char v38 = v79;
      int v70 = BYTE1(v79);
      uint64_t v71 = *((void *)&v79 + 1);
      uint64_t v39 = v80;
      uint64_t v11 = v81;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v75 = v18;
      uint64_t v2 = (void *)v32;
      unint64_t v42 = sub_4BC5C(v32, v29);
      uint64_t v43 = v18[2];
      BOOL v44 = (v41 & 1) == 0;
      uint64_t v45 = v43 + v44;
      if (__OFADD__(v43, v44))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      char v46 = v41;
      if (v18[3] >= v45)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v41) {
            goto LABEL_5;
          }
        }
        else
        {
          sub_4F4B4();
          uint64_t v18 = v75;
          if (v46) {
            goto LABEL_5;
          }
        }
      }
      else
      {
        sub_4D768(v45, isUniquelyReferenced_nonNull_native);
        uint64_t v18 = v75;
        unint64_t v47 = sub_4BC5C((uint64_t)v2, v29);
        if ((v46 & 1) != (v48 & 1))
        {
          uint64_t result = sub_77080();
          __break(1u);
          return result;
        }
        unint64_t v42 = v47;
        if (v46)
        {
LABEL_5:
          uint64_t v19 = v18[7];
          uint64_t v62 = v2;
          uint64_t v20 = v1;
          uint64_t v21 = v30;
          char v22 = v11;
          uint64_t v11 = v19 + 88 * v42;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          *(void *)uint64_t v11 = v62;
          *(void *)(v11 + 8) = v29;
          *(void *)(v11 + 16) = v72;
          *(void *)(v11 + 24) = v20;
          *(void *)(v11 + 32) = v73;
          *(void *)(v11 + 40) = v21;
          *(unsigned char *)(v11 + 48) = v38;
          *(unsigned char *)(v11 + 49) = v70;
          *(void *)(v11 + 56) = v71;
          *(void *)(v11 + 64) = v39;
          *(void *)(v11 + 72) = v74;
          *(unsigned char *)(v11 + 80) = v22;
          uint64_t v1 = v20;
          goto LABEL_6;
        }
      }
      v18[(v42 >> 6) + 8] |= 1 << v42;
      long long v49 = (void *)(v18[6] + 16 * v42);
      *long long v49 = v2;
      v49[1] = v29;
      uint64_t v50 = v18[7] + 88 * v42;
      *(void *)uint64_t v50 = v2;
      *(void *)(v50 + 8) = v29;
      *(void *)(v50 + 16) = v72;
      *(void *)(v50 + 24) = v1;
      *(void *)(v50 + 32) = v73;
      *(void *)(v50 + 40) = v30;
      *(unsigned char *)(v50 + 48) = v38;
      *(unsigned char *)(v50 + 49) = v70;
      *(void *)(v50 + 56) = v71;
      *(void *)(v50 + 64) = v39;
      *(void *)(v50 + 72) = v74;
      *(unsigned char *)(v50 + 80) = v11;
      uint64_t v51 = v18[2];
      BOOL v36 = __OFADD__(v51, 1);
      uint64_t v52 = v51 + 1;
      if (v36) {
        goto LABEL_48;
      }
      v18[2] = v52;
      swift_bridgeObjectRetain();
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v6 = v63;
      sub_3A0D8((uint64_t)v63, (uint64_t (*)(void))type metadata accessor for Application);
      uint64_t v2 = v64;
      unint64_t v16 = v68;
      int64_t v17 = v69;
    }
  }
  sub_14F50(&qword_A35C0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_7CA00;
  uint64_t v1 = v11 + 32;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();
  swift_release();
  sub_3A0D8((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for Volume);
  NSString v53 = sub_76BE0();
  NSString v54 = sub_76BE0();
  id v55 = STLocalizedString(v53);

  sub_76C10();
  if (qword_A2C68 != -1) {
LABEL_52:
  }
    swift_once();
  swift_retain();
  sub_76AC0();
  long long v56 = v79;
  *(_OWORD *)(v1 + 32) = v78;
  *(_OWORD *)(v1 + 48) = v56;
  *(_OWORD *)(v1 + 64) = v80;
  *(unsigned char *)(v1 + 80) = v81;
  long long v57 = v77;
  *(_OWORD *)uint64_t v1 = v76;
  *(_OWORD *)(v1 + 16) = v57;
LABEL_46:
  swift_getKeyPath();
  swift_getKeyPath();
  unint64_t v75 = (void *)v11;
  id v58 = v2;
  return sub_76250();
}

uint64_t sub_2A6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4[2] = a4;
  sub_76D40();
  v4[3] = sub_76D30();
  uint64_t v6 = sub_76D10();
  void v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_2A784, v6, v5);
}

uint64_t sub_2A784()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_recommendationController);
  v0[6] = v1;
  v0[7] = sub_28814();
  return _swift_task_switch(sub_2A800, v1, 0);
}

uint64_t sub_2A800()
{
  sub_47B10(v0[7]);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  return _swift_task_switch(sub_1601C, v1, v2);
}

id sub_2A870()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v119 = sub_76020();
  uint64_t v118 = *(void *)(v119 - 8);
  uint64_t v2 = __chkstk_darwin(v119);
  uint64_t v116 = (char *)&v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  unint64_t v117 = (char *)&v114 - v4;
  uint64_t v5 = sub_14F50(&qword_A3670);
  __chkstk_darwin(v5 - 8);
  v141 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_76B10();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v139 = v7;
  uint64_t v140 = v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v142 = (uint64_t)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v143 = (uint64_t)&v114 - v12;
  __chkstk_darwin(v11);
  uint64_t v115 = (uint64_t)&v114 - v13;
  uint64_t v14 = sub_14F50(&qword_A34E8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  v138 = (char *)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  v137 = (char *)&v114 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v136 = (char *)&v114 - v20;
  __chkstk_darwin(v19);
  v135 = (char *)&v114 - v21;
  uint64_t v22 = sub_76070();
  __chkstk_darwin(v22 - 8);
  v133 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_76B40();
  __chkstk_darwin(v24 - 8);
  v134 = (char *)&v114 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v26 - 8);
  v145 = (char *)&v114 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_14F50(&qword_A3678);
  v131 = *(void (***)(char *, char *, uint64_t))(v132 - 8);
  __chkstk_darwin(v132);
  v130 = (char *)&v114 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_14F50(&qword_A3680);
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  v127 = (char *)&v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_14F50(&qword_A3688);
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v31 = (char *)&v114 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_14F50(&qword_A3690);
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v122 = (char *)&v114 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_14F50(&qword_A3698);
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  char v34 = (char *)&v114 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_14F50(&qword_A36A0);
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  char v38 = (char *)&v114 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = (uint64_t *)&v0[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_deviceName];
  char v40 = v1;
  id v41 = localizedDeviceName();
  uint64_t v42 = sub_76C10();
  uint64_t v44 = v43;

  uint64_t *v39 = v42;
  v39[1] = v44;
  uint64_t v45 = &v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared__categories];
  v148[0] = _swiftEmptyArrayStorage;
  sub_14F50(&qword_A3430);
  sub_76230();
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v45, v38, v35);
  char v46 = &v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared__recommendations];
  v148[0] = _swiftEmptyArrayStorage;
  sub_14F50(&qword_A3440);
  sub_76230();
  (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v46, v34, v121);
  unint64_t v47 = &v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared__followups];
  v148[0] = _swiftEmptyArrayStorage;
  sub_14F50(&qword_A3450);
  char v48 = v122;
  sub_76230();
  (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v47, v48, v124);
  long long v49 = &v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared__visibleItems];
  v148[0] = _swiftEmptyArrayStorage;
  sub_14F50(&qword_A3460);
  sub_76230();
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v125 + 32);
  uint64_t v51 = v126;
  v50(v49, v31, v126);
  uint64_t v52 = &v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared__hiddenItems];
  v148[0] = _swiftEmptyArrayStorage;
  sub_76230();
  v50(v52, v31, v51);
  NSString v53 = &v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared__systemItems];
  v148[0] = _swiftEmptyArrayStorage;
  sub_76230();
  v50(v53, v31, v51);
  NSString v54 = &v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared__currentSearch];
  v148[0] = 0;
  v148[1] = 0;
  sub_14F50(&qword_A3470);
  id v55 = v127;
  sub_76230();
  (*(void (**)(char *, char *, uint64_t))(v128 + 32))(v54, v55, v129);
  long long v56 = &v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared__gatheringFailed];
  LOBYTE(v148[0]) = 0;
  long long v57 = v130;
  sub_76230();
  v131[4](v56, v57, v132);
  uint64_t v58 = OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_systemDataInternalDetails;
  *(void *)&v40[v58] = sub_27CB4((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_syncedMediaSizes] = _swiftEmptyArrayStorage;
  *(void *)&v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_lastSizerResults] = 0;
  *(void *)&v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appProtectionSubscription] = 0;
  uint64_t v59 = OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_hiddenBundleIDs;
  *(void *)&v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_hiddenBundleIDs] = &_swiftEmptySetSingleton;
  uint64_t v129 = OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_lockedBundleIDs;
  *(void *)&v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_lockedBundleIDs] = &_swiftEmptySetSingleton;
  v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_recommendationsDidUpdateOnce] = 1;
  *(void *)&v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appSizerQueryTries] = 0;
  uint64_t v60 = OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_systemBundleIDs;
  sub_14F50(&qword_A34F8);
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_7CF50;
  *(void *)(v61 + 32) = sub_76C10();
  *(void *)(v61 + 40) = v62;
  *(void *)(v61 + 48) = sub_76C10();
  *(void *)(v61 + 56) = v63;
  *(void *)(v61 + 64) = sub_76C10();
  *(void *)(v61 + 72) = v64;
  *(void *)&v40[v60] = v61;
  uint64_t v65 = OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_datesByApplications;
  *(void *)&v40[v65] = sub_27DC8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v66 = OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_datesStreams;
  id v67 = [(id)BiomeLibrary() App];
  swift_unknownObjectRelease();
  id v68 = [v67 InFocus];
  swift_unknownObjectRelease();
  *(void *)&v40[v66] = v68;
  v148[3] = &type metadata for StorageManagementFeature;
  v148[4] = sub_39ACC();
  LOBYTE(v68) = sub_760F0();
  sub_39B20((uint64_t)v148);
  int64_t v69 = (Class *)SAAppSizer_ptr;
  if ((v68 & 1) == 0) {
    int64_t v69 = (Class *)&off_95628;
  }
  id v70 = [objc_allocWithZone(*v69) init];
  *(void *)&v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appSizer] = v70;
  type metadata accessor for RecommendationController();
  swift_allocObject();
  *(void *)&v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_recommendationController] = sub_47738();
  updated = (objc_class *)type metadata accessor for SoftwareUpdateController();
  uint64_t v72 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v72[14] = 0;
  v72[15] = 0;
  v147.receiver = v72;
  v147.super_class = updated;
  id v73 = objc_msgSendSuper2(&v147, "init");
  id v74 = objc_allocWithZone((Class)SUManagerClient);
  unint64_t v75 = v73;
  id v76 = [v74 initWithDelegate:v75];
  long long v77 = (void *)v75[14];
  v75[14] = v76;

  uint64_t v78 = sub_76D70();
  uint64_t v79 = *(void *)(v78 - 8);
  long long v80 = *(void (***)(char *, char *, uint64_t))(v79 + 56);
  uint64_t v81 = (uint64_t)v145;
  uint64_t v132 = v78;
  v131 = v80;
  v130 = (char *)(v79 + 56);
  ((void (*)(char *, uint64_t, uint64_t))v80)(v145, 1, 1);
  unint64_t v82 = (void *)swift_allocObject();
  v82[2] = 0;
  v82[3] = 0;
  v82[4] = v75;
  sub_52508(v81, (uint64_t)&unk_A36A8, (uint64_t)v82);
  swift_release();
  *(void *)&v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_softwareUpdateController] = v75;
  sub_76050();
  uint64_t v83 = sub_76A50();
  unint64_t v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56);
  v84(v135, 1, 1, v83);
  v84(v136, 1, 1, v83);
  v84(v137, 1, 1, v83);
  v84(v138, 1, 1, v83);
  uint64_t v85 = (uint64_t)v134;
  sub_76B20();
  sub_39C28(v85, (uint64_t)&v40[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_timeStats], (uint64_t (*)(void))&type metadata accessor for TimeStats);
  id v86 = self;
  id v87 = [v86 hiddenAppBundleIdentifiers];
  uint64_t v88 = sub_76D80();

  *(void *)&v40[v59] = v88;
  uint64_t v89 = v139;
  swift_bridgeObjectRelease();
  id v90 = [v86 lockedAppBundleIdentifiers];
  uint64_t v91 = sub_76D80();

  *(void *)&v40[v129] = v91;
  uint64_t v92 = (uint64_t)v141;
  swift_bridgeObjectRelease();
  sub_76AE0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48))(v92, 1, v89) == 1)
  {
    uint64_t v93 = v142;
    uint64_t v94 = v143;
    sub_151A8(v92, &qword_A3670);
    if (qword_A2C20 != -1) {
      swift_once();
    }
    uint64_t v95 = sub_76200();
    sub_1A620(v95, (uint64_t)qword_A6A58);
    unint64_t v96 = sub_761F0();
    os_log_type_t v97 = sub_76DC0();
    if (os_log_type_enabled(v96, v97))
    {
      uint64_t v98 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v98 = 0;
      _os_log_impl(&dword_0, v96, v97, "Failed to get volume placeholder with correct sizes, displaying an empty one", v98, 2u);
      swift_slowDealloc();
    }

    sub_76AF0();
    swift_bridgeObjectRetain();
    long long v99 = v117;
    sub_75FF0();
    swift_bridgeObjectRelease();
    sub_770A0();
    uint64_t v100 = v118;
    uint64_t v101 = v119;
    (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v116, v99, v119);
    sub_76B00();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
    swift_beginAccess();
    sub_391B0(v94, v93, (uint64_t (*)(void))&type metadata accessor for Volume);
    sub_76230();
    sub_3A0D8(v94, (uint64_t (*)(void))&type metadata accessor for Volume);
    swift_endAccess();
  }
  else
  {
    uint64_t v102 = v115;
    sub_39C28(v92, v115, (uint64_t (*)(void))&type metadata accessor for Volume);
    uint64_t v94 = v143;
    sub_391B0(v102, v143, (uint64_t (*)(void))&type metadata accessor for Volume);
    swift_beginAccess();
    sub_391B0(v94, v142, (uint64_t (*)(void))&type metadata accessor for Volume);
    sub_76230();
    sub_3A0D8(v94, (uint64_t (*)(void))&type metadata accessor for Volume);
    swift_endAccess();

    sub_3A0D8(v102, (uint64_t (*)(void))&type metadata accessor for Volume);
  }
  v146.receiver = v40;
  v146.super_class = ObjectType;
  id v103 = objc_msgSendSuper2(&v146, "init");
  swift_getKeyPath();
  swift_getKeyPath();
  id v104 = v103;
  sub_76240();
  swift_release();
  swift_release();
  uint64_t v105 = *(void *)(v94 + *(int *)(v89 + 28));
  sub_3A0D8(v94, (uint64_t (*)(void))&type metadata accessor for Volume);
  if (v105 >= 1) {
    sub_29E90();
  }
  Swift::Int v106 = self;
  id v107 = [v106 defaultCenter];
  [v107 addObserver:v104 selector:"startHandlers" name:UIApplicationDidBecomeActiveNotification object:0];

  id v108 = [v106 defaultCenter];
  [v108 addObserver:v104 selector:"stopHandlers" name:UIApplicationDidEnterBackgroundNotification object:0];

  uint64_t v109 = (uint64_t)v145;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v131)(v145, 1, 1, v132);
  sub_76D40();
  id v110 = v104;
  uint64_t v111 = sub_76D30();
  uint64_t v112 = (void *)swift_allocObject();
  v112[2] = v111;
  v112[3] = &protocol witness table for MainActor;
  v112[4] = v110;
  sub_52508(v109, (uint64_t)&unk_A36B8, (uint64_t)v112);

  swift_release();
  return v110;
}

uint64_t sub_2BB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4[2] = a4;
  sub_76D40();
  v4[3] = sub_76D30();
  uint64_t v6 = sub_76D10();
  void v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_2BBF4, v6, v5);
}

uint64_t sub_2BBF4()
{
  uint64_t v1 = *(char **)(v0 + 16);
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_recommendationController];
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = v1;
  return _swift_task_switch(sub_2BC70, v2, 0);
}

uint64_t sub_2BC70()
{
  uint64_t v1 = (void *)v0[2];
  sub_37888(v1, v0[6]);

  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  return _swift_task_switch(sub_1601C, v2, v3);
}

id sub_2BD04()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appProtectionSubscription];
  if (v2) {
    [v2 invalidate];
  }
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_2C138()
{
  return type metadata accessor for StorageShared();
}

uint64_t type metadata accessor for StorageShared()
{
  uint64_t result = qword_A3410;
  if (!qword_A3410) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2C18C()
{
  uint64_t v1 = sub_14F50(&qword_A34E8);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  objc_super v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v37 - v5;
  uint64_t v7 = OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appSizerQueryTries;
  if (*(uint64_t *)&v0[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appSizerQueryTries] <= 2)
  {
    uint64_t v8 = &v0[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_timeStats];
    swift_beginAccess();
    uint64_t v9 = sub_76B40();
    sub_15144((uint64_t)&v8[*(int *)(v9 + 20)], (uint64_t)v6, &qword_A34E8);
    uint64_t v10 = sub_76A50();
    uint64_t v11 = *(void *)(v10 - 8);
    int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10);
    sub_151A8((uint64_t)v6, &qword_A34E8);
    if (v12 == 1)
    {
      sub_76A40();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v4, 0, 1, v10);
      swift_beginAccess();
      sub_39DEC((uint64_t)v4, (uint64_t)&v8[*(int *)(v9 + 20)], &qword_A34E8);
      swift_endAccess();
    }
    uint64_t v13 = *(void *)&v0[v7];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (!v14)
    {
      *(void *)&v0[v7] = v15;
      uint64_t v16 = *(void **)&v0[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appSizer];
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v0;
      uint64_t v42 = (uint64_t (*)())sub_398AC;
      uint64_t v43 = v17;
      aBlock = _NSConcreteStackBlock;
      uint64_t v39 = 1107296256;
      char v40 = (uint64_t (*)())sub_32674;
      id v41 = &unk_973B0;
      uint64_t v18 = _Block_copy(&aBlock);
      id v19 = v16;
      uint64_t v20 = v0;
      swift_release();
      [v19 startObservingWithUpdateHandler:v18];
      _Block_release(v18);

      id v21 = [*(id *)&v20[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_datesStreams] publisher];
      uint64_t v42 = (uint64_t (*)())sub_32750;
      uint64_t v43 = 0;
      aBlock = _NSConcreteStackBlock;
      uint64_t v39 = 1107296256;
      char v40 = (uint64_t (*)())sub_327A8;
      id v41 = &unk_973D8;
      uint64_t v22 = _Block_copy(&aBlock);
      id v23 = [v21 filterWithIsIncluded:v22];
      _Block_release(v22);

      uint64_t v42 = nullsub_1;
      uint64_t v43 = 0;
      aBlock = _NSConcreteStackBlock;
      uint64_t v39 = 1107296256;
      char v40 = sub_32800;
      id v41 = &unk_97400;
      uint64_t v24 = _Block_copy(&aBlock);
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v20;
      uint64_t v42 = (uint64_t (*)())sub_39904;
      uint64_t v43 = v25;
      aBlock = _NSConcreteStackBlock;
      uint64_t v39 = 1107296256;
      char v40 = sub_32800;
      id v41 = &unk_97450;
      uint64_t v26 = _Block_copy(&aBlock);
      uint64_t v27 = v20;
      swift_release();
      id v28 = [v23 sinkWithCompletion:v24 receiveInput:v26];
      _Block_release(v26);
      _Block_release(v24);

      uint64_t v29 = sub_28814();
      uint64_t v30 = v27;
      uint64_t v31 = sub_37F40(&_swiftEmptyDictionarySingleton, v29, (uint64_t)v30);

      swift_bridgeObjectRelease();
      sub_28BF4(v31);
      return;
    }
    __break(1u);
    goto LABEL_11;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(aBlock) = 1;
  uint64_t v32 = v0;
  sub_76250();
  if (qword_A2C20 != -1) {
LABEL_11:
  }
    swift_once();
  uint64_t v33 = sub_76200();
  sub_1A620(v33, (uint64_t)qword_A6A58);
  char v34 = sub_761F0();
  os_log_type_t v35 = sub_76DD0();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl(&dword_0, v34, v35, "Failed to gather app list after 3 tries, aborting.", v36, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_2C734(void *a1, uint64_t a2, char *a3)
{
  uint64_t v6 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    BOOL v9 = a2 == 0;
  }
  else {
    BOOL v9 = 0;
  }
  uint64_t v10 = !v9;
  if (v9)
  {
    *(void *)&a3[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appSizerQueryTries] = 0;
    uint64_t v17 = sub_76D70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
    sub_76D40();
    id v18 = a1;
    id v19 = a3;
    uint64_t v20 = sub_76D30();
    id v21 = (void *)swift_allocObject();
    v21[2] = v20;
    v21[3] = &protocol witness table for MainActor;
    v21[4] = v19;
    v21[5] = v18;
    uint64_t v22 = &unk_A3660;
  }
  else
  {
    if (qword_A2C20 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_76200();
    sub_1A620(v11, (uint64_t)qword_A6A58);
    swift_errorRetain();
    swift_errorRetain();
    int v12 = sub_761F0();
    os_log_type_t v13 = sub_76DC0();
    if (os_log_type_enabled(v12, v13))
    {
      BOOL v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)BOOL v14 = 138412290;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v27 = v16;
        sub_76E20();
      }
      else
      {
        uint64_t v27 = 0;
        sub_76E20();
        uint64_t v16 = 0;
      }
      *uint64_t v15 = v16;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v12, v13, "Failed to update app sizes with error %@", v14, 0xCu);
      sub_14F50(&qword_A3650);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v23 = sub_76D70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 1, 1, v23);
    sub_76D40();
    uint64_t v24 = a3;
    uint64_t v25 = sub_76D30();
    id v21 = (void *)swift_allocObject();
    v21[2] = v25;
    v21[3] = &protocol witness table for MainActor;
    v21[4] = v24;
    uint64_t v22 = &unk_A3648;
  }
  sub_52508((uint64_t)v8, (uint64_t)v22, (uint64_t)v21);
  swift_release();
  return v10;
}

uint64_t sub_2CAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = sub_76D40();
  v5[3] = sub_76D30();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[4] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_15EE0;
  return sub_2CBA8(a5);
}

uint64_t sub_2CBA8(uint64_t a1)
{
  v2[52] = a1;
  v2[53] = v1;
  uint64_t v3 = sub_76020();
  v2[54] = v3;
  v2[55] = *(void *)(v3 - 8);
  v2[56] = swift_task_alloc();
  v2[57] = swift_task_alloc();
  uint64_t v4 = *(void *)(sub_76B10() - 8);
  v2[58] = v4;
  v2[59] = *(void *)(v4 + 64);
  v2[60] = swift_task_alloc();
  v2[61] = swift_task_alloc();
  uint64_t v5 = sub_14F50((uint64_t *)&unk_A3520);
  v2[62] = v5;
  v2[63] = *(void *)(v5 - 8);
  v2[64] = swift_task_alloc();
  sub_14F50(&qword_A3000);
  v2[65] = swift_task_alloc();
  sub_14F50(&qword_A3530);
  v2[66] = swift_task_alloc();
  v2[67] = swift_task_alloc();
  v2[68] = swift_task_alloc();
  v2[69] = swift_task_alloc();
  v2[70] = swift_task_alloc();
  v2[71] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Application();
  v2[72] = v6;
  v2[73] = *(void *)(v6 - 8);
  v2[74] = swift_task_alloc();
  v2[75] = swift_task_alloc();
  v2[76] = swift_task_alloc();
  sub_14F50(&qword_A3500);
  v2[77] = swift_task_alloc();
  return _swift_task_switch(sub_2CE90, 0, 0);
}

uint64_t sub_2CE90()
{
  uint64_t v1 = v0[77];
  uint64_t v2 = (void *)v0[53];
  uint64_t v3 = sub_76D70();
  v0[78] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v0[79] = v5;
  v0[80] = (v4 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v5(v1, 1, 1, v3);
  v0[81] = sub_76D40();
  id v6 = v2;
  uint64_t v7 = sub_76D30();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = v6;
  sub_52508(v1, (uint64_t)&unk_A3540, (uint64_t)v8);
  swift_release();
  v0[49] = sub_27FC8((uint64_t)_swiftEmptyArrayStorage);
  v0[82] = OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_hiddenBundleIDs;
  v0[83] = sub_76D30();
  uint64_t v10 = sub_76D10();
  return _swift_task_switch(sub_2D008, v10, v9);
}

uint64_t sub_2D008()
{
  uint64_t v1 = v0[82];
  uint64_t v2 = v0[53];
  swift_release();
  v0[84] = *(void *)(v2 + v1);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_2D088, 0, 0);
}

uint64_t sub_2D088()
{
  *(void *)(v0 + 680) = OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_lockedBundleIDs;
  *(void *)(v0 + 688) = sub_76D30();
  uint64_t v2 = sub_76D10();
  return _swift_task_switch(sub_2D120, v2, v1);
}

uint64_t sub_2D120()
{
  uint64_t v1 = v0[85];
  uint64_t v2 = v0[53];
  swift_release();
  v0[87] = *(void *)(v2 + v1);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_2D1A0, 0, 0);
}

uint64_t sub_2D1A0()
{
  uint64_t v4 = v1 + 16;
  v145 = (void *)(v1 + 160);
  objc_super v146 = (__CFString *)(v1 + 192);
  uint64_t v143 = (void *)(v1 + 224);
  v149 = (void *)(v1 + 256);
  objc_super v147 = (void *)(v1 + 288);
  v157 = (uint64_t (*)())(v1 + 344);
  unint64_t v148 = v1 + 392;
  uint64_t v5 = (uint64_t (*)())[*(id *)(v1 + 416) appData];
  uint64_t v6 = sub_14F50(&qword_A30F8);
  uint64_t v7 = sub_1B618(0, &qword_A3550);
  sub_1508C(&qword_A3558, &qword_A30F8);
  uint64_t v8 = sub_76B60();
  *(void *)(v1 + 704) = v8;

  int64_t v9 = 0;
  char v10 = *(unsigned char *)(v8 + 32);
  *(unsigned char *)(v1 + 808) = v10;
  uint64_t v11 = 1 << v10;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v8 + 64);
  *(void *)(v1 + 712) = OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_datesByApplications;
  unint64_t v159 = v1;
  if (!v13) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v14 = __clz(__rbit64(v13));
  uint64_t v15 = (v13 - 1) & v13;
  unint64_t v16 = v14 | (v9 << 6);
  uint64_t v17 = *(void *)(v1 + 704);
  while (1)
  {
    unint64_t v151 = v15;
    *(void *)(v1 + 728) = v15;
    uint64_t v153 = v9;
    *(void *)(v1 + 720) = v9;
    uint64_t v23 = 8 * v16;
    uint64_t v6 = *(void *)(*(void *)(v17 + 48) + v23);
    *(void *)(v1 + 736) = v6;
    uint64_t v5 = *(uint64_t (**)())(*(void *)(v17 + 56) + v23);
    *(void *)(v1 + 744) = v5;
    *(void *)(v1 + 384) = v6;
    *(void *)(v1 + 344) = v6;
    uint64_t v2 = (__CFString *)(v6 + 56);
    uint64_t v24 = -1 << *(unsigned char *)(v6 + 32);
    if (-v24 < 64) {
      uint64_t v25 = ~(-1 << -(char)v24);
    }
    else {
      uint64_t v25 = -1;
    }
    unint64_t v1 = v25 & *(void *)(v6 + 56);
    int64_t v0 = (unint64_t)(63 - v24) >> 6;
    swift_bridgeObjectRetain_n();
    v154 = v5;
    uint64_t v3 = 0;
    while (v1)
    {
      while (1)
      {
        unint64_t v26 = __clz(__rbit64(v1));
        v1 &= v1 - 1;
        unint64_t v27 = v26 | (v3 << 6);
LABEL_43:
        uint64_t v31 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v27);
        uint64_t v7 = *v31;
        uint64_t v32 = v31[1];
        uint64_t v33 = qword_A2C38;
        swift_bridgeObjectRetain();
        if (v33 != -1) {
          swift_once();
        }
        uint64_t v5 = (uint64_t (*)())qword_A6AC0;
        if (*(void *)(qword_A6AC0 + 16))
        {
          unint64_t v34 = sub_4BC5C(v7, v32);
          if (v35) {
            break;
          }
        }
        swift_bridgeObjectRelease();
        if (!v1) {
          goto LABEL_29;
        }
      }
      uint64_t v36 = (_OWORD *)(*((void *)v5 + 7) + 144 * v34);
      *(_OWORD *)uint64_t v4 = *v36;
      long long v37 = v36[1];
      long long v38 = v36[2];
      long long v39 = v36[4];
      *(_OWORD *)(v4 + 48) = v36[3];
      *(_OWORD *)(v4 + 64) = v39;
      *(_OWORD *)(v4 + 16) = v37;
      *(_OWORD *)(v4 + 32) = v38;
      long long v40 = v36[5];
      long long v41 = v36[6];
      long long v42 = v36[8];
      *(_OWORD *)(v4 + 112) = v36[7];
      *(_OWORD *)(v4 + 128) = v42;
      *(_OWORD *)(v4 + 80) = v40;
      *(_OWORD *)(v4 + 96) = v41;
      sub_22E04(v4);
      swift_bridgeObjectRelease();
      uint64_t v43 = swift_bridgeObjectRetain();
      sub_32E08(v43);
      uint64_t v44 = swift_bridgeObjectRetain();
      uint64_t v5 = v157;
      sub_32E08(v44);
      sub_22EC4(v4);
    }
LABEL_29:
    int64_t v28 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_74;
    }
    if (v28 < v0)
    {
      unint64_t v29 = *((void *)&v2->isa + v28);
      ++v3;
      if (v29) {
        goto LABEL_42;
      }
      uint64_t v3 = v28 + 1;
      if (v28 + 1 < v0)
      {
        unint64_t v29 = *((void *)&v2->isa + v3);
        if (v29) {
          goto LABEL_42;
        }
        uint64_t v3 = v28 + 2;
        if (v28 + 2 < v0)
        {
          unint64_t v29 = *((void *)&v2->isa + v3);
          if (v29) {
            goto LABEL_42;
          }
          int64_t v30 = v28 + 3;
          if (v30 < v0)
          {
            unint64_t v29 = *((void *)&v2->isa + v30);
            if (v29)
            {
              uint64_t v3 = v30;
LABEL_42:
              unint64_t v1 = (v29 - 1) & v29;
              unint64_t v27 = __clz(__rbit64(v29)) + (v3 << 6);
              goto LABEL_43;
            }
            while (1)
            {
              uint64_t v3 = v30 + 1;
              if (__OFADD__(v30, 1)) {
                break;
              }
              if (v3 >= v0) {
                goto LABEL_49;
              }
              unint64_t v29 = *((void *)&v2->isa + v3);
              ++v30;
              if (v29) {
                goto LABEL_42;
              }
            }
            __break(1u);
LABEL_89:
            v154 = v2;
            int64_t v0 = *(int *)(*(void *)(v1 + 576) + 84);
            uint64_t v2 = *(__CFString **)(v7 + v0);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v7 + v0) = v2;
            if (isUniquelyReferenced_nonNull_native) {
              goto LABEL_90;
            }
            goto LABEL_109;
          }
        }
      }
    }
LABEL_49:
    unint64_t v1 = v159;
    uint64_t v45 = *(void *)(v159 + 696);
    uint64_t v46 = *(void *)(v159 + 672);
    swift_release();
    uint64_t v7 = sub_32F88(v45, *(void *)(v159 + 384));
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)())(v159 + 344);
    LOBYTE(v46) = sub_32F88(v46, (uint64_t)v5);
    swift_bridgeObjectRelease();
    if (*(void *)(v6 + 16) >= 2uLL) {
      goto LABEL_65;
    }
    uint64_t v3 = sub_284B8(v6);
    uint64_t v2 = v47;
    swift_bridgeObjectRelease();
    *(void *)(v159 + 760) = v2;
    if (!v2)
    {

      int64_t v9 = v153;
      unint64_t v13 = v151;
      if (v151) {
        goto LABEL_7;
      }
      goto LABEL_8;
    }
    *(void *)(v159 + 768) = v3;
    uint64_t v48 = *(void *)(v159 + 392);
    uint64_t v150 = v3;
    if (*(void *)(v48 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v49 = sub_4BC5C(v3, (uint64_t)v2);
      uint64_t v50 = *(void *)(v159 + 584);
      uint64_t v51 = *(void *)(v159 + 560);
      if (v52)
      {
        uint64_t v53 = *(void *)(v48 + 56) + *(void *)(v50 + 72) * v49;
        uint64_t v54 = *(void *)(v159 + 576);
        sub_391B0(v53, *(void *)(v159 + 560), (uint64_t (*)(void))type metadata accessor for Application);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v54);
      }
      else
      {
        (*(void (**)(void, uint64_t, uint64_t, void))(v50 + 56))(*(void *)(v159 + 560), 1, 1, *(void *)(v159 + 576));
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v159 + 584) + 56))(*(void *)(v159 + 560), 1, 1, *(void *)(v159 + 576));
    }
    uint64_t v55 = *(void *)(v159 + 584);
    uint64_t v6 = *(void *)(v159 + 576);
    uint64_t v56 = *(void *)(v159 + 560);
    uint64_t v3 = *(void *)(v55 + 48);
    *(void *)(v159 + 776) = v3;
    *(void *)(v159 + 784) = (v55 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v3)(v56, 1, v6)) {
      break;
    }
    uint64_t v7 = *(void *)(v56 + 56);
    uint64_t v153 = *(void *)(v56 + 48);
    sub_151A8(v56, &qword_A3530);
    unint64_t v1 = (unint64_t)v149;
    uint64_t v5 = sub_46C4C(v149, v150, (uint64_t)v2);
    uint64_t v46 = v57;
    int64_t v0 = (int64_t)v154;
    if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v3)(v57, 1, v6))
    {
      unint64_t v58 = sub_729A0(v154);
      if (__OFADD__(v153, v58)) {
        goto LABEL_103;
      }
      if (__OFADD__(v7, v59))
      {
        __break(1u);
LABEL_65:
        uint64_t v60 = (void *)swift_task_alloc();
        *(void *)(v1 + 752) = v60;
        *uint64_t v60 = v1;
        v60[1] = sub_2E514;
        uint64_t v61 = *(void *)(v1 + 568);
        return sub_1D2C8(v61, v6, (uint64_t)v154, (v7 & 1) == 0, (v46 & 1) == 0);
      }
      *(void *)(v46 + 48) = v153 + v58;
      *(void *)(v46 + 56) = v7 + v59;
      unint64_t v1 = (unint64_t)v149;
    }
    ((void (*)(unint64_t, void))v5)(v1, 0);
    swift_bridgeObjectRelease();

    unint64_t v1 = v159;
    unint64_t v13 = *(void *)(v159 + 728);
    int64_t v9 = *(void *)(v159 + 720);
    if (v13) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_103:
      __break(1u);
      goto LABEL_104;
    }
    int64_t v19 = (unint64_t)((1 << *(unsigned char *)(v1 + 808)) + 63) >> 6;
    uint64_t v17 = *(void *)(v1 + 704);
    if (v18 >= v19) {
      goto LABEL_68;
    }
    uint64_t v20 = v17 + 64;
    unint64_t v21 = *(void *)(v17 + 64 + 8 * v18);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v19) {
        goto LABEL_68;
      }
      unint64_t v21 = *(void *)(v20 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v19) {
          goto LABEL_68;
        }
        unint64_t v21 = *(void *)(v20 + 8 * v9);
        if (!v21)
        {
          int64_t v22 = v18 + 3;
          if (v22 < v19)
          {
            unint64_t v21 = *(void *)(v20 + 8 * v22);
            if (v21)
            {
              int64_t v9 = v22;
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v9 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                break;
              }
              if (v9 >= v19) {
                goto LABEL_68;
              }
              unint64_t v21 = *(void *)(v20 + 8 * v9);
              ++v22;
              if (v21) {
                goto LABEL_21;
              }
            }
LABEL_104:
            __break(1u);
            goto LABEL_105;
          }
LABEL_68:
          swift_release();
          uint64_t v63 = *(void *)(v1 + 584);
          uint64_t v64 = *(void *)(v1 + 576);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v65 = sub_76C10();
          uint64_t v66 = v147;
          uint64_t v6 = (uint64_t)sub_46C4C(v147, v65, v67);
          uint64_t v7 = v68;
          uint64_t v3 = *(void *)(v63 + 48);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v3)(v68, 1, v64))
          {
            uint64_t v4 = 0;
            goto LABEL_75;
          }
LABEL_74:
          uint64_t v153 = *(void *)(v1 + 576);
          uint64_t v72 = *(void *)(v1 + 504);
          uint64_t v71 = *(void *)(v1 + 512);
          uint64_t v152 = *(void *)(v1 + 496);
          id v73 = [*(id *)(v1 + 416) systemDataDetails];
          sub_1B618(0, &qword_A3570);
          uint64_t v155 = v3;
          uint64_t v74 = sub_76B60();

          uint64_t v4 = 0;
          sub_281C4(v74);
          *(void *)(v1 + 408) = v75;
          swift_getKeyPath();
          sub_75FB0();
          sub_14F50(&qword_A3578);
          sub_1508C(&qword_A3580, &qword_A3578);
          sub_1508C(&qword_A3588, (uint64_t *)&unk_A3520);
          uint64_t v76 = sub_76C80();
          (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v152);
          uint64_t v66 = v147;
          uint64_t v3 = v155;
          swift_bridgeObjectRelease();
          unint64_t v1 = v159;
          swift_bridgeObjectRelease();
          *(void *)(v7 + *(int *)(v153 + 84)) = v76;
          swift_bridgeObjectRelease();
LABEL_75:
          ((void (*)(void *, void))v6)(v66, 0);
          swift_bridgeObjectRelease();
          v154 = @"com.apple.fakeapp.System";
          uint64_t v77 = sub_76C10();
          uint64_t v79 = *(void *)v148;
          if (*(void *)(*(void *)v148 + 16) && (unint64_t v80 = sub_4BC5C(v77, v78), (v81 & 1) != 0))
          {
            sub_391B0(*(void *)(v79 + 56) + *(void *)(*(void *)(v1 + 584) + 72) * v80, *(void *)(v1 + 528), (uint64_t (*)(void))type metadata accessor for Application);
            uint64_t v82 = 0;
          }
          else
          {
            uint64_t v82 = 1;
          }
          uint64_t v83 = *(void *)(v1 + 576);
          uint64_t v84 = *(void *)(v1 + 528);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 584) + 56))(v84, v82, 1, v83);
          swift_bridgeObjectRelease();
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v3)(v84, 1, v83) == 1)
          {
            sub_151A8(*(void *)(v1 + 528), &qword_A3530);
            int64_t v0 = v1;
            uint64_t v2 = v146;
            while (1)
            {
              uint64_t v7 = *(void *)(v0 + 576);
              uint64_t v113 = sub_76C10();
              int64_t v114 = v0;
              int64_t v0 = v115;
              uint64_t v116 = sub_46C4C(v2, v113, v115);
              uint64_t v6 = v117;
              if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v3)(v117, 1, v7))
              {
                uint64_t v118 = *(void *)(v114 + 504);
                uint64_t v7 = *(void *)(v114 + 512);
                uint64_t v158 = *(void *)(v114 + 496);
                unint64_t v159 = *(void *)(v114 + 576);
                id v119 = [*(id *)(v114 + 416) systemDataDetails];
                sub_1B618(0, &qword_A3570);
                uint64_t v120 = sub_76B60();

                sub_281C4(v120);
                *(void *)(v114 + 360) = v121;
                swift_getKeyPath();
                sub_75FB0();
                sub_14F50(&qword_A3578);
                sub_1508C(&qword_A3580, &qword_A3578);
                sub_1508C(&qword_A3588, (uint64_t *)&unk_A3520);
                uint64_t v122 = sub_76C80();
                uint64_t v123 = *(void (**)(uint64_t, uint64_t))(v118 + 8);
                uint64_t v3 = v118 + 8;
                v123(v7, v158);
                uint64_t v4 = *(void *)(v114 + 360);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                *(void *)(v6 + *(int *)(v159 + 84)) = v122;
                swift_bridgeObjectRelease();
              }
              ((void (*)(__CFString *, void))v116)(v2, 0);
              uint64_t v5 = *(uint64_t (**)())(v114 + 416);
              swift_bridgeObjectRelease();
              uint64_t v124 = (uint64_t)[v5 diskCapacity];
              if (v124 < 0)
              {
LABEL_105:
                __break(1u);
              }
              else
              {
                uint64_t v4 = v124;
                if (((unint64_t)[*(id *)(v114 + 416) diskUsed] & 0x8000000000000000) == 0)
                {
                  uint64_t v142 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 632);
                  uint64_t v140 = *(void *)(v114 + 616);
                  uint64_t v141 = *(void *)(v114 + 624);
                  uint64_t v138 = *(void *)(v114 + 488);
                  uint64_t v139 = *(void *)(v114 + 480);
                  uint64_t v125 = *(void *)(v114 + 456);
                  uint64_t v144 = *(void *)(v114 + 464);
                  uint64_t v126 = *(void *)(v114 + 440);
                  uint64_t v127 = *(void *)(v114 + 448);
                  int64_t v128 = v114;
                  int64_t v131 = v114 + 424;
                  v130 = *(void **)(v114 + 424);
                  uint64_t v129 = *(void *)(v131 + 8);
                  sub_76AF0();
                  swift_bridgeObjectRetain();
                  sub_75FF0();
                  swift_bridgeObjectRelease();
                  sub_770A0();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 16))(v127, v125, v129);
                  sub_76B00();
                  (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v125, v129);
                  v142(v140, 1, 1, v141);
                  uint64_t v132 = *(void *)(v128 + 392);
                  sub_391B0(v138, v139, (uint64_t (*)(void))&type metadata accessor for Volume);
                  id v133 = v130;
                  swift_bridgeObjectRetain();
                  uint64_t v134 = sub_76D30();
                  unint64_t v135 = (*(unsigned __int8 *)(v144 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80);
                  v136 = (void *)swift_allocObject();
                  v136[2] = v134;
                  v136[3] = &protocol witness table for MainActor;
                  v136[4] = v133;
                  v136[5] = v132;
                  sub_39C28(v139, (uint64_t)v136 + v135, (uint64_t (*)(void))&type metadata accessor for Volume);
                  sub_52508(v140, (uint64_t)&unk_A3568, (uint64_t)v136);
                  swift_release();
                  sub_3A0D8(v138, (uint64_t (*)(void))&type metadata accessor for Volume);
                  swift_bridgeObjectRelease();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  v137 = *(uint64_t (**)(void))(v128 + 8);
                  return v137();
                }
              }
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              uint64_t v2 = (__CFString *)sub_4B65C(0, (int64_t)(v2->data + 1), 1, v2);
              *(void *)(v7 + v0) = v2;
LABEL_90:
              unint64_t data = (unint64_t)v2->data;
              unint64_t length = v2->length;
              if (data >= length >> 1)
              {
                uint64_t v2 = (__CFString *)sub_4B65C((void *)(length > 1), data + 1, 1, v2);
                *(void *)(v7 + v0) = v2;
              }
              int64_t v0 = v159;
              v2->unint64_t data = (char *)(data + 1);
              uint64_t v112 = &v2->isa + 5 * data;
              v112[4] = (void *)7565161;
              v112[5] = (void *)0xE300000000000000;
              v112[6] = v154;
              v112[7] = (void *)v3;
              v112[8] = (void *)v6;
LABEL_93:
              v5();
              swift_bridgeObjectRelease();
              uint64_t v3 = v4;
LABEL_94:
              sub_3A0D8(*(void *)(v0 + 592), (uint64_t (*)(void))type metadata accessor for Application);
              uint64_t v2 = v146;
              uint64_t v4 = v153;
            }
          }
          uint64_t v156 = *(void *)(v1 + 576);
          uint64_t v85 = *(void *)(v1 + 504);
          uint64_t v86 = *(void *)(v1 + 512);
          uint64_t v87 = *(void *)(v1 + 496);
          uint64_t v88 = *(void **)(v1 + 416);
          sub_39C28(*(void *)(v1 + 528), *(void *)(v1 + 592), (uint64_t (*)(void))type metadata accessor for Application);
          id v89 = [v88 systemDetails];
          sub_1B618(0, &qword_A3570);
          uint64_t v90 = sub_76B60();

          sub_281C4(v90);
          *(void *)(v1 + 376) = v91;
          swift_getKeyPath();
          sub_75FB0();
          sub_14F50(&qword_A3578);
          sub_1508C(&qword_A3580, &qword_A3578);
          sub_1508C(&qword_A3588, (uint64_t *)&unk_A3520);
          uint64_t v92 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v3;
          uint64_t v93 = sub_76C80();
          (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v86, v87);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_28538(v93);
          uint64_t v153 = 0;
          uint64_t v7 = sub_76D00();
          swift_bridgeObjectRelease();
          uint64_t v94 = sub_76C10();
          uint64_t v2 = (__CFString *)v95;
          uint64_t v6 = (uint64_t)v145;
          uint64_t v5 = sub_46C4C(v145, v94, v95);
          uint64_t v97 = v96;
          uint64_t v4 = (uint64_t)v92;
          int v98 = v92(v96, 1, v156);
          int64_t v0 = v1;
          if (!v98) {
            *(void *)(v97 + *(int *)(*(void *)(v1 + 576) + 84)) = v93;
          }
          swift_bridgeObjectRelease();
          ((void (*)(void *, void))v5)(v145, 0);
          swift_bridgeObjectRelease();
          uint64_t v3 = v4;
          if (v7 < 100000001) {
            goto LABEL_94;
          }
          long long v99 = *(void **)(v1 + 592);
          uint64_t v100 = v99[6];
          uint64_t v101 = v99[7];
          BOOL v102 = __OFADD__(v100, v101);
          uint64_t v103 = v100 + v101;
          if (v102) {
            goto LABEL_107;
          }
          uint64_t v2 = (__CFString *)(v103 - v7);
          if (__OFSUB__(v103, v7)) {
            goto LABEL_108;
          }
          uint64_t v104 = *(void *)(v1 + 576);
          uint64_t v3 = v99[2];
          uint64_t v6 = v99[3];
          uint64_t v105 = sub_76C10();
          uint64_t v107 = v106;
          swift_bridgeObjectRetain();
          uint64_t v5 = sub_46C4C(v143, v105, v107);
          uint64_t v7 = v108;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v4)(v108, 1, v104))
          {
            swift_bridgeObjectRelease();
            int64_t v0 = v1;
            goto LABEL_93;
          }
          goto LABEL_89;
        }
      }
    }
LABEL_21:
    uint64_t v15 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v9 << 6);
  }
  sub_151A8(v56, &qword_A3530);
  int64_t v69 = (void *)swift_task_alloc();
  *(void *)(v159 + 792) = v69;
  *int64_t v69 = v159;
  v69[1] = sub_2F9C4;
  uint64_t v70 = *(void *)(v159 + 552);
  return sub_1EB6C(v70, v150, (uint64_t)v2, (uint64_t)v154, (v7 & 1) == 0, (v46 & 1) == 0);
}

uint64_t sub_2E514()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_2E62C, 0, 0);
}

uint64_t sub_2E62C()
{
  unint64_t v168 = v1;
  uint64_t v155 = (uint64_t (*)())(v1 + 160);
  uint64_t v156 = (void *)(v1 + 192);
  v157 = (void *)(v1 + 288);
  uint64_t v158 = (void *)(v1 + 256);
  v164 = (uint64_t (*)())(v1 + 344);
  uint64_t v4 = *(uint64_t (**)())(v1 + 568);
  int v5 = (*(uint64_t (**)(uint64_t (*)(), uint64_t, void))(*(void *)(v1 + 584) + 48))(v4, 1, *(void *)(v1 + 576));
  uint64_t v6 = *(void **)(v1 + 744);
  unint64_t v151 = (void *)(v1 + 224);
  if (v5 == 1)
  {

    sub_151A8((uint64_t)v4, &qword_A3530);
  }
  else
  {
    uint64_t v7 = *(uint64_t **)(v1 + 608);
    uint64_t v0 = *(void *)(v1 + 600);
    sub_39C28((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Application);
    uint64_t v8 = *v7;
    uint64_t v2 = (void *)v7[1];
    sub_391B0((uint64_t)v7, v0, (uint64_t (*)(void))type metadata accessor for Application);
    swift_bridgeObjectRetain();
    uint64_t v9 = *(void *)(v1 + 392);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v167 = v9;
    uint64_t v4 = (uint64_t (*)())&v167;
    sub_3714C(v0, v8, (uint64_t)v2, isUniquelyReferenced_nonNull_native);
    *(void *)(v1 + 392) = v167;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_3A0D8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Application);
  }
  uint64_t v11 = v1 + 16;
  unint64_t v159 = v1 + 392;
  uint64_t v12 = (uint64_t (*)())&unk_A6000;
  unint64_t v166 = v1;
LABEL_5:
  unint64_t v13 = *(void *)(v1 + 728);
  int64_t v14 = *(void *)(v1 + 720);
  if (v13)
  {
LABEL_6:
    unint64_t v15 = __clz(__rbit64(v13));
    uint64_t v16 = (v13 - 1) & v13;
    unint64_t v17 = v15 | (v14 << 6);
    uint64_t v18 = *(void *)(v1 + 704);
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v19 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_102;
    }
    int64_t v20 = (unint64_t)((1 << *(unsigned char *)(v1 + 808)) + 63) >> 6;
    uint64_t v18 = *(void *)(v1 + 704);
    if (v19 >= v20) {
      goto LABEL_67;
    }
    uint64_t v21 = v18 + 64;
    unint64_t v22 = *(void *)(v18 + 64 + 8 * v19);
    ++v14;
    if (!v22)
    {
      int64_t v14 = v19 + 1;
      if (v19 + 1 >= v20) {
        goto LABEL_67;
      }
      unint64_t v22 = *(void *)(v21 + 8 * v14);
      if (!v22)
      {
        int64_t v14 = v19 + 2;
        if (v19 + 2 >= v20) {
          goto LABEL_67;
        }
        unint64_t v22 = *(void *)(v21 + 8 * v14);
        if (!v22)
        {
          int64_t v23 = v19 + 3;
          if (v23 >= v20)
          {
LABEL_67:
            swift_release();
            uint64_t v72 = *(void *)(v1 + 584);
            uint64_t v73 = *(void *)(v1 + 576);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v74 = sub_76C10();
            uint64_t v75 = v157;
            uint64_t v29 = (uint64_t)sub_46C4C(v157, v74, v76);
            uint64_t v11 = v77;
            uint64_t v3 = *(void *)(v72 + 48);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v3)(v77, 1, v73))
            {
              uint64_t v0 = 0;
              goto LABEL_71;
            }
LABEL_70:
            int64_t v161 = *(void *)(v1 + 576);
            uint64_t v79 = *(void *)(v1 + 504);
            uint64_t v78 = *(void *)(v1 + 512);
            uint64_t v80 = *(void *)(v166 + 496);
            id v81 = [*(id *)(v166 + 416) systemDataDetails];
            sub_1B618(0, &qword_A3570);
            v162 = (__CFString *)v3;
            uint64_t v82 = sub_76B60();

            uint64_t v0 = 0;
            sub_281C4(v82);
            *(void *)(v166 + 408) = v83;
            swift_getKeyPath();
            sub_75FB0();
            sub_14F50(&qword_A3578);
            sub_1508C(&qword_A3580, &qword_A3578);
            sub_1508C(&qword_A3588, (uint64_t *)&unk_A3520);
            uint64_t v84 = sub_76C80();
            uint64_t v85 = v80;
            unint64_t v1 = v166;
            (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v85);
            uint64_t v3 = (uint64_t)v162;
            swift_bridgeObjectRelease();
            uint64_t v75 = v157;
            swift_bridgeObjectRelease();
            *(void *)(v11 + *(int *)(v161 + 84)) = v84;
            swift_bridgeObjectRelease();
LABEL_71:
            ((void (*)(void *, void))v29)(v75, 0);
            swift_bridgeObjectRelease();
            uint64_t v86 = sub_76C10();
            uint64_t v88 = *(void *)v159;
            if (*(void *)(*(void *)v159 + 16) && (unint64_t v89 = sub_4BC5C(v86, v87), (v90 & 1) != 0))
            {
              sub_391B0(*(void *)(v88 + 56) + *(void *)(*(void *)(v1 + 584) + 72) * v89, *(void *)(v1 + 528), (uint64_t (*)(void))type metadata accessor for Application);
              uint64_t v91 = 0;
            }
            else
            {
              uint64_t v91 = 1;
            }
            uint64_t v92 = *(void *)(v1 + 576);
            uint64_t v93 = *(void *)(v1 + 528);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 584) + 56))(v93, v91, 1, v92);
            swift_bridgeObjectRelease();
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v3)(v93, 1, v92) == 1)
            {
              sub_151A8(*(void *)(v1 + 528), &qword_A3530);
              uint64_t v2 = v156;
              while (1)
              {
                uint64_t v11 = *(void *)(v1 + 576);
                uint64_t v122 = sub_76C10();
                uint64_t v12 = sub_46C4C(v2, v122, v123);
                uint64_t v125 = v124;
                if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v3)(v124, 1, v11))
                {
                  uint64_t v126 = *(void *)(v1 + 504);
                  uint64_t v11 = *(void *)(v1 + 512);
                  uint64_t v163 = *(void *)(v1 + 496);
                  uint64_t v165 = *(void *)(v1 + 576);
                  id v127 = [*(id *)(v1 + 416) systemDataDetails];
                  sub_1B618(0, &qword_A3570);
                  uint64_t v128 = sub_76B60();

                  sub_281C4(v128);
                  *(void *)(v166 + 360) = v129;
                  swift_getKeyPath();
                  sub_75FB0();
                  sub_14F50(&qword_A3578);
                  sub_1508C(&qword_A3580, &qword_A3578);
                  sub_1508C(&qword_A3588, (uint64_t *)&unk_A3520);
                  uint64_t v130 = sub_76C80();
                  int64_t v131 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
                  uint64_t v3 = v126 + 8;
                  v131(v11, v163);
                  uint64_t v0 = *(void *)(v166 + 360);
                  unint64_t v1 = v166;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  *(void *)(v125 + *(int *)(v165 + 84)) = v130;
                  swift_bridgeObjectRelease();
                }
                ((void (*)(void *, void))v12)(v2, 0);
                uint64_t v4 = *(uint64_t (**)())(v1 + 416);
                swift_bridgeObjectRelease();
                uint64_t v132 = (uint64_t)[v4 diskCapacity];
                if (v132 < 0)
                {
LABEL_103:
                  __break(1u);
                }
                else
                {
                  uint64_t v3 = v132;
                  if (((unint64_t)[*(id *)(v1 + 416) diskUsed] & 0x8000000000000000) == 0)
                  {
                    uint64_t v153 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 632);
                    uint64_t v150 = *(void *)(v1 + 616);
                    uint64_t v152 = *(void *)(v1 + 624);
                    uint64_t v133 = *(void *)(v1 + 488);
                    uint64_t v134 = *(void *)(v1 + 456);
                    uint64_t v154 = *(void *)(v1 + 464);
                    uint64_t v135 = *(void *)(v1 + 440);
                    uint64_t v136 = *(void *)(v1 + 448);
                    uint64_t v137 = *(void *)(v1 + 432);
                    objc_super v147 = *(void **)(v1 + 424);
                    uint64_t v148 = *(void *)(v1 + 480);
                    sub_76AF0();
                    swift_bridgeObjectRetain();
                    sub_75FF0();
                    swift_bridgeObjectRelease();
                    sub_770A0();
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 16))(v136, v134, v137);
                    sub_76B00();
                    (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v134, v137);
                    v153(v150, 1, 1, v152);
                    uint64_t v138 = *(void *)(v1 + 392);
                    sub_391B0(v133, v148, (uint64_t (*)(void))&type metadata accessor for Volume);
                    id v139 = v147;
                    swift_bridgeObjectRetain();
                    uint64_t v140 = sub_76D30();
                    unint64_t v141 = (*(unsigned __int8 *)(v154 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
                    uint64_t v142 = (void *)swift_allocObject();
                    v142[2] = v140;
                    v142[3] = &protocol witness table for MainActor;
                    v142[4] = v139;
                    v142[5] = v138;
                    sub_39C28(v148, (uint64_t)v142 + v141, (uint64_t (*)(void))&type metadata accessor for Volume);
                    sub_52508(v150, (uint64_t)&unk_A3568, (uint64_t)v142);
                    swift_release();
                    sub_3A0D8(v133, (uint64_t (*)(void))&type metadata accessor for Volume);
                    swift_bridgeObjectRelease();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    uint64_t v143 = *(uint64_t (**)(void))(v1 + 8);
                    return v143();
                  }
                }
                __break(1u);
LABEL_105:
                __break(1u);
LABEL_106:
                __break(1u);
LABEL_107:
                __break(1u);
LABEL_108:
                __break(1u);
LABEL_109:
                uint64_t v2 = sub_4B65C(0, v2[2] + 1, 1, v2);
                *(void *)((char *)v12 + v11) = v2;
LABEL_86:
                uint64_t v118 = v162;
                unint64_t v120 = v2[2];
                unint64_t v119 = v2[3];
                if (v120 >= v119 >> 1)
                {
                  objc_super v146 = sub_4B65C((void *)(v119 > 1), v120 + 1, 1, v2);
                  uint64_t v118 = v162;
                  uint64_t v2 = v146;
                  *(void *)((char *)v12 + v11) = v146;
                }
                v2[2] = v120 + 1;
                uint64_t v121 = &v2[5 * v120];
                v121[4] = 7565161;
                v121[5] = 0xE300000000000000;
                v121[6] = v161;
                v121[7] = v118;
                v121[8] = v3;
                unint64_t v1 = v166;
                uint64_t v2 = v151;
LABEL_89:
                ((void (*)(void *, void))v4)(v2, 0);
                swift_bridgeObjectRelease();
                uint64_t v3 = v0;
LABEL_90:
                sub_3A0D8(*(void *)(v1 + 592), (uint64_t (*)(void))type metadata accessor for Application);
                uint64_t v2 = v156;
                uint64_t v0 = v160;
              }
            }
            int64_t v161 = *(void *)(v1 + 576);
            v162 = @"com.apple.fakeapp.System";
            uint64_t v94 = *(void *)(v1 + 504);
            uint64_t v95 = *(void *)(v1 + 512);
            uint64_t v96 = *(void *)(v1 + 496);
            uint64_t v97 = *(void **)(v1 + 416);
            sub_39C28(*(void *)(v1 + 528), *(void *)(v1 + 592), (uint64_t (*)(void))type metadata accessor for Application);
            id v98 = [v97 systemDetails];
            sub_1B618(0, &qword_A3570);
            uint64_t v99 = sub_76B60();

            sub_281C4(v99);
            *(void *)(v1 + 376) = v100;
            swift_getKeyPath();
            sub_75FB0();
            sub_14F50(&qword_A3578);
            sub_1508C(&qword_A3580, &qword_A3578);
            sub_1508C(&qword_A3588, (uint64_t *)&unk_A3520);
            uint64_t v101 = (unsigned int (*)(uint64_t, uint64_t, int64_t))v3;
            uint64_t v102 = sub_76C80();
            (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v95, v96);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_28538(v102);
            uint64_t v160 = 0;
            uint64_t v11 = sub_76D00();
            swift_bridgeObjectRelease();
            uint64_t v103 = sub_76C10();
            uint64_t v2 = (void *)v104;
            uint64_t v12 = v155;
            uint64_t v4 = sub_46C4C(v155, v103, v104);
            uint64_t v106 = v105;
            uint64_t v0 = (uint64_t)v101;
            if (!v101(v105, 1, v161)) {
              *(void *)(v106 + *(int *)(*(void *)(v1 + 576) + 84)) = v102;
            }
            swift_bridgeObjectRelease();
            ((void (*)(uint64_t (*)(), void))v4)(v155, 0);
            swift_bridgeObjectRelease();
            unint64_t v1 = v166;
            uint64_t v3 = (uint64_t)v101;
            if (v11 < 100000001) {
              goto LABEL_90;
            }
            uint64_t v107 = *(void **)(v166 + 592);
            uint64_t v108 = v107[6];
            uint64_t v109 = v107[7];
            BOOL v110 = __OFADD__(v108, v109);
            uint64_t v111 = v108 + v109;
            if (v110) {
              goto LABEL_107;
            }
            int64_t v161 = v111 - v11;
            uint64_t v2 = v151;
            if (__OFSUB__(v111, v11)) {
              goto LABEL_108;
            }
            uint64_t v112 = *(void *)(v166 + 576);
            uint64_t v29 = v107[2];
            uint64_t v3 = v107[3];
            uint64_t v113 = sub_76C10();
            uint64_t v115 = v114;
            swift_bridgeObjectRetain();
            uint64_t v4 = sub_46C4C(v151, v113, v115);
            uint64_t v11 = v116;
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v0)(v116, 1, v112))
            {
              swift_bridgeObjectRelease();
              goto LABEL_89;
            }
            goto LABEL_85;
          }
          unint64_t v22 = *(void *)(v21 + 8 * v23);
          if (!v22)
          {
            while (1)
            {
              int64_t v14 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                break;
              }
              if (v14 >= v20) {
                goto LABEL_67;
              }
              unint64_t v22 = *(void *)(v21 + 8 * v14);
              ++v23;
              if (v22) {
                goto LABEL_20;
              }
            }
LABEL_102:
            __break(1u);
            goto LABEL_103;
          }
          int64_t v14 = v23;
        }
      }
    }
LABEL_20:
    uint64_t v16 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v14 << 6);
LABEL_21:
    uint64_t v160 = v16;
    int64_t v161 = v14;
    *(void *)(v1 + 728) = v16;
    *(void *)(v1 + 720) = v14;
    uint64_t v24 = 8 * v17;
    uint64_t v3 = *(void *)(*(void *)(v18 + 48) + v24);
    *(void *)(v1 + 736) = v3;
    uint64_t v4 = *(uint64_t (**)())(*(void *)(v18 + 56) + v24);
    *(void *)(v1 + 744) = v4;
    *(void *)(v1 + 384) = v3;
    *(void *)(v1 + 344) = v3;
    uint64_t v25 = v3 + 56;
    uint64_t v26 = -1 << *(unsigned char *)(v3 + 32);
    if (-v26 < 64) {
      uint64_t v27 = ~(-1 << -(char)v26);
    }
    else {
      uint64_t v27 = -1;
    }
    unint64_t v1 = v27 & *(void *)(v3 + 56);
    int64_t v28 = (unint64_t)(63 - v26) >> 6;
    swift_bridgeObjectRetain_n();
    v162 = v4;
    uint64_t v29 = 0;
    while (v1)
    {
      while (1)
      {
        unint64_t v30 = __clz(__rbit64(v1));
        v1 &= v1 - 1;
        unint64_t v31 = v30 | (v29 << 6);
LABEL_42:
        char v35 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v31);
        uint64_t v0 = *v35;
        uint64_t v36 = v35[1];
        uint64_t v37 = qword_A2C38;
        swift_bridgeObjectRetain();
        if (v37 != -1) {
          swift_once();
        }
        uint64_t v4 = (uint64_t (*)())qword_A6AC0;
        if (*(void *)(qword_A6AC0 + 16))
        {
          unint64_t v38 = sub_4BC5C(v0, v36);
          if (v39) {
            break;
          }
        }
        swift_bridgeObjectRelease();
        if (!v1) {
          goto LABEL_28;
        }
      }
      long long v40 = (_OWORD *)(*((void *)v4 + 7) + 144 * v38);
      *(_OWORD *)uint64_t v11 = *v40;
      long long v41 = v40[1];
      long long v42 = v40[2];
      long long v43 = v40[4];
      *(_OWORD *)(v11 + 48) = v40[3];
      *(_OWORD *)(v11 + 64) = v43;
      *(_OWORD *)(v11 + 16) = v41;
      *(_OWORD *)(v11 + 32) = v42;
      long long v44 = v40[5];
      long long v45 = v40[6];
      long long v46 = v40[8];
      *(_OWORD *)(v11 + 112) = v40[7];
      *(_OWORD *)(v11 + 128) = v46;
      *(_OWORD *)(v11 + 80) = v44;
      *(_OWORD *)(v11 + 96) = v45;
      sub_22E04(v11);
      swift_bridgeObjectRelease();
      uint64_t v47 = swift_bridgeObjectRetain();
      sub_32E08(v47);
      uint64_t v48 = swift_bridgeObjectRetain();
      uint64_t v4 = v164;
      sub_32E08(v48);
      sub_22EC4(v11);
    }
LABEL_28:
    int64_t v32 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
      goto LABEL_70;
    }
    if (v32 < v28)
    {
      unint64_t v33 = *(void *)(v25 + 8 * v32);
      ++v29;
      if (v33) {
        goto LABEL_41;
      }
      uint64_t v29 = v32 + 1;
      if (v32 + 1 < v28)
      {
        unint64_t v33 = *(void *)(v25 + 8 * v29);
        if (v33) {
          goto LABEL_41;
        }
        uint64_t v29 = v32 + 2;
        if (v32 + 2 < v28)
        {
          unint64_t v33 = *(void *)(v25 + 8 * v29);
          if (v33) {
            goto LABEL_41;
          }
          int64_t v34 = v32 + 3;
          if (v34 < v28)
          {
            unint64_t v33 = *(void *)(v25 + 8 * v34);
            if (v33)
            {
              uint64_t v29 = v34;
LABEL_41:
              unint64_t v1 = (v33 - 1) & v33;
              unint64_t v31 = __clz(__rbit64(v33)) + (v29 << 6);
              goto LABEL_42;
            }
            while (1)
            {
              uint64_t v29 = v34 + 1;
              if (__OFADD__(v34, 1)) {
                break;
              }
              if (v29 >= v28) {
                goto LABEL_48;
              }
              unint64_t v33 = *(void *)(v25 + 8 * v29);
              ++v34;
              if (v33) {
                goto LABEL_41;
              }
            }
            __break(1u);
LABEL_85:
            v162 = (__CFString *)v29;
            uint64_t v12 = (uint64_t (*)())*(int *)(*(void *)(v1 + 576) + 84);
            uint64_t v2 = *(void **)((char *)v12 + v11);
            char v117 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)((char *)v12 + v11) = v2;
            if (v117) {
              goto LABEL_86;
            }
            goto LABEL_109;
          }
        }
      }
    }
LABEL_48:
    unint64_t v1 = v166;
    uint64_t v49 = *(void *)(v166 + 696);
    uint64_t v50 = *(void *)(v166 + 672);
    swift_release();
    char v51 = sub_32F88(v49, *(void *)(v166 + 384));
    swift_bridgeObjectRelease();
    uint64_t v4 = *(uint64_t (**)())(v166 + 344);
    uint64_t v0 = sub_32F88(v50, (uint64_t)v4);
    swift_bridgeObjectRelease();
    if (*(void *)(v3 + 16) >= 2uLL) {
      break;
    }
    uint64_t v52 = sub_284B8(v3);
    uint64_t v2 = v53;
    swift_bridgeObjectRelease();
    *(void *)(v166 + 760) = v2;
    if (v2)
    {
      *(void *)(v166 + 768) = v52;
      uint64_t v54 = *(void *)(v166 + 392);
      char v149 = v51;
      if (*(void *)(v54 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v55 = sub_4BC5C(v52, (uint64_t)v2);
        uint64_t v56 = *(void *)(v166 + 584);
        uint64_t v57 = *(void *)(v166 + 560);
        if (v58)
        {
          uint64_t v59 = *(void *)(v54 + 56) + *(void *)(v56 + 72) * v55;
          uint64_t v60 = *(void *)(v166 + 576);
          sub_391B0(v59, *(void *)(v166 + 560), (uint64_t (*)(void))type metadata accessor for Application);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v57, 0, 1, v60);
        }
        else
        {
          (*(void (**)(void, uint64_t, uint64_t, void))(v56 + 56))(*(void *)(v166 + 560), 1, 1, *(void *)(v166 + 576));
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v166 + 584) + 56))(*(void *)(v166 + 560), 1, 1, *(void *)(v166 + 576));
      }
      uint64_t v61 = *(void *)(v166 + 584);
      uint64_t v3 = *(void *)(v166 + 576);
      uint64_t v62 = *(void *)(v166 + 560);
      uint64_t v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
      *(void *)(v166 + 776) = v63;
      *(void *)(v166 + 784) = (v61 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      if (v63(v62, 1, v3))
      {
        sub_151A8(v62, &qword_A3530);
        uint64_t v144 = (void *)swift_task_alloc();
        *(void *)(v166 + 792) = v144;
        *uint64_t v144 = v166;
        v144[1] = sub_2F9C4;
        uint64_t v145 = *(void *)(v166 + 552);
        return sub_1EB6C(v145, v52, (uint64_t)v2, (uint64_t)v162, (v149 & 1) == 0, (v0 & 1) == 0);
      }
      uint64_t v64 = *(void *)(v62 + 56);
      int64_t v161 = *(void *)(v62 + 48);
      sub_151A8(v62, &qword_A3530);
      uint64_t v0 = (uint64_t)v158;
      uint64_t v4 = sub_46C4C(v158, v52, (uint64_t)v2);
      uint64_t v66 = v65;
      if (!v63(v65, 1, v3))
      {
        unint64_t v67 = sub_729A0(v162);
        if (__OFADD__(v161, v67)) {
          goto LABEL_105;
        }
        if (__OFADD__(v64, v68)) {
          goto LABEL_106;
        }
        *(void *)(v66 + 48) = v161 + v67;
        *(void *)(v66 + 56) = v64 + v68;
        uint64_t v0 = (uint64_t)v158;
      }
      ((void (*)(uint64_t, void))v4)(v0, 0);
      swift_bridgeObjectRelease();

      unint64_t v1 = v166;
      goto LABEL_5;
    }

    unint64_t v13 = v160;
    int64_t v14 = v161;
    if (v160) {
      goto LABEL_6;
    }
  }
  int64_t v69 = (void *)swift_task_alloc();
  *(void *)(v166 + 752) = v69;
  *int64_t v69 = v166;
  v69[1] = sub_2E514;
  uint64_t v70 = *(void *)(v166 + 568);
  return sub_1D2C8(v70, v3, (uint64_t)v162, (v51 & 1) == 0, (v0 & 1) == 0);
}

uint64_t sub_2F9C4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_2FAC0, 0, 0);
}

uint64_t sub_2FAC0()
{
  unint64_t v176 = v0;
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
  uint64_t v2 = *(void *)(v0 + 576);
  uint64_t v3 = *(void *)(v0 + 552);
  if (v1(v3, 1, v2))
  {
    uint64_t v160 = (void *)(v0 + 160);
    int64_t v161 = (void *)(v0 + 192);
    v162 = (void *)(v0 + 288);
    uint64_t v163 = (void *)(v0 + 256);
    v173 = (uint64_t (*)())(v0 + 344);
    uint64_t v4 = (uint64_t (*)())(v0 + 392);
    uint64_t v5 = *(void *)(v0 + 544);
    sub_15144(v3, v5, &qword_A3530);
    int v6 = v1(v5, 1, v2);
    uint64_t v7 = *(void *)(v0 + 768);
    uint64_t v8 = *(void *)(v0 + 760);
    uint64_t v9 = *(void **)(v0 + 744);
    v164 = (uint64_t (*)())(v0 + 392);
    uint64_t v156 = (void *)(v0 + 224);
    if (v6 == 1)
    {
      char v10 = *(uint64_t (**)())(v0 + 536);
      uint64_t v2 = (uint64_t)&qword_A3530;
      sub_151A8(*(void *)(v0 + 544), &qword_A3530);
      sub_36CE4(v7, v8, (uint64_t)v10);
      sub_151A8((uint64_t)v10, &qword_A3530);
    }
    else
    {
      char v10 = *(uint64_t (**)())(v0 + 600);
      sub_39C28(*(void *)(v0 + 544), (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Application);
      uint64_t v13 = *(void *)(v0 + 392);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v175 = v13;
      uint64_t v4 = (uint64_t (*)())&v175;
      sub_3714C((uint64_t)v10, v7, v8, isUniquelyReferenced_nonNull_native);
      *(void *)(v0 + 392) = v175;

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    unint64_t v15 = (void *)(v0 + 16);
    sub_151A8(*(void *)(v0 + 552), &qword_A3530);
    uint64_t v16 = (uint64_t (*)())&unk_A6000;
    for (i = v0; ; unint64_t v0 = i)
    {
      unint64_t v17 = *(void *)(v0 + 728);
      int64_t v18 = *(void *)(v0 + 720);
      if (v17)
      {
LABEL_10:
        unint64_t v19 = __clz(__rbit64(v17));
        uint64_t v20 = (v17 - 1) & v17;
        unint64_t v21 = v19 | (v18 << 6);
        uint64_t v22 = *(void *)(v0 + 704);
        goto LABEL_25;
      }
      while (1)
      {
        int64_t v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
          __break(1u);
          goto LABEL_106;
        }
        int64_t v24 = (unint64_t)((1 << *(unsigned char *)(v0 + 808)) + 63) >> 6;
        uint64_t v22 = *(void *)(v0 + 704);
        if (v23 >= v24) {
          goto LABEL_71;
        }
        uint64_t v25 = v22 + 64;
        unint64_t v26 = *(void *)(v22 + 64 + 8 * v23);
        ++v18;
        if (!v26)
        {
          int64_t v18 = v23 + 1;
          if (v23 + 1 >= v24) {
            goto LABEL_71;
          }
          unint64_t v26 = *(void *)(v25 + 8 * v18);
          if (!v26)
          {
            int64_t v18 = v23 + 2;
            if (v23 + 2 >= v24) {
              goto LABEL_71;
            }
            unint64_t v26 = *(void *)(v25 + 8 * v18);
            if (!v26)
            {
              int64_t v27 = v23 + 3;
              if (v27 >= v24)
              {
LABEL_71:
                swift_release();
                uint64_t v73 = *(void *)(v0 + 584);
                uint64_t v74 = *(void *)(v0 + 576);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v75 = sub_76C10();
                uint64_t v76 = v162;
                uint64_t v16 = v164;
                char v10 = sub_46C4C(v162, v75, v77);
                uint64_t v2 = v78;
                uint64_t v79 = v74;
                uint64_t v7 = *(void *)(v73 + 48);
                if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v7)(v78, 1, v79)) {
                  goto LABEL_74;
                }
                goto LABEL_75;
              }
              unint64_t v26 = *(void *)(v25 + 8 * v27);
              if (!v26)
              {
                while (1)
                {
                  int64_t v18 = v27 + 1;
                  if (__OFADD__(v27, 1)) {
                    break;
                  }
                  if (v18 >= v24) {
                    goto LABEL_71;
                  }
                  unint64_t v26 = *(void *)(v25 + 8 * v18);
                  ++v27;
                  if (v26) {
                    goto LABEL_24;
                  }
                }
LABEL_106:
                __break(1u);
                goto LABEL_107;
              }
              int64_t v18 = v27;
            }
          }
        }
LABEL_24:
        uint64_t v20 = (v26 - 1) & v26;
        unint64_t v21 = __clz(__rbit64(v26)) + (v18 << 6);
LABEL_25:
        uint64_t v165 = v20;
        int64_t v167 = v18;
        *(void *)(v0 + 728) = v20;
        *(void *)(v0 + 720) = v18;
        uint64_t v28 = 8 * v21;
        uint64_t v8 = *(void *)(*(void *)(v22 + 48) + v28);
        *(void *)(v0 + 736) = v8;
        uint64_t v4 = *(uint64_t (**)())(*(void *)(v22 + 56) + v28);
        *(void *)(v0 + 744) = v4;
        *(void *)(v0 + 384) = v8;
        *(void *)(v0 + 344) = v8;
        uint64_t v29 = (void *)(v8 + 56);
        uint64_t v30 = -1 << *(unsigned char *)(v8 + 32);
        if (-v30 < 64) {
          uint64_t v31 = ~(-1 << -(char)v30);
        }
        else {
          uint64_t v31 = -1;
        }
        unint64_t v0 = v31 & *(void *)(v8 + 56);
        int64_t v32 = (unint64_t)(63 - v30) >> 6;
        swift_bridgeObjectRetain_n();
        v170 = v4;
        uint64_t v2 = 0;
        while (v0)
        {
          while (1)
          {
            unint64_t v33 = __clz(__rbit64(v0));
            v0 &= v0 - 1;
            unint64_t v34 = v33 | (v2 << 6);
LABEL_46:
            uint64_t v38 = *(void *)(v8 + 48) + 16 * v34;
            char v10 = *(uint64_t (**)())v38;
            uint64_t v7 = *(void *)(v38 + 8);
            uint64_t v39 = qword_A2C38;
            swift_bridgeObjectRetain();
            if (v39 != -1) {
              swift_once();
            }
            uint64_t v4 = (uint64_t (*)())qword_A6AC0;
            if (*(void *)(qword_A6AC0 + 16))
            {
              unint64_t v40 = sub_4BC5C((uint64_t)v10, v7);
              if (v41) {
                break;
              }
            }
            swift_bridgeObjectRelease();
            if (!v0) {
              goto LABEL_32;
            }
          }
          long long v42 = (_OWORD *)(*((void *)v4 + 7) + 144 * v40);
          *(_OWORD *)unint64_t v15 = *v42;
          long long v43 = v42[1];
          long long v44 = v42[2];
          long long v45 = v42[4];
          *((_OWORD *)v15 + 3) = v42[3];
          *((_OWORD *)v15 + 4) = v45;
          *((_OWORD *)v15 + 1) = v43;
          *((_OWORD *)v15 + 2) = v44;
          long long v46 = v42[5];
          long long v47 = v42[6];
          long long v48 = v42[8];
          *((_OWORD *)v15 + 7) = v42[7];
          *((_OWORD *)v15 + 8) = v48;
          *((_OWORD *)v15 + 5) = v46;
          *((_OWORD *)v15 + 6) = v47;
          sub_22E04((uint64_t)v15);
          swift_bridgeObjectRelease();
          uint64_t v7 = i;
          uint64_t v49 = swift_bridgeObjectRetain();
          sub_32E08(v49);
          uint64_t v50 = swift_bridgeObjectRetain();
          uint64_t v4 = v173;
          sub_32E08(v50);
          sub_22EC4((uint64_t)v15);
        }
LABEL_32:
        int64_t v35 = v2 + 1;
        if (__OFADD__(v2, 1))
        {
          __break(1u);
LABEL_74:
          uint64_t v169 = *(void *)(v0 + 576);
          uint64_t v81 = *(void *)(v0 + 504);
          uint64_t v80 = *(void *)(v0 + 512);
          uint64_t v82 = *(void *)(i + 496);
          id v83 = [*(id *)(i + 416) systemDataDetails];
          sub_1B618(0, &qword_A3570);
          uint64_t v84 = sub_76B60();

          sub_281C4(v84);
          *(void *)(i + 408) = v85;
          swift_getKeyPath();
          sub_75FB0();
          sub_14F50(&qword_A3578);
          sub_1508C(&qword_A3580, &qword_A3578);
          sub_1508C(&qword_A3588, (uint64_t *)&unk_A3520);
          uint64_t v86 = sub_76C80();
          uint64_t v87 = v80;
          uint64_t v76 = v162;
          uint64_t v88 = v82;
          unint64_t v0 = i;
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v87, v88);
          uint64_t v16 = v164;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)(v2 + *(int *)(v169 + 84)) = v86;
          swift_bridgeObjectRelease();
LABEL_75:
          ((void (*)(void *, void))v10)(v76, 0);
          swift_bridgeObjectRelease();
          uint64_t v89 = sub_76C10();
          uint64_t v91 = *(void *)v16;
          if (*(void *)(*(void *)v16 + 16) && (unint64_t v92 = sub_4BC5C(v89, v90), (v93 & 1) != 0))
          {
            sub_391B0(*(void *)(v91 + 56) + *(void *)(*(void *)(v0 + 584) + 72) * v92, *(void *)(v0 + 528), (uint64_t (*)(void))type metadata accessor for Application);
            uint64_t v94 = 0;
          }
          else
          {
            uint64_t v94 = 1;
          }
          uint64_t v95 = *(void *)(v0 + 576);
          uint64_t v96 = *(void *)(v0 + 528);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 584) + 56))(v96, v94, 1, v95);
          swift_bridgeObjectRelease();
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v7)(v96, 1, v95) == 1)
          {
            sub_151A8(*(void *)(v0 + 528), &qword_A3530);
            unint64_t v15 = v161;
            while (1)
            {
              uint64_t v2 = *(void *)(v0 + 576);
              uint64_t v126 = sub_76C10();
              uint64_t v8 = v127;
              uint64_t v128 = sub_46C4C(v15, v126, v127);
              char v10 = v129;
              if (!((unsigned int (*)(uint64_t (*)(), uint64_t, uint64_t))v7)(v129, 1, v2))
              {
                uint64_t v130 = *(void *)(v0 + 504);
                uint64_t v2 = *(void *)(v0 + 512);
                uint64_t v171 = *(void *)(v0 + 496);
                uint64_t v172 = *(void *)(v0 + 576);
                id v131 = [*(id *)(v0 + 416) systemDataDetails];
                sub_1B618(0, &qword_A3570);
                uint64_t v132 = sub_76B60();

                sub_281C4(v132);
                *(void *)(i + 360) = v133;
                swift_getKeyPath();
                sub_75FB0();
                sub_14F50(&qword_A3578);
                sub_1508C(&qword_A3580, &qword_A3578);
                sub_1508C(&qword_A3588, (uint64_t *)&unk_A3520);
                uint64_t v134 = sub_76C80();
                uint64_t v135 = *(void (**)(uint64_t, uint64_t))(v130 + 8);
                uint64_t v16 = (uint64_t (*)())(v130 + 8);
                v135(v2, v171);
                unint64_t v0 = i;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                *(void *)((char *)v10 + *(int *)(v172 + 84)) = v134;
                swift_bridgeObjectRelease();
              }
              ((void (*)(void *, void))v128)(v15, 0);
              uint64_t v4 = *(uint64_t (**)())(v0 + 416);
              swift_bridgeObjectRelease();
              unint64_t v136 = (unint64_t)[v4 diskCapacity];
              if ((v136 & 0x8000000000000000) != 0)
              {
LABEL_107:
                __break(1u);
              }
              else
              {
                uint64_t v16 = (uint64_t (*)())v136;
                if (((unint64_t)[*(id *)(v0 + 416) diskUsed] & 0x8000000000000000) == 0)
                {
                  uint64_t v158 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 632);
                  uint64_t v155 = *(void *)(v0 + 616);
                  uint64_t v157 = *(void *)(v0 + 624);
                  uint64_t v137 = *(void *)(v0 + 488);
                  uint64_t v138 = *(void *)(v0 + 456);
                  uint64_t v159 = *(void *)(v0 + 464);
                  uint64_t v139 = *(void *)(v0 + 440);
                  uint64_t v140 = *(void *)(v0 + 448);
                  uint64_t v141 = *(void *)(v0 + 432);
                  uint64_t v152 = *(void **)(v0 + 424);
                  uint64_t v153 = *(void *)(v0 + 480);
                  sub_76AF0();
                  swift_bridgeObjectRetain();
                  sub_75FF0();
                  swift_bridgeObjectRelease();
                  sub_770A0();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 16))(v140, v138, v141);
                  sub_76B00();
                  (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v138, v141);
                  v158(v155, 1, 1, v157);
                  uint64_t v142 = *(void *)(v0 + 392);
                  sub_391B0(v137, v153, (uint64_t (*)(void))&type metadata accessor for Volume);
                  id v143 = v152;
                  swift_bridgeObjectRetain();
                  uint64_t v144 = sub_76D30();
                  unint64_t v145 = (*(unsigned __int8 *)(v159 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
                  objc_super v146 = (void *)swift_allocObject();
                  v146[2] = v144;
                  v146[3] = &protocol witness table for MainActor;
                  v146[4] = v143;
                  v146[5] = v142;
                  sub_39C28(v153, (uint64_t)v146 + v145, (uint64_t (*)(void))&type metadata accessor for Volume);
                  sub_52508(v155, (uint64_t)&unk_A3568, (uint64_t)v146);
                  swift_release();
                  sub_3A0D8(v137, (uint64_t (*)(void))&type metadata accessor for Volume);
                  swift_bridgeObjectRelease();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  objc_super v147 = *(uint64_t (**)(void))(v0 + 8);
                  return v147();
                }
              }
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              unint64_t v15 = sub_4B65C(0, v15[2] + 1, 1, v15);
              *(void *)(v2 + v8) = v15;
LABEL_90:
              uint64_t v122 = v162;
              unint64_t v124 = v15[2];
              unint64_t v123 = v15[3];
              if (v124 >= v123 >> 1)
              {
                uint64_t v150 = sub_4B65C((void *)(v123 > 1), v124 + 1, 1, v15);
                uint64_t v122 = v162;
                unint64_t v15 = v150;
                *(void *)(v2 + v8) = v150;
              }
              _OWORD v15[2] = v124 + 1;
              uint64_t v125 = &v15[5 * v124];
              v125[4] = 7565161;
              v125[5] = 0xE300000000000000;
              v125[6] = v163;
              v125[7] = v122;
              v125[8] = v16;
              unint64_t v0 = i;
              unint64_t v15 = v156;
LABEL_93:
              ((void (*)(void *, void))v4)(v15, 0);
              swift_bridgeObjectRelease();
              uint64_t v16 = v10;
LABEL_94:
              sub_3A0D8(*(void *)(v0 + 592), (uint64_t (*)(void))type metadata accessor for Application);
              unint64_t v15 = v161;
              uint64_t v7 = v165;
            }
          }
          uint64_t v166 = *(void *)(v0 + 576);
          uint64_t v97 = *(void *)(v0 + 504);
          uint64_t v98 = *(void *)(v0 + 512);
          uint64_t v99 = *(void *)(v0 + 496);
          uint64_t v100 = *(void **)(v0 + 416);
          sub_39C28(*(void *)(v0 + 528), *(void *)(v0 + 592), (uint64_t (*)(void))type metadata accessor for Application);
          id v101 = [v100 systemDetails];
          sub_1B618(0, &qword_A3570);
          uint64_t v102 = sub_76B60();

          sub_281C4(v102);
          *(void *)(v0 + 376) = v103;
          swift_getKeyPath();
          sub_75FB0();
          sub_14F50(&qword_A3578);
          sub_1508C(&qword_A3580, &qword_A3578);
          sub_1508C(&qword_A3588, (uint64_t *)&unk_A3520);
          uint64_t v104 = v16;
          uint64_t v105 = sub_76C80();
          (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v98, v99);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_28538(v105);
          uint64_t v2 = sub_76D00();
          swift_bridgeObjectRelease();
          uint64_t v106 = sub_76C10();
          unint64_t v15 = (void *)v107;
          uint64_t v8 = (uint64_t)v160;
          char v10 = v104;
          uint64_t v4 = sub_46C4C(v160, v106, v107);
          uint64_t v109 = v108;
          uint64_t v110 = v166;
          uint64_t v165 = v7;
          if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v7)(v108, 1, v110)) {
            *(void *)(v109 + *(int *)(*(void *)(v0 + 576) + 84)) = v105;
          }
          swift_bridgeObjectRelease();
          ((void (*)(void *, void))v4)(v160, 0);
          swift_bridgeObjectRelease();
          unint64_t v0 = i;
          uint64_t v16 = v10;
          if (v2 < 100000001) {
            goto LABEL_94;
          }
          uint64_t v111 = *(void **)(i + 592);
          uint64_t v112 = v111[6];
          uint64_t v113 = v111[7];
          BOOL v114 = __OFADD__(v112, v113);
          uint64_t v115 = v112 + v113;
          if (v114) {
            goto LABEL_111;
          }
          uint64_t v163 = (void *)(v115 - v2);
          unint64_t v15 = v156;
          if (__OFSUB__(v115, v2)) {
            goto LABEL_112;
          }
          uint64_t v116 = *(void *)(i + 576);
          uint64_t v29 = (void *)v111[2];
          uint64_t v16 = (uint64_t (*)())v111[3];
          uint64_t v117 = sub_76C10();
          uint64_t v119 = v118;
          swift_bridgeObjectRetain();
          uint64_t v4 = sub_46C4C(v156, v117, v119);
          uint64_t v2 = v120;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v7)(v120, 1, v116))
          {
            swift_bridgeObjectRelease();
            goto LABEL_93;
          }
          goto LABEL_89;
        }
        if (v35 < v32)
        {
          unint64_t v36 = v29[v35];
          ++v2;
          if (v36) {
            goto LABEL_45;
          }
          uint64_t v2 = v35 + 1;
          if (v35 + 1 < v32)
          {
            unint64_t v36 = v29[v2];
            if (v36) {
              goto LABEL_45;
            }
            uint64_t v2 = v35 + 2;
            if (v35 + 2 < v32)
            {
              unint64_t v36 = v29[v2];
              if (v36) {
                goto LABEL_45;
              }
              int64_t v37 = v35 + 3;
              if (v37 < v32)
              {
                unint64_t v36 = v29[v37];
                if (v36)
                {
                  uint64_t v2 = v37;
LABEL_45:
                  unint64_t v0 = (v36 - 1) & v36;
                  unint64_t v34 = __clz(__rbit64(v36)) + (v2 << 6);
                  goto LABEL_46;
                }
                while (1)
                {
                  uint64_t v2 = v37 + 1;
                  if (__OFADD__(v37, 1)) {
                    break;
                  }
                  if (v2 >= v32) {
                    goto LABEL_52;
                  }
                  unint64_t v36 = v29[v2];
                  ++v37;
                  if (v36) {
                    goto LABEL_45;
                  }
                }
                __break(1u);
LABEL_89:
                v162 = v29;
                uint64_t v8 = *(int *)(*(void *)(v0 + 576) + 84);
                unint64_t v15 = *(void **)(v2 + v8);
                char v121 = swift_isUniquelyReferenced_nonNull_native();
                *(void *)(v2 + v8) = v15;
                if (v121) {
                  goto LABEL_90;
                }
                goto LABEL_113;
              }
            }
          }
        }
LABEL_52:
        unint64_t v0 = i;
        uint64_t v51 = *(void *)(i + 696);
        uint64_t v52 = *(void *)(i + 672);
        swift_release();
        char v53 = sub_32F88(v51, *(void *)(i + 384));
        swift_bridgeObjectRelease();
        uint64_t v4 = *(uint64_t (**)())(i + 344);
        uint64_t v2 = sub_32F88(v52, (uint64_t)v4);
        swift_bridgeObjectRelease();
        if (*(void *)(v8 + 16) >= 2uLL)
        {
          uint64_t v71 = (void *)swift_task_alloc();
          *(void *)(i + 752) = v71;
          *uint64_t v71 = i;
          v71[1] = sub_2E514;
          uint64_t v72 = *(void *)(i + 568);
          return sub_1D2C8(v72, v8, (uint64_t)v170, (v53 & 1) == 0, (v2 & 1) == 0);
        }
        uint64_t v7 = sub_284B8(v8);
        char v10 = v54;
        swift_bridgeObjectRelease();
        *(void *)(i + 760) = v10;
        if (v10) {
          break;
        }

        unint64_t v17 = v165;
        int64_t v18 = v167;
        if (v165) {
          goto LABEL_10;
        }
      }
      *(void *)(i + 768) = v7;
      uint64_t v55 = *(void *)(i + 392);
      char v154 = v2;
      if (*(void *)(v55 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v56 = sub_4BC5C(v7, (uint64_t)v10);
        uint64_t v57 = *(void *)(i + 584);
        uint64_t v58 = *(void *)(i + 560);
        if (v59)
        {
          uint64_t v60 = *(void *)(v55 + 56) + *(void *)(v57 + 72) * v56;
          uint64_t v61 = *(void *)(i + 576);
          sub_391B0(v60, *(void *)(i + 560), (uint64_t (*)(void))type metadata accessor for Application);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v61);
        }
        else
        {
          (*(void (**)(void, uint64_t, uint64_t, void))(v57 + 56))(*(void *)(i + 560), 1, 1, *(void *)(i + 576));
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(i + 584) + 56))(*(void *)(i + 560), 1, 1, *(void *)(i + 576));
      }
      uint64_t v62 = *(void *)(i + 584);
      uint64_t v63 = *(void *)(i + 576);
      uint64_t v64 = *(void *)(i + 560);
      uint64_t v2 = *(void *)(v62 + 48);
      *(void *)(i + 776) = v2;
      *(void *)(i + 784) = (v62 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v2)(v64, 1, v63))
      {
        sub_151A8(v64, &qword_A3530);
        uint64_t v148 = (void *)swift_task_alloc();
        *(void *)(i + 792) = v148;
        *uint64_t v148 = i;
        v148[1] = sub_2F9C4;
        uint64_t v149 = *(void *)(i + 552);
        return sub_1EB6C(v149, v7, (uint64_t)v10, (uint64_t)v170, (v53 & 1) == 0, (v154 & 1) == 0);
      }
      uint64_t v65 = *(void *)(v64 + 56);
      uint64_t v168 = *(void *)(v64 + 48);
      sub_151A8(v64, &qword_A3530);
      uint64_t v66 = v163;
      uint64_t v4 = sub_46C4C(v163, v7, (uint64_t)v10);
      uint64_t v7 = v67;
      int v68 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v2)(v67, 1, v63);
      uint64_t v8 = (uint64_t)v170;
      if (!v68)
      {
        unint64_t v69 = sub_729A0(v170);
        if (__OFADD__(v168, v69)) {
          goto LABEL_109;
        }
        if (__OFADD__(v65, v70)) {
          goto LABEL_110;
        }
        *(void *)(v7 + 48) = v168 + v69;
        *(void *)(v7 + 56) = v65 + v70;
        uint64_t v66 = v163;
      }
      ((void (*)(void *, void))v4)(v66, 0);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain();
  *(void *)(v0 + 800) = sub_76D30();
  uint64_t v12 = sub_76D10();
  return _swift_task_switch(sub_30F1C, v12, v11);
}

uint64_t sub_30F1C()
{
  uint64_t v1 = v0[89];
  uint64_t v2 = v0[53];
  swift_release();
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + v1);
  if (*(void *)(v3 + 16))
  {
    unint64_t v4 = sub_4BC5C(v0[96], v0[95]);
    uint64_t v5 = v0[65];
    if (v6)
    {
      unint64_t v7 = v4;
      uint64_t v8 = *(void *)(v3 + 56);
      uint64_t v9 = sub_76070();
      uint64_t v10 = *(void *)(v9 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(v5, v8 + *(void *)(v10 + 72) * v7, v9);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    }
    else
    {
      uint64_t v13 = sub_76070();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
    }
  }
  else
  {
    uint64_t v11 = v0[65];
    uint64_t v12 = sub_76070();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  return _swift_task_switch(sub_31108, 0, 0);
}

uint64_t sub_31108()
{
  unint64_t v174 = v0;
  uint64_t v158 = (void *)(v0 + 160);
  uint64_t v159 = (void *)(v0 + 192);
  uint64_t v1 = v0 + 224;
  int64_t v161 = (void *)(v0 + 256);
  uint64_t v171 = (uint64_t (*)())(v0 + 344);
  uint64_t v2 = (uint64_t (*)())(v0 + 392);
  sub_39DEC(*(void *)(v0 + 520), *(void *)(v0 + 552) + *(int *)(*(void *)(v0 + 576) + 72), &qword_A3000);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 544);
  sub_15144(*(void *)(v0 + 552), v5, &qword_A3530);
  int v6 = v3(v5, 1, v4);
  uint64_t v7 = *(void *)(v0 + 768);
  uint64_t v8 = *(void *)(v0 + 760);
  uint64_t v9 = *(void **)(v0 + 744);
  v162 = (uint64_t (*)())(v0 + 392);
  char v154 = (void *)(v0 + 224);
  uint64_t v160 = (void *)(v0 + 288);
  if (v6 == 1)
  {
    uint64_t v10 = *(uint64_t (**)())(v0 + 536);
    uint64_t v1 = (uint64_t)&qword_A3530;
    sub_151A8(*(void *)(v0 + 544), &qword_A3530);
    sub_36CE4(v7, v8, (uint64_t)v10);
    sub_151A8((uint64_t)v10, &qword_A3530);
  }
  else
  {
    uint64_t v10 = *(uint64_t (**)())(v0 + 600);
    sub_39C28(*(void *)(v0 + 544), (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Application);
    uint64_t v11 = *(void *)(v0 + 392);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v173 = v11;
    uint64_t v2 = (uint64_t (*)())&v173;
    sub_3714C((uint64_t)v10, v7, v8, isUniquelyReferenced_nonNull_native);
    *(void *)(v0 + 392) = v173;

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)(v0 + 16);
  sub_151A8(*(void *)(v0 + 552), &qword_A3530);
  int64_t v14 = (uint64_t (*)())&unk_A6000;
  unint64_t v172 = v0;
LABEL_5:
  unint64_t v15 = *(void *)(v0 + 728);
  int64_t v16 = *(void *)(v0 + 720);
  if (v15)
  {
LABEL_6:
    unint64_t v17 = __clz(__rbit64(v15));
    uint64_t v18 = (v15 - 1) & v15;
    unint64_t v19 = v17 | (v16 << 6);
    uint64_t v20 = *(void *)(v0 + 704);
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_102;
    }
    int64_t v22 = (unint64_t)((1 << *(unsigned char *)(v0 + 808)) + 63) >> 6;
    uint64_t v20 = *(void *)(v0 + 704);
    if (v21 >= v22) {
      goto LABEL_67;
    }
    uint64_t v23 = v20 + 64;
    unint64_t v24 = *(void *)(v20 + 64 + 8 * v21);
    ++v16;
    if (!v24)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v22) {
        goto LABEL_67;
      }
      unint64_t v24 = *(void *)(v23 + 8 * v16);
      if (!v24)
      {
        int64_t v16 = v21 + 2;
        if (v21 + 2 >= v22) {
          goto LABEL_67;
        }
        unint64_t v24 = *(void *)(v23 + 8 * v16);
        if (!v24)
        {
          int64_t v25 = v21 + 3;
          if (v25 >= v22)
          {
LABEL_67:
            swift_release();
            uint64_t v72 = *(void *)(v0 + 584);
            uint64_t v73 = *(void *)(v0 + 576);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v74 = sub_76C10();
            uint64_t v75 = v160;
            int64_t v14 = v162;
            uint64_t v10 = sub_46C4C(v160, v74, v76);
            uint64_t v1 = v77;
            uint64_t v78 = v73;
            uint64_t v7 = *(void *)(v72 + 48);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v7)(v77, 1, v78))
            {
LABEL_71:
              ((void (*)(void *, void))v10)(v75, 0);
              swift_bridgeObjectRelease();
              uint64_t v88 = sub_76C10();
              uint64_t v90 = *(void *)v14;
              if (*(void *)(*(void *)v14 + 16) && (unint64_t v91 = sub_4BC5C(v88, v89), (v92 & 1) != 0))
              {
                sub_391B0(*(void *)(v90 + 56) + *(void *)(*(void *)(v0 + 584) + 72) * v91, *(void *)(v0 + 528), (uint64_t (*)(void))type metadata accessor for Application);
                uint64_t v93 = 0;
              }
              else
              {
                uint64_t v93 = 1;
              }
              uint64_t v94 = *(void *)(v0 + 576);
              uint64_t v95 = *(void *)(v0 + 528);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 584) + 56))(v95, v93, 1, v94);
              swift_bridgeObjectRelease();
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v7)(v95, 1, v94) == 1)
              {
                sub_151A8(*(void *)(v0 + 528), &qword_A3530);
                uint64_t v13 = v159;
                while (1)
                {
                  uint64_t v1 = *(void *)(v0 + 576);
                  uint64_t v125 = sub_76C10();
                  uint64_t v8 = v126;
                  uint64_t v127 = sub_46C4C(v13, v125, v126);
                  uint64_t v10 = v128;
                  if (!((unsigned int (*)(uint64_t (*)(), uint64_t, uint64_t))v7)(v128, 1, v1))
                  {
                    uint64_t v129 = *(void *)(v0 + 504);
                    uint64_t v1 = *(void *)(v0 + 512);
                    uint64_t v169 = *(void *)(v0 + 496);
                    uint64_t v170 = *(void *)(v0 + 576);
                    id v130 = [*(id *)(v0 + 416) systemDataDetails];
                    sub_1B618(0, &qword_A3570);
                    uint64_t v131 = sub_76B60();

                    sub_281C4(v131);
                    *(void *)(v172 + 360) = v132;
                    swift_getKeyPath();
                    sub_75FB0();
                    sub_14F50(&qword_A3578);
                    sub_1508C(&qword_A3580, &qword_A3578);
                    sub_1508C(&qword_A3588, (uint64_t *)&unk_A3520);
                    uint64_t v133 = sub_76C80();
                    uint64_t v134 = *(void (**)(uint64_t, uint64_t))(v129 + 8);
                    int64_t v14 = (uint64_t (*)())(v129 + 8);
                    v134(v1, v169);
                    unint64_t v0 = v172;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    *(void *)((char *)v10 + *(int *)(v170 + 84)) = v133;
                    swift_bridgeObjectRelease();
                  }
                  ((void (*)(void *, void))v127)(v13, 0);
                  uint64_t v2 = *(uint64_t (**)())(v0 + 416);
                  swift_bridgeObjectRelease();
                  unint64_t v135 = (unint64_t)[v2 diskCapacity];
                  if ((v135 & 0x8000000000000000) != 0)
                  {
LABEL_103:
                    __break(1u);
                  }
                  else
                  {
                    int64_t v14 = (uint64_t (*)())v135;
                    if (((unint64_t)[*(id *)(v0 + 416) diskUsed] & 0x8000000000000000) == 0)
                    {
                      uint64_t v156 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 632);
                      uint64_t v153 = *(void *)(v0 + 616);
                      uint64_t v155 = *(void *)(v0 + 624);
                      uint64_t v136 = *(void *)(v0 + 488);
                      uint64_t v137 = *(void *)(v0 + 456);
                      uint64_t v157 = *(void *)(v0 + 464);
                      uint64_t v138 = *(void *)(v0 + 440);
                      uint64_t v139 = *(void *)(v0 + 448);
                      uint64_t v140 = *(void *)(v0 + 432);
                      uint64_t v150 = *(void **)(v0 + 424);
                      uint64_t v151 = *(void *)(v0 + 480);
                      sub_76AF0();
                      swift_bridgeObjectRetain();
                      sub_75FF0();
                      swift_bridgeObjectRelease();
                      sub_770A0();
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v138 + 16))(v139, v137, v140);
                      sub_76B00();
                      (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v137, v140);
                      v156(v153, 1, 1, v155);
                      uint64_t v141 = *(void *)(v0 + 392);
                      sub_391B0(v136, v151, (uint64_t (*)(void))&type metadata accessor for Volume);
                      id v142 = v150;
                      swift_bridgeObjectRetain();
                      uint64_t v143 = sub_76D30();
                      unint64_t v144 = (*(unsigned __int8 *)(v157 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80);
                      unint64_t v145 = (void *)swift_allocObject();
                      v145[2] = v143;
                      v145[3] = &protocol witness table for MainActor;
                      v145[4] = v142;
                      v145[5] = v141;
                      sub_39C28(v151, (uint64_t)v145 + v144, (uint64_t (*)(void))&type metadata accessor for Volume);
                      sub_52508(v153, (uint64_t)&unk_A3568, (uint64_t)v145);
                      swift_release();
                      sub_3A0D8(v136, (uint64_t (*)(void))&type metadata accessor for Volume);
                      swift_bridgeObjectRelease();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      swift_task_dealloc();
                      objc_super v146 = *(uint64_t (**)(void))(v0 + 8);
                      return v146();
                    }
                  }
                  __break(1u);
LABEL_105:
                  __break(1u);
LABEL_106:
                  __break(1u);
LABEL_107:
                  __break(1u);
LABEL_108:
                  __break(1u);
LABEL_109:
                  uint64_t v13 = sub_4B65C(0, v13[2] + 1, 1, v13);
                  *(void *)(v1 + v8) = v13;
LABEL_86:
                  char v121 = v160;
                  unint64_t v123 = v13[2];
                  unint64_t v122 = v13[3];
                  if (v123 >= v122 >> 1)
                  {
                    uint64_t v149 = sub_4B65C((void *)(v122 > 1), v123 + 1, 1, v13);
                    char v121 = v160;
                    uint64_t v13 = v149;
                    *(void *)(v1 + v8) = v149;
                  }
                  v13[2] = v123 + 1;
                  unint64_t v124 = &v13[5 * v123];
                  v124[4] = 7565161;
                  v124[5] = 0xE300000000000000;
                  v124[6] = v161;
                  v124[7] = v121;
                  v124[8] = v14;
                  unint64_t v0 = v172;
                  uint64_t v13 = v154;
LABEL_89:
                  ((void (*)(void *, void))v2)(v13, 0);
                  swift_bridgeObjectRelease();
                  int64_t v14 = v10;
LABEL_90:
                  sub_3A0D8(*(void *)(v0 + 592), (uint64_t (*)(void))type metadata accessor for Application);
                  uint64_t v13 = v159;
                  uint64_t v7 = v163;
                }
              }
              uint64_t v164 = *(void *)(v0 + 576);
              uint64_t v96 = *(void *)(v0 + 504);
              uint64_t v97 = *(void *)(v0 + 512);
              uint64_t v98 = *(void *)(v0 + 496);
              uint64_t v99 = *(void **)(v0 + 416);
              sub_39C28(*(void *)(v0 + 528), *(void *)(v0 + 592), (uint64_t (*)(void))type metadata accessor for Application);
              id v100 = [v99 systemDetails];
              sub_1B618(0, &qword_A3570);
              uint64_t v101 = sub_76B60();

              sub_281C4(v101);
              *(void *)(v0 + 376) = v102;
              swift_getKeyPath();
              sub_75FB0();
              sub_14F50(&qword_A3578);
              sub_1508C(&qword_A3580, &qword_A3578);
              sub_1508C(&qword_A3588, (uint64_t *)&unk_A3520);
              uint64_t v103 = v14;
              uint64_t v104 = sub_76C80();
              (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v97, v98);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_28538(v104);
              uint64_t v1 = sub_76D00();
              swift_bridgeObjectRelease();
              uint64_t v105 = sub_76C10();
              uint64_t v13 = (void *)v106;
              uint64_t v8 = (uint64_t)v158;
              uint64_t v10 = v103;
              uint64_t v2 = sub_46C4C(v158, v105, v106);
              uint64_t v108 = v107;
              uint64_t v109 = v164;
              uint64_t v163 = v7;
              if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v7)(v107, 1, v109)) {
                *(void *)(v108 + *(int *)(*(void *)(v0 + 576) + 84)) = v104;
              }
              swift_bridgeObjectRelease();
              ((void (*)(void *, void))v2)(v158, 0);
              swift_bridgeObjectRelease();
              unint64_t v0 = v172;
              int64_t v14 = v10;
              if (v1 < 100000001) {
                goto LABEL_90;
              }
              uint64_t v110 = *(void **)(v172 + 592);
              uint64_t v111 = v110[6];
              uint64_t v112 = v110[7];
              BOOL v113 = __OFADD__(v111, v112);
              uint64_t v114 = v111 + v112;
              if (v113) {
                goto LABEL_107;
              }
              int64_t v161 = (void *)(v114 - v1);
              uint64_t v13 = v154;
              if (__OFSUB__(v114, v1)) {
                goto LABEL_108;
              }
              uint64_t v115 = *(void *)(v172 + 576);
              int64_t v27 = (void *)v110[2];
              int64_t v14 = (uint64_t (*)())v110[3];
              uint64_t v116 = sub_76C10();
              uint64_t v118 = v117;
              swift_bridgeObjectRetain();
              uint64_t v2 = sub_46C4C(v154, v116, v118);
              uint64_t v1 = v119;
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v7)(v119, 1, v115))
              {
                swift_bridgeObjectRelease();
                goto LABEL_89;
              }
              goto LABEL_85;
            }
LABEL_70:
            uint64_t v167 = *(void *)(v0 + 576);
            uint64_t v80 = *(void *)(v0 + 504);
            uint64_t v79 = *(void *)(v0 + 512);
            uint64_t v81 = *(void *)(v172 + 496);
            id v82 = [*(id *)(v172 + 416) systemDataDetails];
            sub_1B618(0, &qword_A3570);
            uint64_t v83 = sub_76B60();

            sub_281C4(v83);
            *(void *)(v172 + 408) = v84;
            swift_getKeyPath();
            sub_75FB0();
            sub_14F50(&qword_A3578);
            sub_1508C(&qword_A3580, &qword_A3578);
            sub_1508C(&qword_A3588, (uint64_t *)&unk_A3520);
            uint64_t v85 = sub_76C80();
            uint64_t v86 = v79;
            uint64_t v75 = v160;
            uint64_t v87 = v81;
            unint64_t v0 = v172;
            (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v86, v87);
            int64_t v14 = v162;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)(v1 + *(int *)(v167 + 84)) = v85;
            swift_bridgeObjectRelease();
            goto LABEL_71;
          }
          unint64_t v24 = *(void *)(v23 + 8 * v25);
          if (!v24)
          {
            while (1)
            {
              int64_t v16 = v25 + 1;
              if (__OFADD__(v25, 1)) {
                break;
              }
              if (v16 >= v22) {
                goto LABEL_67;
              }
              unint64_t v24 = *(void *)(v23 + 8 * v16);
              ++v25;
              if (v24) {
                goto LABEL_20;
              }
            }
LABEL_102:
            __break(1u);
            goto LABEL_103;
          }
          int64_t v16 = v25;
        }
      }
    }
LABEL_20:
    uint64_t v18 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + (v16 << 6);
LABEL_21:
    uint64_t v163 = v18;
    int64_t v165 = v16;
    *(void *)(v0 + 728) = v18;
    *(void *)(v0 + 720) = v16;
    uint64_t v26 = 8 * v19;
    uint64_t v8 = *(void *)(*(void *)(v20 + 48) + v26);
    *(void *)(v0 + 736) = v8;
    uint64_t v2 = *(uint64_t (**)())(*(void *)(v20 + 56) + v26);
    *(void *)(v0 + 744) = v2;
    *(void *)(v0 + 384) = v8;
    *(void *)(v0 + 344) = v8;
    int64_t v27 = (void *)(v8 + 56);
    uint64_t v28 = -1 << *(unsigned char *)(v8 + 32);
    if (-v28 < 64) {
      uint64_t v29 = ~(-1 << -(char)v28);
    }
    else {
      uint64_t v29 = -1;
    }
    unint64_t v0 = v29 & *(void *)(v8 + 56);
    int64_t v30 = (unint64_t)(63 - v28) >> 6;
    swift_bridgeObjectRetain_n();
    uint64_t v168 = v2;
    uint64_t v1 = 0;
    while (v0)
    {
      while (1)
      {
        unint64_t v31 = __clz(__rbit64(v0));
        v0 &= v0 - 1;
        unint64_t v32 = v31 | (v1 << 6);
LABEL_42:
        uint64_t v36 = *(void *)(v8 + 48) + 16 * v32;
        uint64_t v10 = *(uint64_t (**)())v36;
        uint64_t v7 = *(void *)(v36 + 8);
        uint64_t v37 = qword_A2C38;
        swift_bridgeObjectRetain();
        if (v37 != -1) {
          swift_once();
        }
        uint64_t v2 = (uint64_t (*)())qword_A6AC0;
        if (*(void *)(qword_A6AC0 + 16))
        {
          unint64_t v38 = sub_4BC5C((uint64_t)v10, v7);
          if (v39) {
            break;
          }
        }
        swift_bridgeObjectRelease();
        if (!v0) {
          goto LABEL_28;
        }
      }
      unint64_t v40 = (_OWORD *)(*((void *)v2 + 7) + 144 * v38);
      *(_OWORD *)uint64_t v13 = *v40;
      long long v41 = v40[1];
      long long v42 = v40[2];
      long long v43 = v40[4];
      *((_OWORD *)v13 + 3) = v40[3];
      *((_OWORD *)v13 + 4) = v43;
      *((_OWORD *)v13 + 1) = v41;
      *((_OWORD *)v13 + 2) = v42;
      long long v44 = v40[5];
      long long v45 = v40[6];
      long long v46 = v40[8];
      *((_OWORD *)v13 + 7) = v40[7];
      *((_OWORD *)v13 + 8) = v46;
      *((_OWORD *)v13 + 5) = v44;
      *((_OWORD *)v13 + 6) = v45;
      sub_22E04((uint64_t)v13);
      swift_bridgeObjectRelease();
      uint64_t v7 = v172;
      uint64_t v47 = swift_bridgeObjectRetain();
      sub_32E08(v47);
      uint64_t v48 = swift_bridgeObjectRetain();
      uint64_t v2 = v171;
      sub_32E08(v48);
      sub_22EC4((uint64_t)v13);
    }
LABEL_28:
    int64_t v33 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_70;
    }
    if (v33 < v30)
    {
      unint64_t v34 = v27[v33];
      ++v1;
      if (v34) {
        goto LABEL_41;
      }
      uint64_t v1 = v33 + 1;
      if (v33 + 1 < v30)
      {
        unint64_t v34 = v27[v1];
        if (v34) {
          goto LABEL_41;
        }
        uint64_t v1 = v33 + 2;
        if (v33 + 2 < v30)
        {
          unint64_t v34 = v27[v1];
          if (v34) {
            goto LABEL_41;
          }
          int64_t v35 = v33 + 3;
          if (v35 < v30)
          {
            unint64_t v34 = v27[v35];
            if (v34)
            {
              uint64_t v1 = v35;
LABEL_41:
              unint64_t v0 = (v34 - 1) & v34;
              unint64_t v32 = __clz(__rbit64(v34)) + (v1 << 6);
              goto LABEL_42;
            }
            while (1)
            {
              uint64_t v1 = v35 + 1;
              if (__OFADD__(v35, 1)) {
                break;
              }
              if (v1 >= v30) {
                goto LABEL_48;
              }
              unint64_t v34 = v27[v1];
              ++v35;
              if (v34) {
                goto LABEL_41;
              }
            }
            __break(1u);
LABEL_85:
            uint64_t v160 = v27;
            uint64_t v8 = *(int *)(*(void *)(v0 + 576) + 84);
            uint64_t v13 = *(void **)(v1 + v8);
            char v120 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v1 + v8) = v13;
            if (v120) {
              goto LABEL_86;
            }
            goto LABEL_109;
          }
        }
      }
    }
LABEL_48:
    unint64_t v0 = v172;
    uint64_t v49 = *(void *)(v172 + 696);
    uint64_t v50 = *(void *)(v172 + 672);
    swift_release();
    char v51 = sub_32F88(v49, *(void *)(v172 + 384));
    swift_bridgeObjectRelease();
    uint64_t v2 = *(uint64_t (**)())(v172 + 344);
    uint64_t v1 = sub_32F88(v50, (uint64_t)v2);
    swift_bridgeObjectRelease();
    if (*(void *)(v8 + 16) >= 2uLL) {
      break;
    }
    uint64_t v7 = sub_284B8(v8);
    uint64_t v10 = v52;
    swift_bridgeObjectRelease();
    *(void *)(v172 + 760) = v10;
    if (v10)
    {
      *(void *)(v172 + 768) = v7;
      uint64_t v53 = *(void *)(v172 + 392);
      char v152 = v1;
      if (*(void *)(v53 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v54 = sub_4BC5C(v7, (uint64_t)v10);
        uint64_t v55 = *(void *)(v172 + 584);
        uint64_t v56 = *(void *)(v172 + 560);
        if (v57)
        {
          uint64_t v58 = *(void *)(v53 + 56) + *(void *)(v55 + 72) * v54;
          uint64_t v59 = *(void *)(v172 + 576);
          sub_391B0(v58, *(void *)(v172 + 560), (uint64_t (*)(void))type metadata accessor for Application);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v59);
        }
        else
        {
          (*(void (**)(void, uint64_t, uint64_t, void))(v55 + 56))(*(void *)(v172 + 560), 1, 1, *(void *)(v172 + 576));
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v172 + 584) + 56))(*(void *)(v172 + 560), 1, 1, *(void *)(v172 + 576));
      }
      uint64_t v60 = *(void *)(v172 + 584);
      uint64_t v61 = *(void *)(v172 + 576);
      uint64_t v62 = *(void *)(v172 + 560);
      uint64_t v1 = *(void *)(v60 + 48);
      *(void *)(v172 + 776) = v1;
      *(void *)(v172 + 784) = (v60 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1)(v62, 1, v61))
      {
        sub_151A8(v62, &qword_A3530);
        objc_super v147 = (void *)swift_task_alloc();
        *(void *)(v172 + 792) = v147;
        *objc_super v147 = v172;
        v147[1] = sub_2F9C4;
        uint64_t v148 = *(void *)(v172 + 552);
        return sub_1EB6C(v148, v7, (uint64_t)v10, (uint64_t)v168, (v51 & 1) == 0, (v152 & 1) == 0);
      }
      uint64_t v63 = *(void *)(v62 + 56);
      uint64_t v166 = *(void *)(v62 + 48);
      sub_151A8(v62, &qword_A3530);
      uint64_t v64 = v161;
      uint64_t v2 = sub_46C4C(v161, v7, (uint64_t)v10);
      uint64_t v7 = v65;
      int v66 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v1)(v65, 1, v61);
      uint64_t v8 = (uint64_t)v168;
      if (!v66)
      {
        unint64_t v67 = sub_729A0(v168);
        if (__OFADD__(v166, v67)) {
          goto LABEL_105;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_106;
        }
        *(void *)(v7 + 48) = v166 + v67;
        *(void *)(v7 + 56) = v63 + v68;
        uint64_t v64 = v161;
      }
      ((void (*)(void *, void))v2)(v64, 0);
      swift_bridgeObjectRelease();

      unint64_t v0 = v172;
      goto LABEL_5;
    }

    unint64_t v15 = v163;
    int64_t v16 = v165;
    if (v163) {
      goto LABEL_6;
    }
  }
  unint64_t v69 = (void *)swift_task_alloc();
  *(void *)(v172 + 752) = v69;
  *unint64_t v69 = v172;
  v69[1] = sub_2E514;
  uint64_t v70 = *(void *)(v172 + 568);
  return sub_1D2C8(v70, v8, (uint64_t)v168, (v51 & 1) == 0, (v1 & 1) == 0);
}

uint64_t sub_324F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 56) = a4;
  sub_76D40();
  *(void *)(v4 + 64) = sub_76D30();
  uint64_t v6 = sub_76D10();
  return _swift_task_switch(sub_3258C, v6, v5);
}

uint64_t sub_3258C()
{
  uint64_t v1 = v0[7];
  swift_release();
  uint64_t v2 = OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appSizer;
  [*(id *)(v1 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appSizer) stopObserving];
  v0[5] = &type metadata for StorageManagementFeature;
  v0[6] = sub_39ACC();
  char v3 = sub_760F0();
  sub_39B20((uint64_t)(v0 + 2));
  uint64_t v4 = (Class *)SAAppSizer_ptr;
  if ((v3 & 1) == 0) {
    uint64_t v4 = (Class *)&off_95628;
  }
  id v5 = [objc_allocWithZone(*v4) init];
  uint64_t v6 = *(void **)(v1 + v2);
  *(void *)(v1 + v2) = v5;

  sub_2C18C();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_32674(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(uint64_t (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v6 = a2;
  id v7 = a3;
  LOBYTE(a3) = v5(a2, a3);
  swift_release();

  return a3 & 1;
}

id sub_32750(void *a1)
{
  id v1 = [a1 eventBody];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = [v1 starting];

  return v3;
}

uint64_t sub_327A8(uint64_t a1, void *a2)
{
  id v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

id sub_32804(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A3000);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  id v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = sub_76070();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  int64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  int64_t v16 = (char *)&v27 - v15;
  id result = [a1 eventBody];
  if (!result) {
    return result;
  }
  uint64_t v18 = result;
  id v19 = [result absoluteTimestamp];
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_8;
  }
  uint64_t v20 = v19;
  uint64_t v29 = a2;
  sub_76040();

  int64_t v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v21(v9, v14, v10);
  int64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
  v22(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_8:

    return (id)sub_151A8((uint64_t)v9, &qword_A3000);
  }
  v21(v16, v9, v10);
  id v23 = [v18 bundleID];
  if (v23)
  {
    unint64_t v24 = v23;
    uint64_t v28 = sub_76C10();
    uint64_t v26 = v25;

    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v16, v10);
    v22(v7, 0, 1, v10);
    swift_beginAccess();
    sub_28638((uint64_t)v7, v28, v26);
    swift_endAccess();
  }

  return (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
}

void sub_32B1C(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_32B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  sub_14F50(&qword_A34E8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  sub_76D40();
  v4[11] = sub_76D30();
  uint64_t v6 = sub_76D10();
  return _swift_task_switch(sub_32C5C, v6, v5);
}

uint64_t sub_32C5C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  swift_release();
  uint64_t v3 = v2 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_timeStats;
  swift_beginAccess();
  uint64_t v4 = sub_76B40();
  sub_15144(v3 + *(int *)(v4 + 24), v1, &qword_A34E8);
  uint64_t v5 = sub_76A50();
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1, 1, v5);
  sub_151A8(v1, &qword_A34E8);
  if (v7 == 1)
  {
    uint64_t v8 = v0[9];
    sub_76A40();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v5);
    swift_beginAccess();
    sub_39DEC(v8, v3 + *(int *)(v4 + 24), &qword_A34E8);
    swift_endAccess();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_32E08(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (Swift::Int *)(*(void *)(v1 + 48) + 16 * v9);
    Swift::Int v11 = *v10;
    Swift::Int v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_209D8(&v16, v11, v12);
    id result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_32F88(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 1;
  }
  if (v2 >= v3) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (v2 >= v3) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = a1;
  }
  uint64_t v32 = v4;
  uint64_t v33 = v4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 56);
  int64_t v31 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = v5 + 56;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    while (1)
    {
      int64_t v12 = v11;
      if (!v8) {
        break;
      }
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      if (*(void *)(v5 + 16)) {
        goto LABEL_31;
      }
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v15 >= v31) {
      goto LABEL_48;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v12 + 2;
      if (v12 + 2 >= v31) {
        goto LABEL_48;
      }
      unint64_t v16 = *(void *)(v33 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v12 + 3;
        if (v12 + 3 >= v31) {
          goto LABEL_48;
        }
        unint64_t v16 = *(void *)(v33 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    if (*(void *)(v5 + 16))
    {
LABEL_31:
      uint64_t v18 = (uint64_t *)(*(void *)(v32 + 48) + 16 * v14);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      sub_770C0();
      swift_bridgeObjectRetain();
      sub_76C40();
      Swift::Int v21 = sub_77100();
      uint64_t v22 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v23 = v21 & ~v22;
      if ((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
      {
        uint64_t v24 = *(void *)(v5 + 48);
        uint64_t v25 = (void *)(v24 + 16 * v23);
        BOOL v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (sub_77050() & 1) != 0)
        {
LABEL_44:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v30 = 0;
LABEL_45:
          sub_3937C();
          return v30;
        }
        uint64_t v27 = ~v22;
        while (1)
        {
          unint64_t v23 = (v23 + 1) & v27;
          if (((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
            break;
          }
          uint64_t v28 = (void *)(v24 + 16 * v23);
          BOOL v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (sub_77050() & 1) != 0) {
            goto LABEL_44;
          }
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    uint64_t v30 = 1;
    goto LABEL_45;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v12 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_48;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_30;
    }
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_3326C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  sub_76B10();
  v6[12] = swift_task_alloc();
  v6[13] = swift_task_alloc();
  sub_14F50(&qword_A34E8);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  v6[16] = sub_76D40();
  v6[17] = sub_76D30();
  uint64_t v8 = sub_76D10();
  v6[18] = v8;
  v6[19] = v7;
  return _swift_task_switch(sub_33388, v8, v7);
}

uint64_t sub_33388()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[9] + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_timeStats;
  swift_beginAccess();
  uint64_t v3 = sub_76B40();
  sub_15144(v2 + *(int *)(v3 + 28), v1, &qword_A34E8);
  uint64_t v4 = sub_76A50();
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v1, 1, v4);
  sub_151A8(v1, &qword_A34E8);
  if (v6 == 1)
  {
    uint64_t v7 = v0[14];
    sub_76A40();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
    swift_beginAccess();
    sub_39DEC(v7, v2 + *(int *)(v3 + 28), &qword_A34E8);
    swift_endAccess();
  }
  uint64_t v9 = v0[12];
  uint64_t v8 = v0[13];
  uint64_t v10 = v0[11];
  int64_t v11 = (void *)v0[9];
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_28BF4(v12);
  sub_391B0(v10, v8, (uint64_t (*)(void))&type metadata accessor for Volume);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_391B0(v8, v9, (uint64_t (*)(void))&type metadata accessor for Volume);
  id v13 = v11;
  sub_76250();
  sub_3A0D8(v8, (uint64_t (*)(void))&type metadata accessor for Volume);
  sub_3399C();
  v0[20] = sub_76D30();
  uint64_t v15 = sub_76D10();
  v0[21] = v15;
  v0[22] = v14;
  return _swift_task_switch(sub_335F4, v15, v14);
}

uint64_t sub_335F4()
{
  uint64_t v1 = (uint64_t *)sub_76AD0();
  uint64_t v2 = *v1;
  *(void *)(v0 + 184) = *v1;
  uint64_t v5 = (uint64_t (*)(void))(*(void *)(*(void *)v2 + 88) + **(int **)(*(void *)v2 + 88));
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v3;
  void *v3 = v0;
  v3[1] = sub_33704;
  return v5();
}

uint64_t sub_33704(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = a1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 176);
  uint64_t v4 = *(void *)(v2 + 168);
  return _swift_task_switch(sub_33850, v4, v3);
}

uint64_t sub_33850()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = (void *)v0[9];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[8] = v1;
  id v3 = v2;
  sub_76250();
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[19];
  return _swift_task_switch(sub_3390C, v4, v5);
}

uint64_t sub_3390C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_3399C()
{
  uint64_t v0 = sub_14F50(&qword_A35A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for SyncedContent();
  uint64_t v37 = *(void *)(v45 - 8);
  uint64_t v3 = __chkstk_darwin(v45);
  uint64_t v44 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v43 = (uint64_t)&v36 - v5;
  uint64_t v6 = sub_14F50(&qword_A3530);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for Application();
  uint64_t v38 = *(void *)(v51 - 8);
  uint64_t v9 = __chkstk_darwin(v51);
  uint64_t v42 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v12 = (unint64_t)&v36 - v11;
  id v13 = [self defaultMediaLibrary];
  if (qword_A2C30 != -1) {
LABEL_33:
  }
    swift_once();
  uint64_t v14 = qword_A6AB8;
  uint64_t v53 = *(void *)(qword_A6AB8 + 16);
  if (v53)
  {
    unint64_t v47 = v12;
    long long v41 = v2;
    uint64_t v46 = comAppleBooks;
    uint64_t v40 = comAppleTV;
    uint64_t v48 = comAppleMusic;
    uint64_t v36 = comApplePodcasts;
    uint64_t v50 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    char v39 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(v37 + 48);
    swift_bridgeObjectRetain();
    uint64_t v16 = 0;
    uint64_t v49 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v2 = *(char **)(v14 + 8 * v16 + 32);
      uint64_t v19 = (uint64_t)[v13 usageForSyncedMediaOfType:v2];
      if (v19 < 0)
      {
        __break(1u);
        goto LABEL_33;
      }
      uint64_t v20 = v19;
      if (v19)
      {
        if ((uint64_t)v2 <= 3)
        {
          if (v2 != (unsigned char *)&dword_0 + 1 && v2 != (unsigned char *)&dword_0 + 2) {
            goto LABEL_6;
          }
        }
        else if (v2 != (char *)&dword_4 && v2 != &stru_1F8.sectname[8] && v2 != &stru_7E8.segname[8])
        {
          goto LABEL_6;
        }
        uint64_t v21 = sub_76C10();
        uint64_t v23 = v22;
        unint64_t v12 = sub_28814();
        if (*(void *)(v12 + 16) && (unint64_t v24 = sub_4BC5C(v21, v23), (v25 & 1) != 0))
        {
          sub_391B0(*(void *)(v12 + 56) + *(void *)(v38 + 72) * v24, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Application);
          uint64_t v26 = 0;
        }
        else
        {
          uint64_t v26 = 1;
        }
        uint64_t v27 = v51;
        (*v50)(v8, v26, 1, v51);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((*v15)(v8, 1, v27) == 1)
        {
          uint64_t v17 = (uint64_t)v8;
          uint64_t v18 = &qword_A3530;
        }
        else
        {
          uint64_t v28 = v47;
          sub_39C28((uint64_t)v8, v47, (uint64_t (*)(void))type metadata accessor for Application);
          uint64_t v29 = v42;
          sub_391B0(v28, v42, (uint64_t (*)(void))type metadata accessor for Application);
          unint64_t v12 = (unint64_t)v41;
          sub_3B15C((uint64_t)v2, v20, v29, (uint64_t)v41);
          if ((*v39)(v12, 1, v45) != 1)
          {
            uint64_t v30 = v43;
            sub_39C28(v12, v43, (uint64_t (*)(void))type metadata accessor for SyncedContent);
            sub_391B0(v30, v44, (uint64_t (*)(void))type metadata accessor for SyncedContent);
            if (swift_isUniquelyReferenced_nonNull_native()) {
              unint64_t v31 = (unint64_t)v49;
            }
            else {
              unint64_t v31 = sub_4B890(0, v49[2] + 1, 1, (unint64_t)v49);
            }
            unint64_t v12 = *(void *)(v31 + 16);
            unint64_t v32 = *(void *)(v31 + 24);
            if (v12 >= v32 >> 1) {
              unint64_t v31 = sub_4B890(v32 > 1, v12 + 1, 1, v31);
            }
            *(void *)(v31 + 16) = v12 + 1;
            unint64_t v33 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
            uint64_t v49 = (void *)v31;
            sub_39C28(v44, v31 + v33 + *(void *)(v37 + 72) * v12, (uint64_t (*)(void))type metadata accessor for SyncedContent);
            sub_3A0D8(v43, (uint64_t (*)(void))type metadata accessor for SyncedContent);
            sub_3A0D8(v47, (uint64_t (*)(void))type metadata accessor for Application);
            goto LABEL_6;
          }
          sub_3A0D8(v28, (uint64_t (*)(void))type metadata accessor for Application);
          uint64_t v17 = v12;
          uint64_t v18 = &qword_A35A0;
        }
        sub_151A8(v17, v18);
      }
LABEL_6:
      if (v53 == ++v16)
      {
        swift_bridgeObjectRelease();

        unint64_t v34 = v49;
        goto LABEL_31;
      }
    }
  }

  unint64_t v34 = _swiftEmptyArrayStorage;
LABEL_31:
  *(void *)(v52 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_syncedMediaSizes) = v34;
  return swift_bridgeObjectRelease();
}

uint64_t sub_33FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  sub_14F50(&qword_A34E8);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  sub_76D40();
  v5[14] = sub_76D30();
  uint64_t v7 = sub_76D10();
  return _swift_task_switch(sub_340BC, v7, v6);
}

uint64_t sub_340BC()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  swift_release();
  uint64_t v3 = v2 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_timeStats;
  swift_beginAccess();
  uint64_t v4 = sub_76B40();
  sub_15144(v3 + *(int *)(v4 + 32), v1, &qword_A34E8);
  uint64_t v5 = sub_76A50();
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1, 1, v5);
  sub_151A8(v1, &qword_A34E8);
  if (v7 == 1)
  {
    uint64_t v8 = v0[12];
    sub_76A40();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v5);
    swift_beginAccess();
    sub_39DEC(v8, v3 + *(int *)(v4 + 32), &qword_A34E8);
    swift_endAccess();
  }
  uint64_t v9 = (unsigned char *)v0[10];
  uint64_t v10 = *(void *)&v9[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_hiddenBundleIDs];
  uint64_t v11 = *(void *)&v9[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_lockedBundleIDs];
  v9[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_recommendationsDidUpdateOnce] = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_386D8(v12, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_37C14(v13, v11);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[9] = v14;
  uint64_t v15 = v9;
  sub_76250();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_3434C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4[2] = a4;
  sub_76D40();
  v4[3] = sub_76D30();
  uint64_t v6 = sub_76D10();
  void v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_343E4, v6, v5);
}

uint64_t sub_343E4()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appProtectionSubscription;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appProtectionSubscription);
  uint64_t v4 = v1;
  if (v3)
  {
    [v3 invalidate];
    uint64_t v4 = v0[2];
  }
  uint64_t v5 = self;
  id v6 = [v5 hiddenAppBundleIdentifiers];
  uint64_t v7 = sub_76D80();

  *(void *)(v4 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_hiddenBundleIDs) = v7;
  swift_bridgeObjectRelease();
  id v8 = [v5 lockedAppBundleIdentifiers];
  uint64_t v9 = sub_76D80();

  *(void *)(v4 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_lockedBundleIDs) = v9;
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(objc_msgSend(self, "subjectMonitorRegistry"), "addMonitor:", v4);
  swift_unknownObjectRelease();
  *(void *)(v1 + v2) = v10;
  swift_unknownObjectRelease();
  uint64_t v11 = *(void **)(v4 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_lastSizerResults);
  v0[6] = v11;
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = (void *)swift_task_alloc();
    v0[7] = v13;
    void *v13 = v0;
    v13[1] = sub_34628;
    return sub_2CBA8((uint64_t)v12);
  }
  else
  {
    swift_release();
    *(void *)(v0[2] + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appSizerQueryTries) = 0;
    sub_2C18C();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_34628()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_34748, v3, v2);
}

uint64_t sub_34748()
{
  uint64_t v1 = (void *)v0[6];
  swift_release();

  *(void *)(v0[2] + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appSizerQueryTries) = 0;
  sub_2C18C();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_347E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  sub_76D40();
  *(void *)(v4 + 24) = sub_76D30();
  uint64_t v6 = sub_76D10();
  return _swift_task_switch(sub_3487C, v6, v5);
}

uint64_t sub_3487C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appProtectionSubscription;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appProtectionSubscription);
  if (v3) {
    [v3 invalidate];
  }
  uint64_t v4 = *(void *)(v0 + 16);
  *(void *)(v1 + v2) = 0;
  swift_unknownObjectRelease();
  [*(id *)(v4 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_appSizer) stopObserving];
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_34948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 32) = a4;
  sub_76D40();
  *(void *)(v4 + 40) = sub_76D30();
  uint64_t v6 = sub_76D10();
  return _swift_task_switch(sub_349E0, v6, v5);
}

uint64_t sub_349E0()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_OWORD *)(v0 + 16) = xmmword_7CF60;
  id v2 = v1;
  sub_76250();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_34AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 32) = a4;
  sub_76D40();
  *(void *)(v4 + 40) = sub_76D30();
  uint64_t v6 = sub_76D10();
  return _swift_task_switch(sub_34B48, v6, v5);
}

uint64_t sub_34B48()
{
  uint64_t v1 = (void *)v0[4];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[3] = 0;
  v0[2] = 0;
  id v2 = v1;
  sub_76250();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_34C14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_76D70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_76D40();
  id v10 = a1;
  uint64_t v11 = sub_76D30();
  id v12 = (void *)swift_allocObject();
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  void v12[4] = v10;
  sub_52508((uint64_t)v8, a4, (uint64_t)v12);
  swift_release();
}

uint64_t sub_34D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[5] = a5;
  v6[6] = a6;
  void v6[4] = a4;
  sub_76D40();
  v6[7] = sub_76D30();
  uint64_t v8 = sub_76D10();
  return _swift_task_switch(sub_34DD0, v8, v7);
}

uint64_t sub_34DD0()
{
  uint64_t v1 = v0[6];
  uint64_t v3 = (void *)v0[4];
  uint64_t v2 = v0[5];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v2;
  v0[3] = v1;
  swift_bridgeObjectRetain();
  id v4 = v3;
  sub_76250();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

void sub_34FE4()
{
  sub_352D0();
  if (v0 <= 0x3F)
  {
    sub_35328(319, &qword_A3428, &qword_A3430);
    if (v1 <= 0x3F)
    {
      sub_35328(319, &qword_A3438, &qword_A3440);
      if (v2 <= 0x3F)
      {
        sub_35328(319, &qword_A3448, &qword_A3450);
        if (v3 <= 0x3F)
        {
          sub_35328(319, &qword_A3458, &qword_A3460);
          if (v4 <= 0x3F)
          {
            sub_35328(319, &qword_A3468, &qword_A3470);
            if (v5 <= 0x3F)
            {
              sub_35378();
              if (v6 <= 0x3F)
              {
                sub_76B40();
                if (v7 <= 0x3F) {
                  swift_updateClassMetadata2();
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_352D0()
{
  if (!qword_A3420)
  {
    sub_76B10();
    unint64_t v0 = sub_76260();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_A3420);
    }
  }
}

void sub_35328(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_14F94(a3);
    unint64_t v4 = sub_76260();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_35378()
{
  if (!qword_A3478)
  {
    unint64_t v0 = sub_76260();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_A3478);
    }
  }
}

uint64_t sub_353D0@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  uint64_t result = sub_76220();
  *a1 = result;
  return result;
}

uint64_t sub_35410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4[2] = a4;
  sub_76D40();
  v4[3] = sub_76D30();
  uint64_t v6 = sub_76D10();
  void v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_354A8, v6, v5);
}

uint64_t sub_354A8()
{
  uint64_t v1 = v0[2];
  unint64_t v2 = self;
  id v3 = [v2 hiddenAppBundleIdentifiers];
  uint64_t v4 = sub_76D80();

  *(void *)(v1 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_hiddenBundleIDs) = v4;
  swift_bridgeObjectRelease();
  id v5 = [v2 lockedAppBundleIdentifiers];
  uint64_t v6 = sub_76D80();

  *(void *)(v1 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_lockedBundleIDs) = v6;
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_lastSizerResults);
  v0[6] = v7;
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[7] = v9;
    void *v9 = v0;
    v9[1] = sub_35654;
    return sub_2CBA8((uint64_t)v8);
  }
  else
  {
    swift_release();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_35654()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_35774, v3, v2);
}

uint64_t sub_35774()
{
  uint64_t v1 = *(void **)(v0 + 48);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void *sub_35924()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_35938(uint64_t a1)
{
  uint64_t v2 = sub_75F10();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_75F00();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_35A2C@<X0>(void *a1@<X8>)
{
  return sub_35B80(a1);
}

uint64_t sub_35A40(uint64_t a1, void **a2)
{
  return sub_35CA4(a1, a2);
}

uint64_t sub_35A54@<X0>(void *a1@<X8>)
{
  return sub_35B80(a1);
}

uint64_t sub_35A68(uint64_t a1, void **a2)
{
  return sub_35CA4(a1, a2);
}

uint64_t sub_35A7C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_35AFC(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_76250();
}

uint64_t sub_35B6C@<X0>(void *a1@<X8>)
{
  return sub_35B80(a1);
}

uint64_t sub_35B80@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_35BFC(uint64_t a1, void **a2)
{
  return sub_35CA4(a1, a2);
}

uint64_t sub_35C10@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_35C90(uint64_t a1, void **a2)
{
  return sub_35CA4(a1, a2);
}

uint64_t sub_35CA4(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return sub_76250();
}

uint64_t sub_35D18(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_35D40(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_35DB8(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_76E20();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_35DB8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_35E8C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_392D0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_392D0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_39B20((uint64_t)v12);
  return v7;
}

uint64_t sub_35E8C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_76E30();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_36048(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_76F90();
  if (!v8)
  {
    sub_76FA0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_76FF0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_36048(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_360E0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_362C0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_362C0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_360E0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_36258(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_76F80();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_76FA0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_76C70();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    sub_76FF0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_76FA0();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_36258(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_14F50(&qword_A35B8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  uint64_t v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_362C0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_14F50(&qword_A35B8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_36410(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_364B0(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_36430(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_3661C(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_36450(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_367A0(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_36470(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_36924(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_36490(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_36AA4(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_364B0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_14F50(&qword_A34F8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_3661C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_14F50(&qword_A35C8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_367A0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_14F50(&qword_A3598);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_36924(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_14F50(&qword_A34F0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 216);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 216 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_36AA4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_14F50(&qword_A3710);
  uint64_t v10 = *(void *)(type metadata accessor for Application() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for Application() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_36CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Application();
  uint64_t v17 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_4BC5C(a1, a2);
  LOBYTE(a2) = v12;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v4;
    uint64_t v18 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_4ECF8();
      uint64_t v14 = v18;
    }
    swift_bridgeObjectRelease();
    sub_39C28(*(void *)(v14 + 56) + *(void *)(v17 + 72) * v11, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Application);
    sub_4E474(v11, v14);
    *unint64_t v4 = v14;
    swift_bridgeObjectRelease();
    sub_39C28((uint64_t)v10, a3, (uint64_t (*)(void))type metadata accessor for Application);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a3, 0, 1, v8);
  }
  else
  {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
    return v16(a3, 1, 1, v8);
  }
}

uint64_t sub_36EDC(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_4BD18(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_4F160();
    uint64_t v7 = v10;
  }

  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_4E48C(v4, v7);
  uint64_t *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_36FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_4BC5C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_4F6E8();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = sub_76070();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a3, v12 + *(void *)(v20 + 72) * v8, v13);
    sub_4E680(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_76070();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_3714C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_4BC5C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_4ECF8();
      goto LABEL_7;
    }
    sub_4C90C(v15, a4 & 1);
    unint64_t v22 = sub_4BC5C(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_77080();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for Application() - 8) + 72) * v12;
    return sub_38D78(a1, v20);
  }
LABEL_13:
  sub_4EAAC(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_372B0(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_4BC5C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_4EF4C();
      goto LABEL_7;
    }
    sub_4CC98(v15, a4 & 1);
    unint64_t v21 = sub_4BC5C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_77080();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 144 * v12;
    return sub_39384((uint64_t)a1, v19);
  }
LABEL_13:
  sub_4EB44(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

id sub_373FC(uint64_t a1, void *a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_4BD18((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_release();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_4F160();
    goto LABEL_7;
  }
  sub_4D11C(v12, a3 & 1);
  unint64_t v18 = sub_4BD18((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_15:
    type metadata accessor for FPProviderDomainID(0);
    id result = (id)sub_77080();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_4EBB8(v9, (uint64_t)a2, a1, v15);

  return a2;
}

id sub_3752C(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  char v5 = (void **)v4;
  unint64_t v9 = (void *)*v4;
  unint64_t v11 = sub_4BD18((uint64_t)a3);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  id result = (id)(v12 + v13);
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v15 = v10;
  uint64_t v16 = v9[3];
  if (v16 >= (uint64_t)result && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v17 = *v5;
    if (v15)
    {
LABEL_8:
      unint64_t v18 = (uint64_t *)(v17[7] + 16 * v11);
      uint64_t *v18 = a1;
      v18[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v16 >= (uint64_t)result && (a4 & 1) == 0)
  {
    id result = sub_4F30C();
    goto LABEL_7;
  }
  sub_4D43C((uint64_t)result, a4 & 1);
  id result = (id)sub_4BD18((uint64_t)a3);
  if ((v15 & 1) != (v19 & 1))
  {
LABEL_15:
    type metadata accessor for FPProviderDomainID(0);
    id result = (id)sub_77080();
    __break(1u);
    return result;
  }
  unint64_t v11 = (unint64_t)result;
  uint64_t v17 = *v5;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  sub_4EC00(v11, (uint64_t)a3, a1, a2, v17);

  return a3;
}

uint64_t sub_37668(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v12 = sub_4BC5C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_4F6E8();
      goto LABEL_7;
    }
    sub_4DB20(v15, a4 & 1);
    unint64_t v26 = sub_4BC5C(a2, a3);
    if ((v16 & 1) == (v27 & 1))
    {
      unint64_t v12 = v26;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_77080();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = sub_76070();
    uint64_t v21 = *(void *)(v20 - 8);
    char v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v23 = v20;
    uint64_t v24 = v19 + *(void *)(v21 + 72) * v12;
    return v22(v24, a1, v23);
  }
LABEL_13:
  sub_4EC48(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_377E8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_37888(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[3] = type metadata accessor for StorageShared();
  v20[4] = &off_97210;
  v20[0] = a1;
  sub_39D88((uint64_t)v20, (uint64_t)aBlock);
  sub_150E0((uint64_t)aBlock, (uint64_t)v19, &qword_A36C0);
  swift_beginAccess();
  id v7 = a1;
  sub_39DEC((uint64_t)v19, a2 + 160, &qword_A36C0);
  swift_endAccess();
  id v8 = [self defaultCenter];
  uint64_t v9 = MSPStorageTipsManagerTipDidChangeNotification;
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_39E88;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_35938;
  aBlock[3] = &unk_97540;
  char v11 = _Block_copy(aBlock);
  swift_release();
  id v12 = [v8 addObserverForName:v9 object:0 queue:0 usingBlock:v11];
  _Block_release(v11);

  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_76CA0();
  if (*(void *)((char *)&dword_10 + (*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_76CD0();
  }
  sub_76CF0();
  sub_76CC0();
  swift_endAccess();
  uint64_t v13 = sub_76D70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  unint64_t v14 = sub_39E90();
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a2;
  v15[3] = v14;
  v15[4] = a2;
  swift_retain_n();
  sub_52508((uint64_t)v6, (uint64_t)&unk_A36D0, (uint64_t)v15);
  swift_unknownObjectRelease();
  swift_release();
  return sub_39B20((uint64_t)v20);
}

uint64_t sub_37B8C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_37C14(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    uint64_t v45 = *(void *)(a1 + 16);
    uint64_t v59 = _swiftEmptyArrayStorage;
    sub_36470(0, v2, 0);
    uint64_t v6 = v45;
    uint64_t v7 = 0;
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v60 = a2 + 56;
    for (uint64_t i = a2; ; a2 = i)
    {
      uint64_t v8 = a1 + 32 + 216 * v7;
      long long v9 = *(_OWORD *)(v8 + 160);
      long long v10 = *(_OWORD *)(v8 + 192);
      *(_OWORD *)&v56[32] = *(_OWORD *)(v8 + 176);
      long long v57 = v10;
      long long v11 = *(_OWORD *)(v8 + 96);
      long long v12 = *(_OWORD *)(v8 + 128);
      long long v13 = *(_OWORD *)(v8 + 144);
      v55[1] = *(_OWORD *)(v8 + 112);
      v55[2] = v12;
      *(_OWORD *)uint64_t v56 = v13;
      *(_OWORD *)&v56[16] = v9;
      long long v14 = *(_OWORD *)(v8 + 32);
      long long v15 = *(_OWORD *)(v8 + 64);
      long long v16 = *(_OWORD *)(v8 + 80);
      long long v53 = *(_OWORD *)(v8 + 48);
      v54[0] = v15;
      char v58 = *(unsigned char *)(v8 + 208);
      v54[1] = v16;
      v55[0] = v11;
      long long v17 = *(_OWORD *)(v8 + 16);
      v51[0] = *(_OWORD *)v8;
      v51[1] = v17;
      long long v52 = v14;
      long long v18 = v17;
      if (!*(void *)(a2 + 16))
      {
        sub_389F4((uint64_t)v51);
        char v23 = 0;
        goto LABEL_19;
      }
      sub_770C0();
      sub_389F4((uint64_t)v51);
      sub_389F4((uint64_t)v51);
      swift_bridgeObjectRetain();
      sub_76C40();
      Swift::Int v19 = sub_77100();
      uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v21 = v19 & ~v20;
      if (((*(void *)(v60 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
        goto LABEL_17;
      }
      uint64_t v22 = *(void *)(a2 + 48);
      if (*(_OWORD *)(v22 + 16 * v21) != v18 && (sub_77050() & 1) == 0) {
        break;
      }
LABEL_7:
      swift_bridgeObjectRelease();
      sub_38B34((uint64_t)v51);
      char v23 = 1;
LABEL_18:
      uint64_t v6 = v45;
LABEL_19:
      uint64_t v59 = v3;
      unint64_t v28 = v3[2];
      unint64_t v27 = v3[3];
      if (v28 >= v27 >> 1)
      {
        sub_36470(v27 > 1, v28 + 1, 1);
        uint64_t v6 = v45;
        uint64_t v3 = v59;
      }
      ++v7;
      uint64_t v29 = *((void *)&v55[2] + 1);
      char v30 = v56[0];
      uint64_t v31 = *((void *)&v54[1] + 1);
      uint64_t v32 = *(void *)&v55[0];
      char v33 = v54[0];
      long long v34 = *(_OWORD *)((char *)v54 + 8);
      long long v35 = v52;
      long long v36 = v51[0];
      char v48 = v56[40];
      uint64_t v37 = &v3[27 * v28];
      long long v38 = v53;
      long long v39 = *(_OWORD *)((char *)v55 + 8);
      long long v40 = *(_OWORD *)((char *)&v55[1] + 8);
      long long v41 = *(_OWORD *)&v56[8];
      long long v42 = *(_OWORD *)&v56[24];
      long long v43 = v57;
      v3[2] = v28 + 1;
      *((_OWORD *)v37 + 2) = v36;
      *((_OWORD *)v37 + 3) = v18;
      *((_OWORD *)v37 + 4) = v35;
      *((_OWORD *)v37 + 5) = v38;
      *((unsigned char *)v37 + 96) = v33;
      *((_DWORD *)v37 + 25) = *(_DWORD *)&v50[3];
      *(_DWORD *)((char *)v37 + 97) = *(_DWORD *)v50;
      *(_OWORD *)(v37 + 13) = v34;
      v37[15] = v31;
      v37[16] = v32;
      *(_OWORD *)(v37 + 17) = v39;
      *(_OWORD *)(v37 + 19) = v40;
      v37[21] = v29;
      *((unsigned char *)v37 + 176) = v30;
      *(_DWORD *)((char *)v37 + 177) = *(_DWORD *)v49;
      *((_DWORD *)v37 + 45) = *(_DWORD *)&v49[3];
      *(_OWORD *)(v37 + 23) = v41;
      *(_OWORD *)(v37 + 25) = v42;
      *((unsigned char *)v37 + 216) = v48;
      *(_DWORD *)((char *)v37 + 217) = *(_DWORD *)v47;
      *((_DWORD *)v37 + 55) = *(_DWORD *)&v47[3];
      *((_OWORD *)v37 + 14) = v43;
      *((unsigned char *)v37 + 240) = v23;
      if (v7 == v6) {
        return v3;
      }
    }
    uint64_t v24 = ~v20;
    while (1)
    {
      unint64_t v21 = (v21 + 1) & v24;
      if (((*(void *)(v60 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
        break;
      }
      char v25 = (void *)(v22 + 16 * v21);
      BOOL v26 = *v25 == (void)v18 && v25[1] == *((void *)&v18 + 1);
      if (v26 || (sub_77050() & 1) != 0) {
        goto LABEL_7;
      }
    }
LABEL_17:
    swift_bridgeObjectRelease();
    sub_38B34((uint64_t)v51);
    char v23 = 0;
    goto LABEL_18;
  }
  return v3;
}

uint64_t sub_37F40(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_14F50(&qword_A3000);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Application();
  uint64_t v80 = *(void *)(v9 - 8);
  uint64_t v81 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v87 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v13 = (uint64_t *)((char *)&v73 - v12);
  uint64_t v88 = sub_14F50(&qword_A3638);
  uint64_t v14 = __chkstk_darwin(v88);
  uint64_t v79 = (uint64_t *)((char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v78 = (char *)&v73 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v90 = (uint64_t *)((char *)&v73 - v19);
  __chkstk_darwin(v18);
  uint64_t v77 = (char *)&v73 - v20;
  uint64_t v21 = *(void *)(a2 + 64);
  uint64_t v74 = a2 + 64;
  uint64_t v22 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v21;
  uint64_t v76 = (uint64_t *)(a3 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_datesByApplications);
  int64_t v75 = (unint64_t)(v22 + 63) >> 6;
  uint64_t v82 = a2;
  swift_bridgeObjectRetain();
  int64_t v25 = 0;
  uint64_t v83 = v13;
  while (1)
  {
    if (v24)
    {
      uint64_t v84 = (v24 - 1) & v24;
      int64_t v85 = v25;
      unint64_t v26 = __clz(__rbit64(v24)) | (v25 << 6);
    }
    else
    {
      int64_t v27 = v25 + 1;
      if (__OFADD__(v25, 1)) {
        goto LABEL_42;
      }
      if (v27 >= v75)
      {
LABEL_39:
        swift_release();
        return (uint64_t)a1;
      }
      unint64_t v28 = *(void *)(v74 + 8 * v27);
      int64_t v29 = v25 + 1;
      if (!v28)
      {
        int64_t v29 = v25 + 2;
        if (v25 + 2 >= v75) {
          goto LABEL_39;
        }
        unint64_t v28 = *(void *)(v74 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v25 + 3;
          if (v25 + 3 >= v75) {
            goto LABEL_39;
          }
          unint64_t v28 = *(void *)(v74 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = v25 + 4;
            if (v25 + 4 >= v75) {
              goto LABEL_39;
            }
            unint64_t v28 = *(void *)(v74 + 8 * v29);
            if (!v28)
            {
              uint64_t v30 = v25 + 5;
              if (v25 + 5 >= v75) {
                goto LABEL_39;
              }
              unint64_t v28 = *(void *)(v74 + 8 * v30);
              if (!v28)
              {
                while (1)
                {
                  int64_t v29 = v30 + 1;
                  if (__OFADD__(v30, 1)) {
                    goto LABEL_43;
                  }
                  if (v29 >= v75) {
                    goto LABEL_39;
                  }
                  unint64_t v28 = *(void *)(v74 + 8 * v29);
                  ++v30;
                  if (v28) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v29 = v25 + 5;
            }
          }
        }
      }
LABEL_23:
      uint64_t v84 = (v28 - 1) & v28;
      int64_t v85 = v29;
      unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    }
    uint64_t v31 = *(void *)(v82 + 56);
    uint64_t v32 = (uint64_t *)(*(void *)(v82 + 48) + 16 * v26);
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    uint64_t v86 = *(void *)(v80 + 72);
    uint64_t v35 = v88;
    long long v36 = v77;
    sub_391B0(v31 + v86 * v26, (uint64_t)&v77[*(int *)(v88 + 48)], (uint64_t (*)(void))type metadata accessor for Application);
    void *v36 = v33;
    v36[1] = v34;
    uint64_t v37 = (uint64_t)v36;
    long long v38 = v90;
    sub_150E0(v37, (uint64_t)v90, &qword_A3638);
    uint64_t v39 = *(int *)(v35 + 48);
    uint64_t v40 = (uint64_t)&v78[v39];
    uint64_t v41 = (uint64_t)v38 + v39;
    sub_391B0(v41, (uint64_t)&v78[v39], (uint64_t (*)(void))type metadata accessor for Application);
    sub_39C28(v40, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Application);
    uint64_t v43 = *v13;
    uint64_t v42 = v13[1];
    uint64_t v44 = v76;
    swift_beginAccess();
    uint64_t v45 = *v44;
    if (*(void *)(*v44 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v46 = sub_4BC5C(v43, v42);
      if (v47)
      {
        unint64_t v48 = v46;
        uint64_t v49 = *(void *)(v45 + 56);
        uint64_t v50 = sub_76070();
        uint64_t v51 = *(void *)(v50 - 8);
        (*(void (**)(char *, unint64_t, uint64_t))(v51 + 16))(v8, v49 + *(void *)(v51 + 72) * v48, v50);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v8, 0, 1, v50);
        long long v13 = v83;
      }
      else
      {
        uint64_t v53 = sub_76070();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v8, 1, 1, v53);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v52 = sub_76070();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v8, 1, 1, v52);
      swift_bridgeObjectRetain();
    }
    swift_endAccess();
    unint64_t v54 = v8;
    sub_39DEC((uint64_t)v8, (uint64_t)v13 + *(int *)(v81 + 72), &qword_A3000);
    uint64_t v55 = v79;
    uint64_t v56 = (uint64_t)v79 + *(int *)(v88 + 48);
    uint64_t v58 = *v90;
    uint64_t v57 = v90[1];
    void *v79 = *v90;
    v55[1] = v57;
    sub_391B0(v41, v56, (uint64_t (*)(void))type metadata accessor for Application);
    sub_391B0((uint64_t)v13, v87, (uint64_t (*)(void))type metadata accessor for Application);
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v89 = a1;
    unint64_t v61 = sub_4BC5C(v58, v57);
    uint64_t v62 = a1[2];
    BOOL v63 = (v60 & 1) == 0;
    uint64_t v64 = v62 + v63;
    if (__OFADD__(v62, v63)) {
      break;
    }
    char v65 = v60;
    if (a1[3] >= v64)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_4ECF8();
      }
    }
    else
    {
      sub_4C90C(v64, isUniquelyReferenced_nonNull_native);
      unint64_t v66 = sub_4BC5C(v58, v57);
      if ((v65 & 1) != (v67 & 1)) {
        goto LABEL_44;
      }
      unint64_t v61 = v66;
    }
    long long v13 = v83;
    a1 = v89;
    if (v65)
    {
      sub_38D78(v87, v89[7] + v61 * v86);
    }
    else
    {
      v89[(v61 >> 6) + 8] |= 1 << v61;
      uint64_t v68 = (uint64_t *)(a1[6] + 16 * v61);
      *uint64_t v68 = v58;
      v68[1] = v57;
      sub_39C28(v87, a1[7] + v61 * v86, (uint64_t (*)(void))type metadata accessor for Application);
      uint64_t v69 = a1[2];
      BOOL v70 = __OFADD__(v69, 1);
      uint64_t v71 = v69 + 1;
      if (v70) {
        goto LABEL_41;
      }
      a1[2] = v71;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_3A0D8(v56, (uint64_t (*)(void))type metadata accessor for Application);
    sub_3A0D8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Application);
    sub_151A8((uint64_t)v90, &qword_A3638);
    uint64_t v8 = v54;
    unint64_t v24 = v84;
    int64_t v25 = v85;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  uint64_t result = sub_77080();
  __break(1u);
  return result;
}

uint64_t sub_386D8(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v3 = a2;
  unint64_t v4 = 0;
  uint64_t v41 = result + 32;
  uint64_t v58 = a2 + 56;
  uint64_t v39 = _swiftEmptyArrayStorage;
  do
  {
    if (v4 <= v2) {
      unint64_t v5 = v2;
    }
    else {
      unint64_t v5 = v4;
    }
    unint64_t v42 = v5;
    while (1)
    {
      if (v4 == v42)
      {
        __break(1u);
        return result;
      }
      uint64_t v6 = v41 + 216 * v4;
      long long v7 = *(_OWORD *)(v6 + 176);
      long long v53 = *(_OWORD *)(v6 + 160);
      long long v54 = v7;
      long long v55 = *(_OWORD *)(v6 + 192);
      char v56 = *(unsigned char *)(v6 + 208);
      long long v8 = *(_OWORD *)(v6 + 112);
      long long v49 = *(_OWORD *)(v6 + 96);
      long long v50 = v8;
      long long v9 = *(_OWORD *)(v6 + 144);
      long long v51 = *(_OWORD *)(v6 + 128);
      long long v52 = v9;
      long long v10 = *(_OWORD *)(v6 + 48);
      long long v45 = *(_OWORD *)(v6 + 32);
      long long v46 = v10;
      long long v11 = *(_OWORD *)(v6 + 80);
      long long v47 = *(_OWORD *)(v6 + 64);
      long long v48 = v11;
      long long v12 = *(_OWORD *)(v6 + 16);
      long long v43 = *(_OWORD *)v6;
      long long v44 = v12;
      ++v4;
      if (!*(void *)(v3 + 16))
      {
        sub_389F4((uint64_t)&v43);
        goto LABEL_24;
      }
      long long v13 = v44;
      sub_770C0();
      sub_389F4((uint64_t)&v43);
      swift_bridgeObjectRetain();
      sub_76C40();
      Swift::Int v14 = sub_77100();
      uint64_t v15 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v16 = v14 & ~v15;
      if (((*(void *)(v58 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      uint64_t v17 = v3;
      unint64_t v18 = v2;
      uint64_t v19 = *(void *)(v17 + 48);
      if (*(_OWORD *)(v19 + 16 * v16) != v13 && (sub_77050() & 1) == 0) {
        break;
      }
LABEL_7:
      swift_bridgeObjectRelease();
      uint64_t result = sub_38B34((uint64_t)&v43);
      unint64_t v2 = v18;
      BOOL v24 = v4 == v18;
      uint64_t v3 = a2;
      if (v24) {
        return (uint64_t)v39;
      }
    }
    uint64_t v20 = ~v15;
    for (unint64_t i = v16 + 1; ; unint64_t i = v22 + 1)
    {
      uint64_t v22 = i & v20;
      if (((*(void *)(v58 + (((i & v20) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v20)) & 1) == 0) {
        break;
      }
      uint64_t v23 = (void *)(v19 + 16 * v22);
      BOOL v24 = *v23 == (void)v13 && v23[1] == *((void *)&v13 + 1);
      if (v24 || (sub_77050() & 1) != 0) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v2 = v18;
    uint64_t v3 = a2;
LABEL_24:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    int64_t v25 = v39;
    uint64_t v57 = v39;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_36470(0, v39[2] + 1, 1);
      int64_t v25 = v57;
    }
    unint64_t v27 = v25[2];
    unint64_t v26 = v25[3];
    if (v27 >= v26 >> 1)
    {
      uint64_t result = sub_36470(v26 > 1, v27 + 1, 1);
      int64_t v25 = v57;
    }
    void v25[2] = v27 + 1;
    uint64_t v39 = v25;
    unint64_t v28 = &v25[27 * v27];
    long long v29 = v44;
    *((_OWORD *)v28 + 2) = v43;
    *((_OWORD *)v28 + 3) = v29;
    long long v30 = v45;
    long long v31 = v46;
    long long v32 = v48;
    *((_OWORD *)v28 + 6) = v47;
    *((_OWORD *)v28 + 7) = v32;
    *((_OWORD *)v28 + 4) = v30;
    *((_OWORD *)v28 + 5) = v31;
    long long v33 = v49;
    long long v34 = v50;
    long long v35 = v52;
    *((_OWORD *)v28 + 10) = v51;
    *((_OWORD *)v28 + 11) = v35;
    *((_OWORD *)v28 + 8) = v33;
    *((_OWORD *)v28 + 9) = v34;
    long long v36 = v53;
    long long v37 = v54;
    long long v38 = v55;
    *((unsigned char *)v28 + 240) = v56;
    *((_OWORD *)v28 + 13) = v37;
    *((_OWORD *)v28 + 14) = v38;
    *((_OWORD *)v28 + 12) = v36;
  }
  while (v4 != v2);
  return (uint64_t)v39;
}

uint64_t sub_389CC(uint64_t a1, void **a2)
{
  return sub_35CA4(a1, a2);
}

uint64_t sub_389F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 120);
  uint64_t v9 = *(void *)(a1 + 112);
  uint64_t v7 = *(void *)(a1 + 136);
  uint64_t v10 = *(void *)(a1 + 192);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_16F10(v2, v3, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_38AE0(v9, v8, v4, v7);
  swift_bridgeObjectRetain();
  sub_38B24(v10);
  return a1;
}

uint64_t sub_38AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_38B24(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_38B34(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 120);
  uint64_t v9 = *(void *)(a1 + 112);
  uint64_t v7 = *(void *)(a1 + 136);
  uint64_t v10 = *(void *)(a1 + 192);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_16FDC(v2, v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_38C20(v9, v8, v4, v7);
  swift_bridgeObjectRelease();
  sub_38C64(v10);
  return a1;
}

uint64_t sub_38C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_38C64(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t *sub_38C74(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_38CD8@<X0>(void *a1@<X8>)
{
  return sub_35B80(a1);
}

uint64_t sub_38D00(uint64_t a1, void **a2)
{
  return sub_35CA4(a1, a2);
}

uint64_t sub_38D28@<X0>(void *a1@<X8>)
{
  return sub_35B80(a1);
}

uint64_t sub_38D50(uint64_t a1, void **a2)
{
  return sub_35CA4(a1, a2);
}

uint64_t sub_38D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Application();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_38DE0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25054;
  return sub_35410(a1, v4, v5, v6);
}

uint64_t sub_38E98(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25054;
  return sub_32B84(a1, v4, v5, v6);
}

uint64_t sub_38F4C()
{
  uint64_t v1 = *(void *)(sub_76B10() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v6 = sub_76020();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_39058(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_76B10() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_25054;
  return sub_3326C(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_39160@<X0>(void *a1@<X8>)
{
  return sub_35B80(a1);
}

uint64_t sub_39188(uint64_t a1, void **a2)
{
  return sub_35CA4(a1, a2);
}

uint64_t sub_391B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_3921C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_163DC;
  return sub_2A6EC(a1, v4, v5, v6);
}

uint64_t sub_392D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_3932C@<X0>(void *a1@<X8>)
{
  return sub_35B80(a1);
}

uint64_t sub_39354(uint64_t a1, void **a2)
{
  return sub_35CA4(a1, a2);
}

uint64_t sub_3937C()
{
  return swift_release();
}

uint64_t sub_39384(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_393E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_16F10(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_394AC()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_394F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_25054;
  return sub_34D34(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_395C8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25054;
  return sub_34AB0(a1, v4, v5, v6);
}

uint64_t sub_39680(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25054;
  return sub_34948(a1, v4, v5, v6);
}

uint64_t sub_39738(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25054;
  return sub_347E4(a1, v4, v5, v6);
}

uint64_t sub_397F0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25054;
  return sub_3434C(a1, v4, v5, v6);
}

uint64_t sub_398AC(void *a1, uint64_t a2)
{
  return sub_2C734(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_398B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_398C4()
{
  return swift_release();
}

uint64_t sub_398CC()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_39904(void *a1)
{
  return sub_32804(a1, *(void *)(v1 + 16));
}

uint64_t sub_39910(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25054;
  return sub_324F4(a1, v4, v5, v6);
}

uint64_t sub_399C4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_39A0C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_25054;
  return sub_2CAEC(a1, v4, v5, v7, v6);
}

unint64_t sub_39ACC()
{
  unint64_t result = qword_A3668;
  if (!qword_A3668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3668);
  }
  return result;
}

uint64_t sub_39B20(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_39B74(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25054;
  return sub_52C28(a1, v4, v5, v6);
}

uint64_t sub_39C28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_39C94()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_39CD4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25054;
  return sub_2BB5C(a1, v4, v5, v6);
}

uint64_t sub_39D88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_39DEC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_14F50(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_39E50()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_39E88()
{
  return sub_477E8();
}

unint64_t sub_39E90()
{
  unint64_t result = qword_A36C8;
  if (!qword_A36C8)
  {
    type metadata accessor for RecommendationController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A36C8);
  }
  return result;
}

uint64_t sub_39EEC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_39F2C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25054;
  return sub_47840(a1, v4, v5, v6);
}

uint64_t sub_39FE0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 136);
  uint64_t v9 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 152);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v10 = *(void *)(a1 + 208);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_16F10(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_38AE0(v9, v8, v7, v6);
  swift_bridgeObjectRetain();
  sub_38B24(v10);
  return a1;
}

uint64_t sub_3A0D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_3A138(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void *sub_3A16C(_OWORD *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v25 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    uint64_t v5 = a2[3];
    v3[2] = a2[2];
    v3[3] = v5;
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (char *)v3 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
    *(void *)uint64_t v7 = *(void *)((char *)a2 + v6);
    *((void *)v7 + 1) = v9;
    uint64_t v10 = *(void *)((char *)a2 + v6 + 24);
    *((void *)v7 + 2) = *(void *)((char *)a2 + v6 + 16);
    *((void *)v7 + 3) = v10;
    uint64_t v11 = *(void *)((char *)a2 + v6 + 40);
    *((void *)v7 + 4) = *(void *)((char *)a2 + v6 + 32);
    *((void *)v7 + 5) = v11;
    *((_OWORD *)v7 + 3) = *(_OWORD *)((char *)a2 + v6 + 48);
    v7[64] = *((unsigned char *)a2 + v6 + 64);
    long long v13 = *(void **)((char *)a2 + v6 + 72);
    uint64_t v12 = *(void *)((char *)a2 + v6 + 80);
    *((void *)v7 + 9) = v13;
    uint64_t v14 = *(void *)((char *)a2 + v6 + 88);
    unsigned __int8 v15 = *((unsigned char *)a2 + v6 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = v13;
    sub_16F10(v12, v14, v15);
    *((void *)v7 + 10) = v12;
    *((void *)v7 + 11) = v14;
    v7[96] = v15;
    uint64_t v17 = *((void *)v8 + 14);
    *((void *)v7 + 13) = *((void *)v8 + 13);
    *((void *)v7 + 14) = v17;
    *((void *)v7 + 15) = *((void *)v8 + 15);
    *((_DWORD *)v7 + 32) = *((_DWORD *)v8 + 32);
    *((_WORD *)v7 + 66) = *((_WORD *)v8 + 66);
    uint64_t v18 = type metadata accessor for Application();
    uint64_t v19 = *(int *)(v18 + 72);
    long long v31 = (int *)v18;
    __dst = &v7[v19];
    uint64_t v20 = &v8[v19];
    uint64_t v21 = sub_76070();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v20, 1, v21))
    {
      uint64_t v24 = sub_14F50(&qword_A3000);
      memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    uint64_t v26 = v31[19];
    unint64_t v27 = &v7[v26];
    unint64_t v28 = &v8[v26];
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)unint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    *(void *)&v7[v31[20]] = *(void *)&v8[v31[20]];
    *(void *)&v7[v31[21]] = *(void *)&v8[v31[21]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_3A3E8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_16FDC(*(void *)(v4 + 80), *(void *)(v4 + 88), *(unsigned char *)(v4 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for Application() + 72);
  uint64_t v6 = sub_76070();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_3A518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v30 = a1;
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = *(void *)(a2 + v5 + 8);
  *(void *)uint64_t v6 = *(void *)(a2 + v5);
  *(void *)(v6 + 8) = v8;
  uint64_t v9 = *(void *)(a2 + v5 + 24);
  *(void *)(v6 + 16) = *(void *)(a2 + v5 + 16);
  *(void *)(v6 + 24) = v9;
  uint64_t v10 = *(void *)(a2 + v5 + 40);
  *(void *)(v6 + 32) = *(void *)(a2 + v5 + 32);
  *(void *)(v6 + 40) = v10;
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a2 + v5 + 48);
  *(unsigned char *)(v6 + 64) = *(unsigned char *)(a2 + v5 + 64);
  uint64_t v12 = *(void **)(a2 + v5 + 72);
  uint64_t v11 = *(void *)(a2 + v5 + 80);
  *(void *)(v6 + 72) = v12;
  uint64_t v13 = *(void *)(a2 + v5 + 88);
  unsigned __int8 v14 = *(unsigned char *)(a2 + v5 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = v12;
  sub_16F10(v11, v13, v14);
  *(void *)(v6 + 80) = v11;
  *(void *)(v6 + 88) = v13;
  *(unsigned char *)(v6 + 96) = v14;
  uint64_t v16 = *(void *)(v7 + 112);
  *(void *)(v6 + 104) = *(void *)(v7 + 104);
  *(void *)(v6 + 112) = v16;
  *(void *)(v6 + 120) = *(void *)(v7 + 120);
  *(_DWORD *)(v6 + 128) = *(_DWORD *)(v7 + 128);
  *(_WORD *)(v6 + 132) = *(_WORD *)(v7 + 132);
  uint64_t v17 = (int *)type metadata accessor for Application();
  uint64_t v18 = v17[18];
  __dst = (void *)(v6 + v18);
  uint64_t v19 = (const void *)(v7 + v18);
  uint64_t v20 = sub_76070();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    uint64_t v23 = sub_14F50(&qword_A3000);
    memcpy(__dst, v19, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(__dst, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  uint64_t v24 = v17[19];
  uint64_t v25 = (void *)(v6 + v24);
  uint64_t v26 = (void *)(v7 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  *(void *)(v6 + v17[20]) = *(void *)(v7 + v17[20]);
  *(void *)(v6 + v17[21]) = *(void *)(v7 + v17[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v30;
}

void *sub_3A748(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  long long v32 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)uint64_t v7 = *(void *)((char *)a2 + v6);
  *((void *)v7 + 1) = *(void *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 2) = *((void *)v8 + 2);
  *((void *)v7 + 3) = *((void *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 4) = *((void *)v8 + 4);
  *((void *)v7 + 5) = *((void *)v8 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 6) = *((void *)v8 + 6);
  *((void *)v7 + 7) = *((void *)v8 + 7);
  v7[64] = v8[64];
  uint64_t v9 = (void *)*((void *)v7 + 9);
  uint64_t v10 = (void *)*((void *)v8 + 9);
  *((void *)v7 + 9) = v10;
  id v11 = v10;

  uint64_t v12 = *((void *)v8 + 10);
  uint64_t v13 = *((void *)v8 + 11);
  unsigned __int8 v14 = v8[96];
  sub_16F10(v12, v13, v14);
  uint64_t v15 = *((void *)v7 + 10);
  uint64_t v16 = *((void *)v7 + 11);
  *((void *)v7 + 10) = v12;
  *((void *)v7 + 11) = v13;
  unsigned __int8 v17 = v7[96];
  v7[96] = v14;
  sub_16FDC(v15, v16, v17);
  *((void *)v7 + 13) = *((void *)v8 + 13);
  *((void *)v7 + 14) = *((void *)v8 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 15) = *((void *)v8 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[128] = v8[128];
  v7[129] = v8[129];
  v7[130] = v8[130];
  v7[131] = v8[131];
  v7[132] = v8[132];
  v7[133] = v8[133];
  uint64_t v18 = (int *)type metadata accessor for Application();
  uint64_t v19 = v18[18];
  uint64_t v20 = &v7[v19];
  uint64_t v21 = &v8[v19];
  uint64_t v22 = sub_76070();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    uint64_t v27 = sub_14F50(&qword_A3000);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_7:
  uint64_t v28 = v18[19];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v18[20]] = *(void *)&v8[v18[20]];
  *(void *)&v7[v18[21]] = *(void *)&v8[v18[21]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v32;
}

_OWORD *sub_3AA90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  long long v8 = *(_OWORD *)((char *)a2 + v5 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)((char *)a2 + v5);
  *((_OWORD *)v6 + 1) = v8;
  long long v9 = *(_OWORD *)((char *)a2 + v5 + 48);
  *((_OWORD *)v6 + 2) = *(_OWORD *)((char *)a2 + v5 + 32);
  *((_OWORD *)v6 + 3) = v9;
  v6[64] = *((unsigned char *)a2 + v5 + 64);
  *((void *)v6 + 9) = *(void *)((char *)a2 + v5 + 72);
  long long v10 = *(_OWORD *)((char *)a2 + v5 + 96);
  *((_OWORD *)v6 + 5) = *(_OWORD *)((char *)a2 + v5 + 80);
  *((_OWORD *)v6 + 6) = v10;
  uint64_t v11 = *(void *)((char *)a2 + v5 + 120);
  *((void *)v6 + 14) = *(void *)((char *)a2 + v5 + 112);
  *((void *)v6 + 15) = v11;
  *((_DWORD *)v6 + 32) = *(_DWORD *)((char *)a2 + v5 + 128);
  *((_WORD *)v6 + 66) = *(_WORD *)((char *)a2 + v5 + 132);
  uint64_t v12 = (int *)type metadata accessor for Application();
  uint64_t v13 = v12[18];
  unsigned __int8 v14 = &v6[v13];
  uint64_t v15 = &v7[v13];
  uint64_t v16 = sub_76070();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_14F50(&qword_A3000);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(_OWORD *)&v6[v12[19]] = *(_OWORD *)&v7[v12[19]];
  *(void *)&v6[v12[20]] = *(void *)&v7[v12[20]];
  *(void *)&v6[v12[21]] = *(void *)&v7[v12[21]];
  return a1;
}

uint64_t sub_3AC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v35 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v9 + 40);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = v12;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  uint64_t v13 = *(void **)(v8 + 72);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);

  char v14 = *(unsigned char *)(v9 + 96);
  uint64_t v15 = *(void *)(v8 + 80);
  uint64_t v16 = *(void *)(v8 + 88);
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(v9 + 80);
  unsigned __int8 v17 = *(unsigned char *)(v8 + 96);
  *(unsigned char *)(v8 + 96) = v14;
  sub_16FDC(v15, v16, v17);
  uint64_t v18 = *(void *)(v9 + 112);
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  *(void *)(v8 + 112) = v18;
  swift_bridgeObjectRelease();
  *(void *)(v8 + 120) = *(void *)(v9 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 128) = *(unsigned char *)(v9 + 128);
  *(unsigned char *)(v8 + 129) = *(unsigned char *)(v9 + 129);
  *(unsigned char *)(v8 + 130) = *(unsigned char *)(v9 + 130);
  *(unsigned char *)(v8 + 131) = *(unsigned char *)(v9 + 131);
  *(unsigned char *)(v8 + 132) = *(unsigned char *)(v9 + 132);
  *(unsigned char *)(v8 + 133) = *(unsigned char *)(v9 + 133);
  uint64_t v19 = (int *)type metadata accessor for Application();
  uint64_t v20 = v19[18];
  uint64_t v21 = (void *)(v8 + v20);
  uint64_t v22 = (void *)(v9 + v20);
  uint64_t v23 = sub_76070();
  uint64_t v24 = *(void *)(v23 - 8);
  int v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v21, v22, v23);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    uint64_t v28 = sub_14F50(&qword_A3000);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_7:
  uint64_t v29 = v19[19];
  uint64_t v30 = (void *)(v8 + v29);
  long long v31 = (uint64_t *)(v9 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *uint64_t v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  *(void *)(v8 + v19[20]) = *(void *)(v9 + v19[20]);
  *(void *)(v8 + v19[21]) = *(void *)(v9 + v19[21]);
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_3AEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3AEF0);
}

uint64_t sub_3AEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Application();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_3AFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3AFB4);
}

uint64_t sub_3AFB4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Application();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SyncedContent()
{
  uint64_t result = qword_A3788;
  if (!qword_A3788) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3B0A8()
{
  uint64_t result = type metadata accessor for Application();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_3B150()
{
  return &protocol witness table for UInt;
}

uint64_t sub_3B15C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for SyncedContent();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v12 = a1;
  v12[1] = a2;
  uint64_t v13 = (uint64_t)v12 + *(int *)(v10 + 28);
  sub_3B490(a3, v13, (uint64_t (*)(void))type metadata accessor for Application);
  if (a1 <= 3)
  {
    if (a1 == 1 || a1 == 2) {
      goto LABEL_8;
    }
  }
  else if (a1 == 4 || a1 == 512 || a1 == 2048)
  {
LABEL_8:
    NSString v14 = sub_76BE0();
    NSString v15 = sub_76BE0();
    id v16 = STLocalizedString(v14);

    uint64_t v17 = sub_76C10();
    uint64_t v19 = v18;

    sub_3B4F8(a3, (uint64_t (*)(void))type metadata accessor for Application);
    v12[2] = v17;
    uint64_t v12[3] = v19;
    sub_3B490((uint64_t)v12, a4, (uint64_t (*)(void))type metadata accessor for SyncedContent);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a4, 0, 1, v8);
    return sub_3B4F8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SyncedContent);
  }
  sub_3B4F8(a3, (uint64_t (*)(void))type metadata accessor for Application);
  sub_3B4F8(v13, (uint64_t (*)(void))type metadata accessor for Application);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a4, 1, 1, v8);
}

void sub_3B47C()
{
  qword_A6AB8 = (uint64_t)&off_96990;
}

uint64_t sub_3B490(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_3B4F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_3B558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

void sub_3B560()
{
  sub_3C2D4(319, &qword_A3868, (void (*)(uint64_t))&type metadata accessor for AppendSettingsNavigationPathAction);
  if (v0 <= 0x3F)
  {
    sub_3C2D4(319, &qword_A3870, (void (*)(uint64_t))&type metadata accessor for SettingsAppPrimaryNavigationMode);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_3B678(void *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    unint64_t v4 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_14F50(&qword_A37C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_76170();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *unint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[9];
    uint64_t v10 = (void *)((char *)v4 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_14F50(&qword_A37D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_76150();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    NSString v14 = (void *)((char *)v4 + v13);
    NSString v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *NSString v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = a3[12];
    uint64_t v18 = (void *)((char *)v4 + v17);
    uint64_t v19 = (void *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_3B860(uint64_t a1, uint64_t a2)
{
  sub_14F50(&qword_A37C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_76170();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  sub_14F50(&qword_A37D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_76150();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_release();
}

void *sub_3B988(void *a1, void *a2, int *a3)
{
  sub_14F50(&qword_A37C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_76170();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_14F50(&qword_A37D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_76150();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[12];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_3BB24(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_151A8((uint64_t)a1, &qword_A37C8);
    sub_14F50(&qword_A37C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_76170();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[9];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_151A8((uint64_t)a1 + v7, &qword_A37D0);
    sub_14F50(&qword_A37D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_76150();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v11 = a3[11];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = a3[12];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_3BD00(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_14F50(&qword_A37C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_76170();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[9];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_14F50(&qword_A37D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_76150();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  return a1;
}

char *sub_3BE90(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_151A8((uint64_t)a1, &qword_A37C8);
    uint64_t v6 = sub_14F50(&qword_A37C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_76170();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[9];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_151A8((uint64_t)&a1[v8], &qword_A37D0);
    uint64_t v11 = sub_14F50(&qword_A37D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_76150();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  swift_release();
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  swift_release();
  return a1;
}

uint64_t sub_3C060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3C074);
}

uint64_t sub_3C074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_14F50(&qword_A37D8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_14F50(qword_A37E0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 36);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 44));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_3C190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3C1A4);
}

uint64_t sub_3C1A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_14F50(&qword_A37D8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_14F50(qword_A37E0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 36);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for ProtectedNavigationLink()
{
  return sub_3EF28();
}

void sub_3C2D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_762A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_3C328()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_3C36C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_76560();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_76570();
}

uint64_t sub_3C464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_76560();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_76570();
}

uint64_t sub_3C55C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v5 = sub_76910();
  uint64_t v6 = sub_14F94(&qword_A3878);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v64 = v5;
  uint64_t v65 = v6;
  uint64_t v69 = v5;
  uint64_t v70 = v6;
  unint64_t v61 = sub_3E7B0();
  uint64_t v62 = WitnessTable;
  uint64_t v71 = WitnessTable;
  unint64_t v72 = v61;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v55 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v9 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v54 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v53 = (char *)&v50 - v11;
  uint64_t v12 = sub_14F94(&qword_A3888);
  unint64_t v13 = sub_3E80C();
  uint64_t v69 = v4;
  uint64_t v70 = v12;
  uint64_t v71 = v3;
  unint64_t v72 = v13;
  uint64_t v14 = sub_76340();
  uint64_t v52 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  long long v51 = (char *)&v50 - v18;
  uint64_t v19 = sub_76150();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  int v25 = (char *)&v50 - v24;
  uint64_t v60 = OpaqueTypeMetadata2;
  uint64_t v26 = sub_76580();
  uint64_t v58 = *(void *)(v26 - 8);
  uint64_t v59 = v26;
  __chkstk_darwin(v26);
  uint64_t OpaqueTypeConformance2 = a1;
  uint64_t v57 = (char *)&v50 - v27;
  sub_55D74((uint64_t)v25);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v23, enum case for SettingsAppPrimaryNavigationMode.classic(_:), v19);
  sub_3EEE0(&qword_A38A0, (void (*)(uint64_t))&type metadata accessor for SettingsAppPrimaryNavigationMode);
  sub_76C90();
  sub_76C90();
  uint64_t v29 = v68;
  uint64_t v28 = v69;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v20 + 8);
  v30(v23, v19);
  v30(v25, v19);
  if (v28 == v29)
  {
    sub_3CC30();
    swift_getWitnessTable();
    uint64_t v31 = v52;
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    uint64_t v33 = v51;
    v32(v51, v17, v14);
    long long v34 = *(void (**)(char *, uint64_t))(v31 + 8);
    v34(v17, v14);
    v32(v17, v33, v14);
    uint64_t v35 = v64;
    uint64_t v69 = v64;
    uint64_t v70 = v65;
    unint64_t v37 = v61;
    uint64_t v36 = v62;
    uint64_t v71 = v62;
    unint64_t v72 = v61;
    swift_getOpaqueTypeConformance2();
    long long v38 = v57;
    sub_3C36C((uint64_t)v17, v14);
    v34(v17, v14);
    v34(v33, v14);
  }
  else
  {
    uint64_t v39 = v54;
    sub_3CCD0(OpaqueTypeConformance2, v54);
    uint64_t v69 = v64;
    uint64_t v70 = v65;
    unint64_t v37 = v61;
    uint64_t v36 = v62;
    uint64_t v71 = v62;
    unint64_t v72 = v61;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v40 = v55;
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
    unint64_t v42 = v53;
    uint64_t v43 = v60;
    v41(v53, v39, v60);
    long long v44 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v44(v39, v43);
    v41((char *)v39, (uint64_t)v42, v43);
    swift_getWitnessTable();
    long long v38 = v57;
    sub_3C464(v39, v14, v43);
    v44(v39, v43);
    v44((uint64_t)v42, v43);
    uint64_t v35 = v64;
  }
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v69 = v35;
  uint64_t v70 = v65;
  uint64_t v71 = v36;
  unint64_t v72 = v37;
  uint64_t v46 = swift_getOpaqueTypeConformance2();
  uint64_t v66 = v45;
  uint64_t v67 = v46;
  uint64_t v47 = v59;
  swift_getWitnessTable();
  uint64_t v48 = v58;
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v63, v38, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v38, v47);
}

uint64_t sub_3CC30()
{
  return sub_3D390((uint64_t)sub_3E8B8);
}

uint64_t sub_3CCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = sub_14F50(&qword_A3878);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v21 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v6);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = sub_76910();
  uint64_t v22 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v20 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v10;
  *(void *)(v16 + 24) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  uint64_t v26 = v10;
  uint64_t v27 = v11;
  uint64_t v28 = v2;
  sub_768D0();
  uint64_t v17 = v21;
  sub_76590();
  swift_getWitnessTable();
  sub_3E7B0();
  uint64_t v18 = v23;
  sub_76730();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v14, v12);
}

uint64_t sub_3CFC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v22[1] = a2;
  uint64_t v23 = a1;
  uint64_t v24 = a3;
  uint64_t v3 = sub_76120();
  v22[0] = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_14F50(&qword_A38A8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_14F50(&qword_A38B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_76140();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v22 - v17;
  uint64_t v19 = type metadata accessor for ProtectedNavigationLink();
  (*(void (**)(void))(v23 + *(int *)(v19 + 44)))();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_151A8((uint64_t)v11, &qword_A38B0);
    swift_storeEnumTagMultiPayload();
    sub_3EEE0(&qword_A3898, (void (*)(uint64_t))&type metadata accessor for PreferencesControllerView);
    return sub_76570();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
    sub_76110();
    uint64_t v21 = v22[0];
    (*(void (**)(char *, char *, uint64_t))(v22[0] + 16))(v8, v5, v3);
    swift_storeEnumTagMultiPayload();
    sub_3EEE0(&qword_A3898, (void (*)(uint64_t))&type metadata accessor for PreferencesControllerView);
    sub_76570();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
}

uint64_t sub_3D390(uint64_t a1)
{
  unint64_t v1 = (void (*)(void))__chkstk_darwin(a1);
  v1();
  return sub_76330();
}

uint64_t sub_3D460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_76200();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a3;
  uint64_t v10 = type metadata accessor for ProtectedNavigationLink();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + *(int *)(v10 + 40)) == 1)
  {
    uint64_t v17 = sub_76D70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
    sub_76D40();
    uint64_t v18 = sub_76D30();
    unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v20 = (char *)swift_allocObject();
    *((void *)v20 + 2) = v18;
    *((void *)v20 + 3) = &protocol witness table for MainActor;
    uint64_t v21 = v28;
    *((void *)v20 + 4) = a2;
    *((void *)v20 + 5) = v21;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v20[v19], v13, v10);
    sub_52508((uint64_t)v16, (uint64_t)&unk_A38C0, (uint64_t)v20);
    return swift_release();
  }
  else
  {
    uint64_t v23 = sub_761E0();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v23, v6);
    uint64_t v24 = sub_761F0();
    os_log_type_t v25 = sub_76DB0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_0, v24, v25, "Not protected: presenting content", v26, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return sub_3E2B0(v10);
  }
}

uint64_t sub_3D7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[21] = a5;
  v6[22] = a6;
  v6[20] = a4;
  uint64_t v7 = sub_76200();
  v6[23] = v7;
  v6[24] = *(void *)(v7 - 8);
  v6[25] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ProtectedNavigationLink();
  v6[26] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v6[27] = v9;
  v6[28] = *(void *)(v9 + 64);
  v6[29] = swift_task_alloc();
  sub_14F50(&qword_A3500);
  v6[30] = swift_task_alloc();
  v6[31] = sub_76D40();
  v6[32] = sub_76D30();
  uint64_t v11 = sub_76D10();
  v6[33] = v11;
  v6[34] = v10;
  return _swift_task_switch(sub_3D948, v11, v10);
}

uint64_t sub_3D948()
{
  id v1 = [self sharedGuard];
  v0[35] = v1;
  v0[2] = v0;
  v0[7] = v0 + 37;
  v0[3] = sub_3DA6C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_3DFBC;
  v0[13] = &unk_97638;
  v0[14] = v2;
  [v1 authenticateUnconditionallyWithCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_3DA6C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 288) = v2;
  uint64_t v3 = *(void *)(v1 + 272);
  uint64_t v4 = *(void *)(v1 + 264);
  if (v2) {
    uint64_t v5 = sub_3DD38;
  }
  else {
    uint64_t v5 = sub_3DB9C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_3DB9C()
{
  uint64_t v1 = *(void **)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v5 = *(void *)(v0 + 208);
  uint64_t v6 = *(void *)(v0 + 160);
  long long v13 = *(_OWORD *)(v0 + 168);
  swift_release();

  uint64_t v7 = sub_76D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  uint64_t v8 = sub_76D30();
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  *(void *)(v10 + 24) = &protocol witness table for MainActor;
  *(_OWORD *)(v10 + 32) = v13;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v10 + v9, v3, v5);
  sub_52508(v2, (uint64_t)&unk_A38D0, v10);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_3DD38()
{
  uint64_t v20 = v0;
  uint64_t v1 = (void *)v0[35];
  uint64_t v3 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v4 = v0[23];
  swift_release();
  swift_willThrow();

  uint64_t v5 = sub_761E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = sub_761F0();
  os_log_type_t v7 = sub_76DC0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v16 = v0[24];
    uint64_t v17 = v0[23];
    uint64_t v18 = v0[25];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    swift_getErrorValue();
    uint64_t v9 = sub_77090();
    v0[19] = sub_35DB8(v9, v10, &v19);
    sub_76E20();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v6, v7, "Authentication Error: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    uint64_t v12 = v0[24];
    uint64_t v11 = v0[25];
    uint64_t v13 = v0[23];
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_3DFBC(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_14F50(&qword_A32D0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_3E070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  void v6[4] = a6;
  v6[2] = a4;
  uint64_t v7 = sub_76200();
  void v6[5] = v7;
  v6[6] = *(void *)(v7 - 8);
  v6[7] = swift_task_alloc();
  sub_76D40();
  v6[8] = sub_76D30();
  uint64_t v9 = sub_76D10();
  return _swift_task_switch(sub_3E168, v9, v8);
}

uint64_t sub_3E168()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  swift_release();
  uint64_t v4 = sub_761E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  uint64_t v5 = sub_761F0();
  os_log_type_t v6 = sub_76DB0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "Presenting protected content", v7, 2u);
    swift_slowDealloc();
  }
  uint64_t v9 = v0[6];
  uint64_t v8 = v0[7];
  uint64_t v10 = v0[5];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v11 = type metadata accessor for ProtectedNavigationLink();
  sub_3E2B0(v11);
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_3E2B0(uint64_t a1)
{
  uint64_t v3 = sub_76200();
  uint64_t v24 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_76170();
  uint64_t v6 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_14F50(&qword_A38B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_76140();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v1 + *(int *)(a1 + 44)))(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_151A8((uint64_t)v11, &qword_A38B0);
    uint64_t v17 = sub_761E0();
    uint64_t v18 = v24;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v5, v17, v3);
    uint64_t v19 = sub_761F0();
    os_log_type_t v20 = sub_76DB0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_0, v19, v20, "Navigation failed: destination nil", v21, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v5, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
    sub_55DAC((uint64_t)v8);
    sub_3EEE0(&qword_A38D8, (void (*)(uint64_t))&type metadata accessor for PreferencesControllerRecipe);
    sub_76160();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
}

uint64_t sub_3E658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = type metadata accessor for ProtectedNavigationLink();
  (*(void (**)(void))(a1 + *(int *)(v12 + 48)))();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v13(v11, v9, a2);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, a2);
  v13(a3, v11, a2);
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, a2);
}

unint64_t sub_3E7B0()
{
  unint64_t result = qword_A3880;
  if (!qword_A3880)
  {
    sub_14F94(&qword_A3878);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3880);
  }
  return result;
}

unint64_t sub_3E80C()
{
  unint64_t result = qword_A3890;
  if (!qword_A3890)
  {
    sub_14F94(&qword_A3888);
    sub_3EEE0(&qword_A3898, (void (*)(uint64_t))&type metadata accessor for PreferencesControllerView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3890);
  }
  return result;
}

uint64_t sub_3E8B8@<X0>(uint64_t a1@<X8>)
{
  return sub_3CFC0(*(void *)(v1 + 32), *(void *)(v1 + 24), a1);
}

uint64_t sub_3E8C4@<X0>(char *a1@<X8>)
{
  return sub_3E658(*(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

uint64_t sub_3E8E4()
{
  uint64_t v1 = type metadata accessor for ProtectedNavigationLink();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_14F50(&qword_A37C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_76170();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 36);
  sub_14F50(&qword_A37D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_76150();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_3EA90()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(type metadata accessor for ProtectedNavigationLink() - 8);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_3D460(v4, v1, v2);
}

uint64_t sub_3EB18(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for ProtectedNavigationLink() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_163DC;
  return sub_3D7A8(a1, v7, v8, v9, v4, v5);
}

uint64_t sub_3EC24()
{
  uint64_t v1 = type metadata accessor for ProtectedNavigationLink();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  sub_14F50(&qword_A37C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_76170();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 36);
  sub_14F50(&qword_A37D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_76150();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_3EDD8(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for ProtectedNavigationLink() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_25054;
  return sub_3E070(a1, v7, v8, v9, v4, v5);
}

uint64_t sub_3EEE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3EF28()
{
  return swift_getGenericMetadata();
}

uint64_t sub_3EF58()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for VolumeHeaderView()
{
  return &type metadata for VolumeHeaderView;
}

uint64_t sub_3F0C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_3F0E0@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v65 = sub_76B10();
  uint64_t v3 = __chkstk_darwin(v65);
  uint64_t v63 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v61 - v5;
  uint64_t v7 = sub_14F50(&qword_A2DF8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v68 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v67 = (uint64_t)&v61 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v66 = (char *)&v61 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v61 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v61 - v17;
  if (a1)
  {
    uint64_t v19 = *(void *)&a1[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_deviceName + 8];
    uint64_t v70 = *(void *)&a1[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_deviceName];
    uint64_t v71 = v19;
    unint64_t v64 = sub_15038();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_766D0();
    uint64_t v22 = v21;
    uint64_t v70 = v20;
    uint64_t v71 = v21;
    char v24 = v23 & 1;
    char v72 = v23 & 1;
    uint64_t v73 = v25;
    sub_767B0();
    sub_150D0(v20, v22, v24);
    swift_bridgeObjectRelease();
    sub_3F6D8((uint64_t)v16, (uint64_t)v18);
    NSString v26 = sub_76BE0();
    NSString v27 = sub_76BE0();
    id v28 = STLocalizedString(v26);

    uint64_t v61 = sub_76C10();
    sub_14F50(&qword_A2FF0);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_7CA10;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v62 = v18;
    uint64_t v30 = a1;
    sub_76240();

    swift_release();
    swift_release();
    sub_3F748((uint64_t)v6);
    uint64_t v31 = sub_770B0();
    uint64_t v33 = v32;
    *(void *)(v29 + 56) = &type metadata for String;
    unint64_t v34 = sub_1B654();
    *(void *)(v29 + 64) = v34;
    *(void *)(v29 + 32) = v31;
    *(void *)(v29 + 40) = v33;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v35 = v30;
    uint64_t v36 = (uint64_t)v63;
    sub_76240();

    swift_release();
    swift_release();
    sub_3F748(v36);
    uint64_t v37 = sub_770B0();
    *(void *)(v29 + 96) = &type metadata for String;
    *(void *)(v29 + 104) = v34;
    *(void *)(v29 + 72) = v37;
    *(void *)(v29 + 80) = v38;
    uint64_t v39 = sub_76C20();
    uint64_t v41 = v40;
    swift_bridgeObjectRelease();
    uint64_t v70 = v39;
    uint64_t v71 = v41;
    uint64_t v42 = sub_766D0();
    uint64_t v44 = v43;
    LOBYTE(v28) = v45 & 1;
    LODWORD(v70) = sub_765C0();
    uint64_t v46 = sub_766A0();
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    char v52 = v51 & 1;
    sub_150D0(v42, v44, (char)v28);
    swift_bridgeObjectRelease();
    uint64_t v70 = v46;
    uint64_t v71 = v48;
    char v72 = v52;
    uint64_t v73 = v50;
    uint64_t v53 = (uint64_t)v66;
    sub_767B0();
    sub_150D0(v46, v48, v52);
    swift_bridgeObjectRelease();
    uint64_t v54 = (uint64_t)v62;
    uint64_t v55 = v67;
    sub_3F7A4((uint64_t)v62, v67);
    uint64_t v56 = v68;
    sub_3F7A4(v53, v68);
    uint64_t v57 = v69;
    sub_3F7A4(v55, v69);
    uint64_t v58 = sub_14F50(&qword_A38E8);
    uint64_t v59 = v57 + *(int *)(v58 + 48);
    *(void *)uint64_t v59 = 0;
    *(unsigned char *)(v59 + 8) = 1;
    sub_3F7A4(v56, v57 + *(int *)(v58 + 64));
    sub_3F80C(v53);
    sub_3F80C(v54);
    sub_3F80C(v56);
    return sub_3F80C(v55);
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_164D0();
    uint64_t result = sub_76380();
    __break(1u);
  }
  return result;
}

uint64_t sub_3F67C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  *(void *)a1 = sub_764E0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v4 = sub_14F50(&qword_A38E0);
  return sub_3F0E0(v3, a1 + *(int *)(v4 + 44));
}

uint64_t sub_3F6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A2DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_3F748(uint64_t a1)
{
  uint64_t v2 = sub_76B10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_3F7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A2DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_3F80C(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A2DF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_3F870()
{
  unint64_t result = qword_A38F0;
  if (!qword_A38F0)
  {
    sub_14F94(&qword_A38F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A38F0);
  }
  return result;
}

void sub_3F8CC()
{
  uint64_t v1 = sub_762C0();
  uint64_t v104 = *(void *)(v1 - 8);
  uint64_t v105 = v1;
  __chkstk_darwin(v1);
  uint64_t v103 = (char *)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_764C0();
  uint64_t v99 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v96 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_14F50(&qword_A3928);
  uint64_t v94 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v93 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_14F50(&qword_A3930);
  uint64_t v100 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v97 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_14F50(&qword_A3938);
  __chkstk_darwin(v6 - 8);
  uint64_t v95 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (objc_class *)type metadata accessor for HiddenAppsListWrapper();
  v115.receiver = v0;
  v115.super_class = v8;
  objc_msgSendSuper2(&v115, "viewDidLoad");
  NSString v9 = sub_76BE0();
  NSString v10 = sub_76BE0();
  id v11 = STLocalizedString(v9);

  NSString v12 = v11;
  if (!v11)
  {
    sub_76C10();
    NSString v12 = sub_76BE0();
    swift_bridgeObjectRelease();
  }
  id v106 = v12;
  id v92 = v0;
  uint64_t v13 = sub_76C10();
  uint64_t v15 = v14;
  type metadata accessor for StorageShared();
  sub_164D0();
  uint64_t v16 = (void *)sub_76390();
  uint64_t v18 = v17;
  LOBYTE(v107) = 0;
  sub_76870();
  char v19 = v109;
  unint64_t v20 = (unint64_t)v110;
  if (qword_A2C28 != -1) {
    swift_once();
  }
  uint64_t v21 = (void *)qword_A6A70;
  uint64_t v22 = sub_76210();
  uint64_t v109 = (uint64_t)v16;
  uint64_t v110 = v18;
  LOBYTE(v111) = v19;
  unint64_t v112 = v20;
  uint64_t v113 = v22;
  uint64_t v114 = v21;
  uint64_t v107 = v13;
  uint64_t v108 = v15;
  id v23 = v21;
  uint64_t v24 = sub_14F50(&qword_A3940);
  unint64_t v25 = sub_4052C();
  unint64_t v26 = sub_15038();
  NSString v27 = v93;
  sub_76780();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  uint64_t v28 = v99;
  uint64_t v29 = v96;
  uint64_t v30 = v101;
  (*(void (**)(char *, void, uint64_t))(v99 + 104))(v96, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v101);
  uint64_t v109 = v24;
  uint64_t v110 = &type metadata for String;
  unint64_t v111 = v25;
  unint64_t v112 = v26;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v32 = v97;
  uint64_t v33 = v98;
  sub_767C0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v27, v33);
  unint64_t v34 = v103;
  sub_762B0();
  uint64_t v109 = v33;
  uint64_t v110 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  id v35 = v95;
  uint64_t v36 = v102;
  sub_76750();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v34, v105);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v32, v36);
  id v37 = objc_allocWithZone((Class)sub_14F50(&qword_A3968));
  uint64_t v38 = (void *)sub_76550();
  id v39 = [v38 view];
  if (!v39)
  {

    __break(1u);
    goto LABEL_21;
  }
  uint64_t v40 = v39;
  id v41 = v92;
  id v42 = [v92 view];
  id v35 = v106;
  if (!v42)
  {
LABEL_21:

    __break(1u);
    goto LABEL_22;
  }
  uint64_t v43 = v42;
  [v42 bounds];
  double v45 = v44;
  double v47 = v46;
  double v49 = v48;
  double v51 = v50;

  objc_msgSend(v40, "setFrame:", v45, v47, v49, v51);
  id v52 = [v38 view];
  if (!v52)
  {
LABEL_22:

    __break(1u);
    goto LABEL_23;
  }
  uint64_t v53 = v52;
  [v52 setTranslatesAutoresizingMaskIntoConstraints:0];

  [v41 addChildViewController:v38];
  id v54 = [v41 view];
  if (!v54)
  {
LABEL_23:

    __break(1u);
    goto LABEL_24;
  }
  uint64_t v55 = v54;
  id v56 = [v38 view];
  if (!v56)
  {
LABEL_24:

    __break(1u);
    goto LABEL_25;
  }
  uint64_t v57 = v56;
  [v55 addSubview:v56];

  [v38 didMoveToParentViewController:v41];
  id v58 = [v41 navigationItem];
  [v58 setTitle:v35];

  id v59 = [v41 navigationItem];
  [v59 setLargeTitleDisplayMode:2];

  id v60 = [v41 view];
  if (!v60)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v61 = v60;
  sub_14F50(&qword_A3970);
  uint64_t v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = xmmword_7D4D0;
  id v63 = [v41 view];
  if (!v63)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v64 = v63;
  id v65 = [v63 topAnchor];

  id v66 = [v38 view];
  if (!v66)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v67 = v66;
  id v68 = [v66 topAnchor];

  id v69 = [v65 constraintEqualToAnchor:v68];
  *(void *)(v62 + 32) = v69;
  id v70 = [v41 view];
  if (!v70)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v71 = v70;
  id v72 = [v70 leadingAnchor];

  id v73 = [v38 view];
  if (!v73)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v74 = v73;
  id v75 = [v73 leadingAnchor];

  id v76 = [v72 constraintEqualToAnchor:v75];
  *(void *)(v62 + 40) = v76;
  id v77 = [v41 view];
  if (!v77)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v78 = v77;
  id v79 = [v77 bottomAnchor];

  id v80 = [v38 view];
  if (!v80)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v81 = v80;
  id v82 = [v80 bottomAnchor];

  id v83 = [v79 constraintEqualToAnchor:v82];
  *(void *)(v62 + 48) = v83;
  id v84 = [v41 view];
  if (!v84)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int64_t v85 = v84;
  id v86 = [v84 trailingAnchor];

  id v87 = [v38 view];
  if (v87)
  {
    uint64_t v88 = v87;
    id v89 = [v87 trailingAnchor];

    id v90 = [v86 constraintEqualToAnchor:v89];
    *(void *)(v62 + 56) = v90;
    uint64_t v109 = v62;
    sub_76CC0();
    sub_40658();
    Class isa = sub_76CB0().super.isa;
    swift_bridgeObjectRelease();
    [v61 addConstraints:isa];

    return;
  }
LABEL_33:
  __break(1u);
}

id sub_404D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HiddenAppsListWrapper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HiddenAppsListWrapper()
{
  return self;
}

unint64_t sub_4052C()
{
  unint64_t result = qword_A3948;
  if (!qword_A3948)
  {
    sub_14F94(&qword_A3940);
    sub_405A8();
    sub_405FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3948);
  }
  return result;
}

unint64_t sub_405A8()
{
  unint64_t result = qword_A3950;
  if (!qword_A3950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3950);
  }
  return result;
}

unint64_t sub_405FC()
{
  unint64_t result = qword_A3958;
  if (!qword_A3958)
  {
    sub_14F94(&qword_A3960);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3958);
  }
  return result;
}

unint64_t sub_40658()
{
  unint64_t result = qword_A3978;
  if (!qword_A3978)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_A3978);
  }
  return result;
}

uint64_t destroy for RecommendationView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_16FDC(*(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 208)) {
    swift_release();
  }

  return swift_release();
}

uint64_t initializeWithCopy for RecommendationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 72);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 80);
  id v10 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_16F10(v7, v8, v9);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(unsigned char *)(a1 + 80) = v9;
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v13 = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13)
  {
    uint64_t v14 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v14;
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v13;
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  }
  uint64_t v16 = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  uint64_t v17 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v17;
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  swift_bridgeObjectRetain();
  if (v16)
  {
    uint64_t v18 = *(void *)(a2 + 216);
    *(void *)(a1 + 208) = v16;
    *(void *)(a1 + 216) = v18;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  }
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RecommendationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 80);
  sub_16F10(v7, v8, v9);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = v9;
  sub_16FDC(v10, v11, v12);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v13 = (_OWORD *)(a1 + 128);
  uint64_t v14 = (_OWORD *)(a2 + 128);
  uint64_t v15 = *(void *)(a2 + 152);
  if (*(void *)(a1 + 152))
  {
    if (v15)
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    }
    else
    {
      sub_173C0(a1 + 128);
      char v16 = *(unsigned char *)(a2 + 160);
      long long v17 = *(_OWORD *)(a2 + 144);
      _OWORD *v13 = *v14;
      *(_OWORD *)(a1 + 144) = v17;
      *(unsigned char *)(a1 + 160) = v16;
    }
  }
  else if (v15)
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v18 = *v14;
    long long v19 = *(_OWORD *)(a2 + 144);
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    _OWORD *v13 = v18;
    *(_OWORD *)(a1 + 144) = v19;
  }
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 192);
  uint64_t v21 = *(void *)(a1 + 208);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v20;
  uint64_t v22 = *(void *)(a2 + 208);
  if (!v21)
  {
    if (v22)
    {
      uint64_t v24 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = v22;
      *(void *)(a1 + 216) = v24;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    goto LABEL_15;
  }
  if (!v22)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v23 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = v22;
  *(void *)(a1 + 216) = v23;
  swift_retain();
  swift_release();
LABEL_15:
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for RecommendationView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[14];
  *(void *)(a1 + 240) = *((void *)a2 + 30);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for RecommendationView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  char v7 = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = v7;
  sub_16FDC(v8, v9, v10);
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  if (*(void *)(a1 + 152))
  {
    uint64_t v13 = *(void *)(a2 + 152);
    if (v13)
    {
      uint64_t v14 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v14;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v13;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
      goto LABEL_6;
    }
    sub_173C0(a1 + 128);
  }
  long long v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v15;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
LABEL_6:
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 208);
  uint64_t v17 = *(void *)(a1 + 208);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  if (!v17)
  {
    if (v16)
    {
      uint64_t v19 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = v16;
      *(void *)(a1 + 216) = v19;
      goto LABEL_13;
    }
LABEL_12:
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    goto LABEL_13;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_12;
  }
  uint64_t v18 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = v16;
  *(void *)(a1 + 216) = v18;
  swift_release();
LABEL_13:
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecommendationView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 248)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecommendationView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 248) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 248) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationView()
{
  return &type metadata for RecommendationView;
}

uint64_t sub_40E28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_40E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v3 = sub_14F50(&qword_A3980);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v69 = &v62[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  char v7 = &v62[-v6];
  uint64_t v66 = sub_14F50(&qword_A3988);
  __chkstk_darwin(v66);
  uint64_t v9 = &v62[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v65 = sub_14F50(&qword_A3990);
  __chkstk_darwin(v65);
  uint64_t v11 = &v62[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = (int *)sub_14F50(&qword_A3998);
  uint64_t v13 = __chkstk_darwin(v12);
  long long v15 = (uint64_t *)&v62[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  unint64_t v64 = &v62[-v16];
  uint64_t v17 = sub_14F50(&qword_A39A0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = &v62[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  uint64_t v67 = &v62[-v21];
  long long v22 = *(_OWORD *)(a1 + 192);
  v80[0] = *(_OWORD *)(a1 + 176);
  v80[1] = v22;
  v80[2] = *(_OWORD *)(a1 + 208);
  unsigned __int8 v81 = *(unsigned char *)(a1 + 224);
  long long v23 = *(_OWORD *)(a1 + 128);
  long long v76 = *(_OWORD *)(a1 + 112);
  long long v77 = v23;
  long long v24 = *(_OWORD *)(a1 + 160);
  long long v78 = *(_OWORD *)(a1 + 144);
  long long v79 = v24;
  long long v25 = *(_OWORD *)(a1 + 64);
  long long v72 = *(_OWORD *)(a1 + 48);
  long long v73 = v25;
  long long v26 = *(_OWORD *)(a1 + 96);
  long long v74 = *(_OWORD *)(a1 + 80);
  long long v75 = v26;
  long long v27 = *(_OWORD *)(a1 + 32);
  long long v70 = *(_OWORD *)(a1 + 16);
  long long v71 = v27;
  sub_150E0((uint64_t)&v79 + 8, (uint64_t)v83, &qword_A39A8);
  sub_150E0((uint64_t)v83, (uint64_t)&v84, &qword_A39A8);
  if (v84
    && (ObjCClassFromMetaunint64_t data = (void *)swift_getObjCClassFromMetadata(),
        sub_439AC(),
        [ObjCClassFromMetadata isSubclassOfClass:swift_getObjCClassFromMetadata()]))
  {
    int v63 = v81;
    uint64_t v29 = swift_allocObject();
    long long v30 = *(_OWORD *)(a1 + 208);
    *(_OWORD *)(v29 + 208) = *(_OWORD *)(a1 + 192);
    *(_OWORD *)(v29 + 224) = v30;
    *(_OWORD *)(v29 + 240) = *(_OWORD *)(a1 + 224);
    *(void *)(v29 + 256) = *(void *)(a1 + 240);
    long long v31 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v29 + 144) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v29 + 160) = v31;
    long long v32 = *(_OWORD *)(a1 + 176);
    *(_OWORD *)(v29 + 176) = *(_OWORD *)(a1 + 160);
    *(_OWORD *)(v29 + 192) = v32;
    long long v33 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v29 + 80) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v29 + 96) = v33;
    long long v34 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(v29 + 112) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v29 + 128) = v34;
    long long v35 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v29 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v29 + 32) = v35;
    long long v36 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v29 + 48) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v29 + 64) = v36;
    uint64_t v37 = swift_allocObject();
    long long v38 = *(_OWORD *)(a1 + 208);
    *(_OWORD *)(v37 + 208) = *(_OWORD *)(a1 + 192);
    *(_OWORD *)(v37 + 224) = v38;
    *(_OWORD *)(v37 + 240) = *(_OWORD *)(a1 + 224);
    *(void *)(v37 + 256) = *(void *)(a1 + 240);
    long long v39 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v37 + 144) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v37 + 160) = v39;
    long long v40 = *(_OWORD *)(a1 + 176);
    *(_OWORD *)(v37 + 176) = *(_OWORD *)(a1 + 160);
    *(_OWORD *)(v37 + 192) = v40;
    long long v41 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v37 + 80) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v37 + 96) = v41;
    long long v42 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(v37 + 112) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v37 + 128) = v42;
    long long v43 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v37 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v37 + 32) = v43;
    long long v44 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v37 + 48) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v37 + 64) = v44;
    *long long v15 = swift_getKeyPath();
    sub_14F50(&qword_A37C8);
    swift_storeEnumTagMultiPayload();
    double v45 = (uint64_t *)((char *)v15 + v12[9]);
    *double v45 = swift_getKeyPath();
    sub_14F50(&qword_A37D0);
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)v15 + v12[10]) = v63;
    double v46 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)v15 + v12[11]);
    char *v46 = sub_439F0;
    v46[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v29;
    double v47 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)v15 + v12[12]);
    __CFString *v47 = sub_43A60;
    v47[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v37;
    double v48 = v64;
    sub_150E0((uint64_t)v15, (uint64_t)v64, &qword_A3998);
    sub_15144((uint64_t)v48, (uint64_t)v11, &qword_A3998);
    swift_storeEnumTagMultiPayload();
    sub_43A70(a1);
    sub_43A70(a1);
    sub_1508C(&qword_A39E0, &qword_A3998);
    sub_1508C(&qword_A39E8, &qword_A3988);
    sub_76570();
    uint64_t v49 = (uint64_t)v48;
    double v50 = &qword_A3998;
  }
  else
  {
    sub_150E0((uint64_t)v80, (uint64_t)v82, &qword_A3470);
    sub_150E0((uint64_t)v82, (uint64_t)&v85, &qword_A3470);
    double v51 = v86;
    if (!v86)
    {
      uint64_t v56 = sub_14F50(&qword_A39B0);
      uint64_t v55 = v67;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v67, 1, 1, v56);
      goto LABEL_8;
    }
    uint64_t v52 = v85;
    *(void *)uint64_t v9 = sub_764E0();
    *((void *)v9 + 1) = 0;
    v9[16] = 1;
    uint64_t v53 = sub_14F50(&qword_A39D8);
    sub_41888(a1, v52, v51, (uint64_t)&v9[*(int *)(v53 + 44)]);
    sub_15144((uint64_t)v9, (uint64_t)v11, &qword_A3988);
    swift_storeEnumTagMultiPayload();
    sub_1508C(&qword_A39E0, &qword_A3998);
    sub_1508C(&qword_A39E8, &qword_A3988);
    sub_76570();
    uint64_t v49 = (uint64_t)v9;
    double v50 = &qword_A3988;
  }
  sub_151A8(v49, v50);
  uint64_t v54 = sub_14F50(&qword_A39B0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v20, 0, 1, v54);
  uint64_t v55 = v67;
  sub_150E0((uint64_t)v20, (uint64_t)v67, &qword_A39A0);
LABEL_8:
  uint64_t v58 = v68;
  uint64_t v57 = (uint64_t)v69;
  *(void *)char v7 = sub_764E0();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v59 = sub_14F50(&qword_A39B8);
  __chkstk_darwin(v59);
  *(void *)&v62[-16] = a1;
  sub_14F50(&qword_A39C0);
  sub_43938();
  sub_76860();
  sub_15144((uint64_t)v55, (uint64_t)v20, &qword_A39A0);
  sub_15144((uint64_t)v7, v57, &qword_A3980);
  sub_15144((uint64_t)v20, v58, &qword_A39A0);
  uint64_t v60 = sub_14F50(&qword_A39D0);
  sub_15144(v57, v58 + *(int *)(v60 + 48), &qword_A3980);
  sub_151A8((uint64_t)v7, &qword_A3980);
  sub_151A8((uint64_t)v55, &qword_A39A0);
  sub_151A8(v57, &qword_A3980);
  return sub_151A8((uint64_t)v20, &qword_A39A0);
}

uint64_t sub_41648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_14F50(&qword_A39F0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = a1;
  uint64_t v22 = a1;
  sub_43B84();
  sub_76860();
  unsigned __int8 v8 = sub_76600();
  unsigned __int8 v9 = sub_76610();
  char v10 = sub_76620();
  sub_76620();
  if (sub_76620() != v8) {
    char v10 = sub_76620();
  }
  sub_76620();
  if (sub_76620() != v9) {
    char v10 = sub_76620();
  }
  if (qword_A2C58 != -1) {
    swift_once();
  }
  sub_76290();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 16))(a2, v7, v4);
  uint64_t v19 = a2 + *(int *)(sub_14F50(&qword_A3A00) + 36);
  *(unsigned char *)uint64_t v19 = v10;
  *(void *)(v19 + 8) = v12;
  *(void *)(v19 + 16) = v14;
  *(void *)(v19 + 24) = v16;
  *(void *)(v19 + 32) = v18;
  *(unsigned char *)(v19 + 40) = 0;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_41888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v113 = a3;
  uint64_t v143 = a4;
  uint64_t v117 = sub_14F50(&qword_A2E58);
  uint64_t v114 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  unint64_t v124 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_14F50(&qword_A3A08);
  uint64_t v118 = *(void *)(v6 - 8);
  uint64_t v119 = v6;
  __chkstk_darwin(v6);
  uint64_t v116 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_14F50(&qword_A3A10);
  uint64_t v8 = __chkstk_darwin(v128);
  objc_super v115 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v120 = (uint64_t)&v112 - v10;
  uint64_t v126 = sub_14F50(&qword_A3A18);
  __chkstk_darwin(v126);
  uint64_t v127 = (uint64_t)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_14F50(&qword_A3A20);
  __chkstk_darwin(v140);
  uint64_t v129 = (char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_14F50(&qword_A3A28);
  __chkstk_darwin(v13 - 8);
  unint64_t v123 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_14F50(&qword_A3A30);
  __chkstk_darwin(v15 - 8);
  unint64_t v122 = (char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_14F50(&qword_A3A38);
  uint64_t v17 = __chkstk_darwin(v136);
  char v121 = (char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v125 = (uint64_t)&v112 - v19;
  uint64_t v137 = sub_14F50(&qword_A3A40);
  __chkstk_darwin(v137);
  uint64_t v139 = (uint64_t)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_14F50(&qword_A3A48);
  __chkstk_darwin(v132);
  uint64_t v133 = (uint64_t)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_14F50(&qword_A3A50);
  __chkstk_darwin(v138);
  unint64_t v135 = (char *)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_14F50(&qword_A2EC8);
  uint64_t v131 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  id v130 = (char *)&v112 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_14F50(&qword_A3A58);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v142 = (uint64_t)&v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  unint64_t v145 = (char *)&v112 - v27;
  uint64_t v28 = sub_14F50(&qword_A39F0);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  long long v31 = (char *)&v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_14F50(&qword_A3A00);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v141 = (uint64_t)&v112 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v112 - v36;
  __chkstk_darwin(v35);
  unint64_t v144 = (char *)&v112 - v38;
  uint64_t v147 = a1;
  uint64_t v146 = a1;
  sub_43B84();
  sub_76860();
  unsigned __int8 v39 = sub_76600();
  unsigned __int8 v40 = sub_76610();
  char v41 = sub_76620();
  sub_76620();
  if (sub_76620() != v39) {
    char v41 = sub_76620();
  }
  sub_76620();
  if (sub_76620() != v40) {
    char v41 = sub_76620();
  }
  uint64_t v42 = (uint64_t)v144;
  if (qword_A2C58 != -1) {
    swift_once();
  }
  sub_76290();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v37, v31, v28);
  double v51 = &v37[*(int *)(v32 + 36)];
  *double v51 = v41;
  *((void *)v51 + 1) = v44;
  *((void *)v51 + 2) = v46;
  *((void *)v51 + 3) = v48;
  *((void *)v51 + 4) = v50;
  v51[40] = 0;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  sub_150E0((uint64_t)v37, v42, &qword_A3A00);
  long long v52 = *(_OWORD *)(a1 + 192);
  v167[3] = *(_OWORD *)(a1 + 176);
  v168[0] = v52;
  v168[1] = *(_OWORD *)(a1 + 208);
  char v169 = *(unsigned char *)(a1 + 224);
  long long v53 = *(_OWORD *)(a1 + 128);
  long long v166 = *(_OWORD *)(a1 + 112);
  v167[0] = v53;
  long long v54 = *(_OWORD *)(a1 + 160);
  v167[1] = *(_OWORD *)(a1 + 144);
  v167[2] = v54;
  long long v55 = *(_OWORD *)(a1 + 64);
  long long v162 = *(_OWORD *)(a1 + 48);
  long long v163 = v55;
  long long v56 = *(_OWORD *)(a1 + 96);
  long long v164 = *(_OWORD *)(a1 + 80);
  long long v165 = v56;
  long long v57 = *(_OWORD *)(a1 + 32);
  long long v160 = *(_OWORD *)(a1 + 16);
  long long v161 = v57;
  sub_198F8((uint64_t *)v168, (uint64_t)v171);
  sub_198F8(v171, (uint64_t)&v172);
  if (v173 == 1)
  {
    uint64_t v58 = (uint64_t)v145;
    if (v172)
    {
      if (v172 == 1)
      {
        uint64_t v174 = sub_76810();
        uint64_t v148 = 0;
        uint64_t v149 = (void *)0xE000000000000000;
        sub_76F70(37);
        swift_bridgeObjectRelease();
        uint64_t v148 = 0xD000000000000023;
        uint64_t v149 = (void *)0x8000000000087260;
        Swift::String v59 = (Swift::String)v160;
        swift_bridgeObjectRetain();
        sub_76C50(v59);
        swift_bridgeObjectRelease();
        uint64_t v60 = (uint64_t)v122;
        sub_767B0();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v61 = (uint64_t)v123;
        sub_76530();
        uint64_t v62 = sub_76540();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 0, 1, v62);
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v64 = (uint64_t)v121;
        uint64_t v65 = (uint64_t *)&v121[*(int *)(v136 + 36)];
        uint64_t v66 = sub_14F50(&qword_A3A98);
        sub_15144(v61, (uint64_t)v65 + *(int *)(v66 + 28), &qword_A3A28);
        uint64_t *v65 = KeyPath;
        sub_15144(v60, v64, &qword_A3A30);
        sub_151A8(v61, &qword_A3A28);
        sub_151A8(v60, &qword_A3A30);
        uint64_t v67 = v125;
        sub_150E0(v64, v125, &qword_A3A38);
        sub_15144(v67, v133, &qword_A3A38);
        swift_storeEnumTagMultiPayload();
        sub_1508C(&qword_A2ED8, &qword_A2EC8);
        sub_43C30();
        uint64_t v68 = (uint64_t)v135;
        sub_76570();
        sub_15144(v68, v139, &qword_A3A50);
        swift_storeEnumTagMultiPayload();
        sub_43EC0();
        sub_43F60();
        sub_76570();
        sub_151A8(v68, &qword_A3A50);
        uint64_t v69 = v67;
      }
      else
      {
        uint64_t v174 = sub_76810();
        uint64_t v148 = 0;
        uint64_t v149 = (void *)0xE000000000000000;
        sub_76F70(35);
        swift_bridgeObjectRelease();
        uint64_t v148 = 0xD000000000000021;
        uint64_t v149 = (void *)0x8000000000087210;
        Swift::String v85 = (Swift::String)v160;
        swift_bridgeObjectRetain();
        sub_76C50(v85);
        swift_bridgeObjectRelease();
        uint64_t v86 = (uint64_t)v122;
        sub_767B0();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v87 = (uint64_t)v123;
        sub_76530();
        uint64_t v88 = sub_76540();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v87, 0, 1, v88);
        uint64_t v89 = swift_getKeyPath();
        uint64_t v90 = (uint64_t)v121;
        unint64_t v91 = (uint64_t *)&v121[*(int *)(v136 + 36)];
        uint64_t v92 = sub_14F50(&qword_A3A98);
        sub_15144(v87, (uint64_t)v91 + *(int *)(v92 + 28), &qword_A3A28);
        *unint64_t v91 = v89;
        sub_15144(v86, v90, &qword_A3A30);
        sub_151A8(v87, &qword_A3A28);
        sub_151A8(v86, &qword_A3A30);
        uint64_t v93 = v125;
        sub_150E0(v90, v125, &qword_A3A38);
        sub_15144(v93, v127, &qword_A3A38);
        swift_storeEnumTagMultiPayload();
        sub_43C30();
        sub_43D7C();
        uint64_t v94 = (uint64_t)v129;
        sub_76570();
        sub_15144(v94, v139, &qword_A3A20);
        swift_storeEnumTagMultiPayload();
        sub_43EC0();
        sub_43F60();
        sub_76570();
        sub_151A8(v94, &qword_A3A20);
        uint64_t v69 = v93;
      }
      sub_151A8(v69, &qword_A3A38);
    }
    else
    {
      uint64_t v148 = v112;
      uint64_t v149 = v113;
      uint64_t v74 = swift_allocObject();
      long long v75 = *(_OWORD *)(a1 + 208);
      *(_OWORD *)(v74 + 208) = *(_OWORD *)(a1 + 192);
      *(_OWORD *)(v74 + 224) = v75;
      *(_OWORD *)(v74 + 240) = *(_OWORD *)(a1 + 224);
      *(void *)(v74 + 256) = *(void *)(a1 + 240);
      long long v76 = *(_OWORD *)(a1 + 144);
      *(_OWORD *)(v74 + 144) = *(_OWORD *)(a1 + 128);
      *(_OWORD *)(v74 + 160) = v76;
      long long v77 = *(_OWORD *)(a1 + 176);
      *(_OWORD *)(v74 + 176) = *(_OWORD *)(a1 + 160);
      *(_OWORD *)(v74 + 192) = v77;
      long long v78 = *(_OWORD *)(a1 + 80);
      *(_OWORD *)(v74 + 80) = *(_OWORD *)(a1 + 64);
      *(_OWORD *)(v74 + 96) = v78;
      long long v79 = *(_OWORD *)(a1 + 112);
      *(_OWORD *)(v74 + 112) = *(_OWORD *)(a1 + 96);
      *(_OWORD *)(v74 + 128) = v79;
      long long v80 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v74 + 16) = *(_OWORD *)a1;
      *(_OWORD *)(v74 + 32) = v80;
      long long v81 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v74 + 48) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v74 + 64) = v81;
      swift_bridgeObjectRetain();
      sub_43A70(a1);
      unint64_t v82 = sub_15038();
      sub_76900();
      sub_150E0((uint64_t)v167, (uint64_t)v170, &qword_A3A60);
      sub_150E0((uint64_t)v170, (uint64_t)&v174, &qword_A3A60);
      if (v176 && (uint64_t v83 = v175) != 0)
      {
        uint64_t v84 = v174;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v83 = *((void *)&v162 + 1);
        uint64_t v84 = v162;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      uint64_t v158 = v84;
      uint64_t v159 = v83;
      long long v157 = *(_OWORD *)(a1 + 232);
      sub_14F50(&qword_A3A68);
      sub_768A0();
      uint64_t v95 = sub_150E0((uint64_t)v170, (uint64_t)&v148, &qword_A3A60);
      __chkstk_darwin(v95);
      sub_43BF8(v170);
      uint64_t v111 = sub_1508C(&qword_A3A70, &qword_A2E58);
      unint64_t v135 = (char *)v82;
      uint64_t v96 = v117;
      uint64_t v97 = v116;
      uint64_t v98 = v124;
      sub_76790();
      swift_release();
      swift_release();
      sub_38C20(v148, (uint64_t)v149, v150, (uint64_t)v151);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v114 + 8))(v98, v96);
      uint64_t v148 = 0;
      uint64_t v149 = (void *)0xE000000000000000;
      sub_76F70(29);
      swift_bridgeObjectRelease();
      uint64_t v148 = 0xD00000000000001BLL;
      uint64_t v149 = (void *)0x80000000000871C0;
      uint64_t v100 = (void *)*((void *)&v160 + 1);
      uint64_t v99 = v160;
      swift_bridgeObjectRetain();
      v177._countAndFlagsBits = v99;
      v177._object = v100;
      sub_76C50(v177);
      swift_bridgeObjectRelease();
      uint64_t v148 = v96;
      uint64_t v149 = &type metadata for String;
      uint64_t v150 = v96;
      uint64_t v151 = &type metadata for Text;
      char v152 = &type metadata for Recommendation.Confirmation;
      uint64_t v153 = v111;
      char v154 = v135;
      uint64_t v155 = v111;
      uint64_t v156 = &protocol witness table for Text;
      swift_getOpaqueTypeConformance2();
      uint64_t v101 = (uint64_t)v115;
      uint64_t v102 = v119;
      sub_767B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v118 + 8))(v97, v102);
      uint64_t v103 = v120;
      sub_150E0(v101, v120, &qword_A3A10);
      sub_15144(v103, v127, &qword_A3A10);
      swift_storeEnumTagMultiPayload();
      sub_43C30();
      sub_43D7C();
      uint64_t v104 = (uint64_t)v129;
      sub_76570();
      sub_15144(v104, v139, &qword_A3A20);
      swift_storeEnumTagMultiPayload();
      sub_43EC0();
      sub_43F60();
      uint64_t v58 = (uint64_t)v145;
      sub_76570();
      sub_151A8(v104, &qword_A3A20);
      sub_151A8(v103, &qword_A3A10);
      uint64_t v42 = (uint64_t)v144;
    }
  }
  else
  {
    long long v70 = v130;
    sub_762D0();
    uint64_t v71 = v131;
    uint64_t v72 = v134;
    (*(void (**)(uint64_t, char *, uint64_t))(v131 + 16))(v133, v70, v134);
    swift_storeEnumTagMultiPayload();
    sub_1508C(&qword_A2ED8, &qword_A2EC8);
    sub_43C30();
    uint64_t v73 = (uint64_t)v135;
    sub_76570();
    sub_15144(v73, v139, &qword_A3A50);
    swift_storeEnumTagMultiPayload();
    sub_43EC0();
    sub_43F60();
    uint64_t v58 = (uint64_t)v145;
    sub_76570();
    sub_151A8(v73, &qword_A3A50);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v72);
  }
  uint64_t v105 = v141;
  sub_15144(v42, v141, &qword_A3A00);
  uint64_t v106 = v142;
  sub_15144(v58, v142, &qword_A3A58);
  uint64_t v107 = v143;
  sub_15144(v105, v143, &qword_A3A00);
  uint64_t v108 = sub_14F50(&qword_A3AB8);
  uint64_t v109 = v107 + *(int *)(v108 + 48);
  *(void *)uint64_t v109 = 0;
  *(unsigned char *)(v109 + 8) = 1;
  sub_15144(v106, v107 + *(int *)(v108 + 64), &qword_A3A58);
  sub_151A8(v58, &qword_A3A58);
  sub_151A8(v42, &qword_A3A00);
  sub_151A8(v106, &qword_A3A58);
  return sub_151A8(v105, &qword_A3A00);
}

uint64_t sub_42C0C(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = *(_OWORD *)(a1 + 176);
  long long v6 = *(_OWORD *)(a1 + 208);
  v34[4] = *(_OWORD *)(a1 + 192);
  v34[5] = v6;
  long long v7 = *(_OWORD *)(a1 + 112);
  long long v8 = *(_OWORD *)(a1 + 144);
  long long v9 = *(_OWORD *)(a1 + 160);
  v34[0] = *(_OWORD *)(a1 + 128);
  v34[1] = v8;
  char v35 = *(unsigned char *)(a1 + 224);
  v34[2] = v9;
  v34[3] = v5;
  long long v10 = *(_OWORD *)(a1 + 64);
  long long v29 = *(_OWORD *)(a1 + 48);
  long long v30 = v10;
  long long v11 = *(_OWORD *)(a1 + 96);
  long long v31 = *(_OWORD *)(a1 + 80);
  long long v32 = v11;
  long long v33 = v7;
  long long v12 = *(_OWORD *)(a1 + 32);
  long long v27 = *(_OWORD *)(a1 + 16);
  long long v28 = v12;
  sub_150E0((uint64_t)v34, (uint64_t)v36, &qword_A3A60);
  sub_150E0((uint64_t)v36, (uint64_t)v37, &qword_A3A60);
  long long v26 = *(_OWORD *)(a1 + 232);
  if (v38)
  {
    char v25 = 1;
    sub_14F50(&qword_A3A68);
    return sub_76890();
  }
  else
  {
    char v25 = 0;
    sub_14F50(&qword_A3A68);
    sub_76890();
    uint64_t v14 = sub_76D70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
    sub_76D40();
    sub_43A70(a1);
    uint64_t v15 = sub_76D30();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v15;
    *(void *)(v16 + 24) = &protocol witness table for MainActor;
    long long v17 = *(_OWORD *)(a1 + 208);
    *(_OWORD *)(v16 + 224) = *(_OWORD *)(a1 + 192);
    *(_OWORD *)(v16 + 240) = v17;
    *(_OWORD *)(v16 + 256) = *(_OWORD *)(a1 + 224);
    *(void *)(v16 + 272) = *(void *)(a1 + 240);
    long long v18 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v16 + 160) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v16 + 176) = v18;
    long long v19 = *(_OWORD *)(a1 + 176);
    *(_OWORD *)(v16 + 192) = *(_OWORD *)(a1 + 160);
    *(_OWORD *)(v16 + 208) = v19;
    long long v20 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v16 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v16 + 112) = v20;
    long long v21 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(v16 + 128) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v16 + 144) = v21;
    long long v22 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v16 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v16 + 48) = v22;
    long long v23 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v16 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v16 + 80) = v23;
    sub_52508((uint64_t)v4, (uint64_t)&unk_A3AD8, v16);
    return swift_release();
  }
}

uint64_t sub_42E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_14F50(&qword_A3AC0);
  __chkstk_darwin(v10 - 8);
  long long v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_14F50(&qword_A2E58);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v15) = *(unsigned __int8 *)(a1 + 32);
  v28[0] = a2;
  v28[1] = a3;
  if (v15 == 1)
  {
    swift_bridgeObjectRetain();
    sub_76270();
    uint64_t v17 = sub_76280();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 0, 1, v17);
  }
  else
  {
    uint64_t v18 = sub_76280();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
    swift_bridgeObjectRetain();
  }
  uint64_t v19 = swift_allocObject();
  long long v20 = *(_OWORD *)(a4 + 208);
  *(_OWORD *)(v19 + 208) = *(_OWORD *)(a4 + 192);
  *(_OWORD *)(v19 + 224) = v20;
  *(_OWORD *)(v19 + 240) = *(_OWORD *)(a4 + 224);
  *(void *)(v19 + 256) = *(void *)(a4 + 240);
  long long v21 = *(_OWORD *)(a4 + 144);
  *(_OWORD *)(v19 + 144) = *(_OWORD *)(a4 + 128);
  *(_OWORD *)(v19 + 160) = v21;
  long long v22 = *(_OWORD *)(a4 + 176);
  *(_OWORD *)(v19 + 176) = *(_OWORD *)(a4 + 160);
  *(_OWORD *)(v19 + 192) = v22;
  long long v23 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v19 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v19 + 96) = v23;
  long long v24 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v19 + 112) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v19 + 128) = v24;
  long long v25 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v19 + 32) = v25;
  long long v26 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v19 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v19 + 64) = v26;
  sub_43A70(a4);
  sub_15038();
  sub_768E0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a5, v16, v13);
}

uint64_t sub_430CC(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v17 = *(_OWORD *)(a1 + 232);
  v16[15] = 0;
  sub_14F50(&qword_A3A68);
  sub_76890();
  uint64_t v5 = sub_76D70();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_76D40();
  sub_43A70(a1);
  uint64_t v6 = sub_76D30();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = &protocol witness table for MainActor;
  long long v8 = *(_OWORD *)(a1 + 208);
  *(_OWORD *)(v7 + 224) = *(_OWORD *)(a1 + 192);
  *(_OWORD *)(v7 + 240) = v8;
  *(_OWORD *)(v7 + 256) = *(_OWORD *)(a1 + 224);
  *(void *)(v7 + 272) = *(void *)(a1 + 240);
  long long v9 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v7 + 160) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v7 + 176) = v9;
  long long v10 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v7 + 192) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v7 + 208) = v10;
  long long v11 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v7 + 112) = v11;
  long long v12 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v7 + 128) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v7 + 144) = v12;
  long long v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 48) = v13;
  long long v14 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v7 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v7 + 80) = v14;
  sub_52508((uint64_t)v4, (uint64_t)&unk_A3AD0, v7);
  return swift_release();
}

uint64_t sub_43254@<X0>(uint64_t a1@<X8>)
{
  sub_15038();
  swift_bridgeObjectRetain();
  uint64_t result = sub_766D0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_432C0@<X0>(uint64_t a1@<X8>)
{
  sub_17A48();
  sub_15038();
  uint64_t v2 = sub_766D0();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_76650();
  uint64_t v7 = sub_766C0();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  char v12 = v11 & 1;
  sub_150D0(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_76800();
  uint64_t v13 = sub_76690();
  uint64_t v15 = v14;
  char v17 = v16;
  uint64_t v19 = v18;
  swift_release();
  sub_150D0(v7, v9, v12);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v13;
  *(void *)(a1 + 8) = v15;
  *(unsigned char *)(a1 + 16) = v17 & 1;
  *(void *)(a1 + 24) = v19;
  return result;
}

double sub_43428@<D0>(uint64_t a1@<X8>)
{
  sub_76A10();
  sub_76310();
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(a1 + 48) = v7;
  return result;
}

uint64_t sub_434A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4[2] = a4;
  sub_76D40();
  v4[3] = sub_76D30();
  uint64_t v6 = sub_76D10();
  void v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_43540, v6, v5);
}

uint64_t sub_43540()
{
  uint64_t v1 = (void *)v0[2];
  if (*v1)
  {
    v0[6] = *(void *)(*v1 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_recommendationController);
    uint64_t v2 = v1[2];
    uint64_t v3 = v1[3];
    swift_retain();
    char v4 = (void *)swift_task_alloc();
    v0[7] = v4;
    *char v4 = v0;
    v4[1] = sub_43684;
    return sub_48408(v2, v3);
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_44200((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
    return sub_76380();
  }
}

uint64_t sub_43684()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_1601C, v3, v2);
}

uint64_t sub_437C8@<X0>(uint64_t a1@<X8>)
{
  sub_15038();
  swift_bridgeObjectRetain();
  uint64_t result = sub_766D0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_43834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 80);
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(unsigned char *)(a2 + 32) = v7;
  *(void *)(a2 + 40) = v6;
  *(void *)(a2 + 48) = v5;
  *(unsigned char *)(a2 + 56) = 2;
  sub_16F10(v3, v4, v7);

  return swift_bridgeObjectRetain();
}

uint64_t sub_438BC@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 208);
  v10[12] = *(_OWORD *)(v1 + 192);
  v10[13] = v2;
  v10[14] = *(_OWORD *)(v1 + 224);
  uint64_t v11 = *(void *)(v1 + 240);
  long long v3 = *(_OWORD *)(v1 + 144);
  v10[8] = *(_OWORD *)(v1 + 128);
  v10[9] = v3;
  long long v4 = *(_OWORD *)(v1 + 176);
  v10[10] = *(_OWORD *)(v1 + 160);
  v10[11] = v4;
  long long v5 = *(_OWORD *)(v1 + 80);
  v10[4] = *(_OWORD *)(v1 + 64);
  v10[5] = v5;
  long long v6 = *(_OWORD *)(v1 + 112);
  v10[6] = *(_OWORD *)(v1 + 96);
  v10[7] = v6;
  long long v7 = *(_OWORD *)(v1 + 16);
  v10[0] = *(_OWORD *)v1;
  v10[1] = v7;
  long long v8 = *(_OWORD *)(v1 + 48);
  uint64_t v10[2] = *(_OWORD *)(v1 + 32);
  v10[3] = v8;
  return sub_40E44((uint64_t)v10, a1);
}

uint64_t sub_43930@<X0>(uint64_t a1@<X8>)
{
  return sub_432C0(a1);
}

unint64_t sub_43938()
{
  unint64_t result = qword_A39C8;
  if (!qword_A39C8)
  {
    sub_14F94(&qword_A39C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A39C8);
  }
  return result;
}

unint64_t sub_439AC()
{
  unint64_t result = qword_A2F60;
  if (!qword_A2F60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_A2F60);
  }
  return result;
}

uint64_t sub_439F0@<X0>(uint64_t a1@<X8>)
{
  return sub_17C48(a1);
}

uint64_t sub_43A60@<X0>(uint64_t a1@<X8>)
{
  return sub_41648(v1 + 16, a1);
}

uint64_t sub_43A70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 136);
  uint64_t v10 = *(void *)(a1 + 128);
  uint64_t v7 = *(void *)(a1 + 152);
  uint64_t v8 = *(void *)(a1 + 144);
  uint64_t v11 = *(void *)(a1 + 208);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 80);
  id v5 = *(id *)a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_16F10(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_38AE0(v10, v9, v8, v7);
  swift_bridgeObjectRetain();
  sub_38B24(v11);
  swift_retain();
  return a1;
}

uint64_t sub_43B74@<X0>(uint64_t a1@<X8>)
{
  return sub_437C8(a1);
}

uint64_t sub_43B7C@<X0>(uint64_t a1@<X8>)
{
  return sub_43834(*(void *)(v1 + 16), a1);
}

unint64_t sub_43B84()
{
  unint64_t result = qword_A39F8;
  if (!qword_A39F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A39F8);
  }
  return result;
}

uint64_t sub_43BE4()
{
  return sub_42C0C(v0 + 16);
}

uint64_t sub_43BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_42E48(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t *sub_43BF8(uint64_t *a1)
{
  return a1;
}

unint64_t sub_43C30()
{
  unint64_t result = qword_A3A78;
  if (!qword_A3A78)
  {
    sub_14F94(&qword_A3A38);
    sub_43CD0();
    sub_1508C(&qword_A3A90, &qword_A3A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3A78);
  }
  return result;
}

unint64_t sub_43CD0()
{
  unint64_t result = qword_A3A80;
  if (!qword_A3A80)
  {
    sub_14F94(&qword_A3A30);
    sub_44200((unint64_t *)&qword_A3A88, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3A80);
  }
  return result;
}

unint64_t sub_43D7C()
{
  unint64_t result = qword_A3AA0;
  if (!qword_A3AA0)
  {
    sub_14F94(&qword_A3A10);
    sub_14F94(&qword_A2E58);
    sub_1508C(&qword_A3A70, &qword_A2E58);
    sub_15038();
    swift_getOpaqueTypeConformance2();
    sub_44200((unint64_t *)&qword_A3A88, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3AA0);
  }
  return result;
}

unint64_t sub_43EC0()
{
  unint64_t result = qword_A3AA8;
  if (!qword_A3AA8)
  {
    sub_14F94(&qword_A3A50);
    sub_1508C(&qword_A2ED8, &qword_A2EC8);
    sub_43C30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3AA8);
  }
  return result;
}

unint64_t sub_43F60()
{
  unint64_t result = qword_A3AB0;
  if (!qword_A3AB0)
  {
    sub_14F94(&qword_A3A20);
    sub_43C30();
    sub_43D7C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3AB0);
  }
  return result;
}

uint64_t sub_43FDC()
{
  return sub_76420();
}

uint64_t sub_44000(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A3A28);
  __chkstk_darwin(v2 - 8);
  sub_15144(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_A3A28);
  return sub_76430();
}

uint64_t sub_4409C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_16FDC(*(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 168))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 224)) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, 264, 7);
}

uint64_t sub_44140()
{
  return sub_430CC(v0 + 16);
}

uint64_t sub_4414C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *long long v6 = v2;
  v6[1] = sub_25054;
  return sub_434A8(a1, v4, v5, v1 + 32);
}

uint64_t sub_44200(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_4424C()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_16FDC(*(void *)(v0 + 96), *(void *)(v0 + 104), *(unsigned char *)(v0 + 112));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 184))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 240)) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, 280, 7);
}

uint64_t sub_442F8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *long long v6 = v2;
  v6[1] = sub_163DC;
  return sub_434A8(a1, v4, v5, v1 + 32);
}

unint64_t sub_443B0()
{
  unint64_t result = qword_A3AE0;
  if (!qword_A3AE0)
  {
    sub_14F94(&qword_A3AE8);
    sub_1508C(&qword_A3AF0, &qword_A3AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3AE0);
  }
  return result;
}

uint64_t destroy for AppsListContainerView(id *a1)
{
  return swift_release();
}

uint64_t initializeWithCopy for AppsListContainerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AppsListContainerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for AppsListContainerView(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for AppsListContainerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppsListContainerView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AppsListContainerView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppsListContainerView()
{
  return &type metadata for AppsListContainerView;
}

uint64_t sub_44664()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_44680@<X0>(void (*a1)(void, void, void)@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v83 = a5;
  uint64_t v84 = a2;
  uint64_t v7 = a1;
  long long v80 = a1;
  uint64_t v72 = sub_14F50(&qword_A3B00);
  uint64_t v71 = *(void *)(v72 - 8);
  uint64_t v8 = __chkstk_darwin(v72);
  long long v78 = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v74 = (char *)v68 - v10;
  uint64_t v76 = sub_14F50(&qword_A3B08);
  uint64_t v75 = *(void *)(v76 - 8);
  uint64_t v11 = __chkstk_darwin(v76);
  long long v77 = (char *)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v73 = (char *)v68 - v13;
  uint64_t v14 = sub_14F50(&qword_A3B10);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  unint64_t v82 = (char *)v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  long long v81 = (char *)v68 - v17;
  uint64_t v18 = sub_14F50(&qword_A3B18);
  __chkstk_darwin(v18 - 8);
  long long v20 = (char *)v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_14F50(&qword_A3B20);
  uint64_t v21 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  long long v23 = (char *)v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_14F50(&qword_A3B28);
  uint64_t v25 = v24 - 8;
  uint64_t v26 = __chkstk_darwin(v24);
  long long v28 = (char *)v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  long long v30 = (char *)v68 - v29;
  Swift::String v85 = v7;
  uint64_t v86 = v84;
  char v87 = a3;
  uint64_t v88 = a4;
  int v69 = a3;
  char v89 = a3;
  uint64_t v70 = a4;
  uint64_t v90 = a4;
  sub_14F50(&qword_A3B30);
  sub_768A0();
  uint64_t v31 = v91;
  uint64_t v32 = v92;
  LOBYTE(v7) = v93;
  uint64_t v33 = type metadata accessor for StorageShared();
  uint64_t v34 = sub_46A64((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
  v68[1] = v33;
  v68[0] = v34;
  uint64_t v91 = sub_76390();
  uint64_t v92 = v35;
  uint64_t v93 = v31;
  uint64_t v94 = v32;
  char v95 = (char)v7;
  sub_14F50(&qword_A3B38);
  sub_46588();
  sub_465DC();
  uint64_t v36 = (uint64_t)v30;
  sub_76990();
  uint64_t v37 = sub_766B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v20, 1, 1, v37);
  uint64_t KeyPath = swift_getKeyPath();
  unsigned __int8 v39 = (uint64_t *)&v28[*(int *)(v25 + 44)];
  uint64_t v40 = sub_14F50(&qword_A3B88);
  sub_15144((uint64_t)v20, (uint64_t)v39 + *(int *)(v40 + 28), &qword_A3B18);
  uint64_t *v39 = KeyPath;
  uint64_t v41 = v79;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v28, v23, v79);
  sub_151A8((uint64_t)v20, &qword_A3B18);
  uint64_t v42 = v80;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v41);
  sub_150E0((uint64_t)v28, (uint64_t)v30, &qword_A3B28);
  if (v42)
  {
    uint64_t v43 = v42;
    uint64_t v44 = *(void *)(sub_28814() + 16);
    swift_bridgeObjectRelease();
    if (v44)
    {
      int v45 = v43[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_recommendationsDidUpdateOnce];

      uint64_t v47 = (uint64_t)v82;
      uint64_t v46 = v83;
      uint64_t v48 = (uint64_t)v81;
      if (v45 == 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v49 = v43;
        sub_76240();

        swift_release();
        swift_release();
        uint64_t v50 = v92;
        swift_bridgeObjectRelease();
        if (!v50)
        {
          sub_14F50(&qword_A3BA0);
          sub_4675C();
          double v51 = v73;
          uint64_t v52 = sub_769A0();
          __chkstk_darwin(v52);
          uint64_t v53 = v84;
          v68[-4] = v42;
          v68[-3] = v53;
          LOBYTE(v68[-2]) = v69;
          v68[-1] = v70;
          sub_14F50(&qword_A3BD8);
          sub_4690C();
          long long v54 = v74;
          sub_769A0();
          uint64_t v84 = v36;
          long long v80 = *(void (**)(void, void, void))(v75 + 16);
          uint64_t v55 = v76;
          v80(v77, v51, v76);
          uint64_t v56 = v71;
          long long v57 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
          uint64_t v58 = v54;
          uint64_t v59 = v72;
          v57(v78, v58, v72);
          v80(v47, v77, v55);
          uint64_t v60 = sub_14F50(&qword_A3C00);
          v57((char *)(v47 + *(int *)(v60 + 48)), v78, v59);
          uint64_t v61 = *(void (**)(char *, uint64_t))(v56 + 8);
          v61(v74, v59);
          uint64_t v62 = *(void (**)(char *, uint64_t))(v75 + 8);
          uint64_t v63 = v76;
          v62(v73, v76);
          v61(v78, v59);
          v62(v77, v63);
          uint64_t v36 = v84;
          uint64_t v64 = sub_14F50(&qword_A3B90);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v47, 0, 1, v64);
          sub_150E0(v47, v48, &qword_A3B10);
LABEL_8:
          sub_15144(v36, (uint64_t)v28, &qword_A3B28);
          sub_15144(v48, v47, &qword_A3B10);
          sub_15144((uint64_t)v28, v46, &qword_A3B28);
          uint64_t v66 = sub_14F50(&qword_A3B98);
          sub_15144(v47, v46 + *(int *)(v66 + 48), &qword_A3B10);
          sub_151A8(v48, &qword_A3B10);
          sub_151A8(v36, &qword_A3B28);
          sub_151A8(v47, &qword_A3B10);
          return sub_151A8((uint64_t)v28, &qword_A3B28);
        }
      }
    }
    else
    {

      uint64_t v47 = (uint64_t)v82;
      uint64_t v46 = v83;
      uint64_t v48 = (uint64_t)v81;
    }
    uint64_t v65 = sub_14F50(&qword_A3B90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v48, 1, 1, v65);
    goto LABEL_8;
  }
  uint64_t result = sub_76380();
  __break(1u);
  return result;
}

uint64_t sub_44FA4@<X0>(void *a1@<X0>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v50 = a3;
  LODWORD(v49) = a2;
  uint64_t v56 = a4;
  uint64_t v57 = sub_14F50(&qword_A3B80);
  __chkstk_darwin(v57);
  id v6 = &v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v54 = sub_14F50(&qword_A3C18);
  __chkstk_darwin(v54);
  uint64_t v8 = &v46[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v51 = sub_14F50(&qword_A3C20);
  __chkstk_darwin(v51);
  uint64_t v10 = &v46[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v55 = sub_14F50(&qword_A3B58);
  __chkstk_darwin(v55);
  uint64_t v52 = &v46[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_14F50(&qword_A3530);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = &v46[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v17 = &v46[-v16];
  uint64_t v53 = type metadata accessor for AppsListView();
  uint64_t v18 = __chkstk_darwin(v53);
  long long v20 = &v46[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  uint64_t v22 = &v46[-v21];
  if (a1)
  {
    long long v23 = a1;
    uint64_t v24 = *(void *)(sub_28814() + 16);
    swift_bridgeObjectRelease();
    if (v24)
    {
      int v25 = v23[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_recommendationsDidUpdateOnce];

      if (v25 == 1)
      {
        uint64_t KeyPath = swift_getKeyPath();
        char v58 = v49;
        uint64_t v59 = v50;
        sub_14F50(&qword_A3B30);
        sub_768A0();
        uint64_t v50 = v60;
        uint64_t v49 = v61;
        int v47 = v62;
        type metadata accessor for StorageShared();
        sub_46A64((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
        *((void *)v20 + 2) = sub_76390();
        *((void *)v20 + 3) = v26;
        char v58 = 1;
        sub_76870();
        uint64_t v27 = v61;
        v20[56] = v60;
        *((void *)v20 + 8) = v27;
        uint64_t v28 = type metadata accessor for Application();
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        sub_15144((uint64_t)v17, (uint64_t)v15, &qword_A3530);
        sub_76870();
        sub_151A8((uint64_t)v17, &qword_A3530);
        *(void *)long long v20 = KeyPath;
        v20[8] = 1;
        uint64_t v29 = v49;
        *((void *)v20 + 4) = v50;
        *((void *)v20 + 5) = v29;
        v20[48] = v47;
        sub_46AE4((uint64_t)v20, (uint64_t)v22);
        sub_46B48((uint64_t)v22, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AppsListView);
        swift_storeEnumTagMultiPayload();
        sub_14F50(&qword_A3B70);
        sub_46A64(&qword_A3B60, (void (*)(uint64_t))type metadata accessor for AppsListView);
        sub_1508C(&qword_A3B68, &qword_A3B70);
        uint64_t v30 = (uint64_t)v52;
        sub_76570();
        sub_15144(v30, (uint64_t)v8, &qword_A3B58);
        swift_storeEnumTagMultiPayload();
        sub_4667C();
        sub_1508C(&qword_A3B78, &qword_A3B80);
        sub_76570();
        sub_151A8(v30, &qword_A3B58);
        return sub_46BB0((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for AppsListView);
      }
    }
    else
    {
    }
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v32 = v23;
    sub_76240();

    swift_release();
    swift_release();
    int v33 = v60;
    uint64_t v34 = sub_764E0();
    uint64_t v35 = v34;
    if (v33 == 1)
    {
      sub_457EC((uint64_t)&v60);
      uint64_t v36 = v60;
      char v37 = v61;
      uint64_t v38 = v62;
      uint64_t v39 = v63;
      char v40 = v64;
      uint64_t v42 = v65;
      uint64_t v41 = v66;
      char v43 = v67;
      *(void *)uint64_t v10 = v35;
      *((void *)v10 + 1) = 0;
      v10[16] = 1;
      *((void *)v10 + 3) = v36;
      v10[32] = v37;
      *((void *)v10 + 5) = v38;
      *((void *)v10 + 6) = v39;
      v10[56] = v40;
      *((void *)v10 + 8) = v42;
      *((void *)v10 + 9) = v41;
      v10[80] = v43;
      swift_storeEnumTagMultiPayload();
      sub_16E5C(v38, v39, v40);
      swift_bridgeObjectRetain();
      sub_14F50(&qword_A3B70);
      sub_46A64(&qword_A3B60, (void (*)(uint64_t))type metadata accessor for AppsListView);
      sub_1508C(&qword_A3B68, &qword_A3B70);
      uint64_t v44 = (uint64_t)v52;
      sub_76570();
      sub_15144(v44, (uint64_t)v8, &qword_A3B58);
      swift_storeEnumTagMultiPayload();
      sub_4667C();
      sub_1508C(&qword_A3B78, &qword_A3B80);
      sub_76570();
      sub_151A8(v44, &qword_A3B58);
      sub_150D0(v38, v39, v40);
      return swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)id v6 = v34;
      *((void *)v6 + 1) = 0;
      v6[16] = 1;
      uint64_t v45 = sub_14F50(&qword_A3C28);
      sub_4590C((uint64_t)&v6[*(int *)(v45 + 44)]);
      sub_15144((uint64_t)v6, (uint64_t)v8, &qword_A3B80);
      swift_storeEnumTagMultiPayload();
      sub_4667C();
      sub_1508C(&qword_A3B78, &qword_A3B80);
      sub_76570();
      return sub_151A8((uint64_t)v6, &qword_A3B80);
    }
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_46A64((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
    uint64_t result = sub_76380();
    __break(1u);
  }
  return result;
}

uint64_t sub_457EC@<X0>(uint64_t a1@<X8>)
{
  NSString v2 = sub_76BE0();
  NSString v3 = sub_76BE0();
  id v4 = STLocalizedString(v2);

  sub_76C10();
  sub_15038();
  uint64_t v5 = sub_766D0();
  uint64_t v7 = v6;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  char v9 = v8 & 1;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v8 & 1;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  sub_16E5C(v5, v6, v8 & 1);
  swift_bridgeObjectRetain();
  sub_150D0(v5, v7, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_4590C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_14F50(&qword_A2EC8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_14F50(&qword_A3C30);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  char v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v15 - v10;
  sub_762D0();
  sub_1508C(&qword_A2ED8, &qword_A2EC8);
  sub_767B0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_150E0((uint64_t)v9, (uint64_t)v11, &qword_A3C30);
  sub_15144((uint64_t)v11, (uint64_t)v9, &qword_A3C30);
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  uint64_t v12 = sub_14F50(&qword_A3C38);
  sub_15144((uint64_t)v9, a1 + *(int *)(v12 + 48), &qword_A3C30);
  uint64_t v13 = a1 + *(int *)(v12 + 64);
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 8) = 1;
  sub_151A8((uint64_t)v11, &qword_A3C30);
  return sub_151A8((uint64_t)v9, &qword_A3C30);
}

uint64_t sub_45B18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (int *)sub_14F50(&qword_A3BC8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = sub_14F50(&qword_A3BB8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v5 = swift_getKeyPath();
  sub_14F50(&qword_A37C8);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = (uint64_t *)((char *)v5 + v2[9]);
  uint64_t *v11 = swift_getKeyPath();
  sub_14F50(&qword_A37D0);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v5 + v2[10]) = 1;
  uint64_t v12 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)v5 + v2[11]);
  *uint64_t v12 = sub_45D74;
  v12[1] = 0;
  uint64_t v13 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)v5 + v2[12]);
  _OWORD *v13 = sub_45E04;
  v13[1] = 0;
  sub_150E0((uint64_t)v5, (uint64_t)v7, &qword_A3BC8);
  sub_1508C(&qword_A3BC0, &qword_A3BC8);
  sub_767B0();
  sub_151A8((uint64_t)v7, &qword_A3BC8);
  uint64_t v14 = sub_76500();
  sub_15144((uint64_t)v10, a1, &qword_A3BB8);
  uint64_t v15 = (uint64_t *)(a1 + *(int *)(sub_14F50(&qword_A3BA0) + 36));
  *uint64_t v15 = v14;
  v15[1] = (uint64_t)sub_46130;
  _OWORD v15[2] = 0;
  return sub_151A8((uint64_t)v10, &qword_A3BB8);
}

uint64_t sub_45D74@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for HiddenAppsListWrapper();
  [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  sub_76130();
  uint64_t v2 = sub_76140();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_45E04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = sub_764E0();
  sub_45F58((uint64_t)&v23);
  uint64_t v2 = v23;
  char v3 = v24;
  uint64_t v4 = v25;
  uint64_t v5 = v26;
  char v6 = v27;
  uint64_t v7 = v28;
  uint64_t v21 = v29;
  char v20 = v30;
  uint64_t v18 = v32;
  uint64_t v19 = v31;
  char v8 = v33;
  uint64_t v16 = v35;
  uint64_t v17 = v34;
  LOBYTE(v23) = 1;
  char v39 = v24;
  char v38 = v33;
  char v37 = v36;
  char v9 = v36;
  char v10 = sub_76630();
  if (qword_A2C58 != -1) {
    swift_once();
  }
  uint64_t result = sub_76290();
  *(void *)a1 = v22;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v2;
  *(unsigned char *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v21;
  *(unsigned char *)(a1 + 80) = v20;
  *(void *)(a1 + 88) = v19;
  *(void *)(a1 + 96) = v18;
  *(unsigned char *)(a1 + 104) = v8;
  *(void *)(a1 + 112) = v17;
  *(void *)(a1 + 120) = v16;
  *(unsigned char *)(a1 + 128) = v9;
  *(unsigned char *)(a1 + 136) = v10;
  *(void *)(a1 + 144) = v12;
  *(void *)(a1 + 152) = v13;
  *(void *)(a1 + 160) = v14;
  *(void *)(a1 + 168) = v15;
  *(unsigned char *)(a1 + 176) = 0;
  return result;
}

uint64_t sub_45F58@<X0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  NSString v3 = sub_76BE0();
  NSString v4 = sub_76BE0();
  id v5 = STLocalizedString(v3);

  sub_76C10();
  sub_15038();
  uint64_t v6 = sub_766D0();
  uint64_t v8 = v7;
  *(void *)a1 = KeyPath;
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0xD000000000000022;
  *(void *)(a1 + 24) = 0x80000000000872B0;
  *(unsigned char *)(a1 + 32) = 3;
  *(void *)(a1 + 40) = 0xD000000000000027;
  *(void *)(a1 + 48) = 0x80000000000872E0;
  char v10 = v9 & 1;
  *(unsigned char *)(a1 + 56) = 2;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = v9 & 1;
  *(void *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 104) = 1;
  sub_46ABC(KeyPath, 0);
  sub_16F10(0xD000000000000022, 0x80000000000872B0, 3u);
  swift_bridgeObjectRetain();
  sub_16E5C(v6, v8, v10);
  swift_bridgeObjectRetain();
  sub_150D0(v6, v8, v10);
  swift_bridgeObjectRelease();
  sub_46AC8(KeyPath, 0);
  sub_16FDC(0xD000000000000022, 0x80000000000872B0, 3u);
  return swift_bridgeObjectRelease();
}

double sub_46130()
{
  return 0.0;
}

uint64_t sub_46138@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_14F50(&qword_A3BD8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v8 = a1;
    sub_76240();

    swift_release();
    swift_release();
    sub_14F50(&qword_A3460);
    sub_14F50(&qword_A3BF0);
    sub_1508C(&qword_A3C08, &qword_A3460);
    sub_46980();
    sub_46A64(&qword_A3C10, (void (*)(uint64_t))type metadata accessor for Application);
    sub_76980();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_46A64((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
    uint64_t result = sub_76380();
    __break(1u);
  }
  return result;
}

uint64_t sub_46394(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for AppListView();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_46B48((uint64_t)a1, (uint64_t)v5 + *(int *)(v3 + 20), (uint64_t (*)(void))type metadata accessor for Application);
  type metadata accessor for StorageShared();
  sub_46A64((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
  *uint64_t v5 = sub_76390();
  v5[1] = v6;
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_76F70(17);
  swift_bridgeObjectRelease();
  uint64_t v10 = 0x746163696C707041;
  unint64_t v11 = 0xEF2D776F526E6F69;
  uint64_t v8 = *a1;
  uint64_t v7 = (void *)a1[1];
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v8;
  v12._object = v7;
  sub_76C50(v12);
  swift_bridgeObjectRelease();
  sub_46A64(&qword_A3BF8, (void (*)(uint64_t))type metadata accessor for AppListView);
  sub_767B0();
  swift_bridgeObjectRelease();
  return sub_46BB0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AppListView);
}

uint64_t sub_46568@<X0>(uint64_t a1@<X8>)
{
  return sub_44680(*(void (**)(void, void, void))v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_46578@<X0>(uint64_t a1@<X8>)
{
  return sub_44FA4(*(void **)(v1 + 16), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), a1);
}

unint64_t sub_46588()
{
  unint64_t result = qword_A3B40;
  if (!qword_A3B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3B40);
  }
  return result;
}

unint64_t sub_465DC()
{
  unint64_t result = qword_A3B48;
  if (!qword_A3B48)
  {
    sub_14F94(&qword_A3B38);
    sub_4667C();
    sub_1508C(&qword_A3B78, &qword_A3B80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3B48);
  }
  return result;
}

unint64_t sub_4667C()
{
  unint64_t result = qword_A3B50;
  if (!qword_A3B50)
  {
    sub_14F94(&qword_A3B58);
    sub_46A64(&qword_A3B60, (void (*)(uint64_t))type metadata accessor for AppsListView);
    sub_1508C(&qword_A3B68, &qword_A3B70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3B50);
  }
  return result;
}

unint64_t sub_4675C()
{
  unint64_t result = qword_A3BA8;
  if (!qword_A3BA8)
  {
    sub_14F94(&qword_A3BA0);
    sub_467D8();
    sub_468A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3BA8);
  }
  return result;
}

unint64_t sub_467D8()
{
  unint64_t result = qword_A3BB0;
  if (!qword_A3BB0)
  {
    sub_14F94(&qword_A3BB8);
    sub_1508C(&qword_A3BC0, &qword_A3BC8);
    sub_46A64((unint64_t *)&qword_A3A88, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3BB0);
  }
  return result;
}

unint64_t sub_468A8()
{
  unint64_t result = qword_A3BD0;
  if (!qword_A3BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3BD0);
  }
  return result;
}

uint64_t sub_468FC@<X0>(uint64_t a1@<X8>)
{
  return sub_46138(*(void **)(v1 + 16), a1);
}

unint64_t sub_4690C()
{
  unint64_t result = qword_A3BE0;
  if (!qword_A3BE0)
  {
    sub_14F94(&qword_A3BD8);
    sub_46980();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3BE0);
  }
  return result;
}

unint64_t sub_46980()
{
  unint64_t result = qword_A3BE8;
  if (!qword_A3BE8)
  {
    sub_14F94(&qword_A3BF0);
    sub_46A64(&qword_A3BF8, (void (*)(uint64_t))type metadata accessor for AppListView);
    sub_46A64((unint64_t *)&qword_A3A88, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3BE8);
  }
  return result;
}

uint64_t sub_46A64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_46ABC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_46AC8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_46AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppsListView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_46B48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_46BB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_46C10()
{
  return sub_1508C(&qword_A3C40, &qword_A3C48);
}

uint64_t (*sub_46C4C(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  void v6[4] = a3;
  swift_bridgeObjectRetain();
  void v6[5] = sub_4FBFC(v6, a2, a3);
  return sub_46CCC;
}

uint64_t (*sub_46CD0(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  void v6[4] = a3;
  swift_bridgeObjectRetain();
  void v6[5] = sub_4FCAC(v6, a2, a3);
  return sub_46CCC;
}

void sub_46D50(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t sub_46DA4(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_4B8B4(isUniquelyReferenced_nonNull_native, v23, 1, v3, &qword_A3710, (uint64_t (*)(void))type metadata accessor for Application, (uint64_t (*)(void))type metadata accessor for Application);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(type metadata accessor for Application() - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_46F74(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_4BB34(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[27 * v8 + 4];
  if (a1 + 32 < v9 + 216 * v2 && v9 < a1 + 32 + 216 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_470D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a1;
  v4[19] = a4;
  sub_14F50(&qword_A3500);
  v4[20] = swift_task_alloc();
  return _swift_task_switch(sub_47168, a4, 0);
}

uint64_t sub_47168()
{
  uint64_t v1 = *(void *)(v0 + 152) + 160;
  swift_beginAccess();
  sub_15144(v1, v0 + 16, &qword_A36C0);
  uint64_t v2 = *(void *)(v0 + 40);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 160);
    sub_39D88(v0 + 16, v0 + 56);
    sub_151A8(v0 + 16, &qword_A36C0);
    int64_t v4 = (void **)sub_515AC((void *)(v0 + 56), *(void *)(v0 + 80));
    swift_beginAccess();
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = sub_4C2B4(v5);
    swift_bridgeObjectRelease();
    uint64_t v7 = *v4;
    uint64_t v8 = sub_76D70();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
    sub_76D40();
    id v9 = v7;
    swift_retain();
    uint64_t v10 = sub_76D30();
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    void v11[4] = v9;
    v11[5] = v6;
    sub_52508(v3, (uint64_t)&unk_A3EF0, (uint64_t)v11);
    swift_release();
    swift_release();
    sub_39B20(v0 + 56);
  }
  else
  {
    sub_151A8(v0 + 16, &qword_A36C0);
  }
  **(unsigned char **)(v0 + 144) = v2 == 0;
  swift_task_dealloc();
  BOOL v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

void (*sub_47360(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_14F50(&qword_A3500);
  v3[4] = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  swift_beginAccess();
  return sub_473F8;
}

void sub_473F8(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  uint64_t v4 = (void *)v3[4];
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = v3[3];
    uint64_t v6 = sub_76D70();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
    unint64_t v7 = sub_39E90();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v5;
    v8[3] = v7;
    v8[4] = v5;
    swift_retain_n();
    sub_526AC((uint64_t)v4, (uint64_t)&unk_A3F78, (uint64_t)v8);
    swift_release();
  }
  free(v4);

  free(v3);
}

uint64_t sub_474F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_76D70();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  unint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_151A8((uint64_t)v4, &qword_A3500);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_76D60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_76D10();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_A3F00;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_47738()
{
  swift_defaultActor_initialize();
  *(void *)(v0 + 120) = sub_27AAC((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v0 + 128) = [objc_allocWithZone((Class)MSPStorageTipsManager) init];
  *(void *)(v0 + 136) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 208) = 0;
  *(int64x2_t *)(v0 + 144) = vdupq_n_s64(0x8000000000000000);
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_OWORD *)(v0 + 185) = 0u;
  *(unsigned char *)(v0 + 216) = 1;
  id v1 = [self recommendationsShared];
  *(void *)(v0 + 112) = v1;
  [v1 setDelegate:v0];
  return v0;
}

uint64_t sub_477E8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_478CC();
    return swift_release();
  }
  return result;
}

uint64_t sub_47840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_47860, a4, 0);
}

uint64_t sub_47860()
{
  [*(id *)(*(void *)(v0 + 16) + 112) startMonitor];
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_478CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_76D70();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  unint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_151A8((uint64_t)v4, &qword_A3500);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_76D60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_76D10();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_A3F68;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_47B10(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_14F50(&qword_A3530);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v13 = sub_76C10();
  if (*(void *)(a1 + 16) && (unint64_t v15 = sub_4BC5C(v13, v14), (v16 & 1) != 0))
  {
    unint64_t v17 = v15;
    unint64_t v18 = v6;
    uint64_t v19 = *(void *)(a1 + 56);
    uint64_t v20 = type metadata accessor for Application();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = v19 + *(void *)(v21 + 72) * v17;
    uint64_t v6 = v18;
    sub_22680(v22, (uint64_t)v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v12, 0, 1, v20);
  }
  else
  {
    uint64_t v20 = type metadata accessor for Application();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v12, 1, 1, v20);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Application();
  int64_t v23 = *(unsigned int (**)(void, void, void))(v21 + 48);
  if (v23(v12, 1, v20) == 1)
  {
    sub_151A8((uint64_t)v12, &qword_A3530);
    unint64_t v24 = 0x8000000000000000;
  }
  else
  {
    uint64_t v44 = a1;
    uint64_t v25 = v23;
    uint64_t v26 = v10;
    uint64_t v27 = v2;
    uint64_t v28 = v6;
    uint64_t v30 = *((void *)v12 + 6);
    uint64_t v29 = *((void *)v12 + 7);
    uint64_t result = sub_226E4((uint64_t)v12);
    unint64_t v24 = v30 + v29;
    if (__OFADD__(v30, v29))
    {
      __break(1u);
      goto LABEL_18;
    }
    uint64_t v6 = v28;
    uint64_t v2 = v27;
    uint64_t v10 = v26;
    int64_t v23 = v25;
    a1 = v44;
  }
  *(void *)(v2 + 144) = v24;
  uint64_t v32 = sub_76C10();
  if (*(void *)(a1 + 16) && (unint64_t v34 = sub_4BC5C(v32, v33), (v35 & 1) != 0))
  {
    sub_22680(*(void *)(a1 + 56) + *(void *)(v21 + 72) * v34, (uint64_t)v10);
    uint64_t v36 = 0;
  }
  else
  {
    uint64_t v36 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v36, 1, v20);
  swift_bridgeObjectRelease();
  if (v23(v10, 1, v20) == 1)
  {
    sub_151A8((uint64_t)v10, &qword_A3530);
    unint64_t v37 = 0x8000000000000000;
LABEL_16:
    *(void *)(v2 + 152) = v37;
    uint64_t v40 = sub_76D70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v6, 1, 1, v40);
    unint64_t v41 = sub_39E90();
    uint64_t v42 = (void *)swift_allocObject();
    v42[2] = v2;
    v42[3] = v41;
    v42[4] = v2;
    swift_retain_n();
    sub_52508((uint64_t)v6, (uint64_t)&unk_A3F60, (uint64_t)v42);
    return swift_release();
  }
  uint64_t v38 = *((void *)v10 + 6);
  uint64_t v39 = *((void *)v10 + 7);
  uint64_t result = sub_226E4((uint64_t)v10);
  unint64_t v37 = v38 + v39;
  if (!__OFADD__(v38, v39)) {
    goto LABEL_16;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_47F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_47F44, a4, 0);
}

uint64_t sub_47F44()
{
  sub_4AC70();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_47FA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if ([a1 detailClass]
    && (swift_getObjCClassMetadata(), sub_1B618(0, &qword_A3F50), (uint64_t v5 = swift_dynamicCastMetatype()) != 0))
  {
    uint64_t v54 = 0;
    uint64_t v55 = v5;
  }
  else
  {
    id v6 = [a1 enableButtonTitle];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = sub_76C10();
      uint64_t v57 = v9;
      uint64_t v58 = v8;

      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v2;
      *(void *)(v10 + 24) = a1;
      uint64_t v56 = v10;
      swift_retain();
      id v11 = a1;
      uint64_t v54 = &unk_A3F48;
      uint64_t v55 = 0;
      goto LABEL_8;
    }
    uint64_t v54 = 0;
    uint64_t v55 = 0;
  }
  uint64_t v56 = 0;
  uint64_t v57 = 0;
  uint64_t v58 = 0;
LABEL_8:
  [a1 progress];
  if (v12 == 1.0)
  {
    char v53 = 1;
    *(void *)&double v13 = 1;
  }
  else
  {
    [a1 progress];
    if (v14 == 0.0)
    {
      char v53 = 1;
      double v13 = 0.0;
    }
    else
    {
      [a1 progress];
      char v53 = 0;
      double v13 = v15;
    }
  }
  id v16 = [a1 confirmationText];
  if (v16)
  {
    unint64_t v17 = v16;
    uint64_t v18 = sub_76C10();
    uint64_t v20 = v19;

    id v21 = [a1 confirmationButtonTitle];
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v23 = sub_76C10();
      uint64_t v25 = v24;
    }
    else
    {
      uint64_t v23 = 0;
      uint64_t v25 = 0;
    }
    uint64_t v48 = v25;
    uint64_t v49 = v23;
    unsigned __int8 v52 = [a1 mayCauseDataLoss];
    uint64_t v50 = v20;
    uint64_t v51 = v18;
  }
  else
  {
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    unsigned __int8 v52 = 0;
  }
  id v26 = [a1 identifier];
  uint64_t v27 = sub_76C10();
  uint64_t v46 = v28;
  uint64_t v47 = v27;

  id v29 = [a1 bundleID];
  uint64_t v45 = sub_76C10();
  uint64_t v31 = v30;

  id v32 = [a1 title];
  uint64_t v33 = sub_76C10();
  uint64_t v35 = v34;

  id v36 = [a1 bundleID];
  uint64_t v37 = sub_76C10();
  uint64_t v39 = v38;

  swift_bridgeObjectRetain();
  id v40 = [a1 explanaition];
  uint64_t v41 = sub_76C10();
  uint64_t v43 = v42;

  id result = [a1 gain];
  *(void *)a2 = v47;
  *(void *)(a2 + 8) = v46;
  *(void *)(a2 + 16) = v45;
  *(void *)(a2 + 24) = v31;
  *(void *)(a2 + 32) = v33;
  *(void *)(a2 + 40) = v35;
  *(void *)(a2 + 48) = v37;
  *(void *)(a2 + 56) = v39;
  *(unsigned char *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = v37;
  *(void *)(a2 + 80) = v39;
  *(void *)(a2 + 88) = v41;
  *(void *)(a2 + 96) = v43;
  *(void *)(a2 + 104) = result;
  *(void *)(a2 + 112) = v49;
  *(void *)(a2 + 120) = v48;
  *(void *)(a2 + 128) = v51;
  *(void *)(a2 + 136) = v50;
  *(unsigned char *)(a2 + 144) = v52;
  *(void *)(a2 + 152) = v55;
  *(void *)(a2 + 160) = v58;
  *(void *)(a2 + 168) = v57;
  *(double *)(a2 + 176) = v13;
  *(unsigned char *)(a2 + 184) = v53;
  *(void *)(a2 + 192) = v54;
  *(void *)(a2 + 200) = v56;
  *(unsigned char *)(a2 + 208) = 0;
  return result;
}

uint64_t sub_48328(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_4834C, a1, 0);
}

uint64_t sub_4834C()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + 112);
  NSString v2 = [*(id *)(v0 + 24) identifier];
  if (!v2)
  {
    sub_76C10();
    NSString v2 = sub_76BE0();
    swift_bridgeObjectRelease();
  }
  [v1 enableTip:v2];

  uint64_t v3 = *(uint64_t (**)(unint64_t, void))(v0 + 8);
  return v3(0xBFF0000000000000, 0);
}

uint64_t sub_48408(uint64_t a1, uint64_t a2)
{
  v3[322] = v2;
  v3[321] = a2;
  v3[320] = a1;
  return _swift_task_switch(sub_48430, v2, 0);
}

uint64_t sub_48430()
{
  uint64_t v34 = v0 + 1528;
  __dst = (void *)(v0 + 1096);
  uint64_t v33 = v0 + 1744;
  uint64_t v1 = *(void *)(v0 + 2568);
  uint64_t v2 = *(void *)(v0 + 2560);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_47360((void *)(v0 + 2488));
  uint64_t v4 = sub_46CD0((void *)(v0 + 2456), v2, v1);
  uint64_t v6 = v5;
  sub_1B4A0(v5, v0 + 232);
  sub_1B4A0(v0 + 232, v0 + 16);
  if (sub_235FC(v0 + 16) != 1)
  {
    *(void *)(v6 + 176) = 0xBFF0000000000000;
    *(unsigned char *)(v6 + 184) = 0;
  }
  ((void (*)(uint64_t, void))v4)(v0 + 2456, 0);
  swift_bridgeObjectRelease();
  v3((void **)(v0 + 2488), 0);
  uint64_t v7 = *(void *)(v0 + 2576);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 120);
  if (!*(void *)(v8 + 16))
  {
    sub_1B478(v0 + 448);
    uint64_t v25 = v0 + 448;
LABEL_8:
    uint64_t v24 = v0 + 1096;
    sub_1B4A0(v25, (uint64_t)__dst);
    goto LABEL_9;
  }
  uint64_t v9 = *(void *)(v0 + 2568);
  uint64_t v10 = *(void *)(v0 + 2560);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_4BC5C(v10, v9);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B478(v0 + 1312);
    uint64_t v25 = v0 + 1312;
    goto LABEL_8;
  }
  double v13 = (_OWORD *)(*(void *)(v8 + 56) + 216 * v11);
  long long v14 = v13[1];
  *(_OWORD *)(v0 + 664) = *v13;
  *(_OWORD *)(v0 + 680) = v14;
  long long v15 = v13[2];
  long long v16 = v13[3];
  long long v17 = v13[5];
  *(_OWORD *)(v0 + 728) = v13[4];
  *(_OWORD *)(v0 + 744) = v17;
  *(_OWORD *)(v0 + 696) = v15;
  *(_OWORD *)(v0 + 712) = v16;
  long long v18 = v13[6];
  long long v19 = v13[7];
  long long v20 = v13[9];
  *(_OWORD *)(v0 + 792) = v13[8];
  *(_OWORD *)(v0 + 808) = v20;
  *(_OWORD *)(v0 + 760) = v18;
  *(_OWORD *)(v0 + 776) = v19;
  long long v21 = v13[10];
  long long v22 = v13[11];
  long long v23 = v13[12];
  *(unsigned char *)(v0 + 872) = *((unsigned char *)v13 + 208);
  *(_OWORD *)(v0 + 840) = v22;
  *(_OWORD *)(v0 + 856) = v23;
  *(_OWORD *)(v0 + 824) = v21;
  uint64_t v24 = v0 + 1096;
  memmove(__dst, v13, 0xD1uLL);
  nullsub_1(__dst);
  sub_389F4(v0 + 664);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  sub_1B4A0(v24, v33);
  sub_1B4A0(v33, v34);
  int v26 = sub_235FC(v34);
  uint64_t v27 = (int *)&unk_A3F28;
  if (v26 == 1
    || (uint64_t v28 = *(void *)(v0 + 1288),
        uint64_t v29 = *(void *)(v0 + 1296),
        sub_1B4A0(v24, v0 + 1960),
        sub_38B24(v28),
        sub_51DB8(v0 + 1960, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_51A3C), uint64_t v27 = (int *)&unk_A3F28, !v28))
  {
    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v28;
    *(void *)(v30 + 24) = v29;
    uint64_t v27 = (int *)&unk_A3F38;
  }
  *(void *)(v0 + 2584) = v30;
  __dsta = (uint64_t (*)(uint64_t))((char *)v27 + *v27);
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 2592) = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_487C8;
  return __dsta(v0 + 2544);
}

uint64_t sub_487C8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 2576);
  swift_task_dealloc();
  swift_release();
  *(void *)(v1 + 2600) = *(void *)(v1 + 2544);
  *(unsigned char *)(v1 + 225) = *(unsigned char *)(v1 + 2552);
  return _swift_task_switch(sub_48924, v2, 0);
}

uint64_t sub_48924()
{
  uint64_t v1 = *(void *)(v0 + 2568);
  uint64_t v2 = *(void *)(v0 + 2560);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_47360((void *)(v0 + 2392));
  uint64_t v4 = sub_46CD0((void *)(v0 + 2424), v2, v1);
  uint64_t v6 = v5;
  sub_1B4A0(v5, v0 + 880);
  sub_1B4A0(v0 + 880, v0 + 2176);
  if (sub_235FC(v0 + 2176) != 1)
  {
    char v7 = *(unsigned char *)(v0 + 225);
    *(void *)(v6 + 176) = *(void *)(v0 + 2600);
    *(unsigned char *)(v6 + 184) = v7;
  }
  ((void (*)(uint64_t, void))v4)(v0 + 2424, 0);
  swift_bridgeObjectRelease();
  v3((void **)(v0 + 2392), 0);
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_48A54(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  void *v3 = v2;
  v3[1] = sub_48B24;
  return v5();
}

uint64_t sub_48B24(uint64_t a1, char a2)
{
  uint64_t v5 = *(void *)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();
  *(void *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 8) = a2 & 1;
  uint64_t v6 = *(uint64_t (**)(void))(v8 + 8);
  return v6();
}

uint64_t sub_48C48(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_48C68, 0, 0);
}

uint64_t sub_48C68()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 8) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_48C8C()
{
  *(void *)(v1 + 2608) = v0;
  sub_14F50(&qword_A3500);
  *(void *)(v1 + 2616) = swift_task_alloc();
  return _swift_task_switch(sub_48D20, v0, 0);
}

uint64_t sub_48D20()
{
  id v1 = objc_msgSend(self, "ams_sharedAccountStoreForMediaType:", AMSAccountMediaTypeProduction);
  id v2 = objc_msgSend(v1, "ams_activeiTunesAccount");

  if (v2)
  {
    unsigned int v3 = [v2 isActive];
  }
  else
  {
    unsigned int v3 = 0;
  }
  uint64_t v4 = (__CFString *)sub_76BE0();
  uint64_t v5 = (__CFString *)sub_76BE0();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v4, v5, 0);

  if (!v3 || AppBooleanValue)
  {
    uint64_t v9 = *(void *)(v0 + 2608);
    if (*(unsigned char *)(v9 + 216))
    {
      uint64_t v10 = sub_4A0D4();
    }
    else
    {
      uint64_t v11 = *(void *)(v0 + 2616);
      uint64_t v10 = *(void *)(v9 + 208);
      uint64_t v12 = sub_76D70();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
      unint64_t v13 = sub_39E90();
      long long v14 = (void *)swift_allocObject();
      v14[2] = v9;
      v14[3] = v13;
      void v14[4] = v9;
      swift_retain_n();
      sub_52508(v11, (uint64_t)&unk_A3F18, (uint64_t)v14);
      swift_release();
    }
    if (v10 < 1)
    {
      long long v15 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_1A658(v10, v0 + 880);
      long long v15 = _swiftEmptyArrayStorage;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v15 = sub_4BB34(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
      }
      unint64_t v17 = v15[2];
      unint64_t v16 = v15[3];
      if (v17 >= v16 >> 1) {
        long long v15 = sub_4BB34((void *)(v16 > 1), v17 + 1, 1, v15);
      }
      _OWORD v15[2] = v17 + 1;
      long long v18 = &v15[27 * v17];
      long long v19 = *(_OWORD *)(v0 + 896);
      *((_OWORD *)v18 + 2) = *(_OWORD *)(v0 + 880);
      *((_OWORD *)v18 + 3) = v19;
      long long v20 = *(_OWORD *)(v0 + 912);
      long long v21 = *(_OWORD *)(v0 + 928);
      long long v22 = *(_OWORD *)(v0 + 960);
      *((_OWORD *)v18 + 6) = *(_OWORD *)(v0 + 944);
      *((_OWORD *)v18 + 7) = v22;
      *((_OWORD *)v18 + 4) = v20;
      *((_OWORD *)v18 + 5) = v21;
      long long v23 = *(_OWORD *)(v0 + 976);
      long long v24 = *(_OWORD *)(v0 + 992);
      long long v25 = *(_OWORD *)(v0 + 1024);
      *((_OWORD *)v18 + 10) = *(_OWORD *)(v0 + 1008);
      *((_OWORD *)v18 + 11) = v25;
      *((_OWORD *)v18 + 8) = v23;
      *((_OWORD *)v18 + 9) = v24;
      long long v26 = *(_OWORD *)(v0 + 1040);
      long long v27 = *(_OWORD *)(v0 + 1056);
      long long v28 = *(_OWORD *)(v0 + 1072);
      *((unsigned char *)v18 + 240) = *(unsigned char *)(v0 + 1088);
      *((_OWORD *)v18 + 13) = v27;
      *((_OWORD *)v18 + 14) = v28;
      *((_OWORD *)v18 + 12) = v26;
    }
    sub_1A9AC(v0 + 664);
    sub_1B4A0(v0 + 664, v0 + 1312);
    sub_1B4A0(v0 + 664, v0 + 232);
    if (sub_235FC(v0 + 232) != 1)
    {
      long long v29 = *(_OWORD *)(v0 + 408);
      *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 392);
      *(_OWORD *)(v0 + 192) = v29;
      *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 424);
      *(unsigned char *)(v0 + 224) = *(unsigned char *)(v0 + 440);
      long long v30 = *(_OWORD *)(v0 + 344);
      *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 328);
      *(_OWORD *)(v0 + 128) = v30;
      long long v31 = *(_OWORD *)(v0 + 376);
      *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 360);
      *(_OWORD *)(v0 + 160) = v31;
      long long v32 = *(_OWORD *)(v0 + 280);
      *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 264);
      *(_OWORD *)(v0 + 64) = v32;
      long long v33 = *(_OWORD *)(v0 + 312);
      *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 296);
      *(_OWORD *)(v0 + 96) = v33;
      long long v34 = *(_OWORD *)(v0 + 248);
      *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 232);
      *(_OWORD *)(v0 + 32) = v34;
      sub_1B4A0(v0 + 1312, v0 + 2392);
      sub_389F4(v0 + 2392);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v15 = sub_4BB34(0, v15[2] + 1, 1, v15);
      }
      unint64_t v36 = v15[2];
      unint64_t v35 = v15[3];
      if (v36 >= v35 >> 1) {
        long long v15 = sub_4BB34((void *)(v35 > 1), v36 + 1, 1, v15);
      }
      _OWORD v15[2] = v36 + 1;
      uint64_t v37 = &v15[27 * v36];
      long long v38 = *(_OWORD *)(v0 + 32);
      *((_OWORD *)v37 + 2) = *(_OWORD *)(v0 + 16);
      *((_OWORD *)v37 + 3) = v38;
      long long v39 = *(_OWORD *)(v0 + 48);
      long long v40 = *(_OWORD *)(v0 + 64);
      long long v41 = *(_OWORD *)(v0 + 96);
      *((_OWORD *)v37 + 6) = *(_OWORD *)(v0 + 80);
      *((_OWORD *)v37 + 7) = v41;
      *((_OWORD *)v37 + 4) = v39;
      *((_OWORD *)v37 + 5) = v40;
      long long v42 = *(_OWORD *)(v0 + 112);
      long long v43 = *(_OWORD *)(v0 + 128);
      long long v44 = *(_OWORD *)(v0 + 160);
      *((_OWORD *)v37 + 10) = *(_OWORD *)(v0 + 144);
      *((_OWORD *)v37 + 11) = v44;
      *((_OWORD *)v37 + 8) = v42;
      *((_OWORD *)v37 + 9) = v43;
      long long v45 = *(_OWORD *)(v0 + 176);
      long long v46 = *(_OWORD *)(v0 + 192);
      long long v47 = *(_OWORD *)(v0 + 208);
      *((unsigned char *)v37 + 240) = *(unsigned char *)(v0 + 224);
      *((_OWORD *)v37 + 13) = v46;
      *((_OWORD *)v37 + 14) = v47;
      *((_OWORD *)v37 + 12) = v45;
      sub_51DB8(v0 + 664, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_51A3C);
    }
    *(void *)(v0 + 2632) = v15;
    uint64_t v48 = *(void *)(v0 + 2608);
    unint64_t v49 = sub_39E90();
    uint64_t v50 = (void *)swift_task_alloc();
    *(void *)(v0 + 2640) = v50;
    uint64_t v51 = sub_14F50(&qword_A2F58);
    *uint64_t v50 = v0;
    v50[1] = sub_49810;
    uint64_t v52 = *(void *)(v0 + 2608);
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 1960, v48, v49, 0xD000000000000016, 0x8000000000087580, sub_51A34, v52, v51);
  }
  else
  {
    char v53 = (uint64_t (*)(uint64_t))((char *)&dword_A2F08 + dword_A2F08);
    char v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 2624) = v7;
    *char v7 = v0;
    v7[1] = sub_49284;
    return v53(v0 + 1096);
  }
}

uint64_t sub_49284()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 2608);
  swift_task_dealloc();
  return _swift_task_switch(sub_49394, v1, 0);
}

uint64_t sub_49394()
{
  uint64_t v1 = sub_4BB34(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_4BB34((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  v1[2] = v3 + 1;
  uint64_t v4 = &v1[27 * v3];
  long long v5 = *(_OWORD *)(v0 + 1112);
  *((_OWORD *)v4 + 2) = *(_OWORD *)(v0 + 1096);
  *((_OWORD *)v4 + 3) = v5;
  long long v6 = *(_OWORD *)(v0 + 1128);
  long long v7 = *(_OWORD *)(v0 + 1144);
  long long v8 = *(_OWORD *)(v0 + 1176);
  *((_OWORD *)v4 + 6) = *(_OWORD *)(v0 + 1160);
  *((_OWORD *)v4 + 7) = v8;
  *((_OWORD *)v4 + 4) = v6;
  *((_OWORD *)v4 + 5) = v7;
  long long v9 = *(_OWORD *)(v0 + 1192);
  long long v10 = *(_OWORD *)(v0 + 1208);
  long long v11 = *(_OWORD *)(v0 + 1240);
  *((_OWORD *)v4 + 10) = *(_OWORD *)(v0 + 1224);
  *((_OWORD *)v4 + 11) = v11;
  *((_OWORD *)v4 + 8) = v9;
  *((_OWORD *)v4 + 9) = v10;
  long long v12 = *(_OWORD *)(v0 + 1256);
  long long v13 = *(_OWORD *)(v0 + 1272);
  long long v14 = *(_OWORD *)(v0 + 1288);
  *((unsigned char *)v4 + 240) = *(unsigned char *)(v0 + 1304);
  *((_OWORD *)v4 + 13) = v13;
  *((_OWORD *)v4 + 14) = v14;
  *((_OWORD *)v4 + 12) = v12;
  uint64_t v15 = *(void *)(v0 + 2608);
  if (*(unsigned char *)(v15 + 216))
  {
    uint64_t v16 = sub_4A0D4();
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 2616);
    uint64_t v16 = *(void *)(v15 + 208);
    uint64_t v18 = sub_76D70();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    unint64_t v19 = sub_39E90();
    long long v20 = (void *)swift_allocObject();
    v20[2] = v15;
    v20[3] = v19;
    v20[4] = v15;
    swift_retain_n();
    sub_52508(v17, (uint64_t)&unk_A3F18, (uint64_t)v20);
    swift_release();
  }
  if (v16 >= 1)
  {
    sub_1A658(v16, v0 + 880);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v1 = sub_4BB34(0, v1[2] + 1, 1, v1);
    }
    unint64_t v22 = v1[2];
    unint64_t v21 = v1[3];
    if (v22 >= v21 >> 1) {
      uint64_t v1 = sub_4BB34((void *)(v21 > 1), v22 + 1, 1, v1);
    }
    v1[2] = v22 + 1;
    long long v23 = &v1[27 * v22];
    long long v24 = *(_OWORD *)(v0 + 896);
    *((_OWORD *)v23 + 2) = *(_OWORD *)(v0 + 880);
    *((_OWORD *)v23 + 3) = v24;
    long long v25 = *(_OWORD *)(v0 + 912);
    long long v26 = *(_OWORD *)(v0 + 928);
    long long v27 = *(_OWORD *)(v0 + 960);
    *((_OWORD *)v23 + 6) = *(_OWORD *)(v0 + 944);
    *((_OWORD *)v23 + 7) = v27;
    *((_OWORD *)v23 + 4) = v25;
    *((_OWORD *)v23 + 5) = v26;
    long long v28 = *(_OWORD *)(v0 + 976);
    long long v29 = *(_OWORD *)(v0 + 992);
    long long v30 = *(_OWORD *)(v0 + 1024);
    *((_OWORD *)v23 + 10) = *(_OWORD *)(v0 + 1008);
    *((_OWORD *)v23 + 11) = v30;
    *((_OWORD *)v23 + 8) = v28;
    *((_OWORD *)v23 + 9) = v29;
    long long v31 = *(_OWORD *)(v0 + 1040);
    long long v32 = *(_OWORD *)(v0 + 1056);
    long long v33 = *(_OWORD *)(v0 + 1072);
    *((unsigned char *)v23 + 240) = *(unsigned char *)(v0 + 1088);
    *((_OWORD *)v23 + 13) = v32;
    *((_OWORD *)v23 + 14) = v33;
    *((_OWORD *)v23 + 12) = v31;
  }
  sub_1A9AC(v0 + 664);
  sub_1B4A0(v0 + 664, v0 + 1312);
  sub_1B4A0(v0 + 664, v0 + 232);
  if (sub_235FC(v0 + 232) != 1)
  {
    long long v34 = *(_OWORD *)(v0 + 408);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 392);
    *(_OWORD *)(v0 + 192) = v34;
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 424);
    *(unsigned char *)(v0 + 224) = *(unsigned char *)(v0 + 440);
    long long v35 = *(_OWORD *)(v0 + 344);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 328);
    *(_OWORD *)(v0 + 128) = v35;
    long long v36 = *(_OWORD *)(v0 + 376);
    *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 360);
    *(_OWORD *)(v0 + 160) = v36;
    long long v37 = *(_OWORD *)(v0 + 280);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 264);
    *(_OWORD *)(v0 + 64) = v37;
    long long v38 = *(_OWORD *)(v0 + 312);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 296);
    *(_OWORD *)(v0 + 96) = v38;
    long long v39 = *(_OWORD *)(v0 + 248);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 232);
    *(_OWORD *)(v0 + 32) = v39;
    sub_1B4A0(v0 + 1312, v0 + 2392);
    sub_389F4(v0 + 2392);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v1 = sub_4BB34(0, v1[2] + 1, 1, v1);
    }
    unint64_t v41 = v1[2];
    unint64_t v40 = v1[3];
    if (v41 >= v40 >> 1) {
      uint64_t v1 = sub_4BB34((void *)(v40 > 1), v41 + 1, 1, v1);
    }
    v1[2] = v41 + 1;
    long long v42 = &v1[27 * v41];
    long long v43 = *(_OWORD *)(v0 + 32);
    *((_OWORD *)v42 + 2) = *(_OWORD *)(v0 + 16);
    *((_OWORD *)v42 + 3) = v43;
    long long v44 = *(_OWORD *)(v0 + 48);
    long long v45 = *(_OWORD *)(v0 + 64);
    long long v46 = *(_OWORD *)(v0 + 96);
    *((_OWORD *)v42 + 6) = *(_OWORD *)(v0 + 80);
    *((_OWORD *)v42 + 7) = v46;
    *((_OWORD *)v42 + 4) = v44;
    *((_OWORD *)v42 + 5) = v45;
    long long v47 = *(_OWORD *)(v0 + 112);
    long long v48 = *(_OWORD *)(v0 + 128);
    long long v49 = *(_OWORD *)(v0 + 160);
    *((_OWORD *)v42 + 10) = *(_OWORD *)(v0 + 144);
    *((_OWORD *)v42 + 11) = v49;
    *((_OWORD *)v42 + 8) = v47;
    *((_OWORD *)v42 + 9) = v48;
    long long v50 = *(_OWORD *)(v0 + 176);
    long long v51 = *(_OWORD *)(v0 + 192);
    long long v52 = *(_OWORD *)(v0 + 208);
    *((unsigned char *)v42 + 240) = *(unsigned char *)(v0 + 224);
    *((_OWORD *)v42 + 13) = v51;
    *((_OWORD *)v42 + 14) = v52;
    *((_OWORD *)v42 + 12) = v50;
    sub_51DB8(v0 + 664, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_51A3C);
  }
  *(void *)(v0 + 2632) = v1;
  uint64_t v53 = *(void *)(v0 + 2608);
  unint64_t v54 = sub_39E90();
  uint64_t v55 = (void *)swift_task_alloc();
  *(void *)(v0 + 2640) = v55;
  uint64_t v56 = sub_14F50(&qword_A2F58);
  *uint64_t v55 = v0;
  v55[1] = sub_49810;
  uint64_t v57 = *(void *)(v0 + 2608);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 1960, v53, v54, 0xD000000000000016, 0x8000000000087580, sub_51A34, v57, v56);
}

uint64_t sub_49810()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 2608);
  swift_task_dealloc();
  return _swift_task_switch(sub_49920, v1, 0);
}

uint64_t sub_49920()
{
  sub_1B4A0(v0 + 1960, v0 + 1744);
  sub_1B4A0(v0 + 1744, v0 + 1528);
  int v1 = sub_235FC(v0 + 1528);
  unint64_t v2 = *(void **)(v0 + 2632);
  if (v1 != 1)
  {
    sub_1B4A0(v0 + 1744, v0 + 2176);
    sub_389F4(v0 + 2176);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v2 = *(void **)(v0 + 2632);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v2 = sub_4BB34(0, v2[2] + 1, 1, *(void **)(v0 + 2632));
    }
    unint64_t v5 = v2[2];
    unint64_t v4 = v2[3];
    if (v5 >= v4 >> 1) {
      unint64_t v2 = sub_4BB34((void *)(v4 > 1), v5 + 1, 1, v2);
    }
    v2[2] = v5 + 1;
    long long v6 = &v2[27 * v5];
    long long v7 = *(_OWORD *)(v0 + 1544);
    *((_OWORD *)v6 + 2) = *(_OWORD *)(v0 + 1528);
    *((_OWORD *)v6 + 3) = v7;
    long long v8 = *(_OWORD *)(v0 + 1560);
    long long v9 = *(_OWORD *)(v0 + 1576);
    long long v10 = *(_OWORD *)(v0 + 1608);
    *((_OWORD *)v6 + 6) = *(_OWORD *)(v0 + 1592);
    *((_OWORD *)v6 + 7) = v10;
    *((_OWORD *)v6 + 4) = v8;
    *((_OWORD *)v6 + 5) = v9;
    long long v11 = *(_OWORD *)(v0 + 1624);
    long long v12 = *(_OWORD *)(v0 + 1640);
    long long v13 = *(_OWORD *)(v0 + 1672);
    *((_OWORD *)v6 + 10) = *(_OWORD *)(v0 + 1656);
    *((_OWORD *)v6 + 11) = v13;
    *((_OWORD *)v6 + 8) = v11;
    *((_OWORD *)v6 + 9) = v12;
    long long v14 = *(_OWORD *)(v0 + 1688);
    long long v15 = *(_OWORD *)(v0 + 1704);
    long long v16 = *(_OWORD *)(v0 + 1720);
    *((unsigned char *)v6 + 240) = *(unsigned char *)(v0 + 1736);
    *((_OWORD *)v6 + 13) = v15;
    *((_OWORD *)v6 + 14) = v16;
    *((_OWORD *)v6 + 12) = v14;
  }
  if (STStorageIsInternalInstall())
  {
    uint64_t v17 = *(void *)(*(void *)(v0 + 2608) + 144);
    if (v17 != 0x8000000000000000 && (unint64_t)(v17 - 0x4A817C801) <= 0xFFFFFFFB938301FELL)
    {
      sub_19910(v17, v0 + 448);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v2 = sub_4BB34(0, v2[2] + 1, 1, v2);
      }
      unint64_t v20 = v2[2];
      unint64_t v19 = v2[3];
      if (v20 >= v19 >> 1) {
        unint64_t v2 = sub_4BB34((void *)(v19 > 1), v20 + 1, 1, v2);
      }
      v2[2] = v20 + 1;
      unint64_t v21 = &v2[27 * v20];
      long long v22 = *(_OWORD *)(v0 + 464);
      *((_OWORD *)v21 + 2) = *(_OWORD *)(v0 + 448);
      *((_OWORD *)v21 + 3) = v22;
      long long v23 = *(_OWORD *)(v0 + 480);
      long long v24 = *(_OWORD *)(v0 + 496);
      long long v25 = *(_OWORD *)(v0 + 528);
      *((_OWORD *)v21 + 6) = *(_OWORD *)(v0 + 512);
      *((_OWORD *)v21 + 7) = v25;
      *((_OWORD *)v21 + 4) = v23;
      *((_OWORD *)v21 + 5) = v24;
      long long v26 = *(_OWORD *)(v0 + 544);
      long long v27 = *(_OWORD *)(v0 + 560);
      long long v28 = *(_OWORD *)(v0 + 592);
      *((_OWORD *)v21 + 10) = *(_OWORD *)(v0 + 576);
      *((_OWORD *)v21 + 11) = v28;
      *((_OWORD *)v21 + 8) = v26;
      *((_OWORD *)v21 + 9) = v27;
      long long v29 = *(_OWORD *)(v0 + 608);
      long long v30 = *(_OWORD *)(v0 + 624);
      long long v31 = *(_OWORD *)(v0 + 640);
      *((unsigned char *)v21 + 240) = *(unsigned char *)(v0 + 656);
      *((_OWORD *)v21 + 13) = v30;
      *((_OWORD *)v21 + 14) = v31;
      *((_OWORD *)v21 + 12) = v29;
    }
  }
  sub_51DB8(v0 + 1744, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_51A3C);
  swift_task_dealloc();
  long long v32 = *(uint64_t (**)(void *))(v0 + 8);
  return v32(v2);
}

void sub_49B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A3F20);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  long long v7 = *(void **)(a2 + 128);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_51C7C;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_49FC8;
  aBlock[3] = &unk_97AA8;
  long long v10 = _Block_copy(aBlock);
  swift_release();
  [v7 fetchProposedTipWithCompletionHandler:v10];
  _Block_release(v10);
}

void sub_49D48(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v2 = a1;
    sub_1B064(v2, (uint64_t)v11);
    nullsub_1(v11);
    sub_1B4A0((uint64_t)v11, (uint64_t)v10);
    sub_14F50(&qword_A3F20);
    sub_76D20();
  }
  else
  {
    if (qword_A2C20 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_76200();
    sub_1A620(v4, (uint64_t)qword_A6A58);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v5 = sub_761F0();
    os_log_type_t v6 = sub_76DC0();
    if (os_log_type_enabled(v5, v6))
    {
      long long v7 = (uint8_t *)swift_slowAlloc();
      unint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v7 = 138412290;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
        v11[0] = v9;
        sub_76E20();
      }
      else
      {
        v11[0] = 0;
        sub_76E20();
        uint64_t v9 = 0;
      }
      *unint64_t v8 = v9;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v5, v6, "Failed to retrieve maps recommendation with error %@", v7, 0xCu);
      sub_14F50(&qword_A3650);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    sub_1B478((uint64_t)v11);
    sub_1B4A0((uint64_t)v11, (uint64_t)v10);
    sub_14F50(&qword_A3F20);
    sub_76D20();
  }
}

void sub_49FC8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_4A054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_4A074, a4, 0);
}

uint64_t sub_4A074()
{
  sub_4A0D4();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_4A0D4()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  NSString v2 = sub_76BE0();
  v7[4] = sub_51A10;
  v7[5] = v1;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_327A8;
  v7[3] = &unk_979E0;
  uint64_t v3 = _Block_copy(v7);
  swift_retain();
  swift_release();
  CacheManagementEnumerateAssets();
  _Block_release(v3);

  uint64_t v4 = *(void *)(v0 + 208);
  LOBYTE(v3) = *(unsigned char *)(v0 + 216);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 16);
  if ((v3 & 1) != 0 || v4 != v5)
  {
    *(void *)(v0 + 208) = v5;
    *(unsigned char *)(v0 + 216) = 0;
    sub_474F4();
    uint64_t v4 = *(void *)(v1 + 16);
  }
  swift_release();
  return v4;
}

uint64_t sub_4A224(void *a1, uint64_t a2)
{
  id v4 = [a1 identifier];
  uint64_t v5 = sub_76C10();
  uint64_t v7 = v6;

  if (v5 == 0x6C7070612E6D6F63 && v7 == 0xEE007377656E2E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  char v9 = sub_77050();
  swift_bridgeObjectRelease();
  if (v9) {
    return 1;
  }
  long long v10 = (void *)(a2 + 16);
  if ([a1 purgeabilityScoreAtUrgency:3]) {
    id v11 = 0;
  }
  else {
    id v11 = [a1 size];
  }
  uint64_t result = swift_beginAccess();
  if (!__OFADD__(*v10, v11))
  {
    *v10 += v11;
    return 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_4A378()
{
  *(void *)(v1 + 592) = v0;
  sub_14F50(&qword_A3500);
  *(void *)(v1 + 600) = swift_task_alloc();
  return _swift_task_switch(sub_4A40C, v0, 0);
}

uint64_t sub_4A40C()
{
  uint64_t v1 = v0[74];
  if (*(unsigned char *)(v1 + 200))
  {
    swift_task_dealloc();
    NSString v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    *(unsigned char *)(v1 + 200) = 1;
    id v4 = [*(id *)(v1 + 112) recommendations];
    sub_1B618(0, &qword_A3EC8);
    sub_4B490();
    uint64_t v5 = sub_76D80();

    swift_retain();
    uint64_t v6 = sub_51258(v5);
    swift_bridgeObjectRelease();
    swift_release();
    v0[73] = v6;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[76] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_4A58C;
    return sub_48C8C();
  }
}

uint64_t sub_4A58C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 592);
  *(void *)(*(void *)v1 + 616) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_4A6A4, v2, 0);
}

uint64_t sub_4A6A4()
{
  sub_46F74(*(void *)(v0 + 616));
  uint64_t v1 = *(void *)(v0 + 584);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (_OWORD *)(v0 + 232);
    swift_bridgeObjectRetain_n();
    long long v4 = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(v0 + 232) = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v0 + 248) = v4;
    long long v5 = *(_OWORD *)(v1 + 112);
    long long v7 = *(_OWORD *)(v1 + 64);
    long long v6 = *(_OWORD *)(v1 + 80);
    *(_OWORD *)(v0 + 296) = *(_OWORD *)(v1 + 96);
    *(_OWORD *)(v0 + 312) = v5;
    *(_OWORD *)(v0 + 264) = v7;
    *(_OWORD *)(v0 + 280) = v6;
    long long v8 = *(_OWORD *)(v1 + 176);
    long long v10 = *(_OWORD *)(v1 + 128);
    long long v9 = *(_OWORD *)(v1 + 144);
    *(_OWORD *)(v0 + 360) = *(_OWORD *)(v1 + 160);
    *(_OWORD *)(v0 + 376) = v8;
    *(_OWORD *)(v0 + 328) = v10;
    *(_OWORD *)(v0 + 344) = v9;
    long long v12 = *(_OWORD *)(v1 + 208);
    long long v11 = *(_OWORD *)(v1 + 224);
    long long v13 = *(_OWORD *)(v1 + 192);
    *(unsigned char *)(v0 + 440) = *(unsigned char *)(v1 + 240);
    *(_OWORD *)(v0 + 408) = v12;
    *(_OWORD *)(v0 + 424) = v11;
    *(_OWORD *)(v0 + 392) = v13;
    uint64_t v85 = v2 - 1;
    for (uint64_t i = 248; ; i += 216)
    {
      uint64_t v15 = *(void *)(v0 + 232);
      uint64_t v14 = *(void *)(v0 + 240);
      sub_389F4(v0 + 232);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v18 = sub_4BC5C(v15, v14);
      uint64_t v19 = _swiftEmptyDictionarySingleton[2];
      BOOL v20 = (v17 & 1) == 0;
      uint64_t result = v19 + v20;
      if (__OFADD__(v19, v20))
      {
        __break(1u);
LABEL_30:
        __break(1u);
        return result;
      }
      char v22 = v17;
      if (_swiftEmptyDictionarySingleton[3] >= result)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v17) {
            goto LABEL_10;
          }
        }
        else
        {
          uint64_t result = (uint64_t)sub_4F9AC();
          if (v22) {
            goto LABEL_10;
          }
        }
      }
      else
      {
        sub_4DF08(result, isUniquelyReferenced_nonNull_native);
        uint64_t result = sub_4BC5C(v15, v14);
        if ((v22 & 1) != (v23 & 1))
        {
          return sub_77080();
        }
        unint64_t v18 = result;
        if (v22)
        {
LABEL_10:
          uint64_t v24 = _swiftEmptyDictionarySingleton[7] + 216 * v18;
          long long v25 = *(_OWORD *)(v24 + 16);
          *(_OWORD *)(v0 + 16) = *(_OWORD *)v24;
          *(_OWORD *)(v0 + 32) = v25;
          long long v26 = *(_OWORD *)(v24 + 80);
          long long v28 = *(_OWORD *)(v24 + 32);
          long long v27 = *(_OWORD *)(v24 + 48);
          *(_OWORD *)(v0 + 80) = *(_OWORD *)(v24 + 64);
          *(_OWORD *)(v0 + 96) = v26;
          *(_OWORD *)(v0 + 48) = v28;
          *(_OWORD *)(v0 + 64) = v27;
          long long v29 = *(_OWORD *)(v24 + 144);
          long long v31 = *(_OWORD *)(v24 + 96);
          long long v30 = *(_OWORD *)(v24 + 112);
          *(_OWORD *)(v0 + 144) = *(_OWORD *)(v24 + 128);
          *(_OWORD *)(v0 + 160) = v29;
          *(_OWORD *)(v0 + 112) = v31;
          *(_OWORD *)(v0 + 128) = v30;
          long long v33 = *(_OWORD *)(v24 + 176);
          long long v32 = *(_OWORD *)(v24 + 192);
          long long v34 = *(_OWORD *)(v24 + 160);
          *(unsigned char *)(v0 + 224) = *(unsigned char *)(v24 + 208);
          *(_OWORD *)(v0 + 192) = v33;
          *(_OWORD *)(v0 + 208) = v32;
          *(_OWORD *)(v0 + 176) = v34;
          sub_38B34(v0 + 16);
          long long v35 = *(_OWORD *)(v0 + 248);
          *(_OWORD *)uint64_t v24 = *v3;
          *(_OWORD *)(v24 + 16) = v35;
          long long v36 = *(_OWORD *)(v0 + 312);
          long long v38 = *(_OWORD *)(v0 + 264);
          long long v37 = *(_OWORD *)(v0 + 280);
          *(_OWORD *)(v24 + 64) = *(_OWORD *)(v0 + 296);
          *(_OWORD *)(v24 + 80) = v36;
          *(_OWORD *)(v24 + 32) = v38;
          *(_OWORD *)(v24 + 48) = v37;
          long long v39 = *(_OWORD *)(v0 + 376);
          long long v41 = *(_OWORD *)(v0 + 328);
          long long v40 = *(_OWORD *)(v0 + 344);
          *(_OWORD *)(v24 + 128) = *(_OWORD *)(v0 + 360);
          *(_OWORD *)(v24 + 144) = v39;
          *(_OWORD *)(v24 + 96) = v41;
          *(_OWORD *)(v24 + 112) = v40;
          long long v43 = *(_OWORD *)(v0 + 408);
          long long v42 = *(_OWORD *)(v0 + 424);
          long long v44 = *(_OWORD *)(v0 + 392);
          *(unsigned char *)(v24 + 208) = *(unsigned char *)(v0 + 440);
          *(_OWORD *)(v24 + 176) = v43;
          *(_OWORD *)(v24 + 192) = v42;
          *(_OWORD *)(v24 + 160) = v44;
          goto LABEL_14;
        }
      }
      _swiftEmptyDictionarySingleton[(v18 >> 6) + 8] |= 1 << v18;
      long long v45 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v18);
      *long long v45 = v15;
      v45[1] = v14;
      uint64_t v46 = _swiftEmptyDictionarySingleton[7] + 216 * v18;
      char v47 = *(unsigned char *)(v0 + 440);
      long long v49 = *(_OWORD *)(v0 + 408);
      long long v48 = *(_OWORD *)(v0 + 424);
      *(_OWORD *)(v46 + 160) = *(_OWORD *)(v0 + 392);
      *(_OWORD *)(v46 + 176) = v49;
      *(_OWORD *)(v46 + 192) = v48;
      *(unsigned char *)(v46 + 208) = v47;
      long long v51 = *(_OWORD *)(v0 + 360);
      long long v50 = *(_OWORD *)(v0 + 376);
      long long v52 = *(_OWORD *)(v0 + 344);
      *(_OWORD *)(v46 + 96) = *(_OWORD *)(v0 + 328);
      *(_OWORD *)(v46 + 112) = v52;
      *(_OWORD *)(v46 + 128) = v51;
      *(_OWORD *)(v46 + 144) = v50;
      long long v54 = *(_OWORD *)(v0 + 296);
      long long v53 = *(_OWORD *)(v0 + 312);
      long long v55 = *(_OWORD *)(v0 + 280);
      *(_OWORD *)(v46 + 32) = *(_OWORD *)(v0 + 264);
      *(_OWORD *)(v46 + 48) = v55;
      *(_OWORD *)(v46 + 64) = v54;
      *(_OWORD *)(v46 + 80) = v53;
      long long v56 = *(_OWORD *)(v0 + 248);
      *(_OWORD *)uint64_t v46 = *v3;
      *(_OWORD *)(v46 + 16) = v56;
      uint64_t v57 = _swiftEmptyDictionarySingleton[2];
      BOOL v58 = __OFADD__(v57, 1);
      uint64_t v59 = v57 + 1;
      if (v58) {
        goto LABEL_30;
      }
      _swiftEmptyDictionarySingleton[2] = v59;
      swift_bridgeObjectRetain();
LABEL_14:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v85)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      long long v60 = *(_OWORD *)(v1 + i + 16);
      _OWORD *v3 = *(_OWORD *)(v1 + i);
      *(_OWORD *)(v0 + 248) = v60;
      long long v61 = *(_OWORD *)(v1 + i + 32);
      long long v62 = *(_OWORD *)(v1 + i + 48);
      long long v63 = *(_OWORD *)(v1 + i + 80);
      *(_OWORD *)(v0 + 296) = *(_OWORD *)(v1 + i + 64);
      *(_OWORD *)(v0 + 312) = v63;
      *(_OWORD *)(v0 + 264) = v61;
      *(_OWORD *)(v0 + 280) = v62;
      long long v64 = *(_OWORD *)(v1 + i + 96);
      long long v65 = *(_OWORD *)(v1 + i + 112);
      long long v66 = *(_OWORD *)(v1 + i + 144);
      *(_OWORD *)(v0 + 360) = *(_OWORD *)(v1 + i + 128);
      *(_OWORD *)(v0 + 376) = v66;
      *(_OWORD *)(v0 + 328) = v64;
      *(_OWORD *)(v0 + 344) = v65;
      long long v67 = *(_OWORD *)(v1 + i + 160);
      long long v68 = *(_OWORD *)(v1 + i + 176);
      long long v69 = *(_OWORD *)(v1 + i + 192);
      *(unsigned char *)(v0 + 440) = *(unsigned char *)(v1 + i + 208);
      *(_OWORD *)(v0 + 408) = v68;
      *(_OWORD *)(v0 + 424) = v69;
      *(_OWORD *)(v0 + 392) = v67;
      --v85;
    }
  }
  swift_bridgeObjectRetain();
LABEL_18:
  uint64_t v70 = *(void *)(v0 + 600);
  uint64_t v71 = *(void *)(v0 + 592);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v71 + 120) = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  uint64_t v72 = sub_76D70();
  uint64_t v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56);
  v73(v70, 1, 1, v72);
  unint64_t v74 = sub_39E90();
  uint64_t v75 = (void *)swift_allocObject();
  v75[2] = v71;
  v75[3] = v74;
  v75[4] = v71;
  swift_retain_n();
  sub_526AC(v70, (uint64_t)&unk_A3EE0, (uint64_t)v75);
  swift_release();
  uint64_t v76 = *(void *)(v0 + 584);
  if (*(void *)(v76 + 16))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v77 = *(void *)(v0 + 592) + 160;
    swift_beginAccess();
    sub_15144(v77, v0 + 448, &qword_A36C0);
    if (*(void *)(v0 + 472))
    {
      uint64_t v78 = *(void *)(v0 + 600);
      sub_39D88(v0 + 448, v0 + 488);
      sub_151A8(v0 + 448, &qword_A36C0);
      uint64_t v79 = (void *)*sub_515AC((void *)(v0 + 488), *(void *)(v0 + 512));
      v73(v78, 1, 1, v72);
      sub_76D40();
      id v80 = v79;
      swift_bridgeObjectRetain();
      uint64_t v81 = sub_76D30();
      unint64_t v82 = (void *)swift_allocObject();
      v82[2] = v81;
      v82[3] = &protocol witness table for MainActor;
      v82[4] = v80;
      v82[5] = v76;
      sub_52508(v78, (uint64_t)&unk_A3EE8, (uint64_t)v82);
      swift_bridgeObjectRelease();
      swift_release();
      sub_39B20(v0 + 488);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_151A8(v0 + 448, &qword_A36C0);
    }
  }
  *(unsigned char *)(*(void *)(v0 + 592) + 200) = 0;
  swift_task_dealloc();
  uint64_t v83 = *(uint64_t (**)(void))(v0 + 8);
  return v83();
}

uint64_t sub_4AC70()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v2 - 8);
  long long v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_76D70();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  long long v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_151A8((uint64_t)v4, &qword_A3500);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_76D60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_76D10();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_A3EC0;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_4AEB4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_25054;
  return sub_4A378();
}

uint64_t sub_4AF80(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(double *)(v7 + 536) = a1;
  *(void *)(v7 + 528) = a7;
  *(void *)(v7 + 520) = a6;
  *(void *)(v7 + 512) = a5;
  return _swift_task_switch(sub_4AFAC, a5, 0);
}

uint64_t sub_4AFAC()
{
  uint64_t v1 = *(void *)(v0 + 528);
  uint64_t v2 = *(void *)(v0 + 520);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_47360((void *)(v0 + 448));
  long long v4 = sub_46CD0((void *)(v0 + 480), v2, v1);
  uint64_t v6 = v5;
  sub_1B4A0(v5, v0 + 232);
  sub_1B4A0(v0 + 232, v0 + 16);
  if (sub_235FC(v0 + 16) != 1)
  {
    double v7 = *(double *)(v0 + 536);
    uint64_t v8 = *(void *)&v7;
    if (v7 == 1.0) {
      uint64_t v8 = 1;
    }
    *(void *)(v6 + 176) = v8;
    *(unsigned char *)(v6 + 184) = v7 == 1.0;
  }
  ((void (*)(uint64_t, void))v4)(v0 + 480, 0);
  swift_bridgeObjectRelease();
  v3((void **)(v0 + 448), 0);
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_4B238()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_151A8(v0 + 160, &qword_A36C0);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for RecommendationController()
{
  return self;
}

uint64_t sub_4B2BC()
{
  return v0;
}

uint64_t sub_4B2CC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_25054;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  void *v2 = v1;
  v2[1] = sub_25054;
  return sub_4A378();
}

uint64_t sub_4B3A0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_4B3D8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25054;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_A4050 + dword_A4050);
  return v6(a1, v4);
}

unint64_t sub_4B490()
{
  unint64_t result = qword_A3ED0;
  if (!qword_A3ED0)
  {
    sub_1B618(255, &qword_A3EC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_A3ED0);
  }
  return result;
}

uint64_t sub_4B4F8(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (result) {
    return _swift_stdlib_bridgeErrorToNSError();
  }
  return result;
}

uint64_t sub_4B528(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_4B8B4(a1, a2, a3, a4, &qword_A3710, (uint64_t (*)(void))type metadata accessor for Application, (uint64_t (*)(void))type metadata accessor for Application);
}

void *sub_4B54C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_14F50(&qword_A34F8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      uint64_t v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      long long v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_51164(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_4B65C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_14F50(&qword_A3598);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      uint64_t v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_521EC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_4B780(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_14F50(&qword_A3F90);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      uint64_t v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      long long v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_51814(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_4B890(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_4B8B4(a1, a2, a3, a4, &qword_A3F98, (uint64_t (*)(void))type metadata accessor for SyncedContent, (uint64_t (*)(void))type metadata accessor for SyncedContent);
}

uint64_t sub_4B8B4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_14F50(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_76FA0();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_522E4(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_4BB34(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_14F50(&qword_A34F0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      uint64_t v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 216);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[27 * v8 + 4]) {
          memmove(v12, a4 + 4, 216 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_51900(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_4BC5C(uint64_t a1, uint64_t a2)
{
  sub_770C0();
  sub_76C40();
  Swift::Int v4 = sub_77100();

  return sub_4BDAC(a1, a2, v4);
}

unint64_t sub_4BCD4(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_76F10(*(void *)(v2 + 40));

  return sub_4BE90(a1, v4);
}

unint64_t sub_4BD18(uint64_t a1)
{
  sub_76C10();
  sub_770C0();
  sub_76C40();
  Swift::Int v2 = sub_77100();
  swift_bridgeObjectRelease();

  return sub_4BF58(a1, v2);
}

unint64_t sub_4BDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_77050() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_77050() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_4BE90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_52440(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_76F20();
      sub_5249C((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_4BF58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_76C10();
    uint64_t v8 = v7;
    if (v6 == sub_76C10() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_77050();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_76C10();
          uint64_t v15 = v14;
          if (v13 == sub_76C10() && v15 == v16) {
            break;
          }
          char v18 = sub_77050();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

void *sub_4C0D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_14F50(&qword_A34F8);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_50698((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_3937C();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_4C1B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_14F50(&qword_A35C0);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 88);
  uint64_t v5 = sub_50898(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_3937C();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_4C2B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_14F50(&qword_A34F0);
  uint64_t v3 = swift_allocObject();
  size_t v4 = j__malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 216);
  uint64_t v5 = sub_50B2C(&v7, (char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_3937C();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

void *sub_4C3B0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 40 * a3;
        if (v10 < (unint64_t)&v8[5 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 40 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return v8;
      }
    }
    else
    {
      sub_14F50(&qword_A35C8);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 40);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (void *)sub_76FF0();
  __break(1u);
  return result;
}

void *sub_4C53C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 216 * a3;
        if (v10 < (unint64_t)&v8[27 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 216 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return v8;
      }
    }
    else
    {
      sub_14F50(&qword_A34F0);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 216);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (void *)sub_76FF0();
  __break(1u);
  return result;
}

void *sub_4C6CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  if (v5 <= 0)
  {
    char v11 = _swiftEmptyArrayStorage;
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(type metadata accessor for Application() - 8);
      uint64_t v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      size_t v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_14F50(&qword_A3710);
  uint64_t v8 = *(void *)(type metadata accessor for Application() - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  char v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = (void *)sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_4C90C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Application();
  uint64_t v42 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_14F50(&qword_A35E0);
  int v43 = a2;
  uint64_t v9 = sub_76FD0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_39;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  long long v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v17++, 1)) {
      goto LABEL_41;
    }
    if (v17 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v17];
    if (!v24)
    {
      int64_t v25 = v17 + 1;
      if (v17 + 1 >= v40)
      {
LABEL_32:
        swift_release();
        uint64_t v3 = v39;
        if ((v43 & 1) == 0) {
          goto LABEL_39;
        }
        goto LABEL_35;
      }
      unint64_t v24 = v41[v25];
      if (!v24)
      {
        while (1)
        {
          int64_t v17 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            break;
          }
          if (v17 >= v40) {
            goto LABEL_32;
          }
          unint64_t v24 = v41[v17];
          ++v25;
          if (v24) {
            goto LABEL_19;
          }
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v17;
    }
LABEL_19:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_20:
    long long v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_22D9C(v30, (uint64_t)v7);
    }
    else
    {
      sub_22680(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_770C0();
    sub_76C40();
    uint64_t result = sub_77100();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    size_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    void *v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_22D9C((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_35:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_39:
  uint64_t result = swift_release();
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_4CC98(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_14F50(&qword_A35D0);
  char v50 = a2;
  uint64_t v6 = sub_76FD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  long long v48 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v46 = v2;
  int64_t v47 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      if (v50) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v47) {
      break;
    }
    uint64_t v27 = v48;
    unint64_t v28 = v48[v26];
    ++v13;
    if (!v28)
    {
      int64_t v13 = v26 + 1;
      if (v26 + 1 >= v47) {
        goto LABEL_33;
      }
      unint64_t v28 = v48[v13];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v47)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v46;
          if ((v50 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v28 = v48[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v13 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v47) {
              goto LABEL_33;
            }
            unint64_t v28 = v48[v13];
            ++v29;
            if (v28) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v29;
      }
    }
LABEL_22:
    unint64_t v10 = (v28 - 1) & v28;
    unint64_t v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if (v50)
    {
LABEL_10:
      size_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = *(void *)(v5 + 56) + 144 * v18;
      uint64_t v23 = *(void *)v22;
      uint64_t v24 = *(void *)(v22 + 8);
      uint64_t v25 = *(void *)(v22 + 24);
      uint64_t v52 = *(void *)(v22 + 40);
      uint64_t v53 = *(void *)(v22 + 16);
      uint64_t v59 = *(void *)(v22 + 56);
      char v56 = *(unsigned char *)(v22 + 64);
      uint64_t v54 = *(void *)(v22 + 72);
      uint64_t v55 = *(void *)(v22 + 32);
      uint64_t v51 = *(void *)(v22 + 80);
      uint64_t v60 = *(void *)(v22 + 88);
      uint64_t v61 = *(void *)(v22 + 48);
      uint64_t v57 = *(void *)(v22 + 96);
      long long v58 = *(_OWORD *)(v22 + 112);
      uint64_t v62 = *(void *)(v22 + 104);
      long long v63 = *(_OWORD *)(v22 + 128);
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v20 = *v30;
    uint64_t v21 = v30[1];
    uint64_t v31 = (long long *)(*(void *)(v5 + 56) + 144 * v18);
    long long v64 = *v31;
    long long v32 = v31[4];
    long long v34 = v31[1];
    long long v33 = v31[2];
    long long v67 = v31[3];
    long long v68 = v32;
    long long v65 = v34;
    long long v66 = v33;
    long long v35 = v31[8];
    long long v37 = v31[5];
    long long v36 = v31[6];
    long long v71 = v31[7];
    long long v72 = v35;
    long long v69 = v37;
    long long v70 = v36;
    long long v63 = v35;
    long long v58 = v71;
    uint64_t v57 = v36;
    uint64_t v61 = v67;
    uint64_t v62 = *((void *)&v36 + 1);
    uint64_t v59 = *((void *)&v67 + 1);
    uint64_t v60 = *((void *)&v37 + 1);
    char v56 = v68;
    uint64_t v25 = *((void *)&v65 + 1);
    uint64_t v54 = *((void *)&v68 + 1);
    uint64_t v55 = v66;
    uint64_t v51 = v37;
    uint64_t v52 = *((void *)&v66 + 1);
    uint64_t v24 = *((void *)&v64 + 1);
    uint64_t v53 = v65;
    uint64_t v23 = v64;
    swift_bridgeObjectRetain();
    sub_22E04((uint64_t)&v64);
LABEL_24:
    sub_770C0();
    sub_76C40();
    uint64_t result = sub_77100();
    uint64_t v38 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v39 = result & ~v38;
    unint64_t v40 = v39 >> 6;
    if (((-1 << v39) & ~*(void *)(v11 + 8 * (v39 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v39) & ~*(void *)(v11 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v41 = 0;
      unint64_t v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v43 = v40 == v42;
        if (v40 == v42) {
          unint64_t v40 = 0;
        }
        v41 |= v43;
        uint64_t v44 = *(void *)(v11 + 8 * v40);
      }
      while (v44 == -1);
      unint64_t v14 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *uint64_t v15 = v20;
    v15[1] = v21;
    uint64_t v16 = *(void *)(v7 + 56) + 144 * v14;
    *(void *)uint64_t v16 = v23;
    *(void *)(v16 + 8) = v24;
    *(void *)(v16 + 16) = v53;
    *(void *)(v16 + 24) = v25;
    *(void *)(v16 + 32) = v55;
    *(void *)(v16 + 40) = v52;
    *(void *)(v16 + 48) = v61;
    *(void *)(v16 + 56) = v59;
    *(unsigned char *)(v16 + 64) = v56;
    *(void *)(v16 + 72) = v54;
    *(void *)(v16 + 80) = v51;
    *(void *)(v16 + 88) = v60;
    *(void *)(v16 + 96) = v57;
    *(void *)(v16 + 104) = v62;
    *(_OWORD *)(v16 + 112) = v58;
    *(_OWORD *)(v16 + 128) = v63;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v46;
  uint64_t v27 = v48;
  if ((v50 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v45 = 1 << *(unsigned char *)(v5 + 32);
  if (v45 >= 64) {
    bzero(v27, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v27 = -1 << v45;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_4D11C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_14F50(&qword_A3700);
  char v37 = a2;
  uint64_t v6 = sub_76FD0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    long long v34 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    long long v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35) {
          goto LABEL_33;
        }
        unint64_t v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v23 = v36[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v34;
              if (v37)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v23 = v36[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void **)(*(void *)(v5 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        id v32 = v30;
        swift_retain();
      }
      sub_76C10();
      sub_770C0();
      sub_76C40();
      Swift::Int v14 = sub_77100();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v7 + 48) + v19) = v30;
      *(void *)(*(void *)(v7 + 56) + v19) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_4D43C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_14F50(&qword_A3708);
  char v34 = a2;
  uint64_t v6 = sub_76FD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v32) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v33 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v32)
        {
LABEL_33:
          swift_release();
          if ((v34 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v33 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v32) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v33 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = *(void **)(*(void *)(v5 + 48) + 8 * v20);
    long long v35 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
    if ((v34 & 1) == 0) {
      id v30 = v29;
    }
    sub_76C10();
    sub_770C0();
    sub_76C40();
    Swift::Int v14 = sub_77100();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v29;
    *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v35;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v34 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_4D768(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_14F50(&qword_A3FA0);
  char v44 = a2;
  uint64_t v6 = sub_76FD0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v42 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v41 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v43 = v5;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v45 = v13;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v41) {
          goto LABEL_33;
        }
        unint64_t v23 = v42[v22];
        int64_t v24 = v13 + 1;
        if (!v23)
        {
          int64_t v24 = v13 + 2;
          if (v13 + 2 >= v41) {
            goto LABEL_33;
          }
          unint64_t v23 = v42[v24];
          if (!v23)
          {
            uint64_t v25 = v13 + 3;
            if (v13 + 3 >= v41)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v44)
              {
                uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
                if (v40 >= 64) {
                  bzero(v42, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v42 = -1 << v40;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v42[v25];
            if (!v23)
            {
              while (1)
              {
                int64_t v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v24 >= v41) {
                  goto LABEL_33;
                }
                unint64_t v23 = v42[v24];
                ++v25;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v24 = v13 + 3;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        int64_t v45 = v24;
        unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      uint64_t v30 = *(void *)(v5 + 56);
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      char v34 = (uint64_t *)(v30 + 88 * v21);
      uint64_t v35 = v34[1];
      uint64_t v46 = *v34;
      uint64_t v36 = v34[3];
      uint64_t v37 = v34[5];
      uint64_t v51 = v34[4];
      uint64_t v52 = v34[2];
      char v49 = *((unsigned char *)v34 + 49);
      char v50 = *((unsigned char *)v34 + 48);
      uint64_t v48 = v34[7];
      uint64_t v38 = v34[8];
      uint64_t v39 = v34[9];
      char v47 = *((unsigned char *)v34 + 80);
      if ((v44 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_770C0();
      sub_76C40();
      uint64_t result = sub_77100();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v16 == v27;
          if (v16 == v27) {
            unint64_t v16 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      void *v18 = v33;
      v18[1] = v32;
      uint64_t v19 = *(void *)(v7 + 56) + 88 * v17;
      *(void *)uint64_t v19 = v46;
      *(void *)(v19 + 8) = v35;
      *(void *)(v19 + 16) = v52;
      *(void *)(v19 + 24) = v36;
      *(void *)(v19 + 32) = v51;
      *(void *)(v19 + 40) = v37;
      *(unsigned char *)(v19 + 48) = v50;
      *(unsigned char *)(v19 + 49) = v49;
      *(void *)(v19 + 56) = v48;
      *(void *)(v19 + 64) = v38;
      *(void *)(v19 + 72) = v39;
      *(unsigned char *)(v19 + 80) = v47;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v43;
      int64_t v13 = v45;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_4DB20(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = sub_76070();
  uint64_t v5 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_14F50(&qword_A36E8);
  int v47 = a2;
  uint64_t v8 = sub_76FD0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  char v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  unint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  int64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    unint64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    BOOL v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_770C0();
    sub_76C40();
    uint64_t result = sub_77100();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    void *v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v9;
  return result;
}

uint64_t sub_4DF08(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_14F50(&qword_A36D8);
  char v54 = a2;
  uint64_t v6 = sub_76FD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v52 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v50 = v2;
  int64_t v51 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      if (v54) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v51) {
      break;
    }
    uint64_t v27 = v52;
    unint64_t v28 = v52[v26];
    ++v13;
    if (!v28)
    {
      int64_t v13 = v26 + 1;
      if (v26 + 1 >= v51) {
        goto LABEL_33;
      }
      unint64_t v28 = v52[v13];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v51)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v50;
          if ((v54 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v28 = v52[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v13 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v51) {
              goto LABEL_33;
            }
            unint64_t v28 = v52[v13];
            ++v29;
            if (v28) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v29;
      }
    }
LABEL_22:
    unint64_t v10 = (v28 - 1) & v28;
    unint64_t v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if (v54)
    {
LABEL_10:
      uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = *(void *)(v5 + 56) + 216 * v18;
      uint64_t v23 = *(void *)(v22 + 8);
      uint64_t v24 = *(void *)(v22 + 24);
      uint64_t v60 = *(void *)(v22 + 32);
      uint64_t v57 = *(void *)(v22 + 40);
      uint64_t v58 = *(void *)(v22 + 16);
      uint64_t v64 = *(void *)(v22 + 56);
      char v61 = *(unsigned char *)(v22 + 64);
      uint64_t v59 = *(void *)(v22 + 72);
      uint64_t v55 = *(void *)v22;
      uint64_t v56 = *(void *)(v22 + 80);
      uint64_t v63 = *(void *)(v22 + 96);
      uint64_t v66 = *(void *)(v22 + 104);
      uint64_t v67 = *(void *)(v22 + 88);
      uint64_t v68 = *(void *)(v22 + 112);
      uint64_t v69 = *(void *)(v22 + 48);
      uint64_t v65 = *(void *)(v22 + 136);
      char v62 = *(unsigned char *)(v22 + 144);
      uint64_t v72 = *(void *)(v22 + 152);
      uint64_t v73 = *(void *)(v22 + 120);
      uint64_t v70 = *(void *)(v22 + 128);
      uint64_t v71 = *(void *)(v22 + 168);
      uint64_t v74 = *(void *)(v22 + 160);
      uint64_t v75 = *(void *)(v22 + 176);
      char v25 = *(unsigned char *)(v22 + 184);
      uint64_t v78 = *(void *)(v22 + 192);
      uint64_t v76 = *(void *)(v22 + 200);
      char v77 = *(unsigned char *)(v22 + 208);
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v20 = *v30;
    uint64_t v21 = v30[1];
    uint64_t v31 = *(void *)(v5 + 56) + 216 * v18;
    long long v32 = *(_OWORD *)(v31 + 16);
    long long v79 = *(_OWORD *)v31;
    long long v80 = v32;
    long long v33 = *(_OWORD *)(v31 + 80);
    long long v35 = *(_OWORD *)(v31 + 32);
    long long v34 = *(_OWORD *)(v31 + 48);
    long long v83 = *(_OWORD *)(v31 + 64);
    long long v84 = v33;
    long long v81 = v35;
    long long v82 = v34;
    long long v36 = *(_OWORD *)(v31 + 144);
    long long v38 = *(_OWORD *)(v31 + 96);
    long long v37 = *(_OWORD *)(v31 + 112);
    long long v87 = *(_OWORD *)(v31 + 128);
    long long v88 = v36;
    long long v85 = v38;
    long long v86 = v37;
    long long v40 = *(_OWORD *)(v31 + 176);
    long long v39 = *(_OWORD *)(v31 + 192);
    long long v41 = *(_OWORD *)(v31 + 160);
    char v92 = *(unsigned char *)(v31 + 208);
    long long v90 = v40;
    long long v91 = v39;
    long long v89 = v41;
    char v77 = v92;
    uint64_t v78 = v39;
    char v25 = BYTE8(v40);
    uint64_t v75 = v40;
    uint64_t v76 = *((void *)&v39 + 1);
    uint64_t v71 = *((void *)&v41 + 1);
    uint64_t v72 = *((void *)&v88 + 1);
    uint64_t v73 = *((void *)&v86 + 1);
    uint64_t v74 = v41;
    uint64_t v68 = v86;
    uint64_t v65 = *((void *)&v87 + 1);
    uint64_t v66 = *((void *)&v38 + 1);
    uint64_t v67 = *((void *)&v84 + 1);
    uint64_t v69 = v82;
    uint64_t v70 = v87;
    uint64_t v63 = v38;
    uint64_t v64 = *((void *)&v82 + 1);
    char v61 = v83;
    char v62 = v88;
    uint64_t v24 = *((void *)&v80 + 1);
    uint64_t v59 = *((void *)&v83 + 1);
    uint64_t v60 = v81;
    uint64_t v56 = v84;
    uint64_t v57 = *((void *)&v81 + 1);
    uint64_t v23 = *((void *)&v79 + 1);
    uint64_t v58 = v80;
    uint64_t v55 = v79;
    swift_bridgeObjectRetain();
    sub_389F4((uint64_t)&v79);
LABEL_24:
    sub_770C0();
    sub_76C40();
    uint64_t result = sub_77100();
    uint64_t v42 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v43 = result & ~v42;
    unint64_t v44 = v43 >> 6;
    if (((-1 << v43) & ~*(void *)(v11 + 8 * (v43 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v43) & ~*(void *)(v11 + 8 * (v43 >> 6)))) | v43 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v45 = 0;
      unint64_t v46 = (unint64_t)(63 - v42) >> 6;
      do
      {
        if (++v44 == v46 && (v45 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v47 = v44 == v46;
        if (v44 == v46) {
          unint64_t v44 = 0;
        }
        v45 |= v47;
        uint64_t v48 = *(void *)(v11 + 8 * v44);
      }
      while (v48 == -1);
      unint64_t v14 = __clz(__rbit64(~v48)) + (v44 << 6);
    }
    LOBYTE(v79) = v25;
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *uint64_t v15 = v20;
    v15[1] = v21;
    uint64_t v16 = *(void *)(v7 + 56) + 216 * v14;
    *(void *)uint64_t v16 = v55;
    *(void *)(v16 + 8) = v23;
    *(void *)(v16 + 16) = v58;
    *(void *)(v16 + 24) = v24;
    *(void *)(v16 + 32) = v60;
    *(void *)(v16 + 40) = v57;
    *(void *)(v16 + 48) = v69;
    *(void *)(v16 + 56) = v64;
    *(unsigned char *)(v16 + 64) = v61;
    *(void *)(v16 + 72) = v59;
    *(void *)(v16 + 80) = v56;
    *(void *)(v16 + 88) = v67;
    *(void *)(v16 + 96) = v63;
    *(void *)(v16 + 104) = v66;
    *(void *)(v16 + 112) = v68;
    *(void *)(v16 + 120) = v73;
    *(void *)(v16 + 128) = v70;
    *(void *)(v16 + 136) = v65;
    *(unsigned char *)(v16 + 144) = v62;
    *(void *)(v16 + 152) = v72;
    *(void *)(v16 + 160) = v74;
    *(void *)(v16 + 168) = v71;
    *(void *)(v16 + 176) = v75;
    *(unsigned char *)(v16 + 184) = v79;
    *(void *)(v16 + 192) = v78;
    *(void *)(v16 + 200) = v76;
    *(unsigned char *)(v16 + 208) = v77;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v50;
  uint64_t v27 = v52;
  if ((v54 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v49 = 1 << *(unsigned char *)(v5 + 32);
  if (v49 >= 64) {
    bzero(v27, ((unint64_t)(v49 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v27 = -1 << v49;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_4E474(unint64_t a1, uint64_t a2)
{
  return sub_4E698(a1, a2, (uint64_t (*)(void))type metadata accessor for Application);
}

unint64_t sub_4E48C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_76E90();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        sub_76C10();
        sub_770C0();
        id v10 = v9;
        sub_76C40();
        Swift::Int v11 = sub_77100();

        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          unint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *unint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = (void *)(v16 + 8 * v3);
          unint64_t v18 = (void *)(v16 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 1))
          {
            *unint64_t v17 = *v18;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_4E680(unint64_t a1, uint64_t a2)
{
  return sub_4E698(a1, a2, (uint64_t (*)(void))&type metadata accessor for Date);
}

unint64_t sub_4E698(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    uint64_t result = sub_76E90();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        sub_770C0();
        swift_bridgeObjectRetain();
        sub_76C40();
        Swift::Int v11 = sub_77100();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v12 < v10) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        unint64_t v14 = (_OWORD *)(v13 + 16 * v4);
        uint64_t v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1) {
          *unint64_t v14 = *v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v18 = v17 * v4;
        uint64_t result = v16 + v17 * v4;
        int64_t v19 = v17 * v7;
        unint64_t v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v18 == v19) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v12 < v10) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_4E8B8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_76E90();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_770C0();
        swift_bridgeObjectRetain();
        sub_76C40();
        Swift::Int v9 = sub_77100();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t result = v14 + 216 * v3;
          uint64_t v15 = (const void *)(v14 + 216 * v6);
          if (216 * v3 < (uint64_t)(216 * v6)
            || result >= (unint64_t)v15 + 216
            || (v16 = v3 == v6, int64_t v3 = v6, !v16))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v15, 0xD8uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_4EAAC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v8 = (void *)(a5[6] + 16 * a1);
  *unint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for Application();
  uint64_t result = sub_22D9C(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

unint64_t sub_4EB44(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  unint64_t v6 = (_OWORD *)(a5[7] + 144 * result);
  long long v7 = a4[3];
  v6[2] = a4[2];
  v6[3] = v7;
  long long v8 = a4[8];
  long long v9 = a4[6];
  v6[7] = a4[7];
  v6[8] = v8;
  long long v10 = a4[5];
  void v6[4] = a4[4];
  void v6[5] = v10;
  v6[6] = v9;
  long long v11 = a4[1];
  *unint64_t v6 = *a4;
  v6[1] = v11;
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

unint64_t sub_4EBB8(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

unint64_t sub_4EC00(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(void *)(a5[6] + 8 * result) = a2;
  uint64_t v5 = (void *)(a5[7] + 16 * result);
  *uint64_t v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_4EC48(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_76070();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a4, v10);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

void *sub_4ECF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Application();
  uint64_t v29 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_14F50(&qword_A35E0);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_76FC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_23:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_25;
    }
    if (v10 >= v14)
    {
LABEL_21:
      uint64_t result = (void *)swift_release();
      uint64_t v1 = v27;
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    if (!v24) {
      break;
    }
LABEL_20:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_22680(*(void *)(v5 + 56) + v21, (uint64_t)v4);
    uint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *uint64_t v22 = v19;
    v22[1] = v20;
    sub_22D9C((uint64_t)v4, *(void *)(v7 + 56) + v21);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v10 + 1;
  if (v10 + 1 >= v14) {
    goto LABEL_21;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    ++v10;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_21;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void *sub_4EF4C()
{
  uint64_t v1 = v0;
  sub_14F50(&qword_A35D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_76FC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      int64_t v9 = v36 + 1;
      if (v36 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v37 = *(void *)(v6 + 8 * v9);
      if (!v37) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v37 - 1) & v37;
    unint64_t v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 144 * v15;
    long long v23 = *(_OWORD *)(v17 + v21 + 16);
    long long v22 = *(_OWORD *)(v17 + v21 + 32);
    long long v24 = *(_OWORD *)(v17 + v21 + 64);
    long long v42 = *(_OWORD *)(v17 + v21 + 48);
    long long v43 = v24;
    long long v25 = *(_OWORD *)(v17 + v21 + 128);
    long long v27 = *(_OWORD *)(v17 + v21 + 80);
    long long v26 = *(_OWORD *)(v17 + v21 + 96);
    long long v46 = *(_OWORD *)(v17 + v21 + 112);
    long long v47 = v25;
    long long v44 = v27;
    long long v45 = v26;
    long long v39 = *(_OWORD *)(v17 + v21);
    long long v40 = v23;
    long long v41 = v22;
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + v16);
    void *v28 = v20;
    v28[1] = v19;
    uint64_t v29 = (_OWORD *)(*(void *)(v4 + 56) + v21);
    _OWORD *v29 = v39;
    long long v30 = v40;
    long long v31 = v41;
    long long v32 = v43;
    v29[3] = v42;
    v29[4] = v32;
    v29[1] = v30;
    v29[2] = v31;
    long long v33 = v44;
    long long v34 = v45;
    long long v35 = v47;
    v29[7] = v46;
    v29[8] = v35;
    v29[5] = v33;
    v29[6] = v34;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_22E04((uint64_t)&v39);
  }
  int64_t v38 = v36 + 2;
  if (v38 >= v13) {
    goto LABEL_26;
  }
  unint64_t v37 = *(void *)(v6 + 8 * v38);
  if (v37)
  {
    int64_t v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v9);
    ++v38;
    if (v37) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_4F160()
{
  uint64_t v1 = v0;
  sub_14F50(&qword_A3700);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_76FC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_4F30C()
{
  uint64_t v1 = v0;
  sub_14F50(&qword_A3708);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_76FC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    id result = v17;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_4F4B4()
{
  sub_14F50(&qword_A3FA0);
  unint64_t v37 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_76FC0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v37 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v34 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v34 >= v12) {
      goto LABEL_26;
    }
    unint64_t v35 = *(void *)(v5 + 8 * v34);
    ++v8;
    if (!v35)
    {
      int64_t v8 = v34 + 1;
      if (v34 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v35 = *(void *)(v5 + 8 * v8);
      if (!v35) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v35 - 1) & v35;
    unint64_t v14 = __clz(__rbit64(v35)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = 88 * v14;
    uint64_t v20 = *(void *)(v1 + 56) + v19;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v20 + 24);
    uint64_t v25 = *(void *)(v20 + 32);
    uint64_t v26 = *(void *)(v20 + 40);
    char v27 = *(unsigned char *)(v20 + 48);
    char v28 = *(unsigned char *)(v20 + 49);
    uint64_t v29 = *(void *)(v20 + 56);
    uint64_t v30 = *(void *)(v20 + 64);
    uint64_t v31 = *(void *)(v20 + 72);
    LOBYTE(v20) = *(unsigned char *)(v20 + 80);
    long long v32 = (void *)(*(void *)(v3 + 48) + v15);
    *long long v32 = v17;
    v32[1] = v18;
    uint64_t v33 = *(void *)(v3 + 56) + v19;
    *(void *)uint64_t v33 = v21;
    *(void *)(v33 + 8) = v22;
    *(void *)(v33 + 16) = v23;
    *(void *)(v33 + 24) = v24;
    *(void *)(v33 + 32) = v25;
    *(void *)(v33 + 40) = v26;
    *(unsigned char *)(v33 + 48) = v27;
    *(unsigned char *)(v33 + 49) = v28;
    *(void *)(v33 + 56) = v29;
    *(void *)(v33 + 64) = v30;
    *(void *)(v33 + 72) = v31;
    *(unsigned char *)(v33 + 80) = v20;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v36 = v34 + 2;
  if (v36 >= v12) {
    goto LABEL_26;
  }
  unint64_t v35 = *(void *)(v5 + 8 * v36);
  if (v35)
  {
    int64_t v8 = v36;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v35 = *(void *)(v5 + 8 * v8);
    ++v36;
    if (v35) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_4F6E8()
{
  uint64_t v35 = sub_76070();
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_14F50(&qword_A36E8);
  uint64_t v30 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_76FC0();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v36 = v5;
  if (!v6)
  {
    id result = (void *)swift_release();
    uint64_t v28 = v36;
    char v27 = v30;
LABEL_25:
    uint64_t *v27 = v28;
    return result;
  }
  uint64_t v7 = v5;
  id result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v36;
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v31 = v4 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v33 = v1 + 32;
  uint64_t v34 = v1 + 16;
  uint64_t v14 = v35;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v21, v14);
    uint64_t v22 = v36;
    uint64_t v23 = (void *)(*(void *)(v36 + 48) + v17);
    *uint64_t v23 = v19;
    v23[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v22 + 56) + v21, v3, v14);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    id result = (void *)swift_release();
    char v27 = v30;
    uint64_t v28 = v36;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_4F9AC()
{
  uint64_t v1 = v0;
  sub_14F50(&qword_A36D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_76FC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v44 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v44 >= v13) {
      goto LABEL_26;
    }
    unint64_t v45 = *(void *)(v6 + 8 * v44);
    ++v9;
    if (!v45)
    {
      int64_t v9 = v44 + 1;
      if (v44 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v45 = *(void *)(v6 + 8 * v9);
      if (!v45) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v45 - 1) & v45;
    unint64_t v15 = __clz(__rbit64(v45)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 216 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    long long v22 = *(_OWORD *)(v21 + 32);
    long long v23 = *(_OWORD *)(v21 + 48);
    long long v24 = *(_OWORD *)(v21 + 80);
    long long v51 = *(_OWORD *)(v21 + 64);
    long long v52 = v24;
    long long v50 = v23;
    long long v25 = *(_OWORD *)(v21 + 144);
    long long v27 = *(_OWORD *)(v21 + 96);
    long long v26 = *(_OWORD *)(v21 + 112);
    long long v55 = *(_OWORD *)(v21 + 128);
    long long v56 = v25;
    long long v53 = v27;
    long long v54 = v26;
    long long v29 = *(_OWORD *)(v21 + 176);
    long long v28 = *(_OWORD *)(v21 + 192);
    long long v30 = *(_OWORD *)(v21 + 160);
    char v60 = *(unsigned char *)(v21 + 208);
    long long v58 = v29;
    long long v59 = v28;
    long long v57 = v30;
    long long v31 = *(_OWORD *)(v21 + 16);
    long long v47 = *(_OWORD *)v21;
    long long v48 = v31;
    long long v49 = v22;
    int64_t v32 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v32 = v19;
    v32[1] = v18;
    uint64_t v33 = *(void *)(v4 + 56) + v20;
    long long v34 = v48;
    *(_OWORD *)uint64_t v33 = v47;
    *(_OWORD *)(v33 + 16) = v34;
    long long v35 = v49;
    long long v36 = v50;
    long long v37 = v52;
    *(_OWORD *)(v33 + 64) = v51;
    *(_OWORD *)(v33 + 80) = v37;
    *(_OWORD *)(v33 + 32) = v35;
    *(_OWORD *)(v33 + 48) = v36;
    long long v38 = v53;
    long long v39 = v54;
    long long v40 = v56;
    *(_OWORD *)(v33 + 128) = v55;
    *(_OWORD *)(v33 + 144) = v40;
    *(_OWORD *)(v33 + 96) = v38;
    *(_OWORD *)(v33 + 112) = v39;
    long long v41 = v57;
    long long v42 = v58;
    long long v43 = v59;
    *(unsigned char *)(v33 + 208) = v60;
    *(_OWORD *)(v33 + 176) = v42;
    *(_OWORD *)(v33 + 192) = v43;
    *(_OWORD *)(v33 + 160) = v41;
    swift_bridgeObjectRetain();
    id result = (void *)sub_389F4((uint64_t)&v47);
  }
  int64_t v46 = v44 + 2;
  if (v46 >= v13) {
    goto LABEL_26;
  }
  unint64_t v45 = *(void *)(v6 + 8 * v46);
  if (v45)
  {
    int64_t v9 = v46;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v46 + 1;
    if (__OFADD__(v46, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v45 = *(void *)(v6 + 8 * v9);
    ++v46;
    if (v45) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t (*sub_4FBFC(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_50230(v6);
  v6[10] = sub_4FDCC(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_4FCA8;
}

uint64_t (*sub_4FCAC(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_5026C(v6);
  v6[10] = sub_50050(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_4FCA8;
}

void sub_4FD58(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);

  free(v1);
}

void (*sub_4FDCC(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  uint64_t v10[2] = v4;
  void *v10 = a2;
  uint64_t v11 = sub_14F50(&qword_A3530);
  unint64_t v12 = malloc(*(void *)(*(void *)(v11 - 8) + 64));
  v10[3] = v12;
  uint64_t v13 = *v4;
  unint64_t v15 = sub_4BC5C(a2, a3);
  *((unsigned char *)v10 + 40) = v14 & 1;
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    char v19 = v14;
    uint64_t v20 = *(void *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v15;
      if (v19)
      {
LABEL_8:
        uint64_t v21 = *(void *)(*v5 + 56);
        uint64_t v22 = type metadata accessor for Application();
        uint64_t v23 = *(void *)(v22 - 8);
        sub_22D9C(v21 + *(void *)(v23 + 72) * v15, (uint64_t)v12);
        uint64_t v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_4FFEC;
      }
LABEL_11:
      uint64_t v22 = type metadata accessor for Application();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_4ECF8();
      goto LABEL_7;
    }
    sub_4C90C(v18, a4 & 1);
    unint64_t v25 = sub_4BC5C(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      unint64_t v15 = v25;
      v10[4] = v25;
      if (v19) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  id result = (void (*)(uint64_t **))sub_77080();
  __break(1u);
  return result;
}

void sub_4FFEC(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void *)(*a1)[3];
  sub_5029C((uint64_t)v2, *((unsigned char *)*a1 + 40), (uint64_t *)(*a1)[2], (*a1)[4], **a1, (*a1)[1]);
  sub_151A8((uint64_t)v2, &qword_A3530);
  free(v2);

  free(v1);
}

void (*sub_50050(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t *a1)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x1D0uLL);
  *a1 = v10;
  v10[55] = a3;
  v10[56] = v4;
  v10[54] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_4BC5C(a2, a3);
  *((unsigned char *)v10 + 209) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = *(void *)(v11 + 24);
  if (v18 < v16 || (a4 & 1) == 0)
  {
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_4F9AC();
      goto LABEL_9;
    }
    sub_4DF08(v16, a4 & 1);
    unint64_t v19 = sub_4BC5C(a2, a3);
    if ((v17 & 1) == (v20 & 1))
    {
      unint64_t v13 = v19;
      goto LABEL_9;
    }
LABEL_14:
    id result = (void (*)(uint64_t *))sub_77080();
    __break(1u);
    return result;
  }
LABEL_9:
  v10[57] = v13;
  if (v17)
  {
    memmove(v10 + 27, (const void *)(*(void *)(*v5 + 56) + 216 * v13), 0xD1uLL);
    nullsub_1(v10 + 27);
  }
  else
  {
    sub_1B478((uint64_t)(v10 + 27));
  }
  sub_1B4A0((uint64_t)(v10 + 27), (uint64_t)v10);
  return sub_501BC;
}

void sub_501BC(uint64_t *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *a1 + 216;
  sub_504BC(*a1, *(unsigned char *)(*a1 + 209), *(uint64_t **)(*a1 + 448), *(void *)(*a1 + 456), *(void *)(*a1 + 432), *(void *)(*a1 + 440));
  sub_1B4A0((uint64_t)v1, v2);
  sub_51DB8(v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_51A3C);

  free(v1);
}

uint64_t (*sub_50230(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_50260;
}

uint64_t sub_50260(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t (*sub_5026C(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_524F0;
}

unint64_t sub_5029C(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v10 = sub_14F50(&qword_A3530);
  __chkstk_darwin(v10 - 8);
  char v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Application();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  char v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v22 - v18;
  sub_15144(a1, (uint64_t)v12, &qword_A3530);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    unint64_t result = sub_151A8((uint64_t)v12, &qword_A3530);
    if (a2)
    {
      swift_arrayDestroy();
      return sub_4E698(a4, *a3, (uint64_t (*)(void))type metadata accessor for Application);
    }
  }
  else
  {
    sub_22D9C((uint64_t)v12, (uint64_t)v19);
    uint64_t v21 = (void *)*a3;
    if (a2)
    {
      return sub_22D9C((uint64_t)v19, v21[7] + *(void *)(v14 + 72) * a4);
    }
    else
    {
      sub_22D9C((uint64_t)v19, (uint64_t)v17);
      sub_4EAAC(a4, v22, v23, (uint64_t)v17, v21);
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

uint64_t sub_504BC(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1B4A0(a1, (uint64_t)v41);
  sub_1B4A0((uint64_t)v41, (uint64_t)v42);
  if (sub_235FC((uint64_t)v42) == 1)
  {
    if (a2)
    {
      swift_arrayDestroy();
      sub_4E8B8(a4, *a3);
    }
    return sub_51DB8((uint64_t)v41, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_51E34);
  }
  uint64_t result = sub_1B4A0((uint64_t)v41, (uint64_t)__src);
  long long v37 = __src[10];
  long long v38 = __src[11];
  long long v39 = __src[12];
  char v40 = v26;
  long long v33 = __src[6];
  long long v34 = __src[7];
  long long v35 = __src[8];
  long long v36 = __src[9];
  long long v29 = __src[2];
  long long v30 = __src[3];
  long long v31 = __src[4];
  long long v32 = __src[5];
  long long v27 = __src[0];
  long long v28 = __src[1];
  char v12 = (void *)*a3;
  if (a2)
  {
    memmove((void *)(v12[7] + 216 * a4), __src, 0xD1uLL);
    return sub_51DB8((uint64_t)v41, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_51E34);
  }
  v12[(a4 >> 6) + 8] |= 1 << a4;
  uint64_t v13 = (void *)(v12[6] + 16 * a4);
  void *v13 = a5;
  v13[1] = a6;
  uint64_t v14 = v12[7] + 216 * a4;
  long long v15 = v32;
  *(_OWORD *)(v14 + 64) = v31;
  *(_OWORD *)(v14 + 80) = v15;
  long long v16 = v30;
  *(_OWORD *)(v14 + 32) = v29;
  *(_OWORD *)(v14 + 48) = v16;
  long long v17 = v36;
  *(_OWORD *)(v14 + 128) = v35;
  *(_OWORD *)(v14 + 144) = v17;
  long long v18 = v34;
  *(_OWORD *)(v14 + 96) = v33;
  *(_OWORD *)(v14 + 112) = v18;
  *(unsigned char *)(v14 + 208) = v40;
  long long v19 = v39;
  long long v20 = v37;
  *(_OWORD *)(v14 + 176) = v38;
  *(_OWORD *)(v14 + 192) = v19;
  *(_OWORD *)(v14 + 160) = v20;
  long long v21 = v28;
  *(_OWORD *)uint64_t v14 = v27;
  *(_OWORD *)(v14 + 16) = v21;
  uint64_t v22 = v12[2];
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (!v23)
  {
    v12[2] = v24;
    swift_bridgeObjectRetain();
    return sub_51DB8((uint64_t)v41, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_51E34);
  }
  __break(1u);
  return result;
}

uint64_t sub_50698(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    long long v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_50898(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v30 = -1 << *(unsigned char *)(a4 + 32);
  long long v31 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v32 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v18 = *(void *)(a4 + 56) + 88 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    uint64_t v22 = *(void *)(v18 + 24);
    uint64_t v23 = *(void *)(v18 + 32);
    uint64_t v24 = *(void *)(v18 + 40);
    char v25 = *(unsigned char *)(v18 + 48);
    char v26 = *(unsigned char *)(v18 + 49);
    uint64_t v27 = *(void *)(v18 + 56);
    uint64_t v28 = *(void *)(v18 + 64);
    uint64_t v29 = *(void *)(v18 + 72);
    LOBYTE(v18) = *(unsigned char *)(v18 + 80);
    *(void *)uint64_t v10 = v19;
    *(void *)(v10 + 8) = v20;
    *(void *)(v10 + 16) = v21;
    *(void *)(v10 + 24) = v22;
    *(void *)(v10 + 32) = v23;
    *(void *)(v10 + 40) = v24;
    *(unsigned char *)(v10 + 48) = v25;
    *(unsigned char *)(v10 + 49) = v26;
    *(void *)(v10 + 56) = v27;
    *(void *)(v10 + 64) = v28;
    *(void *)(v10 + 72) = v29;
    *(unsigned char *)(v10 + 80) = v18;
    if (v12 == v9)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_38;
    }
    v10 += 88;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v32)
      {
        unint64_t v8 = 0;
        int64_t v11 = v15;
      }
      else
      {
        unint64_t v16 = *(void *)(v5 + 8 * v11);
        if (v16) {
          goto LABEL_14;
        }
        int64_t v17 = v15 + 2;
        if (v15 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          int64_t v15 = v17;
          goto LABEL_18;
        }
        int64_t v11 = v15 + 3;
        if (v15 + 3 < v32)
        {
          unint64_t v16 = *(void *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            int64_t v15 = v11;
            goto LABEL_18;
          }
          int64_t v17 = v15 + 4;
          if (v15 + 4 >= v32)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v16 = *(void *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v15 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v15 >= v32)
              {
                unint64_t v8 = 0;
                int64_t v11 = v32 - 1;
                goto LABEL_37;
              }
              unint64_t v16 = *(void *)(v5 + 8 * v15);
              ++v17;
              if (v16) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v15 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v30;
      uint64_t result = v31;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_50B2C(void *result, char *__dst, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!__dst)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  int64_t v11 = __dst;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (_OWORD *)(*(void *)(a4 + 56) + 216 * v16);
    long long v21 = v20[1];
    v32[0] = *v20;
    v32[1] = v21;
    long long v22 = v20[5];
    long long v24 = v20[2];
    long long v23 = v20[3];
    v32[4] = v20[4];
    v32[5] = v22;
    v32[2] = v24;
    v32[3] = v23;
    long long v25 = v20[9];
    long long v27 = v20[6];
    long long v26 = v20[7];
    v32[8] = v20[8];
    v32[9] = v25;
    v32[6] = v27;
    v32[7] = v26;
    long long v29 = v20[11];
    long long v28 = v20[12];
    long long v30 = v20[10];
    char v33 = *((unsigned char *)v20 + 208);
    v32[11] = v29;
    v32[12] = v28;
    v32[10] = v30;
    memmove(v11, v20, 0xD1uLL);
    if (v13 == v10)
    {
      sub_389F4((uint64_t)v32);
      goto LABEL_38;
    }
    v11 += 216;
    uint64_t result = (void *)sub_389F4((uint64_t)v32);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v31;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

int64_t sub_50D80(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_50E64(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      sub_76EF0();
      sub_1B618(0, &qword_A3EC8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (sub_76EC0() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_76ED0();
  sub_1B618(0, &qword_A3EC8);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = sub_76DF0(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = sub_76E00();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = sub_76E00();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  int64_t v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

uint64_t sub_510DC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  id v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_51164(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_51258(uint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v3 = sub_76EE0();
  }
  else {
    uint64_t v3 = *(void *)(a1 + 16);
  }
  uint64_t result = (uint64_t)_swiftEmptyArrayStorage;
  if (v3)
  {
    long long v39 = _swiftEmptyArrayStorage;
    sub_36470(0, v3 & ~(v3 >> 63), 0);
    if (v2)
    {
      uint64_t result = sub_76EA0();
      char v6 = 1;
    }
    else
    {
      uint64_t result = sub_510DC(a1);
      char v6 = v7 & 1;
    }
    uint64_t v34 = result;
    uint64_t v35 = v5;
    char v36 = v6;
    if (v3 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }
    else
    {
      do
      {
        while (1)
        {
          int64_t v14 = v34;
          uint64_t v13 = v35;
          char v15 = v36;
          sub_50E64(v34, v35, v36, a1);
          int64_t v17 = v16;
          sub_47FA4(v16, (uint64_t)v37);

          unint64_t v18 = v39;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = sub_36470(0, v18[2] + 1, 1);
            unint64_t v18 = v39;
          }
          unint64_t v20 = v18[2];
          unint64_t v19 = v18[3];
          if (v20 >= v19 >> 1)
          {
            uint64_t result = sub_36470(v19 > 1, v20 + 1, 1);
            unint64_t v18 = v39;
          }
          v18[2] = v20 + 1;
          long long v21 = &v18[27 * v20];
          long long v22 = v37[1];
          *((_OWORD *)v21 + 2) = v37[0];
          *((_OWORD *)v21 + 3) = v22;
          long long v23 = v37[2];
          long long v24 = v37[3];
          long long v25 = v37[5];
          *((_OWORD *)v21 + 6) = v37[4];
          *((_OWORD *)v21 + 7) = v25;
          *((_OWORD *)v21 + 4) = v23;
          *((_OWORD *)v21 + 5) = v24;
          long long v26 = v37[6];
          long long v27 = v37[7];
          long long v28 = v37[9];
          *((_OWORD *)v21 + 10) = v37[8];
          *((_OWORD *)v21 + 11) = v28;
          *((_OWORD *)v21 + 8) = v26;
          *((_OWORD *)v21 + 9) = v27;
          long long v29 = v37[10];
          long long v30 = v37[11];
          long long v31 = v37[12];
          *((unsigned char *)v21 + 240) = v38;
          *((_OWORD *)v21 + 13) = v30;
          *((_OWORD *)v21 + 14) = v31;
          *((_OWORD *)v21 + 12) = v29;
          if (v2) {
            break;
          }
          int64_t v8 = sub_50D80(v14, v13, v15, a1);
          uint64_t v10 = v9;
          char v12 = v11;
          sub_519F4(v14, v13, v15);
          uint64_t v34 = v8;
          uint64_t v35 = v10;
          char v36 = v12 & 1;
          if (!--v3) {
            goto LABEL_20;
          }
        }
        if ((v15 & 1) == 0) {
          goto LABEL_23;
        }
        if (sub_76EB0()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_14F50(&qword_A3EF8);
        int64_t v32 = (void (*)(char *, void))sub_76DA0();
        sub_76F00();
        v32(v33, 0);
        --v3;
      }
      while (v3);
LABEL_20:
      sub_519F4(v34, v35, v36);
      return (uint64_t)v39;
    }
  }
  return result;
}

uint64_t sub_514F8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *char v7 = v2;
  v7[1] = sub_25054;
  return sub_470D0(a1, v4, v5, v6);
}

void *sub_515AC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_515F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  int64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *int64_t v8 = v2;
  v8[1] = sub_25054;
  return sub_33FE4(a1, v4, v5, v7, v6);
}

uint64_t sub_516B8()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_51700(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  int64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *int64_t v8 = v2;
  v8[1] = sub_163DC;
  return sub_33FE4(a1, v4, v5, v7, v6);
}

uint64_t sub_517C0(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

char *sub_51814(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_51900(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 216 * a1 + 32;
    unint64_t v6 = a3 + 216 * v4;
    if (v5 >= v6 || v5 + 216 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_519F4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_51A00()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_51A10(void *a1)
{
  return sub_4A224(a1, v1);
}

uint64_t sub_51A18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_51A28()
{
  return swift_release();
}

void sub_51A34(uint64_t a1)
{
  sub_49B9C(a1, v1);
}

void sub_51A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_16FDC(a7, a8, a9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_38C20(a15, a16, a17, a18);
    swift_bridgeObjectRelease();
    sub_38C64(a25);
  }
}

uint64_t sub_51B40()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_25054;
  v3[2] = v2;
  return _swift_task_switch(sub_4A074, v2, 0);
}

uint64_t sub_51BE8()
{
  uint64_t v1 = sub_14F50(&qword_A3F20);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_51C7C(void *a1, uint64_t a2)
{
  sub_14F50(&qword_A3F20);

  sub_49D48(a1, a2);
}

uint64_t sub_51D00(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25054;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_A3F30 + dword_A3F30);
  return v6(a1, v4);
}

uint64_t sub_51DB8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4);
  return a1;
}

void sub_51E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_16F10(a7, a8, a9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_38AE0(a15, a16, a17, a18);
    swift_bridgeObjectRetain();
    sub_38B24(a25);
  }
}

uint64_t sub_51F34()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_51F74()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1A8A8;
  *(_OWORD *)(v2 + 16) = v3;
  return _swift_task_switch(sub_4834C, v3, 0);
}

uint64_t sub_52024()
{
  uint64_t v2 = *(void *)(v0 + 32);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_25054;
  v3[2] = v2;
  return _swift_task_switch(sub_47F44, v2, 0);
}

uint64_t sub_520D4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_5211C()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_25054;
  v6[67] = v5;
  v6[66] = v4;
  v6[65] = v3;
  v6[64] = v2;
  return _swift_task_switch(sub_4AFAC, v2, 0);
}

uint64_t sub_521EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_522E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_52440(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_5249C(uint64_t a1)
{
  return a1;
}

uint64_t sub_52508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_76D70();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_76D60();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24D3C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_76D10();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_526AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_76D70();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_76D60();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24D3C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_76D10();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_14F50(&qword_A4088);
  return swift_task_create();
}

void *sub_52858()
{
  uint64_t v1 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v4[14] = 0;
  v4[15] = 0;
  v13.receiver = v4;
  v13.super_class = v0;
  id v5 = objc_msgSendSuper2(&v13, "init");
  id v6 = objc_allocWithZone((Class)SUManagerClient);
  uint64_t v7 = v5;
  id v8 = [v6 initWithDelegate:v7];
  uint64_t v9 = (void *)v7[14];
  v7[14] = v8;

  uint64_t v10 = sub_76D70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  void v11[4] = v7;
  sub_52508((uint64_t)v3, (uint64_t)&unk_A36A8, (uint64_t)v11);
  swift_release();
  return v7;
}

void sub_529BC()
{
  uint64_t v1 = *(void **)(v0 + 120);
  if (!v1)
  {
    NSString v6 = sub_76BE0();
    NSString v7 = sub_76BE0();
    id v5 = STLocalizedString(v6);

    sub_76C10();
    goto LABEL_6;
  }
  id v2 = v1;
  id v3 = [v2 descriptor];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 humanReadableUpdateName];

    if (v5)
    {
      sub_76C10();

LABEL_6:
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void *sub_52AD0()
{
  uint64_t v1 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  updated = (objc_class *)type metadata accessor for SoftwareUpdateController();
  v0[14] = 0;
  v0[15] = 0;
  v13.receiver = v0;
  v13.super_class = updated;
  id v5 = objc_msgSendSuper2(&v13, "init");
  id v6 = objc_allocWithZone((Class)SUManagerClient);
  NSString v7 = v5;
  id v8 = [v6 initWithDelegate:v7];
  uint64_t v9 = (void *)v7[14];
  v7[14] = v8;

  uint64_t v10 = sub_76D70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  void v11[4] = v7;
  sub_52508((uint64_t)v3, (uint64_t)&unk_A4070, (uint64_t)v11);
  swift_release();
  return v7;
}

uint64_t sub_52C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a4;
  return _swift_task_switch(sub_52C48, a4, 0);
}

uint64_t sub_52C48()
{
  uint64_t v1 = *(void **)(v0[8] + 112);
  if (v1)
  {
    uint64_t v2 = swift_allocObject();
    swift_weakInit();
    v0[6] = sub_53378;
    v0[7] = v2;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_52ED0;
    v0[5] = &unk_97C60;
    id v3 = _Block_copy(v0 + 2);
    id v4 = v1;
    swift_release();
    [v4 downloadAndInstallState:v3];
    _Block_release(v3);
  }
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_52D94(void *a1)
{
  uint64_t v2 = sub_14F50(&qword_A3500);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = sub_76D70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    id v8 = (void *)swift_allocObject();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = v6;
    v8[5] = a1;
    id v9 = a1;
    swift_retain();
    sub_52508((uint64_t)v4, (uint64_t)&unk_A4068, (uint64_t)v8);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_52ED0(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = *(void (**)(void *, void *, void *, void *))(a1 + 32);
  swift_retain();
  id v13 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v9(a2, a3, a4, a5);
  swift_release();
}

uint64_t sub_52F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_52FB4, a4, 0);
}

uint64_t sub_52FB4()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = (void *)v0[3];
  uint64_t v3 = *(void **)(v2 + 120);
  *(void *)(v2 + 120) = v1;
  id v4 = v1;

  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_53020()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for SoftwareUpdateController()
{
  return self;
}

uint64_t sub_53088()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_25054;
  v3[8] = v2;
  return _swift_task_switch(sub_52C48, v2, 0);
}

uint64_t sub_53134(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_53210;
  return v6(a1);
}

uint64_t sub_53210()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_53308()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_53340()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_53378(void *a1)
{
  return sub_52D94(a1);
}

uint64_t sub_53380(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_53390()
{
  return swift_release();
}

uint64_t sub_53398()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_533E0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  uint64_t v4[2] = v2;
  v4[3] = v3;
  v4[1] = sub_163DC;
  return _swift_task_switch(sub_52FB4, v2, 0);
}

uint64_t sub_53490(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  void *v3 = v2;
  v3[1] = sub_53570;
  return v5(v2 + 32);
}

uint64_t sub_53570()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  unsigned char *v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_53684(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_163DC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_A4078 + dword_A4078);
  return v6(a1, v4);
}

uint64_t *sub_53740(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_75FE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_53810(uint64_t a1)
{
  uint64_t v2 = sub_75FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_53884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_75FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_53904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_75FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_53990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_75FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_53A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_75FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_53A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_53AA4);
}

uint64_t sub_53AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_75FE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_53B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_53B78);
}

uint64_t sub_53B78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_75FE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for NavigationEventEmissionViewModifier()
{
  uint64_t result = qword_A40E8;
  if (!qword_A40E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_53C80()
{
  uint64_t result = sub_75FE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_53D28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_53D44()
{
  return 1;
}

Swift::Int sub_53D4C()
{
  return sub_77100();
}

uint64_t sub_53DA4()
{
  return sub_76C40();
}

Swift::Int sub_53DC0()
{
  return sub_77100();
}

uint64_t sub_53E14@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_969D8;
  v7._object = v3;
  Swift::Int v5 = sub_77010(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_53E68(void *a1@<X8>)
{
  *a1 = 0xD00000000000003DLL;
  a1[1] = 0x80000000000856A0;
}

uint64_t sub_53E88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v32 = a1;
  uint64_t v34 = sub_14F50(&qword_A4128);
  __chkstk_darwin(v34);
  char v33 = (uint64_t *)((char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_14F50(&qword_A4130);
  __chkstk_darwin(v3 - 8);
  Swift::Int v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_76020();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_76A60();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = sub_14F50(&qword_A4138);
  uint64_t v14 = *(void *)(v31 - 8);
  uint64_t v15 = __chkstk_darwin(v31);
  long long v28 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v27 - v18;
  __chkstk_darwin(v17);
  long long v30 = (char *)&v27 - v20;
  void *v13 = 0xD000000000000025;
  v13[1] = 0x8000000000087710;
  long long v21 = *(void (**)(void *, void, uint64_t))(v11 + 104);
  uint64_t v29 = v10;
  v21(v13, enum case for SettingsEventImage.graphicIcon(_:), v10);
  uint64_t v27 = *(void *)(v36 + *(int *)(type metadata accessor for NavigationEventEmissionViewModifier() + 20));
  sub_76010();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    uint64_t v23 = sub_14F50(&qword_A4140);
    unint64_t v24 = sub_54350();
    sub_76700();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v29);
    long long v26 = v30;
    uint64_t v25 = v31;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v30, v19, v31);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v28, v26, v25);
    uint64_t v37 = v23;
    unint64_t v38 = v24;
    swift_getOpaqueTypeConformance2();
    uint64_t *v33 = sub_76930();
    swift_storeEnumTagMultiPayload();
    sub_76570();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v26, v25);
  }
  return result;
}

uint64_t sub_54330()
{
  return sub_76300();
}

unint64_t sub_54350()
{
  unint64_t result = qword_A4148;
  if (!qword_A4148)
  {
    sub_14F94(&qword_A4140);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4148);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NavigationEventEmissionViewModifier.DeepLink(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for NavigationEventEmissionViewModifier.DeepLink(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x5449CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_544C4()
{
  return 0;
}

ValueMetadata *type metadata accessor for NavigationEventEmissionViewModifier.DeepLink()
{
  return &type metadata for NavigationEventEmissionViewModifier.DeepLink;
}

unint64_t sub_544E0()
{
  unint64_t result = qword_A4150;
  if (!qword_A4150)
  {
    sub_14F94(&qword_A4158);
    sub_54350();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4150);
  }
  return result;
}

unint64_t sub_54560()
{
  unint64_t result = qword_A4160;
  if (!qword_A4160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4160);
  }
  return result;
}

uint64_t destroy for IconView(uint64_t a1)
{
  sub_46AC8(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_16FDC(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IconView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_46ABC(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 32);
  sub_16F10(v6, v7, v8);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IconView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_46ABC(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_46AC8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 32);
  sub_16F10(v8, v9, v10);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  unsigned __int8 v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v10;
  sub_16FDC(v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for IconView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for IconView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_46AC8(v6, v7);
  char v8 = *((unsigned char *)a2 + 32);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  unsigned __int8 v11 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_16FDC(v9, v10, v11);
  uint64_t v12 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for IconView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IconView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IconView()
{
  return &type metadata for IconView;
}

uint64_t sub_54878()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_54894@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_14F50(&qword_A4238);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) >= 4uLL) {
    uint64_t v10 = 4;
  }
  else {
    uint64_t v10 = *(void *)(a1 + 16);
  }
  sub_77060();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  unsigned __int8 v11 = (void *)swift_dynamicCastClass();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    unsigned __int8 v11 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = v11[2];
  swift_release();
  if (v12 == v10)
  {
    unsigned __int8 v13 = (void *)swift_dynamicCastClass();
    if (!v13)
    {
      swift_bridgeObjectRelease();
      unsigned __int8 v13 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    unsigned __int8 v13 = sub_4C3B0(a1, a1 + 32, 0, (2 * v10) | 1);
  }
  swift_bridgeObjectRelease();
  v16[1] = v13;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(unsigned char *)(v14 + 24) = a2;
  swift_bridgeObjectRetain();
  sub_14F50(&qword_A4248);
  sub_1508C(&qword_A4250, &qword_A4248);
  sub_43B84();
  sub_56C10();
  sub_76980();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
}

uint64_t sub_54AE8@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(void *)a3 = swift_getKeyPath();
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = v5;
  *(void *)(a3 + 24) = v6;
  *(unsigned char *)(a3 + 32) = v9;
  *(void *)(a3 + 40) = v8;
  *(void *)(a3 + 48) = v7;
  *(unsigned char *)(a3 + 56) = a2;
  sub_16F10(v5, v6, v9);

  return swift_bridgeObjectRetain();
}

uint64_t sub_54B78()
{
  uint64_t v1 = sub_765A0();
  __chkstk_darwin(v1);
  uint64_t v2 = sub_568AC(*(unsigned char *)(v0 + 8));
  if (qword_A2C60 != -1) {
    uint64_t v2 = swift_once();
  }
  __chkstk_darwin(v2);
  sub_76510();
  sub_56B08();
  sub_77110();
  sub_14F50(&qword_A4238);
  sub_56B60(&qword_A4240, &qword_A4238, (void (*)(void))sub_43B84);
  return sub_76A20();
}

uint64_t sub_54D3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_14F50(&qword_A4168);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_14F50(&qword_A4170);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  unsigned __int8 v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *(double *)&qword_7DC88[*(char *)(v1 + 56)];
  uint64_t v11 = *(void *)v1;
  char v12 = *(unsigned char *)(v1 + 8);
  sub_46ABC(*(void *)v1, v12);
  double v13 = sub_5609C(v11, v12);
  sub_46AC8(v11, v12);
  id v14 = objc_msgSend(objc_allocWithZone((Class)ISImageDescriptor), "initWithSize:scale:", v10, v10, v13);
  sub_54F18(v1, v14, (uint64_t)v5);
  sub_76A10();
  sub_76310();
  sub_15144((uint64_t)v5, (uint64_t)v9, &qword_A4168);

  uint64_t v15 = &v9[*(int *)(v7 + 44)];
  long long v16 = v18[1];
  *(_OWORD *)uint64_t v15 = v18[0];
  *((_OWORD *)v15 + 1) = v16;
  *((_OWORD *)v15 + 2) = v18[2];
  sub_151A8((uint64_t)v5, &qword_A4168);
  return sub_562A8((uint64_t)v9, a1);
}

uint64_t sub_54F18@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v56 = a2;
  uint64_t v64 = a3;
  uint64_t v59 = sub_14F50(&qword_A4178);
  uint64_t v52 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  long long v51 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_14F50(&qword_A4180);
  __chkstk_darwin(v57);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_14F50(&qword_A4188);
  __chkstk_darwin(v63);
  long long v58 = (void (**)(char *, char *, uint64_t))((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_76820();
  uint64_t v50 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_14F50(&qword_A4190);
  __chkstk_darwin(v60);
  uint64_t v62 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_14F50(&qword_A4198);
  __chkstk_darwin(v54);
  double v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_14F50(&qword_A41A0);
  __chkstk_darwin(v61);
  long long v55 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_14F50(&qword_A41A8);
  uint64_t v49 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  long long v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_14F50(&qword_A41B0);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  unint64_t v24 = (char *)&v49 - v23;
  uint64_t v25 = *(void *)(a1 + 16);
  uint64_t v26 = *(void *)(a1 + 24);
  switch(*(unsigned char *)(a1 + 32))
  {
    case 1:
      swift_bridgeObjectRetain();
      sub_76830();
      uint64_t v45 = v50;
      (*(void (**)(char *, void, uint64_t))(v50 + 104))(v10, enum case for Image.ResizingMode.stretch(_:), v8);
      uint64_t v46 = sub_76850();
      swift_release();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v8);
      *(void *)double v13 = v46;
      *((void *)v13 + 1) = 0;
      *((_WORD *)v13 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      sub_14F50(&qword_A41E0);
      uint64_t v47 = sub_1508C(&qword_A41D0, &qword_A41A8);
      uint64_t v65 = v53;
      uint64_t v66 = v47;
      swift_getOpaqueTypeConformance2();
      sub_56440();
      uint64_t v48 = (uint64_t)v55;
      sub_76570();
      sub_15144(v48, v62, &qword_A41A0);
      swift_storeEnumTagMultiPayload();
      sub_56364();
      sub_564B4();
      sub_76570();
      sub_151A8(v48, &qword_A41A0);
      uint64_t result = swift_release();
      break;
    case 2:
      BOOL v36 = *(unsigned char *)(a1 + 56) != 2;
      *(void *)uint64_t v6 = v25;
      v6[8] = v36;
      swift_storeEnumTagMultiPayload();
      sub_56310();
      sub_1508C(&qword_A41C0, &qword_A4178);
      swift_bridgeObjectRetain();
      uint64_t v37 = (uint64_t)v58;
      sub_76570();
      sub_15144(v37, v62, &qword_A4188);
      swift_storeEnumTagMultiPayload();
      sub_56364();
      sub_564B4();
      sub_76570();
      uint64_t result = sub_151A8(v37, &qword_A4188);
      break;
    case 3:
      id v38 = objc_allocWithZone((Class)ISIcon);
      swift_bridgeObjectRetain();
      NSString v39 = sub_76BE0();
      sub_16FDC(v25, v26, 3u);
      [v38 initWithType:v39];

      id v40 = v56;
      long long v41 = v51;
      sub_76190();
      uint64_t v42 = v52;
      uint64_t v43 = v59;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v6, v41, v59);
      swift_storeEnumTagMultiPayload();
      sub_56310();
      sub_1508C(&qword_A41C0, &qword_A4178);
      uint64_t v44 = (uint64_t)v58;
      sub_76570();
      sub_15144(v44, v62, &qword_A4188);
      swift_storeEnumTagMultiPayload();
      sub_56364();
      sub_564B4();
      sub_76570();
      sub_151A8(v44, &qword_A4188);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v41, v43);
      break;
    default:
      long long v58 = v22;
      uint64_t v59 = v21;
      id v27 = objc_allocWithZone((Class)ISIcon);
      swift_bridgeObjectRetain();
      NSString v28 = sub_76BE0();
      sub_16FDC(v25, v26, 0);
      [v27 initWithBundleIdentifier:v28];

      id v29 = v56;
      sub_14F50(&qword_A41E0);
      sub_14F50(&qword_A41F0);
      sub_56440();
      sub_56554();
      sub_76180();
      uint64_t v30 = sub_1508C(&qword_A41D0, &qword_A41A8);
      uint64_t v31 = v53;
      sub_766E0();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v16, v31);
      uint64_t v32 = v58;
      uint64_t v33 = v59;
      v58[4](v24, v20, v59);
      v32[2](v13, v24, v33);
      swift_storeEnumTagMultiPayload();
      uint64_t v65 = v31;
      uint64_t v66 = v30;
      swift_getOpaqueTypeConformance2();
      uint64_t v34 = (uint64_t)v55;
      sub_76570();
      sub_15144(v34, v62, &qword_A41A0);
      swift_storeEnumTagMultiPayload();
      sub_56364();
      sub_564B4();
      sub_76570();
      sub_151A8(v34, &qword_A41A0);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v32[1])(v24, v33);
      break;
  }
  return result;
}

uint64_t sub_5598C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_76820();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Image.ResizingMode.stretch(_:), v2);
  uint64_t v6 = sub_76850();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  return result;
}

uint64_t sub_55AA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_14F50(&qword_A4208);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_76A00();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_76820();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_76810();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for Image.ResizingMode.stretch(_:), v9);
  uint64_t v13 = sub_76850();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_769F0();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  uint64_t v14 = sub_14F50(&qword_A41F0);
  sub_15144((uint64_t)v4, a1 + *(int *)(v14 + 36), &qword_A4208);
  *(void *)a1 = v13;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  swift_retain();
  sub_151A8((uint64_t)v4, &qword_A4208);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_55D30@<X0>(uint64_t a1@<X8>)
{
  return sub_54D3C(a1);
}

uint64_t sub_55D74@<X0>(uint64_t a1@<X8>)
{
  return sub_55DE4(&qword_A37D0, (uint64_t (*)(void))&type metadata accessor for SettingsAppPrimaryNavigationMode, 0xD000000000000020, 0x8000000000087770, a1);
}

uint64_t sub_55DAC@<X0>(uint64_t a1@<X8>)
{
  return sub_55DE4(&qword_A37C8, (uint64_t (*)(void))&type metadata accessor for AppendSettingsNavigationPathAction, 0xD000000000000022, 0x8000000000087740, a1);
}

uint64_t sub_55DE4@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_764B0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_14F50(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_15144(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_76DD0();
    uint64_t v21 = sub_765F0();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_35DB8(v27, v25, &v29);
      sub_76E20();
      _os_log_impl(&dword_0, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_764A0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

double sub_5609C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_764B0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = sub_76DD0();
  uint64_t v9 = sub_765F0();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_35DB8(0x74616F6C464743, 0xE700000000000000, &v14);
    sub_76E20();
    _os_log_impl(&dword_0, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_764A0();
  swift_getAtKeyPath();
  sub_46AC8(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(double *)&v14;
}

uint64_t sub_562A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A4170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_56310()
{
  unint64_t result = qword_A41B8;
  if (!qword_A41B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A41B8);
  }
  return result;
}

unint64_t sub_56364()
{
  unint64_t result = qword_A41C8;
  if (!qword_A41C8)
  {
    sub_14F94(&qword_A41A0);
    sub_14F94(&qword_A41A8);
    sub_1508C(&qword_A41D0, &qword_A41A8);
    swift_getOpaqueTypeConformance2();
    sub_56440();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A41C8);
  }
  return result;
}

unint64_t sub_56440()
{
  unint64_t result = qword_A41D8;
  if (!qword_A41D8)
  {
    sub_14F94(&qword_A41E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A41D8);
  }
  return result;
}

unint64_t sub_564B4()
{
  unint64_t result = qword_A41E8;
  if (!qword_A41E8)
  {
    sub_14F94(&qword_A4188);
    sub_56310();
    sub_1508C(&qword_A41C0, &qword_A4178);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A41E8);
  }
  return result;
}

unint64_t sub_56554()
{
  unint64_t result = qword_A41F8;
  if (!qword_A41F8)
  {
    sub_14F94(&qword_A41F0);
    sub_56440();
    sub_1508C(&qword_A4200, &qword_A4208);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A41F8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for GroupIconView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for GroupIconView()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for GroupIconView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for GroupIconView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupIconView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupIconView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupIconView()
{
  return &type metadata for GroupIconView;
}

unint64_t sub_56760()
{
  unint64_t result = qword_A4210;
  if (!qword_A4210)
  {
    sub_14F94(&qword_A4170);
    sub_56B60(&qword_A4218, &qword_A4168, (void (*)(void))sub_56814);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4210);
  }
  return result;
}

unint64_t sub_56814()
{
  unint64_t result = qword_A4220;
  if (!qword_A4220)
  {
    sub_14F94(&qword_A4228);
    sub_56364();
    sub_564B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4220);
  }
  return result;
}

uint64_t sub_56890()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_568AC(char a1)
{
  uint64_t v2 = sub_769C0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  os_log_type_t v8 = (uint64_t *)((char *)&v14 - v7);
  sub_14F50(&qword_A4260);
  sub_769D0();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_7CA10;
  uint64_t v10 = a1;
  *os_log_type_t v8 = qword_7DC88[a1];
  uint64_t v11 = enum case for GridItem.Size.fixed(_:);
  uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 104);
  uint64_t v15 = v2;
  v12(v8, enum case for GridItem.Size.fixed(_:), v2);
  if (qword_A2C60 != -1) {
    swift_once();
  }
  sub_769E0();
  *uint64_t v6 = qword_7DC88[v10];
  v12(v6, v11, v15);
  sub_769E0();
  return v9;
}

uint64_t sub_56AFC@<X0>(uint64_t a1@<X8>)
{
  return sub_54894(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

unint64_t sub_56B08()
{
  unint64_t result = qword_A4230;
  if (!qword_A4230)
  {
    sub_765A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4230);
  }
  return result;
}

uint64_t sub_56B60(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_14F94(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_56BCC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_56C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_54AE8(a1, *(unsigned char *)(v2 + 24), a2);
}

unint64_t sub_56C10()
{
  unint64_t result = qword_A4258;
  if (!qword_A4258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4258);
  }
  return result;
}

uint64_t sub_56C6C()
{
  return sub_1508C(&qword_A4268, &qword_A4270);
}

uint64_t sub_56CB0(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 312) = a2;
  *(void *)(v2 + 104) = a1;
  sub_14F50(&qword_A3500);
  *(void *)(v2 + 112) = swift_task_alloc();
  uint64_t v3 = sub_75F90();
  *(void *)(v2 + 120) = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)(v2 + 128) = v4;
  *(void *)(v2 + 136) = *(void *)(v4 + 64);
  *(void *)(v2 + 144) = swift_task_alloc();
  *(void *)(v2 + 152) = swift_task_alloc();
  sub_14F50(&qword_A3530);
  *(void *)(v2 + 160) = swift_task_alloc();
  sub_76B40();
  *(void *)(v2 + 168) = swift_task_alloc();
  return _swift_task_switch(sub_56E18, 0, 0);
}

uint64_t sub_56E18()
{
  v0[22] = self;
  v0[23] = sub_76D40();
  v0[24] = sub_76D30();
  uint64_t v2 = sub_76D10();
  return _swift_task_switch(sub_56EC0, v2, v1);
}

uint64_t sub_56EC0()
{
  uint64_t v1 = *(void **)(v0 + 176);
  swift_release();
  *(void *)(v0 + 200) = [v1 currentDevice];
  return _swift_task_switch(sub_56F48, 0, 0);
}

uint64_t sub_56F48()
{
  *(void *)(v0 + 208) = sub_76D30();
  uint64_t v2 = sub_76D10();
  return _swift_task_switch(sub_56FD4, v2, v1);
}

uint64_t sub_56FD4()
{
  uint64_t v1 = *(void **)(v0 + 200);
  swift_release();
  *(void *)(v0 + 216) = [v1 buildVersion];

  return _swift_task_switch(sub_5705C, 0, 0);
}

uint64_t sub_5705C(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(v3 + 216);
  if (v4)
  {
    char v5 = *(unsigned char *)(v3 + 312);
    uint64_t v6 = sub_76C10();
    os_log_type_t v8 = v7;

    v16._countAndFlagsBits = v6;
    v16._object = v8;
    sub_76C50(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v17._countAndFlagsBits = 8285;
    v17._object = (void *)0xE200000000000000;
    sub_76C50(v17);
    swift_bridgeObjectRelease();
    *(void *)(v3 + 40) = 91;
    *(void *)(v3 + 48) = 0xE100000000000000;
    if ((v5 & 1) == 0)
    {
      v14._countAndFlagsBits = sub_770B0();
      v14._object = v9;
      swift_bridgeObjectRetain();
      v18._countAndFlagsBits = 0x206D657473797320;
      v18._object = (void *)0xEC00000061746164;
      sub_76C50(v18);
      swift_bridgeObjectRelease();
      sub_76C50(v14);
      swift_bridgeObjectRelease();
    }
    *(void *)(v3 + 224) = sub_76D30();
    uint64_t v10 = sub_76D10();
    uint64_t v12 = v11;
    a1 = sub_571D4;
    a2 = v10;
    a3 = v12;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(a1, a2, a3);
}

uint64_t sub_571D4()
{
  swift_release();
  if (qword_A2C28 != -1) {
    swift_once();
  }
  return _swift_task_switch(sub_5726C, 0, 0);
}

uint64_t sub_5726C()
{
  *(void *)(v0 + 232) = sub_76D30();
  uint64_t v2 = sub_76D10();
  return _swift_task_switch(sub_572F8, v2, v1);
}

uint64_t sub_572F8()
{
  swift_release();
  *(void *)(v0 + 240) = qword_A6A70;
  return _swift_task_switch(sub_5736C, 0, 0);
}

uint64_t sub_5736C()
{
  *(void *)(v0 + 248) = OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_timeStats;
  *(void *)(v0 + 256) = sub_76D30();
  uint64_t v2 = sub_76D10();
  return _swift_task_switch(sub_57408, v2, v1);
}

uint64_t sub_57408()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[21];
  swift_release();
  swift_beginAccess();
  sub_58900(v2 + v1, v3, (uint64_t (*)(void))&type metadata accessor for TimeStats);
  return _swift_task_switch(sub_574BC, 0, 0);
}

uint64_t sub_574BC()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = sub_76B30();
  uint64_t v4 = v3;
  sub_57F30(v1);
  v0[7] = v2;
  v0[8] = v4;
  v0[33] = sub_76D30();
  uint64_t v6 = sub_76D10();
  return _swift_task_switch(sub_5756C, v6, v5);
}

uint64_t sub_5756C()
{
  swift_release();
  return _swift_task_switch(sub_575D4, 0, 0);
}

uint64_t sub_575D4()
{
  *(void *)(v0 + 272) = sub_76D30();
  uint64_t v2 = sub_76D10();
  return _swift_task_switch(sub_57660, v2, v1);
}

uint64_t sub_57660()
{
  swift_release();
  *(void *)(v0 + 280) = qword_A6A70;
  return _swift_task_switch(sub_576D4, 0, 0);
}

uint64_t sub_576D4()
{
  v0[9] = sub_76C10();
  v0[10] = v1;
  v0[36] = v1;
  v0[37] = sub_76D30();
  uint64_t v3 = sub_76D10();
  return _swift_task_switch(sub_57778, v3, v2);
}

uint64_t sub_57778()
{
  swift_release();
  *(void *)(v0 + 304) = sub_28814();
  return _swift_task_switch(sub_577EC, 0, 0);
}

uint64_t sub_577EC()
{
  if (*(void *)(v0[38] + 16) && (unint64_t v1 = sub_4BC5C(v0[9], v0[36]), (v2 & 1) != 0))
  {
    unint64_t v3 = v1;
    uint64_t v4 = v0[20];
    uint64_t v5 = *(void *)(v0[38] + 56);
    uint64_t v6 = type metadata accessor for Application();
    uint64_t v7 = *(void *)(v6 - 8);
    sub_58900(v5 + *(void *)(v7 + 72) * v3, v4, (uint64_t (*)(void))type metadata accessor for Application);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
  }
  else
  {
    uint64_t v8 = v0[20];
    uint64_t v6 = type metadata accessor for Application();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v8, 1, 1, v6);
  }
  uint64_t v9 = v0[20];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Application();
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v9, 1, v6);
  uint64_t v11 = v0[20];
  if (v10)
  {
    sub_5868C(v0[20]);
  }
  else
  {
    uint64_t v12 = v0 + 12;
    uint64_t v13 = *(void *)(v11 + *(int *)(v6 + 84));
    swift_bridgeObjectRetain();
    sub_5868C(v11);
    v36._countAndFlagsBits = 2570;
    v36._object = (void *)0xE200000000000000;
    sub_76C50(v36);
    v37._countAndFlagsBits = 0xD000000000000016;
    v37._object = (void *)0x80000000000877E0;
    sub_76C50(v37);
    int64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      sub_36410(0, v14, 0);
      uint64_t v15 = (uint64_t *)(v13 + 48);
      do
      {
        uint64_t v16 = *v15;
        uint64_t v33 = *(v15 - 2);
        uint64_t v34 = *(v15 - 1);
        swift_bridgeObjectRetain();
        v38._countAndFlagsBits = 598074;
        v38._object = (void *)0xE300000000000000;
        sub_76C50(v38);
        v39._countAndFlagsBits = sub_770B0();
        sub_76C50(v39);
        swift_bridgeObjectRelease();
        v40._countAndFlagsBits = 9;
        v40._object = (void *)0xE100000000000000;
        sub_76C50(v40);
        v0[11] = v16;
        v41._countAndFlagsBits = sub_77030();
        sub_76C50(v41);
        swift_bridgeObjectRelease();
        unint64_t v18 = _swiftEmptyArrayStorage[2];
        unint64_t v17 = _swiftEmptyArrayStorage[3];
        if (v18 >= v17 >> 1) {
          sub_36410(v17 > 1, v18 + 1, 1);
        }
        v15 += 5;
        _swiftEmptyArrayStorage[2] = v18 + 1;
        uint64_t v19 = (char *)&_swiftEmptyArrayStorage[2 * v18];
        *((void *)v19 + 4) = v33;
        *((void *)v19 + 5) = v34;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      uint64_t v12 = v0 + 12;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    *uint64_t v12 = _swiftEmptyArrayStorage;
    sub_14F50(&qword_A3110);
    sub_588A4();
    uint64_t v20 = sub_76B70();
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    v42._countAndFlagsBits = v20;
    v42._object = v22;
    sub_76C50(v42);
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = v0[19];
  uint64_t v24 = v0[18];
  uint64_t v26 = v0[15];
  uint64_t v25 = v0[16];
  uint64_t v27 = v0[14];
  sub_75F80();
  sub_75F70();
  sub_75F60();
  sub_14F50(&qword_A4280);
  sub_75F30();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_7DCB0;
  sub_75F20();
  swift_bridgeObjectRelease();
  sub_75F20();
  swift_bridgeObjectRelease();
  sub_75F20();
  sub_75F20();
  sub_75F20();
  sub_75F20();
  sub_75F20();
  sub_75F40();
  uint64_t v28 = sub_76D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v24, v23, v26);
  unint64_t v29 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 0;
  *(void *)(v30 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v25 + 32))(v30 + v29, v24, v26);
  sub_52508(v27, (uint64_t)&unk_A4290, v30);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_57F30(uint64_t a1)
{
  uint64_t v2 = sub_76B40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_57F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 136) = a4;
  sub_14F50(&qword_A4130);
  *(void *)(v4 + 144) = swift_task_alloc();
  return _swift_task_switch(sub_58020, 0, 0);
}

uint64_t sub_58020()
{
  id v1 = [self defaultWorkspace];
  v0[19] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = v0[18];
    sub_75F50();
    uint64_t v4 = sub_76020();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v7 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      uint64_t v8 = v0[18];
      sub_76000(v6);
      uint64_t v7 = v9;
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
    }
    v0[20] = v7;
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_581F4;
    uint64_t v10 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_5859C;
    v0[13] = &unk_97EE8;
    v0[14] = v10;
    [v2 openURL:v7 configuration:0 completionHandler:v0 + 10];
    id v1 = v0 + 2;
  }
  else
  {
    __break(1u);
  }
  return _swift_continuation_await(v1);
}

uint64_t sub_581F4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1) {
    uint64_t v2 = sub_5837C;
  }
  else {
    uint64_t v2 = sub_58304;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_58304()
{
  uint64_t v1 = *(void **)(v0 + 160);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_5837C()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = (void *)v0[19];
  swift_willThrow();

  if (qword_A2C20 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_76200();
  sub_1A620(v3, (uint64_t)qword_A6A58);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = sub_761F0();
  os_log_type_t v5 = sub_76DC0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v8;
    sub_76E20();
    *uint64_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v4, v5, "Failed to launch tap-to-radar with error %@", v6, 0xCu);
    sub_14F50(&qword_A3650);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_5859C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_14F50(&qword_A32D0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    if (a2) {
      uint64_t v8 = sub_76B60();
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v10 = v8;
    sub_58968((uint64_t)&v10, *(void *)(*(void *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_5868C(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A3530);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_586EC()
{
  uint64_t v1 = sub_75F90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_587B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_75F90() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_163DC;
  return sub_57F8C(a1, v5, v6, v7);
}

unint64_t sub_588A4()
{
  unint64_t result = qword_A3118;
  if (!qword_A3118)
  {
    sub_14F94(&qword_A3110);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3118);
  }
  return result;
}

uint64_t sub_58900(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_58968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A4298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for HiddenAppsListView()
{
  return &type metadata for HiddenAppsListView;
}

uint64_t sub_589E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_589FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_14F50(&qword_A3B18);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_14F50(&qword_A42B8);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v25[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  char v28 = a3;
  uint64_t v29 = a4;
  char v30 = a3;
  uint64_t v31 = a4;
  sub_14F50(&qword_A3B30);
  sub_768A0();
  uint64_t v17 = v32;
  uint64_t v18 = v33;
  LOBYTE(a1) = v34;
  type metadata accessor for StorageShared();
  sub_59D8C((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
  uint64_t v32 = sub_76390();
  uint64_t v33 = v19;
  uint64_t v34 = v17;
  uint64_t v35 = v18;
  char v36 = a1;
  sub_14F50(&qword_A42C8);
  sub_46588();
  sub_59C30();
  sub_76990();
  uint64_t v20 = sub_766B0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v12, 1, 1, v20);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = (uint64_t *)(a5 + *(int *)(sub_14F50(&qword_A42A0) + 36));
  uint64_t v23 = sub_14F50(&qword_A3B88);
  sub_15144((uint64_t)v12, (uint64_t)v22 + *(int *)(v23 + 28), &qword_A3B18);
  *uint64_t v22 = KeyPath;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v14 + 16))(a5, v16, v13);
  sub_151A8((uint64_t)v12, &qword_A3B18);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_58CC8@<X0>(void *a1@<X0>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v45 = a3;
  int v43 = a2;
  uint64_t v6 = sub_14F50(&qword_A42E8);
  uint64_t KeyPath = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_14F50(&qword_A42D8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v40 - v13;
  uint64_t v50 = sub_14F50(&qword_A42F8);
  __chkstk_darwin(v50);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_14F50(&qword_A3530);
  uint64_t v17 = __chkstk_darwin(v46);
  uint64_t v44 = (uint64_t)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  Swift::String v42 = (char *)&v40 - v19;
  uint64_t v20 = type metadata accessor for AppsListView();
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v47 = (char *)&v40 - v24;
  if (a1)
  {
    uint64_t v25 = a1;
    uint64_t v26 = *(void *)(sub_28814() + 16);
    swift_bridgeObjectRelease();
    if (v26)
    {
      int v27 = v25[OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_recommendationsDidUpdateOnce];

      if (v27 == 1)
      {
        swift_getKeyPath();
        Swift::String v41 = v16;
        swift_getKeyPath();
        char v28 = v25;
        sub_76240();

        uint64_t v16 = v41;
        swift_release();
        swift_release();
        uint64_t v29 = *(void *)(v53 + 16);
        swift_bridgeObjectRelease();
        if (v29)
        {
          uint64_t KeyPath = swift_getKeyPath();
          char v51 = v43;
          uint64_t v52 = v45;
          sub_14F50(&qword_A3B30);
          sub_768A0();
          uint64_t v30 = v53;
          uint64_t v49 = a4;
          uint64_t v45 = v54;
          char v31 = v55;
          type metadata accessor for StorageShared();
          sub_59D8C((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
          *((void *)v23 + 2) = sub_76390();
          *((void *)v23 + 3) = v32;
          char v51 = 1;
          sub_76870();
          uint64_t v33 = v54;
          v23[56] = v53;
          *((void *)v23 + 8) = v33;
          uint64_t v34 = type metadata accessor for Application();
          uint64_t v35 = (uint64_t)v42;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v42, 1, 1, v34);
          sub_15144(v35, v44, &qword_A3530);
          sub_76870();
          sub_151A8(v35, &qword_A3530);
          uint64_t v36 = (uint64_t)v47;
          *(void *)uint64_t v23 = KeyPath;
          v23[8] = 0;
          uint64_t v37 = v45;
          *((void *)v23 + 4) = v30;
          *((void *)v23 + 5) = v37;
          v23[48] = v31;
          sub_46AE4((uint64_t)v23, v36);
          sub_59F24(v36, (uint64_t)v16);
          swift_storeEnumTagMultiPayload();
          sub_59D8C(&qword_A3B60, (void (*)(uint64_t))type metadata accessor for AppsListView);
          sub_59CDC();
          sub_76570();
          return sub_59F88(v36);
        }
      }
    }
    else
    {
    }
    sub_14F50(&qword_A4300);
    sub_1508C(&qword_A4308, &qword_A4300);
    sub_765B0();
    sub_76A10();
    __n128 v39 = sub_59890(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, INFINITY, 0);
    (*(void (**)(char *, uint64_t, __n128))(KeyPath + 8))(v8, v49, v39);
    sub_59EB4((uint64_t)v12, (uint64_t)v14);
    sub_15144((uint64_t)v14, (uint64_t)v16, &qword_A42D8);
    swift_storeEnumTagMultiPayload();
    sub_59D8C(&qword_A3B60, (void (*)(uint64_t))type metadata accessor for AppsListView);
    sub_59CDC();
    sub_76570();
    return sub_151A8((uint64_t)v14, &qword_A42D8);
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_59D8C((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
    uint64_t result = sub_76380();
    __break(1u);
  }
  return result;
}

uint64_t sub_593FC()
{
  sub_14F50(&qword_A4310);
  sub_59FE4();

  return sub_76860();
}

uint64_t sub_5948C@<X0>(uint64_t a1@<X8>)
{
  NSString v2 = sub_76BE0();
  NSString v3 = sub_76BE0();
  id v4 = STLocalizedString(v2);

  sub_76C10();
  sub_15038();
  uint64_t v5 = sub_766D0();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  sub_76640();
  uint64_t v10 = sub_766C0();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v16 = v15;
  swift_release();
  sub_150D0(v5, v7, v9);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v12;
  *(unsigned char *)(a1 + 16) = v14 & 1;
  *(void *)(a1 + 24) = v16;
  return result;
}

uint64_t sub_595D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_14F50(&qword_A4328);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_76840();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_76810();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.Scale.large(_:), v6);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 36), v9, v6);
  *uint64_t v5 = KeyPath;
  uint64_t v12 = sub_14F50(&qword_A4310);
  sub_15144((uint64_t)v5, (uint64_t)a1 + *(int *)(v12 + 36), &qword_A4328);
  *a1 = v10;
  swift_retain();
  sub_151A8((uint64_t)v5, &qword_A4328);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_597BC@<X0>(uint64_t a1@<X8>)
{
  NSString v2 = sub_76BE0();
  NSString v3 = sub_76BE0();
  id v4 = STLocalizedString(v2);

  sub_76C10();
  sub_15038();
  uint64_t result = sub_766D0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7 & 1;
  *(void *)(a1 + 24) = v8;
  return result;
}

__n128 sub_59890@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_76DD0();
    uint64_t v23 = (void *)sub_765F0();
    sub_761D0();
  }
  sub_76370();
  uint64_t v24 = sub_14F50(&qword_A42E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  uint64_t v25 = (_OWORD *)(a9 + *(int *)(sub_14F50(&qword_A42D8) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *uint64_t v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  void v25[2] = v29;
  v25[3] = v30;
  return result;
}

uint64_t sub_59A7C()
{
  return sub_76680();
}

uint64_t sub_59AF8@<X0>(uint64_t a1@<X8>)
{
  return sub_589FC(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), a1);
}

unint64_t sub_59B08()
{
  unint64_t result = qword_A42A8;
  if (!qword_A42A8)
  {
    sub_14F94(&qword_A42A0);
    sub_59BA8();
    sub_1508C(&qword_A42F0, &qword_A3B88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A42A8);
  }
  return result;
}

unint64_t sub_59BA8()
{
  unint64_t result = qword_A42B0;
  if (!qword_A42B0)
  {
    sub_14F94(&qword_A42B8);
    sub_46588();
    sub_59C30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A42B0);
  }
  return result;
}

unint64_t sub_59C30()
{
  unint64_t result = qword_A42C0;
  if (!qword_A42C0)
  {
    sub_14F94(&qword_A42C8);
    sub_59D8C(&qword_A3B60, (void (*)(uint64_t))type metadata accessor for AppsListView);
    sub_59CDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A42C0);
  }
  return result;
}

unint64_t sub_59CDC()
{
  unint64_t result = qword_A42D0;
  if (!qword_A42D0)
  {
    sub_14F94(&qword_A42D8);
    sub_1508C(&qword_A42E0, &qword_A42E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A42D0);
  }
  return result;
}

uint64_t sub_59D7C@<X0>(uint64_t a1@<X8>)
{
  return sub_58CC8(*(void **)(v1 + 16), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_59D8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_59DD4()
{
  return sub_76460();
}

uint64_t sub_59DF8()
{
  return sub_76460();
}

uint64_t sub_59E1C(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A3B18);
  __chkstk_darwin(v2 - 8);
  sub_15144(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_A3B18);
  return sub_76470();
}

uint64_t sub_59EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A42D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_59F24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppsListView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_59F88(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppsListView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_59FE4()
{
  unint64_t result = qword_A4318;
  if (!qword_A4318)
  {
    sub_14F94(&qword_A4310);
    sub_1508C(&qword_A4320, &qword_A4328);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4318);
  }
  return result;
}

uint64_t sub_5A084()
{
  return sub_763A0();
}

uint64_t sub_5A0A8(uint64_t a1)
{
  uint64_t v2 = sub_76840();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_763B0();
}

uint64_t sub_5A174()
{
  return sub_1508C(&qword_A4330, &qword_A4338);
}

ValueMetadata *type metadata accessor for SyncedContentDetailView()
{
  return &type metadata for SyncedContentDetailView;
}

uint64_t sub_5A1C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_5A1DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SyncedContent();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4 - 8);
  uint64_t v8 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - v9;
  sub_5AAC0(a1, (uint64_t)&v19 - v9);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  sub_5AB28((uint64_t)v10, v12 + v11);
  sub_5AAC0(a1, (uint64_t)v8);
  uint64_t v13 = swift_allocObject();
  sub_5AB28((uint64_t)v8, v13 + v11);
  *a2 = swift_getKeyPath();
  sub_14F50(&qword_A37C8);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (int *)sub_14F50(&qword_A4350);
  uint64_t v15 = (uint64_t *)((char *)a2 + v14[9]);
  *uint64_t v15 = swift_getKeyPath();
  sub_14F50(&qword_A37D0);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *((unsigned char *)a2 + v14[10]) = 0;
  uint64_t v17 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)a2 + v14[11]);
  *uint64_t v17 = sub_5AB8C;
  v17[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v12;
  uint64_t v18 = (double (**)@<D0>(uint64_t@<X8>))((char *)a2 + v14[12]);
  void *v18 = sub_5ADAC;
  v18[1] = (double (*)@<D0>(uint64_t@<X8>))v13;
  return result;
}

uint64_t sub_5A3D0@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SyncedContent();
  sub_1C7F8(a1);
  uint64_t v2 = sub_76140();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

double sub_5A460@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_764E0();
  sub_5A540(a1, (uint64_t)v10);
  *(_OWORD *)&v11[103] = v10[6];
  *(_OWORD *)&v11[87] = v10[5];
  *(_OWORD *)&v11[39] = v10[2];
  *(_OWORD *)&v11[23] = v10[1];
  *(_OWORD *)&v11[119] = v10[7];
  *(_OWORD *)&v11[135] = v10[8];
  *(_OWORD *)&v11[55] = v10[3];
  *(_OWORD *)&v11[71] = v10[4];
  *(_OWORD *)&v11[7] = v10[0];
  long long v5 = *(_OWORD *)&v11[112];
  *(_OWORD *)(a2 + 113) = *(_OWORD *)&v11[96];
  *(_OWORD *)(a2 + 129) = v5;
  *(_OWORD *)(a2 + 145) = *(_OWORD *)&v11[128];
  long long v6 = *(_OWORD *)&v11[48];
  *(_OWORD *)(a2 + 49) = *(_OWORD *)&v11[32];
  *(_OWORD *)(a2 + 65) = v6;
  long long v7 = *(_OWORD *)&v11[80];
  *(_OWORD *)(a2 + 81) = *(_OWORD *)&v11[64];
  *(_OWORD *)(a2 + 97) = v7;
  double result = *(double *)v11;
  long long v9 = *(_OWORD *)&v11[16];
  *(_OWORD *)(a2 + 17) = *(_OWORD *)v11;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 160) = *(void *)&v11[143];
  *(_OWORD *)(a2 + 33) = v9;
  return result;
}

uint64_t sub_5A540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for SyncedContent() + 28);
  uint64_t v4 = *(void *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 88);
  uint64_t v27 = v5;
  uint64_t v28 = *(void *)(v3 + 104);
  uint64_t v30 = *(void *)(v3 + 112);
  uint64_t v31 = v4;
  unsigned __int8 v6 = *(unsigned char *)(v3 + 96);
  unsigned __int8 v26 = v6;
  uint64_t KeyPath = swift_getKeyPath();
  sub_16F10(v4, v5, v6);
  sub_15038();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_766D0();
  uint64_t v24 = v8;
  uint64_t v25 = v9;
  LOBYTE(v5) = v10 & 1;
  DWORD1(v33) = (unint64_t)sub_770B0() >> 32;
  uint64_t v11 = sub_766D0();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  LODWORD(v33) = sub_765C0();
  uint64_t v16 = sub_766A0();
  uint64_t v18 = v17;
  uint64_t v29 = v19;
  char v21 = v20 & 1;
  char v23 = v20 & 1;
  sub_150D0(v11, v13, v15);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a2 + 9) = v33;
  *(_DWORD *)(a2 + 12) = *(_DWORD *)((char *)&v33 + 3);
  *(_DWORD *)(a2 + 33) = *(_DWORD *)v38;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v38[3];
  *(_DWORD *)(a2 + 60) = *(_DWORD *)&v37[3];
  *(_DWORD *)(a2 + 57) = *(_DWORD *)v37;
  *(_DWORD *)(a2 + 81) = *(_DWORD *)v36;
  *(_DWORD *)(a2 + 84) = *(_DWORD *)&v36[3];
  *(_DWORD *)(a2 + 105) = *(_DWORD *)v35;
  *(_DWORD *)(a2 + 108) = *(_DWORD *)&v35[3];
  *(_DWORD *)(a2 + 129) = *(_DWORD *)v34;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v34[3];
  *(void *)a2 = KeyPath;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v31;
  *(void *)(a2 + 24) = v27;
  *(unsigned char *)(a2 + 32) = v26;
  *(void *)(a2 + 40) = v28;
  *(void *)(a2 + 48) = v30;
  *(unsigned char *)(a2 + 56) = 2;
  *(void *)(a2 + 64) = v7;
  *(void *)(a2 + 72) = v24;
  *(unsigned char *)(a2 + 80) = v5;
  *(void *)(a2 + 88) = v25;
  *(void *)(a2 + 96) = 0;
  *(unsigned char *)(a2 + 104) = 1;
  *(void *)(a2 + 112) = v16;
  *(void *)(a2 + 120) = v18;
  *(unsigned char *)(a2 + 128) = v21;
  *(void *)(a2 + 136) = v29;
  sub_46ABC(KeyPath, 0);
  sub_16F10(v31, v27, v26);
  swift_bridgeObjectRetain();
  sub_16E5C(v7, v24, v5);
  swift_bridgeObjectRetain();
  sub_16E5C(v16, v18, v23);
  swift_bridgeObjectRetain();
  sub_150D0(v16, v18, v23);
  swift_bridgeObjectRelease();
  sub_150D0(v7, v24, v5);
  swift_bridgeObjectRelease();
  sub_46AC8(KeyPath, 0);
  sub_16FDC(v31, v27, v26);
  return swift_bridgeObjectRelease();
}

uint64_t sub_5A834@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_14F50(&qword_A4340);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned __int8 v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1)
  {
    v8[1] = *(void *)(*v1 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_syncedMediaSizes);
    swift_bridgeObjectRetain();
    sub_14F50(&qword_A4348);
    sub_14F50(&qword_A4350);
    sub_1508C(&qword_A4358, &qword_A4348);
    sub_1508C(&qword_A4360, &qword_A4350);
    sub_5AA78(&qword_A4368, (void (*)(uint64_t))type metadata accessor for SyncedContent);
    sub_76980();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v6, v3);
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_5AA78((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
    uint64_t result = sub_76380();
    __break(1u);
  }
  return result;
}

uint64_t sub_5AA78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_5AAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SyncedContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_5AB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SyncedContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_5AB8C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SyncedContent();

  return sub_5A3D0(a1);
}

uint64_t sub_5AC00()
{
  uint64_t v1 = (int *)(type metadata accessor for SyncedContent() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_16FDC(*(void *)(v5 + 80), *(void *)(v5 + 88), *(unsigned char *)(v5 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for Application() + 72);
  uint64_t v7 = sub_76070();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

double sub_5ADAC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for SyncedContent() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_5A460(v4, a1);
}

uint64_t sub_5AE1C()
{
  return sub_76400();
}

uint64_t sub_5AE40()
{
  return sub_76400();
}

uint64_t sub_5AE64()
{
  return sub_76410();
}

uint64_t sub_5AE88()
{
  return sub_76410();
}

unint64_t sub_5AEB8()
{
  unint64_t result = qword_A4370;
  if (!qword_A4370)
  {
    sub_14F94(&qword_A4340);
    sub_1508C(&qword_A4360, &qword_A4350);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4370);
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationsView()
{
  return &type metadata for RecommendationsView;
}

uint64_t sub_5AF60()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_5AF7C(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  LOBYTE(v13[0]) = a3;
  v13[1] = a4;
  sub_14F50(&qword_A3A68);
  sub_76880();
  if (v14 == 1)
  {
    if (a1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      id v5 = a1;
      sub_76240();

      swift_release();
      swift_release();
      swift_bridgeObjectRetain();
      sub_5BF70(v13);
      swift_bridgeObjectRelease();
      return (void *)v13[0];
    }
  }
  else if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v7 = a1;
    sub_76240();

    swift_release();
    swift_release();
    swift_bridgeObjectRetain();
    sub_5BF70(v13);
    swift_bridgeObjectRelease();
    uint64_t v8 = v13[0];
    if (*(void *)(v13[0] + 16) >= 2uLL) {
      uint64_t v9 = 2;
    }
    else {
      uint64_t v9 = *(void *)(v13[0] + 16);
    }
    sub_77060();
    swift_unknownObjectRetain_n();
    char v10 = (void *)swift_dynamicCastClass();
    if (!v10)
    {
      swift_release();
      char v10 = _swiftEmptyArrayStorage;
    }
    uint64_t v11 = v10[2];
    swift_release();
    if (v11 == v9)
    {
      uint64_t v6 = swift_dynamicCastClass();
      swift_release();
      if (!v6)
      {
        swift_release();
        return _swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_release();
      uint64_t v6 = (uint64_t)sub_4C53C(v8, v8 + 32, 0, (2 * v9) | 1);
      swift_release();
    }
    return (void *)v6;
  }
  type metadata accessor for StorageShared();
  sub_164D0();
  sub_76380();
  __break(1u);
  unint64_t result = (void *)swift_release();
  __break(1u);
  return result;
}

uint64_t sub_5B1C4(void *a1)
{
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v2 = a1;
    sub_76240();

    swift_release();
    swift_release();
    unint64_t v3 = *(void *)(v6 + 16);
    swift_bridgeObjectRelease();
    if (v3 <= 2)
    {
      char v4 = 0;
    }
    else
    {
      sub_14F50(&qword_A3A68);
      sub_76880();
      char v4 = v7 ^ 1;
    }
    return v4 & 1;
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_164D0();
    uint64_t result = sub_76380();
    __break(1u);
  }
  return result;
}

uint64_t sub_5B2C8(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v12 = sub_14F50(&qword_A43A8);
  uint64_t v13 = __chkstk_darwin(v12);
  char v15 = &v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v17 = &v22[-v16];
  char v23 = a2;
  if (a1)
  {
    uint64_t v18 = sub_14F50(&qword_A43B8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
  }
  else
  {
    *(void *)char v15 = sub_764E0();
    *((void *)v15 + 1) = 0;
    v15[16] = 1;
    uint64_t v19 = sub_14F50(&qword_A43C8);
    sub_5B5C0(a2, a3, a4, a5 & 1, a6, (uint64_t)&v15[*(int *)(v19 + 44)]);
    uint64_t v20 = sub_14F50(&qword_A43B8);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v15, 0, 1, v20);
  }
  sub_150E0((uint64_t)v15, (uint64_t)v17, &qword_A43A8);
  sub_5D000();
  sub_5D098();
  return sub_76990();
}

double sub_5B4B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v20 = *(_OWORD *)(a1 + 176);
  long long v21 = *(_OWORD *)(a1 + 192);
  long long v16 = *(_OWORD *)(a1 + 112);
  long long v17 = *(_OWORD *)(a1 + 128);
  char v22 = *(unsigned char *)(a1 + 208);
  long long v18 = *(_OWORD *)(a1 + 144);
  long long v19 = *(_OWORD *)(a1 + 160);
  long long v11 = *(_OWORD *)(a1 + 32);
  long long v12 = *(_OWORD *)(a1 + 48);
  long long v13 = *(_OWORD *)(a1 + 64);
  long long v14 = *(_OWORD *)(a1 + 80);
  long long v15 = *(_OWORD *)(a1 + 96);
  long long v9 = *(_OWORD *)a1;
  long long v10 = *(_OWORD *)(a1 + 16);
  sub_389F4(a1);
  type metadata accessor for StorageShared();
  sub_164D0();
  uint64_t v3 = sub_76390();
  uint64_t v5 = v4;
  sub_76870();
  *(_OWORD *)(a2 + 176) = v19;
  *(_OWORD *)(a2 + 192) = v20;
  *(_OWORD *)(a2 + 208) = v21;
  *(_OWORD *)(a2 + 112) = v15;
  *(_OWORD *)(a2 + 128) = v16;
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 224) = v22;
  *(_OWORD *)(a2 + 144) = v17;
  *(_OWORD *)(a2 + 160) = v18;
  *(_OWORD *)(a2 + 48) = v11;
  *(_OWORD *)(a2 + 64) = v12;
  *(_OWORD *)(a2 + 80) = v13;
  *(_OWORD *)(a2 + 96) = v14;
  double result = *(double *)&v9;
  *(_OWORD *)(a2 + 16) = v9;
  *(_OWORD *)(a2 + 32) = v10;
  *(unsigned char *)(a2 + 232) = v7;
  *(void *)(a2 + 240) = v8;
  return result;
}

uint64_t sub_5B5C0@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v59 = a5;
  uint64_t v60 = a3;
  int v57 = a4;
  long long v58 = a2;
  uint64_t v65 = a6;
  uint64_t v7 = sub_14F50(&qword_A43D0);
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  __chkstk_darwin(v7);
  uint64_t v54 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_14F50(&qword_A43D8);
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  __chkstk_darwin(v9);
  uint64_t v53 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_14F50(&qword_A43E0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v64 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v15 = (char *)&v53 - v14;
  uint64_t v16 = sub_14F50(&qword_A2DF8);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v61 = (uint64_t)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  long long v20 = (char *)&v53 - v19;
  NSString v21 = sub_76BE0();
  NSString v22 = sub_76BE0();
  id v23 = STLocalizedString(v21);

  uint64_t v24 = sub_76C10();
  unint64_t v26 = v25;

  unint64_t v68 = v24;
  unint64_t v69 = v26;
  sub_15038();
  uint64_t v27 = sub_766D0();
  uint64_t v29 = v28;
  unint64_t v68 = v27;
  unint64_t v69 = v28;
  LOBYTE(v23) = v30 & 1;
  char v70 = v30 & 1;
  uint64_t v71 = v31;
  unint64_t v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  sub_76F70(30);
  swift_bridgeObjectRelease();
  unint64_t v66 = 0xD00000000000001CLL;
  unint64_t v67 = 0x8000000000087950;
  uint64_t v32 = *a1;
  long long v33 = (void *)a1[1];
  swift_bridgeObjectRetain();
  v72._countAndFlagsBits = v32;
  v72._object = v33;
  sub_76C50(v72);
  swift_bridgeObjectRelease();
  sub_767B0();
  char v34 = v57;
  swift_bridgeObjectRelease();
  uint64_t v35 = v29;
  char v36 = (char)v23;
  uint64_t v37 = v58;
  uint64_t v38 = v59;
  sub_150D0(v27, v35, v36);
  uint64_t v39 = v60;
  swift_bridgeObjectRelease();
  char v40 = sub_5B1C4(v37);
  uint64_t v41 = 1;
  if (v40)
  {
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v37;
    *(void *)(v42 + 24) = v39;
    *(unsigned char *)(v42 + 32) = v34 & 1;
    *(void *)(v42 + 40) = v38;
    swift_retain();
    id v43 = v37;
    sub_14F50(&qword_A43F0);
    sub_5D190();
    uint64_t v44 = v54;
    sub_768D0();
    unint64_t v68 = 0;
    unint64_t v69 = 0xE000000000000000;
    sub_76F70(31);
    swift_bridgeObjectRelease();
    unint64_t v68 = 0xD00000000000001DLL;
    unint64_t v69 = 0x8000000000087970;
    swift_bridgeObjectRetain();
    v73._countAndFlagsBits = v32;
    v73._object = v33;
    sub_76C50(v73);
    swift_bridgeObjectRelease();
    sub_1508C(&qword_A4400, &qword_A43D0);
    uint64_t v45 = (uint64_t)v53;
    uint64_t v46 = v56;
    sub_767B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v46);
    sub_150E0(v45, (uint64_t)v15, &qword_A43D8);
    uint64_t v41 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v15, v41, 1, v63);
  uint64_t v47 = v61;
  sub_15144((uint64_t)v20, v61, &qword_A2DF8);
  uint64_t v48 = v64;
  sub_15144((uint64_t)v15, v64, &qword_A43E0);
  uint64_t v49 = v65;
  sub_15144(v47, v65, &qword_A2DF8);
  uint64_t v50 = sub_14F50(&qword_A43E8);
  uint64_t v51 = v49 + *(int *)(v50 + 48);
  *(void *)uint64_t v51 = 0;
  *(unsigned char *)(v51 + 8) = 1;
  sub_15144(v48, v49 + *(int *)(v50 + 64), &qword_A43E0);
  sub_151A8((uint64_t)v15, &qword_A43E0);
  sub_151A8((uint64_t)v20, &qword_A2DF8);
  sub_151A8(v48, &qword_A43E0);
  return sub_151A8(v47, &qword_A2DF8);
}

uint64_t sub_5BB98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_14F50(&qword_A3B88);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_14F50(&qword_A3B18);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = sub_76BE0();
  NSString v10 = sub_76BE0();
  id v11 = STLocalizedString(v9);

  uint64_t v12 = sub_76C10();
  uint64_t v14 = v13;

  v26[0] = v12;
  v26[1] = v14;
  sub_15038();
  uint64_t v15 = sub_766D0();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t v22 = sub_766B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v8, 1, 1, v22);
  uint64_t KeyPath = swift_getKeyPath();
  sub_15144((uint64_t)v8, (uint64_t)v5 + *(int *)(v3 + 36), &qword_A3B18);
  *uint64_t v5 = KeyPath;
  uint64_t v24 = sub_14F50(&qword_A43F0);
  sub_15144((uint64_t)v5, a1 + *(int *)(v24 + 36), &qword_A3B88);
  *(void *)a1 = v15;
  *(void *)(a1 + 8) = v17;
  *(unsigned char *)(a1 + 16) = v21;
  *(void *)(a1 + 24) = v19;
  sub_16E5C(v15, v17, v21);
  swift_bridgeObjectRetain();
  sub_151A8((uint64_t)v5, &qword_A3B88);
  sub_151A8((uint64_t)v8, &qword_A3B18);
  sub_150D0(v15, v17, v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_5BDF8()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = sub_5AF7C(*(void **)v0, v2, v3, v4);
  sub_5CB74((uint64_t)v5);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v2;
  *(unsigned char *)(v6 + 32) = v3;
  *(void *)(v6 + 40) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_5CE48;
  *(void *)(v7 + 24) = v6;
  swift_retain();
  id v8 = v1;
  sub_14F50(&qword_A4378);
  sub_14F50(&qword_A4380);
  sub_1508C(&qword_A4388, &qword_A4378);
  sub_5CF24();
  sub_5CF78();
  return sub_76970();
}

Swift::Int sub_5BF70(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2231C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_5BFDC(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_5BFDC(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_77020(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_139;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v83 = *v2;
      uint64_t v84 = *v2 + 216;
      uint64_t v85 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v87 = v85;
        uint64_t v88 = v84;
        do
        {
          if (*(void *)(v88 - 112) >= *(void *)(v88 + 104)) {
            break;
          }
          if (!v83) {
            goto LABEL_143;
          }
          uint64_t v89 = v88 - 216;
          long long v144 = *(_OWORD *)(v88 + 160);
          long long v147 = *(_OWORD *)(v88 + 176);
          long long v150 = *(_OWORD *)(v88 + 192);
          char v153 = *(unsigned char *)(v88 + 208);
          long long v132 = *(_OWORD *)(v88 + 96);
          long long v135 = *(_OWORD *)(v88 + 112);
          long long v138 = *(_OWORD *)(v88 + 128);
          long long v141 = *(_OWORD *)(v88 + 144);
          long long v120 = *(_OWORD *)(v88 + 32);
          long long v123 = *(_OWORD *)(v88 + 48);
          long long v126 = *(_OWORD *)(v88 + 64);
          long long v129 = *(_OWORD *)(v88 + 80);
          long long v114 = *(_OWORD *)v88;
          long long v117 = *(_OWORD *)(v88 + 16);
          long long v90 = *(_OWORD *)(v88 - 40);
          *(_OWORD *)(v88 + 160) = *(_OWORD *)(v88 - 56);
          *(_OWORD *)(v88 + 176) = v90;
          *(_OWORD *)(v88 + 192) = *(_OWORD *)(v88 - 24);
          *(void *)(v88 + 208) = *(void *)(v88 - 8);
          long long v91 = *(_OWORD *)(v88 - 104);
          *(_OWORD *)(v88 + 96) = *(_OWORD *)(v88 - 120);
          *(_OWORD *)(v88 + 112) = v91;
          long long v92 = *(_OWORD *)(v88 - 72);
          *(_OWORD *)(v88 + 128) = *(_OWORD *)(v88 - 88);
          *(_OWORD *)(v88 + 144) = v92;
          long long v93 = *(_OWORD *)(v88 - 168);
          *(_OWORD *)(v88 + 32) = *(_OWORD *)(v88 - 184);
          *(_OWORD *)(v88 + 48) = v93;
          long long v94 = *(_OWORD *)(v88 - 136);
          *(_OWORD *)(v88 + 64) = *(_OWORD *)(v88 - 152);
          *(_OWORD *)(v88 + 80) = v94;
          long long v95 = *(_OWORD *)(v88 - 200);
          *(_OWORD *)uint64_t v88 = *(_OWORD *)(v88 - 216);
          *(_OWORD *)(v88 + 16) = v95;
          *(_OWORD *)(v89 + 160) = v144;
          *(_OWORD *)(v89 + 176) = v147;
          *(_OWORD *)(v89 + 192) = v150;
          *(unsigned char *)(v89 + 208) = v153;
          *(_OWORD *)(v89 + 96) = v132;
          *(_OWORD *)(v89 + 112) = v135;
          *(_OWORD *)(v89 + 128) = v138;
          *(_OWORD *)(v89 + 144) = v141;
          *(_OWORD *)(v89 + 32) = v120;
          *(_OWORD *)(v89 + 48) = v123;
          *(_OWORD *)(v89 + 64) = v126;
          *(_OWORD *)(v89 + 80) = v129;
          v88 -= 216;
          *(_OWORD *)uint64_t v89 = v114;
          *(_OWORD *)(v89 + 16) = v117;
        }
        while (!__CFADD__(v87++, 1));
        v84 += 216;
        --v85;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_148;
  }
  Swift::Int v108 = result;
  if (v3 < 2)
  {
    id v8 = _swiftEmptyArrayStorage;
    uint64_t v110 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      uint64_t v97 = (char *)_swiftEmptyArrayStorage;
LABEL_105:
      uint64_t v107 = v8;
      if (v11 >= 2)
      {
        uint64_t v98 = *v2;
        do
        {
          unint64_t v99 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_134;
          }
          if (!v98) {
            goto LABEL_147;
          }
          uint64_t v100 = v97;
          uint64_t v101 = *(void *)&v97[16 * v99 + 32];
          uint64_t v102 = *(void *)&v97[16 * v11 + 24];
          sub_5C8BC((char *)(v98 + 216 * v101), (char *)(v98 + 216 * *(void *)&v97[16 * v11 + 16]), v98 + 216 * v102, v110);
          if (v1) {
            break;
          }
          if (v102 < v101) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v100 = sub_222F4((uint64_t)v100);
          }
          if (v99 >= *((void *)v100 + 2)) {
            goto LABEL_136;
          }
          uint64_t v103 = &v100[16 * v99 + 32];
          *(void *)uint64_t v103 = v101;
          *((void *)v103 + 1) = v102;
          unint64_t v104 = *((void *)v100 + 2);
          if (v11 > v104) {
            goto LABEL_137;
          }
          memmove(&v100[16 * v11 + 16], &v100[16 * v11 + 32], 16 * (v104 - v11));
          uint64_t v97 = v100;
          *((void *)v100 + 2) = v104 - 1;
          unint64_t v11 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      v107[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v107 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_76CE0();
    *(void *)(v7 + 16) = v6;
    uint64_t v107 = (void *)v7;
    uint64_t v110 = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v105 = v2;
  uint64_t v10 = *v2;
  uint64_t v106 = v10 + 104;
  uint64_t v111 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v109 = v3;
  while (1)
  {
    Swift::Int v12 = v9++;
    if (v9 < v3)
    {
      uint64_t v13 = *(void *)(v106 + 216 * v9);
      uint64_t v14 = *(void *)(v106 + 216 * v12);
      Swift::Int v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        uint64_t v15 = (void *)(v10 + 320 + 216 * v12);
        uint64_t v16 = v15;
        while (1)
        {
          uint64_t v17 = v16[27];
          v16 += 27;
          if (v14 < v13 == *v15 >= v17) {
            break;
          }
          ++v9;
          uint64_t v15 = v16;
          if (v3 == v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v14 < v13)
      {
        if (v9 < v12) {
          goto LABEL_140;
        }
        if (v12 < v9)
        {
          uint64_t v18 = (_OWORD *)(v10 - 216 + 216 * v9);
          Swift::Int v19 = v9;
          Swift::Int v20 = v12;
          char v21 = (_OWORD *)(v10 + 216 * v12);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_146;
              }
              long long v142 = v21[10];
              long long v145 = v21[11];
              long long v148 = v21[12];
              char v151 = *((unsigned char *)v21 + 208);
              long long v130 = v21[6];
              long long v133 = v21[7];
              long long v136 = v21[8];
              long long v139 = v21[9];
              long long v118 = v21[2];
              long long v121 = v21[3];
              long long v124 = v21[4];
              long long v127 = v21[5];
              long long v112 = *v21;
              long long v115 = v21[1];
              memmove(v21, v18, 0xD8uLL);
              v18[10] = v142;
              v18[11] = v145;
              v18[12] = v148;
              *((unsigned char *)v18 + 208) = v151;
              v18[6] = v130;
              v18[7] = v133;
              v18[8] = v136;
              v18[9] = v139;
              v18[2] = v118;
              _OWORD v18[3] = v121;
              v18[4] = v124;
              v18[5] = v127;
              _OWORD *v18 = v112;
              v18[1] = v115;
            }
            ++v20;
            uint64_t v18 = (_OWORD *)((char *)v18 - 216);
            char v21 = (_OWORD *)((char *)v21 + 216);
          }
          while (v20 < v19);
          Swift::Int v3 = v109;
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_39;
    }
    if (__OFSUB__(v9, v12)) {
      goto LABEL_138;
    }
    if (v9 - v12 >= v108) {
      goto LABEL_39;
    }
    Swift::Int v22 = v12 + v108;
    if (__OFADD__(v12, v108)) {
      goto LABEL_141;
    }
    if (v22 >= v3) {
      Swift::Int v22 = v3;
    }
    if (v22 < v12) {
      break;
    }
    if (v9 != v22)
    {
      Swift::String v73 = (long long *)(v10 + 216 * v9);
      id v23 = v111;
      do
      {
        Swift::Int v74 = v12;
        uint64_t v75 = v73;
        do
        {
          if (*((void *)v75 - 14) >= *((void *)v75 + 13)) {
            break;
          }
          if (!v10) {
            goto LABEL_144;
          }
          uint64_t v76 = (uint64_t)v75 - 216;
          long long v143 = v75[10];
          long long v146 = v75[11];
          long long v149 = v75[12];
          char v152 = *((unsigned char *)v75 + 208);
          long long v131 = v75[6];
          long long v134 = v75[7];
          long long v137 = v75[8];
          long long v140 = v75[9];
          long long v119 = v75[2];
          long long v122 = v75[3];
          long long v125 = v75[4];
          long long v128 = v75[5];
          long long v113 = *v75;
          long long v116 = v75[1];
          long long v77 = *(long long *)((char *)v75 - 40);
          v75[10] = *(long long *)((char *)v75 - 56);
          v75[11] = v77;
          v75[12] = *(long long *)((char *)v75 - 24);
          *((void *)v75 + 26) = *((void *)v75 - 1);
          long long v78 = *(long long *)((char *)v75 - 104);
          v75[6] = *(long long *)((char *)v75 - 120);
          v75[7] = v78;
          long long v79 = *(long long *)((char *)v75 - 72);
          v75[8] = *(long long *)((char *)v75 - 88);
          v75[9] = v79;
          long long v80 = *(long long *)((char *)v75 - 168);
          v75[2] = *(long long *)((char *)v75 - 184);
          v75[3] = v80;
          long long v81 = *(long long *)((char *)v75 - 136);
          v75[4] = *(long long *)((char *)v75 - 152);
          v75[5] = v81;
          long long v82 = *(long long *)((char *)v75 - 200);
          *uint64_t v75 = *(long long *)((char *)v75 - 216);
          v75[1] = v82;
          *(_OWORD *)(v76 + 160) = v143;
          *(_OWORD *)(v76 + 176) = v146;
          *(_OWORD *)(v76 + 192) = v149;
          *(unsigned char *)(v76 + 208) = v152;
          *(_OWORD *)(v76 + 96) = v131;
          *(_OWORD *)(v76 + 112) = v134;
          *(_OWORD *)(v76 + 128) = v137;
          *(_OWORD *)(v76 + 144) = v140;
          *(_OWORD *)(v76 + 32) = v119;
          *(_OWORD *)(v76 + 48) = v122;
          *(_OWORD *)(v76 + 64) = v125;
          *(_OWORD *)(v76 + 80) = v128;
          ++v74;
          uint64_t v75 = (long long *)((char *)v75 - 216);
          *(_OWORD *)uint64_t v76 = v113;
          *(_OWORD *)(v76 + 16) = v116;
        }
        while (v9 != v74);
        ++v9;
        Swift::String v73 = (long long *)((char *)v73 + 216);
      }
      while (v9 != v22);
      Swift::Int v9 = v22;
      if (v22 < v12) {
        goto LABEL_133;
      }
      goto LABEL_40;
    }
LABEL_39:
    id v23 = v111;
    if (v9 < v12) {
      goto LABEL_133;
    }
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v23 = sub_21F2C(0, *((void *)v23 + 2) + 1, 1, v23);
    }
    unint64_t v25 = *((void *)v23 + 2);
    unint64_t v24 = *((void *)v23 + 3);
    unint64_t v11 = v25 + 1;
    if (v25 >= v24 >> 1) {
      id v23 = sub_21F2C((char *)(v24 > 1), v25 + 1, 1, v23);
    }
    *((void *)v23 + 2) = v11;
    unint64_t v26 = v23 + 32;
    uint64_t v27 = &v23[16 * v25 + 32];
    *(void *)uint64_t v27 = v12;
    *((void *)v27 + 1) = v9;
    uint64_t v111 = v23;
    if (v25)
    {
      while (1)
      {
        unint64_t v28 = v11 - 1;
        if (v11 >= 4)
        {
          long long v33 = &v26[16 * v11];
          uint64_t v34 = *((void *)v33 - 8);
          uint64_t v35 = *((void *)v33 - 7);
          BOOL v39 = __OFSUB__(v35, v34);
          uint64_t v36 = v35 - v34;
          if (v39) {
            goto LABEL_122;
          }
          uint64_t v38 = *((void *)v33 - 6);
          uint64_t v37 = *((void *)v33 - 5);
          BOOL v39 = __OFSUB__(v37, v38);
          uint64_t v31 = v37 - v38;
          char v32 = v39;
          if (v39) {
            goto LABEL_123;
          }
          unint64_t v40 = v11 - 2;
          uint64_t v41 = &v26[16 * v11 - 32];
          uint64_t v43 = *(void *)v41;
          uint64_t v42 = *((void *)v41 + 1);
          BOOL v39 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          if (v39) {
            goto LABEL_125;
          }
          BOOL v39 = __OFADD__(v31, v44);
          uint64_t v45 = v31 + v44;
          if (v39) {
            goto LABEL_128;
          }
          if (v45 >= v36)
          {
            uint64_t v63 = &v26[16 * v28];
            uint64_t v65 = *(void *)v63;
            uint64_t v64 = *((void *)v63 + 1);
            BOOL v39 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v39) {
              goto LABEL_132;
            }
            BOOL v56 = v31 < v66;
            goto LABEL_76;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v57 = *((void *)v23 + 4);
            uint64_t v58 = *((void *)v23 + 5);
            BOOL v39 = __OFSUB__(v58, v57);
            uint64_t v50 = v58 - v57;
            char v51 = v39;
            goto LABEL_70;
          }
          uint64_t v30 = *((void *)v23 + 4);
          uint64_t v29 = *((void *)v23 + 5);
          BOOL v39 = __OFSUB__(v29, v30);
          uint64_t v31 = v29 - v30;
          char v32 = v39;
        }
        if (v32) {
          goto LABEL_124;
        }
        unint64_t v40 = v11 - 2;
        uint64_t v46 = &v26[16 * v11 - 32];
        uint64_t v48 = *(void *)v46;
        uint64_t v47 = *((void *)v46 + 1);
        BOOL v49 = __OFSUB__(v47, v48);
        uint64_t v50 = v47 - v48;
        char v51 = v49;
        if (v49) {
          goto LABEL_127;
        }
        uint64_t v52 = &v26[16 * v28];
        uint64_t v54 = *(void *)v52;
        uint64_t v53 = *((void *)v52 + 1);
        BOOL v39 = __OFSUB__(v53, v54);
        uint64_t v55 = v53 - v54;
        if (v39) {
          goto LABEL_130;
        }
        if (__OFADD__(v50, v55)) {
          goto LABEL_131;
        }
        if (v50 + v55 >= v31)
        {
          BOOL v56 = v31 < v55;
LABEL_76:
          if (v56) {
            unint64_t v28 = v40;
          }
          goto LABEL_78;
        }
LABEL_70:
        if (v51) {
          goto LABEL_126;
        }
        uint64_t v59 = &v26[16 * v28];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v39 = __OFSUB__(v60, v61);
        uint64_t v62 = v60 - v61;
        if (v39) {
          goto LABEL_129;
        }
        if (v62 < v50) {
          goto LABEL_15;
        }
LABEL_78:
        unint64_t v67 = v28 - 1;
        if (v28 - 1 >= v11)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v10) {
          goto LABEL_145;
        }
        unint64_t v68 = &v26[16 * v67];
        uint64_t v69 = *(void *)v68;
        char v70 = &v26[16 * v28];
        uint64_t v71 = *((void *)v70 + 1);
        sub_5C8BC((char *)(v10 + 216 * *(void *)v68), (char *)(v10 + 216 * *(void *)v70), v10 + 216 * v71, v110);
        if (v1) {
          goto LABEL_95;
        }
        if (v71 < v69) {
          goto LABEL_119;
        }
        if (v28 > *((void *)v111 + 2)) {
          goto LABEL_120;
        }
        *(void *)unint64_t v68 = v69;
        *(void *)&v26[16 * v67 + 8] = v71;
        unint64_t v72 = *((void *)v111 + 2);
        if (v28 >= v72) {
          goto LABEL_121;
        }
        id v23 = v111;
        unint64_t v11 = v72 - 1;
        memmove(&v26[16 * v28], v70 + 16, 16 * (v72 - 1 - v28));
        *((void *)v111 + 2) = v72 - 1;
        if (v72 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    Swift::Int v3 = v109;
    if (v9 >= v109)
    {
      id v8 = v107;
      uint64_t v97 = v111;
      uint64_t v2 = v105;
      goto LABEL_105;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = sub_76FA0();
  __break(1u);
  return result;
}

uint64_t sub_5C8BC(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 216;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 216;
  unint64_t v25 = __dst;
  unint64_t v24 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -215)
    {
      uint64_t v17 = 216 * v11;
      if (a4 != __src || &__src[v17] <= a4) {
        memmove(a4, __src, 216 * v11);
      }
      uint64_t v18 = &v4[v17];
      id v23 = &v4[v17];
      unint64_t v25 = v6;
      if (v7 < v6 && v10 >= 216)
      {
        Swift::Int v19 = (char *)(a3 - 216);
        do
        {
          Swift::Int v20 = v19 + 216;
          if (*((void *)v6 - 14) >= *((void *)v18 - 14))
          {
            id v23 = v18 - 216;
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              memmove(v19, v18 - 216, 0xD8uLL);
            }
            char v21 = v6;
            v18 -= 216;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            char v21 = v6 - 216;
            if (v20 != v6 || v19 >= v6) {
              memmove(v19, v6 - 216, 0xD8uLL);
            }
            unint64_t v25 = v6 - 216;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 216;
          uint64_t v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_220E4((void **)&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -215)
  {
    size_t v12 = 216 * v9;
    if (a4 != __dst || &__dst[v12] <= a4) {
      memmove(a4, __dst, v12);
    }
    uint64_t v13 = &v4[v12];
    id v23 = v13;
    if ((unint64_t)v6 < a3 && v8 >= 216)
    {
      uint64_t v14 = v4;
      while (1)
      {
        if (*((void *)v14 + 13) >= *((void *)v6 + 13))
        {
          uint64_t v4 = v14 + 216;
          uint64_t v16 = v14;
          uint64_t v15 = v6;
          if (v7 == v14)
          {
            v14 += 216;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v14 += 216;
          }
        }
        else
        {
          uint64_t v15 = v6 + 216;
          uint64_t v16 = v6;
          if (v7 == v6 && v7 < v15) {
            goto LABEL_18;
          }
        }
        memmove(v7, v16, 0xD8uLL);
LABEL_18:
        v7 += 216;
        if (v14 < v13)
        {
          uint64_t v6 = v15;
          if ((unint64_t)v15 < a3) {
            continue;
          }
        }
        unint64_t v24 = v4;
        unint64_t v25 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_5CB74(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v3 = result;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = &_swiftEmptyArrayStorage[4];
    uint64_t v7 = v1 - 1;
    uint64_t v8 = 32;
    uint64_t v26 = result;
    for (uint64_t i = _swiftEmptyArrayStorage; ; uint64_t i = v2)
    {
      long long v10 = *(_OWORD *)(v3 + v8 + 176);
      long long v51 = *(_OWORD *)(v3 + v8 + 160);
      long long v52 = v10;
      long long v53 = *(_OWORD *)(v3 + v8 + 192);
      char v54 = *(unsigned char *)(v3 + v8 + 208);
      long long v11 = *(_OWORD *)(v3 + v8 + 112);
      long long v47 = *(_OWORD *)(v3 + v8 + 96);
      long long v48 = v11;
      long long v12 = *(_OWORD *)(v3 + v8 + 144);
      long long v49 = *(_OWORD *)(v3 + v8 + 128);
      long long v50 = v12;
      long long v13 = *(_OWORD *)(v3 + v8 + 48);
      long long v43 = *(_OWORD *)(v3 + v8 + 32);
      long long v44 = v13;
      long long v14 = *(_OWORD *)(v3 + v8 + 80);
      long long v45 = *(_OWORD *)(v3 + v8 + 64);
      long long v46 = v14;
      long long v15 = *(_OWORD *)(v3 + v8 + 16);
      long long v41 = *(_OWORD *)(v3 + v8);
      long long v42 = v15;
      if (v4)
      {
        uint64_t result = sub_389F4((uint64_t)&v41);
        uint64_t v2 = i;
        goto LABEL_18;
      }
      unint64_t v16 = i[3];
      if ((uint64_t)((v16 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_28;
      }
      int64_t v17 = v16 & 0xFFFFFFFFFFFFFFFELL;
      if (v17 <= 1) {
        uint64_t v18 = 1;
      }
      else {
        uint64_t v18 = v17;
      }
      sub_14F50(&qword_A4408);
      uint64_t v2 = (void *)swift_allocObject();
      uint64_t v19 = (uint64_t)(j__malloc_size(v2) - 32) / 224;
      v2[2] = v18;
      v2[3] = 2 * v19;
      uint64_t v20 = i[3] >> 1;
      size_t v21 = 28 * v20;
      uint64_t v4 = (v19 & 0x7FFFFFFFFFFFFFFFLL) - v20;
      uint64_t v6 = &v2[28 * v20 + 4];
      if (!i[2])
      {
        sub_389F4((uint64_t)&v41);
        uint64_t result = swift_release();
        goto LABEL_18;
      }
      if (v2 < i || v2 + 4 >= &i[v21 + 4])
      {
        sub_389F4((uint64_t)&v41);
      }
      else
      {
        sub_389F4((uint64_t)&v41);
        if (v2 == i) {
          goto LABEL_17;
        }
      }
      memmove(v2 + 4, i + 4, v21 * 8);
LABEL_17:
      i[2] = 0;
      uint64_t result = swift_release();
      uint64_t v3 = v26;
LABEL_18:
      long long v37 = v51;
      long long v38 = v52;
      long long v39 = v53;
      char v40 = v54;
      long long v33 = v47;
      long long v34 = v48;
      long long v35 = v49;
      long long v36 = v50;
      long long v29 = v43;
      long long v30 = v44;
      long long v31 = v45;
      long long v32 = v46;
      long long v27 = v41;
      long long v28 = v42;
      BOOL v22 = __OFSUB__(v4--, 1);
      if (v22)
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        return result;
      }
      *uint64_t v6 = v5;
      *((unsigned char *)v6 + 216) = v40;
      *(_OWORD *)(v6 + 3) = v28;
      *(_OWORD *)(v6 + 1) = v27;
      *(_OWORD *)(v6 + 11) = v32;
      *(_OWORD *)(v6 + 9) = v31;
      *(_OWORD *)(v6 + 7) = v30;
      *(_OWORD *)(v6 + 5) = v29;
      *(_OWORD *)(v6 + 19) = v36;
      *(_OWORD *)(v6 + 17) = v35;
      *(_OWORD *)(v6 + 15) = v34;
      *(_OWORD *)(v6 + 13) = v33;
      *(_OWORD *)(v6 + 25) = v39;
      *(_OWORD *)(v6 + 23) = v38;
      *(_OWORD *)(v6 + 21) = v37;
      if (v7 == v5)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      v6 += 28;
      v8 += 216;
      ++v5;
    }
  }
  uint64_t v4 = 0;
LABEL_23:
  unint64_t v23 = v2[3];
  if (v23 >= 2)
  {
    unint64_t v24 = v23 >> 1;
    BOOL v22 = __OFSUB__(v24, v4);
    uint64_t v25 = v24 - v4;
    if (v22) {
      goto LABEL_29;
    }
    v2[2] = v25;
  }
  return (uint64_t)v2;
}

uint64_t sub_5CE48(uint64_t a1, uint64_t *a2)
{
  return sub_5B2C8(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_5CE58()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_5CE90(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t, _OWORD *))(v1 + 16);
  uint64_t v3 = *a1;
  long long v4 = *(_OWORD *)(a1 + 23);
  v11[10] = *(_OWORD *)(a1 + 21);
  v11[11] = v4;
  v11[12] = *(_OWORD *)(a1 + 25);
  char v12 = *((unsigned char *)a1 + 216);
  long long v5 = *(_OWORD *)(a1 + 15);
  v11[6] = *(_OWORD *)(a1 + 13);
  v11[7] = v5;
  long long v6 = *(_OWORD *)(a1 + 19);
  v11[8] = *(_OWORD *)(a1 + 17);
  v11[9] = v6;
  long long v7 = *(_OWORD *)(a1 + 7);
  v11[2] = *(_OWORD *)(a1 + 5);
  v11[3] = v7;
  long long v8 = *(_OWORD *)(a1 + 11);
  void v11[4] = *(_OWORD *)(a1 + 9);
  v11[5] = v8;
  long long v9 = *(_OWORD *)(a1 + 3);
  v11[0] = *(_OWORD *)(a1 + 1);
  v11[1] = v9;
  return v2(v3, v11);
}

unint64_t sub_5CF24()
{
  unint64_t result = qword_A4390;
  if (!qword_A4390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4390);
  }
  return result;
}

unint64_t sub_5CF78()
{
  unint64_t result = qword_A4398;
  if (!qword_A4398)
  {
    sub_14F94(&qword_A4380);
    sub_5D000();
    sub_5D098();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4398);
  }
  return result;
}

unint64_t sub_5D000()
{
  unint64_t result = qword_A43A0;
  if (!qword_A43A0)
  {
    sub_14F94(&qword_A43A8);
    sub_1508C(&qword_A43B0, &qword_A43B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A43A0);
  }
  return result;
}

unint64_t sub_5D098()
{
  unint64_t result = qword_A43C0;
  if (!qword_A43C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A43C0);
  }
  return result;
}

double sub_5D0EC@<D0>(uint64_t a1@<X8>)
{
  return sub_5B4B0(*(void *)(v1 + 16), a1);
}

uint64_t sub_5D0F8()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_5D138()
{
  return sub_76890();
}

unint64_t sub_5D190()
{
  unint64_t result = qword_A43F8;
  if (!qword_A43F8)
  {
    sub_14F94(&qword_A43F0);
    sub_1508C(&qword_A42F0, &qword_A3B88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A43F8);
  }
  return result;
}

unint64_t sub_5D244()
{
  unint64_t result = qword_A4410;
  if (!qword_A4410)
  {
    sub_14F94(&qword_A4418);
    sub_5CF78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4410);
  }
  return result;
}

uint64_t destroy for Icon(uint64_t a1)
{
  sub_16FDC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Icon(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_16F10(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Icon(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_16F10(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_16FDC(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Icon(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_16FDC(v5, v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Icon(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Icon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Icon()
{
  return &type metadata for Icon;
}

uint64_t sub_5D4DC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *a1 = *(void *)(v1 + 24);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t getEnumTagSinglePayload for IconSize(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for IconSize(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x5D644);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IconSize()
{
  return &type metadata for IconSize;
}

uint64_t destroy for IconType(uint64_t a1)
{
  return sub_16FDC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s17StorageSettingsUI8IconTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_16F10(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for IconType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_16F10(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_16FDC(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for IconType(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IconType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_16FDC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for IconType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IconType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_5D81C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_5D824(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IconType()
{
  return &type metadata for IconType;
}

unint64_t sub_5D840()
{
  unint64_t result = qword_A4420;
  if (!qword_A4420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4420);
  }
  return result;
}

unint64_t sub_5D894()
{
  unint64_t result = sub_5D8B4();
  qword_A6AC0 = result;
  return result;
}

unint64_t sub_5D8B4()
{
  sub_14F50(&qword_A4428);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_7E100;
  *(void *)(v0 + 32) = sub_76C10();
  *(void *)(v0 + 40) = v1;
  sub_5E6C8((uint64_t)v62);
  long long v2 = v62[7];
  *(_OWORD *)(v0 + 144) = v62[6];
  *(_OWORD *)(v0 + 160) = v2;
  *(_OWORD *)(v0 + 176) = v62[8];
  long long v3 = v62[3];
  *(_OWORD *)(v0 + 80) = v62[2];
  *(_OWORD *)(v0 + 96) = v3;
  long long v4 = v62[5];
  *(_OWORD *)(v0 + 112) = v62[4];
  *(_OWORD *)(v0 + 128) = v4;
  long long v5 = v62[1];
  *(_OWORD *)(v0 + 48) = v62[0];
  *(_OWORD *)(v0 + 64) = v5;
  *(void *)(v0 + 192) = sub_76C10();
  *(void *)(v0 + 200) = v6;
  sub_5E928((uint64_t)v63);
  long long v7 = v63[7];
  *(_OWORD *)(v0 + 304) = v63[6];
  *(_OWORD *)(v0 + 320) = v7;
  *(_OWORD *)(v0 + 336) = v63[8];
  long long v8 = v63[3];
  *(_OWORD *)(v0 + 240) = v63[2];
  *(_OWORD *)(v0 + 256) = v8;
  long long v9 = v63[5];
  *(_OWORD *)(v0 + 272) = v63[4];
  *(_OWORD *)(v0 + 288) = v9;
  long long v10 = v63[1];
  *(_OWORD *)(v0 + 208) = v63[0];
  *(_OWORD *)(v0 + 224) = v10;
  *(void *)(v0 + 352) = sub_76C10();
  *(void *)(v0 + 360) = v11;
  if (qword_A2C40 != -1) {
    swift_once();
  }
  long long v12 = xmmword_A6B08;
  v69[5] = xmmword_A6B18;
  long long v13 = xmmword_A6B18;
  v69[6] = xmmword_A6B28;
  v69[7] = xmmword_A6B38;
  long long v14 = xmmword_A6B38;
  v69[8] = xmmword_A6B48;
  long long v15 = xmmword_A6AD8;
  v69[2] = xmmword_A6AE8;
  long long v16 = xmmword_A6AE8;
  v69[3] = xmmword_A6AF8;
  long long v17 = xmmword_A6AF8;
  v69[4] = xmmword_A6B08;
  long long v18 = xmmword_A6AC8;
  v69[0] = xmmword_A6AC8;
  v69[1] = xmmword_A6AD8;
  *(_OWORD *)(v0 + 464) = xmmword_A6B28;
  *(_OWORD *)(v0 + 480) = v14;
  *(_OWORD *)(v0 + 496) = xmmword_A6B48;
  *(_OWORD *)(v0 + 400) = v16;
  *(_OWORD *)(v0 + 416) = v17;
  *(_OWORD *)(v0 + 432) = v12;
  *(_OWORD *)(v0 + 448) = v13;
  *(_OWORD *)(v0 + 368) = v18;
  *(_OWORD *)(v0 + 384) = v15;
  uint64_t v19 = sub_76C10();
  long long v20 = xmmword_A6B08;
  v70[5] = xmmword_A6B18;
  long long v21 = xmmword_A6B18;
  v70[6] = xmmword_A6B28;
  v70[7] = xmmword_A6B38;
  long long v22 = xmmword_A6B38;
  v70[8] = xmmword_A6B48;
  long long v23 = xmmword_A6AC8;
  v70[1] = xmmword_A6AD8;
  long long v24 = xmmword_A6AD8;
  v70[2] = xmmword_A6AE8;
  long long v25 = xmmword_A6AE8;
  v70[3] = xmmword_A6AF8;
  long long v26 = xmmword_A6AF8;
  v70[4] = xmmword_A6B08;
  v70[0] = xmmword_A6AC8;
  *(_OWORD *)(v0 + 624) = xmmword_A6B28;
  *(_OWORD *)(v0 + 640) = v22;
  *(_OWORD *)(v0 + 656) = xmmword_A6B48;
  *(_OWORD *)(v0 + 560) = v25;
  *(_OWORD *)(v0 + 576) = v26;
  *(_OWORD *)(v0 + 592) = v20;
  *(_OWORD *)(v0 + 608) = v21;
  *(void *)(v0 + 512) = v19;
  *(void *)(v0 + 520) = v27;
  *(_OWORD *)(v0 + 528) = v23;
  *(_OWORD *)(v0 + 544) = v24;
  *(void *)(v0 + 672) = sub_76C10();
  *(void *)(v0 + 680) = v28;
  sub_22E04((uint64_t)v69);
  sub_22E04((uint64_t)v70);
  sub_5EC64((uint64_t)v64);
  long long v29 = v64[7];
  *(_OWORD *)(v0 + 784) = v64[6];
  *(_OWORD *)(v0 + 800) = v29;
  *(_OWORD *)(v0 + 816) = v64[8];
  long long v30 = v64[3];
  *(_OWORD *)(v0 + 720) = v64[2];
  *(_OWORD *)(v0 + 736) = v30;
  long long v31 = v64[5];
  *(_OWORD *)(v0 + 752) = v64[4];
  *(_OWORD *)(v0 + 768) = v31;
  long long v32 = v64[1];
  *(_OWORD *)(v0 + 688) = v64[0];
  *(_OWORD *)(v0 + 704) = v32;
  *(void *)(v0 + 832) = sub_76C10();
  *(void *)(v0 + 840) = v33;
  if (qword_A2C48 != -1) {
    swift_once();
  }
  long long v34 = xmmword_A6B98;
  v71[5] = xmmword_A6BA8;
  long long v35 = xmmword_A6BA8;
  v71[6] = xmmword_A6BB8;
  v71[7] = xmmword_A6BC8;
  long long v36 = xmmword_A6BC8;
  v71[8] = xmmword_A6BD8;
  long long v37 = xmmword_A6B58;
  v71[1] = xmmword_A6B68;
  long long v38 = xmmword_A6B68;
  v71[2] = xmmword_A6B78;
  long long v39 = xmmword_A6B78;
  v71[3] = xmmword_A6B88;
  long long v40 = xmmword_A6B88;
  v71[4] = xmmword_A6B98;
  v71[0] = xmmword_A6B58;
  *(_OWORD *)(v0 + 944) = xmmword_A6BB8;
  *(_OWORD *)(v0 + 960) = v36;
  *(_OWORD *)(v0 + 976) = xmmword_A6BD8;
  *(_OWORD *)(v0 + 880) = v39;
  *(_OWORD *)(v0 + 896) = v40;
  *(_OWORD *)(v0 + 912) = v34;
  *(_OWORD *)(v0 + 928) = v35;
  *(_OWORD *)(v0 + 848) = v37;
  *(_OWORD *)(v0 + 864) = v38;
  *(void *)(v0 + 992) = sub_76C10();
  *(void *)(v0 + 1000) = v41;
  sub_22E04((uint64_t)v71);
  sub_5EDA4((uint64_t)v65);
  long long v42 = v65[4];
  *(_OWORD *)(v0 + 1088) = v65[5];
  long long v43 = v65[7];
  *(_OWORD *)(v0 + 1104) = v65[6];
  *(_OWORD *)(v0 + 1120) = v43;
  *(_OWORD *)(v0 + 1136) = v65[8];
  long long v44 = v65[3];
  *(_OWORD *)(v0 + 1040) = v65[2];
  *(_OWORD *)(v0 + 1056) = v44;
  *(_OWORD *)(v0 + 1072) = v42;
  long long v45 = v65[1];
  *(_OWORD *)(v0 + 1008) = v65[0];
  *(_OWORD *)(v0 + 1024) = v45;
  *(void *)(v0 + 1152) = sub_76C10();
  *(void *)(v0 + 1160) = v46;
  sub_5EED4((uint64_t)v66);
  long long v47 = v66[4];
  *(_OWORD *)(v0 + 1248) = v66[5];
  long long v48 = v66[7];
  *(_OWORD *)(v0 + 1264) = v66[6];
  *(_OWORD *)(v0 + 1280) = v48;
  *(_OWORD *)(v0 + 1296) = v66[8];
  long long v49 = v66[0];
  *(_OWORD *)(v0 + 1184) = v66[1];
  long long v50 = v66[3];
  *(_OWORD *)(v0 + 1200) = v66[2];
  *(_OWORD *)(v0 + 1216) = v50;
  *(_OWORD *)(v0 + 1232) = v47;
  *(_OWORD *)(v0 + 1168) = v49;
  *(void *)(v0 + 1312) = sub_76C10();
  *(void *)(v0 + 1320) = v51;
  sub_5F00C((uint64_t)v67);
  long long v52 = v67[4];
  *(_OWORD *)(v0 + 1408) = v67[5];
  long long v53 = v67[7];
  *(_OWORD *)(v0 + 1424) = v67[6];
  *(_OWORD *)(v0 + 1440) = v53;
  *(_OWORD *)(v0 + 1456) = v67[8];
  long long v54 = v67[0];
  *(_OWORD *)(v0 + 1344) = v67[1];
  long long v55 = v67[3];
  *(_OWORD *)(v0 + 1360) = v67[2];
  *(_OWORD *)(v0 + 1376) = v55;
  *(_OWORD *)(v0 + 1392) = v52;
  *(_OWORD *)(v0 + 1328) = v54;
  unint64_t v56 = sub_276D0(v0);
  if (_IsInternalInstall(v56))
  {
    uint64_t v57 = sub_76C10();
    uint64_t v59 = v58;
    if (qword_A2C50 != -1) {
      swift_once();
    }
    v68[6] = xmmword_A6C48;
    v68[7] = unk_A6C58;
    v68[8] = xmmword_A6C68;
    void v68[2] = xmmword_A6C08;
    v68[3] = unk_A6C18;
    v68[4] = xmmword_A6C28;
    v68[5] = unk_A6C38;
    v68[0] = xmmword_A6BE8;
    v68[1] = unk_A6BF8;
    sub_22E04((uint64_t)v68);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_372B0(v68, v57, v59, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v56;
}

double sub_5DDA8()
{
  sub_5DDFC((uint64_t)&v1);
  xmmword_A6B28 = v7;
  xmmword_A6B38 = v8;
  xmmword_A6B48 = v9;
  xmmword_A6AE8 = v3;
  xmmword_A6AF8 = v4;
  xmmword_A6B08 = v5;
  xmmword_A6B18 = v6;
  double result = *(double *)&v2;
  xmmword_A6AC8 = v1;
  xmmword_A6AD8 = v2;
  return result;
}

void sub_5DDFC(uint64_t a1@<X8>)
{
  NSString v2 = sub_76BE0();
  id v22 = [self bundleWithIdentifier:v2];

  uint64_t v3 = sub_76C10();
  uint64_t v5 = v4;
  uint64_t v21 = sub_76C10();
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  NSString v8 = sub_76BE0();
  NSString v9 = sub_76BE0();
  id v10 = STLocalizedString(v8);

  uint64_t v11 = sub_76C10();
  uint64_t v13 = v12;

  NSString v14 = sub_76BE0();
  NSString v15 = sub_76BE0();
  id v16 = STLocalizedString(v14);

  uint64_t v17 = sub_76C10();
  uint64_t v19 = v18;

  Swift::Int v20 = sub_5EAC0((uint64_t)&off_96930);
  swift_arrayDestroy();

  *(void *)a1 = v21;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = v17;
  *(void *)(a1 + 40) = v19;
  *(void *)(a1 + 48) = v3;
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = v3;
  *(void *)(a1 + 80) = v5;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0x6E4920656C707041;
  *(void *)(a1 + 112) = 0xEA00000000002E63;
  *(void *)(a1 + 120) = v20;
  *(void *)(a1 + 128) = &_swiftEmptySetSingleton;
  *(void *)(a1 + 136) = 0;
}

double sub_5E02C()
{
  sub_5E080((uint64_t)&v1);
  xmmword_A6BB8 = v7;
  xmmword_A6BC8 = v8;
  xmmword_A6BD8 = v9;
  xmmword_A6B78 = v3;
  xmmword_A6B88 = v4;
  xmmword_A6B98 = v5;
  xmmword_A6BA8 = v6;
  double result = *(double *)&v2;
  xmmword_A6B58 = v1;
  xmmword_A6B68 = v2;
  return result;
}

uint64_t sub_5E080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_761C0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self _typeOfCurrentDevice];
  sub_761B0();

  sub_761A0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1B618(0, &qword_A4430);
  id v7 = sub_5E3F8();
  uint64_t v13 = v7;
  if (v7)
  {
    id v14 = [v7 name];
    uint64_t v12 = sub_76C10();
    unint64_t v11 = v15;

    uint64_t v8 = sub_76C10();
    uint64_t v10 = v16;
  }
  else
  {
    uint64_t v8 = sub_76C10();
    uint64_t v10 = v9;
    unint64_t v11 = 0xEB00000000326E65;
    uint64_t v12 = 0x672E656E6F687069;
  }
  sub_76AB0();
  uint64_t v32 = v10;
  uint64_t v33 = v8;
  uint64_t v17 = v12;
  NSString v18 = sub_76BE0();
  NSString v19 = sub_76BE0();
  id v20 = STLocalizedString(v18);

  uint64_t v21 = sub_76C10();
  uint64_t v23 = v22;

  uint64_t v24 = sub_1B618(0, &qword_A4438);
  uint64_t v25 = sub_76C10();
  uint64_t v27 = v26;
  Swift::Int v28 = sub_5EAC0((uint64_t)&off_96960);
  uint64_t result = swift_arrayDestroy();
  *(void *)a1 = v25;
  *(void *)(a1 + 8) = v27;
  *(void *)(a1 + 16) = v21;
  *(void *)(a1 + 24) = v23;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = v17;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = 1;
  uint64_t v30 = v32;
  *(void *)(a1 + 72) = v33;
  *(void *)(a1 + 80) = v30;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0x6E4920656C707041;
  *(void *)(a1 + 112) = 0xEA00000000002E63;
  *(void *)(a1 + 120) = v28;
  *(void *)(a1 + 128) = &_swiftEmptySetSingleton;
  *(void *)(a1 + 136) = v24;
  return result;
}

id sub_5E3F8()
{
  NSString v0 = sub_76BE0();
  swift_bridgeObjectRelease();
  id v5 = 0;
  id v1 = [(id)swift_getObjCClassFromMetadata() symbolForTypeIdentifier:v0 error:&v5];

  if (v1)
  {
    id v2 = v5;
  }
  else
  {
    id v3 = v5;
    sub_75FC0();

    swift_willThrow();
  }
  return v1;
}

double sub_5E4D0()
{
  sub_5E524((uint64_t)&v1);
  xmmword_A6C48 = v7;
  unk_A6C58 = v8;
  xmmword_A6C68 = v9;
  xmmword_A6C08 = v3;
  unk_A6C18 = v4;
  xmmword_A6C28 = v5;
  unk_A6C38 = v6;
  double result = *(double *)&v2;
  xmmword_A6BE8 = v1;
  unk_A6BF8 = v2;
  return result;
}

uint64_t sub_5E524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_76C10();
  uint64_t v4 = v3;
  NSString v5 = sub_76BE0();
  NSString v6 = sub_76BE0();
  id v7 = STLocalizedString(v5);

  uint64_t v8 = sub_76C10();
  uint64_t v10 = v9;

  NSString v11 = sub_76BE0();
  NSString v12 = sub_76BE0();
  id v13 = STLocalizedString(v11);

  uint64_t v14 = sub_76C10();
  uint64_t v16 = v15;

  uint64_t result = sub_76C10();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v14;
  *(void *)(a1 + 40) = v16;
  *(void *)(a1 + 48) = 0xD000000000000015;
  *(void *)(a1 + 56) = 0x8000000000087A60;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = result;
  *(void *)(a1 + 80) = v18;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0x6E4920656C707041;
  *(void *)(a1 + 112) = 0xEA00000000002E63;
  *(void *)(a1 + 120) = &_swiftEmptySetSingleton;
  *(void *)(a1 + 128) = &_swiftEmptySetSingleton;
  *(void *)(a1 + 136) = 0;
  return result;
}

uint64_t sub_5E6C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = self;
  id v3 = [v2 currentDevice];
  id v4 = [v3 systemName];

  uint64_t v5 = sub_76C10();
  uint64_t v28 = v6;
  uint64_t v29 = v5;

  id v7 = [v2 currentDevice];
  id v8 = [v7 systemVersion];

  uint64_t v9 = sub_76C10();
  uint64_t v11 = v10;

  uint64_t v27 = sub_76C10();
  uint64_t v13 = v12;
  id v14 = [v2 currentDevice];
  id v15 = [v14 systemVersion];

  uint64_t v16 = sub_76C10();
  uint64_t v18 = v17;

  NSString v19 = sub_76BE0();
  NSString v20 = sub_76BE0();
  id v21 = STLocalizedString(v19);

  sub_76C10();
  sub_14F50(&qword_A2FF0);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_7CA00;
  *(void *)(v22 + 56) = &type metadata for String;
  *(void *)(v22 + 64) = sub_1B654();
  *(void *)(v22 + 32) = v9;
  *(void *)(v22 + 40) = v11;
  uint64_t v23 = sub_76C20();
  uint64_t v25 = v24;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v27;
  *(void *)(a1 + 8) = v13;
  *(void *)(a1 + 16) = v29;
  *(void *)(a1 + 24) = v28;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xD000000000000015;
  *(void *)(a1 + 56) = 0x8000000000087A60;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xD000000000000015;
  *(void *)(a1 + 80) = 0x8000000000087A60;
  *(void *)(a1 + 88) = v16;
  *(void *)(a1 + 96) = v18;
  *(void *)(a1 + 104) = v23;
  *(void *)(a1 + 112) = v25;
  *(void *)(a1 + 120) = &_swiftEmptySetSingleton;
  *(void *)(a1 + 128) = &_swiftEmptySetSingleton;
  *(void *)(a1 + 136) = 0;
  return result;
}

void sub_5E928(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_76C10();
  uint64_t v4 = v3;
  NSString v5 = sub_76BE0();
  NSString v6 = sub_76BE0();
  id v7 = STLocalizedString(v5);

  uint64_t v8 = sub_76C10();
  uint64_t v10 = v9;

  NSString v11 = sub_76BE0();
  NSString v12 = sub_76BE0();
  id v13 = STLocalizedString(v11);

  uint64_t v14 = sub_76C10();
  uint64_t v16 = v15;

  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v14;
  *(void *)(a1 + 40) = v16;
  *(void *)(a1 + 48) = 0xD000000000000015;
  *(void *)(a1 + 56) = 0x8000000000087A60;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xD000000000000015;
  *(void *)(a1 + 80) = 0x8000000000087A60;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0x6E4920656C707041;
  *(void *)(a1 + 112) = 0xEA00000000002E63;
  *(void *)(a1 + 120) = &_swiftEmptySetSingleton;
  *(void *)(a1 + 128) = &_swiftEmptySetSingleton;
  *(void *)(a1 + 136) = 0;
}

Swift::Int sub_5EAC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_14F50(&qword_A3120);
    uint64_t v3 = sub_76F60();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      NSString v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_770C0();
      swift_bridgeObjectRetain();
      sub_76C40();
      Swift::Int result = sub_77100();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (Swift::Int result = sub_77050(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          NSString v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            Swift::Int result = sub_77050();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      id v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *id v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_5EC64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_76C10();
  uint64_t v4 = v3;
  NSString v5 = sub_76BE0();
  NSString v6 = sub_76BE0();
  id v7 = STLocalizedString(v5);

  uint64_t v8 = sub_76C10();
  uint64_t v10 = v9;

  uint64_t result = sub_1B618(0, &qword_A4440);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xD000000000000015;
  *(void *)(a1 + 56) = 0x8000000000087A60;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xD000000000000015;
  *(void *)(a1 + 80) = 0x8000000000087A60;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0x6E4920656C707041;
  *(void *)(a1 + 112) = 0xEA00000000002E63;
  *(void *)(a1 + 120) = &_swiftEmptySetSingleton;
  *(void *)(a1 + 128) = &_swiftEmptySetSingleton;
  *(void *)(a1 + 136) = result;
  return result;
}

uint64_t sub_5EDA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_76C10();
  uint64_t v4 = v3;
  NSString v5 = sub_76BE0();
  NSString v6 = sub_76BE0();
  id v7 = STLocalizedString(v5);

  uint64_t v8 = sub_76C10();
  uint64_t v10 = v9;

  uint64_t result = sub_76C10();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xD00000000000001ALL;
  *(void *)(a1 + 56) = 0x8000000000087C90;
  *(unsigned char *)(a1 + 64) = 1;
  *(void *)(a1 + 72) = result;
  *(void *)(a1 + 80) = v12;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0x6E4920656C707041;
  *(void *)(a1 + 112) = 0xEA00000000002E63;
  *(void *)(a1 + 120) = &_swiftEmptySetSingleton;
  *(void *)(a1 + 128) = &_swiftEmptySetSingleton;
  *(void *)(a1 + 136) = 0;
  return result;
}

uint64_t sub_5EED4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_76C10();
  uint64_t v4 = v3;
  NSString v5 = sub_76BE0();
  NSString v6 = sub_76BE0();
  id v7 = STLocalizedString(v5);

  uint64_t v8 = sub_76C10();
  uint64_t v10 = v9;

  uint64_t result = sub_76C10();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xD000000000000011;
  *(void *)(a1 + 56) = 0x8000000000087C30;
  *(unsigned char *)(a1 + 64) = 1;
  *(void *)(a1 + 72) = result;
  *(void *)(a1 + 80) = v12;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0x6E4920656C707041;
  *(void *)(a1 + 112) = 0xEA00000000002E63;
  *(void *)(a1 + 120) = &_swiftEmptySetSingleton;
  *(void *)(a1 + 128) = &_swiftEmptySetSingleton;
  *(void *)(a1 + 136) = 0;
  return result;
}

void sub_5F00C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0x8000000000087BD0;
  unint64_t v3 = 0xD000000000000012;
  switch(sub_76AB0())
  {
    case 0u:
    case 2u:
      goto LABEL_6;
    case 1u:
      unint64_t v3 = 0xD000000000000010;
      uint64_t v4 = "macbook.and.ipad";
      goto LABEL_5;
    case 4u:
      unint64_t v3 = 0xD000000000000015;
      uint64_t v4 = "macbook.and.visionpro";
      goto LABEL_5;
    default:
      unint64_t v3 = 0xD000000000000022;
      uint64_t v4 = "arrow.triangle.2.circlepath.circle";
LABEL_5:
      unint64_t v2 = (unint64_t)(v4 - 32) | 0x8000000000000000;
LABEL_6:
      uint64_t v5 = sub_76C10();
      uint64_t v22 = v6;
      uint64_t v23 = v5;
      uint64_t v7 = sub_76C10();
      uint64_t v9 = v8;
      NSString v10 = sub_76BE0();
      NSString v11 = sub_76BE0();
      id v12 = STLocalizedString(v10);

      uint64_t v13 = sub_76C10();
      uint64_t v15 = v14;

      NSString v16 = sub_76BE0();
      NSString v17 = sub_76BE0();
      id v18 = STLocalizedString(v16);

      uint64_t v19 = sub_76C10();
      uint64_t v21 = v20;

      *(void *)a1 = v7;
      *(void *)(a1 + 8) = v9;
      *(void *)(a1 + 16) = v13;
      *(void *)(a1 + 24) = v15;
      *(void *)(a1 + 32) = v19;
      *(void *)(a1 + 40) = v21;
      *(void *)(a1 + 48) = v3;
      *(void *)(a1 + 56) = v2;
      *(unsigned char *)(a1 + 64) = 1;
      *(void *)(a1 + 72) = v23;
      *(void *)(a1 + 80) = v22;
      *(void *)(a1 + 88) = 0;
      *(void *)(a1 + 96) = 0;
      *(void *)(a1 + 104) = 0x6E4920656C707041;
      *(void *)(a1 + 112) = 0xEA00000000002E63;
      *(void *)(a1 + 120) = &_swiftEmptySetSingleton;
      *(void *)(a1 + 128) = &_swiftEmptySetSingleton;
      *(void *)(a1 + 136) = 0;
      return;
  }
}

uint64_t destroy for SystemApplication(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_16FDC(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SystemApplication(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_16F10(v7, v8, v9);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = v9;
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  uint64_t v13 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SystemApplication(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 64);
  sub_16F10(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v6;
  sub_16FDC(v7, v8, v9);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

__n128 initializeWithTake for SystemApplication(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for SystemApplication(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  char v7 = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v7;
  sub_16FDC(v8, v9, v10);
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemApplication(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemApplication(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemApplication()
{
  return &type metadata for SystemApplication;
}

void sub_5F6AC(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Application();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  if (sub_76C10() == v8 && v9 == v7)
  {
    swift_bridgeObjectRelease();
LABEL_25:
    if (__OFADD__(a1[6], a1[7]))
    {
      __break(1u);
    }
    else
    {
      sub_76C10();
      id v17 = [self currentDevice];
      id v18 = [v17 systemName];

      sub_76C10();
      if (qword_A2C70 == -1)
      {
LABEL_27:
        swift_retain();
        goto LABEL_28;
      }
    }
LABEL_53:
    swift_once();
    goto LABEL_27;
  }
  char v11 = sub_77050();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_25;
  }
  if (sub_76C10() == v8 && v12 == v7)
  {
    swift_bridgeObjectRelease();
LABEL_31:
    if (__OFADD__(a1[6], a1[7]))
    {
      __break(1u);
    }
    else
    {
      sub_76C10();
      NSString v28 = sub_76BE0();
      NSString v29 = sub_76BE0();
      id v30 = STLocalizedString(v28);

      sub_76C10();
      if (qword_A2C78 == -1) {
        goto LABEL_27;
      }
    }
    goto LABEL_53;
  }
  char v14 = sub_77050();
  swift_bridgeObjectRelease();
  if (v14) {
    goto LABEL_31;
  }
  if ((v8 != 0xD000000000000013 || v7 != 0x8000000000087FA0)
    && (sub_77050() & 1) == 0
    && (v8 != 0xD000000000000014 || v7 != 0x8000000000087FC0)
    && (sub_77050() & 1) == 0
    && (v8 != 0x6C7070612E6D6F63 || v7 != 0xEF636973754D2E65)
    && (sub_77050() & 1) == 0
    && (v8 != 0xD000000000000019 || v7 != 0x8000000000085F60))
  {
    char v31 = sub_77050();
    BOOL v32 = v8 == 0x6C7070612E6D6F63 && v7 == 0xEC00000076742E65;
    BOOL v33 = v32;
    if ((v31 & 1) == 0
      && !v33
      && (sub_77050() & 1) == 0
      && (v8 != 0xD000000000000012 || v7 != 0x8000000000087FE0)
      && (sub_77050() & 1) == 0
      && (v8 != 0xD000000000000010 || v7 != 0x8000000000088000)
      && (sub_77050() & 1) == 0)
    {
      if (sub_76C10() != v8 || v34 != v7) {
        goto LABEL_57;
      }
LABEL_51:
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  while (1)
  {
LABEL_22:
    sub_22680((uint64_t)a1, (uint64_t)v6);
    uint64_t v15 = *((void *)v6 + 6);
    uint64_t v16 = *((void *)v6 + 7);
    a1 = (uint64_t *)(v15 + v16);
    if (!__OFADD__(v15, v16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_76AC0();
      sub_226E4((uint64_t)v6);
      goto LABEL_29;
    }
    __break(1u);
LABEL_57:
    char v35 = sub_77050();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
      if (sub_76C10() == v8 && v36 == v7) {
        goto LABEL_51;
      }
      char v37 = sub_77050();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0)
      {
        if (sub_76C10() == v8 && v38 == v7) {
          goto LABEL_51;
        }
        uint64_t v7 = sub_77050();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0) {
          break;
        }
      }
    }
  }
  NSString v39 = sub_76BE0();
  NSString v40 = sub_76BE0();
  id v41 = STLocalizedString(v39);

  sub_76C10();
  if (__OFADD__(a1[6], a1[7]))
  {
    __break(1u);
    return;
  }
LABEL_28:
  sub_76AC0();
LABEL_29:
  char v19 = v50;
  uint64_t v20 = v49;
  uint64_t v21 = v48;
  uint64_t v22 = v47;
  char v23 = v46;
  char v24 = v45;
  uint64_t v26 = v43;
  uint64_t v25 = v44;
  long long v27 = *(_OWORD *)&v42[24];
  *(_OWORD *)a2 = *(_OWORD *)&v42[8];
  *(_OWORD *)(a2 + 16) = v27;
  *(void *)(a2 + 32) = v26;
  *(void *)(a2 + 40) = v25;
  *(unsigned char *)(a2 + 48) = v24;
  *(unsigned char *)(a2 + 49) = v23;
  *(void *)(a2 + 56) = v22;
  *(void *)(a2 + 64) = v21;
  *(void *)(a2 + 72) = v20;
  *(unsigned char *)(a2 + 80) = v19;
}

uint64_t sub_5FF84(void *a1, void *aBlock)
{
  v2[2] = a1;
  v2[3] = _Block_copy(aBlock);
  uint64_t v7 = (uint64_t (*)(id))((char *)&dword_A44B0 + dword_A44B0);
  id v4 = a1;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_6004C;
  return v7(v4);
}

uint64_t sub_6004C(char a1)
{
  long long v3 = *(void (***)(void, void))(*v1 + 24);
  id v4 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  uint64_t v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

id sub_601D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppRemovability();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AppRemovability()
{
  return self;
}

uint64_t sub_6022C()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_6026C()
{
  objc_super v2 = *(void **)(v0 + 16);
  long long v3 = *(void **)(v0 + 24);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *id v4 = v1;
  v4[1] = sub_163DC;
  uint64_t v5 = (uint64_t (*)(void *, void *))((char *)&dword_A4470 + dword_A4470);
  return v5(v2, v3);
}

uint64_t sub_60320(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *id v4 = v3;
  v4[1] = sub_25054;
  return v6();
}

uint64_t sub_603F0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  id v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_25054;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_A4480 + dword_A4480);
  return v6(v2, v3, v4);
}

uint64_t sub_604B0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_25054;
  return v7();
}

uint64_t sub_60580()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_605C0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25054;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_A4490 + dword_A4490);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_6068C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_76D70();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_76D60();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24D3C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_76D10();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_60830()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_60868(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_163DC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_A44A0 + dword_A44A0);
  return v6(a1, v4);
}

uint64_t sub_60920(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return _swift_task_switch(sub_60940, 0, 0);
}

uint64_t sub_60940()
{
  id v1 = [*(id *)(v0 + 128) bundleIdentifier];
  if (!v1) {
    goto LABEL_6;
  }
  uint64_t v2 = v1;
  sub_76C10();

  id v3 = objc_allocWithZone((Class)IXApplicationIdentity);
  NSString v4 = sub_76BE0();
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithBundleIdentifier:v4];
  *(void *)(v0 + 136) = v5;

  if (v5)
  {
    uint64_t v6 = self;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 120;
    *(void *)(v0 + 24) = sub_60B0C;
    uint64_t v7 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_24480;
    *(void *)(v0 + 104) = &unk_98428;
    *(void *)(v0 + 112) = v7;
    [v6 removabilityForAppWithIdentity:v5 completion:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
  else
  {
LABEL_6:
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8(0);
  }
}

uint64_t sub_60B0C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_60C88;
  }
  else {
    uint64_t v2 = sub_60C1C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_60C1C()
{
  BOOL v1 = *(void *)(v0 + 120) == 1;
  uint64_t v2 = *(uint64_t (**)(BOOL))(v0 + 8);
  return v2(v1);
}

uint64_t sub_60C88()
{
  BOOL v1 = *(void **)(v0 + 136);
  swift_willThrow();

  swift_errorRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

id sub_60D04(void *a1)
{
  id result = [a1 bundleIdentifier];
  if (result)
  {
    id v3 = result;
    uint64_t v4 = sub_76C10();
    uint64_t v6 = v5;

    if (([a1 isManagedAppDistributor] & 1) != 0
      || v4 == 0xD000000000000012 && v6 == 0x8000000000085810
      || (sub_77050() & 1) != 0)
    {
      uint64_t v7 = (void *)sub_76100();
      if (v7[2])
      {
        uint64_t v9 = v7[4];
        uint64_t v8 = v7[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v9 == v4 && v8 == v6)
        {
          swift_bridgeObjectRelease_n();
          return &dword_0 + 1;
        }
        else
        {
          char v11 = sub_77050();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (id)(v11 & 1);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      id result = [a1 supportedDefaultAppCategories];
      if (result)
      {
        uint64_t v17 = 0;
        id result = [self defaultWorkspace];
        if (result)
        {
          uint64_t v12 = result;
          id v16 = 0;
          unsigned int v13 = [result getDefaultApplicationCategories:&v17 withCurrentDefaultApplication:a1 error:&v16];

          if (v13)
          {
            id v14 = v16;
          }
          else
          {
            id v15 = v16;
            sub_75FC0();

            swift_willThrow();
            swift_errorRelease();
          }
          return (id)(v17 != 0);
        }
        else
        {
          __break(1u);
        }
      }
    }
  }
  return result;
}

uint64_t sub_60F50(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_60F70, 0, 0);
}

uint64_t sub_60F70()
{
  id v1 = [self sharedConnection];
  if (!v1)
  {
LABEL_4:
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4(0);
  }
  uint64_t v2 = v1;
  if ([*(id *)(v0 + 16) isDeletableSystemApplication])
  {
    unsigned int v3 = [v2 isSystemAppRemovalAllowed];

    if (!v3) {
      goto LABEL_4;
    }
  }
  else
  {
    unsigned __int8 v6 = [v2 isAppRemovalAllowed];

    if ((v6 & 1) == 0) {
      goto LABEL_4;
    }
  }
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_610C4;
  v7[16] = *(void *)(v0 + 16);
  return _swift_task_switch(sub_60940, 0, 0);
}

uint64_t sub_610C4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_611C4, 0, 0);
}

uint64_t sub_611C4()
{
  if (*(unsigned char *)(v0 + 32) == 1) {
    unsigned int v1 = sub_60D04(*(void **)(v0 + 16)) ^ 1;
  }
  else {
    LOBYTE(v1) = 0;
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(v1 & 1);
}

ValueMetadata *type metadata accessor for FollowupViews()
{
  return &type metadata for FollowupViews;
}

uint64_t sub_61250()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_6126C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_14F50(&qword_A44C0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v8 = a1;
    sub_76240();

    swift_release();
    swift_release();
    sub_14F50(&qword_A3450);
    sub_1508C(&qword_A44C8, &qword_A3450);
    sub_61B3C();
    sub_61B90();
    sub_76980();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_164D0();
    uint64_t result = sub_76380();
    __break(1u);
  }
  return result;
}

uint64_t sub_6145C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  a2[4] = v5;
  a2[5] = v6;
  a2[6] = v7;
  a2[7] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_614CC@<X0>(uint64_t a1@<X8>)
{
  return sub_6126C(*v1, a1);
}

uint64_t sub_614D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = sub_14F50(&qword_A3980);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v39 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v36 - v6;
  uint64_t v8 = sub_14F50(&qword_A39F0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_14F50(&qword_A3A00);
  uint64_t v12 = __chkstk_darwin(v36);
  id v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v36 - v16;
  __chkstk_darwin(v15);
  char v19 = (char *)&v36 - v18;
  uint64_t v41 = a1;
  uint64_t v37 = a1;
  uint64_t v40 = a1;
  sub_43B84();
  sub_76860();
  LOBYTE(a1) = sub_76600();
  unsigned __int8 v20 = sub_76610();
  char v21 = sub_76620();
  sub_76620();
  if (sub_76620() != a1) {
    char v21 = sub_76620();
  }
  sub_76620();
  if (sub_76620() != v20) {
    char v21 = sub_76620();
  }
  if (qword_A2C58 != -1) {
    swift_once();
  }
  sub_76290();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v17, v11, v8);
  id v30 = &v17[*(int *)(v36 + 36)];
  *id v30 = v21;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_61F10((uint64_t)v17, (uint64_t)v19);
  *(void *)uint64_t v7 = sub_764E0();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v31 = sub_14F50(&qword_A39B8);
  __chkstk_darwin(v31);
  *(&v36 - 2) = v37;
  sub_14F50(&qword_A39C0);
  sub_43938();
  sub_76860();
  sub_15144((uint64_t)v19, (uint64_t)v14, &qword_A3A00);
  uint64_t v32 = v39;
  sub_15144((uint64_t)v7, v39, &qword_A3980);
  uint64_t v33 = v38;
  sub_15144((uint64_t)v14, v38, &qword_A3A00);
  uint64_t v34 = sub_14F50(&qword_A44E8);
  sub_15144(v32, v33 + *(int *)(v34 + 48), &qword_A3980);
  sub_151A8((uint64_t)v7, &qword_A3980);
  sub_151A8((uint64_t)v19, &qword_A3A00);
  sub_151A8(v32, &qword_A3980);
  return sub_151A8((uint64_t)v14, &qword_A3A00);
}

uint64_t sub_61970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v3;
  *(unsigned char *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = v4;
  *(void *)(a2 + 48) = v3;
  *(unsigned char *)(a2 + 56) = 2;
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_619D0@<X0>(uint64_t a1@<X8>)
{
  sub_15038();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_766D0();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_76650();
  uint64_t v7 = sub_766C0();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  char v12 = v11 & 1;
  sub_150D0(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_76800();
  uint64_t v13 = sub_76690();
  uint64_t v15 = v14;
  char v17 = v16;
  uint64_t v19 = v18;
  swift_release();
  sub_150D0(v7, v9, v12);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v13;
  *(void *)(a1 + 8) = v15;
  *(unsigned char *)(a1 + 16) = v17 & 1;
  *(void *)(a1 + 24) = v19;
  return result;
}

uint64_t sub_61B00@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1[1];
  v5[0] = *v1;
  v5[1] = v2;
  long long v3 = v1[3];
  void v5[2] = v1[2];
  v5[3] = v3;
  return sub_614D4((uint64_t)v5, a1);
}

unint64_t sub_61B3C()
{
  unint64_t result = qword_A44D0;
  if (!qword_A44D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A44D0);
  }
  return result;
}

unint64_t sub_61B90()
{
  unint64_t result = qword_A44D8;
  if (!qword_A44D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A44D8);
  }
  return result;
}

uint64_t destroy for FollowupView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FollowupView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FollowupView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FollowupView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for FollowupView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowupView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FollowupView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowupView()
{
  return &type metadata for FollowupView;
}

unint64_t sub_61E70()
{
  unint64_t result = qword_A44E0;
  if (!qword_A44E0)
  {
    sub_14F94(&qword_A44C0);
    sub_61B3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A44E0);
  }
  return result;
}

uint64_t sub_61EE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_61F00@<X0>(uint64_t a1@<X8>)
{
  return sub_43254(a1);
}

uint64_t sub_61F08@<X0>(uint64_t a1@<X8>)
{
  return sub_61970(*(void *)(v1 + 16), a1);
}

uint64_t sub_61F10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A3A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_61F78@<X0>(uint64_t a1@<X8>)
{
  return sub_619D0(a1);
}

unint64_t sub_61F8C()
{
  unint64_t result = qword_A44F0;
  if (!qword_A44F0)
  {
    sub_14F94(&qword_A44F8);
    sub_1508C(&qword_A4500, &qword_A4508);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A44F0);
  }
  return result;
}

void sub_62024()
{
  qword_A6C78 = 0x4010000000000000;
}

void sub_62034()
{
  qword_A6C80 = 0x3FF0000000000000;
}

uint64_t sub_62044(uint64_t a1)
{
  return sub_62080(a1, (SEL *)&selRef_grayColor, &qword_A6C88);
}

uint64_t sub_62058(uint64_t a1)
{
  return sub_62080(a1, (SEL *)&selRef_systemGray3Color, &qword_A6C90);
}

uint64_t sub_6206C(uint64_t a1)
{
  return sub_62080(a1, (SEL *)&selRef_systemGray5Color, &qword_A6C98);
}

uint64_t sub_62080(uint64_t a1, SEL *a2, uint64_t *a3)
{
  id v4 = [self *a2];
  uint64_t result = sub_767D0();
  *a3 = result;
  return result;
}

id sub_621A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Wrapper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for Wrapper()
{
  return self;
}

ValueMetadata *type metadata accessor for StorageSettingsPreferencesView()
{
  return &type metadata for StorageSettingsPreferencesView;
}

uint64_t sub_62210()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_6222C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for StorageShared();
  sub_63518((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
  uint64_t v2 = sub_76390();
  uint64_t v4 = v3;
  if (qword_A2C28 != -1) {
    swift_once();
  }
  id v7 = (id)qword_A6A70;
  uint64_t v5 = sub_76210();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = (uint64_t)v7;

  return v7;
}

ValueMetadata *type metadata accessor for _StorageSettingsPreferencesView()
{
  return &type metadata for _StorageSettingsPreferencesView;
}

unint64_t sub_62338()
{
  unint64_t result = qword_A4540;
  if (!qword_A4540)
  {
    sub_14F94(&qword_A4548);
    sub_623D8();
    sub_1508C((unint64_t *)&qword_A3958, &qword_A3960);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4540);
  }
  return result;
}

unint64_t sub_623D8()
{
  unint64_t result = qword_A4550;
  if (!qword_A4550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4550);
  }
  return result;
}

uint64_t sub_6242C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_62448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v53 = a3;
  uint64_t v52 = sub_75FE0();
  uint64_t v49 = *(void *)(v52 - 8);
  uint64_t v50 = v52 - 8;
  uint64_t v51 = v49;
  __chkstk_darwin(v52 - 8);
  uint64_t v47 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_76BD0();
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v48 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = sub_76D70();
  uint64_t v45 = *(void *)(v9 - 8);
  uint64_t v46 = v9;
  __chkstk_darwin(v9);
  char v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_14F50(&qword_A4558);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_14F50(&qword_A4560);
  uint64_t v16 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_14F50(&qword_A4568);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v43 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  sub_14F50(&qword_A4570);
  sub_1508C(&qword_A4578, &qword_A4570);
  sub_76680();
  sub_1508C(&qword_A4580, &qword_A4558);
  sub_766F0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_76D50();
  uint64_t v22 = (uint64_t)v43;
  uint64_t v23 = &v43[*(int *)(v20 + 44)];
  uint64_t v24 = sub_76320();
  uint64_t v26 = v45;
  uint64_t v25 = v46;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(&v23[*(int *)(v24 + 20)], v11, v46);
  *(void *)uint64_t v23 = &unk_A4588;
  *((void *)v23 + 1) = 0;
  uint64_t v27 = v44;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v22, v18, v44);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v25);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v27);
  sub_76BC0();
  v56._countAndFlagsBits = 0;
  v56._object = (void *)0xE000000000000000;
  sub_76BB0(v56);
  v57._countAndFlagsBits = sub_63058();
  sub_76BA0(v57);
  swift_bridgeObjectRelease();
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  sub_76BB0(v58);
  uint64_t v28 = v47;
  sub_75FD0();
  sub_14F50(&qword_A4590);
  uint64_t v29 = v51;
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_7CA00;
  sub_76BC0();
  v59._countAndFlagsBits = 0;
  v59._object = (void *)0xE000000000000000;
  sub_76BB0(v59);
  NSString v31 = sub_76BE0();
  NSString v32 = sub_76BE0();
  id v33 = STLocalizedString(v31);

  uint64_t v34 = sub_76C10();
  uint64_t v36 = v35;

  v60._countAndFlagsBits = v34;
  v60._object = v36;
  sub_76BA0(v60);
  swift_bridgeObjectRelease();
  v61._countAndFlagsBits = 0;
  v61._object = (void *)0xE000000000000000;
  sub_76BB0(v61);
  sub_75FD0();
  uint64_t v37 = sub_14F50(&qword_A4598);
  uint64_t v39 = v52;
  uint64_t v38 = v53;
  uint64_t v40 = v53 + *(int *)(v37 + 36);
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 16))(v40, v28, v52);
  *(void *)(v40 + *(int *)(type metadata accessor for NavigationEventEmissionViewModifier() + 20)) = v30;
  sub_63180(v22, v38);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v39);
  return sub_631E8(v22);
}

char *sub_62A78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v4 = a1;
    sub_76240();

    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    if (v22)
    {
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v16 = 0;
      uint64_t v5 = 0;
      uint64_t v6 = (unsigned char *)(&dword_0 + 1);
    }
    else
    {
      type metadata accessor for StorageShared();
      sub_63518((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
      uint64_t v6 = (char *)sub_76390();
      uint64_t v20 = v7;
      uint64_t v8 = sub_76390();
      uint64_t v18 = v9;
      uint64_t v19 = (void *)v8;
      uint64_t v10 = sub_76390();
      uint64_t v16 = v11;
      uint64_t v17 = (void *)v10;
      sub_76870();
      uint64_t v5 = v21;
    }
    type metadata accessor for StorageShared();
    sub_63518((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
    uint64_t v12 = sub_76390();
    uint64_t v15 = v13;
    sub_76870();
    *(void *)a2 = v6;
    *(void *)(a2 + 8) = v20;
    *(void *)(a2 + 16) = v19;
    *(void *)(a2 + 24) = v18;
    *(void *)(a2 + 32) = v17;
    *(void *)(a2 + 40) = v16;
    *(void *)(a2 + 48) = v5;
    *(void *)(a2 + 56) = 0;
    *(void *)(a2 + 64) = v12;
    *(void *)(a2 + 72) = v15;
    *(unsigned char *)(a2 + 80) = v21;
    *(void *)(a2 + 88) = v22;
    sub_632A0(v6, v20, v19, v18, v17);
    return sub_63300(v6, v20, v19, v18, v17);
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_63518((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
    unint64_t result = (char *)sub_76380();
    __break(1u);
  }
  return result;
}

uint64_t sub_62D14()
{
  sub_76D40();
  *(void *)(v0 + 64) = sub_76D30();
  uint64_t v2 = sub_76D10();
  return _swift_task_switch(sub_62DA8, v2, v1);
}

uint64_t sub_62DA8()
{
  swift_release();
  if (qword_A2C28 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_A6A70;
  id v2 = [*(id *)(qword_A6A70 + OBJC_IVAR____TtC17StorageSettingsUI13StorageShared_datesStreams) publisher];
  v0[6] = sub_32750;
  v0[7] = 0;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_327A8;
  v0[5] = &unk_985E0;
  uint64_t v3 = _Block_copy(v0 + 2);
  id v4 = [v2 filterWithIsIncluded:v3];
  _Block_release(v3);

  v0[6] = nullsub_1;
  v0[7] = 0;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_32800;
  v0[5] = &unk_98608;
  uint64_t v5 = _Block_copy(v0 + 2);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  v0[6] = sub_39904;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_32800;
  v0[5] = &unk_98658;
  uint64_t v7 = _Block_copy(v0 + 2);
  id v8 = v1;
  swift_release();
  id v9 = [v4 sinkWithCompletion:v5 receiveInput:v7];
  _Block_release(v7);
  _Block_release(v5);

  uint64_t v10 = sub_28814();
  id v11 = v8;
  uint64_t v12 = sub_37F40(_swiftEmptyDictionarySingleton, v10, (uint64_t)v11);

  swift_bridgeObjectRelease();
  sub_28BF4(v12);
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_63048@<X0>(uint64_t a1@<X8>)
{
  return sub_62448(*v1, v1[1], a1);
}

char *sub_63050@<X0>(uint64_t a1@<X8>)
{
  return sub_62A78(*(void **)(v1 + 16), a1);
}

uint64_t sub_63058()
{
  NSString v0 = sub_76BE0();
  NSString v1 = sub_76BE0();
  id v2 = STLocalizedString(v0);

  sub_76C10();
  sub_14F50(&qword_A2FF0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_7CA00;
  id v4 = localizedDeviceName();
  uint64_t v5 = sub_76C10();
  uint64_t v7 = v6;

  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 64) = sub_1B654();
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v7;
  uint64_t v8 = sub_76C20();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_63180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A4568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_631E8(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A4568);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_63248(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_63258()
{
  return swift_release();
}

uint64_t sub_63260()
{
  return _swift_deallocObject(v0, 24, 7);
}

char *sub_632A0(char *result, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  if (result != (unsigned char *)&dword_0 + 1)
  {
    uint64_t v7 = result;
    swift_retain();
    id v8 = v7;
    id v9 = a3;
    return (char *)a5;
  }
  return result;
}

char *sub_63300(char *result, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  if (result != (unsigned char *)&dword_0 + 1)
  {

    return (char *)swift_release();
  }
  return result;
}

unint64_t sub_63360()
{
  unint64_t result = qword_A45A0;
  if (!qword_A45A0)
  {
    sub_14F94(&qword_A4598);
    sub_6340C();
    sub_63518(&qword_A45B8, (void (*)(uint64_t))type metadata accessor for NavigationEventEmissionViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A45A0);
  }
  return result;
}

unint64_t sub_6340C()
{
  unint64_t result = qword_A45A8;
  if (!qword_A45A8)
  {
    sub_14F94(&qword_A4568);
    sub_14F94(&qword_A4558);
    sub_1508C(&qword_A4580, &qword_A4558);
    swift_getOpaqueTypeConformance2();
    sub_63518(&qword_A45B0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A45A8);
  }
  return result;
}

uint64_t sub_63518(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_63570(void *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v26 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 20);
    NSString v32 = a1;
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *(void *)uint64_t v7 = *(char **)((char *)a2 + v6);
    *((void *)v7 + 1) = v9;
    uint64_t v10 = *(uint64_t *)((char *)a2 + v6 + 24);
    *((void *)v7 + 2) = *(char **)((char *)a2 + v6 + 16);
    *((void *)v7 + 3) = v10;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v6 + 40);
    *((void *)v7 + 4) = *(char **)((char *)a2 + v6 + 32);
    *((void *)v7 + 5) = v11;
    *((_OWORD *)v7 + 3) = *(_OWORD *)((char *)a2 + v6 + 48);
    v7[64] = *((unsigned char *)a2 + v6 + 64);
    uint64_t v13 = *(char **)((char *)a2 + v6 + 72);
    uint64_t v12 = *(uint64_t *)((char *)a2 + v6 + 80);
    *((void *)v7 + 9) = v13;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v6 + 88);
    unsigned __int8 v15 = *((unsigned char *)a2 + v6 + 96);
    uint64_t v16 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v17 = v13;
    sub_16F10(v12, v14, v15);
    *((void *)v7 + 10) = v12;
    *((void *)v7 + 11) = v14;
    v7[96] = v15;
    uint64_t v18 = *(void *)(v8 + 112);
    *((void *)v7 + 13) = *(void *)(v8 + 104);
    *((void *)v7 + 14) = v18;
    *((void *)v7 + 15) = *(void *)(v8 + 120);
    *((_DWORD *)v7 + 32) = *(_DWORD *)(v8 + 128);
    *((_WORD *)v7 + 66) = *(_WORD *)(v8 + 132);
    uint64_t v19 = (int *)type metadata accessor for Application();
    uint64_t v20 = v19[18];
    __dst = &v7[v20];
    unsigned __int8 v21 = (const void *)(v8 + v20);
    uint64_t v22 = sub_76070();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      uint64_t v25 = sub_14F50(&qword_A3000);
      memcpy(__dst, v21, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v23 + 16))(__dst, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
    }
    uint64_t v27 = v19[19];
    uint64_t v28 = &v7[v27];
    uint64_t v29 = (void *)(v8 + v27);
    uint64_t v30 = v29[1];
    *(void *)uint64_t v28 = *v29;
    *((void *)v28 + 1) = v30;
    *(void *)&v7[v19[20]] = *(void *)(v8 + v19[20]);
    *(void *)&v7[v19[21]] = *(void *)(v8 + v19[21]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (char *)v32;
  }
  return v26;
}

uint64_t sub_637EC(id *a1, uint64_t a2)
{
  int v4 = (char *)a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_16FDC(*((void *)v4 + 10), *((void *)v4 + 11), v4[96]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = &v4[*(int *)(type metadata accessor for Application() + 72)];
  uint64_t v6 = sub_76070();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_6391C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = *(void *)(a2 + v5 + 8);
  *(void *)uint64_t v6 = *(void *)(a2 + v5);
  *((void *)v6 + 1) = v8;
  uint64_t v9 = *(void *)(a2 + v5 + 24);
  *((void *)v6 + 2) = *(void *)(a2 + v5 + 16);
  *((void *)v6 + 3) = v9;
  uint64_t v10 = *(void *)(a2 + v5 + 40);
  *((void *)v6 + 4) = *(void *)(a2 + v5 + 32);
  *((void *)v6 + 5) = v10;
  *((_OWORD *)v6 + 3) = *(_OWORD *)(a2 + v5 + 48);
  v6[64] = *(unsigned char *)(a2 + v5 + 64);
  uint64_t v12 = *(void **)(a2 + v5 + 72);
  uint64_t v11 = *(void *)(a2 + v5 + 80);
  *((void *)v6 + 9) = v12;
  uint64_t v13 = *(void *)(a2 + v5 + 88);
  unsigned __int8 v14 = *(unsigned char *)(a2 + v5 + 96);
  id v15 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = v12;
  sub_16F10(v11, v13, v14);
  *((void *)v6 + 10) = v11;
  *((void *)v6 + 11) = v13;
  v6[96] = v14;
  uint64_t v17 = *(void *)(v7 + 112);
  *((void *)v6 + 13) = *(void *)(v7 + 104);
  *((void *)v6 + 14) = v17;
  *((void *)v6 + 15) = *(void *)(v7 + 120);
  *((_DWORD *)v6 + 32) = *(_DWORD *)(v7 + 128);
  *((_WORD *)v6 + 66) = *(_WORD *)(v7 + 132);
  uint64_t v18 = (int *)type metadata accessor for Application();
  uint64_t v19 = v18[18];
  __dst = &v6[v19];
  uint64_t v20 = (const void *)(v7 + v19);
  uint64_t v21 = sub_76070();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    uint64_t v24 = sub_14F50(&qword_A3000);
    memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v22 + 16))(__dst, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  uint64_t v25 = v18[19];
  uint64_t v26 = &v6[v25];
  uint64_t v27 = (void *)(v7 + v25);
  uint64_t v28 = v27[1];
  *(void *)uint64_t v26 = *v27;
  *((void *)v26 + 1) = v28;
  *(void *)&v6[v18[20]] = *(void *)(v7 + v18[20]);
  *(void *)&v6[v18[21]] = *(void *)(v7 + v18[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_63B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v34 = a1;
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)(a2 + v9);
  *(void *)(v10 + 8) = *(void *)(a2 + v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + 16) = *(void *)(v11 + 16);
  *(void *)(v10 + 24) = *(void *)(v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  *(void *)(v10 + 40) = *(void *)(v11 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + 48) = *(void *)(v11 + 48);
  *(void *)(v10 + 56) = *(void *)(v11 + 56);
  *(unsigned char *)(v10 + 64) = *(unsigned char *)(v11 + 64);
  uint64_t v12 = *(void **)(v10 + 72);
  uint64_t v13 = *(void **)(v11 + 72);
  *(void *)(v10 + 72) = v13;
  id v14 = v13;

  uint64_t v15 = *(void *)(v11 + 80);
  uint64_t v16 = *(void *)(v11 + 88);
  LOBYTE(v6) = *(unsigned char *)(v11 + 96);
  sub_16F10(v15, v16, v6);
  uint64_t v17 = *(void *)(v10 + 80);
  uint64_t v18 = *(void *)(v10 + 88);
  *(void *)(v10 + 80) = v15;
  *(void *)(v10 + 88) = v16;
  unsigned __int8 v19 = *(unsigned char *)(v10 + 96);
  *(unsigned char *)(v10 + 96) = (_BYTE)v6;
  sub_16FDC(v17, v18, v19);
  *(void *)(v10 + 104) = *(void *)(v11 + 104);
  *(void *)(v10 + 112) = *(void *)(v11 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + 120) = *(void *)(v11 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + 128) = *(unsigned char *)(v11 + 128);
  *(unsigned char *)(v10 + 129) = *(unsigned char *)(v11 + 129);
  *(unsigned char *)(v10 + 130) = *(unsigned char *)(v11 + 130);
  *(unsigned char *)(v10 + 131) = *(unsigned char *)(v11 + 131);
  *(unsigned char *)(v10 + 132) = *(unsigned char *)(v11 + 132);
  *(unsigned char *)(v10 + 133) = *(unsigned char *)(v11 + 133);
  uint64_t v20 = (int *)type metadata accessor for Application();
  uint64_t v21 = v20[18];
  uint64_t v22 = (void *)(v10 + v21);
  uint64_t v23 = (void *)(v11 + v21);
  uint64_t v24 = sub_76070();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 24))(v22, v23, v24);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    uint64_t v29 = sub_14F50(&qword_A3000);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v22, v23, v24);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_7:
  uint64_t v30 = v20[19];
  NSString v31 = (void *)(v10 + v30);
  NSString v32 = (void *)(v11 + v30);
  *NSString v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + v20[20]) = *(void *)(v11 + v20[20]);
  *(void *)(v10 + v20[21]) = *(void *)(v11 + v20[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v34;
}

_OWORD *sub_63E74(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  long long v7 = *(_OWORD *)((char *)a2 + v4 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)((char *)a2 + v4);
  *((_OWORD *)v5 + 1) = v7;
  long long v8 = *(_OWORD *)((char *)a2 + v4 + 48);
  *((_OWORD *)v5 + 2) = *(_OWORD *)((char *)a2 + v4 + 32);
  *((_OWORD *)v5 + 3) = v8;
  v5[64] = *((unsigned char *)a2 + v4 + 64);
  *((void *)v5 + 9) = *(void *)((char *)a2 + v4 + 72);
  long long v9 = *(_OWORD *)((char *)a2 + v4 + 96);
  *((_OWORD *)v5 + 5) = *(_OWORD *)((char *)a2 + v4 + 80);
  *((_OWORD *)v5 + 6) = v9;
  uint64_t v10 = *(void *)((char *)a2 + v4 + 120);
  *((void *)v5 + 14) = *(void *)((char *)a2 + v4 + 112);
  *((void *)v5 + 15) = v10;
  *((_DWORD *)v5 + 32) = *(_DWORD *)((char *)a2 + v4 + 128);
  *((_WORD *)v5 + 66) = *(_WORD *)((char *)a2 + v4 + 132);
  uint64_t v11 = (int *)type metadata accessor for Application();
  uint64_t v12 = v11[18];
  uint64_t v13 = &v5[v12];
  id v14 = &v6[v12];
  uint64_t v15 = sub_76070();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_14F50(&qword_A3000);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_OWORD *)&v5[v11[19]] = *(_OWORD *)&v6[v11[19]];
  *(void *)&v5[v11[20]] = *(void *)&v6[v11[20]];
  *(void *)&v5[v11[21]] = *(void *)&v6[v11[21]];
  return a1;
}

uint64_t sub_6400C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v35 = a1;
  uint64_t v8 = a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)((char *)a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)v9 + 3);
  *(void *)(v8 + 16) = *((void *)v9 + 2);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v9 + 5);
  *(void *)(v8 + 32) = *((void *)v9 + 4);
  *(void *)(v8 + 40) = v12;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 48) = *((_OWORD *)v9 + 3);
  *(unsigned char *)(v8 + 64) = v9[64];
  uint64_t v13 = *(void **)(v8 + 72);
  *(void *)(v8 + 72) = *((void *)v9 + 9);

  char v14 = v9[96];
  uint64_t v15 = *(void *)(v8 + 80);
  uint64_t v16 = *(void *)(v8 + 88);
  *(_OWORD *)(v8 + 80) = *((_OWORD *)v9 + 5);
  unsigned __int8 v17 = *(unsigned char *)(v8 + 96);
  *(unsigned char *)(v8 + 96) = v14;
  sub_16FDC(v15, v16, v17);
  uint64_t v18 = *((void *)v9 + 14);
  *(void *)(v8 + 104) = *((void *)v9 + 13);
  *(void *)(v8 + 112) = v18;
  swift_bridgeObjectRelease();
  *(void *)(v8 + 120) = *((void *)v9 + 15);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 128) = v9[128];
  *(unsigned char *)(v8 + 129) = v9[129];
  *(unsigned char *)(v8 + 130) = v9[130];
  *(unsigned char *)(v8 + 131) = v9[131];
  *(unsigned char *)(v8 + 132) = v9[132];
  *(unsigned char *)(v8 + 133) = v9[133];
  unsigned __int8 v19 = (int *)type metadata accessor for Application();
  uint64_t v20 = v19[18];
  uint64_t v21 = (void *)(v8 + v20);
  uint64_t v22 = &v9[v20];
  uint64_t v23 = sub_76070();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    uint64_t v28 = sub_14F50(&qword_A3000);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_7:
  uint64_t v29 = v19[19];
  uint64_t v30 = (void *)(v8 + v29);
  NSString v31 = &v9[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *uint64_t v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  *(void *)(v8 + v19[20]) = *(void *)&v9[v19[20]];
  *(void *)(v8 + v19[21]) = *(void *)&v9[v19[21]];
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_642C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_642D4);
}

uint64_t sub_642D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for Application();
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_64390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_643A4);
}

void *sub_643A4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for Application();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AppListView()
{
  uint64_t result = qword_A4618;
  if (!qword_A4618) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_64498()
{
  uint64_t result = type metadata accessor for Application();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_64530()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_6454C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  uint64_t v3 = type metadata accessor for AppListView();
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v33 + 64);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v34 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = &v31[-v7];
  __chkstk_darwin(v6);
  uint64_t v10 = &v31[-v9];
  uint64_t v11 = (int *)sub_14F50(&qword_A4650);
  uint64_t v12 = __chkstk_darwin(v11);
  char v14 = (uint64_t *)&v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v16 = &v31[-v15];
  uint64_t v35 = sub_14F50(&qword_A4658);
  __chkstk_darwin(v35);
  uint64_t v18 = &v31[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v19 = *(unsigned __int8 *)(v2 + *(int *)(v3 + 20) + 130);
  sub_65F00(v2, (uint64_t)v10);
  if (v19 == 1) {
    int v32 = v10[*(int *)(v3 + 20) + 131] ^ 1;
  }
  else {
    int v32 = 0;
  }
  sub_65F64((uint64_t)v10);
  sub_65F00(v2, (uint64_t)v8);
  unint64_t v20 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v21 = swift_allocObject();
  sub_65FC4((uint64_t)v8, v21 + v20);
  uint64_t v22 = v2;
  uint64_t v23 = v34;
  sub_65F00(v22, (uint64_t)v34);
  uint64_t v24 = swift_allocObject();
  sub_65FC4((uint64_t)v23, v24 + v20);
  *char v14 = swift_getKeyPath();
  sub_14F50(&qword_A37C8);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = (uint64_t *)((char *)v14 + v11[9]);
  *uint64_t v25 = swift_getKeyPath();
  sub_14F50(&qword_A37D0);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v14 + v11[10]) = v32 & 1;
  int v26 = (uint64_t (**)())((char *)v14 + v11[11]);
  char *v26 = sub_66028;
  v26[1] = (uint64_t (*)())v21;
  int v27 = (uint64_t (**)())((char *)v14 + v11[12]);
  void *v27 = sub_661F0;
  v27[1] = (uint64_t (*)())v24;
  sub_150E0((uint64_t)v14, (uint64_t)v16, &qword_A4650);
  uint64_t v28 = sub_76500();
  sub_15144((uint64_t)v16, (uint64_t)v18, &qword_A4650);
  uint64_t v29 = (uint64_t *)&v18[*(int *)(v35 + 36)];
  uint64_t *v29 = v28;
  v29[1] = (uint64_t)sub_46130;
  v29[2] = 0;
  sub_151A8((uint64_t)v16, &qword_A4650);
  return sub_150E0((uint64_t)v18, v36, &qword_A4658);
}

uint64_t sub_648F0@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AppListView();
  sub_1C7F8(a1);
  uint64_t v2 = sub_76140();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_64980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_14F50(&qword_A4660);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_764E0();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v7 = sub_14F50(&qword_A4668);
  sub_64AD0(a1, (uint64_t)&v6[*(int *)(v7 + 44)]);
  char v8 = sub_76630();
  if (qword_A2C58 != -1) {
    swift_once();
  }
  sub_76290();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  sub_15144((uint64_t)v6, a2, &qword_A4660);
  uint64_t v17 = a2 + *(int *)(sub_14F50(&qword_A4670) + 36);
  *(unsigned char *)uint64_t v17 = v8;
  *(void *)(v17 + 8) = v10;
  *(void *)(v17 + 16) = v12;
  *(void *)(v17 + 24) = v14;
  *(void *)(v17 + 32) = v16;
  *(unsigned char *)(v17 + 40) = 0;
  return sub_151A8((uint64_t)v6, &qword_A4660);
}

uint64_t sub_64AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_14F50(&qword_A2DF8);
  __chkstk_darwin(v4 - 8);
  uint64_t v106 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_14F50(&qword_A4678);
  uint64_t v6 = __chkstk_darwin(v118);
  uint64_t v105 = (uint64_t)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v107 = (uint64_t)&v102 - v8;
  uint64_t v116 = sub_14F50(&qword_A4680);
  __chkstk_darwin(v116);
  uint64_t v117 = (uint64_t)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_14F50(&qword_A2EC8);
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  Swift::Int v109 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_14F50(&qword_A3C30);
  uint64_t v11 = __chkstk_darwin(v115);
  Swift::Int v108 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v112 = (uint64_t)&v102 - v13;
  uint64_t v14 = sub_14F50(&qword_A4688);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v120 = (uint64_t)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v124 = (uint64_t)&v102 - v17;
  uint64_t v18 = sub_14F50(&qword_A4690);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v119 = (uint64_t)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v102 - v22;
  __chkstk_darwin(v21);
  uint64_t v129 = (uint64_t)&v102 - v24;
  uint64_t v25 = sub_14F50(&qword_A3A30);
  __chkstk_darwin(v25 - 8);
  unint64_t v104 = (char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_14F50(&qword_A4698);
  uint64_t v27 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v103 = (uint64_t)&v102 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for AppListView();
  uint64_t v30 = __chkstk_darwin(v29);
  long long v121 = (char *)&v102 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v102 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v102 - v36;
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v102 - v38;
  uint64_t v40 = sub_14F50(&qword_A46A0);
  uint64_t v41 = __chkstk_darwin(v40 - 8);
  uint64_t v123 = (uint64_t)&v102 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v130 = (uint64_t)&v102 - v43;
  uint64_t v44 = a1 + *(int *)(v29 + 20);
  uint64_t v45 = *(void *)(v44 + 80);
  uint64_t v126 = *(void *)(v44 + 88);
  uint64_t v127 = v45;
  int v125 = *(unsigned __int8 *)(v44 + 96);
  uint64_t v113 = *(void *)(v44 + 104);
  uint64_t v128 = *(void *)(v44 + 112);
  uint64_t KeyPath = swift_getKeyPath();
  int v46 = *(unsigned __int8 *)(v44 + 64);
  sub_65F00(a1, (uint64_t)v39);
  if (v46 != 1
    || (uint64_t v47 = &v39[*(int *)(v29 + 20)], *(void *)v47 == 0xD000000000000010)
    && *((void *)v47 + 1) == 0x8000000000085F40)
  {
    sub_16F10(v127, v126, v125);
    swift_bridgeObjectRetain();
    sub_65F64((uint64_t)v39);
    sub_65F00(a1, (uint64_t)v37);
LABEL_5:
    sub_65F64((uint64_t)v37);
LABEL_6:
    uint64_t v48 = 1;
    goto LABEL_7;
  }
  char v73 = sub_77050();
  sub_16F10(v127, v126, v125);
  swift_bridgeObjectRetain();
  sub_65F64((uint64_t)v39);
  sub_65F00(a1, (uint64_t)v37);
  if (v73) {
    goto LABEL_5;
  }
  Swift::Int v74 = &v37[*(int *)(v29 + 20)];
  if (*(void *)v74 == 0xD000000000000019 && *((void *)v74 + 1) == 0x8000000000085F60) {
    goto LABEL_5;
  }
  char v75 = sub_77050();
  sub_65F64((uint64_t)v37);
  if (v75) {
    goto LABEL_6;
  }
  uint64_t v102 = sub_76810();
  unint64_t v131 = v102;
  uint64_t v133 = 0;
  unint64_t v134 = 0xE000000000000000;
  sub_76F70(26);
  swift_bridgeObjectRelease();
  uint64_t v133 = 0xD000000000000018;
  unint64_t v134 = 0x80000000000881A0;
  uint64_t v77 = *(void *)v44;
  uint64_t v76 = *(void **)(v44 + 8);
  swift_bridgeObjectRetain();
  v138._countAndFlagsBits = v77;
  v138._object = v76;
  sub_76C50(v138);
  swift_bridgeObjectRelease();
  uint64_t v78 = (uint64_t)v104;
  sub_767B0();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v102 = sub_76800();
  uint64_t v79 = swift_getKeyPath();
  uint64_t v80 = v103;
  sub_15144(v78, v103, &qword_A3A30);
  long long v81 = (uint64_t *)(v80 + *(int *)(v122 + 36));
  uint64_t v82 = v102;
  *long long v81 = v79;
  v81[1] = v82;
  sub_151A8(v78, &qword_A3A30);
  sub_150E0(v80, v130, &qword_A4698);
  uint64_t v48 = 0;
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v130, v48, 1, v122);
  *(void *)uint64_t v23 = sub_76520();
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  uint64_t v49 = sub_14F50(&qword_A46A8);
  sub_658C0(a1, (uint64_t)&v23[*(int *)(v49 + 44)]);
  sub_150E0((uint64_t)v23, v129, &qword_A4690);
  int v50 = *(unsigned __int8 *)(v44 + 64);
  sub_65F00(a1, (uint64_t)v34);
  uint64_t v51 = (uint64_t)v121;
  if (v50 == 3)
  {
    sub_65F64((uint64_t)v34);
    sub_65F00(a1, v51);
LABEL_10:
    sub_65F64(v51);
LABEL_11:
    uint64_t v53 = v109;
    sub_762D0();
    uint64_t v133 = 0;
    unint64_t v134 = 0xE000000000000000;
    sub_76F70(25);
    swift_bridgeObjectRelease();
    uint64_t v133 = 0xD000000000000017;
    unint64_t v134 = 0x8000000000088160;
    uint64_t v54 = *(void *)v44;
    uint64_t v55 = *(void **)(v44 + 8);
    swift_bridgeObjectRetain();
    v137._countAndFlagsBits = v54;
    v137._object = v55;
    sub_76C50(v137);
    swift_bridgeObjectRelease();
    sub_1508C(&qword_A2ED8, &qword_A2EC8);
    uint64_t v56 = (uint64_t)v108;
    uint64_t v57 = v111;
    sub_767B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v53, v57);
    Swift::String v58 = &qword_A3C30;
    uint64_t v59 = v112;
    sub_150E0(v56, v112, &qword_A3C30);
    sub_15144(v59, v117, &qword_A3C30);
    swift_storeEnumTagMultiPayload();
    sub_662A4();
    sub_6639C();
    uint64_t v60 = v124;
    sub_76570();
    uint64_t v61 = v59;
LABEL_12:
    sub_151A8(v61, v58);
    uint64_t v62 = v123;
    sub_15144(v130, v123, &qword_A46A0);
    uint64_t v63 = v119;
    sub_15144(v129, v119, &qword_A4690);
    uint64_t v64 = v120;
    sub_15144(v60, v120, &qword_A4688);
    uint64_t v65 = KeyPath;
    *(void *)a2 = KeyPath;
    *(unsigned char *)(a2 + 8) = 0;
    uint64_t v67 = v126;
    uint64_t v66 = v127;
    *(void *)(a2 + 16) = v127;
    *(void *)(a2 + 24) = v67;
    unsigned __int8 v68 = v125;
    *(unsigned char *)(a2 + 32) = v125;
    uint64_t v69 = v128;
    *(void *)(a2 + 40) = v113;
    *(void *)(a2 + 48) = v69;
    *(unsigned char *)(a2 + 56) = 2;
    char v70 = (int *)sub_14F50(&qword_A46D8);
    sub_15144(v62, a2 + v70[12], &qword_A46A0);
    sub_15144(v63, a2 + v70[16], &qword_A4690);
    uint64_t v71 = a2 + v70[20];
    *(void *)uint64_t v71 = 0;
    *(unsigned char *)(v71 + 8) = 1;
    sub_15144(v64, a2 + v70[24], &qword_A4688);
    sub_16F10(v66, v67, v68);
    swift_bridgeObjectRetain();
    sub_46ABC(v65, 0);
    sub_16F10(v66, v67, v68);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_151A8(v124, &qword_A4688);
    sub_151A8(v129, &qword_A4690);
    sub_151A8(v130, &qword_A46A0);
    swift_release();
    sub_16FDC(v66, v67, v68);
    swift_bridgeObjectRelease();
    sub_151A8(v64, &qword_A4688);
    sub_151A8(v63, &qword_A4690);
    sub_151A8(v123, &qword_A46A0);
    sub_46AC8(v65, 0);
    sub_16FDC(v66, v67, v68);
    return swift_bridgeObjectRelease();
  }
  int v52 = v34[*(int *)(v29 + 20) + 64];
  sub_65F64((uint64_t)v34);
  sub_65F00(a1, v51);
  if (v52 == 5) {
    goto LABEL_10;
  }
  int v83 = *(unsigned __int8 *)(v51 + *(int *)(v29 + 20) + 64);
  sub_65F64(v51);
  if (v83 == 4) {
    goto LABEL_11;
  }
  uint64_t v84 = *(void *)(v44 + 48);
  uint64_t v85 = *(void *)(v44 + 56);
  uint64_t result = v84 + v85;
  if (!__OFADD__(v84, v85))
  {
    uint64_t v133 = sub_770B0();
    unint64_t v134 = v86;
    sub_15038();
    uint64_t v87 = sub_766D0();
    uint64_t v89 = v88;
    uint64_t v133 = v87;
    unint64_t v134 = v88;
    char v91 = v90 & 1;
    char v135 = v90 & 1;
    uint64_t v136 = v92;
    unint64_t v131 = 0;
    unint64_t v132 = 0xE000000000000000;
    sub_76F70(26);
    swift_bridgeObjectRelease();
    unint64_t v131 = 0xD000000000000018;
    unint64_t v132 = 0x8000000000088140;
    uint64_t v93 = *(void *)v44;
    long long v94 = *(void **)(v44 + 8);
    swift_bridgeObjectRetain();
    v139._countAndFlagsBits = v93;
    v139._object = v94;
    sub_76C50(v139);
    swift_bridgeObjectRelease();
    uint64_t v95 = (uint64_t)v106;
    sub_767B0();
    swift_bridgeObjectRelease();
    sub_150D0(v87, v89, v91);
    swift_bridgeObjectRelease();
    uint64_t v96 = sub_76800();
    uint64_t v97 = swift_getKeyPath();
    uint64_t v98 = v105;
    sub_15144(v95, v105, &qword_A2DF8);
    unint64_t v99 = (uint64_t *)(v98 + *(int *)(v118 + 36));
    *unint64_t v99 = v97;
    v99[1] = v96;
    sub_151A8(v95, &qword_A2DF8);
    Swift::String v58 = &qword_A4678;
    uint64_t v100 = v98;
    uint64_t v101 = v107;
    sub_150E0(v100, v107, &qword_A4678);
    sub_15144(v101, v117, &qword_A4678);
    swift_storeEnumTagMultiPayload();
    sub_662A4();
    sub_6639C();
    uint64_t v60 = v124;
    sub_76570();
    uint64_t v61 = v101;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_658C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v77 = sub_14F50(&qword_A2DF8);
  uint64_t v4 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v71 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_14F50(&qword_A3000);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_76070();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::Int v74 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_14F50(&qword_A46E0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v73 = (uint64_t)&v65 - v16;
  uint64_t v17 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AppListView() + 20));
  uint64_t v18 = v17[3];
  uint64_t v80 = v17[2];
  uint64_t v81 = v18;
  sub_15038();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_766D0();
  uint64_t v75 = v20;
  uint64_t v76 = v19;
  int v72 = v21;
  uint64_t v23 = v22;
  uint64_t v24 = type metadata accessor for Application();
  sub_15144((uint64_t)v17 + *(int *)(v24 + 72), (uint64_t)v8, &qword_A3000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_151A8((uint64_t)v8, &qword_A3000);
    uint64_t v25 = 1;
    uint64_t v26 = v73;
  }
  else
  {
    uint64_t v65 = v9;
    uint64_t v66 = v10;
    (*(void (**)(void))(v10 + 32))();
    NSString v27 = sub_76BE0();
    NSString v28 = sub_76BE0();
    id v29 = STLocalizedString(v27);
    uint64_t v67 = v23;
    id v30 = v29;

    sub_76C10();
    uint64_t v69 = v4;

    sub_14F50(&qword_A2FF0);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_7CA00;
    uint64_t v32 = sub_76060();
    unsigned __int8 v68 = v15;
    uint64_t v34 = v33;
    *(void *)(v31 + 56) = &type metadata for String;
    *(void *)(v31 + 64) = sub_1B654();
    *(void *)(v31 + 32) = v32;
    *(void *)(v31 + 40) = v34;
    uint64_t v35 = sub_76C20();
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v80 = v35;
    uint64_t v81 = v37;
    uint64_t v38 = sub_766D0();
    uint64_t v40 = v39;
    LOBYTE(v31) = v41 & 1;
    sub_76660();
    uint64_t v42 = sub_766C0();
    uint64_t v44 = v43;
    uint64_t v70 = a2;
    char v46 = v45;
    swift_release();
    sub_150D0(v38, v40, v31);
    swift_bridgeObjectRelease();
    sub_76800();
    uint64_t v47 = sub_76690();
    uint64_t v49 = v48;
    char v51 = v50;
    uint64_t v53 = v52;
    swift_release();
    v51 &= 1u;
    uint64_t v54 = v42;
    uint64_t v15 = v68;
    sub_150D0(v54, v44, v46 & 1);
    swift_bridgeObjectRelease();
    uint64_t v80 = v47;
    uint64_t v81 = v49;
    char v82 = v51;
    uint64_t v83 = v53;
    unint64_t v78 = 0;
    unint64_t v79 = 0xE000000000000000;
    sub_76F70(34);
    swift_bridgeObjectRelease();
    unint64_t v78 = 0xD000000000000020;
    unint64_t v79 = 0x80000000000881E0;
    uint64_t v55 = *v17;
    uint64_t v56 = (void *)v17[1];
    swift_bridgeObjectRetain();
    v84._countAndFlagsBits = v55;
    v84._object = v56;
    sub_76C50(v84);
    a2 = v70;
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v71;
    sub_767B0();
    swift_bridgeObjectRelease();
    uint64_t v58 = v49;
    uint64_t v23 = v67;
    char v59 = v51;
    uint64_t v4 = v69;
    sub_150D0(v47, v58, v59);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v74, v65);
    uint64_t v26 = v73;
    sub_150E0(v57, v73, &qword_A2DF8);
    uint64_t v25 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v26, v25, 1, v77);
  char v60 = v72 & 1;
  sub_15144(v26, (uint64_t)v15, &qword_A46E0);
  uint64_t v62 = v75;
  uint64_t v61 = v76;
  *(void *)a2 = v76;
  *(void *)(a2 + 8) = v62;
  *(unsigned char *)(a2 + 16) = v60;
  *(void *)(a2 + 24) = v23;
  uint64_t v63 = sub_14F50(&qword_A46E8);
  sub_15144((uint64_t)v15, a2 + *(int *)(v63 + 48), &qword_A46E0);
  sub_16E5C(v61, v62, v60);
  swift_bridgeObjectRetain();
  sub_151A8(v26, &qword_A46E0);
  sub_151A8((uint64_t)v15, &qword_A46E0);
  sub_150D0(v61, v62, v60);
  return swift_bridgeObjectRelease();
}

uint64_t sub_65F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppListView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_65F64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppListView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_65FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppListView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_66028()
{
  return sub_66208((uint64_t (*)(uint64_t))sub_648F0);
}

uint64_t sub_66044()
{
  uint64_t v1 = (int *)(type metadata accessor for AppListView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);

  uint64_t v5 = v0 + v3 + v1[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_16FDC(*(void *)(v5 + 80), *(void *)(v5 + 88), *(unsigned char *)(v5 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for Application() + 72);
  uint64_t v7 = sub_76070();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_661F0()
{
  return sub_66208((uint64_t (*)(uint64_t))sub_64980);
}

uint64_t sub_66208(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for AppListView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

unint64_t sub_662A4()
{
  unint64_t result = qword_A46B0;
  if (!qword_A46B0)
  {
    sub_14F94(&qword_A3C30);
    sub_1508C(&qword_A2ED8, &qword_A2EC8);
    sub_66344();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A46B0);
  }
  return result;
}

unint64_t sub_66344()
{
  unint64_t result = qword_A3A88;
  if (!qword_A3A88)
  {
    sub_765E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A3A88);
  }
  return result;
}

unint64_t sub_6639C()
{
  unint64_t result = qword_A46B8;
  if (!qword_A46B8)
  {
    sub_14F94(&qword_A4678);
    sub_6643C();
    sub_1508C(&qword_A46C8, &qword_A46D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A46B8);
  }
  return result;
}

unint64_t sub_6643C()
{
  unint64_t result = qword_A46C0;
  if (!qword_A46C0)
  {
    sub_14F94(&qword_A2DF8);
    sub_66344();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A46C0);
  }
  return result;
}

unint64_t sub_664BC()
{
  unint64_t result = qword_A46F0;
  if (!qword_A46F0)
  {
    sub_14F94(&qword_A4658);
    sub_1508C(&qword_A46F8, &qword_A4650);
    sub_468A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A46F0);
  }
  return result;
}

uint64_t sub_6655C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_665DC(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return sub_76250();
}

id sub_666E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DetailViewWrapper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DetailViewWrapper()
{
  return self;
}

uint64_t sub_66738@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v3 = sub_14F50(&qword_A47E8);
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v64 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v63 = (char *)&v55 - v6;
  uint64_t v7 = sub_14F50(&qword_A47F0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v58 = (uint64_t)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v55 - v10;
  uint64_t v12 = sub_14F50(&qword_A47F8);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v62 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v55 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v55 - v19;
  uint64_t v65 = a1;
  uint64_t v21 = a1;
  uint64_t v22 = a1 + *(int *)(type metadata accessor for DetailView() + 20);
  uint64_t v23 = (uint64_t *)(v22 + *(int *)(type metadata accessor for Application() + 76));
  uint64_t v24 = v23[1];
  if (v24)
  {
    uint64_t v66 = *v23;
    uint64_t v67 = v24;
    sub_15038();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_766D0();
    uint64_t v29 = v28 & 1;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v29 = 0;
    uint64_t v27 = 0;
  }
  uint64_t v66 = v25;
  uint64_t v67 = v26;
  uint64_t v68 = v29;
  uint64_t v69 = v27;
  sub_14F50(&qword_A4800);
  sub_14F50(&qword_A4808);
  sub_1508C(&qword_A4810, &qword_A4800);
  sub_6A678();
  sub_769B0();
  uint64_t v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v20, v18, v12);
  if (*(unsigned char *)(v22 + 128) == 1)
  {
    __chkstk_darwin(v30);
    *(&v55 - 2) = v21;
    uint64_t v66 = sub_201B8();
    uint64_t v67 = v31;
    LOBYTE(v68) = v32 & 1;
    uint64_t v69 = v33;
    sub_14F50(&qword_A4860);
    sub_1508C(&qword_A4868, &qword_A4860);
    uint64_t v34 = (uint64_t)v11;
    sub_769B0();
    uint64_t v35 = sub_14F50(&qword_A4820);
    uint64_t v36 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v11, 0, 1, v35);
  }
  else
  {
    uint64_t v37 = sub_14F50(&qword_A4820);
    uint64_t v34 = (uint64_t)v11;
    uint64_t v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v11, 1, 1, v37);
  }
  uint64_t v56 = v34;
  __chkstk_darwin(v36);
  *(&v55 - 2) = v21;
  sub_14F50(&qword_A4828);
  sub_6A6EC();
  uint64_t v38 = v63;
  sub_769A0();
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v40 = v62;
  uint64_t v57 = v20;
  uint64_t v55 = v12;
  v39(v62, v20, v12);
  uint64_t v41 = v58;
  sub_15144(v34, v58, &qword_A47F0);
  uint64_t v42 = v59;
  uint64_t v43 = v60;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  v44(v64, v38, v60);
  uint64_t v45 = v41;
  char v46 = v61;
  uint64_t v47 = v40;
  uint64_t v48 = v55;
  v39(v61, v47, v55);
  uint64_t v49 = sub_14F50(&qword_A4858);
  sub_15144(v45, (uint64_t)&v46[*(int *)(v49 + 48)], &qword_A47F0);
  char v50 = &v46[*(int *)(v49 + 64)];
  char v51 = v64;
  v44(v50, v64, v43);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v42 + 8);
  v52(v63, v43);
  sub_151A8(v56, &qword_A47F0);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  v53(v57, v48);
  v52(v51, v43);
  sub_151A8(v45, &qword_A47F0);
  return ((uint64_t (*)(char *, uint64_t))v53)(v62, v48);
}

uint64_t sub_66D74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v120 = a2;
  uint64_t v3 = type metadata accessor for DetailView();
  __chkstk_darwin(v3);
  uint64_t v115 = (uint64_t)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_14F50(&qword_A4880);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v129 = (uint64_t)&v93 - v9;
  uint64_t v114 = v3;
  uint64_t v10 = *(int *)(v3 + 20);
  uint64_t v121 = a1;
  uint64_t v11 = (uint64_t *)(a1 + v10);
  uint64_t v12 = *(void *)(a1 + v10 + 80);
  uint64_t v13 = *(void *)(a1 + v10 + 88);
  int v127 = *(unsigned __int8 *)(a1 + v10 + 96);
  uint64_t v14 = *(void *)(a1 + v10 + 104);
  uint64_t v128 = *(void *)(a1 + v10 + 112);
  uint64_t v15 = *(void *)(a1 + v10 + 24);
  uint64_t v118 = *(void *)(a1 + v10 + 16);
  uint64_t v119 = v14;
  uint64_t v16 = *(void *)(a1 + v10 + 32);
  uint64_t v17 = v11[5];
  uint64_t v117 = v16;
  int v116 = *((unsigned __int8 *)v11 + 64);
  uint64_t v19 = *v11;
  uint64_t v18 = v11[1];
  BOOL v21 = v19 == sub_76C10() && v18 == v20;
  uint64_t v124 = v15;
  int v125 = v8;
  uint64_t v126 = v12;
  if (v21)
  {
    sub_16F10(v12, v13, v127);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v22 = sub_77050();
    sub_16F10(v12, v13, v127);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      uint64_t v23 = sub_14F50(&qword_A4888);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v129, 1, 1, v23);
      goto LABEL_9;
    }
  }
  *(void *)&long long v177 = *(uint64_t *)((char *)v11 + *(int *)(type metadata accessor for Application() + 84));
  swift_bridgeObjectRetain();
  sub_14F50(&qword_A3578);
  sub_14F50(&qword_A48C0);
  sub_1508C(&qword_A48C8, &qword_A3578);
  sub_6AFC4();
  sub_6B08C();
  uint64_t v24 = v129;
  sub_76980();
  uint64_t v25 = sub_14F50(&qword_A4888);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
LABEL_9:
  uint64_t v26 = v11[7];
  uint64_t v27 = v121;
  uint64_t v28 = v115;
  sub_6A894(v121, v115, (uint64_t (*)(void))type metadata accessor for DetailView);
  uint64_t v29 = v126;
  uint64_t v122 = v13;
  uint64_t v123 = v17;
  if (!v26)
  {
    sub_6AB9C(v28, (uint64_t (*)(void))type metadata accessor for DetailView);
    goto LABEL_13;
  }
  uint64_t v30 = *(void *)(v28 + *(int *)(v114 + 20) + 48);
  sub_6AB9C(v28, (uint64_t (*)(void))type metadata accessor for DetailView);
  if (!v30)
  {
LABEL_13:
    uint64_t v63 = sub_764E0();
    sub_6796C(v27, (uint64_t)&v177);
    long long v165 = (unint64_t)v63;
    LOBYTE(v166[0]) = 1;
    *(_OWORD *)((char *)v166 + 8) = v177;
    *(_OWORD *)((char *)&v166[1] + 8) = v178;
    BYTE8(v166[2]) = v179;
    *(void *)&long long v167 = *((void *)&v179 + 1);
    BYTE8(v167) = v180[0];
    long long v168 = *(_OWORD *)((char *)v180 + 8);
    LOBYTE(v169) = BYTE8(v180[1]);
    *((void *)&v169 + 1) = v181;
    sub_6AFBC((uint64_t)&v165);
    sub_6AC08((uint64_t)&v165, (uint64_t)&v144);
    sub_14F50(&qword_A4898);
    sub_14F50(&qword_A48A0);
    sub_1508C(&qword_A48A8, &qword_A4898);
    sub_1508C(&qword_A48B0, &qword_A48A0);
    sub_76570();
    uint64_t v62 = v29;
    goto LABEL_14;
  }
  uint64_t v99 = sub_764E0();
  sub_67C18((uint64_t)&v177);
  uint64_t v31 = *((void *)&v177 + 1);
  uint64_t v105 = *((void *)&v177 + 1);
  uint64_t v32 = v177;
  int v33 = v178;
  uint64_t v34 = *((void *)&v178 + 1);
  uint64_t v98 = v179;
  char v35 = BYTE8(v179);
  int v94 = BYTE8(v179);
  uint64_t v36 = *((void *)&v180[0] + 1);
  int v37 = LOBYTE(v180[1]);
  uint64_t v113 = *(void *)&v180[0];
  uint64_t v114 = *((void *)&v180[1] + 1);
  uint64_t v97 = sub_764E0();
  sub_67DC8((uint64_t)&v177);
  uint64_t v101 = *((void *)&v177 + 1);
  uint64_t v38 = v177;
  uint64_t v102 = v177;
  int v100 = v178;
  uint64_t v96 = v179;
  uint64_t v111 = *(void *)&v180[0];
  uint64_t v109 = *((void *)&v178 + 1);
  uint64_t v110 = *((void *)&v180[0] + 1);
  uint64_t v115 = *((void *)&v180[1] + 1);
  LOBYTE(v130) = 1;
  int v39 = v33;
  char v164 = v33;
  char v163 = v35;
  char v162 = v37;
  int v112 = v37;
  char v161 = 1;
  char v160 = v178;
  char v159 = BYTE8(v179);
  char v158 = v180[1];
  int v40 = LOBYTE(v180[1]);
  int v95 = BYTE8(v179);
  uint64_t v103 = v32;
  uint64_t v41 = v31;
  LOBYTE(v31) = v39;
  int v104 = v39;
  sub_16E5C(v32, v41, v39);
  uint64_t v106 = v34;
  swift_bridgeObjectRetain();
  uint64_t v42 = v113;
  uint64_t v107 = v36;
  sub_16E5C(v113, v36, v37);
  swift_bridgeObjectRetain();
  uint64_t v43 = v38;
  uint64_t v44 = v101;
  LOBYTE(v37) = v100;
  sub_16E5C(v43, v101, v100);
  swift_bridgeObjectRetain();
  sub_16E5C(v111, v110, v40);
  swift_bridgeObjectRetain();
  uint64_t v45 = v105;
  sub_16E5C(v32, v105, v31);
  swift_bridgeObjectRetain();
  sub_16E5C(v42, v36, v112);
  swift_bridgeObjectRetain();
  uint64_t v46 = v102;
  uint64_t v47 = v44;
  LOBYTE(v36) = v37;
  sub_16E5C(v102, v44, v37);
  uint64_t v48 = v109;
  swift_bridgeObjectRetain();
  uint64_t v50 = v110;
  uint64_t v49 = v111;
  int v108 = v40;
  sub_16E5C(v111, v110, v40);
  swift_bridgeObjectRetain();
  sub_150D0(v46, v47, v36);
  uint64_t v51 = v48;
  swift_bridgeObjectRelease();
  sub_150D0(v49, v50, v40);
  swift_bridgeObjectRelease();
  uint64_t v52 = v103;
  LOBYTE(v40) = v104;
  sub_150D0(v103, v45, v104);
  uint64_t v53 = v106;
  swift_bridgeObjectRelease();
  uint64_t v54 = v113;
  uint64_t v55 = v107;
  LOBYTE(v47) = v112;
  sub_150D0(v113, v107, v112);
  uint64_t v56 = v114;
  swift_bridgeObjectRelease();
  long long v165 = (unint64_t)v99;
  LOBYTE(v166[0]) = 1;
  *((void *)&v166[0] + 1) = v52;
  *(void *)&v166[1] = v45;
  BYTE8(v166[1]) = v40;
  *(void *)&v166[2] = v53;
  *((void *)&v166[2] + 1) = v98;
  LOBYTE(v167) = v94;
  *((void *)&v167 + 1) = v54;
  *(void *)&long long v168 = v55;
  BYTE8(v168) = v47;
  *(void *)&long long v169 = v56;
  *((void *)&v169 + 1) = v97;
  *(void *)&long long v170 = 0;
  BYTE8(v170) = 1;
  uint64_t v57 = v101;
  uint64_t v58 = v102;
  *(void *)&long long v171 = v102;
  *((void *)&v171 + 1) = v101;
  LOBYTE(v53) = v100;
  LOBYTE(v172) = v100;
  *((void *)&v172 + 1) = v51;
  *(void *)&long long v173 = v96;
  BYTE8(v173) = v95;
  uint64_t v60 = v110;
  uint64_t v59 = v111;
  *(void *)&long long v174 = v111;
  *((void *)&v174 + 1) = v110;
  LOBYTE(v175) = v108;
  *((void *)&v175 + 1) = v115;
  sub_6ABFC((uint64_t)&v165);
  sub_6AC08((uint64_t)&v165, (uint64_t)&v177);
  sub_14F50(&qword_A4898);
  sub_14F50(&qword_A48A0);
  sub_1508C(&qword_A48A8, &qword_A4898);
  sub_1508C(&qword_A48B0, &qword_A48A0);
  sub_76570();
  uint64_t v61 = v58;
  uint64_t v62 = v126;
  sub_150D0(v61, v57, v53);
  swift_bridgeObjectRelease();
  sub_150D0(v59, v60, v108);
  swift_bridgeObjectRelease();
  sub_150D0(v103, v105, v104);
  swift_bridgeObjectRelease();
  sub_150D0(v113, v107, v112);
  swift_bridgeObjectRelease();
  long long v186 = v154;
  long long v187 = v155;
  long long v188 = v156;
  char v189 = v157;
  long long v182 = v150;
  long long v183 = v151;
  long long v184 = v152;
  long long v185 = v153;
  long long v179 = v146;
  v180[0] = v147;
  v180[1] = v148;
  long long v181 = v149;
  long long v177 = v144;
  long long v178 = v145;
LABEL_14:
  BOOL v64 = v116 == 1;
  sub_67F7C((uint64_t)&v165);
  long long v65 = v165;
  uint64_t v66 = *(void *)&v166[0];
  char v67 = BYTE8(v166[0]);
  uint64_t v68 = (uint64_t)v125;
  sub_15144(v129, (uint64_t)v125, &qword_A4880);
  long long v140 = v186;
  long long v141 = v187;
  long long v142 = v188;
  char v143 = v189;
  long long v136 = v182;
  long long v137 = v183;
  long long v138 = v184;
  long long v139 = v185;
  long long v132 = v179;
  long long v133 = v180[0];
  long long v134 = v180[1];
  long long v135 = v181;
  long long v130 = v177;
  long long v131 = v178;
  uint64_t v69 = v120;
  uint64_t v70 = v122;
  *uint64_t v120 = v62;
  v69[1] = v70;
  *((unsigned char *)v69 + 16) = v127;
  uint64_t v71 = v128;
  v69[3] = v119;
  v69[4] = v71;
  uint64_t v72 = v124;
  v69[5] = v118;
  v69[6] = v72;
  uint64_t v73 = v123;
  v69[7] = v117;
  v69[8] = v73;
  *((unsigned char *)v69 + 72) = v64;
  v69[10] = 0;
  v69[11] = 0;
  Swift::Int v74 = (int *)sub_14F50(&qword_A48B8);
  sub_15144(v68, (uint64_t)v69 + v74[12], &qword_A4880);
  uint64_t v75 = v74[16];
  long long v76 = v141;
  long long v154 = v140;
  long long v155 = v141;
  long long v77 = v142;
  long long v156 = v142;
  long long v78 = v136;
  long long v79 = v137;
  long long v150 = v136;
  long long v151 = v137;
  long long v80 = v138;
  long long v81 = v139;
  long long v152 = v138;
  long long v153 = v139;
  long long v82 = v134;
  long long v83 = v135;
  long long v148 = v134;
  long long v149 = v135;
  long long v84 = v132;
  long long v85 = v133;
  long long v146 = v132;
  long long v147 = v133;
  long long v86 = v130;
  long long v87 = v131;
  long long v144 = v130;
  long long v145 = v131;
  unint64_t v88 = (char *)v69 + v75;
  *((_OWORD *)v88 + 10) = v140;
  *((_OWORD *)v88 + 11) = v76;
  *((_OWORD *)v88 + 12) = v77;
  *((_OWORD *)v88 + 6) = v78;
  *((_OWORD *)v88 + 7) = v79;
  *((_OWORD *)v88 + 8) = v80;
  *((_OWORD *)v88 + 9) = v81;
  *((_OWORD *)v88 + 2) = v84;
  *((_OWORD *)v88 + 3) = v85;
  *((_OWORD *)v88 + 4) = v82;
  *((_OWORD *)v88 + 5) = v83;
  char v157 = v143;
  v88[208] = v143;
  *(_OWORD *)unint64_t v88 = v86;
  *((_OWORD *)v88 + 1) = v87;
  uint64_t v89 = (char *)v69 + v74[20];
  *(_OWORD *)uint64_t v89 = v65;
  *((void *)v89 + 2) = v66;
  v89[24] = v67;
  uint64_t v90 = v62;
  unsigned __int8 v91 = v127;
  sub_16F10(v90, v70, v127);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_6ADE8((uint64_t)&v144, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_6AC70);
  sub_6ADC8(v65, *((uint64_t *)&v65 + 1), v66, v67);
  sub_151A8(v129, &qword_A4880);
  sub_6ADD8(v65, *((uint64_t *)&v65 + 1), v66, v67);
  long long v173 = v140;
  long long v174 = v141;
  long long v175 = v142;
  char v176 = v143;
  long long v169 = v136;
  long long v170 = v137;
  long long v171 = v138;
  long long v172 = v139;
  v166[1] = v132;
  v166[2] = v133;
  long long v167 = v134;
  long long v168 = v135;
  long long v165 = v130;
  v166[0] = v131;
  sub_6ADE8((uint64_t)&v165, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_6AE64);
  sub_151A8((uint64_t)v125, &qword_A4880);
  sub_16FDC(v126, v122, v91);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_6794C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  if (!v4)
  {
    uint64_t v3 = 0;
    uint64_t v2 = 0;
  }
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_6796C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for DetailView() + 20);
  NSString v4 = sub_76BE0();
  NSString v5 = sub_76BE0();
  id v6 = STLocalizedString(v4);

  uint64_t v7 = sub_76C10();
  uint64_t v9 = v8;

  sub_15038();
  sub_766D0();
  sub_76570();
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  uint64_t result = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    sub_770B0();
    sub_15038();
    uint64_t v13 = sub_766D0();
    uint64_t v15 = v14;
    char v17 = v16 & 1;
    *(void *)a2 = v7;
    *(void *)(a2 + 8) = v9;
    *(void *)(a2 + 16) = v19;
    *(void *)(a2 + 24) = v20;
    *(unsigned char *)(a2 + 32) = v21;
    *(void *)(a2 + 40) = 0;
    *(unsigned char *)(a2 + 48) = 1;
    *(void *)(a2 + 56) = v13;
    *(void *)(a2 + 64) = v14;
    *(unsigned char *)(a2 + 72) = v16 & 1;
    *(void *)(a2 + 80) = v18;
    sub_6AD8C(v7, v9, v19);
    sub_16E5C(v13, v15, v17);
    swift_bridgeObjectRetain();
    sub_150D0(v13, v15, v17);
    swift_bridgeObjectRelease();
    return sub_6AF80(v7, v9, v19);
  }
  return result;
}

uint64_t sub_67C18@<X0>(uint64_t a1@<X8>)
{
  NSString v2 = sub_76BE0();
  NSString v3 = sub_76BE0();
  id v4 = STLocalizedString(v2);

  sub_76C10();
  sub_15038();
  uint64_t v5 = sub_766D0();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  type metadata accessor for DetailView();
  sub_770B0();
  uint64_t v12 = sub_766D0();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(unsigned char *)(a1 + 64) = v15 & 1;
  *(void *)(a1 + 72) = v17;
  sub_16E5C(v5, v7, v11);
  swift_bridgeObjectRetain();
  sub_16E5C(v12, v14, v16);
  swift_bridgeObjectRetain();
  sub_150D0(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_150D0(v5, v7, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_67DC8@<X0>(uint64_t a1@<X8>)
{
  NSString v2 = sub_76BE0();
  NSString v3 = sub_76BE0();
  id v4 = STLocalizedString(v2);

  sub_76C10();
  sub_15038();
  uint64_t v5 = sub_766D0();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  type metadata accessor for DetailView();
  sub_770B0();
  uint64_t v12 = sub_766D0();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(unsigned char *)(a1 + 64) = v15 & 1;
  *(void *)(a1 + 72) = v17;
  sub_16E5C(v5, v7, v11);
  swift_bridgeObjectRetain();
  sub_16E5C(v12, v14, v16);
  swift_bridgeObjectRetain();
  sub_150D0(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_150D0(v5, v7, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_67F7C@<X0>(uint64_t a1@<X8>)
{
  NSString v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for DetailView() + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  if (sub_76C10() == v5 && v6 == v4)
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = sub_77050();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
LABEL_14:
      sub_6B038();
      uint64_t result = sub_76570();
      *(_OWORD *)a1 = v18;
      *(void *)(a1 + 16) = v19;
      *(unsigned char *)(a1 + 24) = v20;
      return result;
    }
  }
  if (qword_A2C18 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  uint64_t v12 = v10 + v11;
  if (!__OFADD__(v10, v11))
  {
    id v13 = [self mainICloudDriveDomainID];
    if (v13)
    {
      uint64_t v14 = v13;
      sub_23BA0(v13, v12);
    }
    NSString v15 = sub_76BE0();
    NSString v16 = sub_76BE0();
    id v17 = STLocalizedString(v15);

    sub_76C10();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_68174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_764E0();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = sub_14F50(&qword_A4870);
  return sub_681C4(a1, (void *)(a2 + *(int *)(v4 + 44)));
}

uint64_t sub_681C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = type metadata accessor for DetailView();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v25 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = sub_14F50(&qword_A3AC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_14F50(&qword_A2E58);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v25 - v13;
  sub_76270();
  uint64_t v15 = sub_76280();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 0, 1, v15);
  sub_6A894(a1, (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for DetailView);
  unint64_t v16 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v17 = swift_allocObject();
  sub_6AACC((uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (uint64_t (*)(void))type metadata accessor for DetailView);
  uint64_t v27 = a1;
  sub_768C0();
  long long v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v18(v12, v14, v8);
  uint64_t v19 = v26;
  void *v26 = 0;
  *((unsigned char *)v19 + 8) = 1;
  char v20 = (char *)v19;
  uint64_t v21 = sub_14F50(&qword_A4878);
  v18(&v20[*(int *)(v21 + 48)], v12, v8);
  char v22 = &v20[*(int *)(v21 + 64)];
  *(void *)char v22 = 0;
  v22[8] = 1;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  v23(v14, v8);
  return ((uint64_t (*)(char *, uint64_t))v23)(v12, v8);
}

void sub_684F4(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    NSString v2 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for DetailView() + 20));
    uint64_t v3 = *v2;
    unint64_t v4 = v2[1];
    id v5 = v1;
    sub_25058(v3, v4);
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_164D0();
    sub_76380();
    __break(1u);
  }
}

uint64_t sub_6859C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for DetailView();
  sub_200DC();
  sub_15038();
  uint64_t result = sub_766D0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

double sub_68610@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DetailView() + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  if (sub_76C10() == v5 && v6 == v4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  char v8 = sub_77050();
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_14:
    type metadata accessor for StorageShared();
    sub_164D0();
    uint64_t v13 = (void *)sub_76390();
    sub_6A7E4();
    sub_6A838();
    id v14 = v13;
    sub_76570();
    sub_14F50(&qword_A4840);
    sub_6A768();
    sub_76570();

    goto LABEL_15;
  }
  if (sub_76C10() != v5 || v9 != v4)
  {
    char v11 = sub_77050();
    uint64_t v12 = swift_bridgeObjectRelease();
    if ((v11 & 1) != 0 && _IsInternalInstall(v12)) {
      goto LABEL_12;
    }
LABEL_17:
    sub_14F50(&qword_A4840);
    sub_6A768();
    sub_76570();
    goto LABEL_15;
  }
  uint64_t v16 = swift_bridgeObjectRelease();
  if (!_IsInternalInstall(v16)) {
    goto LABEL_17;
  }
LABEL_12:
  type metadata accessor for Application();
  swift_bridgeObjectRetain();
  sub_76870();
  sub_6A7E4();
  sub_6A838();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_76570();
  sub_14F50(&qword_A4840);
  sub_6A768();
  sub_76570();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_15:
  double result = *(double *)&v17;
  *(_OWORD *)a2 = v17;
  *(_OWORD *)(a2 + 16) = v18;
  *(unsigned char *)(a2 + 32) = v19;
  *(unsigned char *)(a2 + 33) = v20;
  return result;
}

uint64_t sub_6891C()
{
  uint64_t v1 = sub_14F50(&qword_A47C8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = v0;
  sub_14F50(&qword_A47D0);
  sub_1508C(&qword_A47D8, &qword_A47D0);
  sub_76680();
  sub_1508C(&qword_A47E0, &qword_A47C8);
  sub_766F0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_68A90(uint64_t a1)
{
  sub_14F50(&qword_A48F8);
  sub_76880();
  if (v6) {
    BOOL v2 = 0;
  }
  else {
    BOOL v2 = v7 == 0xE000000000000000;
  }
  if (v2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  char v3 = sub_77050();
  swift_bridgeObjectRelease();
  if (v3)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    return a1;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_68F94(a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_68B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v34 = a1;
  int v40 = a5;
  uint64_t v39 = sub_14F50(&qword_A48E8);
  uint64_t v37 = *(void *)(v39 - 8);
  uint64_t v8 = __chkstk_darwin(v39);
  uint64_t v38 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v41 = (char *)&v31 - v10;
  uint64_t v36 = sub_14F50(&qword_A48F0);
  uint64_t v33 = *(void *)(v36 - 8);
  uint64_t v11 = v33;
  uint64_t v12 = __chkstk_darwin(v36);
  char v35 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - v14;
  sub_764F0();
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  sub_14F50(&qword_A48F8);
  sub_768A0();
  uint64_t v32 = v15;
  sub_76A30();
  uint64_t v45 = sub_68A90(v34);
  sub_14F50(&qword_A3578);
  sub_1508C(&qword_A48C8, &qword_A3578);
  sub_6B038();
  sub_6B08C();
  uint64_t v16 = v41;
  sub_76980();
  long long v17 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  long long v18 = v35;
  char v19 = v15;
  uint64_t v20 = v36;
  v17(v35, v19, v36);
  uint64_t v21 = v37;
  char v22 = v38;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  uint64_t v24 = v16;
  uint64_t v25 = v39;
  v23(v38, v24, v39);
  uint64_t v26 = v40;
  v17(v40, v18, v20);
  uint64_t v27 = &v26[*(int *)(sub_14F50(&qword_A4900) + 48)];
  v23(v27, v22, v25);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v21 + 8);
  v28(v41, v25);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v33 + 8);
  v29(v32, v20);
  v28(v22, v25);
  return ((uint64_t (*)(char *, uint64_t))v29)(v18, v20);
}

uint64_t sub_68F70@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_68F88@<X0>(char *a1@<X8>)
{
  return sub_68B94(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_68F94(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v2 = 0;
  uint64_t v19 = -(uint64_t)v1;
  uint64_t v3 = _swiftEmptyArrayStorage;
  uint64_t v4 = result + 64;
  uint64_t v16 = result + 64;
  unint64_t v17 = *(void *)(result + 16);
  do
  {
    long long v18 = v3;
    if (v2 <= v1) {
      unint64_t v5 = v1;
    }
    else {
      unint64_t v5 = v2;
    }
    uint64_t v20 = -(uint64_t)v5;
    for (uint64_t i = (uint64_t *)(v4 + 40 * v2++); ; i += 5)
    {
      if (v20 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = *(i - 4);
      uint64_t v8 = *(i - 3);
      uint64_t v9 = *(i - 2);
      uint64_t v10 = *(i - 1);
      uint64_t v11 = *i;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_14F50(&qword_A48F8);
      sub_76880();
      sub_15038();
      char v12 = sub_76E50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12) {
        break;
      }
      swift_bridgeObjectRelease();
      double result = swift_bridgeObjectRelease();
      ++v2;
      if (v19 + v2 == 1) {
        return (uint64_t)v18;
      }
    }
    uint64_t v3 = v18;
    double result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      double result = sub_36450(0, v18[2] + 1, 1);
      uint64_t v3 = v18;
    }
    unint64_t v14 = v3[2];
    unint64_t v13 = v3[3];
    if (v14 >= v13 >> 1)
    {
      double result = sub_36450(v13 > 1, v14 + 1, 1);
      uint64_t v3 = v18;
    }
    v3[2] = v14 + 1;
    uint64_t v15 = &v3[5 * v14];
    v15[4] = v7;
    v15[5] = v8;
    v15[6] = v9;
    v15[7] = v10;
    unsigned char v15[8] = v11;
    uint64_t v4 = v16;
    unint64_t v1 = v17;
  }
  while (v19 + v2);
  return (uint64_t)v3;
}

uint64_t sub_691A0(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = type metadata accessor for Application();
  uint64_t v4 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v6 = (uint64_t *)((char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for DetailView();
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_14F50(&qword_A3530);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  unint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v29 = (uint64_t)&v28 - v14;
  if (qword_A2C28 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_76240();
  swift_release();
  swift_release();
  uint64_t v15 = *(void *)(v32 + 16);
  if (v15)
  {
    uint64_t v28 = v7;
    uint64_t v16 = v32 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v17 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_6A894(v16, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Application);
      BOOL v18 = *v6 == a1 && v6[1] == a2;
      if (v18 || (sub_77050() & 1) != 0) {
        break;
      }
      sub_6AB9C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Application);
      v16 += v17;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = 1;
        uint64_t v7 = v28;
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = v29;
    sub_6AACC((uint64_t)v6, v29, (uint64_t (*)(void))type metadata accessor for Application);
    uint64_t v19 = 0;
    uint64_t v7 = v28;
  }
  else
  {
    uint64_t v19 = 1;
LABEL_14:
    uint64_t v20 = v29;
  }
  uint64_t v21 = v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v20, v19, 1, v30);
  swift_bridgeObjectRelease();
  sub_15144(v20, (uint64_t)v13, &qword_A3530);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v21);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_164D0();
    uint64_t *v9 = sub_76390();
    v9[1] = v23;
    sub_6AACC((uint64_t)v13, (uint64_t)v9 + *(int *)(v7 + 20), (uint64_t (*)(void))type metadata accessor for Application);
    uint64_t v24 = (char *)v9 + *(int *)(v7 + 24);
    char v31 = 0;
    sub_76870();
    uint64_t v25 = v33;
    char *v24 = v32;
    *((void *)v24 + 1) = v25;
    id v26 = objc_allocWithZone((Class)sub_14F50(&qword_A4728));
    uint64_t v27 = sub_76550();
    sub_151A8(v20, &qword_A3530);
    return v27;
  }
  return result;
}

uint64_t type metadata accessor for DetailView()
{
  uint64_t result = qword_A4788;
  if (!qword_A4788) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_695E8(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v25 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    *((void *)a1 + 1) = a2[1];
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = &a1[v5];
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = *(uint64_t *)((char *)a2 + v5 + 8);
    *(void *)uint64_t v6 = *(char **)((char *)a2 + v5);
    *((void *)v6 + 1) = v8;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v5 + 24);
    *((void *)v6 + 2) = *(char **)((char *)a2 + v5 + 16);
    *((void *)v6 + 3) = v9;
    uint64_t v10 = *(uint64_t *)((char *)a2 + v5 + 40);
    *((void *)v6 + 4) = *(char **)((char *)a2 + v5 + 32);
    *((void *)v6 + 5) = v10;
    *((_OWORD *)v6 + 3) = *(_OWORD *)((char *)a2 + v5 + 48);
    v6[64] = *((unsigned char *)a2 + v5 + 64);
    uint64_t v11 = *(char **)((char *)a2 + v5 + 72);
    uint64_t v12 = *(uint64_t *)((char *)a2 + v5 + 80);
    *((void *)v6 + 9) = v11;
    uint64_t v13 = *(uint64_t *)((char *)a2 + v5 + 88);
    unsigned __int8 v14 = *((unsigned char *)a2 + v5 + 96);
    uint64_t v15 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = v11;
    sub_16F10(v12, v13, v14);
    *((void *)v6 + 10) = v12;
    *((void *)v6 + 11) = v13;
    v6[96] = v14;
    uint64_t v17 = *(void *)(v7 + 112);
    *((void *)v6 + 13) = *(void *)(v7 + 104);
    *((void *)v6 + 14) = v17;
    *((void *)v6 + 15) = *(void *)(v7 + 120);
    *((_DWORD *)v6 + 32) = *(_DWORD *)(v7 + 128);
    *((_WORD *)v6 + 66) = *(_WORD *)(v7 + 132);
    BOOL v18 = (int *)type metadata accessor for Application();
    uint64_t v19 = v18[18];
    __dst = &v6[v19];
    uint64_t v20 = (const void *)(v7 + v19);
    uint64_t v21 = sub_76070();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v20, 1, v21))
    {
      uint64_t v24 = sub_14F50(&qword_A3000);
      memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v22 + 16))(__dst, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    uint64_t v26 = v18[19];
    uint64_t v27 = &v6[v26];
    uint64_t v28 = (void *)(v7 + v26);
    uint64_t v29 = v28[1];
    *(void *)uint64_t v27 = *v28;
    *((void *)v27 + 1) = v29;
    *(void *)&v6[v18[20]] = *(void *)(v7 + v18[20]);
    *(void *)&v6[v18[21]] = *(void *)(v7 + v18[21]);
    uint64_t v30 = *(int *)(a3 + 24);
    uint64_t v25 = a1;
    char v31 = &a1[v30];
    uint64_t v32 = (char *)a2 + v30;
    *char v31 = *v32;
    *((void *)v31 + 1) = *((void *)v32 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v25;
}

uint64_t sub_69888(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_16FDC(*((void *)v4 + 10), *((void *)v4 + 11), v4[96]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = &v4[*(int *)(type metadata accessor for Application() + 72)];
  uint64_t v6 = sub_76070();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_699D0(void *a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = *(void *)(a2 + v5 + 8);
  *(void *)uint64_t v6 = *(void *)(a2 + v5);
  *((void *)v6 + 1) = v8;
  uint64_t v9 = *(void *)(a2 + v5 + 24);
  *((void *)v6 + 2) = *(void *)(a2 + v5 + 16);
  *((void *)v6 + 3) = v9;
  uint64_t v10 = *(void *)(a2 + v5 + 40);
  *((void *)v6 + 4) = *(void *)(a2 + v5 + 32);
  *((void *)v6 + 5) = v10;
  *((_OWORD *)v6 + 3) = *(_OWORD *)(a2 + v5 + 48);
  v6[64] = *(unsigned char *)(a2 + v5 + 64);
  uint64_t v11 = *(void **)(a2 + v5 + 72);
  uint64_t v12 = *(void *)(a2 + v5 + 80);
  *((void *)v6 + 9) = v11;
  uint64_t v13 = *(void *)(a2 + v5 + 88);
  unsigned __int8 v14 = *(unsigned char *)(a2 + v5 + 96);
  id v15 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = v11;
  sub_16F10(v12, v13, v14);
  *((void *)v6 + 10) = v12;
  *((void *)v6 + 11) = v13;
  v6[96] = v14;
  uint64_t v17 = *(void *)(v7 + 112);
  *((void *)v6 + 13) = *(void *)(v7 + 104);
  *((void *)v6 + 14) = v17;
  *((void *)v6 + 15) = *(void *)(v7 + 120);
  *((_DWORD *)v6 + 32) = *(_DWORD *)(v7 + 128);
  *((_WORD *)v6 + 66) = *(_WORD *)(v7 + 132);
  BOOL v18 = (int *)type metadata accessor for Application();
  uint64_t v19 = v18[18];
  __dst = &v6[v19];
  uint64_t v20 = (const void *)(v7 + v19);
  uint64_t v21 = sub_76070();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    uint64_t v24 = sub_14F50(&qword_A3000);
    memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v22 + 16))(__dst, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  uint64_t v25 = v18[19];
  uint64_t v26 = &v6[v25];
  uint64_t v27 = (void *)(v7 + v25);
  uint64_t v28 = v27[1];
  *(void *)uint64_t v26 = *v27;
  *((void *)v26 + 1) = v28;
  *(void *)&v6[v18[20]] = *(void *)(v7 + v18[20]);
  *(void *)&v6[v18[21]] = *(void *)(v7 + v18[21]);
  uint64_t v29 = *(int *)(a3 + 24);
  uint64_t v30 = (char *)a1 + v29;
  char v31 = (char *)(a2 + v29);
  *uint64_t v30 = *v31;
  *((void *)v30 + 1) = *((void *)v31 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_69C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v40 = a1;
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)(a2 + v9);
  *(void *)(v10 + 8) = *(void *)(a2 + v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + 16) = *(void *)(v11 + 16);
  *(void *)(v10 + 24) = *(void *)(v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  *(void *)(v10 + 40) = *(void *)(v11 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + 48) = *(void *)(v11 + 48);
  *(void *)(v10 + 56) = *(void *)(v11 + 56);
  *(unsigned char *)(v10 + 64) = *(unsigned char *)(v11 + 64);
  uint64_t v12 = *(void **)(v10 + 72);
  uint64_t v13 = *(void **)(v11 + 72);
  *(void *)(v10 + 72) = v13;
  id v14 = v13;

  uint64_t v15 = *(void *)(v11 + 80);
  uint64_t v16 = *(void *)(v11 + 88);
  unsigned __int8 v17 = *(unsigned char *)(v11 + 96);
  sub_16F10(v15, v16, v17);
  uint64_t v18 = *(void *)(v10 + 80);
  uint64_t v19 = *(void *)(v10 + 88);
  *(void *)(v10 + 80) = v15;
  *(void *)(v10 + 88) = v16;
  unsigned __int8 v20 = *(unsigned char *)(v10 + 96);
  *(unsigned char *)(v10 + 96) = v17;
  sub_16FDC(v18, v19, v20);
  *(void *)(v10 + 104) = *(void *)(v11 + 104);
  *(void *)(v10 + 112) = *(void *)(v11 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + 120) = *(void *)(v11 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + 128) = *(unsigned char *)(v11 + 128);
  *(unsigned char *)(v10 + 129) = *(unsigned char *)(v11 + 129);
  *(unsigned char *)(v10 + 130) = *(unsigned char *)(v11 + 130);
  *(unsigned char *)(v10 + 131) = *(unsigned char *)(v11 + 131);
  *(unsigned char *)(v10 + 132) = *(unsigned char *)(v11 + 132);
  *(unsigned char *)(v10 + 133) = *(unsigned char *)(v11 + 133);
  uint64_t v21 = (int *)type metadata accessor for Application();
  uint64_t v22 = v21[18];
  uint64_t v23 = (void *)(v10 + v22);
  uint64_t v24 = (void *)(v11 + v22);
  uint64_t v25 = sub_76070();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    uint64_t v30 = sub_14F50(&qword_A3000);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  uint64_t v31 = v21[19];
  uint64_t v32 = (void *)(v10 + v31);
  uint64_t v33 = (void *)(v11 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + v21[20]) = *(void *)(v11 + v21[20]);
  *(void *)(v10 + v21[21]) = *(void *)(v11 + v21[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = *(int *)(v38 + 24);
  uint64_t v35 = v40 + v34;
  uint64_t v36 = v39 + v34;
  *(unsigned char *)uint64_t v35 = *(unsigned char *)v36;
  *(void *)(v35 + 8) = *(void *)(v36 + 8);
  swift_retain();
  swift_release();
  return v40;
}

_OWORD *sub_69F90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  long long v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  *((_OWORD *)v7 + 1) = v9;
  long long v10 = *(_OWORD *)((char *)a2 + v6 + 48);
  *((_OWORD *)v7 + 2) = *(_OWORD *)((char *)a2 + v6 + 32);
  *((_OWORD *)v7 + 3) = v10;
  v7[64] = *((unsigned char *)a2 + v6 + 64);
  *((void *)v7 + 9) = *(void *)((char *)a2 + v6 + 72);
  long long v11 = *(_OWORD *)((char *)a2 + v6 + 96);
  *((_OWORD *)v7 + 5) = *(_OWORD *)((char *)a2 + v6 + 80);
  *((_OWORD *)v7 + 6) = v11;
  uint64_t v12 = *(void *)((char *)a2 + v6 + 120);
  *((void *)v7 + 14) = *(void *)((char *)a2 + v6 + 112);
  *((void *)v7 + 15) = v12;
  *((_DWORD *)v7 + 32) = *(_DWORD *)((char *)a2 + v6 + 128);
  *((_WORD *)v7 + 66) = *(_WORD *)((char *)a2 + v6 + 132);
  uint64_t v13 = (int *)type metadata accessor for Application();
  uint64_t v14 = v13[18];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = sub_76070();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_14F50(&qword_A3000);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *(_OWORD *)&v7[v13[19]] = *(_OWORD *)&v8[v13[19]];
  *(void *)&v7[v13[20]] = *(void *)&v8[v13[20]];
  *(void *)&v7[v13[21]] = *(void *)&v8[v13[21]];
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_6A144(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v38 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v39 = a1;
  uint64_t v8 = a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)((char *)a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)v9 + 3);
  *(void *)(v8 + 16) = *((void *)v9 + 2);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v9 + 5);
  *(void *)(v8 + 32) = *((void *)v9 + 4);
  *(void *)(v8 + 40) = v12;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 48) = *((_OWORD *)v9 + 3);
  *(unsigned char *)(v8 + 64) = v9[64];
  uint64_t v13 = *(void **)(v8 + 72);
  *(void *)(v8 + 72) = *((void *)v9 + 9);

  char v14 = v9[96];
  uint64_t v15 = *(void *)(v8 + 80);
  uint64_t v16 = *(void *)(v8 + 88);
  *(_OWORD *)(v8 + 80) = *((_OWORD *)v9 + 5);
  unsigned __int8 v17 = *(unsigned char *)(v8 + 96);
  *(unsigned char *)(v8 + 96) = v14;
  sub_16FDC(v15, v16, v17);
  uint64_t v18 = *((void *)v9 + 14);
  *(void *)(v8 + 104) = *((void *)v9 + 13);
  *(void *)(v8 + 112) = v18;
  swift_bridgeObjectRelease();
  *(void *)(v8 + 120) = *((void *)v9 + 15);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 128) = v9[128];
  *(unsigned char *)(v8 + 129) = v9[129];
  *(unsigned char *)(v8 + 130) = v9[130];
  *(unsigned char *)(v8 + 131) = v9[131];
  *(unsigned char *)(v8 + 132) = v9[132];
  *(unsigned char *)(v8 + 133) = v9[133];
  uint64_t v19 = (int *)type metadata accessor for Application();
  uint64_t v20 = v19[18];
  uint64_t v21 = (void *)(v8 + v20);
  uint64_t v22 = &v9[v20];
  uint64_t v23 = sub_76070();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    uint64_t v28 = sub_14F50(&qword_A3000);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_7:
  uint64_t v29 = v19[19];
  uint64_t v30 = (void *)(v8 + v29);
  uint64_t v31 = &v9[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *uint64_t v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  *(void *)(v8 + v19[20]) = *(void *)&v9[v19[20]];
  *(void *)(v8 + v19[21]) = *(void *)&v9[v19[21]];
  swift_bridgeObjectRelease();
  uint64_t v34 = *(int *)(a3 + 24);
  uint64_t v35 = v39 + v34;
  uint64_t v36 = (char *)v38 + v34;
  *(unsigned char *)uint64_t v35 = *v36;
  *(void *)(v35 + 8) = *((void *)v36 + 1);
  swift_release();
  return v39;
}

uint64_t sub_6A428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_6A43C);
}

uint64_t sub_6A43C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for Application();
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_6A4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6A50C);
}

void *sub_6A50C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for Application();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_6A5B4()
{
  uint64_t result = type metadata accessor for Application();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_6A64C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_6A668@<X0>(char *a1@<X8>)
{
  return sub_66738(*(void *)(v1 + 16), a1);
}

uint64_t sub_6A670@<X0>(uint64_t *a1@<X8>)
{
  return sub_66D74(*(void *)(v1 + 16), a1);
}

unint64_t sub_6A678()
{
  unint64_t result = qword_A4818;
  if (!qword_A4818)
  {
    sub_14F94(&qword_A4808);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4818);
  }
  return result;
}

double sub_6A6E4@<D0>(uint64_t a1@<X8>)
{
  return sub_68610(*(void *)(v1 + 16), a1);
}

unint64_t sub_6A6EC()
{
  unint64_t result = qword_A4830;
  if (!qword_A4830)
  {
    sub_14F94(&qword_A4828);
    sub_6A768();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4830);
  }
  return result;
}

unint64_t sub_6A768()
{
  unint64_t result = qword_A4838;
  if (!qword_A4838)
  {
    sub_14F94(&qword_A4840);
    sub_6A7E4();
    sub_6A838();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4838);
  }
  return result;
}

unint64_t sub_6A7E4()
{
  unint64_t result = qword_A4848;
  if (!qword_A4848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4848);
  }
  return result;
}

unint64_t sub_6A838()
{
  unint64_t result = qword_A4850;
  if (!qword_A4850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4850);
  }
  return result;
}

uint64_t sub_6A88C@<X0>(uint64_t a1@<X8>)
{
  return sub_68174(*(void *)(v1 + 16), a1);
}

uint64_t sub_6A894(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_6A8FC()
{
  uint64_t v1 = type metadata accessor for DetailView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v9 = *(void *)(*(void *)(v1 - 8) + 64);

  uint64_t v4 = v0 + v3 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_16FDC(*(void *)(v4 + 80), *(void *)(v4 + 88), *(unsigned char *)(v4 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for Application() + 72);
  uint64_t v6 = sub_76070();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v3 + v9, v2 | 7);
}

uint64_t sub_6AACC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_6AB34()
{
  uint64_t v1 = *(void *)(type metadata accessor for DetailView() - 8);
  uint64_t v2 = (void **)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  sub_684F4(v2);
}

uint64_t sub_6AB94@<X0>(uint64_t a1@<X8>)
{
  return sub_6859C(a1);
}

uint64_t sub_6AB9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_6ABFC(uint64_t result)
{
  *(unsigned char *)(result + 208) = 1;
  return result;
}

uint64_t sub_6AC08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A4890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_6AC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,char a27)
{
  if (a27)
  {
    sub_16E5C(a4, a5, a6 & 1);
    swift_bridgeObjectRetain();
    sub_16E5C(a10, a11, a12 & 1);
    swift_bridgeObjectRetain();
    sub_16E5C(a17, a18, a19 & 1);
    swift_bridgeObjectRetain();
    char v29 = a25 & 1;
  }
  else
  {
    sub_6AD8C(a4, a5, a6);
    a23 = a11;
    a24 = a12;
    char v29 = a13 & 1;
  }
  sub_16E5C(a23, a24, v29);

  return swift_bridgeObjectRetain();
}

uint64_t sub_6AD8C(uint64_t a1, uint64_t a2, char a3)
{
  sub_16E5C(a1, a2, a3 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_6ADC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_6ADD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_6ADE8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4);
  return a1;
}

uint64_t sub_6AE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,char a27)
{
  if (a27)
  {
    sub_150D0(a4, a5, a6 & 1);
    swift_bridgeObjectRelease();
    sub_150D0(a10, a11, a12 & 1);
    swift_bridgeObjectRelease();
    sub_150D0(a17, a18, a19 & 1);
    swift_bridgeObjectRelease();
    char v29 = a25 & 1;
  }
  else
  {
    sub_6AF80(a4, a5, a6);
    a23 = a11;
    a24 = a12;
    char v29 = a13 & 1;
  }
  sub_150D0(a23, a24, v29);

  return swift_bridgeObjectRelease();
}

uint64_t sub_6AF80(uint64_t a1, uint64_t a2, char a3)
{
  sub_150D0(a1, a2, a3 & 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_6AFBC(uint64_t result)
{
  *(unsigned char *)(result + 208) = 0;
  return result;
}

unint64_t sub_6AFC4()
{
  unint64_t result = qword_A48D0;
  if (!qword_A48D0)
  {
    sub_14F94(&qword_A48C0);
    sub_6B038();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A48D0);
  }
  return result;
}

unint64_t sub_6B038()
{
  unint64_t result = qword_A48D8;
  if (!qword_A48D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A48D8);
  }
  return result;
}

unint64_t sub_6B08C()
{
  unint64_t result = qword_A48E0;
  if (!qword_A48E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A48E0);
  }
  return result;
}

uint64_t destroy for SystemDataDetailView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *initializeWithCopy for SystemDataDetailView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SystemDataDetailView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SystemDataDetailView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemDataDetailView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemDataDetailView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemDataDetailView()
{
  return &type metadata for SystemDataDetailView;
}

uint64_t sub_6B2E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_6B364()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_6B384()
{
  unint64_t result = qword_A4908;
  if (!qword_A4908)
  {
    sub_14F94(&qword_A4910);
    sub_1508C(&qword_A4918, &qword_A4920);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4908);
  }
  return result;
}

uint64_t sub_6B41C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    uint64_t v5 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = (void *)a2[2];
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v6;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v9 = *(int *)(a3 + 36);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (unsigned __int8 *)a2 + v9;
    *(void *)(a1 + 64) = a2[8];
    uint64_t v12 = type metadata accessor for Application();
    uint64_t v39 = *(void *)(v12 - 8);
    uint64_t v40 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v39 + 48);
    swift_retain();
    id v13 = v7;
    swift_retain();
    swift_retain();
    swift_retain();
    if (v40(v11, 1, v12))
    {
      uint64_t v14 = sub_14F50(&qword_A3530);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v15 = *((void *)v11 + 1);
      void *v10 = *(void *)v11;
      v10[1] = v15;
      uint64_t v16 = *((void *)v11 + 3);
      uint64_t v10[2] = *((void *)v11 + 2);
      v10[3] = v16;
      unsigned __int8 v17 = (int *)v12;
      uint64_t v18 = *((void *)v11 + 5);
      v10[4] = *((void *)v11 + 4);
      v10[5] = v18;
      *((_OWORD *)v10 + 3) = *((_OWORD *)v11 + 3);
      *((unsigned char *)v10 + 64) = v11[64];
      uint64_t v19 = (void *)*((void *)v11 + 9);
      uint64_t v20 = *((void *)v11 + 10);
      _OWORD v10[9] = v19;
      uint64_t v21 = *((void *)v11 + 11);
      unsigned __int8 v22 = v11[96];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v23 = v19;
      sub_16F10(v20, v21, v22);
      v10[10] = v20;
      v10[11] = v21;
      *((unsigned char *)v10 + 96) = v22;
      uint64_t v24 = *((void *)v11 + 14);
      v10[13] = *((void *)v11 + 13);
      v10[14] = v24;
      _OWORD v10[15] = *((void *)v11 + 15);
      *((_DWORD *)v10 + 32) = *((_DWORD *)v11 + 32);
      *((_WORD *)v10 + 66) = *((_WORD *)v11 + 66);
      uint64_t v41 = v17;
      uint64_t v25 = v17[18];
      __dst = (char *)v10 + v25;
      int v26 = &v11[v25];
      uint64_t v27 = sub_76070();
      uint64_t v28 = *(void *)(v27 - 8);
      char v29 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29(v26, 1, v27))
      {
        uint64_t v30 = sub_14F50(&qword_A3000);
        memcpy(__dst, v26, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v28 + 16))(__dst, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
      }
      uint64_t v31 = v41[19];
      uint64_t v32 = (void *)((char *)v10 + v31);
      uint64_t v33 = &v11[v31];
      uint64_t v34 = *((void *)v33 + 1);
      *uint64_t v32 = *(void *)v33;
      v32[1] = v34;
      *(void *)((char *)v10 + v41[20]) = *(void *)&v11[v41[20]];
      *(void *)((char *)v10 + v41[21]) = *(void *)&v11[v41[21]];
      uint64_t v35 = *(void (**)(void *, void, uint64_t, int *))(v39 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35(v10, 0, 1, v41);
    }
    uint64_t v36 = sub_14F50(&qword_A4928);
    *(void *)((char *)v10 + *(int *)(v36 + 28)) = *(void *)&v11[*(int *)(v36 + 28)];
  }
  swift_retain();
  return v5;
}

uint64_t sub_6B7A0(uint64_t a1, uint64_t a2)
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for Application();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_16FDC(*(void *)(v4 + 80), *(void *)(v4 + 88), *(unsigned char *)(v4 + 96));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 72);
    uint64_t v7 = sub_76070();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_14F50(&qword_A4928);

  return swift_release();
}

uint64_t sub_6B940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (unsigned __int8 *)(a2 + v7);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v10 = type metadata accessor for Application();
  uint64_t v37 = *(void *)(v10 - 8);
  uint64_t v38 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v37 + 48);
  swift_retain();
  id v11 = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v38(v9, 1, v10))
  {
    uint64_t v12 = sub_14F50(&qword_A3530);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = *((void *)v9 + 1);
    *uint64_t v8 = *(void *)v9;
    v8[1] = v13;
    uint64_t v14 = *((void *)v9 + 3);
    void v8[2] = *((void *)v9 + 2);
    v8[3] = v14;
    uint64_t v15 = (int *)v10;
    uint64_t v16 = *((void *)v9 + 5);
    v8[4] = *((void *)v9 + 4);
    v8[5] = v16;
    *((_OWORD *)v8 + 3) = *((_OWORD *)v9 + 3);
    *((unsigned char *)v8 + 64) = v9[64];
    unsigned __int8 v17 = (void *)*((void *)v9 + 9);
    uint64_t v18 = *((void *)v9 + 10);
    v8[9] = v17;
    uint64_t v19 = *((void *)v9 + 11);
    unsigned __int8 v20 = v9[96];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v21 = v17;
    sub_16F10(v18, v19, v20);
    v8[10] = v18;
    v8[11] = v19;
    *((unsigned char *)v8 + 96) = v20;
    uint64_t v22 = *((void *)v9 + 14);
    v8[13] = *((void *)v9 + 13);
    v8[14] = v22;
    v8[15] = *((void *)v9 + 15);
    *((_DWORD *)v8 + 32) = *((_DWORD *)v9 + 32);
    *((_WORD *)v8 + 66) = *((_WORD *)v9 + 66);
    uint64_t v39 = v15;
    uint64_t v23 = v15[18];
    __dst = (char *)v8 + v23;
    uint64_t v24 = &v9[v23];
    uint64_t v25 = sub_76070();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      uint64_t v28 = sub_14F50(&qword_A3000);
      memcpy(__dst, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v26 + 16))(__dst, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    uint64_t v29 = v39[19];
    uint64_t v30 = (void *)((char *)v8 + v29);
    uint64_t v31 = &v9[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *uint64_t v30 = *(void *)v31;
    v30[1] = v32;
    *(void *)((char *)v8 + v39[20]) = *(void *)&v9[v39[20]];
    *(void *)((char *)v8 + v39[21]) = *(void *)&v9[v39[21]];
    uint64_t v33 = *(void (**)(void *, void, uint64_t, int *))(v37 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33(v8, 0, 1, v39);
  }
  uint64_t v34 = sub_14F50(&qword_A4928);
  *(void *)((char *)v8 + *(int *)(v34 + 28)) = *(void *)&v9[*(int *)(v34 + 28)];
  swift_retain();
  return a1;
}

uint64_t sub_6BC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v7 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v7;
  id v8 = v7;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = (int *)type metadata accessor for Application();
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_70350(v10, (uint64_t (*)(void))type metadata accessor for Application);
      goto LABEL_7;
    }
    *(void *)uint64_t v10 = *(void *)v11;
    *(void *)(v10 + 8) = *(void *)(v11 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v10 + 16) = *(void *)(v11 + 16);
    *(void *)(v10 + 24) = *(void *)(v11 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v10 + 32) = *(void *)(v11 + 32);
    *(void *)(v10 + 40) = *(void *)(v11 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v10 + 48) = *(void *)(v11 + 48);
    *(void *)(v10 + 56) = *(void *)(v11 + 56);
    *(unsigned char *)(v10 + 64) = *(unsigned char *)(v11 + 64);
    uint64_t v28 = *(void **)(v10 + 72);
    uint64_t v29 = *(void **)(v11 + 72);
    *(void *)(v10 + 72) = v29;
    id v30 = v29;

    uint64_t v31 = *(void *)(v11 + 80);
    uint64_t v32 = *(void *)(v11 + 88);
    unsigned __int8 v33 = *(unsigned char *)(v11 + 96);
    sub_16F10(v31, v32, v33);
    uint64_t v34 = *(void *)(v10 + 80);
    uint64_t v35 = *(void *)(v10 + 88);
    *(void *)(v10 + 80) = v31;
    *(void *)(v10 + 88) = v32;
    unsigned __int8 v36 = *(unsigned char *)(v10 + 96);
    *(unsigned char *)(v10 + 96) = v33;
    sub_16FDC(v34, v35, v36);
    *(void *)(v10 + 104) = *(void *)(v11 + 104);
    *(void *)(v10 + 112) = *(void *)(v11 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v10 + 120) = *(void *)(v11 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v10 + 128) = *(unsigned char *)(v11 + 128);
    *(unsigned char *)(v10 + 129) = *(unsigned char *)(v11 + 129);
    *(unsigned char *)(v10 + 130) = *(unsigned char *)(v11 + 130);
    *(unsigned char *)(v10 + 131) = *(unsigned char *)(v11 + 131);
    *(unsigned char *)(v10 + 132) = *(unsigned char *)(v11 + 132);
    *(unsigned char *)(v10 + 133) = *(unsigned char *)(v11 + 133);
    uint64_t v37 = v12[18];
    uint64_t v38 = (void *)(v10 + v37);
    uint64_t v39 = (void *)(v11 + v37);
    uint64_t v40 = sub_76070();
    uint64_t v41 = *(void *)(v40 - 8);
    uint64_t v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
    __dsta = v38;
    LODWORD(v38) = v42(v38, 1, v40);
    int v43 = v42(v39, 1, v40);
    if (v38)
    {
      if (!v43)
      {
        (*(void (**)(void *, void *, uint64_t))(v41 + 16))(__dsta, v39, v40);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(__dsta, 0, 1, v40);
        goto LABEL_18;
      }
      size_t v44 = *(void *)(*(void *)(sub_14F50(&qword_A3000) - 8) + 64);
      uint64_t v45 = __dsta;
    }
    else
    {
      if (!v43)
      {
        (*(void (**)(void *, void *, uint64_t))(v41 + 24))(__dsta, v39, v40);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v41 + 8))(__dsta, v40);
      size_t v44 = *(void *)(*(void *)(sub_14F50(&qword_A3000) - 8) + 64);
      uint64_t v45 = __dsta;
    }
    memcpy(v45, v39, v44);
LABEL_18:
    uint64_t v50 = v12[19];
    uint64_t v51 = (void *)(v10 + v50);
    uint64_t v52 = (void *)(v11 + v50);
    *uint64_t v51 = *v52;
    v51[1] = v52[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v10 + v12[20]) = *(void *)(v11 + v12[20]);
    *(void *)(v10 + v12[21]) = *(void *)(v11 + v12[21]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v16)
  {
LABEL_7:
    uint64_t v27 = sub_14F50(&qword_A3530);
    memcpy((void *)v10, (const void *)v11, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  *(void *)uint64_t v10 = *(void *)v11;
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  *(void *)(v10 + 16) = *(void *)(v11 + 16);
  *(void *)(v10 + 24) = *(void *)(v11 + 24);
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  *(void *)(v10 + 40) = *(void *)(v11 + 40);
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(v11 + 48);
  *(unsigned char *)(v10 + 64) = *(unsigned char *)(v11 + 64);
  __src = v12;
  unsigned __int8 v17 = *(void **)(v11 + 72);
  *(void *)(v10 + 72) = v17;
  uint64_t v18 = *(void *)(v11 + 80);
  uint64_t v19 = *(void *)(v11 + 88);
  unsigned __int8 v20 = *(unsigned char *)(v11 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v21 = v17;
  sub_16F10(v18, v19, v20);
  *(void *)(v10 + 80) = v18;
  *(void *)(v10 + 88) = v19;
  *(unsigned char *)(v10 + 96) = v20;
  *(void *)(v10 + 104) = *(void *)(v11 + 104);
  *(void *)(v10 + 112) = *(void *)(v11 + 112);
  *(void *)(v10 + 120) = *(void *)(v11 + 120);
  *(unsigned char *)(v10 + 128) = *(unsigned char *)(v11 + 128);
  *(unsigned char *)(v10 + 129) = *(unsigned char *)(v11 + 129);
  *(unsigned char *)(v10 + 130) = *(unsigned char *)(v11 + 130);
  *(unsigned char *)(v10 + 131) = *(unsigned char *)(v11 + 131);
  *(unsigned char *)(v10 + 132) = *(unsigned char *)(v11 + 132);
  *(unsigned char *)(v10 + 133) = *(unsigned char *)(v11 + 133);
  uint64_t v22 = __src[18];
  uint64_t v55 = (const void *)(v11 + v22);
  __dst = (void *)(v10 + v22);
  uint64_t v23 = sub_76070();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25(v55, 1, v23))
  {
    uint64_t v26 = sub_14F50(&qword_A3000);
    memcpy(__dst, v55, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(__dst, v55, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  uint64_t v46 = __src[19];
  uint64_t v47 = (void *)(v10 + v46);
  uint64_t v48 = (void *)(v11 + v46);
  void *v47 = *v48;
  v47[1] = v48[1];
  *(void *)(v10 + __src[20]) = *(void *)(v11 + __src[20]);
  *(void *)(v10 + __src[21]) = *(void *)(v11 + __src[21]);
  uint64_t v49 = *(void (**)(uint64_t, void, uint64_t, int *))(v13 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v49(v10, 0, 1, __src);
LABEL_19:
  uint64_t v53 = sub_14F50(&qword_A4928);
  *(void *)(v10 + *(int *)(v53 + 28)) = *(void *)(v11 + *(int *)(v53 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_6C368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (_OWORD *)(a1 + v5);
  uint64_t v7 = (_OWORD *)(a2 + v5);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  id v8 = (int *)type metadata accessor for Application();
  uint64_t v9 = *((void *)v8 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_14F50(&qword_A3530);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    long long v11 = v7[1];
    *uint64_t v6 = *v7;
    v6[1] = v11;
    long long v12 = v7[3];
    v6[2] = v7[2];
    v6[3] = v12;
    *((unsigned char *)v6 + 64) = *((unsigned char *)v7 + 64);
    *((void *)v6 + 9) = *((void *)v7 + 9);
    long long v13 = v7[6];
    void v6[5] = v7[5];
    v6[6] = v13;
    uint64_t v14 = *((void *)v7 + 15);
    *((void *)v6 + 14) = *((void *)v7 + 14);
    *((void *)v6 + 15) = v14;
    *((_DWORD *)v6 + 32) = *((_DWORD *)v7 + 32);
    *((_WORD *)v6 + 66) = *((_WORD *)v7 + 66);
    uint64_t v15 = v8[18];
    int v16 = (char *)v6 + v15;
    unsigned __int8 v17 = (char *)v7 + v15;
    uint64_t v18 = sub_76070();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_14F50(&qword_A3000);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *(_OWORD *)((char *)v6 + v8[19]) = *(_OWORD *)((char *)v7 + v8[19]);
    *(void *)((char *)v6 + v8[20]) = *(void *)((char *)v7 + v8[20]);
    *(void *)((char *)v6 + v8[21]) = *(void *)((char *)v7 + v8[21]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v9 + 56))(v6, 0, 1, v8);
  }
  uint64_t v21 = sub_14F50(&qword_A4928);
  *(void *)((char *)v6 + *(int *)(v21 + 28)) = *(void *)((char *)v7 + *(int *)(v21 + 28));
  return a1;
}

uint64_t sub_6C5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = (int *)type metadata accessor for Application();
  uint64_t v12 = *((void *)v11 - 1);
  long long v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_70350(v9, (uint64_t (*)(void))type metadata accessor for Application);
      goto LABEL_7;
    }
    uint64_t v27 = *(void *)(v10 + 8);
    *(void *)uint64_t v9 = *(void *)v10;
    *(void *)(v9 + 8) = v27;
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void *)(v10 + 24);
    *(void *)(v9 + 16) = *(void *)(v10 + 16);
    *(void *)(v9 + 24) = v28;
    swift_bridgeObjectRelease();
    uint64_t v29 = *(void *)(v10 + 40);
    *(void *)(v9 + 32) = *(void *)(v10 + 32);
    *(void *)(v9 + 40) = v29;
    swift_bridgeObjectRelease();
    *(_OWORD *)(v9 + 48) = *(_OWORD *)(v10 + 48);
    *(unsigned char *)(v9 + 64) = *(unsigned char *)(v10 + 64);
    id v30 = *(void **)(v9 + 72);
    *(void *)(v9 + 72) = *(void *)(v10 + 72);

    char v31 = *(unsigned char *)(v10 + 96);
    uint64_t v32 = *(void *)(v9 + 80);
    uint64_t v33 = *(void *)(v9 + 88);
    *(_OWORD *)(v9 + 80) = *(_OWORD *)(v10 + 80);
    unsigned __int8 v34 = *(unsigned char *)(v9 + 96);
    *(unsigned char *)(v9 + 96) = v31;
    sub_16FDC(v32, v33, v34);
    uint64_t v35 = *(void *)(v10 + 112);
    *(void *)(v9 + 104) = *(void *)(v10 + 104);
    *(void *)(v9 + 112) = v35;
    swift_bridgeObjectRelease();
    *(void *)(v9 + 120) = *(void *)(v10 + 120);
    swift_bridgeObjectRelease();
    *(unsigned char *)(v9 + 128) = *(unsigned char *)(v10 + 128);
    *(unsigned char *)(v9 + 129) = *(unsigned char *)(v10 + 129);
    *(unsigned char *)(v9 + 130) = *(unsigned char *)(v10 + 130);
    *(unsigned char *)(v9 + 131) = *(unsigned char *)(v10 + 131);
    *(unsigned char *)(v9 + 132) = *(unsigned char *)(v10 + 132);
    *(unsigned char *)(v9 + 133) = *(unsigned char *)(v10 + 133);
    uint64_t v36 = v11[18];
    uint64_t v37 = (void *)(v9 + v36);
    uint64_t v38 = (void *)(v10 + v36);
    uint64_t v39 = sub_76070();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
    uint64_t v52 = v37;
    LODWORD(v37) = v41(v37, 1, v39);
    int v42 = v41(v38, 1, v39);
    if (v37)
    {
      if (!v42)
      {
        (*(void (**)(void *, void *, uint64_t))(v40 + 32))(v52, v38, v39);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v52, 0, 1, v39);
        goto LABEL_18;
      }
      size_t v43 = *(void *)(*(void *)(sub_14F50(&qword_A3000) - 8) + 64);
      size_t v44 = v52;
    }
    else
    {
      if (!v42)
      {
        (*(void (**)(void *, void *, uint64_t))(v40 + 40))(v52, v38, v39);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v40 + 8))(v52, v39);
      size_t v43 = *(void *)(*(void *)(sub_14F50(&qword_A3000) - 8) + 64);
      size_t v44 = v52;
    }
    memcpy(v44, v38, v43);
LABEL_18:
    uint64_t v45 = v11[19];
    uint64_t v46 = (void *)(v9 + v45);
    uint64_t v47 = (uint64_t *)(v10 + v45);
    uint64_t v49 = *v47;
    uint64_t v48 = v47[1];
    void *v46 = v49;
    v46[1] = v48;
    swift_bridgeObjectRelease();
    *(void *)(v9 + v11[20]) = *(void *)(v10 + v11[20]);
    *(void *)(v9 + v11[21]) = *(void *)(v10 + v11[21]);
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v15)
  {
LABEL_7:
    uint64_t v26 = sub_14F50(&qword_A3530);
    memcpy((void *)v9, (const void *)v10, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  long long v16 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v16;
  long long v17 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v17;
  *(unsigned char *)(v9 + 64) = *(unsigned char *)(v10 + 64);
  *(void *)(v9 + 72) = *(void *)(v10 + 72);
  long long v18 = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 96) = v18;
  uint64_t v19 = *(void *)(v10 + 120);
  *(void *)(v9 + 112) = *(void *)(v10 + 112);
  *(void *)(v9 + 120) = v19;
  *(_DWORD *)(v9 + 128) = *(_DWORD *)(v10 + 128);
  *(_WORD *)(v9 + 132) = *(_WORD *)(v10 + 132);
  uint64_t v20 = v11[18];
  uint64_t v21 = (void *)(v9 + v20);
  uint64_t v22 = (const void *)(v10 + v20);
  uint64_t v23 = sub_76070();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_14F50(&qword_A3000);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(_OWORD *)(v9 + v11[19]) = *(_OWORD *)(v10 + v11[19]);
  *(void *)(v9 + v11[20]) = *(void *)(v10 + v11[20]);
  *(void *)(v9 + v11[21]) = *(void *)(v10 + v11[21]);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_19:
  uint64_t v50 = sub_14F50(&qword_A4928);
  *(void *)(v9 + *(int *)(v50 + 28)) = *(void *)(v10 + *(int *)(v50 + 28));
  swift_release();
  return a1;
}

uint64_t sub_6CB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_6CB64);
}

uint64_t sub_6CB64(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_14F50(&qword_A4928);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    long long v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_6CC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6CC2C);
}

void *sub_6CC2C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_14F50(&qword_A4928);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AppsListView()
{
  uint64_t result = qword_A4988;
  if (!qword_A4988) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_6CD24()
{
  sub_6CDE0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_6CDE0()
{
  if (!qword_A4998)
  {
    sub_14F94(&qword_A3530);
    unint64_t v0 = sub_768B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_A4998);
    }
  }
}

uint64_t sub_6CE3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_6CE58(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Application();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v20 - v11;
  long long v13 = _swiftEmptyArrayStorage;
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    int v15 = _swiftEmptyArrayStorage;
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      long long v13 = *(void **)(v24 + 72);
      sub_702E8(a3 + v16 + (void)v13 * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Application);
      char v17 = a1(v12);
      if (v3)
      {
        sub_70350((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Application);
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v13;
      }
      if (v17)
      {
        sub_706F4((uint64_t)v12, v23, (uint64_t (*)(void))type metadata accessor for Application);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_36490(0, v15[2] + 1, 1);
        }
        int v15 = v25;
        unint64_t v19 = v25[2];
        unint64_t v18 = v25[3];
        if (v19 >= v18 >> 1)
        {
          sub_36490(v18 > 1, v19 + 1, 1);
          int v15 = v25;
        }
        _OWORD v15[2] = v19 + 1;
        uint64_t result = sub_706F4(v23, (uint64_t)v15 + v16 + v19 * (void)v13, (uint64_t (*)(void))type metadata accessor for Application);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_70350((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Application);
      }
      if (v22 == ++v14)
      {
        long long v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_6D0F0()
{
  uint64_t v1 = sub_75EF0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + 16);
  if (v5)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v6 = v5;
    sub_76240();

    swift_release();
    swift_release();
    uint64_t v7 = v11;
    unint64_t v8 = v12;
    if (!v12)
    {
      uint64_t v7 = 0;
      unint64_t v8 = 0xE000000000000000;
    }
    uint64_t v11 = v7;
    unint64_t v12 = v8;
    sub_75EE0();
    sub_15038();
    uint64_t v9 = sub_76E40();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_70290((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
    uint64_t result = sub_76380();
    __break(1u);
  }
  return result;
}

uint64_t sub_6D2B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AppsListView();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  unint64_t v8 = (char *)&v20 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  int v11 = *(unsigned __int8 *)(v0 + 8);
  sub_702E8(v1, (uint64_t)&v20 - v9, (uint64_t (*)(void))type metadata accessor for AppsListView);
  if (v11 != 1)
  {
    sub_70350((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AppsListView);
    sub_702E8(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AppsListView);
    goto LABEL_9;
  }
  uint64_t v12 = *((void *)v10 + 8);
  LOBYTE(v21) = v10[56];
  uint64_t v22 = v12;
  sub_14F50(&qword_A3A68);
  sub_76880();
  sub_70350((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AppsListView);
  char v13 = v23;
  sub_702E8(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AppsListView);
  if ((v13 & 1) == 0)
  {
LABEL_9:
    sub_70350((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AppsListView);
    sub_702E8(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AppsListView);
    goto LABEL_10;
  }
  unint64_t v14 = (void *)*((void *)v8 + 2);
  if (v14)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v15 = v14;
    sub_76240();

    swift_release();
    swift_release();
    unint64_t v16 = *(void *)(v21 + 16);
    swift_bridgeObjectRelease();
    sub_70350((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AppsListView);
    sub_702E8(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AppsListView);
    if (v16 > 0x19)
    {
      if (sub_6D0F0() || v17 != 0xE000000000000000)
      {
        char v18 = sub_77050();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        char v18 = 1;
      }
      goto LABEL_11;
    }
LABEL_10:
    char v18 = 0;
LABEL_11:
    sub_70350((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AppsListView);
    return v18 & 1;
  }
  type metadata accessor for StorageShared();
  sub_70290((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
  uint64_t result = sub_76380();
  __break(1u);
  return result;
}

uint64_t sub_6D5F8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = v1;
    swift_getAtKeyPath();
    sub_14F50(&qword_A2DB8);
    sub_76940();
    uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))*(&off_98890 + v5);
    swift_bridgeObjectRetain();
    sub_70D80(v3, 0);

    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_70290((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
    sub_76380();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

void *sub_6D724()
{
  if (sub_6D2B8())
  {
    uint64_t v1 = sub_6D5F8();
    uint64_t v2 = v1;
    if (*(void *)(v1 + 16) >= 0x14uLL) {
      uint64_t v3 = 20;
    }
    else {
      uint64_t v3 = *(void *)(v1 + 16);
    }
    sub_77060();
    swift_unknownObjectRetain_n();
    uint64_t v4 = (void *)swift_dynamicCastClass();
    if (!v4)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = _swiftEmptyArrayStorage;
    }
    uint64_t v5 = v4[2];
    swift_release();
    if (v5 == v3)
    {
      uint64_t v6 = swift_dynamicCastClass();
      swift_bridgeObjectRelease();
      if (!v6)
      {
        swift_bridgeObjectRelease();
        return _swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(type metadata accessor for Application() - 8);
      uint64_t v6 = (uint64_t)sub_4C6CC(v2, v2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), 0, (2 * v3) | 1);
      swift_bridgeObjectRelease();
    }
    return (void *)v6;
  }
  if (sub_6D0F0() || v7 != 0xE000000000000000)
  {
    char v8 = sub_77050();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      uint64_t v10 = sub_6D5F8();
      __chkstk_darwin(v10);
      uint64_t v13[2] = v0;
      return (void *)sub_6CE58((uint64_t (*)(char *))sub_7287C, (uint64_t)v13, v11);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  return (void *)sub_6D5F8();
}

BOOL sub_6D914(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A4A58);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 24);
  v11[2] = *(void *)(a1 + 16);
  v11[3] = v5;
  swift_bridgeObjectRetain();
  v11[0] = sub_6D0F0();
  v11[1] = v6;
  uint64_t v7 = sub_76080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
  sub_15038();
  sub_76E70();
  BOOL v9 = (v8 & 1) == 0;
  sub_151A8((uint64_t)v4, &qword_A4A58);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_6DA58@<X0>(char *a1@<X8>)
{
  int v42 = a1;
  uint64_t v2 = sub_14F50(&qword_A49D8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v43 = (uint64_t)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v38 - v5;
  uint64_t v7 = type metadata accessor for AppsListView();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v40 = sub_14F50(&qword_A49E0);
  uint64_t v10 = *(void *)(v40 - 8);
  uint64_t v11 = __chkstk_darwin(v40);
  uint64_t v41 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)v38 - v13;
  uint64_t v39 = v1;
  uint64_t v52 = sub_6D724();
  sub_702E8(v1, (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AppsListView);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = swift_allocObject();
  sub_706F4((uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, (uint64_t (*)(void))type metadata accessor for AppsListView);
  v38[3] = sub_14F50(&qword_A3460);
  v38[2] = sub_14F50(&qword_A49E8);
  v38[1] = sub_1508C(&qword_A3C08, &qword_A3460);
  uint64_t v17 = sub_14F94(&qword_A49F0);
  uint64_t v18 = sub_14F94(&qword_A49F8);
  uint64_t v19 = sub_14F94(&qword_A3BF0);
  uint64_t v20 = sub_14F94(&qword_A4A00);
  unint64_t v21 = sub_46980();
  uint64_t v22 = sub_1508C(&qword_A4A08, &qword_A4A00);
  uint64_t v44 = v19;
  uint64_t v45 = (void *)v20;
  unint64_t v46 = v21;
  uint64_t v47 = (void *)v22;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v24 = sub_15038();
  unint64_t v25 = sub_701A4();
  uint64_t v44 = v17;
  uint64_t v45 = &type metadata for String;
  unint64_t v46 = v18;
  uint64_t v47 = &type metadata for Text;
  uint64_t v48 = OpaqueTypeConformance2;
  unint64_t v49 = v24;
  unint64_t v50 = v25;
  uint64_t v51 = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  sub_70290(&qword_A3C10, (void (*)(uint64_t))type metadata accessor for Application);
  uint64_t v26 = v39;
  sub_76980();
  if (sub_6D2B8())
  {
    *(void *)uint64_t v6 = sub_764E0();
    *((void *)v6 + 1) = 0;
    unsigned char v6[16] = 1;
    uint64_t v27 = sub_14F50(&qword_A4A28);
    sub_6FCB8(v26, &v6[*(int *)(v27 + 44)]);
    uint64_t v28 = sub_14F50(&qword_A4A18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v6, 0, 1, v28);
  }
  else
  {
    uint64_t v29 = sub_14F50(&qword_A4A18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v6, 1, 1, v29);
  }
  id v30 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  char v31 = v41;
  uint64_t v32 = v40;
  v30(v41, v14, v40);
  uint64_t v33 = v43;
  sub_15144((uint64_t)v6, v43, &qword_A49D8);
  unsigned __int8 v34 = v42;
  v30(v42, v31, v32);
  uint64_t v35 = sub_14F50(&qword_A4A20);
  sub_15144(v33, (uint64_t)&v34[*(int *)(v35 + 48)], &qword_A49D8);
  sub_151A8((uint64_t)v6, &qword_A49D8);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v10 + 8);
  v36(v14, v32);
  sub_151A8(v33, &qword_A49D8);
  return ((uint64_t (*)(char *, uint64_t))v36)(v31, v32);
}

uint64_t sub_6DFB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v57 = a3;
  uint64_t v58 = a2;
  uint64_t v4 = type metadata accessor for Application();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v53 = *(void *)(v54 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v51 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AppsListView();
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v49 = *(void *)(v52 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v50 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AppListView();
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = sub_14F50(&qword_A3BF0);
  __chkstk_darwin(v44);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_14F50(&qword_A49F0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v55 = v13;
  uint64_t v56 = v14;
  __chkstk_darwin(v13);
  uint64_t v48 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)v10 + *(int *)(v8 + 20);
  int v42 = type metadata accessor for Application;
  sub_702E8((uint64_t)a1, v16, (uint64_t (*)(void))type metadata accessor for Application);
  type metadata accessor for StorageShared();
  sub_70290((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
  uint64_t *v10 = sub_76390();
  v10[1] = v17;
  uint64_t v63 = 0;
  unint64_t v64 = 0xE000000000000000;
  sub_76F70(17);
  swift_bridgeObjectRelease();
  uint64_t v63 = 0x746163696C707041;
  unint64_t v64 = 0xEF2D776F526E6F69;
  uint64_t v19 = *a1;
  uint64_t v18 = (void *)a1[1];
  swift_bridgeObjectRetain();
  v69._countAndFlagsBits = v19;
  v69._object = v18;
  sub_76C50(v69);
  swift_bridgeObjectRelease();
  sub_70290(&qword_A3BF8, (void (*)(uint64_t))type metadata accessor for AppListView);
  sub_767B0();
  swift_bridgeObjectRelease();
  sub_70350((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AppListView);
  uint64_t v61 = a1;
  uint64_t v20 = (uint64_t)a1;
  uint64_t v43 = a1;
  uint64_t v21 = v58;
  uint64_t v62 = v58;
  uint64_t v45 = sub_14F50(&qword_A4A00);
  unint64_t v46 = sub_46980();
  uint64_t v47 = sub_1508C(&qword_A4A08, &qword_A4A00);
  sub_76760();
  sub_151A8((uint64_t)v12, &qword_A3BF0);
  NSString v22 = sub_76BE0();
  NSString v23 = sub_76BE0();
  id v24 = STLocalizedString(v22);

  uint64_t v25 = sub_76C10();
  uint64_t v27 = v26;

  uint64_t v67 = v25;
  uint64_t v68 = v27;
  uint64_t v28 = v21;
  uint64_t v29 = v50;
  sub_702E8(v28, v50, (uint64_t (*)(void))type metadata accessor for AppsListView);
  uint64_t v30 = v51;
  sub_702E8(v20, v51, (uint64_t (*)(void))type metadata accessor for Application);
  sub_76D40();
  uint64_t v31 = sub_76D30();
  unint64_t v32 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  unint64_t v33 = (v32 + v49 + *(unsigned __int8 *)(v54 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v31;
  *(void *)(v34 + 24) = &protocol witness table for MainActor;
  sub_706F4(v29, v34 + v32, (uint64_t (*)(void))type metadata accessor for AppsListView);
  sub_706F4(v30, v34 + v33, (uint64_t (*)(void))v42);
  uint64_t v35 = v58;
  sub_702E8(v58, v29, (uint64_t (*)(void))type metadata accessor for AppsListView);
  uint64_t v36 = sub_76D30();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v36;
  *(void *)(v37 + 24) = &protocol witness table for MainActor;
  sub_706F4(v29, v37 + v32, (uint64_t (*)(void))type metadata accessor for AppsListView);
  sub_76960();
  uint64_t v59 = v35;
  uint64_t v60 = v43;
  sub_14F50(&qword_A49F8);
  uint64_t v63 = v44;
  unint64_t v64 = v45;
  unint64_t v65 = v46;
  uint64_t v66 = v47;
  swift_getOpaqueTypeConformance2();
  sub_15038();
  sub_701A4();
  uint64_t v38 = v55;
  uint64_t v39 = v48;
  sub_767A0();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v39, v38);
}

uint64_t sub_6E764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v79 = (void (*)(char *, uint64_t, uint64_t, uint64_t))a2;
  uint64_t v86 = a3;
  uint64_t v4 = type metadata accessor for Application();
  long long v80 = *(char **)(v4 - 8);
  uint64_t v5 = *((void *)v80 + 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = type metadata accessor for AppsListView();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_14F50(&qword_A2E58);
  uint64_t v82 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_14F50(&qword_A49F8);
  __chkstk_darwin(v12 - 8);
  long long v81 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_14F50(&qword_A4A40);
  uint64_t v14 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_14F50(&qword_A4A48);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v84 = (uint64_t)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v83 = (uint64_t)&v71 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  long long v87 = (char *)&v71 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v71 - v24;
  int v26 = *(unsigned __int8 *)(a1 + 128);
  uint64_t v85 = v14;
  unint64_t v88 = v16;
  uint64_t v76 = v5;
  uint64_t v77 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = v8;
  uint64_t v75 = v9;
  uint64_t v73 = v7;
  if (v26 == 1)
  {
    sub_702E8((uint64_t)v79, (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AppsListView);
    sub_702E8(a1, (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for Application);
    uint64_t v27 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v72 = (uint64_t *)a1;
    uint64_t v28 = (v27 + 16) & ~v27;
    unint64_t v29 = (v8 + v80[80] + v28) & ~(unint64_t)v80[80];
    uint64_t v30 = swift_allocObject();
    uint64_t v71 = v25;
    uint64_t v31 = v30;
    sub_706F4((uint64_t)v9, v30 + v28, (uint64_t (*)(void))type metadata accessor for AppsListView);
    uint64_t v32 = v31 + v29;
    uint64_t v33 = v78;
    sub_706F4((uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v32, (uint64_t (*)(void))type metadata accessor for Application);
    sub_768D0();
    unint64_t v90 = 0;
    unint64_t v91 = 0xE000000000000000;
    sub_76F70(29);
    swift_bridgeObjectRelease();
    unint64_t v90 = 0xD00000000000001BLL;
    unint64_t v91 = 0x8000000000088440;
    a1 = (uint64_t)v72;
    uint64_t v34 = *v72;
    uint64_t v35 = (void *)v72[1];
    swift_bridgeObjectRetain();
    v92._countAndFlagsBits = v34;
    v92._object = v35;
    sub_76C50(v92);
    swift_bridgeObjectRelease();
    sub_1508C(&qword_A3A70, &qword_A2E58);
    uint64_t v36 = (uint64_t)v81;
    sub_767B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v11, v33);
    uint64_t v37 = sub_767E0();
    uint64_t KeyPath = swift_getKeyPath();
    sub_15144(v36, (uint64_t)v88, &qword_A49F8);
    uint64_t v39 = v89;
    uint64_t v40 = (uint64_t *)&v88[*(int *)(v89 + 36)];
    uint64_t *v40 = KeyPath;
    v40[1] = v37;
    uint64_t v41 = (uint64_t)v88;
    uint64_t v42 = v85;
    uint64_t v25 = v71;
    sub_151A8(v36, &qword_A49F8);
    sub_150E0(v41, (uint64_t)v25, &qword_A4A40);
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
    v43(v25, 0, 1, v39);
  }
  else
  {
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v43((char *)&v71 - v24, 1, 1, v89);
  }
  if (*(unsigned char *)(a1 + 129) == 1)
  {
    uint64_t v44 = (uint64_t)v75;
    sub_702E8((uint64_t)v79, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for AppsListView);
    uint64_t v45 = v77;
    sub_702E8(a1, v77, (uint64_t (*)(void))type metadata accessor for Application);
    uint64_t v46 = *(unsigned __int8 *)(v73 + 80);
    long long v79 = v43;
    uint64_t v47 = (v46 + 16) & ~v46;
    uint64_t v48 = v80[80];
    long long v80 = v11;
    uint64_t v49 = (v74 + v48 + v47) & ~v48;
    uint64_t v50 = swift_allocObject();
    sub_706F4(v44, v50 + v47, (uint64_t (*)(void))type metadata accessor for AppsListView);
    uint64_t v51 = v89;
    sub_706F4(v45, v50 + v49, (uint64_t (*)(void))type metadata accessor for Application);
    uint64_t v52 = v80;
    sub_768D0();
    unint64_t v90 = 0;
    unint64_t v91 = 0xE000000000000000;
    sub_76F70(30);
    swift_bridgeObjectRelease();
    unint64_t v90 = 0xD00000000000001CLL;
    unint64_t v91 = 0x8000000000088420;
    uint64_t v53 = *(void *)a1;
    uint64_t v54 = *(void **)(a1 + 8);
    swift_bridgeObjectRetain();
    v93._countAndFlagsBits = v53;
    v93._object = v54;
    sub_76C50(v93);
    swift_bridgeObjectRelease();
    sub_1508C(&qword_A3A70, &qword_A2E58);
    uint64_t v55 = v81;
    uint64_t v56 = v78;
    sub_767B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v56);
    uint64_t v57 = sub_767F0();
    uint64_t v58 = swift_getKeyPath();
    uint64_t v59 = (uint64_t)v55;
    uint64_t v60 = (uint64_t)v55;
    uint64_t v61 = (uint64_t)v88;
    sub_15144(v59, (uint64_t)v88, &qword_A49F8);
    uint64_t v62 = *(int *)(v51 + 36);
    uint64_t v43 = v79;
    uint64_t v63 = (uint64_t *)(v61 + v62);
    uint64_t *v63 = v58;
    v63[1] = v57;
    sub_151A8(v60, &qword_A49F8);
    sub_150E0(v61, (uint64_t)v87, &qword_A4A40);
    uint64_t v64 = 0;
  }
  else
  {
    uint64_t v64 = 1;
  }
  uint64_t v65 = (uint64_t)v87;
  v43(v87, v64, 1, v89);
  uint64_t v66 = v83;
  sub_15144((uint64_t)v25, v83, &qword_A4A48);
  uint64_t v67 = v84;
  sub_15144(v65, v84, &qword_A4A48);
  uint64_t v68 = v86;
  sub_15144(v66, v86, &qword_A4A48);
  uint64_t v69 = sub_14F50(&qword_A4A50);
  sub_15144(v67, v68 + *(int *)(v69 + 48), &qword_A4A48);
  sub_151A8(v65, &qword_A4A48);
  sub_151A8((uint64_t)v25, &qword_A4A48);
  sub_151A8(v67, &qword_A4A48);
  return sub_151A8(v66, &qword_A4A48);
}

void sub_6F030(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *a2;
    unint64_t v4 = a2[1];
    id v5 = v2;
    sub_25058(v3, v4);
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_70290((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
    sub_76380();
    __break(1u);
  }
}

uint64_t sub_6F0EC@<X0>(uint64_t a1@<X8>)
{
  return sub_7006C(a1);
}

uint64_t sub_6F118(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_14F50(&qword_A3530);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - v7;
  sub_702E8(a2, (uint64_t)&v11 - v7, (uint64_t (*)(void))type metadata accessor for Application);
  uint64_t v9 = type metadata accessor for Application();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  type metadata accessor for AppsListView();
  sub_15144((uint64_t)v8, (uint64_t)v6, &qword_A3530);
  sub_14F50(&qword_A4928);
  sub_76890();
  return sub_151A8((uint64_t)v8, &qword_A3530);
}

uint64_t sub_6F260@<X0>(uint64_t a1@<X8>)
{
  return sub_7006C(a1);
}

uint64_t sub_6F290@<X0>(uint64_t a1@<X3>, unsigned char *a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = type metadata accessor for Application();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  int v26 = (void **)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_14F50(&qword_A4A38);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_14F50(&qword_A3530);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (void **)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v26 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v26 - v17;
  type metadata accessor for AppsListView();
  sub_14F50(&qword_A4928);
  sub_76880();
  sub_702E8(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for Application);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v16, 0, 1, v3);
  uint64_t v19 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_15144((uint64_t)v18, (uint64_t)v9, &qword_A3530);
  sub_15144((uint64_t)v16, v19, &qword_A3530);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v9, 1, v3) == 1)
  {
    sub_151A8((uint64_t)v16, &qword_A3530);
    sub_151A8((uint64_t)v18, &qword_A3530);
    int v21 = v20(v19, 1, v3);
    if (v21 == 1) {
      uint64_t v22 = &qword_A3530;
    }
    else {
      uint64_t v22 = &qword_A4A38;
    }
    if (v21 == 1) {
      char v23 = -1;
    }
    else {
      char v23 = 0;
    }
  }
  else
  {
    sub_15144((uint64_t)v9, (uint64_t)v13, &qword_A3530);
    if (v20(v19, 1, v3) == 1)
    {
      sub_151A8((uint64_t)v16, &qword_A3530);
      sub_151A8((uint64_t)v18, &qword_A3530);
      sub_70350((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Application);
      char v23 = 0;
      uint64_t v22 = &qword_A4A38;
    }
    else
    {
      uint64_t v24 = v26;
      sub_706F4(v19, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for Application);
      char v23 = sub_22344(v13, v24);
      sub_70350((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for Application);
      uint64_t v22 = &qword_A3530;
      sub_151A8((uint64_t)v16, &qword_A3530);
      sub_151A8((uint64_t)v18, &qword_A3530);
      sub_70350((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Application);
    }
  }
  uint64_t result = sub_151A8((uint64_t)v9, v22);
  unsigned char *v27 = v23 & 1;
  return result;
}

uint64_t sub_6F648()
{
  uint64_t v0 = sub_14F50(&qword_A3530);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v8 - v4;
  uint64_t v6 = type metadata accessor for Application();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  type metadata accessor for AppsListView();
  sub_15144((uint64_t)v5, (uint64_t)v3, &qword_A3530);
  sub_14F50(&qword_A4928);
  sub_76890();
  return sub_151A8((uint64_t)v5, &qword_A3530);
}

uint64_t sub_6F764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v22[0] = a2;
  v22[1] = a3;
  uint64_t v4 = type metadata accessor for AppsListView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = sub_14F50(&qword_A2E58);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v11 = sub_76BE0();
  NSString v12 = sub_76BE0();
  id v13 = STLocalizedString(v11);

  uint64_t v14 = sub_76C10();
  unint64_t v16 = v15;

  unint64_t v23 = v14;
  unint64_t v24 = v16;
  sub_702E8(a1, (uint64_t)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AppsListView);
  unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v18 = swift_allocObject();
  sub_706F4((uint64_t)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, (uint64_t (*)(void))type metadata accessor for AppsListView);
  sub_15038();
  sub_76900();
  unint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_76F70(26);
  swift_bridgeObjectRelease();
  unint64_t v23 = 0xD000000000000018;
  unint64_t v24 = 0x8000000000088400;
  uint64_t v19 = *(void *)v22[0];
  uint64_t v20 = *(void **)(v22[0] + 8);
  swift_bridgeObjectRetain();
  v25._countAndFlagsBits = v19;
  v25._object = v20;
  sub_76C50(v25);
  swift_bridgeObjectRelease();
  sub_1508C(&qword_A3A70, &qword_A2E58);
  sub_767B0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_6FA64(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A3530);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Application();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for AppsListView();
  sub_14F50(&qword_A4928);
  sub_76880();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_151A8((uint64_t)v4, &qword_A3530);
  }
  sub_706F4((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Application);
  uint64_t v10 = *(void **)(a1 + 16);
  if (v10)
  {
    uint64_t v11 = *v8;
    unint64_t v12 = v8[1];
    id v13 = v10;
    swift_bridgeObjectRetain();
    sub_26140(v11, v12);

    swift_bridgeObjectRelease();
    return sub_70350((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Application);
  }
  else
  {
    type metadata accessor for StorageShared();
    sub_70290((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
    uint64_t result = sub_76380();
    __break(1u);
  }
  return result;
}

uint64_t sub_6FC80@<X0>(uint64_t a1@<X8>)
{
  return sub_7006C(a1);
}

uint64_t sub_6FCB8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v24 = a2;
  uint64_t v3 = type metadata accessor for AppsListView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = sub_14F50(&qword_A2E58);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_14F50(&qword_A49F8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  id v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v23 - v14;
  sub_702E8(a1, (uint64_t)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AppsListView);
  unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v17 = swift_allocObject();
  sub_706F4((uint64_t)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (uint64_t (*)(void))type metadata accessor for AppsListView);
  sub_768D0();
  sub_1508C(&qword_A3A70, &qword_A2E58);
  sub_767B0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_150E0((uint64_t)v13, (uint64_t)v15, &qword_A49F8);
  sub_15144((uint64_t)v15, (uint64_t)v13, &qword_A49F8);
  uint64_t v18 = v24;
  void *v24 = 0;
  *((unsigned char *)v18 + 8) = 1;
  uint64_t v19 = v18;
  uint64_t v20 = sub_14F50(&qword_A4A30);
  sub_15144((uint64_t)v13, (uint64_t)v19 + *(int *)(v20 + 48), &qword_A49F8);
  uint64_t v21 = (uint64_t)v19 + *(int *)(v20 + 64);
  *(void *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 8) = 1;
  sub_151A8((uint64_t)v15, &qword_A49F8);
  return sub_151A8((uint64_t)v13, &qword_A49F8);
}

uint64_t sub_6FFE8()
{
  return sub_76890();
}

uint64_t sub_7003C@<X0>(uint64_t a1@<X8>)
{
  return sub_7006C(a1);
}

uint64_t sub_7006C@<X0>(uint64_t a1@<X8>)
{
  NSString v2 = sub_76BE0();
  NSString v3 = sub_76BE0();
  id v4 = STLocalizedString(v2);

  sub_76C10();
  sub_15038();
  uint64_t result = sub_766D0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7 & 1;
  *(void *)(a1 + 24) = v8;
  return result;
}

uint64_t sub_70124@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for AppsListView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_6DFB0(a1, v6, a2);
}

unint64_t sub_701A4()
{
  unint64_t result = qword_A4A10;
  if (!qword_A4A10)
  {
    sub_14F94(&qword_A49F8);
    sub_1508C(&qword_A3A70, &qword_A2E58);
    sub_70290((unint64_t *)&qword_A3A88, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4A10);
  }
  return result;
}

uint64_t sub_70278()
{
  return sub_70D0C((uint64_t (*)(uint64_t))sub_6FFE8);
}

uint64_t sub_70290(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_702E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_70350(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_703B0@<X0>(uint64_t a1@<X8>)
{
  return sub_6E764(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_703B8()
{
  uint64_t v1 = (int *)(type metadata accessor for AppsListView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = type metadata accessor for Application();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  swift_unknownObjectRelease();
  uint64_t v10 = v0 + v3;
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = v10 + v1[11];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_16FDC(*(void *)(v11 + 80), *(void *)(v11 + 88), *(unsigned char *)(v11 + 96));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v11 + *(int *)(v5 + 72);
    uint64_t v13 = sub_76070();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_14F50(&qword_A4928);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_16FDC(*(void *)(v0 + v8 + 80), *(void *)(v0 + v8 + 88), *(unsigned char *)(v0 + v8 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v0 + v8 + *(int *)(v5 + 72);
  uint64_t v16 = sub_76070();
  uint64_t v17 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v8 + v9, v2 | v7 | 7);
}

uint64_t sub_706F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_7075C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for AppsListView() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for Application() - 8);
  uint64_t v7 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_6F290(v7, a1);
}

uint64_t sub_70834()
{
  uint64_t v1 = (int *)(type metadata accessor for AppsListView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[11];
  uint64_t v6 = type metadata accessor for Application();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_16FDC(*(void *)(v5 + 80), *(void *)(v5 + 88), *(unsigned char *)(v5 + 96));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + *(int *)(v6 + 72);
    uint64_t v8 = sub_76070();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_14F50(&qword_A4928);
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_70A58()
{
  type metadata accessor for AppsListView();

  return sub_6F648();
}

uint64_t sub_70ACC@<X0>(uint64_t a1@<X8>)
{
  return sub_6F764(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_70AD8()
{
  uint64_t v1 = (int *)(type metadata accessor for AppsListView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[11];
  uint64_t v6 = type metadata accessor for Application();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_16FDC(*(void *)(v5 + 80), *(void *)(v5 + 88), *(unsigned char *)(v5 + 96));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + *(int *)(v6 + 72);
    uint64_t v8 = sub_76070();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_14F50(&qword_A4928);
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_70CF4()
{
  return sub_70D0C(sub_6FA64);
}

uint64_t sub_70D0C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for AppsListView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

Swift::Int sub_70D80(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2)
{
  type metadata accessor for Application();
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = (void *)sub_22330(v5);
  }
  Swift::Int result = sub_70E40(a1, a2);
  void *v2 = v5;
  return result;
}

Swift::Int sub_70E40(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v156 = a2;
  long long v155 = a1;
  uint64_t v147 = type metadata accessor for Application();
  uint64_t v153 = *(void *)(v147 - 8);
  uint64_t v5 = __chkstk_darwin(v147);
  uint64_t v148 = (uint64_t)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v151 = (uint64_t)&v133 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v133 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v133 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v133 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v133 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v133 - v22;
  __chkstk_darwin(v21);
  uint64_t v138 = (uint64_t)&v133 - v24;
  long long v154 = v2;
  Swift::Int v25 = v2[1];
  Swift::Int result = sub_77020(v25);
  if (result >= v25)
  {
    if (v25 < 0) {
      goto LABEL_149;
    }
    if (v25) {
      return sub_71B28(0, v25, 1, v155);
    }
    return result;
  }
  if (v25 >= 0) {
    uint64_t v27 = v25;
  }
  else {
    uint64_t v27 = v25 + 1;
  }
  if (v25 <= -2) {
    goto LABEL_158;
  }
  Swift::Int v137 = result;
  Swift::Int v28 = v25;
  if (v25 < 2)
  {
    uint64_t v31 = _swiftEmptyArrayStorage;
    unint64_t v152 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80));
    if (v28 != 1)
    {
      unint64_t v60 = _swiftEmptyArrayStorage[2];
      uint64_t v33 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_111;
    }
    uint64_t v29 = 1;
    long long v134 = v23;
    long long v142 = v20;
    char v143 = v17;
    long long v146 = v11;
  }
  else
  {
    uint64_t v29 = v25;
    long long v134 = v23;
    long long v142 = v20;
    char v143 = v17;
    long long v146 = v11;
    uint64_t v30 = v27 >> 1;
    uint64_t v31 = (void *)sub_76CE0();
    v31[2] = v30;
    unint64_t v152 = (unint64_t)v31
         + ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80));
  }
  long long v141 = v31;
  uint64_t v32 = 0;
  uint64_t v33 = (char *)_swiftEmptyArrayStorage;
  long long v136 = v14;
  uint64_t v34 = v29;
  do
  {
    uint64_t v35 = v32;
    uint64_t v36 = v32 + 1;
    if (v32 + 1 >= v34)
    {
      uint64_t v41 = v32 + 1;
      uint64_t v48 = v32;
LABEL_48:
      if (v41 < v48) {
        goto LABEL_148;
      }
      goto LABEL_49;
    }
    uint64_t v150 = v34;
    uint64_t v37 = *v154;
    uint64_t v38 = *(void *)(v153 + 72);
    uint64_t v39 = v138;
    sub_702E8(*v154 + v38 * v36, v138, (uint64_t (*)(void))type metadata accessor for Application);
    uint64_t v40 = (uint64_t)v134;
    sub_702E8(v37 + v38 * v35, (uint64_t)v134, (uint64_t (*)(void))type metadata accessor for Application);
    LODWORD(v149) = v155(v39, v40);
    if (v4)
    {
      sub_70350(v40, (uint64_t (*)(void))type metadata accessor for Application);
      sub_70350(v39, (uint64_t (*)(void))type metadata accessor for Application);
LABEL_125:
      swift_bridgeObjectRelease();
      goto LABEL_126;
    }
    sub_70350(v40, (uint64_t (*)(void))type metadata accessor for Application);
    sub_70350(v39, (uint64_t (*)(void))type metadata accessor for Application);
    uint64_t v135 = v35;
    uint64_t v41 = v35 + 2;
    uint64_t v42 = v150;
    uint64_t v140 = v37;
    if (v35 + 2 < v150)
    {
      uint64_t v43 = v37;
      long long v133 = v33;
      uint64_t v144 = v38 * v41;
      uint64_t v145 = v38 * v36;
      while (1)
      {
        uint64_t v44 = v41;
        uint64_t v45 = (uint64_t)v142;
        sub_702E8(v43 + v144, (uint64_t)v142, (uint64_t (*)(void))type metadata accessor for Application);
        uint64_t v46 = (uint64_t)v143;
        sub_702E8(v43 + v145, (uint64_t)v143, (uint64_t (*)(void))type metadata accessor for Application);
        int v47 = v155(v45, v46);
        sub_70350(v46, (uint64_t (*)(void))type metadata accessor for Application);
        sub_70350(v45, (uint64_t (*)(void))type metadata accessor for Application);
        if ((v149 ^ v47)) {
          break;
        }
        uint64_t v41 = v44 + 1;
        v43 += v38;
        uint64_t v42 = v150;
        if (v150 == v44 + 1)
        {
          uint64_t v41 = v150;
          uint64_t v33 = v133;
          uint64_t v4 = 0;
          goto LABEL_23;
        }
      }
      uint64_t v33 = v133;
      uint64_t v41 = v44;
      uint64_t v4 = 0;
      uint64_t v42 = v150;
LABEL_23:
      uint64_t v37 = v140;
    }
    Swift::Int v49 = v137;
    uint64_t v48 = v135;
    if ((v149 & 1) == 0) {
      goto LABEL_37;
    }
    if (v41 < v135) {
      goto LABEL_153;
    }
    if (v135 < v41)
    {
      long long v133 = v33;
      uint64_t v50 = 0;
      uint64_t v51 = v38 * (v41 - 1);
      uint64_t v52 = v41 * v38;
      uint64_t v53 = v135;
      uint64_t v54 = v135 * v38;
      uint64_t v139 = v38;
      do
      {
        if (v53 != v41 + v50 - 1)
        {
          if (!v37) {
            goto LABEL_156;
          }
          uint64_t v149 = v37 + v51;
          sub_706F4(v37 + v54, v148, (uint64_t (*)(void))type metadata accessor for Application);
          if (v54 < v51 || v37 + v54 >= (unint64_t)(v37 + v52))
          {
            uint64_t v55 = v149;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            uint64_t v55 = v149;
            if (v54 != v51) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          sub_706F4(v148, v55, (uint64_t (*)(void))type metadata accessor for Application);
          uint64_t v38 = v139;
          uint64_t v37 = v140;
        }
        ++v53;
        --v50;
        v51 -= v38;
        v52 -= v38;
        v54 += v38;
      }
      while (v53 < v41 + v50);
      uint64_t v33 = v133;
      uint64_t v56 = (uint64_t)v136;
      Swift::Int v49 = v137;
      uint64_t v48 = v135;
      uint64_t v42 = v150;
      if (v41 >= v150) {
        goto LABEL_48;
      }
    }
    else
    {
LABEL_37:
      uint64_t v56 = (uint64_t)v136;
      if (v41 >= v42) {
        goto LABEL_48;
      }
    }
    if (__OFSUB__(v41, v48)) {
      goto LABEL_150;
    }
    if (v41 - v48 >= v49) {
      goto LABEL_48;
    }
    if (__OFADD__(v48, v49)) {
      goto LABEL_151;
    }
    if (v48 + v49 >= v42) {
      uint64_t v57 = v42;
    }
    else {
      uint64_t v57 = v48 + v49;
    }
    if (v57 < v48)
    {
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      Swift::Int result = sub_76FA0();
      __break(1u);
      return result;
    }
    if (v41 == v57) {
      goto LABEL_48;
    }
    uint64_t v150 = v4;
    long long v133 = v33;
    uint64_t v110 = *(void *)(v153 + 72);
    uint64_t v111 = v110 * (v41 - 1);
    uint64_t v144 = v110;
    uint64_t v112 = v41 * v110;
    uint64_t v135 = v48;
    uint64_t v140 = v57;
    do
    {
      uint64_t v113 = 0;
      uint64_t v114 = v48;
      uint64_t v149 = v41;
      uint64_t v145 = v112;
      while (1)
      {
        uint64_t v116 = *v154;
        sub_702E8(v112 + v113 + *v154, v56, (uint64_t (*)(void))type metadata accessor for Application);
        uint64_t v117 = v111;
        uint64_t v118 = v111 + v113 + v116;
        uint64_t v119 = v56;
        uint64_t v120 = (uint64_t)v146;
        sub_702E8(v118, (uint64_t)v146, (uint64_t (*)(void))type metadata accessor for Application);
        uint64_t v121 = v150;
        char v122 = v155(v119, v120);
        uint64_t v150 = v121;
        if (v121)
        {
          sub_70350(v120, (uint64_t (*)(void))type metadata accessor for Application);
          sub_70350(v119, (uint64_t (*)(void))type metadata accessor for Application);
          swift_bridgeObjectRelease();
LABEL_126:
          v141[2] = 0;
          return swift_bridgeObjectRelease();
        }
        char v123 = v122;
        uint64_t v124 = v114;
        sub_70350(v120, (uint64_t (*)(void))type metadata accessor for Application);
        sub_70350(v119, (uint64_t (*)(void))type metadata accessor for Application);
        uint64_t v56 = v119;
        if ((v123 & 1) == 0) {
          break;
        }
        uint64_t v125 = *v154;
        if (!*v154) {
          goto LABEL_155;
        }
        uint64_t v111 = v117;
        uint64_t v112 = v145;
        uint64_t v126 = v125 + v111 + v113;
        sub_706F4(v125 + v145 + v113, v151, (uint64_t (*)(void))type metadata accessor for Application);
        swift_arrayInitWithTakeFrontToBack();
        sub_706F4(v151, v126, (uint64_t (*)(void))type metadata accessor for Application);
        v113 -= v144;
        uint64_t v114 = v124 + 1;
        uint64_t v115 = v149;
        if (v149 == v124 + 1) {
          goto LABEL_106;
        }
      }
      uint64_t v115 = v149;
      uint64_t v111 = v117;
      uint64_t v112 = v145;
LABEL_106:
      uint64_t v41 = v115 + 1;
      v111 += v144;
      v112 += v144;
      uint64_t v48 = v135;
    }
    while (v41 != v140);
    uint64_t v41 = v140;
    uint64_t v33 = v133;
    uint64_t v4 = v150;
    if (v140 < v135) {
      goto LABEL_148;
    }
LABEL_49:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v33 = sub_21F2C(0, *((void *)v33 + 2) + 1, 1, v33);
    }
    unint64_t v59 = *((void *)v33 + 2);
    unint64_t v58 = *((void *)v33 + 3);
    unint64_t v60 = v59 + 1;
    uint64_t v149 = v41;
    if (v59 >= v58 >> 1) {
      uint64_t v33 = sub_21F2C((char *)(v58 > 1), v59 + 1, 1, v33);
    }
    *((void *)v33 + 2) = v60;
    uint64_t v61 = v33 + 32;
    uint64_t v62 = &v33[16 * v59 + 32];
    uint64_t v63 = v149;
    *(void *)uint64_t v62 = v48;
    *((void *)v62 + 1) = v63;
    if (v59)
    {
      while (2)
      {
        unint64_t v64 = v60 - 1;
        if (v60 >= 4)
        {
          uint64_t v69 = &v61[16 * v60];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_133;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_134;
          }
          unint64_t v76 = v60 - 2;
          uint64_t v77 = &v61[16 * v60 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_136;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_139;
          }
          if (v81 >= v72)
          {
            uint64_t v99 = &v61[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_143;
            }
            BOOL v92 = v67 < v102;
          }
          else
          {
LABEL_67:
            if (v68) {
              goto LABEL_135;
            }
            unint64_t v76 = v60 - 2;
            uint64_t v82 = &v61[16 * v60 - 32];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            BOOL v85 = __OFSUB__(v83, v84);
            uint64_t v86 = v83 - v84;
            char v87 = v85;
            if (v85) {
              goto LABEL_138;
            }
            unint64_t v88 = &v61[16 * v64];
            uint64_t v90 = *(void *)v88;
            uint64_t v89 = *((void *)v88 + 1);
            BOOL v75 = __OFSUB__(v89, v90);
            uint64_t v91 = v89 - v90;
            if (v75) {
              goto LABEL_141;
            }
            if (__OFADD__(v86, v91)) {
              goto LABEL_142;
            }
            if (v86 + v91 < v67) {
              goto LABEL_79;
            }
            BOOL v92 = v67 < v91;
          }
          if (v92) {
            unint64_t v64 = v76;
          }
        }
        else
        {
          if (v60 == 3)
          {
            uint64_t v66 = *((void *)v33 + 4);
            uint64_t v65 = *((void *)v33 + 5);
            BOOL v75 = __OFSUB__(v65, v66);
            uint64_t v67 = v65 - v66;
            char v68 = v75;
            goto LABEL_67;
          }
          uint64_t v93 = *((void *)v33 + 4);
          uint64_t v94 = *((void *)v33 + 5);
          BOOL v75 = __OFSUB__(v94, v93);
          uint64_t v86 = v94 - v93;
          char v87 = v75;
LABEL_79:
          if (v87) {
            goto LABEL_137;
          }
          int v95 = &v61[16 * v64];
          uint64_t v97 = *(void *)v95;
          uint64_t v96 = *((void *)v95 + 1);
          BOOL v75 = __OFSUB__(v96, v97);
          uint64_t v98 = v96 - v97;
          if (v75) {
            goto LABEL_140;
          }
          if (v98 < v86) {
            goto LABEL_96;
          }
        }
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v60)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        if (!*v154) {
          goto LABEL_154;
        }
        int v104 = v33;
        uint64_t v105 = &v61[16 * v103];
        uint64_t v106 = *(void *)v105;
        uint64_t v107 = &v61[16 * v64];
        uint64_t v108 = *((void *)v107 + 1);
        sub_71E04(*v154 + *(void *)(v153 + 72) * *(void *)v105, *v154 + *(void *)(v153 + 72) * *(void *)v107, *v154 + *(void *)(v153 + 72) * v108, v152, (uint64_t (*)(char *, char *))v155, v156);
        if (v4) {
          goto LABEL_125;
        }
        if (v108 < v106) {
          goto LABEL_130;
        }
        if (v64 > *((void *)v104 + 2)) {
          goto LABEL_131;
        }
        *(void *)uint64_t v105 = v106;
        *(void *)&v61[16 * v103 + 8] = v108;
        unint64_t v109 = *((void *)v104 + 2);
        if (v64 >= v109) {
          goto LABEL_132;
        }
        uint64_t v33 = v104;
        unint64_t v60 = v109 - 1;
        memmove(&v61[16 * v64], v107 + 16, 16 * (v109 - 1 - v64));
        *((void *)v33 + 2) = v109 - 1;
        if (v109 <= 2) {
          goto LABEL_96;
        }
        continue;
      }
    }
    unint64_t v60 = 1;
LABEL_96:
    uint64_t v34 = v154[1];
    uint64_t v32 = v149;
    uint64_t v31 = v141;
  }
  while (v149 < v34);
LABEL_111:
  if (v60 >= 2)
  {
    uint64_t v127 = *v154;
    long long v141 = v31;
    do
    {
      unint64_t v128 = v60 - 2;
      if (v60 < 2) {
        goto LABEL_144;
      }
      if (!v127) {
        goto LABEL_157;
      }
      uint64_t v129 = *(void *)&v33[16 * v128 + 32];
      uint64_t v130 = *(void *)&v33[16 * v60 + 24];
      sub_71E04(v127 + *(void *)(v153 + 72) * v129, v127 + *(void *)(v153 + 72) * *(void *)&v33[16 * v60 + 16], v127 + *(void *)(v153 + 72) * v130, v152, (uint64_t (*)(char *, char *))v155, v156);
      if (v4) {
        goto LABEL_125;
      }
      if (v130 < v129) {
        goto LABEL_145;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v33 = sub_222F4((uint64_t)v33);
      }
      if (v128 >= *((void *)v33 + 2)) {
        goto LABEL_146;
      }
      long long v131 = &v33[16 * v128 + 32];
      *(void *)long long v131 = v129;
      *((void *)v131 + 1) = v130;
      unint64_t v132 = *((void *)v33 + 2);
      if (v60 > v132) {
        goto LABEL_147;
      }
      memmove(&v33[16 * v60 + 16], &v33[16 * v60 + 32], 16 * (v132 - v60));
      *((void *)v33 + 2) = v132 - 1;
      unint64_t v60 = v132 - 1;
      uint64_t v31 = v141;
    }
    while (v132 > 2);
  }
  swift_bridgeObjectRelease();
  v31[2] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_71B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v35 = a4;
  uint64_t v29 = type metadata accessor for Application();
  uint64_t v7 = __chkstk_darwin(v29);
  uint64_t v38 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v34 = (uint64_t)&v26 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v33 = (uint64_t)&v26 - v13;
  uint64_t v28 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v15 = v14 * (a3 - 1);
    uint64_t v30 = v14;
    uint64_t v16 = v14 * a3;
    uint64_t v27 = a1;
LABEL_4:
    uint64_t v17 = 0;
    uint64_t v31 = v16;
    uint64_t v32 = a3;
    while (1)
    {
      uint64_t v19 = *v39;
      uint64_t v36 = v16 + v17;
      uint64_t v37 = a1;
      uint64_t v20 = v33;
      sub_702E8(v16 + v17 + v19, v33, (uint64_t (*)(void))type metadata accessor for Application);
      uint64_t v21 = v34;
      sub_702E8(v15 + v17 + v19, v34, (uint64_t (*)(void))type metadata accessor for Application);
      uint64_t v22 = v40;
      char v23 = v35(v20, v21);
      sub_70350(v21, (uint64_t (*)(void))type metadata accessor for Application);
      uint64_t result = sub_70350(v20, (uint64_t (*)(void))type metadata accessor for Application);
      uint64_t v40 = v22;
      if (v22) {
        break;
      }
      if ((v23 & 1) == 0)
      {
        uint64_t v16 = v31;
        uint64_t v18 = v32;
LABEL_11:
        a3 = v18 + 1;
        v15 += v30;
        v16 += v30;
        a1 = v27;
        if (a3 != v28) {
          goto LABEL_4;
        }
        return result;
      }
      uint64_t v24 = *v39;
      if (!*v39)
      {
        __break(1u);
        return result;
      }
      uint64_t v16 = v31;
      uint64_t v25 = v24 + v15 + v17;
      sub_706F4(v24 + v31 + v17, v38, (uint64_t (*)(void))type metadata accessor for Application);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_706F4(v38, v25, (uint64_t (*)(void))type metadata accessor for Application);
      v17 -= v30;
      a1 = v37 + 1;
      uint64_t v18 = v32;
      if (v32 == v37 + 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_71E04(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6)
{
  unint64_t v7 = v6;
  uint64_t v55 = a6;
  uint64_t v56 = a5;
  uint64_t v54 = type metadata accessor for Application();
  uint64_t v12 = __chkstk_darwin(v54);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v49 - v17;
  __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v49 - v20;
  uint64_t v23 = *(void *)(v22 + 72);
  if (!v23)
  {
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (a2 - a1 == 0x8000000000000000 && v23 == -1) {
    goto LABEL_66;
  }
  int64_t v24 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v23 == -1) {
    goto LABEL_67;
  }
  uint64_t v25 = (uint64_t)(a2 - a1) / v23;
  unint64_t v59 = a1;
  unint64_t v58 = a4;
  uint64_t v26 = v24 / v23;
  if (v25 >= v24 / v23)
  {
    if ((v26 & 0x8000000000000000) == 0)
    {
      uint64_t v28 = v23;
      unint64_t v29 = a3;
      uint64_t v30 = v26 * v28;
      uint64_t v31 = v19;
      if (a4 < a2 || a2 + v30 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v38 = a4 + v30;
      unint64_t v57 = a4 + v30;
      unint64_t v59 = a2;
      if (v30 < 1 || a1 >= a2) {
        goto LABEL_63;
      }
      unint64_t v51 = a4;
      unint64_t v52 = (unint64_t)v14;
      uint64_t v40 = -v28;
      unint64_t v49 = a1;
      uint64_t v50 = -v28;
      while (1)
      {
        sub_702E8(v38 + v40, v31, (uint64_t (*)(void))type metadata accessor for Application);
        unint64_t v41 = a2;
        a2 += v40;
        uint64_t v21 = (char *)v31;
        uint64_t v18 = (char *)v52;
        sub_702E8(a2, v52, (uint64_t (*)(void))type metadata accessor for Application);
        char v42 = v56(v21, v18);
        if (v7) {
          goto LABEL_62;
        }
        char v43 = v42;
        unint64_t v53 = 0;
        unint64_t v44 = v29 + v40;
        sub_70350((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Application);
        sub_70350((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Application);
        uint64_t v31 = (uint64_t)v21;
        if (v43)
        {
          if (v29 < v41 || v44 >= v41)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v46 = v51;
          }
          else
          {
            BOOL v45 = v29 == v41;
            unint64_t v46 = v51;
            if (!v45) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          uint64_t v40 = v50;
          v59 += v50;
        }
        else
        {
          unint64_t v47 = v57;
          v57 += v40;
          if (v29 < v47 || v44 >= v47)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v29 != v47)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 = v41;
          uint64_t v40 = v50;
          unint64_t v46 = v51;
        }
        unint64_t v38 = v57;
        if (v57 > v46)
        {
          unint64_t v29 = v44;
          unint64_t v7 = v53;
          if (a2 > v49) {
            continue;
          }
        }
        goto LABEL_63;
      }
    }
  }
  else
  {
    unint64_t v53 = a3;
    if ((v25 & 0x8000000000000000) == 0)
    {
      uint64_t v27 = v25 * v23;
      if (a4 < a1 || a1 + v27 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a1)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v52 = a4 + v27;
      unint64_t v57 = a4 + v27;
      if (v27 < 1 || a2 >= v53) {
        goto LABEL_63;
      }
      while (1)
      {
        sub_702E8(a2, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Application);
        sub_702E8(a4, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Application);
        char v33 = v56(v21, v18);
        if (v6) {
          break;
        }
        char v34 = v33;
        sub_70350((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Application);
        sub_70350((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Application);
        unint64_t v35 = v59;
        if (v34)
        {
          unint64_t v36 = a2 + v23;
          if (v59 < a2 || v59 >= v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 == a2)
          {
            unint64_t v35 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v37 = v58 + v23;
          if (v59 < v58 || v59 >= v37)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v59 != v58)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v58 = v37;
          unint64_t v36 = a2;
        }
        unint64_t v59 = v35 + v23;
        a4 = v58;
        if (v58 < v52)
        {
          a2 = v36;
          if (v36 < v53) {
            continue;
          }
        }
        goto LABEL_63;
      }
LABEL_62:
      sub_70350((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Application);
      sub_70350((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Application);
LABEL_63:
      sub_221B4(&v59, &v58, (uint64_t *)&v57);
      return 1;
    }
  }
LABEL_68:
  uint64_t result = sub_76FF0();
  __break(1u);
  return result;
}

uint64_t sub_723DC()
{
  return sub_7279C((uint64_t (*)(unint64_t, uint64_t))sub_6F118);
}

uint64_t sub_723F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_76480();
  *a1 = result;
  return result;
}

uint64_t sub_72420()
{
  return sub_76490();
}

uint64_t sub_72450()
{
  uint64_t v1 = (int *)(type metadata accessor for AppsListView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = type metadata accessor for Application();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = v0 + v3;
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = v10 + v1[11];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_16FDC(*(void *)(v11 + 80), *(void *)(v11 + 88), *(unsigned char *)(v11 + 96));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v11 + *(int *)(v5 + 72);
    uint64_t v13 = sub_76070();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_14F50(&qword_A4928);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_16FDC(*(void *)(v0 + v8 + 80), *(void *)(v0 + v8 + 88), *(unsigned char *)(v0 + v8 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v0 + v8 + *(int *)(v5 + 72);
  uint64_t v16 = sub_76070();
  uint64_t v17 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v8 + v9, v2 | v7 | 7);
}

uint64_t sub_72784()
{
  return sub_7279C((uint64_t (*)(unint64_t, uint64_t))sub_6F030);
}

uint64_t sub_7279C(uint64_t (*a1)(unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for AppsListView() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for Application() - 8);
  uint64_t v6 = v1 + ((v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a1(v1 + v3, v6);
}

BOOL sub_7287C(uint64_t a1)
{
  return sub_6D914(a1);
}

uint64_t sub_7289C()
{
  return sub_1508C(&qword_A4A60, &qword_A4A68);
}

BOOL sub_728D8(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

void *sub_728F0(void *result, void *a2)
{
  uint64_t v2 = result[1];
  uint64_t v3 = *result + v2;
  if (__OFADD__(*result, v2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = a2[1];
    BOOL v5 = __OFADD__(*a2, v4);
    uint64_t v6 = *a2 + v4;
    if (!v5) {
      return (void *)(v3 < v6);
    }
  }
  __break(1u);
  return result;
}

void *sub_7291C(void *result, void *a2)
{
  uint64_t v2 = a2[1];
  uint64_t v3 = *a2 + v2;
  if (__OFADD__(*a2, v2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = result[1];
    BOOL v5 = __OFADD__(*result, v4);
    uint64_t v6 = *result + v4;
    if (!v5) {
      return (void *)(v3 >= v6);
    }
  }
  __break(1u);
  return result;
}

void *sub_72948(void *result, void *a2)
{
  uint64_t v2 = result[1];
  uint64_t v3 = *result + v2;
  if (__OFADD__(*result, v2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = a2[1];
    BOOL v5 = __OFADD__(*a2, v4);
    uint64_t v6 = *a2 + v4;
    if (!v5) {
      return (void *)(v3 >= v6);
    }
  }
  __break(1u);
  return result;
}

void *sub_72974(void *result, void *a2)
{
  uint64_t v2 = a2[1];
  uint64_t v3 = *a2 + v2;
  if (__OFADD__(*a2, v2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = result[1];
    BOOL v5 = __OFADD__(*result, v4);
    uint64_t v6 = *result + v4;
    if (!v5) {
      return (void *)(v3 < v6);
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_729A0(void *a1)
{
  unint64_t v2 = (unint64_t)[a1 fixedSize];
  if ((v2 & 0x8000000000000000) != 0)
  {
    if (qword_A2C20 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_76200();
    sub_1A620(v3, (uint64_t)qword_A6A58);
    id v4 = a1;
    BOOL v5 = sub_761F0();
    os_log_type_t v6 = sub_76DC0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134217984;
      [v4 fixedSize];
      sub_76E20();

      _os_log_impl(&dword_0, v5, v6, "Unable to create fixed size from %llu", v7, 0xCu);
      swift_slowDealloc();
    }
    else
    {
    }
    unint64_t v2 = 0;
  }
  if (((unint64_t)[a1 dataSize] & 0x8000000000000000) != 0)
  {
    if (qword_A2C20 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_76200();
    sub_1A620(v8, (uint64_t)qword_A6A58);
    uint64_t v9 = a1;
    uint64_t v10 = sub_761F0();
    os_log_type_t v11 = sub_76DC0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 134217984;
      [v9 dataSize];
      sub_76E20();

      _os_log_impl(&dword_0, v10, v11, "Unable to create data size from %llu", v12, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      uint64_t v10 = v9;
    }
  }
  return v2;
}

uint64_t getEnumTagSinglePayload for ApplicationSize(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ApplicationSize(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ApplicationSize()
{
  return &type metadata for ApplicationSize;
}

unint64_t sub_72C94()
{
  unint64_t result = qword_A4A70;
  if (!qword_A4A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4A70);
  }
  return result;
}

uint64_t sub_72CE8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_763C0();
  *a1 = v3;
  return result;
}

uint64_t sub_72D14()
{
  return sub_763D0();
}

uint64_t sub_72D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v28 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v30 = *(void *)(a1 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 16);
  uint64_t KeyPath = swift_getKeyPath();
  sub_16F10(v4, v5, v7);
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_76520();
  sub_7303C((void *)a1, (uint64_t)v31);
  char v34 = 1;
  *(_OWORD *)((char *)&v33[9] + 7) = v31[9];
  *(_OWORD *)((char *)&v33[10] + 7) = v31[10];
  *(_OWORD *)((char *)&v33[11] + 7) = v31[11];
  *(void *)((char *)&v33[12] + 7) = v32;
  *(_OWORD *)((char *)&v33[5] + 7) = v31[5];
  *(_OWORD *)((char *)&v33[6] + 7) = v31[6];
  *(_OWORD *)((char *)&v33[7] + 7) = v31[7];
  *(_OWORD *)((char *)&v33[8] + 7) = v31[8];
  *(_OWORD *)((char *)&v33[1] + 7) = v31[1];
  *(_OWORD *)((char *)&v33[2] + 7) = v31[2];
  *(_OWORD *)((char *)&v33[3] + 7) = v31[3];
  *(_OWORD *)((char *)&v33[4] + 7) = v31[4];
  *(_OWORD *)((char *)v33 + 7) = v31[0];
  long long v35 = (unint64_t)v8;
  v36[0] = 1;
  long long v9 = v33[8];
  *(_OWORD *)&v36[145] = v33[9];
  long long v10 = v33[9];
  *(_OWORD *)&v36[161] = v33[10];
  long long v11 = v33[10];
  *(_OWORD *)&v36[177] = v33[11];
  *(_OWORD *)&v36[192] = *(_OWORD *)((char *)&v33[11] + 15);
  long long v12 = v33[4];
  *(_OWORD *)&v36[81] = v33[5];
  long long v13 = v33[5];
  *(_OWORD *)&v36[97] = v33[6];
  long long v14 = v33[6];
  *(_OWORD *)&v36[113] = v33[7];
  long long v15 = v33[7];
  *(_OWORD *)&v36[129] = v33[8];
  long long v16 = v33[0];
  *(_OWORD *)&v36[17] = v33[1];
  long long v17 = v33[1];
  *(_OWORD *)&v36[33] = v33[2];
  long long v18 = v33[2];
  *(_OWORD *)&v36[49] = v33[3];
  long long v19 = v33[3];
  *(_OWORD *)&v36[65] = v33[4];
  *(_OWORD *)&v36[1] = v33[0];
  *(_OWORD *)&v38[167] = *(_OWORD *)&v36[144];
  *(_OWORD *)&v38[183] = *(_OWORD *)&v36[160];
  *(_OWORD *)&v38[199] = *(_OWORD *)&v36[176];
  *(_OWORD *)&v38[215] = *(_OWORD *)((char *)&v33[11] + 15);
  *(_OWORD *)&v38[103] = *(_OWORD *)&v36[80];
  *(_OWORD *)&v38[119] = *(_OWORD *)&v36[96];
  *(_OWORD *)&v38[135] = *(_OWORD *)&v36[112];
  *(_OWORD *)&v38[151] = *(_OWORD *)&v36[128];
  *(_OWORD *)&v38[39] = *(_OWORD *)&v36[16];
  *(_OWORD *)&v38[55] = *(_OWORD *)&v36[32];
  *(_OWORD *)&v38[71] = *(_OWORD *)&v36[48];
  *(_OWORD *)&v38[87] = *(_OWORD *)&v36[64];
  *(_OWORD *)&unsigned char v38[7] = (unint64_t)v8;
  *(_OWORD *)&v38[23] = *(_OWORD *)v36;
  long long v20 = *(_OWORD *)&v38[160];
  *(_OWORD *)(a2 + 233) = *(_OWORD *)&v38[176];
  long long v21 = *(_OWORD *)&v38[208];
  *(_OWORD *)(a2 + 249) = *(_OWORD *)&v38[192];
  *(_OWORD *)(a2 + 265) = v21;
  long long v22 = *(_OWORD *)&v38[96];
  *(_OWORD *)(a2 + 169) = *(_OWORD *)&v38[112];
  long long v23 = *(_OWORD *)&v38[144];
  *(_OWORD *)(a2 + 185) = *(_OWORD *)&v38[128];
  *(_OWORD *)(a2 + 201) = v23;
  *(_OWORD *)(a2 + 217) = v20;
  long long v24 = *(_OWORD *)&v38[32];
  *(_OWORD *)(a2 + 105) = *(_OWORD *)&v38[48];
  long long v25 = *(_OWORD *)&v38[80];
  *(_OWORD *)(a2 + 121) = *(_OWORD *)&v38[64];
  *(_OWORD *)(a2 + 137) = v25;
  *(_OWORD *)(a2 + 153) = v22;
  long long v26 = *(_OWORD *)&v38[16];
  *(_OWORD *)(a2 + 57) = *(_OWORD *)v38;
  *(_OWORD *)(a2 + 73) = v26;
  *(_OWORD *)(a2 + 89) = v24;
  long long v51 = v10;
  long long v52 = v11;
  v53[0] = v33[11];
  *(_OWORD *)((char *)v53 + 15) = *(_OWORD *)((char *)&v33[11] + 15);
  long long v47 = v13;
  long long v48 = v14;
  long long v49 = v15;
  long long v50 = v9;
  long long v43 = v17;
  long long v44 = v18;
  long long v45 = v19;
  long long v46 = v12;
  char v39 = 0;
  char v37 = 1;
  *(void *)a2 = KeyPath;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v5;
  *(unsigned char *)(a2 + 32) = v7;
  *(void *)(a2 + 40) = v30;
  *(void *)(a2 + 48) = v6;
  *(unsigned char *)(a2 + 56) = 3;
  *(void *)(a2 + 280) = *(void *)&v38[223];
  *(void *)(a2 + 288) = 0;
  *(unsigned char *)(a2 + 296) = 1;
  v40[0] = v8;
  v40[1] = 0;
  char v41 = 1;
  long long v42 = v16;
  sub_46ABC(KeyPath, 0);
  sub_16F10(v28, v5, v7);
  swift_bridgeObjectRetain();
  sub_745C4((uint64_t)&v35);
  sub_7474C((uint64_t)v40);
  sub_46AC8(KeyPath, 0);
  sub_16FDC(v28, v5, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_7303C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = sub_764D0();
  sub_732B4((uint64_t)a1, (uint64_t)&v31);
  uint64_t v27 = v32;
  uint64_t v28 = v31;
  uint64_t v4 = v34;
  uint64_t v26 = v33;
  uint64_t v29 = v34;
  uint64_t v5 = v35;
  char v25 = v36;
  uint64_t v24 = v37;
  uint64_t v20 = sub_76520();
  sub_733E8(a1, &v31);
  unint64_t v7 = v31;
  uint64_t v6 = v32;
  uint64_t v12 = v32;
  uint64_t v13 = v31;
  uint64_t v8 = v34;
  uint64_t v9 = v35;
  uint64_t v14 = v34;
  uint64_t v15 = v35;
  uint64_t v22 = v36;
  uint64_t v23 = v33;
  uint64_t v18 = v38;
  uint64_t v19 = v37;
  uint64_t v30 = sub_76670();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = sub_76800();
  uint64_t v10 = swift_getKeyPath();
  LOBYTE(v31) = 1;
  char v40 = v25;
  char v39 = 1;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = v28;
  *(void *)(a2 + 32) = v27;
  *(void *)(a2 + 40) = v26;
  *(void *)(a2 + 48) = v4;
  *(void *)(a2 + 56) = v5;
  *(unsigned char *)(a2 + 64) = v25;
  *(void *)(a2 + 72) = v24;
  *(void *)(a2 + 80) = v20;
  *(void *)(a2 + 88) = 0;
  *(unsigned char *)(a2 + 96) = 1;
  *(void *)(a2 + 104) = v7;
  *(void *)(a2 + 112) = v6;
  *(void *)(a2 + 120) = v23;
  *(void *)(a2 + 128) = v8;
  *(void *)(a2 + 136) = v9;
  *(void *)(a2 + 144) = v22;
  *(void *)(a2 + 152) = v19;
  *(void *)(a2 + 160) = v18;
  *(void *)(a2 + 168) = KeyPath;
  *(void *)(a2 + 176) = v30;
  *(void *)(a2 + 184) = v10;
  *(void *)(a2 + 192) = v17;
  sub_746B8(v28);
  sub_16E5C(v29, v5, v25);
  swift_bridgeObjectRetain();
  sub_74708(v13, v12, v23, v14);
  sub_74708(v15, v22, v19, v18);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_74890(v13, v12, v23, v14);
  sub_74890(v15, v22, v19, v18);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_74844(v28);
  sub_150D0(v29, v5, v25);

  return swift_bridgeObjectRelease();
}

uint64_t sub_732B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 72))
  {
    uint64_t v3 = sub_76810();
    uint64_t v5 = sub_76800();
    uint64_t KeyPath = swift_getKeyPath();
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t KeyPath = 0;
    uint64_t v5 = 0;
  }
  sub_15038();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_766D0();
  uint64_t v8 = v7;
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = KeyPath;
  char v10 = v9 & 1;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v7;
  *(unsigned char *)(a2 + 40) = v9 & 1;
  *(void *)(a2 + 48) = v11;
  sub_746B8(v3);
  sub_16E5C(v6, v8, v10);
  swift_bridgeObjectRetain();
  sub_150D0(v6, v8, v10);
  swift_bridgeObjectRelease();
  return sub_74844(v3);
}

uint64_t sub_733E8@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v4 = a1[11];
  if (!v4)
  {
LABEL_8:
    uint64_t v7 = 0;
    unint64_t v11 = 0;
    uint64_t v9 = 0;
    unint64_t v12 = a1[8];
    if (!v12) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = a1[10] & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    unint64_t v4 = 0;
    goto LABEL_8;
  }
  sub_15038();
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_766D0();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  unint64_t v11 = v10 & 1;
  unint64_t v12 = a1[8];
  if (!v12)
  {
LABEL_6:
    uint64_t v13 = 0;
LABEL_14:
    unint64_t v19 = 0;
    uint64_t v17 = 0;
    goto LABEL_15;
  }
LABEL_9:
  uint64_t v14 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    uint64_t v14 = a1[7] & 0xFFFFFFFFFFFFLL;
  }
  if (!v14)
  {
    uint64_t v13 = 0;
    unint64_t v12 = 0;
    goto LABEL_14;
  }
  sub_15038();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_766D0();
  unint64_t v12 = v15;
  uint64_t v17 = v16;
  unint64_t v19 = v18 & 1;
LABEL_15:
  *a2 = v4;
  a2[1] = v7;
  a2[2] = v11;
  a2[3] = v9;
  a2[4] = v13;
  a2[5] = v12;
  a2[6] = v19;
  a2[7] = v17;
  sub_74708(v4, v7, v11, v9);
  sub_74708(v13, v12, v19, v17);
  sub_74890(v13, v12, v19, v17);
  return sub_74890(v4, v7, v11, v9);
}

void *sub_73578@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[3];
  void v8[2] = v1[2];
  v8[3] = v3;
  long long v4 = v1[5];
  v8[4] = v1[4];
  v8[5] = v4;
  long long v5 = v1[1];
  v8[0] = *v1;
  v8[1] = v5;
  uint64_t v6 = sub_764E0();
  sub_72D3C((uint64_t)v8, (uint64_t)__src);
  memcpy(&v10[7], __src, 0x129uLL);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = 0x4030000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  return memcpy((void *)(a1 + 17), v10, 0x130uLL);
}

uint64_t STUIAppHeaderCell.refreshCellContents(with:)()
{
  v1[3] = sub_14F50(&qword_A4A78);
  v1[4] = sub_1508C(&qword_A4A80, &qword_A4A78);
  sub_73BA8(v1);
  sub_14F50(&qword_A4A88);
  sub_73C0C();
  sub_765D0();
  return sub_76DE0();
}

void sub_736C8(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    if ([a1 propertyForKey:STStorageAppKey])
    {
      sub_76E80();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v50, 0, sizeof(v50));
    }
    sub_749DC((uint64_t)v50, (uint64_t)v51);
    if (v52)
    {
      sub_74AA4();
      if (swift_dynamicCast())
      {
        id v3 = [v49 bundleIdentifier];
        uint64_t v4 = sub_76C10();
        uint64_t v6 = v5;

        if (v4 == 0xD000000000000010 && v6 == 0x8000000000085F40) {
          goto LABEL_12;
        }
        char v7 = sub_77050();
        swift_bridgeObjectRelease();
        int v8 = 0;
        if (v7) {
          goto LABEL_13;
        }
        id v9 = [v49 bundleIdentifier];
        uint64_t v10 = sub_76C10();
        uint64_t v12 = v11;

        if (v10 == 0xD000000000000019 && v12 == 0x8000000000085F60)
        {
LABEL_12:
          swift_bridgeObjectRelease();
          int v8 = 0;
        }
        else
        {
          int v34 = sub_77050();
          swift_bridgeObjectRelease();
          int v8 = v34 ^ 1;
        }
LABEL_13:
        if ([v49 isDemoted])
        {
          id v13 = [v49 bundleIdentifier];
          uint64_t v14 = sub_76C10();
          uint64_t v16 = v15;

          if (v14 == 0xD000000000000010 && v16 == 0x8000000000085F40 || (sub_77050() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            int64x2_t v17 = vdupq_n_s64(3uLL);
            v17.i64[0] = 0x8000000000086090;
            int64x2_t v46 = v17;
            unint64_t v48 = 0xD000000000000022;
            unint64_t v45 = 0xD000000000000027;
            char v18 = "gs:[com.apple.graphic-icon.health-data]";
LABEL_27:
            unint64_t v47 = (unint64_t)(v18 - 32) | 0x8000000000000000;
            goto LABEL_28;
          }
          if (v14 == 0xD000000000000019 && v16 == 0x8000000000085F60)
          {
            swift_bridgeObjectRelease();
LABEL_26:
            int64x2_t v36 = vdupq_n_s64(3uLL);
            v36.i64[0] = 0x8000000000085FC0;
            int64x2_t v46 = v36;
            unint64_t v48 = 0xD000000000000024;
            unint64_t v45 = 0xD000000000000029;
            char v18 = "gs:[com.apple.graphic-icon.photo-library]";
            goto LABEL_27;
          }
          char v35 = sub_77050();
          swift_bridgeObjectRelease();
          if (v35) {
            goto LABEL_26;
          }
        }
        id v30 = [v49 appIdentifier];
        uint64_t v31 = sub_76C10();
        unint64_t v33 = v32;

        swift_bridgeObjectRetain();
        unint64_t v47 = v33;
        unint64_t v48 = v31;
        int64x2_t v46 = (int64x2_t)v33;
        unint64_t v45 = v31;
LABEL_28:
        id v37 = [v49 name];
        uint64_t v22 = sub_76C10();
        uint64_t v23 = v38;

        id v39 = [v49 vendorName];
        if (v39)
        {
          char v40 = v39;
          uint64_t v24 = sub_76C10();
          unint64_t v25 = v41;
        }
        else
        {
          uint64_t v24 = 0;
          unint64_t v25 = 0xE000000000000000;
        }
        uint64_t v26 = [v49 isDemoted] & v8;
        if ([v49 isApple]
          || (id v42 = [v49 versionString]) == 0)
        {

          uint64_t v27 = 0;
          uint64_t v28 = 0;
        }
        else
        {
          long long v43 = v42;
          uint64_t v27 = sub_76C10();
          uint64_t v28 = v44;
        }
        unint64_t v20 = v45;
        unint64_t v21 = v47;
        unint64_t v19 = v48;
        int64x2_t v29 = v46;
        goto LABEL_36;
      }
    }
    else
    {
      sub_74A44((uint64_t)v51);
    }
    unint64_t v19 = 0;
    unint64_t v20 = 0;
    unint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    unint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    int64x2_t v29 = 0uLL;
LABEL_36:
    *(void *)a2 = v19;
    *(int64x2_t *)(a2 + 8) = v29;
    *(void *)(a2 + 24) = v20;
    *(void *)(a2 + 32) = v21;
    *(void *)(a2 + 40) = v22;
    *(void *)(a2 + 48) = v23;
    *(void *)(a2 + 56) = v24;
    *(void *)(a2 + 64) = v25;
    *(void *)(a2 + 72) = v26;
    *(void *)(a2 + 80) = v27;
    *(void *)(a2 + 88) = v28;
    return;
  }
  __break(1u);
}

void sub_73BA0(uint64_t a1@<X8>)
{
  sub_736C8(*(void **)(v1 + 16), a1);
}

uint64_t *sub_73BA8(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_73C0C()
{
  unint64_t result = qword_A4A90;
  if (!qword_A4A90)
  {
    sub_14F94(&qword_A4A88);
    sub_73C80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4A90);
  }
  return result;
}

unint64_t sub_73C80()
{
  unint64_t result = qword_A4A98;
  if (!qword_A4A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4A98);
  }
  return result;
}

id STUIAppHeaderCell.__allocating_init(style:reuseIdentifier:specifier:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  if (a3)
  {
    NSString v8 = sub_76BE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  id v9 = [objc_allocWithZone(v5) initWithStyle:a1 reuseIdentifier:v8 specifier:a4];

  return v9;
}

id STUIAppHeaderCell.init(style:reuseIdentifier:specifier:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    NSString v7 = sub_76BE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for STUIAppHeaderCell();
  id v8 = objc_msgSendSuper2(&v11, "initWithStyle:reuseIdentifier:specifier:", a1, v7, a4);

  id v9 = v8;
  if (v9) {

  }
  return v9;
}

uint64_t type metadata accessor for STUIAppHeaderCell()
{
  return self;
}

id STUIAppHeaderCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a3)
  {
    NSString v6 = sub_76BE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithStyle:a1 reuseIdentifier:v6];

  return v7;
}

id STUIAppHeaderCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    NSString v5 = sub_76BE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for STUIAppHeaderCell();
  id v6 = objc_msgSendSuper2(&v8, "initWithStyle:reuseIdentifier:", a1, v5);

  return v6;
}

id STUIAppHeaderCell.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

id STUIAppHeaderCell.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for STUIAppHeaderCell();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id STUIAppHeaderCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for STUIAppHeaderCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t destroy for AppIconHeaderView(uint64_t a1)
{
  sub_16FDC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppIconHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_16F10(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppIconHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_16F10(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_16FDC(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for AppIconHeaderView(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for AppIconHeaderView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_16FDC(v5, v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppIconHeaderView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppIconHeaderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppIconHeaderView()
{
  return &type metadata for AppIconHeaderView;
}

uint64_t sub_74554()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_74570@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_763C0();
  *a1 = v3;
  return result;
}

uint64_t sub_7459C()
{
  return sub_763D0();
}

uint64_t sub_745C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  char v4 = *(unsigned char *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v8 = *(void *)(a1 + 152);
  uint64_t v9 = *(void *)(a1 + 160);
  uint64_t v12 = *(void *)(a1 + 176);
  uint64_t v13 = *(void *)(a1 + 168);
  uint64_t v11 = *(void *)(a1 + 184);
  sub_746B8(*(void *)(a1 + 48));
  sub_16E5C(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_74708(v5, v6, v7, v8);
  sub_74708(v9, v13, v12, v11);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_746B8(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_74708(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_16E5C(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_7474C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  char v4 = *(unsigned char *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v8 = *(void *)(a1 + 152);
  uint64_t v9 = *(void *)(a1 + 160);
  uint64_t v12 = *(void *)(a1 + 176);
  uint64_t v13 = *(void *)(a1 + 168);
  uint64_t v11 = *(void *)(a1 + 184);
  sub_74844(*(void *)(a1 + 48));
  sub_150D0(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_74890(v5, v6, v7, v8);
  sub_74890(v9, v13, v12, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_74844(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_74890(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_150D0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_748D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_763E0();
  *a1 = result;
  return result;
}

uint64_t sub_74900()
{
  return sub_763F0();
}

uint64_t sub_7492C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_76440();
  *a1 = result;
  return result;
}

uint64_t sub_74958()
{
  return sub_76450();
}

uint64_t sub_74984@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_763E0();
  *a1 = result;
  return result;
}

uint64_t sub_749B0()
{
  return sub_763F0();
}

uint64_t sub_749DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14F50(&qword_A4AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_74A44(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A4AC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_74AA4()
{
  unint64_t result = qword_A4AD0;
  if (!qword_A4AD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_A4AD0);
  }
  return result;
}

uint64_t sub_74AE4()
{
  return sub_1508C(&qword_A4AD8, &qword_A4AE0);
}

void sub_74B80()
{
  uint64_t v1 = sub_762C0();
  uint64_t v106 = *(void *)(v1 - 8);
  uint64_t v107 = v1;
  __chkstk_darwin(v1);
  uint64_t v105 = (char *)v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_764C0();
  uint64_t v103 = *(void *)(v3 - 8);
  uint64_t v104 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DetailView();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (void *)((char *)v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_14F50(&qword_A4B20);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_14F50(&qword_A4B28);
  uint64_t v99 = *(void *)(v13 - 8);
  uint64_t v100 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_14F50(&qword_A4B30);
  uint64_t v101 = *(void *)(v16 - 8);
  uint64_t v102 = v16;
  __chkstk_darwin(v16);
  char v18 = (char *)v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_14F50(&qword_A4B38);
  __chkstk_darwin(v19 - 8);
  uint64_t v98 = (char *)v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v21 = (objc_class *)type metadata accessor for AppDetailViewWrapper();
  v113.receiver = v0;
  v113.super_class = v21;
  objc_msgSendSuper2(&v113, "viewDidLoad");
  id v97 = v0;
  uint64_t v22 = &v0[OBJC_IVAR____TtC17StorageSettingsUI20AppDetailViewWrapper_model];
  sub_6A894((uint64_t)&v0[OBJC_IVAR____TtC17StorageSettingsUI20AppDetailViewWrapper_model], (uint64_t)v9 + *(int *)(v7 + 28), (uint64_t (*)(void))type metadata accessor for Application);
  type metadata accessor for StorageShared();
  sub_758F0((unint64_t *)&qword_A2D88, (void (*)(uint64_t))type metadata accessor for StorageShared);
  uint64_t *v9 = sub_76390();
  v9[1] = v23;
  uint64_t v24 = (char *)v9 + *(int *)(v7 + 32);
  char v112 = 0;
  sub_76870();
  unint64_t v25 = v109;
  char *v24 = v108;
  *((void *)v24 + 1) = v25;
  if (qword_A2C28 != -1) {
    swift_once();
  }
  uint64_t v26 = (void *)qword_A6A70;
  uint64_t v27 = sub_76210();
  sub_6A894((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DetailView);
  uint64_t v28 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  uint64_t *v28 = v27;
  v28[1] = (uint64_t)v26;
  id v29 = v26;
  sub_75998((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DetailView);
  id v30 = (void *)*((void *)v22 + 3);
  uint64_t v96 = *((void *)v22 + 2);
  uint64_t v108 = v96;
  unint64_t v109 = v30;
  v95[1] = v30;
  unint64_t v31 = sub_75844();
  unint64_t v32 = sub_15038();
  sub_76780();
  sub_75938((uint64_t)v12);
  uint64_t v34 = v103;
  uint64_t v33 = v104;
  (*(void (**)(char *, void, uint64_t))(v103 + 104))(v5, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v104);
  uint64_t v108 = v10;
  unint64_t v109 = &type metadata for String;
  unint64_t v110 = v31;
  unint64_t v111 = v32;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v36 = v100;
  sub_767C0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v33);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v15, v36);
  id v37 = v105;
  sub_762B0();
  uint64_t v108 = v36;
  unint64_t v109 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v38 = v102;
  sub_76750();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v37, v107);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v18, v38);
  id v39 = objc_allocWithZone((Class)sub_14F50((uint64_t *)&unk_A4B50));
  char v40 = (void *)sub_76550();
  id v41 = [v40 view];
  if (!v41)
  {
    __break(1u);
    goto LABEL_19;
  }
  id v42 = v41;
  id v43 = v97;
  id v44 = [v97 view];
  if (!v44)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v45 = v44;
  [v44 bounds];
  double v47 = v46;
  double v49 = v48;
  double v51 = v50;
  double v53 = v52;

  objc_msgSend(v42, "setFrame:", v47, v49, v51, v53);
  id v54 = [v40 view];
  if (!v54)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v55 = v54;
  [v54 setTranslatesAutoresizingMaskIntoConstraints:0];

  [v43 addChildViewController:v40];
  id v56 = [v43 view];
  if (!v56)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v57 = v56;
  id v58 = [v40 view];
  if (!v58)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v59 = v58;
  [v57 addSubview:v58];

  [v40 didMoveToParentViewController:v43];
  id v60 = [v43 navigationItem];
  NSString v61 = sub_76BE0();
  [v60 setTitle:v61];

  id v62 = [v43 navigationItem];
  [v62 setLargeTitleDisplayMode:2];

  id v63 = [v43 view];
  if (!v63)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v64 = v63;
  sub_14F50(&qword_A3970);
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_7D4D0;
  id v66 = [v43 view];
  if (!v66)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v67 = v66;
  id v68 = [v66 topAnchor];

  id v69 = [v40 view];
  if (!v69)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v70 = v69;
  id v71 = [v69 topAnchor];

  id v72 = [v68 constraintEqualToAnchor:v71];
  *(void *)(v65 + 32) = v72;
  id v73 = [v43 view];
  if (!v73)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v74 = v73;
  id v75 = [v73 leadingAnchor];

  id v76 = [v40 view];
  if (!v76)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v77 = v76;
  id v78 = [v76 leadingAnchor];

  id v79 = [v75 constraintEqualToAnchor:v78];
  *(void *)(v65 + 40) = v79;
  id v80 = [v43 view];
  if (!v80)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v81 = v80;
  id v82 = [v80 bottomAnchor];

  id v83 = [v40 view];
  if (!v83)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v84 = v83;
  id v85 = [v83 bottomAnchor];

  id v86 = [v82 constraintEqualToAnchor:v85];
  *(void *)(v65 + 48) = v86;
  id v87 = [v43 view];
  if (!v87)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  unint64_t v88 = v87;
  id v89 = [v87 trailingAnchor];

  id v90 = [v40 view];
  if (v90)
  {
    uint64_t v91 = v90;
    id v92 = [v90 trailingAnchor];

    id v93 = [v89 constraintEqualToAnchor:v92];
    *(void *)(v65 + 56) = v93;
    uint64_t v108 = v65;
    sub_76CC0();
    sub_40658();
    Class isa = sub_76CB0().super.isa;
    swift_bridgeObjectRelease();
    [v64 addConstraints:isa];

    return;
  }
LABEL_31:
  __break(1u);
}

id sub_756F0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppDetailViewWrapper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_75760()
{
  return type metadata accessor for AppDetailViewWrapper();
}

uint64_t type metadata accessor for AppDetailViewWrapper()
{
  uint64_t result = qword_A4B10;
  if (!qword_A4B10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_757B4()
{
  uint64_t result = type metadata accessor for Application();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_75844()
{
  unint64_t result = qword_A4B40;
  if (!qword_A4B40)
  {
    sub_14F94(&qword_A4B20);
    sub_758F0(&qword_A4B48, (void (*)(uint64_t))type metadata accessor for DetailView);
    sub_405FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_A4B40);
  }
  return result;
}

uint64_t sub_758F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_75938(uint64_t a1)
{
  uint64_t v2 = sub_14F50(&qword_A4B20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_75998(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_759F8(uint64_t a1, void *a2)
{
  [*(id *)(a1 + 32) name];
  objc_claimAutoreleasedReturnValue();
  uint64_t v4 = [(id)sub_BE78() description];
  [a2 code];
  sub_BE2C();
  _os_log_error_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Application demote failed for %@: %{public}@ (%{public}d)", v5, 0x1Cu);
}

void sub_75AB4()
{
  *(_WORD *)uint64_t v0 = 0;
  _os_log_debug_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Canceled existing install coordinator prior to demote", v0, 2u);
}

void sub_75AFC(void *a1)
{
  unint64_t v1 = [a1 name];
  sub_BE6C();
  sub_BDF8(&dword_0, &_os_log_default, v2, "Demoting app: %@", v3, v4, v5, v6, v7);
}

void sub_75B84(id *a1)
{
  unint64_t v1 = [*a1 name];
  sub_BE6C();
  sub_BDF8(&dword_0, &_os_log_default, v2, "Application demote completed: %@", v3, v4, v5, v6, v7);
}

void sub_75C10(void *a1)
{
  unint64_t v1 = [a1 name];
  sub_BE6C();
  sub_BDF8(&dword_0, &_os_log_default, v2, "Restoring app: %@", v3, v4, v5, v6, v7);
}

void sub_75C98(id *a1)
{
  unint64_t v1 = [*a1 name];
  sub_BE6C();
  sub_BDF8(&dword_0, &_os_log_default, v2, "Application restore completed: %@", v3, v4, v5, v6, v7);
}

void sub_75D24(void *a1)
{
  [a1 code];
  unint64_t v1 = [(id)sub_BE78() description];
  sub_BE14();
  sub_BE50(&dword_0, &_os_log_default, v2, "Application restore failed (%{public}d): %{public}@", v3, v4, v5, v6, v7);
}

void sub_75DB8(void *a1)
{
  [a1 code];
  unint64_t v1 = [(id)sub_BE78() description];
  sub_BE14();
  sub_BE50(&dword_0, &_os_log_default, v2, "Error %{public}d removing video asset: %{public}@", v3, v4, v5, v6, v7);
}

void sub_75E4C(void *a1)
{
  [a1 code];
  unint64_t v1 = [(id)sub_BE78() description];
  sub_BE14();
  sub_BE50(&dword_0, &_os_log_default, v2, "Error %{public}d removing item at URL: %{public}@", v3, v4, v5, v6, v7);
}

uint64_t sub_75EE0()
{
  return static CharacterSet.whitespaces.getter();
}

uint64_t sub_75EF0()
{
  return type metadata accessor for CharacterSet();
}

uint64_t sub_75F00()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_75F10()
{
  return type metadata accessor for Notification();
}

uint64_t sub_75F20()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t sub_75F30()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t sub_75F40()
{
  return URLComponents.queryItems.setter();
}

uint64_t sub_75F50()
{
  return URLComponents.url.getter();
}

uint64_t sub_75F60()
{
  return URLComponents.host.setter();
}

uint64_t sub_75F70()
{
  return URLComponents.scheme.setter();
}

uint64_t sub_75F80()
{
  return URLComponents.init()();
}

uint64_t sub_75F90()
{
  return type metadata accessor for URLComponents();
}

uint64_t sub_75FA0()
{
  return static SortComparator<>.localized.getter();
}

uint64_t sub_75FB0()
{
  return SortDescriptor.init<A>(_:order:)();
}

uint64_t sub_75FC0()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_75FD0()
{
  return LocalizedStringResource.init(stringInterpolation:)();
}

uint64_t sub_75FE0()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_75FF0()
{
  return URL.init(fileURLWithPath:)();
}

void sub_76000(NSURL *retstr@<X8>)
{
}

uint64_t sub_76010()
{
  return URL.init(string:)();
}

uint64_t sub_76020()
{
  return type metadata accessor for URL();
}

uint64_t sub_76030()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_76040()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_76050()
{
  return static Date.now.getter();
}

uint64_t sub_76060()
{
  return Date.lastUsedDateFormatted.getter();
}

uint64_t sub_76070()
{
  return type metadata accessor for Date();
}

uint64_t sub_76080()
{
  return type metadata accessor for Locale();
}

uint64_t sub_76090()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_760A0()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t sub_760B0()
{
  return ObservationRegistrar.didSet<A, B>(_:keyPath:)();
}

uint64_t sub_760C0()
{
  return ObservationRegistrar.willSet<A, B>(_:keyPath:)();
}

uint64_t sub_760D0()
{
  return ObservationRegistrar.init()();
}

uint64_t sub_760E0()
{
  return type metadata accessor for ObservationRegistrar();
}

uint64_t sub_760F0()
{
  return isFeatureEnabled(_:)();
}

uint64_t sub_76100()
{
  return static AppDistributor.synchronousDistributorPriorityList.getter();
}

uint64_t sub_76110()
{
  return PreferencesControllerView.init(preferencesControllerRecipe:)();
}

uint64_t sub_76120()
{
  return type metadata accessor for PreferencesControllerView();
}

uint64_t sub_76130()
{
  return PreferencesControllerRecipe.init(viewController:)();
}

uint64_t sub_76140()
{
  return type metadata accessor for PreferencesControllerRecipe();
}

uint64_t sub_76150()
{
  return type metadata accessor for SettingsAppPrimaryNavigationMode();
}

uint64_t sub_76160()
{
  return AppendSettingsNavigationPathAction.callAsFunction<A>(_:)();
}

uint64_t sub_76170()
{
  return type metadata accessor for AppendSettingsNavigationPathAction();
}

uint64_t sub_76180()
{
  return AsyncIconImage.init<A, B>(icon:descriptor:transaction:content:placeholder:)();
}

uint64_t sub_76190()
{
  return AsyncIconImage.init<>(icon:descriptor:)();
}

uint64_t sub_761A0()
{
  return UTType.identifier.getter();
}

uint64_t sub_761B0()
{
  return static UTType._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_761C0()
{
  return type metadata accessor for UTType();
}

uint64_t sub_761D0()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_761E0()
{
  return Logger.storageUI.unsafeMutableAddressor();
}

uint64_t sub_761F0()
{
  return Logger.logObject.getter();
}

uint64_t sub_76200()
{
  return type metadata accessor for Logger();
}

uint64_t sub_76210()
{
  return static ObservableObject.environmentStore.getter();
}

uint64_t sub_76220()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t sub_76230()
{
  return Published.init(initialValue:)();
}

uint64_t sub_76240()
{
  return static Published.subscript.getter();
}

uint64_t sub_76250()
{
  return static Published.subscript.setter();
}

uint64_t sub_76260()
{
  return type metadata accessor for Published();
}

uint64_t sub_76270()
{
  return static ButtonRole.destructive.getter();
}

uint64_t sub_76280()
{
  return type metadata accessor for ButtonRole();
}

uint64_t sub_76290()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_762A0()
{
  return type metadata accessor for Environment.Content();
}

uint64_t sub_762B0()
{
  return static ToolbarRole.navigationStack.getter();
}

uint64_t sub_762C0()
{
  return type metadata accessor for ToolbarRole();
}

uint64_t sub_762D0()
{
  return ProgressView<>.init<>()();
}

uint64_t sub_762E0()
{
  return static ViewModifier._makeView(modifier:inputs:body:)();
}

uint64_t sub_762F0()
{
  return static ViewModifier._makeViewList(modifier:inputs:body:)();
}

uint64_t sub_76300()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_76310()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_76320()
{
  return type metadata accessor for _TaskModifier();
}

uint64_t sub_76330()
{
  return NavigationLink.init(destination:label:)();
}

uint64_t sub_76340()
{
  return type metadata accessor for NavigationLink();
}

uint64_t sub_76350()
{
  return MenuPickerStyle.init()();
}

uint64_t sub_76360()
{
  return type metadata accessor for MenuPickerStyle();
}

uint64_t sub_76370()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_76380()
{
  return EnvironmentObject.error()();
}

uint64_t sub_76390()
{
  return EnvironmentObject.init()();
}

uint64_t sub_763A0()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_763B0()
{
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_763C0()
{
  return EnvironmentValues.displayScale.getter();
}

uint64_t sub_763D0()
{
  return EnvironmentValues.displayScale.setter();
}

uint64_t sub_763E0()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t sub_763F0()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_76400()
{
  return EnvironmentValues.appendSettingsNavigationPath.getter();
}

uint64_t sub_76410()
{
  return EnvironmentValues.settingsAppPrimaryNavigationMode.getter();
}

uint64_t sub_76420()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_76430()
{
  return EnvironmentValues.symbolRenderingMode.setter();
}

uint64_t sub_76440()
{
  return EnvironmentValues.font.getter();
}

uint64_t sub_76450()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_76460()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_76470()
{
  return EnvironmentValues.textCase.setter();
}

uint64_t sub_76480()
{
  return EnvironmentValues.tintColor.getter();
}

uint64_t sub_76490()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t sub_764A0()
{
  return EnvironmentValues.init()();
}

uint64_t sub_764B0()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_764C0()
{
  return type metadata accessor for NavigationBarItem.TitleDisplayMode();
}

uint64_t sub_764D0()
{
  return static VerticalAlignment.firstTextBaseline.getter();
}

uint64_t sub_764E0()
{
  return static VerticalAlignment.center.getter();
}

uint64_t sub_764F0()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_76500()
{
  return static HorizontalAlignment.listRowSeparatorLeading.getter();
}

uint64_t sub_76510()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_76520()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_76530()
{
  return static SymbolRenderingMode.multicolor.getter();
}

uint64_t sub_76540()
{
  return type metadata accessor for SymbolRenderingMode();
}

uint64_t sub_76550()
{
  return UIHostingController.init(rootView:)();
}

uint64_t sub_76560()
{
  return type metadata accessor for _ConditionalContent.Storage();
}

uint64_t sub_76570()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_76580()
{
  return type metadata accessor for _ConditionalContent();
}

uint64_t sub_76590()
{
  return static PrimitiveButtonStyle<>.navigationLink.getter();
}

uint64_t sub_765A0()
{
  return type metadata accessor for PinnedScrollableViews();
}

uint64_t sub_765B0()
{
  return ContentUnavailableView.init(label:description:actions:)();
}

uint64_t sub_765C0()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t sub_765D0()
{
  return UIHostingConfiguration<>.init(content:)();
}

uint64_t sub_765E0()
{
  return type metadata accessor for AccessibilityAttachmentModifier();
}

uint64_t sub_765F0()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_76600()
{
  return static Edge.Set.top.getter();
}

uint64_t sub_76610()
{
  return static Edge.Set.bottom.getter();
}

uint64_t sub_76620()
{
  return Edge.Set.init(rawValue:)();
}

uint64_t sub_76630()
{
  return static Edge.Set.vertical.getter();
}

uint64_t sub_76640()
{
  return static Font.largeTitle.getter();
}

uint64_t sub_76650()
{
  return static Font.callout.getter();
}

uint64_t sub_76660()
{
  return static Font.caption.getter();
}

uint64_t sub_76670()
{
  return static Font.footnote.getter();
}

uint64_t sub_76680()
{
  return Form.init(content:)();
}

uint64_t sub_76690()
{
  return Text.foregroundColor(_:)();
}

uint64_t sub_766A0()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t sub_766B0()
{
  return type metadata accessor for Text.Case();
}

uint64_t sub_766C0()
{
  return Text.font(_:)();
}

uint64_t sub_766D0()
{
  return Text.init<A>(_:)();
}

uint64_t sub_766E0()
{
  return View.iconDrawsBorder(_:)();
}

uint64_t sub_766F0()
{
  return View.settingsListAppearance()();
}

uint64_t sub_76700()
{
  return View.emitNavigationEventOnAppearForSystemSetting(icon:title:localizedNavigationComponents:deepLink:)();
}

uint64_t sub_76710()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_76720()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_76730()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t sub_76740()
{
  return View.pickerStyle<A>(_:)();
}

uint64_t sub_76750()
{
  return View.toolbarRole(_:)();
}

uint64_t sub_76760()
{
  return View.swipeActions<A>(edge:allowsFullSwipe:content:)();
}

uint64_t sub_76770()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_76780()
{
  return View.navigationTitle<A>(_:)();
}

uint64_t sub_76790()
{
  return View.confirmationDialog<A, B, C, D>(_:isPresented:titleVisibility:presenting:actions:message:)();
}

uint64_t sub_767A0()
{
  return View.confirmationDialog<A, B, C>(_:isPresented:titleVisibility:actions:message:)();
}

uint64_t sub_767B0()
{
  return View.accessibilityIdentifier(_:)();
}

uint64_t sub_767C0()
{
  return View.navigationBarTitleDisplayMode(_:)();
}

uint64_t sub_767D0()
{
  return Color.init(uiColor:)();
}

uint64_t sub_767E0()
{
  return static Color.red.getter();
}

uint64_t sub_767F0()
{
  return static Color.blue.getter();
}

uint64_t sub_76800()
{
  return static Color.secondary.getter();
}

uint64_t sub_76810()
{
  return Image.init(systemName:)();
}

uint64_t sub_76820()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t sub_76830()
{
  return Image.init(_internalSystemName:)();
}

uint64_t sub_76840()
{
  return type metadata accessor for Image.Scale();
}

uint64_t sub_76850()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t sub_76860()
{
  return Label.init(title:icon:)();
}

uint64_t sub_76870()
{
  return State.init(wrappedValue:)();
}

uint64_t sub_76880()
{
  return State.wrappedValue.getter();
}

uint64_t sub_76890()
{
  return State.wrappedValue.setter();
}

uint64_t sub_768A0()
{
  return State.projectedValue.getter();
}

uint64_t sub_768B0()
{
  return type metadata accessor for State();
}

uint64_t sub_768C0()
{
  return Button.init(role:action:label:)();
}

uint64_t sub_768D0()
{
  return Button.init(action:label:)();
}

uint64_t sub_768E0()
{
  return Button<>.init<A>(_:role:action:)();
}

uint64_t sub_768F0()
{
  return Button<>.init(_:action:)();
}

uint64_t sub_76900()
{
  return Button<>.init<A>(_:action:)();
}

uint64_t sub_76910()
{
  return type metadata accessor for Button();
}

uint64_t sub_76920()
{
  return Picker<>.init<A>(_:selection:content:)();
}

uint64_t sub_76930()
{
  return AnyView.init<A>(_:)();
}

uint64_t sub_76940()
{
  return Binding.wrappedValue.getter();
}

uint64_t sub_76950()
{
  return Binding.projectedValue.getter();
}

uint64_t sub_76960()
{
  return Binding.init(get:set:)();
}

uint64_t sub_76970()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_76980()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_76990()
{
  return Section<>.init(header:content:)();
}

uint64_t sub_769A0()
{
  return Section<>.init(content:)();
}

uint64_t sub_769B0()
{
  return Section<>.init(footer:content:)();
}

uint64_t sub_769C0()
{
  return type metadata accessor for GridItem.Size();
}

uint64_t sub_769D0()
{
  return type metadata accessor for GridItem();
}

uint64_t sub_769E0()
{
  return GridItem.init(_:spacing:alignment:)();
}

uint64_t sub_769F0()
{
  return static Material.thin.getter();
}

uint64_t sub_76A00()
{
  return type metadata accessor for Material();
}

uint64_t sub_76A10()
{
  return static Alignment.center.getter();
}

uint64_t sub_76A20()
{
  return LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)();
}

uint64_t sub_76A30()
{
  return TextField<>.init(_:text:onEditingChanged:onCommit:)();
}

uint64_t sub_76A40()
{
  return static DispatchTime.now()();
}

uint64_t sub_76A50()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_76A60()
{
  return type metadata accessor for SettingsEventImage();
}

uint64_t sub_76A70()
{
  return StorageGaugeLegendView.init(capacity:categories:maxLines:)();
}

uint64_t sub_76A80()
{
  return type metadata accessor for StorageGaugeLegendView();
}

uint64_t sub_76A90()
{
  return StorageGaugeView.init(capacity:categories:available:onSelect:)();
}

uint64_t sub_76AA0()
{
  return type metadata accessor for StorageGaugeView();
}

uint64_t sub_76AB0()
{
  return static DeviceClass.current.getter();
}

uint64_t sub_76AC0()
{
  return GaugeCategory.init(id:localizedName:size:color:fillType:isSelectable:showSizeOverlay:sortOrderPriority:displayOrderPriority:)();
}

uint64_t sub_76AD0()
{
  return FollowupMonitor.shared.unsafeMutableAddressor();
}

uint64_t sub_76AE0()
{
  return static Volume.defaultUserVolumePlaceholder.getter();
}

uint64_t sub_76AF0()
{
  return Volume.defaultUserVolumeMountPath.unsafeMutableAddressor();
}

uint64_t sub_76B00()
{
  return Volume.init(mountURL:name:isUserVolume:capacity:used:)();
}

uint64_t sub_76B10()
{
  return type metadata accessor for Volume();
}

uint64_t sub_76B20()
{
  return TimeStats.init(initTime:startMonitoring:firstGathering:firstDisplay:recommendations:)();
}

uint64_t sub_76B30()
{
  return TimeStats.description.getter();
}

uint64_t sub_76B40()
{
  return type metadata accessor for TimeStats();
}

NSDictionary sub_76B50()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_76B60()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_76B70()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_76B80()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_76B90()
{
  return type metadata accessor for String.Comparator();
}

void sub_76BA0(Swift::String a1)
{
}

void sub_76BB0(Swift::String a1)
{
}

uint64_t sub_76BC0()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_76BD0()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

NSString sub_76BE0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_76BF0()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_76C00()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_76C10()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_76C20()
{
  return String.init(format:_:)();
}

uint64_t sub_76C30()
{
  return String.init<A>(describing:)();
}

uint64_t sub_76C40()
{
  return String.hash(into:)();
}

void sub_76C50(Swift::String a1)
{
}

uint64_t sub_76C60()
{
  return String.Iterator.next()().value._countAndFlagsBits;
}

Swift::Int sub_76C70()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_76C80()
{
  return Sequence.sorted<A>(using:)();
}

uint64_t sub_76C90()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_76CA0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_76CB0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_76CC0()
{
  return specialized Array._endMutation()();
}

uint64_t sub_76CD0()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_76CE0()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_76CF0()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_76D00()
{
  return Array<A>.total.getter();
}

uint64_t sub_76D10()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_76D20()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_76D30()
{
  return static MainActor.shared.getter();
}

uint64_t sub_76D40()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_76D50()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t sub_76D60()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_76D70()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_76D80()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_76D90()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_76DA0()
{
  return Set.Index._asCocoa.modify();
}

uint64_t sub_76DB0()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_76DC0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_76DD0()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_76DE0()
{
  return UITableViewCell.contentConfiguration.setter();
}

Swift::Int sub_76DF0(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_76E00()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_76E10()
{
  return type metadata accessor for Optional();
}

uint64_t sub_76E20()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_76E30()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_76E40()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t sub_76E50()
{
  return StringProtocol.localizedStandardContains<A>(_:)();
}

uint64_t sub_76E60()
{
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)();
}

uint64_t sub_76E70()
{
  return StringProtocol.range<A>(of:options:range:locale:)();
}

uint64_t sub_76E80()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_76E90()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_76EA0()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t sub_76EB0()
{
  return __CocoaSet.Index.handleBitPattern.getter();
}

uint64_t sub_76EC0()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t sub_76ED0()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t sub_76EE0()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_76EF0()
{
  return __CocoaSet.element(at:)();
}

uint64_t sub_76F00()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

Swift::Int sub_76F10(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_76F20()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_76F30()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_76F40()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_76F50()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_76F60()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_76F70(Swift::Int a1)
{
}

uint64_t sub_76F80()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_76F90()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_76FA0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_76FB0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_76FC0()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_76FD0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_76FE0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_76FF0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_77010(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

Swift::Int sub_77020(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_77030()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_77050()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_77060()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t sub_77070()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_77080()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_77090()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_770A0()
{
  return Int64.roundedToGB.getter();
}

uint64_t sub_770B0()
{
  return Int64.formattedSize.getter();
}

uint64_t sub_770C0()
{
  return Hasher.init(_seed:)();
}

void sub_770D0(Swift::UInt a1)
{
}

void sub_770E0(Swift::UInt8 a1)
{
}

void sub_770F0(Swift::UInt64 a1)
{
}

Swift::Int sub_77100()
{
  return Hasher._finalize()();
}

uint64_t sub_77110()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t BiomeLibrary()
{
  return _BiomeLibrary();
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return _CFPreferencesCopyValue(key, applicationID, userName, hostName);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

uint64_t CacheManagementEnumerateAssets()
{
  return _CacheManagementEnumerateAssets();
}

uint64_t CacheManagementRemove()
{
  return _CacheManagementRemove();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MGGetStringAnswer()
{
  return _MGGetStringAnswer();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

void NSLog(NSString *format, ...)
{
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

uint64_t PSBlankIconImage()
{
  return _PSBlankIconImage();
}

uint64_t PreferencesTableViewHeaderColor()
{
  return _PreferencesTableViewHeaderColor();
}

uint64_t PreferencesTableViewHeaderFont()
{
  return _PreferencesTableViewHeaderFont();
}

uint64_t STFormattedShortDate()
{
  return _STFormattedShortDate();
}

uint64_t STFormattedSize()
{
  return _STFormattedSize();
}

uint64_t STLog()
{
  return _STLog();
}

uint64_t STMSizeOfFileTree()
{
  return _STMSizeOfFileTree();
}

uint64_t STSizeOfSystemVolume()
{
  return _STSizeOfSystemVolume();
}

uint64_t STStorageDeviceKey()
{
  return _STStorageDeviceKey();
}

uint64_t STStorageIsInternalInstall()
{
  return _STStorageIsInternalInstall();
}

uint64_t ScreenScale()
{
  return _ScreenScale();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, id firstValue, ...)
{
  return __NSDictionaryOfVariableBindings(commaSeparatedKeysString, firstValue);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

dispatch_time_t dispatch_walltime(const timespec *when, int64_t delta)
{
  return _dispatch_walltime(when, delta);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_throwingResume()
{
  return _swift_continuation_throwingResume();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

int usleep(useconds_t a1)
{
  return _usleep(a1);
}

id objc_msgSend_ITunesUAudioQuery(void *a1, const char *a2, ...)
{
  return _[a1 ITunesUAudioQuery];
}

id objc_msgSend_UIImage(void *a1, const char *a2, ...)
{
  return _[a1 UIImage];
}

id objc_msgSend__setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setFont:");
}

id objc_msgSend__systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemImageNamed:");
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:style:handler:");
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateConstraints:");
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAction:");
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addFilterPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFilterPredicate:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_addOperations_waitUntilFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperations:waitUntilFinished:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:forControlEvents:");
}

id objc_msgSend_addTimer_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTimer:forMode:");
}

id objc_msgSend_albumTitle(void *a1, const char *a2, ...)
{
  return _[a1 albumTitle];
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertControllerWithTitle:message:preferredStyle:");
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_appIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 appIdentifier];
}

id objc_msgSend_appRecord(void *a1, const char *a2, ...)
{
  return _[a1 appRecord];
}

id objc_msgSend_appSize(void *a1, const char *a2, ...)
{
  return _[a1 appSize];
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _[a1 applicationState];
}

id objc_msgSend_apps(void *a1, const char *a2, ...)
{
  return _[a1 apps];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_artwork(void *a1, const char *a2, ...)
{
  return _[a1 artwork];
}

id objc_msgSend_ascender(void *a1, const char *a2, ...)
{
  return _[a1 ascender];
}

id objc_msgSend_assetURL(void *a1, const char *a2, ...)
{
  return _[a1 assetURL];
}

id objc_msgSend_audioPodcastsQuery(void *a1, const char *a2, ...)
{
  return _[a1 audioPodcastsQuery];
}

id objc_msgSend_audiobooksQuery(void *a1, const char *a2, ...)
{
  return _[a1 audiobooksQuery];
}

id objc_msgSend_blockOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockOperationWithBlock:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundleWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithURL:");
}

id objc_msgSend_buttonAction(void *a1, const char *a2, ...)
{
  return _[a1 buttonAction];
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithType:");
}

id objc_msgSend_cacheItemForQuery_withGroupingType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheItemForQuery:withGroupingType:");
}

id objc_msgSend_cacheItemForQuery_withGroupingType_splitByPropertyName_defaultPropertyValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheItemForQuery:withGroupingType:splitByPropertyName:defaultPropertyValue:");
}

id objc_msgSend_cancelCoordinatorForAppWithIdentity_withReason_client_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelCoordinatorForAppWithIdentity:withReason:client:completion:");
}

id objc_msgSend_cancelCoordinatorForAppWithIdentity_withReason_client_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelCoordinatorForAppWithIdentity:withReason:client:error:");
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPreviousPerformRequestsWithTarget:selector:object:");
}

id objc_msgSend_capabilities(void *a1, const char *a2, ...)
{
  return _[a1 capabilities];
}

id objc_msgSend_childApps(void *a1, const char *a2, ...)
{
  return _[a1 childApps];
}

id objc_msgSend_childItemCount(void *a1, const char *a2, ...)
{
  return _[a1 childItemCount];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_collectionForFolderItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionForFolderItem:");
}

id objc_msgSend_collectionWithItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionWithItems:");
}

id objc_msgSend_collections(void *a1, const char *a2, ...)
{
  return _[a1 collections];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_confirmationButtonTitle(void *a1, const char *a2, ...)
{
  return _[a1 confirmationButtonTitle];
}

id objc_msgSend_confirmationText(void *a1, const char *a2, ...)
{
  return _[a1 confirmationText];
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:");
}

id objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintsWithVisualFormat:options:metrics:views:");
}

id objc_msgSend_consumedDate(void *a1, const char *a2, ...)
{
  return _[a1 consumedDate];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_contentModificationDate(void *a1, const char *a2, ...)
{
  return _[a1 contentModificationDate];
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _[a1 contentView];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_createCollection(void *a1, const char *a2, ...)
{
  return _[a1 createCollection];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _[a1 currentLocale];
}

id objc_msgSend_darkGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 darkGrayColor];
}

id objc_msgSend_dateStringForAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateStringForAsset:");
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateConstraints:");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultMediaLibrary(void *a1, const char *a2, ...)
{
  return _[a1 defaultMediaLibrary];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_deleteAssets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAssets:");
}

id objc_msgSend_deleteButtonSpecifierWithName_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteButtonSpecifierWithName:target:action:");
}

id objc_msgSend_deleteItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteItems:");
}

id objc_msgSend_deleteMediaItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteMediaItems:");
}

id objc_msgSend_deleteURLItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteURLItems:");
}

id objc_msgSend_demoteAppToPlaceholderWithApplicationIdentity_forReason_waitForDeletion_ignoreRemovability_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "demoteAppToPlaceholderWithApplicationIdentity:forReason:waitForDeletion:ignoreRemovability:completion:");
}

id objc_msgSend_descender(void *a1, const char *a2, ...)
{
  return _[a1 descender];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_detailControllerClass(void *a1, const char *a2, ...)
{
  return _[a1 detailControllerClass];
}

id objc_msgSend_deviceMediaLibrary(void *a1, const char *a2, ...)
{
  return _[a1 deviceMediaLibrary];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_dictionaryWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjectsAndKeys:");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didMoveToParentViewController:");
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _[a1 displayName];
}

id objc_msgSend_docPluginsByID(void *a1, const char *a2, ...)
{
  return _[a1 docPluginsByID];
}

id objc_msgSend_docPluginsForApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "docPluginsForApp:");
}

id objc_msgSend_docPluginsForAppIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "docPluginsForAppIdentifier:");
}

id objc_msgSend_docsAndData(void *a1, const char *a2, ...)
{
  return _[a1 docsAndData];
}

id objc_msgSend_documentAppIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 documentAppIdentifiers];
}

id objc_msgSend_documentSize(void *a1, const char *a2, ...)
{
  return _[a1 documentSize];
}

id objc_msgSend_documentSpecifiersForApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentSpecifiersForApp:");
}

id objc_msgSend_documents(void *a1, const char *a2, ...)
{
  return _[a1 documents];
}

id objc_msgSend_downloadCompletionDate(void *a1, const char *a2, ...)
{
  return _[a1 downloadCompletionDate];
}

id objc_msgSend_downloadStartDate(void *a1, const char *a2, ...)
{
  return _[a1 downloadStartDate];
}

id objc_msgSend_editButton(void *a1, const char *a2, ...)
{
  return _[a1 editButton];
}

id objc_msgSend_editButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 editButtonItem];
}

id objc_msgSend_emptyGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 emptyGroupSpecifier];
}

id objc_msgSend_enableButtonTitle(void *a1, const char *a2, ...)
{
  return _[a1 enableButtonTitle];
}

id objc_msgSend_enableOptionForTip_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableOptionForTip:");
}

id objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_externDataPluginsByID(void *a1, const char *a2, ...)
{
  return _[a1 externDataPluginsByID];
}

id objc_msgSend_externDataSizeAppIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 externDataSizeAppIdentifiers];
}

id objc_msgSend_externalDataPluginsForAppIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "externalDataPluginsForAppIdentifier:");
}

id objc_msgSend_externalSizes(void *a1, const char *a2, ...)
{
  return _[a1 externalSizes];
}

id objc_msgSend_fileProviderTips(void *a1, const char *a2, ...)
{
  return _[a1 fileProviderTips];
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_fixed(void *a1, const char *a2, ...)
{
  return _[a1 fixed];
}

id objc_msgSend_fixed_docsAndData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixed:docsAndData:");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _[a1 font];
}

id objc_msgSend_fpDomain(void *a1, const char *a2, ...)
{
  return _[a1 fpDomain];
}

id objc_msgSend_fpDomains(void *a1, const char *a2, ...)
{
  return _[a1 fpDomains];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_generateBestRepresentationForRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateBestRepresentationForRequest:completionHandler:");
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getResourceValue:forKey:error:");
}

id objc_msgSend_groupSpecifierWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupSpecifierWithName:");
}

id objc_msgSend_headerButton(void *a1, const char *a2, ...)
{
  return _[a1 headerButton];
}

id objc_msgSend_hlsSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 hlsSpecifiers];
}

id objc_msgSend_hostingControllerWithParentController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostingControllerWithParentController:");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_imageWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithData:");
}

id objc_msgSend_imageWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithSize:");
}

id objc_msgSend_indexPathForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForSpecifier:");
}

id objc_msgSend_infoSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 infoSpecifier];
}

id objc_msgSend_infoText(void *a1, const char *a2, ...)
{
  return _[a1 infoText];
}

id objc_msgSend_initWithAppRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAppRecord:");
}

id objc_msgSend_initWithBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleID:");
}

id objc_msgSend_initWithBundleIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIDs:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_initWithBundleIdentifier_name_vendorName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:name:vendorName:");
}

id objc_msgSend_initWithCollections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCollections:");
}

id objc_msgSend_initWithFPItem_size_scale_representationTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFPItem:size:scale:representationTypes:");
}

id objc_msgSend_initWithFileAtURL_size_scale_representationTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFileAtURL:size:scale:representationTypes:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithItems:");
}

id objc_msgSend_initWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOptions:");
}

id objc_msgSend_initWithSearchResultsController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSearchResultsController:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_installApp_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installApp:withCompletionHandler:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_isAllowedAndPossibleWithApp_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAllowedAndPossibleWithApp:completionHandler:");
}

id objc_msgSend_isAppClip(void *a1, const char *a2, ...)
{
  return _[a1 isAppClip];
}

id objc_msgSend_isDeletable(void *a1, const char *a2, ...)
{
  return _[a1 isDeletable];
}

id objc_msgSend_isDeleted(void *a1, const char *a2, ...)
{
  return _[a1 isDeleted];
}

id objc_msgSend_isDemotable(void *a1, const char *a2, ...)
{
  return _[a1 isDemotable];
}

id objc_msgSend_isDemoted(void *a1, const char *a2, ...)
{
  return _[a1 isDemoted];
}

id objc_msgSend_isDocumentApp(void *a1, const char *a2, ...)
{
  return _[a1 isDocumentApp];
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _[a1 isEditing];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isGrouped(void *a1, const char *a2, ...)
{
  return _[a1 isGrouped];
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _[a1 isHidden];
}

id objc_msgSend_isMovingFromParentViewController(void *a1, const char *a2, ...)
{
  return _[a1 isMovingFromParentViewController];
}

id objc_msgSend_isMovingToParentViewController(void *a1, const char *a2, ...)
{
  return _[a1 isMovingToParentViewController];
}

id objc_msgSend_isPseudoApp(void *a1, const char *a2, ...)
{
  return _[a1 isPseudoApp];
}

id objc_msgSend_isRunningInStoreDemoMode(void *a1, const char *a2, ...)
{
  return _[a1 isRunningInStoreDemoMode];
}

id objc_msgSend_isTrashed(void *a1, const char *a2, ...)
{
  return _[a1 isTrashed];
}

id objc_msgSend_isUsageApp(void *a1, const char *a2, ...)
{
  return _[a1 isUsageApp];
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return _[a1 isValid];
}

id objc_msgSend_itemID(void *a1, const char *a2, ...)
{
  return _[a1 itemID];
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _[a1 items];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastViewedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastViewedDate];
}

id objc_msgSend_laterDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "laterDate:");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_libraryDataProvider(void *a1, const char *a2, ...)
{
  return _[a1 libraryDataProvider];
}

id objc_msgSend_loadAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadAndReturnError:");
}

id objc_msgSend_loadTipsOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadTipsOperation:");
}

id objc_msgSend_localizedCaseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedCaseInsensitiveCompare:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithFormat:");
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _[a1 longLongValue];
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _[a1 longValue];
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 mainRunLoop];
}

id objc_msgSend_mayCauseDataLoss(void *a1, const char *a2, ...)
{
  return _[a1 mayCauseDataLoss];
}

id objc_msgSend_mediaCache(void *a1, const char *a2, ...)
{
  return _[a1 mediaCache];
}

id objc_msgSend_mediaCollectionForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaCollectionForKey:");
}

id objc_msgSend_mediaGroups(void *a1, const char *a2, ...)
{
  return _[a1 mediaGroups];
}

id objc_msgSend_mediaSpecifiersForApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaSpecifiersForApp:");
}

id objc_msgSend_mediaSpecifiersForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaSpecifiersForIdentifier:");
}

id objc_msgSend_mediaType(void *a1, const char *a2, ...)
{
  return _[a1 mediaType];
}

id objc_msgSend_mediaTypesForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaTypesForIdentifier:");
}

id objc_msgSend_mediaTypesForStorageApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaTypesForStorageApp:");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _[a1 navigationItem];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLong:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _[a1 parentViewController];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pinnedOnly(void *a1, const char *a2, ...)
{
  return _[a1 pinnedOnly];
}

id objc_msgSend_pluginsByID(void *a1, const char *a2, ...)
{
  return _[a1 pluginsByID];
}

id objc_msgSend_podcastTitle(void *a1, const char *a2, ...)
{
  return _[a1 podcastTitle];
}

id objc_msgSend_popToViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToViewController:animated:");
}

id objc_msgSend_popViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popViewControllerAnimated:");
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 popoverPresentationController];
}

id objc_msgSend_postLoadingComplete(void *a1, const char *a2, ...)
{
  return _[a1 postLoadingComplete];
}

id objc_msgSend_postMediaSizesChanged(void *a1, const char *a2, ...)
{
  return _[a1 postMediaSizesChanged];
}

id objc_msgSend_predicateWithValue_forProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithValue:forProperty:");
}

id objc_msgSend_preferenceSpecifierNamed_target_set_get_detail_cell_edit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferenceSpecifierNamed:target:set:get:detail:cell:edit:");
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:");
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:animated:completion:");
}

id objc_msgSend_principalClass(void *a1, const char *a2, ...)
{
  return _[a1 principalClass];
}

id objc_msgSend_propertyForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyForKey:");
}

id objc_msgSend_providerID(void *a1, const char *a2, ...)
{
  return _[a1 providerID];
}

id objc_msgSend_recommendationsDidUpdate(void *a1, const char *a2, ...)
{
  return _[a1 recommendationsDidUpdate];
}

id objc_msgSend_recommendationsShared(void *a1, const char *a2, ...)
{
  return _[a1 recommendationsShared];
}

id objc_msgSend_refreshAppState(void *a1, const char *a2, ...)
{
  return _[a1 refreshAppState];
}

id objc_msgSend_refreshCellContentsWithSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshCellContentsWithSpecifier:");
}

id objc_msgSend_reload(void *a1, const char *a2, ...)
{
  return _[a1 reload];
}

id objc_msgSend_reloadDynamicPropertiesForLibraryDataProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadDynamicPropertiesForLibraryDataProvider:");
}

id objc_msgSend_reloadTipsForPlugin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadTipsForPlugin:");
}

id objc_msgSend_removeAllowed(void *a1, const char *a2, ...)
{
  return _[a1 removeAllowed];
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItems:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeSpecifier_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSpecifier:animated:");
}

id objc_msgSend_reorderItemsWithSortDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reorderItemsWithSortDescriptors:");
}

id objc_msgSend_representativeItem(void *a1, const char *a2, ...)
{
  return _[a1 representativeItem];
}

id objc_msgSend_representedApp(void *a1, const char *a2, ...)
{
  return _[a1 representedApp];
}

id objc_msgSend_rootCollectionForProviderDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rootCollectionForProviderDomain:");
}

id objc_msgSend_rootController(void *a1, const char *a2, ...)
{
  return _[a1 rootController];
}

id objc_msgSend_scheduleAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleAction:");
}

id objc_msgSend_searchBar(void *a1, const char *a2, ...)
{
  return _[a1 searchBar];
}

id objc_msgSend_searchDidClose(void *a1, const char *a2, ...)
{
  return _[a1 searchDidClose];
}

id objc_msgSend_searchDidOpen(void *a1, const char *a2, ...)
{
  return _[a1 searchDidOpen];
}

id objc_msgSend_searchDidUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchDidUpdate:");
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 secondaryLabelColor];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAccessibilityElements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityElements:");
}

id objc_msgSend_setAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityIdentifier:");
}

id objc_msgSend_setAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAction:");
}

id objc_msgSend_setAllowsMultipleSelectionDuringEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsMultipleSelectionDuringEditing:");
}

id objc_msgSend_setAllowsSelectionDuringEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsSelectionDuringEditing:");
}

id objc_msgSend_setAppData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppData:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleID:");
}

id objc_msgSend_setButtonAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonAction:");
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlock:");
}

id objc_msgSend_setConfirmDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfirmDelete:");
}

id objc_msgSend_setConfirmationAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfirmationAction:");
}

id objc_msgSend_setConfirmationButtonTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfirmationButtonTitle:");
}

id objc_msgSend_setConfirmationText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfirmationText:");
}

id objc_msgSend_setDataSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSize:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDetailClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailClass:");
}

id objc_msgSend_setDetailControllerClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailControllerClass:");
}

id objc_msgSend_setDiskCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiskCapacity:");
}

id objc_msgSend_setDiskUsed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiskUsed:");
}

id objc_msgSend_setDocPluginsByID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDocPluginsByID:");
}

id objc_msgSend_setEditable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditable:");
}

id objc_msgSend_setEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditing:");
}

id objc_msgSend_setEditing_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditing:animated:");
}

id objc_msgSend_setEditingButtonHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditingButtonHidden:animated:");
}

id objc_msgSend_setEnableButtonTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableButtonTitle:");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setExplanaition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExplanaition:");
}

id objc_msgSend_setExternDataPluginsByID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExternDataPluginsByID:");
}

id objc_msgSend_setExternalSizes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExternalSizes:");
}

id objc_msgSend_setFilteringDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilteringDisabled:");
}

id objc_msgSend_setFixedSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFixedSize:");
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setFpItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFpItems:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setGain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGain:");
}

id objc_msgSend_setGrouped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGrouped:");
}

id objc_msgSend_setGroupingType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupingType:");
}

id objc_msgSend_setHeaderButtonTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeaderButtonTitle:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIcon:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setImage_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:forState:");
}

id objc_msgSend_setInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInfo:");
}

id objc_msgSend_setInfoHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInfoHidden:");
}

id objc_msgSend_setInfoText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInfoText:");
}

id objc_msgSend_setItemSizes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItemSizes:");
}

id objc_msgSend_setItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItems:");
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineBreakMode:");
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxConcurrentOperationCount:");
}

id objc_msgSend_setMayCauseDataLoss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMayCauseDataLoss:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNeedsDisplay(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsDisplay];
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsLayout];
}

id objc_msgSend_setNeedsUpdateConstraints(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsUpdateConstraints];
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLines:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setObscuresBackgroundDuringPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObscuresBackgroundDuringPresentation:");
}

id objc_msgSend_setParentController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParentController:");
}

id objc_msgSend_setPermittedArrowDirections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPermittedArrowDirections:");
}

id objc_msgSend_setPluginsByID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPluginsByID:");
}

id objc_msgSend_setPreferredSearchBarPlacement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredSearchBarPlacement:");
}

id objc_msgSend_setProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgress:");
}

id objc_msgSend_setProperty_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProperty:forKey:");
}

id objc_msgSend_setRepresentedApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRepresentedApp:");
}

id objc_msgSend_setRequestUserConfirmation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestUserConfirmation:");
}

id objc_msgSend_setRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItem:");
}

id objc_msgSend_setRightBarButtonItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItems:");
}

id objc_msgSend_setRootController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRootController:");
}

id objc_msgSend_setSearchController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchController:");
}

id objc_msgSend_setShowArchiveOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowArchiveOption:");
}

id objc_msgSend_setShowDemotionOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowDemotionOption:");
}

id objc_msgSend_setSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSize:");
}

id objc_msgSend_setSizeString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSizeString:");
}

id objc_msgSend_setSourceRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceRect:");
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceView:");
}

id objc_msgSend_setSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpecifier:");
}

id objc_msgSend_setStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStyle:");
}

id objc_msgSend_setTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTarget:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTintColor:");
}

id objc_msgSend_setTipsReloadTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTipsReloadTimer:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:forState:");
}

id objc_msgSend_setTitleColor_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleColor:forState:");
}

id objc_msgSend_setTotalSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalSize:");
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:");
}

id objc_msgSend_setUIState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUIState:");
}

id objc_msgSend_setUiDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUiDelegate:");
}

id objc_msgSend_setUrlInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrlInfo:");
}

id objc_msgSend_setUsageBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsageBundle:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setVendor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVendor:");
}

id objc_msgSend_setWaitForDeletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitForDeletion:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setupSpecifier_forMediaGroups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupSpecifier:forMediaGroups:");
}

id objc_msgSend_setupSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 setupSpecifiers];
}

id objc_msgSend_setupWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupWithDictionary:");
}

id objc_msgSend_sharedCache(void *a1, const char *a2, ...)
{
  return _[a1 sharedCache];
}

id objc_msgSend_sharedGenerator(void *a1, const char *a2, ...)
{
  return _[a1 sharedGenerator];
}

id objc_msgSend_sharedMonitor(void *a1, const char *a2, ...)
{
  return _[a1 sharedMonitor];
}

id objc_msgSend_sharedNotifier(void *a1, const char *a2, ...)
{
  return _[a1 sharedNotifier];
}

id objc_msgSend_shouldShowItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowItem:");
}

id objc_msgSend_showAlertForFailedInstallation(void *a1, const char *a2, ...)
{
  return _[a1 showAlertForFailedInstallation];
}

id objc_msgSend_showConfirmationViewForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showConfirmationViewForSpecifier:");
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _[a1 size];
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _[a1 sizeToFit];
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:");
}

id objc_msgSend_sortDescriptorWithKey_ascending_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:selector:");
}

id objc_msgSend_sortItemsByMediaKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortItemsByMediaKey:");
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingComparator:");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_specifier(void *a1, const char *a2, ...)
{
  return _[a1 specifier];
}

id objc_msgSend_specifierAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierAtIndexPath:");
}

id objc_msgSend_specifierForAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierForAsset:");
}

id objc_msgSend_specifierForChildApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierForChildApp:");
}

id objc_msgSend_specifierForDocument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierForDocument:");
}

id objc_msgSend_specifierForFPItem_recurseIntoFolders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierForFPItem:recurseIntoFolders:");
}

id objc_msgSend_specifierForItemURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierForItemURL:");
}

id objc_msgSend_specifierForMediaItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierForMediaItem:");
}

id objc_msgSend_specifierForMediaItemCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierForMediaItemCollection:");
}

id objc_msgSend_specifierWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierWithTitle:");
}

id objc_msgSend_specifiers(void *a1, const char *a2, ...)
{
  return _[a1 specifiers];
}

id objc_msgSend_spinnerSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 spinnerSpecifier];
}

id objc_msgSend_startHandlers(void *a1, const char *a2, ...)
{
  return _[a1 startHandlers];
}

id objc_msgSend_startMonitor(void *a1, const char *a2, ...)
{
  return _[a1 startMonitor];
}

id objc_msgSend_startObserving(void *a1, const char *a2, ...)
{
  return _[a1 startObserving];
}

id objc_msgSend_startWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startWithCompletionBlock:");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stopHandlers(void *a1, const char *a2, ...)
{
  return _[a1 stopHandlers];
}

id objc_msgSend_stopMonitor(void *a1, const char *a2, ...)
{
  return _[a1 stopMonitor];
}

id objc_msgSend_stopObserving(void *a1, const char *a2, ...)
{
  return _[a1 stopObserving];
}

id objc_msgSend_storageApp(void *a1, const char *a2, ...)
{
  return _[a1 storageApp];
}

id objc_msgSend_storageSpace(void *a1, const char *a2, ...)
{
  return _[a1 storageSpace];
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subarrayWithRange:");
}

id objc_msgSend_supportsEnumeration(void *a1, const char *a2, ...)
{
  return _[a1 supportsEnumeration];
}

id objc_msgSend_syncUI(void *a1, const char *a2, ...)
{
  return _[a1 syncUI];
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBlueColor];
}

id objc_msgSend_systemGray3Color(void *a1, const char *a2, ...)
{
  return _[a1 systemGray3Color];
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:");
}

id objc_msgSend_table(void *a1, const char *a2, ...)
{
  return _[a1 table];
}

id objc_msgSend_tableView_canEditRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:canEditRowAtIndexPath:");
}

id objc_msgSend_tableView_commitEditingStyle_forRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:commitEditingStyle:forRowAtIndexPath:");
}

id objc_msgSend_tableView_didDeselectRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:didDeselectRowAtIndexPath:");
}

id objc_msgSend_tableView_didSelectRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:didSelectRowAtIndexPath:");
}

id objc_msgSend_tableView_editingStyleForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:editingStyleForRowAtIndexPath:");
}

id objc_msgSend_target(void *a1, const char *a2, ...)
{
  return _[a1 target];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_thumbnailData(void *a1, const char *a2, ...)
{
  return _[a1 thumbnailData];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_timerWithTimeInterval_repeats_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timerWithTimeInterval:repeats:block:");
}

id objc_msgSend_tips(void *a1, const char *a2, ...)
{
  return _[a1 tips];
}

id objc_msgSend_tipsByID(void *a1, const char *a2, ...)
{
  return _[a1 tipsByID];
}

id objc_msgSend_tipsForApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tipsForApp:");
}

id objc_msgSend_tipsReloadTimer(void *a1, const char *a2, ...)
{
  return _[a1 tipsReloadTimer];
}

id objc_msgSend_tipsWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tipsWithIdentifier:");
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _[a1 titleLabel];
}

id objc_msgSend_topLevelBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 topLevelBundleIdentifier];
}

id objc_msgSend_totalBytes(void *a1, const char *a2, ...)
{
  return _[a1 totalBytes];
}

id objc_msgSend_totalSize(void *a1, const char *a2, ...)
{
  return _[a1 totalSize];
}

id objc_msgSend_totalSizeForApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "totalSizeForApp:");
}

id objc_msgSend_trashCollectionForProviderDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trashCollectionForProviderDomain:");
}

id objc_msgSend_tvShowsQuery(void *a1, const char *a2, ...)
{
  return _[a1 tvShowsQuery];
}

id objc_msgSend_uninstallAppWithIdentity_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uninstallAppWithIdentity:options:completion:");
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedLongLongValue];
}

id objc_msgSend_updateConstraints(void *a1, const char *a2, ...)
{
  return _[a1 updateConstraints];
}

id objc_msgSend_updateConstraintsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updateConstraintsIfNeeded];
}

id objc_msgSend_updateHLSSpecs(void *a1, const char *a2, ...)
{
  return _[a1 updateHLSSpecs];
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 uppercaseString];
}

id objc_msgSend_uppercaseStringWithLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uppercaseStringWithLocale:");
}

id objc_msgSend_usageBundle(void *a1, const char *a2, ...)
{
  return _[a1 usageBundle];
}

id objc_msgSend_usageBundleApp_willDisplaySpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usageBundleApp:willDisplaySpecifier:");
}

id objc_msgSend_usageBundleForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usageBundleForIdentifier:");
}

id objc_msgSend_usageBundleStorageReporter(void *a1, const char *a2, ...)
{
  return _[a1 usageBundleStorageReporter];
}

id objc_msgSend_usageDetailControllerClassForUsageBundleApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usageDetailControllerClassForUsageBundleApp:");
}

id objc_msgSend_usageIndexPathForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usageIndexPathForSpecifier:");
}

id objc_msgSend_usedBytes(void *a1, const char *a2, ...)
{
  return _[a1 usedBytes];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceIdiom];
}

id objc_msgSend_userTotal(void *a1, const char *a2, ...)
{
  return _[a1 userTotal];
}

id objc_msgSend_valueForProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForProperty:");
}

id objc_msgSend_valueWithPointer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithPointer:");
}

id objc_msgSend_vendorName(void *a1, const char *a2, ...)
{
  return _[a1 vendorName];
}

id objc_msgSend_videoITunesUQuery(void *a1, const char *a2, ...)
{
  return _[a1 videoITunesUQuery];
}

id objc_msgSend_videoPodcastsQuery(void *a1, const char *a2, ...)
{
  return _[a1 videoPodcastsQuery];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_viewDidLoad(void *a1, const char *a2, ...)
{
  return _[a1 viewDidLoad];
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _[a1 whiteColor];
}